-----[begin problem]-----
% In Mathematica format:
Timing[Resolve[Exists[{skoXC1}, And[skoXC1*skoXC1*((-1/2)+skoXC1*skoXC1*(-1/6))<=0,skoXC1*skoXC1*(1/6)>-1,skoXC1*(-1+skoXC1*skoXC1*(1/3))<=0,(7/8)>skoXC1,skoXC1>0,skoXC1*skoXC1*(-1/2)>-3,skoXC1*skoXC1*(1/2)<=3,skoXC1*skoXC1*(24+skoXC1*skoXC1*(-10+skoXC1*skoXC1))<=16,skoXC1*skoXC1*(-80+skoXC1*skoXC1*(40+skoXC1*skoXC1*(-6+skoXC1*skoXC1*(1/8))))>-48,skoXC1*skoXC1*(80+skoXC1*skoXC1*(-40+skoXC1*skoXC1*(6+skoXC1*skoXC1*(-1/8))))<=48,skoXC1*skoXC1>0]], Reals]]

% In QepcadB format:
(E skoXC1) [[(skoXC1 skoXC1 (-1/2+(skoXC1 skoXC1 (-1/6))))<=0]/\[[-1<(skoXC1 skoXC1 (1/6))]/\[[(skoXC1 (-1+(skoXC1 skoXC1 (1/3))))<=0]/\[[skoXC1<7/8]/\[[0<skoXC1]/\[[-3<(skoXC1 skoXC1 (-1/2))]/\[[(skoXC1 skoXC1 (1/2))<=3]/\[[(skoXC1 skoXC1 (24+(skoXC1 skoXC1 (-10+(skoXC1 skoXC1)))))<=16]/\[[-48<(skoXC1 skoXC1 (-80+(skoXC1 skoXC1 (40+(skoXC1 skoXC1 (-6+(skoXC1 skoXC1 (1/8))))))))]/\[[(skoXC1 skoXC1 (80+(skoXC1 skoXC1 (-40+(skoXC1 skoXC1 (6+(skoXC1 skoXC1 (-1/8))))))))<=48]/\[0<(skoXC1 skoXC1)]]]]]]]]]]].

% In SMTLib2 format:
(declare-fun skoXC1 () Real) (assert (and (<= (* skoXC1 (* skoXC1 (+ (/ (- 1.) 2.) (* skoXC1 (* skoXC1 (/ (- 1.) 6.)))))) 0.) (and (> (* skoXC1 (* skoXC1 (/ 1. 6.))) (- 1.)) (and (<= (* skoXC1 (+ (- 1.) (* skoXC1 (* skoXC1 (/ 1. 3.))))) 0.) (and (> (/ 7. 8.) skoXC1) (and (> skoXC1 0.) (and (> (* skoXC1 (* skoXC1 (/ (- 1.) 2.))) (- 3.)) (and (<= (* skoXC1 (* skoXC1 (/ 1. 2.))) 3.) (and (<= (* skoXC1 (* skoXC1 (+ 24. (* skoXC1 (* skoXC1 (+ (- 10.) (* skoXC1 skoXC1))))))) 16.) (and (> (* skoXC1 (* skoXC1 (+ (- 80.) (* skoXC1 (* skoXC1 (+ 40. (* skoXC1 (* skoXC1 (+ (- 6.) (* skoXC1 (* skoXC1 (/ 1. 8.)))))))))))) (- 48.)) (and (<= (* skoXC1 (* skoXC1 (+ 80. (* skoXC1 (* skoXC1 (+ (- 40.) (* skoXC1 (* skoXC1 (+ 6. (* skoXC1 (* skoXC1 (/ (- 1.) 8.)))))))))))) 48.) (> (* skoXC1 skoXC1) 0.))))))))))))

% In GRF format:
(sequent " MetiTarski formula " (antecedent (<= (* skoXC1 (* skoXC1 (+ (/ (- 1.) 2.) (* skoXC1 (* skoXC1 (/ (- 1.) 6.)))))) 0.) (> (* skoXC1 (* skoXC1 (/ 1. 6.))) (- 1.)) (<= (* skoXC1 (+ (- 1.) (* skoXC1 (* skoXC1 (/ 1. 3.))))) 0.) (> (/ 7. 8.) skoXC1) (> skoXC1 0.) (> (* skoXC1 (* skoXC1 (/ (- 1.) 2.))) (- 3.)) (<= (* skoXC1 (* skoXC1 (/ 1. 2.))) 3.) (<= (* skoXC1 (* skoXC1 (+ 24. (* skoXC1 (* skoXC1 (+ (- 10.) (* skoXC1 skoXC1))))))) 16.) (> (* skoXC1 (* skoXC1 (+ (- 80.) (* skoXC1 (* skoXC1 (+ 40. (* skoXC1 (* skoXC1 (+ (- 6.) (* skoXC1 (* skoXC1 (/ 1. 8.)))))))))))) (- 48.)) (<= (* skoXC1 (* skoXC1 (+ 80. (* skoXC1 (* skoXC1 (+ (- 40.) (* skoXC1 (* skoXC1 (+ 6. (* skoXC1 (* skoXC1 (/ (- 1.) 8.)))))))))))) 48.)) (succedent (<= (* skoXC1 skoXC1) 0.)))
-----[end problem]-----

-----[begin problem]-----
% In Mathematica format:
Timing[Resolve[Exists[{skoXC1}, And[skoXC1*skoXC1*((-1/2)+skoXC1*skoXC1*(-1/6))<=0,skoXC1*skoXC1*(-1/6)<=1,skoXC1*(-1+skoXC1*skoXC1*(1/3))<=0,(7/8)>skoXC1,skoXC1>0,skoXC1*skoXC1*(-1/2)>-3,skoXC1*skoXC1*(1/2)<=3,skoXC1*skoXC1*(24+skoXC1*skoXC1*(-10+skoXC1*skoXC1))<=16,skoXC1*skoXC1*(-80+skoXC1*skoXC1*(40+skoXC1*skoXC1*(-6+skoXC1*skoXC1*(1/8))))>-48,skoXC1*skoXC1*(80+skoXC1*skoXC1*(-40+skoXC1*skoXC1*(6+skoXC1*skoXC1*(-1/8))))<=48,skoXC1*skoXC1>0]], Reals]]

% In QepcadB format:
(E skoXC1) [[(skoXC1 skoXC1 (-1/2+(skoXC1 skoXC1 (-1/6))))<=0]/\[[(skoXC1 skoXC1 (-1/6))<=1]/\[[(skoXC1 (-1+(skoXC1 skoXC1 (1/3))))<=0]/\[[skoXC1<7/8]/\[[0<skoXC1]/\[[-3<(skoXC1 skoXC1 (-1/2))]/\[[(skoXC1 skoXC1 (1/2))<=3]/\[[(skoXC1 skoXC1 (24+(skoXC1 skoXC1 (-10+(skoXC1 skoXC1)))))<=16]/\[[-48<(skoXC1 skoXC1 (-80+(skoXC1 skoXC1 (40+(skoXC1 skoXC1 (-6+(skoXC1 skoXC1 (1/8))))))))]/\[[(skoXC1 skoXC1 (80+(skoXC1 skoXC1 (-40+(skoXC1 skoXC1 (6+(skoXC1 skoXC1 (-1/8))))))))<=48]/\[0<(skoXC1 skoXC1)]]]]]]]]]]].

% In SMTLib2 format:
(declare-fun skoXC1 () Real) (assert (and (<= (* skoXC1 (* skoXC1 (+ (/ (- 1.) 2.) (* skoXC1 (* skoXC1 (/ (- 1.) 6.)))))) 0.) (and (<= (* skoXC1 (* skoXC1 (/ (- 1.) 6.))) 1.) (and (<= (* skoXC1 (+ (- 1.) (* skoXC1 (* skoXC1 (/ 1. 3.))))) 0.) (and (> (/ 7. 8.) skoXC1) (and (> skoXC1 0.) (and (> (* skoXC1 (* skoXC1 (/ (- 1.) 2.))) (- 3.)) (and (<= (* skoXC1 (* skoXC1 (/ 1. 2.))) 3.) (and (<= (* skoXC1 (* skoXC1 (+ 24. (* skoXC1 (* skoXC1 (+ (- 10.) (* skoXC1 skoXC1))))))) 16.) (and (> (* skoXC1 (* skoXC1 (+ (- 80.) (* skoXC1 (* skoXC1 (+ 40. (* skoXC1 (* skoXC1 (+ (- 6.) (* skoXC1 (* skoXC1 (/ 1. 8.)))))))))))) (- 48.)) (and (<= (* skoXC1 (* skoXC1 (+ 80. (* skoXC1 (* skoXC1 (+ (- 40.) (* skoXC1 (* skoXC1 (+ 6. (* skoXC1 (* skoXC1 (/ (- 1.) 8.)))))))))))) 48.) (> (* skoXC1 skoXC1) 0.))))))))))))

% In GRF format:
(sequent " MetiTarski formula " (antecedent (<= (* skoXC1 (* skoXC1 (+ (/ (- 1.) 2.) (* skoXC1 (* skoXC1 (/ (- 1.) 6.)))))) 0.) (<= (* skoXC1 (* skoXC1 (/ (- 1.) 6.))) 1.) (<= (* skoXC1 (+ (- 1.) (* skoXC1 (* skoXC1 (/ 1. 3.))))) 0.) (> (/ 7. 8.) skoXC1) (> skoXC1 0.) (> (* skoXC1 (* skoXC1 (/ (- 1.) 2.))) (- 3.)) (<= (* skoXC1 (* skoXC1 (/ 1. 2.))) 3.) (<= (* skoXC1 (* skoXC1 (+ 24. (* skoXC1 (* skoXC1 (+ (- 10.) (* skoXC1 skoXC1))))))) 16.) (> (* skoXC1 (* skoXC1 (+ (- 80.) (* skoXC1 (* skoXC1 (+ 40. (* skoXC1 (* skoXC1 (+ (- 6.) (* skoXC1 (* skoXC1 (/ 1. 8.)))))))))))) (- 48.)) (<= (* skoXC1 (* skoXC1 (+ 80. (* skoXC1 (* skoXC1 (+ (- 40.) (* skoXC1 (* skoXC1 (+ 6. (* skoXC1 (* skoXC1 (/ (- 1.) 8.)))))))))))) 48.)) (succedent (<= (* skoXC1 skoXC1) 0.)))
-----[end problem]-----

-----[begin problem]-----
% In Mathematica format:
Timing[Resolve[Exists[{skoXC1}, And[skoXC1*skoXC1*(-1/6)<=1,skoXC1*skoXC1*((-1/2)+skoXC1*skoXC1*(-1/6))<=0,skoXC1*skoXC1*(-1/6)<=1,skoXC1*(-1+skoXC1*skoXC1*(1/3))<=0,(7/8)>skoXC1,skoXC1>0,skoXC1*skoXC1*(-1/2)>-3,skoXC1*skoXC1*(1/2)<=3,skoXC1*skoXC1*(24+skoXC1*skoXC1*(-10+skoXC1*skoXC1))<=16,skoXC1*skoXC1*(-80+skoXC1*skoXC1*(40+skoXC1*skoXC1*(-6+skoXC1*skoXC1*(1/8))))>-48,skoXC1*skoXC1*(80+skoXC1*skoXC1*(-40+skoXC1*skoXC1*(6+skoXC1*skoXC1*(-1/8))))<=48,skoXC1*skoXC1>0]], Reals]]

% In QepcadB format:
(E skoXC1) [[(skoXC1 skoXC1 (-1/6))<=1]/\[[(skoXC1 skoXC1 (-1/2+(skoXC1 skoXC1 (-1/6))))<=0]/\[[(skoXC1 skoXC1 (-1/6))<=1]/\[[(skoXC1 (-1+(skoXC1 skoXC1 (1/3))))<=0]/\[[skoXC1<7/8]/\[[0<skoXC1]/\[[-3<(skoXC1 skoXC1 (-1/2))]/\[[(skoXC1 skoXC1 (1/2))<=3]/\[[(skoXC1 skoXC1 (24+(skoXC1 skoXC1 (-10+(skoXC1 skoXC1)))))<=16]/\[[-48<(skoXC1 skoXC1 (-80+(skoXC1 skoXC1 (40+(skoXC1 skoXC1 (-6+(skoXC1 skoXC1 (1/8))))))))]/\[[(skoXC1 skoXC1 (80+(skoXC1 skoXC1 (-40+(skoXC1 skoXC1 (6+(skoXC1 skoXC1 (-1/8))))))))<=48]/\[0<(skoXC1 skoXC1)]]]]]]]]]]]].

% In SMTLib2 format:
(declare-fun skoXC1 () Real) (assert (and (<= (* skoXC1 (* skoXC1 (/ (- 1.) 6.))) 1.) (and (<= (* skoXC1 (* skoXC1 (+ (/ (- 1.) 2.) (* skoXC1 (* skoXC1 (/ (- 1.) 6.)))))) 0.) (and (<= (* skoXC1 (* skoXC1 (/ (- 1.) 6.))) 1.) (and (<= (* skoXC1 (+ (- 1.) (* skoXC1 (* skoXC1 (/ 1. 3.))))) 0.) (and (> (/ 7. 8.) skoXC1) (and (> skoXC1 0.) (and (> (* skoXC1 (* skoXC1 (/ (- 1.) 2.))) (- 3.)) (and (<= (* skoXC1 (* skoXC1 (/ 1. 2.))) 3.) (and (<= (* skoXC1 (* skoXC1 (+ 24. (* skoXC1 (* skoXC1 (+ (- 10.) (* skoXC1 skoXC1))))))) 16.) (and (> (* skoXC1 (* skoXC1 (+ (- 80.) (* skoXC1 (* skoXC1 (+ 40. (* skoXC1 (* skoXC1 (+ (- 6.) (* skoXC1 (* skoXC1 (/ 1. 8.)))))))))))) (- 48.)) (and (<= (* skoXC1 (* skoXC1 (+ 80. (* skoXC1 (* skoXC1 (+ (- 40.) (* skoXC1 (* skoXC1 (+ 6. (* skoXC1 (* skoXC1 (/ (- 1.) 8.)))))))))))) 48.) (> (* skoXC1 skoXC1) 0.)))))))))))))

% In GRF format:
(sequent " MetiTarski formula " (antecedent (<= (* skoXC1 (* skoXC1 (/ (- 1.) 6.))) 1.) (<= (* skoXC1 (* skoXC1 (+ (/ (- 1.) 2.) (* skoXC1 (* skoXC1 (/ (- 1.) 6.)))))) 0.) (<= (* skoXC1 (* skoXC1 (/ (- 1.) 6.))) 1.) (<= (* skoXC1 (+ (- 1.) (* skoXC1 (* skoXC1 (/ 1. 3.))))) 0.) (> (/ 7. 8.) skoXC1) (> skoXC1 0.) (> (* skoXC1 (* skoXC1 (/ (- 1.) 2.))) (- 3.)) (<= (* skoXC1 (* skoXC1 (/ 1. 2.))) 3.) (<= (* skoXC1 (* skoXC1 (+ 24. (* skoXC1 (* skoXC1 (+ (- 10.) (* skoXC1 skoXC1))))))) 16.) (> (* skoXC1 (* skoXC1 (+ (- 80.) (* skoXC1 (* skoXC1 (+ 40. (* skoXC1 (* skoXC1 (+ (- 6.) (* skoXC1 (* skoXC1 (/ 1. 8.)))))))))))) (- 48.)) (<= (* skoXC1 (* skoXC1 (+ 80. (* skoXC1 (* skoXC1 (+ (- 40.) (* skoXC1 (* skoXC1 (+ 6. (* skoXC1 (* skoXC1 (/ (- 1.) 8.)))))))))))) 48.)) (succedent (<= (* skoXC1 skoXC1) 0.)))
-----[end problem]-----

-----[begin problem]-----
% In Mathematica format:
Timing[Resolve[Exists[{skoXC1}, And[skoXC1*skoXC1<=2,skoXC1*skoXC1*((-1/2)+skoXC1*skoXC1*(-1/6))<=0,skoXC1*skoXC1*(-1/6)<=1,skoXC1*(-1+skoXC1*skoXC1*(1/3))<=0,(7/8)>skoXC1,skoXC1>0,skoXC1*skoXC1*(-1/2)>-3,skoXC1*skoXC1*(1/2)<=3,skoXC1*skoXC1*(24+skoXC1*skoXC1*(-10+skoXC1*skoXC1))<=16,skoXC1*skoXC1*(-80+skoXC1*skoXC1*(40+skoXC1*skoXC1*(-6+skoXC1*skoXC1*(1/8))))>-48,skoXC1*skoXC1*(80+skoXC1*skoXC1*(-40+skoXC1*skoXC1*(6+skoXC1*skoXC1*(-1/8))))<=48,skoXC1*skoXC1>0]], Reals]]

% In QepcadB format:
(E skoXC1) [[(skoXC1 skoXC1)<=2]/\[[(skoXC1 skoXC1 (-1/2+(skoXC1 skoXC1 (-1/6))))<=0]/\[[(skoXC1 skoXC1 (-1/6))<=1]/\[[(skoXC1 (-1+(skoXC1 skoXC1 (1/3))))<=0]/\[[skoXC1<7/8]/\[[0<skoXC1]/\[[-3<(skoXC1 skoXC1 (-1/2))]/\[[(skoXC1 skoXC1 (1/2))<=3]/\[[(skoXC1 skoXC1 (24+(skoXC1 skoXC1 (-10+(skoXC1 skoXC1)))))<=16]/\[[-48<(skoXC1 skoXC1 (-80+(skoXC1 skoXC1 (40+(skoXC1 skoXC1 (-6+(skoXC1 skoXC1 (1/8))))))))]/\[[(skoXC1 skoXC1 (80+(skoXC1 skoXC1 (-40+(skoXC1 skoXC1 (6+(skoXC1 skoXC1 (-1/8))))))))<=48]/\[0<(skoXC1 skoXC1)]]]]]]]]]]]].

% In SMTLib2 format:
(declare-fun skoXC1 () Real) (assert (and (<= (* skoXC1 skoXC1) 2.) (and (<= (* skoXC1 (* skoXC1 (+ (/ (- 1.) 2.) (* skoXC1 (* skoXC1 (/ (- 1.) 6.)))))) 0.) (and (<= (* skoXC1 (* skoXC1 (/ (- 1.) 6.))) 1.) (and (<= (* skoXC1 (+ (- 1.) (* skoXC1 (* skoXC1 (/ 1. 3.))))) 0.) (and (> (/ 7. 8.) skoXC1) (and (> skoXC1 0.) (and (> (* skoXC1 (* skoXC1 (/ (- 1.) 2.))) (- 3.)) (and (<= (* skoXC1 (* skoXC1 (/ 1. 2.))) 3.) (and (<= (* skoXC1 (* skoXC1 (+ 24. (* skoXC1 (* skoXC1 (+ (- 10.) (* skoXC1 skoXC1))))))) 16.) (and (> (* skoXC1 (* skoXC1 (+ (- 80.) (* skoXC1 (* skoXC1 (+ 40. (* skoXC1 (* skoXC1 (+ (- 6.) (* skoXC1 (* skoXC1 (/ 1. 8.)))))))))))) (- 48.)) (and (<= (* skoXC1 (* skoXC1 (+ 80. (* skoXC1 (* skoXC1 (+ (- 40.) (* skoXC1 (* skoXC1 (+ 6. (* skoXC1 (* skoXC1 (/ (- 1.) 8.)))))))))))) 48.) (> (* skoXC1 skoXC1) 0.)))))))))))))

% In GRF format:
(sequent " MetiTarski formula " (antecedent (<= (* skoXC1 skoXC1) 2.) (<= (* skoXC1 (* skoXC1 (+ (/ (- 1.) 2.) (* skoXC1 (* skoXC1 (/ (- 1.) 6.)))))) 0.) (<= (* skoXC1 (* skoXC1 (/ (- 1.) 6.))) 1.) (<= (* skoXC1 (+ (- 1.) (* skoXC1 (* skoXC1 (/ 1. 3.))))) 0.) (> (/ 7. 8.) skoXC1) (> skoXC1 0.) (> (* skoXC1 (* skoXC1 (/ (- 1.) 2.))) (- 3.)) (<= (* skoXC1 (* skoXC1 (/ 1. 2.))) 3.) (<= (* skoXC1 (* skoXC1 (+ 24. (* skoXC1 (* skoXC1 (+ (- 10.) (* skoXC1 skoXC1))))))) 16.) (> (* skoXC1 (* skoXC1 (+ (- 80.) (* skoXC1 (* skoXC1 (+ 40. (* skoXC1 (* skoXC1 (+ (- 6.) (* skoXC1 (* skoXC1 (/ 1. 8.)))))))))))) (- 48.)) (<= (* skoXC1 (* skoXC1 (+ 80. (* skoXC1 (* skoXC1 (+ (- 40.) (* skoXC1 (* skoXC1 (+ 6. (* skoXC1 (* skoXC1 (/ (- 1.) 8.)))))))))))) 48.)) (succedent (<= (* skoXC1 skoXC1) 0.)))
-----[end problem]-----

-----[begin problem]-----
% In Mathematica format:
Timing[Resolve[Exists[{skoXC1}, And[skoXC1*skoXC1*skoXC1*skoXC1*(-2/3)<=0,skoXC1*skoXC1*-1>-2,skoXC1*skoXC1*((-1/2)+skoXC1*skoXC1*(-1/6))<=0,skoXC1*skoXC1*(-1/6)<=1,skoXC1*(-1+skoXC1*skoXC1*(1/3))<=0,(7/8)>skoXC1,skoXC1>0,skoXC1*skoXC1*(-1/2)>-3,skoXC1*skoXC1*(1/2)<=3,skoXC1*skoXC1*(24+skoXC1*skoXC1*(-10+skoXC1*skoXC1))<=16,skoXC1*skoXC1*(-80+skoXC1*skoXC1*(40+skoXC1*skoXC1*(-6+skoXC1*skoXC1*(1/8))))>-48,skoXC1*skoXC1*(80+skoXC1*skoXC1*(-40+skoXC1*skoXC1*(6+skoXC1*skoXC1*(-1/8))))<=48,skoXC1*skoXC1>0]], Reals]]

% In QepcadB format:
(E skoXC1) [[(skoXC1 skoXC1 skoXC1 skoXC1 (-2/3))<=0]/\[[-2<(skoXC1 skoXC1 (-1))]/\[[(skoXC1 skoXC1 (-1/2+(skoXC1 skoXC1 (-1/6))))<=0]/\[[(skoXC1 skoXC1 (-1/6))<=1]/\[[(skoXC1 (-1+(skoXC1 skoXC1 (1/3))))<=0]/\[[skoXC1<7/8]/\[[0<skoXC1]/\[[-3<(skoXC1 skoXC1 (-1/2))]/\[[(skoXC1 skoXC1 (1/2))<=3]/\[[(skoXC1 skoXC1 (24+(skoXC1 skoXC1 (-10+(skoXC1 skoXC1)))))<=16]/\[[-48<(skoXC1 skoXC1 (-80+(skoXC1 skoXC1 (40+(skoXC1 skoXC1 (-6+(skoXC1 skoXC1 (1/8))))))))]/\[[(skoXC1 skoXC1 (80+(skoXC1 skoXC1 (-40+(skoXC1 skoXC1 (6+(skoXC1 skoXC1 (-1/8))))))))<=48]/\[0<(skoXC1 skoXC1)]]]]]]]]]]]]].

% In SMTLib2 format:
(declare-fun skoXC1 () Real) (assert (and (<= (* skoXC1 (* skoXC1 (* skoXC1 (* skoXC1 (/ (- 2.) 3.))))) 0.) (and (> (* skoXC1 (* skoXC1 (- 1.))) (- 2.)) (and (<= (* skoXC1 (* skoXC1 (+ (/ (- 1.) 2.) (* skoXC1 (* skoXC1 (/ (- 1.) 6.)))))) 0.) (and (<= (* skoXC1 (* skoXC1 (/ (- 1.) 6.))) 1.) (and (<= (* skoXC1 (+ (- 1.) (* skoXC1 (* skoXC1 (/ 1. 3.))))) 0.) (and (> (/ 7. 8.) skoXC1) (and (> skoXC1 0.) (and (> (* skoXC1 (* skoXC1 (/ (- 1.) 2.))) (- 3.)) (and (<= (* skoXC1 (* skoXC1 (/ 1. 2.))) 3.) (and (<= (* skoXC1 (* skoXC1 (+ 24. (* skoXC1 (* skoXC1 (+ (- 10.) (* skoXC1 skoXC1))))))) 16.) (and (> (* skoXC1 (* skoXC1 (+ (- 80.) (* skoXC1 (* skoXC1 (+ 40. (* skoXC1 (* skoXC1 (+ (- 6.) (* skoXC1 (* skoXC1 (/ 1. 8.)))))))))))) (- 48.)) (and (<= (* skoXC1 (* skoXC1 (+ 80. (* skoXC1 (* skoXC1 (+ (- 40.) (* skoXC1 (* skoXC1 (+ 6. (* skoXC1 (* skoXC1 (/ (- 1.) 8.)))))))))))) 48.) (> (* skoXC1 skoXC1) 0.))))))))))))))

% In GRF format:
(sequent " MetiTarski formula " (antecedent (<= (* skoXC1 (* skoXC1 (* skoXC1 (* skoXC1 (/ (- 2.) 3.))))) 0.) (> (* skoXC1 (* skoXC1 (- 1.))) (- 2.)) (<= (* skoXC1 (* skoXC1 (+ (/ (- 1.) 2.) (* skoXC1 (* skoXC1 (/ (- 1.) 6.)))))) 0.) (<= (* skoXC1 (* skoXC1 (/ (- 1.) 6.))) 1.) (<= (* skoXC1 (+ (- 1.) (* skoXC1 (* skoXC1 (/ 1. 3.))))) 0.) (> (/ 7. 8.) skoXC1) (> skoXC1 0.) (> (* skoXC1 (* skoXC1 (/ (- 1.) 2.))) (- 3.)) (<= (* skoXC1 (* skoXC1 (/ 1. 2.))) 3.) (<= (* skoXC1 (* skoXC1 (+ 24. (* skoXC1 (* skoXC1 (+ (- 10.) (* skoXC1 skoXC1))))))) 16.) (> (* skoXC1 (* skoXC1 (+ (- 80.) (* skoXC1 (* skoXC1 (+ 40. (* skoXC1 (* skoXC1 (+ (- 6.) (* skoXC1 (* skoXC1 (/ 1. 8.)))))))))))) (- 48.)) (<= (* skoXC1 (* skoXC1 (+ 80. (* skoXC1 (* skoXC1 (+ (- 40.) (* skoXC1 (* skoXC1 (+ 6. (* skoXC1 (* skoXC1 (/ (- 1.) 8.)))))))))))) 48.)) (succedent (<= (* skoXC1 skoXC1) 0.)))
-----[end problem]-----

-----[begin problem]-----
% In Mathematica format:
Timing[Resolve[Exists[{skoXC1}, And[skoXC1*skoXC1<=2,skoXC1*skoXC1*((-1/2)+skoXC1*skoXC1*(-1/6))<=0,skoXC1*skoXC1*(-1/6)<=1,skoXC1*(-1+skoXC1*skoXC1*(1/3))<=0,(7/8)>skoXC1,skoXC1>0,skoXC1*skoXC1*(-1/2)>-3,skoXC1*skoXC1*(1/2)<=3,skoXC1*skoXC1*(24+skoXC1*skoXC1*(-10+skoXC1*skoXC1))<=16,skoXC1*skoXC1*(-80+skoXC1*skoXC1*(40+skoXC1*skoXC1*(-6+skoXC1*skoXC1*(1/8))))>-48,skoXC1*skoXC1*(80+skoXC1*skoXC1*(-40+skoXC1*skoXC1*(6+skoXC1*skoXC1*(-1/8))))<=48,skoXC1*skoXC1>0]], Reals]]

% In QepcadB format:
(E skoXC1) [[(skoXC1 skoXC1)<=2]/\[[(skoXC1 skoXC1 (-1/2+(skoXC1 skoXC1 (-1/6))))<=0]/\[[(skoXC1 skoXC1 (-1/6))<=1]/\[[(skoXC1 (-1+(skoXC1 skoXC1 (1/3))))<=0]/\[[skoXC1<7/8]/\[[0<skoXC1]/\[[-3<(skoXC1 skoXC1 (-1/2))]/\[[(skoXC1 skoXC1 (1/2))<=3]/\[[(skoXC1 skoXC1 (24+(skoXC1 skoXC1 (-10+(skoXC1 skoXC1)))))<=16]/\[[-48<(skoXC1 skoXC1 (-80+(skoXC1 skoXC1 (40+(skoXC1 skoXC1 (-6+(skoXC1 skoXC1 (1/8))))))))]/\[[(skoXC1 skoXC1 (80+(skoXC1 skoXC1 (-40+(skoXC1 skoXC1 (6+(skoXC1 skoXC1 (-1/8))))))))<=48]/\[0<(skoXC1 skoXC1)]]]]]]]]]]]].

% In SMTLib2 format:
(declare-fun skoXC1 () Real) (assert (and (<= (* skoXC1 skoXC1) 2.) (and (<= (* skoXC1 (* skoXC1 (+ (/ (- 1.) 2.) (* skoXC1 (* skoXC1 (/ (- 1.) 6.)))))) 0.) (and (<= (* skoXC1 (* skoXC1 (/ (- 1.) 6.))) 1.) (and (<= (* skoXC1 (+ (- 1.) (* skoXC1 (* skoXC1 (/ 1. 3.))))) 0.) (and (> (/ 7. 8.) skoXC1) (and (> skoXC1 0.) (and (> (* skoXC1 (* skoXC1 (/ (- 1.) 2.))) (- 3.)) (and (<= (* skoXC1 (* skoXC1 (/ 1. 2.))) 3.) (and (<= (* skoXC1 (* skoXC1 (+ 24. (* skoXC1 (* skoXC1 (+ (- 10.) (* skoXC1 skoXC1))))))) 16.) (and (> (* skoXC1 (* skoXC1 (+ (- 80.) (* skoXC1 (* skoXC1 (+ 40. (* skoXC1 (* skoXC1 (+ (- 6.) (* skoXC1 (* skoXC1 (/ 1. 8.)))))))))))) (- 48.)) (and (<= (* skoXC1 (* skoXC1 (+ 80. (* skoXC1 (* skoXC1 (+ (- 40.) (* skoXC1 (* skoXC1 (+ 6. (* skoXC1 (* skoXC1 (/ (- 1.) 8.)))))))))))) 48.) (> (* skoXC1 skoXC1) 0.)))))))))))))

% In GRF format:
(sequent " MetiTarski formula " (antecedent (<= (* skoXC1 skoXC1) 2.) (<= (* skoXC1 (* skoXC1 (+ (/ (- 1.) 2.) (* skoXC1 (* skoXC1 (/ (- 1.) 6.)))))) 0.) (<= (* skoXC1 (* skoXC1 (/ (- 1.) 6.))) 1.) (<= (* skoXC1 (+ (- 1.) (* skoXC1 (* skoXC1 (/ 1. 3.))))) 0.) (> (/ 7. 8.) skoXC1) (> skoXC1 0.) (> (* skoXC1 (* skoXC1 (/ (- 1.) 2.))) (- 3.)) (<= (* skoXC1 (* skoXC1 (/ 1. 2.))) 3.) (<= (* skoXC1 (* skoXC1 (+ 24. (* skoXC1 (* skoXC1 (+ (- 10.) (* skoXC1 skoXC1))))))) 16.) (> (* skoXC1 (* skoXC1 (+ (- 80.) (* skoXC1 (* skoXC1 (+ 40. (* skoXC1 (* skoXC1 (+ (- 6.) (* skoXC1 (* skoXC1 (/ 1. 8.)))))))))))) (- 48.)) (<= (* skoXC1 (* skoXC1 (+ 80. (* skoXC1 (* skoXC1 (+ (- 40.) (* skoXC1 (* skoXC1 (+ 6. (* skoXC1 (* skoXC1 (/ (- 1.) 8.)))))))))))) 48.)) (succedent (<= (* skoXC1 skoXC1) 0.)))
-----[end problem]-----

-----[begin problem]-----
% In Mathematica format:
Timing[Resolve[Exists[{skoXC1}, And[skoXC1*skoXC1*skoXC1*skoXC1*(-2/3)<=0,skoXC1*skoXC1<=2,skoXC1*skoXC1*((-1/2)+skoXC1*skoXC1*(-1/6))<=0,skoXC1*skoXC1*(-1/6)<=1,skoXC1*(-1+skoXC1*skoXC1*(1/3))<=0,(7/8)>skoXC1,skoXC1>0,skoXC1*skoXC1*(-1/2)>-3,skoXC1*skoXC1*(1/2)<=3,skoXC1*skoXC1*(24+skoXC1*skoXC1*(-10+skoXC1*skoXC1))<=16,skoXC1*skoXC1*(-80+skoXC1*skoXC1*(40+skoXC1*skoXC1*(-6+skoXC1*skoXC1*(1/8))))>-48,skoXC1*skoXC1*(80+skoXC1*skoXC1*(-40+skoXC1*skoXC1*(6+skoXC1*skoXC1*(-1/8))))<=48,skoXC1*skoXC1>0]], Reals]]

% In QepcadB format:
(E skoXC1) [[(skoXC1 skoXC1 skoXC1 skoXC1 (-2/3))<=0]/\[[(skoXC1 skoXC1)<=2]/\[[(skoXC1 skoXC1 (-1/2+(skoXC1 skoXC1 (-1/6))))<=0]/\[[(skoXC1 skoXC1 (-1/6))<=1]/\[[(skoXC1 (-1+(skoXC1 skoXC1 (1/3))))<=0]/\[[skoXC1<7/8]/\[[0<skoXC1]/\[[-3<(skoXC1 skoXC1 (-1/2))]/\[[(skoXC1 skoXC1 (1/2))<=3]/\[[(skoXC1 skoXC1 (24+(skoXC1 skoXC1 (-10+(skoXC1 skoXC1)))))<=16]/\[[-48<(skoXC1 skoXC1 (-80+(skoXC1 skoXC1 (40+(skoXC1 skoXC1 (-6+(skoXC1 skoXC1 (1/8))))))))]/\[[(skoXC1 skoXC1 (80+(skoXC1 skoXC1 (-40+(skoXC1 skoXC1 (6+(skoXC1 skoXC1 (-1/8))))))))<=48]/\[0<(skoXC1 skoXC1)]]]]]]]]]]]]].

% In SMTLib2 format:
(declare-fun skoXC1 () Real) (assert (and (<= (* skoXC1 (* skoXC1 (* skoXC1 (* skoXC1 (/ (- 2.) 3.))))) 0.) (and (<= (* skoXC1 skoXC1) 2.) (and (<= (* skoXC1 (* skoXC1 (+ (/ (- 1.) 2.) (* skoXC1 (* skoXC1 (/ (- 1.) 6.)))))) 0.) (and (<= (* skoXC1 (* skoXC1 (/ (- 1.) 6.))) 1.) (and (<= (* skoXC1 (+ (- 1.) (* skoXC1 (* skoXC1 (/ 1. 3.))))) 0.) (and (> (/ 7. 8.) skoXC1) (and (> skoXC1 0.) (and (> (* skoXC1 (* skoXC1 (/ (- 1.) 2.))) (- 3.)) (and (<= (* skoXC1 (* skoXC1 (/ 1. 2.))) 3.) (and (<= (* skoXC1 (* skoXC1 (+ 24. (* skoXC1 (* skoXC1 (+ (- 10.) (* skoXC1 skoXC1))))))) 16.) (and (> (* skoXC1 (* skoXC1 (+ (- 80.) (* skoXC1 (* skoXC1 (+ 40. (* skoXC1 (* skoXC1 (+ (- 6.) (* skoXC1 (* skoXC1 (/ 1. 8.)))))))))))) (- 48.)) (and (<= (* skoXC1 (* skoXC1 (+ 80. (* skoXC1 (* skoXC1 (+ (- 40.) (* skoXC1 (* skoXC1 (+ 6. (* skoXC1 (* skoXC1 (/ (- 1.) 8.)))))))))))) 48.) (> (* skoXC1 skoXC1) 0.))))))))))))))

% In GRF format:
(sequent " MetiTarski formula " (antecedent (<= (* skoXC1 (* skoXC1 (* skoXC1 (* skoXC1 (/ (- 2.) 3.))))) 0.) (<= (* skoXC1 skoXC1) 2.) (<= (* skoXC1 (* skoXC1 (+ (/ (- 1.) 2.) (* skoXC1 (* skoXC1 (/ (- 1.) 6.)))))) 0.) (<= (* skoXC1 (* skoXC1 (/ (- 1.) 6.))) 1.) (<= (* skoXC1 (+ (- 1.) (* skoXC1 (* skoXC1 (/ 1. 3.))))) 0.) (> (/ 7. 8.) skoXC1) (> skoXC1 0.) (> (* skoXC1 (* skoXC1 (/ (- 1.) 2.))) (- 3.)) (<= (* skoXC1 (* skoXC1 (/ 1. 2.))) 3.) (<= (* skoXC1 (* skoXC1 (+ 24. (* skoXC1 (* skoXC1 (+ (- 10.) (* skoXC1 skoXC1))))))) 16.) (> (* skoXC1 (* skoXC1 (+ (- 80.) (* skoXC1 (* skoXC1 (+ 40. (* skoXC1 (* skoXC1 (+ (- 6.) (* skoXC1 (* skoXC1 (/ 1. 8.)))))))))))) (- 48.)) (<= (* skoXC1 (* skoXC1 (+ 80. (* skoXC1 (* skoXC1 (+ (- 40.) (* skoXC1 (* skoXC1 (+ 6. (* skoXC1 (* skoXC1 (/ (- 1.) 8.)))))))))))) 48.)) (succedent (<= (* skoXC1 skoXC1) 0.)))
-----[end problem]-----

-----[begin problem]-----
% In Mathematica format:
Timing[Resolve[Exists[{skoXC1}, And[skoXC1*skoXC1*(-1/6)<=1,skoXC1*skoXC1*skoXC1*skoXC1*(-2/3)<=0,skoXC1*skoXC1<=2,skoXC1*skoXC1*((-1/2)+skoXC1*skoXC1*(-1/6))<=0,skoXC1*skoXC1*(-1/6)<=1,skoXC1*(-1+skoXC1*skoXC1*(1/3))<=0,(7/8)>skoXC1,skoXC1>0,skoXC1*skoXC1*(-1/2)>-3,skoXC1*skoXC1*(1/2)<=3,skoXC1*skoXC1*(24+skoXC1*skoXC1*(-10+skoXC1*skoXC1))<=16,skoXC1*skoXC1*(-80+skoXC1*skoXC1*(40+skoXC1*skoXC1*(-6+skoXC1*skoXC1*(1/8))))>-48,skoXC1*skoXC1*(80+skoXC1*skoXC1*(-40+skoXC1*skoXC1*(6+skoXC1*skoXC1*(-1/8))))<=48,skoXC1*skoXC1>0]], Reals]]

% In QepcadB format:
(E skoXC1) [[(skoXC1 skoXC1 (-1/6))<=1]/\[[(skoXC1 skoXC1 skoXC1 skoXC1 (-2/3))<=0]/\[[(skoXC1 skoXC1)<=2]/\[[(skoXC1 skoXC1 (-1/2+(skoXC1 skoXC1 (-1/6))))<=0]/\[[(skoXC1 skoXC1 (-1/6))<=1]/\[[(skoXC1 (-1+(skoXC1 skoXC1 (1/3))))<=0]/\[[skoXC1<7/8]/\[[0<skoXC1]/\[[-3<(skoXC1 skoXC1 (-1/2))]/\[[(skoXC1 skoXC1 (1/2))<=3]/\[[(skoXC1 skoXC1 (24+(skoXC1 skoXC1 (-10+(skoXC1 skoXC1)))))<=16]/\[[-48<(skoXC1 skoXC1 (-80+(skoXC1 skoXC1 (40+(skoXC1 skoXC1 (-6+(skoXC1 skoXC1 (1/8))))))))]/\[[(skoXC1 skoXC1 (80+(skoXC1 skoXC1 (-40+(skoXC1 skoXC1 (6+(skoXC1 skoXC1 (-1/8))))))))<=48]/\[0<(skoXC1 skoXC1)]]]]]]]]]]]]]].

% In SMTLib2 format:
(declare-fun skoXC1 () Real) (assert (and (<= (* skoXC1 (* skoXC1 (/ (- 1.) 6.))) 1.) (and (<= (* skoXC1 (* skoXC1 (* skoXC1 (* skoXC1 (/ (- 2.) 3.))))) 0.) (and (<= (* skoXC1 skoXC1) 2.) (and (<= (* skoXC1 (* skoXC1 (+ (/ (- 1.) 2.) (* skoXC1 (* skoXC1 (/ (- 1.) 6.)))))) 0.) (and (<= (* skoXC1 (* skoXC1 (/ (- 1.) 6.))) 1.) (and (<= (* skoXC1 (+ (- 1.) (* skoXC1 (* skoXC1 (/ 1. 3.))))) 0.) (and (> (/ 7. 8.) skoXC1) (and (> skoXC1 0.) (and (> (* skoXC1 (* skoXC1 (/ (- 1.) 2.))) (- 3.)) (and (<= (* skoXC1 (* skoXC1 (/ 1. 2.))) 3.) (and (<= (* skoXC1 (* skoXC1 (+ 24. (* skoXC1 (* skoXC1 (+ (- 10.) (* skoXC1 skoXC1))))))) 16.) (and (> (* skoXC1 (* skoXC1 (+ (- 80.) (* skoXC1 (* skoXC1 (+ 40. (* skoXC1 (* skoXC1 (+ (- 6.) (* skoXC1 (* skoXC1 (/ 1. 8.)))))))))))) (- 48.)) (and (<= (* skoXC1 (* skoXC1 (+ 80. (* skoXC1 (* skoXC1 (+ (- 40.) (* skoXC1 (* skoXC1 (+ 6. (* skoXC1 (* skoXC1 (/ (- 1.) 8.)))))))))))) 48.) (> (* skoXC1 skoXC1) 0.)))))))))))))))

% In GRF format:
(sequent " MetiTarski formula " (antecedent (<= (* skoXC1 (* skoXC1 (/ (- 1.) 6.))) 1.) (<= (* skoXC1 (* skoXC1 (* skoXC1 (* skoXC1 (/ (- 2.) 3.))))) 0.) (<= (* skoXC1 skoXC1) 2.) (<= (* skoXC1 (* skoXC1 (+ (/ (- 1.) 2.) (* skoXC1 (* skoXC1 (/ (- 1.) 6.)))))) 0.) (<= (* skoXC1 (* skoXC1 (/ (- 1.) 6.))) 1.) (<= (* skoXC1 (+ (- 1.) (* skoXC1 (* skoXC1 (/ 1. 3.))))) 0.) (> (/ 7. 8.) skoXC1) (> skoXC1 0.) (> (* skoXC1 (* skoXC1 (/ (- 1.) 2.))) (- 3.)) (<= (* skoXC1 (* skoXC1 (/ 1. 2.))) 3.) (<= (* skoXC1 (* skoXC1 (+ 24. (* skoXC1 (* skoXC1 (+ (- 10.) (* skoXC1 skoXC1))))))) 16.) (> (* skoXC1 (* skoXC1 (+ (- 80.) (* skoXC1 (* skoXC1 (+ 40. (* skoXC1 (* skoXC1 (+ (- 6.) (* skoXC1 (* skoXC1 (/ 1. 8.)))))))))))) (- 48.)) (<= (* skoXC1 (* skoXC1 (+ 80. (* skoXC1 (* skoXC1 (+ (- 40.) (* skoXC1 (* skoXC1 (+ 6. (* skoXC1 (* skoXC1 (/ (- 1.) 8.)))))))))))) 48.)) (succedent (<= (* skoXC1 skoXC1) 0.)))
-----[end problem]-----

-----[begin problem]-----
% In Mathematica format:
Timing[Resolve[Exists[{skoXC1}, And[skoXC1*skoXC1*skoXC1*skoXC1*(-2/3)<=0,skoXC1*skoXC1*(1/6)>-1,skoXC1*skoXC1*skoXC1*skoXC1*(-2/3)<=0,skoXC1*skoXC1<=2,skoXC1*skoXC1*((-1/2)+skoXC1*skoXC1*(-1/6))<=0,skoXC1*skoXC1*(-1/6)<=1,skoXC1*(-1+skoXC1*skoXC1*(1/3))<=0,(7/8)>skoXC1,skoXC1>0,skoXC1*skoXC1*(-1/2)>-3,skoXC1*skoXC1*(1/2)<=3,skoXC1*skoXC1*(24+skoXC1*skoXC1*(-10+skoXC1*skoXC1))<=16,skoXC1*skoXC1*(-80+skoXC1*skoXC1*(40+skoXC1*skoXC1*(-6+skoXC1*skoXC1*(1/8))))>-48,skoXC1*skoXC1*(80+skoXC1*skoXC1*(-40+skoXC1*skoXC1*(6+skoXC1*skoXC1*(-1/8))))<=48,skoXC1*skoXC1>0]], Reals]]

% In QepcadB format:
(E skoXC1) [[(skoXC1 skoXC1 skoXC1 skoXC1 (-2/3))<=0]/\[[-1<(skoXC1 skoXC1 (1/6))]/\[[(skoXC1 skoXC1 skoXC1 skoXC1 (-2/3))<=0]/\[[(skoXC1 skoXC1)<=2]/\[[(skoXC1 skoXC1 (-1/2+(skoXC1 skoXC1 (-1/6))))<=0]/\[[(skoXC1 skoXC1 (-1/6))<=1]/\[[(skoXC1 (-1+(skoXC1 skoXC1 (1/3))))<=0]/\[[skoXC1<7/8]/\[[0<skoXC1]/\[[-3<(skoXC1 skoXC1 (-1/2))]/\[[(skoXC1 skoXC1 (1/2))<=3]/\[[(skoXC1 skoXC1 (24+(skoXC1 skoXC1 (-10+(skoXC1 skoXC1)))))<=16]/\[[-48<(skoXC1 skoXC1 (-80+(skoXC1 skoXC1 (40+(skoXC1 skoXC1 (-6+(skoXC1 skoXC1 (1/8))))))))]/\[[(skoXC1 skoXC1 (80+(skoXC1 skoXC1 (-40+(skoXC1 skoXC1 (6+(skoXC1 skoXC1 (-1/8))))))))<=48]/\[0<(skoXC1 skoXC1)]]]]]]]]]]]]]]].

% In SMTLib2 format:
(declare-fun skoXC1 () Real) (assert (and (<= (* skoXC1 (* skoXC1 (* skoXC1 (* skoXC1 (/ (- 2.) 3.))))) 0.) (and (> (* skoXC1 (* skoXC1 (/ 1. 6.))) (- 1.)) (and (<= (* skoXC1 (* skoXC1 (* skoXC1 (* skoXC1 (/ (- 2.) 3.))))) 0.) (and (<= (* skoXC1 skoXC1) 2.) (and (<= (* skoXC1 (* skoXC1 (+ (/ (- 1.) 2.) (* skoXC1 (* skoXC1 (/ (- 1.) 6.)))))) 0.) (and (<= (* skoXC1 (* skoXC1 (/ (- 1.) 6.))) 1.) (and (<= (* skoXC1 (+ (- 1.) (* skoXC1 (* skoXC1 (/ 1. 3.))))) 0.) (and (> (/ 7. 8.) skoXC1) (and (> skoXC1 0.) (and (> (* skoXC1 (* skoXC1 (/ (- 1.) 2.))) (- 3.)) (and (<= (* skoXC1 (* skoXC1 (/ 1. 2.))) 3.) (and (<= (* skoXC1 (* skoXC1 (+ 24. (* skoXC1 (* skoXC1 (+ (- 10.) (* skoXC1 skoXC1))))))) 16.) (and (> (* skoXC1 (* skoXC1 (+ (- 80.) (* skoXC1 (* skoXC1 (+ 40. (* skoXC1 (* skoXC1 (+ (- 6.) (* skoXC1 (* skoXC1 (/ 1. 8.)))))))))))) (- 48.)) (and (<= (* skoXC1 (* skoXC1 (+ 80. (* skoXC1 (* skoXC1 (+ (- 40.) (* skoXC1 (* skoXC1 (+ 6. (* skoXC1 (* skoXC1 (/ (- 1.) 8.)))))))))))) 48.) (> (* skoXC1 skoXC1) 0.))))))))))))))))

% In GRF format:
(sequent " MetiTarski formula " (antecedent (<= (* skoXC1 (* skoXC1 (* skoXC1 (* skoXC1 (/ (- 2.) 3.))))) 0.) (> (* skoXC1 (* skoXC1 (/ 1. 6.))) (- 1.)) (<= (* skoXC1 (* skoXC1 (* skoXC1 (* skoXC1 (/ (- 2.) 3.))))) 0.) (<= (* skoXC1 skoXC1) 2.) (<= (* skoXC1 (* skoXC1 (+ (/ (- 1.) 2.) (* skoXC1 (* skoXC1 (/ (- 1.) 6.)))))) 0.) (<= (* skoXC1 (* skoXC1 (/ (- 1.) 6.))) 1.) (<= (* skoXC1 (+ (- 1.) (* skoXC1 (* skoXC1 (/ 1. 3.))))) 0.) (> (/ 7. 8.) skoXC1) (> skoXC1 0.) (> (* skoXC1 (* skoXC1 (/ (- 1.) 2.))) (- 3.)) (<= (* skoXC1 (* skoXC1 (/ 1. 2.))) 3.) (<= (* skoXC1 (* skoXC1 (+ 24. (* skoXC1 (* skoXC1 (+ (- 10.) (* skoXC1 skoXC1))))))) 16.) (> (* skoXC1 (* skoXC1 (+ (- 80.) (* skoXC1 (* skoXC1 (+ 40. (* skoXC1 (* skoXC1 (+ (- 6.) (* skoXC1 (* skoXC1 (/ 1. 8.)))))))))))) (- 48.)) (<= (* skoXC1 (* skoXC1 (+ 80. (* skoXC1 (* skoXC1 (+ (- 40.) (* skoXC1 (* skoXC1 (+ 6. (* skoXC1 (* skoXC1 (/ (- 1.) 8.)))))))))))) 48.)) (succedent (<= (* skoXC1 skoXC1) 0.)))
-----[end problem]-----

-----[begin problem]-----
% In Mathematica format:
Timing[Resolve[Exists[{skoXC1}, And[skoXC1*skoXC1*(-1/6)<=1,skoXC1*skoXC1*skoXC1*skoXC1*(-2/3)<=0,skoXC1*skoXC1<=2,skoXC1*skoXC1*((-1/2)+skoXC1*skoXC1*(-1/6))<=0,skoXC1*skoXC1*(-1/6)<=1,skoXC1*(-1+skoXC1*skoXC1*(1/3))<=0,(7/8)>skoXC1,skoXC1>0,skoXC1*skoXC1*(-1/2)>-3,skoXC1*skoXC1*(1/2)<=3,skoXC1*skoXC1*(24+skoXC1*skoXC1*(-10+skoXC1*skoXC1))<=16,skoXC1*skoXC1*(-80+skoXC1*skoXC1*(40+skoXC1*skoXC1*(-6+skoXC1*skoXC1*(1/8))))>-48,skoXC1*skoXC1*(80+skoXC1*skoXC1*(-40+skoXC1*skoXC1*(6+skoXC1*skoXC1*(-1/8))))<=48,skoXC1*skoXC1>0]], Reals]]

% In QepcadB format:
(E skoXC1) [[(skoXC1 skoXC1 (-1/6))<=1]/\[[(skoXC1 skoXC1 skoXC1 skoXC1 (-2/3))<=0]/\[[(skoXC1 skoXC1)<=2]/\[[(skoXC1 skoXC1 (-1/2+(skoXC1 skoXC1 (-1/6))))<=0]/\[[(skoXC1 skoXC1 (-1/6))<=1]/\[[(skoXC1 (-1+(skoXC1 skoXC1 (1/3))))<=0]/\[[skoXC1<7/8]/\[[0<skoXC1]/\[[-3<(skoXC1 skoXC1 (-1/2))]/\[[(skoXC1 skoXC1 (1/2))<=3]/\[[(skoXC1 skoXC1 (24+(skoXC1 skoXC1 (-10+(skoXC1 skoXC1)))))<=16]/\[[-48<(skoXC1 skoXC1 (-80+(skoXC1 skoXC1 (40+(skoXC1 skoXC1 (-6+(skoXC1 skoXC1 (1/8))))))))]/\[[(skoXC1 skoXC1 (80+(skoXC1 skoXC1 (-40+(skoXC1 skoXC1 (6+(skoXC1 skoXC1 (-1/8))))))))<=48]/\[0<(skoXC1 skoXC1)]]]]]]]]]]]]]].

% In SMTLib2 format:
(declare-fun skoXC1 () Real) (assert (and (<= (* skoXC1 (* skoXC1 (/ (- 1.) 6.))) 1.) (and (<= (* skoXC1 (* skoXC1 (* skoXC1 (* skoXC1 (/ (- 2.) 3.))))) 0.) (and (<= (* skoXC1 skoXC1) 2.) (and (<= (* skoXC1 (* skoXC1 (+ (/ (- 1.) 2.) (* skoXC1 (* skoXC1 (/ (- 1.) 6.)))))) 0.) (and (<= (* skoXC1 (* skoXC1 (/ (- 1.) 6.))) 1.) (and (<= (* skoXC1 (+ (- 1.) (* skoXC1 (* skoXC1 (/ 1. 3.))))) 0.) (and (> (/ 7. 8.) skoXC1) (and (> skoXC1 0.) (and (> (* skoXC1 (* skoXC1 (/ (- 1.) 2.))) (- 3.)) (and (<= (* skoXC1 (* skoXC1 (/ 1. 2.))) 3.) (and (<= (* skoXC1 (* skoXC1 (+ 24. (* skoXC1 (* skoXC1 (+ (- 10.) (* skoXC1 skoXC1))))))) 16.) (and (> (* skoXC1 (* skoXC1 (+ (- 80.) (* skoXC1 (* skoXC1 (+ 40. (* skoXC1 (* skoXC1 (+ (- 6.) (* skoXC1 (* skoXC1 (/ 1. 8.)))))))))))) (- 48.)) (and (<= (* skoXC1 (* skoXC1 (+ 80. (* skoXC1 (* skoXC1 (+ (- 40.) (* skoXC1 (* skoXC1 (+ 6. (* skoXC1 (* skoXC1 (/ (- 1.) 8.)))))))))))) 48.) (> (* skoXC1 skoXC1) 0.)))))))))))))))

% In GRF format:
(sequent " MetiTarski formula " (antecedent (<= (* skoXC1 (* skoXC1 (/ (- 1.) 6.))) 1.) (<= (* skoXC1 (* skoXC1 (* skoXC1 (* skoXC1 (/ (- 2.) 3.))))) 0.) (<= (* skoXC1 skoXC1) 2.) (<= (* skoXC1 (* skoXC1 (+ (/ (- 1.) 2.) (* skoXC1 (* skoXC1 (/ (- 1.) 6.)))))) 0.) (<= (* skoXC1 (* skoXC1 (/ (- 1.) 6.))) 1.) (<= (* skoXC1 (+ (- 1.) (* skoXC1 (* skoXC1 (/ 1. 3.))))) 0.) (> (/ 7. 8.) skoXC1) (> skoXC1 0.) (> (* skoXC1 (* skoXC1 (/ (- 1.) 2.))) (- 3.)) (<= (* skoXC1 (* skoXC1 (/ 1. 2.))) 3.) (<= (* skoXC1 (* skoXC1 (+ 24. (* skoXC1 (* skoXC1 (+ (- 10.) (* skoXC1 skoXC1))))))) 16.) (> (* skoXC1 (* skoXC1 (+ (- 80.) (* skoXC1 (* skoXC1 (+ 40. (* skoXC1 (* skoXC1 (+ (- 6.) (* skoXC1 (* skoXC1 (/ 1. 8.)))))))))))) (- 48.)) (<= (* skoXC1 (* skoXC1 (+ 80. (* skoXC1 (* skoXC1 (+ (- 40.) (* skoXC1 (* skoXC1 (+ 6. (* skoXC1 (* skoXC1 (/ (- 1.) 8.)))))))))))) 48.)) (succedent (<= (* skoXC1 skoXC1) 0.)))
-----[end problem]-----

-----[begin problem]-----
% In Mathematica format:
Timing[Resolve[Exists[{skoXC1}, And[skoXC1*skoXC1*skoXC1*skoXC1*(-2/3)<=0,skoXC1*skoXC1*skoXC1*skoXC1*(-2/3)<=0,skoXC1*skoXC1<=2,skoXC1*skoXC1*((-1/2)+skoXC1*skoXC1*(-1/6))<=0,skoXC1*skoXC1*(-1/6)<=1,skoXC1*(-1+skoXC1*skoXC1*(1/3))<=0,(7/8)>skoXC1,skoXC1>0,skoXC1*skoXC1*(-1/2)>-3,skoXC1*skoXC1*(1/2)<=3,skoXC1*skoXC1*(24+skoXC1*skoXC1*(-10+skoXC1*skoXC1))<=16,skoXC1*skoXC1*(-80+skoXC1*skoXC1*(40+skoXC1*skoXC1*(-6+skoXC1*skoXC1*(1/8))))>-48,skoXC1*skoXC1*(80+skoXC1*skoXC1*(-40+skoXC1*skoXC1*(6+skoXC1*skoXC1*(-1/8))))<=48,skoXC1*skoXC1>0]], Reals]]

% In QepcadB format:
(E skoXC1) [[(skoXC1 skoXC1 skoXC1 skoXC1 (-2/3))<=0]/\[[(skoXC1 skoXC1 skoXC1 skoXC1 (-2/3))<=0]/\[[(skoXC1 skoXC1)<=2]/\[[(skoXC1 skoXC1 (-1/2+(skoXC1 skoXC1 (-1/6))))<=0]/\[[(skoXC1 skoXC1 (-1/6))<=1]/\[[(skoXC1 (-1+(skoXC1 skoXC1 (1/3))))<=0]/\[[skoXC1<7/8]/\[[0<skoXC1]/\[[-3<(skoXC1 skoXC1 (-1/2))]/\[[(skoXC1 skoXC1 (1/2))<=3]/\[[(skoXC1 skoXC1 (24+(skoXC1 skoXC1 (-10+(skoXC1 skoXC1)))))<=16]/\[[-48<(skoXC1 skoXC1 (-80+(skoXC1 skoXC1 (40+(skoXC1 skoXC1 (-6+(skoXC1 skoXC1 (1/8))))))))]/\[[(skoXC1 skoXC1 (80+(skoXC1 skoXC1 (-40+(skoXC1 skoXC1 (6+(skoXC1 skoXC1 (-1/8))))))))<=48]/\[0<(skoXC1 skoXC1)]]]]]]]]]]]]]].

% In SMTLib2 format:
(declare-fun skoXC1 () Real) (assert (and (<= (* skoXC1 (* skoXC1 (* skoXC1 (* skoXC1 (/ (- 2.) 3.))))) 0.) (and (<= (* skoXC1 (* skoXC1 (* skoXC1 (* skoXC1 (/ (- 2.) 3.))))) 0.) (and (<= (* skoXC1 skoXC1) 2.) (and (<= (* skoXC1 (* skoXC1 (+ (/ (- 1.) 2.) (* skoXC1 (* skoXC1 (/ (- 1.) 6.)))))) 0.) (and (<= (* skoXC1 (* skoXC1 (/ (- 1.) 6.))) 1.) (and (<= (* skoXC1 (+ (- 1.) (* skoXC1 (* skoXC1 (/ 1. 3.))))) 0.) (and (> (/ 7. 8.) skoXC1) (and (> skoXC1 0.) (and (> (* skoXC1 (* skoXC1 (/ (- 1.) 2.))) (- 3.)) (and (<= (* skoXC1 (* skoXC1 (/ 1. 2.))) 3.) (and (<= (* skoXC1 (* skoXC1 (+ 24. (* skoXC1 (* skoXC1 (+ (- 10.) (* skoXC1 skoXC1))))))) 16.) (and (> (* skoXC1 (* skoXC1 (+ (- 80.) (* skoXC1 (* skoXC1 (+ 40. (* skoXC1 (* skoXC1 (+ (- 6.) (* skoXC1 (* skoXC1 (/ 1. 8.)))))))))))) (- 48.)) (and (<= (* skoXC1 (* skoXC1 (+ 80. (* skoXC1 (* skoXC1 (+ (- 40.) (* skoXC1 (* skoXC1 (+ 6. (* skoXC1 (* skoXC1 (/ (- 1.) 8.)))))))))))) 48.) (> (* skoXC1 skoXC1) 0.)))))))))))))))

% In GRF format:
(sequent " MetiTarski formula " (antecedent (<= (* skoXC1 (* skoXC1 (* skoXC1 (* skoXC1 (/ (- 2.) 3.))))) 0.) (<= (* skoXC1 (* skoXC1 (* skoXC1 (* skoXC1 (/ (- 2.) 3.))))) 0.) (<= (* skoXC1 skoXC1) 2.) (<= (* skoXC1 (* skoXC1 (+ (/ (- 1.) 2.) (* skoXC1 (* skoXC1 (/ (- 1.) 6.)))))) 0.) (<= (* skoXC1 (* skoXC1 (/ (- 1.) 6.))) 1.) (<= (* skoXC1 (+ (- 1.) (* skoXC1 (* skoXC1 (/ 1. 3.))))) 0.) (> (/ 7. 8.) skoXC1) (> skoXC1 0.) (> (* skoXC1 (* skoXC1 (/ (- 1.) 2.))) (- 3.)) (<= (* skoXC1 (* skoXC1 (/ 1. 2.))) 3.) (<= (* skoXC1 (* skoXC1 (+ 24. (* skoXC1 (* skoXC1 (+ (- 10.) (* skoXC1 skoXC1))))))) 16.) (> (* skoXC1 (* skoXC1 (+ (- 80.) (* skoXC1 (* skoXC1 (+ 40. (* skoXC1 (* skoXC1 (+ (- 6.) (* skoXC1 (* skoXC1 (/ 1. 8.)))))))))))) (- 48.)) (<= (* skoXC1 (* skoXC1 (+ 80. (* skoXC1 (* skoXC1 (+ (- 40.) (* skoXC1 (* skoXC1 (+ 6. (* skoXC1 (* skoXC1 (/ (- 1.) 8.)))))))))))) 48.)) (succedent (<= (* skoXC1 skoXC1) 0.)))
-----[end problem]-----

-----[begin problem]-----
% In Mathematica format:
Timing[Resolve[Exists[{skoXC1}, And[skoXC1*(-1+skoXC1*skoXC1*(-1/6))<=0,skoXC1*skoXC1<=0,skoXC1*skoXC1*skoXC1*skoXC1*(-2/3)<=0,skoXC1*skoXC1<=2,skoXC1*skoXC1*((-1/2)+skoXC1*skoXC1*(-1/6))<=0,skoXC1*skoXC1*(-1/6)<=1,skoXC1*(-1+skoXC1*skoXC1*(1/3))<=0,(7/8)>skoXC1,skoXC1>0,skoXC1*skoXC1*(-1/2)>-3,skoXC1*skoXC1*(1/2)<=3,skoXC1*skoXC1*(24+skoXC1*skoXC1*(-10+skoXC1*skoXC1))<=16,skoXC1*skoXC1*(-80+skoXC1*skoXC1*(40+skoXC1*skoXC1*(-6+skoXC1*skoXC1*(1/8))))>-48,skoXC1*skoXC1*(80+skoXC1*skoXC1*(-40+skoXC1*skoXC1*(6+skoXC1*skoXC1*(-1/8))))<=48,skoXC1*skoXC1>0]], Reals]]

% In QepcadB format:
(E skoXC1) [[(skoXC1 (-1+(skoXC1 skoXC1 (-1/6))))<=0]/\[[(skoXC1 skoXC1)<=0]/\[[(skoXC1 skoXC1 skoXC1 skoXC1 (-2/3))<=0]/\[[(skoXC1 skoXC1)<=2]/\[[(skoXC1 skoXC1 (-1/2+(skoXC1 skoXC1 (-1/6))))<=0]/\[[(skoXC1 skoXC1 (-1/6))<=1]/\[[(skoXC1 (-1+(skoXC1 skoXC1 (1/3))))<=0]/\[[skoXC1<7/8]/\[[0<skoXC1]/\[[-3<(skoXC1 skoXC1 (-1/2))]/\[[(skoXC1 skoXC1 (1/2))<=3]/\[[(skoXC1 skoXC1 (24+(skoXC1 skoXC1 (-10+(skoXC1 skoXC1)))))<=16]/\[[-48<(skoXC1 skoXC1 (-80+(skoXC1 skoXC1 (40+(skoXC1 skoXC1 (-6+(skoXC1 skoXC1 (1/8))))))))]/\[[(skoXC1 skoXC1 (80+(skoXC1 skoXC1 (-40+(skoXC1 skoXC1 (6+(skoXC1 skoXC1 (-1/8))))))))<=48]/\[0<(skoXC1 skoXC1)]]]]]]]]]]]]]]].

% In SMTLib2 format:
(declare-fun skoXC1 () Real) (assert (and (<= (* skoXC1 (+ (- 1.) (* skoXC1 (* skoXC1 (/ (- 1.) 6.))))) 0.) (and (<= (* skoXC1 skoXC1) 0.) (and (<= (* skoXC1 (* skoXC1 (* skoXC1 (* skoXC1 (/ (- 2.) 3.))))) 0.) (and (<= (* skoXC1 skoXC1) 2.) (and (<= (* skoXC1 (* skoXC1 (+ (/ (- 1.) 2.) (* skoXC1 (* skoXC1 (/ (- 1.) 6.)))))) 0.) (and (<= (* skoXC1 (* skoXC1 (/ (- 1.) 6.))) 1.) (and (<= (* skoXC1 (+ (- 1.) (* skoXC1 (* skoXC1 (/ 1. 3.))))) 0.) (and (> (/ 7. 8.) skoXC1) (and (> skoXC1 0.) (and (> (* skoXC1 (* skoXC1 (/ (- 1.) 2.))) (- 3.)) (and (<= (* skoXC1 (* skoXC1 (/ 1. 2.))) 3.) (and (<= (* skoXC1 (* skoXC1 (+ 24. (* skoXC1 (* skoXC1 (+ (- 10.) (* skoXC1 skoXC1))))))) 16.) (and (> (* skoXC1 (* skoXC1 (+ (- 80.) (* skoXC1 (* skoXC1 (+ 40. (* skoXC1 (* skoXC1 (+ (- 6.) (* skoXC1 (* skoXC1 (/ 1. 8.)))))))))))) (- 48.)) (and (<= (* skoXC1 (* skoXC1 (+ 80. (* skoXC1 (* skoXC1 (+ (- 40.) (* skoXC1 (* skoXC1 (+ 6. (* skoXC1 (* skoXC1 (/ (- 1.) 8.)))))))))))) 48.) (> (* skoXC1 skoXC1) 0.))))))))))))))))

% In GRF format:
(sequent " MetiTarski formula " (antecedent (<= (* skoXC1 (+ (- 1.) (* skoXC1 (* skoXC1 (/ (- 1.) 6.))))) 0.) (<= (* skoXC1 skoXC1) 0.) (<= (* skoXC1 (* skoXC1 (* skoXC1 (* skoXC1 (/ (- 2.) 3.))))) 0.) (<= (* skoXC1 skoXC1) 2.) (<= (* skoXC1 (* skoXC1 (+ (/ (- 1.) 2.) (* skoXC1 (* skoXC1 (/ (- 1.) 6.)))))) 0.) (<= (* skoXC1 (* skoXC1 (/ (- 1.) 6.))) 1.) (<= (* skoXC1 (+ (- 1.) (* skoXC1 (* skoXC1 (/ 1. 3.))))) 0.) (> (/ 7. 8.) skoXC1) (> skoXC1 0.) (> (* skoXC1 (* skoXC1 (/ (- 1.) 2.))) (- 3.)) (<= (* skoXC1 (* skoXC1 (/ 1. 2.))) 3.) (<= (* skoXC1 (* skoXC1 (+ 24. (* skoXC1 (* skoXC1 (+ (- 10.) (* skoXC1 skoXC1))))))) 16.) (> (* skoXC1 (* skoXC1 (+ (- 80.) (* skoXC1 (* skoXC1 (+ 40. (* skoXC1 (* skoXC1 (+ (- 6.) (* skoXC1 (* skoXC1 (/ 1. 8.)))))))))))) (- 48.)) (<= (* skoXC1 (* skoXC1 (+ 80. (* skoXC1 (* skoXC1 (+ (- 40.) (* skoXC1 (* skoXC1 (+ 6. (* skoXC1 (* skoXC1 (/ (- 1.) 8.)))))))))))) 48.)) (succedent (<= (* skoXC1 skoXC1) 0.)))
-----[end problem]-----

-----[begin problem]-----
% In Mathematica format:
Timing[Resolve[Exists[{skoXC1}, And[skoXC1*skoXC1>0,skoXC1*skoXC1*skoXC1*skoXC1*(-2/3)<=0,skoXC1*skoXC1<=2,skoXC1*skoXC1*((-1/2)+skoXC1*skoXC1*(-1/6))<=0,skoXC1*skoXC1*(-1/6)<=1,skoXC1*(-1+skoXC1*skoXC1*(1/3))<=0,(7/8)>skoXC1,skoXC1>0,skoXC1*skoXC1*(-1/2)>-3,skoXC1*skoXC1*(1/2)<=3,skoXC1*skoXC1*(24+skoXC1*skoXC1*(-10+skoXC1*skoXC1))<=16,skoXC1*skoXC1*(-80+skoXC1*skoXC1*(40+skoXC1*skoXC1*(-6+skoXC1*skoXC1*(1/8))))>-48,skoXC1*skoXC1*(80+skoXC1*skoXC1*(-40+skoXC1*skoXC1*(6+skoXC1*skoXC1*(-1/8))))<=48,skoXC1*skoXC1>0]], Reals]]

% In QepcadB format:
(E skoXC1) [[0<(skoXC1 skoXC1)]/\[[(skoXC1 skoXC1 skoXC1 skoXC1 (-2/3))<=0]/\[[(skoXC1 skoXC1)<=2]/\[[(skoXC1 skoXC1 (-1/2+(skoXC1 skoXC1 (-1/6))))<=0]/\[[(skoXC1 skoXC1 (-1/6))<=1]/\[[(skoXC1 (-1+(skoXC1 skoXC1 (1/3))))<=0]/\[[skoXC1<7/8]/\[[0<skoXC1]/\[[-3<(skoXC1 skoXC1 (-1/2))]/\[[(skoXC1 skoXC1 (1/2))<=3]/\[[(skoXC1 skoXC1 (24+(skoXC1 skoXC1 (-10+(skoXC1 skoXC1)))))<=16]/\[[-48<(skoXC1 skoXC1 (-80+(skoXC1 skoXC1 (40+(skoXC1 skoXC1 (-6+(skoXC1 skoXC1 (1/8))))))))]/\[[(skoXC1 skoXC1 (80+(skoXC1 skoXC1 (-40+(skoXC1 skoXC1 (6+(skoXC1 skoXC1 (-1/8))))))))<=48]/\[0<(skoXC1 skoXC1)]]]]]]]]]]]]]].

% In SMTLib2 format:
(declare-fun skoXC1 () Real) (assert (and (> (* skoXC1 skoXC1) 0.) (and (<= (* skoXC1 (* skoXC1 (* skoXC1 (* skoXC1 (/ (- 2.) 3.))))) 0.) (and (<= (* skoXC1 skoXC1) 2.) (and (<= (* skoXC1 (* skoXC1 (+ (/ (- 1.) 2.) (* skoXC1 (* skoXC1 (/ (- 1.) 6.)))))) 0.) (and (<= (* skoXC1 (* skoXC1 (/ (- 1.) 6.))) 1.) (and (<= (* skoXC1 (+ (- 1.) (* skoXC1 (* skoXC1 (/ 1. 3.))))) 0.) (and (> (/ 7. 8.) skoXC1) (and (> skoXC1 0.) (and (> (* skoXC1 (* skoXC1 (/ (- 1.) 2.))) (- 3.)) (and (<= (* skoXC1 (* skoXC1 (/ 1. 2.))) 3.) (and (<= (* skoXC1 (* skoXC1 (+ 24. (* skoXC1 (* skoXC1 (+ (- 10.) (* skoXC1 skoXC1))))))) 16.) (and (> (* skoXC1 (* skoXC1 (+ (- 80.) (* skoXC1 (* skoXC1 (+ 40. (* skoXC1 (* skoXC1 (+ (- 6.) (* skoXC1 (* skoXC1 (/ 1. 8.)))))))))))) (- 48.)) (and (<= (* skoXC1 (* skoXC1 (+ 80. (* skoXC1 (* skoXC1 (+ (- 40.) (* skoXC1 (* skoXC1 (+ 6. (* skoXC1 (* skoXC1 (/ (- 1.) 8.)))))))))))) 48.) (> (* skoXC1 skoXC1) 0.)))))))))))))))

% In GRF format:
(sequent " MetiTarski formula " (antecedent (> (* skoXC1 skoXC1) 0.) (<= (* skoXC1 (* skoXC1 (* skoXC1 (* skoXC1 (/ (- 2.) 3.))))) 0.) (<= (* skoXC1 skoXC1) 2.) (<= (* skoXC1 (* skoXC1 (+ (/ (- 1.) 2.) (* skoXC1 (* skoXC1 (/ (- 1.) 6.)))))) 0.) (<= (* skoXC1 (* skoXC1 (/ (- 1.) 6.))) 1.) (<= (* skoXC1 (+ (- 1.) (* skoXC1 (* skoXC1 (/ 1. 3.))))) 0.) (> (/ 7. 8.) skoXC1) (> skoXC1 0.) (> (* skoXC1 (* skoXC1 (/ (- 1.) 2.))) (- 3.)) (<= (* skoXC1 (* skoXC1 (/ 1. 2.))) 3.) (<= (* skoXC1 (* skoXC1 (+ 24. (* skoXC1 (* skoXC1 (+ (- 10.) (* skoXC1 skoXC1))))))) 16.) (> (* skoXC1 (* skoXC1 (+ (- 80.) (* skoXC1 (* skoXC1 (+ 40. (* skoXC1 (* skoXC1 (+ (- 6.) (* skoXC1 (* skoXC1 (/ 1. 8.)))))))))))) (- 48.)) (<= (* skoXC1 (* skoXC1 (+ 80. (* skoXC1 (* skoXC1 (+ (- 40.) (* skoXC1 (* skoXC1 (+ 6. (* skoXC1 (* skoXC1 (/ (- 1.) 8.)))))))))))) 48.)) (succedent (<= (* skoXC1 skoXC1) 0.)))
-----[end problem]-----

-----[begin problem]-----
% In Mathematica format:
Timing[Resolve[Exists[{skoXC1}, And[skoXC1*(-1+skoXC1*skoXC1*(-1/6))<=0,skoXC1*skoXC1<=1,skoXC1*skoXC1*skoXC1*skoXC1*(-2/3)<=0,skoXC1*skoXC1<=2,skoXC1*skoXC1*((-1/2)+skoXC1*skoXC1*(-1/6))<=0,skoXC1*skoXC1*(-1/6)<=1,skoXC1*(-1+skoXC1*skoXC1*(1/3))<=0,(7/8)>skoXC1,skoXC1>0,skoXC1*skoXC1*(-1/2)>-3,skoXC1*skoXC1*(1/2)<=3,skoXC1*skoXC1*(24+skoXC1*skoXC1*(-10+skoXC1*skoXC1))<=16,skoXC1*skoXC1*(-80+skoXC1*skoXC1*(40+skoXC1*skoXC1*(-6+skoXC1*skoXC1*(1/8))))>-48,skoXC1*skoXC1*(80+skoXC1*skoXC1*(-40+skoXC1*skoXC1*(6+skoXC1*skoXC1*(-1/8))))<=48,skoXC1*skoXC1>0]], Reals]]

% In QepcadB format:
(E skoXC1) [[(skoXC1 (-1+(skoXC1 skoXC1 (-1/6))))<=0]/\[[(skoXC1 skoXC1)<=1]/\[[(skoXC1 skoXC1 skoXC1 skoXC1 (-2/3))<=0]/\[[(skoXC1 skoXC1)<=2]/\[[(skoXC1 skoXC1 (-1/2+(skoXC1 skoXC1 (-1/6))))<=0]/\[[(skoXC1 skoXC1 (-1/6))<=1]/\[[(skoXC1 (-1+(skoXC1 skoXC1 (1/3))))<=0]/\[[skoXC1<7/8]/\[[0<skoXC1]/\[[-3<(skoXC1 skoXC1 (-1/2))]/\[[(skoXC1 skoXC1 (1/2))<=3]/\[[(skoXC1 skoXC1 (24+(skoXC1 skoXC1 (-10+(skoXC1 skoXC1)))))<=16]/\[[-48<(skoXC1 skoXC1 (-80+(skoXC1 skoXC1 (40+(skoXC1 skoXC1 (-6+(skoXC1 skoXC1 (1/8))))))))]/\[[(skoXC1 skoXC1 (80+(skoXC1 skoXC1 (-40+(skoXC1 skoXC1 (6+(skoXC1 skoXC1 (-1/8))))))))<=48]/\[0<(skoXC1 skoXC1)]]]]]]]]]]]]]]].

% In SMTLib2 format:
(declare-fun skoXC1 () Real) (assert (and (<= (* skoXC1 (+ (- 1.) (* skoXC1 (* skoXC1 (/ (- 1.) 6.))))) 0.) (and (<= (* skoXC1 skoXC1) 1.) (and (<= (* skoXC1 (* skoXC1 (* skoXC1 (* skoXC1 (/ (- 2.) 3.))))) 0.) (and (<= (* skoXC1 skoXC1) 2.) (and (<= (* skoXC1 (* skoXC1 (+ (/ (- 1.) 2.) (* skoXC1 (* skoXC1 (/ (- 1.) 6.)))))) 0.) (and (<= (* skoXC1 (* skoXC1 (/ (- 1.) 6.))) 1.) (and (<= (* skoXC1 (+ (- 1.) (* skoXC1 (* skoXC1 (/ 1. 3.))))) 0.) (and (> (/ 7. 8.) skoXC1) (and (> skoXC1 0.) (and (> (* skoXC1 (* skoXC1 (/ (- 1.) 2.))) (- 3.)) (and (<= (* skoXC1 (* skoXC1 (/ 1. 2.))) 3.) (and (<= (* skoXC1 (* skoXC1 (+ 24. (* skoXC1 (* skoXC1 (+ (- 10.) (* skoXC1 skoXC1))))))) 16.) (and (> (* skoXC1 (* skoXC1 (+ (- 80.) (* skoXC1 (* skoXC1 (+ 40. (* skoXC1 (* skoXC1 (+ (- 6.) (* skoXC1 (* skoXC1 (/ 1. 8.)))))))))))) (- 48.)) (and (<= (* skoXC1 (* skoXC1 (+ 80. (* skoXC1 (* skoXC1 (+ (- 40.) (* skoXC1 (* skoXC1 (+ 6. (* skoXC1 (* skoXC1 (/ (- 1.) 8.)))))))))))) 48.) (> (* skoXC1 skoXC1) 0.))))))))))))))))

% In GRF format:
(sequent " MetiTarski formula " (antecedent (<= (* skoXC1 (+ (- 1.) (* skoXC1 (* skoXC1 (/ (- 1.) 6.))))) 0.) (<= (* skoXC1 skoXC1) 1.) (<= (* skoXC1 (* skoXC1 (* skoXC1 (* skoXC1 (/ (- 2.) 3.))))) 0.) (<= (* skoXC1 skoXC1) 2.) (<= (* skoXC1 (* skoXC1 (+ (/ (- 1.) 2.) (* skoXC1 (* skoXC1 (/ (- 1.) 6.)))))) 0.) (<= (* skoXC1 (* skoXC1 (/ (- 1.) 6.))) 1.) (<= (* skoXC1 (+ (- 1.) (* skoXC1 (* skoXC1 (/ 1. 3.))))) 0.) (> (/ 7. 8.) skoXC1) (> skoXC1 0.) (> (* skoXC1 (* skoXC1 (/ (- 1.) 2.))) (- 3.)) (<= (* skoXC1 (* skoXC1 (/ 1. 2.))) 3.) (<= (* skoXC1 (* skoXC1 (+ 24. (* skoXC1 (* skoXC1 (+ (- 10.) (* skoXC1 skoXC1))))))) 16.) (> (* skoXC1 (* skoXC1 (+ (- 80.) (* skoXC1 (* skoXC1 (+ 40. (* skoXC1 (* skoXC1 (+ (- 6.) (* skoXC1 (* skoXC1 (/ 1. 8.)))))))))))) (- 48.)) (<= (* skoXC1 (* skoXC1 (+ 80. (* skoXC1 (* skoXC1 (+ (- 40.) (* skoXC1 (* skoXC1 (+ 6. (* skoXC1 (* skoXC1 (/ (- 1.) 8.)))))))))))) 48.)) (succedent (<= (* skoXC1 skoXC1) 0.)))
-----[end problem]-----

-----[begin problem]-----
% In Mathematica format:
Timing[Resolve[Exists[{skoXC1}, And[skoXC1*(-1+skoXC1*skoXC1*(-1/6))<=0,skoXC1*skoXC1*(1/6)>-1,skoXC1*skoXC1*skoXC1*skoXC1*(-2/3)<=0,skoXC1*skoXC1<=2,skoXC1*skoXC1*((-1/2)+skoXC1*skoXC1*(-1/6))<=0,skoXC1*skoXC1*(-1/6)<=1,skoXC1*(-1+skoXC1*skoXC1*(1/3))<=0,(7/8)>skoXC1,skoXC1>0,skoXC1*skoXC1*(-1/2)>-3,skoXC1*skoXC1*(1/2)<=3,skoXC1*skoXC1*(24+skoXC1*skoXC1*(-10+skoXC1*skoXC1))<=16,skoXC1*skoXC1*(-80+skoXC1*skoXC1*(40+skoXC1*skoXC1*(-6+skoXC1*skoXC1*(1/8))))>-48,skoXC1*skoXC1*(80+skoXC1*skoXC1*(-40+skoXC1*skoXC1*(6+skoXC1*skoXC1*(-1/8))))<=48,skoXC1*skoXC1>0]], Reals]]

% In QepcadB format:
(E skoXC1) [[(skoXC1 (-1+(skoXC1 skoXC1 (-1/6))))<=0]/\[[-1<(skoXC1 skoXC1 (1/6))]/\[[(skoXC1 skoXC1 skoXC1 skoXC1 (-2/3))<=0]/\[[(skoXC1 skoXC1)<=2]/\[[(skoXC1 skoXC1 (-1/2+(skoXC1 skoXC1 (-1/6))))<=0]/\[[(skoXC1 skoXC1 (-1/6))<=1]/\[[(skoXC1 (-1+(skoXC1 skoXC1 (1/3))))<=0]/\[[skoXC1<7/8]/\[[0<skoXC1]/\[[-3<(skoXC1 skoXC1 (-1/2))]/\[[(skoXC1 skoXC1 (1/2))<=3]/\[[(skoXC1 skoXC1 (24+(skoXC1 skoXC1 (-10+(skoXC1 skoXC1)))))<=16]/\[[-48<(skoXC1 skoXC1 (-80+(skoXC1 skoXC1 (40+(skoXC1 skoXC1 (-6+(skoXC1 skoXC1 (1/8))))))))]/\[[(skoXC1 skoXC1 (80+(skoXC1 skoXC1 (-40+(skoXC1 skoXC1 (6+(skoXC1 skoXC1 (-1/8))))))))<=48]/\[0<(skoXC1 skoXC1)]]]]]]]]]]]]]]].

% In SMTLib2 format:
(declare-fun skoXC1 () Real) (assert (and (<= (* skoXC1 (+ (- 1.) (* skoXC1 (* skoXC1 (/ (- 1.) 6.))))) 0.) (and (> (* skoXC1 (* skoXC1 (/ 1. 6.))) (- 1.)) (and (<= (* skoXC1 (* skoXC1 (* skoXC1 (* skoXC1 (/ (- 2.) 3.))))) 0.) (and (<= (* skoXC1 skoXC1) 2.) (and (<= (* skoXC1 (* skoXC1 (+ (/ (- 1.) 2.) (* skoXC1 (* skoXC1 (/ (- 1.) 6.)))))) 0.) (and (<= (* skoXC1 (* skoXC1 (/ (- 1.) 6.))) 1.) (and (<= (* skoXC1 (+ (- 1.) (* skoXC1 (* skoXC1 (/ 1. 3.))))) 0.) (and (> (/ 7. 8.) skoXC1) (and (> skoXC1 0.) (and (> (* skoXC1 (* skoXC1 (/ (- 1.) 2.))) (- 3.)) (and (<= (* skoXC1 (* skoXC1 (/ 1. 2.))) 3.) (and (<= (* skoXC1 (* skoXC1 (+ 24. (* skoXC1 (* skoXC1 (+ (- 10.) (* skoXC1 skoXC1))))))) 16.) (and (> (* skoXC1 (* skoXC1 (+ (- 80.) (* skoXC1 (* skoXC1 (+ 40. (* skoXC1 (* skoXC1 (+ (- 6.) (* skoXC1 (* skoXC1 (/ 1. 8.)))))))))))) (- 48.)) (and (<= (* skoXC1 (* skoXC1 (+ 80. (* skoXC1 (* skoXC1 (+ (- 40.) (* skoXC1 (* skoXC1 (+ 6. (* skoXC1 (* skoXC1 (/ (- 1.) 8.)))))))))))) 48.) (> (* skoXC1 skoXC1) 0.))))))))))))))))

% In GRF format:
(sequent " MetiTarski formula " (antecedent (<= (* skoXC1 (+ (- 1.) (* skoXC1 (* skoXC1 (/ (- 1.) 6.))))) 0.) (> (* skoXC1 (* skoXC1 (/ 1. 6.))) (- 1.)) (<= (* skoXC1 (* skoXC1 (* skoXC1 (* skoXC1 (/ (- 2.) 3.))))) 0.) (<= (* skoXC1 skoXC1) 2.) (<= (* skoXC1 (* skoXC1 (+ (/ (- 1.) 2.) (* skoXC1 (* skoXC1 (/ (- 1.) 6.)))))) 0.) (<= (* skoXC1 (* skoXC1 (/ (- 1.) 6.))) 1.) (<= (* skoXC1 (+ (- 1.) (* skoXC1 (* skoXC1 (/ 1. 3.))))) 0.) (> (/ 7. 8.) skoXC1) (> skoXC1 0.) (> (* skoXC1 (* skoXC1 (/ (- 1.) 2.))) (- 3.)) (<= (* skoXC1 (* skoXC1 (/ 1. 2.))) 3.) (<= (* skoXC1 (* skoXC1 (+ 24. (* skoXC1 (* skoXC1 (+ (- 10.) (* skoXC1 skoXC1))))))) 16.) (> (* skoXC1 (* skoXC1 (+ (- 80.) (* skoXC1 (* skoXC1 (+ 40. (* skoXC1 (* skoXC1 (+ (- 6.) (* skoXC1 (* skoXC1 (/ 1. 8.)))))))))))) (- 48.)) (<= (* skoXC1 (* skoXC1 (+ 80. (* skoXC1 (* skoXC1 (+ (- 40.) (* skoXC1 (* skoXC1 (+ 6. (* skoXC1 (* skoXC1 (/ (- 1.) 8.)))))))))))) 48.)) (succedent (<= (* skoXC1 skoXC1) 0.)))
-----[end problem]-----

-----[begin problem]-----
% In Mathematica format:
Timing[Resolve[Exists[{skoXC1}, And[skoXC1*(-1+skoXC1*skoXC1*(-1/6))<=0,skoXC1*skoXC1*(1/6)>-1,skoXC1*skoXC1*skoXC1*skoXC1*(1/12)>0,skoXC1*skoXC1*skoXC1*skoXC1*(-2/3)<=0,skoXC1*skoXC1<=2,skoXC1*skoXC1*((-1/2)+skoXC1*skoXC1*(-1/6))<=0,skoXC1*skoXC1*(-1/6)<=1,skoXC1*(-1+skoXC1*skoXC1*(1/3))<=0,(7/8)>skoXC1,skoXC1>0,skoXC1*skoXC1*(-1/2)>-3,skoXC1*skoXC1*(1/2)<=3,skoXC1*skoXC1*(24+skoXC1*skoXC1*(-10+skoXC1*skoXC1))<=16,skoXC1*skoXC1*(-80+skoXC1*skoXC1*(40+skoXC1*skoXC1*(-6+skoXC1*skoXC1*(1/8))))>-48,skoXC1*skoXC1*(80+skoXC1*skoXC1*(-40+skoXC1*skoXC1*(6+skoXC1*skoXC1*(-1/8))))<=48,skoXC1*skoXC1>0]], Reals]]

% In QepcadB format:
(E skoXC1) [[(skoXC1 (-1+(skoXC1 skoXC1 (-1/6))))<=0]/\[[-1<(skoXC1 skoXC1 (1/6))]/\[[0<(skoXC1 skoXC1 skoXC1 skoXC1 (1/12))]/\[[(skoXC1 skoXC1 skoXC1 skoXC1 (-2/3))<=0]/\[[(skoXC1 skoXC1)<=2]/\[[(skoXC1 skoXC1 (-1/2+(skoXC1 skoXC1 (-1/6))))<=0]/\[[(skoXC1 skoXC1 (-1/6))<=1]/\[[(skoXC1 (-1+(skoXC1 skoXC1 (1/3))))<=0]/\[[skoXC1<7/8]/\[[0<skoXC1]/\[[-3<(skoXC1 skoXC1 (-1/2))]/\[[(skoXC1 skoXC1 (1/2))<=3]/\[[(skoXC1 skoXC1 (24+(skoXC1 skoXC1 (-10+(skoXC1 skoXC1)))))<=16]/\[[-48<(skoXC1 skoXC1 (-80+(skoXC1 skoXC1 (40+(skoXC1 skoXC1 (-6+(skoXC1 skoXC1 (1/8))))))))]/\[[(skoXC1 skoXC1 (80+(skoXC1 skoXC1 (-40+(skoXC1 skoXC1 (6+(skoXC1 skoXC1 (-1/8))))))))<=48]/\[0<(skoXC1 skoXC1)]]]]]]]]]]]]]]]].

% In SMTLib2 format:
(declare-fun skoXC1 () Real) (assert (and (<= (* skoXC1 (+ (- 1.) (* skoXC1 (* skoXC1 (/ (- 1.) 6.))))) 0.) (and (> (* skoXC1 (* skoXC1 (/ 1. 6.))) (- 1.)) (and (> (* skoXC1 (* skoXC1 (* skoXC1 (* skoXC1 (/ 1. 12.))))) 0.) (and (<= (* skoXC1 (* skoXC1 (* skoXC1 (* skoXC1 (/ (- 2.) 3.))))) 0.) (and (<= (* skoXC1 skoXC1) 2.) (and (<= (* skoXC1 (* skoXC1 (+ (/ (- 1.) 2.) (* skoXC1 (* skoXC1 (/ (- 1.) 6.)))))) 0.) (and (<= (* skoXC1 (* skoXC1 (/ (- 1.) 6.))) 1.) (and (<= (* skoXC1 (+ (- 1.) (* skoXC1 (* skoXC1 (/ 1. 3.))))) 0.) (and (> (/ 7. 8.) skoXC1) (and (> skoXC1 0.) (and (> (* skoXC1 (* skoXC1 (/ (- 1.) 2.))) (- 3.)) (and (<= (* skoXC1 (* skoXC1 (/ 1. 2.))) 3.) (and (<= (* skoXC1 (* skoXC1 (+ 24. (* skoXC1 (* skoXC1 (+ (- 10.) (* skoXC1 skoXC1))))))) 16.) (and (> (* skoXC1 (* skoXC1 (+ (- 80.) (* skoXC1 (* skoXC1 (+ 40. (* skoXC1 (* skoXC1 (+ (- 6.) (* skoXC1 (* skoXC1 (/ 1. 8.)))))))))))) (- 48.)) (and (<= (* skoXC1 (* skoXC1 (+ 80. (* skoXC1 (* skoXC1 (+ (- 40.) (* skoXC1 (* skoXC1 (+ 6. (* skoXC1 (* skoXC1 (/ (- 1.) 8.)))))))))))) 48.) (> (* skoXC1 skoXC1) 0.)))))))))))))))))

% In GRF format:
(sequent " MetiTarski formula " (antecedent (<= (* skoXC1 (+ (- 1.) (* skoXC1 (* skoXC1 (/ (- 1.) 6.))))) 0.) (> (* skoXC1 (* skoXC1 (/ 1. 6.))) (- 1.)) (> (* skoXC1 (* skoXC1 (* skoXC1 (* skoXC1 (/ 1. 12.))))) 0.) (<= (* skoXC1 (* skoXC1 (* skoXC1 (* skoXC1 (/ (- 2.) 3.))))) 0.) (<= (* skoXC1 skoXC1) 2.) (<= (* skoXC1 (* skoXC1 (+ (/ (- 1.) 2.) (* skoXC1 (* skoXC1 (/ (- 1.) 6.)))))) 0.) (<= (* skoXC1 (* skoXC1 (/ (- 1.) 6.))) 1.) (<= (* skoXC1 (+ (- 1.) (* skoXC1 (* skoXC1 (/ 1. 3.))))) 0.) (> (/ 7. 8.) skoXC1) (> skoXC1 0.) (> (* skoXC1 (* skoXC1 (/ (- 1.) 2.))) (- 3.)) (<= (* skoXC1 (* skoXC1 (/ 1. 2.))) 3.) (<= (* skoXC1 (* skoXC1 (+ 24. (* skoXC1 (* skoXC1 (+ (- 10.) (* skoXC1 skoXC1))))))) 16.) (> (* skoXC1 (* skoXC1 (+ (- 80.) (* skoXC1 (* skoXC1 (+ 40. (* skoXC1 (* skoXC1 (+ (- 6.) (* skoXC1 (* skoXC1 (/ 1. 8.)))))))))))) (- 48.)) (<= (* skoXC1 (* skoXC1 (+ 80. (* skoXC1 (* skoXC1 (+ (- 40.) (* skoXC1 (* skoXC1 (+ 6. (* skoXC1 (* skoXC1 (/ (- 1.) 8.)))))))))))) 48.)) (succedent (<= (* skoXC1 skoXC1) 0.)))
-----[end problem]-----

-----[begin problem]-----
% In Mathematica format:
Timing[Resolve[Exists[{skoXC1}, And[skoXC1*(-1+skoXC1*skoXC1*(-1/6))<=0,skoXC1*skoXC1*skoXC1*skoXC1*(-2/3)<=0,skoXC1*skoXC1<=2,skoXC1*skoXC1*((-1/2)+skoXC1*skoXC1*(-1/6))<=0,skoXC1*skoXC1*(-1/6)<=1,skoXC1*(-1+skoXC1*skoXC1*(1/3))<=0,(7/8)>skoXC1,skoXC1>0,skoXC1*skoXC1*(-1/2)>-3,skoXC1*skoXC1*(1/2)<=3,skoXC1*skoXC1*(24+skoXC1*skoXC1*(-10+skoXC1*skoXC1))<=16,skoXC1*skoXC1*(-80+skoXC1*skoXC1*(40+skoXC1*skoXC1*(-6+skoXC1*skoXC1*(1/8))))>-48,skoXC1*skoXC1*(80+skoXC1*skoXC1*(-40+skoXC1*skoXC1*(6+skoXC1*skoXC1*(-1/8))))<=48,skoXC1*skoXC1>0]], Reals]]

% In QepcadB format:
(E skoXC1) [[(skoXC1 (-1+(skoXC1 skoXC1 (-1/6))))<=0]/\[[(skoXC1 skoXC1 skoXC1 skoXC1 (-2/3))<=0]/\[[(skoXC1 skoXC1)<=2]/\[[(skoXC1 skoXC1 (-1/2+(skoXC1 skoXC1 (-1/6))))<=0]/\[[(skoXC1 skoXC1 (-1/6))<=1]/\[[(skoXC1 (-1+(skoXC1 skoXC1 (1/3))))<=0]/\[[skoXC1<7/8]/\[[0<skoXC1]/\[[-3<(skoXC1 skoXC1 (-1/2))]/\[[(skoXC1 skoXC1 (1/2))<=3]/\[[(skoXC1 skoXC1 (24+(skoXC1 skoXC1 (-10+(skoXC1 skoXC1)))))<=16]/\[[-48<(skoXC1 skoXC1 (-80+(skoXC1 skoXC1 (40+(skoXC1 skoXC1 (-6+(skoXC1 skoXC1 (1/8))))))))]/\[[(skoXC1 skoXC1 (80+(skoXC1 skoXC1 (-40+(skoXC1 skoXC1 (6+(skoXC1 skoXC1 (-1/8))))))))<=48]/\[0<(skoXC1 skoXC1)]]]]]]]]]]]]]].

% In SMTLib2 format:
(declare-fun skoXC1 () Real) (assert (and (<= (* skoXC1 (+ (- 1.) (* skoXC1 (* skoXC1 (/ (- 1.) 6.))))) 0.) (and (<= (* skoXC1 (* skoXC1 (* skoXC1 (* skoXC1 (/ (- 2.) 3.))))) 0.) (and (<= (* skoXC1 skoXC1) 2.) (and (<= (* skoXC1 (* skoXC1 (+ (/ (- 1.) 2.) (* skoXC1 (* skoXC1 (/ (- 1.) 6.)))))) 0.) (and (<= (* skoXC1 (* skoXC1 (/ (- 1.) 6.))) 1.) (and (<= (* skoXC1 (+ (- 1.) (* skoXC1 (* skoXC1 (/ 1. 3.))))) 0.) (and (> (/ 7. 8.) skoXC1) (and (> skoXC1 0.) (and (> (* skoXC1 (* skoXC1 (/ (- 1.) 2.))) (- 3.)) (and (<= (* skoXC1 (* skoXC1 (/ 1. 2.))) 3.) (and (<= (* skoXC1 (* skoXC1 (+ 24. (* skoXC1 (* skoXC1 (+ (- 10.) (* skoXC1 skoXC1))))))) 16.) (and (> (* skoXC1 (* skoXC1 (+ (- 80.) (* skoXC1 (* skoXC1 (+ 40. (* skoXC1 (* skoXC1 (+ (- 6.) (* skoXC1 (* skoXC1 (/ 1. 8.)))))))))))) (- 48.)) (and (<= (* skoXC1 (* skoXC1 (+ 80. (* skoXC1 (* skoXC1 (+ (- 40.) (* skoXC1 (* skoXC1 (+ 6. (* skoXC1 (* skoXC1 (/ (- 1.) 8.)))))))))))) 48.) (> (* skoXC1 skoXC1) 0.)))))))))))))))

% In GRF format:
(sequent " MetiTarski formula " (antecedent (<= (* skoXC1 (+ (- 1.) (* skoXC1 (* skoXC1 (/ (- 1.) 6.))))) 0.) (<= (* skoXC1 (* skoXC1 (* skoXC1 (* skoXC1 (/ (- 2.) 3.))))) 0.) (<= (* skoXC1 skoXC1) 2.) (<= (* skoXC1 (* skoXC1 (+ (/ (- 1.) 2.) (* skoXC1 (* skoXC1 (/ (- 1.) 6.)))))) 0.) (<= (* skoXC1 (* skoXC1 (/ (- 1.) 6.))) 1.) (<= (* skoXC1 (+ (- 1.) (* skoXC1 (* skoXC1 (/ 1. 3.))))) 0.) (> (/ 7. 8.) skoXC1) (> skoXC1 0.) (> (* skoXC1 (* skoXC1 (/ (- 1.) 2.))) (- 3.)) (<= (* skoXC1 (* skoXC1 (/ 1. 2.))) 3.) (<= (* skoXC1 (* skoXC1 (+ 24. (* skoXC1 (* skoXC1 (+ (- 10.) (* skoXC1 skoXC1))))))) 16.) (> (* skoXC1 (* skoXC1 (+ (- 80.) (* skoXC1 (* skoXC1 (+ 40. (* skoXC1 (* skoXC1 (+ (- 6.) (* skoXC1 (* skoXC1 (/ 1. 8.)))))))))))) (- 48.)) (<= (* skoXC1 (* skoXC1 (+ 80. (* skoXC1 (* skoXC1 (+ (- 40.) (* skoXC1 (* skoXC1 (+ 6. (* skoXC1 (* skoXC1 (/ (- 1.) 8.)))))))))))) 48.)) (succedent (<= (* skoXC1 skoXC1) 0.)))
-----[end problem]-----

-----[begin problem]-----
% In Mathematica format:
Timing[Resolve[Exists[{skoXC1}, And[skoXC1*skoXC1*(1/3)<=1,skoXC1*(-1+skoXC1*skoXC1*(-1/6))<=0,skoXC1*skoXC1*skoXC1*skoXC1*(-2/3)<=0,skoXC1*skoXC1<=2,skoXC1*skoXC1*((-1/2)+skoXC1*skoXC1*(-1/6))<=0,skoXC1*skoXC1*(-1/6)<=1,skoXC1*(-1+skoXC1*skoXC1*(1/3))<=0,(7/8)>skoXC1,skoXC1>0,skoXC1*skoXC1*(-1/2)>-3,skoXC1*skoXC1*(1/2)<=3,skoXC1*skoXC1*(24+skoXC1*skoXC1*(-10+skoXC1*skoXC1))<=16,skoXC1*skoXC1*(-80+skoXC1*skoXC1*(40+skoXC1*skoXC1*(-6+skoXC1*skoXC1*(1/8))))>-48,skoXC1*skoXC1*(80+skoXC1*skoXC1*(-40+skoXC1*skoXC1*(6+skoXC1*skoXC1*(-1/8))))<=48,skoXC1*skoXC1>0]], Reals]]

% In QepcadB format:
(E skoXC1) [[(skoXC1 skoXC1 (1/3))<=1]/\[[(skoXC1 (-1+(skoXC1 skoXC1 (-1/6))))<=0]/\[[(skoXC1 skoXC1 skoXC1 skoXC1 (-2/3))<=0]/\[[(skoXC1 skoXC1)<=2]/\[[(skoXC1 skoXC1 (-1/2+(skoXC1 skoXC1 (-1/6))))<=0]/\[[(skoXC1 skoXC1 (-1/6))<=1]/\[[(skoXC1 (-1+(skoXC1 skoXC1 (1/3))))<=0]/\[[skoXC1<7/8]/\[[0<skoXC1]/\[[-3<(skoXC1 skoXC1 (-1/2))]/\[[(skoXC1 skoXC1 (1/2))<=3]/\[[(skoXC1 skoXC1 (24+(skoXC1 skoXC1 (-10+(skoXC1 skoXC1)))))<=16]/\[[-48<(skoXC1 skoXC1 (-80+(skoXC1 skoXC1 (40+(skoXC1 skoXC1 (-6+(skoXC1 skoXC1 (1/8))))))))]/\[[(skoXC1 skoXC1 (80+(skoXC1 skoXC1 (-40+(skoXC1 skoXC1 (6+(skoXC1 skoXC1 (-1/8))))))))<=48]/\[0<(skoXC1 skoXC1)]]]]]]]]]]]]]]].

% In SMTLib2 format:
(declare-fun skoXC1 () Real) (assert (and (<= (* skoXC1 (* skoXC1 (/ 1. 3.))) 1.) (and (<= (* skoXC1 (+ (- 1.) (* skoXC1 (* skoXC1 (/ (- 1.) 6.))))) 0.) (and (<= (* skoXC1 (* skoXC1 (* skoXC1 (* skoXC1 (/ (- 2.) 3.))))) 0.) (and (<= (* skoXC1 skoXC1) 2.) (and (<= (* skoXC1 (* skoXC1 (+ (/ (- 1.) 2.) (* skoXC1 (* skoXC1 (/ (- 1.) 6.)))))) 0.) (and (<= (* skoXC1 (* skoXC1 (/ (- 1.) 6.))) 1.) (and (<= (* skoXC1 (+ (- 1.) (* skoXC1 (* skoXC1 (/ 1. 3.))))) 0.) (and (> (/ 7. 8.) skoXC1) (and (> skoXC1 0.) (and (> (* skoXC1 (* skoXC1 (/ (- 1.) 2.))) (- 3.)) (and (<= (* skoXC1 (* skoXC1 (/ 1. 2.))) 3.) (and (<= (* skoXC1 (* skoXC1 (+ 24. (* skoXC1 (* skoXC1 (+ (- 10.) (* skoXC1 skoXC1))))))) 16.) (and (> (* skoXC1 (* skoXC1 (+ (- 80.) (* skoXC1 (* skoXC1 (+ 40. (* skoXC1 (* skoXC1 (+ (- 6.) (* skoXC1 (* skoXC1 (/ 1. 8.)))))))))))) (- 48.)) (and (<= (* skoXC1 (* skoXC1 (+ 80. (* skoXC1 (* skoXC1 (+ (- 40.) (* skoXC1 (* skoXC1 (+ 6. (* skoXC1 (* skoXC1 (/ (- 1.) 8.)))))))))))) 48.) (> (* skoXC1 skoXC1) 0.))))))))))))))))

% In GRF format:
(sequent " MetiTarski formula " (antecedent (<= (* skoXC1 (* skoXC1 (/ 1. 3.))) 1.) (<= (* skoXC1 (+ (- 1.) (* skoXC1 (* skoXC1 (/ (- 1.) 6.))))) 0.) (<= (* skoXC1 (* skoXC1 (* skoXC1 (* skoXC1 (/ (- 2.) 3.))))) 0.) (<= (* skoXC1 skoXC1) 2.) (<= (* skoXC1 (* skoXC1 (+ (/ (- 1.) 2.) (* skoXC1 (* skoXC1 (/ (- 1.) 6.)))))) 0.) (<= (* skoXC1 (* skoXC1 (/ (- 1.) 6.))) 1.) (<= (* skoXC1 (+ (- 1.) (* skoXC1 (* skoXC1 (/ 1. 3.))))) 0.) (> (/ 7. 8.) skoXC1) (> skoXC1 0.) (> (* skoXC1 (* skoXC1 (/ (- 1.) 2.))) (- 3.)) (<= (* skoXC1 (* skoXC1 (/ 1. 2.))) 3.) (<= (* skoXC1 (* skoXC1 (+ 24. (* skoXC1 (* skoXC1 (+ (- 10.) (* skoXC1 skoXC1))))))) 16.) (> (* skoXC1 (* skoXC1 (+ (- 80.) (* skoXC1 (* skoXC1 (+ 40. (* skoXC1 (* skoXC1 (+ (- 6.) (* skoXC1 (* skoXC1 (/ 1. 8.)))))))))))) (- 48.)) (<= (* skoXC1 (* skoXC1 (+ 80. (* skoXC1 (* skoXC1 (+ (- 40.) (* skoXC1 (* skoXC1 (+ 6. (* skoXC1 (* skoXC1 (/ (- 1.) 8.)))))))))))) 48.)) (succedent (<= (* skoXC1 skoXC1) 0.)))
-----[end problem]-----

-----[begin problem]-----
% In Mathematica format:
Timing[Resolve[Exists[{skoXC1}, And[skoXC1*skoXC1*(1/3)<=1,skoXC1*(-1+skoXC1*skoXC1*(-1/6))<=0,skoXC1*skoXC1*skoXC1*skoXC1*(-2/3)<=0,skoXC1*skoXC1<=2,skoXC1*skoXC1*((-1/2)+skoXC1*skoXC1*(-1/6))<=0,skoXC1*skoXC1*(-1/6)<=1,skoXC1*(-1+skoXC1*skoXC1*(1/3))<=0,(7/8)>skoXC1,skoXC1>0,skoXC1*skoXC1*(-1/2)>-3,skoXC1*skoXC1*(1/2)<=3,skoXC1*skoXC1*(24+skoXC1*skoXC1*(-10+skoXC1*skoXC1))<=16,skoXC1*skoXC1*(-80+skoXC1*skoXC1*(40+skoXC1*skoXC1*(-6+skoXC1*skoXC1*(1/8))))>-48,skoXC1*skoXC1*(80+skoXC1*skoXC1*(-40+skoXC1*skoXC1*(6+skoXC1*skoXC1*(-1/8))))<=48,skoXC1*skoXC1>0]], Reals]]

% In QepcadB format:
(E skoXC1) [[(skoXC1 skoXC1 (1/3))<=1]/\[[(skoXC1 (-1+(skoXC1 skoXC1 (-1/6))))<=0]/\[[(skoXC1 skoXC1 skoXC1 skoXC1 (-2/3))<=0]/\[[(skoXC1 skoXC1)<=2]/\[[(skoXC1 skoXC1 (-1/2+(skoXC1 skoXC1 (-1/6))))<=0]/\[[(skoXC1 skoXC1 (-1/6))<=1]/\[[(skoXC1 (-1+(skoXC1 skoXC1 (1/3))))<=0]/\[[skoXC1<7/8]/\[[0<skoXC1]/\[[-3<(skoXC1 skoXC1 (-1/2))]/\[[(skoXC1 skoXC1 (1/2))<=3]/\[[(skoXC1 skoXC1 (24+(skoXC1 skoXC1 (-10+(skoXC1 skoXC1)))))<=16]/\[[-48<(skoXC1 skoXC1 (-80+(skoXC1 skoXC1 (40+(skoXC1 skoXC1 (-6+(skoXC1 skoXC1 (1/8))))))))]/\[[(skoXC1 skoXC1 (80+(skoXC1 skoXC1 (-40+(skoXC1 skoXC1 (6+(skoXC1 skoXC1 (-1/8))))))))<=48]/\[0<(skoXC1 skoXC1)]]]]]]]]]]]]]]].

% In SMTLib2 format:
(declare-fun skoXC1 () Real) (assert (and (<= (* skoXC1 (* skoXC1 (/ 1. 3.))) 1.) (and (<= (* skoXC1 (+ (- 1.) (* skoXC1 (* skoXC1 (/ (- 1.) 6.))))) 0.) (and (<= (* skoXC1 (* skoXC1 (* skoXC1 (* skoXC1 (/ (- 2.) 3.))))) 0.) (and (<= (* skoXC1 skoXC1) 2.) (and (<= (* skoXC1 (* skoXC1 (+ (/ (- 1.) 2.) (* skoXC1 (* skoXC1 (/ (- 1.) 6.)))))) 0.) (and (<= (* skoXC1 (* skoXC1 (/ (- 1.) 6.))) 1.) (and (<= (* skoXC1 (+ (- 1.) (* skoXC1 (* skoXC1 (/ 1. 3.))))) 0.) (and (> (/ 7. 8.) skoXC1) (and (> skoXC1 0.) (and (> (* skoXC1 (* skoXC1 (/ (- 1.) 2.))) (- 3.)) (and (<= (* skoXC1 (* skoXC1 (/ 1. 2.))) 3.) (and (<= (* skoXC1 (* skoXC1 (+ 24. (* skoXC1 (* skoXC1 (+ (- 10.) (* skoXC1 skoXC1))))))) 16.) (and (> (* skoXC1 (* skoXC1 (+ (- 80.) (* skoXC1 (* skoXC1 (+ 40. (* skoXC1 (* skoXC1 (+ (- 6.) (* skoXC1 (* skoXC1 (/ 1. 8.)))))))))))) (- 48.)) (and (<= (* skoXC1 (* skoXC1 (+ 80. (* skoXC1 (* skoXC1 (+ (- 40.) (* skoXC1 (* skoXC1 (+ 6. (* skoXC1 (* skoXC1 (/ (- 1.) 8.)))))))))))) 48.) (> (* skoXC1 skoXC1) 0.))))))))))))))))

% In GRF format:
(sequent " MetiTarski formula " (antecedent (<= (* skoXC1 (* skoXC1 (/ 1. 3.))) 1.) (<= (* skoXC1 (+ (- 1.) (* skoXC1 (* skoXC1 (/ (- 1.) 6.))))) 0.) (<= (* skoXC1 (* skoXC1 (* skoXC1 (* skoXC1 (/ (- 2.) 3.))))) 0.) (<= (* skoXC1 skoXC1) 2.) (<= (* skoXC1 (* skoXC1 (+ (/ (- 1.) 2.) (* skoXC1 (* skoXC1 (/ (- 1.) 6.)))))) 0.) (<= (* skoXC1 (* skoXC1 (/ (- 1.) 6.))) 1.) (<= (* skoXC1 (+ (- 1.) (* skoXC1 (* skoXC1 (/ 1. 3.))))) 0.) (> (/ 7. 8.) skoXC1) (> skoXC1 0.) (> (* skoXC1 (* skoXC1 (/ (- 1.) 2.))) (- 3.)) (<= (* skoXC1 (* skoXC1 (/ 1. 2.))) 3.) (<= (* skoXC1 (* skoXC1 (+ 24. (* skoXC1 (* skoXC1 (+ (- 10.) (* skoXC1 skoXC1))))))) 16.) (> (* skoXC1 (* skoXC1 (+ (- 80.) (* skoXC1 (* skoXC1 (+ 40. (* skoXC1 (* skoXC1 (+ (- 6.) (* skoXC1 (* skoXC1 (/ 1. 8.)))))))))))) (- 48.)) (<= (* skoXC1 (* skoXC1 (+ 80. (* skoXC1 (* skoXC1 (+ (- 40.) (* skoXC1 (* skoXC1 (+ 6. (* skoXC1 (* skoXC1 (/ (- 1.) 8.)))))))))))) 48.)) (succedent (<= (* skoXC1 skoXC1) 0.)))
-----[end problem]-----

-----[begin problem]-----
% In Mathematica format:
Timing[Resolve[Exists[{skoXC1}, And[skoXC1*skoXC1*(-1/6)<=1,skoXC1*skoXC1*(1/3)<=1,skoXC1*(-1+skoXC1*skoXC1*(-1/6))<=0,skoXC1*skoXC1*skoXC1*skoXC1*(-2/3)<=0,skoXC1*skoXC1<=2,skoXC1*skoXC1*((-1/2)+skoXC1*skoXC1*(-1/6))<=0,skoXC1*skoXC1*(-1/6)<=1,skoXC1*(-1+skoXC1*skoXC1*(1/3))<=0,(7/8)>skoXC1,skoXC1>0,skoXC1*skoXC1*(-1/2)>-3,skoXC1*skoXC1*(1/2)<=3,skoXC1*skoXC1*(24+skoXC1*skoXC1*(-10+skoXC1*skoXC1))<=16,skoXC1*skoXC1*(-80+skoXC1*skoXC1*(40+skoXC1*skoXC1*(-6+skoXC1*skoXC1*(1/8))))>-48,skoXC1*skoXC1*(80+skoXC1*skoXC1*(-40+skoXC1*skoXC1*(6+skoXC1*skoXC1*(-1/8))))<=48,skoXC1*skoXC1>0]], Reals]]

% In QepcadB format:
(E skoXC1) [[(skoXC1 skoXC1 (-1/6))<=1]/\[[(skoXC1 skoXC1 (1/3))<=1]/\[[(skoXC1 (-1+(skoXC1 skoXC1 (-1/6))))<=0]/\[[(skoXC1 skoXC1 skoXC1 skoXC1 (-2/3))<=0]/\[[(skoXC1 skoXC1)<=2]/\[[(skoXC1 skoXC1 (-1/2+(skoXC1 skoXC1 (-1/6))))<=0]/\[[(skoXC1 skoXC1 (-1/6))<=1]/\[[(skoXC1 (-1+(skoXC1 skoXC1 (1/3))))<=0]/\[[skoXC1<7/8]/\[[0<skoXC1]/\[[-3<(skoXC1 skoXC1 (-1/2))]/\[[(skoXC1 skoXC1 (1/2))<=3]/\[[(skoXC1 skoXC1 (24+(skoXC1 skoXC1 (-10+(skoXC1 skoXC1)))))<=16]/\[[-48<(skoXC1 skoXC1 (-80+(skoXC1 skoXC1 (40+(skoXC1 skoXC1 (-6+(skoXC1 skoXC1 (1/8))))))))]/\[[(skoXC1 skoXC1 (80+(skoXC1 skoXC1 (-40+(skoXC1 skoXC1 (6+(skoXC1 skoXC1 (-1/8))))))))<=48]/\[0<(skoXC1 skoXC1)]]]]]]]]]]]]]]]].

% In SMTLib2 format:
(declare-fun skoXC1 () Real) (assert (and (<= (* skoXC1 (* skoXC1 (/ (- 1.) 6.))) 1.) (and (<= (* skoXC1 (* skoXC1 (/ 1. 3.))) 1.) (and (<= (* skoXC1 (+ (- 1.) (* skoXC1 (* skoXC1 (/ (- 1.) 6.))))) 0.) (and (<= (* skoXC1 (* skoXC1 (* skoXC1 (* skoXC1 (/ (- 2.) 3.))))) 0.) (and (<= (* skoXC1 skoXC1) 2.) (and (<= (* skoXC1 (* skoXC1 (+ (/ (- 1.) 2.) (* skoXC1 (* skoXC1 (/ (- 1.) 6.)))))) 0.) (and (<= (* skoXC1 (* skoXC1 (/ (- 1.) 6.))) 1.) (and (<= (* skoXC1 (+ (- 1.) (* skoXC1 (* skoXC1 (/ 1. 3.))))) 0.) (and (> (/ 7. 8.) skoXC1) (and (> skoXC1 0.) (and (> (* skoXC1 (* skoXC1 (/ (- 1.) 2.))) (- 3.)) (and (<= (* skoXC1 (* skoXC1 (/ 1. 2.))) 3.) (and (<= (* skoXC1 (* skoXC1 (+ 24. (* skoXC1 (* skoXC1 (+ (- 10.) (* skoXC1 skoXC1))))))) 16.) (and (> (* skoXC1 (* skoXC1 (+ (- 80.) (* skoXC1 (* skoXC1 (+ 40. (* skoXC1 (* skoXC1 (+ (- 6.) (* skoXC1 (* skoXC1 (/ 1. 8.)))))))))))) (- 48.)) (and (<= (* skoXC1 (* skoXC1 (+ 80. (* skoXC1 (* skoXC1 (+ (- 40.) (* skoXC1 (* skoXC1 (+ 6. (* skoXC1 (* skoXC1 (/ (- 1.) 8.)))))))))))) 48.) (> (* skoXC1 skoXC1) 0.)))))))))))))))))

% In GRF format:
(sequent " MetiTarski formula " (antecedent (<= (* skoXC1 (* skoXC1 (/ (- 1.) 6.))) 1.) (<= (* skoXC1 (* skoXC1 (/ 1. 3.))) 1.) (<= (* skoXC1 (+ (- 1.) (* skoXC1 (* skoXC1 (/ (- 1.) 6.))))) 0.) (<= (* skoXC1 (* skoXC1 (* skoXC1 (* skoXC1 (/ (- 2.) 3.))))) 0.) (<= (* skoXC1 skoXC1) 2.) (<= (* skoXC1 (* skoXC1 (+ (/ (- 1.) 2.) (* skoXC1 (* skoXC1 (/ (- 1.) 6.)))))) 0.) (<= (* skoXC1 (* skoXC1 (/ (- 1.) 6.))) 1.) (<= (* skoXC1 (+ (- 1.) (* skoXC1 (* skoXC1 (/ 1. 3.))))) 0.) (> (/ 7. 8.) skoXC1) (> skoXC1 0.) (> (* skoXC1 (* skoXC1 (/ (- 1.) 2.))) (- 3.)) (<= (* skoXC1 (* skoXC1 (/ 1. 2.))) 3.) (<= (* skoXC1 (* skoXC1 (+ 24. (* skoXC1 (* skoXC1 (+ (- 10.) (* skoXC1 skoXC1))))))) 16.) (> (* skoXC1 (* skoXC1 (+ (- 80.) (* skoXC1 (* skoXC1 (+ 40. (* skoXC1 (* skoXC1 (+ (- 6.) (* skoXC1 (* skoXC1 (/ 1. 8.)))))))))))) (- 48.)) (<= (* skoXC1 (* skoXC1 (+ 80. (* skoXC1 (* skoXC1 (+ (- 40.) (* skoXC1 (* skoXC1 (+ 6. (* skoXC1 (* skoXC1 (/ (- 1.) 8.)))))))))))) 48.)) (succedent (<= (* skoXC1 skoXC1) 0.)))
-----[end problem]-----

-----[begin problem]-----
% In Mathematica format:
Timing[Resolve[Exists[{skoXC1}, And[skoXC1*skoXC1*(256+skoXC1*skoXC1*(-160+skoXC1*skoXC1*(32+skoXC1*skoXC1*-1)))<=128,skoXC1*skoXC1*(1/3)<=1,skoXC1*(-1+skoXC1*skoXC1*(-1/6))<=0,skoXC1*skoXC1*skoXC1*skoXC1*(-2/3)<=0,skoXC1*skoXC1<=2,skoXC1*skoXC1*((-1/2)+skoXC1*skoXC1*(-1/6))<=0,skoXC1*skoXC1*(-1/6)<=1,skoXC1*(-1+skoXC1*skoXC1*(1/3))<=0,(7/8)>skoXC1,skoXC1>0,skoXC1*skoXC1*(-1/2)>-3,skoXC1*skoXC1*(1/2)<=3,skoXC1*skoXC1*(24+skoXC1*skoXC1*(-10+skoXC1*skoXC1))<=16,skoXC1*skoXC1*(-80+skoXC1*skoXC1*(40+skoXC1*skoXC1*(-6+skoXC1*skoXC1*(1/8))))>-48,skoXC1*skoXC1*(80+skoXC1*skoXC1*(-40+skoXC1*skoXC1*(6+skoXC1*skoXC1*(-1/8))))<=48,skoXC1*skoXC1>0]], Reals]]

% In QepcadB format:
(E skoXC1) [[(skoXC1 skoXC1 (256+(skoXC1 skoXC1 (-160+(skoXC1 skoXC1 (32+(skoXC1 skoXC1 (-1))))))))<=128]/\[[(skoXC1 skoXC1 (1/3))<=1]/\[[(skoXC1 (-1+(skoXC1 skoXC1 (-1/6))))<=0]/\[[(skoXC1 skoXC1 skoXC1 skoXC1 (-2/3))<=0]/\[[(skoXC1 skoXC1)<=2]/\[[(skoXC1 skoXC1 (-1/2+(skoXC1 skoXC1 (-1/6))))<=0]/\[[(skoXC1 skoXC1 (-1/6))<=1]/\[[(skoXC1 (-1+(skoXC1 skoXC1 (1/3))))<=0]/\[[skoXC1<7/8]/\[[0<skoXC1]/\[[-3<(skoXC1 skoXC1 (-1/2))]/\[[(skoXC1 skoXC1 (1/2))<=3]/\[[(skoXC1 skoXC1 (24+(skoXC1 skoXC1 (-10+(skoXC1 skoXC1)))))<=16]/\[[-48<(skoXC1 skoXC1 (-80+(skoXC1 skoXC1 (40+(skoXC1 skoXC1 (-6+(skoXC1 skoXC1 (1/8))))))))]/\[[(skoXC1 skoXC1 (80+(skoXC1 skoXC1 (-40+(skoXC1 skoXC1 (6+(skoXC1 skoXC1 (-1/8))))))))<=48]/\[0<(skoXC1 skoXC1)]]]]]]]]]]]]]]]].

% In SMTLib2 format:
(declare-fun skoXC1 () Real) (assert (and (<= (* skoXC1 (* skoXC1 (+ 256. (* skoXC1 (* skoXC1 (+ (- 160.) (* skoXC1 (* skoXC1 (+ 32. (* skoXC1 (* skoXC1 (- 1.)))))))))))) 128.) (and (<= (* skoXC1 (* skoXC1 (/ 1. 3.))) 1.) (and (<= (* skoXC1 (+ (- 1.) (* skoXC1 (* skoXC1 (/ (- 1.) 6.))))) 0.) (and (<= (* skoXC1 (* skoXC1 (* skoXC1 (* skoXC1 (/ (- 2.) 3.))))) 0.) (and (<= (* skoXC1 skoXC1) 2.) (and (<= (* skoXC1 (* skoXC1 (+ (/ (- 1.) 2.) (* skoXC1 (* skoXC1 (/ (- 1.) 6.)))))) 0.) (and (<= (* skoXC1 (* skoXC1 (/ (- 1.) 6.))) 1.) (and (<= (* skoXC1 (+ (- 1.) (* skoXC1 (* skoXC1 (/ 1. 3.))))) 0.) (and (> (/ 7. 8.) skoXC1) (and (> skoXC1 0.) (and (> (* skoXC1 (* skoXC1 (/ (- 1.) 2.))) (- 3.)) (and (<= (* skoXC1 (* skoXC1 (/ 1. 2.))) 3.) (and (<= (* skoXC1 (* skoXC1 (+ 24. (* skoXC1 (* skoXC1 (+ (- 10.) (* skoXC1 skoXC1))))))) 16.) (and (> (* skoXC1 (* skoXC1 (+ (- 80.) (* skoXC1 (* skoXC1 (+ 40. (* skoXC1 (* skoXC1 (+ (- 6.) (* skoXC1 (* skoXC1 (/ 1. 8.)))))))))))) (- 48.)) (and (<= (* skoXC1 (* skoXC1 (+ 80. (* skoXC1 (* skoXC1 (+ (- 40.) (* skoXC1 (* skoXC1 (+ 6. (* skoXC1 (* skoXC1 (/ (- 1.) 8.)))))))))))) 48.) (> (* skoXC1 skoXC1) 0.)))))))))))))))))

% In GRF format:
(sequent " MetiTarski formula " (antecedent (<= (* skoXC1 (* skoXC1 (+ 256. (* skoXC1 (* skoXC1 (+ (- 160.) (* skoXC1 (* skoXC1 (+ 32. (* skoXC1 (* skoXC1 (- 1.)))))))))))) 128.) (<= (* skoXC1 (* skoXC1 (/ 1. 3.))) 1.) (<= (* skoXC1 (+ (- 1.) (* skoXC1 (* skoXC1 (/ (- 1.) 6.))))) 0.) (<= (* skoXC1 (* skoXC1 (* skoXC1 (* skoXC1 (/ (- 2.) 3.))))) 0.) (<= (* skoXC1 skoXC1) 2.) (<= (* skoXC1 (* skoXC1 (+ (/ (- 1.) 2.) (* skoXC1 (* skoXC1 (/ (- 1.) 6.)))))) 0.) (<= (* skoXC1 (* skoXC1 (/ (- 1.) 6.))) 1.) (<= (* skoXC1 (+ (- 1.) (* skoXC1 (* skoXC1 (/ 1. 3.))))) 0.) (> (/ 7. 8.) skoXC1) (> skoXC1 0.) (> (* skoXC1 (* skoXC1 (/ (- 1.) 2.))) (- 3.)) (<= (* skoXC1 (* skoXC1 (/ 1. 2.))) 3.) (<= (* skoXC1 (* skoXC1 (+ 24. (* skoXC1 (* skoXC1 (+ (- 10.) (* skoXC1 skoXC1))))))) 16.) (> (* skoXC1 (* skoXC1 (+ (- 80.) (* skoXC1 (* skoXC1 (+ 40. (* skoXC1 (* skoXC1 (+ (- 6.) (* skoXC1 (* skoXC1 (/ 1. 8.)))))))))))) (- 48.)) (<= (* skoXC1 (* skoXC1 (+ 80. (* skoXC1 (* skoXC1 (+ (- 40.) (* skoXC1 (* skoXC1 (+ 6. (* skoXC1 (* skoXC1 (/ (- 1.) 8.)))))))))))) 48.)) (succedent (<= (* skoXC1 skoXC1) 0.)))
-----[end problem]-----

-----[begin problem]-----
% In Mathematica format:
Timing[Resolve[Exists[{skoXC1}, And[skoXC1*skoXC1*(-256+skoXC1*skoXC1*(160+skoXC1*skoXC1*(-32+skoXC1*skoXC1)))<=-128,skoXC1*skoXC1*(1/3)<=1,skoXC1*(-1+skoXC1*skoXC1*(-1/6))<=0,skoXC1*skoXC1*skoXC1*skoXC1*(-2/3)<=0,skoXC1*skoXC1<=2,skoXC1*skoXC1*((-1/2)+skoXC1*skoXC1*(-1/6))<=0,skoXC1*skoXC1*(-1/6)<=1,skoXC1*(-1+skoXC1*skoXC1*(1/3))<=0,(7/8)>skoXC1,skoXC1>0,skoXC1*skoXC1*(-1/2)>-3,skoXC1*skoXC1*(1/2)<=3,skoXC1*skoXC1*(24+skoXC1*skoXC1*(-10+skoXC1*skoXC1))<=16,skoXC1*skoXC1*(-80+skoXC1*skoXC1*(40+skoXC1*skoXC1*(-6+skoXC1*skoXC1*(1/8))))>-48,skoXC1*skoXC1*(80+skoXC1*skoXC1*(-40+skoXC1*skoXC1*(6+skoXC1*skoXC1*(-1/8))))<=48,skoXC1*skoXC1>0]], Reals]]

% In QepcadB format:
(E skoXC1) [[(skoXC1 skoXC1 (-256+(skoXC1 skoXC1 (160+(skoXC1 skoXC1 (-32+(skoXC1 skoXC1)))))))<=-128]/\[[(skoXC1 skoXC1 (1/3))<=1]/\[[(skoXC1 (-1+(skoXC1 skoXC1 (-1/6))))<=0]/\[[(skoXC1 skoXC1 skoXC1 skoXC1 (-2/3))<=0]/\[[(skoXC1 skoXC1)<=2]/\[[(skoXC1 skoXC1 (-1/2+(skoXC1 skoXC1 (-1/6))))<=0]/\[[(skoXC1 skoXC1 (-1/6))<=1]/\[[(skoXC1 (-1+(skoXC1 skoXC1 (1/3))))<=0]/\[[skoXC1<7/8]/\[[0<skoXC1]/\[[-3<(skoXC1 skoXC1 (-1/2))]/\[[(skoXC1 skoXC1 (1/2))<=3]/\[[(skoXC1 skoXC1 (24+(skoXC1 skoXC1 (-10+(skoXC1 skoXC1)))))<=16]/\[[-48<(skoXC1 skoXC1 (-80+(skoXC1 skoXC1 (40+(skoXC1 skoXC1 (-6+(skoXC1 skoXC1 (1/8))))))))]/\[[(skoXC1 skoXC1 (80+(skoXC1 skoXC1 (-40+(skoXC1 skoXC1 (6+(skoXC1 skoXC1 (-1/8))))))))<=48]/\[0<(skoXC1 skoXC1)]]]]]]]]]]]]]]]].

% In SMTLib2 format:
(declare-fun skoXC1 () Real) (assert (and (<= (* skoXC1 (* skoXC1 (+ (- 256.) (* skoXC1 (* skoXC1 (+ 160. (* skoXC1 (* skoXC1 (+ (- 32.) (* skoXC1 skoXC1)))))))))) (- 128.)) (and (<= (* skoXC1 (* skoXC1 (/ 1. 3.))) 1.) (and (<= (* skoXC1 (+ (- 1.) (* skoXC1 (* skoXC1 (/ (- 1.) 6.))))) 0.) (and (<= (* skoXC1 (* skoXC1 (* skoXC1 (* skoXC1 (/ (- 2.) 3.))))) 0.) (and (<= (* skoXC1 skoXC1) 2.) (and (<= (* skoXC1 (* skoXC1 (+ (/ (- 1.) 2.) (* skoXC1 (* skoXC1 (/ (- 1.) 6.)))))) 0.) (and (<= (* skoXC1 (* skoXC1 (/ (- 1.) 6.))) 1.) (and (<= (* skoXC1 (+ (- 1.) (* skoXC1 (* skoXC1 (/ 1. 3.))))) 0.) (and (> (/ 7. 8.) skoXC1) (and (> skoXC1 0.) (and (> (* skoXC1 (* skoXC1 (/ (- 1.) 2.))) (- 3.)) (and (<= (* skoXC1 (* skoXC1 (/ 1. 2.))) 3.) (and (<= (* skoXC1 (* skoXC1 (+ 24. (* skoXC1 (* skoXC1 (+ (- 10.) (* skoXC1 skoXC1))))))) 16.) (and (> (* skoXC1 (* skoXC1 (+ (- 80.) (* skoXC1 (* skoXC1 (+ 40. (* skoXC1 (* skoXC1 (+ (- 6.) (* skoXC1 (* skoXC1 (/ 1. 8.)))))))))))) (- 48.)) (and (<= (* skoXC1 (* skoXC1 (+ 80. (* skoXC1 (* skoXC1 (+ (- 40.) (* skoXC1 (* skoXC1 (+ 6. (* skoXC1 (* skoXC1 (/ (- 1.) 8.)))))))))))) 48.) (> (* skoXC1 skoXC1) 0.)))))))))))))))))

% In GRF format:
(sequent " MetiTarski formula " (antecedent (<= (* skoXC1 (* skoXC1 (+ (- 256.) (* skoXC1 (* skoXC1 (+ 160. (* skoXC1 (* skoXC1 (+ (- 32.) (* skoXC1 skoXC1)))))))))) (- 128.)) (<= (* skoXC1 (* skoXC1 (/ 1. 3.))) 1.) (<= (* skoXC1 (+ (- 1.) (* skoXC1 (* skoXC1 (/ (- 1.) 6.))))) 0.) (<= (* skoXC1 (* skoXC1 (* skoXC1 (* skoXC1 (/ (- 2.) 3.))))) 0.) (<= (* skoXC1 skoXC1) 2.) (<= (* skoXC1 (* skoXC1 (+ (/ (- 1.) 2.) (* skoXC1 (* skoXC1 (/ (- 1.) 6.)))))) 0.) (<= (* skoXC1 (* skoXC1 (/ (- 1.) 6.))) 1.) (<= (* skoXC1 (+ (- 1.) (* skoXC1 (* skoXC1 (/ 1. 3.))))) 0.) (> (/ 7. 8.) skoXC1) (> skoXC1 0.) (> (* skoXC1 (* skoXC1 (/ (- 1.) 2.))) (- 3.)) (<= (* skoXC1 (* skoXC1 (/ 1. 2.))) 3.) (<= (* skoXC1 (* skoXC1 (+ 24. (* skoXC1 (* skoXC1 (+ (- 10.) (* skoXC1 skoXC1))))))) 16.) (> (* skoXC1 (* skoXC1 (+ (- 80.) (* skoXC1 (* skoXC1 (+ 40. (* skoXC1 (* skoXC1 (+ (- 6.) (* skoXC1 (* skoXC1 (/ 1. 8.)))))))))))) (- 48.)) (<= (* skoXC1 (* skoXC1 (+ 80. (* skoXC1 (* skoXC1 (+ (- 40.) (* skoXC1 (* skoXC1 (+ 6. (* skoXC1 (* skoXC1 (/ (- 1.) 8.)))))))))))) 48.)) (succedent (<= (* skoXC1 skoXC1) 0.)))
-----[end problem]-----

-----[begin problem]-----
% In Mathematica format:
Timing[Resolve[Exists[{skoXC1}, And[skoXC1*skoXC1*skoXC1*skoXC1*((-80/3)+skoXC1*skoXC1*((128/3)+skoXC1*skoXC1*((-55/3)+skoXC1*skoXC1*(5/3))))<=0,skoXC1*skoXC1*(-256+skoXC1*skoXC1*(160+skoXC1*skoXC1*(-32+skoXC1*skoXC1)))>-128,skoXC1*skoXC1*(1/3)<=1,skoXC1*(-1+skoXC1*skoXC1*(-1/6))<=0,skoXC1*skoXC1*skoXC1*skoXC1*(-2/3)<=0,skoXC1*skoXC1<=2,skoXC1*skoXC1*((-1/2)+skoXC1*skoXC1*(-1/6))<=0,skoXC1*skoXC1*(-1/6)<=1,skoXC1*(-1+skoXC1*skoXC1*(1/3))<=0,(7/8)>skoXC1,skoXC1>0,skoXC1*skoXC1*(-1/2)>-3,skoXC1*skoXC1*(1/2)<=3,skoXC1*skoXC1*(24+skoXC1*skoXC1*(-10+skoXC1*skoXC1))<=16,skoXC1*skoXC1*(-80+skoXC1*skoXC1*(40+skoXC1*skoXC1*(-6+skoXC1*skoXC1*(1/8))))>-48,skoXC1*skoXC1*(80+skoXC1*skoXC1*(-40+skoXC1*skoXC1*(6+skoXC1*skoXC1*(-1/8))))<=48,skoXC1*skoXC1>0]], Reals]]

% In QepcadB format:
(E skoXC1) [[(skoXC1 skoXC1 skoXC1 skoXC1 (-80/3+(skoXC1 skoXC1 (128/3+(skoXC1 skoXC1 (-55/3+(skoXC1 skoXC1 (5/3))))))))<=0]/\[[-128<(skoXC1 skoXC1 (-256+(skoXC1 skoXC1 (160+(skoXC1 skoXC1 (-32+(skoXC1 skoXC1)))))))]/\[[(skoXC1 skoXC1 (1/3))<=1]/\[[(skoXC1 (-1+(skoXC1 skoXC1 (-1/6))))<=0]/\[[(skoXC1 skoXC1 skoXC1 skoXC1 (-2/3))<=0]/\[[(skoXC1 skoXC1)<=2]/\[[(skoXC1 skoXC1 (-1/2+(skoXC1 skoXC1 (-1/6))))<=0]/\[[(skoXC1 skoXC1 (-1/6))<=1]/\[[(skoXC1 (-1+(skoXC1 skoXC1 (1/3))))<=0]/\[[skoXC1<7/8]/\[[0<skoXC1]/\[[-3<(skoXC1 skoXC1 (-1/2))]/\[[(skoXC1 skoXC1 (1/2))<=3]/\[[(skoXC1 skoXC1 (24+(skoXC1 skoXC1 (-10+(skoXC1 skoXC1)))))<=16]/\[[-48<(skoXC1 skoXC1 (-80+(skoXC1 skoXC1 (40+(skoXC1 skoXC1 (-6+(skoXC1 skoXC1 (1/8))))))))]/\[[(skoXC1 skoXC1 (80+(skoXC1 skoXC1 (-40+(skoXC1 skoXC1 (6+(skoXC1 skoXC1 (-1/8))))))))<=48]/\[0<(skoXC1 skoXC1)]]]]]]]]]]]]]]]]].

% In SMTLib2 format:
(declare-fun skoXC1 () Real) (assert (and (<= (* skoXC1 (* skoXC1 (* skoXC1 (* skoXC1 (+ (/ (- 80.) 3.) (* skoXC1 (* skoXC1 (+ (/ 128. 3.) (* skoXC1 (* skoXC1 (+ (/ (- 55.) 3.) (* skoXC1 (* skoXC1 (/ 5. 3.)))))))))))))) 0.) (and (> (* skoXC1 (* skoXC1 (+ (- 256.) (* skoXC1 (* skoXC1 (+ 160. (* skoXC1 (* skoXC1 (+ (- 32.) (* skoXC1 skoXC1)))))))))) (- 128.)) (and (<= (* skoXC1 (* skoXC1 (/ 1. 3.))) 1.) (and (<= (* skoXC1 (+ (- 1.) (* skoXC1 (* skoXC1 (/ (- 1.) 6.))))) 0.) (and (<= (* skoXC1 (* skoXC1 (* skoXC1 (* skoXC1 (/ (- 2.) 3.))))) 0.) (and (<= (* skoXC1 skoXC1) 2.) (and (<= (* skoXC1 (* skoXC1 (+ (/ (- 1.) 2.) (* skoXC1 (* skoXC1 (/ (- 1.) 6.)))))) 0.) (and (<= (* skoXC1 (* skoXC1 (/ (- 1.) 6.))) 1.) (and (<= (* skoXC1 (+ (- 1.) (* skoXC1 (* skoXC1 (/ 1. 3.))))) 0.) (and (> (/ 7. 8.) skoXC1) (and (> skoXC1 0.) (and (> (* skoXC1 (* skoXC1 (/ (- 1.) 2.))) (- 3.)) (and (<= (* skoXC1 (* skoXC1 (/ 1. 2.))) 3.) (and (<= (* skoXC1 (* skoXC1 (+ 24. (* skoXC1 (* skoXC1 (+ (- 10.) (* skoXC1 skoXC1))))))) 16.) (and (> (* skoXC1 (* skoXC1 (+ (- 80.) (* skoXC1 (* skoXC1 (+ 40. (* skoXC1 (* skoXC1 (+ (- 6.) (* skoXC1 (* skoXC1 (/ 1. 8.)))))))))))) (- 48.)) (and (<= (* skoXC1 (* skoXC1 (+ 80. (* skoXC1 (* skoXC1 (+ (- 40.) (* skoXC1 (* skoXC1 (+ 6. (* skoXC1 (* skoXC1 (/ (- 1.) 8.)))))))))))) 48.) (> (* skoXC1 skoXC1) 0.))))))))))))))))))

% In GRF format:
(sequent " MetiTarski formula " (antecedent (<= (* skoXC1 (* skoXC1 (* skoXC1 (* skoXC1 (+ (/ (- 80.) 3.) (* skoXC1 (* skoXC1 (+ (/ 128. 3.) (* skoXC1 (* skoXC1 (+ (/ (- 55.) 3.) (* skoXC1 (* skoXC1 (/ 5. 3.)))))))))))))) 0.) (> (* skoXC1 (* skoXC1 (+ (- 256.) (* skoXC1 (* skoXC1 (+ 160. (* skoXC1 (* skoXC1 (+ (- 32.) (* skoXC1 skoXC1)))))))))) (- 128.)) (<= (* skoXC1 (* skoXC1 (/ 1. 3.))) 1.) (<= (* skoXC1 (+ (- 1.) (* skoXC1 (* skoXC1 (/ (- 1.) 6.))))) 0.) (<= (* skoXC1 (* skoXC1 (* skoXC1 (* skoXC1 (/ (- 2.) 3.))))) 0.) (<= (* skoXC1 skoXC1) 2.) (<= (* skoXC1 (* skoXC1 (+ (/ (- 1.) 2.) (* skoXC1 (* skoXC1 (/ (- 1.) 6.)))))) 0.) (<= (* skoXC1 (* skoXC1 (/ (- 1.) 6.))) 1.) (<= (* skoXC1 (+ (- 1.) (* skoXC1 (* skoXC1 (/ 1. 3.))))) 0.) (> (/ 7. 8.) skoXC1) (> skoXC1 0.) (> (* skoXC1 (* skoXC1 (/ (- 1.) 2.))) (- 3.)) (<= (* skoXC1 (* skoXC1 (/ 1. 2.))) 3.) (<= (* skoXC1 (* skoXC1 (+ 24. (* skoXC1 (* skoXC1 (+ (- 10.) (* skoXC1 skoXC1))))))) 16.) (> (* skoXC1 (* skoXC1 (+ (- 80.) (* skoXC1 (* skoXC1 (+ 40. (* skoXC1 (* skoXC1 (+ (- 6.) (* skoXC1 (* skoXC1 (/ 1. 8.)))))))))))) (- 48.)) (<= (* skoXC1 (* skoXC1 (+ 80. (* skoXC1 (* skoXC1 (+ (- 40.) (* skoXC1 (* skoXC1 (+ 6. (* skoXC1 (* skoXC1 (/ (- 1.) 8.)))))))))))) 48.)) (succedent (<= (* skoXC1 skoXC1) 0.)))
-----[end problem]-----

-----[begin problem]-----
% In Mathematica format:
Timing[Resolve[Exists[{skoXC1}, And[skoXC1*skoXC1*(256+skoXC1*skoXC1*(-160+skoXC1*skoXC1*(32+skoXC1*skoXC1*-1)))<=128,skoXC1*skoXC1*(1/3)<=1,skoXC1*(-1+skoXC1*skoXC1*(-1/6))<=0,skoXC1*skoXC1*skoXC1*skoXC1*(-2/3)<=0,skoXC1*skoXC1<=2,skoXC1*skoXC1*((-1/2)+skoXC1*skoXC1*(-1/6))<=0,skoXC1*skoXC1*(-1/6)<=1,skoXC1*(-1+skoXC1*skoXC1*(1/3))<=0,(7/8)>skoXC1,skoXC1>0,skoXC1*skoXC1*(-1/2)>-3,skoXC1*skoXC1*(1/2)<=3,skoXC1*skoXC1*(24+skoXC1*skoXC1*(-10+skoXC1*skoXC1))<=16,skoXC1*skoXC1*(-80+skoXC1*skoXC1*(40+skoXC1*skoXC1*(-6+skoXC1*skoXC1*(1/8))))>-48,skoXC1*skoXC1*(80+skoXC1*skoXC1*(-40+skoXC1*skoXC1*(6+skoXC1*skoXC1*(-1/8))))<=48,skoXC1*skoXC1>0]], Reals]]

% In QepcadB format:
(E skoXC1) [[(skoXC1 skoXC1 (256+(skoXC1 skoXC1 (-160+(skoXC1 skoXC1 (32+(skoXC1 skoXC1 (-1))))))))<=128]/\[[(skoXC1 skoXC1 (1/3))<=1]/\[[(skoXC1 (-1+(skoXC1 skoXC1 (-1/6))))<=0]/\[[(skoXC1 skoXC1 skoXC1 skoXC1 (-2/3))<=0]/\[[(skoXC1 skoXC1)<=2]/\[[(skoXC1 skoXC1 (-1/2+(skoXC1 skoXC1 (-1/6))))<=0]/\[[(skoXC1 skoXC1 (-1/6))<=1]/\[[(skoXC1 (-1+(skoXC1 skoXC1 (1/3))))<=0]/\[[skoXC1<7/8]/\[[0<skoXC1]/\[[-3<(skoXC1 skoXC1 (-1/2))]/\[[(skoXC1 skoXC1 (1/2))<=3]/\[[(skoXC1 skoXC1 (24+(skoXC1 skoXC1 (-10+(skoXC1 skoXC1)))))<=16]/\[[-48<(skoXC1 skoXC1 (-80+(skoXC1 skoXC1 (40+(skoXC1 skoXC1 (-6+(skoXC1 skoXC1 (1/8))))))))]/\[[(skoXC1 skoXC1 (80+(skoXC1 skoXC1 (-40+(skoXC1 skoXC1 (6+(skoXC1 skoXC1 (-1/8))))))))<=48]/\[0<(skoXC1 skoXC1)]]]]]]]]]]]]]]]].

% In SMTLib2 format:
(declare-fun skoXC1 () Real) (assert (and (<= (* skoXC1 (* skoXC1 (+ 256. (* skoXC1 (* skoXC1 (+ (- 160.) (* skoXC1 (* skoXC1 (+ 32. (* skoXC1 (* skoXC1 (- 1.)))))))))))) 128.) (and (<= (* skoXC1 (* skoXC1 (/ 1. 3.))) 1.) (and (<= (* skoXC1 (+ (- 1.) (* skoXC1 (* skoXC1 (/ (- 1.) 6.))))) 0.) (and (<= (* skoXC1 (* skoXC1 (* skoXC1 (* skoXC1 (/ (- 2.) 3.))))) 0.) (and (<= (* skoXC1 skoXC1) 2.) (and (<= (* skoXC1 (* skoXC1 (+ (/ (- 1.) 2.) (* skoXC1 (* skoXC1 (/ (- 1.) 6.)))))) 0.) (and (<= (* skoXC1 (* skoXC1 (/ (- 1.) 6.))) 1.) (and (<= (* skoXC1 (+ (- 1.) (* skoXC1 (* skoXC1 (/ 1. 3.))))) 0.) (and (> (/ 7. 8.) skoXC1) (and (> skoXC1 0.) (and (> (* skoXC1 (* skoXC1 (/ (- 1.) 2.))) (- 3.)) (and (<= (* skoXC1 (* skoXC1 (/ 1. 2.))) 3.) (and (<= (* skoXC1 (* skoXC1 (+ 24. (* skoXC1 (* skoXC1 (+ (- 10.) (* skoXC1 skoXC1))))))) 16.) (and (> (* skoXC1 (* skoXC1 (+ (- 80.) (* skoXC1 (* skoXC1 (+ 40. (* skoXC1 (* skoXC1 (+ (- 6.) (* skoXC1 (* skoXC1 (/ 1. 8.)))))))))))) (- 48.)) (and (<= (* skoXC1 (* skoXC1 (+ 80. (* skoXC1 (* skoXC1 (+ (- 40.) (* skoXC1 (* skoXC1 (+ 6. (* skoXC1 (* skoXC1 (/ (- 1.) 8.)))))))))))) 48.) (> (* skoXC1 skoXC1) 0.)))))))))))))))))

% In GRF format:
(sequent " MetiTarski formula " (antecedent (<= (* skoXC1 (* skoXC1 (+ 256. (* skoXC1 (* skoXC1 (+ (- 160.) (* skoXC1 (* skoXC1 (+ 32. (* skoXC1 (* skoXC1 (- 1.)))))))))))) 128.) (<= (* skoXC1 (* skoXC1 (/ 1. 3.))) 1.) (<= (* skoXC1 (+ (- 1.) (* skoXC1 (* skoXC1 (/ (- 1.) 6.))))) 0.) (<= (* skoXC1 (* skoXC1 (* skoXC1 (* skoXC1 (/ (- 2.) 3.))))) 0.) (<= (* skoXC1 skoXC1) 2.) (<= (* skoXC1 (* skoXC1 (+ (/ (- 1.) 2.) (* skoXC1 (* skoXC1 (/ (- 1.) 6.)))))) 0.) (<= (* skoXC1 (* skoXC1 (/ (- 1.) 6.))) 1.) (<= (* skoXC1 (+ (- 1.) (* skoXC1 (* skoXC1 (/ 1. 3.))))) 0.) (> (/ 7. 8.) skoXC1) (> skoXC1 0.) (> (* skoXC1 (* skoXC1 (/ (- 1.) 2.))) (- 3.)) (<= (* skoXC1 (* skoXC1 (/ 1. 2.))) 3.) (<= (* skoXC1 (* skoXC1 (+ 24. (* skoXC1 (* skoXC1 (+ (- 10.) (* skoXC1 skoXC1))))))) 16.) (> (* skoXC1 (* skoXC1 (+ (- 80.) (* skoXC1 (* skoXC1 (+ 40. (* skoXC1 (* skoXC1 (+ (- 6.) (* skoXC1 (* skoXC1 (/ 1. 8.)))))))))))) (- 48.)) (<= (* skoXC1 (* skoXC1 (+ 80. (* skoXC1 (* skoXC1 (+ (- 40.) (* skoXC1 (* skoXC1 (+ 6. (* skoXC1 (* skoXC1 (/ (- 1.) 8.)))))))))))) 48.)) (succedent (<= (* skoXC1 skoXC1) 0.)))
-----[end problem]-----

-----[begin problem]-----
% In Mathematica format:
Timing[Resolve[Exists[{skoXC1}, And[skoXC1*skoXC1*skoXC1*skoXC1*((-80/3)+skoXC1*skoXC1*((128/3)+skoXC1*skoXC1*((-55/3)+skoXC1*skoXC1*(5/3))))<=0,skoXC1*skoXC1*(256+skoXC1*skoXC1*(-160+skoXC1*skoXC1*(32+skoXC1*skoXC1*-1)))<=128,skoXC1*skoXC1*(1/3)<=1,skoXC1*(-1+skoXC1*skoXC1*(-1/6))<=0,skoXC1*skoXC1*skoXC1*skoXC1*(-2/3)<=0,skoXC1*skoXC1<=2,skoXC1*skoXC1*((-1/2)+skoXC1*skoXC1*(-1/6))<=0,skoXC1*skoXC1*(-1/6)<=1,skoXC1*(-1+skoXC1*skoXC1*(1/3))<=0,(7/8)>skoXC1,skoXC1>0,skoXC1*skoXC1*(-1/2)>-3,skoXC1*skoXC1*(1/2)<=3,skoXC1*skoXC1*(24+skoXC1*skoXC1*(-10+skoXC1*skoXC1))<=16,skoXC1*skoXC1*(-80+skoXC1*skoXC1*(40+skoXC1*skoXC1*(-6+skoXC1*skoXC1*(1/8))))>-48,skoXC1*skoXC1*(80+skoXC1*skoXC1*(-40+skoXC1*skoXC1*(6+skoXC1*skoXC1*(-1/8))))<=48,skoXC1*skoXC1>0]], Reals]]

% In QepcadB format:
(E skoXC1) [[(skoXC1 skoXC1 skoXC1 skoXC1 (-80/3+(skoXC1 skoXC1 (128/3+(skoXC1 skoXC1 (-55/3+(skoXC1 skoXC1 (5/3))))))))<=0]/\[[(skoXC1 skoXC1 (256+(skoXC1 skoXC1 (-160+(skoXC1 skoXC1 (32+(skoXC1 skoXC1 (-1))))))))<=128]/\[[(skoXC1 skoXC1 (1/3))<=1]/\[[(skoXC1 (-1+(skoXC1 skoXC1 (-1/6))))<=0]/\[[(skoXC1 skoXC1 skoXC1 skoXC1 (-2/3))<=0]/\[[(skoXC1 skoXC1)<=2]/\[[(skoXC1 skoXC1 (-1/2+(skoXC1 skoXC1 (-1/6))))<=0]/\[[(skoXC1 skoXC1 (-1/6))<=1]/\[[(skoXC1 (-1+(skoXC1 skoXC1 (1/3))))<=0]/\[[skoXC1<7/8]/\[[0<skoXC1]/\[[-3<(skoXC1 skoXC1 (-1/2))]/\[[(skoXC1 skoXC1 (1/2))<=3]/\[[(skoXC1 skoXC1 (24+(skoXC1 skoXC1 (-10+(skoXC1 skoXC1)))))<=16]/\[[-48<(skoXC1 skoXC1 (-80+(skoXC1 skoXC1 (40+(skoXC1 skoXC1 (-6+(skoXC1 skoXC1 (1/8))))))))]/\[[(skoXC1 skoXC1 (80+(skoXC1 skoXC1 (-40+(skoXC1 skoXC1 (6+(skoXC1 skoXC1 (-1/8))))))))<=48]/\[0<(skoXC1 skoXC1)]]]]]]]]]]]]]]]]].

% In SMTLib2 format:
(declare-fun skoXC1 () Real) (assert (and (<= (* skoXC1 (* skoXC1 (* skoXC1 (* skoXC1 (+ (/ (- 80.) 3.) (* skoXC1 (* skoXC1 (+ (/ 128. 3.) (* skoXC1 (* skoXC1 (+ (/ (- 55.) 3.) (* skoXC1 (* skoXC1 (/ 5. 3.)))))))))))))) 0.) (and (<= (* skoXC1 (* skoXC1 (+ 256. (* skoXC1 (* skoXC1 (+ (- 160.) (* skoXC1 (* skoXC1 (+ 32. (* skoXC1 (* skoXC1 (- 1.)))))))))))) 128.) (and (<= (* skoXC1 (* skoXC1 (/ 1. 3.))) 1.) (and (<= (* skoXC1 (+ (- 1.) (* skoXC1 (* skoXC1 (/ (- 1.) 6.))))) 0.) (and (<= (* skoXC1 (* skoXC1 (* skoXC1 (* skoXC1 (/ (- 2.) 3.))))) 0.) (and (<= (* skoXC1 skoXC1) 2.) (and (<= (* skoXC1 (* skoXC1 (+ (/ (- 1.) 2.) (* skoXC1 (* skoXC1 (/ (- 1.) 6.)))))) 0.) (and (<= (* skoXC1 (* skoXC1 (/ (- 1.) 6.))) 1.) (and (<= (* skoXC1 (+ (- 1.) (* skoXC1 (* skoXC1 (/ 1. 3.))))) 0.) (and (> (/ 7. 8.) skoXC1) (and (> skoXC1 0.) (and (> (* skoXC1 (* skoXC1 (/ (- 1.) 2.))) (- 3.)) (and (<= (* skoXC1 (* skoXC1 (/ 1. 2.))) 3.) (and (<= (* skoXC1 (* skoXC1 (+ 24. (* skoXC1 (* skoXC1 (+ (- 10.) (* skoXC1 skoXC1))))))) 16.) (and (> (* skoXC1 (* skoXC1 (+ (- 80.) (* skoXC1 (* skoXC1 (+ 40. (* skoXC1 (* skoXC1 (+ (- 6.) (* skoXC1 (* skoXC1 (/ 1. 8.)))))))))))) (- 48.)) (and (<= (* skoXC1 (* skoXC1 (+ 80. (* skoXC1 (* skoXC1 (+ (- 40.) (* skoXC1 (* skoXC1 (+ 6. (* skoXC1 (* skoXC1 (/ (- 1.) 8.)))))))))))) 48.) (> (* skoXC1 skoXC1) 0.))))))))))))))))))

% In GRF format:
(sequent " MetiTarski formula " (antecedent (<= (* skoXC1 (* skoXC1 (* skoXC1 (* skoXC1 (+ (/ (- 80.) 3.) (* skoXC1 (* skoXC1 (+ (/ 128. 3.) (* skoXC1 (* skoXC1 (+ (/ (- 55.) 3.) (* skoXC1 (* skoXC1 (/ 5. 3.)))))))))))))) 0.) (<= (* skoXC1 (* skoXC1 (+ 256. (* skoXC1 (* skoXC1 (+ (- 160.) (* skoXC1 (* skoXC1 (+ 32. (* skoXC1 (* skoXC1 (- 1.)))))))))))) 128.) (<= (* skoXC1 (* skoXC1 (/ 1. 3.))) 1.) (<= (* skoXC1 (+ (- 1.) (* skoXC1 (* skoXC1 (/ (- 1.) 6.))))) 0.) (<= (* skoXC1 (* skoXC1 (* skoXC1 (* skoXC1 (/ (- 2.) 3.))))) 0.) (<= (* skoXC1 skoXC1) 2.) (<= (* skoXC1 (* skoXC1 (+ (/ (- 1.) 2.) (* skoXC1 (* skoXC1 (/ (- 1.) 6.)))))) 0.) (<= (* skoXC1 (* skoXC1 (/ (- 1.) 6.))) 1.) (<= (* skoXC1 (+ (- 1.) (* skoXC1 (* skoXC1 (/ 1. 3.))))) 0.) (> (/ 7. 8.) skoXC1) (> skoXC1 0.) (> (* skoXC1 (* skoXC1 (/ (- 1.) 2.))) (- 3.)) (<= (* skoXC1 (* skoXC1 (/ 1. 2.))) 3.) (<= (* skoXC1 (* skoXC1 (+ 24. (* skoXC1 (* skoXC1 (+ (- 10.) (* skoXC1 skoXC1))))))) 16.) (> (* skoXC1 (* skoXC1 (+ (- 80.) (* skoXC1 (* skoXC1 (+ 40. (* skoXC1 (* skoXC1 (+ (- 6.) (* skoXC1 (* skoXC1 (/ 1. 8.)))))))))))) (- 48.)) (<= (* skoXC1 (* skoXC1 (+ 80. (* skoXC1 (* skoXC1 (+ (- 40.) (* skoXC1 (* skoXC1 (+ 6. (* skoXC1 (* skoXC1 (/ (- 1.) 8.)))))))))))) 48.)) (succedent (<= (* skoXC1 skoXC1) 0.)))
-----[end problem]-----

-----[begin problem]-----
% In Mathematica format:
Timing[Resolve[Exists[{skoXC1}, And[skoXC1*skoXC1*(-1/6)<=1,skoXC1*skoXC1*skoXC1*skoXC1*((-80/3)+skoXC1*skoXC1*((128/3)+skoXC1*skoXC1*((-55/3)+skoXC1*skoXC1*(5/3))))<=0,skoXC1*skoXC1*(256+skoXC1*skoXC1*(-160+skoXC1*skoXC1*(32+skoXC1*skoXC1*-1)))<=128,skoXC1*skoXC1*(1/3)<=1,skoXC1*(-1+skoXC1*skoXC1*(-1/6))<=0,skoXC1*skoXC1*skoXC1*skoXC1*(-2/3)<=0,skoXC1*skoXC1<=2,skoXC1*skoXC1*((-1/2)+skoXC1*skoXC1*(-1/6))<=0,skoXC1*skoXC1*(-1/6)<=1,skoXC1*(-1+skoXC1*skoXC1*(1/3))<=0,(7/8)>skoXC1,skoXC1>0,skoXC1*skoXC1*(-1/2)>-3,skoXC1*skoXC1*(1/2)<=3,skoXC1*skoXC1*(24+skoXC1*skoXC1*(-10+skoXC1*skoXC1))<=16,skoXC1*skoXC1*(-80+skoXC1*skoXC1*(40+skoXC1*skoXC1*(-6+skoXC1*skoXC1*(1/8))))>-48,skoXC1*skoXC1*(80+skoXC1*skoXC1*(-40+skoXC1*skoXC1*(6+skoXC1*skoXC1*(-1/8))))<=48,skoXC1*skoXC1>0]], Reals]]

% In QepcadB format:
(E skoXC1) [[(skoXC1 skoXC1 (-1/6))<=1]/\[[(skoXC1 skoXC1 skoXC1 skoXC1 (-80/3+(skoXC1 skoXC1 (128/3+(skoXC1 skoXC1 (-55/3+(skoXC1 skoXC1 (5/3))))))))<=0]/\[[(skoXC1 skoXC1 (256+(skoXC1 skoXC1 (-160+(skoXC1 skoXC1 (32+(skoXC1 skoXC1 (-1))))))))<=128]/\[[(skoXC1 skoXC1 (1/3))<=1]/\[[(skoXC1 (-1+(skoXC1 skoXC1 (-1/6))))<=0]/\[[(skoXC1 skoXC1 skoXC1 skoXC1 (-2/3))<=0]/\[[(skoXC1 skoXC1)<=2]/\[[(skoXC1 skoXC1 (-1/2+(skoXC1 skoXC1 (-1/6))))<=0]/\[[(skoXC1 skoXC1 (-1/6))<=1]/\[[(skoXC1 (-1+(skoXC1 skoXC1 (1/3))))<=0]/\[[skoXC1<7/8]/\[[0<skoXC1]/\[[-3<(skoXC1 skoXC1 (-1/2))]/\[[(skoXC1 skoXC1 (1/2))<=3]/\[[(skoXC1 skoXC1 (24+(skoXC1 skoXC1 (-10+(skoXC1 skoXC1)))))<=16]/\[[-48<(skoXC1 skoXC1 (-80+(skoXC1 skoXC1 (40+(skoXC1 skoXC1 (-6+(skoXC1 skoXC1 (1/8))))))))]/\[[(skoXC1 skoXC1 (80+(skoXC1 skoXC1 (-40+(skoXC1 skoXC1 (6+(skoXC1 skoXC1 (-1/8))))))))<=48]/\[0<(skoXC1 skoXC1)]]]]]]]]]]]]]]]]]].

% In SMTLib2 format:
(declare-fun skoXC1 () Real) (assert (and (<= (* skoXC1 (* skoXC1 (/ (- 1.) 6.))) 1.) (and (<= (* skoXC1 (* skoXC1 (* skoXC1 (* skoXC1 (+ (/ (- 80.) 3.) (* skoXC1 (* skoXC1 (+ (/ 128. 3.) (* skoXC1 (* skoXC1 (+ (/ (- 55.) 3.) (* skoXC1 (* skoXC1 (/ 5. 3.)))))))))))))) 0.) (and (<= (* skoXC1 (* skoXC1 (+ 256. (* skoXC1 (* skoXC1 (+ (- 160.) (* skoXC1 (* skoXC1 (+ 32. (* skoXC1 (* skoXC1 (- 1.)))))))))))) 128.) (and (<= (* skoXC1 (* skoXC1 (/ 1. 3.))) 1.) (and (<= (* skoXC1 (+ (- 1.) (* skoXC1 (* skoXC1 (/ (- 1.) 6.))))) 0.) (and (<= (* skoXC1 (* skoXC1 (* skoXC1 (* skoXC1 (/ (- 2.) 3.))))) 0.) (and (<= (* skoXC1 skoXC1) 2.) (and (<= (* skoXC1 (* skoXC1 (+ (/ (- 1.) 2.) (* skoXC1 (* skoXC1 (/ (- 1.) 6.)))))) 0.) (and (<= (* skoXC1 (* skoXC1 (/ (- 1.) 6.))) 1.) (and (<= (* skoXC1 (+ (- 1.) (* skoXC1 (* skoXC1 (/ 1. 3.))))) 0.) (and (> (/ 7. 8.) skoXC1) (and (> skoXC1 0.) (and (> (* skoXC1 (* skoXC1 (/ (- 1.) 2.))) (- 3.)) (and (<= (* skoXC1 (* skoXC1 (/ 1. 2.))) 3.) (and (<= (* skoXC1 (* skoXC1 (+ 24. (* skoXC1 (* skoXC1 (+ (- 10.) (* skoXC1 skoXC1))))))) 16.) (and (> (* skoXC1 (* skoXC1 (+ (- 80.) (* skoXC1 (* skoXC1 (+ 40. (* skoXC1 (* skoXC1 (+ (- 6.) (* skoXC1 (* skoXC1 (/ 1. 8.)))))))))))) (- 48.)) (and (<= (* skoXC1 (* skoXC1 (+ 80. (* skoXC1 (* skoXC1 (+ (- 40.) (* skoXC1 (* skoXC1 (+ 6. (* skoXC1 (* skoXC1 (/ (- 1.) 8.)))))))))))) 48.) (> (* skoXC1 skoXC1) 0.)))))))))))))))))))

% In GRF format:
(sequent " MetiTarski formula " (antecedent (<= (* skoXC1 (* skoXC1 (/ (- 1.) 6.))) 1.) (<= (* skoXC1 (* skoXC1 (* skoXC1 (* skoXC1 (+ (/ (- 80.) 3.) (* skoXC1 (* skoXC1 (+ (/ 128. 3.) (* skoXC1 (* skoXC1 (+ (/ (- 55.) 3.) (* skoXC1 (* skoXC1 (/ 5. 3.)))))))))))))) 0.) (<= (* skoXC1 (* skoXC1 (+ 256. (* skoXC1 (* skoXC1 (+ (- 160.) (* skoXC1 (* skoXC1 (+ 32. (* skoXC1 (* skoXC1 (- 1.)))))))))))) 128.) (<= (* skoXC1 (* skoXC1 (/ 1. 3.))) 1.) (<= (* skoXC1 (+ (- 1.) (* skoXC1 (* skoXC1 (/ (- 1.) 6.))))) 0.) (<= (* skoXC1 (* skoXC1 (* skoXC1 (* skoXC1 (/ (- 2.) 3.))))) 0.) (<= (* skoXC1 skoXC1) 2.) (<= (* skoXC1 (* skoXC1 (+ (/ (- 1.) 2.) (* skoXC1 (* skoXC1 (/ (- 1.) 6.)))))) 0.) (<= (* skoXC1 (* skoXC1 (/ (- 1.) 6.))) 1.) (<= (* skoXC1 (+ (- 1.) (* skoXC1 (* skoXC1 (/ 1. 3.))))) 0.) (> (/ 7. 8.) skoXC1) (> skoXC1 0.) (> (* skoXC1 (* skoXC1 (/ (- 1.) 2.))) (- 3.)) (<= (* skoXC1 (* skoXC1 (/ 1. 2.))) 3.) (<= (* skoXC1 (* skoXC1 (+ 24. (* skoXC1 (* skoXC1 (+ (- 10.) (* skoXC1 skoXC1))))))) 16.) (> (* skoXC1 (* skoXC1 (+ (- 80.) (* skoXC1 (* skoXC1 (+ 40. (* skoXC1 (* skoXC1 (+ (- 6.) (* skoXC1 (* skoXC1 (/ 1. 8.)))))))))))) (- 48.)) (<= (* skoXC1 (* skoXC1 (+ 80. (* skoXC1 (* skoXC1 (+ (- 40.) (* skoXC1 (* skoXC1 (+ 6. (* skoXC1 (* skoXC1 (/ (- 1.) 8.)))))))))))) 48.)) (succedent (<= (* skoXC1 skoXC1) 0.)))
-----[end problem]-----

-----[begin problem]-----
% In Mathematica format:
Timing[Resolve[Exists[{skoXC1}, And[skoXC1*skoXC1*skoXC1*skoXC1*((-80/3)+skoXC1*skoXC1*((128/3)+skoXC1*skoXC1*((-55/3)+skoXC1*skoXC1*(5/3))))<=0,skoXC1*skoXC1*(1/6)>-1,skoXC1*skoXC1*skoXC1*skoXC1*((-80/3)+skoXC1*skoXC1*((128/3)+skoXC1*skoXC1*((-55/3)+skoXC1*skoXC1*(5/3))))<=0,skoXC1*skoXC1*(256+skoXC1*skoXC1*(-160+skoXC1*skoXC1*(32+skoXC1*skoXC1*-1)))<=128,skoXC1*skoXC1*(1/3)<=1,skoXC1*(-1+skoXC1*skoXC1*(-1/6))<=0,skoXC1*skoXC1*skoXC1*skoXC1*(-2/3)<=0,skoXC1*skoXC1<=2,skoXC1*skoXC1*((-1/2)+skoXC1*skoXC1*(-1/6))<=0,skoXC1*skoXC1*(-1/6)<=1,skoXC1*(-1+skoXC1*skoXC1*(1/3))<=0,(7/8)>skoXC1,skoXC1>0,skoXC1*skoXC1*(-1/2)>-3,skoXC1*skoXC1*(1/2)<=3,skoXC1*skoXC1*(24+skoXC1*skoXC1*(-10+skoXC1*skoXC1))<=16,skoXC1*skoXC1*(-80+skoXC1*skoXC1*(40+skoXC1*skoXC1*(-6+skoXC1*skoXC1*(1/8))))>-48,skoXC1*skoXC1*(80+skoXC1*skoXC1*(-40+skoXC1*skoXC1*(6+skoXC1*skoXC1*(-1/8))))<=48,skoXC1*skoXC1>0]], Reals]]

% In QepcadB format:
(E skoXC1) [[(skoXC1 skoXC1 skoXC1 skoXC1 (-80/3+(skoXC1 skoXC1 (128/3+(skoXC1 skoXC1 (-55/3+(skoXC1 skoXC1 (5/3))))))))<=0]/\[[-1<(skoXC1 skoXC1 (1/6))]/\[[(skoXC1 skoXC1 skoXC1 skoXC1 (-80/3+(skoXC1 skoXC1 (128/3+(skoXC1 skoXC1 (-55/3+(skoXC1 skoXC1 (5/3))))))))<=0]/\[[(skoXC1 skoXC1 (256+(skoXC1 skoXC1 (-160+(skoXC1 skoXC1 (32+(skoXC1 skoXC1 (-1))))))))<=128]/\[[(skoXC1 skoXC1 (1/3))<=1]/\[[(skoXC1 (-1+(skoXC1 skoXC1 (-1/6))))<=0]/\[[(skoXC1 skoXC1 skoXC1 skoXC1 (-2/3))<=0]/\[[(skoXC1 skoXC1)<=2]/\[[(skoXC1 skoXC1 (-1/2+(skoXC1 skoXC1 (-1/6))))<=0]/\[[(skoXC1 skoXC1 (-1/6))<=1]/\[[(skoXC1 (-1+(skoXC1 skoXC1 (1/3))))<=0]/\[[skoXC1<7/8]/\[[0<skoXC1]/\[[-3<(skoXC1 skoXC1 (-1/2))]/\[[(skoXC1 skoXC1 (1/2))<=3]/\[[(skoXC1 skoXC1 (24+(skoXC1 skoXC1 (-10+(skoXC1 skoXC1)))))<=16]/\[[-48<(skoXC1 skoXC1 (-80+(skoXC1 skoXC1 (40+(skoXC1 skoXC1 (-6+(skoXC1 skoXC1 (1/8))))))))]/\[[(skoXC1 skoXC1 (80+(skoXC1 skoXC1 (-40+(skoXC1 skoXC1 (6+(skoXC1 skoXC1 (-1/8))))))))<=48]/\[0<(skoXC1 skoXC1)]]]]]]]]]]]]]]]]]]].

% In SMTLib2 format:
(declare-fun skoXC1 () Real) (assert (and (<= (* skoXC1 (* skoXC1 (* skoXC1 (* skoXC1 (+ (/ (- 80.) 3.) (* skoXC1 (* skoXC1 (+ (/ 128. 3.) (* skoXC1 (* skoXC1 (+ (/ (- 55.) 3.) (* skoXC1 (* skoXC1 (/ 5. 3.)))))))))))))) 0.) (and (> (* skoXC1 (* skoXC1 (/ 1. 6.))) (- 1.)) (and (<= (* skoXC1 (* skoXC1 (* skoXC1 (* skoXC1 (+ (/ (- 80.) 3.) (* skoXC1 (* skoXC1 (+ (/ 128. 3.) (* skoXC1 (* skoXC1 (+ (/ (- 55.) 3.) (* skoXC1 (* skoXC1 (/ 5. 3.)))))))))))))) 0.) (and (<= (* skoXC1 (* skoXC1 (+ 256. (* skoXC1 (* skoXC1 (+ (- 160.) (* skoXC1 (* skoXC1 (+ 32. (* skoXC1 (* skoXC1 (- 1.)))))))))))) 128.) (and (<= (* skoXC1 (* skoXC1 (/ 1. 3.))) 1.) (and (<= (* skoXC1 (+ (- 1.) (* skoXC1 (* skoXC1 (/ (- 1.) 6.))))) 0.) (and (<= (* skoXC1 (* skoXC1 (* skoXC1 (* skoXC1 (/ (- 2.) 3.))))) 0.) (and (<= (* skoXC1 skoXC1) 2.) (and (<= (* skoXC1 (* skoXC1 (+ (/ (- 1.) 2.) (* skoXC1 (* skoXC1 (/ (- 1.) 6.)))))) 0.) (and (<= (* skoXC1 (* skoXC1 (/ (- 1.) 6.))) 1.) (and (<= (* skoXC1 (+ (- 1.) (* skoXC1 (* skoXC1 (/ 1. 3.))))) 0.) (and (> (/ 7. 8.) skoXC1) (and (> skoXC1 0.) (and (> (* skoXC1 (* skoXC1 (/ (- 1.) 2.))) (- 3.)) (and (<= (* skoXC1 (* skoXC1 (/ 1. 2.))) 3.) (and (<= (* skoXC1 (* skoXC1 (+ 24. (* skoXC1 (* skoXC1 (+ (- 10.) (* skoXC1 skoXC1))))))) 16.) (and (> (* skoXC1 (* skoXC1 (+ (- 80.) (* skoXC1 (* skoXC1 (+ 40. (* skoXC1 (* skoXC1 (+ (- 6.) (* skoXC1 (* skoXC1 (/ 1. 8.)))))))))))) (- 48.)) (and (<= (* skoXC1 (* skoXC1 (+ 80. (* skoXC1 (* skoXC1 (+ (- 40.) (* skoXC1 (* skoXC1 (+ 6. (* skoXC1 (* skoXC1 (/ (- 1.) 8.)))))))))))) 48.) (> (* skoXC1 skoXC1) 0.))))))))))))))))))))

% In GRF format:
(sequent " MetiTarski formula " (antecedent (<= (* skoXC1 (* skoXC1 (* skoXC1 (* skoXC1 (+ (/ (- 80.) 3.) (* skoXC1 (* skoXC1 (+ (/ 128. 3.) (* skoXC1 (* skoXC1 (+ (/ (- 55.) 3.) (* skoXC1 (* skoXC1 (/ 5. 3.)))))))))))))) 0.) (> (* skoXC1 (* skoXC1 (/ 1. 6.))) (- 1.)) (<= (* skoXC1 (* skoXC1 (* skoXC1 (* skoXC1 (+ (/ (- 80.) 3.) (* skoXC1 (* skoXC1 (+ (/ 128. 3.) (* skoXC1 (* skoXC1 (+ (/ (- 55.) 3.) (* skoXC1 (* skoXC1 (/ 5. 3.)))))))))))))) 0.) (<= (* skoXC1 (* skoXC1 (+ 256. (* skoXC1 (* skoXC1 (+ (- 160.) (* skoXC1 (* skoXC1 (+ 32. (* skoXC1 (* skoXC1 (- 1.)))))))))))) 128.) (<= (* skoXC1 (* skoXC1 (/ 1. 3.))) 1.) (<= (* skoXC1 (+ (- 1.) (* skoXC1 (* skoXC1 (/ (- 1.) 6.))))) 0.) (<= (* skoXC1 (* skoXC1 (* skoXC1 (* skoXC1 (/ (- 2.) 3.))))) 0.) (<= (* skoXC1 skoXC1) 2.) (<= (* skoXC1 (* skoXC1 (+ (/ (- 1.) 2.) (* skoXC1 (* skoXC1 (/ (- 1.) 6.)))))) 0.) (<= (* skoXC1 (* skoXC1 (/ (- 1.) 6.))) 1.) (<= (* skoXC1 (+ (- 1.) (* skoXC1 (* skoXC1 (/ 1. 3.))))) 0.) (> (/ 7. 8.) skoXC1) (> skoXC1 0.) (> (* skoXC1 (* skoXC1 (/ (- 1.) 2.))) (- 3.)) (<= (* skoXC1 (* skoXC1 (/ 1. 2.))) 3.) (<= (* skoXC1 (* skoXC1 (+ 24. (* skoXC1 (* skoXC1 (+ (- 10.) (* skoXC1 skoXC1))))))) 16.) (> (* skoXC1 (* skoXC1 (+ (- 80.) (* skoXC1 (* skoXC1 (+ 40. (* skoXC1 (* skoXC1 (+ (- 6.) (* skoXC1 (* skoXC1 (/ 1. 8.)))))))))))) (- 48.)) (<= (* skoXC1 (* skoXC1 (+ 80. (* skoXC1 (* skoXC1 (+ (- 40.) (* skoXC1 (* skoXC1 (+ 6. (* skoXC1 (* skoXC1 (/ (- 1.) 8.)))))))))))) 48.)) (succedent (<= (* skoXC1 skoXC1) 0.)))
-----[end problem]-----

-----[begin problem]-----
% In Mathematica format:
Timing[Resolve[Exists[{skoXC1}, And[skoXC1*skoXC1*(-1/6)<=1,skoXC1*skoXC1*skoXC1*skoXC1*((-80/3)+skoXC1*skoXC1*((128/3)+skoXC1*skoXC1*((-55/3)+skoXC1*skoXC1*(5/3))))<=0,skoXC1*skoXC1*(256+skoXC1*skoXC1*(-160+skoXC1*skoXC1*(32+skoXC1*skoXC1*-1)))<=128,skoXC1*skoXC1*(1/3)<=1,skoXC1*(-1+skoXC1*skoXC1*(-1/6))<=0,skoXC1*skoXC1*skoXC1*skoXC1*(-2/3)<=0,skoXC1*skoXC1<=2,skoXC1*skoXC1*((-1/2)+skoXC1*skoXC1*(-1/6))<=0,skoXC1*skoXC1*(-1/6)<=1,skoXC1*(-1+skoXC1*skoXC1*(1/3))<=0,(7/8)>skoXC1,skoXC1>0,skoXC1*skoXC1*(-1/2)>-3,skoXC1*skoXC1*(1/2)<=3,skoXC1*skoXC1*(24+skoXC1*skoXC1*(-10+skoXC1*skoXC1))<=16,skoXC1*skoXC1*(-80+skoXC1*skoXC1*(40+skoXC1*skoXC1*(-6+skoXC1*skoXC1*(1/8))))>-48,skoXC1*skoXC1*(80+skoXC1*skoXC1*(-40+skoXC1*skoXC1*(6+skoXC1*skoXC1*(-1/8))))<=48,skoXC1*skoXC1>0]], Reals]]

% In QepcadB format:
(E skoXC1) [[(skoXC1 skoXC1 (-1/6))<=1]/\[[(skoXC1 skoXC1 skoXC1 skoXC1 (-80/3+(skoXC1 skoXC1 (128/3+(skoXC1 skoXC1 (-55/3+(skoXC1 skoXC1 (5/3))))))))<=0]/\[[(skoXC1 skoXC1 (256+(skoXC1 skoXC1 (-160+(skoXC1 skoXC1 (32+(skoXC1 skoXC1 (-1))))))))<=128]/\[[(skoXC1 skoXC1 (1/3))<=1]/\[[(skoXC1 (-1+(skoXC1 skoXC1 (-1/6))))<=0]/\[[(skoXC1 skoXC1 skoXC1 skoXC1 (-2/3))<=0]/\[[(skoXC1 skoXC1)<=2]/\[[(skoXC1 skoXC1 (-1/2+(skoXC1 skoXC1 (-1/6))))<=0]/\[[(skoXC1 skoXC1 (-1/6))<=1]/\[[(skoXC1 (-1+(skoXC1 skoXC1 (1/3))))<=0]/\[[skoXC1<7/8]/\[[0<skoXC1]/\[[-3<(skoXC1 skoXC1 (-1/2))]/\[[(skoXC1 skoXC1 (1/2))<=3]/\[[(skoXC1 skoXC1 (24+(skoXC1 skoXC1 (-10+(skoXC1 skoXC1)))))<=16]/\[[-48<(skoXC1 skoXC1 (-80+(skoXC1 skoXC1 (40+(skoXC1 skoXC1 (-6+(skoXC1 skoXC1 (1/8))))))))]/\[[(skoXC1 skoXC1 (80+(skoXC1 skoXC1 (-40+(skoXC1 skoXC1 (6+(skoXC1 skoXC1 (-1/8))))))))<=48]/\[0<(skoXC1 skoXC1)]]]]]]]]]]]]]]]]]].

% In SMTLib2 format:
(declare-fun skoXC1 () Real) (assert (and (<= (* skoXC1 (* skoXC1 (/ (- 1.) 6.))) 1.) (and (<= (* skoXC1 (* skoXC1 (* skoXC1 (* skoXC1 (+ (/ (- 80.) 3.) (* skoXC1 (* skoXC1 (+ (/ 128. 3.) (* skoXC1 (* skoXC1 (+ (/ (- 55.) 3.) (* skoXC1 (* skoXC1 (/ 5. 3.)))))))))))))) 0.) (and (<= (* skoXC1 (* skoXC1 (+ 256. (* skoXC1 (* skoXC1 (+ (- 160.) (* skoXC1 (* skoXC1 (+ 32. (* skoXC1 (* skoXC1 (- 1.)))))))))))) 128.) (and (<= (* skoXC1 (* skoXC1 (/ 1. 3.))) 1.) (and (<= (* skoXC1 (+ (- 1.) (* skoXC1 (* skoXC1 (/ (- 1.) 6.))))) 0.) (and (<= (* skoXC1 (* skoXC1 (* skoXC1 (* skoXC1 (/ (- 2.) 3.))))) 0.) (and (<= (* skoXC1 skoXC1) 2.) (and (<= (* skoXC1 (* skoXC1 (+ (/ (- 1.) 2.) (* skoXC1 (* skoXC1 (/ (- 1.) 6.)))))) 0.) (and (<= (* skoXC1 (* skoXC1 (/ (- 1.) 6.))) 1.) (and (<= (* skoXC1 (+ (- 1.) (* skoXC1 (* skoXC1 (/ 1. 3.))))) 0.) (and (> (/ 7. 8.) skoXC1) (and (> skoXC1 0.) (and (> (* skoXC1 (* skoXC1 (/ (- 1.) 2.))) (- 3.)) (and (<= (* skoXC1 (* skoXC1 (/ 1. 2.))) 3.) (and (<= (* skoXC1 (* skoXC1 (+ 24. (* skoXC1 (* skoXC1 (+ (- 10.) (* skoXC1 skoXC1))))))) 16.) (and (> (* skoXC1 (* skoXC1 (+ (- 80.) (* skoXC1 (* skoXC1 (+ 40. (* skoXC1 (* skoXC1 (+ (- 6.) (* skoXC1 (* skoXC1 (/ 1. 8.)))))))))))) (- 48.)) (and (<= (* skoXC1 (* skoXC1 (+ 80. (* skoXC1 (* skoXC1 (+ (- 40.) (* skoXC1 (* skoXC1 (+ 6. (* skoXC1 (* skoXC1 (/ (- 1.) 8.)))))))))))) 48.) (> (* skoXC1 skoXC1) 0.)))))))))))))))))))

% In GRF format:
(sequent " MetiTarski formula " (antecedent (<= (* skoXC1 (* skoXC1 (/ (- 1.) 6.))) 1.) (<= (* skoXC1 (* skoXC1 (* skoXC1 (* skoXC1 (+ (/ (- 80.) 3.) (* skoXC1 (* skoXC1 (+ (/ 128. 3.) (* skoXC1 (* skoXC1 (+ (/ (- 55.) 3.) (* skoXC1 (* skoXC1 (/ 5. 3.)))))))))))))) 0.) (<= (* skoXC1 (* skoXC1 (+ 256. (* skoXC1 (* skoXC1 (+ (- 160.) (* skoXC1 (* skoXC1 (+ 32. (* skoXC1 (* skoXC1 (- 1.)))))))))))) 128.) (<= (* skoXC1 (* skoXC1 (/ 1. 3.))) 1.) (<= (* skoXC1 (+ (- 1.) (* skoXC1 (* skoXC1 (/ (- 1.) 6.))))) 0.) (<= (* skoXC1 (* skoXC1 (* skoXC1 (* skoXC1 (/ (- 2.) 3.))))) 0.) (<= (* skoXC1 skoXC1) 2.) (<= (* skoXC1 (* skoXC1 (+ (/ (- 1.) 2.) (* skoXC1 (* skoXC1 (/ (- 1.) 6.)))))) 0.) (<= (* skoXC1 (* skoXC1 (/ (- 1.) 6.))) 1.) (<= (* skoXC1 (+ (- 1.) (* skoXC1 (* skoXC1 (/ 1. 3.))))) 0.) (> (/ 7. 8.) skoXC1) (> skoXC1 0.) (> (* skoXC1 (* skoXC1 (/ (- 1.) 2.))) (- 3.)) (<= (* skoXC1 (* skoXC1 (/ 1. 2.))) 3.) (<= (* skoXC1 (* skoXC1 (+ 24. (* skoXC1 (* skoXC1 (+ (- 10.) (* skoXC1 skoXC1))))))) 16.) (> (* skoXC1 (* skoXC1 (+ (- 80.) (* skoXC1 (* skoXC1 (+ 40. (* skoXC1 (* skoXC1 (+ (- 6.) (* skoXC1 (* skoXC1 (/ 1. 8.)))))))))))) (- 48.)) (<= (* skoXC1 (* skoXC1 (+ 80. (* skoXC1 (* skoXC1 (+ (- 40.) (* skoXC1 (* skoXC1 (+ 6. (* skoXC1 (* skoXC1 (/ (- 1.) 8.)))))))))))) 48.)) (succedent (<= (* skoXC1 skoXC1) 0.)))
-----[end problem]-----

-----[begin problem]-----
% In Mathematica format:
Timing[Resolve[Exists[{skoXC1}, And[skoXC1*skoXC1*skoXC1*skoXC1*((-80/3)+skoXC1*skoXC1*((128/3)+skoXC1*skoXC1*((-55/3)+skoXC1*skoXC1*(5/3))))<=0,skoXC1*skoXC1*skoXC1*skoXC1*((-80/3)+skoXC1*skoXC1*((128/3)+skoXC1*skoXC1*((-55/3)+skoXC1*skoXC1*(5/3))))<=0,skoXC1*skoXC1*(256+skoXC1*skoXC1*(-160+skoXC1*skoXC1*(32+skoXC1*skoXC1*-1)))<=128,skoXC1*skoXC1*(1/3)<=1,skoXC1*(-1+skoXC1*skoXC1*(-1/6))<=0,skoXC1*skoXC1*skoXC1*skoXC1*(-2/3)<=0,skoXC1*skoXC1<=2,skoXC1*skoXC1*((-1/2)+skoXC1*skoXC1*(-1/6))<=0,skoXC1*skoXC1*(-1/6)<=1,skoXC1*(-1+skoXC1*skoXC1*(1/3))<=0,(7/8)>skoXC1,skoXC1>0,skoXC1*skoXC1*(-1/2)>-3,skoXC1*skoXC1*(1/2)<=3,skoXC1*skoXC1*(24+skoXC1*skoXC1*(-10+skoXC1*skoXC1))<=16,skoXC1*skoXC1*(-80+skoXC1*skoXC1*(40+skoXC1*skoXC1*(-6+skoXC1*skoXC1*(1/8))))>-48,skoXC1*skoXC1*(80+skoXC1*skoXC1*(-40+skoXC1*skoXC1*(6+skoXC1*skoXC1*(-1/8))))<=48,skoXC1*skoXC1>0]], Reals]]

% In QepcadB format:
(E skoXC1) [[(skoXC1 skoXC1 skoXC1 skoXC1 (-80/3+(skoXC1 skoXC1 (128/3+(skoXC1 skoXC1 (-55/3+(skoXC1 skoXC1 (5/3))))))))<=0]/\[[(skoXC1 skoXC1 skoXC1 skoXC1 (-80/3+(skoXC1 skoXC1 (128/3+(skoXC1 skoXC1 (-55/3+(skoXC1 skoXC1 (5/3))))))))<=0]/\[[(skoXC1 skoXC1 (256+(skoXC1 skoXC1 (-160+(skoXC1 skoXC1 (32+(skoXC1 skoXC1 (-1))))))))<=128]/\[[(skoXC1 skoXC1 (1/3))<=1]/\[[(skoXC1 (-1+(skoXC1 skoXC1 (-1/6))))<=0]/\[[(skoXC1 skoXC1 skoXC1 skoXC1 (-2/3))<=0]/\[[(skoXC1 skoXC1)<=2]/\[[(skoXC1 skoXC1 (-1/2+(skoXC1 skoXC1 (-1/6))))<=0]/\[[(skoXC1 skoXC1 (-1/6))<=1]/\[[(skoXC1 (-1+(skoXC1 skoXC1 (1/3))))<=0]/\[[skoXC1<7/8]/\[[0<skoXC1]/\[[-3<(skoXC1 skoXC1 (-1/2))]/\[[(skoXC1 skoXC1 (1/2))<=3]/\[[(skoXC1 skoXC1 (24+(skoXC1 skoXC1 (-10+(skoXC1 skoXC1)))))<=16]/\[[-48<(skoXC1 skoXC1 (-80+(skoXC1 skoXC1 (40+(skoXC1 skoXC1 (-6+(skoXC1 skoXC1 (1/8))))))))]/\[[(skoXC1 skoXC1 (80+(skoXC1 skoXC1 (-40+(skoXC1 skoXC1 (6+(skoXC1 skoXC1 (-1/8))))))))<=48]/\[0<(skoXC1 skoXC1)]]]]]]]]]]]]]]]]]].

% In SMTLib2 format:
(declare-fun skoXC1 () Real) (assert (and (<= (* skoXC1 (* skoXC1 (* skoXC1 (* skoXC1 (+ (/ (- 80.) 3.) (* skoXC1 (* skoXC1 (+ (/ 128. 3.) (* skoXC1 (* skoXC1 (+ (/ (- 55.) 3.) (* skoXC1 (* skoXC1 (/ 5. 3.)))))))))))))) 0.) (and (<= (* skoXC1 (* skoXC1 (* skoXC1 (* skoXC1 (+ (/ (- 80.) 3.) (* skoXC1 (* skoXC1 (+ (/ 128. 3.) (* skoXC1 (* skoXC1 (+ (/ (- 55.) 3.) (* skoXC1 (* skoXC1 (/ 5. 3.)))))))))))))) 0.) (and (<= (* skoXC1 (* skoXC1 (+ 256. (* skoXC1 (* skoXC1 (+ (- 160.) (* skoXC1 (* skoXC1 (+ 32. (* skoXC1 (* skoXC1 (- 1.)))))))))))) 128.) (and (<= (* skoXC1 (* skoXC1 (/ 1. 3.))) 1.) (and (<= (* skoXC1 (+ (- 1.) (* skoXC1 (* skoXC1 (/ (- 1.) 6.))))) 0.) (and (<= (* skoXC1 (* skoXC1 (* skoXC1 (* skoXC1 (/ (- 2.) 3.))))) 0.) (and (<= (* skoXC1 skoXC1) 2.) (and (<= (* skoXC1 (* skoXC1 (+ (/ (- 1.) 2.) (* skoXC1 (* skoXC1 (/ (- 1.) 6.)))))) 0.) (and (<= (* skoXC1 (* skoXC1 (/ (- 1.) 6.))) 1.) (and (<= (* skoXC1 (+ (- 1.) (* skoXC1 (* skoXC1 (/ 1. 3.))))) 0.) (and (> (/ 7. 8.) skoXC1) (and (> skoXC1 0.) (and (> (* skoXC1 (* skoXC1 (/ (- 1.) 2.))) (- 3.)) (and (<= (* skoXC1 (* skoXC1 (/ 1. 2.))) 3.) (and (<= (* skoXC1 (* skoXC1 (+ 24. (* skoXC1 (* skoXC1 (+ (- 10.) (* skoXC1 skoXC1))))))) 16.) (and (> (* skoXC1 (* skoXC1 (+ (- 80.) (* skoXC1 (* skoXC1 (+ 40. (* skoXC1 (* skoXC1 (+ (- 6.) (* skoXC1 (* skoXC1 (/ 1. 8.)))))))))))) (- 48.)) (and (<= (* skoXC1 (* skoXC1 (+ 80. (* skoXC1 (* skoXC1 (+ (- 40.) (* skoXC1 (* skoXC1 (+ 6. (* skoXC1 (* skoXC1 (/ (- 1.) 8.)))))))))))) 48.) (> (* skoXC1 skoXC1) 0.)))))))))))))))))))

% In GRF format:
(sequent " MetiTarski formula " (antecedent (<= (* skoXC1 (* skoXC1 (* skoXC1 (* skoXC1 (+ (/ (- 80.) 3.) (* skoXC1 (* skoXC1 (+ (/ 128. 3.) (* skoXC1 (* skoXC1 (+ (/ (- 55.) 3.) (* skoXC1 (* skoXC1 (/ 5. 3.)))))))))))))) 0.) (<= (* skoXC1 (* skoXC1 (* skoXC1 (* skoXC1 (+ (/ (- 80.) 3.) (* skoXC1 (* skoXC1 (+ (/ 128. 3.) (* skoXC1 (* skoXC1 (+ (/ (- 55.) 3.) (* skoXC1 (* skoXC1 (/ 5. 3.)))))))))))))) 0.) (<= (* skoXC1 (* skoXC1 (+ 256. (* skoXC1 (* skoXC1 (+ (- 160.) (* skoXC1 (* skoXC1 (+ 32. (* skoXC1 (* skoXC1 (- 1.)))))))))))) 128.) (<= (* skoXC1 (* skoXC1 (/ 1. 3.))) 1.) (<= (* skoXC1 (+ (- 1.) (* skoXC1 (* skoXC1 (/ (- 1.) 6.))))) 0.) (<= (* skoXC1 (* skoXC1 (* skoXC1 (* skoXC1 (/ (- 2.) 3.))))) 0.) (<= (* skoXC1 skoXC1) 2.) (<= (* skoXC1 (* skoXC1 (+ (/ (- 1.) 2.) (* skoXC1 (* skoXC1 (/ (- 1.) 6.)))))) 0.) (<= (* skoXC1 (* skoXC1 (/ (- 1.) 6.))) 1.) (<= (* skoXC1 (+ (- 1.) (* skoXC1 (* skoXC1 (/ 1. 3.))))) 0.) (> (/ 7. 8.) skoXC1) (> skoXC1 0.) (> (* skoXC1 (* skoXC1 (/ (- 1.) 2.))) (- 3.)) (<= (* skoXC1 (* skoXC1 (/ 1. 2.))) 3.) (<= (* skoXC1 (* skoXC1 (+ 24. (* skoXC1 (* skoXC1 (+ (- 10.) (* skoXC1 skoXC1))))))) 16.) (> (* skoXC1 (* skoXC1 (+ (- 80.) (* skoXC1 (* skoXC1 (+ 40. (* skoXC1 (* skoXC1 (+ (- 6.) (* skoXC1 (* skoXC1 (/ 1. 8.)))))))))))) (- 48.)) (<= (* skoXC1 (* skoXC1 (+ 80. (* skoXC1 (* skoXC1 (+ (- 40.) (* skoXC1 (* skoXC1 (+ 6. (* skoXC1 (* skoXC1 (/ (- 1.) 8.)))))))))))) 48.)) (succedent (<= (* skoXC1 skoXC1) 0.)))
-----[end problem]-----

-----[begin problem]-----
% In Mathematica format:
Timing[Resolve[Exists[{skoXC1}, And[skoXC1*skoXC1>0,skoXC1*skoXC1*skoXC1*skoXC1*((-80/3)+skoXC1*skoXC1*((128/3)+skoXC1*skoXC1*((-55/3)+skoXC1*skoXC1*(5/3))))<=0,skoXC1*skoXC1*(256+skoXC1*skoXC1*(-160+skoXC1*skoXC1*(32+skoXC1*skoXC1*-1)))<=128,skoXC1*skoXC1*(1/3)<=1,skoXC1*(-1+skoXC1*skoXC1*(-1/6))<=0,skoXC1*skoXC1*skoXC1*skoXC1*(-2/3)<=0,skoXC1*skoXC1<=2,skoXC1*skoXC1*((-1/2)+skoXC1*skoXC1*(-1/6))<=0,skoXC1*skoXC1*(-1/6)<=1,skoXC1*(-1+skoXC1*skoXC1*(1/3))<=0,(7/8)>skoXC1,skoXC1>0,skoXC1*skoXC1*(-1/2)>-3,skoXC1*skoXC1*(1/2)<=3,skoXC1*skoXC1*(24+skoXC1*skoXC1*(-10+skoXC1*skoXC1))<=16,skoXC1*skoXC1*(-80+skoXC1*skoXC1*(40+skoXC1*skoXC1*(-6+skoXC1*skoXC1*(1/8))))>-48,skoXC1*skoXC1*(80+skoXC1*skoXC1*(-40+skoXC1*skoXC1*(6+skoXC1*skoXC1*(-1/8))))<=48,skoXC1*skoXC1>0]], Reals]]

% In QepcadB format:
(E skoXC1) [[0<(skoXC1 skoXC1)]/\[[(skoXC1 skoXC1 skoXC1 skoXC1 (-80/3+(skoXC1 skoXC1 (128/3+(skoXC1 skoXC1 (-55/3+(skoXC1 skoXC1 (5/3))))))))<=0]/\[[(skoXC1 skoXC1 (256+(skoXC1 skoXC1 (-160+(skoXC1 skoXC1 (32+(skoXC1 skoXC1 (-1))))))))<=128]/\[[(skoXC1 skoXC1 (1/3))<=1]/\[[(skoXC1 (-1+(skoXC1 skoXC1 (-1/6))))<=0]/\[[(skoXC1 skoXC1 skoXC1 skoXC1 (-2/3))<=0]/\[[(skoXC1 skoXC1)<=2]/\[[(skoXC1 skoXC1 (-1/2+(skoXC1 skoXC1 (-1/6))))<=0]/\[[(skoXC1 skoXC1 (-1/6))<=1]/\[[(skoXC1 (-1+(skoXC1 skoXC1 (1/3))))<=0]/\[[skoXC1<7/8]/\[[0<skoXC1]/\[[-3<(skoXC1 skoXC1 (-1/2))]/\[[(skoXC1 skoXC1 (1/2))<=3]/\[[(skoXC1 skoXC1 (24+(skoXC1 skoXC1 (-10+(skoXC1 skoXC1)))))<=16]/\[[-48<(skoXC1 skoXC1 (-80+(skoXC1 skoXC1 (40+(skoXC1 skoXC1 (-6+(skoXC1 skoXC1 (1/8))))))))]/\[[(skoXC1 skoXC1 (80+(skoXC1 skoXC1 (-40+(skoXC1 skoXC1 (6+(skoXC1 skoXC1 (-1/8))))))))<=48]/\[0<(skoXC1 skoXC1)]]]]]]]]]]]]]]]]]].

% In SMTLib2 format:
(declare-fun skoXC1 () Real) (assert (and (> (* skoXC1 skoXC1) 0.) (and (<= (* skoXC1 (* skoXC1 (* skoXC1 (* skoXC1 (+ (/ (- 80.) 3.) (* skoXC1 (* skoXC1 (+ (/ 128. 3.) (* skoXC1 (* skoXC1 (+ (/ (- 55.) 3.) (* skoXC1 (* skoXC1 (/ 5. 3.)))))))))))))) 0.) (and (<= (* skoXC1 (* skoXC1 (+ 256. (* skoXC1 (* skoXC1 (+ (- 160.) (* skoXC1 (* skoXC1 (+ 32. (* skoXC1 (* skoXC1 (- 1.)))))))))))) 128.) (and (<= (* skoXC1 (* skoXC1 (/ 1. 3.))) 1.) (and (<= (* skoXC1 (+ (- 1.) (* skoXC1 (* skoXC1 (/ (- 1.) 6.))))) 0.) (and (<= (* skoXC1 (* skoXC1 (* skoXC1 (* skoXC1 (/ (- 2.) 3.))))) 0.) (and (<= (* skoXC1 skoXC1) 2.) (and (<= (* skoXC1 (* skoXC1 (+ (/ (- 1.) 2.) (* skoXC1 (* skoXC1 (/ (- 1.) 6.)))))) 0.) (and (<= (* skoXC1 (* skoXC1 (/ (- 1.) 6.))) 1.) (and (<= (* skoXC1 (+ (- 1.) (* skoXC1 (* skoXC1 (/ 1. 3.))))) 0.) (and (> (/ 7. 8.) skoXC1) (and (> skoXC1 0.) (and (> (* skoXC1 (* skoXC1 (/ (- 1.) 2.))) (- 3.)) (and (<= (* skoXC1 (* skoXC1 (/ 1. 2.))) 3.) (and (<= (* skoXC1 (* skoXC1 (+ 24. (* skoXC1 (* skoXC1 (+ (- 10.) (* skoXC1 skoXC1))))))) 16.) (and (> (* skoXC1 (* skoXC1 (+ (- 80.) (* skoXC1 (* skoXC1 (+ 40. (* skoXC1 (* skoXC1 (+ (- 6.) (* skoXC1 (* skoXC1 (/ 1. 8.)))))))))))) (- 48.)) (and (<= (* skoXC1 (* skoXC1 (+ 80. (* skoXC1 (* skoXC1 (+ (- 40.) (* skoXC1 (* skoXC1 (+ 6. (* skoXC1 (* skoXC1 (/ (- 1.) 8.)))))))))))) 48.) (> (* skoXC1 skoXC1) 0.)))))))))))))))))))

% In GRF format:
(sequent " MetiTarski formula " (antecedent (> (* skoXC1 skoXC1) 0.) (<= (* skoXC1 (* skoXC1 (* skoXC1 (* skoXC1 (+ (/ (- 80.) 3.) (* skoXC1 (* skoXC1 (+ (/ 128. 3.) (* skoXC1 (* skoXC1 (+ (/ (- 55.) 3.) (* skoXC1 (* skoXC1 (/ 5. 3.)))))))))))))) 0.) (<= (* skoXC1 (* skoXC1 (+ 256. (* skoXC1 (* skoXC1 (+ (- 160.) (* skoXC1 (* skoXC1 (+ 32. (* skoXC1 (* skoXC1 (- 1.)))))))))))) 128.) (<= (* skoXC1 (* skoXC1 (/ 1. 3.))) 1.) (<= (* skoXC1 (+ (- 1.) (* skoXC1 (* skoXC1 (/ (- 1.) 6.))))) 0.) (<= (* skoXC1 (* skoXC1 (* skoXC1 (* skoXC1 (/ (- 2.) 3.))))) 0.) (<= (* skoXC1 skoXC1) 2.) (<= (* skoXC1 (* skoXC1 (+ (/ (- 1.) 2.) (* skoXC1 (* skoXC1 (/ (- 1.) 6.)))))) 0.) (<= (* skoXC1 (* skoXC1 (/ (- 1.) 6.))) 1.) (<= (* skoXC1 (+ (- 1.) (* skoXC1 (* skoXC1 (/ 1. 3.))))) 0.) (> (/ 7. 8.) skoXC1) (> skoXC1 0.) (> (* skoXC1 (* skoXC1 (/ (- 1.) 2.))) (- 3.)) (<= (* skoXC1 (* skoXC1 (/ 1. 2.))) 3.) (<= (* skoXC1 (* skoXC1 (+ 24. (* skoXC1 (* skoXC1 (+ (- 10.) (* skoXC1 skoXC1))))))) 16.) (> (* skoXC1 (* skoXC1 (+ (- 80.) (* skoXC1 (* skoXC1 (+ 40. (* skoXC1 (* skoXC1 (+ (- 6.) (* skoXC1 (* skoXC1 (/ 1. 8.)))))))))))) (- 48.)) (<= (* skoXC1 (* skoXC1 (+ 80. (* skoXC1 (* skoXC1 (+ (- 40.) (* skoXC1 (* skoXC1 (+ 6. (* skoXC1 (* skoXC1 (/ (- 1.) 8.)))))))))))) 48.)) (succedent (<= (* skoXC1 skoXC1) 0.)))
-----[end problem]-----

-----[begin problem]-----
% In Mathematica format:
Timing[Resolve[Exists[{skoXC1}, And[skoXC1*(-1+skoXC1*skoXC1*((1/3)+skoXC1*skoXC1*(3/20)))<=0,skoXC1*skoXC1>0,skoXC1*skoXC1*(80+skoXC1*skoXC1*(-40+skoXC1*skoXC1*(6+skoXC1*skoXC1*(-1/8))))<=48,skoXC1*skoXC1*(-80+skoXC1*skoXC1*(40+skoXC1*skoXC1*(-6+skoXC1*skoXC1*(1/8))))>-48,skoXC1*skoXC1*(24+skoXC1*skoXC1*(-10+skoXC1*skoXC1))<=16,skoXC1*skoXC1*(1/2)<=3,skoXC1*skoXC1*(-1/2)>-3,skoXC1>0,(7/8)>skoXC1,skoXC1*(-1+skoXC1*skoXC1*(1/3))<=0,skoXC1*skoXC1*(-1/6)<=1,skoXC1*skoXC1*((-1/2)+skoXC1*skoXC1*(-1/6))<=0,skoXC1*skoXC1<=2,skoXC1*skoXC1*skoXC1*skoXC1*(-2/3)<=0,skoXC1*(-1+skoXC1*skoXC1*(-1/6))<=0,skoXC1*skoXC1*(1/3)<=1,skoXC1*skoXC1*(256+skoXC1*skoXC1*(-160+skoXC1*skoXC1*(32+skoXC1*skoXC1*-1)))<=128,skoXC1*skoXC1*skoXC1*skoXC1*((-80/3)+skoXC1*skoXC1*((128/3)+skoXC1*skoXC1*((-55/3)+skoXC1*skoXC1*(5/3))))<=0]], Reals]]

% In QepcadB format:
(E skoXC1) [[(skoXC1 (-1+(skoXC1 skoXC1 (1/3+(skoXC1 skoXC1 (3/20))))))<=0]/\[[0<(skoXC1 skoXC1)]/\[[(skoXC1 skoXC1 (80+(skoXC1 skoXC1 (-40+(skoXC1 skoXC1 (6+(skoXC1 skoXC1 (-1/8))))))))<=48]/\[[-48<(skoXC1 skoXC1 (-80+(skoXC1 skoXC1 (40+(skoXC1 skoXC1 (-6+(skoXC1 skoXC1 (1/8))))))))]/\[[(skoXC1 skoXC1 (24+(skoXC1 skoXC1 (-10+(skoXC1 skoXC1)))))<=16]/\[[(skoXC1 skoXC1 (1/2))<=3]/\[[-3<(skoXC1 skoXC1 (-1/2))]/\[[0<skoXC1]/\[[skoXC1<7/8]/\[[(skoXC1 (-1+(skoXC1 skoXC1 (1/3))))<=0]/\[[(skoXC1 skoXC1 (-1/6))<=1]/\[[(skoXC1 skoXC1 (-1/2+(skoXC1 skoXC1 (-1/6))))<=0]/\[[(skoXC1 skoXC1)<=2]/\[[(skoXC1 skoXC1 skoXC1 skoXC1 (-2/3))<=0]/\[[(skoXC1 (-1+(skoXC1 skoXC1 (-1/6))))<=0]/\[[(skoXC1 skoXC1 (1/3))<=1]/\[[(skoXC1 skoXC1 (256+(skoXC1 skoXC1 (-160+(skoXC1 skoXC1 (32+(skoXC1 skoXC1 (-1))))))))<=128]/\[(skoXC1 skoXC1 skoXC1 skoXC1 (-80/3+(skoXC1 skoXC1 (128/3+(skoXC1 skoXC1 (-55/3+(skoXC1 skoXC1 (5/3))))))))<=0]]]]]]]]]]]]]]]]]].

% In SMTLib2 format:
(declare-fun skoXC1 () Real) (assert (and (<= (* skoXC1 (+ (- 1.) (* skoXC1 (* skoXC1 (+ (/ 1. 3.) (* skoXC1 (* skoXC1 (/ 3. 20.)))))))) 0.) (and (> (* skoXC1 skoXC1) 0.) (and (<= (* skoXC1 (* skoXC1 (+ 80. (* skoXC1 (* skoXC1 (+ (- 40.) (* skoXC1 (* skoXC1 (+ 6. (* skoXC1 (* skoXC1 (/ (- 1.) 8.)))))))))))) 48.) (and (> (* skoXC1 (* skoXC1 (+ (- 80.) (* skoXC1 (* skoXC1 (+ 40. (* skoXC1 (* skoXC1 (+ (- 6.) (* skoXC1 (* skoXC1 (/ 1. 8.)))))))))))) (- 48.)) (and (<= (* skoXC1 (* skoXC1 (+ 24. (* skoXC1 (* skoXC1 (+ (- 10.) (* skoXC1 skoXC1))))))) 16.) (and (<= (* skoXC1 (* skoXC1 (/ 1. 2.))) 3.) (and (> (* skoXC1 (* skoXC1 (/ (- 1.) 2.))) (- 3.)) (and (> skoXC1 0.) (and (> (/ 7. 8.) skoXC1) (and (<= (* skoXC1 (+ (- 1.) (* skoXC1 (* skoXC1 (/ 1. 3.))))) 0.) (and (<= (* skoXC1 (* skoXC1 (/ (- 1.) 6.))) 1.) (and (<= (* skoXC1 (* skoXC1 (+ (/ (- 1.) 2.) (* skoXC1 (* skoXC1 (/ (- 1.) 6.)))))) 0.) (and (<= (* skoXC1 skoXC1) 2.) (and (<= (* skoXC1 (* skoXC1 (* skoXC1 (* skoXC1 (/ (- 2.) 3.))))) 0.) (and (<= (* skoXC1 (+ (- 1.) (* skoXC1 (* skoXC1 (/ (- 1.) 6.))))) 0.) (and (<= (* skoXC1 (* skoXC1 (/ 1. 3.))) 1.) (and (<= (* skoXC1 (* skoXC1 (+ 256. (* skoXC1 (* skoXC1 (+ (- 160.) (* skoXC1 (* skoXC1 (+ 32. (* skoXC1 (* skoXC1 (- 1.)))))))))))) 128.) (<= (* skoXC1 (* skoXC1 (* skoXC1 (* skoXC1 (+ (/ (- 80.) 3.) (* skoXC1 (* skoXC1 (+ (/ 128. 3.) (* skoXC1 (* skoXC1 (+ (/ (- 55.) 3.) (* skoXC1 (* skoXC1 (/ 5. 3.)))))))))))))) 0.)))))))))))))))))))

% In GRF format:
(sequent " MetiTarski formula " (antecedent (<= (* skoXC1 (+ (- 1.) (* skoXC1 (* skoXC1 (+ (/ 1. 3.) (* skoXC1 (* skoXC1 (/ 3. 20.)))))))) 0.) (> (* skoXC1 skoXC1) 0.) (<= (* skoXC1 (* skoXC1 (+ 80. (* skoXC1 (* skoXC1 (+ (- 40.) (* skoXC1 (* skoXC1 (+ 6. (* skoXC1 (* skoXC1 (/ (- 1.) 8.)))))))))))) 48.) (> (* skoXC1 (* skoXC1 (+ (- 80.) (* skoXC1 (* skoXC1 (+ 40. (* skoXC1 (* skoXC1 (+ (- 6.) (* skoXC1 (* skoXC1 (/ 1. 8.)))))))))))) (- 48.)) (<= (* skoXC1 (* skoXC1 (+ 24. (* skoXC1 (* skoXC1 (+ (- 10.) (* skoXC1 skoXC1))))))) 16.) (<= (* skoXC1 (* skoXC1 (/ 1. 2.))) 3.) (> (* skoXC1 (* skoXC1 (/ (- 1.) 2.))) (- 3.)) (> skoXC1 0.) (> (/ 7. 8.) skoXC1) (<= (* skoXC1 (+ (- 1.) (* skoXC1 (* skoXC1 (/ 1. 3.))))) 0.) (<= (* skoXC1 (* skoXC1 (/ (- 1.) 6.))) 1.) (<= (* skoXC1 (* skoXC1 (+ (/ (- 1.) 2.) (* skoXC1 (* skoXC1 (/ (- 1.) 6.)))))) 0.) (<= (* skoXC1 skoXC1) 2.) (<= (* skoXC1 (* skoXC1 (* skoXC1 (* skoXC1 (/ (- 2.) 3.))))) 0.) (<= (* skoXC1 (+ (- 1.) (* skoXC1 (* skoXC1 (/ (- 1.) 6.))))) 0.) (<= (* skoXC1 (* skoXC1 (/ 1. 3.))) 1.) (<= (* skoXC1 (* skoXC1 (+ 256. (* skoXC1 (* skoXC1 (+ (- 160.) (* skoXC1 (* skoXC1 (+ 32. (* skoXC1 (* skoXC1 (- 1.)))))))))))) 128.)) (succedent (> (* skoXC1 (* skoXC1 (* skoXC1 (* skoXC1 (+ (/ (- 80.) 3.) (* skoXC1 (* skoXC1 (+ (/ 128. 3.) (* skoXC1 (* skoXC1 (+ (/ (- 55.) 3.) (* skoXC1 (* skoXC1 (/ 5. 3.)))))))))))))) 0.)))
-----[end problem]-----

-----[begin problem]-----
% In Mathematica format:
Timing[Resolve[Exists[{skoXC1}, And[skoXC1*(-1+skoXC1*skoXC1*((-1/6)+skoXC1*skoXC1*(-3/40)))<=0,skoXC1!=0,skoXC1*skoXC1>0,skoXC1*skoXC1*(80+skoXC1*skoXC1*(-40+skoXC1*skoXC1*(6+skoXC1*skoXC1*(-1/8))))<=48,skoXC1*skoXC1*(-80+skoXC1*skoXC1*(40+skoXC1*skoXC1*(-6+skoXC1*skoXC1*(1/8))))>-48,skoXC1*skoXC1*(24+skoXC1*skoXC1*(-10+skoXC1*skoXC1))<=16,skoXC1*skoXC1*(1/2)<=3,skoXC1*skoXC1*(-1/2)>-3,skoXC1>0,(7/8)>skoXC1,skoXC1*(-1+skoXC1*skoXC1*(1/3))<=0,skoXC1*skoXC1*(-1/6)<=1,skoXC1*skoXC1*((-1/2)+skoXC1*skoXC1*(-1/6))<=0,skoXC1*skoXC1<=2,skoXC1*skoXC1*skoXC1*skoXC1*(-2/3)<=0,skoXC1*(-1+skoXC1*skoXC1*(-1/6))<=0,skoXC1*skoXC1*(1/3)<=1,skoXC1*skoXC1*(256+skoXC1*skoXC1*(-160+skoXC1*skoXC1*(32+skoXC1*skoXC1*-1)))<=128,skoXC1*skoXC1*skoXC1*skoXC1*((-80/3)+skoXC1*skoXC1*((128/3)+skoXC1*skoXC1*((-55/3)+skoXC1*skoXC1*(5/3))))<=0]], Reals]]

% In QepcadB format:
(E skoXC1) [[(skoXC1 (-1+(skoXC1 skoXC1 (-1/6+(skoXC1 skoXC1 (-3/40))))))<=0]/\[[skoXC1 /=0]/\[[0<(skoXC1 skoXC1)]/\[[(skoXC1 skoXC1 (80+(skoXC1 skoXC1 (-40+(skoXC1 skoXC1 (6+(skoXC1 skoXC1 (-1/8))))))))<=48]/\[[-48<(skoXC1 skoXC1 (-80+(skoXC1 skoXC1 (40+(skoXC1 skoXC1 (-6+(skoXC1 skoXC1 (1/8))))))))]/\[[(skoXC1 skoXC1 (24+(skoXC1 skoXC1 (-10+(skoXC1 skoXC1)))))<=16]/\[[(skoXC1 skoXC1 (1/2))<=3]/\[[-3<(skoXC1 skoXC1 (-1/2))]/\[[0<skoXC1]/\[[skoXC1<7/8]/\[[(skoXC1 (-1+(skoXC1 skoXC1 (1/3))))<=0]/\[[(skoXC1 skoXC1 (-1/6))<=1]/\[[(skoXC1 skoXC1 (-1/2+(skoXC1 skoXC1 (-1/6))))<=0]/\[[(skoXC1 skoXC1)<=2]/\[[(skoXC1 skoXC1 skoXC1 skoXC1 (-2/3))<=0]/\[[(skoXC1 (-1+(skoXC1 skoXC1 (-1/6))))<=0]/\[[(skoXC1 skoXC1 (1/3))<=1]/\[[(skoXC1 skoXC1 (256+(skoXC1 skoXC1 (-160+(skoXC1 skoXC1 (32+(skoXC1 skoXC1 (-1))))))))<=128]/\[(skoXC1 skoXC1 skoXC1 skoXC1 (-80/3+(skoXC1 skoXC1 (128/3+(skoXC1 skoXC1 (-55/3+(skoXC1 skoXC1 (5/3))))))))<=0]]]]]]]]]]]]]]]]]]].

% In SMTLib2 format:
(declare-fun skoXC1 () Real) (assert (and (<= (* skoXC1 (+ (- 1.) (* skoXC1 (* skoXC1 (+ (/ (- 1.) 6.) (* skoXC1 (* skoXC1 (/ (- 3.) 40.)))))))) 0.) (and (!= skoXC1 0.) (and (> (* skoXC1 skoXC1) 0.) (and (<= (* skoXC1 (* skoXC1 (+ 80. (* skoXC1 (* skoXC1 (+ (- 40.) (* skoXC1 (* skoXC1 (+ 6. (* skoXC1 (* skoXC1 (/ (- 1.) 8.)))))))))))) 48.) (and (> (* skoXC1 (* skoXC1 (+ (- 80.) (* skoXC1 (* skoXC1 (+ 40. (* skoXC1 (* skoXC1 (+ (- 6.) (* skoXC1 (* skoXC1 (/ 1. 8.)))))))))))) (- 48.)) (and (<= (* skoXC1 (* skoXC1 (+ 24. (* skoXC1 (* skoXC1 (+ (- 10.) (* skoXC1 skoXC1))))))) 16.) (and (<= (* skoXC1 (* skoXC1 (/ 1. 2.))) 3.) (and (> (* skoXC1 (* skoXC1 (/ (- 1.) 2.))) (- 3.)) (and (> skoXC1 0.) (and (> (/ 7. 8.) skoXC1) (and (<= (* skoXC1 (+ (- 1.) (* skoXC1 (* skoXC1 (/ 1. 3.))))) 0.) (and (<= (* skoXC1 (* skoXC1 (/ (- 1.) 6.))) 1.) (and (<= (* skoXC1 (* skoXC1 (+ (/ (- 1.) 2.) (* skoXC1 (* skoXC1 (/ (- 1.) 6.)))))) 0.) (and (<= (* skoXC1 skoXC1) 2.) (and (<= (* skoXC1 (* skoXC1 (* skoXC1 (* skoXC1 (/ (- 2.) 3.))))) 0.) (and (<= (* skoXC1 (+ (- 1.) (* skoXC1 (* skoXC1 (/ (- 1.) 6.))))) 0.) (and (<= (* skoXC1 (* skoXC1 (/ 1. 3.))) 1.) (and (<= (* skoXC1 (* skoXC1 (+ 256. (* skoXC1 (* skoXC1 (+ (- 160.) (* skoXC1 (* skoXC1 (+ 32. (* skoXC1 (* skoXC1 (- 1.)))))))))))) 128.) (<= (* skoXC1 (* skoXC1 (* skoXC1 (* skoXC1 (+ (/ (- 80.) 3.) (* skoXC1 (* skoXC1 (+ (/ 128. 3.) (* skoXC1 (* skoXC1 (+ (/ (- 55.) 3.) (* skoXC1 (* skoXC1 (/ 5. 3.)))))))))))))) 0.))))))))))))))))))))

% In GRF format:
(sequent " MetiTarski formula " (antecedent (<= (* skoXC1 (+ (- 1.) (* skoXC1 (* skoXC1 (+ (/ (- 1.) 6.) (* skoXC1 (* skoXC1 (/ (- 3.) 40.)))))))) 0.) (!= skoXC1 0.) (> (* skoXC1 skoXC1) 0.) (<= (* skoXC1 (* skoXC1 (+ 80. (* skoXC1 (* skoXC1 (+ (- 40.) (* skoXC1 (* skoXC1 (+ 6. (* skoXC1 (* skoXC1 (/ (- 1.) 8.)))))))))))) 48.) (> (* skoXC1 (* skoXC1 (+ (- 80.) (* skoXC1 (* skoXC1 (+ 40. (* skoXC1 (* skoXC1 (+ (- 6.) (* skoXC1 (* skoXC1 (/ 1. 8.)))))))))))) (- 48.)) (<= (* skoXC1 (* skoXC1 (+ 24. (* skoXC1 (* skoXC1 (+ (- 10.) (* skoXC1 skoXC1))))))) 16.) (<= (* skoXC1 (* skoXC1 (/ 1. 2.))) 3.) (> (* skoXC1 (* skoXC1 (/ (- 1.) 2.))) (- 3.)) (> skoXC1 0.) (> (/ 7. 8.) skoXC1) (<= (* skoXC1 (+ (- 1.) (* skoXC1 (* skoXC1 (/ 1. 3.))))) 0.) (<= (* skoXC1 (* skoXC1 (/ (- 1.) 6.))) 1.) (<= (* skoXC1 (* skoXC1 (+ (/ (- 1.) 2.) (* skoXC1 (* skoXC1 (/ (- 1.) 6.)))))) 0.) (<= (* skoXC1 skoXC1) 2.) (<= (* skoXC1 (* skoXC1 (* skoXC1 (* skoXC1 (/ (- 2.) 3.))))) 0.) (<= (* skoXC1 (+ (- 1.) (* skoXC1 (* skoXC1 (/ (- 1.) 6.))))) 0.) (<= (* skoXC1 (* skoXC1 (/ 1. 3.))) 1.) (<= (* skoXC1 (* skoXC1 (+ 256. (* skoXC1 (* skoXC1 (+ (- 160.) (* skoXC1 (* skoXC1 (+ 32. (* skoXC1 (* skoXC1 (- 1.)))))))))))) 128.)) (succedent (> (* skoXC1 (* skoXC1 (* skoXC1 (* skoXC1 (+ (/ (- 80.) 3.) (* skoXC1 (* skoXC1 (+ (/ 128. 3.) (* skoXC1 (* skoXC1 (+ (/ (- 55.) 3.) (* skoXC1 (* skoXC1 (/ 5. 3.)))))))))))))) 0.)))
-----[end problem]-----

-----[begin problem]-----
% In Mathematica format:
Timing[Resolve[Exists[{skoXC1}, And[skoXC1*(1+skoXC1*skoXC1*((1/6)+skoXC1*skoXC1*(3/40)))<=0,skoXC1!=0,skoXC1*skoXC1>0,skoXC1*skoXC1*(80+skoXC1*skoXC1*(-40+skoXC1*skoXC1*(6+skoXC1*skoXC1*(-1/8))))<=48,skoXC1*skoXC1*(-80+skoXC1*skoXC1*(40+skoXC1*skoXC1*(-6+skoXC1*skoXC1*(1/8))))>-48,skoXC1*skoXC1*(24+skoXC1*skoXC1*(-10+skoXC1*skoXC1))<=16,skoXC1*skoXC1*(1/2)<=3,skoXC1*skoXC1*(-1/2)>-3,skoXC1>0,(7/8)>skoXC1,skoXC1*(-1+skoXC1*skoXC1*(1/3))<=0,skoXC1*skoXC1*(-1/6)<=1,skoXC1*skoXC1*((-1/2)+skoXC1*skoXC1*(-1/6))<=0,skoXC1*skoXC1<=2,skoXC1*skoXC1*skoXC1*skoXC1*(-2/3)<=0,skoXC1*(-1+skoXC1*skoXC1*(-1/6))<=0,skoXC1*skoXC1*(1/3)<=1,skoXC1*skoXC1*(256+skoXC1*skoXC1*(-160+skoXC1*skoXC1*(32+skoXC1*skoXC1*-1)))<=128,skoXC1*skoXC1*skoXC1*skoXC1*((-80/3)+skoXC1*skoXC1*((128/3)+skoXC1*skoXC1*((-55/3)+skoXC1*skoXC1*(5/3))))<=0]], Reals]]

% In QepcadB format:
(E skoXC1) [[(skoXC1 (1+(skoXC1 skoXC1 (1/6+(skoXC1 skoXC1 (3/40))))))<=0]/\[[skoXC1 /=0]/\[[0<(skoXC1 skoXC1)]/\[[(skoXC1 skoXC1 (80+(skoXC1 skoXC1 (-40+(skoXC1 skoXC1 (6+(skoXC1 skoXC1 (-1/8))))))))<=48]/\[[-48<(skoXC1 skoXC1 (-80+(skoXC1 skoXC1 (40+(skoXC1 skoXC1 (-6+(skoXC1 skoXC1 (1/8))))))))]/\[[(skoXC1 skoXC1 (24+(skoXC1 skoXC1 (-10+(skoXC1 skoXC1)))))<=16]/\[[(skoXC1 skoXC1 (1/2))<=3]/\[[-3<(skoXC1 skoXC1 (-1/2))]/\[[0<skoXC1]/\[[skoXC1<7/8]/\[[(skoXC1 (-1+(skoXC1 skoXC1 (1/3))))<=0]/\[[(skoXC1 skoXC1 (-1/6))<=1]/\[[(skoXC1 skoXC1 (-1/2+(skoXC1 skoXC1 (-1/6))))<=0]/\[[(skoXC1 skoXC1)<=2]/\[[(skoXC1 skoXC1 skoXC1 skoXC1 (-2/3))<=0]/\[[(skoXC1 (-1+(skoXC1 skoXC1 (-1/6))))<=0]/\[[(skoXC1 skoXC1 (1/3))<=1]/\[[(skoXC1 skoXC1 (256+(skoXC1 skoXC1 (-160+(skoXC1 skoXC1 (32+(skoXC1 skoXC1 (-1))))))))<=128]/\[(skoXC1 skoXC1 skoXC1 skoXC1 (-80/3+(skoXC1 skoXC1 (128/3+(skoXC1 skoXC1 (-55/3+(skoXC1 skoXC1 (5/3))))))))<=0]]]]]]]]]]]]]]]]]]].

% In SMTLib2 format:
(declare-fun skoXC1 () Real) (assert (and (<= (* skoXC1 (+ 1. (* skoXC1 (* skoXC1 (+ (/ 1. 6.) (* skoXC1 (* skoXC1 (/ 3. 40.)))))))) 0.) (and (!= skoXC1 0.) (and (> (* skoXC1 skoXC1) 0.) (and (<= (* skoXC1 (* skoXC1 (+ 80. (* skoXC1 (* skoXC1 (+ (- 40.) (* skoXC1 (* skoXC1 (+ 6. (* skoXC1 (* skoXC1 (/ (- 1.) 8.)))))))))))) 48.) (and (> (* skoXC1 (* skoXC1 (+ (- 80.) (* skoXC1 (* skoXC1 (+ 40. (* skoXC1 (* skoXC1 (+ (- 6.) (* skoXC1 (* skoXC1 (/ 1. 8.)))))))))))) (- 48.)) (and (<= (* skoXC1 (* skoXC1 (+ 24. (* skoXC1 (* skoXC1 (+ (- 10.) (* skoXC1 skoXC1))))))) 16.) (and (<= (* skoXC1 (* skoXC1 (/ 1. 2.))) 3.) (and (> (* skoXC1 (* skoXC1 (/ (- 1.) 2.))) (- 3.)) (and (> skoXC1 0.) (and (> (/ 7. 8.) skoXC1) (and (<= (* skoXC1 (+ (- 1.) (* skoXC1 (* skoXC1 (/ 1. 3.))))) 0.) (and (<= (* skoXC1 (* skoXC1 (/ (- 1.) 6.))) 1.) (and (<= (* skoXC1 (* skoXC1 (+ (/ (- 1.) 2.) (* skoXC1 (* skoXC1 (/ (- 1.) 6.)))))) 0.) (and (<= (* skoXC1 skoXC1) 2.) (and (<= (* skoXC1 (* skoXC1 (* skoXC1 (* skoXC1 (/ (- 2.) 3.))))) 0.) (and (<= (* skoXC1 (+ (- 1.) (* skoXC1 (* skoXC1 (/ (- 1.) 6.))))) 0.) (and (<= (* skoXC1 (* skoXC1 (/ 1. 3.))) 1.) (and (<= (* skoXC1 (* skoXC1 (+ 256. (* skoXC1 (* skoXC1 (+ (- 160.) (* skoXC1 (* skoXC1 (+ 32. (* skoXC1 (* skoXC1 (- 1.)))))))))))) 128.) (<= (* skoXC1 (* skoXC1 (* skoXC1 (* skoXC1 (+ (/ (- 80.) 3.) (* skoXC1 (* skoXC1 (+ (/ 128. 3.) (* skoXC1 (* skoXC1 (+ (/ (- 55.) 3.) (* skoXC1 (* skoXC1 (/ 5. 3.)))))))))))))) 0.))))))))))))))))))))

% In GRF format:
(sequent " MetiTarski formula " (antecedent (<= (* skoXC1 (+ 1. (* skoXC1 (* skoXC1 (+ (/ 1. 6.) (* skoXC1 (* skoXC1 (/ 3. 40.)))))))) 0.) (!= skoXC1 0.) (> (* skoXC1 skoXC1) 0.) (<= (* skoXC1 (* skoXC1 (+ 80. (* skoXC1 (* skoXC1 (+ (- 40.) (* skoXC1 (* skoXC1 (+ 6. (* skoXC1 (* skoXC1 (/ (- 1.) 8.)))))))))))) 48.) (> (* skoXC1 (* skoXC1 (+ (- 80.) (* skoXC1 (* skoXC1 (+ 40. (* skoXC1 (* skoXC1 (+ (- 6.) (* skoXC1 (* skoXC1 (/ 1. 8.)))))))))))) (- 48.)) (<= (* skoXC1 (* skoXC1 (+ 24. (* skoXC1 (* skoXC1 (+ (- 10.) (* skoXC1 skoXC1))))))) 16.) (<= (* skoXC1 (* skoXC1 (/ 1. 2.))) 3.) (> (* skoXC1 (* skoXC1 (/ (- 1.) 2.))) (- 3.)) (> skoXC1 0.) (> (/ 7. 8.) skoXC1) (<= (* skoXC1 (+ (- 1.) (* skoXC1 (* skoXC1 (/ 1. 3.))))) 0.) (<= (* skoXC1 (* skoXC1 (/ (- 1.) 6.))) 1.) (<= (* skoXC1 (* skoXC1 (+ (/ (- 1.) 2.) (* skoXC1 (* skoXC1 (/ (- 1.) 6.)))))) 0.) (<= (* skoXC1 skoXC1) 2.) (<= (* skoXC1 (* skoXC1 (* skoXC1 (* skoXC1 (/ (- 2.) 3.))))) 0.) (<= (* skoXC1 (+ (- 1.) (* skoXC1 (* skoXC1 (/ (- 1.) 6.))))) 0.) (<= (* skoXC1 (* skoXC1 (/ 1. 3.))) 1.) (<= (* skoXC1 (* skoXC1 (+ 256. (* skoXC1 (* skoXC1 (+ (- 160.) (* skoXC1 (* skoXC1 (+ 32. (* skoXC1 (* skoXC1 (- 1.)))))))))))) 128.)) (succedent (> (* skoXC1 (* skoXC1 (* skoXC1 (* skoXC1 (+ (/ (- 80.) 3.) (* skoXC1 (* skoXC1 (+ (/ 128. 3.) (* skoXC1 (* skoXC1 (+ (/ (- 55.) 3.) (* skoXC1 (* skoXC1 (/ 5. 3.)))))))))))))) 0.)))
-----[end problem]-----

-----[begin problem]-----
% In Mathematica format:
Timing[Resolve[Exists[{skoXC1}, And[skoXC1*(-1+skoXC1*skoXC1*((1/3)+skoXC1*skoXC1*(3/20)))<=0,skoXC1*skoXC1>0,skoXC1*skoXC1*(80+skoXC1*skoXC1*(-40+skoXC1*skoXC1*(6+skoXC1*skoXC1*(-1/8))))<=48,skoXC1*skoXC1*(-80+skoXC1*skoXC1*(40+skoXC1*skoXC1*(-6+skoXC1*skoXC1*(1/8))))>-48,skoXC1*skoXC1*(24+skoXC1*skoXC1*(-10+skoXC1*skoXC1))<=16,skoXC1*skoXC1*(1/2)<=3,skoXC1*skoXC1*(-1/2)>-3,skoXC1>0,(7/8)>skoXC1,skoXC1*(-1+skoXC1*skoXC1*(1/3))<=0,skoXC1*skoXC1*(-1/6)<=1,skoXC1*skoXC1*((-1/2)+skoXC1*skoXC1*(-1/6))<=0,skoXC1*skoXC1<=2,skoXC1*skoXC1*skoXC1*skoXC1*(-2/3)<=0,skoXC1*(-1+skoXC1*skoXC1*(-1/6))<=0,skoXC1*skoXC1*(1/3)<=1,skoXC1*skoXC1*(256+skoXC1*skoXC1*(-160+skoXC1*skoXC1*(32+skoXC1*skoXC1*-1)))<=128,skoXC1*skoXC1*skoXC1*skoXC1*((-80/3)+skoXC1*skoXC1*((128/3)+skoXC1*skoXC1*((-55/3)+skoXC1*skoXC1*(5/3))))<=0]], Reals]]

% In QepcadB format:
(E skoXC1) [[(skoXC1 (-1+(skoXC1 skoXC1 (1/3+(skoXC1 skoXC1 (3/20))))))<=0]/\[[0<(skoXC1 skoXC1)]/\[[(skoXC1 skoXC1 (80+(skoXC1 skoXC1 (-40+(skoXC1 skoXC1 (6+(skoXC1 skoXC1 (-1/8))))))))<=48]/\[[-48<(skoXC1 skoXC1 (-80+(skoXC1 skoXC1 (40+(skoXC1 skoXC1 (-6+(skoXC1 skoXC1 (1/8))))))))]/\[[(skoXC1 skoXC1 (24+(skoXC1 skoXC1 (-10+(skoXC1 skoXC1)))))<=16]/\[[(skoXC1 skoXC1 (1/2))<=3]/\[[-3<(skoXC1 skoXC1 (-1/2))]/\[[0<skoXC1]/\[[skoXC1<7/8]/\[[(skoXC1 (-1+(skoXC1 skoXC1 (1/3))))<=0]/\[[(skoXC1 skoXC1 (-1/6))<=1]/\[[(skoXC1 skoXC1 (-1/2+(skoXC1 skoXC1 (-1/6))))<=0]/\[[(skoXC1 skoXC1)<=2]/\[[(skoXC1 skoXC1 skoXC1 skoXC1 (-2/3))<=0]/\[[(skoXC1 (-1+(skoXC1 skoXC1 (-1/6))))<=0]/\[[(skoXC1 skoXC1 (1/3))<=1]/\[[(skoXC1 skoXC1 (256+(skoXC1 skoXC1 (-160+(skoXC1 skoXC1 (32+(skoXC1 skoXC1 (-1))))))))<=128]/\[(skoXC1 skoXC1 skoXC1 skoXC1 (-80/3+(skoXC1 skoXC1 (128/3+(skoXC1 skoXC1 (-55/3+(skoXC1 skoXC1 (5/3))))))))<=0]]]]]]]]]]]]]]]]]].

% In SMTLib2 format:
(declare-fun skoXC1 () Real) (assert (and (<= (* skoXC1 (+ (- 1.) (* skoXC1 (* skoXC1 (+ (/ 1. 3.) (* skoXC1 (* skoXC1 (/ 3. 20.)))))))) 0.) (and (> (* skoXC1 skoXC1) 0.) (and (<= (* skoXC1 (* skoXC1 (+ 80. (* skoXC1 (* skoXC1 (+ (- 40.) (* skoXC1 (* skoXC1 (+ 6. (* skoXC1 (* skoXC1 (/ (- 1.) 8.)))))))))))) 48.) (and (> (* skoXC1 (* skoXC1 (+ (- 80.) (* skoXC1 (* skoXC1 (+ 40. (* skoXC1 (* skoXC1 (+ (- 6.) (* skoXC1 (* skoXC1 (/ 1. 8.)))))))))))) (- 48.)) (and (<= (* skoXC1 (* skoXC1 (+ 24. (* skoXC1 (* skoXC1 (+ (- 10.) (* skoXC1 skoXC1))))))) 16.) (and (<= (* skoXC1 (* skoXC1 (/ 1. 2.))) 3.) (and (> (* skoXC1 (* skoXC1 (/ (- 1.) 2.))) (- 3.)) (and (> skoXC1 0.) (and (> (/ 7. 8.) skoXC1) (and (<= (* skoXC1 (+ (- 1.) (* skoXC1 (* skoXC1 (/ 1. 3.))))) 0.) (and (<= (* skoXC1 (* skoXC1 (/ (- 1.) 6.))) 1.) (and (<= (* skoXC1 (* skoXC1 (+ (/ (- 1.) 2.) (* skoXC1 (* skoXC1 (/ (- 1.) 6.)))))) 0.) (and (<= (* skoXC1 skoXC1) 2.) (and (<= (* skoXC1 (* skoXC1 (* skoXC1 (* skoXC1 (/ (- 2.) 3.))))) 0.) (and (<= (* skoXC1 (+ (- 1.) (* skoXC1 (* skoXC1 (/ (- 1.) 6.))))) 0.) (and (<= (* skoXC1 (* skoXC1 (/ 1. 3.))) 1.) (and (<= (* skoXC1 (* skoXC1 (+ 256. (* skoXC1 (* skoXC1 (+ (- 160.) (* skoXC1 (* skoXC1 (+ 32. (* skoXC1 (* skoXC1 (- 1.)))))))))))) 128.) (<= (* skoXC1 (* skoXC1 (* skoXC1 (* skoXC1 (+ (/ (- 80.) 3.) (* skoXC1 (* skoXC1 (+ (/ 128. 3.) (* skoXC1 (* skoXC1 (+ (/ (- 55.) 3.) (* skoXC1 (* skoXC1 (/ 5. 3.)))))))))))))) 0.)))))))))))))))))))

% In GRF format:
(sequent " MetiTarski formula " (antecedent (<= (* skoXC1 (+ (- 1.) (* skoXC1 (* skoXC1 (+ (/ 1. 3.) (* skoXC1 (* skoXC1 (/ 3. 20.)))))))) 0.) (> (* skoXC1 skoXC1) 0.) (<= (* skoXC1 (* skoXC1 (+ 80. (* skoXC1 (* skoXC1 (+ (- 40.) (* skoXC1 (* skoXC1 (+ 6. (* skoXC1 (* skoXC1 (/ (- 1.) 8.)))))))))))) 48.) (> (* skoXC1 (* skoXC1 (+ (- 80.) (* skoXC1 (* skoXC1 (+ 40. (* skoXC1 (* skoXC1 (+ (- 6.) (* skoXC1 (* skoXC1 (/ 1. 8.)))))))))))) (- 48.)) (<= (* skoXC1 (* skoXC1 (+ 24. (* skoXC1 (* skoXC1 (+ (- 10.) (* skoXC1 skoXC1))))))) 16.) (<= (* skoXC1 (* skoXC1 (/ 1. 2.))) 3.) (> (* skoXC1 (* skoXC1 (/ (- 1.) 2.))) (- 3.)) (> skoXC1 0.) (> (/ 7. 8.) skoXC1) (<= (* skoXC1 (+ (- 1.) (* skoXC1 (* skoXC1 (/ 1. 3.))))) 0.) (<= (* skoXC1 (* skoXC1 (/ (- 1.) 6.))) 1.) (<= (* skoXC1 (* skoXC1 (+ (/ (- 1.) 2.) (* skoXC1 (* skoXC1 (/ (- 1.) 6.)))))) 0.) (<= (* skoXC1 skoXC1) 2.) (<= (* skoXC1 (* skoXC1 (* skoXC1 (* skoXC1 (/ (- 2.) 3.))))) 0.) (<= (* skoXC1 (+ (- 1.) (* skoXC1 (* skoXC1 (/ (- 1.) 6.))))) 0.) (<= (* skoXC1 (* skoXC1 (/ 1. 3.))) 1.) (<= (* skoXC1 (* skoXC1 (+ 256. (* skoXC1 (* skoXC1 (+ (- 160.) (* skoXC1 (* skoXC1 (+ 32. (* skoXC1 (* skoXC1 (- 1.)))))))))))) 128.)) (succedent (> (* skoXC1 (* skoXC1 (* skoXC1 (* skoXC1 (+ (/ (- 80.) 3.) (* skoXC1 (* skoXC1 (+ (/ 128. 3.) (* skoXC1 (* skoXC1 (+ (/ (- 55.) 3.) (* skoXC1 (* skoXC1 (/ 5. 3.)))))))))))))) 0.)))
-----[end problem]-----

-----[begin problem]-----
% In Mathematica format:
Timing[Resolve[Exists[{skoXC1}, And[skoXC1*skoXC1*((-1/6)+skoXC1*skoXC1*(-3/40))<=1,skoXC1*(-1+skoXC1*skoXC1*((1/3)+skoXC1*skoXC1*(3/20)))<=0,skoXC1*skoXC1>0,skoXC1*skoXC1*(80+skoXC1*skoXC1*(-40+skoXC1*skoXC1*(6+skoXC1*skoXC1*(-1/8))))<=48,skoXC1*skoXC1*(-80+skoXC1*skoXC1*(40+skoXC1*skoXC1*(-6+skoXC1*skoXC1*(1/8))))>-48,skoXC1*skoXC1*(24+skoXC1*skoXC1*(-10+skoXC1*skoXC1))<=16,skoXC1*skoXC1*(1/2)<=3,skoXC1*skoXC1*(-1/2)>-3,skoXC1>0,(7/8)>skoXC1,skoXC1*(-1+skoXC1*skoXC1*(1/3))<=0,skoXC1*skoXC1*(-1/6)<=1,skoXC1*skoXC1*((-1/2)+skoXC1*skoXC1*(-1/6))<=0,skoXC1*skoXC1<=2,skoXC1*skoXC1*skoXC1*skoXC1*(-2/3)<=0,skoXC1*(-1+skoXC1*skoXC1*(-1/6))<=0,skoXC1*skoXC1*(1/3)<=1,skoXC1*skoXC1*(256+skoXC1*skoXC1*(-160+skoXC1*skoXC1*(32+skoXC1*skoXC1*-1)))<=128,skoXC1*skoXC1*skoXC1*skoXC1*((-80/3)+skoXC1*skoXC1*((128/3)+skoXC1*skoXC1*((-55/3)+skoXC1*skoXC1*(5/3))))<=0]], Reals]]

% In QepcadB format:
(E skoXC1) [[(skoXC1 skoXC1 (-1/6+(skoXC1 skoXC1 (-3/40))))<=1]/\[[(skoXC1 (-1+(skoXC1 skoXC1 (1/3+(skoXC1 skoXC1 (3/20))))))<=0]/\[[0<(skoXC1 skoXC1)]/\[[(skoXC1 skoXC1 (80+(skoXC1 skoXC1 (-40+(skoXC1 skoXC1 (6+(skoXC1 skoXC1 (-1/8))))))))<=48]/\[[-48<(skoXC1 skoXC1 (-80+(skoXC1 skoXC1 (40+(skoXC1 skoXC1 (-6+(skoXC1 skoXC1 (1/8))))))))]/\[[(skoXC1 skoXC1 (24+(skoXC1 skoXC1 (-10+(skoXC1 skoXC1)))))<=16]/\[[(skoXC1 skoXC1 (1/2))<=3]/\[[-3<(skoXC1 skoXC1 (-1/2))]/\[[0<skoXC1]/\[[skoXC1<7/8]/\[[(skoXC1 (-1+(skoXC1 skoXC1 (1/3))))<=0]/\[[(skoXC1 skoXC1 (-1/6))<=1]/\[[(skoXC1 skoXC1 (-1/2+(skoXC1 skoXC1 (-1/6))))<=0]/\[[(skoXC1 skoXC1)<=2]/\[[(skoXC1 skoXC1 skoXC1 skoXC1 (-2/3))<=0]/\[[(skoXC1 (-1+(skoXC1 skoXC1 (-1/6))))<=0]/\[[(skoXC1 skoXC1 (1/3))<=1]/\[[(skoXC1 skoXC1 (256+(skoXC1 skoXC1 (-160+(skoXC1 skoXC1 (32+(skoXC1 skoXC1 (-1))))))))<=128]/\[(skoXC1 skoXC1 skoXC1 skoXC1 (-80/3+(skoXC1 skoXC1 (128/3+(skoXC1 skoXC1 (-55/3+(skoXC1 skoXC1 (5/3))))))))<=0]]]]]]]]]]]]]]]]]]].

% In SMTLib2 format:
(declare-fun skoXC1 () Real) (assert (and (<= (* skoXC1 (* skoXC1 (+ (/ (- 1.) 6.) (* skoXC1 (* skoXC1 (/ (- 3.) 40.)))))) 1.) (and (<= (* skoXC1 (+ (- 1.) (* skoXC1 (* skoXC1 (+ (/ 1. 3.) (* skoXC1 (* skoXC1 (/ 3. 20.)))))))) 0.) (and (> (* skoXC1 skoXC1) 0.) (and (<= (* skoXC1 (* skoXC1 (+ 80. (* skoXC1 (* skoXC1 (+ (- 40.) (* skoXC1 (* skoXC1 (+ 6. (* skoXC1 (* skoXC1 (/ (- 1.) 8.)))))))))))) 48.) (and (> (* skoXC1 (* skoXC1 (+ (- 80.) (* skoXC1 (* skoXC1 (+ 40. (* skoXC1 (* skoXC1 (+ (- 6.) (* skoXC1 (* skoXC1 (/ 1. 8.)))))))))))) (- 48.)) (and (<= (* skoXC1 (* skoXC1 (+ 24. (* skoXC1 (* skoXC1 (+ (- 10.) (* skoXC1 skoXC1))))))) 16.) (and (<= (* skoXC1 (* skoXC1 (/ 1. 2.))) 3.) (and (> (* skoXC1 (* skoXC1 (/ (- 1.) 2.))) (- 3.)) (and (> skoXC1 0.) (and (> (/ 7. 8.) skoXC1) (and (<= (* skoXC1 (+ (- 1.) (* skoXC1 (* skoXC1 (/ 1. 3.))))) 0.) (and (<= (* skoXC1 (* skoXC1 (/ (- 1.) 6.))) 1.) (and (<= (* skoXC1 (* skoXC1 (+ (/ (- 1.) 2.) (* skoXC1 (* skoXC1 (/ (- 1.) 6.)))))) 0.) (and (<= (* skoXC1 skoXC1) 2.) (and (<= (* skoXC1 (* skoXC1 (* skoXC1 (* skoXC1 (/ (- 2.) 3.))))) 0.) (and (<= (* skoXC1 (+ (- 1.) (* skoXC1 (* skoXC1 (/ (- 1.) 6.))))) 0.) (and (<= (* skoXC1 (* skoXC1 (/ 1. 3.))) 1.) (and (<= (* skoXC1 (* skoXC1 (+ 256. (* skoXC1 (* skoXC1 (+ (- 160.) (* skoXC1 (* skoXC1 (+ 32. (* skoXC1 (* skoXC1 (- 1.)))))))))))) 128.) (<= (* skoXC1 (* skoXC1 (* skoXC1 (* skoXC1 (+ (/ (- 80.) 3.) (* skoXC1 (* skoXC1 (+ (/ 128. 3.) (* skoXC1 (* skoXC1 (+ (/ (- 55.) 3.) (* skoXC1 (* skoXC1 (/ 5. 3.)))))))))))))) 0.))))))))))))))))))))

% In GRF format:
(sequent " MetiTarski formula " (antecedent (<= (* skoXC1 (* skoXC1 (+ (/ (- 1.) 6.) (* skoXC1 (* skoXC1 (/ (- 3.) 40.)))))) 1.) (<= (* skoXC1 (+ (- 1.) (* skoXC1 (* skoXC1 (+ (/ 1. 3.) (* skoXC1 (* skoXC1 (/ 3. 20.)))))))) 0.) (> (* skoXC1 skoXC1) 0.) (<= (* skoXC1 (* skoXC1 (+ 80. (* skoXC1 (* skoXC1 (+ (- 40.) (* skoXC1 (* skoXC1 (+ 6. (* skoXC1 (* skoXC1 (/ (- 1.) 8.)))))))))))) 48.) (> (* skoXC1 (* skoXC1 (+ (- 80.) (* skoXC1 (* skoXC1 (+ 40. (* skoXC1 (* skoXC1 (+ (- 6.) (* skoXC1 (* skoXC1 (/ 1. 8.)))))))))))) (- 48.)) (<= (* skoXC1 (* skoXC1 (+ 24. (* skoXC1 (* skoXC1 (+ (- 10.) (* skoXC1 skoXC1))))))) 16.) (<= (* skoXC1 (* skoXC1 (/ 1. 2.))) 3.) (> (* skoXC1 (* skoXC1 (/ (- 1.) 2.))) (- 3.)) (> skoXC1 0.) (> (/ 7. 8.) skoXC1) (<= (* skoXC1 (+ (- 1.) (* skoXC1 (* skoXC1 (/ 1. 3.))))) 0.) (<= (* skoXC1 (* skoXC1 (/ (- 1.) 6.))) 1.) (<= (* skoXC1 (* skoXC1 (+ (/ (- 1.) 2.) (* skoXC1 (* skoXC1 (/ (- 1.) 6.)))))) 0.) (<= (* skoXC1 skoXC1) 2.) (<= (* skoXC1 (* skoXC1 (* skoXC1 (* skoXC1 (/ (- 2.) 3.))))) 0.) (<= (* skoXC1 (+ (- 1.) (* skoXC1 (* skoXC1 (/ (- 1.) 6.))))) 0.) (<= (* skoXC1 (* skoXC1 (/ 1. 3.))) 1.) (<= (* skoXC1 (* skoXC1 (+ 256. (* skoXC1 (* skoXC1 (+ (- 160.) (* skoXC1 (* skoXC1 (+ 32. (* skoXC1 (* skoXC1 (- 1.)))))))))))) 128.)) (succedent (> (* skoXC1 (* skoXC1 (* skoXC1 (* skoXC1 (+ (/ (- 80.) 3.) (* skoXC1 (* skoXC1 (+ (/ 128. 3.) (* skoXC1 (* skoXC1 (+ (/ (- 55.) 3.) (* skoXC1 (* skoXC1 (/ 5. 3.)))))))))))))) 0.)))
-----[end problem]-----

-----[begin problem]-----
% In Mathematica format:
Timing[Resolve[Exists[{skoXC1}, And[skoXC1*skoXC1*((1/6)+skoXC1*skoXC1*(3/40))<=-1,skoXC1*(-1+skoXC1*skoXC1*((1/3)+skoXC1*skoXC1*(3/20)))<=0,skoXC1*skoXC1>0,skoXC1*skoXC1*(80+skoXC1*skoXC1*(-40+skoXC1*skoXC1*(6+skoXC1*skoXC1*(-1/8))))<=48,skoXC1*skoXC1*(-80+skoXC1*skoXC1*(40+skoXC1*skoXC1*(-6+skoXC1*skoXC1*(1/8))))>-48,skoXC1*skoXC1*(24+skoXC1*skoXC1*(-10+skoXC1*skoXC1))<=16,skoXC1*skoXC1*(1/2)<=3,skoXC1*skoXC1*(-1/2)>-3,skoXC1>0,(7/8)>skoXC1,skoXC1*(-1+skoXC1*skoXC1*(1/3))<=0,skoXC1*skoXC1*(-1/6)<=1,skoXC1*skoXC1*((-1/2)+skoXC1*skoXC1*(-1/6))<=0,skoXC1*skoXC1<=2,skoXC1*skoXC1*skoXC1*skoXC1*(-2/3)<=0,skoXC1*(-1+skoXC1*skoXC1*(-1/6))<=0,skoXC1*skoXC1*(1/3)<=1,skoXC1*skoXC1*(256+skoXC1*skoXC1*(-160+skoXC1*skoXC1*(32+skoXC1*skoXC1*-1)))<=128,skoXC1*skoXC1*skoXC1*skoXC1*((-80/3)+skoXC1*skoXC1*((128/3)+skoXC1*skoXC1*((-55/3)+skoXC1*skoXC1*(5/3))))<=0]], Reals]]

% In QepcadB format:
(E skoXC1) [[(skoXC1 skoXC1 (1/6+(skoXC1 skoXC1 (3/40))))<=-1]/\[[(skoXC1 (-1+(skoXC1 skoXC1 (1/3+(skoXC1 skoXC1 (3/20))))))<=0]/\[[0<(skoXC1 skoXC1)]/\[[(skoXC1 skoXC1 (80+(skoXC1 skoXC1 (-40+(skoXC1 skoXC1 (6+(skoXC1 skoXC1 (-1/8))))))))<=48]/\[[-48<(skoXC1 skoXC1 (-80+(skoXC1 skoXC1 (40+(skoXC1 skoXC1 (-6+(skoXC1 skoXC1 (1/8))))))))]/\[[(skoXC1 skoXC1 (24+(skoXC1 skoXC1 (-10+(skoXC1 skoXC1)))))<=16]/\[[(skoXC1 skoXC1 (1/2))<=3]/\[[-3<(skoXC1 skoXC1 (-1/2))]/\[[0<skoXC1]/\[[skoXC1<7/8]/\[[(skoXC1 (-1+(skoXC1 skoXC1 (1/3))))<=0]/\[[(skoXC1 skoXC1 (-1/6))<=1]/\[[(skoXC1 skoXC1 (-1/2+(skoXC1 skoXC1 (-1/6))))<=0]/\[[(skoXC1 skoXC1)<=2]/\[[(skoXC1 skoXC1 skoXC1 skoXC1 (-2/3))<=0]/\[[(skoXC1 (-1+(skoXC1 skoXC1 (-1/6))))<=0]/\[[(skoXC1 skoXC1 (1/3))<=1]/\[[(skoXC1 skoXC1 (256+(skoXC1 skoXC1 (-160+(skoXC1 skoXC1 (32+(skoXC1 skoXC1 (-1))))))))<=128]/\[(skoXC1 skoXC1 skoXC1 skoXC1 (-80/3+(skoXC1 skoXC1 (128/3+(skoXC1 skoXC1 (-55/3+(skoXC1 skoXC1 (5/3))))))))<=0]]]]]]]]]]]]]]]]]]].

% In SMTLib2 format:
(declare-fun skoXC1 () Real) (assert (and (<= (* skoXC1 (* skoXC1 (+ (/ 1. 6.) (* skoXC1 (* skoXC1 (/ 3. 40.)))))) (- 1.)) (and (<= (* skoXC1 (+ (- 1.) (* skoXC1 (* skoXC1 (+ (/ 1. 3.) (* skoXC1 (* skoXC1 (/ 3. 20.)))))))) 0.) (and (> (* skoXC1 skoXC1) 0.) (and (<= (* skoXC1 (* skoXC1 (+ 80. (* skoXC1 (* skoXC1 (+ (- 40.) (* skoXC1 (* skoXC1 (+ 6. (* skoXC1 (* skoXC1 (/ (- 1.) 8.)))))))))))) 48.) (and (> (* skoXC1 (* skoXC1 (+ (- 80.) (* skoXC1 (* skoXC1 (+ 40. (* skoXC1 (* skoXC1 (+ (- 6.) (* skoXC1 (* skoXC1 (/ 1. 8.)))))))))))) (- 48.)) (and (<= (* skoXC1 (* skoXC1 (+ 24. (* skoXC1 (* skoXC1 (+ (- 10.) (* skoXC1 skoXC1))))))) 16.) (and (<= (* skoXC1 (* skoXC1 (/ 1. 2.))) 3.) (and (> (* skoXC1 (* skoXC1 (/ (- 1.) 2.))) (- 3.)) (and (> skoXC1 0.) (and (> (/ 7. 8.) skoXC1) (and (<= (* skoXC1 (+ (- 1.) (* skoXC1 (* skoXC1 (/ 1. 3.))))) 0.) (and (<= (* skoXC1 (* skoXC1 (/ (- 1.) 6.))) 1.) (and (<= (* skoXC1 (* skoXC1 (+ (/ (- 1.) 2.) (* skoXC1 (* skoXC1 (/ (- 1.) 6.)))))) 0.) (and (<= (* skoXC1 skoXC1) 2.) (and (<= (* skoXC1 (* skoXC1 (* skoXC1 (* skoXC1 (/ (- 2.) 3.))))) 0.) (and (<= (* skoXC1 (+ (- 1.) (* skoXC1 (* skoXC1 (/ (- 1.) 6.))))) 0.) (and (<= (* skoXC1 (* skoXC1 (/ 1. 3.))) 1.) (and (<= (* skoXC1 (* skoXC1 (+ 256. (* skoXC1 (* skoXC1 (+ (- 160.) (* skoXC1 (* skoXC1 (+ 32. (* skoXC1 (* skoXC1 (- 1.)))))))))))) 128.) (<= (* skoXC1 (* skoXC1 (* skoXC1 (* skoXC1 (+ (/ (- 80.) 3.) (* skoXC1 (* skoXC1 (+ (/ 128. 3.) (* skoXC1 (* skoXC1 (+ (/ (- 55.) 3.) (* skoXC1 (* skoXC1 (/ 5. 3.)))))))))))))) 0.))))))))))))))))))))

% In GRF format:
(sequent " MetiTarski formula " (antecedent (<= (* skoXC1 (* skoXC1 (+ (/ 1. 6.) (* skoXC1 (* skoXC1 (/ 3. 40.)))))) (- 1.)) (<= (* skoXC1 (+ (- 1.) (* skoXC1 (* skoXC1 (+ (/ 1. 3.) (* skoXC1 (* skoXC1 (/ 3. 20.)))))))) 0.) (> (* skoXC1 skoXC1) 0.) (<= (* skoXC1 (* skoXC1 (+ 80. (* skoXC1 (* skoXC1 (+ (- 40.) (* skoXC1 (* skoXC1 (+ 6. (* skoXC1 (* skoXC1 (/ (- 1.) 8.)))))))))))) 48.) (> (* skoXC1 (* skoXC1 (+ (- 80.) (* skoXC1 (* skoXC1 (+ 40. (* skoXC1 (* skoXC1 (+ (- 6.) (* skoXC1 (* skoXC1 (/ 1. 8.)))))))))))) (- 48.)) (<= (* skoXC1 (* skoXC1 (+ 24. (* skoXC1 (* skoXC1 (+ (- 10.) (* skoXC1 skoXC1))))))) 16.) (<= (* skoXC1 (* skoXC1 (/ 1. 2.))) 3.) (> (* skoXC1 (* skoXC1 (/ (- 1.) 2.))) (- 3.)) (> skoXC1 0.) (> (/ 7. 8.) skoXC1) (<= (* skoXC1 (+ (- 1.) (* skoXC1 (* skoXC1 (/ 1. 3.))))) 0.) (<= (* skoXC1 (* skoXC1 (/ (- 1.) 6.))) 1.) (<= (* skoXC1 (* skoXC1 (+ (/ (- 1.) 2.) (* skoXC1 (* skoXC1 (/ (- 1.) 6.)))))) 0.) (<= (* skoXC1 skoXC1) 2.) (<= (* skoXC1 (* skoXC1 (* skoXC1 (* skoXC1 (/ (- 2.) 3.))))) 0.) (<= (* skoXC1 (+ (- 1.) (* skoXC1 (* skoXC1 (/ (- 1.) 6.))))) 0.) (<= (* skoXC1 (* skoXC1 (/ 1. 3.))) 1.) (<= (* skoXC1 (* skoXC1 (+ 256. (* skoXC1 (* skoXC1 (+ (- 160.) (* skoXC1 (* skoXC1 (+ 32. (* skoXC1 (* skoXC1 (- 1.)))))))))))) 128.)) (succedent (> (* skoXC1 (* skoXC1 (* skoXC1 (* skoXC1 (+ (/ (- 80.) 3.) (* skoXC1 (* skoXC1 (+ (/ 128. 3.) (* skoXC1 (* skoXC1 (+ (/ (- 55.) 3.) (* skoXC1 (* skoXC1 (/ 5. 3.)))))))))))))) 0.)))
-----[end problem]-----

-----[begin problem]-----
% In Mathematica format:
Timing[Resolve[Exists[{skoXC1}, And[skoXC1*skoXC1>0,skoXC1*(-1+skoXC1*skoXC1*((1/3)+skoXC1*skoXC1*(3/20)))<=0,skoXC1*skoXC1>0,skoXC1*skoXC1*(80+skoXC1*skoXC1*(-40+skoXC1*skoXC1*(6+skoXC1*skoXC1*(-1/8))))<=48,skoXC1*skoXC1*(-80+skoXC1*skoXC1*(40+skoXC1*skoXC1*(-6+skoXC1*skoXC1*(1/8))))>-48,skoXC1*skoXC1*(24+skoXC1*skoXC1*(-10+skoXC1*skoXC1))<=16,skoXC1*skoXC1*(1/2)<=3,skoXC1*skoXC1*(-1/2)>-3,skoXC1>0,(7/8)>skoXC1,skoXC1*(-1+skoXC1*skoXC1*(1/3))<=0,skoXC1*skoXC1*(-1/6)<=1,skoXC1*skoXC1*((-1/2)+skoXC1*skoXC1*(-1/6))<=0,skoXC1*skoXC1<=2,skoXC1*skoXC1*skoXC1*skoXC1*(-2/3)<=0,skoXC1*(-1+skoXC1*skoXC1*(-1/6))<=0,skoXC1*skoXC1*(1/3)<=1,skoXC1*skoXC1*(256+skoXC1*skoXC1*(-160+skoXC1*skoXC1*(32+skoXC1*skoXC1*-1)))<=128,skoXC1*skoXC1*skoXC1*skoXC1*((-80/3)+skoXC1*skoXC1*((128/3)+skoXC1*skoXC1*((-55/3)+skoXC1*skoXC1*(5/3))))<=0]], Reals]]

% In QepcadB format:
(E skoXC1) [[0<(skoXC1 skoXC1)]/\[[(skoXC1 (-1+(skoXC1 skoXC1 (1/3+(skoXC1 skoXC1 (3/20))))))<=0]/\[[0<(skoXC1 skoXC1)]/\[[(skoXC1 skoXC1 (80+(skoXC1 skoXC1 (-40+(skoXC1 skoXC1 (6+(skoXC1 skoXC1 (-1/8))))))))<=48]/\[[-48<(skoXC1 skoXC1 (-80+(skoXC1 skoXC1 (40+(skoXC1 skoXC1 (-6+(skoXC1 skoXC1 (1/8))))))))]/\[[(skoXC1 skoXC1 (24+(skoXC1 skoXC1 (-10+(skoXC1 skoXC1)))))<=16]/\[[(skoXC1 skoXC1 (1/2))<=3]/\[[-3<(skoXC1 skoXC1 (-1/2))]/\[[0<skoXC1]/\[[skoXC1<7/8]/\[[(skoXC1 (-1+(skoXC1 skoXC1 (1/3))))<=0]/\[[(skoXC1 skoXC1 (-1/6))<=1]/\[[(skoXC1 skoXC1 (-1/2+(skoXC1 skoXC1 (-1/6))))<=0]/\[[(skoXC1 skoXC1)<=2]/\[[(skoXC1 skoXC1 skoXC1 skoXC1 (-2/3))<=0]/\[[(skoXC1 (-1+(skoXC1 skoXC1 (-1/6))))<=0]/\[[(skoXC1 skoXC1 (1/3))<=1]/\[[(skoXC1 skoXC1 (256+(skoXC1 skoXC1 (-160+(skoXC1 skoXC1 (32+(skoXC1 skoXC1 (-1))))))))<=128]/\[(skoXC1 skoXC1 skoXC1 skoXC1 (-80/3+(skoXC1 skoXC1 (128/3+(skoXC1 skoXC1 (-55/3+(skoXC1 skoXC1 (5/3))))))))<=0]]]]]]]]]]]]]]]]]]].

% In SMTLib2 format:
(declare-fun skoXC1 () Real) (assert (and (> (* skoXC1 skoXC1) 0.) (and (<= (* skoXC1 (+ (- 1.) (* skoXC1 (* skoXC1 (+ (/ 1. 3.) (* skoXC1 (* skoXC1 (/ 3. 20.)))))))) 0.) (and (> (* skoXC1 skoXC1) 0.) (and (<= (* skoXC1 (* skoXC1 (+ 80. (* skoXC1 (* skoXC1 (+ (- 40.) (* skoXC1 (* skoXC1 (+ 6. (* skoXC1 (* skoXC1 (/ (- 1.) 8.)))))))))))) 48.) (and (> (* skoXC1 (* skoXC1 (+ (- 80.) (* skoXC1 (* skoXC1 (+ 40. (* skoXC1 (* skoXC1 (+ (- 6.) (* skoXC1 (* skoXC1 (/ 1. 8.)))))))))))) (- 48.)) (and (<= (* skoXC1 (* skoXC1 (+ 24. (* skoXC1 (* skoXC1 (+ (- 10.) (* skoXC1 skoXC1))))))) 16.) (and (<= (* skoXC1 (* skoXC1 (/ 1. 2.))) 3.) (and (> (* skoXC1 (* skoXC1 (/ (- 1.) 2.))) (- 3.)) (and (> skoXC1 0.) (and (> (/ 7. 8.) skoXC1) (and (<= (* skoXC1 (+ (- 1.) (* skoXC1 (* skoXC1 (/ 1. 3.))))) 0.) (and (<= (* skoXC1 (* skoXC1 (/ (- 1.) 6.))) 1.) (and (<= (* skoXC1 (* skoXC1 (+ (/ (- 1.) 2.) (* skoXC1 (* skoXC1 (/ (- 1.) 6.)))))) 0.) (and (<= (* skoXC1 skoXC1) 2.) (and (<= (* skoXC1 (* skoXC1 (* skoXC1 (* skoXC1 (/ (- 2.) 3.))))) 0.) (and (<= (* skoXC1 (+ (- 1.) (* skoXC1 (* skoXC1 (/ (- 1.) 6.))))) 0.) (and (<= (* skoXC1 (* skoXC1 (/ 1. 3.))) 1.) (and (<= (* skoXC1 (* skoXC1 (+ 256. (* skoXC1 (* skoXC1 (+ (- 160.) (* skoXC1 (* skoXC1 (+ 32. (* skoXC1 (* skoXC1 (- 1.)))))))))))) 128.) (<= (* skoXC1 (* skoXC1 (* skoXC1 (* skoXC1 (+ (/ (- 80.) 3.) (* skoXC1 (* skoXC1 (+ (/ 128. 3.) (* skoXC1 (* skoXC1 (+ (/ (- 55.) 3.) (* skoXC1 (* skoXC1 (/ 5. 3.)))))))))))))) 0.))))))))))))))))))))

% In GRF format:
(sequent " MetiTarski formula " (antecedent (> (* skoXC1 skoXC1) 0.) (<= (* skoXC1 (+ (- 1.) (* skoXC1 (* skoXC1 (+ (/ 1. 3.) (* skoXC1 (* skoXC1 (/ 3. 20.)))))))) 0.) (> (* skoXC1 skoXC1) 0.) (<= (* skoXC1 (* skoXC1 (+ 80. (* skoXC1 (* skoXC1 (+ (- 40.) (* skoXC1 (* skoXC1 (+ 6. (* skoXC1 (* skoXC1 (/ (- 1.) 8.)))))))))))) 48.) (> (* skoXC1 (* skoXC1 (+ (- 80.) (* skoXC1 (* skoXC1 (+ 40. (* skoXC1 (* skoXC1 (+ (- 6.) (* skoXC1 (* skoXC1 (/ 1. 8.)))))))))))) (- 48.)) (<= (* skoXC1 (* skoXC1 (+ 24. (* skoXC1 (* skoXC1 (+ (- 10.) (* skoXC1 skoXC1))))))) 16.) (<= (* skoXC1 (* skoXC1 (/ 1. 2.))) 3.) (> (* skoXC1 (* skoXC1 (/ (- 1.) 2.))) (- 3.)) (> skoXC1 0.) (> (/ 7. 8.) skoXC1) (<= (* skoXC1 (+ (- 1.) (* skoXC1 (* skoXC1 (/ 1. 3.))))) 0.) (<= (* skoXC1 (* skoXC1 (/ (- 1.) 6.))) 1.) (<= (* skoXC1 (* skoXC1 (+ (/ (- 1.) 2.) (* skoXC1 (* skoXC1 (/ (- 1.) 6.)))))) 0.) (<= (* skoXC1 skoXC1) 2.) (<= (* skoXC1 (* skoXC1 (* skoXC1 (* skoXC1 (/ (- 2.) 3.))))) 0.) (<= (* skoXC1 (+ (- 1.) (* skoXC1 (* skoXC1 (/ (- 1.) 6.))))) 0.) (<= (* skoXC1 (* skoXC1 (/ 1. 3.))) 1.) (<= (* skoXC1 (* skoXC1 (+ 256. (* skoXC1 (* skoXC1 (+ (- 160.) (* skoXC1 (* skoXC1 (+ 32. (* skoXC1 (* skoXC1 (- 1.)))))))))))) 128.)) (succedent (> (* skoXC1 (* skoXC1 (* skoXC1 (* skoXC1 (+ (/ (- 80.) 3.) (* skoXC1 (* skoXC1 (+ (/ 128. 3.) (* skoXC1 (* skoXC1 (+ (/ (- 55.) 3.) (* skoXC1 (* skoXC1 (/ 5. 3.)))))))))))))) 0.)))
-----[end problem]-----

-----[begin problem]-----
% In Mathematica format:
Timing[Resolve[Exists[{skoXC1}, And[skoXC1*skoXC1*((-1/2)+skoXC1*skoXC1*((7/120)+skoXC1*skoXC1*(-3/40)))<=0,skoXC1*skoXC1*((1/6)+skoXC1*skoXC1*(3/40))>-1,skoXC1*(-1+skoXC1*skoXC1*((1/3)+skoXC1*skoXC1*(3/20)))<=0,skoXC1*skoXC1>0,skoXC1*skoXC1*(80+skoXC1*skoXC1*(-40+skoXC1*skoXC1*(6+skoXC1*skoXC1*(-1/8))))<=48,skoXC1*skoXC1*(-80+skoXC1*skoXC1*(40+skoXC1*skoXC1*(-6+skoXC1*skoXC1*(1/8))))>-48,skoXC1*skoXC1*(24+skoXC1*skoXC1*(-10+skoXC1*skoXC1))<=16,skoXC1*skoXC1*(1/2)<=3,skoXC1*skoXC1*(-1/2)>-3,skoXC1>0,(7/8)>skoXC1,skoXC1*(-1+skoXC1*skoXC1*(1/3))<=0,skoXC1*skoXC1*(-1/6)<=1,skoXC1*skoXC1*((-1/2)+skoXC1*skoXC1*(-1/6))<=0,skoXC1*skoXC1<=2,skoXC1*skoXC1*skoXC1*skoXC1*(-2/3)<=0,skoXC1*(-1+skoXC1*skoXC1*(-1/6))<=0,skoXC1*skoXC1*(1/3)<=1,skoXC1*skoXC1*(256+skoXC1*skoXC1*(-160+skoXC1*skoXC1*(32+skoXC1*skoXC1*-1)))<=128,skoXC1*skoXC1*skoXC1*skoXC1*((-80/3)+skoXC1*skoXC1*((128/3)+skoXC1*skoXC1*((-55/3)+skoXC1*skoXC1*(5/3))))<=0]], Reals]]

% In QepcadB format:
(E skoXC1) [[(skoXC1 skoXC1 (-1/2+(skoXC1 skoXC1 (7/120+(skoXC1 skoXC1 (-3/40))))))<=0]/\[[-1<(skoXC1 skoXC1 (1/6+(skoXC1 skoXC1 (3/40))))]/\[[(skoXC1 (-1+(skoXC1 skoXC1 (1/3+(skoXC1 skoXC1 (3/20))))))<=0]/\[[0<(skoXC1 skoXC1)]/\[[(skoXC1 skoXC1 (80+(skoXC1 skoXC1 (-40+(skoXC1 skoXC1 (6+(skoXC1 skoXC1 (-1/8))))))))<=48]/\[[-48<(skoXC1 skoXC1 (-80+(skoXC1 skoXC1 (40+(skoXC1 skoXC1 (-6+(skoXC1 skoXC1 (1/8))))))))]/\[[(skoXC1 skoXC1 (24+(skoXC1 skoXC1 (-10+(skoXC1 skoXC1)))))<=16]/\[[(skoXC1 skoXC1 (1/2))<=3]/\[[-3<(skoXC1 skoXC1 (-1/2))]/\[[0<skoXC1]/\[[skoXC1<7/8]/\[[(skoXC1 (-1+(skoXC1 skoXC1 (1/3))))<=0]/\[[(skoXC1 skoXC1 (-1/6))<=1]/\[[(skoXC1 skoXC1 (-1/2+(skoXC1 skoXC1 (-1/6))))<=0]/\[[(skoXC1 skoXC1)<=2]/\[[(skoXC1 skoXC1 skoXC1 skoXC1 (-2/3))<=0]/\[[(skoXC1 (-1+(skoXC1 skoXC1 (-1/6))))<=0]/\[[(skoXC1 skoXC1 (1/3))<=1]/\[[(skoXC1 skoXC1 (256+(skoXC1 skoXC1 (-160+(skoXC1 skoXC1 (32+(skoXC1 skoXC1 (-1))))))))<=128]/\[(skoXC1 skoXC1 skoXC1 skoXC1 (-80/3+(skoXC1 skoXC1 (128/3+(skoXC1 skoXC1 (-55/3+(skoXC1 skoXC1 (5/3))))))))<=0]]]]]]]]]]]]]]]]]]]].

% In SMTLib2 format:
(declare-fun skoXC1 () Real) (assert (and (<= (* skoXC1 (* skoXC1 (+ (/ (- 1.) 2.) (* skoXC1 (* skoXC1 (+ (/ 7. 120.) (* skoXC1 (* skoXC1 (/ (- 3.) 40.))))))))) 0.) (and (> (* skoXC1 (* skoXC1 (+ (/ 1. 6.) (* skoXC1 (* skoXC1 (/ 3. 40.)))))) (- 1.)) (and (<= (* skoXC1 (+ (- 1.) (* skoXC1 (* skoXC1 (+ (/ 1. 3.) (* skoXC1 (* skoXC1 (/ 3. 20.)))))))) 0.) (and (> (* skoXC1 skoXC1) 0.) (and (<= (* skoXC1 (* skoXC1 (+ 80. (* skoXC1 (* skoXC1 (+ (- 40.) (* skoXC1 (* skoXC1 (+ 6. (* skoXC1 (* skoXC1 (/ (- 1.) 8.)))))))))))) 48.) (and (> (* skoXC1 (* skoXC1 (+ (- 80.) (* skoXC1 (* skoXC1 (+ 40. (* skoXC1 (* skoXC1 (+ (- 6.) (* skoXC1 (* skoXC1 (/ 1. 8.)))))))))))) (- 48.)) (and (<= (* skoXC1 (* skoXC1 (+ 24. (* skoXC1 (* skoXC1 (+ (- 10.) (* skoXC1 skoXC1))))))) 16.) (and (<= (* skoXC1 (* skoXC1 (/ 1. 2.))) 3.) (and (> (* skoXC1 (* skoXC1 (/ (- 1.) 2.))) (- 3.)) (and (> skoXC1 0.) (and (> (/ 7. 8.) skoXC1) (and (<= (* skoXC1 (+ (- 1.) (* skoXC1 (* skoXC1 (/ 1. 3.))))) 0.) (and (<= (* skoXC1 (* skoXC1 (/ (- 1.) 6.))) 1.) (and (<= (* skoXC1 (* skoXC1 (+ (/ (- 1.) 2.) (* skoXC1 (* skoXC1 (/ (- 1.) 6.)))))) 0.) (and (<= (* skoXC1 skoXC1) 2.) (and (<= (* skoXC1 (* skoXC1 (* skoXC1 (* skoXC1 (/ (- 2.) 3.))))) 0.) (and (<= (* skoXC1 (+ (- 1.) (* skoXC1 (* skoXC1 (/ (- 1.) 6.))))) 0.) (and (<= (* skoXC1 (* skoXC1 (/ 1. 3.))) 1.) (and (<= (* skoXC1 (* skoXC1 (+ 256. (* skoXC1 (* skoXC1 (+ (- 160.) (* skoXC1 (* skoXC1 (+ 32. (* skoXC1 (* skoXC1 (- 1.)))))))))))) 128.) (<= (* skoXC1 (* skoXC1 (* skoXC1 (* skoXC1 (+ (/ (- 80.) 3.) (* skoXC1 (* skoXC1 (+ (/ 128. 3.) (* skoXC1 (* skoXC1 (+ (/ (- 55.) 3.) (* skoXC1 (* skoXC1 (/ 5. 3.)))))))))))))) 0.)))))))))))))))))))))

% In GRF format:
(sequent " MetiTarski formula " (antecedent (<= (* skoXC1 (* skoXC1 (+ (/ (- 1.) 2.) (* skoXC1 (* skoXC1 (+ (/ 7. 120.) (* skoXC1 (* skoXC1 (/ (- 3.) 40.))))))))) 0.) (> (* skoXC1 (* skoXC1 (+ (/ 1. 6.) (* skoXC1 (* skoXC1 (/ 3. 40.)))))) (- 1.)) (<= (* skoXC1 (+ (- 1.) (* skoXC1 (* skoXC1 (+ (/ 1. 3.) (* skoXC1 (* skoXC1 (/ 3. 20.)))))))) 0.) (> (* skoXC1 skoXC1) 0.) (<= (* skoXC1 (* skoXC1 (+ 80. (* skoXC1 (* skoXC1 (+ (- 40.) (* skoXC1 (* skoXC1 (+ 6. (* skoXC1 (* skoXC1 (/ (- 1.) 8.)))))))))))) 48.) (> (* skoXC1 (* skoXC1 (+ (- 80.) (* skoXC1 (* skoXC1 (+ 40. (* skoXC1 (* skoXC1 (+ (- 6.) (* skoXC1 (* skoXC1 (/ 1. 8.)))))))))))) (- 48.)) (<= (* skoXC1 (* skoXC1 (+ 24. (* skoXC1 (* skoXC1 (+ (- 10.) (* skoXC1 skoXC1))))))) 16.) (<= (* skoXC1 (* skoXC1 (/ 1. 2.))) 3.) (> (* skoXC1 (* skoXC1 (/ (- 1.) 2.))) (- 3.)) (> skoXC1 0.) (> (/ 7. 8.) skoXC1) (<= (* skoXC1 (+ (- 1.) (* skoXC1 (* skoXC1 (/ 1. 3.))))) 0.) (<= (* skoXC1 (* skoXC1 (/ (- 1.) 6.))) 1.) (<= (* skoXC1 (* skoXC1 (+ (/ (- 1.) 2.) (* skoXC1 (* skoXC1 (/ (- 1.) 6.)))))) 0.) (<= (* skoXC1 skoXC1) 2.) (<= (* skoXC1 (* skoXC1 (* skoXC1 (* skoXC1 (/ (- 2.) 3.))))) 0.) (<= (* skoXC1 (+ (- 1.) (* skoXC1 (* skoXC1 (/ (- 1.) 6.))))) 0.) (<= (* skoXC1 (* skoXC1 (/ 1. 3.))) 1.) (<= (* skoXC1 (* skoXC1 (+ 256. (* skoXC1 (* skoXC1 (+ (- 160.) (* skoXC1 (* skoXC1 (+ 32. (* skoXC1 (* skoXC1 (- 1.)))))))))))) 128.)) (succedent (> (* skoXC1 (* skoXC1 (* skoXC1 (* skoXC1 (+ (/ (- 80.) 3.) (* skoXC1 (* skoXC1 (+ (/ 128. 3.) (* skoXC1 (* skoXC1 (+ (/ (- 55.) 3.) (* skoXC1 (* skoXC1 (/ 5. 3.)))))))))))))) 0.)))
-----[end problem]-----

-----[begin problem]-----
% In Mathematica format:
Timing[Resolve[Exists[{skoXC1}, And[skoXC1*skoXC1*((-1/6)+skoXC1*skoXC1*(-3/40))<=1,skoXC1*(-1+skoXC1*skoXC1*((1/3)+skoXC1*skoXC1*(3/20)))<=0,skoXC1*skoXC1>0,skoXC1*skoXC1*(80+skoXC1*skoXC1*(-40+skoXC1*skoXC1*(6+skoXC1*skoXC1*(-1/8))))<=48,skoXC1*skoXC1*(-80+skoXC1*skoXC1*(40+skoXC1*skoXC1*(-6+skoXC1*skoXC1*(1/8))))>-48,skoXC1*skoXC1*(24+skoXC1*skoXC1*(-10+skoXC1*skoXC1))<=16,skoXC1*skoXC1*(1/2)<=3,skoXC1*skoXC1*(-1/2)>-3,skoXC1>0,(7/8)>skoXC1,skoXC1*(-1+skoXC1*skoXC1*(1/3))<=0,skoXC1*skoXC1*(-1/6)<=1,skoXC1*skoXC1*((-1/2)+skoXC1*skoXC1*(-1/6))<=0,skoXC1*skoXC1<=2,skoXC1*skoXC1*skoXC1*skoXC1*(-2/3)<=0,skoXC1*(-1+skoXC1*skoXC1*(-1/6))<=0,skoXC1*skoXC1*(1/3)<=1,skoXC1*skoXC1*(256+skoXC1*skoXC1*(-160+skoXC1*skoXC1*(32+skoXC1*skoXC1*-1)))<=128,skoXC1*skoXC1*skoXC1*skoXC1*((-80/3)+skoXC1*skoXC1*((128/3)+skoXC1*skoXC1*((-55/3)+skoXC1*skoXC1*(5/3))))<=0]], Reals]]

% In QepcadB format:
(E skoXC1) [[(skoXC1 skoXC1 (-1/6+(skoXC1 skoXC1 (-3/40))))<=1]/\[[(skoXC1 (-1+(skoXC1 skoXC1 (1/3+(skoXC1 skoXC1 (3/20))))))<=0]/\[[0<(skoXC1 skoXC1)]/\[[(skoXC1 skoXC1 (80+(skoXC1 skoXC1 (-40+(skoXC1 skoXC1 (6+(skoXC1 skoXC1 (-1/8))))))))<=48]/\[[-48<(skoXC1 skoXC1 (-80+(skoXC1 skoXC1 (40+(skoXC1 skoXC1 (-6+(skoXC1 skoXC1 (1/8))))))))]/\[[(skoXC1 skoXC1 (24+(skoXC1 skoXC1 (-10+(skoXC1 skoXC1)))))<=16]/\[[(skoXC1 skoXC1 (1/2))<=3]/\[[-3<(skoXC1 skoXC1 (-1/2))]/\[[0<skoXC1]/\[[skoXC1<7/8]/\[[(skoXC1 (-1+(skoXC1 skoXC1 (1/3))))<=0]/\[[(skoXC1 skoXC1 (-1/6))<=1]/\[[(skoXC1 skoXC1 (-1/2+(skoXC1 skoXC1 (-1/6))))<=0]/\[[(skoXC1 skoXC1)<=2]/\[[(skoXC1 skoXC1 skoXC1 skoXC1 (-2/3))<=0]/\[[(skoXC1 (-1+(skoXC1 skoXC1 (-1/6))))<=0]/\[[(skoXC1 skoXC1 (1/3))<=1]/\[[(skoXC1 skoXC1 (256+(skoXC1 skoXC1 (-160+(skoXC1 skoXC1 (32+(skoXC1 skoXC1 (-1))))))))<=128]/\[(skoXC1 skoXC1 skoXC1 skoXC1 (-80/3+(skoXC1 skoXC1 (128/3+(skoXC1 skoXC1 (-55/3+(skoXC1 skoXC1 (5/3))))))))<=0]]]]]]]]]]]]]]]]]]].

% In SMTLib2 format:
(declare-fun skoXC1 () Real) (assert (and (<= (* skoXC1 (* skoXC1 (+ (/ (- 1.) 6.) (* skoXC1 (* skoXC1 (/ (- 3.) 40.)))))) 1.) (and (<= (* skoXC1 (+ (- 1.) (* skoXC1 (* skoXC1 (+ (/ 1. 3.) (* skoXC1 (* skoXC1 (/ 3. 20.)))))))) 0.) (and (> (* skoXC1 skoXC1) 0.) (and (<= (* skoXC1 (* skoXC1 (+ 80. (* skoXC1 (* skoXC1 (+ (- 40.) (* skoXC1 (* skoXC1 (+ 6. (* skoXC1 (* skoXC1 (/ (- 1.) 8.)))))))))))) 48.) (and (> (* skoXC1 (* skoXC1 (+ (- 80.) (* skoXC1 (* skoXC1 (+ 40. (* skoXC1 (* skoXC1 (+ (- 6.) (* skoXC1 (* skoXC1 (/ 1. 8.)))))))))))) (- 48.)) (and (<= (* skoXC1 (* skoXC1 (+ 24. (* skoXC1 (* skoXC1 (+ (- 10.) (* skoXC1 skoXC1))))))) 16.) (and (<= (* skoXC1 (* skoXC1 (/ 1. 2.))) 3.) (and (> (* skoXC1 (* skoXC1 (/ (- 1.) 2.))) (- 3.)) (and (> skoXC1 0.) (and (> (/ 7. 8.) skoXC1) (and (<= (* skoXC1 (+ (- 1.) (* skoXC1 (* skoXC1 (/ 1. 3.))))) 0.) (and (<= (* skoXC1 (* skoXC1 (/ (- 1.) 6.))) 1.) (and (<= (* skoXC1 (* skoXC1 (+ (/ (- 1.) 2.) (* skoXC1 (* skoXC1 (/ (- 1.) 6.)))))) 0.) (and (<= (* skoXC1 skoXC1) 2.) (and (<= (* skoXC1 (* skoXC1 (* skoXC1 (* skoXC1 (/ (- 2.) 3.))))) 0.) (and (<= (* skoXC1 (+ (- 1.) (* skoXC1 (* skoXC1 (/ (- 1.) 6.))))) 0.) (and (<= (* skoXC1 (* skoXC1 (/ 1. 3.))) 1.) (and (<= (* skoXC1 (* skoXC1 (+ 256. (* skoXC1 (* skoXC1 (+ (- 160.) (* skoXC1 (* skoXC1 (+ 32. (* skoXC1 (* skoXC1 (- 1.)))))))))))) 128.) (<= (* skoXC1 (* skoXC1 (* skoXC1 (* skoXC1 (+ (/ (- 80.) 3.) (* skoXC1 (* skoXC1 (+ (/ 128. 3.) (* skoXC1 (* skoXC1 (+ (/ (- 55.) 3.) (* skoXC1 (* skoXC1 (/ 5. 3.)))))))))))))) 0.))))))))))))))))))))

% In GRF format:
(sequent " MetiTarski formula " (antecedent (<= (* skoXC1 (* skoXC1 (+ (/ (- 1.) 6.) (* skoXC1 (* skoXC1 (/ (- 3.) 40.)))))) 1.) (<= (* skoXC1 (+ (- 1.) (* skoXC1 (* skoXC1 (+ (/ 1. 3.) (* skoXC1 (* skoXC1 (/ 3. 20.)))))))) 0.) (> (* skoXC1 skoXC1) 0.) (<= (* skoXC1 (* skoXC1 (+ 80. (* skoXC1 (* skoXC1 (+ (- 40.) (* skoXC1 (* skoXC1 (+ 6. (* skoXC1 (* skoXC1 (/ (- 1.) 8.)))))))))))) 48.) (> (* skoXC1 (* skoXC1 (+ (- 80.) (* skoXC1 (* skoXC1 (+ 40. (* skoXC1 (* skoXC1 (+ (- 6.) (* skoXC1 (* skoXC1 (/ 1. 8.)))))))))))) (- 48.)) (<= (* skoXC1 (* skoXC1 (+ 24. (* skoXC1 (* skoXC1 (+ (- 10.) (* skoXC1 skoXC1))))))) 16.) (<= (* skoXC1 (* skoXC1 (/ 1. 2.))) 3.) (> (* skoXC1 (* skoXC1 (/ (- 1.) 2.))) (- 3.)) (> skoXC1 0.) (> (/ 7. 8.) skoXC1) (<= (* skoXC1 (+ (- 1.) (* skoXC1 (* skoXC1 (/ 1. 3.))))) 0.) (<= (* skoXC1 (* skoXC1 (/ (- 1.) 6.))) 1.) (<= (* skoXC1 (* skoXC1 (+ (/ (- 1.) 2.) (* skoXC1 (* skoXC1 (/ (- 1.) 6.)))))) 0.) (<= (* skoXC1 skoXC1) 2.) (<= (* skoXC1 (* skoXC1 (* skoXC1 (* skoXC1 (/ (- 2.) 3.))))) 0.) (<= (* skoXC1 (+ (- 1.) (* skoXC1 (* skoXC1 (/ (- 1.) 6.))))) 0.) (<= (* skoXC1 (* skoXC1 (/ 1. 3.))) 1.) (<= (* skoXC1 (* skoXC1 (+ 256. (* skoXC1 (* skoXC1 (+ (- 160.) (* skoXC1 (* skoXC1 (+ 32. (* skoXC1 (* skoXC1 (- 1.)))))))))))) 128.)) (succedent (> (* skoXC1 (* skoXC1 (* skoXC1 (* skoXC1 (+ (/ (- 80.) 3.) (* skoXC1 (* skoXC1 (+ (/ 128. 3.) (* skoXC1 (* skoXC1 (+ (/ (- 55.) 3.) (* skoXC1 (* skoXC1 (/ 5. 3.)))))))))))))) 0.)))
-----[end problem]-----

-----[begin problem]-----
% In Mathematica format:
Timing[Resolve[Exists[{skoXC1}, And[skoXC1*skoXC1*((-1/2)+skoXC1*skoXC1*((7/120)+skoXC1*skoXC1*(-3/40)))<=0,skoXC1*skoXC1*((-1/6)+skoXC1*skoXC1*(-3/40))<=1,skoXC1*(-1+skoXC1*skoXC1*((1/3)+skoXC1*skoXC1*(3/20)))<=0,skoXC1*skoXC1>0,skoXC1*skoXC1*(80+skoXC1*skoXC1*(-40+skoXC1*skoXC1*(6+skoXC1*skoXC1*(-1/8))))<=48,skoXC1*skoXC1*(-80+skoXC1*skoXC1*(40+skoXC1*skoXC1*(-6+skoXC1*skoXC1*(1/8))))>-48,skoXC1*skoXC1*(24+skoXC1*skoXC1*(-10+skoXC1*skoXC1))<=16,skoXC1*skoXC1*(1/2)<=3,skoXC1*skoXC1*(-1/2)>-3,skoXC1>0,(7/8)>skoXC1,skoXC1*(-1+skoXC1*skoXC1*(1/3))<=0,skoXC1*skoXC1*(-1/6)<=1,skoXC1*skoXC1*((-1/2)+skoXC1*skoXC1*(-1/6))<=0,skoXC1*skoXC1<=2,skoXC1*skoXC1*skoXC1*skoXC1*(-2/3)<=0,skoXC1*(-1+skoXC1*skoXC1*(-1/6))<=0,skoXC1*skoXC1*(1/3)<=1,skoXC1*skoXC1*(256+skoXC1*skoXC1*(-160+skoXC1*skoXC1*(32+skoXC1*skoXC1*-1)))<=128,skoXC1*skoXC1*skoXC1*skoXC1*((-80/3)+skoXC1*skoXC1*((128/3)+skoXC1*skoXC1*((-55/3)+skoXC1*skoXC1*(5/3))))<=0]], Reals]]

% In QepcadB format:
(E skoXC1) [[(skoXC1 skoXC1 (-1/2+(skoXC1 skoXC1 (7/120+(skoXC1 skoXC1 (-3/40))))))<=0]/\[[(skoXC1 skoXC1 (-1/6+(skoXC1 skoXC1 (-3/40))))<=1]/\[[(skoXC1 (-1+(skoXC1 skoXC1 (1/3+(skoXC1 skoXC1 (3/20))))))<=0]/\[[0<(skoXC1 skoXC1)]/\[[(skoXC1 skoXC1 (80+(skoXC1 skoXC1 (-40+(skoXC1 skoXC1 (6+(skoXC1 skoXC1 (-1/8))))))))<=48]/\[[-48<(skoXC1 skoXC1 (-80+(skoXC1 skoXC1 (40+(skoXC1 skoXC1 (-6+(skoXC1 skoXC1 (1/8))))))))]/\[[(skoXC1 skoXC1 (24+(skoXC1 skoXC1 (-10+(skoXC1 skoXC1)))))<=16]/\[[(skoXC1 skoXC1 (1/2))<=3]/\[[-3<(skoXC1 skoXC1 (-1/2))]/\[[0<skoXC1]/\[[skoXC1<7/8]/\[[(skoXC1 (-1+(skoXC1 skoXC1 (1/3))))<=0]/\[[(skoXC1 skoXC1 (-1/6))<=1]/\[[(skoXC1 skoXC1 (-1/2+(skoXC1 skoXC1 (-1/6))))<=0]/\[[(skoXC1 skoXC1)<=2]/\[[(skoXC1 skoXC1 skoXC1 skoXC1 (-2/3))<=0]/\[[(skoXC1 (-1+(skoXC1 skoXC1 (-1/6))))<=0]/\[[(skoXC1 skoXC1 (1/3))<=1]/\[[(skoXC1 skoXC1 (256+(skoXC1 skoXC1 (-160+(skoXC1 skoXC1 (32+(skoXC1 skoXC1 (-1))))))))<=128]/\[(skoXC1 skoXC1 skoXC1 skoXC1 (-80/3+(skoXC1 skoXC1 (128/3+(skoXC1 skoXC1 (-55/3+(skoXC1 skoXC1 (5/3))))))))<=0]]]]]]]]]]]]]]]]]]]].

% In SMTLib2 format:
(declare-fun skoXC1 () Real) (assert (and (<= (* skoXC1 (* skoXC1 (+ (/ (- 1.) 2.) (* skoXC1 (* skoXC1 (+ (/ 7. 120.) (* skoXC1 (* skoXC1 (/ (- 3.) 40.))))))))) 0.) (and (<= (* skoXC1 (* skoXC1 (+ (/ (- 1.) 6.) (* skoXC1 (* skoXC1 (/ (- 3.) 40.)))))) 1.) (and (<= (* skoXC1 (+ (- 1.) (* skoXC1 (* skoXC1 (+ (/ 1. 3.) (* skoXC1 (* skoXC1 (/ 3. 20.)))))))) 0.) (and (> (* skoXC1 skoXC1) 0.) (and (<= (* skoXC1 (* skoXC1 (+ 80. (* skoXC1 (* skoXC1 (+ (- 40.) (* skoXC1 (* skoXC1 (+ 6. (* skoXC1 (* skoXC1 (/ (- 1.) 8.)))))))))))) 48.) (and (> (* skoXC1 (* skoXC1 (+ (- 80.) (* skoXC1 (* skoXC1 (+ 40. (* skoXC1 (* skoXC1 (+ (- 6.) (* skoXC1 (* skoXC1 (/ 1. 8.)))))))))))) (- 48.)) (and (<= (* skoXC1 (* skoXC1 (+ 24. (* skoXC1 (* skoXC1 (+ (- 10.) (* skoXC1 skoXC1))))))) 16.) (and (<= (* skoXC1 (* skoXC1 (/ 1. 2.))) 3.) (and (> (* skoXC1 (* skoXC1 (/ (- 1.) 2.))) (- 3.)) (and (> skoXC1 0.) (and (> (/ 7. 8.) skoXC1) (and (<= (* skoXC1 (+ (- 1.) (* skoXC1 (* skoXC1 (/ 1. 3.))))) 0.) (and (<= (* skoXC1 (* skoXC1 (/ (- 1.) 6.))) 1.) (and (<= (* skoXC1 (* skoXC1 (+ (/ (- 1.) 2.) (* skoXC1 (* skoXC1 (/ (- 1.) 6.)))))) 0.) (and (<= (* skoXC1 skoXC1) 2.) (and (<= (* skoXC1 (* skoXC1 (* skoXC1 (* skoXC1 (/ (- 2.) 3.))))) 0.) (and (<= (* skoXC1 (+ (- 1.) (* skoXC1 (* skoXC1 (/ (- 1.) 6.))))) 0.) (and (<= (* skoXC1 (* skoXC1 (/ 1. 3.))) 1.) (and (<= (* skoXC1 (* skoXC1 (+ 256. (* skoXC1 (* skoXC1 (+ (- 160.) (* skoXC1 (* skoXC1 (+ 32. (* skoXC1 (* skoXC1 (- 1.)))))))))))) 128.) (<= (* skoXC1 (* skoXC1 (* skoXC1 (* skoXC1 (+ (/ (- 80.) 3.) (* skoXC1 (* skoXC1 (+ (/ 128. 3.) (* skoXC1 (* skoXC1 (+ (/ (- 55.) 3.) (* skoXC1 (* skoXC1 (/ 5. 3.)))))))))))))) 0.)))))))))))))))))))))

% In GRF format:
(sequent " MetiTarski formula " (antecedent (<= (* skoXC1 (* skoXC1 (+ (/ (- 1.) 2.) (* skoXC1 (* skoXC1 (+ (/ 7. 120.) (* skoXC1 (* skoXC1 (/ (- 3.) 40.))))))))) 0.) (<= (* skoXC1 (* skoXC1 (+ (/ (- 1.) 6.) (* skoXC1 (* skoXC1 (/ (- 3.) 40.)))))) 1.) (<= (* skoXC1 (+ (- 1.) (* skoXC1 (* skoXC1 (+ (/ 1. 3.) (* skoXC1 (* skoXC1 (/ 3. 20.)))))))) 0.) (> (* skoXC1 skoXC1) 0.) (<= (* skoXC1 (* skoXC1 (+ 80. (* skoXC1 (* skoXC1 (+ (- 40.) (* skoXC1 (* skoXC1 (+ 6. (* skoXC1 (* skoXC1 (/ (- 1.) 8.)))))))))))) 48.) (> (* skoXC1 (* skoXC1 (+ (- 80.) (* skoXC1 (* skoXC1 (+ 40. (* skoXC1 (* skoXC1 (+ (- 6.) (* skoXC1 (* skoXC1 (/ 1. 8.)))))))))))) (- 48.)) (<= (* skoXC1 (* skoXC1 (+ 24. (* skoXC1 (* skoXC1 (+ (- 10.) (* skoXC1 skoXC1))))))) 16.) (<= (* skoXC1 (* skoXC1 (/ 1. 2.))) 3.) (> (* skoXC1 (* skoXC1 (/ (- 1.) 2.))) (- 3.)) (> skoXC1 0.) (> (/ 7. 8.) skoXC1) (<= (* skoXC1 (+ (- 1.) (* skoXC1 (* skoXC1 (/ 1. 3.))))) 0.) (<= (* skoXC1 (* skoXC1 (/ (- 1.) 6.))) 1.) (<= (* skoXC1 (* skoXC1 (+ (/ (- 1.) 2.) (* skoXC1 (* skoXC1 (/ (- 1.) 6.)))))) 0.) (<= (* skoXC1 skoXC1) 2.) (<= (* skoXC1 (* skoXC1 (* skoXC1 (* skoXC1 (/ (- 2.) 3.))))) 0.) (<= (* skoXC1 (+ (- 1.) (* skoXC1 (* skoXC1 (/ (- 1.) 6.))))) 0.) (<= (* skoXC1 (* skoXC1 (/ 1. 3.))) 1.) (<= (* skoXC1 (* skoXC1 (+ 256. (* skoXC1 (* skoXC1 (+ (- 160.) (* skoXC1 (* skoXC1 (+ 32. (* skoXC1 (* skoXC1 (- 1.)))))))))))) 128.)) (succedent (> (* skoXC1 (* skoXC1 (* skoXC1 (* skoXC1 (+ (/ (- 80.) 3.) (* skoXC1 (* skoXC1 (+ (/ 128. 3.) (* skoXC1 (* skoXC1 (+ (/ (- 55.) 3.) (* skoXC1 (* skoXC1 (/ 5. 3.)))))))))))))) 0.)))
-----[end problem]-----

-----[begin problem]-----
% In Mathematica format:
Timing[Resolve[Exists[{skoXC1}, And[skoXC1*skoXC1*((-1/6)+skoXC1*skoXC1*(-3/40))<=1,skoXC1*skoXC1*((-1/2)+skoXC1*skoXC1*((7/120)+skoXC1*skoXC1*(-3/40)))<=0,skoXC1*skoXC1*((-1/6)+skoXC1*skoXC1*(-3/40))<=1,skoXC1*(-1+skoXC1*skoXC1*((1/3)+skoXC1*skoXC1*(3/20)))<=0,skoXC1*skoXC1>0,skoXC1*skoXC1*(80+skoXC1*skoXC1*(-40+skoXC1*skoXC1*(6+skoXC1*skoXC1*(-1/8))))<=48,skoXC1*skoXC1*(-80+skoXC1*skoXC1*(40+skoXC1*skoXC1*(-6+skoXC1*skoXC1*(1/8))))>-48,skoXC1*skoXC1*(24+skoXC1*skoXC1*(-10+skoXC1*skoXC1))<=16,skoXC1*skoXC1*(1/2)<=3,skoXC1*skoXC1*(-1/2)>-3,skoXC1>0,(7/8)>skoXC1,skoXC1*(-1+skoXC1*skoXC1*(1/3))<=0,skoXC1*skoXC1*(-1/6)<=1,skoXC1*skoXC1*((-1/2)+skoXC1*skoXC1*(-1/6))<=0,skoXC1*skoXC1<=2,skoXC1*skoXC1*skoXC1*skoXC1*(-2/3)<=0,skoXC1*(-1+skoXC1*skoXC1*(-1/6))<=0,skoXC1*skoXC1*(1/3)<=1,skoXC1*skoXC1*(256+skoXC1*skoXC1*(-160+skoXC1*skoXC1*(32+skoXC1*skoXC1*-1)))<=128,skoXC1*skoXC1*skoXC1*skoXC1*((-80/3)+skoXC1*skoXC1*((128/3)+skoXC1*skoXC1*((-55/3)+skoXC1*skoXC1*(5/3))))<=0]], Reals]]

% In QepcadB format:
(E skoXC1) [[(skoXC1 skoXC1 (-1/6+(skoXC1 skoXC1 (-3/40))))<=1]/\[[(skoXC1 skoXC1 (-1/2+(skoXC1 skoXC1 (7/120+(skoXC1 skoXC1 (-3/40))))))<=0]/\[[(skoXC1 skoXC1 (-1/6+(skoXC1 skoXC1 (-3/40))))<=1]/\[[(skoXC1 (-1+(skoXC1 skoXC1 (1/3+(skoXC1 skoXC1 (3/20))))))<=0]/\[[0<(skoXC1 skoXC1)]/\[[(skoXC1 skoXC1 (80+(skoXC1 skoXC1 (-40+(skoXC1 skoXC1 (6+(skoXC1 skoXC1 (-1/8))))))))<=48]/\[[-48<(skoXC1 skoXC1 (-80+(skoXC1 skoXC1 (40+(skoXC1 skoXC1 (-6+(skoXC1 skoXC1 (1/8))))))))]/\[[(skoXC1 skoXC1 (24+(skoXC1 skoXC1 (-10+(skoXC1 skoXC1)))))<=16]/\[[(skoXC1 skoXC1 (1/2))<=3]/\[[-3<(skoXC1 skoXC1 (-1/2))]/\[[0<skoXC1]/\[[skoXC1<7/8]/\[[(skoXC1 (-1+(skoXC1 skoXC1 (1/3))))<=0]/\[[(skoXC1 skoXC1 (-1/6))<=1]/\[[(skoXC1 skoXC1 (-1/2+(skoXC1 skoXC1 (-1/6))))<=0]/\[[(skoXC1 skoXC1)<=2]/\[[(skoXC1 skoXC1 skoXC1 skoXC1 (-2/3))<=0]/\[[(skoXC1 (-1+(skoXC1 skoXC1 (-1/6))))<=0]/\[[(skoXC1 skoXC1 (1/3))<=1]/\[[(skoXC1 skoXC1 (256+(skoXC1 skoXC1 (-160+(skoXC1 skoXC1 (32+(skoXC1 skoXC1 (-1))))))))<=128]/\[(skoXC1 skoXC1 skoXC1 skoXC1 (-80/3+(skoXC1 skoXC1 (128/3+(skoXC1 skoXC1 (-55/3+(skoXC1 skoXC1 (5/3))))))))<=0]]]]]]]]]]]]]]]]]]]]].

% In SMTLib2 format:
(declare-fun skoXC1 () Real) (assert (and (<= (* skoXC1 (* skoXC1 (+ (/ (- 1.) 6.) (* skoXC1 (* skoXC1 (/ (- 3.) 40.)))))) 1.) (and (<= (* skoXC1 (* skoXC1 (+ (/ (- 1.) 2.) (* skoXC1 (* skoXC1 (+ (/ 7. 120.) (* skoXC1 (* skoXC1 (/ (- 3.) 40.))))))))) 0.) (and (<= (* skoXC1 (* skoXC1 (+ (/ (- 1.) 6.) (* skoXC1 (* skoXC1 (/ (- 3.) 40.)))))) 1.) (and (<= (* skoXC1 (+ (- 1.) (* skoXC1 (* skoXC1 (+ (/ 1. 3.) (* skoXC1 (* skoXC1 (/ 3. 20.)))))))) 0.) (and (> (* skoXC1 skoXC1) 0.) (and (<= (* skoXC1 (* skoXC1 (+ 80. (* skoXC1 (* skoXC1 (+ (- 40.) (* skoXC1 (* skoXC1 (+ 6. (* skoXC1 (* skoXC1 (/ (- 1.) 8.)))))))))))) 48.) (and (> (* skoXC1 (* skoXC1 (+ (- 80.) (* skoXC1 (* skoXC1 (+ 40. (* skoXC1 (* skoXC1 (+ (- 6.) (* skoXC1 (* skoXC1 (/ 1. 8.)))))))))))) (- 48.)) (and (<= (* skoXC1 (* skoXC1 (+ 24. (* skoXC1 (* skoXC1 (+ (- 10.) (* skoXC1 skoXC1))))))) 16.) (and (<= (* skoXC1 (* skoXC1 (/ 1. 2.))) 3.) (and (> (* skoXC1 (* skoXC1 (/ (- 1.) 2.))) (- 3.)) (and (> skoXC1 0.) (and (> (/ 7. 8.) skoXC1) (and (<= (* skoXC1 (+ (- 1.) (* skoXC1 (* skoXC1 (/ 1. 3.))))) 0.) (and (<= (* skoXC1 (* skoXC1 (/ (- 1.) 6.))) 1.) (and (<= (* skoXC1 (* skoXC1 (+ (/ (- 1.) 2.) (* skoXC1 (* skoXC1 (/ (- 1.) 6.)))))) 0.) (and (<= (* skoXC1 skoXC1) 2.) (and (<= (* skoXC1 (* skoXC1 (* skoXC1 (* skoXC1 (/ (- 2.) 3.))))) 0.) (and (<= (* skoXC1 (+ (- 1.) (* skoXC1 (* skoXC1 (/ (- 1.) 6.))))) 0.) (and (<= (* skoXC1 (* skoXC1 (/ 1. 3.))) 1.) (and (<= (* skoXC1 (* skoXC1 (+ 256. (* skoXC1 (* skoXC1 (+ (- 160.) (* skoXC1 (* skoXC1 (+ 32. (* skoXC1 (* skoXC1 (- 1.)))))))))))) 128.) (<= (* skoXC1 (* skoXC1 (* skoXC1 (* skoXC1 (+ (/ (- 80.) 3.) (* skoXC1 (* skoXC1 (+ (/ 128. 3.) (* skoXC1 (* skoXC1 (+ (/ (- 55.) 3.) (* skoXC1 (* skoXC1 (/ 5. 3.)))))))))))))) 0.))))))))))))))))))))))

% In GRF format:
(sequent " MetiTarski formula " (antecedent (<= (* skoXC1 (* skoXC1 (+ (/ (- 1.) 6.) (* skoXC1 (* skoXC1 (/ (- 3.) 40.)))))) 1.) (<= (* skoXC1 (* skoXC1 (+ (/ (- 1.) 2.) (* skoXC1 (* skoXC1 (+ (/ 7. 120.) (* skoXC1 (* skoXC1 (/ (- 3.) 40.))))))))) 0.) (<= (* skoXC1 (* skoXC1 (+ (/ (- 1.) 6.) (* skoXC1 (* skoXC1 (/ (- 3.) 40.)))))) 1.) (<= (* skoXC1 (+ (- 1.) (* skoXC1 (* skoXC1 (+ (/ 1. 3.) (* skoXC1 (* skoXC1 (/ 3. 20.)))))))) 0.) (> (* skoXC1 skoXC1) 0.) (<= (* skoXC1 (* skoXC1 (+ 80. (* skoXC1 (* skoXC1 (+ (- 40.) (* skoXC1 (* skoXC1 (+ 6. (* skoXC1 (* skoXC1 (/ (- 1.) 8.)))))))))))) 48.) (> (* skoXC1 (* skoXC1 (+ (- 80.) (* skoXC1 (* skoXC1 (+ 40. (* skoXC1 (* skoXC1 (+ (- 6.) (* skoXC1 (* skoXC1 (/ 1. 8.)))))))))))) (- 48.)) (<= (* skoXC1 (* skoXC1 (+ 24. (* skoXC1 (* skoXC1 (+ (- 10.) (* skoXC1 skoXC1))))))) 16.) (<= (* skoXC1 (* skoXC1 (/ 1. 2.))) 3.) (> (* skoXC1 (* skoXC1 (/ (- 1.) 2.))) (- 3.)) (> skoXC1 0.) (> (/ 7. 8.) skoXC1) (<= (* skoXC1 (+ (- 1.) (* skoXC1 (* skoXC1 (/ 1. 3.))))) 0.) (<= (* skoXC1 (* skoXC1 (/ (- 1.) 6.))) 1.) (<= (* skoXC1 (* skoXC1 (+ (/ (- 1.) 2.) (* skoXC1 (* skoXC1 (/ (- 1.) 6.)))))) 0.) (<= (* skoXC1 skoXC1) 2.) (<= (* skoXC1 (* skoXC1 (* skoXC1 (* skoXC1 (/ (- 2.) 3.))))) 0.) (<= (* skoXC1 (+ (- 1.) (* skoXC1 (* skoXC1 (/ (- 1.) 6.))))) 0.) (<= (* skoXC1 (* skoXC1 (/ 1. 3.))) 1.) (<= (* skoXC1 (* skoXC1 (+ 256. (* skoXC1 (* skoXC1 (+ (- 160.) (* skoXC1 (* skoXC1 (+ 32. (* skoXC1 (* skoXC1 (- 1.)))))))))))) 128.)) (succedent (> (* skoXC1 (* skoXC1 (* skoXC1 (* skoXC1 (+ (/ (- 80.) 3.) (* skoXC1 (* skoXC1 (+ (/ 128. 3.) (* skoXC1 (* skoXC1 (+ (/ (- 55.) 3.) (* skoXC1 (* skoXC1 (/ 5. 3.)))))))))))))) 0.)))
-----[end problem]-----

-----[begin problem]-----
% In Mathematica format:
Timing[Resolve[Exists[{skoXC1}, And[skoXC1*skoXC1<=2,skoXC1*skoXC1*((-1/2)+skoXC1*skoXC1*((7/120)+skoXC1*skoXC1*(-3/40)))<=0,skoXC1*skoXC1*((-1/6)+skoXC1*skoXC1*(-3/40))<=1,skoXC1*(-1+skoXC1*skoXC1*((1/3)+skoXC1*skoXC1*(3/20)))<=0,skoXC1*skoXC1>0,skoXC1*skoXC1*(80+skoXC1*skoXC1*(-40+skoXC1*skoXC1*(6+skoXC1*skoXC1*(-1/8))))<=48,skoXC1*skoXC1*(-80+skoXC1*skoXC1*(40+skoXC1*skoXC1*(-6+skoXC1*skoXC1*(1/8))))>-48,skoXC1*skoXC1*(24+skoXC1*skoXC1*(-10+skoXC1*skoXC1))<=16,skoXC1*skoXC1*(1/2)<=3,skoXC1*skoXC1*(-1/2)>-3,skoXC1>0,(7/8)>skoXC1,skoXC1*(-1+skoXC1*skoXC1*(1/3))<=0,skoXC1*skoXC1*(-1/6)<=1,skoXC1*skoXC1*((-1/2)+skoXC1*skoXC1*(-1/6))<=0,skoXC1*skoXC1<=2,skoXC1*skoXC1*skoXC1*skoXC1*(-2/3)<=0,skoXC1*(-1+skoXC1*skoXC1*(-1/6))<=0,skoXC1*skoXC1*(1/3)<=1,skoXC1*skoXC1*(256+skoXC1*skoXC1*(-160+skoXC1*skoXC1*(32+skoXC1*skoXC1*-1)))<=128,skoXC1*skoXC1*skoXC1*skoXC1*((-80/3)+skoXC1*skoXC1*((128/3)+skoXC1*skoXC1*((-55/3)+skoXC1*skoXC1*(5/3))))<=0]], Reals]]

% In QepcadB format:
(E skoXC1) [[(skoXC1 skoXC1)<=2]/\[[(skoXC1 skoXC1 (-1/2+(skoXC1 skoXC1 (7/120+(skoXC1 skoXC1 (-3/40))))))<=0]/\[[(skoXC1 skoXC1 (-1/6+(skoXC1 skoXC1 (-3/40))))<=1]/\[[(skoXC1 (-1+(skoXC1 skoXC1 (1/3+(skoXC1 skoXC1 (3/20))))))<=0]/\[[0<(skoXC1 skoXC1)]/\[[(skoXC1 skoXC1 (80+(skoXC1 skoXC1 (-40+(skoXC1 skoXC1 (6+(skoXC1 skoXC1 (-1/8))))))))<=48]/\[[-48<(skoXC1 skoXC1 (-80+(skoXC1 skoXC1 (40+(skoXC1 skoXC1 (-6+(skoXC1 skoXC1 (1/8))))))))]/\[[(skoXC1 skoXC1 (24+(skoXC1 skoXC1 (-10+(skoXC1 skoXC1)))))<=16]/\[[(skoXC1 skoXC1 (1/2))<=3]/\[[-3<(skoXC1 skoXC1 (-1/2))]/\[[0<skoXC1]/\[[skoXC1<7/8]/\[[(skoXC1 (-1+(skoXC1 skoXC1 (1/3))))<=0]/\[[(skoXC1 skoXC1 (-1/6))<=1]/\[[(skoXC1 skoXC1 (-1/2+(skoXC1 skoXC1 (-1/6))))<=0]/\[[(skoXC1 skoXC1)<=2]/\[[(skoXC1 skoXC1 skoXC1 skoXC1 (-2/3))<=0]/\[[(skoXC1 (-1+(skoXC1 skoXC1 (-1/6))))<=0]/\[[(skoXC1 skoXC1 (1/3))<=1]/\[[(skoXC1 skoXC1 (256+(skoXC1 skoXC1 (-160+(skoXC1 skoXC1 (32+(skoXC1 skoXC1 (-1))))))))<=128]/\[(skoXC1 skoXC1 skoXC1 skoXC1 (-80/3+(skoXC1 skoXC1 (128/3+(skoXC1 skoXC1 (-55/3+(skoXC1 skoXC1 (5/3))))))))<=0]]]]]]]]]]]]]]]]]]]]].

% In SMTLib2 format:
(declare-fun skoXC1 () Real) (assert (and (<= (* skoXC1 skoXC1) 2.) (and (<= (* skoXC1 (* skoXC1 (+ (/ (- 1.) 2.) (* skoXC1 (* skoXC1 (+ (/ 7. 120.) (* skoXC1 (* skoXC1 (/ (- 3.) 40.))))))))) 0.) (and (<= (* skoXC1 (* skoXC1 (+ (/ (- 1.) 6.) (* skoXC1 (* skoXC1 (/ (- 3.) 40.)))))) 1.) (and (<= (* skoXC1 (+ (- 1.) (* skoXC1 (* skoXC1 (+ (/ 1. 3.) (* skoXC1 (* skoXC1 (/ 3. 20.)))))))) 0.) (and (> (* skoXC1 skoXC1) 0.) (and (<= (* skoXC1 (* skoXC1 (+ 80. (* skoXC1 (* skoXC1 (+ (- 40.) (* skoXC1 (* skoXC1 (+ 6. (* skoXC1 (* skoXC1 (/ (- 1.) 8.)))))))))))) 48.) (and (> (* skoXC1 (* skoXC1 (+ (- 80.) (* skoXC1 (* skoXC1 (+ 40. (* skoXC1 (* skoXC1 (+ (- 6.) (* skoXC1 (* skoXC1 (/ 1. 8.)))))))))))) (- 48.)) (and (<= (* skoXC1 (* skoXC1 (+ 24. (* skoXC1 (* skoXC1 (+ (- 10.) (* skoXC1 skoXC1))))))) 16.) (and (<= (* skoXC1 (* skoXC1 (/ 1. 2.))) 3.) (and (> (* skoXC1 (* skoXC1 (/ (- 1.) 2.))) (- 3.)) (and (> skoXC1 0.) (and (> (/ 7. 8.) skoXC1) (and (<= (* skoXC1 (+ (- 1.) (* skoXC1 (* skoXC1 (/ 1. 3.))))) 0.) (and (<= (* skoXC1 (* skoXC1 (/ (- 1.) 6.))) 1.) (and (<= (* skoXC1 (* skoXC1 (+ (/ (- 1.) 2.) (* skoXC1 (* skoXC1 (/ (- 1.) 6.)))))) 0.) (and (<= (* skoXC1 skoXC1) 2.) (and (<= (* skoXC1 (* skoXC1 (* skoXC1 (* skoXC1 (/ (- 2.) 3.))))) 0.) (and (<= (* skoXC1 (+ (- 1.) (* skoXC1 (* skoXC1 (/ (- 1.) 6.))))) 0.) (and (<= (* skoXC1 (* skoXC1 (/ 1. 3.))) 1.) (and (<= (* skoXC1 (* skoXC1 (+ 256. (* skoXC1 (* skoXC1 (+ (- 160.) (* skoXC1 (* skoXC1 (+ 32. (* skoXC1 (* skoXC1 (- 1.)))))))))))) 128.) (<= (* skoXC1 (* skoXC1 (* skoXC1 (* skoXC1 (+ (/ (- 80.) 3.) (* skoXC1 (* skoXC1 (+ (/ 128. 3.) (* skoXC1 (* skoXC1 (+ (/ (- 55.) 3.) (* skoXC1 (* skoXC1 (/ 5. 3.)))))))))))))) 0.))))))))))))))))))))))

% In GRF format:
(sequent " MetiTarski formula " (antecedent (<= (* skoXC1 skoXC1) 2.) (<= (* skoXC1 (* skoXC1 (+ (/ (- 1.) 2.) (* skoXC1 (* skoXC1 (+ (/ 7. 120.) (* skoXC1 (* skoXC1 (/ (- 3.) 40.))))))))) 0.) (<= (* skoXC1 (* skoXC1 (+ (/ (- 1.) 6.) (* skoXC1 (* skoXC1 (/ (- 3.) 40.)))))) 1.) (<= (* skoXC1 (+ (- 1.) (* skoXC1 (* skoXC1 (+ (/ 1. 3.) (* skoXC1 (* skoXC1 (/ 3. 20.)))))))) 0.) (> (* skoXC1 skoXC1) 0.) (<= (* skoXC1 (* skoXC1 (+ 80. (* skoXC1 (* skoXC1 (+ (- 40.) (* skoXC1 (* skoXC1 (+ 6. (* skoXC1 (* skoXC1 (/ (- 1.) 8.)))))))))))) 48.) (> (* skoXC1 (* skoXC1 (+ (- 80.) (* skoXC1 (* skoXC1 (+ 40. (* skoXC1 (* skoXC1 (+ (- 6.) (* skoXC1 (* skoXC1 (/ 1. 8.)))))))))))) (- 48.)) (<= (* skoXC1 (* skoXC1 (+ 24. (* skoXC1 (* skoXC1 (+ (- 10.) (* skoXC1 skoXC1))))))) 16.) (<= (* skoXC1 (* skoXC1 (/ 1. 2.))) 3.) (> (* skoXC1 (* skoXC1 (/ (- 1.) 2.))) (- 3.)) (> skoXC1 0.) (> (/ 7. 8.) skoXC1) (<= (* skoXC1 (+ (- 1.) (* skoXC1 (* skoXC1 (/ 1. 3.))))) 0.) (<= (* skoXC1 (* skoXC1 (/ (- 1.) 6.))) 1.) (<= (* skoXC1 (* skoXC1 (+ (/ (- 1.) 2.) (* skoXC1 (* skoXC1 (/ (- 1.) 6.)))))) 0.) (<= (* skoXC1 skoXC1) 2.) (<= (* skoXC1 (* skoXC1 (* skoXC1 (* skoXC1 (/ (- 2.) 3.))))) 0.) (<= (* skoXC1 (+ (- 1.) (* skoXC1 (* skoXC1 (/ (- 1.) 6.))))) 0.) (<= (* skoXC1 (* skoXC1 (/ 1. 3.))) 1.) (<= (* skoXC1 (* skoXC1 (+ 256. (* skoXC1 (* skoXC1 (+ (- 160.) (* skoXC1 (* skoXC1 (+ 32. (* skoXC1 (* skoXC1 (- 1.)))))))))))) 128.)) (succedent (> (* skoXC1 (* skoXC1 (* skoXC1 (* skoXC1 (+ (/ (- 80.) 3.) (* skoXC1 (* skoXC1 (+ (/ 128. 3.) (* skoXC1 (* skoXC1 (+ (/ (- 55.) 3.) (* skoXC1 (* skoXC1 (/ 5. 3.)))))))))))))) 0.)))
-----[end problem]-----

-----[begin problem]-----
% In Mathematica format:
Timing[Resolve[Exists[{skoXC1}, And[skoXC1*skoXC1*skoXC1*skoXC1*((-13/60)+skoXC1*skoXC1*(-3/10))<=0,skoXC1*skoXC1*-1>-2,skoXC1*skoXC1*((-1/2)+skoXC1*skoXC1*((7/120)+skoXC1*skoXC1*(-3/40)))<=0,skoXC1*skoXC1*((-1/6)+skoXC1*skoXC1*(-3/40))<=1,skoXC1*(-1+skoXC1*skoXC1*((1/3)+skoXC1*skoXC1*(3/20)))<=0,skoXC1*skoXC1>0,skoXC1*skoXC1*(80+skoXC1*skoXC1*(-40+skoXC1*skoXC1*(6+skoXC1*skoXC1*(-1/8))))<=48,skoXC1*skoXC1*(-80+skoXC1*skoXC1*(40+skoXC1*skoXC1*(-6+skoXC1*skoXC1*(1/8))))>-48,skoXC1*skoXC1*(24+skoXC1*skoXC1*(-10+skoXC1*skoXC1))<=16,skoXC1*skoXC1*(1/2)<=3,skoXC1*skoXC1*(-1/2)>-3,skoXC1>0,(7/8)>skoXC1,skoXC1*(-1+skoXC1*skoXC1*(1/3))<=0,skoXC1*skoXC1*(-1/6)<=1,skoXC1*skoXC1*((-1/2)+skoXC1*skoXC1*(-1/6))<=0,skoXC1*skoXC1<=2,skoXC1*skoXC1*skoXC1*skoXC1*(-2/3)<=0,skoXC1*(-1+skoXC1*skoXC1*(-1/6))<=0,skoXC1*skoXC1*(1/3)<=1,skoXC1*skoXC1*(256+skoXC1*skoXC1*(-160+skoXC1*skoXC1*(32+skoXC1*skoXC1*-1)))<=128,skoXC1*skoXC1*skoXC1*skoXC1*((-80/3)+skoXC1*skoXC1*((128/3)+skoXC1*skoXC1*((-55/3)+skoXC1*skoXC1*(5/3))))<=0]], Reals]]

% In QepcadB format:
(E skoXC1) [[(skoXC1 skoXC1 skoXC1 skoXC1 (-13/60+(skoXC1 skoXC1 (-3/10))))<=0]/\[[-2<(skoXC1 skoXC1 (-1))]/\[[(skoXC1 skoXC1 (-1/2+(skoXC1 skoXC1 (7/120+(skoXC1 skoXC1 (-3/40))))))<=0]/\[[(skoXC1 skoXC1 (-1/6+(skoXC1 skoXC1 (-3/40))))<=1]/\[[(skoXC1 (-1+(skoXC1 skoXC1 (1/3+(skoXC1 skoXC1 (3/20))))))<=0]/\[[0<(skoXC1 skoXC1)]/\[[(skoXC1 skoXC1 (80+(skoXC1 skoXC1 (-40+(skoXC1 skoXC1 (6+(skoXC1 skoXC1 (-1/8))))))))<=48]/\[[-48<(skoXC1 skoXC1 (-80+(skoXC1 skoXC1 (40+(skoXC1 skoXC1 (-6+(skoXC1 skoXC1 (1/8))))))))]/\[[(skoXC1 skoXC1 (24+(skoXC1 skoXC1 (-10+(skoXC1 skoXC1)))))<=16]/\[[(skoXC1 skoXC1 (1/2))<=3]/\[[-3<(skoXC1 skoXC1 (-1/2))]/\[[0<skoXC1]/\[[skoXC1<7/8]/\[[(skoXC1 (-1+(skoXC1 skoXC1 (1/3))))<=0]/\[[(skoXC1 skoXC1 (-1/6))<=1]/\[[(skoXC1 skoXC1 (-1/2+(skoXC1 skoXC1 (-1/6))))<=0]/\[[(skoXC1 skoXC1)<=2]/\[[(skoXC1 skoXC1 skoXC1 skoXC1 (-2/3))<=0]/\[[(skoXC1 (-1+(skoXC1 skoXC1 (-1/6))))<=0]/\[[(skoXC1 skoXC1 (1/3))<=1]/\[[(skoXC1 skoXC1 (256+(skoXC1 skoXC1 (-160+(skoXC1 skoXC1 (32+(skoXC1 skoXC1 (-1))))))))<=128]/\[(skoXC1 skoXC1 skoXC1 skoXC1 (-80/3+(skoXC1 skoXC1 (128/3+(skoXC1 skoXC1 (-55/3+(skoXC1 skoXC1 (5/3))))))))<=0]]]]]]]]]]]]]]]]]]]]]].

% In SMTLib2 format:
(declare-fun skoXC1 () Real) (assert (and (<= (* skoXC1 (* skoXC1 (* skoXC1 (* skoXC1 (+ (/ (- 13.) 60.) (* skoXC1 (* skoXC1 (/ (- 3.) 10.)))))))) 0.) (and (> (* skoXC1 (* skoXC1 (- 1.))) (- 2.)) (and (<= (* skoXC1 (* skoXC1 (+ (/ (- 1.) 2.) (* skoXC1 (* skoXC1 (+ (/ 7. 120.) (* skoXC1 (* skoXC1 (/ (- 3.) 40.))))))))) 0.) (and (<= (* skoXC1 (* skoXC1 (+ (/ (- 1.) 6.) (* skoXC1 (* skoXC1 (/ (- 3.) 40.)))))) 1.) (and (<= (* skoXC1 (+ (- 1.) (* skoXC1 (* skoXC1 (+ (/ 1. 3.) (* skoXC1 (* skoXC1 (/ 3. 20.)))))))) 0.) (and (> (* skoXC1 skoXC1) 0.) (and (<= (* skoXC1 (* skoXC1 (+ 80. (* skoXC1 (* skoXC1 (+ (- 40.) (* skoXC1 (* skoXC1 (+ 6. (* skoXC1 (* skoXC1 (/ (- 1.) 8.)))))))))))) 48.) (and (> (* skoXC1 (* skoXC1 (+ (- 80.) (* skoXC1 (* skoXC1 (+ 40. (* skoXC1 (* skoXC1 (+ (- 6.) (* skoXC1 (* skoXC1 (/ 1. 8.)))))))))))) (- 48.)) (and (<= (* skoXC1 (* skoXC1 (+ 24. (* skoXC1 (* skoXC1 (+ (- 10.) (* skoXC1 skoXC1))))))) 16.) (and (<= (* skoXC1 (* skoXC1 (/ 1. 2.))) 3.) (and (> (* skoXC1 (* skoXC1 (/ (- 1.) 2.))) (- 3.)) (and (> skoXC1 0.) (and (> (/ 7. 8.) skoXC1) (and (<= (* skoXC1 (+ (- 1.) (* skoXC1 (* skoXC1 (/ 1. 3.))))) 0.) (and (<= (* skoXC1 (* skoXC1 (/ (- 1.) 6.))) 1.) (and (<= (* skoXC1 (* skoXC1 (+ (/ (- 1.) 2.) (* skoXC1 (* skoXC1 (/ (- 1.) 6.)))))) 0.) (and (<= (* skoXC1 skoXC1) 2.) (and (<= (* skoXC1 (* skoXC1 (* skoXC1 (* skoXC1 (/ (- 2.) 3.))))) 0.) (and (<= (* skoXC1 (+ (- 1.) (* skoXC1 (* skoXC1 (/ (- 1.) 6.))))) 0.) (and (<= (* skoXC1 (* skoXC1 (/ 1. 3.))) 1.) (and (<= (* skoXC1 (* skoXC1 (+ 256. (* skoXC1 (* skoXC1 (+ (- 160.) (* skoXC1 (* skoXC1 (+ 32. (* skoXC1 (* skoXC1 (- 1.)))))))))))) 128.) (<= (* skoXC1 (* skoXC1 (* skoXC1 (* skoXC1 (+ (/ (- 80.) 3.) (* skoXC1 (* skoXC1 (+ (/ 128. 3.) (* skoXC1 (* skoXC1 (+ (/ (- 55.) 3.) (* skoXC1 (* skoXC1 (/ 5. 3.)))))))))))))) 0.)))))))))))))))))))))))

% In GRF format:
(sequent " MetiTarski formula " (antecedent (<= (* skoXC1 (* skoXC1 (* skoXC1 (* skoXC1 (+ (/ (- 13.) 60.) (* skoXC1 (* skoXC1 (/ (- 3.) 10.)))))))) 0.) (> (* skoXC1 (* skoXC1 (- 1.))) (- 2.)) (<= (* skoXC1 (* skoXC1 (+ (/ (- 1.) 2.) (* skoXC1 (* skoXC1 (+ (/ 7. 120.) (* skoXC1 (* skoXC1 (/ (- 3.) 40.))))))))) 0.) (<= (* skoXC1 (* skoXC1 (+ (/ (- 1.) 6.) (* skoXC1 (* skoXC1 (/ (- 3.) 40.)))))) 1.) (<= (* skoXC1 (+ (- 1.) (* skoXC1 (* skoXC1 (+ (/ 1. 3.) (* skoXC1 (* skoXC1 (/ 3. 20.)))))))) 0.) (> (* skoXC1 skoXC1) 0.) (<= (* skoXC1 (* skoXC1 (+ 80. (* skoXC1 (* skoXC1 (+ (- 40.) (* skoXC1 (* skoXC1 (+ 6. (* skoXC1 (* skoXC1 (/ (- 1.) 8.)))))))))))) 48.) (> (* skoXC1 (* skoXC1 (+ (- 80.) (* skoXC1 (* skoXC1 (+ 40. (* skoXC1 (* skoXC1 (+ (- 6.) (* skoXC1 (* skoXC1 (/ 1. 8.)))))))))))) (- 48.)) (<= (* skoXC1 (* skoXC1 (+ 24. (* skoXC1 (* skoXC1 (+ (- 10.) (* skoXC1 skoXC1))))))) 16.) (<= (* skoXC1 (* skoXC1 (/ 1. 2.))) 3.) (> (* skoXC1 (* skoXC1 (/ (- 1.) 2.))) (- 3.)) (> skoXC1 0.) (> (/ 7. 8.) skoXC1) (<= (* skoXC1 (+ (- 1.) (* skoXC1 (* skoXC1 (/ 1. 3.))))) 0.) (<= (* skoXC1 (* skoXC1 (/ (- 1.) 6.))) 1.) (<= (* skoXC1 (* skoXC1 (+ (/ (- 1.) 2.) (* skoXC1 (* skoXC1 (/ (- 1.) 6.)))))) 0.) (<= (* skoXC1 skoXC1) 2.) (<= (* skoXC1 (* skoXC1 (* skoXC1 (* skoXC1 (/ (- 2.) 3.))))) 0.) (<= (* skoXC1 (+ (- 1.) (* skoXC1 (* skoXC1 (/ (- 1.) 6.))))) 0.) (<= (* skoXC1 (* skoXC1 (/ 1. 3.))) 1.) (<= (* skoXC1 (* skoXC1 (+ 256. (* skoXC1 (* skoXC1 (+ (- 160.) (* skoXC1 (* skoXC1 (+ 32. (* skoXC1 (* skoXC1 (- 1.)))))))))))) 128.)) (succedent (> (* skoXC1 (* skoXC1 (* skoXC1 (* skoXC1 (+ (/ (- 80.) 3.) (* skoXC1 (* skoXC1 (+ (/ 128. 3.) (* skoXC1 (* skoXC1 (+ (/ (- 55.) 3.) (* skoXC1 (* skoXC1 (/ 5. 3.)))))))))))))) 0.)))
-----[end problem]-----

-----[begin problem]-----
% In Mathematica format:
Timing[Resolve[Exists[{skoXC1}, And[skoXC1*skoXC1<=2,skoXC1*skoXC1*((-1/2)+skoXC1*skoXC1*((7/120)+skoXC1*skoXC1*(-3/40)))<=0,skoXC1*skoXC1*((-1/6)+skoXC1*skoXC1*(-3/40))<=1,skoXC1*(-1+skoXC1*skoXC1*((1/3)+skoXC1*skoXC1*(3/20)))<=0,skoXC1*skoXC1>0,skoXC1*skoXC1*(80+skoXC1*skoXC1*(-40+skoXC1*skoXC1*(6+skoXC1*skoXC1*(-1/8))))<=48,skoXC1*skoXC1*(-80+skoXC1*skoXC1*(40+skoXC1*skoXC1*(-6+skoXC1*skoXC1*(1/8))))>-48,skoXC1*skoXC1*(24+skoXC1*skoXC1*(-10+skoXC1*skoXC1))<=16,skoXC1*skoXC1*(1/2)<=3,skoXC1*skoXC1*(-1/2)>-3,skoXC1>0,(7/8)>skoXC1,skoXC1*(-1+skoXC1*skoXC1*(1/3))<=0,skoXC1*skoXC1*(-1/6)<=1,skoXC1*skoXC1*((-1/2)+skoXC1*skoXC1*(-1/6))<=0,skoXC1*skoXC1<=2,skoXC1*skoXC1*skoXC1*skoXC1*(-2/3)<=0,skoXC1*(-1+skoXC1*skoXC1*(-1/6))<=0,skoXC1*skoXC1*(1/3)<=1,skoXC1*skoXC1*(256+skoXC1*skoXC1*(-160+skoXC1*skoXC1*(32+skoXC1*skoXC1*-1)))<=128,skoXC1*skoXC1*skoXC1*skoXC1*((-80/3)+skoXC1*skoXC1*((128/3)+skoXC1*skoXC1*((-55/3)+skoXC1*skoXC1*(5/3))))<=0]], Reals]]

% In QepcadB format:
(E skoXC1) [[(skoXC1 skoXC1)<=2]/\[[(skoXC1 skoXC1 (-1/2+(skoXC1 skoXC1 (7/120+(skoXC1 skoXC1 (-3/40))))))<=0]/\[[(skoXC1 skoXC1 (-1/6+(skoXC1 skoXC1 (-3/40))))<=1]/\[[(skoXC1 (-1+(skoXC1 skoXC1 (1/3+(skoXC1 skoXC1 (3/20))))))<=0]/\[[0<(skoXC1 skoXC1)]/\[[(skoXC1 skoXC1 (80+(skoXC1 skoXC1 (-40+(skoXC1 skoXC1 (6+(skoXC1 skoXC1 (-1/8))))))))<=48]/\[[-48<(skoXC1 skoXC1 (-80+(skoXC1 skoXC1 (40+(skoXC1 skoXC1 (-6+(skoXC1 skoXC1 (1/8))))))))]/\[[(skoXC1 skoXC1 (24+(skoXC1 skoXC1 (-10+(skoXC1 skoXC1)))))<=16]/\[[(skoXC1 skoXC1 (1/2))<=3]/\[[-3<(skoXC1 skoXC1 (-1/2))]/\[[0<skoXC1]/\[[skoXC1<7/8]/\[[(skoXC1 (-1+(skoXC1 skoXC1 (1/3))))<=0]/\[[(skoXC1 skoXC1 (-1/6))<=1]/\[[(skoXC1 skoXC1 (-1/2+(skoXC1 skoXC1 (-1/6))))<=0]/\[[(skoXC1 skoXC1)<=2]/\[[(skoXC1 skoXC1 skoXC1 skoXC1 (-2/3))<=0]/\[[(skoXC1 (-1+(skoXC1 skoXC1 (-1/6))))<=0]/\[[(skoXC1 skoXC1 (1/3))<=1]/\[[(skoXC1 skoXC1 (256+(skoXC1 skoXC1 (-160+(skoXC1 skoXC1 (32+(skoXC1 skoXC1 (-1))))))))<=128]/\[(skoXC1 skoXC1 skoXC1 skoXC1 (-80/3+(skoXC1 skoXC1 (128/3+(skoXC1 skoXC1 (-55/3+(skoXC1 skoXC1 (5/3))))))))<=0]]]]]]]]]]]]]]]]]]]]].

% In SMTLib2 format:
(declare-fun skoXC1 () Real) (assert (and (<= (* skoXC1 skoXC1) 2.) (and (<= (* skoXC1 (* skoXC1 (+ (/ (- 1.) 2.) (* skoXC1 (* skoXC1 (+ (/ 7. 120.) (* skoXC1 (* skoXC1 (/ (- 3.) 40.))))))))) 0.) (and (<= (* skoXC1 (* skoXC1 (+ (/ (- 1.) 6.) (* skoXC1 (* skoXC1 (/ (- 3.) 40.)))))) 1.) (and (<= (* skoXC1 (+ (- 1.) (* skoXC1 (* skoXC1 (+ (/ 1. 3.) (* skoXC1 (* skoXC1 (/ 3. 20.)))))))) 0.) (and (> (* skoXC1 skoXC1) 0.) (and (<= (* skoXC1 (* skoXC1 (+ 80. (* skoXC1 (* skoXC1 (+ (- 40.) (* skoXC1 (* skoXC1 (+ 6. (* skoXC1 (* skoXC1 (/ (- 1.) 8.)))))))))))) 48.) (and (> (* skoXC1 (* skoXC1 (+ (- 80.) (* skoXC1 (* skoXC1 (+ 40. (* skoXC1 (* skoXC1 (+ (- 6.) (* skoXC1 (* skoXC1 (/ 1. 8.)))))))))))) (- 48.)) (and (<= (* skoXC1 (* skoXC1 (+ 24. (* skoXC1 (* skoXC1 (+ (- 10.) (* skoXC1 skoXC1))))))) 16.) (and (<= (* skoXC1 (* skoXC1 (/ 1. 2.))) 3.) (and (> (* skoXC1 (* skoXC1 (/ (- 1.) 2.))) (- 3.)) (and (> skoXC1 0.) (and (> (/ 7. 8.) skoXC1) (and (<= (* skoXC1 (+ (- 1.) (* skoXC1 (* skoXC1 (/ 1. 3.))))) 0.) (and (<= (* skoXC1 (* skoXC1 (/ (- 1.) 6.))) 1.) (and (<= (* skoXC1 (* skoXC1 (+ (/ (- 1.) 2.) (* skoXC1 (* skoXC1 (/ (- 1.) 6.)))))) 0.) (and (<= (* skoXC1 skoXC1) 2.) (and (<= (* skoXC1 (* skoXC1 (* skoXC1 (* skoXC1 (/ (- 2.) 3.))))) 0.) (and (<= (* skoXC1 (+ (- 1.) (* skoXC1 (* skoXC1 (/ (- 1.) 6.))))) 0.) (and (<= (* skoXC1 (* skoXC1 (/ 1. 3.))) 1.) (and (<= (* skoXC1 (* skoXC1 (+ 256. (* skoXC1 (* skoXC1 (+ (- 160.) (* skoXC1 (* skoXC1 (+ 32. (* skoXC1 (* skoXC1 (- 1.)))))))))))) 128.) (<= (* skoXC1 (* skoXC1 (* skoXC1 (* skoXC1 (+ (/ (- 80.) 3.) (* skoXC1 (* skoXC1 (+ (/ 128. 3.) (* skoXC1 (* skoXC1 (+ (/ (- 55.) 3.) (* skoXC1 (* skoXC1 (/ 5. 3.)))))))))))))) 0.))))))))))))))))))))))

% In GRF format:
(sequent " MetiTarski formula " (antecedent (<= (* skoXC1 skoXC1) 2.) (<= (* skoXC1 (* skoXC1 (+ (/ (- 1.) 2.) (* skoXC1 (* skoXC1 (+ (/ 7. 120.) (* skoXC1 (* skoXC1 (/ (- 3.) 40.))))))))) 0.) (<= (* skoXC1 (* skoXC1 (+ (/ (- 1.) 6.) (* skoXC1 (* skoXC1 (/ (- 3.) 40.)))))) 1.) (<= (* skoXC1 (+ (- 1.) (* skoXC1 (* skoXC1 (+ (/ 1. 3.) (* skoXC1 (* skoXC1 (/ 3. 20.)))))))) 0.) (> (* skoXC1 skoXC1) 0.) (<= (* skoXC1 (* skoXC1 (+ 80. (* skoXC1 (* skoXC1 (+ (- 40.) (* skoXC1 (* skoXC1 (+ 6. (* skoXC1 (* skoXC1 (/ (- 1.) 8.)))))))))))) 48.) (> (* skoXC1 (* skoXC1 (+ (- 80.) (* skoXC1 (* skoXC1 (+ 40. (* skoXC1 (* skoXC1 (+ (- 6.) (* skoXC1 (* skoXC1 (/ 1. 8.)))))))))))) (- 48.)) (<= (* skoXC1 (* skoXC1 (+ 24. (* skoXC1 (* skoXC1 (+ (- 10.) (* skoXC1 skoXC1))))))) 16.) (<= (* skoXC1 (* skoXC1 (/ 1. 2.))) 3.) (> (* skoXC1 (* skoXC1 (/ (- 1.) 2.))) (- 3.)) (> skoXC1 0.) (> (/ 7. 8.) skoXC1) (<= (* skoXC1 (+ (- 1.) (* skoXC1 (* skoXC1 (/ 1. 3.))))) 0.) (<= (* skoXC1 (* skoXC1 (/ (- 1.) 6.))) 1.) (<= (* skoXC1 (* skoXC1 (+ (/ (- 1.) 2.) (* skoXC1 (* skoXC1 (/ (- 1.) 6.)))))) 0.) (<= (* skoXC1 skoXC1) 2.) (<= (* skoXC1 (* skoXC1 (* skoXC1 (* skoXC1 (/ (- 2.) 3.))))) 0.) (<= (* skoXC1 (+ (- 1.) (* skoXC1 (* skoXC1 (/ (- 1.) 6.))))) 0.) (<= (* skoXC1 (* skoXC1 (/ 1. 3.))) 1.) (<= (* skoXC1 (* skoXC1 (+ 256. (* skoXC1 (* skoXC1 (+ (- 160.) (* skoXC1 (* skoXC1 (+ 32. (* skoXC1 (* skoXC1 (- 1.)))))))))))) 128.)) (succedent (> (* skoXC1 (* skoXC1 (* skoXC1 (* skoXC1 (+ (/ (- 80.) 3.) (* skoXC1 (* skoXC1 (+ (/ 128. 3.) (* skoXC1 (* skoXC1 (+ (/ (- 55.) 3.) (* skoXC1 (* skoXC1 (/ 5. 3.)))))))))))))) 0.)))
-----[end problem]-----

-----[begin problem]-----
% In Mathematica format:
Timing[Resolve[Exists[{skoXC1}, And[skoXC1*skoXC1*skoXC1*skoXC1*((-13/60)+skoXC1*skoXC1*(-3/10))<=0,skoXC1*skoXC1*((-1/2)+skoXC1*skoXC1*((7/120)+skoXC1*skoXC1*(-3/40)))<=0,skoXC1*skoXC1*((-1/6)+skoXC1*skoXC1*(-3/40))<=1,skoXC1*(-1+skoXC1*skoXC1*((1/3)+skoXC1*skoXC1*(3/20)))<=0,skoXC1*skoXC1>0,skoXC1*skoXC1*(80+skoXC1*skoXC1*(-40+skoXC1*skoXC1*(6+skoXC1*skoXC1*(-1/8))))<=48,skoXC1*skoXC1*(-80+skoXC1*skoXC1*(40+skoXC1*skoXC1*(-6+skoXC1*skoXC1*(1/8))))>-48,skoXC1*skoXC1*(24+skoXC1*skoXC1*(-10+skoXC1*skoXC1))<=16,skoXC1*skoXC1*(1/2)<=3,skoXC1*skoXC1*(-1/2)>-3,skoXC1>0,(7/8)>skoXC1,skoXC1*(-1+skoXC1*skoXC1*(1/3))<=0,skoXC1*skoXC1*(-1/6)<=1,skoXC1*skoXC1*((-1/2)+skoXC1*skoXC1*(-1/6))<=0,skoXC1*skoXC1<=2,skoXC1*skoXC1*skoXC1*skoXC1*(-2/3)<=0,skoXC1*(-1+skoXC1*skoXC1*(-1/6))<=0,skoXC1*skoXC1*(1/3)<=1,skoXC1*skoXC1*(256+skoXC1*skoXC1*(-160+skoXC1*skoXC1*(32+skoXC1*skoXC1*-1)))<=128,skoXC1*skoXC1*skoXC1*skoXC1*((-80/3)+skoXC1*skoXC1*((128/3)+skoXC1*skoXC1*((-55/3)+skoXC1*skoXC1*(5/3))))<=0]], Reals]]

% In QepcadB format:
(E skoXC1) [[(skoXC1 skoXC1 skoXC1 skoXC1 (-13/60+(skoXC1 skoXC1 (-3/10))))<=0]/\[[(skoXC1 skoXC1 (-1/2+(skoXC1 skoXC1 (7/120+(skoXC1 skoXC1 (-3/40))))))<=0]/\[[(skoXC1 skoXC1 (-1/6+(skoXC1 skoXC1 (-3/40))))<=1]/\[[(skoXC1 (-1+(skoXC1 skoXC1 (1/3+(skoXC1 skoXC1 (3/20))))))<=0]/\[[0<(skoXC1 skoXC1)]/\[[(skoXC1 skoXC1 (80+(skoXC1 skoXC1 (-40+(skoXC1 skoXC1 (6+(skoXC1 skoXC1 (-1/8))))))))<=48]/\[[-48<(skoXC1 skoXC1 (-80+(skoXC1 skoXC1 (40+(skoXC1 skoXC1 (-6+(skoXC1 skoXC1 (1/8))))))))]/\[[(skoXC1 skoXC1 (24+(skoXC1 skoXC1 (-10+(skoXC1 skoXC1)))))<=16]/\[[(skoXC1 skoXC1 (1/2))<=3]/\[[-3<(skoXC1 skoXC1 (-1/2))]/\[[0<skoXC1]/\[[skoXC1<7/8]/\[[(skoXC1 (-1+(skoXC1 skoXC1 (1/3))))<=0]/\[[(skoXC1 skoXC1 (-1/6))<=1]/\[[(skoXC1 skoXC1 (-1/2+(skoXC1 skoXC1 (-1/6))))<=0]/\[[(skoXC1 skoXC1)<=2]/\[[(skoXC1 skoXC1 skoXC1 skoXC1 (-2/3))<=0]/\[[(skoXC1 (-1+(skoXC1 skoXC1 (-1/6))))<=0]/\[[(skoXC1 skoXC1 (1/3))<=1]/\[[(skoXC1 skoXC1 (256+(skoXC1 skoXC1 (-160+(skoXC1 skoXC1 (32+(skoXC1 skoXC1 (-1))))))))<=128]/\[(skoXC1 skoXC1 skoXC1 skoXC1 (-80/3+(skoXC1 skoXC1 (128/3+(skoXC1 skoXC1 (-55/3+(skoXC1 skoXC1 (5/3))))))))<=0]]]]]]]]]]]]]]]]]]]]].

% In SMTLib2 format:
(declare-fun skoXC1 () Real) (assert (and (<= (* skoXC1 (* skoXC1 (* skoXC1 (* skoXC1 (+ (/ (- 13.) 60.) (* skoXC1 (* skoXC1 (/ (- 3.) 10.)))))))) 0.) (and (<= (* skoXC1 (* skoXC1 (+ (/ (- 1.) 2.) (* skoXC1 (* skoXC1 (+ (/ 7. 120.) (* skoXC1 (* skoXC1 (/ (- 3.) 40.))))))))) 0.) (and (<= (* skoXC1 (* skoXC1 (+ (/ (- 1.) 6.) (* skoXC1 (* skoXC1 (/ (- 3.) 40.)))))) 1.) (and (<= (* skoXC1 (+ (- 1.) (* skoXC1 (* skoXC1 (+ (/ 1. 3.) (* skoXC1 (* skoXC1 (/ 3. 20.)))))))) 0.) (and (> (* skoXC1 skoXC1) 0.) (and (<= (* skoXC1 (* skoXC1 (+ 80. (* skoXC1 (* skoXC1 (+ (- 40.) (* skoXC1 (* skoXC1 (+ 6. (* skoXC1 (* skoXC1 (/ (- 1.) 8.)))))))))))) 48.) (and (> (* skoXC1 (* skoXC1 (+ (- 80.) (* skoXC1 (* skoXC1 (+ 40. (* skoXC1 (* skoXC1 (+ (- 6.) (* skoXC1 (* skoXC1 (/ 1. 8.)))))))))))) (- 48.)) (and (<= (* skoXC1 (* skoXC1 (+ 24. (* skoXC1 (* skoXC1 (+ (- 10.) (* skoXC1 skoXC1))))))) 16.) (and (<= (* skoXC1 (* skoXC1 (/ 1. 2.))) 3.) (and (> (* skoXC1 (* skoXC1 (/ (- 1.) 2.))) (- 3.)) (and (> skoXC1 0.) (and (> (/ 7. 8.) skoXC1) (and (<= (* skoXC1 (+ (- 1.) (* skoXC1 (* skoXC1 (/ 1. 3.))))) 0.) (and (<= (* skoXC1 (* skoXC1 (/ (- 1.) 6.))) 1.) (and (<= (* skoXC1 (* skoXC1 (+ (/ (- 1.) 2.) (* skoXC1 (* skoXC1 (/ (- 1.) 6.)))))) 0.) (and (<= (* skoXC1 skoXC1) 2.) (and (<= (* skoXC1 (* skoXC1 (* skoXC1 (* skoXC1 (/ (- 2.) 3.))))) 0.) (and (<= (* skoXC1 (+ (- 1.) (* skoXC1 (* skoXC1 (/ (- 1.) 6.))))) 0.) (and (<= (* skoXC1 (* skoXC1 (/ 1. 3.))) 1.) (and (<= (* skoXC1 (* skoXC1 (+ 256. (* skoXC1 (* skoXC1 (+ (- 160.) (* skoXC1 (* skoXC1 (+ 32. (* skoXC1 (* skoXC1 (- 1.)))))))))))) 128.) (<= (* skoXC1 (* skoXC1 (* skoXC1 (* skoXC1 (+ (/ (- 80.) 3.) (* skoXC1 (* skoXC1 (+ (/ 128. 3.) (* skoXC1 (* skoXC1 (+ (/ (- 55.) 3.) (* skoXC1 (* skoXC1 (/ 5. 3.)))))))))))))) 0.))))))))))))))))))))))

% In GRF format:
(sequent " MetiTarski formula " (antecedent (<= (* skoXC1 (* skoXC1 (* skoXC1 (* skoXC1 (+ (/ (- 13.) 60.) (* skoXC1 (* skoXC1 (/ (- 3.) 10.)))))))) 0.) (<= (* skoXC1 (* skoXC1 (+ (/ (- 1.) 2.) (* skoXC1 (* skoXC1 (+ (/ 7. 120.) (* skoXC1 (* skoXC1 (/ (- 3.) 40.))))))))) 0.) (<= (* skoXC1 (* skoXC1 (+ (/ (- 1.) 6.) (* skoXC1 (* skoXC1 (/ (- 3.) 40.)))))) 1.) (<= (* skoXC1 (+ (- 1.) (* skoXC1 (* skoXC1 (+ (/ 1. 3.) (* skoXC1 (* skoXC1 (/ 3. 20.)))))))) 0.) (> (* skoXC1 skoXC1) 0.) (<= (* skoXC1 (* skoXC1 (+ 80. (* skoXC1 (* skoXC1 (+ (- 40.) (* skoXC1 (* skoXC1 (+ 6. (* skoXC1 (* skoXC1 (/ (- 1.) 8.)))))))))))) 48.) (> (* skoXC1 (* skoXC1 (+ (- 80.) (* skoXC1 (* skoXC1 (+ 40. (* skoXC1 (* skoXC1 (+ (- 6.) (* skoXC1 (* skoXC1 (/ 1. 8.)))))))))))) (- 48.)) (<= (* skoXC1 (* skoXC1 (+ 24. (* skoXC1 (* skoXC1 (+ (- 10.) (* skoXC1 skoXC1))))))) 16.) (<= (* skoXC1 (* skoXC1 (/ 1. 2.))) 3.) (> (* skoXC1 (* skoXC1 (/ (- 1.) 2.))) (- 3.)) (> skoXC1 0.) (> (/ 7. 8.) skoXC1) (<= (* skoXC1 (+ (- 1.) (* skoXC1 (* skoXC1 (/ 1. 3.))))) 0.) (<= (* skoXC1 (* skoXC1 (/ (- 1.) 6.))) 1.) (<= (* skoXC1 (* skoXC1 (+ (/ (- 1.) 2.) (* skoXC1 (* skoXC1 (/ (- 1.) 6.)))))) 0.) (<= (* skoXC1 skoXC1) 2.) (<= (* skoXC1 (* skoXC1 (* skoXC1 (* skoXC1 (/ (- 2.) 3.))))) 0.) (<= (* skoXC1 (+ (- 1.) (* skoXC1 (* skoXC1 (/ (- 1.) 6.))))) 0.) (<= (* skoXC1 (* skoXC1 (/ 1. 3.))) 1.) (<= (* skoXC1 (* skoXC1 (+ 256. (* skoXC1 (* skoXC1 (+ (- 160.) (* skoXC1 (* skoXC1 (+ 32. (* skoXC1 (* skoXC1 (- 1.)))))))))))) 128.)) (succedent (> (* skoXC1 (* skoXC1 (* skoXC1 (* skoXC1 (+ (/ (- 80.) 3.) (* skoXC1 (* skoXC1 (+ (/ 128. 3.) (* skoXC1 (* skoXC1 (+ (/ (- 55.) 3.) (* skoXC1 (* skoXC1 (/ 5. 3.)))))))))))))) 0.)))
-----[end problem]-----

-----[begin problem]-----
% In Mathematica format:
Timing[Resolve[Exists[{skoXC1}, And[skoXC1*skoXC1*((-1/6)+skoXC1*skoXC1*(-3/40))<=1,skoXC1*skoXC1*skoXC1*skoXC1*((-13/60)+skoXC1*skoXC1*(-3/10))<=0,skoXC1*skoXC1*((-1/2)+skoXC1*skoXC1*((7/120)+skoXC1*skoXC1*(-3/40)))<=0,skoXC1*skoXC1*((-1/6)+skoXC1*skoXC1*(-3/40))<=1,skoXC1*(-1+skoXC1*skoXC1*((1/3)+skoXC1*skoXC1*(3/20)))<=0,skoXC1*skoXC1>0,skoXC1*skoXC1*(80+skoXC1*skoXC1*(-40+skoXC1*skoXC1*(6+skoXC1*skoXC1*(-1/8))))<=48,skoXC1*skoXC1*(-80+skoXC1*skoXC1*(40+skoXC1*skoXC1*(-6+skoXC1*skoXC1*(1/8))))>-48,skoXC1*skoXC1*(24+skoXC1*skoXC1*(-10+skoXC1*skoXC1))<=16,skoXC1*skoXC1*(1/2)<=3,skoXC1*skoXC1*(-1/2)>-3,skoXC1>0,(7/8)>skoXC1,skoXC1*(-1+skoXC1*skoXC1*(1/3))<=0,skoXC1*skoXC1*(-1/6)<=1,skoXC1*skoXC1*((-1/2)+skoXC1*skoXC1*(-1/6))<=0,skoXC1*skoXC1<=2,skoXC1*skoXC1*skoXC1*skoXC1*(-2/3)<=0,skoXC1*(-1+skoXC1*skoXC1*(-1/6))<=0,skoXC1*skoXC1*(1/3)<=1,skoXC1*skoXC1*(256+skoXC1*skoXC1*(-160+skoXC1*skoXC1*(32+skoXC1*skoXC1*-1)))<=128,skoXC1*skoXC1*skoXC1*skoXC1*((-80/3)+skoXC1*skoXC1*((128/3)+skoXC1*skoXC1*((-55/3)+skoXC1*skoXC1*(5/3))))<=0]], Reals]]

% In QepcadB format:
(E skoXC1) [[(skoXC1 skoXC1 (-1/6+(skoXC1 skoXC1 (-3/40))))<=1]/\[[(skoXC1 skoXC1 skoXC1 skoXC1 (-13/60+(skoXC1 skoXC1 (-3/10))))<=0]/\[[(skoXC1 skoXC1 (-1/2+(skoXC1 skoXC1 (7/120+(skoXC1 skoXC1 (-3/40))))))<=0]/\[[(skoXC1 skoXC1 (-1/6+(skoXC1 skoXC1 (-3/40))))<=1]/\[[(skoXC1 (-1+(skoXC1 skoXC1 (1/3+(skoXC1 skoXC1 (3/20))))))<=0]/\[[0<(skoXC1 skoXC1)]/\[[(skoXC1 skoXC1 (80+(skoXC1 skoXC1 (-40+(skoXC1 skoXC1 (6+(skoXC1 skoXC1 (-1/8))))))))<=48]/\[[-48<(skoXC1 skoXC1 (-80+(skoXC1 skoXC1 (40+(skoXC1 skoXC1 (-6+(skoXC1 skoXC1 (1/8))))))))]/\[[(skoXC1 skoXC1 (24+(skoXC1 skoXC1 (-10+(skoXC1 skoXC1)))))<=16]/\[[(skoXC1 skoXC1 (1/2))<=3]/\[[-3<(skoXC1 skoXC1 (-1/2))]/\[[0<skoXC1]/\[[skoXC1<7/8]/\[[(skoXC1 (-1+(skoXC1 skoXC1 (1/3))))<=0]/\[[(skoXC1 skoXC1 (-1/6))<=1]/\[[(skoXC1 skoXC1 (-1/2+(skoXC1 skoXC1 (-1/6))))<=0]/\[[(skoXC1 skoXC1)<=2]/\[[(skoXC1 skoXC1 skoXC1 skoXC1 (-2/3))<=0]/\[[(skoXC1 (-1+(skoXC1 skoXC1 (-1/6))))<=0]/\[[(skoXC1 skoXC1 (1/3))<=1]/\[[(skoXC1 skoXC1 (256+(skoXC1 skoXC1 (-160+(skoXC1 skoXC1 (32+(skoXC1 skoXC1 (-1))))))))<=128]/\[(skoXC1 skoXC1 skoXC1 skoXC1 (-80/3+(skoXC1 skoXC1 (128/3+(skoXC1 skoXC1 (-55/3+(skoXC1 skoXC1 (5/3))))))))<=0]]]]]]]]]]]]]]]]]]]]]].

% In SMTLib2 format:
(declare-fun skoXC1 () Real) (assert (and (<= (* skoXC1 (* skoXC1 (+ (/ (- 1.) 6.) (* skoXC1 (* skoXC1 (/ (- 3.) 40.)))))) 1.) (and (<= (* skoXC1 (* skoXC1 (* skoXC1 (* skoXC1 (+ (/ (- 13.) 60.) (* skoXC1 (* skoXC1 (/ (- 3.) 10.)))))))) 0.) (and (<= (* skoXC1 (* skoXC1 (+ (/ (- 1.) 2.) (* skoXC1 (* skoXC1 (+ (/ 7. 120.) (* skoXC1 (* skoXC1 (/ (- 3.) 40.))))))))) 0.) (and (<= (* skoXC1 (* skoXC1 (+ (/ (- 1.) 6.) (* skoXC1 (* skoXC1 (/ (- 3.) 40.)))))) 1.) (and (<= (* skoXC1 (+ (- 1.) (* skoXC1 (* skoXC1 (+ (/ 1. 3.) (* skoXC1 (* skoXC1 (/ 3. 20.)))))))) 0.) (and (> (* skoXC1 skoXC1) 0.) (and (<= (* skoXC1 (* skoXC1 (+ 80. (* skoXC1 (* skoXC1 (+ (- 40.) (* skoXC1 (* skoXC1 (+ 6. (* skoXC1 (* skoXC1 (/ (- 1.) 8.)))))))))))) 48.) (and (> (* skoXC1 (* skoXC1 (+ (- 80.) (* skoXC1 (* skoXC1 (+ 40. (* skoXC1 (* skoXC1 (+ (- 6.) (* skoXC1 (* skoXC1 (/ 1. 8.)))))))))))) (- 48.)) (and (<= (* skoXC1 (* skoXC1 (+ 24. (* skoXC1 (* skoXC1 (+ (- 10.) (* skoXC1 skoXC1))))))) 16.) (and (<= (* skoXC1 (* skoXC1 (/ 1. 2.))) 3.) (and (> (* skoXC1 (* skoXC1 (/ (- 1.) 2.))) (- 3.)) (and (> skoXC1 0.) (and (> (/ 7. 8.) skoXC1) (and (<= (* skoXC1 (+ (- 1.) (* skoXC1 (* skoXC1 (/ 1. 3.))))) 0.) (and (<= (* skoXC1 (* skoXC1 (/ (- 1.) 6.))) 1.) (and (<= (* skoXC1 (* skoXC1 (+ (/ (- 1.) 2.) (* skoXC1 (* skoXC1 (/ (- 1.) 6.)))))) 0.) (and (<= (* skoXC1 skoXC1) 2.) (and (<= (* skoXC1 (* skoXC1 (* skoXC1 (* skoXC1 (/ (- 2.) 3.))))) 0.) (and (<= (* skoXC1 (+ (- 1.) (* skoXC1 (* skoXC1 (/ (- 1.) 6.))))) 0.) (and (<= (* skoXC1 (* skoXC1 (/ 1. 3.))) 1.) (and (<= (* skoXC1 (* skoXC1 (+ 256. (* skoXC1 (* skoXC1 (+ (- 160.) (* skoXC1 (* skoXC1 (+ 32. (* skoXC1 (* skoXC1 (- 1.)))))))))))) 128.) (<= (* skoXC1 (* skoXC1 (* skoXC1 (* skoXC1 (+ (/ (- 80.) 3.) (* skoXC1 (* skoXC1 (+ (/ 128. 3.) (* skoXC1 (* skoXC1 (+ (/ (- 55.) 3.) (* skoXC1 (* skoXC1 (/ 5. 3.)))))))))))))) 0.)))))))))))))))))))))))

% In GRF format:
(sequent " MetiTarski formula " (antecedent (<= (* skoXC1 (* skoXC1 (+ (/ (- 1.) 6.) (* skoXC1 (* skoXC1 (/ (- 3.) 40.)))))) 1.) (<= (* skoXC1 (* skoXC1 (* skoXC1 (* skoXC1 (+ (/ (- 13.) 60.) (* skoXC1 (* skoXC1 (/ (- 3.) 10.)))))))) 0.) (<= (* skoXC1 (* skoXC1 (+ (/ (- 1.) 2.) (* skoXC1 (* skoXC1 (+ (/ 7. 120.) (* skoXC1 (* skoXC1 (/ (- 3.) 40.))))))))) 0.) (<= (* skoXC1 (* skoXC1 (+ (/ (- 1.) 6.) (* skoXC1 (* skoXC1 (/ (- 3.) 40.)))))) 1.) (<= (* skoXC1 (+ (- 1.) (* skoXC1 (* skoXC1 (+ (/ 1. 3.) (* skoXC1 (* skoXC1 (/ 3. 20.)))))))) 0.) (> (* skoXC1 skoXC1) 0.) (<= (* skoXC1 (* skoXC1 (+ 80. (* skoXC1 (* skoXC1 (+ (- 40.) (* skoXC1 (* skoXC1 (+ 6. (* skoXC1 (* skoXC1 (/ (- 1.) 8.)))))))))))) 48.) (> (* skoXC1 (* skoXC1 (+ (- 80.) (* skoXC1 (* skoXC1 (+ 40. (* skoXC1 (* skoXC1 (+ (- 6.) (* skoXC1 (* skoXC1 (/ 1. 8.)))))))))))) (- 48.)) (<= (* skoXC1 (* skoXC1 (+ 24. (* skoXC1 (* skoXC1 (+ (- 10.) (* skoXC1 skoXC1))))))) 16.) (<= (* skoXC1 (* skoXC1 (/ 1. 2.))) 3.) (> (* skoXC1 (* skoXC1 (/ (- 1.) 2.))) (- 3.)) (> skoXC1 0.) (> (/ 7. 8.) skoXC1) (<= (* skoXC1 (+ (- 1.) (* skoXC1 (* skoXC1 (/ 1. 3.))))) 0.) (<= (* skoXC1 (* skoXC1 (/ (- 1.) 6.))) 1.) (<= (* skoXC1 (* skoXC1 (+ (/ (- 1.) 2.) (* skoXC1 (* skoXC1 (/ (- 1.) 6.)))))) 0.) (<= (* skoXC1 skoXC1) 2.) (<= (* skoXC1 (* skoXC1 (* skoXC1 (* skoXC1 (/ (- 2.) 3.))))) 0.) (<= (* skoXC1 (+ (- 1.) (* skoXC1 (* skoXC1 (/ (- 1.) 6.))))) 0.) (<= (* skoXC1 (* skoXC1 (/ 1. 3.))) 1.) (<= (* skoXC1 (* skoXC1 (+ 256. (* skoXC1 (* skoXC1 (+ (- 160.) (* skoXC1 (* skoXC1 (+ 32. (* skoXC1 (* skoXC1 (- 1.)))))))))))) 128.)) (succedent (> (* skoXC1 (* skoXC1 (* skoXC1 (* skoXC1 (+ (/ (- 80.) 3.) (* skoXC1 (* skoXC1 (+ (/ 128. 3.) (* skoXC1 (* skoXC1 (+ (/ (- 55.) 3.) (* skoXC1 (* skoXC1 (/ 5. 3.)))))))))))))) 0.)))
-----[end problem]-----

-----[begin problem]-----
% In Mathematica format:
Timing[Resolve[Exists[{skoXC1}, And[skoXC1*skoXC1*skoXC1*skoXC1*((-13/60)+skoXC1*skoXC1*(-3/10))<=0,skoXC1*skoXC1*((1/6)+skoXC1*skoXC1*(3/40))>-1,skoXC1*skoXC1*skoXC1*skoXC1*((-13/60)+skoXC1*skoXC1*(-3/10))<=0,skoXC1*skoXC1*((-1/2)+skoXC1*skoXC1*((7/120)+skoXC1*skoXC1*(-3/40)))<=0,skoXC1*skoXC1*((-1/6)+skoXC1*skoXC1*(-3/40))<=1,skoXC1*(-1+skoXC1*skoXC1*((1/3)+skoXC1*skoXC1*(3/20)))<=0,skoXC1*skoXC1>0,skoXC1*skoXC1*(80+skoXC1*skoXC1*(-40+skoXC1*skoXC1*(6+skoXC1*skoXC1*(-1/8))))<=48,skoXC1*skoXC1*(-80+skoXC1*skoXC1*(40+skoXC1*skoXC1*(-6+skoXC1*skoXC1*(1/8))))>-48,skoXC1*skoXC1*(24+skoXC1*skoXC1*(-10+skoXC1*skoXC1))<=16,skoXC1*skoXC1*(1/2)<=3,skoXC1*skoXC1*(-1/2)>-3,skoXC1>0,(7/8)>skoXC1,skoXC1*(-1+skoXC1*skoXC1*(1/3))<=0,skoXC1*skoXC1*(-1/6)<=1,skoXC1*skoXC1*((-1/2)+skoXC1*skoXC1*(-1/6))<=0,skoXC1*skoXC1<=2,skoXC1*skoXC1*skoXC1*skoXC1*(-2/3)<=0,skoXC1*(-1+skoXC1*skoXC1*(-1/6))<=0,skoXC1*skoXC1*(1/3)<=1,skoXC1*skoXC1*(256+skoXC1*skoXC1*(-160+skoXC1*skoXC1*(32+skoXC1*skoXC1*-1)))<=128,skoXC1*skoXC1*skoXC1*skoXC1*((-80/3)+skoXC1*skoXC1*((128/3)+skoXC1*skoXC1*((-55/3)+skoXC1*skoXC1*(5/3))))<=0]], Reals]]

% In QepcadB format:
(E skoXC1) [[(skoXC1 skoXC1 skoXC1 skoXC1 (-13/60+(skoXC1 skoXC1 (-3/10))))<=0]/\[[-1<(skoXC1 skoXC1 (1/6+(skoXC1 skoXC1 (3/40))))]/\[[(skoXC1 skoXC1 skoXC1 skoXC1 (-13/60+(skoXC1 skoXC1 (-3/10))))<=0]/\[[(skoXC1 skoXC1 (-1/2+(skoXC1 skoXC1 (7/120+(skoXC1 skoXC1 (-3/40))))))<=0]/\[[(skoXC1 skoXC1 (-1/6+(skoXC1 skoXC1 (-3/40))))<=1]/\[[(skoXC1 (-1+(skoXC1 skoXC1 (1/3+(skoXC1 skoXC1 (3/20))))))<=0]/\[[0<(skoXC1 skoXC1)]/\[[(skoXC1 skoXC1 (80+(skoXC1 skoXC1 (-40+(skoXC1 skoXC1 (6+(skoXC1 skoXC1 (-1/8))))))))<=48]/\[[-48<(skoXC1 skoXC1 (-80+(skoXC1 skoXC1 (40+(skoXC1 skoXC1 (-6+(skoXC1 skoXC1 (1/8))))))))]/\[[(skoXC1 skoXC1 (24+(skoXC1 skoXC1 (-10+(skoXC1 skoXC1)))))<=16]/\[[(skoXC1 skoXC1 (1/2))<=3]/\[[-3<(skoXC1 skoXC1 (-1/2))]/\[[0<skoXC1]/\[[skoXC1<7/8]/\[[(skoXC1 (-1+(skoXC1 skoXC1 (1/3))))<=0]/\[[(skoXC1 skoXC1 (-1/6))<=1]/\[[(skoXC1 skoXC1 (-1/2+(skoXC1 skoXC1 (-1/6))))<=0]/\[[(skoXC1 skoXC1)<=2]/\[[(skoXC1 skoXC1 skoXC1 skoXC1 (-2/3))<=0]/\[[(skoXC1 (-1+(skoXC1 skoXC1 (-1/6))))<=0]/\[[(skoXC1 skoXC1 (1/3))<=1]/\[[(skoXC1 skoXC1 (256+(skoXC1 skoXC1 (-160+(skoXC1 skoXC1 (32+(skoXC1 skoXC1 (-1))))))))<=128]/\[(skoXC1 skoXC1 skoXC1 skoXC1 (-80/3+(skoXC1 skoXC1 (128/3+(skoXC1 skoXC1 (-55/3+(skoXC1 skoXC1 (5/3))))))))<=0]]]]]]]]]]]]]]]]]]]]]]].

% In SMTLib2 format:
(declare-fun skoXC1 () Real) (assert (and (<= (* skoXC1 (* skoXC1 (* skoXC1 (* skoXC1 (+ (/ (- 13.) 60.) (* skoXC1 (* skoXC1 (/ (- 3.) 10.)))))))) 0.) (and (> (* skoXC1 (* skoXC1 (+ (/ 1. 6.) (* skoXC1 (* skoXC1 (/ 3. 40.)))))) (- 1.)) (and (<= (* skoXC1 (* skoXC1 (* skoXC1 (* skoXC1 (+ (/ (- 13.) 60.) (* skoXC1 (* skoXC1 (/ (- 3.) 10.)))))))) 0.) (and (<= (* skoXC1 (* skoXC1 (+ (/ (- 1.) 2.) (* skoXC1 (* skoXC1 (+ (/ 7. 120.) (* skoXC1 (* skoXC1 (/ (- 3.) 40.))))))))) 0.) (and (<= (* skoXC1 (* skoXC1 (+ (/ (- 1.) 6.) (* skoXC1 (* skoXC1 (/ (- 3.) 40.)))))) 1.) (and (<= (* skoXC1 (+ (- 1.) (* skoXC1 (* skoXC1 (+ (/ 1. 3.) (* skoXC1 (* skoXC1 (/ 3. 20.)))))))) 0.) (and (> (* skoXC1 skoXC1) 0.) (and (<= (* skoXC1 (* skoXC1 (+ 80. (* skoXC1 (* skoXC1 (+ (- 40.) (* skoXC1 (* skoXC1 (+ 6. (* skoXC1 (* skoXC1 (/ (- 1.) 8.)))))))))))) 48.) (and (> (* skoXC1 (* skoXC1 (+ (- 80.) (* skoXC1 (* skoXC1 (+ 40. (* skoXC1 (* skoXC1 (+ (- 6.) (* skoXC1 (* skoXC1 (/ 1. 8.)))))))))))) (- 48.)) (and (<= (* skoXC1 (* skoXC1 (+ 24. (* skoXC1 (* skoXC1 (+ (- 10.) (* skoXC1 skoXC1))))))) 16.) (and (<= (* skoXC1 (* skoXC1 (/ 1. 2.))) 3.) (and (> (* skoXC1 (* skoXC1 (/ (- 1.) 2.))) (- 3.)) (and (> skoXC1 0.) (and (> (/ 7. 8.) skoXC1) (and (<= (* skoXC1 (+ (- 1.) (* skoXC1 (* skoXC1 (/ 1. 3.))))) 0.) (and (<= (* skoXC1 (* skoXC1 (/ (- 1.) 6.))) 1.) (and (<= (* skoXC1 (* skoXC1 (+ (/ (- 1.) 2.) (* skoXC1 (* skoXC1 (/ (- 1.) 6.)))))) 0.) (and (<= (* skoXC1 skoXC1) 2.) (and (<= (* skoXC1 (* skoXC1 (* skoXC1 (* skoXC1 (/ (- 2.) 3.))))) 0.) (and (<= (* skoXC1 (+ (- 1.) (* skoXC1 (* skoXC1 (/ (- 1.) 6.))))) 0.) (and (<= (* skoXC1 (* skoXC1 (/ 1. 3.))) 1.) (and (<= (* skoXC1 (* skoXC1 (+ 256. (* skoXC1 (* skoXC1 (+ (- 160.) (* skoXC1 (* skoXC1 (+ 32. (* skoXC1 (* skoXC1 (- 1.)))))))))))) 128.) (<= (* skoXC1 (* skoXC1 (* skoXC1 (* skoXC1 (+ (/ (- 80.) 3.) (* skoXC1 (* skoXC1 (+ (/ 128. 3.) (* skoXC1 (* skoXC1 (+ (/ (- 55.) 3.) (* skoXC1 (* skoXC1 (/ 5. 3.)))))))))))))) 0.))))))))))))))))))))))))

% In GRF format:
(sequent " MetiTarski formula " (antecedent (<= (* skoXC1 (* skoXC1 (* skoXC1 (* skoXC1 (+ (/ (- 13.) 60.) (* skoXC1 (* skoXC1 (/ (- 3.) 10.)))))))) 0.) (> (* skoXC1 (* skoXC1 (+ (/ 1. 6.) (* skoXC1 (* skoXC1 (/ 3. 40.)))))) (- 1.)) (<= (* skoXC1 (* skoXC1 (* skoXC1 (* skoXC1 (+ (/ (- 13.) 60.) (* skoXC1 (* skoXC1 (/ (- 3.) 10.)))))))) 0.) (<= (* skoXC1 (* skoXC1 (+ (/ (- 1.) 2.) (* skoXC1 (* skoXC1 (+ (/ 7. 120.) (* skoXC1 (* skoXC1 (/ (- 3.) 40.))))))))) 0.) (<= (* skoXC1 (* skoXC1 (+ (/ (- 1.) 6.) (* skoXC1 (* skoXC1 (/ (- 3.) 40.)))))) 1.) (<= (* skoXC1 (+ (- 1.) (* skoXC1 (* skoXC1 (+ (/ 1. 3.) (* skoXC1 (* skoXC1 (/ 3. 20.)))))))) 0.) (> (* skoXC1 skoXC1) 0.) (<= (* skoXC1 (* skoXC1 (+ 80. (* skoXC1 (* skoXC1 (+ (- 40.) (* skoXC1 (* skoXC1 (+ 6. (* skoXC1 (* skoXC1 (/ (- 1.) 8.)))))))))))) 48.) (> (* skoXC1 (* skoXC1 (+ (- 80.) (* skoXC1 (* skoXC1 (+ 40. (* skoXC1 (* skoXC1 (+ (- 6.) (* skoXC1 (* skoXC1 (/ 1. 8.)))))))))))) (- 48.)) (<= (* skoXC1 (* skoXC1 (+ 24. (* skoXC1 (* skoXC1 (+ (- 10.) (* skoXC1 skoXC1))))))) 16.) (<= (* skoXC1 (* skoXC1 (/ 1. 2.))) 3.) (> (* skoXC1 (* skoXC1 (/ (- 1.) 2.))) (- 3.)) (> skoXC1 0.) (> (/ 7. 8.) skoXC1) (<= (* skoXC1 (+ (- 1.) (* skoXC1 (* skoXC1 (/ 1. 3.))))) 0.) (<= (* skoXC1 (* skoXC1 (/ (- 1.) 6.))) 1.) (<= (* skoXC1 (* skoXC1 (+ (/ (- 1.) 2.) (* skoXC1 (* skoXC1 (/ (- 1.) 6.)))))) 0.) (<= (* skoXC1 skoXC1) 2.) (<= (* skoXC1 (* skoXC1 (* skoXC1 (* skoXC1 (/ (- 2.) 3.))))) 0.) (<= (* skoXC1 (+ (- 1.) (* skoXC1 (* skoXC1 (/ (- 1.) 6.))))) 0.) (<= (* skoXC1 (* skoXC1 (/ 1. 3.))) 1.) (<= (* skoXC1 (* skoXC1 (+ 256. (* skoXC1 (* skoXC1 (+ (- 160.) (* skoXC1 (* skoXC1 (+ 32. (* skoXC1 (* skoXC1 (- 1.)))))))))))) 128.)) (succedent (> (* skoXC1 (* skoXC1 (* skoXC1 (* skoXC1 (+ (/ (- 80.) 3.) (* skoXC1 (* skoXC1 (+ (/ 128. 3.) (* skoXC1 (* skoXC1 (+ (/ (- 55.) 3.) (* skoXC1 (* skoXC1 (/ 5. 3.)))))))))))))) 0.)))
-----[end problem]-----

-----[begin problem]-----
% In Mathematica format:
Timing[Resolve[Exists[{skoXC1}, And[skoXC1*skoXC1*((-1/6)+skoXC1*skoXC1*(-3/40))<=1,skoXC1*skoXC1*skoXC1*skoXC1*((-13/60)+skoXC1*skoXC1*(-3/10))<=0,skoXC1*skoXC1*((-1/2)+skoXC1*skoXC1*((7/120)+skoXC1*skoXC1*(-3/40)))<=0,skoXC1*skoXC1*((-1/6)+skoXC1*skoXC1*(-3/40))<=1,skoXC1*(-1+skoXC1*skoXC1*((1/3)+skoXC1*skoXC1*(3/20)))<=0,skoXC1*skoXC1>0,skoXC1*skoXC1*(80+skoXC1*skoXC1*(-40+skoXC1*skoXC1*(6+skoXC1*skoXC1*(-1/8))))<=48,skoXC1*skoXC1*(-80+skoXC1*skoXC1*(40+skoXC1*skoXC1*(-6+skoXC1*skoXC1*(1/8))))>-48,skoXC1*skoXC1*(24+skoXC1*skoXC1*(-10+skoXC1*skoXC1))<=16,skoXC1*skoXC1*(1/2)<=3,skoXC1*skoXC1*(-1/2)>-3,skoXC1>0,(7/8)>skoXC1,skoXC1*(-1+skoXC1*skoXC1*(1/3))<=0,skoXC1*skoXC1*(-1/6)<=1,skoXC1*skoXC1*((-1/2)+skoXC1*skoXC1*(-1/6))<=0,skoXC1*skoXC1<=2,skoXC1*skoXC1*skoXC1*skoXC1*(-2/3)<=0,skoXC1*(-1+skoXC1*skoXC1*(-1/6))<=0,skoXC1*skoXC1*(1/3)<=1,skoXC1*skoXC1*(256+skoXC1*skoXC1*(-160+skoXC1*skoXC1*(32+skoXC1*skoXC1*-1)))<=128,skoXC1*skoXC1*skoXC1*skoXC1*((-80/3)+skoXC1*skoXC1*((128/3)+skoXC1*skoXC1*((-55/3)+skoXC1*skoXC1*(5/3))))<=0]], Reals]]

% In QepcadB format:
(E skoXC1) [[(skoXC1 skoXC1 (-1/6+(skoXC1 skoXC1 (-3/40))))<=1]/\[[(skoXC1 skoXC1 skoXC1 skoXC1 (-13/60+(skoXC1 skoXC1 (-3/10))))<=0]/\[[(skoXC1 skoXC1 (-1/2+(skoXC1 skoXC1 (7/120+(skoXC1 skoXC1 (-3/40))))))<=0]/\[[(skoXC1 skoXC1 (-1/6+(skoXC1 skoXC1 (-3/40))))<=1]/\[[(skoXC1 (-1+(skoXC1 skoXC1 (1/3+(skoXC1 skoXC1 (3/20))))))<=0]/\[[0<(skoXC1 skoXC1)]/\[[(skoXC1 skoXC1 (80+(skoXC1 skoXC1 (-40+(skoXC1 skoXC1 (6+(skoXC1 skoXC1 (-1/8))))))))<=48]/\[[-48<(skoXC1 skoXC1 (-80+(skoXC1 skoXC1 (40+(skoXC1 skoXC1 (-6+(skoXC1 skoXC1 (1/8))))))))]/\[[(skoXC1 skoXC1 (24+(skoXC1 skoXC1 (-10+(skoXC1 skoXC1)))))<=16]/\[[(skoXC1 skoXC1 (1/2))<=3]/\[[-3<(skoXC1 skoXC1 (-1/2))]/\[[0<skoXC1]/\[[skoXC1<7/8]/\[[(skoXC1 (-1+(skoXC1 skoXC1 (1/3))))<=0]/\[[(skoXC1 skoXC1 (-1/6))<=1]/\[[(skoXC1 skoXC1 (-1/2+(skoXC1 skoXC1 (-1/6))))<=0]/\[[(skoXC1 skoXC1)<=2]/\[[(skoXC1 skoXC1 skoXC1 skoXC1 (-2/3))<=0]/\[[(skoXC1 (-1+(skoXC1 skoXC1 (-1/6))))<=0]/\[[(skoXC1 skoXC1 (1/3))<=1]/\[[(skoXC1 skoXC1 (256+(skoXC1 skoXC1 (-160+(skoXC1 skoXC1 (32+(skoXC1 skoXC1 (-1))))))))<=128]/\[(skoXC1 skoXC1 skoXC1 skoXC1 (-80/3+(skoXC1 skoXC1 (128/3+(skoXC1 skoXC1 (-55/3+(skoXC1 skoXC1 (5/3))))))))<=0]]]]]]]]]]]]]]]]]]]]]].

% In SMTLib2 format:
(declare-fun skoXC1 () Real) (assert (and (<= (* skoXC1 (* skoXC1 (+ (/ (- 1.) 6.) (* skoXC1 (* skoXC1 (/ (- 3.) 40.)))))) 1.) (and (<= (* skoXC1 (* skoXC1 (* skoXC1 (* skoXC1 (+ (/ (- 13.) 60.) (* skoXC1 (* skoXC1 (/ (- 3.) 10.)))))))) 0.) (and (<= (* skoXC1 (* skoXC1 (+ (/ (- 1.) 2.) (* skoXC1 (* skoXC1 (+ (/ 7. 120.) (* skoXC1 (* skoXC1 (/ (- 3.) 40.))))))))) 0.) (and (<= (* skoXC1 (* skoXC1 (+ (/ (- 1.) 6.) (* skoXC1 (* skoXC1 (/ (- 3.) 40.)))))) 1.) (and (<= (* skoXC1 (+ (- 1.) (* skoXC1 (* skoXC1 (+ (/ 1. 3.) (* skoXC1 (* skoXC1 (/ 3. 20.)))))))) 0.) (and (> (* skoXC1 skoXC1) 0.) (and (<= (* skoXC1 (* skoXC1 (+ 80. (* skoXC1 (* skoXC1 (+ (- 40.) (* skoXC1 (* skoXC1 (+ 6. (* skoXC1 (* skoXC1 (/ (- 1.) 8.)))))))))))) 48.) (and (> (* skoXC1 (* skoXC1 (+ (- 80.) (* skoXC1 (* skoXC1 (+ 40. (* skoXC1 (* skoXC1 (+ (- 6.) (* skoXC1 (* skoXC1 (/ 1. 8.)))))))))))) (- 48.)) (and (<= (* skoXC1 (* skoXC1 (+ 24. (* skoXC1 (* skoXC1 (+ (- 10.) (* skoXC1 skoXC1))))))) 16.) (and (<= (* skoXC1 (* skoXC1 (/ 1. 2.))) 3.) (and (> (* skoXC1 (* skoXC1 (/ (- 1.) 2.))) (- 3.)) (and (> skoXC1 0.) (and (> (/ 7. 8.) skoXC1) (and (<= (* skoXC1 (+ (- 1.) (* skoXC1 (* skoXC1 (/ 1. 3.))))) 0.) (and (<= (* skoXC1 (* skoXC1 (/ (- 1.) 6.))) 1.) (and (<= (* skoXC1 (* skoXC1 (+ (/ (- 1.) 2.) (* skoXC1 (* skoXC1 (/ (- 1.) 6.)))))) 0.) (and (<= (* skoXC1 skoXC1) 2.) (and (<= (* skoXC1 (* skoXC1 (* skoXC1 (* skoXC1 (/ (- 2.) 3.))))) 0.) (and (<= (* skoXC1 (+ (- 1.) (* skoXC1 (* skoXC1 (/ (- 1.) 6.))))) 0.) (and (<= (* skoXC1 (* skoXC1 (/ 1. 3.))) 1.) (and (<= (* skoXC1 (* skoXC1 (+ 256. (* skoXC1 (* skoXC1 (+ (- 160.) (* skoXC1 (* skoXC1 (+ 32. (* skoXC1 (* skoXC1 (- 1.)))))))))))) 128.) (<= (* skoXC1 (* skoXC1 (* skoXC1 (* skoXC1 (+ (/ (- 80.) 3.) (* skoXC1 (* skoXC1 (+ (/ 128. 3.) (* skoXC1 (* skoXC1 (+ (/ (- 55.) 3.) (* skoXC1 (* skoXC1 (/ 5. 3.)))))))))))))) 0.)))))))))))))))))))))))

% In GRF format:
(sequent " MetiTarski formula " (antecedent (<= (* skoXC1 (* skoXC1 (+ (/ (- 1.) 6.) (* skoXC1 (* skoXC1 (/ (- 3.) 40.)))))) 1.) (<= (* skoXC1 (* skoXC1 (* skoXC1 (* skoXC1 (+ (/ (- 13.) 60.) (* skoXC1 (* skoXC1 (/ (- 3.) 10.)))))))) 0.) (<= (* skoXC1 (* skoXC1 (+ (/ (- 1.) 2.) (* skoXC1 (* skoXC1 (+ (/ 7. 120.) (* skoXC1 (* skoXC1 (/ (- 3.) 40.))))))))) 0.) (<= (* skoXC1 (* skoXC1 (+ (/ (- 1.) 6.) (* skoXC1 (* skoXC1 (/ (- 3.) 40.)))))) 1.) (<= (* skoXC1 (+ (- 1.) (* skoXC1 (* skoXC1 (+ (/ 1. 3.) (* skoXC1 (* skoXC1 (/ 3. 20.)))))))) 0.) (> (* skoXC1 skoXC1) 0.) (<= (* skoXC1 (* skoXC1 (+ 80. (* skoXC1 (* skoXC1 (+ (- 40.) (* skoXC1 (* skoXC1 (+ 6. (* skoXC1 (* skoXC1 (/ (- 1.) 8.)))))))))))) 48.) (> (* skoXC1 (* skoXC1 (+ (- 80.) (* skoXC1 (* skoXC1 (+ 40. (* skoXC1 (* skoXC1 (+ (- 6.) (* skoXC1 (* skoXC1 (/ 1. 8.)))))))))))) (- 48.)) (<= (* skoXC1 (* skoXC1 (+ 24. (* skoXC1 (* skoXC1 (+ (- 10.) (* skoXC1 skoXC1))))))) 16.) (<= (* skoXC1 (* skoXC1 (/ 1. 2.))) 3.) (> (* skoXC1 (* skoXC1 (/ (- 1.) 2.))) (- 3.)) (> skoXC1 0.) (> (/ 7. 8.) skoXC1) (<= (* skoXC1 (+ (- 1.) (* skoXC1 (* skoXC1 (/ 1. 3.))))) 0.) (<= (* skoXC1 (* skoXC1 (/ (- 1.) 6.))) 1.) (<= (* skoXC1 (* skoXC1 (+ (/ (- 1.) 2.) (* skoXC1 (* skoXC1 (/ (- 1.) 6.)))))) 0.) (<= (* skoXC1 skoXC1) 2.) (<= (* skoXC1 (* skoXC1 (* skoXC1 (* skoXC1 (/ (- 2.) 3.))))) 0.) (<= (* skoXC1 (+ (- 1.) (* skoXC1 (* skoXC1 (/ (- 1.) 6.))))) 0.) (<= (* skoXC1 (* skoXC1 (/ 1. 3.))) 1.) (<= (* skoXC1 (* skoXC1 (+ 256. (* skoXC1 (* skoXC1 (+ (- 160.) (* skoXC1 (* skoXC1 (+ 32. (* skoXC1 (* skoXC1 (- 1.)))))))))))) 128.)) (succedent (> (* skoXC1 (* skoXC1 (* skoXC1 (* skoXC1 (+ (/ (- 80.) 3.) (* skoXC1 (* skoXC1 (+ (/ 128. 3.) (* skoXC1 (* skoXC1 (+ (/ (- 55.) 3.) (* skoXC1 (* skoXC1 (/ 5. 3.)))))))))))))) 0.)))
-----[end problem]-----

-----[begin problem]-----
% In Mathematica format:
Timing[Resolve[Exists[{skoXC1}, And[skoXC1*skoXC1*skoXC1*skoXC1*((-13/60)+skoXC1*skoXC1*(-3/10))<=0,skoXC1*skoXC1*skoXC1*skoXC1*((-13/60)+skoXC1*skoXC1*(-3/10))<=0,skoXC1*skoXC1*((-1/2)+skoXC1*skoXC1*((7/120)+skoXC1*skoXC1*(-3/40)))<=0,skoXC1*skoXC1*((-1/6)+skoXC1*skoXC1*(-3/40))<=1,skoXC1*(-1+skoXC1*skoXC1*((1/3)+skoXC1*skoXC1*(3/20)))<=0,skoXC1*skoXC1>0,skoXC1*skoXC1*(80+skoXC1*skoXC1*(-40+skoXC1*skoXC1*(6+skoXC1*skoXC1*(-1/8))))<=48,skoXC1*skoXC1*(-80+skoXC1*skoXC1*(40+skoXC1*skoXC1*(-6+skoXC1*skoXC1*(1/8))))>-48,skoXC1*skoXC1*(24+skoXC1*skoXC1*(-10+skoXC1*skoXC1))<=16,skoXC1*skoXC1*(1/2)<=3,skoXC1*skoXC1*(-1/2)>-3,skoXC1>0,(7/8)>skoXC1,skoXC1*(-1+skoXC1*skoXC1*(1/3))<=0,skoXC1*skoXC1*(-1/6)<=1,skoXC1*skoXC1*((-1/2)+skoXC1*skoXC1*(-1/6))<=0,skoXC1*skoXC1<=2,skoXC1*skoXC1*skoXC1*skoXC1*(-2/3)<=0,skoXC1*(-1+skoXC1*skoXC1*(-1/6))<=0,skoXC1*skoXC1*(1/3)<=1,skoXC1*skoXC1*(256+skoXC1*skoXC1*(-160+skoXC1*skoXC1*(32+skoXC1*skoXC1*-1)))<=128,skoXC1*skoXC1*skoXC1*skoXC1*((-80/3)+skoXC1*skoXC1*((128/3)+skoXC1*skoXC1*((-55/3)+skoXC1*skoXC1*(5/3))))<=0]], Reals]]

% In QepcadB format:
(E skoXC1) [[(skoXC1 skoXC1 skoXC1 skoXC1 (-13/60+(skoXC1 skoXC1 (-3/10))))<=0]/\[[(skoXC1 skoXC1 skoXC1 skoXC1 (-13/60+(skoXC1 skoXC1 (-3/10))))<=0]/\[[(skoXC1 skoXC1 (-1/2+(skoXC1 skoXC1 (7/120+(skoXC1 skoXC1 (-3/40))))))<=0]/\[[(skoXC1 skoXC1 (-1/6+(skoXC1 skoXC1 (-3/40))))<=1]/\[[(skoXC1 (-1+(skoXC1 skoXC1 (1/3+(skoXC1 skoXC1 (3/20))))))<=0]/\[[0<(skoXC1 skoXC1)]/\[[(skoXC1 skoXC1 (80+(skoXC1 skoXC1 (-40+(skoXC1 skoXC1 (6+(skoXC1 skoXC1 (-1/8))))))))<=48]/\[[-48<(skoXC1 skoXC1 (-80+(skoXC1 skoXC1 (40+(skoXC1 skoXC1 (-6+(skoXC1 skoXC1 (1/8))))))))]/\[[(skoXC1 skoXC1 (24+(skoXC1 skoXC1 (-10+(skoXC1 skoXC1)))))<=16]/\[[(skoXC1 skoXC1 (1/2))<=3]/\[[-3<(skoXC1 skoXC1 (-1/2))]/\[[0<skoXC1]/\[[skoXC1<7/8]/\[[(skoXC1 (-1+(skoXC1 skoXC1 (1/3))))<=0]/\[[(skoXC1 skoXC1 (-1/6))<=1]/\[[(skoXC1 skoXC1 (-1/2+(skoXC1 skoXC1 (-1/6))))<=0]/\[[(skoXC1 skoXC1)<=2]/\[[(skoXC1 skoXC1 skoXC1 skoXC1 (-2/3))<=0]/\[[(skoXC1 (-1+(skoXC1 skoXC1 (-1/6))))<=0]/\[[(skoXC1 skoXC1 (1/3))<=1]/\[[(skoXC1 skoXC1 (256+(skoXC1 skoXC1 (-160+(skoXC1 skoXC1 (32+(skoXC1 skoXC1 (-1))))))))<=128]/\[(skoXC1 skoXC1 skoXC1 skoXC1 (-80/3+(skoXC1 skoXC1 (128/3+(skoXC1 skoXC1 (-55/3+(skoXC1 skoXC1 (5/3))))))))<=0]]]]]]]]]]]]]]]]]]]]]].

% In SMTLib2 format:
(declare-fun skoXC1 () Real) (assert (and (<= (* skoXC1 (* skoXC1 (* skoXC1 (* skoXC1 (+ (/ (- 13.) 60.) (* skoXC1 (* skoXC1 (/ (- 3.) 10.)))))))) 0.) (and (<= (* skoXC1 (* skoXC1 (* skoXC1 (* skoXC1 (+ (/ (- 13.) 60.) (* skoXC1 (* skoXC1 (/ (- 3.) 10.)))))))) 0.) (and (<= (* skoXC1 (* skoXC1 (+ (/ (- 1.) 2.) (* skoXC1 (* skoXC1 (+ (/ 7. 120.) (* skoXC1 (* skoXC1 (/ (- 3.) 40.))))))))) 0.) (and (<= (* skoXC1 (* skoXC1 (+ (/ (- 1.) 6.) (* skoXC1 (* skoXC1 (/ (- 3.) 40.)))))) 1.) (and (<= (* skoXC1 (+ (- 1.) (* skoXC1 (* skoXC1 (+ (/ 1. 3.) (* skoXC1 (* skoXC1 (/ 3. 20.)))))))) 0.) (and (> (* skoXC1 skoXC1) 0.) (and (<= (* skoXC1 (* skoXC1 (+ 80. (* skoXC1 (* skoXC1 (+ (- 40.) (* skoXC1 (* skoXC1 (+ 6. (* skoXC1 (* skoXC1 (/ (- 1.) 8.)))))))))))) 48.) (and (> (* skoXC1 (* skoXC1 (+ (- 80.) (* skoXC1 (* skoXC1 (+ 40. (* skoXC1 (* skoXC1 (+ (- 6.) (* skoXC1 (* skoXC1 (/ 1. 8.)))))))))))) (- 48.)) (and (<= (* skoXC1 (* skoXC1 (+ 24. (* skoXC1 (* skoXC1 (+ (- 10.) (* skoXC1 skoXC1))))))) 16.) (and (<= (* skoXC1 (* skoXC1 (/ 1. 2.))) 3.) (and (> (* skoXC1 (* skoXC1 (/ (- 1.) 2.))) (- 3.)) (and (> skoXC1 0.) (and (> (/ 7. 8.) skoXC1) (and (<= (* skoXC1 (+ (- 1.) (* skoXC1 (* skoXC1 (/ 1. 3.))))) 0.) (and (<= (* skoXC1 (* skoXC1 (/ (- 1.) 6.))) 1.) (and (<= (* skoXC1 (* skoXC1 (+ (/ (- 1.) 2.) (* skoXC1 (* skoXC1 (/ (- 1.) 6.)))))) 0.) (and (<= (* skoXC1 skoXC1) 2.) (and (<= (* skoXC1 (* skoXC1 (* skoXC1 (* skoXC1 (/ (- 2.) 3.))))) 0.) (and (<= (* skoXC1 (+ (- 1.) (* skoXC1 (* skoXC1 (/ (- 1.) 6.))))) 0.) (and (<= (* skoXC1 (* skoXC1 (/ 1. 3.))) 1.) (and (<= (* skoXC1 (* skoXC1 (+ 256. (* skoXC1 (* skoXC1 (+ (- 160.) (* skoXC1 (* skoXC1 (+ 32. (* skoXC1 (* skoXC1 (- 1.)))))))))))) 128.) (<= (* skoXC1 (* skoXC1 (* skoXC1 (* skoXC1 (+ (/ (- 80.) 3.) (* skoXC1 (* skoXC1 (+ (/ 128. 3.) (* skoXC1 (* skoXC1 (+ (/ (- 55.) 3.) (* skoXC1 (* skoXC1 (/ 5. 3.)))))))))))))) 0.)))))))))))))))))))))))

% In GRF format:
(sequent " MetiTarski formula " (antecedent (<= (* skoXC1 (* skoXC1 (* skoXC1 (* skoXC1 (+ (/ (- 13.) 60.) (* skoXC1 (* skoXC1 (/ (- 3.) 10.)))))))) 0.) (<= (* skoXC1 (* skoXC1 (* skoXC1 (* skoXC1 (+ (/ (- 13.) 60.) (* skoXC1 (* skoXC1 (/ (- 3.) 10.)))))))) 0.) (<= (* skoXC1 (* skoXC1 (+ (/ (- 1.) 2.) (* skoXC1 (* skoXC1 (+ (/ 7. 120.) (* skoXC1 (* skoXC1 (/ (- 3.) 40.))))))))) 0.) (<= (* skoXC1 (* skoXC1 (+ (/ (- 1.) 6.) (* skoXC1 (* skoXC1 (/ (- 3.) 40.)))))) 1.) (<= (* skoXC1 (+ (- 1.) (* skoXC1 (* skoXC1 (+ (/ 1. 3.) (* skoXC1 (* skoXC1 (/ 3. 20.)))))))) 0.) (> (* skoXC1 skoXC1) 0.) (<= (* skoXC1 (* skoXC1 (+ 80. (* skoXC1 (* skoXC1 (+ (- 40.) (* skoXC1 (* skoXC1 (+ 6. (* skoXC1 (* skoXC1 (/ (- 1.) 8.)))))))))))) 48.) (> (* skoXC1 (* skoXC1 (+ (- 80.) (* skoXC1 (* skoXC1 (+ 40. (* skoXC1 (* skoXC1 (+ (- 6.) (* skoXC1 (* skoXC1 (/ 1. 8.)))))))))))) (- 48.)) (<= (* skoXC1 (* skoXC1 (+ 24. (* skoXC1 (* skoXC1 (+ (- 10.) (* skoXC1 skoXC1))))))) 16.) (<= (* skoXC1 (* skoXC1 (/ 1. 2.))) 3.) (> (* skoXC1 (* skoXC1 (/ (- 1.) 2.))) (- 3.)) (> skoXC1 0.) (> (/ 7. 8.) skoXC1) (<= (* skoXC1 (+ (- 1.) (* skoXC1 (* skoXC1 (/ 1. 3.))))) 0.) (<= (* skoXC1 (* skoXC1 (/ (- 1.) 6.))) 1.) (<= (* skoXC1 (* skoXC1 (+ (/ (- 1.) 2.) (* skoXC1 (* skoXC1 (/ (- 1.) 6.)))))) 0.) (<= (* skoXC1 skoXC1) 2.) (<= (* skoXC1 (* skoXC1 (* skoXC1 (* skoXC1 (/ (- 2.) 3.))))) 0.) (<= (* skoXC1 (+ (- 1.) (* skoXC1 (* skoXC1 (/ (- 1.) 6.))))) 0.) (<= (* skoXC1 (* skoXC1 (/ 1. 3.))) 1.) (<= (* skoXC1 (* skoXC1 (+ 256. (* skoXC1 (* skoXC1 (+ (- 160.) (* skoXC1 (* skoXC1 (+ 32. (* skoXC1 (* skoXC1 (- 1.)))))))))))) 128.)) (succedent (> (* skoXC1 (* skoXC1 (* skoXC1 (* skoXC1 (+ (/ (- 80.) 3.) (* skoXC1 (* skoXC1 (+ (/ 128. 3.) (* skoXC1 (* skoXC1 (+ (/ (- 55.) 3.) (* skoXC1 (* skoXC1 (/ 5. 3.)))))))))))))) 0.)))
-----[end problem]-----

-----[begin problem]-----
% In Mathematica format:
Timing[Resolve[Exists[{skoXC1}, And[skoXC1*(-1+skoXC1*skoXC1*((-1/6)+skoXC1*skoXC1*(-3/40)))<=0,skoXC1*skoXC1<=0,skoXC1*skoXC1*skoXC1*skoXC1*((-13/60)+skoXC1*skoXC1*(-3/10))<=0,skoXC1*skoXC1*((-1/2)+skoXC1*skoXC1*((7/120)+skoXC1*skoXC1*(-3/40)))<=0,skoXC1*skoXC1*((-1/6)+skoXC1*skoXC1*(-3/40))<=1,skoXC1*(-1+skoXC1*skoXC1*((1/3)+skoXC1*skoXC1*(3/20)))<=0,skoXC1*skoXC1>0,skoXC1*skoXC1*(80+skoXC1*skoXC1*(-40+skoXC1*skoXC1*(6+skoXC1*skoXC1*(-1/8))))<=48,skoXC1*skoXC1*(-80+skoXC1*skoXC1*(40+skoXC1*skoXC1*(-6+skoXC1*skoXC1*(1/8))))>-48,skoXC1*skoXC1*(24+skoXC1*skoXC1*(-10+skoXC1*skoXC1))<=16,skoXC1*skoXC1*(1/2)<=3,skoXC1*skoXC1*(-1/2)>-3,skoXC1>0,(7/8)>skoXC1,skoXC1*(-1+skoXC1*skoXC1*(1/3))<=0,skoXC1*skoXC1*(-1/6)<=1,skoXC1*skoXC1*((-1/2)+skoXC1*skoXC1*(-1/6))<=0,skoXC1*skoXC1<=2,skoXC1*skoXC1*skoXC1*skoXC1*(-2/3)<=0,skoXC1*(-1+skoXC1*skoXC1*(-1/6))<=0,skoXC1*skoXC1*(1/3)<=1,skoXC1*skoXC1*(256+skoXC1*skoXC1*(-160+skoXC1*skoXC1*(32+skoXC1*skoXC1*-1)))<=128,skoXC1*skoXC1*skoXC1*skoXC1*((-80/3)+skoXC1*skoXC1*((128/3)+skoXC1*skoXC1*((-55/3)+skoXC1*skoXC1*(5/3))))<=0]], Reals]]

% In QepcadB format:
(E skoXC1) [[(skoXC1 (-1+(skoXC1 skoXC1 (-1/6+(skoXC1 skoXC1 (-3/40))))))<=0]/\[[(skoXC1 skoXC1)<=0]/\[[(skoXC1 skoXC1 skoXC1 skoXC1 (-13/60+(skoXC1 skoXC1 (-3/10))))<=0]/\[[(skoXC1 skoXC1 (-1/2+(skoXC1 skoXC1 (7/120+(skoXC1 skoXC1 (-3/40))))))<=0]/\[[(skoXC1 skoXC1 (-1/6+(skoXC1 skoXC1 (-3/40))))<=1]/\[[(skoXC1 (-1+(skoXC1 skoXC1 (1/3+(skoXC1 skoXC1 (3/20))))))<=0]/\[[0<(skoXC1 skoXC1)]/\[[(skoXC1 skoXC1 (80+(skoXC1 skoXC1 (-40+(skoXC1 skoXC1 (6+(skoXC1 skoXC1 (-1/8))))))))<=48]/\[[-48<(skoXC1 skoXC1 (-80+(skoXC1 skoXC1 (40+(skoXC1 skoXC1 (-6+(skoXC1 skoXC1 (1/8))))))))]/\[[(skoXC1 skoXC1 (24+(skoXC1 skoXC1 (-10+(skoXC1 skoXC1)))))<=16]/\[[(skoXC1 skoXC1 (1/2))<=3]/\[[-3<(skoXC1 skoXC1 (-1/2))]/\[[0<skoXC1]/\[[skoXC1<7/8]/\[[(skoXC1 (-1+(skoXC1 skoXC1 (1/3))))<=0]/\[[(skoXC1 skoXC1 (-1/6))<=1]/\[[(skoXC1 skoXC1 (-1/2+(skoXC1 skoXC1 (-1/6))))<=0]/\[[(skoXC1 skoXC1)<=2]/\[[(skoXC1 skoXC1 skoXC1 skoXC1 (-2/3))<=0]/\[[(skoXC1 (-1+(skoXC1 skoXC1 (-1/6))))<=0]/\[[(skoXC1 skoXC1 (1/3))<=1]/\[[(skoXC1 skoXC1 (256+(skoXC1 skoXC1 (-160+(skoXC1 skoXC1 (32+(skoXC1 skoXC1 (-1))))))))<=128]/\[(skoXC1 skoXC1 skoXC1 skoXC1 (-80/3+(skoXC1 skoXC1 (128/3+(skoXC1 skoXC1 (-55/3+(skoXC1 skoXC1 (5/3))))))))<=0]]]]]]]]]]]]]]]]]]]]]]].

% In SMTLib2 format:
(declare-fun skoXC1 () Real) (assert (and (<= (* skoXC1 (+ (- 1.) (* skoXC1 (* skoXC1 (+ (/ (- 1.) 6.) (* skoXC1 (* skoXC1 (/ (- 3.) 40.)))))))) 0.) (and (<= (* skoXC1 skoXC1) 0.) (and (<= (* skoXC1 (* skoXC1 (* skoXC1 (* skoXC1 (+ (/ (- 13.) 60.) (* skoXC1 (* skoXC1 (/ (- 3.) 10.)))))))) 0.) (and (<= (* skoXC1 (* skoXC1 (+ (/ (- 1.) 2.) (* skoXC1 (* skoXC1 (+ (/ 7. 120.) (* skoXC1 (* skoXC1 (/ (- 3.) 40.))))))))) 0.) (and (<= (* skoXC1 (* skoXC1 (+ (/ (- 1.) 6.) (* skoXC1 (* skoXC1 (/ (- 3.) 40.)))))) 1.) (and (<= (* skoXC1 (+ (- 1.) (* skoXC1 (* skoXC1 (+ (/ 1. 3.) (* skoXC1 (* skoXC1 (/ 3. 20.)))))))) 0.) (and (> (* skoXC1 skoXC1) 0.) (and (<= (* skoXC1 (* skoXC1 (+ 80. (* skoXC1 (* skoXC1 (+ (- 40.) (* skoXC1 (* skoXC1 (+ 6. (* skoXC1 (* skoXC1 (/ (- 1.) 8.)))))))))))) 48.) (and (> (* skoXC1 (* skoXC1 (+ (- 80.) (* skoXC1 (* skoXC1 (+ 40. (* skoXC1 (* skoXC1 (+ (- 6.) (* skoXC1 (* skoXC1 (/ 1. 8.)))))))))))) (- 48.)) (and (<= (* skoXC1 (* skoXC1 (+ 24. (* skoXC1 (* skoXC1 (+ (- 10.) (* skoXC1 skoXC1))))))) 16.) (and (<= (* skoXC1 (* skoXC1 (/ 1. 2.))) 3.) (and (> (* skoXC1 (* skoXC1 (/ (- 1.) 2.))) (- 3.)) (and (> skoXC1 0.) (and (> (/ 7. 8.) skoXC1) (and (<= (* skoXC1 (+ (- 1.) (* skoXC1 (* skoXC1 (/ 1. 3.))))) 0.) (and (<= (* skoXC1 (* skoXC1 (/ (- 1.) 6.))) 1.) (and (<= (* skoXC1 (* skoXC1 (+ (/ (- 1.) 2.) (* skoXC1 (* skoXC1 (/ (- 1.) 6.)))))) 0.) (and (<= (* skoXC1 skoXC1) 2.) (and (<= (* skoXC1 (* skoXC1 (* skoXC1 (* skoXC1 (/ (- 2.) 3.))))) 0.) (and (<= (* skoXC1 (+ (- 1.) (* skoXC1 (* skoXC1 (/ (- 1.) 6.))))) 0.) (and (<= (* skoXC1 (* skoXC1 (/ 1. 3.))) 1.) (and (<= (* skoXC1 (* skoXC1 (+ 256. (* skoXC1 (* skoXC1 (+ (- 160.) (* skoXC1 (* skoXC1 (+ 32. (* skoXC1 (* skoXC1 (- 1.)))))))))))) 128.) (<= (* skoXC1 (* skoXC1 (* skoXC1 (* skoXC1 (+ (/ (- 80.) 3.) (* skoXC1 (* skoXC1 (+ (/ 128. 3.) (* skoXC1 (* skoXC1 (+ (/ (- 55.) 3.) (* skoXC1 (* skoXC1 (/ 5. 3.)))))))))))))) 0.))))))))))))))))))))))))

% In GRF format:
(sequent " MetiTarski formula " (antecedent (<= (* skoXC1 (+ (- 1.) (* skoXC1 (* skoXC1 (+ (/ (- 1.) 6.) (* skoXC1 (* skoXC1 (/ (- 3.) 40.)))))))) 0.) (<= (* skoXC1 skoXC1) 0.) (<= (* skoXC1 (* skoXC1 (* skoXC1 (* skoXC1 (+ (/ (- 13.) 60.) (* skoXC1 (* skoXC1 (/ (- 3.) 10.)))))))) 0.) (<= (* skoXC1 (* skoXC1 (+ (/ (- 1.) 2.) (* skoXC1 (* skoXC1 (+ (/ 7. 120.) (* skoXC1 (* skoXC1 (/ (- 3.) 40.))))))))) 0.) (<= (* skoXC1 (* skoXC1 (+ (/ (- 1.) 6.) (* skoXC1 (* skoXC1 (/ (- 3.) 40.)))))) 1.) (<= (* skoXC1 (+ (- 1.) (* skoXC1 (* skoXC1 (+ (/ 1. 3.) (* skoXC1 (* skoXC1 (/ 3. 20.)))))))) 0.) (> (* skoXC1 skoXC1) 0.) (<= (* skoXC1 (* skoXC1 (+ 80. (* skoXC1 (* skoXC1 (+ (- 40.) (* skoXC1 (* skoXC1 (+ 6. (* skoXC1 (* skoXC1 (/ (- 1.) 8.)))))))))))) 48.) (> (* skoXC1 (* skoXC1 (+ (- 80.) (* skoXC1 (* skoXC1 (+ 40. (* skoXC1 (* skoXC1 (+ (- 6.) (* skoXC1 (* skoXC1 (/ 1. 8.)))))))))))) (- 48.)) (<= (* skoXC1 (* skoXC1 (+ 24. (* skoXC1 (* skoXC1 (+ (- 10.) (* skoXC1 skoXC1))))))) 16.) (<= (* skoXC1 (* skoXC1 (/ 1. 2.))) 3.) (> (* skoXC1 (* skoXC1 (/ (- 1.) 2.))) (- 3.)) (> skoXC1 0.) (> (/ 7. 8.) skoXC1) (<= (* skoXC1 (+ (- 1.) (* skoXC1 (* skoXC1 (/ 1. 3.))))) 0.) (<= (* skoXC1 (* skoXC1 (/ (- 1.) 6.))) 1.) (<= (* skoXC1 (* skoXC1 (+ (/ (- 1.) 2.) (* skoXC1 (* skoXC1 (/ (- 1.) 6.)))))) 0.) (<= (* skoXC1 skoXC1) 2.) (<= (* skoXC1 (* skoXC1 (* skoXC1 (* skoXC1 (/ (- 2.) 3.))))) 0.) (<= (* skoXC1 (+ (- 1.) (* skoXC1 (* skoXC1 (/ (- 1.) 6.))))) 0.) (<= (* skoXC1 (* skoXC1 (/ 1. 3.))) 1.) (<= (* skoXC1 (* skoXC1 (+ 256. (* skoXC1 (* skoXC1 (+ (- 160.) (* skoXC1 (* skoXC1 (+ 32. (* skoXC1 (* skoXC1 (- 1.)))))))))))) 128.)) (succedent (> (* skoXC1 (* skoXC1 (* skoXC1 (* skoXC1 (+ (/ (- 80.) 3.) (* skoXC1 (* skoXC1 (+ (/ 128. 3.) (* skoXC1 (* skoXC1 (+ (/ (- 55.) 3.) (* skoXC1 (* skoXC1 (/ 5. 3.)))))))))))))) 0.)))
-----[end problem]-----

-----[begin problem]-----
% In Mathematica format:
Timing[Resolve[Exists[{skoXC1}, And[skoXC1*skoXC1>0,skoXC1*skoXC1*skoXC1*skoXC1*((-13/60)+skoXC1*skoXC1*(-3/10))<=0,skoXC1*skoXC1*((-1/2)+skoXC1*skoXC1*((7/120)+skoXC1*skoXC1*(-3/40)))<=0,skoXC1*skoXC1*((-1/6)+skoXC1*skoXC1*(-3/40))<=1,skoXC1*(-1+skoXC1*skoXC1*((1/3)+skoXC1*skoXC1*(3/20)))<=0,skoXC1*skoXC1>0,skoXC1*skoXC1*(80+skoXC1*skoXC1*(-40+skoXC1*skoXC1*(6+skoXC1*skoXC1*(-1/8))))<=48,skoXC1*skoXC1*(-80+skoXC1*skoXC1*(40+skoXC1*skoXC1*(-6+skoXC1*skoXC1*(1/8))))>-48,skoXC1*skoXC1*(24+skoXC1*skoXC1*(-10+skoXC1*skoXC1))<=16,skoXC1*skoXC1*(1/2)<=3,skoXC1*skoXC1*(-1/2)>-3,skoXC1>0,(7/8)>skoXC1,skoXC1*(-1+skoXC1*skoXC1*(1/3))<=0,skoXC1*skoXC1*(-1/6)<=1,skoXC1*skoXC1*((-1/2)+skoXC1*skoXC1*(-1/6))<=0,skoXC1*skoXC1<=2,skoXC1*skoXC1*skoXC1*skoXC1*(-2/3)<=0,skoXC1*(-1+skoXC1*skoXC1*(-1/6))<=0,skoXC1*skoXC1*(1/3)<=1,skoXC1*skoXC1*(256+skoXC1*skoXC1*(-160+skoXC1*skoXC1*(32+skoXC1*skoXC1*-1)))<=128,skoXC1*skoXC1*skoXC1*skoXC1*((-80/3)+skoXC1*skoXC1*((128/3)+skoXC1*skoXC1*((-55/3)+skoXC1*skoXC1*(5/3))))<=0]], Reals]]

% In QepcadB format:
(E skoXC1) [[0<(skoXC1 skoXC1)]/\[[(skoXC1 skoXC1 skoXC1 skoXC1 (-13/60+(skoXC1 skoXC1 (-3/10))))<=0]/\[[(skoXC1 skoXC1 (-1/2+(skoXC1 skoXC1 (7/120+(skoXC1 skoXC1 (-3/40))))))<=0]/\[[(skoXC1 skoXC1 (-1/6+(skoXC1 skoXC1 (-3/40))))<=1]/\[[(skoXC1 (-1+(skoXC1 skoXC1 (1/3+(skoXC1 skoXC1 (3/20))))))<=0]/\[[0<(skoXC1 skoXC1)]/\[[(skoXC1 skoXC1 (80+(skoXC1 skoXC1 (-40+(skoXC1 skoXC1 (6+(skoXC1 skoXC1 (-1/8))))))))<=48]/\[[-48<(skoXC1 skoXC1 (-80+(skoXC1 skoXC1 (40+(skoXC1 skoXC1 (-6+(skoXC1 skoXC1 (1/8))))))))]/\[[(skoXC1 skoXC1 (24+(skoXC1 skoXC1 (-10+(skoXC1 skoXC1)))))<=16]/\[[(skoXC1 skoXC1 (1/2))<=3]/\[[-3<(skoXC1 skoXC1 (-1/2))]/\[[0<skoXC1]/\[[skoXC1<7/8]/\[[(skoXC1 (-1+(skoXC1 skoXC1 (1/3))))<=0]/\[[(skoXC1 skoXC1 (-1/6))<=1]/\[[(skoXC1 skoXC1 (-1/2+(skoXC1 skoXC1 (-1/6))))<=0]/\[[(skoXC1 skoXC1)<=2]/\[[(skoXC1 skoXC1 skoXC1 skoXC1 (-2/3))<=0]/\[[(skoXC1 (-1+(skoXC1 skoXC1 (-1/6))))<=0]/\[[(skoXC1 skoXC1 (1/3))<=1]/\[[(skoXC1 skoXC1 (256+(skoXC1 skoXC1 (-160+(skoXC1 skoXC1 (32+(skoXC1 skoXC1 (-1))))))))<=128]/\[(skoXC1 skoXC1 skoXC1 skoXC1 (-80/3+(skoXC1 skoXC1 (128/3+(skoXC1 skoXC1 (-55/3+(skoXC1 skoXC1 (5/3))))))))<=0]]]]]]]]]]]]]]]]]]]]]].

% In SMTLib2 format:
(declare-fun skoXC1 () Real) (assert (and (> (* skoXC1 skoXC1) 0.) (and (<= (* skoXC1 (* skoXC1 (* skoXC1 (* skoXC1 (+ (/ (- 13.) 60.) (* skoXC1 (* skoXC1 (/ (- 3.) 10.)))))))) 0.) (and (<= (* skoXC1 (* skoXC1 (+ (/ (- 1.) 2.) (* skoXC1 (* skoXC1 (+ (/ 7. 120.) (* skoXC1 (* skoXC1 (/ (- 3.) 40.))))))))) 0.) (and (<= (* skoXC1 (* skoXC1 (+ (/ (- 1.) 6.) (* skoXC1 (* skoXC1 (/ (- 3.) 40.)))))) 1.) (and (<= (* skoXC1 (+ (- 1.) (* skoXC1 (* skoXC1 (+ (/ 1. 3.) (* skoXC1 (* skoXC1 (/ 3. 20.)))))))) 0.) (and (> (* skoXC1 skoXC1) 0.) (and (<= (* skoXC1 (* skoXC1 (+ 80. (* skoXC1 (* skoXC1 (+ (- 40.) (* skoXC1 (* skoXC1 (+ 6. (* skoXC1 (* skoXC1 (/ (- 1.) 8.)))))))))))) 48.) (and (> (* skoXC1 (* skoXC1 (+ (- 80.) (* skoXC1 (* skoXC1 (+ 40. (* skoXC1 (* skoXC1 (+ (- 6.) (* skoXC1 (* skoXC1 (/ 1. 8.)))))))))))) (- 48.)) (and (<= (* skoXC1 (* skoXC1 (+ 24. (* skoXC1 (* skoXC1 (+ (- 10.) (* skoXC1 skoXC1))))))) 16.) (and (<= (* skoXC1 (* skoXC1 (/ 1. 2.))) 3.) (and (> (* skoXC1 (* skoXC1 (/ (- 1.) 2.))) (- 3.)) (and (> skoXC1 0.) (and (> (/ 7. 8.) skoXC1) (and (<= (* skoXC1 (+ (- 1.) (* skoXC1 (* skoXC1 (/ 1. 3.))))) 0.) (and (<= (* skoXC1 (* skoXC1 (/ (- 1.) 6.))) 1.) (and (<= (* skoXC1 (* skoXC1 (+ (/ (- 1.) 2.) (* skoXC1 (* skoXC1 (/ (- 1.) 6.)))))) 0.) (and (<= (* skoXC1 skoXC1) 2.) (and (<= (* skoXC1 (* skoXC1 (* skoXC1 (* skoXC1 (/ (- 2.) 3.))))) 0.) (and (<= (* skoXC1 (+ (- 1.) (* skoXC1 (* skoXC1 (/ (- 1.) 6.))))) 0.) (and (<= (* skoXC1 (* skoXC1 (/ 1. 3.))) 1.) (and (<= (* skoXC1 (* skoXC1 (+ 256. (* skoXC1 (* skoXC1 (+ (- 160.) (* skoXC1 (* skoXC1 (+ 32. (* skoXC1 (* skoXC1 (- 1.)))))))))))) 128.) (<= (* skoXC1 (* skoXC1 (* skoXC1 (* skoXC1 (+ (/ (- 80.) 3.) (* skoXC1 (* skoXC1 (+ (/ 128. 3.) (* skoXC1 (* skoXC1 (+ (/ (- 55.) 3.) (* skoXC1 (* skoXC1 (/ 5. 3.)))))))))))))) 0.)))))))))))))))))))))))

% In GRF format:
(sequent " MetiTarski formula " (antecedent (> (* skoXC1 skoXC1) 0.) (<= (* skoXC1 (* skoXC1 (* skoXC1 (* skoXC1 (+ (/ (- 13.) 60.) (* skoXC1 (* skoXC1 (/ (- 3.) 10.)))))))) 0.) (<= (* skoXC1 (* skoXC1 (+ (/ (- 1.) 2.) (* skoXC1 (* skoXC1 (+ (/ 7. 120.) (* skoXC1 (* skoXC1 (/ (- 3.) 40.))))))))) 0.) (<= (* skoXC1 (* skoXC1 (+ (/ (- 1.) 6.) (* skoXC1 (* skoXC1 (/ (- 3.) 40.)))))) 1.) (<= (* skoXC1 (+ (- 1.) (* skoXC1 (* skoXC1 (+ (/ 1. 3.) (* skoXC1 (* skoXC1 (/ 3. 20.)))))))) 0.) (> (* skoXC1 skoXC1) 0.) (<= (* skoXC1 (* skoXC1 (+ 80. (* skoXC1 (* skoXC1 (+ (- 40.) (* skoXC1 (* skoXC1 (+ 6. (* skoXC1 (* skoXC1 (/ (- 1.) 8.)))))))))))) 48.) (> (* skoXC1 (* skoXC1 (+ (- 80.) (* skoXC1 (* skoXC1 (+ 40. (* skoXC1 (* skoXC1 (+ (- 6.) (* skoXC1 (* skoXC1 (/ 1. 8.)))))))))))) (- 48.)) (<= (* skoXC1 (* skoXC1 (+ 24. (* skoXC1 (* skoXC1 (+ (- 10.) (* skoXC1 skoXC1))))))) 16.) (<= (* skoXC1 (* skoXC1 (/ 1. 2.))) 3.) (> (* skoXC1 (* skoXC1 (/ (- 1.) 2.))) (- 3.)) (> skoXC1 0.) (> (/ 7. 8.) skoXC1) (<= (* skoXC1 (+ (- 1.) (* skoXC1 (* skoXC1 (/ 1. 3.))))) 0.) (<= (* skoXC1 (* skoXC1 (/ (- 1.) 6.))) 1.) (<= (* skoXC1 (* skoXC1 (+ (/ (- 1.) 2.) (* skoXC1 (* skoXC1 (/ (- 1.) 6.)))))) 0.) (<= (* skoXC1 skoXC1) 2.) (<= (* skoXC1 (* skoXC1 (* skoXC1 (* skoXC1 (/ (- 2.) 3.))))) 0.) (<= (* skoXC1 (+ (- 1.) (* skoXC1 (* skoXC1 (/ (- 1.) 6.))))) 0.) (<= (* skoXC1 (* skoXC1 (/ 1. 3.))) 1.) (<= (* skoXC1 (* skoXC1 (+ 256. (* skoXC1 (* skoXC1 (+ (- 160.) (* skoXC1 (* skoXC1 (+ 32. (* skoXC1 (* skoXC1 (- 1.)))))))))))) 128.)) (succedent (> (* skoXC1 (* skoXC1 (* skoXC1 (* skoXC1 (+ (/ (- 80.) 3.) (* skoXC1 (* skoXC1 (+ (/ 128. 3.) (* skoXC1 (* skoXC1 (+ (/ (- 55.) 3.) (* skoXC1 (* skoXC1 (/ 5. 3.)))))))))))))) 0.)))
-----[end problem]-----

-----[begin problem]-----
% In Mathematica format:
Timing[Resolve[Exists[{skoXC1}, And[skoXC1*(-1+skoXC1*skoXC1*((-1/6)+skoXC1*skoXC1*(-3/40)))<=0,skoXC1*skoXC1<=1,skoXC1*skoXC1*skoXC1*skoXC1*((-13/60)+skoXC1*skoXC1*(-3/10))<=0,skoXC1*skoXC1*((-1/2)+skoXC1*skoXC1*((7/120)+skoXC1*skoXC1*(-3/40)))<=0,skoXC1*skoXC1*((-1/6)+skoXC1*skoXC1*(-3/40))<=1,skoXC1*(-1+skoXC1*skoXC1*((1/3)+skoXC1*skoXC1*(3/20)))<=0,skoXC1*skoXC1>0,skoXC1*skoXC1*(80+skoXC1*skoXC1*(-40+skoXC1*skoXC1*(6+skoXC1*skoXC1*(-1/8))))<=48,skoXC1*skoXC1*(-80+skoXC1*skoXC1*(40+skoXC1*skoXC1*(-6+skoXC1*skoXC1*(1/8))))>-48,skoXC1*skoXC1*(24+skoXC1*skoXC1*(-10+skoXC1*skoXC1))<=16,skoXC1*skoXC1*(1/2)<=3,skoXC1*skoXC1*(-1/2)>-3,skoXC1>0,(7/8)>skoXC1,skoXC1*(-1+skoXC1*skoXC1*(1/3))<=0,skoXC1*skoXC1*(-1/6)<=1,skoXC1*skoXC1*((-1/2)+skoXC1*skoXC1*(-1/6))<=0,skoXC1*skoXC1<=2,skoXC1*skoXC1*skoXC1*skoXC1*(-2/3)<=0,skoXC1*(-1+skoXC1*skoXC1*(-1/6))<=0,skoXC1*skoXC1*(1/3)<=1,skoXC1*skoXC1*(256+skoXC1*skoXC1*(-160+skoXC1*skoXC1*(32+skoXC1*skoXC1*-1)))<=128,skoXC1*skoXC1*skoXC1*skoXC1*((-80/3)+skoXC1*skoXC1*((128/3)+skoXC1*skoXC1*((-55/3)+skoXC1*skoXC1*(5/3))))<=0]], Reals]]

% In QepcadB format:
(E skoXC1) [[(skoXC1 (-1+(skoXC1 skoXC1 (-1/6+(skoXC1 skoXC1 (-3/40))))))<=0]/\[[(skoXC1 skoXC1)<=1]/\[[(skoXC1 skoXC1 skoXC1 skoXC1 (-13/60+(skoXC1 skoXC1 (-3/10))))<=0]/\[[(skoXC1 skoXC1 (-1/2+(skoXC1 skoXC1 (7/120+(skoXC1 skoXC1 (-3/40))))))<=0]/\[[(skoXC1 skoXC1 (-1/6+(skoXC1 skoXC1 (-3/40))))<=1]/\[[(skoXC1 (-1+(skoXC1 skoXC1 (1/3+(skoXC1 skoXC1 (3/20))))))<=0]/\[[0<(skoXC1 skoXC1)]/\[[(skoXC1 skoXC1 (80+(skoXC1 skoXC1 (-40+(skoXC1 skoXC1 (6+(skoXC1 skoXC1 (-1/8))))))))<=48]/\[[-48<(skoXC1 skoXC1 (-80+(skoXC1 skoXC1 (40+(skoXC1 skoXC1 (-6+(skoXC1 skoXC1 (1/8))))))))]/\[[(skoXC1 skoXC1 (24+(skoXC1 skoXC1 (-10+(skoXC1 skoXC1)))))<=16]/\[[(skoXC1 skoXC1 (1/2))<=3]/\[[-3<(skoXC1 skoXC1 (-1/2))]/\[[0<skoXC1]/\[[skoXC1<7/8]/\[[(skoXC1 (-1+(skoXC1 skoXC1 (1/3))))<=0]/\[[(skoXC1 skoXC1 (-1/6))<=1]/\[[(skoXC1 skoXC1 (-1/2+(skoXC1 skoXC1 (-1/6))))<=0]/\[[(skoXC1 skoXC1)<=2]/\[[(skoXC1 skoXC1 skoXC1 skoXC1 (-2/3))<=0]/\[[(skoXC1 (-1+(skoXC1 skoXC1 (-1/6))))<=0]/\[[(skoXC1 skoXC1 (1/3))<=1]/\[[(skoXC1 skoXC1 (256+(skoXC1 skoXC1 (-160+(skoXC1 skoXC1 (32+(skoXC1 skoXC1 (-1))))))))<=128]/\[(skoXC1 skoXC1 skoXC1 skoXC1 (-80/3+(skoXC1 skoXC1 (128/3+(skoXC1 skoXC1 (-55/3+(skoXC1 skoXC1 (5/3))))))))<=0]]]]]]]]]]]]]]]]]]]]]]].

% In SMTLib2 format:
(declare-fun skoXC1 () Real) (assert (and (<= (* skoXC1 (+ (- 1.) (* skoXC1 (* skoXC1 (+ (/ (- 1.) 6.) (* skoXC1 (* skoXC1 (/ (- 3.) 40.)))))))) 0.) (and (<= (* skoXC1 skoXC1) 1.) (and (<= (* skoXC1 (* skoXC1 (* skoXC1 (* skoXC1 (+ (/ (- 13.) 60.) (* skoXC1 (* skoXC1 (/ (- 3.) 10.)))))))) 0.) (and (<= (* skoXC1 (* skoXC1 (+ (/ (- 1.) 2.) (* skoXC1 (* skoXC1 (+ (/ 7. 120.) (* skoXC1 (* skoXC1 (/ (- 3.) 40.))))))))) 0.) (and (<= (* skoXC1 (* skoXC1 (+ (/ (- 1.) 6.) (* skoXC1 (* skoXC1 (/ (- 3.) 40.)))))) 1.) (and (<= (* skoXC1 (+ (- 1.) (* skoXC1 (* skoXC1 (+ (/ 1. 3.) (* skoXC1 (* skoXC1 (/ 3. 20.)))))))) 0.) (and (> (* skoXC1 skoXC1) 0.) (and (<= (* skoXC1 (* skoXC1 (+ 80. (* skoXC1 (* skoXC1 (+ (- 40.) (* skoXC1 (* skoXC1 (+ 6. (* skoXC1 (* skoXC1 (/ (- 1.) 8.)))))))))))) 48.) (and (> (* skoXC1 (* skoXC1 (+ (- 80.) (* skoXC1 (* skoXC1 (+ 40. (* skoXC1 (* skoXC1 (+ (- 6.) (* skoXC1 (* skoXC1 (/ 1. 8.)))))))))))) (- 48.)) (and (<= (* skoXC1 (* skoXC1 (+ 24. (* skoXC1 (* skoXC1 (+ (- 10.) (* skoXC1 skoXC1))))))) 16.) (and (<= (* skoXC1 (* skoXC1 (/ 1. 2.))) 3.) (and (> (* skoXC1 (* skoXC1 (/ (- 1.) 2.))) (- 3.)) (and (> skoXC1 0.) (and (> (/ 7. 8.) skoXC1) (and (<= (* skoXC1 (+ (- 1.) (* skoXC1 (* skoXC1 (/ 1. 3.))))) 0.) (and (<= (* skoXC1 (* skoXC1 (/ (- 1.) 6.))) 1.) (and (<= (* skoXC1 (* skoXC1 (+ (/ (- 1.) 2.) (* skoXC1 (* skoXC1 (/ (- 1.) 6.)))))) 0.) (and (<= (* skoXC1 skoXC1) 2.) (and (<= (* skoXC1 (* skoXC1 (* skoXC1 (* skoXC1 (/ (- 2.) 3.))))) 0.) (and (<= (* skoXC1 (+ (- 1.) (* skoXC1 (* skoXC1 (/ (- 1.) 6.))))) 0.) (and (<= (* skoXC1 (* skoXC1 (/ 1. 3.))) 1.) (and (<= (* skoXC1 (* skoXC1 (+ 256. (* skoXC1 (* skoXC1 (+ (- 160.) (* skoXC1 (* skoXC1 (+ 32. (* skoXC1 (* skoXC1 (- 1.)))))))))))) 128.) (<= (* skoXC1 (* skoXC1 (* skoXC1 (* skoXC1 (+ (/ (- 80.) 3.) (* skoXC1 (* skoXC1 (+ (/ 128. 3.) (* skoXC1 (* skoXC1 (+ (/ (- 55.) 3.) (* skoXC1 (* skoXC1 (/ 5. 3.)))))))))))))) 0.))))))))))))))))))))))))

% In GRF format:
(sequent " MetiTarski formula " (antecedent (<= (* skoXC1 (+ (- 1.) (* skoXC1 (* skoXC1 (+ (/ (- 1.) 6.) (* skoXC1 (* skoXC1 (/ (- 3.) 40.)))))))) 0.) (<= (* skoXC1 skoXC1) 1.) (<= (* skoXC1 (* skoXC1 (* skoXC1 (* skoXC1 (+ (/ (- 13.) 60.) (* skoXC1 (* skoXC1 (/ (- 3.) 10.)))))))) 0.) (<= (* skoXC1 (* skoXC1 (+ (/ (- 1.) 2.) (* skoXC1 (* skoXC1 (+ (/ 7. 120.) (* skoXC1 (* skoXC1 (/ (- 3.) 40.))))))))) 0.) (<= (* skoXC1 (* skoXC1 (+ (/ (- 1.) 6.) (* skoXC1 (* skoXC1 (/ (- 3.) 40.)))))) 1.) (<= (* skoXC1 (+ (- 1.) (* skoXC1 (* skoXC1 (+ (/ 1. 3.) (* skoXC1 (* skoXC1 (/ 3. 20.)))))))) 0.) (> (* skoXC1 skoXC1) 0.) (<= (* skoXC1 (* skoXC1 (+ 80. (* skoXC1 (* skoXC1 (+ (- 40.) (* skoXC1 (* skoXC1 (+ 6. (* skoXC1 (* skoXC1 (/ (- 1.) 8.)))))))))))) 48.) (> (* skoXC1 (* skoXC1 (+ (- 80.) (* skoXC1 (* skoXC1 (+ 40. (* skoXC1 (* skoXC1 (+ (- 6.) (* skoXC1 (* skoXC1 (/ 1. 8.)))))))))))) (- 48.)) (<= (* skoXC1 (* skoXC1 (+ 24. (* skoXC1 (* skoXC1 (+ (- 10.) (* skoXC1 skoXC1))))))) 16.) (<= (* skoXC1 (* skoXC1 (/ 1. 2.))) 3.) (> (* skoXC1 (* skoXC1 (/ (- 1.) 2.))) (- 3.)) (> skoXC1 0.) (> (/ 7. 8.) skoXC1) (<= (* skoXC1 (+ (- 1.) (* skoXC1 (* skoXC1 (/ 1. 3.))))) 0.) (<= (* skoXC1 (* skoXC1 (/ (- 1.) 6.))) 1.) (<= (* skoXC1 (* skoXC1 (+ (/ (- 1.) 2.) (* skoXC1 (* skoXC1 (/ (- 1.) 6.)))))) 0.) (<= (* skoXC1 skoXC1) 2.) (<= (* skoXC1 (* skoXC1 (* skoXC1 (* skoXC1 (/ (- 2.) 3.))))) 0.) (<= (* skoXC1 (+ (- 1.) (* skoXC1 (* skoXC1 (/ (- 1.) 6.))))) 0.) (<= (* skoXC1 (* skoXC1 (/ 1. 3.))) 1.) (<= (* skoXC1 (* skoXC1 (+ 256. (* skoXC1 (* skoXC1 (+ (- 160.) (* skoXC1 (* skoXC1 (+ 32. (* skoXC1 (* skoXC1 (- 1.)))))))))))) 128.)) (succedent (> (* skoXC1 (* skoXC1 (* skoXC1 (* skoXC1 (+ (/ (- 80.) 3.) (* skoXC1 (* skoXC1 (+ (/ 128. 3.) (* skoXC1 (* skoXC1 (+ (/ (- 55.) 3.) (* skoXC1 (* skoXC1 (/ 5. 3.)))))))))))))) 0.)))
-----[end problem]-----

-----[begin problem]-----
% In Mathematica format:
Timing[Resolve[Exists[{skoXC1}, And[skoXC1*(-1+skoXC1*skoXC1*((-1/6)+skoXC1*skoXC1*(-3/40)))<=0,skoXC1*skoXC1*((1/6)+skoXC1*skoXC1*(3/40))>-1,skoXC1*skoXC1*skoXC1*skoXC1*((-13/60)+skoXC1*skoXC1*(-3/10))<=0,skoXC1*skoXC1*((-1/2)+skoXC1*skoXC1*((7/120)+skoXC1*skoXC1*(-3/40)))<=0,skoXC1*skoXC1*((-1/6)+skoXC1*skoXC1*(-3/40))<=1,skoXC1*(-1+skoXC1*skoXC1*((1/3)+skoXC1*skoXC1*(3/20)))<=0,skoXC1*skoXC1>0,skoXC1*skoXC1*(80+skoXC1*skoXC1*(-40+skoXC1*skoXC1*(6+skoXC1*skoXC1*(-1/8))))<=48,skoXC1*skoXC1*(-80+skoXC1*skoXC1*(40+skoXC1*skoXC1*(-6+skoXC1*skoXC1*(1/8))))>-48,skoXC1*skoXC1*(24+skoXC1*skoXC1*(-10+skoXC1*skoXC1))<=16,skoXC1*skoXC1*(1/2)<=3,skoXC1*skoXC1*(-1/2)>-3,skoXC1>0,(7/8)>skoXC1,skoXC1*(-1+skoXC1*skoXC1*(1/3))<=0,skoXC1*skoXC1*(-1/6)<=1,skoXC1*skoXC1*((-1/2)+skoXC1*skoXC1*(-1/6))<=0,skoXC1*skoXC1<=2,skoXC1*skoXC1*skoXC1*skoXC1*(-2/3)<=0,skoXC1*(-1+skoXC1*skoXC1*(-1/6))<=0,skoXC1*skoXC1*(1/3)<=1,skoXC1*skoXC1*(256+skoXC1*skoXC1*(-160+skoXC1*skoXC1*(32+skoXC1*skoXC1*-1)))<=128,skoXC1*skoXC1*skoXC1*skoXC1*((-80/3)+skoXC1*skoXC1*((128/3)+skoXC1*skoXC1*((-55/3)+skoXC1*skoXC1*(5/3))))<=0]], Reals]]

% In QepcadB format:
(E skoXC1) [[(skoXC1 (-1+(skoXC1 skoXC1 (-1/6+(skoXC1 skoXC1 (-3/40))))))<=0]/\[[-1<(skoXC1 skoXC1 (1/6+(skoXC1 skoXC1 (3/40))))]/\[[(skoXC1 skoXC1 skoXC1 skoXC1 (-13/60+(skoXC1 skoXC1 (-3/10))))<=0]/\[[(skoXC1 skoXC1 (-1/2+(skoXC1 skoXC1 (7/120+(skoXC1 skoXC1 (-3/40))))))<=0]/\[[(skoXC1 skoXC1 (-1/6+(skoXC1 skoXC1 (-3/40))))<=1]/\[[(skoXC1 (-1+(skoXC1 skoXC1 (1/3+(skoXC1 skoXC1 (3/20))))))<=0]/\[[0<(skoXC1 skoXC1)]/\[[(skoXC1 skoXC1 (80+(skoXC1 skoXC1 (-40+(skoXC1 skoXC1 (6+(skoXC1 skoXC1 (-1/8))))))))<=48]/\[[-48<(skoXC1 skoXC1 (-80+(skoXC1 skoXC1 (40+(skoXC1 skoXC1 (-6+(skoXC1 skoXC1 (1/8))))))))]/\[[(skoXC1 skoXC1 (24+(skoXC1 skoXC1 (-10+(skoXC1 skoXC1)))))<=16]/\[[(skoXC1 skoXC1 (1/2))<=3]/\[[-3<(skoXC1 skoXC1 (-1/2))]/\[[0<skoXC1]/\[[skoXC1<7/8]/\[[(skoXC1 (-1+(skoXC1 skoXC1 (1/3))))<=0]/\[[(skoXC1 skoXC1 (-1/6))<=1]/\[[(skoXC1 skoXC1 (-1/2+(skoXC1 skoXC1 (-1/6))))<=0]/\[[(skoXC1 skoXC1)<=2]/\[[(skoXC1 skoXC1 skoXC1 skoXC1 (-2/3))<=0]/\[[(skoXC1 (-1+(skoXC1 skoXC1 (-1/6))))<=0]/\[[(skoXC1 skoXC1 (1/3))<=1]/\[[(skoXC1 skoXC1 (256+(skoXC1 skoXC1 (-160+(skoXC1 skoXC1 (32+(skoXC1 skoXC1 (-1))))))))<=128]/\[(skoXC1 skoXC1 skoXC1 skoXC1 (-80/3+(skoXC1 skoXC1 (128/3+(skoXC1 skoXC1 (-55/3+(skoXC1 skoXC1 (5/3))))))))<=0]]]]]]]]]]]]]]]]]]]]]]].

% In SMTLib2 format:
(declare-fun skoXC1 () Real) (assert (and (<= (* skoXC1 (+ (- 1.) (* skoXC1 (* skoXC1 (+ (/ (- 1.) 6.) (* skoXC1 (* skoXC1 (/ (- 3.) 40.)))))))) 0.) (and (> (* skoXC1 (* skoXC1 (+ (/ 1. 6.) (* skoXC1 (* skoXC1 (/ 3. 40.)))))) (- 1.)) (and (<= (* skoXC1 (* skoXC1 (* skoXC1 (* skoXC1 (+ (/ (- 13.) 60.) (* skoXC1 (* skoXC1 (/ (- 3.) 10.)))))))) 0.) (and (<= (* skoXC1 (* skoXC1 (+ (/ (- 1.) 2.) (* skoXC1 (* skoXC1 (+ (/ 7. 120.) (* skoXC1 (* skoXC1 (/ (- 3.) 40.))))))))) 0.) (and (<= (* skoXC1 (* skoXC1 (+ (/ (- 1.) 6.) (* skoXC1 (* skoXC1 (/ (- 3.) 40.)))))) 1.) (and (<= (* skoXC1 (+ (- 1.) (* skoXC1 (* skoXC1 (+ (/ 1. 3.) (* skoXC1 (* skoXC1 (/ 3. 20.)))))))) 0.) (and (> (* skoXC1 skoXC1) 0.) (and (<= (* skoXC1 (* skoXC1 (+ 80. (* skoXC1 (* skoXC1 (+ (- 40.) (* skoXC1 (* skoXC1 (+ 6. (* skoXC1 (* skoXC1 (/ (- 1.) 8.)))))))))))) 48.) (and (> (* skoXC1 (* skoXC1 (+ (- 80.) (* skoXC1 (* skoXC1 (+ 40. (* skoXC1 (* skoXC1 (+ (- 6.) (* skoXC1 (* skoXC1 (/ 1. 8.)))))))))))) (- 48.)) (and (<= (* skoXC1 (* skoXC1 (+ 24. (* skoXC1 (* skoXC1 (+ (- 10.) (* skoXC1 skoXC1))))))) 16.) (and (<= (* skoXC1 (* skoXC1 (/ 1. 2.))) 3.) (and (> (* skoXC1 (* skoXC1 (/ (- 1.) 2.))) (- 3.)) (and (> skoXC1 0.) (and (> (/ 7. 8.) skoXC1) (and (<= (* skoXC1 (+ (- 1.) (* skoXC1 (* skoXC1 (/ 1. 3.))))) 0.) (and (<= (* skoXC1 (* skoXC1 (/ (- 1.) 6.))) 1.) (and (<= (* skoXC1 (* skoXC1 (+ (/ (- 1.) 2.) (* skoXC1 (* skoXC1 (/ (- 1.) 6.)))))) 0.) (and (<= (* skoXC1 skoXC1) 2.) (and (<= (* skoXC1 (* skoXC1 (* skoXC1 (* skoXC1 (/ (- 2.) 3.))))) 0.) (and (<= (* skoXC1 (+ (- 1.) (* skoXC1 (* skoXC1 (/ (- 1.) 6.))))) 0.) (and (<= (* skoXC1 (* skoXC1 (/ 1. 3.))) 1.) (and (<= (* skoXC1 (* skoXC1 (+ 256. (* skoXC1 (* skoXC1 (+ (- 160.) (* skoXC1 (* skoXC1 (+ 32. (* skoXC1 (* skoXC1 (- 1.)))))))))))) 128.) (<= (* skoXC1 (* skoXC1 (* skoXC1 (* skoXC1 (+ (/ (- 80.) 3.) (* skoXC1 (* skoXC1 (+ (/ 128. 3.) (* skoXC1 (* skoXC1 (+ (/ (- 55.) 3.) (* skoXC1 (* skoXC1 (/ 5. 3.)))))))))))))) 0.))))))))))))))))))))))))

% In GRF format:
(sequent " MetiTarski formula " (antecedent (<= (* skoXC1 (+ (- 1.) (* skoXC1 (* skoXC1 (+ (/ (- 1.) 6.) (* skoXC1 (* skoXC1 (/ (- 3.) 40.)))))))) 0.) (> (* skoXC1 (* skoXC1 (+ (/ 1. 6.) (* skoXC1 (* skoXC1 (/ 3. 40.)))))) (- 1.)) (<= (* skoXC1 (* skoXC1 (* skoXC1 (* skoXC1 (+ (/ (- 13.) 60.) (* skoXC1 (* skoXC1 (/ (- 3.) 10.)))))))) 0.) (<= (* skoXC1 (* skoXC1 (+ (/ (- 1.) 2.) (* skoXC1 (* skoXC1 (+ (/ 7. 120.) (* skoXC1 (* skoXC1 (/ (- 3.) 40.))))))))) 0.) (<= (* skoXC1 (* skoXC1 (+ (/ (- 1.) 6.) (* skoXC1 (* skoXC1 (/ (- 3.) 40.)))))) 1.) (<= (* skoXC1 (+ (- 1.) (* skoXC1 (* skoXC1 (+ (/ 1. 3.) (* skoXC1 (* skoXC1 (/ 3. 20.)))))))) 0.) (> (* skoXC1 skoXC1) 0.) (<= (* skoXC1 (* skoXC1 (+ 80. (* skoXC1 (* skoXC1 (+ (- 40.) (* skoXC1 (* skoXC1 (+ 6. (* skoXC1 (* skoXC1 (/ (- 1.) 8.)))))))))))) 48.) (> (* skoXC1 (* skoXC1 (+ (- 80.) (* skoXC1 (* skoXC1 (+ 40. (* skoXC1 (* skoXC1 (+ (- 6.) (* skoXC1 (* skoXC1 (/ 1. 8.)))))))))))) (- 48.)) (<= (* skoXC1 (* skoXC1 (+ 24. (* skoXC1 (* skoXC1 (+ (- 10.) (* skoXC1 skoXC1))))))) 16.) (<= (* skoXC1 (* skoXC1 (/ 1. 2.))) 3.) (> (* skoXC1 (* skoXC1 (/ (- 1.) 2.))) (- 3.)) (> skoXC1 0.) (> (/ 7. 8.) skoXC1) (<= (* skoXC1 (+ (- 1.) (* skoXC1 (* skoXC1 (/ 1. 3.))))) 0.) (<= (* skoXC1 (* skoXC1 (/ (- 1.) 6.))) 1.) (<= (* skoXC1 (* skoXC1 (+ (/ (- 1.) 2.) (* skoXC1 (* skoXC1 (/ (- 1.) 6.)))))) 0.) (<= (* skoXC1 skoXC1) 2.) (<= (* skoXC1 (* skoXC1 (* skoXC1 (* skoXC1 (/ (- 2.) 3.))))) 0.) (<= (* skoXC1 (+ (- 1.) (* skoXC1 (* skoXC1 (/ (- 1.) 6.))))) 0.) (<= (* skoXC1 (* skoXC1 (/ 1. 3.))) 1.) (<= (* skoXC1 (* skoXC1 (+ 256. (* skoXC1 (* skoXC1 (+ (- 160.) (* skoXC1 (* skoXC1 (+ 32. (* skoXC1 (* skoXC1 (- 1.)))))))))))) 128.)) (succedent (> (* skoXC1 (* skoXC1 (* skoXC1 (* skoXC1 (+ (/ (- 80.) 3.) (* skoXC1 (* skoXC1 (+ (/ 128. 3.) (* skoXC1 (* skoXC1 (+ (/ (- 55.) 3.) (* skoXC1 (* skoXC1 (/ 5. 3.)))))))))))))) 0.)))
-----[end problem]-----

-----[begin problem]-----
% In Mathematica format:
Timing[Resolve[Exists[{skoXC1}, And[skoXC1*skoXC1*skoXC1*skoXC1*((-17/120)+skoXC1*skoXC1*(3/80))<=0,skoXC1*skoXC1*((1/6)+skoXC1*skoXC1*(3/40))>-1,skoXC1*skoXC1*skoXC1*skoXC1*((-13/60)+skoXC1*skoXC1*(-3/10))<=0,skoXC1*skoXC1*((-1/2)+skoXC1*skoXC1*((7/120)+skoXC1*skoXC1*(-3/40)))<=0,skoXC1*skoXC1*((-1/6)+skoXC1*skoXC1*(-3/40))<=1,skoXC1*(-1+skoXC1*skoXC1*((1/3)+skoXC1*skoXC1*(3/20)))<=0,skoXC1*skoXC1>0,skoXC1*skoXC1*(80+skoXC1*skoXC1*(-40+skoXC1*skoXC1*(6+skoXC1*skoXC1*(-1/8))))<=48,skoXC1*skoXC1*(-80+skoXC1*skoXC1*(40+skoXC1*skoXC1*(-6+skoXC1*skoXC1*(1/8))))>-48,skoXC1*skoXC1*(24+skoXC1*skoXC1*(-10+skoXC1*skoXC1))<=16,skoXC1*skoXC1*(1/2)<=3,skoXC1*skoXC1*(-1/2)>-3,skoXC1>0,(7/8)>skoXC1,skoXC1*(-1+skoXC1*skoXC1*(1/3))<=0,skoXC1*skoXC1*(-1/6)<=1,skoXC1*skoXC1*((-1/2)+skoXC1*skoXC1*(-1/6))<=0,skoXC1*skoXC1<=2,skoXC1*skoXC1*skoXC1*skoXC1*(-2/3)<=0,skoXC1*(-1+skoXC1*skoXC1*(-1/6))<=0,skoXC1*skoXC1*(1/3)<=1,skoXC1*skoXC1*(256+skoXC1*skoXC1*(-160+skoXC1*skoXC1*(32+skoXC1*skoXC1*-1)))<=128,skoXC1*skoXC1*skoXC1*skoXC1*((-80/3)+skoXC1*skoXC1*((128/3)+skoXC1*skoXC1*((-55/3)+skoXC1*skoXC1*(5/3))))<=0]], Reals]]

% In QepcadB format:
(E skoXC1) [[(skoXC1 skoXC1 skoXC1 skoXC1 (-17/120+(skoXC1 skoXC1 (3/80))))<=0]/\[[-1<(skoXC1 skoXC1 (1/6+(skoXC1 skoXC1 (3/40))))]/\[[(skoXC1 skoXC1 skoXC1 skoXC1 (-13/60+(skoXC1 skoXC1 (-3/10))))<=0]/\[[(skoXC1 skoXC1 (-1/2+(skoXC1 skoXC1 (7/120+(skoXC1 skoXC1 (-3/40))))))<=0]/\[[(skoXC1 skoXC1 (-1/6+(skoXC1 skoXC1 (-3/40))))<=1]/\[[(skoXC1 (-1+(skoXC1 skoXC1 (1/3+(skoXC1 skoXC1 (3/20))))))<=0]/\[[0<(skoXC1 skoXC1)]/\[[(skoXC1 skoXC1 (80+(skoXC1 skoXC1 (-40+(skoXC1 skoXC1 (6+(skoXC1 skoXC1 (-1/8))))))))<=48]/\[[-48<(skoXC1 skoXC1 (-80+(skoXC1 skoXC1 (40+(skoXC1 skoXC1 (-6+(skoXC1 skoXC1 (1/8))))))))]/\[[(skoXC1 skoXC1 (24+(skoXC1 skoXC1 (-10+(skoXC1 skoXC1)))))<=16]/\[[(skoXC1 skoXC1 (1/2))<=3]/\[[-3<(skoXC1 skoXC1 (-1/2))]/\[[0<skoXC1]/\[[skoXC1<7/8]/\[[(skoXC1 (-1+(skoXC1 skoXC1 (1/3))))<=0]/\[[(skoXC1 skoXC1 (-1/6))<=1]/\[[(skoXC1 skoXC1 (-1/2+(skoXC1 skoXC1 (-1/6))))<=0]/\[[(skoXC1 skoXC1)<=2]/\[[(skoXC1 skoXC1 skoXC1 skoXC1 (-2/3))<=0]/\[[(skoXC1 (-1+(skoXC1 skoXC1 (-1/6))))<=0]/\[[(skoXC1 skoXC1 (1/3))<=1]/\[[(skoXC1 skoXC1 (256+(skoXC1 skoXC1 (-160+(skoXC1 skoXC1 (32+(skoXC1 skoXC1 (-1))))))))<=128]/\[(skoXC1 skoXC1 skoXC1 skoXC1 (-80/3+(skoXC1 skoXC1 (128/3+(skoXC1 skoXC1 (-55/3+(skoXC1 skoXC1 (5/3))))))))<=0]]]]]]]]]]]]]]]]]]]]]]].

% In SMTLib2 format:
(declare-fun skoXC1 () Real) (assert (and (<= (* skoXC1 (* skoXC1 (* skoXC1 (* skoXC1 (+ (/ (- 17.) 120.) (* skoXC1 (* skoXC1 (/ 3. 80.)))))))) 0.) (and (> (* skoXC1 (* skoXC1 (+ (/ 1. 6.) (* skoXC1 (* skoXC1 (/ 3. 40.)))))) (- 1.)) (and (<= (* skoXC1 (* skoXC1 (* skoXC1 (* skoXC1 (+ (/ (- 13.) 60.) (* skoXC1 (* skoXC1 (/ (- 3.) 10.)))))))) 0.) (and (<= (* skoXC1 (* skoXC1 (+ (/ (- 1.) 2.) (* skoXC1 (* skoXC1 (+ (/ 7. 120.) (* skoXC1 (* skoXC1 (/ (- 3.) 40.))))))))) 0.) (and (<= (* skoXC1 (* skoXC1 (+ (/ (- 1.) 6.) (* skoXC1 (* skoXC1 (/ (- 3.) 40.)))))) 1.) (and (<= (* skoXC1 (+ (- 1.) (* skoXC1 (* skoXC1 (+ (/ 1. 3.) (* skoXC1 (* skoXC1 (/ 3. 20.)))))))) 0.) (and (> (* skoXC1 skoXC1) 0.) (and (<= (* skoXC1 (* skoXC1 (+ 80. (* skoXC1 (* skoXC1 (+ (- 40.) (* skoXC1 (* skoXC1 (+ 6. (* skoXC1 (* skoXC1 (/ (- 1.) 8.)))))))))))) 48.) (and (> (* skoXC1 (* skoXC1 (+ (- 80.) (* skoXC1 (* skoXC1 (+ 40. (* skoXC1 (* skoXC1 (+ (- 6.) (* skoXC1 (* skoXC1 (/ 1. 8.)))))))))))) (- 48.)) (and (<= (* skoXC1 (* skoXC1 (+ 24. (* skoXC1 (* skoXC1 (+ (- 10.) (* skoXC1 skoXC1))))))) 16.) (and (<= (* skoXC1 (* skoXC1 (/ 1. 2.))) 3.) (and (> (* skoXC1 (* skoXC1 (/ (- 1.) 2.))) (- 3.)) (and (> skoXC1 0.) (and (> (/ 7. 8.) skoXC1) (and (<= (* skoXC1 (+ (- 1.) (* skoXC1 (* skoXC1 (/ 1. 3.))))) 0.) (and (<= (* skoXC1 (* skoXC1 (/ (- 1.) 6.))) 1.) (and (<= (* skoXC1 (* skoXC1 (+ (/ (- 1.) 2.) (* skoXC1 (* skoXC1 (/ (- 1.) 6.)))))) 0.) (and (<= (* skoXC1 skoXC1) 2.) (and (<= (* skoXC1 (* skoXC1 (* skoXC1 (* skoXC1 (/ (- 2.) 3.))))) 0.) (and (<= (* skoXC1 (+ (- 1.) (* skoXC1 (* skoXC1 (/ (- 1.) 6.))))) 0.) (and (<= (* skoXC1 (* skoXC1 (/ 1. 3.))) 1.) (and (<= (* skoXC1 (* skoXC1 (+ 256. (* skoXC1 (* skoXC1 (+ (- 160.) (* skoXC1 (* skoXC1 (+ 32. (* skoXC1 (* skoXC1 (- 1.)))))))))))) 128.) (<= (* skoXC1 (* skoXC1 (* skoXC1 (* skoXC1 (+ (/ (- 80.) 3.) (* skoXC1 (* skoXC1 (+ (/ 128. 3.) (* skoXC1 (* skoXC1 (+ (/ (- 55.) 3.) (* skoXC1 (* skoXC1 (/ 5. 3.)))))))))))))) 0.))))))))))))))))))))))))

% In GRF format:
(sequent " MetiTarski formula " (antecedent (<= (* skoXC1 (* skoXC1 (* skoXC1 (* skoXC1 (+ (/ (- 17.) 120.) (* skoXC1 (* skoXC1 (/ 3. 80.)))))))) 0.) (> (* skoXC1 (* skoXC1 (+ (/ 1. 6.) (* skoXC1 (* skoXC1 (/ 3. 40.)))))) (- 1.)) (<= (* skoXC1 (* skoXC1 (* skoXC1 (* skoXC1 (+ (/ (- 13.) 60.) (* skoXC1 (* skoXC1 (/ (- 3.) 10.)))))))) 0.) (<= (* skoXC1 (* skoXC1 (+ (/ (- 1.) 2.) (* skoXC1 (* skoXC1 (+ (/ 7. 120.) (* skoXC1 (* skoXC1 (/ (- 3.) 40.))))))))) 0.) (<= (* skoXC1 (* skoXC1 (+ (/ (- 1.) 6.) (* skoXC1 (* skoXC1 (/ (- 3.) 40.)))))) 1.) (<= (* skoXC1 (+ (- 1.) (* skoXC1 (* skoXC1 (+ (/ 1. 3.) (* skoXC1 (* skoXC1 (/ 3. 20.)))))))) 0.) (> (* skoXC1 skoXC1) 0.) (<= (* skoXC1 (* skoXC1 (+ 80. (* skoXC1 (* skoXC1 (+ (- 40.) (* skoXC1 (* skoXC1 (+ 6. (* skoXC1 (* skoXC1 (/ (- 1.) 8.)))))))))))) 48.) (> (* skoXC1 (* skoXC1 (+ (- 80.) (* skoXC1 (* skoXC1 (+ 40. (* skoXC1 (* skoXC1 (+ (- 6.) (* skoXC1 (* skoXC1 (/ 1. 8.)))))))))))) (- 48.)) (<= (* skoXC1 (* skoXC1 (+ 24. (* skoXC1 (* skoXC1 (+ (- 10.) (* skoXC1 skoXC1))))))) 16.) (<= (* skoXC1 (* skoXC1 (/ 1. 2.))) 3.) (> (* skoXC1 (* skoXC1 (/ (- 1.) 2.))) (- 3.)) (> skoXC1 0.) (> (/ 7. 8.) skoXC1) (<= (* skoXC1 (+ (- 1.) (* skoXC1 (* skoXC1 (/ 1. 3.))))) 0.) (<= (* skoXC1 (* skoXC1 (/ (- 1.) 6.))) 1.) (<= (* skoXC1 (* skoXC1 (+ (/ (- 1.) 2.) (* skoXC1 (* skoXC1 (/ (- 1.) 6.)))))) 0.) (<= (* skoXC1 skoXC1) 2.) (<= (* skoXC1 (* skoXC1 (* skoXC1 (* skoXC1 (/ (- 2.) 3.))))) 0.) (<= (* skoXC1 (+ (- 1.) (* skoXC1 (* skoXC1 (/ (- 1.) 6.))))) 0.) (<= (* skoXC1 (* skoXC1 (/ 1. 3.))) 1.) (<= (* skoXC1 (* skoXC1 (+ 256. (* skoXC1 (* skoXC1 (+ (- 160.) (* skoXC1 (* skoXC1 (+ 32. (* skoXC1 (* skoXC1 (- 1.)))))))))))) 128.)) (succedent (> (* skoXC1 (* skoXC1 (* skoXC1 (* skoXC1 (+ (/ (- 80.) 3.) (* skoXC1 (* skoXC1 (+ (/ 128. 3.) (* skoXC1 (* skoXC1 (+ (/ (- 55.) 3.) (* skoXC1 (* skoXC1 (/ 5. 3.)))))))))))))) 0.)))
-----[end problem]-----

-----[begin problem]-----
% In Mathematica format:
Timing[Resolve[Exists[{skoXC1}, And[skoXC1*skoXC1*skoXC1*skoXC1*((-17/120)+skoXC1*skoXC1*(3/80))<=0,skoXC1*skoXC1*skoXC1*skoXC1*((-13/60)+skoXC1*skoXC1*(-3/10))<=0,skoXC1*skoXC1*((-1/2)+skoXC1*skoXC1*((7/120)+skoXC1*skoXC1*(-3/40)))<=0,skoXC1*skoXC1*((-1/6)+skoXC1*skoXC1*(-3/40))<=1,skoXC1*(-1+skoXC1*skoXC1*((1/3)+skoXC1*skoXC1*(3/20)))<=0,skoXC1*skoXC1>0,skoXC1*skoXC1*(80+skoXC1*skoXC1*(-40+skoXC1*skoXC1*(6+skoXC1*skoXC1*(-1/8))))<=48,skoXC1*skoXC1*(-80+skoXC1*skoXC1*(40+skoXC1*skoXC1*(-6+skoXC1*skoXC1*(1/8))))>-48,skoXC1*skoXC1*(24+skoXC1*skoXC1*(-10+skoXC1*skoXC1))<=16,skoXC1*skoXC1*(1/2)<=3,skoXC1*skoXC1*(-1/2)>-3,skoXC1>0,(7/8)>skoXC1,skoXC1*(-1+skoXC1*skoXC1*(1/3))<=0,skoXC1*skoXC1*(-1/6)<=1,skoXC1*skoXC1*((-1/2)+skoXC1*skoXC1*(-1/6))<=0,skoXC1*skoXC1<=2,skoXC1*skoXC1*skoXC1*skoXC1*(-2/3)<=0,skoXC1*(-1+skoXC1*skoXC1*(-1/6))<=0,skoXC1*skoXC1*(1/3)<=1,skoXC1*skoXC1*(256+skoXC1*skoXC1*(-160+skoXC1*skoXC1*(32+skoXC1*skoXC1*-1)))<=128,skoXC1*skoXC1*skoXC1*skoXC1*((-80/3)+skoXC1*skoXC1*((128/3)+skoXC1*skoXC1*((-55/3)+skoXC1*skoXC1*(5/3))))<=0]], Reals]]

% In QepcadB format:
(E skoXC1) [[(skoXC1 skoXC1 skoXC1 skoXC1 (-17/120+(skoXC1 skoXC1 (3/80))))<=0]/\[[(skoXC1 skoXC1 skoXC1 skoXC1 (-13/60+(skoXC1 skoXC1 (-3/10))))<=0]/\[[(skoXC1 skoXC1 (-1/2+(skoXC1 skoXC1 (7/120+(skoXC1 skoXC1 (-3/40))))))<=0]/\[[(skoXC1 skoXC1 (-1/6+(skoXC1 skoXC1 (-3/40))))<=1]/\[[(skoXC1 (-1+(skoXC1 skoXC1 (1/3+(skoXC1 skoXC1 (3/20))))))<=0]/\[[0<(skoXC1 skoXC1)]/\[[(skoXC1 skoXC1 (80+(skoXC1 skoXC1 (-40+(skoXC1 skoXC1 (6+(skoXC1 skoXC1 (-1/8))))))))<=48]/\[[-48<(skoXC1 skoXC1 (-80+(skoXC1 skoXC1 (40+(skoXC1 skoXC1 (-6+(skoXC1 skoXC1 (1/8))))))))]/\[[(skoXC1 skoXC1 (24+(skoXC1 skoXC1 (-10+(skoXC1 skoXC1)))))<=16]/\[[(skoXC1 skoXC1 (1/2))<=3]/\[[-3<(skoXC1 skoXC1 (-1/2))]/\[[0<skoXC1]/\[[skoXC1<7/8]/\[[(skoXC1 (-1+(skoXC1 skoXC1 (1/3))))<=0]/\[[(skoXC1 skoXC1 (-1/6))<=1]/\[[(skoXC1 skoXC1 (-1/2+(skoXC1 skoXC1 (-1/6))))<=0]/\[[(skoXC1 skoXC1)<=2]/\[[(skoXC1 skoXC1 skoXC1 skoXC1 (-2/3))<=0]/\[[(skoXC1 (-1+(skoXC1 skoXC1 (-1/6))))<=0]/\[[(skoXC1 skoXC1 (1/3))<=1]/\[[(skoXC1 skoXC1 (256+(skoXC1 skoXC1 (-160+(skoXC1 skoXC1 (32+(skoXC1 skoXC1 (-1))))))))<=128]/\[(skoXC1 skoXC1 skoXC1 skoXC1 (-80/3+(skoXC1 skoXC1 (128/3+(skoXC1 skoXC1 (-55/3+(skoXC1 skoXC1 (5/3))))))))<=0]]]]]]]]]]]]]]]]]]]]]].

% In SMTLib2 format:
(declare-fun skoXC1 () Real) (assert (and (<= (* skoXC1 (* skoXC1 (* skoXC1 (* skoXC1 (+ (/ (- 17.) 120.) (* skoXC1 (* skoXC1 (/ 3. 80.)))))))) 0.) (and (<= (* skoXC1 (* skoXC1 (* skoXC1 (* skoXC1 (+ (/ (- 13.) 60.) (* skoXC1 (* skoXC1 (/ (- 3.) 10.)))))))) 0.) (and (<= (* skoXC1 (* skoXC1 (+ (/ (- 1.) 2.) (* skoXC1 (* skoXC1 (+ (/ 7. 120.) (* skoXC1 (* skoXC1 (/ (- 3.) 40.))))))))) 0.) (and (<= (* skoXC1 (* skoXC1 (+ (/ (- 1.) 6.) (* skoXC1 (* skoXC1 (/ (- 3.) 40.)))))) 1.) (and (<= (* skoXC1 (+ (- 1.) (* skoXC1 (* skoXC1 (+ (/ 1. 3.) (* skoXC1 (* skoXC1 (/ 3. 20.)))))))) 0.) (and (> (* skoXC1 skoXC1) 0.) (and (<= (* skoXC1 (* skoXC1 (+ 80. (* skoXC1 (* skoXC1 (+ (- 40.) (* skoXC1 (* skoXC1 (+ 6. (* skoXC1 (* skoXC1 (/ (- 1.) 8.)))))))))))) 48.) (and (> (* skoXC1 (* skoXC1 (+ (- 80.) (* skoXC1 (* skoXC1 (+ 40. (* skoXC1 (* skoXC1 (+ (- 6.) (* skoXC1 (* skoXC1 (/ 1. 8.)))))))))))) (- 48.)) (and (<= (* skoXC1 (* skoXC1 (+ 24. (* skoXC1 (* skoXC1 (+ (- 10.) (* skoXC1 skoXC1))))))) 16.) (and (<= (* skoXC1 (* skoXC1 (/ 1. 2.))) 3.) (and (> (* skoXC1 (* skoXC1 (/ (- 1.) 2.))) (- 3.)) (and (> skoXC1 0.) (and (> (/ 7. 8.) skoXC1) (and (<= (* skoXC1 (+ (- 1.) (* skoXC1 (* skoXC1 (/ 1. 3.))))) 0.) (and (<= (* skoXC1 (* skoXC1 (/ (- 1.) 6.))) 1.) (and (<= (* skoXC1 (* skoXC1 (+ (/ (- 1.) 2.) (* skoXC1 (* skoXC1 (/ (- 1.) 6.)))))) 0.) (and (<= (* skoXC1 skoXC1) 2.) (and (<= (* skoXC1 (* skoXC1 (* skoXC1 (* skoXC1 (/ (- 2.) 3.))))) 0.) (and (<= (* skoXC1 (+ (- 1.) (* skoXC1 (* skoXC1 (/ (- 1.) 6.))))) 0.) (and (<= (* skoXC1 (* skoXC1 (/ 1. 3.))) 1.) (and (<= (* skoXC1 (* skoXC1 (+ 256. (* skoXC1 (* skoXC1 (+ (- 160.) (* skoXC1 (* skoXC1 (+ 32. (* skoXC1 (* skoXC1 (- 1.)))))))))))) 128.) (<= (* skoXC1 (* skoXC1 (* skoXC1 (* skoXC1 (+ (/ (- 80.) 3.) (* skoXC1 (* skoXC1 (+ (/ 128. 3.) (* skoXC1 (* skoXC1 (+ (/ (- 55.) 3.) (* skoXC1 (* skoXC1 (/ 5. 3.)))))))))))))) 0.)))))))))))))))))))))))

% In GRF format:
(sequent " MetiTarski formula " (antecedent (<= (* skoXC1 (* skoXC1 (* skoXC1 (* skoXC1 (+ (/ (- 17.) 120.) (* skoXC1 (* skoXC1 (/ 3. 80.)))))))) 0.) (<= (* skoXC1 (* skoXC1 (* skoXC1 (* skoXC1 (+ (/ (- 13.) 60.) (* skoXC1 (* skoXC1 (/ (- 3.) 10.)))))))) 0.) (<= (* skoXC1 (* skoXC1 (+ (/ (- 1.) 2.) (* skoXC1 (* skoXC1 (+ (/ 7. 120.) (* skoXC1 (* skoXC1 (/ (- 3.) 40.))))))))) 0.) (<= (* skoXC1 (* skoXC1 (+ (/ (- 1.) 6.) (* skoXC1 (* skoXC1 (/ (- 3.) 40.)))))) 1.) (<= (* skoXC1 (+ (- 1.) (* skoXC1 (* skoXC1 (+ (/ 1. 3.) (* skoXC1 (* skoXC1 (/ 3. 20.)))))))) 0.) (> (* skoXC1 skoXC1) 0.) (<= (* skoXC1 (* skoXC1 (+ 80. (* skoXC1 (* skoXC1 (+ (- 40.) (* skoXC1 (* skoXC1 (+ 6. (* skoXC1 (* skoXC1 (/ (- 1.) 8.)))))))))))) 48.) (> (* skoXC1 (* skoXC1 (+ (- 80.) (* skoXC1 (* skoXC1 (+ 40. (* skoXC1 (* skoXC1 (+ (- 6.) (* skoXC1 (* skoXC1 (/ 1. 8.)))))))))))) (- 48.)) (<= (* skoXC1 (* skoXC1 (+ 24. (* skoXC1 (* skoXC1 (+ (- 10.) (* skoXC1 skoXC1))))))) 16.) (<= (* skoXC1 (* skoXC1 (/ 1. 2.))) 3.) (> (* skoXC1 (* skoXC1 (/ (- 1.) 2.))) (- 3.)) (> skoXC1 0.) (> (/ 7. 8.) skoXC1) (<= (* skoXC1 (+ (- 1.) (* skoXC1 (* skoXC1 (/ 1. 3.))))) 0.) (<= (* skoXC1 (* skoXC1 (/ (- 1.) 6.))) 1.) (<= (* skoXC1 (* skoXC1 (+ (/ (- 1.) 2.) (* skoXC1 (* skoXC1 (/ (- 1.) 6.)))))) 0.) (<= (* skoXC1 skoXC1) 2.) (<= (* skoXC1 (* skoXC1 (* skoXC1 (* skoXC1 (/ (- 2.) 3.))))) 0.) (<= (* skoXC1 (+ (- 1.) (* skoXC1 (* skoXC1 (/ (- 1.) 6.))))) 0.) (<= (* skoXC1 (* skoXC1 (/ 1. 3.))) 1.) (<= (* skoXC1 (* skoXC1 (+ 256. (* skoXC1 (* skoXC1 (+ (- 160.) (* skoXC1 (* skoXC1 (+ 32. (* skoXC1 (* skoXC1 (- 1.)))))))))))) 128.)) (succedent (> (* skoXC1 (* skoXC1 (* skoXC1 (* skoXC1 (+ (/ (- 80.) 3.) (* skoXC1 (* skoXC1 (+ (/ 128. 3.) (* skoXC1 (* skoXC1 (+ (/ (- 55.) 3.) (* skoXC1 (* skoXC1 (/ 5. 3.)))))))))))))) 0.)))
-----[end problem]-----

-----[begin problem]-----
% In Mathematica format:
Timing[Resolve[Exists[{skoXC1}, And[skoXC1*skoXC1*((1/3)+skoXC1*skoXC1*(3/20))<=1,skoXC1*skoXC1*skoXC1*skoXC1*((-17/120)+skoXC1*skoXC1*(3/80))<=0,skoXC1*skoXC1*skoXC1*skoXC1*((-13/60)+skoXC1*skoXC1*(-3/10))<=0,skoXC1*skoXC1*((-1/2)+skoXC1*skoXC1*((7/120)+skoXC1*skoXC1*(-3/40)))<=0,skoXC1*skoXC1*((-1/6)+skoXC1*skoXC1*(-3/40))<=1,skoXC1*(-1+skoXC1*skoXC1*((1/3)+skoXC1*skoXC1*(3/20)))<=0,skoXC1*skoXC1>0,skoXC1*skoXC1*(80+skoXC1*skoXC1*(-40+skoXC1*skoXC1*(6+skoXC1*skoXC1*(-1/8))))<=48,skoXC1*skoXC1*(-80+skoXC1*skoXC1*(40+skoXC1*skoXC1*(-6+skoXC1*skoXC1*(1/8))))>-48,skoXC1*skoXC1*(24+skoXC1*skoXC1*(-10+skoXC1*skoXC1))<=16,skoXC1*skoXC1*(1/2)<=3,skoXC1*skoXC1*(-1/2)>-3,skoXC1>0,(7/8)>skoXC1,skoXC1*(-1+skoXC1*skoXC1*(1/3))<=0,skoXC1*skoXC1*(-1/6)<=1,skoXC1*skoXC1*((-1/2)+skoXC1*skoXC1*(-1/6))<=0,skoXC1*skoXC1<=2,skoXC1*skoXC1*skoXC1*skoXC1*(-2/3)<=0,skoXC1*(-1+skoXC1*skoXC1*(-1/6))<=0,skoXC1*skoXC1*(1/3)<=1,skoXC1*skoXC1*(256+skoXC1*skoXC1*(-160+skoXC1*skoXC1*(32+skoXC1*skoXC1*-1)))<=128,skoXC1*skoXC1*skoXC1*skoXC1*((-80/3)+skoXC1*skoXC1*((128/3)+skoXC1*skoXC1*((-55/3)+skoXC1*skoXC1*(5/3))))<=0]], Reals]]

% In QepcadB format:
(E skoXC1) [[(skoXC1 skoXC1 (1/3+(skoXC1 skoXC1 (3/20))))<=1]/\[[(skoXC1 skoXC1 skoXC1 skoXC1 (-17/120+(skoXC1 skoXC1 (3/80))))<=0]/\[[(skoXC1 skoXC1 skoXC1 skoXC1 (-13/60+(skoXC1 skoXC1 (-3/10))))<=0]/\[[(skoXC1 skoXC1 (-1/2+(skoXC1 skoXC1 (7/120+(skoXC1 skoXC1 (-3/40))))))<=0]/\[[(skoXC1 skoXC1 (-1/6+(skoXC1 skoXC1 (-3/40))))<=1]/\[[(skoXC1 (-1+(skoXC1 skoXC1 (1/3+(skoXC1 skoXC1 (3/20))))))<=0]/\[[0<(skoXC1 skoXC1)]/\[[(skoXC1 skoXC1 (80+(skoXC1 skoXC1 (-40+(skoXC1 skoXC1 (6+(skoXC1 skoXC1 (-1/8))))))))<=48]/\[[-48<(skoXC1 skoXC1 (-80+(skoXC1 skoXC1 (40+(skoXC1 skoXC1 (-6+(skoXC1 skoXC1 (1/8))))))))]/\[[(skoXC1 skoXC1 (24+(skoXC1 skoXC1 (-10+(skoXC1 skoXC1)))))<=16]/\[[(skoXC1 skoXC1 (1/2))<=3]/\[[-3<(skoXC1 skoXC1 (-1/2))]/\[[0<skoXC1]/\[[skoXC1<7/8]/\[[(skoXC1 (-1+(skoXC1 skoXC1 (1/3))))<=0]/\[[(skoXC1 skoXC1 (-1/6))<=1]/\[[(skoXC1 skoXC1 (-1/2+(skoXC1 skoXC1 (-1/6))))<=0]/\[[(skoXC1 skoXC1)<=2]/\[[(skoXC1 skoXC1 skoXC1 skoXC1 (-2/3))<=0]/\[[(skoXC1 (-1+(skoXC1 skoXC1 (-1/6))))<=0]/\[[(skoXC1 skoXC1 (1/3))<=1]/\[[(skoXC1 skoXC1 (256+(skoXC1 skoXC1 (-160+(skoXC1 skoXC1 (32+(skoXC1 skoXC1 (-1))))))))<=128]/\[(skoXC1 skoXC1 skoXC1 skoXC1 (-80/3+(skoXC1 skoXC1 (128/3+(skoXC1 skoXC1 (-55/3+(skoXC1 skoXC1 (5/3))))))))<=0]]]]]]]]]]]]]]]]]]]]]]].

% In SMTLib2 format:
(declare-fun skoXC1 () Real) (assert (and (<= (* skoXC1 (* skoXC1 (+ (/ 1. 3.) (* skoXC1 (* skoXC1 (/ 3. 20.)))))) 1.) (and (<= (* skoXC1 (* skoXC1 (* skoXC1 (* skoXC1 (+ (/ (- 17.) 120.) (* skoXC1 (* skoXC1 (/ 3. 80.)))))))) 0.) (and (<= (* skoXC1 (* skoXC1 (* skoXC1 (* skoXC1 (+ (/ (- 13.) 60.) (* skoXC1 (* skoXC1 (/ (- 3.) 10.)))))))) 0.) (and (<= (* skoXC1 (* skoXC1 (+ (/ (- 1.) 2.) (* skoXC1 (* skoXC1 (+ (/ 7. 120.) (* skoXC1 (* skoXC1 (/ (- 3.) 40.))))))))) 0.) (and (<= (* skoXC1 (* skoXC1 (+ (/ (- 1.) 6.) (* skoXC1 (* skoXC1 (/ (- 3.) 40.)))))) 1.) (and (<= (* skoXC1 (+ (- 1.) (* skoXC1 (* skoXC1 (+ (/ 1. 3.) (* skoXC1 (* skoXC1 (/ 3. 20.)))))))) 0.) (and (> (* skoXC1 skoXC1) 0.) (and (<= (* skoXC1 (* skoXC1 (+ 80. (* skoXC1 (* skoXC1 (+ (- 40.) (* skoXC1 (* skoXC1 (+ 6. (* skoXC1 (* skoXC1 (/ (- 1.) 8.)))))))))))) 48.) (and (> (* skoXC1 (* skoXC1 (+ (- 80.) (* skoXC1 (* skoXC1 (+ 40. (* skoXC1 (* skoXC1 (+ (- 6.) (* skoXC1 (* skoXC1 (/ 1. 8.)))))))))))) (- 48.)) (and (<= (* skoXC1 (* skoXC1 (+ 24. (* skoXC1 (* skoXC1 (+ (- 10.) (* skoXC1 skoXC1))))))) 16.) (and (<= (* skoXC1 (* skoXC1 (/ 1. 2.))) 3.) (and (> (* skoXC1 (* skoXC1 (/ (- 1.) 2.))) (- 3.)) (and (> skoXC1 0.) (and (> (/ 7. 8.) skoXC1) (and (<= (* skoXC1 (+ (- 1.) (* skoXC1 (* skoXC1 (/ 1. 3.))))) 0.) (and (<= (* skoXC1 (* skoXC1 (/ (- 1.) 6.))) 1.) (and (<= (* skoXC1 (* skoXC1 (+ (/ (- 1.) 2.) (* skoXC1 (* skoXC1 (/ (- 1.) 6.)))))) 0.) (and (<= (* skoXC1 skoXC1) 2.) (and (<= (* skoXC1 (* skoXC1 (* skoXC1 (* skoXC1 (/ (- 2.) 3.))))) 0.) (and (<= (* skoXC1 (+ (- 1.) (* skoXC1 (* skoXC1 (/ (- 1.) 6.))))) 0.) (and (<= (* skoXC1 (* skoXC1 (/ 1. 3.))) 1.) (and (<= (* skoXC1 (* skoXC1 (+ 256. (* skoXC1 (* skoXC1 (+ (- 160.) (* skoXC1 (* skoXC1 (+ 32. (* skoXC1 (* skoXC1 (- 1.)))))))))))) 128.) (<= (* skoXC1 (* skoXC1 (* skoXC1 (* skoXC1 (+ (/ (- 80.) 3.) (* skoXC1 (* skoXC1 (+ (/ 128. 3.) (* skoXC1 (* skoXC1 (+ (/ (- 55.) 3.) (* skoXC1 (* skoXC1 (/ 5. 3.)))))))))))))) 0.))))))))))))))))))))))))

% In GRF format:
(sequent " MetiTarski formula " (antecedent (<= (* skoXC1 (* skoXC1 (+ (/ 1. 3.) (* skoXC1 (* skoXC1 (/ 3. 20.)))))) 1.) (<= (* skoXC1 (* skoXC1 (* skoXC1 (* skoXC1 (+ (/ (- 17.) 120.) (* skoXC1 (* skoXC1 (/ 3. 80.)))))))) 0.) (<= (* skoXC1 (* skoXC1 (* skoXC1 (* skoXC1 (+ (/ (- 13.) 60.) (* skoXC1 (* skoXC1 (/ (- 3.) 10.)))))))) 0.) (<= (* skoXC1 (* skoXC1 (+ (/ (- 1.) 2.) (* skoXC1 (* skoXC1 (+ (/ 7. 120.) (* skoXC1 (* skoXC1 (/ (- 3.) 40.))))))))) 0.) (<= (* skoXC1 (* skoXC1 (+ (/ (- 1.) 6.) (* skoXC1 (* skoXC1 (/ (- 3.) 40.)))))) 1.) (<= (* skoXC1 (+ (- 1.) (* skoXC1 (* skoXC1 (+ (/ 1. 3.) (* skoXC1 (* skoXC1 (/ 3. 20.)))))))) 0.) (> (* skoXC1 skoXC1) 0.) (<= (* skoXC1 (* skoXC1 (+ 80. (* skoXC1 (* skoXC1 (+ (- 40.) (* skoXC1 (* skoXC1 (+ 6. (* skoXC1 (* skoXC1 (/ (- 1.) 8.)))))))))))) 48.) (> (* skoXC1 (* skoXC1 (+ (- 80.) (* skoXC1 (* skoXC1 (+ 40. (* skoXC1 (* skoXC1 (+ (- 6.) (* skoXC1 (* skoXC1 (/ 1. 8.)))))))))))) (- 48.)) (<= (* skoXC1 (* skoXC1 (+ 24. (* skoXC1 (* skoXC1 (+ (- 10.) (* skoXC1 skoXC1))))))) 16.) (<= (* skoXC1 (* skoXC1 (/ 1. 2.))) 3.) (> (* skoXC1 (* skoXC1 (/ (- 1.) 2.))) (- 3.)) (> skoXC1 0.) (> (/ 7. 8.) skoXC1) (<= (* skoXC1 (+ (- 1.) (* skoXC1 (* skoXC1 (/ 1. 3.))))) 0.) (<= (* skoXC1 (* skoXC1 (/ (- 1.) 6.))) 1.) (<= (* skoXC1 (* skoXC1 (+ (/ (- 1.) 2.) (* skoXC1 (* skoXC1 (/ (- 1.) 6.)))))) 0.) (<= (* skoXC1 skoXC1) 2.) (<= (* skoXC1 (* skoXC1 (* skoXC1 (* skoXC1 (/ (- 2.) 3.))))) 0.) (<= (* skoXC1 (+ (- 1.) (* skoXC1 (* skoXC1 (/ (- 1.) 6.))))) 0.) (<= (* skoXC1 (* skoXC1 (/ 1. 3.))) 1.) (<= (* skoXC1 (* skoXC1 (+ 256. (* skoXC1 (* skoXC1 (+ (- 160.) (* skoXC1 (* skoXC1 (+ 32. (* skoXC1 (* skoXC1 (- 1.)))))))))))) 128.)) (succedent (> (* skoXC1 (* skoXC1 (* skoXC1 (* skoXC1 (+ (/ (- 80.) 3.) (* skoXC1 (* skoXC1 (+ (/ 128. 3.) (* skoXC1 (* skoXC1 (+ (/ (- 55.) 3.) (* skoXC1 (* skoXC1 (/ 5. 3.)))))))))))))) 0.)))
-----[end problem]-----

-----[begin problem]-----
% In Mathematica format:
Timing[Resolve[Exists[{skoXC1}, And[skoXC1*skoXC1*((1/3)+skoXC1*skoXC1*(3/20))<=1,skoXC1*skoXC1*skoXC1*skoXC1*((-17/120)+skoXC1*skoXC1*(3/80))<=0,skoXC1*skoXC1*skoXC1*skoXC1*((-13/60)+skoXC1*skoXC1*(-3/10))<=0,skoXC1*skoXC1*((-1/2)+skoXC1*skoXC1*((7/120)+skoXC1*skoXC1*(-3/40)))<=0,skoXC1*skoXC1*((-1/6)+skoXC1*skoXC1*(-3/40))<=1,skoXC1*(-1+skoXC1*skoXC1*((1/3)+skoXC1*skoXC1*(3/20)))<=0,skoXC1*skoXC1>0,skoXC1*skoXC1*(80+skoXC1*skoXC1*(-40+skoXC1*skoXC1*(6+skoXC1*skoXC1*(-1/8))))<=48,skoXC1*skoXC1*(-80+skoXC1*skoXC1*(40+skoXC1*skoXC1*(-6+skoXC1*skoXC1*(1/8))))>-48,skoXC1*skoXC1*(24+skoXC1*skoXC1*(-10+skoXC1*skoXC1))<=16,skoXC1*skoXC1*(1/2)<=3,skoXC1*skoXC1*(-1/2)>-3,skoXC1>0,(7/8)>skoXC1,skoXC1*(-1+skoXC1*skoXC1*(1/3))<=0,skoXC1*skoXC1*(-1/6)<=1,skoXC1*skoXC1*((-1/2)+skoXC1*skoXC1*(-1/6))<=0,skoXC1*skoXC1<=2,skoXC1*skoXC1*skoXC1*skoXC1*(-2/3)<=0,skoXC1*(-1+skoXC1*skoXC1*(-1/6))<=0,skoXC1*skoXC1*(1/3)<=1,skoXC1*skoXC1*(256+skoXC1*skoXC1*(-160+skoXC1*skoXC1*(32+skoXC1*skoXC1*-1)))<=128,skoXC1*skoXC1*skoXC1*skoXC1*((-80/3)+skoXC1*skoXC1*((128/3)+skoXC1*skoXC1*((-55/3)+skoXC1*skoXC1*(5/3))))<=0]], Reals]]

% In QepcadB format:
(E skoXC1) [[(skoXC1 skoXC1 (1/3+(skoXC1 skoXC1 (3/20))))<=1]/\[[(skoXC1 skoXC1 skoXC1 skoXC1 (-17/120+(skoXC1 skoXC1 (3/80))))<=0]/\[[(skoXC1 skoXC1 skoXC1 skoXC1 (-13/60+(skoXC1 skoXC1 (-3/10))))<=0]/\[[(skoXC1 skoXC1 (-1/2+(skoXC1 skoXC1 (7/120+(skoXC1 skoXC1 (-3/40))))))<=0]/\[[(skoXC1 skoXC1 (-1/6+(skoXC1 skoXC1 (-3/40))))<=1]/\[[(skoXC1 (-1+(skoXC1 skoXC1 (1/3+(skoXC1 skoXC1 (3/20))))))<=0]/\[[0<(skoXC1 skoXC1)]/\[[(skoXC1 skoXC1 (80+(skoXC1 skoXC1 (-40+(skoXC1 skoXC1 (6+(skoXC1 skoXC1 (-1/8))))))))<=48]/\[[-48<(skoXC1 skoXC1 (-80+(skoXC1 skoXC1 (40+(skoXC1 skoXC1 (-6+(skoXC1 skoXC1 (1/8))))))))]/\[[(skoXC1 skoXC1 (24+(skoXC1 skoXC1 (-10+(skoXC1 skoXC1)))))<=16]/\[[(skoXC1 skoXC1 (1/2))<=3]/\[[-3<(skoXC1 skoXC1 (-1/2))]/\[[0<skoXC1]/\[[skoXC1<7/8]/\[[(skoXC1 (-1+(skoXC1 skoXC1 (1/3))))<=0]/\[[(skoXC1 skoXC1 (-1/6))<=1]/\[[(skoXC1 skoXC1 (-1/2+(skoXC1 skoXC1 (-1/6))))<=0]/\[[(skoXC1 skoXC1)<=2]/\[[(skoXC1 skoXC1 skoXC1 skoXC1 (-2/3))<=0]/\[[(skoXC1 (-1+(skoXC1 skoXC1 (-1/6))))<=0]/\[[(skoXC1 skoXC1 (1/3))<=1]/\[[(skoXC1 skoXC1 (256+(skoXC1 skoXC1 (-160+(skoXC1 skoXC1 (32+(skoXC1 skoXC1 (-1))))))))<=128]/\[(skoXC1 skoXC1 skoXC1 skoXC1 (-80/3+(skoXC1 skoXC1 (128/3+(skoXC1 skoXC1 (-55/3+(skoXC1 skoXC1 (5/3))))))))<=0]]]]]]]]]]]]]]]]]]]]]]].

% In SMTLib2 format:
(declare-fun skoXC1 () Real) (assert (and (<= (* skoXC1 (* skoXC1 (+ (/ 1. 3.) (* skoXC1 (* skoXC1 (/ 3. 20.)))))) 1.) (and (<= (* skoXC1 (* skoXC1 (* skoXC1 (* skoXC1 (+ (/ (- 17.) 120.) (* skoXC1 (* skoXC1 (/ 3. 80.)))))))) 0.) (and (<= (* skoXC1 (* skoXC1 (* skoXC1 (* skoXC1 (+ (/ (- 13.) 60.) (* skoXC1 (* skoXC1 (/ (- 3.) 10.)))))))) 0.) (and (<= (* skoXC1 (* skoXC1 (+ (/ (- 1.) 2.) (* skoXC1 (* skoXC1 (+ (/ 7. 120.) (* skoXC1 (* skoXC1 (/ (- 3.) 40.))))))))) 0.) (and (<= (* skoXC1 (* skoXC1 (+ (/ (- 1.) 6.) (* skoXC1 (* skoXC1 (/ (- 3.) 40.)))))) 1.) (and (<= (* skoXC1 (+ (- 1.) (* skoXC1 (* skoXC1 (+ (/ 1. 3.) (* skoXC1 (* skoXC1 (/ 3. 20.)))))))) 0.) (and (> (* skoXC1 skoXC1) 0.) (and (<= (* skoXC1 (* skoXC1 (+ 80. (* skoXC1 (* skoXC1 (+ (- 40.) (* skoXC1 (* skoXC1 (+ 6. (* skoXC1 (* skoXC1 (/ (- 1.) 8.)))))))))))) 48.) (and (> (* skoXC1 (* skoXC1 (+ (- 80.) (* skoXC1 (* skoXC1 (+ 40. (* skoXC1 (* skoXC1 (+ (- 6.) (* skoXC1 (* skoXC1 (/ 1. 8.)))))))))))) (- 48.)) (and (<= (* skoXC1 (* skoXC1 (+ 24. (* skoXC1 (* skoXC1 (+ (- 10.) (* skoXC1 skoXC1))))))) 16.) (and (<= (* skoXC1 (* skoXC1 (/ 1. 2.))) 3.) (and (> (* skoXC1 (* skoXC1 (/ (- 1.) 2.))) (- 3.)) (and (> skoXC1 0.) (and (> (/ 7. 8.) skoXC1) (and (<= (* skoXC1 (+ (- 1.) (* skoXC1 (* skoXC1 (/ 1. 3.))))) 0.) (and (<= (* skoXC1 (* skoXC1 (/ (- 1.) 6.))) 1.) (and (<= (* skoXC1 (* skoXC1 (+ (/ (- 1.) 2.) (* skoXC1 (* skoXC1 (/ (- 1.) 6.)))))) 0.) (and (<= (* skoXC1 skoXC1) 2.) (and (<= (* skoXC1 (* skoXC1 (* skoXC1 (* skoXC1 (/ (- 2.) 3.))))) 0.) (and (<= (* skoXC1 (+ (- 1.) (* skoXC1 (* skoXC1 (/ (- 1.) 6.))))) 0.) (and (<= (* skoXC1 (* skoXC1 (/ 1. 3.))) 1.) (and (<= (* skoXC1 (* skoXC1 (+ 256. (* skoXC1 (* skoXC1 (+ (- 160.) (* skoXC1 (* skoXC1 (+ 32. (* skoXC1 (* skoXC1 (- 1.)))))))))))) 128.) (<= (* skoXC1 (* skoXC1 (* skoXC1 (* skoXC1 (+ (/ (- 80.) 3.) (* skoXC1 (* skoXC1 (+ (/ 128. 3.) (* skoXC1 (* skoXC1 (+ (/ (- 55.) 3.) (* skoXC1 (* skoXC1 (/ 5. 3.)))))))))))))) 0.))))))))))))))))))))))))

% In GRF format:
(sequent " MetiTarski formula " (antecedent (<= (* skoXC1 (* skoXC1 (+ (/ 1. 3.) (* skoXC1 (* skoXC1 (/ 3. 20.)))))) 1.) (<= (* skoXC1 (* skoXC1 (* skoXC1 (* skoXC1 (+ (/ (- 17.) 120.) (* skoXC1 (* skoXC1 (/ 3. 80.)))))))) 0.) (<= (* skoXC1 (* skoXC1 (* skoXC1 (* skoXC1 (+ (/ (- 13.) 60.) (* skoXC1 (* skoXC1 (/ (- 3.) 10.)))))))) 0.) (<= (* skoXC1 (* skoXC1 (+ (/ (- 1.) 2.) (* skoXC1 (* skoXC1 (+ (/ 7. 120.) (* skoXC1 (* skoXC1 (/ (- 3.) 40.))))))))) 0.) (<= (* skoXC1 (* skoXC1 (+ (/ (- 1.) 6.) (* skoXC1 (* skoXC1 (/ (- 3.) 40.)))))) 1.) (<= (* skoXC1 (+ (- 1.) (* skoXC1 (* skoXC1 (+ (/ 1. 3.) (* skoXC1 (* skoXC1 (/ 3. 20.)))))))) 0.) (> (* skoXC1 skoXC1) 0.) (<= (* skoXC1 (* skoXC1 (+ 80. (* skoXC1 (* skoXC1 (+ (- 40.) (* skoXC1 (* skoXC1 (+ 6. (* skoXC1 (* skoXC1 (/ (- 1.) 8.)))))))))))) 48.) (> (* skoXC1 (* skoXC1 (+ (- 80.) (* skoXC1 (* skoXC1 (+ 40. (* skoXC1 (* skoXC1 (+ (- 6.) (* skoXC1 (* skoXC1 (/ 1. 8.)))))))))))) (- 48.)) (<= (* skoXC1 (* skoXC1 (+ 24. (* skoXC1 (* skoXC1 (+ (- 10.) (* skoXC1 skoXC1))))))) 16.) (<= (* skoXC1 (* skoXC1 (/ 1. 2.))) 3.) (> (* skoXC1 (* skoXC1 (/ (- 1.) 2.))) (- 3.)) (> skoXC1 0.) (> (/ 7. 8.) skoXC1) (<= (* skoXC1 (+ (- 1.) (* skoXC1 (* skoXC1 (/ 1. 3.))))) 0.) (<= (* skoXC1 (* skoXC1 (/ (- 1.) 6.))) 1.) (<= (* skoXC1 (* skoXC1 (+ (/ (- 1.) 2.) (* skoXC1 (* skoXC1 (/ (- 1.) 6.)))))) 0.) (<= (* skoXC1 skoXC1) 2.) (<= (* skoXC1 (* skoXC1 (* skoXC1 (* skoXC1 (/ (- 2.) 3.))))) 0.) (<= (* skoXC1 (+ (- 1.) (* skoXC1 (* skoXC1 (/ (- 1.) 6.))))) 0.) (<= (* skoXC1 (* skoXC1 (/ 1. 3.))) 1.) (<= (* skoXC1 (* skoXC1 (+ 256. (* skoXC1 (* skoXC1 (+ (- 160.) (* skoXC1 (* skoXC1 (+ 32. (* skoXC1 (* skoXC1 (- 1.)))))))))))) 128.)) (succedent (> (* skoXC1 (* skoXC1 (* skoXC1 (* skoXC1 (+ (/ (- 80.) 3.) (* skoXC1 (* skoXC1 (+ (/ 128. 3.) (* skoXC1 (* skoXC1 (+ (/ (- 55.) 3.) (* skoXC1 (* skoXC1 (/ 5. 3.)))))))))))))) 0.)))
-----[end problem]-----

-----[begin problem]-----
% In Mathematica format:
Timing[Resolve[Exists[{skoXC1}, And[skoXC1*skoXC1*((-1/6)+skoXC1*skoXC1*(-3/40))<=1,skoXC1*skoXC1*((1/3)+skoXC1*skoXC1*(3/20))<=1,skoXC1*skoXC1*skoXC1*skoXC1*((-17/120)+skoXC1*skoXC1*(3/80))<=0,skoXC1*skoXC1*skoXC1*skoXC1*((-13/60)+skoXC1*skoXC1*(-3/10))<=0,skoXC1*skoXC1*((-1/2)+skoXC1*skoXC1*((7/120)+skoXC1*skoXC1*(-3/40)))<=0,skoXC1*skoXC1*((-1/6)+skoXC1*skoXC1*(-3/40))<=1,skoXC1*(-1+skoXC1*skoXC1*((1/3)+skoXC1*skoXC1*(3/20)))<=0,skoXC1*skoXC1>0,skoXC1*skoXC1*(80+skoXC1*skoXC1*(-40+skoXC1*skoXC1*(6+skoXC1*skoXC1*(-1/8))))<=48,skoXC1*skoXC1*(-80+skoXC1*skoXC1*(40+skoXC1*skoXC1*(-6+skoXC1*skoXC1*(1/8))))>-48,skoXC1*skoXC1*(24+skoXC1*skoXC1*(-10+skoXC1*skoXC1))<=16,skoXC1*skoXC1*(1/2)<=3,skoXC1*skoXC1*(-1/2)>-3,skoXC1>0,(7/8)>skoXC1,skoXC1*(-1+skoXC1*skoXC1*(1/3))<=0,skoXC1*skoXC1*(-1/6)<=1,skoXC1*skoXC1*((-1/2)+skoXC1*skoXC1*(-1/6))<=0,skoXC1*skoXC1<=2,skoXC1*skoXC1*skoXC1*skoXC1*(-2/3)<=0,skoXC1*(-1+skoXC1*skoXC1*(-1/6))<=0,skoXC1*skoXC1*(1/3)<=1,skoXC1*skoXC1*(256+skoXC1*skoXC1*(-160+skoXC1*skoXC1*(32+skoXC1*skoXC1*-1)))<=128,skoXC1*skoXC1*skoXC1*skoXC1*((-80/3)+skoXC1*skoXC1*((128/3)+skoXC1*skoXC1*((-55/3)+skoXC1*skoXC1*(5/3))))<=0]], Reals]]

% In QepcadB format:
(E skoXC1) [[(skoXC1 skoXC1 (-1/6+(skoXC1 skoXC1 (-3/40))))<=1]/\[[(skoXC1 skoXC1 (1/3+(skoXC1 skoXC1 (3/20))))<=1]/\[[(skoXC1 skoXC1 skoXC1 skoXC1 (-17/120+(skoXC1 skoXC1 (3/80))))<=0]/\[[(skoXC1 skoXC1 skoXC1 skoXC1 (-13/60+(skoXC1 skoXC1 (-3/10))))<=0]/\[[(skoXC1 skoXC1 (-1/2+(skoXC1 skoXC1 (7/120+(skoXC1 skoXC1 (-3/40))))))<=0]/\[[(skoXC1 skoXC1 (-1/6+(skoXC1 skoXC1 (-3/40))))<=1]/\[[(skoXC1 (-1+(skoXC1 skoXC1 (1/3+(skoXC1 skoXC1 (3/20))))))<=0]/\[[0<(skoXC1 skoXC1)]/\[[(skoXC1 skoXC1 (80+(skoXC1 skoXC1 (-40+(skoXC1 skoXC1 (6+(skoXC1 skoXC1 (-1/8))))))))<=48]/\[[-48<(skoXC1 skoXC1 (-80+(skoXC1 skoXC1 (40+(skoXC1 skoXC1 (-6+(skoXC1 skoXC1 (1/8))))))))]/\[[(skoXC1 skoXC1 (24+(skoXC1 skoXC1 (-10+(skoXC1 skoXC1)))))<=16]/\[[(skoXC1 skoXC1 (1/2))<=3]/\[[-3<(skoXC1 skoXC1 (-1/2))]/\[[0<skoXC1]/\[[skoXC1<7/8]/\[[(skoXC1 (-1+(skoXC1 skoXC1 (1/3))))<=0]/\[[(skoXC1 skoXC1 (-1/6))<=1]/\[[(skoXC1 skoXC1 (-1/2+(skoXC1 skoXC1 (-1/6))))<=0]/\[[(skoXC1 skoXC1)<=2]/\[[(skoXC1 skoXC1 skoXC1 skoXC1 (-2/3))<=0]/\[[(skoXC1 (-1+(skoXC1 skoXC1 (-1/6))))<=0]/\[[(skoXC1 skoXC1 (1/3))<=1]/\[[(skoXC1 skoXC1 (256+(skoXC1 skoXC1 (-160+(skoXC1 skoXC1 (32+(skoXC1 skoXC1 (-1))))))))<=128]/\[(skoXC1 skoXC1 skoXC1 skoXC1 (-80/3+(skoXC1 skoXC1 (128/3+(skoXC1 skoXC1 (-55/3+(skoXC1 skoXC1 (5/3))))))))<=0]]]]]]]]]]]]]]]]]]]]]]]].

% In SMTLib2 format:
(declare-fun skoXC1 () Real) (assert (and (<= (* skoXC1 (* skoXC1 (+ (/ (- 1.) 6.) (* skoXC1 (* skoXC1 (/ (- 3.) 40.)))))) 1.) (and (<= (* skoXC1 (* skoXC1 (+ (/ 1. 3.) (* skoXC1 (* skoXC1 (/ 3. 20.)))))) 1.) (and (<= (* skoXC1 (* skoXC1 (* skoXC1 (* skoXC1 (+ (/ (- 17.) 120.) (* skoXC1 (* skoXC1 (/ 3. 80.)))))))) 0.) (and (<= (* skoXC1 (* skoXC1 (* skoXC1 (* skoXC1 (+ (/ (- 13.) 60.) (* skoXC1 (* skoXC1 (/ (- 3.) 10.)))))))) 0.) (and (<= (* skoXC1 (* skoXC1 (+ (/ (- 1.) 2.) (* skoXC1 (* skoXC1 (+ (/ 7. 120.) (* skoXC1 (* skoXC1 (/ (- 3.) 40.))))))))) 0.) (and (<= (* skoXC1 (* skoXC1 (+ (/ (- 1.) 6.) (* skoXC1 (* skoXC1 (/ (- 3.) 40.)))))) 1.) (and (<= (* skoXC1 (+ (- 1.) (* skoXC1 (* skoXC1 (+ (/ 1. 3.) (* skoXC1 (* skoXC1 (/ 3. 20.)))))))) 0.) (and (> (* skoXC1 skoXC1) 0.) (and (<= (* skoXC1 (* skoXC1 (+ 80. (* skoXC1 (* skoXC1 (+ (- 40.) (* skoXC1 (* skoXC1 (+ 6. (* skoXC1 (* skoXC1 (/ (- 1.) 8.)))))))))))) 48.) (and (> (* skoXC1 (* skoXC1 (+ (- 80.) (* skoXC1 (* skoXC1 (+ 40. (* skoXC1 (* skoXC1 (+ (- 6.) (* skoXC1 (* skoXC1 (/ 1. 8.)))))))))))) (- 48.)) (and (<= (* skoXC1 (* skoXC1 (+ 24. (* skoXC1 (* skoXC1 (+ (- 10.) (* skoXC1 skoXC1))))))) 16.) (and (<= (* skoXC1 (* skoXC1 (/ 1. 2.))) 3.) (and (> (* skoXC1 (* skoXC1 (/ (- 1.) 2.))) (- 3.)) (and (> skoXC1 0.) (and (> (/ 7. 8.) skoXC1) (and (<= (* skoXC1 (+ (- 1.) (* skoXC1 (* skoXC1 (/ 1. 3.))))) 0.) (and (<= (* skoXC1 (* skoXC1 (/ (- 1.) 6.))) 1.) (and (<= (* skoXC1 (* skoXC1 (+ (/ (- 1.) 2.) (* skoXC1 (* skoXC1 (/ (- 1.) 6.)))))) 0.) (and (<= (* skoXC1 skoXC1) 2.) (and (<= (* skoXC1 (* skoXC1 (* skoXC1 (* skoXC1 (/ (- 2.) 3.))))) 0.) (and (<= (* skoXC1 (+ (- 1.) (* skoXC1 (* skoXC1 (/ (- 1.) 6.))))) 0.) (and (<= (* skoXC1 (* skoXC1 (/ 1. 3.))) 1.) (and (<= (* skoXC1 (* skoXC1 (+ 256. (* skoXC1 (* skoXC1 (+ (- 160.) (* skoXC1 (* skoXC1 (+ 32. (* skoXC1 (* skoXC1 (- 1.)))))))))))) 128.) (<= (* skoXC1 (* skoXC1 (* skoXC1 (* skoXC1 (+ (/ (- 80.) 3.) (* skoXC1 (* skoXC1 (+ (/ 128. 3.) (* skoXC1 (* skoXC1 (+ (/ (- 55.) 3.) (* skoXC1 (* skoXC1 (/ 5. 3.)))))))))))))) 0.)))))))))))))))))))))))))

% In GRF format:
(sequent " MetiTarski formula " (antecedent (<= (* skoXC1 (* skoXC1 (+ (/ (- 1.) 6.) (* skoXC1 (* skoXC1 (/ (- 3.) 40.)))))) 1.) (<= (* skoXC1 (* skoXC1 (+ (/ 1. 3.) (* skoXC1 (* skoXC1 (/ 3. 20.)))))) 1.) (<= (* skoXC1 (* skoXC1 (* skoXC1 (* skoXC1 (+ (/ (- 17.) 120.) (* skoXC1 (* skoXC1 (/ 3. 80.)))))))) 0.) (<= (* skoXC1 (* skoXC1 (* skoXC1 (* skoXC1 (+ (/ (- 13.) 60.) (* skoXC1 (* skoXC1 (/ (- 3.) 10.)))))))) 0.) (<= (* skoXC1 (* skoXC1 (+ (/ (- 1.) 2.) (* skoXC1 (* skoXC1 (+ (/ 7. 120.) (* skoXC1 (* skoXC1 (/ (- 3.) 40.))))))))) 0.) (<= (* skoXC1 (* skoXC1 (+ (/ (- 1.) 6.) (* skoXC1 (* skoXC1 (/ (- 3.) 40.)))))) 1.) (<= (* skoXC1 (+ (- 1.) (* skoXC1 (* skoXC1 (+ (/ 1. 3.) (* skoXC1 (* skoXC1 (/ 3. 20.)))))))) 0.) (> (* skoXC1 skoXC1) 0.) (<= (* skoXC1 (* skoXC1 (+ 80. (* skoXC1 (* skoXC1 (+ (- 40.) (* skoXC1 (* skoXC1 (+ 6. (* skoXC1 (* skoXC1 (/ (- 1.) 8.)))))))))))) 48.) (> (* skoXC1 (* skoXC1 (+ (- 80.) (* skoXC1 (* skoXC1 (+ 40. (* skoXC1 (* skoXC1 (+ (- 6.) (* skoXC1 (* skoXC1 (/ 1. 8.)))))))))))) (- 48.)) (<= (* skoXC1 (* skoXC1 (+ 24. (* skoXC1 (* skoXC1 (+ (- 10.) (* skoXC1 skoXC1))))))) 16.) (<= (* skoXC1 (* skoXC1 (/ 1. 2.))) 3.) (> (* skoXC1 (* skoXC1 (/ (- 1.) 2.))) (- 3.)) (> skoXC1 0.) (> (/ 7. 8.) skoXC1) (<= (* skoXC1 (+ (- 1.) (* skoXC1 (* skoXC1 (/ 1. 3.))))) 0.) (<= (* skoXC1 (* skoXC1 (/ (- 1.) 6.))) 1.) (<= (* skoXC1 (* skoXC1 (+ (/ (- 1.) 2.) (* skoXC1 (* skoXC1 (/ (- 1.) 6.)))))) 0.) (<= (* skoXC1 skoXC1) 2.) (<= (* skoXC1 (* skoXC1 (* skoXC1 (* skoXC1 (/ (- 2.) 3.))))) 0.) (<= (* skoXC1 (+ (- 1.) (* skoXC1 (* skoXC1 (/ (- 1.) 6.))))) 0.) (<= (* skoXC1 (* skoXC1 (/ 1. 3.))) 1.) (<= (* skoXC1 (* skoXC1 (+ 256. (* skoXC1 (* skoXC1 (+ (- 160.) (* skoXC1 (* skoXC1 (+ 32. (* skoXC1 (* skoXC1 (- 1.)))))))))))) 128.)) (succedent (> (* skoXC1 (* skoXC1 (* skoXC1 (* skoXC1 (+ (/ (- 80.) 3.) (* skoXC1 (* skoXC1 (+ (/ 128. 3.) (* skoXC1 (* skoXC1 (+ (/ (- 55.) 3.) (* skoXC1 (* skoXC1 (/ 5. 3.)))))))))))))) 0.)))
-----[end problem]-----

-----[begin problem]-----
% In Mathematica format:
Timing[Resolve[Exists[{skoXC1}, And[skoXC1*skoXC1*(256+skoXC1*skoXC1*(-160+skoXC1*skoXC1*(32+skoXC1*skoXC1*-1)))<=128,skoXC1*skoXC1*((1/3)+skoXC1*skoXC1*(3/20))<=1,skoXC1*skoXC1*skoXC1*skoXC1*((-17/120)+skoXC1*skoXC1*(3/80))<=0,skoXC1*skoXC1*skoXC1*skoXC1*((-13/60)+skoXC1*skoXC1*(-3/10))<=0,skoXC1*skoXC1*((-1/2)+skoXC1*skoXC1*((7/120)+skoXC1*skoXC1*(-3/40)))<=0,skoXC1*skoXC1*((-1/6)+skoXC1*skoXC1*(-3/40))<=1,skoXC1*(-1+skoXC1*skoXC1*((1/3)+skoXC1*skoXC1*(3/20)))<=0,skoXC1*skoXC1>0,skoXC1*skoXC1*(80+skoXC1*skoXC1*(-40+skoXC1*skoXC1*(6+skoXC1*skoXC1*(-1/8))))<=48,skoXC1*skoXC1*(-80+skoXC1*skoXC1*(40+skoXC1*skoXC1*(-6+skoXC1*skoXC1*(1/8))))>-48,skoXC1*skoXC1*(24+skoXC1*skoXC1*(-10+skoXC1*skoXC1))<=16,skoXC1*skoXC1*(1/2)<=3,skoXC1*skoXC1*(-1/2)>-3,skoXC1>0,(7/8)>skoXC1,skoXC1*(-1+skoXC1*skoXC1*(1/3))<=0,skoXC1*skoXC1*(-1/6)<=1,skoXC1*skoXC1*((-1/2)+skoXC1*skoXC1*(-1/6))<=0,skoXC1*skoXC1<=2,skoXC1*skoXC1*skoXC1*skoXC1*(-2/3)<=0,skoXC1*(-1+skoXC1*skoXC1*(-1/6))<=0,skoXC1*skoXC1*(1/3)<=1,skoXC1*skoXC1*(256+skoXC1*skoXC1*(-160+skoXC1*skoXC1*(32+skoXC1*skoXC1*-1)))<=128,skoXC1*skoXC1*skoXC1*skoXC1*((-80/3)+skoXC1*skoXC1*((128/3)+skoXC1*skoXC1*((-55/3)+skoXC1*skoXC1*(5/3))))<=0]], Reals]]

% In QepcadB format:
(E skoXC1) [[(skoXC1 skoXC1 (256+(skoXC1 skoXC1 (-160+(skoXC1 skoXC1 (32+(skoXC1 skoXC1 (-1))))))))<=128]/\[[(skoXC1 skoXC1 (1/3+(skoXC1 skoXC1 (3/20))))<=1]/\[[(skoXC1 skoXC1 skoXC1 skoXC1 (-17/120+(skoXC1 skoXC1 (3/80))))<=0]/\[[(skoXC1 skoXC1 skoXC1 skoXC1 (-13/60+(skoXC1 skoXC1 (-3/10))))<=0]/\[[(skoXC1 skoXC1 (-1/2+(skoXC1 skoXC1 (7/120+(skoXC1 skoXC1 (-3/40))))))<=0]/\[[(skoXC1 skoXC1 (-1/6+(skoXC1 skoXC1 (-3/40))))<=1]/\[[(skoXC1 (-1+(skoXC1 skoXC1 (1/3+(skoXC1 skoXC1 (3/20))))))<=0]/\[[0<(skoXC1 skoXC1)]/\[[(skoXC1 skoXC1 (80+(skoXC1 skoXC1 (-40+(skoXC1 skoXC1 (6+(skoXC1 skoXC1 (-1/8))))))))<=48]/\[[-48<(skoXC1 skoXC1 (-80+(skoXC1 skoXC1 (40+(skoXC1 skoXC1 (-6+(skoXC1 skoXC1 (1/8))))))))]/\[[(skoXC1 skoXC1 (24+(skoXC1 skoXC1 (-10+(skoXC1 skoXC1)))))<=16]/\[[(skoXC1 skoXC1 (1/2))<=3]/\[[-3<(skoXC1 skoXC1 (-1/2))]/\[[0<skoXC1]/\[[skoXC1<7/8]/\[[(skoXC1 (-1+(skoXC1 skoXC1 (1/3))))<=0]/\[[(skoXC1 skoXC1 (-1/6))<=1]/\[[(skoXC1 skoXC1 (-1/2+(skoXC1 skoXC1 (-1/6))))<=0]/\[[(skoXC1 skoXC1)<=2]/\[[(skoXC1 skoXC1 skoXC1 skoXC1 (-2/3))<=0]/\[[(skoXC1 (-1+(skoXC1 skoXC1 (-1/6))))<=0]/\[[(skoXC1 skoXC1 (1/3))<=1]/\[[(skoXC1 skoXC1 (256+(skoXC1 skoXC1 (-160+(skoXC1 skoXC1 (32+(skoXC1 skoXC1 (-1))))))))<=128]/\[(skoXC1 skoXC1 skoXC1 skoXC1 (-80/3+(skoXC1 skoXC1 (128/3+(skoXC1 skoXC1 (-55/3+(skoXC1 skoXC1 (5/3))))))))<=0]]]]]]]]]]]]]]]]]]]]]]]].

% In SMTLib2 format:
(declare-fun skoXC1 () Real) (assert (and (<= (* skoXC1 (* skoXC1 (+ 256. (* skoXC1 (* skoXC1 (+ (- 160.) (* skoXC1 (* skoXC1 (+ 32. (* skoXC1 (* skoXC1 (- 1.)))))))))))) 128.) (and (<= (* skoXC1 (* skoXC1 (+ (/ 1. 3.) (* skoXC1 (* skoXC1 (/ 3. 20.)))))) 1.) (and (<= (* skoXC1 (* skoXC1 (* skoXC1 (* skoXC1 (+ (/ (- 17.) 120.) (* skoXC1 (* skoXC1 (/ 3. 80.)))))))) 0.) (and (<= (* skoXC1 (* skoXC1 (* skoXC1 (* skoXC1 (+ (/ (- 13.) 60.) (* skoXC1 (* skoXC1 (/ (- 3.) 10.)))))))) 0.) (and (<= (* skoXC1 (* skoXC1 (+ (/ (- 1.) 2.) (* skoXC1 (* skoXC1 (+ (/ 7. 120.) (* skoXC1 (* skoXC1 (/ (- 3.) 40.))))))))) 0.) (and (<= (* skoXC1 (* skoXC1 (+ (/ (- 1.) 6.) (* skoXC1 (* skoXC1 (/ (- 3.) 40.)))))) 1.) (and (<= (* skoXC1 (+ (- 1.) (* skoXC1 (* skoXC1 (+ (/ 1. 3.) (* skoXC1 (* skoXC1 (/ 3. 20.)))))))) 0.) (and (> (* skoXC1 skoXC1) 0.) (and (<= (* skoXC1 (* skoXC1 (+ 80. (* skoXC1 (* skoXC1 (+ (- 40.) (* skoXC1 (* skoXC1 (+ 6. (* skoXC1 (* skoXC1 (/ (- 1.) 8.)))))))))))) 48.) (and (> (* skoXC1 (* skoXC1 (+ (- 80.) (* skoXC1 (* skoXC1 (+ 40. (* skoXC1 (* skoXC1 (+ (- 6.) (* skoXC1 (* skoXC1 (/ 1. 8.)))))))))))) (- 48.)) (and (<= (* skoXC1 (* skoXC1 (+ 24. (* skoXC1 (* skoXC1 (+ (- 10.) (* skoXC1 skoXC1))))))) 16.) (and (<= (* skoXC1 (* skoXC1 (/ 1. 2.))) 3.) (and (> (* skoXC1 (* skoXC1 (/ (- 1.) 2.))) (- 3.)) (and (> skoXC1 0.) (and (> (/ 7. 8.) skoXC1) (and (<= (* skoXC1 (+ (- 1.) (* skoXC1 (* skoXC1 (/ 1. 3.))))) 0.) (and (<= (* skoXC1 (* skoXC1 (/ (- 1.) 6.))) 1.) (and (<= (* skoXC1 (* skoXC1 (+ (/ (- 1.) 2.) (* skoXC1 (* skoXC1 (/ (- 1.) 6.)))))) 0.) (and (<= (* skoXC1 skoXC1) 2.) (and (<= (* skoXC1 (* skoXC1 (* skoXC1 (* skoXC1 (/ (- 2.) 3.))))) 0.) (and (<= (* skoXC1 (+ (- 1.) (* skoXC1 (* skoXC1 (/ (- 1.) 6.))))) 0.) (and (<= (* skoXC1 (* skoXC1 (/ 1. 3.))) 1.) (and (<= (* skoXC1 (* skoXC1 (+ 256. (* skoXC1 (* skoXC1 (+ (- 160.) (* skoXC1 (* skoXC1 (+ 32. (* skoXC1 (* skoXC1 (- 1.)))))))))))) 128.) (<= (* skoXC1 (* skoXC1 (* skoXC1 (* skoXC1 (+ (/ (- 80.) 3.) (* skoXC1 (* skoXC1 (+ (/ 128. 3.) (* skoXC1 (* skoXC1 (+ (/ (- 55.) 3.) (* skoXC1 (* skoXC1 (/ 5. 3.)))))))))))))) 0.)))))))))))))))))))))))))

% In GRF format:
(sequent " MetiTarski formula " (antecedent (<= (* skoXC1 (* skoXC1 (+ 256. (* skoXC1 (* skoXC1 (+ (- 160.) (* skoXC1 (* skoXC1 (+ 32. (* skoXC1 (* skoXC1 (- 1.)))))))))))) 128.) (<= (* skoXC1 (* skoXC1 (+ (/ 1. 3.) (* skoXC1 (* skoXC1 (/ 3. 20.)))))) 1.) (<= (* skoXC1 (* skoXC1 (* skoXC1 (* skoXC1 (+ (/ (- 17.) 120.) (* skoXC1 (* skoXC1 (/ 3. 80.)))))))) 0.) (<= (* skoXC1 (* skoXC1 (* skoXC1 (* skoXC1 (+ (/ (- 13.) 60.) (* skoXC1 (* skoXC1 (/ (- 3.) 10.)))))))) 0.) (<= (* skoXC1 (* skoXC1 (+ (/ (- 1.) 2.) (* skoXC1 (* skoXC1 (+ (/ 7. 120.) (* skoXC1 (* skoXC1 (/ (- 3.) 40.))))))))) 0.) (<= (* skoXC1 (* skoXC1 (+ (/ (- 1.) 6.) (* skoXC1 (* skoXC1 (/ (- 3.) 40.)))))) 1.) (<= (* skoXC1 (+ (- 1.) (* skoXC1 (* skoXC1 (+ (/ 1. 3.) (* skoXC1 (* skoXC1 (/ 3. 20.)))))))) 0.) (> (* skoXC1 skoXC1) 0.) (<= (* skoXC1 (* skoXC1 (+ 80. (* skoXC1 (* skoXC1 (+ (- 40.) (* skoXC1 (* skoXC1 (+ 6. (* skoXC1 (* skoXC1 (/ (- 1.) 8.)))))))))))) 48.) (> (* skoXC1 (* skoXC1 (+ (- 80.) (* skoXC1 (* skoXC1 (+ 40. (* skoXC1 (* skoXC1 (+ (- 6.) (* skoXC1 (* skoXC1 (/ 1. 8.)))))))))))) (- 48.)) (<= (* skoXC1 (* skoXC1 (+ 24. (* skoXC1 (* skoXC1 (+ (- 10.) (* skoXC1 skoXC1))))))) 16.) (<= (* skoXC1 (* skoXC1 (/ 1. 2.))) 3.) (> (* skoXC1 (* skoXC1 (/ (- 1.) 2.))) (- 3.)) (> skoXC1 0.) (> (/ 7. 8.) skoXC1) (<= (* skoXC1 (+ (- 1.) (* skoXC1 (* skoXC1 (/ 1. 3.))))) 0.) (<= (* skoXC1 (* skoXC1 (/ (- 1.) 6.))) 1.) (<= (* skoXC1 (* skoXC1 (+ (/ (- 1.) 2.) (* skoXC1 (* skoXC1 (/ (- 1.) 6.)))))) 0.) (<= (* skoXC1 skoXC1) 2.) (<= (* skoXC1 (* skoXC1 (* skoXC1 (* skoXC1 (/ (- 2.) 3.))))) 0.) (<= (* skoXC1 (+ (- 1.) (* skoXC1 (* skoXC1 (/ (- 1.) 6.))))) 0.) (<= (* skoXC1 (* skoXC1 (/ 1. 3.))) 1.) (<= (* skoXC1 (* skoXC1 (+ 256. (* skoXC1 (* skoXC1 (+ (- 160.) (* skoXC1 (* skoXC1 (+ 32. (* skoXC1 (* skoXC1 (- 1.)))))))))))) 128.)) (succedent (> (* skoXC1 (* skoXC1 (* skoXC1 (* skoXC1 (+ (/ (- 80.) 3.) (* skoXC1 (* skoXC1 (+ (/ 128. 3.) (* skoXC1 (* skoXC1 (+ (/ (- 55.) 3.) (* skoXC1 (* skoXC1 (/ 5. 3.)))))))))))))) 0.)))
-----[end problem]-----

-----[begin problem]-----
% In Mathematica format:
Timing[Resolve[Exists[{skoXC1}, And[skoXC1*skoXC1*skoXC1*skoXC1*((32/15)+skoXC1*skoXC1*((-296/15)+skoXC1*skoXC1*((391/15)+skoXC1*skoXC1*((-146/15)+skoXC1*skoXC1*(3/4)))))<=0,skoXC1*skoXC1*(-256+skoXC1*skoXC1*(160+skoXC1*skoXC1*(-32+skoXC1*skoXC1)))>-128,skoXC1*skoXC1*((1/3)+skoXC1*skoXC1*(3/20))<=1,skoXC1*skoXC1*skoXC1*skoXC1*((-17/120)+skoXC1*skoXC1*(3/80))<=0,skoXC1*skoXC1*skoXC1*skoXC1*((-13/60)+skoXC1*skoXC1*(-3/10))<=0,skoXC1*skoXC1*((-1/2)+skoXC1*skoXC1*((7/120)+skoXC1*skoXC1*(-3/40)))<=0,skoXC1*skoXC1*((-1/6)+skoXC1*skoXC1*(-3/40))<=1,skoXC1*(-1+skoXC1*skoXC1*((1/3)+skoXC1*skoXC1*(3/20)))<=0,skoXC1*skoXC1>0,skoXC1*skoXC1*(80+skoXC1*skoXC1*(-40+skoXC1*skoXC1*(6+skoXC1*skoXC1*(-1/8))))<=48,skoXC1*skoXC1*(-80+skoXC1*skoXC1*(40+skoXC1*skoXC1*(-6+skoXC1*skoXC1*(1/8))))>-48,skoXC1*skoXC1*(24+skoXC1*skoXC1*(-10+skoXC1*skoXC1))<=16,skoXC1*skoXC1*(1/2)<=3,skoXC1*skoXC1*(-1/2)>-3,skoXC1>0,(7/8)>skoXC1,skoXC1*(-1+skoXC1*skoXC1*(1/3))<=0,skoXC1*skoXC1*(-1/6)<=1,skoXC1*skoXC1*((-1/2)+skoXC1*skoXC1*(-1/6))<=0,skoXC1*skoXC1<=2,skoXC1*skoXC1*skoXC1*skoXC1*(-2/3)<=0,skoXC1*(-1+skoXC1*skoXC1*(-1/6))<=0,skoXC1*skoXC1*(1/3)<=1,skoXC1*skoXC1*(256+skoXC1*skoXC1*(-160+skoXC1*skoXC1*(32+skoXC1*skoXC1*-1)))<=128,skoXC1*skoXC1*skoXC1*skoXC1*((-80/3)+skoXC1*skoXC1*((128/3)+skoXC1*skoXC1*((-55/3)+skoXC1*skoXC1*(5/3))))<=0]], Reals]]

% In QepcadB format:
(E skoXC1) [[(skoXC1 skoXC1 skoXC1 skoXC1 (32/15+(skoXC1 skoXC1 (-296/15+(skoXC1 skoXC1 (391/15+(skoXC1 skoXC1 (-146/15+(skoXC1 skoXC1 (3/4))))))))))<=0]/\[[-128<(skoXC1 skoXC1 (-256+(skoXC1 skoXC1 (160+(skoXC1 skoXC1 (-32+(skoXC1 skoXC1)))))))]/\[[(skoXC1 skoXC1 (1/3+(skoXC1 skoXC1 (3/20))))<=1]/\[[(skoXC1 skoXC1 skoXC1 skoXC1 (-17/120+(skoXC1 skoXC1 (3/80))))<=0]/\[[(skoXC1 skoXC1 skoXC1 skoXC1 (-13/60+(skoXC1 skoXC1 (-3/10))))<=0]/\[[(skoXC1 skoXC1 (-1/2+(skoXC1 skoXC1 (7/120+(skoXC1 skoXC1 (-3/40))))))<=0]/\[[(skoXC1 skoXC1 (-1/6+(skoXC1 skoXC1 (-3/40))))<=1]/\[[(skoXC1 (-1+(skoXC1 skoXC1 (1/3+(skoXC1 skoXC1 (3/20))))))<=0]/\[[0<(skoXC1 skoXC1)]/\[[(skoXC1 skoXC1 (80+(skoXC1 skoXC1 (-40+(skoXC1 skoXC1 (6+(skoXC1 skoXC1 (-1/8))))))))<=48]/\[[-48<(skoXC1 skoXC1 (-80+(skoXC1 skoXC1 (40+(skoXC1 skoXC1 (-6+(skoXC1 skoXC1 (1/8))))))))]/\[[(skoXC1 skoXC1 (24+(skoXC1 skoXC1 (-10+(skoXC1 skoXC1)))))<=16]/\[[(skoXC1 skoXC1 (1/2))<=3]/\[[-3<(skoXC1 skoXC1 (-1/2))]/\[[0<skoXC1]/\[[skoXC1<7/8]/\[[(skoXC1 (-1+(skoXC1 skoXC1 (1/3))))<=0]/\[[(skoXC1 skoXC1 (-1/6))<=1]/\[[(skoXC1 skoXC1 (-1/2+(skoXC1 skoXC1 (-1/6))))<=0]/\[[(skoXC1 skoXC1)<=2]/\[[(skoXC1 skoXC1 skoXC1 skoXC1 (-2/3))<=0]/\[[(skoXC1 (-1+(skoXC1 skoXC1 (-1/6))))<=0]/\[[(skoXC1 skoXC1 (1/3))<=1]/\[[(skoXC1 skoXC1 (256+(skoXC1 skoXC1 (-160+(skoXC1 skoXC1 (32+(skoXC1 skoXC1 (-1))))))))<=128]/\[(skoXC1 skoXC1 skoXC1 skoXC1 (-80/3+(skoXC1 skoXC1 (128/3+(skoXC1 skoXC1 (-55/3+(skoXC1 skoXC1 (5/3))))))))<=0]]]]]]]]]]]]]]]]]]]]]]]]].

% In SMTLib2 format:
(declare-fun skoXC1 () Real) (assert (and (<= (* skoXC1 (* skoXC1 (* skoXC1 (* skoXC1 (+ (/ 32. 15.) (* skoXC1 (* skoXC1 (+ (/ (- 296.) 15.) (* skoXC1 (* skoXC1 (+ (/ 391. 15.) (* skoXC1 (* skoXC1 (+ (/ (- 146.) 15.) (* skoXC1 (* skoXC1 (/ 3. 4.))))))))))))))))) 0.) (and (> (* skoXC1 (* skoXC1 (+ (- 256.) (* skoXC1 (* skoXC1 (+ 160. (* skoXC1 (* skoXC1 (+ (- 32.) (* skoXC1 skoXC1)))))))))) (- 128.)) (and (<= (* skoXC1 (* skoXC1 (+ (/ 1. 3.) (* skoXC1 (* skoXC1 (/ 3. 20.)))))) 1.) (and (<= (* skoXC1 (* skoXC1 (* skoXC1 (* skoXC1 (+ (/ (- 17.) 120.) (* skoXC1 (* skoXC1 (/ 3. 80.)))))))) 0.) (and (<= (* skoXC1 (* skoXC1 (* skoXC1 (* skoXC1 (+ (/ (- 13.) 60.) (* skoXC1 (* skoXC1 (/ (- 3.) 10.)))))))) 0.) (and (<= (* skoXC1 (* skoXC1 (+ (/ (- 1.) 2.) (* skoXC1 (* skoXC1 (+ (/ 7. 120.) (* skoXC1 (* skoXC1 (/ (- 3.) 40.))))))))) 0.) (and (<= (* skoXC1 (* skoXC1 (+ (/ (- 1.) 6.) (* skoXC1 (* skoXC1 (/ (- 3.) 40.)))))) 1.) (and (<= (* skoXC1 (+ (- 1.) (* skoXC1 (* skoXC1 (+ (/ 1. 3.) (* skoXC1 (* skoXC1 (/ 3. 20.)))))))) 0.) (and (> (* skoXC1 skoXC1) 0.) (and (<= (* skoXC1 (* skoXC1 (+ 80. (* skoXC1 (* skoXC1 (+ (- 40.) (* skoXC1 (* skoXC1 (+ 6. (* skoXC1 (* skoXC1 (/ (- 1.) 8.)))))))))))) 48.) (and (> (* skoXC1 (* skoXC1 (+ (- 80.) (* skoXC1 (* skoXC1 (+ 40. (* skoXC1 (* skoXC1 (+ (- 6.) (* skoXC1 (* skoXC1 (/ 1. 8.)))))))))))) (- 48.)) (and (<= (* skoXC1 (* skoXC1 (+ 24. (* skoXC1 (* skoXC1 (+ (- 10.) (* skoXC1 skoXC1))))))) 16.) (and (<= (* skoXC1 (* skoXC1 (/ 1. 2.))) 3.) (and (> (* skoXC1 (* skoXC1 (/ (- 1.) 2.))) (- 3.)) (and (> skoXC1 0.) (and (> (/ 7. 8.) skoXC1) (and (<= (* skoXC1 (+ (- 1.) (* skoXC1 (* skoXC1 (/ 1. 3.))))) 0.) (and (<= (* skoXC1 (* skoXC1 (/ (- 1.) 6.))) 1.) (and (<= (* skoXC1 (* skoXC1 (+ (/ (- 1.) 2.) (* skoXC1 (* skoXC1 (/ (- 1.) 6.)))))) 0.) (and (<= (* skoXC1 skoXC1) 2.) (and (<= (* skoXC1 (* skoXC1 (* skoXC1 (* skoXC1 (/ (- 2.) 3.))))) 0.) (and (<= (* skoXC1 (+ (- 1.) (* skoXC1 (* skoXC1 (/ (- 1.) 6.))))) 0.) (and (<= (* skoXC1 (* skoXC1 (/ 1. 3.))) 1.) (and (<= (* skoXC1 (* skoXC1 (+ 256. (* skoXC1 (* skoXC1 (+ (- 160.) (* skoXC1 (* skoXC1 (+ 32. (* skoXC1 (* skoXC1 (- 1.)))))))))))) 128.) (<= (* skoXC1 (* skoXC1 (* skoXC1 (* skoXC1 (+ (/ (- 80.) 3.) (* skoXC1 (* skoXC1 (+ (/ 128. 3.) (* skoXC1 (* skoXC1 (+ (/ (- 55.) 3.) (* skoXC1 (* skoXC1 (/ 5. 3.)))))))))))))) 0.))))))))))))))))))))))))))

% In GRF format:
(sequent " MetiTarski formula " (antecedent (<= (* skoXC1 (* skoXC1 (* skoXC1 (* skoXC1 (+ (/ 32. 15.) (* skoXC1 (* skoXC1 (+ (/ (- 296.) 15.) (* skoXC1 (* skoXC1 (+ (/ 391. 15.) (* skoXC1 (* skoXC1 (+ (/ (- 146.) 15.) (* skoXC1 (* skoXC1 (/ 3. 4.))))))))))))))))) 0.) (> (* skoXC1 (* skoXC1 (+ (- 256.) (* skoXC1 (* skoXC1 (+ 160. (* skoXC1 (* skoXC1 (+ (- 32.) (* skoXC1 skoXC1)))))))))) (- 128.)) (<= (* skoXC1 (* skoXC1 (+ (/ 1. 3.) (* skoXC1 (* skoXC1 (/ 3. 20.)))))) 1.) (<= (* skoXC1 (* skoXC1 (* skoXC1 (* skoXC1 (+ (/ (- 17.) 120.) (* skoXC1 (* skoXC1 (/ 3. 80.)))))))) 0.) (<= (* skoXC1 (* skoXC1 (* skoXC1 (* skoXC1 (+ (/ (- 13.) 60.) (* skoXC1 (* skoXC1 (/ (- 3.) 10.)))))))) 0.) (<= (* skoXC1 (* skoXC1 (+ (/ (- 1.) 2.) (* skoXC1 (* skoXC1 (+ (/ 7. 120.) (* skoXC1 (* skoXC1 (/ (- 3.) 40.))))))))) 0.) (<= (* skoXC1 (* skoXC1 (+ (/ (- 1.) 6.) (* skoXC1 (* skoXC1 (/ (- 3.) 40.)))))) 1.) (<= (* skoXC1 (+ (- 1.) (* skoXC1 (* skoXC1 (+ (/ 1. 3.) (* skoXC1 (* skoXC1 (/ 3. 20.)))))))) 0.) (> (* skoXC1 skoXC1) 0.) (<= (* skoXC1 (* skoXC1 (+ 80. (* skoXC1 (* skoXC1 (+ (- 40.) (* skoXC1 (* skoXC1 (+ 6. (* skoXC1 (* skoXC1 (/ (- 1.) 8.)))))))))))) 48.) (> (* skoXC1 (* skoXC1 (+ (- 80.) (* skoXC1 (* skoXC1 (+ 40. (* skoXC1 (* skoXC1 (+ (- 6.) (* skoXC1 (* skoXC1 (/ 1. 8.)))))))))))) (- 48.)) (<= (* skoXC1 (* skoXC1 (+ 24. (* skoXC1 (* skoXC1 (+ (- 10.) (* skoXC1 skoXC1))))))) 16.) (<= (* skoXC1 (* skoXC1 (/ 1. 2.))) 3.) (> (* skoXC1 (* skoXC1 (/ (- 1.) 2.))) (- 3.)) (> skoXC1 0.) (> (/ 7. 8.) skoXC1) (<= (* skoXC1 (+ (- 1.) (* skoXC1 (* skoXC1 (/ 1. 3.))))) 0.) (<= (* skoXC1 (* skoXC1 (/ (- 1.) 6.))) 1.) (<= (* skoXC1 (* skoXC1 (+ (/ (- 1.) 2.) (* skoXC1 (* skoXC1 (/ (- 1.) 6.)))))) 0.) (<= (* skoXC1 skoXC1) 2.) (<= (* skoXC1 (* skoXC1 (* skoXC1 (* skoXC1 (/ (- 2.) 3.))))) 0.) (<= (* skoXC1 (+ (- 1.) (* skoXC1 (* skoXC1 (/ (- 1.) 6.))))) 0.) (<= (* skoXC1 (* skoXC1 (/ 1. 3.))) 1.) (<= (* skoXC1 (* skoXC1 (+ 256. (* skoXC1 (* skoXC1 (+ (- 160.) (* skoXC1 (* skoXC1 (+ 32. (* skoXC1 (* skoXC1 (- 1.)))))))))))) 128.)) (succedent (> (* skoXC1 (* skoXC1 (* skoXC1 (* skoXC1 (+ (/ (- 80.) 3.) (* skoXC1 (* skoXC1 (+ (/ 128. 3.) (* skoXC1 (* skoXC1 (+ (/ (- 55.) 3.) (* skoXC1 (* skoXC1 (/ 5. 3.)))))))))))))) 0.)))
-----[end problem]-----

-----[begin problem]-----
% In Mathematica format:
Timing[Resolve[Exists[{skoXC1}, And[skoXC1*skoXC1*(-256+skoXC1*skoXC1*(160+skoXC1*skoXC1*(-32+skoXC1*skoXC1)))<=-128,skoXC1*skoXC1*skoXC1*skoXC1*((32/15)+skoXC1*skoXC1*((-296/15)+skoXC1*skoXC1*((391/15)+skoXC1*skoXC1*((-146/15)+skoXC1*skoXC1*(3/4)))))>0,skoXC1*skoXC1*((1/3)+skoXC1*skoXC1*(3/20))<=1,skoXC1*skoXC1*skoXC1*skoXC1*((-17/120)+skoXC1*skoXC1*(3/80))<=0,skoXC1*skoXC1*skoXC1*skoXC1*((-13/60)+skoXC1*skoXC1*(-3/10))<=0,skoXC1*skoXC1*((-1/2)+skoXC1*skoXC1*((7/120)+skoXC1*skoXC1*(-3/40)))<=0,skoXC1*skoXC1*((-1/6)+skoXC1*skoXC1*(-3/40))<=1,skoXC1*(-1+skoXC1*skoXC1*((1/3)+skoXC1*skoXC1*(3/20)))<=0,skoXC1*skoXC1>0,skoXC1*skoXC1*(80+skoXC1*skoXC1*(-40+skoXC1*skoXC1*(6+skoXC1*skoXC1*(-1/8))))<=48,skoXC1*skoXC1*(-80+skoXC1*skoXC1*(40+skoXC1*skoXC1*(-6+skoXC1*skoXC1*(1/8))))>-48,skoXC1*skoXC1*(24+skoXC1*skoXC1*(-10+skoXC1*skoXC1))<=16,skoXC1*skoXC1*(1/2)<=3,skoXC1*skoXC1*(-1/2)>-3,skoXC1>0,(7/8)>skoXC1,skoXC1*(-1+skoXC1*skoXC1*(1/3))<=0,skoXC1*skoXC1*(-1/6)<=1,skoXC1*skoXC1*((-1/2)+skoXC1*skoXC1*(-1/6))<=0,skoXC1*skoXC1<=2,skoXC1*skoXC1*skoXC1*skoXC1*(-2/3)<=0,skoXC1*(-1+skoXC1*skoXC1*(-1/6))<=0,skoXC1*skoXC1*(1/3)<=1,skoXC1*skoXC1*(256+skoXC1*skoXC1*(-160+skoXC1*skoXC1*(32+skoXC1*skoXC1*-1)))<=128,skoXC1*skoXC1*skoXC1*skoXC1*((-80/3)+skoXC1*skoXC1*((128/3)+skoXC1*skoXC1*((-55/3)+skoXC1*skoXC1*(5/3))))<=0]], Reals]]

% In QepcadB format:
(E skoXC1) [[(skoXC1 skoXC1 (-256+(skoXC1 skoXC1 (160+(skoXC1 skoXC1 (-32+(skoXC1 skoXC1)))))))<=-128]/\[[0<(skoXC1 skoXC1 skoXC1 skoXC1 (32/15+(skoXC1 skoXC1 (-296/15+(skoXC1 skoXC1 (391/15+(skoXC1 skoXC1 (-146/15+(skoXC1 skoXC1 (3/4))))))))))]/\[[(skoXC1 skoXC1 (1/3+(skoXC1 skoXC1 (3/20))))<=1]/\[[(skoXC1 skoXC1 skoXC1 skoXC1 (-17/120+(skoXC1 skoXC1 (3/80))))<=0]/\[[(skoXC1 skoXC1 skoXC1 skoXC1 (-13/60+(skoXC1 skoXC1 (-3/10))))<=0]/\[[(skoXC1 skoXC1 (-1/2+(skoXC1 skoXC1 (7/120+(skoXC1 skoXC1 (-3/40))))))<=0]/\[[(skoXC1 skoXC1 (-1/6+(skoXC1 skoXC1 (-3/40))))<=1]/\[[(skoXC1 (-1+(skoXC1 skoXC1 (1/3+(skoXC1 skoXC1 (3/20))))))<=0]/\[[0<(skoXC1 skoXC1)]/\[[(skoXC1 skoXC1 (80+(skoXC1 skoXC1 (-40+(skoXC1 skoXC1 (6+(skoXC1 skoXC1 (-1/8))))))))<=48]/\[[-48<(skoXC1 skoXC1 (-80+(skoXC1 skoXC1 (40+(skoXC1 skoXC1 (-6+(skoXC1 skoXC1 (1/8))))))))]/\[[(skoXC1 skoXC1 (24+(skoXC1 skoXC1 (-10+(skoXC1 skoXC1)))))<=16]/\[[(skoXC1 skoXC1 (1/2))<=3]/\[[-3<(skoXC1 skoXC1 (-1/2))]/\[[0<skoXC1]/\[[skoXC1<7/8]/\[[(skoXC1 (-1+(skoXC1 skoXC1 (1/3))))<=0]/\[[(skoXC1 skoXC1 (-1/6))<=1]/\[[(skoXC1 skoXC1 (-1/2+(skoXC1 skoXC1 (-1/6))))<=0]/\[[(skoXC1 skoXC1)<=2]/\[[(skoXC1 skoXC1 skoXC1 skoXC1 (-2/3))<=0]/\[[(skoXC1 (-1+(skoXC1 skoXC1 (-1/6))))<=0]/\[[(skoXC1 skoXC1 (1/3))<=1]/\[[(skoXC1 skoXC1 (256+(skoXC1 skoXC1 (-160+(skoXC1 skoXC1 (32+(skoXC1 skoXC1 (-1))))))))<=128]/\[(skoXC1 skoXC1 skoXC1 skoXC1 (-80/3+(skoXC1 skoXC1 (128/3+(skoXC1 skoXC1 (-55/3+(skoXC1 skoXC1 (5/3))))))))<=0]]]]]]]]]]]]]]]]]]]]]]]]].

% In SMTLib2 format:
(declare-fun skoXC1 () Real) (assert (and (<= (* skoXC1 (* skoXC1 (+ (- 256.) (* skoXC1 (* skoXC1 (+ 160. (* skoXC1 (* skoXC1 (+ (- 32.) (* skoXC1 skoXC1)))))))))) (- 128.)) (and (> (* skoXC1 (* skoXC1 (* skoXC1 (* skoXC1 (+ (/ 32. 15.) (* skoXC1 (* skoXC1 (+ (/ (- 296.) 15.) (* skoXC1 (* skoXC1 (+ (/ 391. 15.) (* skoXC1 (* skoXC1 (+ (/ (- 146.) 15.) (* skoXC1 (* skoXC1 (/ 3. 4.))))))))))))))))) 0.) (and (<= (* skoXC1 (* skoXC1 (+ (/ 1. 3.) (* skoXC1 (* skoXC1 (/ 3. 20.)))))) 1.) (and (<= (* skoXC1 (* skoXC1 (* skoXC1 (* skoXC1 (+ (/ (- 17.) 120.) (* skoXC1 (* skoXC1 (/ 3. 80.)))))))) 0.) (and (<= (* skoXC1 (* skoXC1 (* skoXC1 (* skoXC1 (+ (/ (- 13.) 60.) (* skoXC1 (* skoXC1 (/ (- 3.) 10.)))))))) 0.) (and (<= (* skoXC1 (* skoXC1 (+ (/ (- 1.) 2.) (* skoXC1 (* skoXC1 (+ (/ 7. 120.) (* skoXC1 (* skoXC1 (/ (- 3.) 40.))))))))) 0.) (and (<= (* skoXC1 (* skoXC1 (+ (/ (- 1.) 6.) (* skoXC1 (* skoXC1 (/ (- 3.) 40.)))))) 1.) (and (<= (* skoXC1 (+ (- 1.) (* skoXC1 (* skoXC1 (+ (/ 1. 3.) (* skoXC1 (* skoXC1 (/ 3. 20.)))))))) 0.) (and (> (* skoXC1 skoXC1) 0.) (and (<= (* skoXC1 (* skoXC1 (+ 80. (* skoXC1 (* skoXC1 (+ (- 40.) (* skoXC1 (* skoXC1 (+ 6. (* skoXC1 (* skoXC1 (/ (- 1.) 8.)))))))))))) 48.) (and (> (* skoXC1 (* skoXC1 (+ (- 80.) (* skoXC1 (* skoXC1 (+ 40. (* skoXC1 (* skoXC1 (+ (- 6.) (* skoXC1 (* skoXC1 (/ 1. 8.)))))))))))) (- 48.)) (and (<= (* skoXC1 (* skoXC1 (+ 24. (* skoXC1 (* skoXC1 (+ (- 10.) (* skoXC1 skoXC1))))))) 16.) (and (<= (* skoXC1 (* skoXC1 (/ 1. 2.))) 3.) (and (> (* skoXC1 (* skoXC1 (/ (- 1.) 2.))) (- 3.)) (and (> skoXC1 0.) (and (> (/ 7. 8.) skoXC1) (and (<= (* skoXC1 (+ (- 1.) (* skoXC1 (* skoXC1 (/ 1. 3.))))) 0.) (and (<= (* skoXC1 (* skoXC1 (/ (- 1.) 6.))) 1.) (and (<= (* skoXC1 (* skoXC1 (+ (/ (- 1.) 2.) (* skoXC1 (* skoXC1 (/ (- 1.) 6.)))))) 0.) (and (<= (* skoXC1 skoXC1) 2.) (and (<= (* skoXC1 (* skoXC1 (* skoXC1 (* skoXC1 (/ (- 2.) 3.))))) 0.) (and (<= (* skoXC1 (+ (- 1.) (* skoXC1 (* skoXC1 (/ (- 1.) 6.))))) 0.) (and (<= (* skoXC1 (* skoXC1 (/ 1. 3.))) 1.) (and (<= (* skoXC1 (* skoXC1 (+ 256. (* skoXC1 (* skoXC1 (+ (- 160.) (* skoXC1 (* skoXC1 (+ 32. (* skoXC1 (* skoXC1 (- 1.)))))))))))) 128.) (<= (* skoXC1 (* skoXC1 (* skoXC1 (* skoXC1 (+ (/ (- 80.) 3.) (* skoXC1 (* skoXC1 (+ (/ 128. 3.) (* skoXC1 (* skoXC1 (+ (/ (- 55.) 3.) (* skoXC1 (* skoXC1 (/ 5. 3.)))))))))))))) 0.))))))))))))))))))))))))))

% In GRF format:
(sequent " MetiTarski formula " (antecedent (<= (* skoXC1 (* skoXC1 (+ (- 256.) (* skoXC1 (* skoXC1 (+ 160. (* skoXC1 (* skoXC1 (+ (- 32.) (* skoXC1 skoXC1)))))))))) (- 128.)) (> (* skoXC1 (* skoXC1 (* skoXC1 (* skoXC1 (+ (/ 32. 15.) (* skoXC1 (* skoXC1 (+ (/ (- 296.) 15.) (* skoXC1 (* skoXC1 (+ (/ 391. 15.) (* skoXC1 (* skoXC1 (+ (/ (- 146.) 15.) (* skoXC1 (* skoXC1 (/ 3. 4.))))))))))))))))) 0.) (<= (* skoXC1 (* skoXC1 (+ (/ 1. 3.) (* skoXC1 (* skoXC1 (/ 3. 20.)))))) 1.) (<= (* skoXC1 (* skoXC1 (* skoXC1 (* skoXC1 (+ (/ (- 17.) 120.) (* skoXC1 (* skoXC1 (/ 3. 80.)))))))) 0.) (<= (* skoXC1 (* skoXC1 (* skoXC1 (* skoXC1 (+ (/ (- 13.) 60.) (* skoXC1 (* skoXC1 (/ (- 3.) 10.)))))))) 0.) (<= (* skoXC1 (* skoXC1 (+ (/ (- 1.) 2.) (* skoXC1 (* skoXC1 (+ (/ 7. 120.) (* skoXC1 (* skoXC1 (/ (- 3.) 40.))))))))) 0.) (<= (* skoXC1 (* skoXC1 (+ (/ (- 1.) 6.) (* skoXC1 (* skoXC1 (/ (- 3.) 40.)))))) 1.) (<= (* skoXC1 (+ (- 1.) (* skoXC1 (* skoXC1 (+ (/ 1. 3.) (* skoXC1 (* skoXC1 (/ 3. 20.)))))))) 0.) (> (* skoXC1 skoXC1) 0.) (<= (* skoXC1 (* skoXC1 (+ 80. (* skoXC1 (* skoXC1 (+ (- 40.) (* skoXC1 (* skoXC1 (+ 6. (* skoXC1 (* skoXC1 (/ (- 1.) 8.)))))))))))) 48.) (> (* skoXC1 (* skoXC1 (+ (- 80.) (* skoXC1 (* skoXC1 (+ 40. (* skoXC1 (* skoXC1 (+ (- 6.) (* skoXC1 (* skoXC1 (/ 1. 8.)))))))))))) (- 48.)) (<= (* skoXC1 (* skoXC1 (+ 24. (* skoXC1 (* skoXC1 (+ (- 10.) (* skoXC1 skoXC1))))))) 16.) (<= (* skoXC1 (* skoXC1 (/ 1. 2.))) 3.) (> (* skoXC1 (* skoXC1 (/ (- 1.) 2.))) (- 3.)) (> skoXC1 0.) (> (/ 7. 8.) skoXC1) (<= (* skoXC1 (+ (- 1.) (* skoXC1 (* skoXC1 (/ 1. 3.))))) 0.) (<= (* skoXC1 (* skoXC1 (/ (- 1.) 6.))) 1.) (<= (* skoXC1 (* skoXC1 (+ (/ (- 1.) 2.) (* skoXC1 (* skoXC1 (/ (- 1.) 6.)))))) 0.) (<= (* skoXC1 skoXC1) 2.) (<= (* skoXC1 (* skoXC1 (* skoXC1 (* skoXC1 (/ (- 2.) 3.))))) 0.) (<= (* skoXC1 (+ (- 1.) (* skoXC1 (* skoXC1 (/ (- 1.) 6.))))) 0.) (<= (* skoXC1 (* skoXC1 (/ 1. 3.))) 1.) (<= (* skoXC1 (* skoXC1 (+ 256. (* skoXC1 (* skoXC1 (+ (- 160.) (* skoXC1 (* skoXC1 (+ 32. (* skoXC1 (* skoXC1 (- 1.)))))))))))) 128.)) (succedent (> (* skoXC1 (* skoXC1 (* skoXC1 (* skoXC1 (+ (/ (- 80.) 3.) (* skoXC1 (* skoXC1 (+ (/ 128. 3.) (* skoXC1 (* skoXC1 (+ (/ (- 55.) 3.) (* skoXC1 (* skoXC1 (/ 5. 3.)))))))))))))) 0.)))
-----[end problem]-----

-----[begin problem]-----
% In Mathematica format:
Timing[Resolve[Exists[{skoXC1}, And[skoXC1*skoXC1*(256+skoXC1*skoXC1*(-160+skoXC1*skoXC1*(32+skoXC1*skoXC1*-1)))<=128,skoXC1*skoXC1*((1/3)+skoXC1*skoXC1*(3/20))<=1,skoXC1*skoXC1*skoXC1*skoXC1*((-17/120)+skoXC1*skoXC1*(3/80))<=0,skoXC1*skoXC1*skoXC1*skoXC1*((-13/60)+skoXC1*skoXC1*(-3/10))<=0,skoXC1*skoXC1*((-1/2)+skoXC1*skoXC1*((7/120)+skoXC1*skoXC1*(-3/40)))<=0,skoXC1*skoXC1*((-1/6)+skoXC1*skoXC1*(-3/40))<=1,skoXC1*(-1+skoXC1*skoXC1*((1/3)+skoXC1*skoXC1*(3/20)))<=0,skoXC1*skoXC1>0,skoXC1*skoXC1*(80+skoXC1*skoXC1*(-40+skoXC1*skoXC1*(6+skoXC1*skoXC1*(-1/8))))<=48,skoXC1*skoXC1*(-80+skoXC1*skoXC1*(40+skoXC1*skoXC1*(-6+skoXC1*skoXC1*(1/8))))>-48,skoXC1*skoXC1*(24+skoXC1*skoXC1*(-10+skoXC1*skoXC1))<=16,skoXC1*skoXC1*(1/2)<=3,skoXC1*skoXC1*(-1/2)>-3,skoXC1>0,(7/8)>skoXC1,skoXC1*(-1+skoXC1*skoXC1*(1/3))<=0,skoXC1*skoXC1*(-1/6)<=1,skoXC1*skoXC1*((-1/2)+skoXC1*skoXC1*(-1/6))<=0,skoXC1*skoXC1<=2,skoXC1*skoXC1*skoXC1*skoXC1*(-2/3)<=0,skoXC1*(-1+skoXC1*skoXC1*(-1/6))<=0,skoXC1*skoXC1*(1/3)<=1,skoXC1*skoXC1*(256+skoXC1*skoXC1*(-160+skoXC1*skoXC1*(32+skoXC1*skoXC1*-1)))<=128,skoXC1*skoXC1*skoXC1*skoXC1*((-80/3)+skoXC1*skoXC1*((128/3)+skoXC1*skoXC1*((-55/3)+skoXC1*skoXC1*(5/3))))<=0]], Reals]]

% In QepcadB format:
(E skoXC1) [[(skoXC1 skoXC1 (256+(skoXC1 skoXC1 (-160+(skoXC1 skoXC1 (32+(skoXC1 skoXC1 (-1))))))))<=128]/\[[(skoXC1 skoXC1 (1/3+(skoXC1 skoXC1 (3/20))))<=1]/\[[(skoXC1 skoXC1 skoXC1 skoXC1 (-17/120+(skoXC1 skoXC1 (3/80))))<=0]/\[[(skoXC1 skoXC1 skoXC1 skoXC1 (-13/60+(skoXC1 skoXC1 (-3/10))))<=0]/\[[(skoXC1 skoXC1 (-1/2+(skoXC1 skoXC1 (7/120+(skoXC1 skoXC1 (-3/40))))))<=0]/\[[(skoXC1 skoXC1 (-1/6+(skoXC1 skoXC1 (-3/40))))<=1]/\[[(skoXC1 (-1+(skoXC1 skoXC1 (1/3+(skoXC1 skoXC1 (3/20))))))<=0]/\[[0<(skoXC1 skoXC1)]/\[[(skoXC1 skoXC1 (80+(skoXC1 skoXC1 (-40+(skoXC1 skoXC1 (6+(skoXC1 skoXC1 (-1/8))))))))<=48]/\[[-48<(skoXC1 skoXC1 (-80+(skoXC1 skoXC1 (40+(skoXC1 skoXC1 (-6+(skoXC1 skoXC1 (1/8))))))))]/\[[(skoXC1 skoXC1 (24+(skoXC1 skoXC1 (-10+(skoXC1 skoXC1)))))<=16]/\[[(skoXC1 skoXC1 (1/2))<=3]/\[[-3<(skoXC1 skoXC1 (-1/2))]/\[[0<skoXC1]/\[[skoXC1<7/8]/\[[(skoXC1 (-1+(skoXC1 skoXC1 (1/3))))<=0]/\[[(skoXC1 skoXC1 (-1/6))<=1]/\[[(skoXC1 skoXC1 (-1/2+(skoXC1 skoXC1 (-1/6))))<=0]/\[[(skoXC1 skoXC1)<=2]/\[[(skoXC1 skoXC1 skoXC1 skoXC1 (-2/3))<=0]/\[[(skoXC1 (-1+(skoXC1 skoXC1 (-1/6))))<=0]/\[[(skoXC1 skoXC1 (1/3))<=1]/\[[(skoXC1 skoXC1 (256+(skoXC1 skoXC1 (-160+(skoXC1 skoXC1 (32+(skoXC1 skoXC1 (-1))))))))<=128]/\[(skoXC1 skoXC1 skoXC1 skoXC1 (-80/3+(skoXC1 skoXC1 (128/3+(skoXC1 skoXC1 (-55/3+(skoXC1 skoXC1 (5/3))))))))<=0]]]]]]]]]]]]]]]]]]]]]]]].

% In SMTLib2 format:
(declare-fun skoXC1 () Real) (assert (and (<= (* skoXC1 (* skoXC1 (+ 256. (* skoXC1 (* skoXC1 (+ (- 160.) (* skoXC1 (* skoXC1 (+ 32. (* skoXC1 (* skoXC1 (- 1.)))))))))))) 128.) (and (<= (* skoXC1 (* skoXC1 (+ (/ 1. 3.) (* skoXC1 (* skoXC1 (/ 3. 20.)))))) 1.) (and (<= (* skoXC1 (* skoXC1 (* skoXC1 (* skoXC1 (+ (/ (- 17.) 120.) (* skoXC1 (* skoXC1 (/ 3. 80.)))))))) 0.) (and (<= (* skoXC1 (* skoXC1 (* skoXC1 (* skoXC1 (+ (/ (- 13.) 60.) (* skoXC1 (* skoXC1 (/ (- 3.) 10.)))))))) 0.) (and (<= (* skoXC1 (* skoXC1 (+ (/ (- 1.) 2.) (* skoXC1 (* skoXC1 (+ (/ 7. 120.) (* skoXC1 (* skoXC1 (/ (- 3.) 40.))))))))) 0.) (and (<= (* skoXC1 (* skoXC1 (+ (/ (- 1.) 6.) (* skoXC1 (* skoXC1 (/ (- 3.) 40.)))))) 1.) (and (<= (* skoXC1 (+ (- 1.) (* skoXC1 (* skoXC1 (+ (/ 1. 3.) (* skoXC1 (* skoXC1 (/ 3. 20.)))))))) 0.) (and (> (* skoXC1 skoXC1) 0.) (and (<= (* skoXC1 (* skoXC1 (+ 80. (* skoXC1 (* skoXC1 (+ (- 40.) (* skoXC1 (* skoXC1 (+ 6. (* skoXC1 (* skoXC1 (/ (- 1.) 8.)))))))))))) 48.) (and (> (* skoXC1 (* skoXC1 (+ (- 80.) (* skoXC1 (* skoXC1 (+ 40. (* skoXC1 (* skoXC1 (+ (- 6.) (* skoXC1 (* skoXC1 (/ 1. 8.)))))))))))) (- 48.)) (and (<= (* skoXC1 (* skoXC1 (+ 24. (* skoXC1 (* skoXC1 (+ (- 10.) (* skoXC1 skoXC1))))))) 16.) (and (<= (* skoXC1 (* skoXC1 (/ 1. 2.))) 3.) (and (> (* skoXC1 (* skoXC1 (/ (- 1.) 2.))) (- 3.)) (and (> skoXC1 0.) (and (> (/ 7. 8.) skoXC1) (and (<= (* skoXC1 (+ (- 1.) (* skoXC1 (* skoXC1 (/ 1. 3.))))) 0.) (and (<= (* skoXC1 (* skoXC1 (/ (- 1.) 6.))) 1.) (and (<= (* skoXC1 (* skoXC1 (+ (/ (- 1.) 2.) (* skoXC1 (* skoXC1 (/ (- 1.) 6.)))))) 0.) (and (<= (* skoXC1 skoXC1) 2.) (and (<= (* skoXC1 (* skoXC1 (* skoXC1 (* skoXC1 (/ (- 2.) 3.))))) 0.) (and (<= (* skoXC1 (+ (- 1.) (* skoXC1 (* skoXC1 (/ (- 1.) 6.))))) 0.) (and (<= (* skoXC1 (* skoXC1 (/ 1. 3.))) 1.) (and (<= (* skoXC1 (* skoXC1 (+ 256. (* skoXC1 (* skoXC1 (+ (- 160.) (* skoXC1 (* skoXC1 (+ 32. (* skoXC1 (* skoXC1 (- 1.)))))))))))) 128.) (<= (* skoXC1 (* skoXC1 (* skoXC1 (* skoXC1 (+ (/ (- 80.) 3.) (* skoXC1 (* skoXC1 (+ (/ 128. 3.) (* skoXC1 (* skoXC1 (+ (/ (- 55.) 3.) (* skoXC1 (* skoXC1 (/ 5. 3.)))))))))))))) 0.)))))))))))))))))))))))))

% In GRF format:
(sequent " MetiTarski formula " (antecedent (<= (* skoXC1 (* skoXC1 (+ 256. (* skoXC1 (* skoXC1 (+ (- 160.) (* skoXC1 (* skoXC1 (+ 32. (* skoXC1 (* skoXC1 (- 1.)))))))))))) 128.) (<= (* skoXC1 (* skoXC1 (+ (/ 1. 3.) (* skoXC1 (* skoXC1 (/ 3. 20.)))))) 1.) (<= (* skoXC1 (* skoXC1 (* skoXC1 (* skoXC1 (+ (/ (- 17.) 120.) (* skoXC1 (* skoXC1 (/ 3. 80.)))))))) 0.) (<= (* skoXC1 (* skoXC1 (* skoXC1 (* skoXC1 (+ (/ (- 13.) 60.) (* skoXC1 (* skoXC1 (/ (- 3.) 10.)))))))) 0.) (<= (* skoXC1 (* skoXC1 (+ (/ (- 1.) 2.) (* skoXC1 (* skoXC1 (+ (/ 7. 120.) (* skoXC1 (* skoXC1 (/ (- 3.) 40.))))))))) 0.) (<= (* skoXC1 (* skoXC1 (+ (/ (- 1.) 6.) (* skoXC1 (* skoXC1 (/ (- 3.) 40.)))))) 1.) (<= (* skoXC1 (+ (- 1.) (* skoXC1 (* skoXC1 (+ (/ 1. 3.) (* skoXC1 (* skoXC1 (/ 3. 20.)))))))) 0.) (> (* skoXC1 skoXC1) 0.) (<= (* skoXC1 (* skoXC1 (+ 80. (* skoXC1 (* skoXC1 (+ (- 40.) (* skoXC1 (* skoXC1 (+ 6. (* skoXC1 (* skoXC1 (/ (- 1.) 8.)))))))))))) 48.) (> (* skoXC1 (* skoXC1 (+ (- 80.) (* skoXC1 (* skoXC1 (+ 40. (* skoXC1 (* skoXC1 (+ (- 6.) (* skoXC1 (* skoXC1 (/ 1. 8.)))))))))))) (- 48.)) (<= (* skoXC1 (* skoXC1 (+ 24. (* skoXC1 (* skoXC1 (+ (- 10.) (* skoXC1 skoXC1))))))) 16.) (<= (* skoXC1 (* skoXC1 (/ 1. 2.))) 3.) (> (* skoXC1 (* skoXC1 (/ (- 1.) 2.))) (- 3.)) (> skoXC1 0.) (> (/ 7. 8.) skoXC1) (<= (* skoXC1 (+ (- 1.) (* skoXC1 (* skoXC1 (/ 1. 3.))))) 0.) (<= (* skoXC1 (* skoXC1 (/ (- 1.) 6.))) 1.) (<= (* skoXC1 (* skoXC1 (+ (/ (- 1.) 2.) (* skoXC1 (* skoXC1 (/ (- 1.) 6.)))))) 0.) (<= (* skoXC1 skoXC1) 2.) (<= (* skoXC1 (* skoXC1 (* skoXC1 (* skoXC1 (/ (- 2.) 3.))))) 0.) (<= (* skoXC1 (+ (- 1.) (* skoXC1 (* skoXC1 (/ (- 1.) 6.))))) 0.) (<= (* skoXC1 (* skoXC1 (/ 1. 3.))) 1.) (<= (* skoXC1 (* skoXC1 (+ 256. (* skoXC1 (* skoXC1 (+ (- 160.) (* skoXC1 (* skoXC1 (+ 32. (* skoXC1 (* skoXC1 (- 1.)))))))))))) 128.)) (succedent (> (* skoXC1 (* skoXC1 (* skoXC1 (* skoXC1 (+ (/ (- 80.) 3.) (* skoXC1 (* skoXC1 (+ (/ 128. 3.) (* skoXC1 (* skoXC1 (+ (/ (- 55.) 3.) (* skoXC1 (* skoXC1 (/ 5. 3.)))))))))))))) 0.)))
-----[end problem]-----

-----[begin problem]-----
% In Mathematica format:
Timing[Resolve[Exists[{skoXC1}, And[skoXC1*skoXC1*skoXC1*skoXC1*((32/15)+skoXC1*skoXC1*((-296/15)+skoXC1*skoXC1*((391/15)+skoXC1*skoXC1*((-146/15)+skoXC1*skoXC1*(3/4)))))<=0,skoXC1*skoXC1*((1/3)+skoXC1*skoXC1*(3/20))<=1,skoXC1*skoXC1*skoXC1*skoXC1*((-17/120)+skoXC1*skoXC1*(3/80))<=0,skoXC1*skoXC1*skoXC1*skoXC1*((-13/60)+skoXC1*skoXC1*(-3/10))<=0,skoXC1*skoXC1*((-1/2)+skoXC1*skoXC1*((7/120)+skoXC1*skoXC1*(-3/40)))<=0,skoXC1*skoXC1*((-1/6)+skoXC1*skoXC1*(-3/40))<=1,skoXC1*(-1+skoXC1*skoXC1*((1/3)+skoXC1*skoXC1*(3/20)))<=0,skoXC1*skoXC1>0,skoXC1*skoXC1*(80+skoXC1*skoXC1*(-40+skoXC1*skoXC1*(6+skoXC1*skoXC1*(-1/8))))<=48,skoXC1*skoXC1*(-80+skoXC1*skoXC1*(40+skoXC1*skoXC1*(-6+skoXC1*skoXC1*(1/8))))>-48,skoXC1*skoXC1*(24+skoXC1*skoXC1*(-10+skoXC1*skoXC1))<=16,skoXC1*skoXC1*(1/2)<=3,skoXC1*skoXC1*(-1/2)>-3,skoXC1>0,(7/8)>skoXC1,skoXC1*(-1+skoXC1*skoXC1*(1/3))<=0,skoXC1*skoXC1*(-1/6)<=1,skoXC1*skoXC1*((-1/2)+skoXC1*skoXC1*(-1/6))<=0,skoXC1*skoXC1<=2,skoXC1*skoXC1*skoXC1*skoXC1*(-2/3)<=0,skoXC1*(-1+skoXC1*skoXC1*(-1/6))<=0,skoXC1*skoXC1*(1/3)<=1,skoXC1*skoXC1*(256+skoXC1*skoXC1*(-160+skoXC1*skoXC1*(32+skoXC1*skoXC1*-1)))<=128,skoXC1*skoXC1*skoXC1*skoXC1*((-80/3)+skoXC1*skoXC1*((128/3)+skoXC1*skoXC1*((-55/3)+skoXC1*skoXC1*(5/3))))<=0]], Reals]]

% In QepcadB format:
(E skoXC1) [[(skoXC1 skoXC1 skoXC1 skoXC1 (32/15+(skoXC1 skoXC1 (-296/15+(skoXC1 skoXC1 (391/15+(skoXC1 skoXC1 (-146/15+(skoXC1 skoXC1 (3/4))))))))))<=0]/\[[(skoXC1 skoXC1 (1/3+(skoXC1 skoXC1 (3/20))))<=1]/\[[(skoXC1 skoXC1 skoXC1 skoXC1 (-17/120+(skoXC1 skoXC1 (3/80))))<=0]/\[[(skoXC1 skoXC1 skoXC1 skoXC1 (-13/60+(skoXC1 skoXC1 (-3/10))))<=0]/\[[(skoXC1 skoXC1 (-1/2+(skoXC1 skoXC1 (7/120+(skoXC1 skoXC1 (-3/40))))))<=0]/\[[(skoXC1 skoXC1 (-1/6+(skoXC1 skoXC1 (-3/40))))<=1]/\[[(skoXC1 (-1+(skoXC1 skoXC1 (1/3+(skoXC1 skoXC1 (3/20))))))<=0]/\[[0<(skoXC1 skoXC1)]/\[[(skoXC1 skoXC1 (80+(skoXC1 skoXC1 (-40+(skoXC1 skoXC1 (6+(skoXC1 skoXC1 (-1/8))))))))<=48]/\[[-48<(skoXC1 skoXC1 (-80+(skoXC1 skoXC1 (40+(skoXC1 skoXC1 (-6+(skoXC1 skoXC1 (1/8))))))))]/\[[(skoXC1 skoXC1 (24+(skoXC1 skoXC1 (-10+(skoXC1 skoXC1)))))<=16]/\[[(skoXC1 skoXC1 (1/2))<=3]/\[[-3<(skoXC1 skoXC1 (-1/2))]/\[[0<skoXC1]/\[[skoXC1<7/8]/\[[(skoXC1 (-1+(skoXC1 skoXC1 (1/3))))<=0]/\[[(skoXC1 skoXC1 (-1/6))<=1]/\[[(skoXC1 skoXC1 (-1/2+(skoXC1 skoXC1 (-1/6))))<=0]/\[[(skoXC1 skoXC1)<=2]/\[[(skoXC1 skoXC1 skoXC1 skoXC1 (-2/3))<=0]/\[[(skoXC1 (-1+(skoXC1 skoXC1 (-1/6))))<=0]/\[[(skoXC1 skoXC1 (1/3))<=1]/\[[(skoXC1 skoXC1 (256+(skoXC1 skoXC1 (-160+(skoXC1 skoXC1 (32+(skoXC1 skoXC1 (-1))))))))<=128]/\[(skoXC1 skoXC1 skoXC1 skoXC1 (-80/3+(skoXC1 skoXC1 (128/3+(skoXC1 skoXC1 (-55/3+(skoXC1 skoXC1 (5/3))))))))<=0]]]]]]]]]]]]]]]]]]]]]]]].

% In SMTLib2 format:
(declare-fun skoXC1 () Real) (assert (and (<= (* skoXC1 (* skoXC1 (* skoXC1 (* skoXC1 (+ (/ 32. 15.) (* skoXC1 (* skoXC1 (+ (/ (- 296.) 15.) (* skoXC1 (* skoXC1 (+ (/ 391. 15.) (* skoXC1 (* skoXC1 (+ (/ (- 146.) 15.) (* skoXC1 (* skoXC1 (/ 3. 4.))))))))))))))))) 0.) (and (<= (* skoXC1 (* skoXC1 (+ (/ 1. 3.) (* skoXC1 (* skoXC1 (/ 3. 20.)))))) 1.) (and (<= (* skoXC1 (* skoXC1 (* skoXC1 (* skoXC1 (+ (/ (- 17.) 120.) (* skoXC1 (* skoXC1 (/ 3. 80.)))))))) 0.) (and (<= (* skoXC1 (* skoXC1 (* skoXC1 (* skoXC1 (+ (/ (- 13.) 60.) (* skoXC1 (* skoXC1 (/ (- 3.) 10.)))))))) 0.) (and (<= (* skoXC1 (* skoXC1 (+ (/ (- 1.) 2.) (* skoXC1 (* skoXC1 (+ (/ 7. 120.) (* skoXC1 (* skoXC1 (/ (- 3.) 40.))))))))) 0.) (and (<= (* skoXC1 (* skoXC1 (+ (/ (- 1.) 6.) (* skoXC1 (* skoXC1 (/ (- 3.) 40.)))))) 1.) (and (<= (* skoXC1 (+ (- 1.) (* skoXC1 (* skoXC1 (+ (/ 1. 3.) (* skoXC1 (* skoXC1 (/ 3. 20.)))))))) 0.) (and (> (* skoXC1 skoXC1) 0.) (and (<= (* skoXC1 (* skoXC1 (+ 80. (* skoXC1 (* skoXC1 (+ (- 40.) (* skoXC1 (* skoXC1 (+ 6. (* skoXC1 (* skoXC1 (/ (- 1.) 8.)))))))))))) 48.) (and (> (* skoXC1 (* skoXC1 (+ (- 80.) (* skoXC1 (* skoXC1 (+ 40. (* skoXC1 (* skoXC1 (+ (- 6.) (* skoXC1 (* skoXC1 (/ 1. 8.)))))))))))) (- 48.)) (and (<= (* skoXC1 (* skoXC1 (+ 24. (* skoXC1 (* skoXC1 (+ (- 10.) (* skoXC1 skoXC1))))))) 16.) (and (<= (* skoXC1 (* skoXC1 (/ 1. 2.))) 3.) (and (> (* skoXC1 (* skoXC1 (/ (- 1.) 2.))) (- 3.)) (and (> skoXC1 0.) (and (> (/ 7. 8.) skoXC1) (and (<= (* skoXC1 (+ (- 1.) (* skoXC1 (* skoXC1 (/ 1. 3.))))) 0.) (and (<= (* skoXC1 (* skoXC1 (/ (- 1.) 6.))) 1.) (and (<= (* skoXC1 (* skoXC1 (+ (/ (- 1.) 2.) (* skoXC1 (* skoXC1 (/ (- 1.) 6.)))))) 0.) (and (<= (* skoXC1 skoXC1) 2.) (and (<= (* skoXC1 (* skoXC1 (* skoXC1 (* skoXC1 (/ (- 2.) 3.))))) 0.) (and (<= (* skoXC1 (+ (- 1.) (* skoXC1 (* skoXC1 (/ (- 1.) 6.))))) 0.) (and (<= (* skoXC1 (* skoXC1 (/ 1. 3.))) 1.) (and (<= (* skoXC1 (* skoXC1 (+ 256. (* skoXC1 (* skoXC1 (+ (- 160.) (* skoXC1 (* skoXC1 (+ 32. (* skoXC1 (* skoXC1 (- 1.)))))))))))) 128.) (<= (* skoXC1 (* skoXC1 (* skoXC1 (* skoXC1 (+ (/ (- 80.) 3.) (* skoXC1 (* skoXC1 (+ (/ 128. 3.) (* skoXC1 (* skoXC1 (+ (/ (- 55.) 3.) (* skoXC1 (* skoXC1 (/ 5. 3.)))))))))))))) 0.)))))))))))))))))))))))))

% In GRF format:
(sequent " MetiTarski formula " (antecedent (<= (* skoXC1 (* skoXC1 (* skoXC1 (* skoXC1 (+ (/ 32. 15.) (* skoXC1 (* skoXC1 (+ (/ (- 296.) 15.) (* skoXC1 (* skoXC1 (+ (/ 391. 15.) (* skoXC1 (* skoXC1 (+ (/ (- 146.) 15.) (* skoXC1 (* skoXC1 (/ 3. 4.))))))))))))))))) 0.) (<= (* skoXC1 (* skoXC1 (+ (/ 1. 3.) (* skoXC1 (* skoXC1 (/ 3. 20.)))))) 1.) (<= (* skoXC1 (* skoXC1 (* skoXC1 (* skoXC1 (+ (/ (- 17.) 120.) (* skoXC1 (* skoXC1 (/ 3. 80.)))))))) 0.) (<= (* skoXC1 (* skoXC1 (* skoXC1 (* skoXC1 (+ (/ (- 13.) 60.) (* skoXC1 (* skoXC1 (/ (- 3.) 10.)))))))) 0.) (<= (* skoXC1 (* skoXC1 (+ (/ (- 1.) 2.) (* skoXC1 (* skoXC1 (+ (/ 7. 120.) (* skoXC1 (* skoXC1 (/ (- 3.) 40.))))))))) 0.) (<= (* skoXC1 (* skoXC1 (+ (/ (- 1.) 6.) (* skoXC1 (* skoXC1 (/ (- 3.) 40.)))))) 1.) (<= (* skoXC1 (+ (- 1.) (* skoXC1 (* skoXC1 (+ (/ 1. 3.) (* skoXC1 (* skoXC1 (/ 3. 20.)))))))) 0.) (> (* skoXC1 skoXC1) 0.) (<= (* skoXC1 (* skoXC1 (+ 80. (* skoXC1 (* skoXC1 (+ (- 40.) (* skoXC1 (* skoXC1 (+ 6. (* skoXC1 (* skoXC1 (/ (- 1.) 8.)))))))))))) 48.) (> (* skoXC1 (* skoXC1 (+ (- 80.) (* skoXC1 (* skoXC1 (+ 40. (* skoXC1 (* skoXC1 (+ (- 6.) (* skoXC1 (* skoXC1 (/ 1. 8.)))))))))))) (- 48.)) (<= (* skoXC1 (* skoXC1 (+ 24. (* skoXC1 (* skoXC1 (+ (- 10.) (* skoXC1 skoXC1))))))) 16.) (<= (* skoXC1 (* skoXC1 (/ 1. 2.))) 3.) (> (* skoXC1 (* skoXC1 (/ (- 1.) 2.))) (- 3.)) (> skoXC1 0.) (> (/ 7. 8.) skoXC1) (<= (* skoXC1 (+ (- 1.) (* skoXC1 (* skoXC1 (/ 1. 3.))))) 0.) (<= (* skoXC1 (* skoXC1 (/ (- 1.) 6.))) 1.) (<= (* skoXC1 (* skoXC1 (+ (/ (- 1.) 2.) (* skoXC1 (* skoXC1 (/ (- 1.) 6.)))))) 0.) (<= (* skoXC1 skoXC1) 2.) (<= (* skoXC1 (* skoXC1 (* skoXC1 (* skoXC1 (/ (- 2.) 3.))))) 0.) (<= (* skoXC1 (+ (- 1.) (* skoXC1 (* skoXC1 (/ (- 1.) 6.))))) 0.) (<= (* skoXC1 (* skoXC1 (/ 1. 3.))) 1.) (<= (* skoXC1 (* skoXC1 (+ 256. (* skoXC1 (* skoXC1 (+ (- 160.) (* skoXC1 (* skoXC1 (+ 32. (* skoXC1 (* skoXC1 (- 1.)))))))))))) 128.)) (succedent (> (* skoXC1 (* skoXC1 (* skoXC1 (* skoXC1 (+ (/ (- 80.) 3.) (* skoXC1 (* skoXC1 (+ (/ 128. 3.) (* skoXC1 (* skoXC1 (+ (/ (- 55.) 3.) (* skoXC1 (* skoXC1 (/ 5. 3.)))))))))))))) 0.)))
-----[end problem]-----

-----[begin problem]-----
% In Mathematica format:
Timing[Resolve[Exists[{skoXC1}, And[skoXC1*skoXC1*((-1/6)+skoXC1*skoXC1*(-3/40))<=1,skoXC1*skoXC1*skoXC1*skoXC1*((32/15)+skoXC1*skoXC1*((-296/15)+skoXC1*skoXC1*((391/15)+skoXC1*skoXC1*((-146/15)+skoXC1*skoXC1*(3/4)))))<=0,skoXC1*skoXC1*((1/3)+skoXC1*skoXC1*(3/20))<=1,skoXC1*skoXC1*skoXC1*skoXC1*((-17/120)+skoXC1*skoXC1*(3/80))<=0,skoXC1*skoXC1*skoXC1*skoXC1*((-13/60)+skoXC1*skoXC1*(-3/10))<=0,skoXC1*skoXC1*((-1/2)+skoXC1*skoXC1*((7/120)+skoXC1*skoXC1*(-3/40)))<=0,skoXC1*skoXC1*((-1/6)+skoXC1*skoXC1*(-3/40))<=1,skoXC1*(-1+skoXC1*skoXC1*((1/3)+skoXC1*skoXC1*(3/20)))<=0,skoXC1*skoXC1>0,skoXC1*skoXC1*(80+skoXC1*skoXC1*(-40+skoXC1*skoXC1*(6+skoXC1*skoXC1*(-1/8))))<=48,skoXC1*skoXC1*(-80+skoXC1*skoXC1*(40+skoXC1*skoXC1*(-6+skoXC1*skoXC1*(1/8))))>-48,skoXC1*skoXC1*(24+skoXC1*skoXC1*(-10+skoXC1*skoXC1))<=16,skoXC1*skoXC1*(1/2)<=3,skoXC1*skoXC1*(-1/2)>-3,skoXC1>0,(7/8)>skoXC1,skoXC1*(-1+skoXC1*skoXC1*(1/3))<=0,skoXC1*skoXC1*(-1/6)<=1,skoXC1*skoXC1*((-1/2)+skoXC1*skoXC1*(-1/6))<=0,skoXC1*skoXC1<=2,skoXC1*skoXC1*skoXC1*skoXC1*(-2/3)<=0,skoXC1*(-1+skoXC1*skoXC1*(-1/6))<=0,skoXC1*skoXC1*(1/3)<=1,skoXC1*skoXC1*(256+skoXC1*skoXC1*(-160+skoXC1*skoXC1*(32+skoXC1*skoXC1*-1)))<=128,skoXC1*skoXC1*skoXC1*skoXC1*((-80/3)+skoXC1*skoXC1*((128/3)+skoXC1*skoXC1*((-55/3)+skoXC1*skoXC1*(5/3))))<=0]], Reals]]

% In QepcadB format:
(E skoXC1) [[(skoXC1 skoXC1 (-1/6+(skoXC1 skoXC1 (-3/40))))<=1]/\[[(skoXC1 skoXC1 skoXC1 skoXC1 (32/15+(skoXC1 skoXC1 (-296/15+(skoXC1 skoXC1 (391/15+(skoXC1 skoXC1 (-146/15+(skoXC1 skoXC1 (3/4))))))))))<=0]/\[[(skoXC1 skoXC1 (1/3+(skoXC1 skoXC1 (3/20))))<=1]/\[[(skoXC1 skoXC1 skoXC1 skoXC1 (-17/120+(skoXC1 skoXC1 (3/80))))<=0]/\[[(skoXC1 skoXC1 skoXC1 skoXC1 (-13/60+(skoXC1 skoXC1 (-3/10))))<=0]/\[[(skoXC1 skoXC1 (-1/2+(skoXC1 skoXC1 (7/120+(skoXC1 skoXC1 (-3/40))))))<=0]/\[[(skoXC1 skoXC1 (-1/6+(skoXC1 skoXC1 (-3/40))))<=1]/\[[(skoXC1 (-1+(skoXC1 skoXC1 (1/3+(skoXC1 skoXC1 (3/20))))))<=0]/\[[0<(skoXC1 skoXC1)]/\[[(skoXC1 skoXC1 (80+(skoXC1 skoXC1 (-40+(skoXC1 skoXC1 (6+(skoXC1 skoXC1 (-1/8))))))))<=48]/\[[-48<(skoXC1 skoXC1 (-80+(skoXC1 skoXC1 (40+(skoXC1 skoXC1 (-6+(skoXC1 skoXC1 (1/8))))))))]/\[[(skoXC1 skoXC1 (24+(skoXC1 skoXC1 (-10+(skoXC1 skoXC1)))))<=16]/\[[(skoXC1 skoXC1 (1/2))<=3]/\[[-3<(skoXC1 skoXC1 (-1/2))]/\[[0<skoXC1]/\[[skoXC1<7/8]/\[[(skoXC1 (-1+(skoXC1 skoXC1 (1/3))))<=0]/\[[(skoXC1 skoXC1 (-1/6))<=1]/\[[(skoXC1 skoXC1 (-1/2+(skoXC1 skoXC1 (-1/6))))<=0]/\[[(skoXC1 skoXC1)<=2]/\[[(skoXC1 skoXC1 skoXC1 skoXC1 (-2/3))<=0]/\[[(skoXC1 (-1+(skoXC1 skoXC1 (-1/6))))<=0]/\[[(skoXC1 skoXC1 (1/3))<=1]/\[[(skoXC1 skoXC1 (256+(skoXC1 skoXC1 (-160+(skoXC1 skoXC1 (32+(skoXC1 skoXC1 (-1))))))))<=128]/\[(skoXC1 skoXC1 skoXC1 skoXC1 (-80/3+(skoXC1 skoXC1 (128/3+(skoXC1 skoXC1 (-55/3+(skoXC1 skoXC1 (5/3))))))))<=0]]]]]]]]]]]]]]]]]]]]]]]]].

% In SMTLib2 format:
(declare-fun skoXC1 () Real) (assert (and (<= (* skoXC1 (* skoXC1 (+ (/ (- 1.) 6.) (* skoXC1 (* skoXC1 (/ (- 3.) 40.)))))) 1.) (and (<= (* skoXC1 (* skoXC1 (* skoXC1 (* skoXC1 (+ (/ 32. 15.) (* skoXC1 (* skoXC1 (+ (/ (- 296.) 15.) (* skoXC1 (* skoXC1 (+ (/ 391. 15.) (* skoXC1 (* skoXC1 (+ (/ (- 146.) 15.) (* skoXC1 (* skoXC1 (/ 3. 4.))))))))))))))))) 0.) (and (<= (* skoXC1 (* skoXC1 (+ (/ 1. 3.) (* skoXC1 (* skoXC1 (/ 3. 20.)))))) 1.) (and (<= (* skoXC1 (* skoXC1 (* skoXC1 (* skoXC1 (+ (/ (- 17.) 120.) (* skoXC1 (* skoXC1 (/ 3. 80.)))))))) 0.) (and (<= (* skoXC1 (* skoXC1 (* skoXC1 (* skoXC1 (+ (/ (- 13.) 60.) (* skoXC1 (* skoXC1 (/ (- 3.) 10.)))))))) 0.) (and (<= (* skoXC1 (* skoXC1 (+ (/ (- 1.) 2.) (* skoXC1 (* skoXC1 (+ (/ 7. 120.) (* skoXC1 (* skoXC1 (/ (- 3.) 40.))))))))) 0.) (and (<= (* skoXC1 (* skoXC1 (+ (/ (- 1.) 6.) (* skoXC1 (* skoXC1 (/ (- 3.) 40.)))))) 1.) (and (<= (* skoXC1 (+ (- 1.) (* skoXC1 (* skoXC1 (+ (/ 1. 3.) (* skoXC1 (* skoXC1 (/ 3. 20.)))))))) 0.) (and (> (* skoXC1 skoXC1) 0.) (and (<= (* skoXC1 (* skoXC1 (+ 80. (* skoXC1 (* skoXC1 (+ (- 40.) (* skoXC1 (* skoXC1 (+ 6. (* skoXC1 (* skoXC1 (/ (- 1.) 8.)))))))))))) 48.) (and (> (* skoXC1 (* skoXC1 (+ (- 80.) (* skoXC1 (* skoXC1 (+ 40. (* skoXC1 (* skoXC1 (+ (- 6.) (* skoXC1 (* skoXC1 (/ 1. 8.)))))))))))) (- 48.)) (and (<= (* skoXC1 (* skoXC1 (+ 24. (* skoXC1 (* skoXC1 (+ (- 10.) (* skoXC1 skoXC1))))))) 16.) (and (<= (* skoXC1 (* skoXC1 (/ 1. 2.))) 3.) (and (> (* skoXC1 (* skoXC1 (/ (- 1.) 2.))) (- 3.)) (and (> skoXC1 0.) (and (> (/ 7. 8.) skoXC1) (and (<= (* skoXC1 (+ (- 1.) (* skoXC1 (* skoXC1 (/ 1. 3.))))) 0.) (and (<= (* skoXC1 (* skoXC1 (/ (- 1.) 6.))) 1.) (and (<= (* skoXC1 (* skoXC1 (+ (/ (- 1.) 2.) (* skoXC1 (* skoXC1 (/ (- 1.) 6.)))))) 0.) (and (<= (* skoXC1 skoXC1) 2.) (and (<= (* skoXC1 (* skoXC1 (* skoXC1 (* skoXC1 (/ (- 2.) 3.))))) 0.) (and (<= (* skoXC1 (+ (- 1.) (* skoXC1 (* skoXC1 (/ (- 1.) 6.))))) 0.) (and (<= (* skoXC1 (* skoXC1 (/ 1. 3.))) 1.) (and (<= (* skoXC1 (* skoXC1 (+ 256. (* skoXC1 (* skoXC1 (+ (- 160.) (* skoXC1 (* skoXC1 (+ 32. (* skoXC1 (* skoXC1 (- 1.)))))))))))) 128.) (<= (* skoXC1 (* skoXC1 (* skoXC1 (* skoXC1 (+ (/ (- 80.) 3.) (* skoXC1 (* skoXC1 (+ (/ 128. 3.) (* skoXC1 (* skoXC1 (+ (/ (- 55.) 3.) (* skoXC1 (* skoXC1 (/ 5. 3.)))))))))))))) 0.))))))))))))))))))))))))))

% In GRF format:
(sequent " MetiTarski formula " (antecedent (<= (* skoXC1 (* skoXC1 (+ (/ (- 1.) 6.) (* skoXC1 (* skoXC1 (/ (- 3.) 40.)))))) 1.) (<= (* skoXC1 (* skoXC1 (* skoXC1 (* skoXC1 (+ (/ 32. 15.) (* skoXC1 (* skoXC1 (+ (/ (- 296.) 15.) (* skoXC1 (* skoXC1 (+ (/ 391. 15.) (* skoXC1 (* skoXC1 (+ (/ (- 146.) 15.) (* skoXC1 (* skoXC1 (/ 3. 4.))))))))))))))))) 0.) (<= (* skoXC1 (* skoXC1 (+ (/ 1. 3.) (* skoXC1 (* skoXC1 (/ 3. 20.)))))) 1.) (<= (* skoXC1 (* skoXC1 (* skoXC1 (* skoXC1 (+ (/ (- 17.) 120.) (* skoXC1 (* skoXC1 (/ 3. 80.)))))))) 0.) (<= (* skoXC1 (* skoXC1 (* skoXC1 (* skoXC1 (+ (/ (- 13.) 60.) (* skoXC1 (* skoXC1 (/ (- 3.) 10.)))))))) 0.) (<= (* skoXC1 (* skoXC1 (+ (/ (- 1.) 2.) (* skoXC1 (* skoXC1 (+ (/ 7. 120.) (* skoXC1 (* skoXC1 (/ (- 3.) 40.))))))))) 0.) (<= (* skoXC1 (* skoXC1 (+ (/ (- 1.) 6.) (* skoXC1 (* skoXC1 (/ (- 3.) 40.)))))) 1.) (<= (* skoXC1 (+ (- 1.) (* skoXC1 (* skoXC1 (+ (/ 1. 3.) (* skoXC1 (* skoXC1 (/ 3. 20.)))))))) 0.) (> (* skoXC1 skoXC1) 0.) (<= (* skoXC1 (* skoXC1 (+ 80. (* skoXC1 (* skoXC1 (+ (- 40.) (* skoXC1 (* skoXC1 (+ 6. (* skoXC1 (* skoXC1 (/ (- 1.) 8.)))))))))))) 48.) (> (* skoXC1 (* skoXC1 (+ (- 80.) (* skoXC1 (* skoXC1 (+ 40. (* skoXC1 (* skoXC1 (+ (- 6.) (* skoXC1 (* skoXC1 (/ 1. 8.)))))))))))) (- 48.)) (<= (* skoXC1 (* skoXC1 (+ 24. (* skoXC1 (* skoXC1 (+ (- 10.) (* skoXC1 skoXC1))))))) 16.) (<= (* skoXC1 (* skoXC1 (/ 1. 2.))) 3.) (> (* skoXC1 (* skoXC1 (/ (- 1.) 2.))) (- 3.)) (> skoXC1 0.) (> (/ 7. 8.) skoXC1) (<= (* skoXC1 (+ (- 1.) (* skoXC1 (* skoXC1 (/ 1. 3.))))) 0.) (<= (* skoXC1 (* skoXC1 (/ (- 1.) 6.))) 1.) (<= (* skoXC1 (* skoXC1 (+ (/ (- 1.) 2.) (* skoXC1 (* skoXC1 (/ (- 1.) 6.)))))) 0.) (<= (* skoXC1 skoXC1) 2.) (<= (* skoXC1 (* skoXC1 (* skoXC1 (* skoXC1 (/ (- 2.) 3.))))) 0.) (<= (* skoXC1 (+ (- 1.) (* skoXC1 (* skoXC1 (/ (- 1.) 6.))))) 0.) (<= (* skoXC1 (* skoXC1 (/ 1. 3.))) 1.) (<= (* skoXC1 (* skoXC1 (+ 256. (* skoXC1 (* skoXC1 (+ (- 160.) (* skoXC1 (* skoXC1 (+ 32. (* skoXC1 (* skoXC1 (- 1.)))))))))))) 128.)) (succedent (> (* skoXC1 (* skoXC1 (* skoXC1 (* skoXC1 (+ (/ (- 80.) 3.) (* skoXC1 (* skoXC1 (+ (/ 128. 3.) (* skoXC1 (* skoXC1 (+ (/ (- 55.) 3.) (* skoXC1 (* skoXC1 (/ 5. 3.)))))))))))))) 0.)))
-----[end problem]-----

-----[begin problem]-----
% In Mathematica format:
Timing[Resolve[Exists[{skoXC1}, And[skoXC1*skoXC1*skoXC1*skoXC1*((32/15)+skoXC1*skoXC1*((-296/15)+skoXC1*skoXC1*((391/15)+skoXC1*skoXC1*((-146/15)+skoXC1*skoXC1*(3/4)))))<=0,skoXC1*skoXC1*((1/6)+skoXC1*skoXC1*(3/40))>-1,skoXC1*skoXC1*skoXC1*skoXC1*((32/15)+skoXC1*skoXC1*((-296/15)+skoXC1*skoXC1*((391/15)+skoXC1*skoXC1*((-146/15)+skoXC1*skoXC1*(3/4)))))<=0,skoXC1*skoXC1*((1/3)+skoXC1*skoXC1*(3/20))<=1,skoXC1*skoXC1*skoXC1*skoXC1*((-17/120)+skoXC1*skoXC1*(3/80))<=0,skoXC1*skoXC1*skoXC1*skoXC1*((-13/60)+skoXC1*skoXC1*(-3/10))<=0,skoXC1*skoXC1*((-1/2)+skoXC1*skoXC1*((7/120)+skoXC1*skoXC1*(-3/40)))<=0,skoXC1*skoXC1*((-1/6)+skoXC1*skoXC1*(-3/40))<=1,skoXC1*(-1+skoXC1*skoXC1*((1/3)+skoXC1*skoXC1*(3/20)))<=0,skoXC1*skoXC1>0,skoXC1*skoXC1*(80+skoXC1*skoXC1*(-40+skoXC1*skoXC1*(6+skoXC1*skoXC1*(-1/8))))<=48,skoXC1*skoXC1*(-80+skoXC1*skoXC1*(40+skoXC1*skoXC1*(-6+skoXC1*skoXC1*(1/8))))>-48,skoXC1*skoXC1*(24+skoXC1*skoXC1*(-10+skoXC1*skoXC1))<=16,skoXC1*skoXC1*(1/2)<=3,skoXC1*skoXC1*(-1/2)>-3,skoXC1>0,(7/8)>skoXC1,skoXC1*(-1+skoXC1*skoXC1*(1/3))<=0,skoXC1*skoXC1*(-1/6)<=1,skoXC1*skoXC1*((-1/2)+skoXC1*skoXC1*(-1/6))<=0,skoXC1*skoXC1<=2,skoXC1*skoXC1*skoXC1*skoXC1*(-2/3)<=0,skoXC1*(-1+skoXC1*skoXC1*(-1/6))<=0,skoXC1*skoXC1*(1/3)<=1,skoXC1*skoXC1*(256+skoXC1*skoXC1*(-160+skoXC1*skoXC1*(32+skoXC1*skoXC1*-1)))<=128,skoXC1*skoXC1*skoXC1*skoXC1*((-80/3)+skoXC1*skoXC1*((128/3)+skoXC1*skoXC1*((-55/3)+skoXC1*skoXC1*(5/3))))<=0]], Reals]]

% In QepcadB format:
(E skoXC1) [[(skoXC1 skoXC1 skoXC1 skoXC1 (32/15+(skoXC1 skoXC1 (-296/15+(skoXC1 skoXC1 (391/15+(skoXC1 skoXC1 (-146/15+(skoXC1 skoXC1 (3/4))))))))))<=0]/\[[-1<(skoXC1 skoXC1 (1/6+(skoXC1 skoXC1 (3/40))))]/\[[(skoXC1 skoXC1 skoXC1 skoXC1 (32/15+(skoXC1 skoXC1 (-296/15+(skoXC1 skoXC1 (391/15+(skoXC1 skoXC1 (-146/15+(skoXC1 skoXC1 (3/4))))))))))<=0]/\[[(skoXC1 skoXC1 (1/3+(skoXC1 skoXC1 (3/20))))<=1]/\[[(skoXC1 skoXC1 skoXC1 skoXC1 (-17/120+(skoXC1 skoXC1 (3/80))))<=0]/\[[(skoXC1 skoXC1 skoXC1 skoXC1 (-13/60+(skoXC1 skoXC1 (-3/10))))<=0]/\[[(skoXC1 skoXC1 (-1/2+(skoXC1 skoXC1 (7/120+(skoXC1 skoXC1 (-3/40))))))<=0]/\[[(skoXC1 skoXC1 (-1/6+(skoXC1 skoXC1 (-3/40))))<=1]/\[[(skoXC1 (-1+(skoXC1 skoXC1 (1/3+(skoXC1 skoXC1 (3/20))))))<=0]/\[[0<(skoXC1 skoXC1)]/\[[(skoXC1 skoXC1 (80+(skoXC1 skoXC1 (-40+(skoXC1 skoXC1 (6+(skoXC1 skoXC1 (-1/8))))))))<=48]/\[[-48<(skoXC1 skoXC1 (-80+(skoXC1 skoXC1 (40+(skoXC1 skoXC1 (-6+(skoXC1 skoXC1 (1/8))))))))]/\[[(skoXC1 skoXC1 (24+(skoXC1 skoXC1 (-10+(skoXC1 skoXC1)))))<=16]/\[[(skoXC1 skoXC1 (1/2))<=3]/\[[-3<(skoXC1 skoXC1 (-1/2))]/\[[0<skoXC1]/\[[skoXC1<7/8]/\[[(skoXC1 (-1+(skoXC1 skoXC1 (1/3))))<=0]/\[[(skoXC1 skoXC1 (-1/6))<=1]/\[[(skoXC1 skoXC1 (-1/2+(skoXC1 skoXC1 (-1/6))))<=0]/\[[(skoXC1 skoXC1)<=2]/\[[(skoXC1 skoXC1 skoXC1 skoXC1 (-2/3))<=0]/\[[(skoXC1 (-1+(skoXC1 skoXC1 (-1/6))))<=0]/\[[(skoXC1 skoXC1 (1/3))<=1]/\[[(skoXC1 skoXC1 (256+(skoXC1 skoXC1 (-160+(skoXC1 skoXC1 (32+(skoXC1 skoXC1 (-1))))))))<=128]/\[(skoXC1 skoXC1 skoXC1 skoXC1 (-80/3+(skoXC1 skoXC1 (128/3+(skoXC1 skoXC1 (-55/3+(skoXC1 skoXC1 (5/3))))))))<=0]]]]]]]]]]]]]]]]]]]]]]]]]].

% In SMTLib2 format:
(declare-fun skoXC1 () Real) (assert (and (<= (* skoXC1 (* skoXC1 (* skoXC1 (* skoXC1 (+ (/ 32. 15.) (* skoXC1 (* skoXC1 (+ (/ (- 296.) 15.) (* skoXC1 (* skoXC1 (+ (/ 391. 15.) (* skoXC1 (* skoXC1 (+ (/ (- 146.) 15.) (* skoXC1 (* skoXC1 (/ 3. 4.))))))))))))))))) 0.) (and (> (* skoXC1 (* skoXC1 (+ (/ 1. 6.) (* skoXC1 (* skoXC1 (/ 3. 40.)))))) (- 1.)) (and (<= (* skoXC1 (* skoXC1 (* skoXC1 (* skoXC1 (+ (/ 32. 15.) (* skoXC1 (* skoXC1 (+ (/ (- 296.) 15.) (* skoXC1 (* skoXC1 (+ (/ 391. 15.) (* skoXC1 (* skoXC1 (+ (/ (- 146.) 15.) (* skoXC1 (* skoXC1 (/ 3. 4.))))))))))))))))) 0.) (and (<= (* skoXC1 (* skoXC1 (+ (/ 1. 3.) (* skoXC1 (* skoXC1 (/ 3. 20.)))))) 1.) (and (<= (* skoXC1 (* skoXC1 (* skoXC1 (* skoXC1 (+ (/ (- 17.) 120.) (* skoXC1 (* skoXC1 (/ 3. 80.)))))))) 0.) (and (<= (* skoXC1 (* skoXC1 (* skoXC1 (* skoXC1 (+ (/ (- 13.) 60.) (* skoXC1 (* skoXC1 (/ (- 3.) 10.)))))))) 0.) (and (<= (* skoXC1 (* skoXC1 (+ (/ (- 1.) 2.) (* skoXC1 (* skoXC1 (+ (/ 7. 120.) (* skoXC1 (* skoXC1 (/ (- 3.) 40.))))))))) 0.) (and (<= (* skoXC1 (* skoXC1 (+ (/ (- 1.) 6.) (* skoXC1 (* skoXC1 (/ (- 3.) 40.)))))) 1.) (and (<= (* skoXC1 (+ (- 1.) (* skoXC1 (* skoXC1 (+ (/ 1. 3.) (* skoXC1 (* skoXC1 (/ 3. 20.)))))))) 0.) (and (> (* skoXC1 skoXC1) 0.) (and (<= (* skoXC1 (* skoXC1 (+ 80. (* skoXC1 (* skoXC1 (+ (- 40.) (* skoXC1 (* skoXC1 (+ 6. (* skoXC1 (* skoXC1 (/ (- 1.) 8.)))))))))))) 48.) (and (> (* skoXC1 (* skoXC1 (+ (- 80.) (* skoXC1 (* skoXC1 (+ 40. (* skoXC1 (* skoXC1 (+ (- 6.) (* skoXC1 (* skoXC1 (/ 1. 8.)))))))))))) (- 48.)) (and (<= (* skoXC1 (* skoXC1 (+ 24. (* skoXC1 (* skoXC1 (+ (- 10.) (* skoXC1 skoXC1))))))) 16.) (and (<= (* skoXC1 (* skoXC1 (/ 1. 2.))) 3.) (and (> (* skoXC1 (* skoXC1 (/ (- 1.) 2.))) (- 3.)) (and (> skoXC1 0.) (and (> (/ 7. 8.) skoXC1) (and (<= (* skoXC1 (+ (- 1.) (* skoXC1 (* skoXC1 (/ 1. 3.))))) 0.) (and (<= (* skoXC1 (* skoXC1 (/ (- 1.) 6.))) 1.) (and (<= (* skoXC1 (* skoXC1 (+ (/ (- 1.) 2.) (* skoXC1 (* skoXC1 (/ (- 1.) 6.)))))) 0.) (and (<= (* skoXC1 skoXC1) 2.) (and (<= (* skoXC1 (* skoXC1 (* skoXC1 (* skoXC1 (/ (- 2.) 3.))))) 0.) (and (<= (* skoXC1 (+ (- 1.) (* skoXC1 (* skoXC1 (/ (- 1.) 6.))))) 0.) (and (<= (* skoXC1 (* skoXC1 (/ 1. 3.))) 1.) (and (<= (* skoXC1 (* skoXC1 (+ 256. (* skoXC1 (* skoXC1 (+ (- 160.) (* skoXC1 (* skoXC1 (+ 32. (* skoXC1 (* skoXC1 (- 1.)))))))))))) 128.) (<= (* skoXC1 (* skoXC1 (* skoXC1 (* skoXC1 (+ (/ (- 80.) 3.) (* skoXC1 (* skoXC1 (+ (/ 128. 3.) (* skoXC1 (* skoXC1 (+ (/ (- 55.) 3.) (* skoXC1 (* skoXC1 (/ 5. 3.)))))))))))))) 0.)))))))))))))))))))))))))))

% In GRF format:
(sequent " MetiTarski formula " (antecedent (<= (* skoXC1 (* skoXC1 (* skoXC1 (* skoXC1 (+ (/ 32. 15.) (* skoXC1 (* skoXC1 (+ (/ (- 296.) 15.) (* skoXC1 (* skoXC1 (+ (/ 391. 15.) (* skoXC1 (* skoXC1 (+ (/ (- 146.) 15.) (* skoXC1 (* skoXC1 (/ 3. 4.))))))))))))))))) 0.) (> (* skoXC1 (* skoXC1 (+ (/ 1. 6.) (* skoXC1 (* skoXC1 (/ 3. 40.)))))) (- 1.)) (<= (* skoXC1 (* skoXC1 (* skoXC1 (* skoXC1 (+ (/ 32. 15.) (* skoXC1 (* skoXC1 (+ (/ (- 296.) 15.) (* skoXC1 (* skoXC1 (+ (/ 391. 15.) (* skoXC1 (* skoXC1 (+ (/ (- 146.) 15.) (* skoXC1 (* skoXC1 (/ 3. 4.))))))))))))))))) 0.) (<= (* skoXC1 (* skoXC1 (+ (/ 1. 3.) (* skoXC1 (* skoXC1 (/ 3. 20.)))))) 1.) (<= (* skoXC1 (* skoXC1 (* skoXC1 (* skoXC1 (+ (/ (- 17.) 120.) (* skoXC1 (* skoXC1 (/ 3. 80.)))))))) 0.) (<= (* skoXC1 (* skoXC1 (* skoXC1 (* skoXC1 (+ (/ (- 13.) 60.) (* skoXC1 (* skoXC1 (/ (- 3.) 10.)))))))) 0.) (<= (* skoXC1 (* skoXC1 (+ (/ (- 1.) 2.) (* skoXC1 (* skoXC1 (+ (/ 7. 120.) (* skoXC1 (* skoXC1 (/ (- 3.) 40.))))))))) 0.) (<= (* skoXC1 (* skoXC1 (+ (/ (- 1.) 6.) (* skoXC1 (* skoXC1 (/ (- 3.) 40.)))))) 1.) (<= (* skoXC1 (+ (- 1.) (* skoXC1 (* skoXC1 (+ (/ 1. 3.) (* skoXC1 (* skoXC1 (/ 3. 20.)))))))) 0.) (> (* skoXC1 skoXC1) 0.) (<= (* skoXC1 (* skoXC1 (+ 80. (* skoXC1 (* skoXC1 (+ (- 40.) (* skoXC1 (* skoXC1 (+ 6. (* skoXC1 (* skoXC1 (/ (- 1.) 8.)))))))))))) 48.) (> (* skoXC1 (* skoXC1 (+ (- 80.) (* skoXC1 (* skoXC1 (+ 40. (* skoXC1 (* skoXC1 (+ (- 6.) (* skoXC1 (* skoXC1 (/ 1. 8.)))))))))))) (- 48.)) (<= (* skoXC1 (* skoXC1 (+ 24. (* skoXC1 (* skoXC1 (+ (- 10.) (* skoXC1 skoXC1))))))) 16.) (<= (* skoXC1 (* skoXC1 (/ 1. 2.))) 3.) (> (* skoXC1 (* skoXC1 (/ (- 1.) 2.))) (- 3.)) (> skoXC1 0.) (> (/ 7. 8.) skoXC1) (<= (* skoXC1 (+ (- 1.) (* skoXC1 (* skoXC1 (/ 1. 3.))))) 0.) (<= (* skoXC1 (* skoXC1 (/ (- 1.) 6.))) 1.) (<= (* skoXC1 (* skoXC1 (+ (/ (- 1.) 2.) (* skoXC1 (* skoXC1 (/ (- 1.) 6.)))))) 0.) (<= (* skoXC1 skoXC1) 2.) (<= (* skoXC1 (* skoXC1 (* skoXC1 (* skoXC1 (/ (- 2.) 3.))))) 0.) (<= (* skoXC1 (+ (- 1.) (* skoXC1 (* skoXC1 (/ (- 1.) 6.))))) 0.) (<= (* skoXC1 (* skoXC1 (/ 1. 3.))) 1.) (<= (* skoXC1 (* skoXC1 (+ 256. (* skoXC1 (* skoXC1 (+ (- 160.) (* skoXC1 (* skoXC1 (+ 32. (* skoXC1 (* skoXC1 (- 1.)))))))))))) 128.)) (succedent (> (* skoXC1 (* skoXC1 (* skoXC1 (* skoXC1 (+ (/ (- 80.) 3.) (* skoXC1 (* skoXC1 (+ (/ 128. 3.) (* skoXC1 (* skoXC1 (+ (/ (- 55.) 3.) (* skoXC1 (* skoXC1 (/ 5. 3.)))))))))))))) 0.)))
-----[end problem]-----

-----[begin problem]-----
% In Mathematica format:
Timing[Resolve[Exists[{skoXC1}, And[skoXC1*skoXC1*((1/6)+skoXC1*skoXC1*(3/40))<=-1,skoXC1*skoXC1*skoXC1*skoXC1*((32/15)+skoXC1*skoXC1*((-296/15)+skoXC1*skoXC1*((391/15)+skoXC1*skoXC1*((-146/15)+skoXC1*skoXC1*(3/4)))))>0,skoXC1*skoXC1*skoXC1*skoXC1*((32/15)+skoXC1*skoXC1*((-296/15)+skoXC1*skoXC1*((391/15)+skoXC1*skoXC1*((-146/15)+skoXC1*skoXC1*(3/4)))))<=0,skoXC1*skoXC1*((1/3)+skoXC1*skoXC1*(3/20))<=1,skoXC1*skoXC1*skoXC1*skoXC1*((-17/120)+skoXC1*skoXC1*(3/80))<=0,skoXC1*skoXC1*skoXC1*skoXC1*((-13/60)+skoXC1*skoXC1*(-3/10))<=0,skoXC1*skoXC1*((-1/2)+skoXC1*skoXC1*((7/120)+skoXC1*skoXC1*(-3/40)))<=0,skoXC1*skoXC1*((-1/6)+skoXC1*skoXC1*(-3/40))<=1,skoXC1*(-1+skoXC1*skoXC1*((1/3)+skoXC1*skoXC1*(3/20)))<=0,skoXC1*skoXC1>0,skoXC1*skoXC1*(80+skoXC1*skoXC1*(-40+skoXC1*skoXC1*(6+skoXC1*skoXC1*(-1/8))))<=48,skoXC1*skoXC1*(-80+skoXC1*skoXC1*(40+skoXC1*skoXC1*(-6+skoXC1*skoXC1*(1/8))))>-48,skoXC1*skoXC1*(24+skoXC1*skoXC1*(-10+skoXC1*skoXC1))<=16,skoXC1*skoXC1*(1/2)<=3,skoXC1*skoXC1*(-1/2)>-3,skoXC1>0,(7/8)>skoXC1,skoXC1*(-1+skoXC1*skoXC1*(1/3))<=0,skoXC1*skoXC1*(-1/6)<=1,skoXC1*skoXC1*((-1/2)+skoXC1*skoXC1*(-1/6))<=0,skoXC1*skoXC1<=2,skoXC1*skoXC1*skoXC1*skoXC1*(-2/3)<=0,skoXC1*(-1+skoXC1*skoXC1*(-1/6))<=0,skoXC1*skoXC1*(1/3)<=1,skoXC1*skoXC1*(256+skoXC1*skoXC1*(-160+skoXC1*skoXC1*(32+skoXC1*skoXC1*-1)))<=128,skoXC1*skoXC1*skoXC1*skoXC1*((-80/3)+skoXC1*skoXC1*((128/3)+skoXC1*skoXC1*((-55/3)+skoXC1*skoXC1*(5/3))))<=0]], Reals]]

% In QepcadB format:
(E skoXC1) [[(skoXC1 skoXC1 (1/6+(skoXC1 skoXC1 (3/40))))<=-1]/\[[0<(skoXC1 skoXC1 skoXC1 skoXC1 (32/15+(skoXC1 skoXC1 (-296/15+(skoXC1 skoXC1 (391/15+(skoXC1 skoXC1 (-146/15+(skoXC1 skoXC1 (3/4))))))))))]/\[[(skoXC1 skoXC1 skoXC1 skoXC1 (32/15+(skoXC1 skoXC1 (-296/15+(skoXC1 skoXC1 (391/15+(skoXC1 skoXC1 (-146/15+(skoXC1 skoXC1 (3/4))))))))))<=0]/\[[(skoXC1 skoXC1 (1/3+(skoXC1 skoXC1 (3/20))))<=1]/\[[(skoXC1 skoXC1 skoXC1 skoXC1 (-17/120+(skoXC1 skoXC1 (3/80))))<=0]/\[[(skoXC1 skoXC1 skoXC1 skoXC1 (-13/60+(skoXC1 skoXC1 (-3/10))))<=0]/\[[(skoXC1 skoXC1 (-1/2+(skoXC1 skoXC1 (7/120+(skoXC1 skoXC1 (-3/40))))))<=0]/\[[(skoXC1 skoXC1 (-1/6+(skoXC1 skoXC1 (-3/40))))<=1]/\[[(skoXC1 (-1+(skoXC1 skoXC1 (1/3+(skoXC1 skoXC1 (3/20))))))<=0]/\[[0<(skoXC1 skoXC1)]/\[[(skoXC1 skoXC1 (80+(skoXC1 skoXC1 (-40+(skoXC1 skoXC1 (6+(skoXC1 skoXC1 (-1/8))))))))<=48]/\[[-48<(skoXC1 skoXC1 (-80+(skoXC1 skoXC1 (40+(skoXC1 skoXC1 (-6+(skoXC1 skoXC1 (1/8))))))))]/\[[(skoXC1 skoXC1 (24+(skoXC1 skoXC1 (-10+(skoXC1 skoXC1)))))<=16]/\[[(skoXC1 skoXC1 (1/2))<=3]/\[[-3<(skoXC1 skoXC1 (-1/2))]/\[[0<skoXC1]/\[[skoXC1<7/8]/\[[(skoXC1 (-1+(skoXC1 skoXC1 (1/3))))<=0]/\[[(skoXC1 skoXC1 (-1/6))<=1]/\[[(skoXC1 skoXC1 (-1/2+(skoXC1 skoXC1 (-1/6))))<=0]/\[[(skoXC1 skoXC1)<=2]/\[[(skoXC1 skoXC1 skoXC1 skoXC1 (-2/3))<=0]/\[[(skoXC1 (-1+(skoXC1 skoXC1 (-1/6))))<=0]/\[[(skoXC1 skoXC1 (1/3))<=1]/\[[(skoXC1 skoXC1 (256+(skoXC1 skoXC1 (-160+(skoXC1 skoXC1 (32+(skoXC1 skoXC1 (-1))))))))<=128]/\[(skoXC1 skoXC1 skoXC1 skoXC1 (-80/3+(skoXC1 skoXC1 (128/3+(skoXC1 skoXC1 (-55/3+(skoXC1 skoXC1 (5/3))))))))<=0]]]]]]]]]]]]]]]]]]]]]]]]]].

% In SMTLib2 format:
(declare-fun skoXC1 () Real) (assert (and (<= (* skoXC1 (* skoXC1 (+ (/ 1. 6.) (* skoXC1 (* skoXC1 (/ 3. 40.)))))) (- 1.)) (and (> (* skoXC1 (* skoXC1 (* skoXC1 (* skoXC1 (+ (/ 32. 15.) (* skoXC1 (* skoXC1 (+ (/ (- 296.) 15.) (* skoXC1 (* skoXC1 (+ (/ 391. 15.) (* skoXC1 (* skoXC1 (+ (/ (- 146.) 15.) (* skoXC1 (* skoXC1 (/ 3. 4.))))))))))))))))) 0.) (and (<= (* skoXC1 (* skoXC1 (* skoXC1 (* skoXC1 (+ (/ 32. 15.) (* skoXC1 (* skoXC1 (+ (/ (- 296.) 15.) (* skoXC1 (* skoXC1 (+ (/ 391. 15.) (* skoXC1 (* skoXC1 (+ (/ (- 146.) 15.) (* skoXC1 (* skoXC1 (/ 3. 4.))))))))))))))))) 0.) (and (<= (* skoXC1 (* skoXC1 (+ (/ 1. 3.) (* skoXC1 (* skoXC1 (/ 3. 20.)))))) 1.) (and (<= (* skoXC1 (* skoXC1 (* skoXC1 (* skoXC1 (+ (/ (- 17.) 120.) (* skoXC1 (* skoXC1 (/ 3. 80.)))))))) 0.) (and (<= (* skoXC1 (* skoXC1 (* skoXC1 (* skoXC1 (+ (/ (- 13.) 60.) (* skoXC1 (* skoXC1 (/ (- 3.) 10.)))))))) 0.) (and (<= (* skoXC1 (* skoXC1 (+ (/ (- 1.) 2.) (* skoXC1 (* skoXC1 (+ (/ 7. 120.) (* skoXC1 (* skoXC1 (/ (- 3.) 40.))))))))) 0.) (and (<= (* skoXC1 (* skoXC1 (+ (/ (- 1.) 6.) (* skoXC1 (* skoXC1 (/ (- 3.) 40.)))))) 1.) (and (<= (* skoXC1 (+ (- 1.) (* skoXC1 (* skoXC1 (+ (/ 1. 3.) (* skoXC1 (* skoXC1 (/ 3. 20.)))))))) 0.) (and (> (* skoXC1 skoXC1) 0.) (and (<= (* skoXC1 (* skoXC1 (+ 80. (* skoXC1 (* skoXC1 (+ (- 40.) (* skoXC1 (* skoXC1 (+ 6. (* skoXC1 (* skoXC1 (/ (- 1.) 8.)))))))))))) 48.) (and (> (* skoXC1 (* skoXC1 (+ (- 80.) (* skoXC1 (* skoXC1 (+ 40. (* skoXC1 (* skoXC1 (+ (- 6.) (* skoXC1 (* skoXC1 (/ 1. 8.)))))))))))) (- 48.)) (and (<= (* skoXC1 (* skoXC1 (+ 24. (* skoXC1 (* skoXC1 (+ (- 10.) (* skoXC1 skoXC1))))))) 16.) (and (<= (* skoXC1 (* skoXC1 (/ 1. 2.))) 3.) (and (> (* skoXC1 (* skoXC1 (/ (- 1.) 2.))) (- 3.)) (and (> skoXC1 0.) (and (> (/ 7. 8.) skoXC1) (and (<= (* skoXC1 (+ (- 1.) (* skoXC1 (* skoXC1 (/ 1. 3.))))) 0.) (and (<= (* skoXC1 (* skoXC1 (/ (- 1.) 6.))) 1.) (and (<= (* skoXC1 (* skoXC1 (+ (/ (- 1.) 2.) (* skoXC1 (* skoXC1 (/ (- 1.) 6.)))))) 0.) (and (<= (* skoXC1 skoXC1) 2.) (and (<= (* skoXC1 (* skoXC1 (* skoXC1 (* skoXC1 (/ (- 2.) 3.))))) 0.) (and (<= (* skoXC1 (+ (- 1.) (* skoXC1 (* skoXC1 (/ (- 1.) 6.))))) 0.) (and (<= (* skoXC1 (* skoXC1 (/ 1. 3.))) 1.) (and (<= (* skoXC1 (* skoXC1 (+ 256. (* skoXC1 (* skoXC1 (+ (- 160.) (* skoXC1 (* skoXC1 (+ 32. (* skoXC1 (* skoXC1 (- 1.)))))))))))) 128.) (<= (* skoXC1 (* skoXC1 (* skoXC1 (* skoXC1 (+ (/ (- 80.) 3.) (* skoXC1 (* skoXC1 (+ (/ 128. 3.) (* skoXC1 (* skoXC1 (+ (/ (- 55.) 3.) (* skoXC1 (* skoXC1 (/ 5. 3.)))))))))))))) 0.)))))))))))))))))))))))))))

% In GRF format:
(sequent " MetiTarski formula " (antecedent (<= (* skoXC1 (* skoXC1 (+ (/ 1. 6.) (* skoXC1 (* skoXC1 (/ 3. 40.)))))) (- 1.)) (> (* skoXC1 (* skoXC1 (* skoXC1 (* skoXC1 (+ (/ 32. 15.) (* skoXC1 (* skoXC1 (+ (/ (- 296.) 15.) (* skoXC1 (* skoXC1 (+ (/ 391. 15.) (* skoXC1 (* skoXC1 (+ (/ (- 146.) 15.) (* skoXC1 (* skoXC1 (/ 3. 4.))))))))))))))))) 0.) (<= (* skoXC1 (* skoXC1 (* skoXC1 (* skoXC1 (+ (/ 32. 15.) (* skoXC1 (* skoXC1 (+ (/ (- 296.) 15.) (* skoXC1 (* skoXC1 (+ (/ 391. 15.) (* skoXC1 (* skoXC1 (+ (/ (- 146.) 15.) (* skoXC1 (* skoXC1 (/ 3. 4.))))))))))))))))) 0.) (<= (* skoXC1 (* skoXC1 (+ (/ 1. 3.) (* skoXC1 (* skoXC1 (/ 3. 20.)))))) 1.) (<= (* skoXC1 (* skoXC1 (* skoXC1 (* skoXC1 (+ (/ (- 17.) 120.) (* skoXC1 (* skoXC1 (/ 3. 80.)))))))) 0.) (<= (* skoXC1 (* skoXC1 (* skoXC1 (* skoXC1 (+ (/ (- 13.) 60.) (* skoXC1 (* skoXC1 (/ (- 3.) 10.)))))))) 0.) (<= (* skoXC1 (* skoXC1 (+ (/ (- 1.) 2.) (* skoXC1 (* skoXC1 (+ (/ 7. 120.) (* skoXC1 (* skoXC1 (/ (- 3.) 40.))))))))) 0.) (<= (* skoXC1 (* skoXC1 (+ (/ (- 1.) 6.) (* skoXC1 (* skoXC1 (/ (- 3.) 40.)))))) 1.) (<= (* skoXC1 (+ (- 1.) (* skoXC1 (* skoXC1 (+ (/ 1. 3.) (* skoXC1 (* skoXC1 (/ 3. 20.)))))))) 0.) (> (* skoXC1 skoXC1) 0.) (<= (* skoXC1 (* skoXC1 (+ 80. (* skoXC1 (* skoXC1 (+ (- 40.) (* skoXC1 (* skoXC1 (+ 6. (* skoXC1 (* skoXC1 (/ (- 1.) 8.)))))))))))) 48.) (> (* skoXC1 (* skoXC1 (+ (- 80.) (* skoXC1 (* skoXC1 (+ 40. (* skoXC1 (* skoXC1 (+ (- 6.) (* skoXC1 (* skoXC1 (/ 1. 8.)))))))))))) (- 48.)) (<= (* skoXC1 (* skoXC1 (+ 24. (* skoXC1 (* skoXC1 (+ (- 10.) (* skoXC1 skoXC1))))))) 16.) (<= (* skoXC1 (* skoXC1 (/ 1. 2.))) 3.) (> (* skoXC1 (* skoXC1 (/ (- 1.) 2.))) (- 3.)) (> skoXC1 0.) (> (/ 7. 8.) skoXC1) (<= (* skoXC1 (+ (- 1.) (* skoXC1 (* skoXC1 (/ 1. 3.))))) 0.) (<= (* skoXC1 (* skoXC1 (/ (- 1.) 6.))) 1.) (<= (* skoXC1 (* skoXC1 (+ (/ (- 1.) 2.) (* skoXC1 (* skoXC1 (/ (- 1.) 6.)))))) 0.) (<= (* skoXC1 skoXC1) 2.) (<= (* skoXC1 (* skoXC1 (* skoXC1 (* skoXC1 (/ (- 2.) 3.))))) 0.) (<= (* skoXC1 (+ (- 1.) (* skoXC1 (* skoXC1 (/ (- 1.) 6.))))) 0.) (<= (* skoXC1 (* skoXC1 (/ 1. 3.))) 1.) (<= (* skoXC1 (* skoXC1 (+ 256. (* skoXC1 (* skoXC1 (+ (- 160.) (* skoXC1 (* skoXC1 (+ 32. (* skoXC1 (* skoXC1 (- 1.)))))))))))) 128.)) (succedent (> (* skoXC1 (* skoXC1 (* skoXC1 (* skoXC1 (+ (/ (- 80.) 3.) (* skoXC1 (* skoXC1 (+ (/ 128. 3.) (* skoXC1 (* skoXC1 (+ (/ (- 55.) 3.) (* skoXC1 (* skoXC1 (/ 5. 3.)))))))))))))) 0.)))
-----[end problem]-----

-----[begin problem]-----
% In Mathematica format:
Timing[Resolve[Exists[{skoXC1}, And[skoXC1*skoXC1*((-1/6)+skoXC1*skoXC1*(-3/40))<=1,skoXC1*skoXC1*skoXC1*skoXC1*((32/15)+skoXC1*skoXC1*((-296/15)+skoXC1*skoXC1*((391/15)+skoXC1*skoXC1*((-146/15)+skoXC1*skoXC1*(3/4)))))<=0,skoXC1*skoXC1*((1/3)+skoXC1*skoXC1*(3/20))<=1,skoXC1*skoXC1*skoXC1*skoXC1*((-17/120)+skoXC1*skoXC1*(3/80))<=0,skoXC1*skoXC1*skoXC1*skoXC1*((-13/60)+skoXC1*skoXC1*(-3/10))<=0,skoXC1*skoXC1*((-1/2)+skoXC1*skoXC1*((7/120)+skoXC1*skoXC1*(-3/40)))<=0,skoXC1*skoXC1*((-1/6)+skoXC1*skoXC1*(-3/40))<=1,skoXC1*(-1+skoXC1*skoXC1*((1/3)+skoXC1*skoXC1*(3/20)))<=0,skoXC1*skoXC1>0,skoXC1*skoXC1*(80+skoXC1*skoXC1*(-40+skoXC1*skoXC1*(6+skoXC1*skoXC1*(-1/8))))<=48,skoXC1*skoXC1*(-80+skoXC1*skoXC1*(40+skoXC1*skoXC1*(-6+skoXC1*skoXC1*(1/8))))>-48,skoXC1*skoXC1*(24+skoXC1*skoXC1*(-10+skoXC1*skoXC1))<=16,skoXC1*skoXC1*(1/2)<=3,skoXC1*skoXC1*(-1/2)>-3,skoXC1>0,(7/8)>skoXC1,skoXC1*(-1+skoXC1*skoXC1*(1/3))<=0,skoXC1*skoXC1*(-1/6)<=1,skoXC1*skoXC1*((-1/2)+skoXC1*skoXC1*(-1/6))<=0,skoXC1*skoXC1<=2,skoXC1*skoXC1*skoXC1*skoXC1*(-2/3)<=0,skoXC1*(-1+skoXC1*skoXC1*(-1/6))<=0,skoXC1*skoXC1*(1/3)<=1,skoXC1*skoXC1*(256+skoXC1*skoXC1*(-160+skoXC1*skoXC1*(32+skoXC1*skoXC1*-1)))<=128,skoXC1*skoXC1*skoXC1*skoXC1*((-80/3)+skoXC1*skoXC1*((128/3)+skoXC1*skoXC1*((-55/3)+skoXC1*skoXC1*(5/3))))<=0]], Reals]]

% In QepcadB format:
(E skoXC1) [[(skoXC1 skoXC1 (-1/6+(skoXC1 skoXC1 (-3/40))))<=1]/\[[(skoXC1 skoXC1 skoXC1 skoXC1 (32/15+(skoXC1 skoXC1 (-296/15+(skoXC1 skoXC1 (391/15+(skoXC1 skoXC1 (-146/15+(skoXC1 skoXC1 (3/4))))))))))<=0]/\[[(skoXC1 skoXC1 (1/3+(skoXC1 skoXC1 (3/20))))<=1]/\[[(skoXC1 skoXC1 skoXC1 skoXC1 (-17/120+(skoXC1 skoXC1 (3/80))))<=0]/\[[(skoXC1 skoXC1 skoXC1 skoXC1 (-13/60+(skoXC1 skoXC1 (-3/10))))<=0]/\[[(skoXC1 skoXC1 (-1/2+(skoXC1 skoXC1 (7/120+(skoXC1 skoXC1 (-3/40))))))<=0]/\[[(skoXC1 skoXC1 (-1/6+(skoXC1 skoXC1 (-3/40))))<=1]/\[[(skoXC1 (-1+(skoXC1 skoXC1 (1/3+(skoXC1 skoXC1 (3/20))))))<=0]/\[[0<(skoXC1 skoXC1)]/\[[(skoXC1 skoXC1 (80+(skoXC1 skoXC1 (-40+(skoXC1 skoXC1 (6+(skoXC1 skoXC1 (-1/8))))))))<=48]/\[[-48<(skoXC1 skoXC1 (-80+(skoXC1 skoXC1 (40+(skoXC1 skoXC1 (-6+(skoXC1 skoXC1 (1/8))))))))]/\[[(skoXC1 skoXC1 (24+(skoXC1 skoXC1 (-10+(skoXC1 skoXC1)))))<=16]/\[[(skoXC1 skoXC1 (1/2))<=3]/\[[-3<(skoXC1 skoXC1 (-1/2))]/\[[0<skoXC1]/\[[skoXC1<7/8]/\[[(skoXC1 (-1+(skoXC1 skoXC1 (1/3))))<=0]/\[[(skoXC1 skoXC1 (-1/6))<=1]/\[[(skoXC1 skoXC1 (-1/2+(skoXC1 skoXC1 (-1/6))))<=0]/\[[(skoXC1 skoXC1)<=2]/\[[(skoXC1 skoXC1 skoXC1 skoXC1 (-2/3))<=0]/\[[(skoXC1 (-1+(skoXC1 skoXC1 (-1/6))))<=0]/\[[(skoXC1 skoXC1 (1/3))<=1]/\[[(skoXC1 skoXC1 (256+(skoXC1 skoXC1 (-160+(skoXC1 skoXC1 (32+(skoXC1 skoXC1 (-1))))))))<=128]/\[(skoXC1 skoXC1 skoXC1 skoXC1 (-80/3+(skoXC1 skoXC1 (128/3+(skoXC1 skoXC1 (-55/3+(skoXC1 skoXC1 (5/3))))))))<=0]]]]]]]]]]]]]]]]]]]]]]]]].

% In SMTLib2 format:
(declare-fun skoXC1 () Real) (assert (and (<= (* skoXC1 (* skoXC1 (+ (/ (- 1.) 6.) (* skoXC1 (* skoXC1 (/ (- 3.) 40.)))))) 1.) (and (<= (* skoXC1 (* skoXC1 (* skoXC1 (* skoXC1 (+ (/ 32. 15.) (* skoXC1 (* skoXC1 (+ (/ (- 296.) 15.) (* skoXC1 (* skoXC1 (+ (/ 391. 15.) (* skoXC1 (* skoXC1 (+ (/ (- 146.) 15.) (* skoXC1 (* skoXC1 (/ 3. 4.))))))))))))))))) 0.) (and (<= (* skoXC1 (* skoXC1 (+ (/ 1. 3.) (* skoXC1 (* skoXC1 (/ 3. 20.)))))) 1.) (and (<= (* skoXC1 (* skoXC1 (* skoXC1 (* skoXC1 (+ (/ (- 17.) 120.) (* skoXC1 (* skoXC1 (/ 3. 80.)))))))) 0.) (and (<= (* skoXC1 (* skoXC1 (* skoXC1 (* skoXC1 (+ (/ (- 13.) 60.) (* skoXC1 (* skoXC1 (/ (- 3.) 10.)))))))) 0.) (and (<= (* skoXC1 (* skoXC1 (+ (/ (- 1.) 2.) (* skoXC1 (* skoXC1 (+ (/ 7. 120.) (* skoXC1 (* skoXC1 (/ (- 3.) 40.))))))))) 0.) (and (<= (* skoXC1 (* skoXC1 (+ (/ (- 1.) 6.) (* skoXC1 (* skoXC1 (/ (- 3.) 40.)))))) 1.) (and (<= (* skoXC1 (+ (- 1.) (* skoXC1 (* skoXC1 (+ (/ 1. 3.) (* skoXC1 (* skoXC1 (/ 3. 20.)))))))) 0.) (and (> (* skoXC1 skoXC1) 0.) (and (<= (* skoXC1 (* skoXC1 (+ 80. (* skoXC1 (* skoXC1 (+ (- 40.) (* skoXC1 (* skoXC1 (+ 6. (* skoXC1 (* skoXC1 (/ (- 1.) 8.)))))))))))) 48.) (and (> (* skoXC1 (* skoXC1 (+ (- 80.) (* skoXC1 (* skoXC1 (+ 40. (* skoXC1 (* skoXC1 (+ (- 6.) (* skoXC1 (* skoXC1 (/ 1. 8.)))))))))))) (- 48.)) (and (<= (* skoXC1 (* skoXC1 (+ 24. (* skoXC1 (* skoXC1 (+ (- 10.) (* skoXC1 skoXC1))))))) 16.) (and (<= (* skoXC1 (* skoXC1 (/ 1. 2.))) 3.) (and (> (* skoXC1 (* skoXC1 (/ (- 1.) 2.))) (- 3.)) (and (> skoXC1 0.) (and (> (/ 7. 8.) skoXC1) (and (<= (* skoXC1 (+ (- 1.) (* skoXC1 (* skoXC1 (/ 1. 3.))))) 0.) (and (<= (* skoXC1 (* skoXC1 (/ (- 1.) 6.))) 1.) (and (<= (* skoXC1 (* skoXC1 (+ (/ (- 1.) 2.) (* skoXC1 (* skoXC1 (/ (- 1.) 6.)))))) 0.) (and (<= (* skoXC1 skoXC1) 2.) (and (<= (* skoXC1 (* skoXC1 (* skoXC1 (* skoXC1 (/ (- 2.) 3.))))) 0.) (and (<= (* skoXC1 (+ (- 1.) (* skoXC1 (* skoXC1 (/ (- 1.) 6.))))) 0.) (and (<= (* skoXC1 (* skoXC1 (/ 1. 3.))) 1.) (and (<= (* skoXC1 (* skoXC1 (+ 256. (* skoXC1 (* skoXC1 (+ (- 160.) (* skoXC1 (* skoXC1 (+ 32. (* skoXC1 (* skoXC1 (- 1.)))))))))))) 128.) (<= (* skoXC1 (* skoXC1 (* skoXC1 (* skoXC1 (+ (/ (- 80.) 3.) (* skoXC1 (* skoXC1 (+ (/ 128. 3.) (* skoXC1 (* skoXC1 (+ (/ (- 55.) 3.) (* skoXC1 (* skoXC1 (/ 5. 3.)))))))))))))) 0.))))))))))))))))))))))))))

% In GRF format:
(sequent " MetiTarski formula " (antecedent (<= (* skoXC1 (* skoXC1 (+ (/ (- 1.) 6.) (* skoXC1 (* skoXC1 (/ (- 3.) 40.)))))) 1.) (<= (* skoXC1 (* skoXC1 (* skoXC1 (* skoXC1 (+ (/ 32. 15.) (* skoXC1 (* skoXC1 (+ (/ (- 296.) 15.) (* skoXC1 (* skoXC1 (+ (/ 391. 15.) (* skoXC1 (* skoXC1 (+ (/ (- 146.) 15.) (* skoXC1 (* skoXC1 (/ 3. 4.))))))))))))))))) 0.) (<= (* skoXC1 (* skoXC1 (+ (/ 1. 3.) (* skoXC1 (* skoXC1 (/ 3. 20.)))))) 1.) (<= (* skoXC1 (* skoXC1 (* skoXC1 (* skoXC1 (+ (/ (- 17.) 120.) (* skoXC1 (* skoXC1 (/ 3. 80.)))))))) 0.) (<= (* skoXC1 (* skoXC1 (* skoXC1 (* skoXC1 (+ (/ (- 13.) 60.) (* skoXC1 (* skoXC1 (/ (- 3.) 10.)))))))) 0.) (<= (* skoXC1 (* skoXC1 (+ (/ (- 1.) 2.) (* skoXC1 (* skoXC1 (+ (/ 7. 120.) (* skoXC1 (* skoXC1 (/ (- 3.) 40.))))))))) 0.) (<= (* skoXC1 (* skoXC1 (+ (/ (- 1.) 6.) (* skoXC1 (* skoXC1 (/ (- 3.) 40.)))))) 1.) (<= (* skoXC1 (+ (- 1.) (* skoXC1 (* skoXC1 (+ (/ 1. 3.) (* skoXC1 (* skoXC1 (/ 3. 20.)))))))) 0.) (> (* skoXC1 skoXC1) 0.) (<= (* skoXC1 (* skoXC1 (+ 80. (* skoXC1 (* skoXC1 (+ (- 40.) (* skoXC1 (* skoXC1 (+ 6. (* skoXC1 (* skoXC1 (/ (- 1.) 8.)))))))))))) 48.) (> (* skoXC1 (* skoXC1 (+ (- 80.) (* skoXC1 (* skoXC1 (+ 40. (* skoXC1 (* skoXC1 (+ (- 6.) (* skoXC1 (* skoXC1 (/ 1. 8.)))))))))))) (- 48.)) (<= (* skoXC1 (* skoXC1 (+ 24. (* skoXC1 (* skoXC1 (+ (- 10.) (* skoXC1 skoXC1))))))) 16.) (<= (* skoXC1 (* skoXC1 (/ 1. 2.))) 3.) (> (* skoXC1 (* skoXC1 (/ (- 1.) 2.))) (- 3.)) (> skoXC1 0.) (> (/ 7. 8.) skoXC1) (<= (* skoXC1 (+ (- 1.) (* skoXC1 (* skoXC1 (/ 1. 3.))))) 0.) (<= (* skoXC1 (* skoXC1 (/ (- 1.) 6.))) 1.) (<= (* skoXC1 (* skoXC1 (+ (/ (- 1.) 2.) (* skoXC1 (* skoXC1 (/ (- 1.) 6.)))))) 0.) (<= (* skoXC1 skoXC1) 2.) (<= (* skoXC1 (* skoXC1 (* skoXC1 (* skoXC1 (/ (- 2.) 3.))))) 0.) (<= (* skoXC1 (+ (- 1.) (* skoXC1 (* skoXC1 (/ (- 1.) 6.))))) 0.) (<= (* skoXC1 (* skoXC1 (/ 1. 3.))) 1.) (<= (* skoXC1 (* skoXC1 (+ 256. (* skoXC1 (* skoXC1 (+ (- 160.) (* skoXC1 (* skoXC1 (+ 32. (* skoXC1 (* skoXC1 (- 1.)))))))))))) 128.)) (succedent (> (* skoXC1 (* skoXC1 (* skoXC1 (* skoXC1 (+ (/ (- 80.) 3.) (* skoXC1 (* skoXC1 (+ (/ 128. 3.) (* skoXC1 (* skoXC1 (+ (/ (- 55.) 3.) (* skoXC1 (* skoXC1 (/ 5. 3.)))))))))))))) 0.)))
-----[end problem]-----

-----[begin problem]-----
% In Mathematica format:
Timing[Resolve[Exists[{skoXC1}, And[skoXC1*skoXC1*skoXC1*skoXC1*((32/15)+skoXC1*skoXC1*((-296/15)+skoXC1*skoXC1*((391/15)+skoXC1*skoXC1*((-146/15)+skoXC1*skoXC1*(3/4)))))<=0,skoXC1*skoXC1*skoXC1*skoXC1*((32/15)+skoXC1*skoXC1*((-296/15)+skoXC1*skoXC1*((391/15)+skoXC1*skoXC1*((-146/15)+skoXC1*skoXC1*(3/4)))))<=0,skoXC1*skoXC1*((1/3)+skoXC1*skoXC1*(3/20))<=1,skoXC1*skoXC1*skoXC1*skoXC1*((-17/120)+skoXC1*skoXC1*(3/80))<=0,skoXC1*skoXC1*skoXC1*skoXC1*((-13/60)+skoXC1*skoXC1*(-3/10))<=0,skoXC1*skoXC1*((-1/2)+skoXC1*skoXC1*((7/120)+skoXC1*skoXC1*(-3/40)))<=0,skoXC1*skoXC1*((-1/6)+skoXC1*skoXC1*(-3/40))<=1,skoXC1*(-1+skoXC1*skoXC1*((1/3)+skoXC1*skoXC1*(3/20)))<=0,skoXC1*skoXC1>0,skoXC1*skoXC1*(80+skoXC1*skoXC1*(-40+skoXC1*skoXC1*(6+skoXC1*skoXC1*(-1/8))))<=48,skoXC1*skoXC1*(-80+skoXC1*skoXC1*(40+skoXC1*skoXC1*(-6+skoXC1*skoXC1*(1/8))))>-48,skoXC1*skoXC1*(24+skoXC1*skoXC1*(-10+skoXC1*skoXC1))<=16,skoXC1*skoXC1*(1/2)<=3,skoXC1*skoXC1*(-1/2)>-3,skoXC1>0,(7/8)>skoXC1,skoXC1*(-1+skoXC1*skoXC1*(1/3))<=0,skoXC1*skoXC1*(-1/6)<=1,skoXC1*skoXC1*((-1/2)+skoXC1*skoXC1*(-1/6))<=0,skoXC1*skoXC1<=2,skoXC1*skoXC1*skoXC1*skoXC1*(-2/3)<=0,skoXC1*(-1+skoXC1*skoXC1*(-1/6))<=0,skoXC1*skoXC1*(1/3)<=1,skoXC1*skoXC1*(256+skoXC1*skoXC1*(-160+skoXC1*skoXC1*(32+skoXC1*skoXC1*-1)))<=128,skoXC1*skoXC1*skoXC1*skoXC1*((-80/3)+skoXC1*skoXC1*((128/3)+skoXC1*skoXC1*((-55/3)+skoXC1*skoXC1*(5/3))))<=0]], Reals]]

% In QepcadB format:
(E skoXC1) [[(skoXC1 skoXC1 skoXC1 skoXC1 (32/15+(skoXC1 skoXC1 (-296/15+(skoXC1 skoXC1 (391/15+(skoXC1 skoXC1 (-146/15+(skoXC1 skoXC1 (3/4))))))))))<=0]/\[[(skoXC1 skoXC1 skoXC1 skoXC1 (32/15+(skoXC1 skoXC1 (-296/15+(skoXC1 skoXC1 (391/15+(skoXC1 skoXC1 (-146/15+(skoXC1 skoXC1 (3/4))))))))))<=0]/\[[(skoXC1 skoXC1 (1/3+(skoXC1 skoXC1 (3/20))))<=1]/\[[(skoXC1 skoXC1 skoXC1 skoXC1 (-17/120+(skoXC1 skoXC1 (3/80))))<=0]/\[[(skoXC1 skoXC1 skoXC1 skoXC1 (-13/60+(skoXC1 skoXC1 (-3/10))))<=0]/\[[(skoXC1 skoXC1 (-1/2+(skoXC1 skoXC1 (7/120+(skoXC1 skoXC1 (-3/40))))))<=0]/\[[(skoXC1 skoXC1 (-1/6+(skoXC1 skoXC1 (-3/40))))<=1]/\[[(skoXC1 (-1+(skoXC1 skoXC1 (1/3+(skoXC1 skoXC1 (3/20))))))<=0]/\[[0<(skoXC1 skoXC1)]/\[[(skoXC1 skoXC1 (80+(skoXC1 skoXC1 (-40+(skoXC1 skoXC1 (6+(skoXC1 skoXC1 (-1/8))))))))<=48]/\[[-48<(skoXC1 skoXC1 (-80+(skoXC1 skoXC1 (40+(skoXC1 skoXC1 (-6+(skoXC1 skoXC1 (1/8))))))))]/\[[(skoXC1 skoXC1 (24+(skoXC1 skoXC1 (-10+(skoXC1 skoXC1)))))<=16]/\[[(skoXC1 skoXC1 (1/2))<=3]/\[[-3<(skoXC1 skoXC1 (-1/2))]/\[[0<skoXC1]/\[[skoXC1<7/8]/\[[(skoXC1 (-1+(skoXC1 skoXC1 (1/3))))<=0]/\[[(skoXC1 skoXC1 (-1/6))<=1]/\[[(skoXC1 skoXC1 (-1/2+(skoXC1 skoXC1 (-1/6))))<=0]/\[[(skoXC1 skoXC1)<=2]/\[[(skoXC1 skoXC1 skoXC1 skoXC1 (-2/3))<=0]/\[[(skoXC1 (-1+(skoXC1 skoXC1 (-1/6))))<=0]/\[[(skoXC1 skoXC1 (1/3))<=1]/\[[(skoXC1 skoXC1 (256+(skoXC1 skoXC1 (-160+(skoXC1 skoXC1 (32+(skoXC1 skoXC1 (-1))))))))<=128]/\[(skoXC1 skoXC1 skoXC1 skoXC1 (-80/3+(skoXC1 skoXC1 (128/3+(skoXC1 skoXC1 (-55/3+(skoXC1 skoXC1 (5/3))))))))<=0]]]]]]]]]]]]]]]]]]]]]]]]].

% In SMTLib2 format:
(declare-fun skoXC1 () Real) (assert (and (<= (* skoXC1 (* skoXC1 (* skoXC1 (* skoXC1 (+ (/ 32. 15.) (* skoXC1 (* skoXC1 (+ (/ (- 296.) 15.) (* skoXC1 (* skoXC1 (+ (/ 391. 15.) (* skoXC1 (* skoXC1 (+ (/ (- 146.) 15.) (* skoXC1 (* skoXC1 (/ 3. 4.))))))))))))))))) 0.) (and (<= (* skoXC1 (* skoXC1 (* skoXC1 (* skoXC1 (+ (/ 32. 15.) (* skoXC1 (* skoXC1 (+ (/ (- 296.) 15.) (* skoXC1 (* skoXC1 (+ (/ 391. 15.) (* skoXC1 (* skoXC1 (+ (/ (- 146.) 15.) (* skoXC1 (* skoXC1 (/ 3. 4.))))))))))))))))) 0.) (and (<= (* skoXC1 (* skoXC1 (+ (/ 1. 3.) (* skoXC1 (* skoXC1 (/ 3. 20.)))))) 1.) (and (<= (* skoXC1 (* skoXC1 (* skoXC1 (* skoXC1 (+ (/ (- 17.) 120.) (* skoXC1 (* skoXC1 (/ 3. 80.)))))))) 0.) (and (<= (* skoXC1 (* skoXC1 (* skoXC1 (* skoXC1 (+ (/ (- 13.) 60.) (* skoXC1 (* skoXC1 (/ (- 3.) 10.)))))))) 0.) (and (<= (* skoXC1 (* skoXC1 (+ (/ (- 1.) 2.) (* skoXC1 (* skoXC1 (+ (/ 7. 120.) (* skoXC1 (* skoXC1 (/ (- 3.) 40.))))))))) 0.) (and (<= (* skoXC1 (* skoXC1 (+ (/ (- 1.) 6.) (* skoXC1 (* skoXC1 (/ (- 3.) 40.)))))) 1.) (and (<= (* skoXC1 (+ (- 1.) (* skoXC1 (* skoXC1 (+ (/ 1. 3.) (* skoXC1 (* skoXC1 (/ 3. 20.)))))))) 0.) (and (> (* skoXC1 skoXC1) 0.) (and (<= (* skoXC1 (* skoXC1 (+ 80. (* skoXC1 (* skoXC1 (+ (- 40.) (* skoXC1 (* skoXC1 (+ 6. (* skoXC1 (* skoXC1 (/ (- 1.) 8.)))))))))))) 48.) (and (> (* skoXC1 (* skoXC1 (+ (- 80.) (* skoXC1 (* skoXC1 (+ 40. (* skoXC1 (* skoXC1 (+ (- 6.) (* skoXC1 (* skoXC1 (/ 1. 8.)))))))))))) (- 48.)) (and (<= (* skoXC1 (* skoXC1 (+ 24. (* skoXC1 (* skoXC1 (+ (- 10.) (* skoXC1 skoXC1))))))) 16.) (and (<= (* skoXC1 (* skoXC1 (/ 1. 2.))) 3.) (and (> (* skoXC1 (* skoXC1 (/ (- 1.) 2.))) (- 3.)) (and (> skoXC1 0.) (and (> (/ 7. 8.) skoXC1) (and (<= (* skoXC1 (+ (- 1.) (* skoXC1 (* skoXC1 (/ 1. 3.))))) 0.) (and (<= (* skoXC1 (* skoXC1 (/ (- 1.) 6.))) 1.) (and (<= (* skoXC1 (* skoXC1 (+ (/ (- 1.) 2.) (* skoXC1 (* skoXC1 (/ (- 1.) 6.)))))) 0.) (and (<= (* skoXC1 skoXC1) 2.) (and (<= (* skoXC1 (* skoXC1 (* skoXC1 (* skoXC1 (/ (- 2.) 3.))))) 0.) (and (<= (* skoXC1 (+ (- 1.) (* skoXC1 (* skoXC1 (/ (- 1.) 6.))))) 0.) (and (<= (* skoXC1 (* skoXC1 (/ 1. 3.))) 1.) (and (<= (* skoXC1 (* skoXC1 (+ 256. (* skoXC1 (* skoXC1 (+ (- 160.) (* skoXC1 (* skoXC1 (+ 32. (* skoXC1 (* skoXC1 (- 1.)))))))))))) 128.) (<= (* skoXC1 (* skoXC1 (* skoXC1 (* skoXC1 (+ (/ (- 80.) 3.) (* skoXC1 (* skoXC1 (+ (/ 128. 3.) (* skoXC1 (* skoXC1 (+ (/ (- 55.) 3.) (* skoXC1 (* skoXC1 (/ 5. 3.)))))))))))))) 0.))))))))))))))))))))))))))

% In GRF format:
(sequent " MetiTarski formula " (antecedent (<= (* skoXC1 (* skoXC1 (* skoXC1 (* skoXC1 (+ (/ 32. 15.) (* skoXC1 (* skoXC1 (+ (/ (- 296.) 15.) (* skoXC1 (* skoXC1 (+ (/ 391. 15.) (* skoXC1 (* skoXC1 (+ (/ (- 146.) 15.) (* skoXC1 (* skoXC1 (/ 3. 4.))))))))))))))))) 0.) (<= (* skoXC1 (* skoXC1 (* skoXC1 (* skoXC1 (+ (/ 32. 15.) (* skoXC1 (* skoXC1 (+ (/ (- 296.) 15.) (* skoXC1 (* skoXC1 (+ (/ 391. 15.) (* skoXC1 (* skoXC1 (+ (/ (- 146.) 15.) (* skoXC1 (* skoXC1 (/ 3. 4.))))))))))))))))) 0.) (<= (* skoXC1 (* skoXC1 (+ (/ 1. 3.) (* skoXC1 (* skoXC1 (/ 3. 20.)))))) 1.) (<= (* skoXC1 (* skoXC1 (* skoXC1 (* skoXC1 (+ (/ (- 17.) 120.) (* skoXC1 (* skoXC1 (/ 3. 80.)))))))) 0.) (<= (* skoXC1 (* skoXC1 (* skoXC1 (* skoXC1 (+ (/ (- 13.) 60.) (* skoXC1 (* skoXC1 (/ (- 3.) 10.)))))))) 0.) (<= (* skoXC1 (* skoXC1 (+ (/ (- 1.) 2.) (* skoXC1 (* skoXC1 (+ (/ 7. 120.) (* skoXC1 (* skoXC1 (/ (- 3.) 40.))))))))) 0.) (<= (* skoXC1 (* skoXC1 (+ (/ (- 1.) 6.) (* skoXC1 (* skoXC1 (/ (- 3.) 40.)))))) 1.) (<= (* skoXC1 (+ (- 1.) (* skoXC1 (* skoXC1 (+ (/ 1. 3.) (* skoXC1 (* skoXC1 (/ 3. 20.)))))))) 0.) (> (* skoXC1 skoXC1) 0.) (<= (* skoXC1 (* skoXC1 (+ 80. (* skoXC1 (* skoXC1 (+ (- 40.) (* skoXC1 (* skoXC1 (+ 6. (* skoXC1 (* skoXC1 (/ (- 1.) 8.)))))))))))) 48.) (> (* skoXC1 (* skoXC1 (+ (- 80.) (* skoXC1 (* skoXC1 (+ 40. (* skoXC1 (* skoXC1 (+ (- 6.) (* skoXC1 (* skoXC1 (/ 1. 8.)))))))))))) (- 48.)) (<= (* skoXC1 (* skoXC1 (+ 24. (* skoXC1 (* skoXC1 (+ (- 10.) (* skoXC1 skoXC1))))))) 16.) (<= (* skoXC1 (* skoXC1 (/ 1. 2.))) 3.) (> (* skoXC1 (* skoXC1 (/ (- 1.) 2.))) (- 3.)) (> skoXC1 0.) (> (/ 7. 8.) skoXC1) (<= (* skoXC1 (+ (- 1.) (* skoXC1 (* skoXC1 (/ 1. 3.))))) 0.) (<= (* skoXC1 (* skoXC1 (/ (- 1.) 6.))) 1.) (<= (* skoXC1 (* skoXC1 (+ (/ (- 1.) 2.) (* skoXC1 (* skoXC1 (/ (- 1.) 6.)))))) 0.) (<= (* skoXC1 skoXC1) 2.) (<= (* skoXC1 (* skoXC1 (* skoXC1 (* skoXC1 (/ (- 2.) 3.))))) 0.) (<= (* skoXC1 (+ (- 1.) (* skoXC1 (* skoXC1 (/ (- 1.) 6.))))) 0.) (<= (* skoXC1 (* skoXC1 (/ 1. 3.))) 1.) (<= (* skoXC1 (* skoXC1 (+ 256. (* skoXC1 (* skoXC1 (+ (- 160.) (* skoXC1 (* skoXC1 (+ 32. (* skoXC1 (* skoXC1 (- 1.)))))))))))) 128.)) (succedent (> (* skoXC1 (* skoXC1 (* skoXC1 (* skoXC1 (+ (/ (- 80.) 3.) (* skoXC1 (* skoXC1 (+ (/ 128. 3.) (* skoXC1 (* skoXC1 (+ (/ (- 55.) 3.) (* skoXC1 (* skoXC1 (/ 5. 3.)))))))))))))) 0.)))
-----[end problem]-----

-----[begin problem]-----
% In Mathematica format:
Timing[Resolve[Exists[{skoXC1}, And[skoXC1*(-1+skoXC1*skoXC1*((-1/6)+skoXC1*skoXC1*(-3/40)))<=0,skoXC1*skoXC1*((1/6)+skoXC1*skoXC1*(3/40))>-1,skoXC1*skoXC1*skoXC1*skoXC1*((32/15)+skoXC1*skoXC1*((-296/15)+skoXC1*skoXC1*((391/15)+skoXC1*skoXC1*((-146/15)+skoXC1*skoXC1*(3/4)))))<=0,skoXC1*skoXC1*((1/3)+skoXC1*skoXC1*(3/20))<=1,skoXC1*skoXC1*skoXC1*skoXC1*((-17/120)+skoXC1*skoXC1*(3/80))<=0,skoXC1*skoXC1*skoXC1*skoXC1*((-13/60)+skoXC1*skoXC1*(-3/10))<=0,skoXC1*skoXC1*((-1/2)+skoXC1*skoXC1*((7/120)+skoXC1*skoXC1*(-3/40)))<=0,skoXC1*skoXC1*((-1/6)+skoXC1*skoXC1*(-3/40))<=1,skoXC1*(-1+skoXC1*skoXC1*((1/3)+skoXC1*skoXC1*(3/20)))<=0,skoXC1*skoXC1>0,skoXC1*skoXC1*(80+skoXC1*skoXC1*(-40+skoXC1*skoXC1*(6+skoXC1*skoXC1*(-1/8))))<=48,skoXC1*skoXC1*(-80+skoXC1*skoXC1*(40+skoXC1*skoXC1*(-6+skoXC1*skoXC1*(1/8))))>-48,skoXC1*skoXC1*(24+skoXC1*skoXC1*(-10+skoXC1*skoXC1))<=16,skoXC1*skoXC1*(1/2)<=3,skoXC1*skoXC1*(-1/2)>-3,skoXC1>0,(7/8)>skoXC1,skoXC1*(-1+skoXC1*skoXC1*(1/3))<=0,skoXC1*skoXC1*(-1/6)<=1,skoXC1*skoXC1*((-1/2)+skoXC1*skoXC1*(-1/6))<=0,skoXC1*skoXC1<=2,skoXC1*skoXC1*skoXC1*skoXC1*(-2/3)<=0,skoXC1*(-1+skoXC1*skoXC1*(-1/6))<=0,skoXC1*skoXC1*(1/3)<=1,skoXC1*skoXC1*(256+skoXC1*skoXC1*(-160+skoXC1*skoXC1*(32+skoXC1*skoXC1*-1)))<=128,skoXC1*skoXC1*skoXC1*skoXC1*((-80/3)+skoXC1*skoXC1*((128/3)+skoXC1*skoXC1*((-55/3)+skoXC1*skoXC1*(5/3))))<=0]], Reals]]

% In QepcadB format:
(E skoXC1) [[(skoXC1 (-1+(skoXC1 skoXC1 (-1/6+(skoXC1 skoXC1 (-3/40))))))<=0]/\[[-1<(skoXC1 skoXC1 (1/6+(skoXC1 skoXC1 (3/40))))]/\[[(skoXC1 skoXC1 skoXC1 skoXC1 (32/15+(skoXC1 skoXC1 (-296/15+(skoXC1 skoXC1 (391/15+(skoXC1 skoXC1 (-146/15+(skoXC1 skoXC1 (3/4))))))))))<=0]/\[[(skoXC1 skoXC1 (1/3+(skoXC1 skoXC1 (3/20))))<=1]/\[[(skoXC1 skoXC1 skoXC1 skoXC1 (-17/120+(skoXC1 skoXC1 (3/80))))<=0]/\[[(skoXC1 skoXC1 skoXC1 skoXC1 (-13/60+(skoXC1 skoXC1 (-3/10))))<=0]/\[[(skoXC1 skoXC1 (-1/2+(skoXC1 skoXC1 (7/120+(skoXC1 skoXC1 (-3/40))))))<=0]/\[[(skoXC1 skoXC1 (-1/6+(skoXC1 skoXC1 (-3/40))))<=1]/\[[(skoXC1 (-1+(skoXC1 skoXC1 (1/3+(skoXC1 skoXC1 (3/20))))))<=0]/\[[0<(skoXC1 skoXC1)]/\[[(skoXC1 skoXC1 (80+(skoXC1 skoXC1 (-40+(skoXC1 skoXC1 (6+(skoXC1 skoXC1 (-1/8))))))))<=48]/\[[-48<(skoXC1 skoXC1 (-80+(skoXC1 skoXC1 (40+(skoXC1 skoXC1 (-6+(skoXC1 skoXC1 (1/8))))))))]/\[[(skoXC1 skoXC1 (24+(skoXC1 skoXC1 (-10+(skoXC1 skoXC1)))))<=16]/\[[(skoXC1 skoXC1 (1/2))<=3]/\[[-3<(skoXC1 skoXC1 (-1/2))]/\[[0<skoXC1]/\[[skoXC1<7/8]/\[[(skoXC1 (-1+(skoXC1 skoXC1 (1/3))))<=0]/\[[(skoXC1 skoXC1 (-1/6))<=1]/\[[(skoXC1 skoXC1 (-1/2+(skoXC1 skoXC1 (-1/6))))<=0]/\[[(skoXC1 skoXC1)<=2]/\[[(skoXC1 skoXC1 skoXC1 skoXC1 (-2/3))<=0]/\[[(skoXC1 (-1+(skoXC1 skoXC1 (-1/6))))<=0]/\[[(skoXC1 skoXC1 (1/3))<=1]/\[[(skoXC1 skoXC1 (256+(skoXC1 skoXC1 (-160+(skoXC1 skoXC1 (32+(skoXC1 skoXC1 (-1))))))))<=128]/\[(skoXC1 skoXC1 skoXC1 skoXC1 (-80/3+(skoXC1 skoXC1 (128/3+(skoXC1 skoXC1 (-55/3+(skoXC1 skoXC1 (5/3))))))))<=0]]]]]]]]]]]]]]]]]]]]]]]]]].

% In SMTLib2 format:
(declare-fun skoXC1 () Real) (assert (and (<= (* skoXC1 (+ (- 1.) (* skoXC1 (* skoXC1 (+ (/ (- 1.) 6.) (* skoXC1 (* skoXC1 (/ (- 3.) 40.)))))))) 0.) (and (> (* skoXC1 (* skoXC1 (+ (/ 1. 6.) (* skoXC1 (* skoXC1 (/ 3. 40.)))))) (- 1.)) (and (<= (* skoXC1 (* skoXC1 (* skoXC1 (* skoXC1 (+ (/ 32. 15.) (* skoXC1 (* skoXC1 (+ (/ (- 296.) 15.) (* skoXC1 (* skoXC1 (+ (/ 391. 15.) (* skoXC1 (* skoXC1 (+ (/ (- 146.) 15.) (* skoXC1 (* skoXC1 (/ 3. 4.))))))))))))))))) 0.) (and (<= (* skoXC1 (* skoXC1 (+ (/ 1. 3.) (* skoXC1 (* skoXC1 (/ 3. 20.)))))) 1.) (and (<= (* skoXC1 (* skoXC1 (* skoXC1 (* skoXC1 (+ (/ (- 17.) 120.) (* skoXC1 (* skoXC1 (/ 3. 80.)))))))) 0.) (and (<= (* skoXC1 (* skoXC1 (* skoXC1 (* skoXC1 (+ (/ (- 13.) 60.) (* skoXC1 (* skoXC1 (/ (- 3.) 10.)))))))) 0.) (and (<= (* skoXC1 (* skoXC1 (+ (/ (- 1.) 2.) (* skoXC1 (* skoXC1 (+ (/ 7. 120.) (* skoXC1 (* skoXC1 (/ (- 3.) 40.))))))))) 0.) (and (<= (* skoXC1 (* skoXC1 (+ (/ (- 1.) 6.) (* skoXC1 (* skoXC1 (/ (- 3.) 40.)))))) 1.) (and (<= (* skoXC1 (+ (- 1.) (* skoXC1 (* skoXC1 (+ (/ 1. 3.) (* skoXC1 (* skoXC1 (/ 3. 20.)))))))) 0.) (and (> (* skoXC1 skoXC1) 0.) (and (<= (* skoXC1 (* skoXC1 (+ 80. (* skoXC1 (* skoXC1 (+ (- 40.) (* skoXC1 (* skoXC1 (+ 6. (* skoXC1 (* skoXC1 (/ (- 1.) 8.)))))))))))) 48.) (and (> (* skoXC1 (* skoXC1 (+ (- 80.) (* skoXC1 (* skoXC1 (+ 40. (* skoXC1 (* skoXC1 (+ (- 6.) (* skoXC1 (* skoXC1 (/ 1. 8.)))))))))))) (- 48.)) (and (<= (* skoXC1 (* skoXC1 (+ 24. (* skoXC1 (* skoXC1 (+ (- 10.) (* skoXC1 skoXC1))))))) 16.) (and (<= (* skoXC1 (* skoXC1 (/ 1. 2.))) 3.) (and (> (* skoXC1 (* skoXC1 (/ (- 1.) 2.))) (- 3.)) (and (> skoXC1 0.) (and (> (/ 7. 8.) skoXC1) (and (<= (* skoXC1 (+ (- 1.) (* skoXC1 (* skoXC1 (/ 1. 3.))))) 0.) (and (<= (* skoXC1 (* skoXC1 (/ (- 1.) 6.))) 1.) (and (<= (* skoXC1 (* skoXC1 (+ (/ (- 1.) 2.) (* skoXC1 (* skoXC1 (/ (- 1.) 6.)))))) 0.) (and (<= (* skoXC1 skoXC1) 2.) (and (<= (* skoXC1 (* skoXC1 (* skoXC1 (* skoXC1 (/ (- 2.) 3.))))) 0.) (and (<= (* skoXC1 (+ (- 1.) (* skoXC1 (* skoXC1 (/ (- 1.) 6.))))) 0.) (and (<= (* skoXC1 (* skoXC1 (/ 1. 3.))) 1.) (and (<= (* skoXC1 (* skoXC1 (+ 256. (* skoXC1 (* skoXC1 (+ (- 160.) (* skoXC1 (* skoXC1 (+ 32. (* skoXC1 (* skoXC1 (- 1.)))))))))))) 128.) (<= (* skoXC1 (* skoXC1 (* skoXC1 (* skoXC1 (+ (/ (- 80.) 3.) (* skoXC1 (* skoXC1 (+ (/ 128. 3.) (* skoXC1 (* skoXC1 (+ (/ (- 55.) 3.) (* skoXC1 (* skoXC1 (/ 5. 3.)))))))))))))) 0.)))))))))))))))))))))))))))

% In GRF format:
(sequent " MetiTarski formula " (antecedent (<= (* skoXC1 (+ (- 1.) (* skoXC1 (* skoXC1 (+ (/ (- 1.) 6.) (* skoXC1 (* skoXC1 (/ (- 3.) 40.)))))))) 0.) (> (* skoXC1 (* skoXC1 (+ (/ 1. 6.) (* skoXC1 (* skoXC1 (/ 3. 40.)))))) (- 1.)) (<= (* skoXC1 (* skoXC1 (* skoXC1 (* skoXC1 (+ (/ 32. 15.) (* skoXC1 (* skoXC1 (+ (/ (- 296.) 15.) (* skoXC1 (* skoXC1 (+ (/ 391. 15.) (* skoXC1 (* skoXC1 (+ (/ (- 146.) 15.) (* skoXC1 (* skoXC1 (/ 3. 4.))))))))))))))))) 0.) (<= (* skoXC1 (* skoXC1 (+ (/ 1. 3.) (* skoXC1 (* skoXC1 (/ 3. 20.)))))) 1.) (<= (* skoXC1 (* skoXC1 (* skoXC1 (* skoXC1 (+ (/ (- 17.) 120.) (* skoXC1 (* skoXC1 (/ 3. 80.)))))))) 0.) (<= (* skoXC1 (* skoXC1 (* skoXC1 (* skoXC1 (+ (/ (- 13.) 60.) (* skoXC1 (* skoXC1 (/ (- 3.) 10.)))))))) 0.) (<= (* skoXC1 (* skoXC1 (+ (/ (- 1.) 2.) (* skoXC1 (* skoXC1 (+ (/ 7. 120.) (* skoXC1 (* skoXC1 (/ (- 3.) 40.))))))))) 0.) (<= (* skoXC1 (* skoXC1 (+ (/ (- 1.) 6.) (* skoXC1 (* skoXC1 (/ (- 3.) 40.)))))) 1.) (<= (* skoXC1 (+ (- 1.) (* skoXC1 (* skoXC1 (+ (/ 1. 3.) (* skoXC1 (* skoXC1 (/ 3. 20.)))))))) 0.) (> (* skoXC1 skoXC1) 0.) (<= (* skoXC1 (* skoXC1 (+ 80. (* skoXC1 (* skoXC1 (+ (- 40.) (* skoXC1 (* skoXC1 (+ 6. (* skoXC1 (* skoXC1 (/ (- 1.) 8.)))))))))))) 48.) (> (* skoXC1 (* skoXC1 (+ (- 80.) (* skoXC1 (* skoXC1 (+ 40. (* skoXC1 (* skoXC1 (+ (- 6.) (* skoXC1 (* skoXC1 (/ 1. 8.)))))))))))) (- 48.)) (<= (* skoXC1 (* skoXC1 (+ 24. (* skoXC1 (* skoXC1 (+ (- 10.) (* skoXC1 skoXC1))))))) 16.) (<= (* skoXC1 (* skoXC1 (/ 1. 2.))) 3.) (> (* skoXC1 (* skoXC1 (/ (- 1.) 2.))) (- 3.)) (> skoXC1 0.) (> (/ 7. 8.) skoXC1) (<= (* skoXC1 (+ (- 1.) (* skoXC1 (* skoXC1 (/ 1. 3.))))) 0.) (<= (* skoXC1 (* skoXC1 (/ (- 1.) 6.))) 1.) (<= (* skoXC1 (* skoXC1 (+ (/ (- 1.) 2.) (* skoXC1 (* skoXC1 (/ (- 1.) 6.)))))) 0.) (<= (* skoXC1 skoXC1) 2.) (<= (* skoXC1 (* skoXC1 (* skoXC1 (* skoXC1 (/ (- 2.) 3.))))) 0.) (<= (* skoXC1 (+ (- 1.) (* skoXC1 (* skoXC1 (/ (- 1.) 6.))))) 0.) (<= (* skoXC1 (* skoXC1 (/ 1. 3.))) 1.) (<= (* skoXC1 (* skoXC1 (+ 256. (* skoXC1 (* skoXC1 (+ (- 160.) (* skoXC1 (* skoXC1 (+ 32. (* skoXC1 (* skoXC1 (- 1.)))))))))))) 128.)) (succedent (> (* skoXC1 (* skoXC1 (* skoXC1 (* skoXC1 (+ (/ (- 80.) 3.) (* skoXC1 (* skoXC1 (+ (/ 128. 3.) (* skoXC1 (* skoXC1 (+ (/ (- 55.) 3.) (* skoXC1 (* skoXC1 (/ 5. 3.)))))))))))))) 0.)))
-----[end problem]-----

-----[begin problem]-----
% In Mathematica format:
Timing[Resolve[Exists[{skoXC1}, And[skoXC1*skoXC1*((-1/6)+skoXC1*skoXC1*(-3/40))<=1,skoXC1*skoXC1*((1/6)+skoXC1*skoXC1*(3/40))<=-1,skoXC1*(-1+skoXC1*skoXC1*((-1/6)+skoXC1*skoXC1*(-3/40)))<=0,skoXC1*skoXC1*((-1/3)+skoXC1*skoXC1*(-3/20))>-1,skoXC1*skoXC1*skoXC1*skoXC1*((32/15)+skoXC1*skoXC1*((-296/15)+skoXC1*skoXC1*((391/15)+skoXC1*skoXC1*((-146/15)+skoXC1*skoXC1*(3/4)))))<=0,skoXC1*skoXC1*((1/3)+skoXC1*skoXC1*(3/20))<=1,skoXC1*skoXC1*skoXC1*skoXC1*((-17/120)+skoXC1*skoXC1*(3/80))<=0,skoXC1*skoXC1*skoXC1*skoXC1*((-13/60)+skoXC1*skoXC1*(-3/10))<=0,skoXC1*skoXC1*((-1/2)+skoXC1*skoXC1*((7/120)+skoXC1*skoXC1*(-3/40)))<=0,skoXC1*skoXC1*((-1/6)+skoXC1*skoXC1*(-3/40))<=1,skoXC1*(-1+skoXC1*skoXC1*((1/3)+skoXC1*skoXC1*(3/20)))<=0,skoXC1*skoXC1>0,skoXC1*skoXC1*(80+skoXC1*skoXC1*(-40+skoXC1*skoXC1*(6+skoXC1*skoXC1*(-1/8))))<=48,skoXC1*skoXC1*(-80+skoXC1*skoXC1*(40+skoXC1*skoXC1*(-6+skoXC1*skoXC1*(1/8))))>-48,skoXC1*skoXC1*(24+skoXC1*skoXC1*(-10+skoXC1*skoXC1))<=16,skoXC1*skoXC1*(1/2)<=3,skoXC1*skoXC1*(-1/2)>-3,skoXC1>0,(7/8)>skoXC1,skoXC1*(-1+skoXC1*skoXC1*(1/3))<=0,skoXC1*skoXC1*(-1/6)<=1,skoXC1*skoXC1*((-1/2)+skoXC1*skoXC1*(-1/6))<=0,skoXC1*skoXC1<=2,skoXC1*skoXC1*skoXC1*skoXC1*(-2/3)<=0,skoXC1*(-1+skoXC1*skoXC1*(-1/6))<=0,skoXC1*skoXC1*(1/3)<=1,skoXC1*skoXC1*(256+skoXC1*skoXC1*(-160+skoXC1*skoXC1*(32+skoXC1*skoXC1*-1)))<=128,skoXC1*skoXC1*skoXC1*skoXC1*((-80/3)+skoXC1*skoXC1*((128/3)+skoXC1*skoXC1*((-55/3)+skoXC1*skoXC1*(5/3))))<=0]], Reals]]

% In QepcadB format:
(E skoXC1) [[(skoXC1 skoXC1 (-1/6+(skoXC1 skoXC1 (-3/40))))<=1]/\[[(skoXC1 skoXC1 (1/6+(skoXC1 skoXC1 (3/40))))<=-1]/\[[(skoXC1 (-1+(skoXC1 skoXC1 (-1/6+(skoXC1 skoXC1 (-3/40))))))<=0]/\[[-1<(skoXC1 skoXC1 (-1/3+(skoXC1 skoXC1 (-3/20))))]/\[[(skoXC1 skoXC1 skoXC1 skoXC1 (32/15+(skoXC1 skoXC1 (-296/15+(skoXC1 skoXC1 (391/15+(skoXC1 skoXC1 (-146/15+(skoXC1 skoXC1 (3/4))))))))))<=0]/\[[(skoXC1 skoXC1 (1/3+(skoXC1 skoXC1 (3/20))))<=1]/\[[(skoXC1 skoXC1 skoXC1 skoXC1 (-17/120+(skoXC1 skoXC1 (3/80))))<=0]/\[[(skoXC1 skoXC1 skoXC1 skoXC1 (-13/60+(skoXC1 skoXC1 (-3/10))))<=0]/\[[(skoXC1 skoXC1 (-1/2+(skoXC1 skoXC1 (7/120+(skoXC1 skoXC1 (-3/40))))))<=0]/\[[(skoXC1 skoXC1 (-1/6+(skoXC1 skoXC1 (-3/40))))<=1]/\[[(skoXC1 (-1+(skoXC1 skoXC1 (1/3+(skoXC1 skoXC1 (3/20))))))<=0]/\[[0<(skoXC1 skoXC1)]/\[[(skoXC1 skoXC1 (80+(skoXC1 skoXC1 (-40+(skoXC1 skoXC1 (6+(skoXC1 skoXC1 (-1/8))))))))<=48]/\[[-48<(skoXC1 skoXC1 (-80+(skoXC1 skoXC1 (40+(skoXC1 skoXC1 (-6+(skoXC1 skoXC1 (1/8))))))))]/\[[(skoXC1 skoXC1 (24+(skoXC1 skoXC1 (-10+(skoXC1 skoXC1)))))<=16]/\[[(skoXC1 skoXC1 (1/2))<=3]/\[[-3<(skoXC1 skoXC1 (-1/2))]/\[[0<skoXC1]/\[[skoXC1<7/8]/\[[(skoXC1 (-1+(skoXC1 skoXC1 (1/3))))<=0]/\[[(skoXC1 skoXC1 (-1/6))<=1]/\[[(skoXC1 skoXC1 (-1/2+(skoXC1 skoXC1 (-1/6))))<=0]/\[[(skoXC1 skoXC1)<=2]/\[[(skoXC1 skoXC1 skoXC1 skoXC1 (-2/3))<=0]/\[[(skoXC1 (-1+(skoXC1 skoXC1 (-1/6))))<=0]/\[[(skoXC1 skoXC1 (1/3))<=1]/\[[(skoXC1 skoXC1 (256+(skoXC1 skoXC1 (-160+(skoXC1 skoXC1 (32+(skoXC1 skoXC1 (-1))))))))<=128]/\[(skoXC1 skoXC1 skoXC1 skoXC1 (-80/3+(skoXC1 skoXC1 (128/3+(skoXC1 skoXC1 (-55/3+(skoXC1 skoXC1 (5/3))))))))<=0]]]]]]]]]]]]]]]]]]]]]]]]]]]].

% In SMTLib2 format:
(declare-fun skoXC1 () Real) (assert (and (<= (* skoXC1 (* skoXC1 (+ (/ (- 1.) 6.) (* skoXC1 (* skoXC1 (/ (- 3.) 40.)))))) 1.) (and (<= (* skoXC1 (* skoXC1 (+ (/ 1. 6.) (* skoXC1 (* skoXC1 (/ 3. 40.)))))) (- 1.)) (and (<= (* skoXC1 (+ (- 1.) (* skoXC1 (* skoXC1 (+ (/ (- 1.) 6.) (* skoXC1 (* skoXC1 (/ (- 3.) 40.)))))))) 0.) (and (> (* skoXC1 (* skoXC1 (+ (/ (- 1.) 3.) (* skoXC1 (* skoXC1 (/ (- 3.) 20.)))))) (- 1.)) (and (<= (* skoXC1 (* skoXC1 (* skoXC1 (* skoXC1 (+ (/ 32. 15.) (* skoXC1 (* skoXC1 (+ (/ (- 296.) 15.) (* skoXC1 (* skoXC1 (+ (/ 391. 15.) (* skoXC1 (* skoXC1 (+ (/ (- 146.) 15.) (* skoXC1 (* skoXC1 (/ 3. 4.))))))))))))))))) 0.) (and (<= (* skoXC1 (* skoXC1 (+ (/ 1. 3.) (* skoXC1 (* skoXC1 (/ 3. 20.)))))) 1.) (and (<= (* skoXC1 (* skoXC1 (* skoXC1 (* skoXC1 (+ (/ (- 17.) 120.) (* skoXC1 (* skoXC1 (/ 3. 80.)))))))) 0.) (and (<= (* skoXC1 (* skoXC1 (* skoXC1 (* skoXC1 (+ (/ (- 13.) 60.) (* skoXC1 (* skoXC1 (/ (- 3.) 10.)))))))) 0.) (and (<= (* skoXC1 (* skoXC1 (+ (/ (- 1.) 2.) (* skoXC1 (* skoXC1 (+ (/ 7. 120.) (* skoXC1 (* skoXC1 (/ (- 3.) 40.))))))))) 0.) (and (<= (* skoXC1 (* skoXC1 (+ (/ (- 1.) 6.) (* skoXC1 (* skoXC1 (/ (- 3.) 40.)))))) 1.) (and (<= (* skoXC1 (+ (- 1.) (* skoXC1 (* skoXC1 (+ (/ 1. 3.) (* skoXC1 (* skoXC1 (/ 3. 20.)))))))) 0.) (and (> (* skoXC1 skoXC1) 0.) (and (<= (* skoXC1 (* skoXC1 (+ 80. (* skoXC1 (* skoXC1 (+ (- 40.) (* skoXC1 (* skoXC1 (+ 6. (* skoXC1 (* skoXC1 (/ (- 1.) 8.)))))))))))) 48.) (and (> (* skoXC1 (* skoXC1 (+ (- 80.) (* skoXC1 (* skoXC1 (+ 40. (* skoXC1 (* skoXC1 (+ (- 6.) (* skoXC1 (* skoXC1 (/ 1. 8.)))))))))))) (- 48.)) (and (<= (* skoXC1 (* skoXC1 (+ 24. (* skoXC1 (* skoXC1 (+ (- 10.) (* skoXC1 skoXC1))))))) 16.) (and (<= (* skoXC1 (* skoXC1 (/ 1. 2.))) 3.) (and (> (* skoXC1 (* skoXC1 (/ (- 1.) 2.))) (- 3.)) (and (> skoXC1 0.) (and (> (/ 7. 8.) skoXC1) (and (<= (* skoXC1 (+ (- 1.) (* skoXC1 (* skoXC1 (/ 1. 3.))))) 0.) (and (<= (* skoXC1 (* skoXC1 (/ (- 1.) 6.))) 1.) (and (<= (* skoXC1 (* skoXC1 (+ (/ (- 1.) 2.) (* skoXC1 (* skoXC1 (/ (- 1.) 6.)))))) 0.) (and (<= (* skoXC1 skoXC1) 2.) (and (<= (* skoXC1 (* skoXC1 (* skoXC1 (* skoXC1 (/ (- 2.) 3.))))) 0.) (and (<= (* skoXC1 (+ (- 1.) (* skoXC1 (* skoXC1 (/ (- 1.) 6.))))) 0.) (and (<= (* skoXC1 (* skoXC1 (/ 1. 3.))) 1.) (and (<= (* skoXC1 (* skoXC1 (+ 256. (* skoXC1 (* skoXC1 (+ (- 160.) (* skoXC1 (* skoXC1 (+ 32. (* skoXC1 (* skoXC1 (- 1.)))))))))))) 128.) (<= (* skoXC1 (* skoXC1 (* skoXC1 (* skoXC1 (+ (/ (- 80.) 3.) (* skoXC1 (* skoXC1 (+ (/ 128. 3.) (* skoXC1 (* skoXC1 (+ (/ (- 55.) 3.) (* skoXC1 (* skoXC1 (/ 5. 3.)))))))))))))) 0.)))))))))))))))))))))))))))))

% In GRF format:
(sequent " MetiTarski formula " (antecedent (<= (* skoXC1 (* skoXC1 (+ (/ (- 1.) 6.) (* skoXC1 (* skoXC1 (/ (- 3.) 40.)))))) 1.) (<= (* skoXC1 (* skoXC1 (+ (/ 1. 6.) (* skoXC1 (* skoXC1 (/ 3. 40.)))))) (- 1.)) (<= (* skoXC1 (+ (- 1.) (* skoXC1 (* skoXC1 (+ (/ (- 1.) 6.) (* skoXC1 (* skoXC1 (/ (- 3.) 40.)))))))) 0.) (> (* skoXC1 (* skoXC1 (+ (/ (- 1.) 3.) (* skoXC1 (* skoXC1 (/ (- 3.) 20.)))))) (- 1.)) (<= (* skoXC1 (* skoXC1 (* skoXC1 (* skoXC1 (+ (/ 32. 15.) (* skoXC1 (* skoXC1 (+ (/ (- 296.) 15.) (* skoXC1 (* skoXC1 (+ (/ 391. 15.) (* skoXC1 (* skoXC1 (+ (/ (- 146.) 15.) (* skoXC1 (* skoXC1 (/ 3. 4.))))))))))))))))) 0.) (<= (* skoXC1 (* skoXC1 (+ (/ 1. 3.) (* skoXC1 (* skoXC1 (/ 3. 20.)))))) 1.) (<= (* skoXC1 (* skoXC1 (* skoXC1 (* skoXC1 (+ (/ (- 17.) 120.) (* skoXC1 (* skoXC1 (/ 3. 80.)))))))) 0.) (<= (* skoXC1 (* skoXC1 (* skoXC1 (* skoXC1 (+ (/ (- 13.) 60.) (* skoXC1 (* skoXC1 (/ (- 3.) 10.)))))))) 0.) (<= (* skoXC1 (* skoXC1 (+ (/ (- 1.) 2.) (* skoXC1 (* skoXC1 (+ (/ 7. 120.) (* skoXC1 (* skoXC1 (/ (- 3.) 40.))))))))) 0.) (<= (* skoXC1 (* skoXC1 (+ (/ (- 1.) 6.) (* skoXC1 (* skoXC1 (/ (- 3.) 40.)))))) 1.) (<= (* skoXC1 (+ (- 1.) (* skoXC1 (* skoXC1 (+ (/ 1. 3.) (* skoXC1 (* skoXC1 (/ 3. 20.)))))))) 0.) (> (* skoXC1 skoXC1) 0.) (<= (* skoXC1 (* skoXC1 (+ 80. (* skoXC1 (* skoXC1 (+ (- 40.) (* skoXC1 (* skoXC1 (+ 6. (* skoXC1 (* skoXC1 (/ (- 1.) 8.)))))))))))) 48.) (> (* skoXC1 (* skoXC1 (+ (- 80.) (* skoXC1 (* skoXC1 (+ 40. (* skoXC1 (* skoXC1 (+ (- 6.) (* skoXC1 (* skoXC1 (/ 1. 8.)))))))))))) (- 48.)) (<= (* skoXC1 (* skoXC1 (+ 24. (* skoXC1 (* skoXC1 (+ (- 10.) (* skoXC1 skoXC1))))))) 16.) (<= (* skoXC1 (* skoXC1 (/ 1. 2.))) 3.) (> (* skoXC1 (* skoXC1 (/ (- 1.) 2.))) (- 3.)) (> skoXC1 0.) (> (/ 7. 8.) skoXC1) (<= (* skoXC1 (+ (- 1.) (* skoXC1 (* skoXC1 (/ 1. 3.))))) 0.) (<= (* skoXC1 (* skoXC1 (/ (- 1.) 6.))) 1.) (<= (* skoXC1 (* skoXC1 (+ (/ (- 1.) 2.) (* skoXC1 (* skoXC1 (/ (- 1.) 6.)))))) 0.) (<= (* skoXC1 skoXC1) 2.) (<= (* skoXC1 (* skoXC1 (* skoXC1 (* skoXC1 (/ (- 2.) 3.))))) 0.) (<= (* skoXC1 (+ (- 1.) (* skoXC1 (* skoXC1 (/ (- 1.) 6.))))) 0.) (<= (* skoXC1 (* skoXC1 (/ 1. 3.))) 1.) (<= (* skoXC1 (* skoXC1 (+ 256. (* skoXC1 (* skoXC1 (+ (- 160.) (* skoXC1 (* skoXC1 (+ 32. (* skoXC1 (* skoXC1 (- 1.)))))))))))) 128.)) (succedent (> (* skoXC1 (* skoXC1 (* skoXC1 (* skoXC1 (+ (/ (- 80.) 3.) (* skoXC1 (* skoXC1 (+ (/ 128. 3.) (* skoXC1 (* skoXC1 (+ (/ (- 55.) 3.) (* skoXC1 (* skoXC1 (/ 5. 3.)))))))))))))) 0.)))
-----[end problem]-----

-----[begin problem]-----
% In Mathematica format:
Timing[Resolve[Exists[{skoXC1}, And[skoXC1*skoXC1*((-1/3)+skoXC1*skoXC1*(-3/20))>-1,skoXC1*skoXC1*((1/6)+skoXC1*skoXC1*(3/40))>-1,skoXC1*skoXC1*skoXC1*skoXC1*((32/15)+skoXC1*skoXC1*((-296/15)+skoXC1*skoXC1*((391/15)+skoXC1*skoXC1*((-146/15)+skoXC1*skoXC1*(3/4)))))<=0,skoXC1*skoXC1*((1/3)+skoXC1*skoXC1*(3/20))<=1,skoXC1*skoXC1*skoXC1*skoXC1*((-17/120)+skoXC1*skoXC1*(3/80))<=0,skoXC1*skoXC1*skoXC1*skoXC1*((-13/60)+skoXC1*skoXC1*(-3/10))<=0,skoXC1*skoXC1*((-1/2)+skoXC1*skoXC1*((7/120)+skoXC1*skoXC1*(-3/40)))<=0,skoXC1*skoXC1*((-1/6)+skoXC1*skoXC1*(-3/40))<=1,skoXC1*(-1+skoXC1*skoXC1*((1/3)+skoXC1*skoXC1*(3/20)))<=0,skoXC1*skoXC1>0,skoXC1*skoXC1*(80+skoXC1*skoXC1*(-40+skoXC1*skoXC1*(6+skoXC1*skoXC1*(-1/8))))<=48,skoXC1*skoXC1*(-80+skoXC1*skoXC1*(40+skoXC1*skoXC1*(-6+skoXC1*skoXC1*(1/8))))>-48,skoXC1*skoXC1*(24+skoXC1*skoXC1*(-10+skoXC1*skoXC1))<=16,skoXC1*skoXC1*(1/2)<=3,skoXC1*skoXC1*(-1/2)>-3,skoXC1>0,(7/8)>skoXC1,skoXC1*(-1+skoXC1*skoXC1*(1/3))<=0,skoXC1*skoXC1*(-1/6)<=1,skoXC1*skoXC1*((-1/2)+skoXC1*skoXC1*(-1/6))<=0,skoXC1*skoXC1<=2,skoXC1*skoXC1*skoXC1*skoXC1*(-2/3)<=0,skoXC1*(-1+skoXC1*skoXC1*(-1/6))<=0,skoXC1*skoXC1*(1/3)<=1,skoXC1*skoXC1*(256+skoXC1*skoXC1*(-160+skoXC1*skoXC1*(32+skoXC1*skoXC1*-1)))<=128,skoXC1*skoXC1*skoXC1*skoXC1*((-80/3)+skoXC1*skoXC1*((128/3)+skoXC1*skoXC1*((-55/3)+skoXC1*skoXC1*(5/3))))<=0]], Reals]]

% In QepcadB format:
(E skoXC1) [[-1<(skoXC1 skoXC1 (-1/3+(skoXC1 skoXC1 (-3/20))))]/\[[-1<(skoXC1 skoXC1 (1/6+(skoXC1 skoXC1 (3/40))))]/\[[(skoXC1 skoXC1 skoXC1 skoXC1 (32/15+(skoXC1 skoXC1 (-296/15+(skoXC1 skoXC1 (391/15+(skoXC1 skoXC1 (-146/15+(skoXC1 skoXC1 (3/4))))))))))<=0]/\[[(skoXC1 skoXC1 (1/3+(skoXC1 skoXC1 (3/20))))<=1]/\[[(skoXC1 skoXC1 skoXC1 skoXC1 (-17/120+(skoXC1 skoXC1 (3/80))))<=0]/\[[(skoXC1 skoXC1 skoXC1 skoXC1 (-13/60+(skoXC1 skoXC1 (-3/10))))<=0]/\[[(skoXC1 skoXC1 (-1/2+(skoXC1 skoXC1 (7/120+(skoXC1 skoXC1 (-3/40))))))<=0]/\[[(skoXC1 skoXC1 (-1/6+(skoXC1 skoXC1 (-3/40))))<=1]/\[[(skoXC1 (-1+(skoXC1 skoXC1 (1/3+(skoXC1 skoXC1 (3/20))))))<=0]/\[[0<(skoXC1 skoXC1)]/\[[(skoXC1 skoXC1 (80+(skoXC1 skoXC1 (-40+(skoXC1 skoXC1 (6+(skoXC1 skoXC1 (-1/8))))))))<=48]/\[[-48<(skoXC1 skoXC1 (-80+(skoXC1 skoXC1 (40+(skoXC1 skoXC1 (-6+(skoXC1 skoXC1 (1/8))))))))]/\[[(skoXC1 skoXC1 (24+(skoXC1 skoXC1 (-10+(skoXC1 skoXC1)))))<=16]/\[[(skoXC1 skoXC1 (1/2))<=3]/\[[-3<(skoXC1 skoXC1 (-1/2))]/\[[0<skoXC1]/\[[skoXC1<7/8]/\[[(skoXC1 (-1+(skoXC1 skoXC1 (1/3))))<=0]/\[[(skoXC1 skoXC1 (-1/6))<=1]/\[[(skoXC1 skoXC1 (-1/2+(skoXC1 skoXC1 (-1/6))))<=0]/\[[(skoXC1 skoXC1)<=2]/\[[(skoXC1 skoXC1 skoXC1 skoXC1 (-2/3))<=0]/\[[(skoXC1 (-1+(skoXC1 skoXC1 (-1/6))))<=0]/\[[(skoXC1 skoXC1 (1/3))<=1]/\[[(skoXC1 skoXC1 (256+(skoXC1 skoXC1 (-160+(skoXC1 skoXC1 (32+(skoXC1 skoXC1 (-1))))))))<=128]/\[(skoXC1 skoXC1 skoXC1 skoXC1 (-80/3+(skoXC1 skoXC1 (128/3+(skoXC1 skoXC1 (-55/3+(skoXC1 skoXC1 (5/3))))))))<=0]]]]]]]]]]]]]]]]]]]]]]]]]].

% In SMTLib2 format:
(declare-fun skoXC1 () Real) (assert (and (> (* skoXC1 (* skoXC1 (+ (/ (- 1.) 3.) (* skoXC1 (* skoXC1 (/ (- 3.) 20.)))))) (- 1.)) (and (> (* skoXC1 (* skoXC1 (+ (/ 1. 6.) (* skoXC1 (* skoXC1 (/ 3. 40.)))))) (- 1.)) (and (<= (* skoXC1 (* skoXC1 (* skoXC1 (* skoXC1 (+ (/ 32. 15.) (* skoXC1 (* skoXC1 (+ (/ (- 296.) 15.) (* skoXC1 (* skoXC1 (+ (/ 391. 15.) (* skoXC1 (* skoXC1 (+ (/ (- 146.) 15.) (* skoXC1 (* skoXC1 (/ 3. 4.))))))))))))))))) 0.) (and (<= (* skoXC1 (* skoXC1 (+ (/ 1. 3.) (* skoXC1 (* skoXC1 (/ 3. 20.)))))) 1.) (and (<= (* skoXC1 (* skoXC1 (* skoXC1 (* skoXC1 (+ (/ (- 17.) 120.) (* skoXC1 (* skoXC1 (/ 3. 80.)))))))) 0.) (and (<= (* skoXC1 (* skoXC1 (* skoXC1 (* skoXC1 (+ (/ (- 13.) 60.) (* skoXC1 (* skoXC1 (/ (- 3.) 10.)))))))) 0.) (and (<= (* skoXC1 (* skoXC1 (+ (/ (- 1.) 2.) (* skoXC1 (* skoXC1 (+ (/ 7. 120.) (* skoXC1 (* skoXC1 (/ (- 3.) 40.))))))))) 0.) (and (<= (* skoXC1 (* skoXC1 (+ (/ (- 1.) 6.) (* skoXC1 (* skoXC1 (/ (- 3.) 40.)))))) 1.) (and (<= (* skoXC1 (+ (- 1.) (* skoXC1 (* skoXC1 (+ (/ 1. 3.) (* skoXC1 (* skoXC1 (/ 3. 20.)))))))) 0.) (and (> (* skoXC1 skoXC1) 0.) (and (<= (* skoXC1 (* skoXC1 (+ 80. (* skoXC1 (* skoXC1 (+ (- 40.) (* skoXC1 (* skoXC1 (+ 6. (* skoXC1 (* skoXC1 (/ (- 1.) 8.)))))))))))) 48.) (and (> (* skoXC1 (* skoXC1 (+ (- 80.) (* skoXC1 (* skoXC1 (+ 40. (* skoXC1 (* skoXC1 (+ (- 6.) (* skoXC1 (* skoXC1 (/ 1. 8.)))))))))))) (- 48.)) (and (<= (* skoXC1 (* skoXC1 (+ 24. (* skoXC1 (* skoXC1 (+ (- 10.) (* skoXC1 skoXC1))))))) 16.) (and (<= (* skoXC1 (* skoXC1 (/ 1. 2.))) 3.) (and (> (* skoXC1 (* skoXC1 (/ (- 1.) 2.))) (- 3.)) (and (> skoXC1 0.) (and (> (/ 7. 8.) skoXC1) (and (<= (* skoXC1 (+ (- 1.) (* skoXC1 (* skoXC1 (/ 1. 3.))))) 0.) (and (<= (* skoXC1 (* skoXC1 (/ (- 1.) 6.))) 1.) (and (<= (* skoXC1 (* skoXC1 (+ (/ (- 1.) 2.) (* skoXC1 (* skoXC1 (/ (- 1.) 6.)))))) 0.) (and (<= (* skoXC1 skoXC1) 2.) (and (<= (* skoXC1 (* skoXC1 (* skoXC1 (* skoXC1 (/ (- 2.) 3.))))) 0.) (and (<= (* skoXC1 (+ (- 1.) (* skoXC1 (* skoXC1 (/ (- 1.) 6.))))) 0.) (and (<= (* skoXC1 (* skoXC1 (/ 1. 3.))) 1.) (and (<= (* skoXC1 (* skoXC1 (+ 256. (* skoXC1 (* skoXC1 (+ (- 160.) (* skoXC1 (* skoXC1 (+ 32. (* skoXC1 (* skoXC1 (- 1.)))))))))))) 128.) (<= (* skoXC1 (* skoXC1 (* skoXC1 (* skoXC1 (+ (/ (- 80.) 3.) (* skoXC1 (* skoXC1 (+ (/ 128. 3.) (* skoXC1 (* skoXC1 (+ (/ (- 55.) 3.) (* skoXC1 (* skoXC1 (/ 5. 3.)))))))))))))) 0.)))))))))))))))))))))))))))

% In GRF format:
(sequent " MetiTarski formula " (antecedent (> (* skoXC1 (* skoXC1 (+ (/ (- 1.) 3.) (* skoXC1 (* skoXC1 (/ (- 3.) 20.)))))) (- 1.)) (> (* skoXC1 (* skoXC1 (+ (/ 1. 6.) (* skoXC1 (* skoXC1 (/ 3. 40.)))))) (- 1.)) (<= (* skoXC1 (* skoXC1 (* skoXC1 (* skoXC1 (+ (/ 32. 15.) (* skoXC1 (* skoXC1 (+ (/ (- 296.) 15.) (* skoXC1 (* skoXC1 (+ (/ 391. 15.) (* skoXC1 (* skoXC1 (+ (/ (- 146.) 15.) (* skoXC1 (* skoXC1 (/ 3. 4.))))))))))))))))) 0.) (<= (* skoXC1 (* skoXC1 (+ (/ 1. 3.) (* skoXC1 (* skoXC1 (/ 3. 20.)))))) 1.) (<= (* skoXC1 (* skoXC1 (* skoXC1 (* skoXC1 (+ (/ (- 17.) 120.) (* skoXC1 (* skoXC1 (/ 3. 80.)))))))) 0.) (<= (* skoXC1 (* skoXC1 (* skoXC1 (* skoXC1 (+ (/ (- 13.) 60.) (* skoXC1 (* skoXC1 (/ (- 3.) 10.)))))))) 0.) (<= (* skoXC1 (* skoXC1 (+ (/ (- 1.) 2.) (* skoXC1 (* skoXC1 (+ (/ 7. 120.) (* skoXC1 (* skoXC1 (/ (- 3.) 40.))))))))) 0.) (<= (* skoXC1 (* skoXC1 (+ (/ (- 1.) 6.) (* skoXC1 (* skoXC1 (/ (- 3.) 40.)))))) 1.) (<= (* skoXC1 (+ (- 1.) (* skoXC1 (* skoXC1 (+ (/ 1. 3.) (* skoXC1 (* skoXC1 (/ 3. 20.)))))))) 0.) (> (* skoXC1 skoXC1) 0.) (<= (* skoXC1 (* skoXC1 (+ 80. (* skoXC1 (* skoXC1 (+ (- 40.) (* skoXC1 (* skoXC1 (+ 6. (* skoXC1 (* skoXC1 (/ (- 1.) 8.)))))))))))) 48.) (> (* skoXC1 (* skoXC1 (+ (- 80.) (* skoXC1 (* skoXC1 (+ 40. (* skoXC1 (* skoXC1 (+ (- 6.) (* skoXC1 (* skoXC1 (/ 1. 8.)))))))))))) (- 48.)) (<= (* skoXC1 (* skoXC1 (+ 24. (* skoXC1 (* skoXC1 (+ (- 10.) (* skoXC1 skoXC1))))))) 16.) (<= (* skoXC1 (* skoXC1 (/ 1. 2.))) 3.) (> (* skoXC1 (* skoXC1 (/ (- 1.) 2.))) (- 3.)) (> skoXC1 0.) (> (/ 7. 8.) skoXC1) (<= (* skoXC1 (+ (- 1.) (* skoXC1 (* skoXC1 (/ 1. 3.))))) 0.) (<= (* skoXC1 (* skoXC1 (/ (- 1.) 6.))) 1.) (<= (* skoXC1 (* skoXC1 (+ (/ (- 1.) 2.) (* skoXC1 (* skoXC1 (/ (- 1.) 6.)))))) 0.) (<= (* skoXC1 skoXC1) 2.) (<= (* skoXC1 (* skoXC1 (* skoXC1 (* skoXC1 (/ (- 2.) 3.))))) 0.) (<= (* skoXC1 (+ (- 1.) (* skoXC1 (* skoXC1 (/ (- 1.) 6.))))) 0.) (<= (* skoXC1 (* skoXC1 (/ 1. 3.))) 1.) (<= (* skoXC1 (* skoXC1 (+ 256. (* skoXC1 (* skoXC1 (+ (- 160.) (* skoXC1 (* skoXC1 (+ 32. (* skoXC1 (* skoXC1 (- 1.)))))))))))) 128.)) (succedent (> (* skoXC1 (* skoXC1 (* skoXC1 (* skoXC1 (+ (/ (- 80.) 3.) (* skoXC1 (* skoXC1 (+ (/ 128. 3.) (* skoXC1 (* skoXC1 (+ (/ (- 55.) 3.) (* skoXC1 (* skoXC1 (/ 5. 3.)))))))))))))) 0.)))
-----[end problem]-----

-----[begin problem]-----
% In Mathematica format:
Timing[Resolve[Exists[{skoXC1}, And[skoXC1*skoXC1*((-1/3)+skoXC1*skoXC1*(-3/20))<=-1,skoXC1*skoXC1*((1/6)+skoXC1*skoXC1*(3/40))<=-1,skoXC1*skoXC1*skoXC1*skoXC1*((32/15)+skoXC1*skoXC1*((-296/15)+skoXC1*skoXC1*((391/15)+skoXC1*skoXC1*((-146/15)+skoXC1*skoXC1*(3/4)))))<=0,skoXC1*skoXC1*((1/3)+skoXC1*skoXC1*(3/20))<=1,skoXC1*skoXC1*skoXC1*skoXC1*((-17/120)+skoXC1*skoXC1*(3/80))<=0,skoXC1*skoXC1*skoXC1*skoXC1*((-13/60)+skoXC1*skoXC1*(-3/10))<=0,skoXC1*skoXC1*((-1/2)+skoXC1*skoXC1*((7/120)+skoXC1*skoXC1*(-3/40)))<=0,skoXC1*skoXC1*((-1/6)+skoXC1*skoXC1*(-3/40))<=1,skoXC1*(-1+skoXC1*skoXC1*((1/3)+skoXC1*skoXC1*(3/20)))<=0,skoXC1*skoXC1>0,skoXC1*skoXC1*(80+skoXC1*skoXC1*(-40+skoXC1*skoXC1*(6+skoXC1*skoXC1*(-1/8))))<=48,skoXC1*skoXC1*(-80+skoXC1*skoXC1*(40+skoXC1*skoXC1*(-6+skoXC1*skoXC1*(1/8))))>-48,skoXC1*skoXC1*(24+skoXC1*skoXC1*(-10+skoXC1*skoXC1))<=16,skoXC1*skoXC1*(1/2)<=3,skoXC1*skoXC1*(-1/2)>-3,skoXC1>0,(7/8)>skoXC1,skoXC1*(-1+skoXC1*skoXC1*(1/3))<=0,skoXC1*skoXC1*(-1/6)<=1,skoXC1*skoXC1*((-1/2)+skoXC1*skoXC1*(-1/6))<=0,skoXC1*skoXC1<=2,skoXC1*skoXC1*skoXC1*skoXC1*(-2/3)<=0,skoXC1*(-1+skoXC1*skoXC1*(-1/6))<=0,skoXC1*skoXC1*(1/3)<=1,skoXC1*skoXC1*(256+skoXC1*skoXC1*(-160+skoXC1*skoXC1*(32+skoXC1*skoXC1*-1)))<=128,skoXC1*skoXC1*skoXC1*skoXC1*((-80/3)+skoXC1*skoXC1*((128/3)+skoXC1*skoXC1*((-55/3)+skoXC1*skoXC1*(5/3))))<=0]], Reals]]

% In QepcadB format:
(E skoXC1) [[(skoXC1 skoXC1 (-1/3+(skoXC1 skoXC1 (-3/20))))<=-1]/\[[(skoXC1 skoXC1 (1/6+(skoXC1 skoXC1 (3/40))))<=-1]/\[[(skoXC1 skoXC1 skoXC1 skoXC1 (32/15+(skoXC1 skoXC1 (-296/15+(skoXC1 skoXC1 (391/15+(skoXC1 skoXC1 (-146/15+(skoXC1 skoXC1 (3/4))))))))))<=0]/\[[(skoXC1 skoXC1 (1/3+(skoXC1 skoXC1 (3/20))))<=1]/\[[(skoXC1 skoXC1 skoXC1 skoXC1 (-17/120+(skoXC1 skoXC1 (3/80))))<=0]/\[[(skoXC1 skoXC1 skoXC1 skoXC1 (-13/60+(skoXC1 skoXC1 (-3/10))))<=0]/\[[(skoXC1 skoXC1 (-1/2+(skoXC1 skoXC1 (7/120+(skoXC1 skoXC1 (-3/40))))))<=0]/\[[(skoXC1 skoXC1 (-1/6+(skoXC1 skoXC1 (-3/40))))<=1]/\[[(skoXC1 (-1+(skoXC1 skoXC1 (1/3+(skoXC1 skoXC1 (3/20))))))<=0]/\[[0<(skoXC1 skoXC1)]/\[[(skoXC1 skoXC1 (80+(skoXC1 skoXC1 (-40+(skoXC1 skoXC1 (6+(skoXC1 skoXC1 (-1/8))))))))<=48]/\[[-48<(skoXC1 skoXC1 (-80+(skoXC1 skoXC1 (40+(skoXC1 skoXC1 (-6+(skoXC1 skoXC1 (1/8))))))))]/\[[(skoXC1 skoXC1 (24+(skoXC1 skoXC1 (-10+(skoXC1 skoXC1)))))<=16]/\[[(skoXC1 skoXC1 (1/2))<=3]/\[[-3<(skoXC1 skoXC1 (-1/2))]/\[[0<skoXC1]/\[[skoXC1<7/8]/\[[(skoXC1 (-1+(skoXC1 skoXC1 (1/3))))<=0]/\[[(skoXC1 skoXC1 (-1/6))<=1]/\[[(skoXC1 skoXC1 (-1/2+(skoXC1 skoXC1 (-1/6))))<=0]/\[[(skoXC1 skoXC1)<=2]/\[[(skoXC1 skoXC1 skoXC1 skoXC1 (-2/3))<=0]/\[[(skoXC1 (-1+(skoXC1 skoXC1 (-1/6))))<=0]/\[[(skoXC1 skoXC1 (1/3))<=1]/\[[(skoXC1 skoXC1 (256+(skoXC1 skoXC1 (-160+(skoXC1 skoXC1 (32+(skoXC1 skoXC1 (-1))))))))<=128]/\[(skoXC1 skoXC1 skoXC1 skoXC1 (-80/3+(skoXC1 skoXC1 (128/3+(skoXC1 skoXC1 (-55/3+(skoXC1 skoXC1 (5/3))))))))<=0]]]]]]]]]]]]]]]]]]]]]]]]]].

% In SMTLib2 format:
(declare-fun skoXC1 () Real) (assert (and (<= (* skoXC1 (* skoXC1 (+ (/ (- 1.) 3.) (* skoXC1 (* skoXC1 (/ (- 3.) 20.)))))) (- 1.)) (and (<= (* skoXC1 (* skoXC1 (+ (/ 1. 6.) (* skoXC1 (* skoXC1 (/ 3. 40.)))))) (- 1.)) (and (<= (* skoXC1 (* skoXC1 (* skoXC1 (* skoXC1 (+ (/ 32. 15.) (* skoXC1 (* skoXC1 (+ (/ (- 296.) 15.) (* skoXC1 (* skoXC1 (+ (/ 391. 15.) (* skoXC1 (* skoXC1 (+ (/ (- 146.) 15.) (* skoXC1 (* skoXC1 (/ 3. 4.))))))))))))))))) 0.) (and (<= (* skoXC1 (* skoXC1 (+ (/ 1. 3.) (* skoXC1 (* skoXC1 (/ 3. 20.)))))) 1.) (and (<= (* skoXC1 (* skoXC1 (* skoXC1 (* skoXC1 (+ (/ (- 17.) 120.) (* skoXC1 (* skoXC1 (/ 3. 80.)))))))) 0.) (and (<= (* skoXC1 (* skoXC1 (* skoXC1 (* skoXC1 (+ (/ (- 13.) 60.) (* skoXC1 (* skoXC1 (/ (- 3.) 10.)))))))) 0.) (and (<= (* skoXC1 (* skoXC1 (+ (/ (- 1.) 2.) (* skoXC1 (* skoXC1 (+ (/ 7. 120.) (* skoXC1 (* skoXC1 (/ (- 3.) 40.))))))))) 0.) (and (<= (* skoXC1 (* skoXC1 (+ (/ (- 1.) 6.) (* skoXC1 (* skoXC1 (/ (- 3.) 40.)))))) 1.) (and (<= (* skoXC1 (+ (- 1.) (* skoXC1 (* skoXC1 (+ (/ 1. 3.) (* skoXC1 (* skoXC1 (/ 3. 20.)))))))) 0.) (and (> (* skoXC1 skoXC1) 0.) (and (<= (* skoXC1 (* skoXC1 (+ 80. (* skoXC1 (* skoXC1 (+ (- 40.) (* skoXC1 (* skoXC1 (+ 6. (* skoXC1 (* skoXC1 (/ (- 1.) 8.)))))))))))) 48.) (and (> (* skoXC1 (* skoXC1 (+ (- 80.) (* skoXC1 (* skoXC1 (+ 40. (* skoXC1 (* skoXC1 (+ (- 6.) (* skoXC1 (* skoXC1 (/ 1. 8.)))))))))))) (- 48.)) (and (<= (* skoXC1 (* skoXC1 (+ 24. (* skoXC1 (* skoXC1 (+ (- 10.) (* skoXC1 skoXC1))))))) 16.) (and (<= (* skoXC1 (* skoXC1 (/ 1. 2.))) 3.) (and (> (* skoXC1 (* skoXC1 (/ (- 1.) 2.))) (- 3.)) (and (> skoXC1 0.) (and (> (/ 7. 8.) skoXC1) (and (<= (* skoXC1 (+ (- 1.) (* skoXC1 (* skoXC1 (/ 1. 3.))))) 0.) (and (<= (* skoXC1 (* skoXC1 (/ (- 1.) 6.))) 1.) (and (<= (* skoXC1 (* skoXC1 (+ (/ (- 1.) 2.) (* skoXC1 (* skoXC1 (/ (- 1.) 6.)))))) 0.) (and (<= (* skoXC1 skoXC1) 2.) (and (<= (* skoXC1 (* skoXC1 (* skoXC1 (* skoXC1 (/ (- 2.) 3.))))) 0.) (and (<= (* skoXC1 (+ (- 1.) (* skoXC1 (* skoXC1 (/ (- 1.) 6.))))) 0.) (and (<= (* skoXC1 (* skoXC1 (/ 1. 3.))) 1.) (and (<= (* skoXC1 (* skoXC1 (+ 256. (* skoXC1 (* skoXC1 (+ (- 160.) (* skoXC1 (* skoXC1 (+ 32. (* skoXC1 (* skoXC1 (- 1.)))))))))))) 128.) (<= (* skoXC1 (* skoXC1 (* skoXC1 (* skoXC1 (+ (/ (- 80.) 3.) (* skoXC1 (* skoXC1 (+ (/ 128. 3.) (* skoXC1 (* skoXC1 (+ (/ (- 55.) 3.) (* skoXC1 (* skoXC1 (/ 5. 3.)))))))))))))) 0.)))))))))))))))))))))))))))

% In GRF format:
(sequent " MetiTarski formula " (antecedent (<= (* skoXC1 (* skoXC1 (+ (/ (- 1.) 3.) (* skoXC1 (* skoXC1 (/ (- 3.) 20.)))))) (- 1.)) (<= (* skoXC1 (* skoXC1 (+ (/ 1. 6.) (* skoXC1 (* skoXC1 (/ 3. 40.)))))) (- 1.)) (<= (* skoXC1 (* skoXC1 (* skoXC1 (* skoXC1 (+ (/ 32. 15.) (* skoXC1 (* skoXC1 (+ (/ (- 296.) 15.) (* skoXC1 (* skoXC1 (+ (/ 391. 15.) (* skoXC1 (* skoXC1 (+ (/ (- 146.) 15.) (* skoXC1 (* skoXC1 (/ 3. 4.))))))))))))))))) 0.) (<= (* skoXC1 (* skoXC1 (+ (/ 1. 3.) (* skoXC1 (* skoXC1 (/ 3. 20.)))))) 1.) (<= (* skoXC1 (* skoXC1 (* skoXC1 (* skoXC1 (+ (/ (- 17.) 120.) (* skoXC1 (* skoXC1 (/ 3. 80.)))))))) 0.) (<= (* skoXC1 (* skoXC1 (* skoXC1 (* skoXC1 (+ (/ (- 13.) 60.) (* skoXC1 (* skoXC1 (/ (- 3.) 10.)))))))) 0.) (<= (* skoXC1 (* skoXC1 (+ (/ (- 1.) 2.) (* skoXC1 (* skoXC1 (+ (/ 7. 120.) (* skoXC1 (* skoXC1 (/ (- 3.) 40.))))))))) 0.) (<= (* skoXC1 (* skoXC1 (+ (/ (- 1.) 6.) (* skoXC1 (* skoXC1 (/ (- 3.) 40.)))))) 1.) (<= (* skoXC1 (+ (- 1.) (* skoXC1 (* skoXC1 (+ (/ 1. 3.) (* skoXC1 (* skoXC1 (/ 3. 20.)))))))) 0.) (> (* skoXC1 skoXC1) 0.) (<= (* skoXC1 (* skoXC1 (+ 80. (* skoXC1 (* skoXC1 (+ (- 40.) (* skoXC1 (* skoXC1 (+ 6. (* skoXC1 (* skoXC1 (/ (- 1.) 8.)))))))))))) 48.) (> (* skoXC1 (* skoXC1 (+ (- 80.) (* skoXC1 (* skoXC1 (+ 40. (* skoXC1 (* skoXC1 (+ (- 6.) (* skoXC1 (* skoXC1 (/ 1. 8.)))))))))))) (- 48.)) (<= (* skoXC1 (* skoXC1 (+ 24. (* skoXC1 (* skoXC1 (+ (- 10.) (* skoXC1 skoXC1))))))) 16.) (<= (* skoXC1 (* skoXC1 (/ 1. 2.))) 3.) (> (* skoXC1 (* skoXC1 (/ (- 1.) 2.))) (- 3.)) (> skoXC1 0.) (> (/ 7. 8.) skoXC1) (<= (* skoXC1 (+ (- 1.) (* skoXC1 (* skoXC1 (/ 1. 3.))))) 0.) (<= (* skoXC1 (* skoXC1 (/ (- 1.) 6.))) 1.) (<= (* skoXC1 (* skoXC1 (+ (/ (- 1.) 2.) (* skoXC1 (* skoXC1 (/ (- 1.) 6.)))))) 0.) (<= (* skoXC1 skoXC1) 2.) (<= (* skoXC1 (* skoXC1 (* skoXC1 (* skoXC1 (/ (- 2.) 3.))))) 0.) (<= (* skoXC1 (+ (- 1.) (* skoXC1 (* skoXC1 (/ (- 1.) 6.))))) 0.) (<= (* skoXC1 (* skoXC1 (/ 1. 3.))) 1.) (<= (* skoXC1 (* skoXC1 (+ 256. (* skoXC1 (* skoXC1 (+ (- 160.) (* skoXC1 (* skoXC1 (+ 32. (* skoXC1 (* skoXC1 (- 1.)))))))))))) 128.)) (succedent (> (* skoXC1 (* skoXC1 (* skoXC1 (* skoXC1 (+ (/ (- 80.) 3.) (* skoXC1 (* skoXC1 (+ (/ 128. 3.) (* skoXC1 (* skoXC1 (+ (/ (- 55.) 3.) (* skoXC1 (* skoXC1 (/ 5. 3.)))))))))))))) 0.)))
-----[end problem]-----

-----[begin problem]-----
% In Mathematica format:
Timing[Resolve[Exists[{skoXC1}, And[skoXC1*skoXC1*((1/6)+skoXC1*skoXC1*(3/40))>-1,skoXC1*skoXC1*skoXC1*skoXC1*((32/15)+skoXC1*skoXC1*((-296/15)+skoXC1*skoXC1*((391/15)+skoXC1*skoXC1*((-146/15)+skoXC1*skoXC1*(3/4)))))<=0,skoXC1*skoXC1*((1/3)+skoXC1*skoXC1*(3/20))<=1,skoXC1*skoXC1*skoXC1*skoXC1*((-17/120)+skoXC1*skoXC1*(3/80))<=0,skoXC1*skoXC1*skoXC1*skoXC1*((-13/60)+skoXC1*skoXC1*(-3/10))<=0,skoXC1*skoXC1*((-1/2)+skoXC1*skoXC1*((7/120)+skoXC1*skoXC1*(-3/40)))<=0,skoXC1*skoXC1*((-1/6)+skoXC1*skoXC1*(-3/40))<=1,skoXC1*(-1+skoXC1*skoXC1*((1/3)+skoXC1*skoXC1*(3/20)))<=0,skoXC1*skoXC1>0,skoXC1*skoXC1*(80+skoXC1*skoXC1*(-40+skoXC1*skoXC1*(6+skoXC1*skoXC1*(-1/8))))<=48,skoXC1*skoXC1*(-80+skoXC1*skoXC1*(40+skoXC1*skoXC1*(-6+skoXC1*skoXC1*(1/8))))>-48,skoXC1*skoXC1*(24+skoXC1*skoXC1*(-10+skoXC1*skoXC1))<=16,skoXC1*skoXC1*(1/2)<=3,skoXC1*skoXC1*(-1/2)>-3,skoXC1>0,(7/8)>skoXC1,skoXC1*(-1+skoXC1*skoXC1*(1/3))<=0,skoXC1*skoXC1*(-1/6)<=1,skoXC1*skoXC1*((-1/2)+skoXC1*skoXC1*(-1/6))<=0,skoXC1*skoXC1<=2,skoXC1*skoXC1*skoXC1*skoXC1*(-2/3)<=0,skoXC1*(-1+skoXC1*skoXC1*(-1/6))<=0,skoXC1*skoXC1*(1/3)<=1,skoXC1*skoXC1*(256+skoXC1*skoXC1*(-160+skoXC1*skoXC1*(32+skoXC1*skoXC1*-1)))<=128,skoXC1*skoXC1*skoXC1*skoXC1*((-80/3)+skoXC1*skoXC1*((128/3)+skoXC1*skoXC1*((-55/3)+skoXC1*skoXC1*(5/3))))<=0]], Reals]]

% In QepcadB format:
(E skoXC1) [[-1<(skoXC1 skoXC1 (1/6+(skoXC1 skoXC1 (3/40))))]/\[[(skoXC1 skoXC1 skoXC1 skoXC1 (32/15+(skoXC1 skoXC1 (-296/15+(skoXC1 skoXC1 (391/15+(skoXC1 skoXC1 (-146/15+(skoXC1 skoXC1 (3/4))))))))))<=0]/\[[(skoXC1 skoXC1 (1/3+(skoXC1 skoXC1 (3/20))))<=1]/\[[(skoXC1 skoXC1 skoXC1 skoXC1 (-17/120+(skoXC1 skoXC1 (3/80))))<=0]/\[[(skoXC1 skoXC1 skoXC1 skoXC1 (-13/60+(skoXC1 skoXC1 (-3/10))))<=0]/\[[(skoXC1 skoXC1 (-1/2+(skoXC1 skoXC1 (7/120+(skoXC1 skoXC1 (-3/40))))))<=0]/\[[(skoXC1 skoXC1 (-1/6+(skoXC1 skoXC1 (-3/40))))<=1]/\[[(skoXC1 (-1+(skoXC1 skoXC1 (1/3+(skoXC1 skoXC1 (3/20))))))<=0]/\[[0<(skoXC1 skoXC1)]/\[[(skoXC1 skoXC1 (80+(skoXC1 skoXC1 (-40+(skoXC1 skoXC1 (6+(skoXC1 skoXC1 (-1/8))))))))<=48]/\[[-48<(skoXC1 skoXC1 (-80+(skoXC1 skoXC1 (40+(skoXC1 skoXC1 (-6+(skoXC1 skoXC1 (1/8))))))))]/\[[(skoXC1 skoXC1 (24+(skoXC1 skoXC1 (-10+(skoXC1 skoXC1)))))<=16]/\[[(skoXC1 skoXC1 (1/2))<=3]/\[[-3<(skoXC1 skoXC1 (-1/2))]/\[[0<skoXC1]/\[[skoXC1<7/8]/\[[(skoXC1 (-1+(skoXC1 skoXC1 (1/3))))<=0]/\[[(skoXC1 skoXC1 (-1/6))<=1]/\[[(skoXC1 skoXC1 (-1/2+(skoXC1 skoXC1 (-1/6))))<=0]/\[[(skoXC1 skoXC1)<=2]/\[[(skoXC1 skoXC1 skoXC1 skoXC1 (-2/3))<=0]/\[[(skoXC1 (-1+(skoXC1 skoXC1 (-1/6))))<=0]/\[[(skoXC1 skoXC1 (1/3))<=1]/\[[(skoXC1 skoXC1 (256+(skoXC1 skoXC1 (-160+(skoXC1 skoXC1 (32+(skoXC1 skoXC1 (-1))))))))<=128]/\[(skoXC1 skoXC1 skoXC1 skoXC1 (-80/3+(skoXC1 skoXC1 (128/3+(skoXC1 skoXC1 (-55/3+(skoXC1 skoXC1 (5/3))))))))<=0]]]]]]]]]]]]]]]]]]]]]]]]].

% In SMTLib2 format:
(declare-fun skoXC1 () Real) (assert (and (> (* skoXC1 (* skoXC1 (+ (/ 1. 6.) (* skoXC1 (* skoXC1 (/ 3. 40.)))))) (- 1.)) (and (<= (* skoXC1 (* skoXC1 (* skoXC1 (* skoXC1 (+ (/ 32. 15.) (* skoXC1 (* skoXC1 (+ (/ (- 296.) 15.) (* skoXC1 (* skoXC1 (+ (/ 391. 15.) (* skoXC1 (* skoXC1 (+ (/ (- 146.) 15.) (* skoXC1 (* skoXC1 (/ 3. 4.))))))))))))))))) 0.) (and (<= (* skoXC1 (* skoXC1 (+ (/ 1. 3.) (* skoXC1 (* skoXC1 (/ 3. 20.)))))) 1.) (and (<= (* skoXC1 (* skoXC1 (* skoXC1 (* skoXC1 (+ (/ (- 17.) 120.) (* skoXC1 (* skoXC1 (/ 3. 80.)))))))) 0.) (and (<= (* skoXC1 (* skoXC1 (* skoXC1 (* skoXC1 (+ (/ (- 13.) 60.) (* skoXC1 (* skoXC1 (/ (- 3.) 10.)))))))) 0.) (and (<= (* skoXC1 (* skoXC1 (+ (/ (- 1.) 2.) (* skoXC1 (* skoXC1 (+ (/ 7. 120.) (* skoXC1 (* skoXC1 (/ (- 3.) 40.))))))))) 0.) (and (<= (* skoXC1 (* skoXC1 (+ (/ (- 1.) 6.) (* skoXC1 (* skoXC1 (/ (- 3.) 40.)))))) 1.) (and (<= (* skoXC1 (+ (- 1.) (* skoXC1 (* skoXC1 (+ (/ 1. 3.) (* skoXC1 (* skoXC1 (/ 3. 20.)))))))) 0.) (and (> (* skoXC1 skoXC1) 0.) (and (<= (* skoXC1 (* skoXC1 (+ 80. (* skoXC1 (* skoXC1 (+ (- 40.) (* skoXC1 (* skoXC1 (+ 6. (* skoXC1 (* skoXC1 (/ (- 1.) 8.)))))))))))) 48.) (and (> (* skoXC1 (* skoXC1 (+ (- 80.) (* skoXC1 (* skoXC1 (+ 40. (* skoXC1 (* skoXC1 (+ (- 6.) (* skoXC1 (* skoXC1 (/ 1. 8.)))))))))))) (- 48.)) (and (<= (* skoXC1 (* skoXC1 (+ 24. (* skoXC1 (* skoXC1 (+ (- 10.) (* skoXC1 skoXC1))))))) 16.) (and (<= (* skoXC1 (* skoXC1 (/ 1. 2.))) 3.) (and (> (* skoXC1 (* skoXC1 (/ (- 1.) 2.))) (- 3.)) (and (> skoXC1 0.) (and (> (/ 7. 8.) skoXC1) (and (<= (* skoXC1 (+ (- 1.) (* skoXC1 (* skoXC1 (/ 1. 3.))))) 0.) (and (<= (* skoXC1 (* skoXC1 (/ (- 1.) 6.))) 1.) (and (<= (* skoXC1 (* skoXC1 (+ (/ (- 1.) 2.) (* skoXC1 (* skoXC1 (/ (- 1.) 6.)))))) 0.) (and (<= (* skoXC1 skoXC1) 2.) (and (<= (* skoXC1 (* skoXC1 (* skoXC1 (* skoXC1 (/ (- 2.) 3.))))) 0.) (and (<= (* skoXC1 (+ (- 1.) (* skoXC1 (* skoXC1 (/ (- 1.) 6.))))) 0.) (and (<= (* skoXC1 (* skoXC1 (/ 1. 3.))) 1.) (and (<= (* skoXC1 (* skoXC1 (+ 256. (* skoXC1 (* skoXC1 (+ (- 160.) (* skoXC1 (* skoXC1 (+ 32. (* skoXC1 (* skoXC1 (- 1.)))))))))))) 128.) (<= (* skoXC1 (* skoXC1 (* skoXC1 (* skoXC1 (+ (/ (- 80.) 3.) (* skoXC1 (* skoXC1 (+ (/ 128. 3.) (* skoXC1 (* skoXC1 (+ (/ (- 55.) 3.) (* skoXC1 (* skoXC1 (/ 5. 3.)))))))))))))) 0.))))))))))))))))))))))))))

% In GRF format:
(sequent " MetiTarski formula " (antecedent (> (* skoXC1 (* skoXC1 (+ (/ 1. 6.) (* skoXC1 (* skoXC1 (/ 3. 40.)))))) (- 1.)) (<= (* skoXC1 (* skoXC1 (* skoXC1 (* skoXC1 (+ (/ 32. 15.) (* skoXC1 (* skoXC1 (+ (/ (- 296.) 15.) (* skoXC1 (* skoXC1 (+ (/ 391. 15.) (* skoXC1 (* skoXC1 (+ (/ (- 146.) 15.) (* skoXC1 (* skoXC1 (/ 3. 4.))))))))))))))))) 0.) (<= (* skoXC1 (* skoXC1 (+ (/ 1. 3.) (* skoXC1 (* skoXC1 (/ 3. 20.)))))) 1.) (<= (* skoXC1 (* skoXC1 (* skoXC1 (* skoXC1 (+ (/ (- 17.) 120.) (* skoXC1 (* skoXC1 (/ 3. 80.)))))))) 0.) (<= (* skoXC1 (* skoXC1 (* skoXC1 (* skoXC1 (+ (/ (- 13.) 60.) (* skoXC1 (* skoXC1 (/ (- 3.) 10.)))))))) 0.) (<= (* skoXC1 (* skoXC1 (+ (/ (- 1.) 2.) (* skoXC1 (* skoXC1 (+ (/ 7. 120.) (* skoXC1 (* skoXC1 (/ (- 3.) 40.))))))))) 0.) (<= (* skoXC1 (* skoXC1 (+ (/ (- 1.) 6.) (* skoXC1 (* skoXC1 (/ (- 3.) 40.)))))) 1.) (<= (* skoXC1 (+ (- 1.) (* skoXC1 (* skoXC1 (+ (/ 1. 3.) (* skoXC1 (* skoXC1 (/ 3. 20.)))))))) 0.) (> (* skoXC1 skoXC1) 0.) (<= (* skoXC1 (* skoXC1 (+ 80. (* skoXC1 (* skoXC1 (+ (- 40.) (* skoXC1 (* skoXC1 (+ 6. (* skoXC1 (* skoXC1 (/ (- 1.) 8.)))))))))))) 48.) (> (* skoXC1 (* skoXC1 (+ (- 80.) (* skoXC1 (* skoXC1 (+ 40. (* skoXC1 (* skoXC1 (+ (- 6.) (* skoXC1 (* skoXC1 (/ 1. 8.)))))))))))) (- 48.)) (<= (* skoXC1 (* skoXC1 (+ 24. (* skoXC1 (* skoXC1 (+ (- 10.) (* skoXC1 skoXC1))))))) 16.) (<= (* skoXC1 (* skoXC1 (/ 1. 2.))) 3.) (> (* skoXC1 (* skoXC1 (/ (- 1.) 2.))) (- 3.)) (> skoXC1 0.) (> (/ 7. 8.) skoXC1) (<= (* skoXC1 (+ (- 1.) (* skoXC1 (* skoXC1 (/ 1. 3.))))) 0.) (<= (* skoXC1 (* skoXC1 (/ (- 1.) 6.))) 1.) (<= (* skoXC1 (* skoXC1 (+ (/ (- 1.) 2.) (* skoXC1 (* skoXC1 (/ (- 1.) 6.)))))) 0.) (<= (* skoXC1 skoXC1) 2.) (<= (* skoXC1 (* skoXC1 (* skoXC1 (* skoXC1 (/ (- 2.) 3.))))) 0.) (<= (* skoXC1 (+ (- 1.) (* skoXC1 (* skoXC1 (/ (- 1.) 6.))))) 0.) (<= (* skoXC1 (* skoXC1 (/ 1. 3.))) 1.) (<= (* skoXC1 (* skoXC1 (+ 256. (* skoXC1 (* skoXC1 (+ (- 160.) (* skoXC1 (* skoXC1 (+ 32. (* skoXC1 (* skoXC1 (- 1.)))))))))))) 128.)) (succedent (> (* skoXC1 (* skoXC1 (* skoXC1 (* skoXC1 (+ (/ (- 80.) 3.) (* skoXC1 (* skoXC1 (+ (/ 128. 3.) (* skoXC1 (* skoXC1 (+ (/ (- 55.) 3.) (* skoXC1 (* skoXC1 (/ 5. 3.)))))))))))))) 0.)))
-----[end problem]-----

-----[begin problem]-----
% In Mathematica format:
Timing[Resolve[Exists[{skoXC1}, And[skoXC1*skoXC1>0,skoXC1*skoXC1*((1/6)+skoXC1*skoXC1*(3/40))>-1,skoXC1*skoXC1*skoXC1*skoXC1*((32/15)+skoXC1*skoXC1*((-296/15)+skoXC1*skoXC1*((391/15)+skoXC1*skoXC1*((-146/15)+skoXC1*skoXC1*(3/4)))))<=0,skoXC1*skoXC1*((1/3)+skoXC1*skoXC1*(3/20))<=1,skoXC1*skoXC1*skoXC1*skoXC1*((-17/120)+skoXC1*skoXC1*(3/80))<=0,skoXC1*skoXC1*skoXC1*skoXC1*((-13/60)+skoXC1*skoXC1*(-3/10))<=0,skoXC1*skoXC1*((-1/2)+skoXC1*skoXC1*((7/120)+skoXC1*skoXC1*(-3/40)))<=0,skoXC1*skoXC1*((-1/6)+skoXC1*skoXC1*(-3/40))<=1,skoXC1*(-1+skoXC1*skoXC1*((1/3)+skoXC1*skoXC1*(3/20)))<=0,skoXC1*skoXC1>0,skoXC1*skoXC1*(80+skoXC1*skoXC1*(-40+skoXC1*skoXC1*(6+skoXC1*skoXC1*(-1/8))))<=48,skoXC1*skoXC1*(-80+skoXC1*skoXC1*(40+skoXC1*skoXC1*(-6+skoXC1*skoXC1*(1/8))))>-48,skoXC1*skoXC1*(24+skoXC1*skoXC1*(-10+skoXC1*skoXC1))<=16,skoXC1*skoXC1*(1/2)<=3,skoXC1*skoXC1*(-1/2)>-3,skoXC1>0,(7/8)>skoXC1,skoXC1*(-1+skoXC1*skoXC1*(1/3))<=0,skoXC1*skoXC1*(-1/6)<=1,skoXC1*skoXC1*((-1/2)+skoXC1*skoXC1*(-1/6))<=0,skoXC1*skoXC1<=2,skoXC1*skoXC1*skoXC1*skoXC1*(-2/3)<=0,skoXC1*(-1+skoXC1*skoXC1*(-1/6))<=0,skoXC1*skoXC1*(1/3)<=1,skoXC1*skoXC1*(256+skoXC1*skoXC1*(-160+skoXC1*skoXC1*(32+skoXC1*skoXC1*-1)))<=128,skoXC1*skoXC1*skoXC1*skoXC1*((-80/3)+skoXC1*skoXC1*((128/3)+skoXC1*skoXC1*((-55/3)+skoXC1*skoXC1*(5/3))))<=0]], Reals]]

% In QepcadB format:
(E skoXC1) [[0<(skoXC1 skoXC1)]/\[[-1<(skoXC1 skoXC1 (1/6+(skoXC1 skoXC1 (3/40))))]/\[[(skoXC1 skoXC1 skoXC1 skoXC1 (32/15+(skoXC1 skoXC1 (-296/15+(skoXC1 skoXC1 (391/15+(skoXC1 skoXC1 (-146/15+(skoXC1 skoXC1 (3/4))))))))))<=0]/\[[(skoXC1 skoXC1 (1/3+(skoXC1 skoXC1 (3/20))))<=1]/\[[(skoXC1 skoXC1 skoXC1 skoXC1 (-17/120+(skoXC1 skoXC1 (3/80))))<=0]/\[[(skoXC1 skoXC1 skoXC1 skoXC1 (-13/60+(skoXC1 skoXC1 (-3/10))))<=0]/\[[(skoXC1 skoXC1 (-1/2+(skoXC1 skoXC1 (7/120+(skoXC1 skoXC1 (-3/40))))))<=0]/\[[(skoXC1 skoXC1 (-1/6+(skoXC1 skoXC1 (-3/40))))<=1]/\[[(skoXC1 (-1+(skoXC1 skoXC1 (1/3+(skoXC1 skoXC1 (3/20))))))<=0]/\[[0<(skoXC1 skoXC1)]/\[[(skoXC1 skoXC1 (80+(skoXC1 skoXC1 (-40+(skoXC1 skoXC1 (6+(skoXC1 skoXC1 (-1/8))))))))<=48]/\[[-48<(skoXC1 skoXC1 (-80+(skoXC1 skoXC1 (40+(skoXC1 skoXC1 (-6+(skoXC1 skoXC1 (1/8))))))))]/\[[(skoXC1 skoXC1 (24+(skoXC1 skoXC1 (-10+(skoXC1 skoXC1)))))<=16]/\[[(skoXC1 skoXC1 (1/2))<=3]/\[[-3<(skoXC1 skoXC1 (-1/2))]/\[[0<skoXC1]/\[[skoXC1<7/8]/\[[(skoXC1 (-1+(skoXC1 skoXC1 (1/3))))<=0]/\[[(skoXC1 skoXC1 (-1/6))<=1]/\[[(skoXC1 skoXC1 (-1/2+(skoXC1 skoXC1 (-1/6))))<=0]/\[[(skoXC1 skoXC1)<=2]/\[[(skoXC1 skoXC1 skoXC1 skoXC1 (-2/3))<=0]/\[[(skoXC1 (-1+(skoXC1 skoXC1 (-1/6))))<=0]/\[[(skoXC1 skoXC1 (1/3))<=1]/\[[(skoXC1 skoXC1 (256+(skoXC1 skoXC1 (-160+(skoXC1 skoXC1 (32+(skoXC1 skoXC1 (-1))))))))<=128]/\[(skoXC1 skoXC1 skoXC1 skoXC1 (-80/3+(skoXC1 skoXC1 (128/3+(skoXC1 skoXC1 (-55/3+(skoXC1 skoXC1 (5/3))))))))<=0]]]]]]]]]]]]]]]]]]]]]]]]]].

% In SMTLib2 format:
(declare-fun skoXC1 () Real) (assert (and (> (* skoXC1 skoXC1) 0.) (and (> (* skoXC1 (* skoXC1 (+ (/ 1. 6.) (* skoXC1 (* skoXC1 (/ 3. 40.)))))) (- 1.)) (and (<= (* skoXC1 (* skoXC1 (* skoXC1 (* skoXC1 (+ (/ 32. 15.) (* skoXC1 (* skoXC1 (+ (/ (- 296.) 15.) (* skoXC1 (* skoXC1 (+ (/ 391. 15.) (* skoXC1 (* skoXC1 (+ (/ (- 146.) 15.) (* skoXC1 (* skoXC1 (/ 3. 4.))))))))))))))))) 0.) (and (<= (* skoXC1 (* skoXC1 (+ (/ 1. 3.) (* skoXC1 (* skoXC1 (/ 3. 20.)))))) 1.) (and (<= (* skoXC1 (* skoXC1 (* skoXC1 (* skoXC1 (+ (/ (- 17.) 120.) (* skoXC1 (* skoXC1 (/ 3. 80.)))))))) 0.) (and (<= (* skoXC1 (* skoXC1 (* skoXC1 (* skoXC1 (+ (/ (- 13.) 60.) (* skoXC1 (* skoXC1 (/ (- 3.) 10.)))))))) 0.) (and (<= (* skoXC1 (* skoXC1 (+ (/ (- 1.) 2.) (* skoXC1 (* skoXC1 (+ (/ 7. 120.) (* skoXC1 (* skoXC1 (/ (- 3.) 40.))))))))) 0.) (and (<= (* skoXC1 (* skoXC1 (+ (/ (- 1.) 6.) (* skoXC1 (* skoXC1 (/ (- 3.) 40.)))))) 1.) (and (<= (* skoXC1 (+ (- 1.) (* skoXC1 (* skoXC1 (+ (/ 1. 3.) (* skoXC1 (* skoXC1 (/ 3. 20.)))))))) 0.) (and (> (* skoXC1 skoXC1) 0.) (and (<= (* skoXC1 (* skoXC1 (+ 80. (* skoXC1 (* skoXC1 (+ (- 40.) (* skoXC1 (* skoXC1 (+ 6. (* skoXC1 (* skoXC1 (/ (- 1.) 8.)))))))))))) 48.) (and (> (* skoXC1 (* skoXC1 (+ (- 80.) (* skoXC1 (* skoXC1 (+ 40. (* skoXC1 (* skoXC1 (+ (- 6.) (* skoXC1 (* skoXC1 (/ 1. 8.)))))))))))) (- 48.)) (and (<= (* skoXC1 (* skoXC1 (+ 24. (* skoXC1 (* skoXC1 (+ (- 10.) (* skoXC1 skoXC1))))))) 16.) (and (<= (* skoXC1 (* skoXC1 (/ 1. 2.))) 3.) (and (> (* skoXC1 (* skoXC1 (/ (- 1.) 2.))) (- 3.)) (and (> skoXC1 0.) (and (> (/ 7. 8.) skoXC1) (and (<= (* skoXC1 (+ (- 1.) (* skoXC1 (* skoXC1 (/ 1. 3.))))) 0.) (and (<= (* skoXC1 (* skoXC1 (/ (- 1.) 6.))) 1.) (and (<= (* skoXC1 (* skoXC1 (+ (/ (- 1.) 2.) (* skoXC1 (* skoXC1 (/ (- 1.) 6.)))))) 0.) (and (<= (* skoXC1 skoXC1) 2.) (and (<= (* skoXC1 (* skoXC1 (* skoXC1 (* skoXC1 (/ (- 2.) 3.))))) 0.) (and (<= (* skoXC1 (+ (- 1.) (* skoXC1 (* skoXC1 (/ (- 1.) 6.))))) 0.) (and (<= (* skoXC1 (* skoXC1 (/ 1. 3.))) 1.) (and (<= (* skoXC1 (* skoXC1 (+ 256. (* skoXC1 (* skoXC1 (+ (- 160.) (* skoXC1 (* skoXC1 (+ 32. (* skoXC1 (* skoXC1 (- 1.)))))))))))) 128.) (<= (* skoXC1 (* skoXC1 (* skoXC1 (* skoXC1 (+ (/ (- 80.) 3.) (* skoXC1 (* skoXC1 (+ (/ 128. 3.) (* skoXC1 (* skoXC1 (+ (/ (- 55.) 3.) (* skoXC1 (* skoXC1 (/ 5. 3.)))))))))))))) 0.)))))))))))))))))))))))))))

% In GRF format:
(sequent " MetiTarski formula " (antecedent (> (* skoXC1 skoXC1) 0.) (> (* skoXC1 (* skoXC1 (+ (/ 1. 6.) (* skoXC1 (* skoXC1 (/ 3. 40.)))))) (- 1.)) (<= (* skoXC1 (* skoXC1 (* skoXC1 (* skoXC1 (+ (/ 32. 15.) (* skoXC1 (* skoXC1 (+ (/ (- 296.) 15.) (* skoXC1 (* skoXC1 (+ (/ 391. 15.) (* skoXC1 (* skoXC1 (+ (/ (- 146.) 15.) (* skoXC1 (* skoXC1 (/ 3. 4.))))))))))))))))) 0.) (<= (* skoXC1 (* skoXC1 (+ (/ 1. 3.) (* skoXC1 (* skoXC1 (/ 3. 20.)))))) 1.) (<= (* skoXC1 (* skoXC1 (* skoXC1 (* skoXC1 (+ (/ (- 17.) 120.) (* skoXC1 (* skoXC1 (/ 3. 80.)))))))) 0.) (<= (* skoXC1 (* skoXC1 (* skoXC1 (* skoXC1 (+ (/ (- 13.) 60.) (* skoXC1 (* skoXC1 (/ (- 3.) 10.)))))))) 0.) (<= (* skoXC1 (* skoXC1 (+ (/ (- 1.) 2.) (* skoXC1 (* skoXC1 (+ (/ 7. 120.) (* skoXC1 (* skoXC1 (/ (- 3.) 40.))))))))) 0.) (<= (* skoXC1 (* skoXC1 (+ (/ (- 1.) 6.) (* skoXC1 (* skoXC1 (/ (- 3.) 40.)))))) 1.) (<= (* skoXC1 (+ (- 1.) (* skoXC1 (* skoXC1 (+ (/ 1. 3.) (* skoXC1 (* skoXC1 (/ 3. 20.)))))))) 0.) (> (* skoXC1 skoXC1) 0.) (<= (* skoXC1 (* skoXC1 (+ 80. (* skoXC1 (* skoXC1 (+ (- 40.) (* skoXC1 (* skoXC1 (+ 6. (* skoXC1 (* skoXC1 (/ (- 1.) 8.)))))))))))) 48.) (> (* skoXC1 (* skoXC1 (+ (- 80.) (* skoXC1 (* skoXC1 (+ 40. (* skoXC1 (* skoXC1 (+ (- 6.) (* skoXC1 (* skoXC1 (/ 1. 8.)))))))))))) (- 48.)) (<= (* skoXC1 (* skoXC1 (+ 24. (* skoXC1 (* skoXC1 (+ (- 10.) (* skoXC1 skoXC1))))))) 16.) (<= (* skoXC1 (* skoXC1 (/ 1. 2.))) 3.) (> (* skoXC1 (* skoXC1 (/ (- 1.) 2.))) (- 3.)) (> skoXC1 0.) (> (/ 7. 8.) skoXC1) (<= (* skoXC1 (+ (- 1.) (* skoXC1 (* skoXC1 (/ 1. 3.))))) 0.) (<= (* skoXC1 (* skoXC1 (/ (- 1.) 6.))) 1.) (<= (* skoXC1 (* skoXC1 (+ (/ (- 1.) 2.) (* skoXC1 (* skoXC1 (/ (- 1.) 6.)))))) 0.) (<= (* skoXC1 skoXC1) 2.) (<= (* skoXC1 (* skoXC1 (* skoXC1 (* skoXC1 (/ (- 2.) 3.))))) 0.) (<= (* skoXC1 (+ (- 1.) (* skoXC1 (* skoXC1 (/ (- 1.) 6.))))) 0.) (<= (* skoXC1 (* skoXC1 (/ 1. 3.))) 1.) (<= (* skoXC1 (* skoXC1 (+ 256. (* skoXC1 (* skoXC1 (+ (- 160.) (* skoXC1 (* skoXC1 (+ 32. (* skoXC1 (* skoXC1 (- 1.)))))))))))) 128.)) (succedent (> (* skoXC1 (* skoXC1 (* skoXC1 (* skoXC1 (+ (/ (- 80.) 3.) (* skoXC1 (* skoXC1 (+ (/ 128. 3.) (* skoXC1 (* skoXC1 (+ (/ (- 55.) 3.) (* skoXC1 (* skoXC1 (/ 5. 3.)))))))))))))) 0.)))
-----[end problem]-----

-----[begin problem]-----
% In Mathematica format:
Timing[Resolve[Exists[{skoXC1}, And[skoXC1*(-1+skoXC1*skoXC1*((-1/6)+skoXC1*skoXC1*(-3/40)))<=0,skoXC1*skoXC1<=1,skoXC1*skoXC1*((1/6)+skoXC1*skoXC1*(3/40))>-1,skoXC1*skoXC1*skoXC1*skoXC1*((32/15)+skoXC1*skoXC1*((-296/15)+skoXC1*skoXC1*((391/15)+skoXC1*skoXC1*((-146/15)+skoXC1*skoXC1*(3/4)))))<=0,skoXC1*skoXC1*((1/3)+skoXC1*skoXC1*(3/20))<=1,skoXC1*skoXC1*skoXC1*skoXC1*((-17/120)+skoXC1*skoXC1*(3/80))<=0,skoXC1*skoXC1*skoXC1*skoXC1*((-13/60)+skoXC1*skoXC1*(-3/10))<=0,skoXC1*skoXC1*((-1/2)+skoXC1*skoXC1*((7/120)+skoXC1*skoXC1*(-3/40)))<=0,skoXC1*skoXC1*((-1/6)+skoXC1*skoXC1*(-3/40))<=1,skoXC1*(-1+skoXC1*skoXC1*((1/3)+skoXC1*skoXC1*(3/20)))<=0,skoXC1*skoXC1>0,skoXC1*skoXC1*(80+skoXC1*skoXC1*(-40+skoXC1*skoXC1*(6+skoXC1*skoXC1*(-1/8))))<=48,skoXC1*skoXC1*(-80+skoXC1*skoXC1*(40+skoXC1*skoXC1*(-6+skoXC1*skoXC1*(1/8))))>-48,skoXC1*skoXC1*(24+skoXC1*skoXC1*(-10+skoXC1*skoXC1))<=16,skoXC1*skoXC1*(1/2)<=3,skoXC1*skoXC1*(-1/2)>-3,skoXC1>0,(7/8)>skoXC1,skoXC1*(-1+skoXC1*skoXC1*(1/3))<=0,skoXC1*skoXC1*(-1/6)<=1,skoXC1*skoXC1*((-1/2)+skoXC1*skoXC1*(-1/6))<=0,skoXC1*skoXC1<=2,skoXC1*skoXC1*skoXC1*skoXC1*(-2/3)<=0,skoXC1*(-1+skoXC1*skoXC1*(-1/6))<=0,skoXC1*skoXC1*(1/3)<=1,skoXC1*skoXC1*(256+skoXC1*skoXC1*(-160+skoXC1*skoXC1*(32+skoXC1*skoXC1*-1)))<=128,skoXC1*skoXC1*skoXC1*skoXC1*((-80/3)+skoXC1*skoXC1*((128/3)+skoXC1*skoXC1*((-55/3)+skoXC1*skoXC1*(5/3))))<=0]], Reals]]

% In QepcadB format:
(E skoXC1) [[(skoXC1 (-1+(skoXC1 skoXC1 (-1/6+(skoXC1 skoXC1 (-3/40))))))<=0]/\[[(skoXC1 skoXC1)<=1]/\[[-1<(skoXC1 skoXC1 (1/6+(skoXC1 skoXC1 (3/40))))]/\[[(skoXC1 skoXC1 skoXC1 skoXC1 (32/15+(skoXC1 skoXC1 (-296/15+(skoXC1 skoXC1 (391/15+(skoXC1 skoXC1 (-146/15+(skoXC1 skoXC1 (3/4))))))))))<=0]/\[[(skoXC1 skoXC1 (1/3+(skoXC1 skoXC1 (3/20))))<=1]/\[[(skoXC1 skoXC1 skoXC1 skoXC1 (-17/120+(skoXC1 skoXC1 (3/80))))<=0]/\[[(skoXC1 skoXC1 skoXC1 skoXC1 (-13/60+(skoXC1 skoXC1 (-3/10))))<=0]/\[[(skoXC1 skoXC1 (-1/2+(skoXC1 skoXC1 (7/120+(skoXC1 skoXC1 (-3/40))))))<=0]/\[[(skoXC1 skoXC1 (-1/6+(skoXC1 skoXC1 (-3/40))))<=1]/\[[(skoXC1 (-1+(skoXC1 skoXC1 (1/3+(skoXC1 skoXC1 (3/20))))))<=0]/\[[0<(skoXC1 skoXC1)]/\[[(skoXC1 skoXC1 (80+(skoXC1 skoXC1 (-40+(skoXC1 skoXC1 (6+(skoXC1 skoXC1 (-1/8))))))))<=48]/\[[-48<(skoXC1 skoXC1 (-80+(skoXC1 skoXC1 (40+(skoXC1 skoXC1 (-6+(skoXC1 skoXC1 (1/8))))))))]/\[[(skoXC1 skoXC1 (24+(skoXC1 skoXC1 (-10+(skoXC1 skoXC1)))))<=16]/\[[(skoXC1 skoXC1 (1/2))<=3]/\[[-3<(skoXC1 skoXC1 (-1/2))]/\[[0<skoXC1]/\[[skoXC1<7/8]/\[[(skoXC1 (-1+(skoXC1 skoXC1 (1/3))))<=0]/\[[(skoXC1 skoXC1 (-1/6))<=1]/\[[(skoXC1 skoXC1 (-1/2+(skoXC1 skoXC1 (-1/6))))<=0]/\[[(skoXC1 skoXC1)<=2]/\[[(skoXC1 skoXC1 skoXC1 skoXC1 (-2/3))<=0]/\[[(skoXC1 (-1+(skoXC1 skoXC1 (-1/6))))<=0]/\[[(skoXC1 skoXC1 (1/3))<=1]/\[[(skoXC1 skoXC1 (256+(skoXC1 skoXC1 (-160+(skoXC1 skoXC1 (32+(skoXC1 skoXC1 (-1))))))))<=128]/\[(skoXC1 skoXC1 skoXC1 skoXC1 (-80/3+(skoXC1 skoXC1 (128/3+(skoXC1 skoXC1 (-55/3+(skoXC1 skoXC1 (5/3))))))))<=0]]]]]]]]]]]]]]]]]]]]]]]]]]].

% In SMTLib2 format:
(declare-fun skoXC1 () Real) (assert (and (<= (* skoXC1 (+ (- 1.) (* skoXC1 (* skoXC1 (+ (/ (- 1.) 6.) (* skoXC1 (* skoXC1 (/ (- 3.) 40.)))))))) 0.) (and (<= (* skoXC1 skoXC1) 1.) (and (> (* skoXC1 (* skoXC1 (+ (/ 1. 6.) (* skoXC1 (* skoXC1 (/ 3. 40.)))))) (- 1.)) (and (<= (* skoXC1 (* skoXC1 (* skoXC1 (* skoXC1 (+ (/ 32. 15.) (* skoXC1 (* skoXC1 (+ (/ (- 296.) 15.) (* skoXC1 (* skoXC1 (+ (/ 391. 15.) (* skoXC1 (* skoXC1 (+ (/ (- 146.) 15.) (* skoXC1 (* skoXC1 (/ 3. 4.))))))))))))))))) 0.) (and (<= (* skoXC1 (* skoXC1 (+ (/ 1. 3.) (* skoXC1 (* skoXC1 (/ 3. 20.)))))) 1.) (and (<= (* skoXC1 (* skoXC1 (* skoXC1 (* skoXC1 (+ (/ (- 17.) 120.) (* skoXC1 (* skoXC1 (/ 3. 80.)))))))) 0.) (and (<= (* skoXC1 (* skoXC1 (* skoXC1 (* skoXC1 (+ (/ (- 13.) 60.) (* skoXC1 (* skoXC1 (/ (- 3.) 10.)))))))) 0.) (and (<= (* skoXC1 (* skoXC1 (+ (/ (- 1.) 2.) (* skoXC1 (* skoXC1 (+ (/ 7. 120.) (* skoXC1 (* skoXC1 (/ (- 3.) 40.))))))))) 0.) (and (<= (* skoXC1 (* skoXC1 (+ (/ (- 1.) 6.) (* skoXC1 (* skoXC1 (/ (- 3.) 40.)))))) 1.) (and (<= (* skoXC1 (+ (- 1.) (* skoXC1 (* skoXC1 (+ (/ 1. 3.) (* skoXC1 (* skoXC1 (/ 3. 20.)))))))) 0.) (and (> (* skoXC1 skoXC1) 0.) (and (<= (* skoXC1 (* skoXC1 (+ 80. (* skoXC1 (* skoXC1 (+ (- 40.) (* skoXC1 (* skoXC1 (+ 6. (* skoXC1 (* skoXC1 (/ (- 1.) 8.)))))))))))) 48.) (and (> (* skoXC1 (* skoXC1 (+ (- 80.) (* skoXC1 (* skoXC1 (+ 40. (* skoXC1 (* skoXC1 (+ (- 6.) (* skoXC1 (* skoXC1 (/ 1. 8.)))))))))))) (- 48.)) (and (<= (* skoXC1 (* skoXC1 (+ 24. (* skoXC1 (* skoXC1 (+ (- 10.) (* skoXC1 skoXC1))))))) 16.) (and (<= (* skoXC1 (* skoXC1 (/ 1. 2.))) 3.) (and (> (* skoXC1 (* skoXC1 (/ (- 1.) 2.))) (- 3.)) (and (> skoXC1 0.) (and (> (/ 7. 8.) skoXC1) (and (<= (* skoXC1 (+ (- 1.) (* skoXC1 (* skoXC1 (/ 1. 3.))))) 0.) (and (<= (* skoXC1 (* skoXC1 (/ (- 1.) 6.))) 1.) (and (<= (* skoXC1 (* skoXC1 (+ (/ (- 1.) 2.) (* skoXC1 (* skoXC1 (/ (- 1.) 6.)))))) 0.) (and (<= (* skoXC1 skoXC1) 2.) (and (<= (* skoXC1 (* skoXC1 (* skoXC1 (* skoXC1 (/ (- 2.) 3.))))) 0.) (and (<= (* skoXC1 (+ (- 1.) (* skoXC1 (* skoXC1 (/ (- 1.) 6.))))) 0.) (and (<= (* skoXC1 (* skoXC1 (/ 1. 3.))) 1.) (and (<= (* skoXC1 (* skoXC1 (+ 256. (* skoXC1 (* skoXC1 (+ (- 160.) (* skoXC1 (* skoXC1 (+ 32. (* skoXC1 (* skoXC1 (- 1.)))))))))))) 128.) (<= (* skoXC1 (* skoXC1 (* skoXC1 (* skoXC1 (+ (/ (- 80.) 3.) (* skoXC1 (* skoXC1 (+ (/ 128. 3.) (* skoXC1 (* skoXC1 (+ (/ (- 55.) 3.) (* skoXC1 (* skoXC1 (/ 5. 3.)))))))))))))) 0.))))))))))))))))))))))))))))

% In GRF format:
(sequent " MetiTarski formula " (antecedent (<= (* skoXC1 (+ (- 1.) (* skoXC1 (* skoXC1 (+ (/ (- 1.) 6.) (* skoXC1 (* skoXC1 (/ (- 3.) 40.)))))))) 0.) (<= (* skoXC1 skoXC1) 1.) (> (* skoXC1 (* skoXC1 (+ (/ 1. 6.) (* skoXC1 (* skoXC1 (/ 3. 40.)))))) (- 1.)) (<= (* skoXC1 (* skoXC1 (* skoXC1 (* skoXC1 (+ (/ 32. 15.) (* skoXC1 (* skoXC1 (+ (/ (- 296.) 15.) (* skoXC1 (* skoXC1 (+ (/ 391. 15.) (* skoXC1 (* skoXC1 (+ (/ (- 146.) 15.) (* skoXC1 (* skoXC1 (/ 3. 4.))))))))))))))))) 0.) (<= (* skoXC1 (* skoXC1 (+ (/ 1. 3.) (* skoXC1 (* skoXC1 (/ 3. 20.)))))) 1.) (<= (* skoXC1 (* skoXC1 (* skoXC1 (* skoXC1 (+ (/ (- 17.) 120.) (* skoXC1 (* skoXC1 (/ 3. 80.)))))))) 0.) (<= (* skoXC1 (* skoXC1 (* skoXC1 (* skoXC1 (+ (/ (- 13.) 60.) (* skoXC1 (* skoXC1 (/ (- 3.) 10.)))))))) 0.) (<= (* skoXC1 (* skoXC1 (+ (/ (- 1.) 2.) (* skoXC1 (* skoXC1 (+ (/ 7. 120.) (* skoXC1 (* skoXC1 (/ (- 3.) 40.))))))))) 0.) (<= (* skoXC1 (* skoXC1 (+ (/ (- 1.) 6.) (* skoXC1 (* skoXC1 (/ (- 3.) 40.)))))) 1.) (<= (* skoXC1 (+ (- 1.) (* skoXC1 (* skoXC1 (+ (/ 1. 3.) (* skoXC1 (* skoXC1 (/ 3. 20.)))))))) 0.) (> (* skoXC1 skoXC1) 0.) (<= (* skoXC1 (* skoXC1 (+ 80. (* skoXC1 (* skoXC1 (+ (- 40.) (* skoXC1 (* skoXC1 (+ 6. (* skoXC1 (* skoXC1 (/ (- 1.) 8.)))))))))))) 48.) (> (* skoXC1 (* skoXC1 (+ (- 80.) (* skoXC1 (* skoXC1 (+ 40. (* skoXC1 (* skoXC1 (+ (- 6.) (* skoXC1 (* skoXC1 (/ 1. 8.)))))))))))) (- 48.)) (<= (* skoXC1 (* skoXC1 (+ 24. (* skoXC1 (* skoXC1 (+ (- 10.) (* skoXC1 skoXC1))))))) 16.) (<= (* skoXC1 (* skoXC1 (/ 1. 2.))) 3.) (> (* skoXC1 (* skoXC1 (/ (- 1.) 2.))) (- 3.)) (> skoXC1 0.) (> (/ 7. 8.) skoXC1) (<= (* skoXC1 (+ (- 1.) (* skoXC1 (* skoXC1 (/ 1. 3.))))) 0.) (<= (* skoXC1 (* skoXC1 (/ (- 1.) 6.))) 1.) (<= (* skoXC1 (* skoXC1 (+ (/ (- 1.) 2.) (* skoXC1 (* skoXC1 (/ (- 1.) 6.)))))) 0.) (<= (* skoXC1 skoXC1) 2.) (<= (* skoXC1 (* skoXC1 (* skoXC1 (* skoXC1 (/ (- 2.) 3.))))) 0.) (<= (* skoXC1 (+ (- 1.) (* skoXC1 (* skoXC1 (/ (- 1.) 6.))))) 0.) (<= (* skoXC1 (* skoXC1 (/ 1. 3.))) 1.) (<= (* skoXC1 (* skoXC1 (+ 256. (* skoXC1 (* skoXC1 (+ (- 160.) (* skoXC1 (* skoXC1 (+ 32. (* skoXC1 (* skoXC1 (- 1.)))))))))))) 128.)) (succedent (> (* skoXC1 (* skoXC1 (* skoXC1 (* skoXC1 (+ (/ (- 80.) 3.) (* skoXC1 (* skoXC1 (+ (/ 128. 3.) (* skoXC1 (* skoXC1 (+ (/ (- 55.) 3.) (* skoXC1 (* skoXC1 (/ 5. 3.)))))))))))))) 0.)))
-----[end problem]-----

-----[begin problem]-----
% In Mathematica format:
Timing[Resolve[Exists[{skoXC1}, And[skoXC1*skoXC1*((-1/6)+skoXC1*skoXC1*(-3/40))<=1,skoXC1*skoXC1*((1/6)+skoXC1*skoXC1*(3/40))>-1,skoXC1*skoXC1*skoXC1*skoXC1*((32/15)+skoXC1*skoXC1*((-296/15)+skoXC1*skoXC1*((391/15)+skoXC1*skoXC1*((-146/15)+skoXC1*skoXC1*(3/4)))))<=0,skoXC1*skoXC1*((1/3)+skoXC1*skoXC1*(3/20))<=1,skoXC1*skoXC1*skoXC1*skoXC1*((-17/120)+skoXC1*skoXC1*(3/80))<=0,skoXC1*skoXC1*skoXC1*skoXC1*((-13/60)+skoXC1*skoXC1*(-3/10))<=0,skoXC1*skoXC1*((-1/2)+skoXC1*skoXC1*((7/120)+skoXC1*skoXC1*(-3/40)))<=0,skoXC1*skoXC1*((-1/6)+skoXC1*skoXC1*(-3/40))<=1,skoXC1*(-1+skoXC1*skoXC1*((1/3)+skoXC1*skoXC1*(3/20)))<=0,skoXC1*skoXC1>0,skoXC1*skoXC1*(80+skoXC1*skoXC1*(-40+skoXC1*skoXC1*(6+skoXC1*skoXC1*(-1/8))))<=48,skoXC1*skoXC1*(-80+skoXC1*skoXC1*(40+skoXC1*skoXC1*(-6+skoXC1*skoXC1*(1/8))))>-48,skoXC1*skoXC1*(24+skoXC1*skoXC1*(-10+skoXC1*skoXC1))<=16,skoXC1*skoXC1*(1/2)<=3,skoXC1*skoXC1*(-1/2)>-3,skoXC1>0,(7/8)>skoXC1,skoXC1*(-1+skoXC1*skoXC1*(1/3))<=0,skoXC1*skoXC1*(-1/6)<=1,skoXC1*skoXC1*((-1/2)+skoXC1*skoXC1*(-1/6))<=0,skoXC1*skoXC1<=2,skoXC1*skoXC1*skoXC1*skoXC1*(-2/3)<=0,skoXC1*(-1+skoXC1*skoXC1*(-1/6))<=0,skoXC1*skoXC1*(1/3)<=1,skoXC1*skoXC1*(256+skoXC1*skoXC1*(-160+skoXC1*skoXC1*(32+skoXC1*skoXC1*-1)))<=128,skoXC1*skoXC1*skoXC1*skoXC1*((-80/3)+skoXC1*skoXC1*((128/3)+skoXC1*skoXC1*((-55/3)+skoXC1*skoXC1*(5/3))))<=0]], Reals]]

% In QepcadB format:
(E skoXC1) [[(skoXC1 skoXC1 (-1/6+(skoXC1 skoXC1 (-3/40))))<=1]/\[[-1<(skoXC1 skoXC1 (1/6+(skoXC1 skoXC1 (3/40))))]/\[[(skoXC1 skoXC1 skoXC1 skoXC1 (32/15+(skoXC1 skoXC1 (-296/15+(skoXC1 skoXC1 (391/15+(skoXC1 skoXC1 (-146/15+(skoXC1 skoXC1 (3/4))))))))))<=0]/\[[(skoXC1 skoXC1 (1/3+(skoXC1 skoXC1 (3/20))))<=1]/\[[(skoXC1 skoXC1 skoXC1 skoXC1 (-17/120+(skoXC1 skoXC1 (3/80))))<=0]/\[[(skoXC1 skoXC1 skoXC1 skoXC1 (-13/60+(skoXC1 skoXC1 (-3/10))))<=0]/\[[(skoXC1 skoXC1 (-1/2+(skoXC1 skoXC1 (7/120+(skoXC1 skoXC1 (-3/40))))))<=0]/\[[(skoXC1 skoXC1 (-1/6+(skoXC1 skoXC1 (-3/40))))<=1]/\[[(skoXC1 (-1+(skoXC1 skoXC1 (1/3+(skoXC1 skoXC1 (3/20))))))<=0]/\[[0<(skoXC1 skoXC1)]/\[[(skoXC1 skoXC1 (80+(skoXC1 skoXC1 (-40+(skoXC1 skoXC1 (6+(skoXC1 skoXC1 (-1/8))))))))<=48]/\[[-48<(skoXC1 skoXC1 (-80+(skoXC1 skoXC1 (40+(skoXC1 skoXC1 (-6+(skoXC1 skoXC1 (1/8))))))))]/\[[(skoXC1 skoXC1 (24+(skoXC1 skoXC1 (-10+(skoXC1 skoXC1)))))<=16]/\[[(skoXC1 skoXC1 (1/2))<=3]/\[[-3<(skoXC1 skoXC1 (-1/2))]/\[[0<skoXC1]/\[[skoXC1<7/8]/\[[(skoXC1 (-1+(skoXC1 skoXC1 (1/3))))<=0]/\[[(skoXC1 skoXC1 (-1/6))<=1]/\[[(skoXC1 skoXC1 (-1/2+(skoXC1 skoXC1 (-1/6))))<=0]/\[[(skoXC1 skoXC1)<=2]/\[[(skoXC1 skoXC1 skoXC1 skoXC1 (-2/3))<=0]/\[[(skoXC1 (-1+(skoXC1 skoXC1 (-1/6))))<=0]/\[[(skoXC1 skoXC1 (1/3))<=1]/\[[(skoXC1 skoXC1 (256+(skoXC1 skoXC1 (-160+(skoXC1 skoXC1 (32+(skoXC1 skoXC1 (-1))))))))<=128]/\[(skoXC1 skoXC1 skoXC1 skoXC1 (-80/3+(skoXC1 skoXC1 (128/3+(skoXC1 skoXC1 (-55/3+(skoXC1 skoXC1 (5/3))))))))<=0]]]]]]]]]]]]]]]]]]]]]]]]]].

% In SMTLib2 format:
(declare-fun skoXC1 () Real) (assert (and (<= (* skoXC1 (* skoXC1 (+ (/ (- 1.) 6.) (* skoXC1 (* skoXC1 (/ (- 3.) 40.)))))) 1.) (and (> (* skoXC1 (* skoXC1 (+ (/ 1. 6.) (* skoXC1 (* skoXC1 (/ 3. 40.)))))) (- 1.)) (and (<= (* skoXC1 (* skoXC1 (* skoXC1 (* skoXC1 (+ (/ 32. 15.) (* skoXC1 (* skoXC1 (+ (/ (- 296.) 15.) (* skoXC1 (* skoXC1 (+ (/ 391. 15.) (* skoXC1 (* skoXC1 (+ (/ (- 146.) 15.) (* skoXC1 (* skoXC1 (/ 3. 4.))))))))))))))))) 0.) (and (<= (* skoXC1 (* skoXC1 (+ (/ 1. 3.) (* skoXC1 (* skoXC1 (/ 3. 20.)))))) 1.) (and (<= (* skoXC1 (* skoXC1 (* skoXC1 (* skoXC1 (+ (/ (- 17.) 120.) (* skoXC1 (* skoXC1 (/ 3. 80.)))))))) 0.) (and (<= (* skoXC1 (* skoXC1 (* skoXC1 (* skoXC1 (+ (/ (- 13.) 60.) (* skoXC1 (* skoXC1 (/ (- 3.) 10.)))))))) 0.) (and (<= (* skoXC1 (* skoXC1 (+ (/ (- 1.) 2.) (* skoXC1 (* skoXC1 (+ (/ 7. 120.) (* skoXC1 (* skoXC1 (/ (- 3.) 40.))))))))) 0.) (and (<= (* skoXC1 (* skoXC1 (+ (/ (- 1.) 6.) (* skoXC1 (* skoXC1 (/ (- 3.) 40.)))))) 1.) (and (<= (* skoXC1 (+ (- 1.) (* skoXC1 (* skoXC1 (+ (/ 1. 3.) (* skoXC1 (* skoXC1 (/ 3. 20.)))))))) 0.) (and (> (* skoXC1 skoXC1) 0.) (and (<= (* skoXC1 (* skoXC1 (+ 80. (* skoXC1 (* skoXC1 (+ (- 40.) (* skoXC1 (* skoXC1 (+ 6. (* skoXC1 (* skoXC1 (/ (- 1.) 8.)))))))))))) 48.) (and (> (* skoXC1 (* skoXC1 (+ (- 80.) (* skoXC1 (* skoXC1 (+ 40. (* skoXC1 (* skoXC1 (+ (- 6.) (* skoXC1 (* skoXC1 (/ 1. 8.)))))))))))) (- 48.)) (and (<= (* skoXC1 (* skoXC1 (+ 24. (* skoXC1 (* skoXC1 (+ (- 10.) (* skoXC1 skoXC1))))))) 16.) (and (<= (* skoXC1 (* skoXC1 (/ 1. 2.))) 3.) (and (> (* skoXC1 (* skoXC1 (/ (- 1.) 2.))) (- 3.)) (and (> skoXC1 0.) (and (> (/ 7. 8.) skoXC1) (and (<= (* skoXC1 (+ (- 1.) (* skoXC1 (* skoXC1 (/ 1. 3.))))) 0.) (and (<= (* skoXC1 (* skoXC1 (/ (- 1.) 6.))) 1.) (and (<= (* skoXC1 (* skoXC1 (+ (/ (- 1.) 2.) (* skoXC1 (* skoXC1 (/ (- 1.) 6.)))))) 0.) (and (<= (* skoXC1 skoXC1) 2.) (and (<= (* skoXC1 (* skoXC1 (* skoXC1 (* skoXC1 (/ (- 2.) 3.))))) 0.) (and (<= (* skoXC1 (+ (- 1.) (* skoXC1 (* skoXC1 (/ (- 1.) 6.))))) 0.) (and (<= (* skoXC1 (* skoXC1 (/ 1. 3.))) 1.) (and (<= (* skoXC1 (* skoXC1 (+ 256. (* skoXC1 (* skoXC1 (+ (- 160.) (* skoXC1 (* skoXC1 (+ 32. (* skoXC1 (* skoXC1 (- 1.)))))))))))) 128.) (<= (* skoXC1 (* skoXC1 (* skoXC1 (* skoXC1 (+ (/ (- 80.) 3.) (* skoXC1 (* skoXC1 (+ (/ 128. 3.) (* skoXC1 (* skoXC1 (+ (/ (- 55.) 3.) (* skoXC1 (* skoXC1 (/ 5. 3.)))))))))))))) 0.)))))))))))))))))))))))))))

% In GRF format:
(sequent " MetiTarski formula " (antecedent (<= (* skoXC1 (* skoXC1 (+ (/ (- 1.) 6.) (* skoXC1 (* skoXC1 (/ (- 3.) 40.)))))) 1.) (> (* skoXC1 (* skoXC1 (+ (/ 1. 6.) (* skoXC1 (* skoXC1 (/ 3. 40.)))))) (- 1.)) (<= (* skoXC1 (* skoXC1 (* skoXC1 (* skoXC1 (+ (/ 32. 15.) (* skoXC1 (* skoXC1 (+ (/ (- 296.) 15.) (* skoXC1 (* skoXC1 (+ (/ 391. 15.) (* skoXC1 (* skoXC1 (+ (/ (- 146.) 15.) (* skoXC1 (* skoXC1 (/ 3. 4.))))))))))))))))) 0.) (<= (* skoXC1 (* skoXC1 (+ (/ 1. 3.) (* skoXC1 (* skoXC1 (/ 3. 20.)))))) 1.) (<= (* skoXC1 (* skoXC1 (* skoXC1 (* skoXC1 (+ (/ (- 17.) 120.) (* skoXC1 (* skoXC1 (/ 3. 80.)))))))) 0.) (<= (* skoXC1 (* skoXC1 (* skoXC1 (* skoXC1 (+ (/ (- 13.) 60.) (* skoXC1 (* skoXC1 (/ (- 3.) 10.)))))))) 0.) (<= (* skoXC1 (* skoXC1 (+ (/ (- 1.) 2.) (* skoXC1 (* skoXC1 (+ (/ 7. 120.) (* skoXC1 (* skoXC1 (/ (- 3.) 40.))))))))) 0.) (<= (* skoXC1 (* skoXC1 (+ (/ (- 1.) 6.) (* skoXC1 (* skoXC1 (/ (- 3.) 40.)))))) 1.) (<= (* skoXC1 (+ (- 1.) (* skoXC1 (* skoXC1 (+ (/ 1. 3.) (* skoXC1 (* skoXC1 (/ 3. 20.)))))))) 0.) (> (* skoXC1 skoXC1) 0.) (<= (* skoXC1 (* skoXC1 (+ 80. (* skoXC1 (* skoXC1 (+ (- 40.) (* skoXC1 (* skoXC1 (+ 6. (* skoXC1 (* skoXC1 (/ (- 1.) 8.)))))))))))) 48.) (> (* skoXC1 (* skoXC1 (+ (- 80.) (* skoXC1 (* skoXC1 (+ 40. (* skoXC1 (* skoXC1 (+ (- 6.) (* skoXC1 (* skoXC1 (/ 1. 8.)))))))))))) (- 48.)) (<= (* skoXC1 (* skoXC1 (+ 24. (* skoXC1 (* skoXC1 (+ (- 10.) (* skoXC1 skoXC1))))))) 16.) (<= (* skoXC1 (* skoXC1 (/ 1. 2.))) 3.) (> (* skoXC1 (* skoXC1 (/ (- 1.) 2.))) (- 3.)) (> skoXC1 0.) (> (/ 7. 8.) skoXC1) (<= (* skoXC1 (+ (- 1.) (* skoXC1 (* skoXC1 (/ 1. 3.))))) 0.) (<= (* skoXC1 (* skoXC1 (/ (- 1.) 6.))) 1.) (<= (* skoXC1 (* skoXC1 (+ (/ (- 1.) 2.) (* skoXC1 (* skoXC1 (/ (- 1.) 6.)))))) 0.) (<= (* skoXC1 skoXC1) 2.) (<= (* skoXC1 (* skoXC1 (* skoXC1 (* skoXC1 (/ (- 2.) 3.))))) 0.) (<= (* skoXC1 (+ (- 1.) (* skoXC1 (* skoXC1 (/ (- 1.) 6.))))) 0.) (<= (* skoXC1 (* skoXC1 (/ 1. 3.))) 1.) (<= (* skoXC1 (* skoXC1 (+ 256. (* skoXC1 (* skoXC1 (+ (- 160.) (* skoXC1 (* skoXC1 (+ 32. (* skoXC1 (* skoXC1 (- 1.)))))))))))) 128.)) (succedent (> (* skoXC1 (* skoXC1 (* skoXC1 (* skoXC1 (+ (/ (- 80.) 3.) (* skoXC1 (* skoXC1 (+ (/ 128. 3.) (* skoXC1 (* skoXC1 (+ (/ (- 55.) 3.) (* skoXC1 (* skoXC1 (/ 5. 3.)))))))))))))) 0.)))
-----[end problem]-----

-----[begin problem]-----
% In Mathematica format:
Timing[Resolve[Exists[{skoXC1}, And[skoXC1*skoXC1*skoXC1*skoXC1*((-17/120)+skoXC1*skoXC1*(3/80))<=0,skoXC1*skoXC1*((1/6)+skoXC1*skoXC1*(3/40))>-1,skoXC1*skoXC1*((1/6)+skoXC1*skoXC1*(3/40))>-1,skoXC1*skoXC1*skoXC1*skoXC1*((32/15)+skoXC1*skoXC1*((-296/15)+skoXC1*skoXC1*((391/15)+skoXC1*skoXC1*((-146/15)+skoXC1*skoXC1*(3/4)))))<=0,skoXC1*skoXC1*((1/3)+skoXC1*skoXC1*(3/20))<=1,skoXC1*skoXC1*skoXC1*skoXC1*((-17/120)+skoXC1*skoXC1*(3/80))<=0,skoXC1*skoXC1*skoXC1*skoXC1*((-13/60)+skoXC1*skoXC1*(-3/10))<=0,skoXC1*skoXC1*((-1/2)+skoXC1*skoXC1*((7/120)+skoXC1*skoXC1*(-3/40)))<=0,skoXC1*skoXC1*((-1/6)+skoXC1*skoXC1*(-3/40))<=1,skoXC1*(-1+skoXC1*skoXC1*((1/3)+skoXC1*skoXC1*(3/20)))<=0,skoXC1*skoXC1>0,skoXC1*skoXC1*(80+skoXC1*skoXC1*(-40+skoXC1*skoXC1*(6+skoXC1*skoXC1*(-1/8))))<=48,skoXC1*skoXC1*(-80+skoXC1*skoXC1*(40+skoXC1*skoXC1*(-6+skoXC1*skoXC1*(1/8))))>-48,skoXC1*skoXC1*(24+skoXC1*skoXC1*(-10+skoXC1*skoXC1))<=16,skoXC1*skoXC1*(1/2)<=3,skoXC1*skoXC1*(-1/2)>-3,skoXC1>0,(7/8)>skoXC1,skoXC1*(-1+skoXC1*skoXC1*(1/3))<=0,skoXC1*skoXC1*(-1/6)<=1,skoXC1*skoXC1*((-1/2)+skoXC1*skoXC1*(-1/6))<=0,skoXC1*skoXC1<=2,skoXC1*skoXC1*skoXC1*skoXC1*(-2/3)<=0,skoXC1*(-1+skoXC1*skoXC1*(-1/6))<=0,skoXC1*skoXC1*(1/3)<=1,skoXC1*skoXC1*(256+skoXC1*skoXC1*(-160+skoXC1*skoXC1*(32+skoXC1*skoXC1*-1)))<=128,skoXC1*skoXC1*skoXC1*skoXC1*((-80/3)+skoXC1*skoXC1*((128/3)+skoXC1*skoXC1*((-55/3)+skoXC1*skoXC1*(5/3))))<=0]], Reals]]

% In QepcadB format:
(E skoXC1) [[(skoXC1 skoXC1 skoXC1 skoXC1 (-17/120+(skoXC1 skoXC1 (3/80))))<=0]/\[[-1<(skoXC1 skoXC1 (1/6+(skoXC1 skoXC1 (3/40))))]/\[[-1<(skoXC1 skoXC1 (1/6+(skoXC1 skoXC1 (3/40))))]/\[[(skoXC1 skoXC1 skoXC1 skoXC1 (32/15+(skoXC1 skoXC1 (-296/15+(skoXC1 skoXC1 (391/15+(skoXC1 skoXC1 (-146/15+(skoXC1 skoXC1 (3/4))))))))))<=0]/\[[(skoXC1 skoXC1 (1/3+(skoXC1 skoXC1 (3/20))))<=1]/\[[(skoXC1 skoXC1 skoXC1 skoXC1 (-17/120+(skoXC1 skoXC1 (3/80))))<=0]/\[[(skoXC1 skoXC1 skoXC1 skoXC1 (-13/60+(skoXC1 skoXC1 (-3/10))))<=0]/\[[(skoXC1 skoXC1 (-1/2+(skoXC1 skoXC1 (7/120+(skoXC1 skoXC1 (-3/40))))))<=0]/\[[(skoXC1 skoXC1 (-1/6+(skoXC1 skoXC1 (-3/40))))<=1]/\[[(skoXC1 (-1+(skoXC1 skoXC1 (1/3+(skoXC1 skoXC1 (3/20))))))<=0]/\[[0<(skoXC1 skoXC1)]/\[[(skoXC1 skoXC1 (80+(skoXC1 skoXC1 (-40+(skoXC1 skoXC1 (6+(skoXC1 skoXC1 (-1/8))))))))<=48]/\[[-48<(skoXC1 skoXC1 (-80+(skoXC1 skoXC1 (40+(skoXC1 skoXC1 (-6+(skoXC1 skoXC1 (1/8))))))))]/\[[(skoXC1 skoXC1 (24+(skoXC1 skoXC1 (-10+(skoXC1 skoXC1)))))<=16]/\[[(skoXC1 skoXC1 (1/2))<=3]/\[[-3<(skoXC1 skoXC1 (-1/2))]/\[[0<skoXC1]/\[[skoXC1<7/8]/\[[(skoXC1 (-1+(skoXC1 skoXC1 (1/3))))<=0]/\[[(skoXC1 skoXC1 (-1/6))<=1]/\[[(skoXC1 skoXC1 (-1/2+(skoXC1 skoXC1 (-1/6))))<=0]/\[[(skoXC1 skoXC1)<=2]/\[[(skoXC1 skoXC1 skoXC1 skoXC1 (-2/3))<=0]/\[[(skoXC1 (-1+(skoXC1 skoXC1 (-1/6))))<=0]/\[[(skoXC1 skoXC1 (1/3))<=1]/\[[(skoXC1 skoXC1 (256+(skoXC1 skoXC1 (-160+(skoXC1 skoXC1 (32+(skoXC1 skoXC1 (-1))))))))<=128]/\[(skoXC1 skoXC1 skoXC1 skoXC1 (-80/3+(skoXC1 skoXC1 (128/3+(skoXC1 skoXC1 (-55/3+(skoXC1 skoXC1 (5/3))))))))<=0]]]]]]]]]]]]]]]]]]]]]]]]]]].

% In SMTLib2 format:
(declare-fun skoXC1 () Real) (assert (and (<= (* skoXC1 (* skoXC1 (* skoXC1 (* skoXC1 (+ (/ (- 17.) 120.) (* skoXC1 (* skoXC1 (/ 3. 80.)))))))) 0.) (and (> (* skoXC1 (* skoXC1 (+ (/ 1. 6.) (* skoXC1 (* skoXC1 (/ 3. 40.)))))) (- 1.)) (and (> (* skoXC1 (* skoXC1 (+ (/ 1. 6.) (* skoXC1 (* skoXC1 (/ 3. 40.)))))) (- 1.)) (and (<= (* skoXC1 (* skoXC1 (* skoXC1 (* skoXC1 (+ (/ 32. 15.) (* skoXC1 (* skoXC1 (+ (/ (- 296.) 15.) (* skoXC1 (* skoXC1 (+ (/ 391. 15.) (* skoXC1 (* skoXC1 (+ (/ (- 146.) 15.) (* skoXC1 (* skoXC1 (/ 3. 4.))))))))))))))))) 0.) (and (<= (* skoXC1 (* skoXC1 (+ (/ 1. 3.) (* skoXC1 (* skoXC1 (/ 3. 20.)))))) 1.) (and (<= (* skoXC1 (* skoXC1 (* skoXC1 (* skoXC1 (+ (/ (- 17.) 120.) (* skoXC1 (* skoXC1 (/ 3. 80.)))))))) 0.) (and (<= (* skoXC1 (* skoXC1 (* skoXC1 (* skoXC1 (+ (/ (- 13.) 60.) (* skoXC1 (* skoXC1 (/ (- 3.) 10.)))))))) 0.) (and (<= (* skoXC1 (* skoXC1 (+ (/ (- 1.) 2.) (* skoXC1 (* skoXC1 (+ (/ 7. 120.) (* skoXC1 (* skoXC1 (/ (- 3.) 40.))))))))) 0.) (and (<= (* skoXC1 (* skoXC1 (+ (/ (- 1.) 6.) (* skoXC1 (* skoXC1 (/ (- 3.) 40.)))))) 1.) (and (<= (* skoXC1 (+ (- 1.) (* skoXC1 (* skoXC1 (+ (/ 1. 3.) (* skoXC1 (* skoXC1 (/ 3. 20.)))))))) 0.) (and (> (* skoXC1 skoXC1) 0.) (and (<= (* skoXC1 (* skoXC1 (+ 80. (* skoXC1 (* skoXC1 (+ (- 40.) (* skoXC1 (* skoXC1 (+ 6. (* skoXC1 (* skoXC1 (/ (- 1.) 8.)))))))))))) 48.) (and (> (* skoXC1 (* skoXC1 (+ (- 80.) (* skoXC1 (* skoXC1 (+ 40. (* skoXC1 (* skoXC1 (+ (- 6.) (* skoXC1 (* skoXC1 (/ 1. 8.)))))))))))) (- 48.)) (and (<= (* skoXC1 (* skoXC1 (+ 24. (* skoXC1 (* skoXC1 (+ (- 10.) (* skoXC1 skoXC1))))))) 16.) (and (<= (* skoXC1 (* skoXC1 (/ 1. 2.))) 3.) (and (> (* skoXC1 (* skoXC1 (/ (- 1.) 2.))) (- 3.)) (and (> skoXC1 0.) (and (> (/ 7. 8.) skoXC1) (and (<= (* skoXC1 (+ (- 1.) (* skoXC1 (* skoXC1 (/ 1. 3.))))) 0.) (and (<= (* skoXC1 (* skoXC1 (/ (- 1.) 6.))) 1.) (and (<= (* skoXC1 (* skoXC1 (+ (/ (- 1.) 2.) (* skoXC1 (* skoXC1 (/ (- 1.) 6.)))))) 0.) (and (<= (* skoXC1 skoXC1) 2.) (and (<= (* skoXC1 (* skoXC1 (* skoXC1 (* skoXC1 (/ (- 2.) 3.))))) 0.) (and (<= (* skoXC1 (+ (- 1.) (* skoXC1 (* skoXC1 (/ (- 1.) 6.))))) 0.) (and (<= (* skoXC1 (* skoXC1 (/ 1. 3.))) 1.) (and (<= (* skoXC1 (* skoXC1 (+ 256. (* skoXC1 (* skoXC1 (+ (- 160.) (* skoXC1 (* skoXC1 (+ 32. (* skoXC1 (* skoXC1 (- 1.)))))))))))) 128.) (<= (* skoXC1 (* skoXC1 (* skoXC1 (* skoXC1 (+ (/ (- 80.) 3.) (* skoXC1 (* skoXC1 (+ (/ 128. 3.) (* skoXC1 (* skoXC1 (+ (/ (- 55.) 3.) (* skoXC1 (* skoXC1 (/ 5. 3.)))))))))))))) 0.))))))))))))))))))))))))))))

% In GRF format:
(sequent " MetiTarski formula " (antecedent (<= (* skoXC1 (* skoXC1 (* skoXC1 (* skoXC1 (+ (/ (- 17.) 120.) (* skoXC1 (* skoXC1 (/ 3. 80.)))))))) 0.) (> (* skoXC1 (* skoXC1 (+ (/ 1. 6.) (* skoXC1 (* skoXC1 (/ 3. 40.)))))) (- 1.)) (> (* skoXC1 (* skoXC1 (+ (/ 1. 6.) (* skoXC1 (* skoXC1 (/ 3. 40.)))))) (- 1.)) (<= (* skoXC1 (* skoXC1 (* skoXC1 (* skoXC1 (+ (/ 32. 15.) (* skoXC1 (* skoXC1 (+ (/ (- 296.) 15.) (* skoXC1 (* skoXC1 (+ (/ 391. 15.) (* skoXC1 (* skoXC1 (+ (/ (- 146.) 15.) (* skoXC1 (* skoXC1 (/ 3. 4.))))))))))))))))) 0.) (<= (* skoXC1 (* skoXC1 (+ (/ 1. 3.) (* skoXC1 (* skoXC1 (/ 3. 20.)))))) 1.) (<= (* skoXC1 (* skoXC1 (* skoXC1 (* skoXC1 (+ (/ (- 17.) 120.) (* skoXC1 (* skoXC1 (/ 3. 80.)))))))) 0.) (<= (* skoXC1 (* skoXC1 (* skoXC1 (* skoXC1 (+ (/ (- 13.) 60.) (* skoXC1 (* skoXC1 (/ (- 3.) 10.)))))))) 0.) (<= (* skoXC1 (* skoXC1 (+ (/ (- 1.) 2.) (* skoXC1 (* skoXC1 (+ (/ 7. 120.) (* skoXC1 (* skoXC1 (/ (- 3.) 40.))))))))) 0.) (<= (* skoXC1 (* skoXC1 (+ (/ (- 1.) 6.) (* skoXC1 (* skoXC1 (/ (- 3.) 40.)))))) 1.) (<= (* skoXC1 (+ (- 1.) (* skoXC1 (* skoXC1 (+ (/ 1. 3.) (* skoXC1 (* skoXC1 (/ 3. 20.)))))))) 0.) (> (* skoXC1 skoXC1) 0.) (<= (* skoXC1 (* skoXC1 (+ 80. (* skoXC1 (* skoXC1 (+ (- 40.) (* skoXC1 (* skoXC1 (+ 6. (* skoXC1 (* skoXC1 (/ (- 1.) 8.)))))))))))) 48.) (> (* skoXC1 (* skoXC1 (+ (- 80.) (* skoXC1 (* skoXC1 (+ 40. (* skoXC1 (* skoXC1 (+ (- 6.) (* skoXC1 (* skoXC1 (/ 1. 8.)))))))))))) (- 48.)) (<= (* skoXC1 (* skoXC1 (+ 24. (* skoXC1 (* skoXC1 (+ (- 10.) (* skoXC1 skoXC1))))))) 16.) (<= (* skoXC1 (* skoXC1 (/ 1. 2.))) 3.) (> (* skoXC1 (* skoXC1 (/ (- 1.) 2.))) (- 3.)) (> skoXC1 0.) (> (/ 7. 8.) skoXC1) (<= (* skoXC1 (+ (- 1.) (* skoXC1 (* skoXC1 (/ 1. 3.))))) 0.) (<= (* skoXC1 (* skoXC1 (/ (- 1.) 6.))) 1.) (<= (* skoXC1 (* skoXC1 (+ (/ (- 1.) 2.) (* skoXC1 (* skoXC1 (/ (- 1.) 6.)))))) 0.) (<= (* skoXC1 skoXC1) 2.) (<= (* skoXC1 (* skoXC1 (* skoXC1 (* skoXC1 (/ (- 2.) 3.))))) 0.) (<= (* skoXC1 (+ (- 1.) (* skoXC1 (* skoXC1 (/ (- 1.) 6.))))) 0.) (<= (* skoXC1 (* skoXC1 (/ 1. 3.))) 1.) (<= (* skoXC1 (* skoXC1 (+ 256. (* skoXC1 (* skoXC1 (+ (- 160.) (* skoXC1 (* skoXC1 (+ 32. (* skoXC1 (* skoXC1 (- 1.)))))))))))) 128.)) (succedent (> (* skoXC1 (* skoXC1 (* skoXC1 (* skoXC1 (+ (/ (- 80.) 3.) (* skoXC1 (* skoXC1 (+ (/ 128. 3.) (* skoXC1 (* skoXC1 (+ (/ (- 55.) 3.) (* skoXC1 (* skoXC1 (/ 5. 3.)))))))))))))) 0.)))
-----[end problem]-----

-----[begin problem]-----
% In Mathematica format:
Timing[Resolve[Exists[{skoXC1}, And[skoXC1*skoXC1*((-1/6)+skoXC1*skoXC1*(-3/40))<=1,skoXC1*skoXC1*((1/6)+skoXC1*skoXC1*(3/40))>-1,skoXC1*skoXC1*skoXC1*skoXC1*((32/15)+skoXC1*skoXC1*((-296/15)+skoXC1*skoXC1*((391/15)+skoXC1*skoXC1*((-146/15)+skoXC1*skoXC1*(3/4)))))<=0,skoXC1*skoXC1*((1/3)+skoXC1*skoXC1*(3/20))<=1,skoXC1*skoXC1*skoXC1*skoXC1*((-17/120)+skoXC1*skoXC1*(3/80))<=0,skoXC1*skoXC1*skoXC1*skoXC1*((-13/60)+skoXC1*skoXC1*(-3/10))<=0,skoXC1*skoXC1*((-1/2)+skoXC1*skoXC1*((7/120)+skoXC1*skoXC1*(-3/40)))<=0,skoXC1*skoXC1*((-1/6)+skoXC1*skoXC1*(-3/40))<=1,skoXC1*(-1+skoXC1*skoXC1*((1/3)+skoXC1*skoXC1*(3/20)))<=0,skoXC1*skoXC1>0,skoXC1*skoXC1*(80+skoXC1*skoXC1*(-40+skoXC1*skoXC1*(6+skoXC1*skoXC1*(-1/8))))<=48,skoXC1*skoXC1*(-80+skoXC1*skoXC1*(40+skoXC1*skoXC1*(-6+skoXC1*skoXC1*(1/8))))>-48,skoXC1*skoXC1*(24+skoXC1*skoXC1*(-10+skoXC1*skoXC1))<=16,skoXC1*skoXC1*(1/2)<=3,skoXC1*skoXC1*(-1/2)>-3,skoXC1>0,(7/8)>skoXC1,skoXC1*(-1+skoXC1*skoXC1*(1/3))<=0,skoXC1*skoXC1*(-1/6)<=1,skoXC1*skoXC1*((-1/2)+skoXC1*skoXC1*(-1/6))<=0,skoXC1*skoXC1<=2,skoXC1*skoXC1*skoXC1*skoXC1*(-2/3)<=0,skoXC1*(-1+skoXC1*skoXC1*(-1/6))<=0,skoXC1*skoXC1*(1/3)<=1,skoXC1*skoXC1*(256+skoXC1*skoXC1*(-160+skoXC1*skoXC1*(32+skoXC1*skoXC1*-1)))<=128,skoXC1*skoXC1*skoXC1*skoXC1*((-80/3)+skoXC1*skoXC1*((128/3)+skoXC1*skoXC1*((-55/3)+skoXC1*skoXC1*(5/3))))<=0]], Reals]]

% In QepcadB format:
(E skoXC1) [[(skoXC1 skoXC1 (-1/6+(skoXC1 skoXC1 (-3/40))))<=1]/\[[-1<(skoXC1 skoXC1 (1/6+(skoXC1 skoXC1 (3/40))))]/\[[(skoXC1 skoXC1 skoXC1 skoXC1 (32/15+(skoXC1 skoXC1 (-296/15+(skoXC1 skoXC1 (391/15+(skoXC1 skoXC1 (-146/15+(skoXC1 skoXC1 (3/4))))))))))<=0]/\[[(skoXC1 skoXC1 (1/3+(skoXC1 skoXC1 (3/20))))<=1]/\[[(skoXC1 skoXC1 skoXC1 skoXC1 (-17/120+(skoXC1 skoXC1 (3/80))))<=0]/\[[(skoXC1 skoXC1 skoXC1 skoXC1 (-13/60+(skoXC1 skoXC1 (-3/10))))<=0]/\[[(skoXC1 skoXC1 (-1/2+(skoXC1 skoXC1 (7/120+(skoXC1 skoXC1 (-3/40))))))<=0]/\[[(skoXC1 skoXC1 (-1/6+(skoXC1 skoXC1 (-3/40))))<=1]/\[[(skoXC1 (-1+(skoXC1 skoXC1 (1/3+(skoXC1 skoXC1 (3/20))))))<=0]/\[[0<(skoXC1 skoXC1)]/\[[(skoXC1 skoXC1 (80+(skoXC1 skoXC1 (-40+(skoXC1 skoXC1 (6+(skoXC1 skoXC1 (-1/8))))))))<=48]/\[[-48<(skoXC1 skoXC1 (-80+(skoXC1 skoXC1 (40+(skoXC1 skoXC1 (-6+(skoXC1 skoXC1 (1/8))))))))]/\[[(skoXC1 skoXC1 (24+(skoXC1 skoXC1 (-10+(skoXC1 skoXC1)))))<=16]/\[[(skoXC1 skoXC1 (1/2))<=3]/\[[-3<(skoXC1 skoXC1 (-1/2))]/\[[0<skoXC1]/\[[skoXC1<7/8]/\[[(skoXC1 (-1+(skoXC1 skoXC1 (1/3))))<=0]/\[[(skoXC1 skoXC1 (-1/6))<=1]/\[[(skoXC1 skoXC1 (-1/2+(skoXC1 skoXC1 (-1/6))))<=0]/\[[(skoXC1 skoXC1)<=2]/\[[(skoXC1 skoXC1 skoXC1 skoXC1 (-2/3))<=0]/\[[(skoXC1 (-1+(skoXC1 skoXC1 (-1/6))))<=0]/\[[(skoXC1 skoXC1 (1/3))<=1]/\[[(skoXC1 skoXC1 (256+(skoXC1 skoXC1 (-160+(skoXC1 skoXC1 (32+(skoXC1 skoXC1 (-1))))))))<=128]/\[(skoXC1 skoXC1 skoXC1 skoXC1 (-80/3+(skoXC1 skoXC1 (128/3+(skoXC1 skoXC1 (-55/3+(skoXC1 skoXC1 (5/3))))))))<=0]]]]]]]]]]]]]]]]]]]]]]]]]].

% In SMTLib2 format:
(declare-fun skoXC1 () Real) (assert (and (<= (* skoXC1 (* skoXC1 (+ (/ (- 1.) 6.) (* skoXC1 (* skoXC1 (/ (- 3.) 40.)))))) 1.) (and (> (* skoXC1 (* skoXC1 (+ (/ 1. 6.) (* skoXC1 (* skoXC1 (/ 3. 40.)))))) (- 1.)) (and (<= (* skoXC1 (* skoXC1 (* skoXC1 (* skoXC1 (+ (/ 32. 15.) (* skoXC1 (* skoXC1 (+ (/ (- 296.) 15.) (* skoXC1 (* skoXC1 (+ (/ 391. 15.) (* skoXC1 (* skoXC1 (+ (/ (- 146.) 15.) (* skoXC1 (* skoXC1 (/ 3. 4.))))))))))))))))) 0.) (and (<= (* skoXC1 (* skoXC1 (+ (/ 1. 3.) (* skoXC1 (* skoXC1 (/ 3. 20.)))))) 1.) (and (<= (* skoXC1 (* skoXC1 (* skoXC1 (* skoXC1 (+ (/ (- 17.) 120.) (* skoXC1 (* skoXC1 (/ 3. 80.)))))))) 0.) (and (<= (* skoXC1 (* skoXC1 (* skoXC1 (* skoXC1 (+ (/ (- 13.) 60.) (* skoXC1 (* skoXC1 (/ (- 3.) 10.)))))))) 0.) (and (<= (* skoXC1 (* skoXC1 (+ (/ (- 1.) 2.) (* skoXC1 (* skoXC1 (+ (/ 7. 120.) (* skoXC1 (* skoXC1 (/ (- 3.) 40.))))))))) 0.) (and (<= (* skoXC1 (* skoXC1 (+ (/ (- 1.) 6.) (* skoXC1 (* skoXC1 (/ (- 3.) 40.)))))) 1.) (and (<= (* skoXC1 (+ (- 1.) (* skoXC1 (* skoXC1 (+ (/ 1. 3.) (* skoXC1 (* skoXC1 (/ 3. 20.)))))))) 0.) (and (> (* skoXC1 skoXC1) 0.) (and (<= (* skoXC1 (* skoXC1 (+ 80. (* skoXC1 (* skoXC1 (+ (- 40.) (* skoXC1 (* skoXC1 (+ 6. (* skoXC1 (* skoXC1 (/ (- 1.) 8.)))))))))))) 48.) (and (> (* skoXC1 (* skoXC1 (+ (- 80.) (* skoXC1 (* skoXC1 (+ 40. (* skoXC1 (* skoXC1 (+ (- 6.) (* skoXC1 (* skoXC1 (/ 1. 8.)))))))))))) (- 48.)) (and (<= (* skoXC1 (* skoXC1 (+ 24. (* skoXC1 (* skoXC1 (+ (- 10.) (* skoXC1 skoXC1))))))) 16.) (and (<= (* skoXC1 (* skoXC1 (/ 1. 2.))) 3.) (and (> (* skoXC1 (* skoXC1 (/ (- 1.) 2.))) (- 3.)) (and (> skoXC1 0.) (and (> (/ 7. 8.) skoXC1) (and (<= (* skoXC1 (+ (- 1.) (* skoXC1 (* skoXC1 (/ 1. 3.))))) 0.) (and (<= (* skoXC1 (* skoXC1 (/ (- 1.) 6.))) 1.) (and (<= (* skoXC1 (* skoXC1 (+ (/ (- 1.) 2.) (* skoXC1 (* skoXC1 (/ (- 1.) 6.)))))) 0.) (and (<= (* skoXC1 skoXC1) 2.) (and (<= (* skoXC1 (* skoXC1 (* skoXC1 (* skoXC1 (/ (- 2.) 3.))))) 0.) (and (<= (* skoXC1 (+ (- 1.) (* skoXC1 (* skoXC1 (/ (- 1.) 6.))))) 0.) (and (<= (* skoXC1 (* skoXC1 (/ 1. 3.))) 1.) (and (<= (* skoXC1 (* skoXC1 (+ 256. (* skoXC1 (* skoXC1 (+ (- 160.) (* skoXC1 (* skoXC1 (+ 32. (* skoXC1 (* skoXC1 (- 1.)))))))))))) 128.) (<= (* skoXC1 (* skoXC1 (* skoXC1 (* skoXC1 (+ (/ (- 80.) 3.) (* skoXC1 (* skoXC1 (+ (/ 128. 3.) (* skoXC1 (* skoXC1 (+ (/ (- 55.) 3.) (* skoXC1 (* skoXC1 (/ 5. 3.)))))))))))))) 0.)))))))))))))))))))))))))))

% In GRF format:
(sequent " MetiTarski formula " (antecedent (<= (* skoXC1 (* skoXC1 (+ (/ (- 1.) 6.) (* skoXC1 (* skoXC1 (/ (- 3.) 40.)))))) 1.) (> (* skoXC1 (* skoXC1 (+ (/ 1. 6.) (* skoXC1 (* skoXC1 (/ 3. 40.)))))) (- 1.)) (<= (* skoXC1 (* skoXC1 (* skoXC1 (* skoXC1 (+ (/ 32. 15.) (* skoXC1 (* skoXC1 (+ (/ (- 296.) 15.) (* skoXC1 (* skoXC1 (+ (/ 391. 15.) (* skoXC1 (* skoXC1 (+ (/ (- 146.) 15.) (* skoXC1 (* skoXC1 (/ 3. 4.))))))))))))))))) 0.) (<= (* skoXC1 (* skoXC1 (+ (/ 1. 3.) (* skoXC1 (* skoXC1 (/ 3. 20.)))))) 1.) (<= (* skoXC1 (* skoXC1 (* skoXC1 (* skoXC1 (+ (/ (- 17.) 120.) (* skoXC1 (* skoXC1 (/ 3. 80.)))))))) 0.) (<= (* skoXC1 (* skoXC1 (* skoXC1 (* skoXC1 (+ (/ (- 13.) 60.) (* skoXC1 (* skoXC1 (/ (- 3.) 10.)))))))) 0.) (<= (* skoXC1 (* skoXC1 (+ (/ (- 1.) 2.) (* skoXC1 (* skoXC1 (+ (/ 7. 120.) (* skoXC1 (* skoXC1 (/ (- 3.) 40.))))))))) 0.) (<= (* skoXC1 (* skoXC1 (+ (/ (- 1.) 6.) (* skoXC1 (* skoXC1 (/ (- 3.) 40.)))))) 1.) (<= (* skoXC1 (+ (- 1.) (* skoXC1 (* skoXC1 (+ (/ 1. 3.) (* skoXC1 (* skoXC1 (/ 3. 20.)))))))) 0.) (> (* skoXC1 skoXC1) 0.) (<= (* skoXC1 (* skoXC1 (+ 80. (* skoXC1 (* skoXC1 (+ (- 40.) (* skoXC1 (* skoXC1 (+ 6. (* skoXC1 (* skoXC1 (/ (- 1.) 8.)))))))))))) 48.) (> (* skoXC1 (* skoXC1 (+ (- 80.) (* skoXC1 (* skoXC1 (+ 40. (* skoXC1 (* skoXC1 (+ (- 6.) (* skoXC1 (* skoXC1 (/ 1. 8.)))))))))))) (- 48.)) (<= (* skoXC1 (* skoXC1 (+ 24. (* skoXC1 (* skoXC1 (+ (- 10.) (* skoXC1 skoXC1))))))) 16.) (<= (* skoXC1 (* skoXC1 (/ 1. 2.))) 3.) (> (* skoXC1 (* skoXC1 (/ (- 1.) 2.))) (- 3.)) (> skoXC1 0.) (> (/ 7. 8.) skoXC1) (<= (* skoXC1 (+ (- 1.) (* skoXC1 (* skoXC1 (/ 1. 3.))))) 0.) (<= (* skoXC1 (* skoXC1 (/ (- 1.) 6.))) 1.) (<= (* skoXC1 (* skoXC1 (+ (/ (- 1.) 2.) (* skoXC1 (* skoXC1 (/ (- 1.) 6.)))))) 0.) (<= (* skoXC1 skoXC1) 2.) (<= (* skoXC1 (* skoXC1 (* skoXC1 (* skoXC1 (/ (- 2.) 3.))))) 0.) (<= (* skoXC1 (+ (- 1.) (* skoXC1 (* skoXC1 (/ (- 1.) 6.))))) 0.) (<= (* skoXC1 (* skoXC1 (/ 1. 3.))) 1.) (<= (* skoXC1 (* skoXC1 (+ 256. (* skoXC1 (* skoXC1 (+ (- 160.) (* skoXC1 (* skoXC1 (+ 32. (* skoXC1 (* skoXC1 (- 1.)))))))))))) 128.)) (succedent (> (* skoXC1 (* skoXC1 (* skoXC1 (* skoXC1 (+ (/ (- 80.) 3.) (* skoXC1 (* skoXC1 (+ (/ 128. 3.) (* skoXC1 (* skoXC1 (+ (/ (- 55.) 3.) (* skoXC1 (* skoXC1 (/ 5. 3.)))))))))))))) 0.)))
-----[end problem]-----

-----[begin problem]-----
% In Mathematica format:
Timing[Resolve[Exists[{skoXC1}, And[skoXC1*skoXC1*skoXC1*skoXC1*((-17/120)+skoXC1*skoXC1*(3/80))<=0,skoXC1*skoXC1*((1/6)+skoXC1*skoXC1*(3/40))>-1,skoXC1*skoXC1*skoXC1*skoXC1*((32/15)+skoXC1*skoXC1*((-296/15)+skoXC1*skoXC1*((391/15)+skoXC1*skoXC1*((-146/15)+skoXC1*skoXC1*(3/4)))))<=0,skoXC1*skoXC1*((1/3)+skoXC1*skoXC1*(3/20))<=1,skoXC1*skoXC1*skoXC1*skoXC1*((-17/120)+skoXC1*skoXC1*(3/80))<=0,skoXC1*skoXC1*skoXC1*skoXC1*((-13/60)+skoXC1*skoXC1*(-3/10))<=0,skoXC1*skoXC1*((-1/2)+skoXC1*skoXC1*((7/120)+skoXC1*skoXC1*(-3/40)))<=0,skoXC1*skoXC1*((-1/6)+skoXC1*skoXC1*(-3/40))<=1,skoXC1*(-1+skoXC1*skoXC1*((1/3)+skoXC1*skoXC1*(3/20)))<=0,skoXC1*skoXC1>0,skoXC1*skoXC1*(80+skoXC1*skoXC1*(-40+skoXC1*skoXC1*(6+skoXC1*skoXC1*(-1/8))))<=48,skoXC1*skoXC1*(-80+skoXC1*skoXC1*(40+skoXC1*skoXC1*(-6+skoXC1*skoXC1*(1/8))))>-48,skoXC1*skoXC1*(24+skoXC1*skoXC1*(-10+skoXC1*skoXC1))<=16,skoXC1*skoXC1*(1/2)<=3,skoXC1*skoXC1*(-1/2)>-3,skoXC1>0,(7/8)>skoXC1,skoXC1*(-1+skoXC1*skoXC1*(1/3))<=0,skoXC1*skoXC1*(-1/6)<=1,skoXC1*skoXC1*((-1/2)+skoXC1*skoXC1*(-1/6))<=0,skoXC1*skoXC1<=2,skoXC1*skoXC1*skoXC1*skoXC1*(-2/3)<=0,skoXC1*(-1+skoXC1*skoXC1*(-1/6))<=0,skoXC1*skoXC1*(1/3)<=1,skoXC1*skoXC1*(256+skoXC1*skoXC1*(-160+skoXC1*skoXC1*(32+skoXC1*skoXC1*-1)))<=128,skoXC1*skoXC1*skoXC1*skoXC1*((-80/3)+skoXC1*skoXC1*((128/3)+skoXC1*skoXC1*((-55/3)+skoXC1*skoXC1*(5/3))))<=0]], Reals]]

% In QepcadB format:
(E skoXC1) [[(skoXC1 skoXC1 skoXC1 skoXC1 (-17/120+(skoXC1 skoXC1 (3/80))))<=0]/\[[-1<(skoXC1 skoXC1 (1/6+(skoXC1 skoXC1 (3/40))))]/\[[(skoXC1 skoXC1 skoXC1 skoXC1 (32/15+(skoXC1 skoXC1 (-296/15+(skoXC1 skoXC1 (391/15+(skoXC1 skoXC1 (-146/15+(skoXC1 skoXC1 (3/4))))))))))<=0]/\[[(skoXC1 skoXC1 (1/3+(skoXC1 skoXC1 (3/20))))<=1]/\[[(skoXC1 skoXC1 skoXC1 skoXC1 (-17/120+(skoXC1 skoXC1 (3/80))))<=0]/\[[(skoXC1 skoXC1 skoXC1 skoXC1 (-13/60+(skoXC1 skoXC1 (-3/10))))<=0]/\[[(skoXC1 skoXC1 (-1/2+(skoXC1 skoXC1 (7/120+(skoXC1 skoXC1 (-3/40))))))<=0]/\[[(skoXC1 skoXC1 (-1/6+(skoXC1 skoXC1 (-3/40))))<=1]/\[[(skoXC1 (-1+(skoXC1 skoXC1 (1/3+(skoXC1 skoXC1 (3/20))))))<=0]/\[[0<(skoXC1 skoXC1)]/\[[(skoXC1 skoXC1 (80+(skoXC1 skoXC1 (-40+(skoXC1 skoXC1 (6+(skoXC1 skoXC1 (-1/8))))))))<=48]/\[[-48<(skoXC1 skoXC1 (-80+(skoXC1 skoXC1 (40+(skoXC1 skoXC1 (-6+(skoXC1 skoXC1 (1/8))))))))]/\[[(skoXC1 skoXC1 (24+(skoXC1 skoXC1 (-10+(skoXC1 skoXC1)))))<=16]/\[[(skoXC1 skoXC1 (1/2))<=3]/\[[-3<(skoXC1 skoXC1 (-1/2))]/\[[0<skoXC1]/\[[skoXC1<7/8]/\[[(skoXC1 (-1+(skoXC1 skoXC1 (1/3))))<=0]/\[[(skoXC1 skoXC1 (-1/6))<=1]/\[[(skoXC1 skoXC1 (-1/2+(skoXC1 skoXC1 (-1/6))))<=0]/\[[(skoXC1 skoXC1)<=2]/\[[(skoXC1 skoXC1 skoXC1 skoXC1 (-2/3))<=0]/\[[(skoXC1 (-1+(skoXC1 skoXC1 (-1/6))))<=0]/\[[(skoXC1 skoXC1 (1/3))<=1]/\[[(skoXC1 skoXC1 (256+(skoXC1 skoXC1 (-160+(skoXC1 skoXC1 (32+(skoXC1 skoXC1 (-1))))))))<=128]/\[(skoXC1 skoXC1 skoXC1 skoXC1 (-80/3+(skoXC1 skoXC1 (128/3+(skoXC1 skoXC1 (-55/3+(skoXC1 skoXC1 (5/3))))))))<=0]]]]]]]]]]]]]]]]]]]]]]]]]].

% In SMTLib2 format:
(declare-fun skoXC1 () Real) (assert (and (<= (* skoXC1 (* skoXC1 (* skoXC1 (* skoXC1 (+ (/ (- 17.) 120.) (* skoXC1 (* skoXC1 (/ 3. 80.)))))))) 0.) (and (> (* skoXC1 (* skoXC1 (+ (/ 1. 6.) (* skoXC1 (* skoXC1 (/ 3. 40.)))))) (- 1.)) (and (<= (* skoXC1 (* skoXC1 (* skoXC1 (* skoXC1 (+ (/ 32. 15.) (* skoXC1 (* skoXC1 (+ (/ (- 296.) 15.) (* skoXC1 (* skoXC1 (+ (/ 391. 15.) (* skoXC1 (* skoXC1 (+ (/ (- 146.) 15.) (* skoXC1 (* skoXC1 (/ 3. 4.))))))))))))))))) 0.) (and (<= (* skoXC1 (* skoXC1 (+ (/ 1. 3.) (* skoXC1 (* skoXC1 (/ 3. 20.)))))) 1.) (and (<= (* skoXC1 (* skoXC1 (* skoXC1 (* skoXC1 (+ (/ (- 17.) 120.) (* skoXC1 (* skoXC1 (/ 3. 80.)))))))) 0.) (and (<= (* skoXC1 (* skoXC1 (* skoXC1 (* skoXC1 (+ (/ (- 13.) 60.) (* skoXC1 (* skoXC1 (/ (- 3.) 10.)))))))) 0.) (and (<= (* skoXC1 (* skoXC1 (+ (/ (- 1.) 2.) (* skoXC1 (* skoXC1 (+ (/ 7. 120.) (* skoXC1 (* skoXC1 (/ (- 3.) 40.))))))))) 0.) (and (<= (* skoXC1 (* skoXC1 (+ (/ (- 1.) 6.) (* skoXC1 (* skoXC1 (/ (- 3.) 40.)))))) 1.) (and (<= (* skoXC1 (+ (- 1.) (* skoXC1 (* skoXC1 (+ (/ 1. 3.) (* skoXC1 (* skoXC1 (/ 3. 20.)))))))) 0.) (and (> (* skoXC1 skoXC1) 0.) (and (<= (* skoXC1 (* skoXC1 (+ 80. (* skoXC1 (* skoXC1 (+ (- 40.) (* skoXC1 (* skoXC1 (+ 6. (* skoXC1 (* skoXC1 (/ (- 1.) 8.)))))))))))) 48.) (and (> (* skoXC1 (* skoXC1 (+ (- 80.) (* skoXC1 (* skoXC1 (+ 40. (* skoXC1 (* skoXC1 (+ (- 6.) (* skoXC1 (* skoXC1 (/ 1. 8.)))))))))))) (- 48.)) (and (<= (* skoXC1 (* skoXC1 (+ 24. (* skoXC1 (* skoXC1 (+ (- 10.) (* skoXC1 skoXC1))))))) 16.) (and (<= (* skoXC1 (* skoXC1 (/ 1. 2.))) 3.) (and (> (* skoXC1 (* skoXC1 (/ (- 1.) 2.))) (- 3.)) (and (> skoXC1 0.) (and (> (/ 7. 8.) skoXC1) (and (<= (* skoXC1 (+ (- 1.) (* skoXC1 (* skoXC1 (/ 1. 3.))))) 0.) (and (<= (* skoXC1 (* skoXC1 (/ (- 1.) 6.))) 1.) (and (<= (* skoXC1 (* skoXC1 (+ (/ (- 1.) 2.) (* skoXC1 (* skoXC1 (/ (- 1.) 6.)))))) 0.) (and (<= (* skoXC1 skoXC1) 2.) (and (<= (* skoXC1 (* skoXC1 (* skoXC1 (* skoXC1 (/ (- 2.) 3.))))) 0.) (and (<= (* skoXC1 (+ (- 1.) (* skoXC1 (* skoXC1 (/ (- 1.) 6.))))) 0.) (and (<= (* skoXC1 (* skoXC1 (/ 1. 3.))) 1.) (and (<= (* skoXC1 (* skoXC1 (+ 256. (* skoXC1 (* skoXC1 (+ (- 160.) (* skoXC1 (* skoXC1 (+ 32. (* skoXC1 (* skoXC1 (- 1.)))))))))))) 128.) (<= (* skoXC1 (* skoXC1 (* skoXC1 (* skoXC1 (+ (/ (- 80.) 3.) (* skoXC1 (* skoXC1 (+ (/ 128. 3.) (* skoXC1 (* skoXC1 (+ (/ (- 55.) 3.) (* skoXC1 (* skoXC1 (/ 5. 3.)))))))))))))) 0.)))))))))))))))))))))))))))

% In GRF format:
(sequent " MetiTarski formula " (antecedent (<= (* skoXC1 (* skoXC1 (* skoXC1 (* skoXC1 (+ (/ (- 17.) 120.) (* skoXC1 (* skoXC1 (/ 3. 80.)))))))) 0.) (> (* skoXC1 (* skoXC1 (+ (/ 1. 6.) (* skoXC1 (* skoXC1 (/ 3. 40.)))))) (- 1.)) (<= (* skoXC1 (* skoXC1 (* skoXC1 (* skoXC1 (+ (/ 32. 15.) (* skoXC1 (* skoXC1 (+ (/ (- 296.) 15.) (* skoXC1 (* skoXC1 (+ (/ 391. 15.) (* skoXC1 (* skoXC1 (+ (/ (- 146.) 15.) (* skoXC1 (* skoXC1 (/ 3. 4.))))))))))))))))) 0.) (<= (* skoXC1 (* skoXC1 (+ (/ 1. 3.) (* skoXC1 (* skoXC1 (/ 3. 20.)))))) 1.) (<= (* skoXC1 (* skoXC1 (* skoXC1 (* skoXC1 (+ (/ (- 17.) 120.) (* skoXC1 (* skoXC1 (/ 3. 80.)))))))) 0.) (<= (* skoXC1 (* skoXC1 (* skoXC1 (* skoXC1 (+ (/ (- 13.) 60.) (* skoXC1 (* skoXC1 (/ (- 3.) 10.)))))))) 0.) (<= (* skoXC1 (* skoXC1 (+ (/ (- 1.) 2.) (* skoXC1 (* skoXC1 (+ (/ 7. 120.) (* skoXC1 (* skoXC1 (/ (- 3.) 40.))))))))) 0.) (<= (* skoXC1 (* skoXC1 (+ (/ (- 1.) 6.) (* skoXC1 (* skoXC1 (/ (- 3.) 40.)))))) 1.) (<= (* skoXC1 (+ (- 1.) (* skoXC1 (* skoXC1 (+ (/ 1. 3.) (* skoXC1 (* skoXC1 (/ 3. 20.)))))))) 0.) (> (* skoXC1 skoXC1) 0.) (<= (* skoXC1 (* skoXC1 (+ 80. (* skoXC1 (* skoXC1 (+ (- 40.) (* skoXC1 (* skoXC1 (+ 6. (* skoXC1 (* skoXC1 (/ (- 1.) 8.)))))))))))) 48.) (> (* skoXC1 (* skoXC1 (+ (- 80.) (* skoXC1 (* skoXC1 (+ 40. (* skoXC1 (* skoXC1 (+ (- 6.) (* skoXC1 (* skoXC1 (/ 1. 8.)))))))))))) (- 48.)) (<= (* skoXC1 (* skoXC1 (+ 24. (* skoXC1 (* skoXC1 (+ (- 10.) (* skoXC1 skoXC1))))))) 16.) (<= (* skoXC1 (* skoXC1 (/ 1. 2.))) 3.) (> (* skoXC1 (* skoXC1 (/ (- 1.) 2.))) (- 3.)) (> skoXC1 0.) (> (/ 7. 8.) skoXC1) (<= (* skoXC1 (+ (- 1.) (* skoXC1 (* skoXC1 (/ 1. 3.))))) 0.) (<= (* skoXC1 (* skoXC1 (/ (- 1.) 6.))) 1.) (<= (* skoXC1 (* skoXC1 (+ (/ (- 1.) 2.) (* skoXC1 (* skoXC1 (/ (- 1.) 6.)))))) 0.) (<= (* skoXC1 skoXC1) 2.) (<= (* skoXC1 (* skoXC1 (* skoXC1 (* skoXC1 (/ (- 2.) 3.))))) 0.) (<= (* skoXC1 (+ (- 1.) (* skoXC1 (* skoXC1 (/ (- 1.) 6.))))) 0.) (<= (* skoXC1 (* skoXC1 (/ 1. 3.))) 1.) (<= (* skoXC1 (* skoXC1 (+ 256. (* skoXC1 (* skoXC1 (+ (- 160.) (* skoXC1 (* skoXC1 (+ 32. (* skoXC1 (* skoXC1 (- 1.)))))))))))) 128.)) (succedent (> (* skoXC1 (* skoXC1 (* skoXC1 (* skoXC1 (+ (/ (- 80.) 3.) (* skoXC1 (* skoXC1 (+ (/ 128. 3.) (* skoXC1 (* skoXC1 (+ (/ (- 55.) 3.) (* skoXC1 (* skoXC1 (/ 5. 3.)))))))))))))) 0.)))
-----[end problem]-----

-----[begin problem]-----
% In Mathematica format:
Timing[Resolve[Exists[{skoXC1}, And[skoXC1*skoXC1*(24+skoXC1*skoXC1*(-10+skoXC1*skoXC1))<=16,skoXC1*skoXC1*((1/6)+skoXC1*skoXC1*(3/40))>-1,skoXC1*skoXC1*skoXC1*skoXC1*((32/15)+skoXC1*skoXC1*((-296/15)+skoXC1*skoXC1*((391/15)+skoXC1*skoXC1*((-146/15)+skoXC1*skoXC1*(3/4)))))<=0,skoXC1*skoXC1*((1/3)+skoXC1*skoXC1*(3/20))<=1,skoXC1*skoXC1*skoXC1*skoXC1*((-17/120)+skoXC1*skoXC1*(3/80))<=0,skoXC1*skoXC1*skoXC1*skoXC1*((-13/60)+skoXC1*skoXC1*(-3/10))<=0,skoXC1*skoXC1*((-1/2)+skoXC1*skoXC1*((7/120)+skoXC1*skoXC1*(-3/40)))<=0,skoXC1*skoXC1*((-1/6)+skoXC1*skoXC1*(-3/40))<=1,skoXC1*(-1+skoXC1*skoXC1*((1/3)+skoXC1*skoXC1*(3/20)))<=0,skoXC1*skoXC1>0,skoXC1*skoXC1*(80+skoXC1*skoXC1*(-40+skoXC1*skoXC1*(6+skoXC1*skoXC1*(-1/8))))<=48,skoXC1*skoXC1*(-80+skoXC1*skoXC1*(40+skoXC1*skoXC1*(-6+skoXC1*skoXC1*(1/8))))>-48,skoXC1*skoXC1*(24+skoXC1*skoXC1*(-10+skoXC1*skoXC1))<=16,skoXC1*skoXC1*(1/2)<=3,skoXC1*skoXC1*(-1/2)>-3,skoXC1>0,(7/8)>skoXC1,skoXC1*(-1+skoXC1*skoXC1*(1/3))<=0,skoXC1*skoXC1*(-1/6)<=1,skoXC1*skoXC1*((-1/2)+skoXC1*skoXC1*(-1/6))<=0,skoXC1*skoXC1<=2,skoXC1*skoXC1*skoXC1*skoXC1*(-2/3)<=0,skoXC1*(-1+skoXC1*skoXC1*(-1/6))<=0,skoXC1*skoXC1*(1/3)<=1,skoXC1*skoXC1*(256+skoXC1*skoXC1*(-160+skoXC1*skoXC1*(32+skoXC1*skoXC1*-1)))<=128,skoXC1*skoXC1*skoXC1*skoXC1*((-80/3)+skoXC1*skoXC1*((128/3)+skoXC1*skoXC1*((-55/3)+skoXC1*skoXC1*(5/3))))<=0]], Reals]]

% In QepcadB format:
(E skoXC1) [[(skoXC1 skoXC1 (24+(skoXC1 skoXC1 (-10+(skoXC1 skoXC1)))))<=16]/\[[-1<(skoXC1 skoXC1 (1/6+(skoXC1 skoXC1 (3/40))))]/\[[(skoXC1 skoXC1 skoXC1 skoXC1 (32/15+(skoXC1 skoXC1 (-296/15+(skoXC1 skoXC1 (391/15+(skoXC1 skoXC1 (-146/15+(skoXC1 skoXC1 (3/4))))))))))<=0]/\[[(skoXC1 skoXC1 (1/3+(skoXC1 skoXC1 (3/20))))<=1]/\[[(skoXC1 skoXC1 skoXC1 skoXC1 (-17/120+(skoXC1 skoXC1 (3/80))))<=0]/\[[(skoXC1 skoXC1 skoXC1 skoXC1 (-13/60+(skoXC1 skoXC1 (-3/10))))<=0]/\[[(skoXC1 skoXC1 (-1/2+(skoXC1 skoXC1 (7/120+(skoXC1 skoXC1 (-3/40))))))<=0]/\[[(skoXC1 skoXC1 (-1/6+(skoXC1 skoXC1 (-3/40))))<=1]/\[[(skoXC1 (-1+(skoXC1 skoXC1 (1/3+(skoXC1 skoXC1 (3/20))))))<=0]/\[[0<(skoXC1 skoXC1)]/\[[(skoXC1 skoXC1 (80+(skoXC1 skoXC1 (-40+(skoXC1 skoXC1 (6+(skoXC1 skoXC1 (-1/8))))))))<=48]/\[[-48<(skoXC1 skoXC1 (-80+(skoXC1 skoXC1 (40+(skoXC1 skoXC1 (-6+(skoXC1 skoXC1 (1/8))))))))]/\[[(skoXC1 skoXC1 (24+(skoXC1 skoXC1 (-10+(skoXC1 skoXC1)))))<=16]/\[[(skoXC1 skoXC1 (1/2))<=3]/\[[-3<(skoXC1 skoXC1 (-1/2))]/\[[0<skoXC1]/\[[skoXC1<7/8]/\[[(skoXC1 (-1+(skoXC1 skoXC1 (1/3))))<=0]/\[[(skoXC1 skoXC1 (-1/6))<=1]/\[[(skoXC1 skoXC1 (-1/2+(skoXC1 skoXC1 (-1/6))))<=0]/\[[(skoXC1 skoXC1)<=2]/\[[(skoXC1 skoXC1 skoXC1 skoXC1 (-2/3))<=0]/\[[(skoXC1 (-1+(skoXC1 skoXC1 (-1/6))))<=0]/\[[(skoXC1 skoXC1 (1/3))<=1]/\[[(skoXC1 skoXC1 (256+(skoXC1 skoXC1 (-160+(skoXC1 skoXC1 (32+(skoXC1 skoXC1 (-1))))))))<=128]/\[(skoXC1 skoXC1 skoXC1 skoXC1 (-80/3+(skoXC1 skoXC1 (128/3+(skoXC1 skoXC1 (-55/3+(skoXC1 skoXC1 (5/3))))))))<=0]]]]]]]]]]]]]]]]]]]]]]]]]].

% In SMTLib2 format:
(declare-fun skoXC1 () Real) (assert (and (<= (* skoXC1 (* skoXC1 (+ 24. (* skoXC1 (* skoXC1 (+ (- 10.) (* skoXC1 skoXC1))))))) 16.) (and (> (* skoXC1 (* skoXC1 (+ (/ 1. 6.) (* skoXC1 (* skoXC1 (/ 3. 40.)))))) (- 1.)) (and (<= (* skoXC1 (* skoXC1 (* skoXC1 (* skoXC1 (+ (/ 32. 15.) (* skoXC1 (* skoXC1 (+ (/ (- 296.) 15.) (* skoXC1 (* skoXC1 (+ (/ 391. 15.) (* skoXC1 (* skoXC1 (+ (/ (- 146.) 15.) (* skoXC1 (* skoXC1 (/ 3. 4.))))))))))))))))) 0.) (and (<= (* skoXC1 (* skoXC1 (+ (/ 1. 3.) (* skoXC1 (* skoXC1 (/ 3. 20.)))))) 1.) (and (<= (* skoXC1 (* skoXC1 (* skoXC1 (* skoXC1 (+ (/ (- 17.) 120.) (* skoXC1 (* skoXC1 (/ 3. 80.)))))))) 0.) (and (<= (* skoXC1 (* skoXC1 (* skoXC1 (* skoXC1 (+ (/ (- 13.) 60.) (* skoXC1 (* skoXC1 (/ (- 3.) 10.)))))))) 0.) (and (<= (* skoXC1 (* skoXC1 (+ (/ (- 1.) 2.) (* skoXC1 (* skoXC1 (+ (/ 7. 120.) (* skoXC1 (* skoXC1 (/ (- 3.) 40.))))))))) 0.) (and (<= (* skoXC1 (* skoXC1 (+ (/ (- 1.) 6.) (* skoXC1 (* skoXC1 (/ (- 3.) 40.)))))) 1.) (and (<= (* skoXC1 (+ (- 1.) (* skoXC1 (* skoXC1 (+ (/ 1. 3.) (* skoXC1 (* skoXC1 (/ 3. 20.)))))))) 0.) (and (> (* skoXC1 skoXC1) 0.) (and (<= (* skoXC1 (* skoXC1 (+ 80. (* skoXC1 (* skoXC1 (+ (- 40.) (* skoXC1 (* skoXC1 (+ 6. (* skoXC1 (* skoXC1 (/ (- 1.) 8.)))))))))))) 48.) (and (> (* skoXC1 (* skoXC1 (+ (- 80.) (* skoXC1 (* skoXC1 (+ 40. (* skoXC1 (* skoXC1 (+ (- 6.) (* skoXC1 (* skoXC1 (/ 1. 8.)))))))))))) (- 48.)) (and (<= (* skoXC1 (* skoXC1 (+ 24. (* skoXC1 (* skoXC1 (+ (- 10.) (* skoXC1 skoXC1))))))) 16.) (and (<= (* skoXC1 (* skoXC1 (/ 1. 2.))) 3.) (and (> (* skoXC1 (* skoXC1 (/ (- 1.) 2.))) (- 3.)) (and (> skoXC1 0.) (and (> (/ 7. 8.) skoXC1) (and (<= (* skoXC1 (+ (- 1.) (* skoXC1 (* skoXC1 (/ 1. 3.))))) 0.) (and (<= (* skoXC1 (* skoXC1 (/ (- 1.) 6.))) 1.) (and (<= (* skoXC1 (* skoXC1 (+ (/ (- 1.) 2.) (* skoXC1 (* skoXC1 (/ (- 1.) 6.)))))) 0.) (and (<= (* skoXC1 skoXC1) 2.) (and (<= (* skoXC1 (* skoXC1 (* skoXC1 (* skoXC1 (/ (- 2.) 3.))))) 0.) (and (<= (* skoXC1 (+ (- 1.) (* skoXC1 (* skoXC1 (/ (- 1.) 6.))))) 0.) (and (<= (* skoXC1 (* skoXC1 (/ 1. 3.))) 1.) (and (<= (* skoXC1 (* skoXC1 (+ 256. (* skoXC1 (* skoXC1 (+ (- 160.) (* skoXC1 (* skoXC1 (+ 32. (* skoXC1 (* skoXC1 (- 1.)))))))))))) 128.) (<= (* skoXC1 (* skoXC1 (* skoXC1 (* skoXC1 (+ (/ (- 80.) 3.) (* skoXC1 (* skoXC1 (+ (/ 128. 3.) (* skoXC1 (* skoXC1 (+ (/ (- 55.) 3.) (* skoXC1 (* skoXC1 (/ 5. 3.)))))))))))))) 0.)))))))))))))))))))))))))))

% In GRF format:
(sequent " MetiTarski formula " (antecedent (<= (* skoXC1 (* skoXC1 (+ 24. (* skoXC1 (* skoXC1 (+ (- 10.) (* skoXC1 skoXC1))))))) 16.) (> (* skoXC1 (* skoXC1 (+ (/ 1. 6.) (* skoXC1 (* skoXC1 (/ 3. 40.)))))) (- 1.)) (<= (* skoXC1 (* skoXC1 (* skoXC1 (* skoXC1 (+ (/ 32. 15.) (* skoXC1 (* skoXC1 (+ (/ (- 296.) 15.) (* skoXC1 (* skoXC1 (+ (/ 391. 15.) (* skoXC1 (* skoXC1 (+ (/ (- 146.) 15.) (* skoXC1 (* skoXC1 (/ 3. 4.))))))))))))))))) 0.) (<= (* skoXC1 (* skoXC1 (+ (/ 1. 3.) (* skoXC1 (* skoXC1 (/ 3. 20.)))))) 1.) (<= (* skoXC1 (* skoXC1 (* skoXC1 (* skoXC1 (+ (/ (- 17.) 120.) (* skoXC1 (* skoXC1 (/ 3. 80.)))))))) 0.) (<= (* skoXC1 (* skoXC1 (* skoXC1 (* skoXC1 (+ (/ (- 13.) 60.) (* skoXC1 (* skoXC1 (/ (- 3.) 10.)))))))) 0.) (<= (* skoXC1 (* skoXC1 (+ (/ (- 1.) 2.) (* skoXC1 (* skoXC1 (+ (/ 7. 120.) (* skoXC1 (* skoXC1 (/ (- 3.) 40.))))))))) 0.) (<= (* skoXC1 (* skoXC1 (+ (/ (- 1.) 6.) (* skoXC1 (* skoXC1 (/ (- 3.) 40.)))))) 1.) (<= (* skoXC1 (+ (- 1.) (* skoXC1 (* skoXC1 (+ (/ 1. 3.) (* skoXC1 (* skoXC1 (/ 3. 20.)))))))) 0.) (> (* skoXC1 skoXC1) 0.) (<= (* skoXC1 (* skoXC1 (+ 80. (* skoXC1 (* skoXC1 (+ (- 40.) (* skoXC1 (* skoXC1 (+ 6. (* skoXC1 (* skoXC1 (/ (- 1.) 8.)))))))))))) 48.) (> (* skoXC1 (* skoXC1 (+ (- 80.) (* skoXC1 (* skoXC1 (+ 40. (* skoXC1 (* skoXC1 (+ (- 6.) (* skoXC1 (* skoXC1 (/ 1. 8.)))))))))))) (- 48.)) (<= (* skoXC1 (* skoXC1 (+ 24. (* skoXC1 (* skoXC1 (+ (- 10.) (* skoXC1 skoXC1))))))) 16.) (<= (* skoXC1 (* skoXC1 (/ 1. 2.))) 3.) (> (* skoXC1 (* skoXC1 (/ (- 1.) 2.))) (- 3.)) (> skoXC1 0.) (> (/ 7. 8.) skoXC1) (<= (* skoXC1 (+ (- 1.) (* skoXC1 (* skoXC1 (/ 1. 3.))))) 0.) (<= (* skoXC1 (* skoXC1 (/ (- 1.) 6.))) 1.) (<= (* skoXC1 (* skoXC1 (+ (/ (- 1.) 2.) (* skoXC1 (* skoXC1 (/ (- 1.) 6.)))))) 0.) (<= (* skoXC1 skoXC1) 2.) (<= (* skoXC1 (* skoXC1 (* skoXC1 (* skoXC1 (/ (- 2.) 3.))))) 0.) (<= (* skoXC1 (+ (- 1.) (* skoXC1 (* skoXC1 (/ (- 1.) 6.))))) 0.) (<= (* skoXC1 (* skoXC1 (/ 1. 3.))) 1.) (<= (* skoXC1 (* skoXC1 (+ 256. (* skoXC1 (* skoXC1 (+ (- 160.) (* skoXC1 (* skoXC1 (+ 32. (* skoXC1 (* skoXC1 (- 1.)))))))))))) 128.)) (succedent (> (* skoXC1 (* skoXC1 (* skoXC1 (* skoXC1 (+ (/ (- 80.) 3.) (* skoXC1 (* skoXC1 (+ (/ 128. 3.) (* skoXC1 (* skoXC1 (+ (/ (- 55.) 3.) (* skoXC1 (* skoXC1 (/ 5. 3.)))))))))))))) 0.)))
-----[end problem]-----

-----[begin problem]-----
% In Mathematica format:
Timing[Resolve[Exists[{skoXC1}, And[skoXC1*(-1+skoXC1*skoXC1*((-1/6)+skoXC1*skoXC1*(-3/40)))<=0,skoXC1*skoXC1*((1/6)+skoXC1*skoXC1*(3/40))>-1,skoXC1*skoXC1*skoXC1*skoXC1*((32/15)+skoXC1*skoXC1*((-296/15)+skoXC1*skoXC1*((391/15)+skoXC1*skoXC1*((-146/15)+skoXC1*skoXC1*(3/4)))))<=0,skoXC1*skoXC1*((1/3)+skoXC1*skoXC1*(3/20))<=1,skoXC1*skoXC1*skoXC1*skoXC1*((-17/120)+skoXC1*skoXC1*(3/80))<=0,skoXC1*skoXC1*skoXC1*skoXC1*((-13/60)+skoXC1*skoXC1*(-3/10))<=0,skoXC1*skoXC1*((-1/2)+skoXC1*skoXC1*((7/120)+skoXC1*skoXC1*(-3/40)))<=0,skoXC1*skoXC1*((-1/6)+skoXC1*skoXC1*(-3/40))<=1,skoXC1*(-1+skoXC1*skoXC1*((1/3)+skoXC1*skoXC1*(3/20)))<=0,skoXC1*skoXC1>0,skoXC1*skoXC1*(80+skoXC1*skoXC1*(-40+skoXC1*skoXC1*(6+skoXC1*skoXC1*(-1/8))))<=48,skoXC1*skoXC1*(-80+skoXC1*skoXC1*(40+skoXC1*skoXC1*(-6+skoXC1*skoXC1*(1/8))))>-48,skoXC1*skoXC1*(24+skoXC1*skoXC1*(-10+skoXC1*skoXC1))<=16,skoXC1*skoXC1*(1/2)<=3,skoXC1*skoXC1*(-1/2)>-3,skoXC1>0,(7/8)>skoXC1,skoXC1*(-1+skoXC1*skoXC1*(1/3))<=0,skoXC1*skoXC1*(-1/6)<=1,skoXC1*skoXC1*((-1/2)+skoXC1*skoXC1*(-1/6))<=0,skoXC1*skoXC1<=2,skoXC1*skoXC1*skoXC1*skoXC1*(-2/3)<=0,skoXC1*(-1+skoXC1*skoXC1*(-1/6))<=0,skoXC1*skoXC1*(1/3)<=1,skoXC1*skoXC1*(256+skoXC1*skoXC1*(-160+skoXC1*skoXC1*(32+skoXC1*skoXC1*-1)))<=128,skoXC1*skoXC1*skoXC1*skoXC1*((-80/3)+skoXC1*skoXC1*((128/3)+skoXC1*skoXC1*((-55/3)+skoXC1*skoXC1*(5/3))))<=0]], Reals]]

% In QepcadB format:
(E skoXC1) [[(skoXC1 (-1+(skoXC1 skoXC1 (-1/6+(skoXC1 skoXC1 (-3/40))))))<=0]/\[[-1<(skoXC1 skoXC1 (1/6+(skoXC1 skoXC1 (3/40))))]/\[[(skoXC1 skoXC1 skoXC1 skoXC1 (32/15+(skoXC1 skoXC1 (-296/15+(skoXC1 skoXC1 (391/15+(skoXC1 skoXC1 (-146/15+(skoXC1 skoXC1 (3/4))))))))))<=0]/\[[(skoXC1 skoXC1 (1/3+(skoXC1 skoXC1 (3/20))))<=1]/\[[(skoXC1 skoXC1 skoXC1 skoXC1 (-17/120+(skoXC1 skoXC1 (3/80))))<=0]/\[[(skoXC1 skoXC1 skoXC1 skoXC1 (-13/60+(skoXC1 skoXC1 (-3/10))))<=0]/\[[(skoXC1 skoXC1 (-1/2+(skoXC1 skoXC1 (7/120+(skoXC1 skoXC1 (-3/40))))))<=0]/\[[(skoXC1 skoXC1 (-1/6+(skoXC1 skoXC1 (-3/40))))<=1]/\[[(skoXC1 (-1+(skoXC1 skoXC1 (1/3+(skoXC1 skoXC1 (3/20))))))<=0]/\[[0<(skoXC1 skoXC1)]/\[[(skoXC1 skoXC1 (80+(skoXC1 skoXC1 (-40+(skoXC1 skoXC1 (6+(skoXC1 skoXC1 (-1/8))))))))<=48]/\[[-48<(skoXC1 skoXC1 (-80+(skoXC1 skoXC1 (40+(skoXC1 skoXC1 (-6+(skoXC1 skoXC1 (1/8))))))))]/\[[(skoXC1 skoXC1 (24+(skoXC1 skoXC1 (-10+(skoXC1 skoXC1)))))<=16]/\[[(skoXC1 skoXC1 (1/2))<=3]/\[[-3<(skoXC1 skoXC1 (-1/2))]/\[[0<skoXC1]/\[[skoXC1<7/8]/\[[(skoXC1 (-1+(skoXC1 skoXC1 (1/3))))<=0]/\[[(skoXC1 skoXC1 (-1/6))<=1]/\[[(skoXC1 skoXC1 (-1/2+(skoXC1 skoXC1 (-1/6))))<=0]/\[[(skoXC1 skoXC1)<=2]/\[[(skoXC1 skoXC1 skoXC1 skoXC1 (-2/3))<=0]/\[[(skoXC1 (-1+(skoXC1 skoXC1 (-1/6))))<=0]/\[[(skoXC1 skoXC1 (1/3))<=1]/\[[(skoXC1 skoXC1 (256+(skoXC1 skoXC1 (-160+(skoXC1 skoXC1 (32+(skoXC1 skoXC1 (-1))))))))<=128]/\[(skoXC1 skoXC1 skoXC1 skoXC1 (-80/3+(skoXC1 skoXC1 (128/3+(skoXC1 skoXC1 (-55/3+(skoXC1 skoXC1 (5/3))))))))<=0]]]]]]]]]]]]]]]]]]]]]]]]]].

% In SMTLib2 format:
(declare-fun skoXC1 () Real) (assert (and (<= (* skoXC1 (+ (- 1.) (* skoXC1 (* skoXC1 (+ (/ (- 1.) 6.) (* skoXC1 (* skoXC1 (/ (- 3.) 40.)))))))) 0.) (and (> (* skoXC1 (* skoXC1 (+ (/ 1. 6.) (* skoXC1 (* skoXC1 (/ 3. 40.)))))) (- 1.)) (and (<= (* skoXC1 (* skoXC1 (* skoXC1 (* skoXC1 (+ (/ 32. 15.) (* skoXC1 (* skoXC1 (+ (/ (- 296.) 15.) (* skoXC1 (* skoXC1 (+ (/ 391. 15.) (* skoXC1 (* skoXC1 (+ (/ (- 146.) 15.) (* skoXC1 (* skoXC1 (/ 3. 4.))))))))))))))))) 0.) (and (<= (* skoXC1 (* skoXC1 (+ (/ 1. 3.) (* skoXC1 (* skoXC1 (/ 3. 20.)))))) 1.) (and (<= (* skoXC1 (* skoXC1 (* skoXC1 (* skoXC1 (+ (/ (- 17.) 120.) (* skoXC1 (* skoXC1 (/ 3. 80.)))))))) 0.) (and (<= (* skoXC1 (* skoXC1 (* skoXC1 (* skoXC1 (+ (/ (- 13.) 60.) (* skoXC1 (* skoXC1 (/ (- 3.) 10.)))))))) 0.) (and (<= (* skoXC1 (* skoXC1 (+ (/ (- 1.) 2.) (* skoXC1 (* skoXC1 (+ (/ 7. 120.) (* skoXC1 (* skoXC1 (/ (- 3.) 40.))))))))) 0.) (and (<= (* skoXC1 (* skoXC1 (+ (/ (- 1.) 6.) (* skoXC1 (* skoXC1 (/ (- 3.) 40.)))))) 1.) (and (<= (* skoXC1 (+ (- 1.) (* skoXC1 (* skoXC1 (+ (/ 1. 3.) (* skoXC1 (* skoXC1 (/ 3. 20.)))))))) 0.) (and (> (* skoXC1 skoXC1) 0.) (and (<= (* skoXC1 (* skoXC1 (+ 80. (* skoXC1 (* skoXC1 (+ (- 40.) (* skoXC1 (* skoXC1 (+ 6. (* skoXC1 (* skoXC1 (/ (- 1.) 8.)))))))))))) 48.) (and (> (* skoXC1 (* skoXC1 (+ (- 80.) (* skoXC1 (* skoXC1 (+ 40. (* skoXC1 (* skoXC1 (+ (- 6.) (* skoXC1 (* skoXC1 (/ 1. 8.)))))))))))) (- 48.)) (and (<= (* skoXC1 (* skoXC1 (+ 24. (* skoXC1 (* skoXC1 (+ (- 10.) (* skoXC1 skoXC1))))))) 16.) (and (<= (* skoXC1 (* skoXC1 (/ 1. 2.))) 3.) (and (> (* skoXC1 (* skoXC1 (/ (- 1.) 2.))) (- 3.)) (and (> skoXC1 0.) (and (> (/ 7. 8.) skoXC1) (and (<= (* skoXC1 (+ (- 1.) (* skoXC1 (* skoXC1 (/ 1. 3.))))) 0.) (and (<= (* skoXC1 (* skoXC1 (/ (- 1.) 6.))) 1.) (and (<= (* skoXC1 (* skoXC1 (+ (/ (- 1.) 2.) (* skoXC1 (* skoXC1 (/ (- 1.) 6.)))))) 0.) (and (<= (* skoXC1 skoXC1) 2.) (and (<= (* skoXC1 (* skoXC1 (* skoXC1 (* skoXC1 (/ (- 2.) 3.))))) 0.) (and (<= (* skoXC1 (+ (- 1.) (* skoXC1 (* skoXC1 (/ (- 1.) 6.))))) 0.) (and (<= (* skoXC1 (* skoXC1 (/ 1. 3.))) 1.) (and (<= (* skoXC1 (* skoXC1 (+ 256. (* skoXC1 (* skoXC1 (+ (- 160.) (* skoXC1 (* skoXC1 (+ 32. (* skoXC1 (* skoXC1 (- 1.)))))))))))) 128.) (<= (* skoXC1 (* skoXC1 (* skoXC1 (* skoXC1 (+ (/ (- 80.) 3.) (* skoXC1 (* skoXC1 (+ (/ 128. 3.) (* skoXC1 (* skoXC1 (+ (/ (- 55.) 3.) (* skoXC1 (* skoXC1 (/ 5. 3.)))))))))))))) 0.)))))))))))))))))))))))))))

% In GRF format:
(sequent " MetiTarski formula " (antecedent (<= (* skoXC1 (+ (- 1.) (* skoXC1 (* skoXC1 (+ (/ (- 1.) 6.) (* skoXC1 (* skoXC1 (/ (- 3.) 40.)))))))) 0.) (> (* skoXC1 (* skoXC1 (+ (/ 1. 6.) (* skoXC1 (* skoXC1 (/ 3. 40.)))))) (- 1.)) (<= (* skoXC1 (* skoXC1 (* skoXC1 (* skoXC1 (+ (/ 32. 15.) (* skoXC1 (* skoXC1 (+ (/ (- 296.) 15.) (* skoXC1 (* skoXC1 (+ (/ 391. 15.) (* skoXC1 (* skoXC1 (+ (/ (- 146.) 15.) (* skoXC1 (* skoXC1 (/ 3. 4.))))))))))))))))) 0.) (<= (* skoXC1 (* skoXC1 (+ (/ 1. 3.) (* skoXC1 (* skoXC1 (/ 3. 20.)))))) 1.) (<= (* skoXC1 (* skoXC1 (* skoXC1 (* skoXC1 (+ (/ (- 17.) 120.) (* skoXC1 (* skoXC1 (/ 3. 80.)))))))) 0.) (<= (* skoXC1 (* skoXC1 (* skoXC1 (* skoXC1 (+ (/ (- 13.) 60.) (* skoXC1 (* skoXC1 (/ (- 3.) 10.)))))))) 0.) (<= (* skoXC1 (* skoXC1 (+ (/ (- 1.) 2.) (* skoXC1 (* skoXC1 (+ (/ 7. 120.) (* skoXC1 (* skoXC1 (/ (- 3.) 40.))))))))) 0.) (<= (* skoXC1 (* skoXC1 (+ (/ (- 1.) 6.) (* skoXC1 (* skoXC1 (/ (- 3.) 40.)))))) 1.) (<= (* skoXC1 (+ (- 1.) (* skoXC1 (* skoXC1 (+ (/ 1. 3.) (* skoXC1 (* skoXC1 (/ 3. 20.)))))))) 0.) (> (* skoXC1 skoXC1) 0.) (<= (* skoXC1 (* skoXC1 (+ 80. (* skoXC1 (* skoXC1 (+ (- 40.) (* skoXC1 (* skoXC1 (+ 6. (* skoXC1 (* skoXC1 (/ (- 1.) 8.)))))))))))) 48.) (> (* skoXC1 (* skoXC1 (+ (- 80.) (* skoXC1 (* skoXC1 (+ 40. (* skoXC1 (* skoXC1 (+ (- 6.) (* skoXC1 (* skoXC1 (/ 1. 8.)))))))))))) (- 48.)) (<= (* skoXC1 (* skoXC1 (+ 24. (* skoXC1 (* skoXC1 (+ (- 10.) (* skoXC1 skoXC1))))))) 16.) (<= (* skoXC1 (* skoXC1 (/ 1. 2.))) 3.) (> (* skoXC1 (* skoXC1 (/ (- 1.) 2.))) (- 3.)) (> skoXC1 0.) (> (/ 7. 8.) skoXC1) (<= (* skoXC1 (+ (- 1.) (* skoXC1 (* skoXC1 (/ 1. 3.))))) 0.) (<= (* skoXC1 (* skoXC1 (/ (- 1.) 6.))) 1.) (<= (* skoXC1 (* skoXC1 (+ (/ (- 1.) 2.) (* skoXC1 (* skoXC1 (/ (- 1.) 6.)))))) 0.) (<= (* skoXC1 skoXC1) 2.) (<= (* skoXC1 (* skoXC1 (* skoXC1 (* skoXC1 (/ (- 2.) 3.))))) 0.) (<= (* skoXC1 (+ (- 1.) (* skoXC1 (* skoXC1 (/ (- 1.) 6.))))) 0.) (<= (* skoXC1 (* skoXC1 (/ 1. 3.))) 1.) (<= (* skoXC1 (* skoXC1 (+ 256. (* skoXC1 (* skoXC1 (+ (- 160.) (* skoXC1 (* skoXC1 (+ 32. (* skoXC1 (* skoXC1 (- 1.)))))))))))) 128.)) (succedent (> (* skoXC1 (* skoXC1 (* skoXC1 (* skoXC1 (+ (/ (- 80.) 3.) (* skoXC1 (* skoXC1 (+ (/ 128. 3.) (* skoXC1 (* skoXC1 (+ (/ (- 55.) 3.) (* skoXC1 (* skoXC1 (/ 5. 3.)))))))))))))) 0.)))
-----[end problem]-----

-----[begin problem]-----
% In Mathematica format:
Timing[Resolve[Exists[{skoXC1}, And[skoXC1*(-1+skoXC1*skoXC1*((-1/6)+skoXC1*skoXC1*(-3/40)))<=0,skoXC1*skoXC1*((1/6)+skoXC1*skoXC1*(3/40))>-1,skoXC1*skoXC1*((1/6)+skoXC1*skoXC1*(3/40))>-1,skoXC1*skoXC1*skoXC1*skoXC1*((32/15)+skoXC1*skoXC1*((-296/15)+skoXC1*skoXC1*((391/15)+skoXC1*skoXC1*((-146/15)+skoXC1*skoXC1*(3/4)))))<=0,skoXC1*skoXC1*((1/3)+skoXC1*skoXC1*(3/20))<=1,skoXC1*skoXC1*skoXC1*skoXC1*((-17/120)+skoXC1*skoXC1*(3/80))<=0,skoXC1*skoXC1*skoXC1*skoXC1*((-13/60)+skoXC1*skoXC1*(-3/10))<=0,skoXC1*skoXC1*((-1/2)+skoXC1*skoXC1*((7/120)+skoXC1*skoXC1*(-3/40)))<=0,skoXC1*skoXC1*((-1/6)+skoXC1*skoXC1*(-3/40))<=1,skoXC1*(-1+skoXC1*skoXC1*((1/3)+skoXC1*skoXC1*(3/20)))<=0,skoXC1*skoXC1>0,skoXC1*skoXC1*(80+skoXC1*skoXC1*(-40+skoXC1*skoXC1*(6+skoXC1*skoXC1*(-1/8))))<=48,skoXC1*skoXC1*(-80+skoXC1*skoXC1*(40+skoXC1*skoXC1*(-6+skoXC1*skoXC1*(1/8))))>-48,skoXC1*skoXC1*(24+skoXC1*skoXC1*(-10+skoXC1*skoXC1))<=16,skoXC1*skoXC1*(1/2)<=3,skoXC1*skoXC1*(-1/2)>-3,skoXC1>0,(7/8)>skoXC1,skoXC1*(-1+skoXC1*skoXC1*(1/3))<=0,skoXC1*skoXC1*(-1/6)<=1,skoXC1*skoXC1*((-1/2)+skoXC1*skoXC1*(-1/6))<=0,skoXC1*skoXC1<=2,skoXC1*skoXC1*skoXC1*skoXC1*(-2/3)<=0,skoXC1*(-1+skoXC1*skoXC1*(-1/6))<=0,skoXC1*skoXC1*(1/3)<=1,skoXC1*skoXC1*(256+skoXC1*skoXC1*(-160+skoXC1*skoXC1*(32+skoXC1*skoXC1*-1)))<=128,skoXC1*skoXC1*skoXC1*skoXC1*((-80/3)+skoXC1*skoXC1*((128/3)+skoXC1*skoXC1*((-55/3)+skoXC1*skoXC1*(5/3))))<=0]], Reals]]

% In QepcadB format:
(E skoXC1) [[(skoXC1 (-1+(skoXC1 skoXC1 (-1/6+(skoXC1 skoXC1 (-3/40))))))<=0]/\[[-1<(skoXC1 skoXC1 (1/6+(skoXC1 skoXC1 (3/40))))]/\[[-1<(skoXC1 skoXC1 (1/6+(skoXC1 skoXC1 (3/40))))]/\[[(skoXC1 skoXC1 skoXC1 skoXC1 (32/15+(skoXC1 skoXC1 (-296/15+(skoXC1 skoXC1 (391/15+(skoXC1 skoXC1 (-146/15+(skoXC1 skoXC1 (3/4))))))))))<=0]/\[[(skoXC1 skoXC1 (1/3+(skoXC1 skoXC1 (3/20))))<=1]/\[[(skoXC1 skoXC1 skoXC1 skoXC1 (-17/120+(skoXC1 skoXC1 (3/80))))<=0]/\[[(skoXC1 skoXC1 skoXC1 skoXC1 (-13/60+(skoXC1 skoXC1 (-3/10))))<=0]/\[[(skoXC1 skoXC1 (-1/2+(skoXC1 skoXC1 (7/120+(skoXC1 skoXC1 (-3/40))))))<=0]/\[[(skoXC1 skoXC1 (-1/6+(skoXC1 skoXC1 (-3/40))))<=1]/\[[(skoXC1 (-1+(skoXC1 skoXC1 (1/3+(skoXC1 skoXC1 (3/20))))))<=0]/\[[0<(skoXC1 skoXC1)]/\[[(skoXC1 skoXC1 (80+(skoXC1 skoXC1 (-40+(skoXC1 skoXC1 (6+(skoXC1 skoXC1 (-1/8))))))))<=48]/\[[-48<(skoXC1 skoXC1 (-80+(skoXC1 skoXC1 (40+(skoXC1 skoXC1 (-6+(skoXC1 skoXC1 (1/8))))))))]/\[[(skoXC1 skoXC1 (24+(skoXC1 skoXC1 (-10+(skoXC1 skoXC1)))))<=16]/\[[(skoXC1 skoXC1 (1/2))<=3]/\[[-3<(skoXC1 skoXC1 (-1/2))]/\[[0<skoXC1]/\[[skoXC1<7/8]/\[[(skoXC1 (-1+(skoXC1 skoXC1 (1/3))))<=0]/\[[(skoXC1 skoXC1 (-1/6))<=1]/\[[(skoXC1 skoXC1 (-1/2+(skoXC1 skoXC1 (-1/6))))<=0]/\[[(skoXC1 skoXC1)<=2]/\[[(skoXC1 skoXC1 skoXC1 skoXC1 (-2/3))<=0]/\[[(skoXC1 (-1+(skoXC1 skoXC1 (-1/6))))<=0]/\[[(skoXC1 skoXC1 (1/3))<=1]/\[[(skoXC1 skoXC1 (256+(skoXC1 skoXC1 (-160+(skoXC1 skoXC1 (32+(skoXC1 skoXC1 (-1))))))))<=128]/\[(skoXC1 skoXC1 skoXC1 skoXC1 (-80/3+(skoXC1 skoXC1 (128/3+(skoXC1 skoXC1 (-55/3+(skoXC1 skoXC1 (5/3))))))))<=0]]]]]]]]]]]]]]]]]]]]]]]]]]].

% In SMTLib2 format:
(declare-fun skoXC1 () Real) (assert (and (<= (* skoXC1 (+ (- 1.) (* skoXC1 (* skoXC1 (+ (/ (- 1.) 6.) (* skoXC1 (* skoXC1 (/ (- 3.) 40.)))))))) 0.) (and (> (* skoXC1 (* skoXC1 (+ (/ 1. 6.) (* skoXC1 (* skoXC1 (/ 3. 40.)))))) (- 1.)) (and (> (* skoXC1 (* skoXC1 (+ (/ 1. 6.) (* skoXC1 (* skoXC1 (/ 3. 40.)))))) (- 1.)) (and (<= (* skoXC1 (* skoXC1 (* skoXC1 (* skoXC1 (+ (/ 32. 15.) (* skoXC1 (* skoXC1 (+ (/ (- 296.) 15.) (* skoXC1 (* skoXC1 (+ (/ 391. 15.) (* skoXC1 (* skoXC1 (+ (/ (- 146.) 15.) (* skoXC1 (* skoXC1 (/ 3. 4.))))))))))))))))) 0.) (and (<= (* skoXC1 (* skoXC1 (+ (/ 1. 3.) (* skoXC1 (* skoXC1 (/ 3. 20.)))))) 1.) (and (<= (* skoXC1 (* skoXC1 (* skoXC1 (* skoXC1 (+ (/ (- 17.) 120.) (* skoXC1 (* skoXC1 (/ 3. 80.)))))))) 0.) (and (<= (* skoXC1 (* skoXC1 (* skoXC1 (* skoXC1 (+ (/ (- 13.) 60.) (* skoXC1 (* skoXC1 (/ (- 3.) 10.)))))))) 0.) (and (<= (* skoXC1 (* skoXC1 (+ (/ (- 1.) 2.) (* skoXC1 (* skoXC1 (+ (/ 7. 120.) (* skoXC1 (* skoXC1 (/ (- 3.) 40.))))))))) 0.) (and (<= (* skoXC1 (* skoXC1 (+ (/ (- 1.) 6.) (* skoXC1 (* skoXC1 (/ (- 3.) 40.)))))) 1.) (and (<= (* skoXC1 (+ (- 1.) (* skoXC1 (* skoXC1 (+ (/ 1. 3.) (* skoXC1 (* skoXC1 (/ 3. 20.)))))))) 0.) (and (> (* skoXC1 skoXC1) 0.) (and (<= (* skoXC1 (* skoXC1 (+ 80. (* skoXC1 (* skoXC1 (+ (- 40.) (* skoXC1 (* skoXC1 (+ 6. (* skoXC1 (* skoXC1 (/ (- 1.) 8.)))))))))))) 48.) (and (> (* skoXC1 (* skoXC1 (+ (- 80.) (* skoXC1 (* skoXC1 (+ 40. (* skoXC1 (* skoXC1 (+ (- 6.) (* skoXC1 (* skoXC1 (/ 1. 8.)))))))))))) (- 48.)) (and (<= (* skoXC1 (* skoXC1 (+ 24. (* skoXC1 (* skoXC1 (+ (- 10.) (* skoXC1 skoXC1))))))) 16.) (and (<= (* skoXC1 (* skoXC1 (/ 1. 2.))) 3.) (and (> (* skoXC1 (* skoXC1 (/ (- 1.) 2.))) (- 3.)) (and (> skoXC1 0.) (and (> (/ 7. 8.) skoXC1) (and (<= (* skoXC1 (+ (- 1.) (* skoXC1 (* skoXC1 (/ 1. 3.))))) 0.) (and (<= (* skoXC1 (* skoXC1 (/ (- 1.) 6.))) 1.) (and (<= (* skoXC1 (* skoXC1 (+ (/ (- 1.) 2.) (* skoXC1 (* skoXC1 (/ (- 1.) 6.)))))) 0.) (and (<= (* skoXC1 skoXC1) 2.) (and (<= (* skoXC1 (* skoXC1 (* skoXC1 (* skoXC1 (/ (- 2.) 3.))))) 0.) (and (<= (* skoXC1 (+ (- 1.) (* skoXC1 (* skoXC1 (/ (- 1.) 6.))))) 0.) (and (<= (* skoXC1 (* skoXC1 (/ 1. 3.))) 1.) (and (<= (* skoXC1 (* skoXC1 (+ 256. (* skoXC1 (* skoXC1 (+ (- 160.) (* skoXC1 (* skoXC1 (+ 32. (* skoXC1 (* skoXC1 (- 1.)))))))))))) 128.) (<= (* skoXC1 (* skoXC1 (* skoXC1 (* skoXC1 (+ (/ (- 80.) 3.) (* skoXC1 (* skoXC1 (+ (/ 128. 3.) (* skoXC1 (* skoXC1 (+ (/ (- 55.) 3.) (* skoXC1 (* skoXC1 (/ 5. 3.)))))))))))))) 0.))))))))))))))))))))))))))))

% In GRF format:
(sequent " MetiTarski formula " (antecedent (<= (* skoXC1 (+ (- 1.) (* skoXC1 (* skoXC1 (+ (/ (- 1.) 6.) (* skoXC1 (* skoXC1 (/ (- 3.) 40.)))))))) 0.) (> (* skoXC1 (* skoXC1 (+ (/ 1. 6.) (* skoXC1 (* skoXC1 (/ 3. 40.)))))) (- 1.)) (> (* skoXC1 (* skoXC1 (+ (/ 1. 6.) (* skoXC1 (* skoXC1 (/ 3. 40.)))))) (- 1.)) (<= (* skoXC1 (* skoXC1 (* skoXC1 (* skoXC1 (+ (/ 32. 15.) (* skoXC1 (* skoXC1 (+ (/ (- 296.) 15.) (* skoXC1 (* skoXC1 (+ (/ 391. 15.) (* skoXC1 (* skoXC1 (+ (/ (- 146.) 15.) (* skoXC1 (* skoXC1 (/ 3. 4.))))))))))))))))) 0.) (<= (* skoXC1 (* skoXC1 (+ (/ 1. 3.) (* skoXC1 (* skoXC1 (/ 3. 20.)))))) 1.) (<= (* skoXC1 (* skoXC1 (* skoXC1 (* skoXC1 (+ (/ (- 17.) 120.) (* skoXC1 (* skoXC1 (/ 3. 80.)))))))) 0.) (<= (* skoXC1 (* skoXC1 (* skoXC1 (* skoXC1 (+ (/ (- 13.) 60.) (* skoXC1 (* skoXC1 (/ (- 3.) 10.)))))))) 0.) (<= (* skoXC1 (* skoXC1 (+ (/ (- 1.) 2.) (* skoXC1 (* skoXC1 (+ (/ 7. 120.) (* skoXC1 (* skoXC1 (/ (- 3.) 40.))))))))) 0.) (<= (* skoXC1 (* skoXC1 (+ (/ (- 1.) 6.) (* skoXC1 (* skoXC1 (/ (- 3.) 40.)))))) 1.) (<= (* skoXC1 (+ (- 1.) (* skoXC1 (* skoXC1 (+ (/ 1. 3.) (* skoXC1 (* skoXC1 (/ 3. 20.)))))))) 0.) (> (* skoXC1 skoXC1) 0.) (<= (* skoXC1 (* skoXC1 (+ 80. (* skoXC1 (* skoXC1 (+ (- 40.) (* skoXC1 (* skoXC1 (+ 6. (* skoXC1 (* skoXC1 (/ (- 1.) 8.)))))))))))) 48.) (> (* skoXC1 (* skoXC1 (+ (- 80.) (* skoXC1 (* skoXC1 (+ 40. (* skoXC1 (* skoXC1 (+ (- 6.) (* skoXC1 (* skoXC1 (/ 1. 8.)))))))))))) (- 48.)) (<= (* skoXC1 (* skoXC1 (+ 24. (* skoXC1 (* skoXC1 (+ (- 10.) (* skoXC1 skoXC1))))))) 16.) (<= (* skoXC1 (* skoXC1 (/ 1. 2.))) 3.) (> (* skoXC1 (* skoXC1 (/ (- 1.) 2.))) (- 3.)) (> skoXC1 0.) (> (/ 7. 8.) skoXC1) (<= (* skoXC1 (+ (- 1.) (* skoXC1 (* skoXC1 (/ 1. 3.))))) 0.) (<= (* skoXC1 (* skoXC1 (/ (- 1.) 6.))) 1.) (<= (* skoXC1 (* skoXC1 (+ (/ (- 1.) 2.) (* skoXC1 (* skoXC1 (/ (- 1.) 6.)))))) 0.) (<= (* skoXC1 skoXC1) 2.) (<= (* skoXC1 (* skoXC1 (* skoXC1 (* skoXC1 (/ (- 2.) 3.))))) 0.) (<= (* skoXC1 (+ (- 1.) (* skoXC1 (* skoXC1 (/ (- 1.) 6.))))) 0.) (<= (* skoXC1 (* skoXC1 (/ 1. 3.))) 1.) (<= (* skoXC1 (* skoXC1 (+ 256. (* skoXC1 (* skoXC1 (+ (- 160.) (* skoXC1 (* skoXC1 (+ 32. (* skoXC1 (* skoXC1 (- 1.)))))))))))) 128.)) (succedent (> (* skoXC1 (* skoXC1 (* skoXC1 (* skoXC1 (+ (/ (- 80.) 3.) (* skoXC1 (* skoXC1 (+ (/ 128. 3.) (* skoXC1 (* skoXC1 (+ (/ (- 55.) 3.) (* skoXC1 (* skoXC1 (/ 5. 3.)))))))))))))) 0.)))
-----[end problem]-----

-----[begin problem]-----
% In Mathematica format:
Timing[Resolve[Exists[{skoXC1}, And[skoXC1*(-1+skoXC1*skoXC1*((-1/6)+skoXC1*skoXC1*(-3/40)))<=0,skoXC1*skoXC1*((1/6)+skoXC1*skoXC1*(3/40))>-1,skoXC1*skoXC1*skoXC1*skoXC1*((32/15)+skoXC1*skoXC1*((-296/15)+skoXC1*skoXC1*((391/15)+skoXC1*skoXC1*((-146/15)+skoXC1*skoXC1*(3/4)))))<=0,skoXC1*skoXC1*((1/3)+skoXC1*skoXC1*(3/20))<=1,skoXC1*skoXC1*skoXC1*skoXC1*((-17/120)+skoXC1*skoXC1*(3/80))<=0,skoXC1*skoXC1*skoXC1*skoXC1*((-13/60)+skoXC1*skoXC1*(-3/10))<=0,skoXC1*skoXC1*((-1/2)+skoXC1*skoXC1*((7/120)+skoXC1*skoXC1*(-3/40)))<=0,skoXC1*skoXC1*((-1/6)+skoXC1*skoXC1*(-3/40))<=1,skoXC1*(-1+skoXC1*skoXC1*((1/3)+skoXC1*skoXC1*(3/20)))<=0,skoXC1*skoXC1>0,skoXC1*skoXC1*(80+skoXC1*skoXC1*(-40+skoXC1*skoXC1*(6+skoXC1*skoXC1*(-1/8))))<=48,skoXC1*skoXC1*(-80+skoXC1*skoXC1*(40+skoXC1*skoXC1*(-6+skoXC1*skoXC1*(1/8))))>-48,skoXC1*skoXC1*(24+skoXC1*skoXC1*(-10+skoXC1*skoXC1))<=16,skoXC1*skoXC1*(1/2)<=3,skoXC1*skoXC1*(-1/2)>-3,skoXC1>0,(7/8)>skoXC1,skoXC1*(-1+skoXC1*skoXC1*(1/3))<=0,skoXC1*skoXC1*(-1/6)<=1,skoXC1*skoXC1*((-1/2)+skoXC1*skoXC1*(-1/6))<=0,skoXC1*skoXC1<=2,skoXC1*skoXC1*skoXC1*skoXC1*(-2/3)<=0,skoXC1*(-1+skoXC1*skoXC1*(-1/6))<=0,skoXC1*skoXC1*(1/3)<=1,skoXC1*skoXC1*(256+skoXC1*skoXC1*(-160+skoXC1*skoXC1*(32+skoXC1*skoXC1*-1)))<=128,skoXC1*skoXC1*skoXC1*skoXC1*((-80/3)+skoXC1*skoXC1*((128/3)+skoXC1*skoXC1*((-55/3)+skoXC1*skoXC1*(5/3))))<=0]], Reals]]

% In QepcadB format:
(E skoXC1) [[(skoXC1 (-1+(skoXC1 skoXC1 (-1/6+(skoXC1 skoXC1 (-3/40))))))<=0]/\[[-1<(skoXC1 skoXC1 (1/6+(skoXC1 skoXC1 (3/40))))]/\[[(skoXC1 skoXC1 skoXC1 skoXC1 (32/15+(skoXC1 skoXC1 (-296/15+(skoXC1 skoXC1 (391/15+(skoXC1 skoXC1 (-146/15+(skoXC1 skoXC1 (3/4))))))))))<=0]/\[[(skoXC1 skoXC1 (1/3+(skoXC1 skoXC1 (3/20))))<=1]/\[[(skoXC1 skoXC1 skoXC1 skoXC1 (-17/120+(skoXC1 skoXC1 (3/80))))<=0]/\[[(skoXC1 skoXC1 skoXC1 skoXC1 (-13/60+(skoXC1 skoXC1 (-3/10))))<=0]/\[[(skoXC1 skoXC1 (-1/2+(skoXC1 skoXC1 (7/120+(skoXC1 skoXC1 (-3/40))))))<=0]/\[[(skoXC1 skoXC1 (-1/6+(skoXC1 skoXC1 (-3/40))))<=1]/\[[(skoXC1 (-1+(skoXC1 skoXC1 (1/3+(skoXC1 skoXC1 (3/20))))))<=0]/\[[0<(skoXC1 skoXC1)]/\[[(skoXC1 skoXC1 (80+(skoXC1 skoXC1 (-40+(skoXC1 skoXC1 (6+(skoXC1 skoXC1 (-1/8))))))))<=48]/\[[-48<(skoXC1 skoXC1 (-80+(skoXC1 skoXC1 (40+(skoXC1 skoXC1 (-6+(skoXC1 skoXC1 (1/8))))))))]/\[[(skoXC1 skoXC1 (24+(skoXC1 skoXC1 (-10+(skoXC1 skoXC1)))))<=16]/\[[(skoXC1 skoXC1 (1/2))<=3]/\[[-3<(skoXC1 skoXC1 (-1/2))]/\[[0<skoXC1]/\[[skoXC1<7/8]/\[[(skoXC1 (-1+(skoXC1 skoXC1 (1/3))))<=0]/\[[(skoXC1 skoXC1 (-1/6))<=1]/\[[(skoXC1 skoXC1 (-1/2+(skoXC1 skoXC1 (-1/6))))<=0]/\[[(skoXC1 skoXC1)<=2]/\[[(skoXC1 skoXC1 skoXC1 skoXC1 (-2/3))<=0]/\[[(skoXC1 (-1+(skoXC1 skoXC1 (-1/6))))<=0]/\[[(skoXC1 skoXC1 (1/3))<=1]/\[[(skoXC1 skoXC1 (256+(skoXC1 skoXC1 (-160+(skoXC1 skoXC1 (32+(skoXC1 skoXC1 (-1))))))))<=128]/\[(skoXC1 skoXC1 skoXC1 skoXC1 (-80/3+(skoXC1 skoXC1 (128/3+(skoXC1 skoXC1 (-55/3+(skoXC1 skoXC1 (5/3))))))))<=0]]]]]]]]]]]]]]]]]]]]]]]]]].

% In SMTLib2 format:
(declare-fun skoXC1 () Real) (assert (and (<= (* skoXC1 (+ (- 1.) (* skoXC1 (* skoXC1 (+ (/ (- 1.) 6.) (* skoXC1 (* skoXC1 (/ (- 3.) 40.)))))))) 0.) (and (> (* skoXC1 (* skoXC1 (+ (/ 1. 6.) (* skoXC1 (* skoXC1 (/ 3. 40.)))))) (- 1.)) (and (<= (* skoXC1 (* skoXC1 (* skoXC1 (* skoXC1 (+ (/ 32. 15.) (* skoXC1 (* skoXC1 (+ (/ (- 296.) 15.) (* skoXC1 (* skoXC1 (+ (/ 391. 15.) (* skoXC1 (* skoXC1 (+ (/ (- 146.) 15.) (* skoXC1 (* skoXC1 (/ 3. 4.))))))))))))))))) 0.) (and (<= (* skoXC1 (* skoXC1 (+ (/ 1. 3.) (* skoXC1 (* skoXC1 (/ 3. 20.)))))) 1.) (and (<= (* skoXC1 (* skoXC1 (* skoXC1 (* skoXC1 (+ (/ (- 17.) 120.) (* skoXC1 (* skoXC1 (/ 3. 80.)))))))) 0.) (and (<= (* skoXC1 (* skoXC1 (* skoXC1 (* skoXC1 (+ (/ (- 13.) 60.) (* skoXC1 (* skoXC1 (/ (- 3.) 10.)))))))) 0.) (and (<= (* skoXC1 (* skoXC1 (+ (/ (- 1.) 2.) (* skoXC1 (* skoXC1 (+ (/ 7. 120.) (* skoXC1 (* skoXC1 (/ (- 3.) 40.))))))))) 0.) (and (<= (* skoXC1 (* skoXC1 (+ (/ (- 1.) 6.) (* skoXC1 (* skoXC1 (/ (- 3.) 40.)))))) 1.) (and (<= (* skoXC1 (+ (- 1.) (* skoXC1 (* skoXC1 (+ (/ 1. 3.) (* skoXC1 (* skoXC1 (/ 3. 20.)))))))) 0.) (and (> (* skoXC1 skoXC1) 0.) (and (<= (* skoXC1 (* skoXC1 (+ 80. (* skoXC1 (* skoXC1 (+ (- 40.) (* skoXC1 (* skoXC1 (+ 6. (* skoXC1 (* skoXC1 (/ (- 1.) 8.)))))))))))) 48.) (and (> (* skoXC1 (* skoXC1 (+ (- 80.) (* skoXC1 (* skoXC1 (+ 40. (* skoXC1 (* skoXC1 (+ (- 6.) (* skoXC1 (* skoXC1 (/ 1. 8.)))))))))))) (- 48.)) (and (<= (* skoXC1 (* skoXC1 (+ 24. (* skoXC1 (* skoXC1 (+ (- 10.) (* skoXC1 skoXC1))))))) 16.) (and (<= (* skoXC1 (* skoXC1 (/ 1. 2.))) 3.) (and (> (* skoXC1 (* skoXC1 (/ (- 1.) 2.))) (- 3.)) (and (> skoXC1 0.) (and (> (/ 7. 8.) skoXC1) (and (<= (* skoXC1 (+ (- 1.) (* skoXC1 (* skoXC1 (/ 1. 3.))))) 0.) (and (<= (* skoXC1 (* skoXC1 (/ (- 1.) 6.))) 1.) (and (<= (* skoXC1 (* skoXC1 (+ (/ (- 1.) 2.) (* skoXC1 (* skoXC1 (/ (- 1.) 6.)))))) 0.) (and (<= (* skoXC1 skoXC1) 2.) (and (<= (* skoXC1 (* skoXC1 (* skoXC1 (* skoXC1 (/ (- 2.) 3.))))) 0.) (and (<= (* skoXC1 (+ (- 1.) (* skoXC1 (* skoXC1 (/ (- 1.) 6.))))) 0.) (and (<= (* skoXC1 (* skoXC1 (/ 1. 3.))) 1.) (and (<= (* skoXC1 (* skoXC1 (+ 256. (* skoXC1 (* skoXC1 (+ (- 160.) (* skoXC1 (* skoXC1 (+ 32. (* skoXC1 (* skoXC1 (- 1.)))))))))))) 128.) (<= (* skoXC1 (* skoXC1 (* skoXC1 (* skoXC1 (+ (/ (- 80.) 3.) (* skoXC1 (* skoXC1 (+ (/ 128. 3.) (* skoXC1 (* skoXC1 (+ (/ (- 55.) 3.) (* skoXC1 (* skoXC1 (/ 5. 3.)))))))))))))) 0.)))))))))))))))))))))))))))

% In GRF format:
(sequent " MetiTarski formula " (antecedent (<= (* skoXC1 (+ (- 1.) (* skoXC1 (* skoXC1 (+ (/ (- 1.) 6.) (* skoXC1 (* skoXC1 (/ (- 3.) 40.)))))))) 0.) (> (* skoXC1 (* skoXC1 (+ (/ 1. 6.) (* skoXC1 (* skoXC1 (/ 3. 40.)))))) (- 1.)) (<= (* skoXC1 (* skoXC1 (* skoXC1 (* skoXC1 (+ (/ 32. 15.) (* skoXC1 (* skoXC1 (+ (/ (- 296.) 15.) (* skoXC1 (* skoXC1 (+ (/ 391. 15.) (* skoXC1 (* skoXC1 (+ (/ (- 146.) 15.) (* skoXC1 (* skoXC1 (/ 3. 4.))))))))))))))))) 0.) (<= (* skoXC1 (* skoXC1 (+ (/ 1. 3.) (* skoXC1 (* skoXC1 (/ 3. 20.)))))) 1.) (<= (* skoXC1 (* skoXC1 (* skoXC1 (* skoXC1 (+ (/ (- 17.) 120.) (* skoXC1 (* skoXC1 (/ 3. 80.)))))))) 0.) (<= (* skoXC1 (* skoXC1 (* skoXC1 (* skoXC1 (+ (/ (- 13.) 60.) (* skoXC1 (* skoXC1 (/ (- 3.) 10.)))))))) 0.) (<= (* skoXC1 (* skoXC1 (+ (/ (- 1.) 2.) (* skoXC1 (* skoXC1 (+ (/ 7. 120.) (* skoXC1 (* skoXC1 (/ (- 3.) 40.))))))))) 0.) (<= (* skoXC1 (* skoXC1 (+ (/ (- 1.) 6.) (* skoXC1 (* skoXC1 (/ (- 3.) 40.)))))) 1.) (<= (* skoXC1 (+ (- 1.) (* skoXC1 (* skoXC1 (+ (/ 1. 3.) (* skoXC1 (* skoXC1 (/ 3. 20.)))))))) 0.) (> (* skoXC1 skoXC1) 0.) (<= (* skoXC1 (* skoXC1 (+ 80. (* skoXC1 (* skoXC1 (+ (- 40.) (* skoXC1 (* skoXC1 (+ 6. (* skoXC1 (* skoXC1 (/ (- 1.) 8.)))))))))))) 48.) (> (* skoXC1 (* skoXC1 (+ (- 80.) (* skoXC1 (* skoXC1 (+ 40. (* skoXC1 (* skoXC1 (+ (- 6.) (* skoXC1 (* skoXC1 (/ 1. 8.)))))))))))) (- 48.)) (<= (* skoXC1 (* skoXC1 (+ 24. (* skoXC1 (* skoXC1 (+ (- 10.) (* skoXC1 skoXC1))))))) 16.) (<= (* skoXC1 (* skoXC1 (/ 1. 2.))) 3.) (> (* skoXC1 (* skoXC1 (/ (- 1.) 2.))) (- 3.)) (> skoXC1 0.) (> (/ 7. 8.) skoXC1) (<= (* skoXC1 (+ (- 1.) (* skoXC1 (* skoXC1 (/ 1. 3.))))) 0.) (<= (* skoXC1 (* skoXC1 (/ (- 1.) 6.))) 1.) (<= (* skoXC1 (* skoXC1 (+ (/ (- 1.) 2.) (* skoXC1 (* skoXC1 (/ (- 1.) 6.)))))) 0.) (<= (* skoXC1 skoXC1) 2.) (<= (* skoXC1 (* skoXC1 (* skoXC1 (* skoXC1 (/ (- 2.) 3.))))) 0.) (<= (* skoXC1 (+ (- 1.) (* skoXC1 (* skoXC1 (/ (- 1.) 6.))))) 0.) (<= (* skoXC1 (* skoXC1 (/ 1. 3.))) 1.) (<= (* skoXC1 (* skoXC1 (+ 256. (* skoXC1 (* skoXC1 (+ (- 160.) (* skoXC1 (* skoXC1 (+ 32. (* skoXC1 (* skoXC1 (- 1.)))))))))))) 128.)) (succedent (> (* skoXC1 (* skoXC1 (* skoXC1 (* skoXC1 (+ (/ (- 80.) 3.) (* skoXC1 (* skoXC1 (+ (/ 128. 3.) (* skoXC1 (* skoXC1 (+ (/ (- 55.) 3.) (* skoXC1 (* skoXC1 (/ 5. 3.)))))))))))))) 0.)))
-----[end problem]-----

-----[begin problem]-----
% In Mathematica format:
Timing[Resolve[Exists[{skoXC1}, And[skoXC1*skoXC1>0,skoXC1*(-1+skoXC1*skoXC1*((-1/6)+skoXC1*skoXC1*(-3/40)))<=0,skoXC1*skoXC1*((1/6)+skoXC1*skoXC1*(3/40))>-1,skoXC1*skoXC1*skoXC1*skoXC1*((32/15)+skoXC1*skoXC1*((-296/15)+skoXC1*skoXC1*((391/15)+skoXC1*skoXC1*((-146/15)+skoXC1*skoXC1*(3/4)))))<=0,skoXC1*skoXC1*((1/3)+skoXC1*skoXC1*(3/20))<=1,skoXC1*skoXC1*skoXC1*skoXC1*((-17/120)+skoXC1*skoXC1*(3/80))<=0,skoXC1*skoXC1*skoXC1*skoXC1*((-13/60)+skoXC1*skoXC1*(-3/10))<=0,skoXC1*skoXC1*((-1/2)+skoXC1*skoXC1*((7/120)+skoXC1*skoXC1*(-3/40)))<=0,skoXC1*skoXC1*((-1/6)+skoXC1*skoXC1*(-3/40))<=1,skoXC1*(-1+skoXC1*skoXC1*((1/3)+skoXC1*skoXC1*(3/20)))<=0,skoXC1*skoXC1>0,skoXC1*skoXC1*(80+skoXC1*skoXC1*(-40+skoXC1*skoXC1*(6+skoXC1*skoXC1*(-1/8))))<=48,skoXC1*skoXC1*(-80+skoXC1*skoXC1*(40+skoXC1*skoXC1*(-6+skoXC1*skoXC1*(1/8))))>-48,skoXC1*skoXC1*(24+skoXC1*skoXC1*(-10+skoXC1*skoXC1))<=16,skoXC1*skoXC1*(1/2)<=3,skoXC1*skoXC1*(-1/2)>-3,skoXC1>0,(7/8)>skoXC1,skoXC1*(-1+skoXC1*skoXC1*(1/3))<=0,skoXC1*skoXC1*(-1/6)<=1,skoXC1*skoXC1*((-1/2)+skoXC1*skoXC1*(-1/6))<=0,skoXC1*skoXC1<=2,skoXC1*skoXC1*skoXC1*skoXC1*(-2/3)<=0,skoXC1*(-1+skoXC1*skoXC1*(-1/6))<=0,skoXC1*skoXC1*(1/3)<=1,skoXC1*skoXC1*(256+skoXC1*skoXC1*(-160+skoXC1*skoXC1*(32+skoXC1*skoXC1*-1)))<=128,skoXC1*skoXC1*skoXC1*skoXC1*((-80/3)+skoXC1*skoXC1*((128/3)+skoXC1*skoXC1*((-55/3)+skoXC1*skoXC1*(5/3))))<=0]], Reals]]

% In QepcadB format:
(E skoXC1) [[0<(skoXC1 skoXC1)]/\[[(skoXC1 (-1+(skoXC1 skoXC1 (-1/6+(skoXC1 skoXC1 (-3/40))))))<=0]/\[[-1<(skoXC1 skoXC1 (1/6+(skoXC1 skoXC1 (3/40))))]/\[[(skoXC1 skoXC1 skoXC1 skoXC1 (32/15+(skoXC1 skoXC1 (-296/15+(skoXC1 skoXC1 (391/15+(skoXC1 skoXC1 (-146/15+(skoXC1 skoXC1 (3/4))))))))))<=0]/\[[(skoXC1 skoXC1 (1/3+(skoXC1 skoXC1 (3/20))))<=1]/\[[(skoXC1 skoXC1 skoXC1 skoXC1 (-17/120+(skoXC1 skoXC1 (3/80))))<=0]/\[[(skoXC1 skoXC1 skoXC1 skoXC1 (-13/60+(skoXC1 skoXC1 (-3/10))))<=0]/\[[(skoXC1 skoXC1 (-1/2+(skoXC1 skoXC1 (7/120+(skoXC1 skoXC1 (-3/40))))))<=0]/\[[(skoXC1 skoXC1 (-1/6+(skoXC1 skoXC1 (-3/40))))<=1]/\[[(skoXC1 (-1+(skoXC1 skoXC1 (1/3+(skoXC1 skoXC1 (3/20))))))<=0]/\[[0<(skoXC1 skoXC1)]/\[[(skoXC1 skoXC1 (80+(skoXC1 skoXC1 (-40+(skoXC1 skoXC1 (6+(skoXC1 skoXC1 (-1/8))))))))<=48]/\[[-48<(skoXC1 skoXC1 (-80+(skoXC1 skoXC1 (40+(skoXC1 skoXC1 (-6+(skoXC1 skoXC1 (1/8))))))))]/\[[(skoXC1 skoXC1 (24+(skoXC1 skoXC1 (-10+(skoXC1 skoXC1)))))<=16]/\[[(skoXC1 skoXC1 (1/2))<=3]/\[[-3<(skoXC1 skoXC1 (-1/2))]/\[[0<skoXC1]/\[[skoXC1<7/8]/\[[(skoXC1 (-1+(skoXC1 skoXC1 (1/3))))<=0]/\[[(skoXC1 skoXC1 (-1/6))<=1]/\[[(skoXC1 skoXC1 (-1/2+(skoXC1 skoXC1 (-1/6))))<=0]/\[[(skoXC1 skoXC1)<=2]/\[[(skoXC1 skoXC1 skoXC1 skoXC1 (-2/3))<=0]/\[[(skoXC1 (-1+(skoXC1 skoXC1 (-1/6))))<=0]/\[[(skoXC1 skoXC1 (1/3))<=1]/\[[(skoXC1 skoXC1 (256+(skoXC1 skoXC1 (-160+(skoXC1 skoXC1 (32+(skoXC1 skoXC1 (-1))))))))<=128]/\[(skoXC1 skoXC1 skoXC1 skoXC1 (-80/3+(skoXC1 skoXC1 (128/3+(skoXC1 skoXC1 (-55/3+(skoXC1 skoXC1 (5/3))))))))<=0]]]]]]]]]]]]]]]]]]]]]]]]]]].

% In SMTLib2 format:
(declare-fun skoXC1 () Real) (assert (and (> (* skoXC1 skoXC1) 0.) (and (<= (* skoXC1 (+ (- 1.) (* skoXC1 (* skoXC1 (+ (/ (- 1.) 6.) (* skoXC1 (* skoXC1 (/ (- 3.) 40.)))))))) 0.) (and (> (* skoXC1 (* skoXC1 (+ (/ 1. 6.) (* skoXC1 (* skoXC1 (/ 3. 40.)))))) (- 1.)) (and (<= (* skoXC1 (* skoXC1 (* skoXC1 (* skoXC1 (+ (/ 32. 15.) (* skoXC1 (* skoXC1 (+ (/ (- 296.) 15.) (* skoXC1 (* skoXC1 (+ (/ 391. 15.) (* skoXC1 (* skoXC1 (+ (/ (- 146.) 15.) (* skoXC1 (* skoXC1 (/ 3. 4.))))))))))))))))) 0.) (and (<= (* skoXC1 (* skoXC1 (+ (/ 1. 3.) (* skoXC1 (* skoXC1 (/ 3. 20.)))))) 1.) (and (<= (* skoXC1 (* skoXC1 (* skoXC1 (* skoXC1 (+ (/ (- 17.) 120.) (* skoXC1 (* skoXC1 (/ 3. 80.)))))))) 0.) (and (<= (* skoXC1 (* skoXC1 (* skoXC1 (* skoXC1 (+ (/ (- 13.) 60.) (* skoXC1 (* skoXC1 (/ (- 3.) 10.)))))))) 0.) (and (<= (* skoXC1 (* skoXC1 (+ (/ (- 1.) 2.) (* skoXC1 (* skoXC1 (+ (/ 7. 120.) (* skoXC1 (* skoXC1 (/ (- 3.) 40.))))))))) 0.) (and (<= (* skoXC1 (* skoXC1 (+ (/ (- 1.) 6.) (* skoXC1 (* skoXC1 (/ (- 3.) 40.)))))) 1.) (and (<= (* skoXC1 (+ (- 1.) (* skoXC1 (* skoXC1 (+ (/ 1. 3.) (* skoXC1 (* skoXC1 (/ 3. 20.)))))))) 0.) (and (> (* skoXC1 skoXC1) 0.) (and (<= (* skoXC1 (* skoXC1 (+ 80. (* skoXC1 (* skoXC1 (+ (- 40.) (* skoXC1 (* skoXC1 (+ 6. (* skoXC1 (* skoXC1 (/ (- 1.) 8.)))))))))))) 48.) (and (> (* skoXC1 (* skoXC1 (+ (- 80.) (* skoXC1 (* skoXC1 (+ 40. (* skoXC1 (* skoXC1 (+ (- 6.) (* skoXC1 (* skoXC1 (/ 1. 8.)))))))))))) (- 48.)) (and (<= (* skoXC1 (* skoXC1 (+ 24. (* skoXC1 (* skoXC1 (+ (- 10.) (* skoXC1 skoXC1))))))) 16.) (and (<= (* skoXC1 (* skoXC1 (/ 1. 2.))) 3.) (and (> (* skoXC1 (* skoXC1 (/ (- 1.) 2.))) (- 3.)) (and (> skoXC1 0.) (and (> (/ 7. 8.) skoXC1) (and (<= (* skoXC1 (+ (- 1.) (* skoXC1 (* skoXC1 (/ 1. 3.))))) 0.) (and (<= (* skoXC1 (* skoXC1 (/ (- 1.) 6.))) 1.) (and (<= (* skoXC1 (* skoXC1 (+ (/ (- 1.) 2.) (* skoXC1 (* skoXC1 (/ (- 1.) 6.)))))) 0.) (and (<= (* skoXC1 skoXC1) 2.) (and (<= (* skoXC1 (* skoXC1 (* skoXC1 (* skoXC1 (/ (- 2.) 3.))))) 0.) (and (<= (* skoXC1 (+ (- 1.) (* skoXC1 (* skoXC1 (/ (- 1.) 6.))))) 0.) (and (<= (* skoXC1 (* skoXC1 (/ 1. 3.))) 1.) (and (<= (* skoXC1 (* skoXC1 (+ 256. (* skoXC1 (* skoXC1 (+ (- 160.) (* skoXC1 (* skoXC1 (+ 32. (* skoXC1 (* skoXC1 (- 1.)))))))))))) 128.) (<= (* skoXC1 (* skoXC1 (* skoXC1 (* skoXC1 (+ (/ (- 80.) 3.) (* skoXC1 (* skoXC1 (+ (/ 128. 3.) (* skoXC1 (* skoXC1 (+ (/ (- 55.) 3.) (* skoXC1 (* skoXC1 (/ 5. 3.)))))))))))))) 0.))))))))))))))))))))))))))))

% In GRF format:
(sequent " MetiTarski formula " (antecedent (> (* skoXC1 skoXC1) 0.) (<= (* skoXC1 (+ (- 1.) (* skoXC1 (* skoXC1 (+ (/ (- 1.) 6.) (* skoXC1 (* skoXC1 (/ (- 3.) 40.)))))))) 0.) (> (* skoXC1 (* skoXC1 (+ (/ 1. 6.) (* skoXC1 (* skoXC1 (/ 3. 40.)))))) (- 1.)) (<= (* skoXC1 (* skoXC1 (* skoXC1 (* skoXC1 (+ (/ 32. 15.) (* skoXC1 (* skoXC1 (+ (/ (- 296.) 15.) (* skoXC1 (* skoXC1 (+ (/ 391. 15.) (* skoXC1 (* skoXC1 (+ (/ (- 146.) 15.) (* skoXC1 (* skoXC1 (/ 3. 4.))))))))))))))))) 0.) (<= (* skoXC1 (* skoXC1 (+ (/ 1. 3.) (* skoXC1 (* skoXC1 (/ 3. 20.)))))) 1.) (<= (* skoXC1 (* skoXC1 (* skoXC1 (* skoXC1 (+ (/ (- 17.) 120.) (* skoXC1 (* skoXC1 (/ 3. 80.)))))))) 0.) (<= (* skoXC1 (* skoXC1 (* skoXC1 (* skoXC1 (+ (/ (- 13.) 60.) (* skoXC1 (* skoXC1 (/ (- 3.) 10.)))))))) 0.) (<= (* skoXC1 (* skoXC1 (+ (/ (- 1.) 2.) (* skoXC1 (* skoXC1 (+ (/ 7. 120.) (* skoXC1 (* skoXC1 (/ (- 3.) 40.))))))))) 0.) (<= (* skoXC1 (* skoXC1 (+ (/ (- 1.) 6.) (* skoXC1 (* skoXC1 (/ (- 3.) 40.)))))) 1.) (<= (* skoXC1 (+ (- 1.) (* skoXC1 (* skoXC1 (+ (/ 1. 3.) (* skoXC1 (* skoXC1 (/ 3. 20.)))))))) 0.) (> (* skoXC1 skoXC1) 0.) (<= (* skoXC1 (* skoXC1 (+ 80. (* skoXC1 (* skoXC1 (+ (- 40.) (* skoXC1 (* skoXC1 (+ 6. (* skoXC1 (* skoXC1 (/ (- 1.) 8.)))))))))))) 48.) (> (* skoXC1 (* skoXC1 (+ (- 80.) (* skoXC1 (* skoXC1 (+ 40. (* skoXC1 (* skoXC1 (+ (- 6.) (* skoXC1 (* skoXC1 (/ 1. 8.)))))))))))) (- 48.)) (<= (* skoXC1 (* skoXC1 (+ 24. (* skoXC1 (* skoXC1 (+ (- 10.) (* skoXC1 skoXC1))))))) 16.) (<= (* skoXC1 (* skoXC1 (/ 1. 2.))) 3.) (> (* skoXC1 (* skoXC1 (/ (- 1.) 2.))) (- 3.)) (> skoXC1 0.) (> (/ 7. 8.) skoXC1) (<= (* skoXC1 (+ (- 1.) (* skoXC1 (* skoXC1 (/ 1. 3.))))) 0.) (<= (* skoXC1 (* skoXC1 (/ (- 1.) 6.))) 1.) (<= (* skoXC1 (* skoXC1 (+ (/ (- 1.) 2.) (* skoXC1 (* skoXC1 (/ (- 1.) 6.)))))) 0.) (<= (* skoXC1 skoXC1) 2.) (<= (* skoXC1 (* skoXC1 (* skoXC1 (* skoXC1 (/ (- 2.) 3.))))) 0.) (<= (* skoXC1 (+ (- 1.) (* skoXC1 (* skoXC1 (/ (- 1.) 6.))))) 0.) (<= (* skoXC1 (* skoXC1 (/ 1. 3.))) 1.) (<= (* skoXC1 (* skoXC1 (+ 256. (* skoXC1 (* skoXC1 (+ (- 160.) (* skoXC1 (* skoXC1 (+ 32. (* skoXC1 (* skoXC1 (- 1.)))))))))))) 128.)) (succedent (> (* skoXC1 (* skoXC1 (* skoXC1 (* skoXC1 (+ (/ (- 80.) 3.) (* skoXC1 (* skoXC1 (+ (/ 128. 3.) (* skoXC1 (* skoXC1 (+ (/ (- 55.) 3.) (* skoXC1 (* skoXC1 (/ 5. 3.)))))))))))))) 0.)))
-----[end problem]-----

-----[begin problem]-----
% In Mathematica format:
Timing[Resolve[Exists[{skoXC1}, And[skoXC1*(-1+skoXC1*skoXC1*((1/3)+skoXC1*skoXC1*((3/20)+skoXC1*skoXC1*(5/56))))<=0,skoXC1*skoXC1*skoXC1*skoXC1*((-80/3)+skoXC1*skoXC1*((128/3)+skoXC1*skoXC1*((-55/3)+skoXC1*skoXC1*(5/3))))<=0,skoXC1*skoXC1*(256+skoXC1*skoXC1*(-160+skoXC1*skoXC1*(32+skoXC1*skoXC1*-1)))<=128,skoXC1*skoXC1*(1/3)<=1,skoXC1*(-1+skoXC1*skoXC1*(-1/6))<=0,skoXC1*skoXC1*skoXC1*skoXC1*(-2/3)<=0,skoXC1*skoXC1<=2,skoXC1*skoXC1*((-1/2)+skoXC1*skoXC1*(-1/6))<=0,skoXC1*skoXC1*(-1/6)<=1,skoXC1*(-1+skoXC1*skoXC1*(1/3))<=0,(7/8)>skoXC1,skoXC1>0,skoXC1*skoXC1*(-1/2)>-3,skoXC1*skoXC1*(1/2)<=3,skoXC1*skoXC1*(24+skoXC1*skoXC1*(-10+skoXC1*skoXC1))<=16,skoXC1*skoXC1*(-80+skoXC1*skoXC1*(40+skoXC1*skoXC1*(-6+skoXC1*skoXC1*(1/8))))>-48,skoXC1*skoXC1*(80+skoXC1*skoXC1*(-40+skoXC1*skoXC1*(6+skoXC1*skoXC1*(-1/8))))<=48,skoXC1*skoXC1>0,skoXC1*(-1+skoXC1*skoXC1*((1/3)+skoXC1*skoXC1*(3/20)))<=0,skoXC1*skoXC1*((-1/6)+skoXC1*skoXC1*(-3/40))<=1,skoXC1*skoXC1*((-1/2)+skoXC1*skoXC1*((7/120)+skoXC1*skoXC1*(-3/40)))<=0,skoXC1*skoXC1*skoXC1*skoXC1*((-13/60)+skoXC1*skoXC1*(-3/10))<=0,skoXC1*skoXC1*skoXC1*skoXC1*((-17/120)+skoXC1*skoXC1*(3/80))<=0,skoXC1*skoXC1*((1/3)+skoXC1*skoXC1*(3/20))<=1,skoXC1*skoXC1*skoXC1*skoXC1*((32/15)+skoXC1*skoXC1*((-296/15)+skoXC1*skoXC1*((391/15)+skoXC1*skoXC1*((-146/15)+skoXC1*skoXC1*(3/4)))))<=0,skoXC1*skoXC1*((1/6)+skoXC1*skoXC1*(3/40))>-1,skoXC1*(-1+skoXC1*skoXC1*((-1/6)+skoXC1*skoXC1*(-3/40)))<=0]], Reals]]

% In QepcadB format:
(E skoXC1) [[(skoXC1 (-1+(skoXC1 skoXC1 (1/3+(skoXC1 skoXC1 (3/20+(skoXC1 skoXC1 (5/56))))))))<=0]/\[[(skoXC1 skoXC1 skoXC1 skoXC1 (-80/3+(skoXC1 skoXC1 (128/3+(skoXC1 skoXC1 (-55/3+(skoXC1 skoXC1 (5/3))))))))<=0]/\[[(skoXC1 skoXC1 (256+(skoXC1 skoXC1 (-160+(skoXC1 skoXC1 (32+(skoXC1 skoXC1 (-1))))))))<=128]/\[[(skoXC1 skoXC1 (1/3))<=1]/\[[(skoXC1 (-1+(skoXC1 skoXC1 (-1/6))))<=0]/\[[(skoXC1 skoXC1 skoXC1 skoXC1 (-2/3))<=0]/\[[(skoXC1 skoXC1)<=2]/\[[(skoXC1 skoXC1 (-1/2+(skoXC1 skoXC1 (-1/6))))<=0]/\[[(skoXC1 skoXC1 (-1/6))<=1]/\[[(skoXC1 (-1+(skoXC1 skoXC1 (1/3))))<=0]/\[[skoXC1<7/8]/\[[0<skoXC1]/\[[-3<(skoXC1 skoXC1 (-1/2))]/\[[(skoXC1 skoXC1 (1/2))<=3]/\[[(skoXC1 skoXC1 (24+(skoXC1 skoXC1 (-10+(skoXC1 skoXC1)))))<=16]/\[[-48<(skoXC1 skoXC1 (-80+(skoXC1 skoXC1 (40+(skoXC1 skoXC1 (-6+(skoXC1 skoXC1 (1/8))))))))]/\[[(skoXC1 skoXC1 (80+(skoXC1 skoXC1 (-40+(skoXC1 skoXC1 (6+(skoXC1 skoXC1 (-1/8))))))))<=48]/\[[0<(skoXC1 skoXC1)]/\[[(skoXC1 (-1+(skoXC1 skoXC1 (1/3+(skoXC1 skoXC1 (3/20))))))<=0]/\[[(skoXC1 skoXC1 (-1/6+(skoXC1 skoXC1 (-3/40))))<=1]/\[[(skoXC1 skoXC1 (-1/2+(skoXC1 skoXC1 (7/120+(skoXC1 skoXC1 (-3/40))))))<=0]/\[[(skoXC1 skoXC1 skoXC1 skoXC1 (-13/60+(skoXC1 skoXC1 (-3/10))))<=0]/\[[(skoXC1 skoXC1 skoXC1 skoXC1 (-17/120+(skoXC1 skoXC1 (3/80))))<=0]/\[[(skoXC1 skoXC1 (1/3+(skoXC1 skoXC1 (3/20))))<=1]/\[[(skoXC1 skoXC1 skoXC1 skoXC1 (32/15+(skoXC1 skoXC1 (-296/15+(skoXC1 skoXC1 (391/15+(skoXC1 skoXC1 (-146/15+(skoXC1 skoXC1 (3/4))))))))))<=0]/\[[-1<(skoXC1 skoXC1 (1/6+(skoXC1 skoXC1 (3/40))))]/\[(skoXC1 (-1+(skoXC1 skoXC1 (-1/6+(skoXC1 skoXC1 (-3/40))))))<=0]]]]]]]]]]]]]]]]]]]]]]]]]]].

% In SMTLib2 format:
(declare-fun skoXC1 () Real) (assert (and (<= (* skoXC1 (+ (- 1.) (* skoXC1 (* skoXC1 (+ (/ 1. 3.) (* skoXC1 (* skoXC1 (+ (/ 3. 20.) (* skoXC1 (* skoXC1 (/ 5. 56.))))))))))) 0.) (and (<= (* skoXC1 (* skoXC1 (* skoXC1 (* skoXC1 (+ (/ (- 80.) 3.) (* skoXC1 (* skoXC1 (+ (/ 128. 3.) (* skoXC1 (* skoXC1 (+ (/ (- 55.) 3.) (* skoXC1 (* skoXC1 (/ 5. 3.)))))))))))))) 0.) (and (<= (* skoXC1 (* skoXC1 (+ 256. (* skoXC1 (* skoXC1 (+ (- 160.) (* skoXC1 (* skoXC1 (+ 32. (* skoXC1 (* skoXC1 (- 1.)))))))))))) 128.) (and (<= (* skoXC1 (* skoXC1 (/ 1. 3.))) 1.) (and (<= (* skoXC1 (+ (- 1.) (* skoXC1 (* skoXC1 (/ (- 1.) 6.))))) 0.) (and (<= (* skoXC1 (* skoXC1 (* skoXC1 (* skoXC1 (/ (- 2.) 3.))))) 0.) (and (<= (* skoXC1 skoXC1) 2.) (and (<= (* skoXC1 (* skoXC1 (+ (/ (- 1.) 2.) (* skoXC1 (* skoXC1 (/ (- 1.) 6.)))))) 0.) (and (<= (* skoXC1 (* skoXC1 (/ (- 1.) 6.))) 1.) (and (<= (* skoXC1 (+ (- 1.) (* skoXC1 (* skoXC1 (/ 1. 3.))))) 0.) (and (> (/ 7. 8.) skoXC1) (and (> skoXC1 0.) (and (> (* skoXC1 (* skoXC1 (/ (- 1.) 2.))) (- 3.)) (and (<= (* skoXC1 (* skoXC1 (/ 1. 2.))) 3.) (and (<= (* skoXC1 (* skoXC1 (+ 24. (* skoXC1 (* skoXC1 (+ (- 10.) (* skoXC1 skoXC1))))))) 16.) (and (> (* skoXC1 (* skoXC1 (+ (- 80.) (* skoXC1 (* skoXC1 (+ 40. (* skoXC1 (* skoXC1 (+ (- 6.) (* skoXC1 (* skoXC1 (/ 1. 8.)))))))))))) (- 48.)) (and (<= (* skoXC1 (* skoXC1 (+ 80. (* skoXC1 (* skoXC1 (+ (- 40.) (* skoXC1 (* skoXC1 (+ 6. (* skoXC1 (* skoXC1 (/ (- 1.) 8.)))))))))))) 48.) (and (> (* skoXC1 skoXC1) 0.) (and (<= (* skoXC1 (+ (- 1.) (* skoXC1 (* skoXC1 (+ (/ 1. 3.) (* skoXC1 (* skoXC1 (/ 3. 20.)))))))) 0.) (and (<= (* skoXC1 (* skoXC1 (+ (/ (- 1.) 6.) (* skoXC1 (* skoXC1 (/ (- 3.) 40.)))))) 1.) (and (<= (* skoXC1 (* skoXC1 (+ (/ (- 1.) 2.) (* skoXC1 (* skoXC1 (+ (/ 7. 120.) (* skoXC1 (* skoXC1 (/ (- 3.) 40.))))))))) 0.) (and (<= (* skoXC1 (* skoXC1 (* skoXC1 (* skoXC1 (+ (/ (- 13.) 60.) (* skoXC1 (* skoXC1 (/ (- 3.) 10.)))))))) 0.) (and (<= (* skoXC1 (* skoXC1 (* skoXC1 (* skoXC1 (+ (/ (- 17.) 120.) (* skoXC1 (* skoXC1 (/ 3. 80.)))))))) 0.) (and (<= (* skoXC1 (* skoXC1 (+ (/ 1. 3.) (* skoXC1 (* skoXC1 (/ 3. 20.)))))) 1.) (and (<= (* skoXC1 (* skoXC1 (* skoXC1 (* skoXC1 (+ (/ 32. 15.) (* skoXC1 (* skoXC1 (+ (/ (- 296.) 15.) (* skoXC1 (* skoXC1 (+ (/ 391. 15.) (* skoXC1 (* skoXC1 (+ (/ (- 146.) 15.) (* skoXC1 (* skoXC1 (/ 3. 4.))))))))))))))))) 0.) (and (> (* skoXC1 (* skoXC1 (+ (/ 1. 6.) (* skoXC1 (* skoXC1 (/ 3. 40.)))))) (- 1.)) (<= (* skoXC1 (+ (- 1.) (* skoXC1 (* skoXC1 (+ (/ (- 1.) 6.) (* skoXC1 (* skoXC1 (/ (- 3.) 40.)))))))) 0.))))))))))))))))))))))))))))

% In GRF format:
(sequent " MetiTarski formula " (antecedent (<= (* skoXC1 (+ (- 1.) (* skoXC1 (* skoXC1 (+ (/ 1. 3.) (* skoXC1 (* skoXC1 (+ (/ 3. 20.) (* skoXC1 (* skoXC1 (/ 5. 56.))))))))))) 0.) (<= (* skoXC1 (* skoXC1 (* skoXC1 (* skoXC1 (+ (/ (- 80.) 3.) (* skoXC1 (* skoXC1 (+ (/ 128. 3.) (* skoXC1 (* skoXC1 (+ (/ (- 55.) 3.) (* skoXC1 (* skoXC1 (/ 5. 3.)))))))))))))) 0.) (<= (* skoXC1 (* skoXC1 (+ 256. (* skoXC1 (* skoXC1 (+ (- 160.) (* skoXC1 (* skoXC1 (+ 32. (* skoXC1 (* skoXC1 (- 1.)))))))))))) 128.) (<= (* skoXC1 (* skoXC1 (/ 1. 3.))) 1.) (<= (* skoXC1 (+ (- 1.) (* skoXC1 (* skoXC1 (/ (- 1.) 6.))))) 0.) (<= (* skoXC1 (* skoXC1 (* skoXC1 (* skoXC1 (/ (- 2.) 3.))))) 0.) (<= (* skoXC1 skoXC1) 2.) (<= (* skoXC1 (* skoXC1 (+ (/ (- 1.) 2.) (* skoXC1 (* skoXC1 (/ (- 1.) 6.)))))) 0.) (<= (* skoXC1 (* skoXC1 (/ (- 1.) 6.))) 1.) (<= (* skoXC1 (+ (- 1.) (* skoXC1 (* skoXC1 (/ 1. 3.))))) 0.) (> (/ 7. 8.) skoXC1) (> skoXC1 0.) (> (* skoXC1 (* skoXC1 (/ (- 1.) 2.))) (- 3.)) (<= (* skoXC1 (* skoXC1 (/ 1. 2.))) 3.) (<= (* skoXC1 (* skoXC1 (+ 24. (* skoXC1 (* skoXC1 (+ (- 10.) (* skoXC1 skoXC1))))))) 16.) (> (* skoXC1 (* skoXC1 (+ (- 80.) (* skoXC1 (* skoXC1 (+ 40. (* skoXC1 (* skoXC1 (+ (- 6.) (* skoXC1 (* skoXC1 (/ 1. 8.)))))))))))) (- 48.)) (<= (* skoXC1 (* skoXC1 (+ 80. (* skoXC1 (* skoXC1 (+ (- 40.) (* skoXC1 (* skoXC1 (+ 6. (* skoXC1 (* skoXC1 (/ (- 1.) 8.)))))))))))) 48.) (> (* skoXC1 skoXC1) 0.) (<= (* skoXC1 (+ (- 1.) (* skoXC1 (* skoXC1 (+ (/ 1. 3.) (* skoXC1 (* skoXC1 (/ 3. 20.)))))))) 0.) (<= (* skoXC1 (* skoXC1 (+ (/ (- 1.) 6.) (* skoXC1 (* skoXC1 (/ (- 3.) 40.)))))) 1.) (<= (* skoXC1 (* skoXC1 (+ (/ (- 1.) 2.) (* skoXC1 (* skoXC1 (+ (/ 7. 120.) (* skoXC1 (* skoXC1 (/ (- 3.) 40.))))))))) 0.) (<= (* skoXC1 (* skoXC1 (* skoXC1 (* skoXC1 (+ (/ (- 13.) 60.) (* skoXC1 (* skoXC1 (/ (- 3.) 10.)))))))) 0.) (<= (* skoXC1 (* skoXC1 (* skoXC1 (* skoXC1 (+ (/ (- 17.) 120.) (* skoXC1 (* skoXC1 (/ 3. 80.)))))))) 0.) (<= (* skoXC1 (* skoXC1 (+ (/ 1. 3.) (* skoXC1 (* skoXC1 (/ 3. 20.)))))) 1.) (<= (* skoXC1 (* skoXC1 (* skoXC1 (* skoXC1 (+ (/ 32. 15.) (* skoXC1 (* skoXC1 (+ (/ (- 296.) 15.) (* skoXC1 (* skoXC1 (+ (/ 391. 15.) (* skoXC1 (* skoXC1 (+ (/ (- 146.) 15.) (* skoXC1 (* skoXC1 (/ 3. 4.))))))))))))))))) 0.) (> (* skoXC1 (* skoXC1 (+ (/ 1. 6.) (* skoXC1 (* skoXC1 (/ 3. 40.)))))) (- 1.))) (succedent (> (* skoXC1 (+ (- 1.) (* skoXC1 (* skoXC1 (+ (/ (- 1.) 6.) (* skoXC1 (* skoXC1 (/ (- 3.) 40.)))))))) 0.)))
-----[end problem]-----

-----[begin problem]-----
% In Mathematica format:
Timing[Resolve[Exists[{skoXC1}, And[skoXC1*(-1+skoXC1*skoXC1*((-1/6)+skoXC1*skoXC1*((-3/40)+skoXC1*skoXC1*(-5/112))))<=0,skoXC1!=0,skoXC1*skoXC1*skoXC1*skoXC1*((-80/3)+skoXC1*skoXC1*((128/3)+skoXC1*skoXC1*((-55/3)+skoXC1*skoXC1*(5/3))))<=0,skoXC1*skoXC1*(256+skoXC1*skoXC1*(-160+skoXC1*skoXC1*(32+skoXC1*skoXC1*-1)))<=128,skoXC1*skoXC1*(1/3)<=1,skoXC1*(-1+skoXC1*skoXC1*(-1/6))<=0,skoXC1*skoXC1*skoXC1*skoXC1*(-2/3)<=0,skoXC1*skoXC1<=2,skoXC1*skoXC1*((-1/2)+skoXC1*skoXC1*(-1/6))<=0,skoXC1*skoXC1*(-1/6)<=1,skoXC1*(-1+skoXC1*skoXC1*(1/3))<=0,(7/8)>skoXC1,skoXC1>0,skoXC1*skoXC1*(-1/2)>-3,skoXC1*skoXC1*(1/2)<=3,skoXC1*skoXC1*(24+skoXC1*skoXC1*(-10+skoXC1*skoXC1))<=16,skoXC1*skoXC1*(-80+skoXC1*skoXC1*(40+skoXC1*skoXC1*(-6+skoXC1*skoXC1*(1/8))))>-48,skoXC1*skoXC1*(80+skoXC1*skoXC1*(-40+skoXC1*skoXC1*(6+skoXC1*skoXC1*(-1/8))))<=48,skoXC1*skoXC1>0,skoXC1*(-1+skoXC1*skoXC1*((1/3)+skoXC1*skoXC1*(3/20)))<=0,skoXC1*skoXC1*((-1/6)+skoXC1*skoXC1*(-3/40))<=1,skoXC1*skoXC1*((-1/2)+skoXC1*skoXC1*((7/120)+skoXC1*skoXC1*(-3/40)))<=0,skoXC1*skoXC1*skoXC1*skoXC1*((-13/60)+skoXC1*skoXC1*(-3/10))<=0,skoXC1*skoXC1*skoXC1*skoXC1*((-17/120)+skoXC1*skoXC1*(3/80))<=0,skoXC1*skoXC1*((1/3)+skoXC1*skoXC1*(3/20))<=1,skoXC1*skoXC1*skoXC1*skoXC1*((32/15)+skoXC1*skoXC1*((-296/15)+skoXC1*skoXC1*((391/15)+skoXC1*skoXC1*((-146/15)+skoXC1*skoXC1*(3/4)))))<=0,skoXC1*skoXC1*((1/6)+skoXC1*skoXC1*(3/40))>-1,skoXC1*(-1+skoXC1*skoXC1*((-1/6)+skoXC1*skoXC1*(-3/40)))<=0]], Reals]]

% In QepcadB format:
(E skoXC1) [[(skoXC1 (-1+(skoXC1 skoXC1 (-1/6+(skoXC1 skoXC1 (-3/40+(skoXC1 skoXC1 (-5/112))))))))<=0]/\[[skoXC1 /=0]/\[[(skoXC1 skoXC1 skoXC1 skoXC1 (-80/3+(skoXC1 skoXC1 (128/3+(skoXC1 skoXC1 (-55/3+(skoXC1 skoXC1 (5/3))))))))<=0]/\[[(skoXC1 skoXC1 (256+(skoXC1 skoXC1 (-160+(skoXC1 skoXC1 (32+(skoXC1 skoXC1 (-1))))))))<=128]/\[[(skoXC1 skoXC1 (1/3))<=1]/\[[(skoXC1 (-1+(skoXC1 skoXC1 (-1/6))))<=0]/\[[(skoXC1 skoXC1 skoXC1 skoXC1 (-2/3))<=0]/\[[(skoXC1 skoXC1)<=2]/\[[(skoXC1 skoXC1 (-1/2+(skoXC1 skoXC1 (-1/6))))<=0]/\[[(skoXC1 skoXC1 (-1/6))<=1]/\[[(skoXC1 (-1+(skoXC1 skoXC1 (1/3))))<=0]/\[[skoXC1<7/8]/\[[0<skoXC1]/\[[-3<(skoXC1 skoXC1 (-1/2))]/\[[(skoXC1 skoXC1 (1/2))<=3]/\[[(skoXC1 skoXC1 (24+(skoXC1 skoXC1 (-10+(skoXC1 skoXC1)))))<=16]/\[[-48<(skoXC1 skoXC1 (-80+(skoXC1 skoXC1 (40+(skoXC1 skoXC1 (-6+(skoXC1 skoXC1 (1/8))))))))]/\[[(skoXC1 skoXC1 (80+(skoXC1 skoXC1 (-40+(skoXC1 skoXC1 (6+(skoXC1 skoXC1 (-1/8))))))))<=48]/\[[0<(skoXC1 skoXC1)]/\[[(skoXC1 (-1+(skoXC1 skoXC1 (1/3+(skoXC1 skoXC1 (3/20))))))<=0]/\[[(skoXC1 skoXC1 (-1/6+(skoXC1 skoXC1 (-3/40))))<=1]/\[[(skoXC1 skoXC1 (-1/2+(skoXC1 skoXC1 (7/120+(skoXC1 skoXC1 (-3/40))))))<=0]/\[[(skoXC1 skoXC1 skoXC1 skoXC1 (-13/60+(skoXC1 skoXC1 (-3/10))))<=0]/\[[(skoXC1 skoXC1 skoXC1 skoXC1 (-17/120+(skoXC1 skoXC1 (3/80))))<=0]/\[[(skoXC1 skoXC1 (1/3+(skoXC1 skoXC1 (3/20))))<=1]/\[[(skoXC1 skoXC1 skoXC1 skoXC1 (32/15+(skoXC1 skoXC1 (-296/15+(skoXC1 skoXC1 (391/15+(skoXC1 skoXC1 (-146/15+(skoXC1 skoXC1 (3/4))))))))))<=0]/\[[-1<(skoXC1 skoXC1 (1/6+(skoXC1 skoXC1 (3/40))))]/\[(skoXC1 (-1+(skoXC1 skoXC1 (-1/6+(skoXC1 skoXC1 (-3/40))))))<=0]]]]]]]]]]]]]]]]]]]]]]]]]]]].

% In SMTLib2 format:
(declare-fun skoXC1 () Real) (assert (and (<= (* skoXC1 (+ (- 1.) (* skoXC1 (* skoXC1 (+ (/ (- 1.) 6.) (* skoXC1 (* skoXC1 (+ (/ (- 3.) 40.) (* skoXC1 (* skoXC1 (/ (- 5.) 112.))))))))))) 0.) (and (!= skoXC1 0.) (and (<= (* skoXC1 (* skoXC1 (* skoXC1 (* skoXC1 (+ (/ (- 80.) 3.) (* skoXC1 (* skoXC1 (+ (/ 128. 3.) (* skoXC1 (* skoXC1 (+ (/ (- 55.) 3.) (* skoXC1 (* skoXC1 (/ 5. 3.)))))))))))))) 0.) (and (<= (* skoXC1 (* skoXC1 (+ 256. (* skoXC1 (* skoXC1 (+ (- 160.) (* skoXC1 (* skoXC1 (+ 32. (* skoXC1 (* skoXC1 (- 1.)))))))))))) 128.) (and (<= (* skoXC1 (* skoXC1 (/ 1. 3.))) 1.) (and (<= (* skoXC1 (+ (- 1.) (* skoXC1 (* skoXC1 (/ (- 1.) 6.))))) 0.) (and (<= (* skoXC1 (* skoXC1 (* skoXC1 (* skoXC1 (/ (- 2.) 3.))))) 0.) (and (<= (* skoXC1 skoXC1) 2.) (and (<= (* skoXC1 (* skoXC1 (+ (/ (- 1.) 2.) (* skoXC1 (* skoXC1 (/ (- 1.) 6.)))))) 0.) (and (<= (* skoXC1 (* skoXC1 (/ (- 1.) 6.))) 1.) (and (<= (* skoXC1 (+ (- 1.) (* skoXC1 (* skoXC1 (/ 1. 3.))))) 0.) (and (> (/ 7. 8.) skoXC1) (and (> skoXC1 0.) (and (> (* skoXC1 (* skoXC1 (/ (- 1.) 2.))) (- 3.)) (and (<= (* skoXC1 (* skoXC1 (/ 1. 2.))) 3.) (and (<= (* skoXC1 (* skoXC1 (+ 24. (* skoXC1 (* skoXC1 (+ (- 10.) (* skoXC1 skoXC1))))))) 16.) (and (> (* skoXC1 (* skoXC1 (+ (- 80.) (* skoXC1 (* skoXC1 (+ 40. (* skoXC1 (* skoXC1 (+ (- 6.) (* skoXC1 (* skoXC1 (/ 1. 8.)))))))))))) (- 48.)) (and (<= (* skoXC1 (* skoXC1 (+ 80. (* skoXC1 (* skoXC1 (+ (- 40.) (* skoXC1 (* skoXC1 (+ 6. (* skoXC1 (* skoXC1 (/ (- 1.) 8.)))))))))))) 48.) (and (> (* skoXC1 skoXC1) 0.) (and (<= (* skoXC1 (+ (- 1.) (* skoXC1 (* skoXC1 (+ (/ 1. 3.) (* skoXC1 (* skoXC1 (/ 3. 20.)))))))) 0.) (and (<= (* skoXC1 (* skoXC1 (+ (/ (- 1.) 6.) (* skoXC1 (* skoXC1 (/ (- 3.) 40.)))))) 1.) (and (<= (* skoXC1 (* skoXC1 (+ (/ (- 1.) 2.) (* skoXC1 (* skoXC1 (+ (/ 7. 120.) (* skoXC1 (* skoXC1 (/ (- 3.) 40.))))))))) 0.) (and (<= (* skoXC1 (* skoXC1 (* skoXC1 (* skoXC1 (+ (/ (- 13.) 60.) (* skoXC1 (* skoXC1 (/ (- 3.) 10.)))))))) 0.) (and (<= (* skoXC1 (* skoXC1 (* skoXC1 (* skoXC1 (+ (/ (- 17.) 120.) (* skoXC1 (* skoXC1 (/ 3. 80.)))))))) 0.) (and (<= (* skoXC1 (* skoXC1 (+ (/ 1. 3.) (* skoXC1 (* skoXC1 (/ 3. 20.)))))) 1.) (and (<= (* skoXC1 (* skoXC1 (* skoXC1 (* skoXC1 (+ (/ 32. 15.) (* skoXC1 (* skoXC1 (+ (/ (- 296.) 15.) (* skoXC1 (* skoXC1 (+ (/ 391. 15.) (* skoXC1 (* skoXC1 (+ (/ (- 146.) 15.) (* skoXC1 (* skoXC1 (/ 3. 4.))))))))))))))))) 0.) (and (> (* skoXC1 (* skoXC1 (+ (/ 1. 6.) (* skoXC1 (* skoXC1 (/ 3. 40.)))))) (- 1.)) (<= (* skoXC1 (+ (- 1.) (* skoXC1 (* skoXC1 (+ (/ (- 1.) 6.) (* skoXC1 (* skoXC1 (/ (- 3.) 40.)))))))) 0.)))))))))))))))))))))))))))))

% In GRF format:
(sequent " MetiTarski formula " (antecedent (<= (* skoXC1 (+ (- 1.) (* skoXC1 (* skoXC1 (+ (/ (- 1.) 6.) (* skoXC1 (* skoXC1 (+ (/ (- 3.) 40.) (* skoXC1 (* skoXC1 (/ (- 5.) 112.))))))))))) 0.) (!= skoXC1 0.) (<= (* skoXC1 (* skoXC1 (* skoXC1 (* skoXC1 (+ (/ (- 80.) 3.) (* skoXC1 (* skoXC1 (+ (/ 128. 3.) (* skoXC1 (* skoXC1 (+ (/ (- 55.) 3.) (* skoXC1 (* skoXC1 (/ 5. 3.)))))))))))))) 0.) (<= (* skoXC1 (* skoXC1 (+ 256. (* skoXC1 (* skoXC1 (+ (- 160.) (* skoXC1 (* skoXC1 (+ 32. (* skoXC1 (* skoXC1 (- 1.)))))))))))) 128.) (<= (* skoXC1 (* skoXC1 (/ 1. 3.))) 1.) (<= (* skoXC1 (+ (- 1.) (* skoXC1 (* skoXC1 (/ (- 1.) 6.))))) 0.) (<= (* skoXC1 (* skoXC1 (* skoXC1 (* skoXC1 (/ (- 2.) 3.))))) 0.) (<= (* skoXC1 skoXC1) 2.) (<= (* skoXC1 (* skoXC1 (+ (/ (- 1.) 2.) (* skoXC1 (* skoXC1 (/ (- 1.) 6.)))))) 0.) (<= (* skoXC1 (* skoXC1 (/ (- 1.) 6.))) 1.) (<= (* skoXC1 (+ (- 1.) (* skoXC1 (* skoXC1 (/ 1. 3.))))) 0.) (> (/ 7. 8.) skoXC1) (> skoXC1 0.) (> (* skoXC1 (* skoXC1 (/ (- 1.) 2.))) (- 3.)) (<= (* skoXC1 (* skoXC1 (/ 1. 2.))) 3.) (<= (* skoXC1 (* skoXC1 (+ 24. (* skoXC1 (* skoXC1 (+ (- 10.) (* skoXC1 skoXC1))))))) 16.) (> (* skoXC1 (* skoXC1 (+ (- 80.) (* skoXC1 (* skoXC1 (+ 40. (* skoXC1 (* skoXC1 (+ (- 6.) (* skoXC1 (* skoXC1 (/ 1. 8.)))))))))))) (- 48.)) (<= (* skoXC1 (* skoXC1 (+ 80. (* skoXC1 (* skoXC1 (+ (- 40.) (* skoXC1 (* skoXC1 (+ 6. (* skoXC1 (* skoXC1 (/ (- 1.) 8.)))))))))))) 48.) (> (* skoXC1 skoXC1) 0.) (<= (* skoXC1 (+ (- 1.) (* skoXC1 (* skoXC1 (+ (/ 1. 3.) (* skoXC1 (* skoXC1 (/ 3. 20.)))))))) 0.) (<= (* skoXC1 (* skoXC1 (+ (/ (- 1.) 6.) (* skoXC1 (* skoXC1 (/ (- 3.) 40.)))))) 1.) (<= (* skoXC1 (* skoXC1 (+ (/ (- 1.) 2.) (* skoXC1 (* skoXC1 (+ (/ 7. 120.) (* skoXC1 (* skoXC1 (/ (- 3.) 40.))))))))) 0.) (<= (* skoXC1 (* skoXC1 (* skoXC1 (* skoXC1 (+ (/ (- 13.) 60.) (* skoXC1 (* skoXC1 (/ (- 3.) 10.)))))))) 0.) (<= (* skoXC1 (* skoXC1 (* skoXC1 (* skoXC1 (+ (/ (- 17.) 120.) (* skoXC1 (* skoXC1 (/ 3. 80.)))))))) 0.) (<= (* skoXC1 (* skoXC1 (+ (/ 1. 3.) (* skoXC1 (* skoXC1 (/ 3. 20.)))))) 1.) (<= (* skoXC1 (* skoXC1 (* skoXC1 (* skoXC1 (+ (/ 32. 15.) (* skoXC1 (* skoXC1 (+ (/ (- 296.) 15.) (* skoXC1 (* skoXC1 (+ (/ 391. 15.) (* skoXC1 (* skoXC1 (+ (/ (- 146.) 15.) (* skoXC1 (* skoXC1 (/ 3. 4.))))))))))))))))) 0.) (> (* skoXC1 (* skoXC1 (+ (/ 1. 6.) (* skoXC1 (* skoXC1 (/ 3. 40.)))))) (- 1.))) (succedent (> (* skoXC1 (+ (- 1.) (* skoXC1 (* skoXC1 (+ (/ (- 1.) 6.) (* skoXC1 (* skoXC1 (/ (- 3.) 40.)))))))) 0.)))
-----[end problem]-----

-----[begin problem]-----
% In Mathematica format:
Timing[Resolve[Exists[{skoXC1}, And[skoXC1*(1+skoXC1*skoXC1*((1/6)+skoXC1*skoXC1*((3/40)+skoXC1*skoXC1*(5/112))))<=0,skoXC1!=0,skoXC1*skoXC1*skoXC1*skoXC1*((-80/3)+skoXC1*skoXC1*((128/3)+skoXC1*skoXC1*((-55/3)+skoXC1*skoXC1*(5/3))))<=0,skoXC1*skoXC1*(256+skoXC1*skoXC1*(-160+skoXC1*skoXC1*(32+skoXC1*skoXC1*-1)))<=128,skoXC1*skoXC1*(1/3)<=1,skoXC1*(-1+skoXC1*skoXC1*(-1/6))<=0,skoXC1*skoXC1*skoXC1*skoXC1*(-2/3)<=0,skoXC1*skoXC1<=2,skoXC1*skoXC1*((-1/2)+skoXC1*skoXC1*(-1/6))<=0,skoXC1*skoXC1*(-1/6)<=1,skoXC1*(-1+skoXC1*skoXC1*(1/3))<=0,(7/8)>skoXC1,skoXC1>0,skoXC1*skoXC1*(-1/2)>-3,skoXC1*skoXC1*(1/2)<=3,skoXC1*skoXC1*(24+skoXC1*skoXC1*(-10+skoXC1*skoXC1))<=16,skoXC1*skoXC1*(-80+skoXC1*skoXC1*(40+skoXC1*skoXC1*(-6+skoXC1*skoXC1*(1/8))))>-48,skoXC1*skoXC1*(80+skoXC1*skoXC1*(-40+skoXC1*skoXC1*(6+skoXC1*skoXC1*(-1/8))))<=48,skoXC1*skoXC1>0,skoXC1*(-1+skoXC1*skoXC1*((1/3)+skoXC1*skoXC1*(3/20)))<=0,skoXC1*skoXC1*((-1/6)+skoXC1*skoXC1*(-3/40))<=1,skoXC1*skoXC1*((-1/2)+skoXC1*skoXC1*((7/120)+skoXC1*skoXC1*(-3/40)))<=0,skoXC1*skoXC1*skoXC1*skoXC1*((-13/60)+skoXC1*skoXC1*(-3/10))<=0,skoXC1*skoXC1*skoXC1*skoXC1*((-17/120)+skoXC1*skoXC1*(3/80))<=0,skoXC1*skoXC1*((1/3)+skoXC1*skoXC1*(3/20))<=1,skoXC1*skoXC1*skoXC1*skoXC1*((32/15)+skoXC1*skoXC1*((-296/15)+skoXC1*skoXC1*((391/15)+skoXC1*skoXC1*((-146/15)+skoXC1*skoXC1*(3/4)))))<=0,skoXC1*skoXC1*((1/6)+skoXC1*skoXC1*(3/40))>-1,skoXC1*(-1+skoXC1*skoXC1*((-1/6)+skoXC1*skoXC1*(-3/40)))<=0]], Reals]]

% In QepcadB format:
(E skoXC1) [[(skoXC1 (1+(skoXC1 skoXC1 (1/6+(skoXC1 skoXC1 (3/40+(skoXC1 skoXC1 (5/112))))))))<=0]/\[[skoXC1 /=0]/\[[(skoXC1 skoXC1 skoXC1 skoXC1 (-80/3+(skoXC1 skoXC1 (128/3+(skoXC1 skoXC1 (-55/3+(skoXC1 skoXC1 (5/3))))))))<=0]/\[[(skoXC1 skoXC1 (256+(skoXC1 skoXC1 (-160+(skoXC1 skoXC1 (32+(skoXC1 skoXC1 (-1))))))))<=128]/\[[(skoXC1 skoXC1 (1/3))<=1]/\[[(skoXC1 (-1+(skoXC1 skoXC1 (-1/6))))<=0]/\[[(skoXC1 skoXC1 skoXC1 skoXC1 (-2/3))<=0]/\[[(skoXC1 skoXC1)<=2]/\[[(skoXC1 skoXC1 (-1/2+(skoXC1 skoXC1 (-1/6))))<=0]/\[[(skoXC1 skoXC1 (-1/6))<=1]/\[[(skoXC1 (-1+(skoXC1 skoXC1 (1/3))))<=0]/\[[skoXC1<7/8]/\[[0<skoXC1]/\[[-3<(skoXC1 skoXC1 (-1/2))]/\[[(skoXC1 skoXC1 (1/2))<=3]/\[[(skoXC1 skoXC1 (24+(skoXC1 skoXC1 (-10+(skoXC1 skoXC1)))))<=16]/\[[-48<(skoXC1 skoXC1 (-80+(skoXC1 skoXC1 (40+(skoXC1 skoXC1 (-6+(skoXC1 skoXC1 (1/8))))))))]/\[[(skoXC1 skoXC1 (80+(skoXC1 skoXC1 (-40+(skoXC1 skoXC1 (6+(skoXC1 skoXC1 (-1/8))))))))<=48]/\[[0<(skoXC1 skoXC1)]/\[[(skoXC1 (-1+(skoXC1 skoXC1 (1/3+(skoXC1 skoXC1 (3/20))))))<=0]/\[[(skoXC1 skoXC1 (-1/6+(skoXC1 skoXC1 (-3/40))))<=1]/\[[(skoXC1 skoXC1 (-1/2+(skoXC1 skoXC1 (7/120+(skoXC1 skoXC1 (-3/40))))))<=0]/\[[(skoXC1 skoXC1 skoXC1 skoXC1 (-13/60+(skoXC1 skoXC1 (-3/10))))<=0]/\[[(skoXC1 skoXC1 skoXC1 skoXC1 (-17/120+(skoXC1 skoXC1 (3/80))))<=0]/\[[(skoXC1 skoXC1 (1/3+(skoXC1 skoXC1 (3/20))))<=1]/\[[(skoXC1 skoXC1 skoXC1 skoXC1 (32/15+(skoXC1 skoXC1 (-296/15+(skoXC1 skoXC1 (391/15+(skoXC1 skoXC1 (-146/15+(skoXC1 skoXC1 (3/4))))))))))<=0]/\[[-1<(skoXC1 skoXC1 (1/6+(skoXC1 skoXC1 (3/40))))]/\[(skoXC1 (-1+(skoXC1 skoXC1 (-1/6+(skoXC1 skoXC1 (-3/40))))))<=0]]]]]]]]]]]]]]]]]]]]]]]]]]]].

% In SMTLib2 format:
(declare-fun skoXC1 () Real) (assert (and (<= (* skoXC1 (+ 1. (* skoXC1 (* skoXC1 (+ (/ 1. 6.) (* skoXC1 (* skoXC1 (+ (/ 3. 40.) (* skoXC1 (* skoXC1 (/ 5. 112.))))))))))) 0.) (and (!= skoXC1 0.) (and (<= (* skoXC1 (* skoXC1 (* skoXC1 (* skoXC1 (+ (/ (- 80.) 3.) (* skoXC1 (* skoXC1 (+ (/ 128. 3.) (* skoXC1 (* skoXC1 (+ (/ (- 55.) 3.) (* skoXC1 (* skoXC1 (/ 5. 3.)))))))))))))) 0.) (and (<= (* skoXC1 (* skoXC1 (+ 256. (* skoXC1 (* skoXC1 (+ (- 160.) (* skoXC1 (* skoXC1 (+ 32. (* skoXC1 (* skoXC1 (- 1.)))))))))))) 128.) (and (<= (* skoXC1 (* skoXC1 (/ 1. 3.))) 1.) (and (<= (* skoXC1 (+ (- 1.) (* skoXC1 (* skoXC1 (/ (- 1.) 6.))))) 0.) (and (<= (* skoXC1 (* skoXC1 (* skoXC1 (* skoXC1 (/ (- 2.) 3.))))) 0.) (and (<= (* skoXC1 skoXC1) 2.) (and (<= (* skoXC1 (* skoXC1 (+ (/ (- 1.) 2.) (* skoXC1 (* skoXC1 (/ (- 1.) 6.)))))) 0.) (and (<= (* skoXC1 (* skoXC1 (/ (- 1.) 6.))) 1.) (and (<= (* skoXC1 (+ (- 1.) (* skoXC1 (* skoXC1 (/ 1. 3.))))) 0.) (and (> (/ 7. 8.) skoXC1) (and (> skoXC1 0.) (and (> (* skoXC1 (* skoXC1 (/ (- 1.) 2.))) (- 3.)) (and (<= (* skoXC1 (* skoXC1 (/ 1. 2.))) 3.) (and (<= (* skoXC1 (* skoXC1 (+ 24. (* skoXC1 (* skoXC1 (+ (- 10.) (* skoXC1 skoXC1))))))) 16.) (and (> (* skoXC1 (* skoXC1 (+ (- 80.) (* skoXC1 (* skoXC1 (+ 40. (* skoXC1 (* skoXC1 (+ (- 6.) (* skoXC1 (* skoXC1 (/ 1. 8.)))))))))))) (- 48.)) (and (<= (* skoXC1 (* skoXC1 (+ 80. (* skoXC1 (* skoXC1 (+ (- 40.) (* skoXC1 (* skoXC1 (+ 6. (* skoXC1 (* skoXC1 (/ (- 1.) 8.)))))))))))) 48.) (and (> (* skoXC1 skoXC1) 0.) (and (<= (* skoXC1 (+ (- 1.) (* skoXC1 (* skoXC1 (+ (/ 1. 3.) (* skoXC1 (* skoXC1 (/ 3. 20.)))))))) 0.) (and (<= (* skoXC1 (* skoXC1 (+ (/ (- 1.) 6.) (* skoXC1 (* skoXC1 (/ (- 3.) 40.)))))) 1.) (and (<= (* skoXC1 (* skoXC1 (+ (/ (- 1.) 2.) (* skoXC1 (* skoXC1 (+ (/ 7. 120.) (* skoXC1 (* skoXC1 (/ (- 3.) 40.))))))))) 0.) (and (<= (* skoXC1 (* skoXC1 (* skoXC1 (* skoXC1 (+ (/ (- 13.) 60.) (* skoXC1 (* skoXC1 (/ (- 3.) 10.)))))))) 0.) (and (<= (* skoXC1 (* skoXC1 (* skoXC1 (* skoXC1 (+ (/ (- 17.) 120.) (* skoXC1 (* skoXC1 (/ 3. 80.)))))))) 0.) (and (<= (* skoXC1 (* skoXC1 (+ (/ 1. 3.) (* skoXC1 (* skoXC1 (/ 3. 20.)))))) 1.) (and (<= (* skoXC1 (* skoXC1 (* skoXC1 (* skoXC1 (+ (/ 32. 15.) (* skoXC1 (* skoXC1 (+ (/ (- 296.) 15.) (* skoXC1 (* skoXC1 (+ (/ 391. 15.) (* skoXC1 (* skoXC1 (+ (/ (- 146.) 15.) (* skoXC1 (* skoXC1 (/ 3. 4.))))))))))))))))) 0.) (and (> (* skoXC1 (* skoXC1 (+ (/ 1. 6.) (* skoXC1 (* skoXC1 (/ 3. 40.)))))) (- 1.)) (<= (* skoXC1 (+ (- 1.) (* skoXC1 (* skoXC1 (+ (/ (- 1.) 6.) (* skoXC1 (* skoXC1 (/ (- 3.) 40.)))))))) 0.)))))))))))))))))))))))))))))

% In GRF format:
(sequent " MetiTarski formula " (antecedent (<= (* skoXC1 (+ 1. (* skoXC1 (* skoXC1 (+ (/ 1. 6.) (* skoXC1 (* skoXC1 (+ (/ 3. 40.) (* skoXC1 (* skoXC1 (/ 5. 112.))))))))))) 0.) (!= skoXC1 0.) (<= (* skoXC1 (* skoXC1 (* skoXC1 (* skoXC1 (+ (/ (- 80.) 3.) (* skoXC1 (* skoXC1 (+ (/ 128. 3.) (* skoXC1 (* skoXC1 (+ (/ (- 55.) 3.) (* skoXC1 (* skoXC1 (/ 5. 3.)))))))))))))) 0.) (<= (* skoXC1 (* skoXC1 (+ 256. (* skoXC1 (* skoXC1 (+ (- 160.) (* skoXC1 (* skoXC1 (+ 32. (* skoXC1 (* skoXC1 (- 1.)))))))))))) 128.) (<= (* skoXC1 (* skoXC1 (/ 1. 3.))) 1.) (<= (* skoXC1 (+ (- 1.) (* skoXC1 (* skoXC1 (/ (- 1.) 6.))))) 0.) (<= (* skoXC1 (* skoXC1 (* skoXC1 (* skoXC1 (/ (- 2.) 3.))))) 0.) (<= (* skoXC1 skoXC1) 2.) (<= (* skoXC1 (* skoXC1 (+ (/ (- 1.) 2.) (* skoXC1 (* skoXC1 (/ (- 1.) 6.)))))) 0.) (<= (* skoXC1 (* skoXC1 (/ (- 1.) 6.))) 1.) (<= (* skoXC1 (+ (- 1.) (* skoXC1 (* skoXC1 (/ 1. 3.))))) 0.) (> (/ 7. 8.) skoXC1) (> skoXC1 0.) (> (* skoXC1 (* skoXC1 (/ (- 1.) 2.))) (- 3.)) (<= (* skoXC1 (* skoXC1 (/ 1. 2.))) 3.) (<= (* skoXC1 (* skoXC1 (+ 24. (* skoXC1 (* skoXC1 (+ (- 10.) (* skoXC1 skoXC1))))))) 16.) (> (* skoXC1 (* skoXC1 (+ (- 80.) (* skoXC1 (* skoXC1 (+ 40. (* skoXC1 (* skoXC1 (+ (- 6.) (* skoXC1 (* skoXC1 (/ 1. 8.)))))))))))) (- 48.)) (<= (* skoXC1 (* skoXC1 (+ 80. (* skoXC1 (* skoXC1 (+ (- 40.) (* skoXC1 (* skoXC1 (+ 6. (* skoXC1 (* skoXC1 (/ (- 1.) 8.)))))))))))) 48.) (> (* skoXC1 skoXC1) 0.) (<= (* skoXC1 (+ (- 1.) (* skoXC1 (* skoXC1 (+ (/ 1. 3.) (* skoXC1 (* skoXC1 (/ 3. 20.)))))))) 0.) (<= (* skoXC1 (* skoXC1 (+ (/ (- 1.) 6.) (* skoXC1 (* skoXC1 (/ (- 3.) 40.)))))) 1.) (<= (* skoXC1 (* skoXC1 (+ (/ (- 1.) 2.) (* skoXC1 (* skoXC1 (+ (/ 7. 120.) (* skoXC1 (* skoXC1 (/ (- 3.) 40.))))))))) 0.) (<= (* skoXC1 (* skoXC1 (* skoXC1 (* skoXC1 (+ (/ (- 13.) 60.) (* skoXC1 (* skoXC1 (/ (- 3.) 10.)))))))) 0.) (<= (* skoXC1 (* skoXC1 (* skoXC1 (* skoXC1 (+ (/ (- 17.) 120.) (* skoXC1 (* skoXC1 (/ 3. 80.)))))))) 0.) (<= (* skoXC1 (* skoXC1 (+ (/ 1. 3.) (* skoXC1 (* skoXC1 (/ 3. 20.)))))) 1.) (<= (* skoXC1 (* skoXC1 (* skoXC1 (* skoXC1 (+ (/ 32. 15.) (* skoXC1 (* skoXC1 (+ (/ (- 296.) 15.) (* skoXC1 (* skoXC1 (+ (/ 391. 15.) (* skoXC1 (* skoXC1 (+ (/ (- 146.) 15.) (* skoXC1 (* skoXC1 (/ 3. 4.))))))))))))))))) 0.) (> (* skoXC1 (* skoXC1 (+ (/ 1. 6.) (* skoXC1 (* skoXC1 (/ 3. 40.)))))) (- 1.))) (succedent (> (* skoXC1 (+ (- 1.) (* skoXC1 (* skoXC1 (+ (/ (- 1.) 6.) (* skoXC1 (* skoXC1 (/ (- 3.) 40.)))))))) 0.)))
-----[end problem]-----

-----[begin problem]-----
% In Mathematica format:
Timing[Resolve[Exists[{skoXC1}, And[skoXC1*(-1+skoXC1*skoXC1*((1/3)+skoXC1*skoXC1*((3/20)+skoXC1*skoXC1*(5/56))))<=0,skoXC1*skoXC1*skoXC1*skoXC1*((-80/3)+skoXC1*skoXC1*((128/3)+skoXC1*skoXC1*((-55/3)+skoXC1*skoXC1*(5/3))))<=0,skoXC1*skoXC1*(256+skoXC1*skoXC1*(-160+skoXC1*skoXC1*(32+skoXC1*skoXC1*-1)))<=128,skoXC1*skoXC1*(1/3)<=1,skoXC1*(-1+skoXC1*skoXC1*(-1/6))<=0,skoXC1*skoXC1*skoXC1*skoXC1*(-2/3)<=0,skoXC1*skoXC1<=2,skoXC1*skoXC1*((-1/2)+skoXC1*skoXC1*(-1/6))<=0,skoXC1*skoXC1*(-1/6)<=1,skoXC1*(-1+skoXC1*skoXC1*(1/3))<=0,(7/8)>skoXC1,skoXC1>0,skoXC1*skoXC1*(-1/2)>-3,skoXC1*skoXC1*(1/2)<=3,skoXC1*skoXC1*(24+skoXC1*skoXC1*(-10+skoXC1*skoXC1))<=16,skoXC1*skoXC1*(-80+skoXC1*skoXC1*(40+skoXC1*skoXC1*(-6+skoXC1*skoXC1*(1/8))))>-48,skoXC1*skoXC1*(80+skoXC1*skoXC1*(-40+skoXC1*skoXC1*(6+skoXC1*skoXC1*(-1/8))))<=48,skoXC1*skoXC1>0,skoXC1*(-1+skoXC1*skoXC1*((1/3)+skoXC1*skoXC1*(3/20)))<=0,skoXC1*skoXC1*((-1/6)+skoXC1*skoXC1*(-3/40))<=1,skoXC1*skoXC1*((-1/2)+skoXC1*skoXC1*((7/120)+skoXC1*skoXC1*(-3/40)))<=0,skoXC1*skoXC1*skoXC1*skoXC1*((-13/60)+skoXC1*skoXC1*(-3/10))<=0,skoXC1*skoXC1*skoXC1*skoXC1*((-17/120)+skoXC1*skoXC1*(3/80))<=0,skoXC1*skoXC1*((1/3)+skoXC1*skoXC1*(3/20))<=1,skoXC1*skoXC1*skoXC1*skoXC1*((32/15)+skoXC1*skoXC1*((-296/15)+skoXC1*skoXC1*((391/15)+skoXC1*skoXC1*((-146/15)+skoXC1*skoXC1*(3/4)))))<=0,skoXC1*skoXC1*((1/6)+skoXC1*skoXC1*(3/40))>-1,skoXC1*(-1+skoXC1*skoXC1*((-1/6)+skoXC1*skoXC1*(-3/40)))<=0]], Reals]]

% In QepcadB format:
(E skoXC1) [[(skoXC1 (-1+(skoXC1 skoXC1 (1/3+(skoXC1 skoXC1 (3/20+(skoXC1 skoXC1 (5/56))))))))<=0]/\[[(skoXC1 skoXC1 skoXC1 skoXC1 (-80/3+(skoXC1 skoXC1 (128/3+(skoXC1 skoXC1 (-55/3+(skoXC1 skoXC1 (5/3))))))))<=0]/\[[(skoXC1 skoXC1 (256+(skoXC1 skoXC1 (-160+(skoXC1 skoXC1 (32+(skoXC1 skoXC1 (-1))))))))<=128]/\[[(skoXC1 skoXC1 (1/3))<=1]/\[[(skoXC1 (-1+(skoXC1 skoXC1 (-1/6))))<=0]/\[[(skoXC1 skoXC1 skoXC1 skoXC1 (-2/3))<=0]/\[[(skoXC1 skoXC1)<=2]/\[[(skoXC1 skoXC1 (-1/2+(skoXC1 skoXC1 (-1/6))))<=0]/\[[(skoXC1 skoXC1 (-1/6))<=1]/\[[(skoXC1 (-1+(skoXC1 skoXC1 (1/3))))<=0]/\[[skoXC1<7/8]/\[[0<skoXC1]/\[[-3<(skoXC1 skoXC1 (-1/2))]/\[[(skoXC1 skoXC1 (1/2))<=3]/\[[(skoXC1 skoXC1 (24+(skoXC1 skoXC1 (-10+(skoXC1 skoXC1)))))<=16]/\[[-48<(skoXC1 skoXC1 (-80+(skoXC1 skoXC1 (40+(skoXC1 skoXC1 (-6+(skoXC1 skoXC1 (1/8))))))))]/\[[(skoXC1 skoXC1 (80+(skoXC1 skoXC1 (-40+(skoXC1 skoXC1 (6+(skoXC1 skoXC1 (-1/8))))))))<=48]/\[[0<(skoXC1 skoXC1)]/\[[(skoXC1 (-1+(skoXC1 skoXC1 (1/3+(skoXC1 skoXC1 (3/20))))))<=0]/\[[(skoXC1 skoXC1 (-1/6+(skoXC1 skoXC1 (-3/40))))<=1]/\[[(skoXC1 skoXC1 (-1/2+(skoXC1 skoXC1 (7/120+(skoXC1 skoXC1 (-3/40))))))<=0]/\[[(skoXC1 skoXC1 skoXC1 skoXC1 (-13/60+(skoXC1 skoXC1 (-3/10))))<=0]/\[[(skoXC1 skoXC1 skoXC1 skoXC1 (-17/120+(skoXC1 skoXC1 (3/80))))<=0]/\[[(skoXC1 skoXC1 (1/3+(skoXC1 skoXC1 (3/20))))<=1]/\[[(skoXC1 skoXC1 skoXC1 skoXC1 (32/15+(skoXC1 skoXC1 (-296/15+(skoXC1 skoXC1 (391/15+(skoXC1 skoXC1 (-146/15+(skoXC1 skoXC1 (3/4))))))))))<=0]/\[[-1<(skoXC1 skoXC1 (1/6+(skoXC1 skoXC1 (3/40))))]/\[(skoXC1 (-1+(skoXC1 skoXC1 (-1/6+(skoXC1 skoXC1 (-3/40))))))<=0]]]]]]]]]]]]]]]]]]]]]]]]]]].

% In SMTLib2 format:
(declare-fun skoXC1 () Real) (assert (and (<= (* skoXC1 (+ (- 1.) (* skoXC1 (* skoXC1 (+ (/ 1. 3.) (* skoXC1 (* skoXC1 (+ (/ 3. 20.) (* skoXC1 (* skoXC1 (/ 5. 56.))))))))))) 0.) (and (<= (* skoXC1 (* skoXC1 (* skoXC1 (* skoXC1 (+ (/ (- 80.) 3.) (* skoXC1 (* skoXC1 (+ (/ 128. 3.) (* skoXC1 (* skoXC1 (+ (/ (- 55.) 3.) (* skoXC1 (* skoXC1 (/ 5. 3.)))))))))))))) 0.) (and (<= (* skoXC1 (* skoXC1 (+ 256. (* skoXC1 (* skoXC1 (+ (- 160.) (* skoXC1 (* skoXC1 (+ 32. (* skoXC1 (* skoXC1 (- 1.)))))))))))) 128.) (and (<= (* skoXC1 (* skoXC1 (/ 1. 3.))) 1.) (and (<= (* skoXC1 (+ (- 1.) (* skoXC1 (* skoXC1 (/ (- 1.) 6.))))) 0.) (and (<= (* skoXC1 (* skoXC1 (* skoXC1 (* skoXC1 (/ (- 2.) 3.))))) 0.) (and (<= (* skoXC1 skoXC1) 2.) (and (<= (* skoXC1 (* skoXC1 (+ (/ (- 1.) 2.) (* skoXC1 (* skoXC1 (/ (- 1.) 6.)))))) 0.) (and (<= (* skoXC1 (* skoXC1 (/ (- 1.) 6.))) 1.) (and (<= (* skoXC1 (+ (- 1.) (* skoXC1 (* skoXC1 (/ 1. 3.))))) 0.) (and (> (/ 7. 8.) skoXC1) (and (> skoXC1 0.) (and (> (* skoXC1 (* skoXC1 (/ (- 1.) 2.))) (- 3.)) (and (<= (* skoXC1 (* skoXC1 (/ 1. 2.))) 3.) (and (<= (* skoXC1 (* skoXC1 (+ 24. (* skoXC1 (* skoXC1 (+ (- 10.) (* skoXC1 skoXC1))))))) 16.) (and (> (* skoXC1 (* skoXC1 (+ (- 80.) (* skoXC1 (* skoXC1 (+ 40. (* skoXC1 (* skoXC1 (+ (- 6.) (* skoXC1 (* skoXC1 (/ 1. 8.)))))))))))) (- 48.)) (and (<= (* skoXC1 (* skoXC1 (+ 80. (* skoXC1 (* skoXC1 (+ (- 40.) (* skoXC1 (* skoXC1 (+ 6. (* skoXC1 (* skoXC1 (/ (- 1.) 8.)))))))))))) 48.) (and (> (* skoXC1 skoXC1) 0.) (and (<= (* skoXC1 (+ (- 1.) (* skoXC1 (* skoXC1 (+ (/ 1. 3.) (* skoXC1 (* skoXC1 (/ 3. 20.)))))))) 0.) (and (<= (* skoXC1 (* skoXC1 (+ (/ (- 1.) 6.) (* skoXC1 (* skoXC1 (/ (- 3.) 40.)))))) 1.) (and (<= (* skoXC1 (* skoXC1 (+ (/ (- 1.) 2.) (* skoXC1 (* skoXC1 (+ (/ 7. 120.) (* skoXC1 (* skoXC1 (/ (- 3.) 40.))))))))) 0.) (and (<= (* skoXC1 (* skoXC1 (* skoXC1 (* skoXC1 (+ (/ (- 13.) 60.) (* skoXC1 (* skoXC1 (/ (- 3.) 10.)))))))) 0.) (and (<= (* skoXC1 (* skoXC1 (* skoXC1 (* skoXC1 (+ (/ (- 17.) 120.) (* skoXC1 (* skoXC1 (/ 3. 80.)))))))) 0.) (and (<= (* skoXC1 (* skoXC1 (+ (/ 1. 3.) (* skoXC1 (* skoXC1 (/ 3. 20.)))))) 1.) (and (<= (* skoXC1 (* skoXC1 (* skoXC1 (* skoXC1 (+ (/ 32. 15.) (* skoXC1 (* skoXC1 (+ (/ (- 296.) 15.) (* skoXC1 (* skoXC1 (+ (/ 391. 15.) (* skoXC1 (* skoXC1 (+ (/ (- 146.) 15.) (* skoXC1 (* skoXC1 (/ 3. 4.))))))))))))))))) 0.) (and (> (* skoXC1 (* skoXC1 (+ (/ 1. 6.) (* skoXC1 (* skoXC1 (/ 3. 40.)))))) (- 1.)) (<= (* skoXC1 (+ (- 1.) (* skoXC1 (* skoXC1 (+ (/ (- 1.) 6.) (* skoXC1 (* skoXC1 (/ (- 3.) 40.)))))))) 0.))))))))))))))))))))))))))))

% In GRF format:
(sequent " MetiTarski formula " (antecedent (<= (* skoXC1 (+ (- 1.) (* skoXC1 (* skoXC1 (+ (/ 1. 3.) (* skoXC1 (* skoXC1 (+ (/ 3. 20.) (* skoXC1 (* skoXC1 (/ 5. 56.))))))))))) 0.) (<= (* skoXC1 (* skoXC1 (* skoXC1 (* skoXC1 (+ (/ (- 80.) 3.) (* skoXC1 (* skoXC1 (+ (/ 128. 3.) (* skoXC1 (* skoXC1 (+ (/ (- 55.) 3.) (* skoXC1 (* skoXC1 (/ 5. 3.)))))))))))))) 0.) (<= (* skoXC1 (* skoXC1 (+ 256. (* skoXC1 (* skoXC1 (+ (- 160.) (* skoXC1 (* skoXC1 (+ 32. (* skoXC1 (* skoXC1 (- 1.)))))))))))) 128.) (<= (* skoXC1 (* skoXC1 (/ 1. 3.))) 1.) (<= (* skoXC1 (+ (- 1.) (* skoXC1 (* skoXC1 (/ (- 1.) 6.))))) 0.) (<= (* skoXC1 (* skoXC1 (* skoXC1 (* skoXC1 (/ (- 2.) 3.))))) 0.) (<= (* skoXC1 skoXC1) 2.) (<= (* skoXC1 (* skoXC1 (+ (/ (- 1.) 2.) (* skoXC1 (* skoXC1 (/ (- 1.) 6.)))))) 0.) (<= (* skoXC1 (* skoXC1 (/ (- 1.) 6.))) 1.) (<= (* skoXC1 (+ (- 1.) (* skoXC1 (* skoXC1 (/ 1. 3.))))) 0.) (> (/ 7. 8.) skoXC1) (> skoXC1 0.) (> (* skoXC1 (* skoXC1 (/ (- 1.) 2.))) (- 3.)) (<= (* skoXC1 (* skoXC1 (/ 1. 2.))) 3.) (<= (* skoXC1 (* skoXC1 (+ 24. (* skoXC1 (* skoXC1 (+ (- 10.) (* skoXC1 skoXC1))))))) 16.) (> (* skoXC1 (* skoXC1 (+ (- 80.) (* skoXC1 (* skoXC1 (+ 40. (* skoXC1 (* skoXC1 (+ (- 6.) (* skoXC1 (* skoXC1 (/ 1. 8.)))))))))))) (- 48.)) (<= (* skoXC1 (* skoXC1 (+ 80. (* skoXC1 (* skoXC1 (+ (- 40.) (* skoXC1 (* skoXC1 (+ 6. (* skoXC1 (* skoXC1 (/ (- 1.) 8.)))))))))))) 48.) (> (* skoXC1 skoXC1) 0.) (<= (* skoXC1 (+ (- 1.) (* skoXC1 (* skoXC1 (+ (/ 1. 3.) (* skoXC1 (* skoXC1 (/ 3. 20.)))))))) 0.) (<= (* skoXC1 (* skoXC1 (+ (/ (- 1.) 6.) (* skoXC1 (* skoXC1 (/ (- 3.) 40.)))))) 1.) (<= (* skoXC1 (* skoXC1 (+ (/ (- 1.) 2.) (* skoXC1 (* skoXC1 (+ (/ 7. 120.) (* skoXC1 (* skoXC1 (/ (- 3.) 40.))))))))) 0.) (<= (* skoXC1 (* skoXC1 (* skoXC1 (* skoXC1 (+ (/ (- 13.) 60.) (* skoXC1 (* skoXC1 (/ (- 3.) 10.)))))))) 0.) (<= (* skoXC1 (* skoXC1 (* skoXC1 (* skoXC1 (+ (/ (- 17.) 120.) (* skoXC1 (* skoXC1 (/ 3. 80.)))))))) 0.) (<= (* skoXC1 (* skoXC1 (+ (/ 1. 3.) (* skoXC1 (* skoXC1 (/ 3. 20.)))))) 1.) (<= (* skoXC1 (* skoXC1 (* skoXC1 (* skoXC1 (+ (/ 32. 15.) (* skoXC1 (* skoXC1 (+ (/ (- 296.) 15.) (* skoXC1 (* skoXC1 (+ (/ 391. 15.) (* skoXC1 (* skoXC1 (+ (/ (- 146.) 15.) (* skoXC1 (* skoXC1 (/ 3. 4.))))))))))))))))) 0.) (> (* skoXC1 (* skoXC1 (+ (/ 1. 6.) (* skoXC1 (* skoXC1 (/ 3. 40.)))))) (- 1.))) (succedent (> (* skoXC1 (+ (- 1.) (* skoXC1 (* skoXC1 (+ (/ (- 1.) 6.) (* skoXC1 (* skoXC1 (/ (- 3.) 40.)))))))) 0.)))
-----[end problem]-----

-----[begin problem]-----
% In Mathematica format:
Timing[Resolve[Exists[{skoXC1}, And[skoXC1*skoXC1*((-1/6)+skoXC1*skoXC1*((-3/40)+skoXC1*skoXC1*(-5/112)))<=1,skoXC1*(-1+skoXC1*skoXC1*((1/3)+skoXC1*skoXC1*((3/20)+skoXC1*skoXC1*(5/56))))<=0,skoXC1*skoXC1*skoXC1*skoXC1*((-80/3)+skoXC1*skoXC1*((128/3)+skoXC1*skoXC1*((-55/3)+skoXC1*skoXC1*(5/3))))<=0,skoXC1*skoXC1*(256+skoXC1*skoXC1*(-160+skoXC1*skoXC1*(32+skoXC1*skoXC1*-1)))<=128,skoXC1*skoXC1*(1/3)<=1,skoXC1*(-1+skoXC1*skoXC1*(-1/6))<=0,skoXC1*skoXC1*skoXC1*skoXC1*(-2/3)<=0,skoXC1*skoXC1<=2,skoXC1*skoXC1*((-1/2)+skoXC1*skoXC1*(-1/6))<=0,skoXC1*skoXC1*(-1/6)<=1,skoXC1*(-1+skoXC1*skoXC1*(1/3))<=0,(7/8)>skoXC1,skoXC1>0,skoXC1*skoXC1*(-1/2)>-3,skoXC1*skoXC1*(1/2)<=3,skoXC1*skoXC1*(24+skoXC1*skoXC1*(-10+skoXC1*skoXC1))<=16,skoXC1*skoXC1*(-80+skoXC1*skoXC1*(40+skoXC1*skoXC1*(-6+skoXC1*skoXC1*(1/8))))>-48,skoXC1*skoXC1*(80+skoXC1*skoXC1*(-40+skoXC1*skoXC1*(6+skoXC1*skoXC1*(-1/8))))<=48,skoXC1*skoXC1>0,skoXC1*(-1+skoXC1*skoXC1*((1/3)+skoXC1*skoXC1*(3/20)))<=0,skoXC1*skoXC1*((-1/6)+skoXC1*skoXC1*(-3/40))<=1,skoXC1*skoXC1*((-1/2)+skoXC1*skoXC1*((7/120)+skoXC1*skoXC1*(-3/40)))<=0,skoXC1*skoXC1*skoXC1*skoXC1*((-13/60)+skoXC1*skoXC1*(-3/10))<=0,skoXC1*skoXC1*skoXC1*skoXC1*((-17/120)+skoXC1*skoXC1*(3/80))<=0,skoXC1*skoXC1*((1/3)+skoXC1*skoXC1*(3/20))<=1,skoXC1*skoXC1*skoXC1*skoXC1*((32/15)+skoXC1*skoXC1*((-296/15)+skoXC1*skoXC1*((391/15)+skoXC1*skoXC1*((-146/15)+skoXC1*skoXC1*(3/4)))))<=0,skoXC1*skoXC1*((1/6)+skoXC1*skoXC1*(3/40))>-1,skoXC1*(-1+skoXC1*skoXC1*((-1/6)+skoXC1*skoXC1*(-3/40)))<=0]], Reals]]

% In QepcadB format:
(E skoXC1) [[(skoXC1 skoXC1 (-1/6+(skoXC1 skoXC1 (-3/40+(skoXC1 skoXC1 (-5/112))))))<=1]/\[[(skoXC1 (-1+(skoXC1 skoXC1 (1/3+(skoXC1 skoXC1 (3/20+(skoXC1 skoXC1 (5/56))))))))<=0]/\[[(skoXC1 skoXC1 skoXC1 skoXC1 (-80/3+(skoXC1 skoXC1 (128/3+(skoXC1 skoXC1 (-55/3+(skoXC1 skoXC1 (5/3))))))))<=0]/\[[(skoXC1 skoXC1 (256+(skoXC1 skoXC1 (-160+(skoXC1 skoXC1 (32+(skoXC1 skoXC1 (-1))))))))<=128]/\[[(skoXC1 skoXC1 (1/3))<=1]/\[[(skoXC1 (-1+(skoXC1 skoXC1 (-1/6))))<=0]/\[[(skoXC1 skoXC1 skoXC1 skoXC1 (-2/3))<=0]/\[[(skoXC1 skoXC1)<=2]/\[[(skoXC1 skoXC1 (-1/2+(skoXC1 skoXC1 (-1/6))))<=0]/\[[(skoXC1 skoXC1 (-1/6))<=1]/\[[(skoXC1 (-1+(skoXC1 skoXC1 (1/3))))<=0]/\[[skoXC1<7/8]/\[[0<skoXC1]/\[[-3<(skoXC1 skoXC1 (-1/2))]/\[[(skoXC1 skoXC1 (1/2))<=3]/\[[(skoXC1 skoXC1 (24+(skoXC1 skoXC1 (-10+(skoXC1 skoXC1)))))<=16]/\[[-48<(skoXC1 skoXC1 (-80+(skoXC1 skoXC1 (40+(skoXC1 skoXC1 (-6+(skoXC1 skoXC1 (1/8))))))))]/\[[(skoXC1 skoXC1 (80+(skoXC1 skoXC1 (-40+(skoXC1 skoXC1 (6+(skoXC1 skoXC1 (-1/8))))))))<=48]/\[[0<(skoXC1 skoXC1)]/\[[(skoXC1 (-1+(skoXC1 skoXC1 (1/3+(skoXC1 skoXC1 (3/20))))))<=0]/\[[(skoXC1 skoXC1 (-1/6+(skoXC1 skoXC1 (-3/40))))<=1]/\[[(skoXC1 skoXC1 (-1/2+(skoXC1 skoXC1 (7/120+(skoXC1 skoXC1 (-3/40))))))<=0]/\[[(skoXC1 skoXC1 skoXC1 skoXC1 (-13/60+(skoXC1 skoXC1 (-3/10))))<=0]/\[[(skoXC1 skoXC1 skoXC1 skoXC1 (-17/120+(skoXC1 skoXC1 (3/80))))<=0]/\[[(skoXC1 skoXC1 (1/3+(skoXC1 skoXC1 (3/20))))<=1]/\[[(skoXC1 skoXC1 skoXC1 skoXC1 (32/15+(skoXC1 skoXC1 (-296/15+(skoXC1 skoXC1 (391/15+(skoXC1 skoXC1 (-146/15+(skoXC1 skoXC1 (3/4))))))))))<=0]/\[[-1<(skoXC1 skoXC1 (1/6+(skoXC1 skoXC1 (3/40))))]/\[(skoXC1 (-1+(skoXC1 skoXC1 (-1/6+(skoXC1 skoXC1 (-3/40))))))<=0]]]]]]]]]]]]]]]]]]]]]]]]]]]].

% In SMTLib2 format:
(declare-fun skoXC1 () Real) (assert (and (<= (* skoXC1 (* skoXC1 (+ (/ (- 1.) 6.) (* skoXC1 (* skoXC1 (+ (/ (- 3.) 40.) (* skoXC1 (* skoXC1 (/ (- 5.) 112.))))))))) 1.) (and (<= (* skoXC1 (+ (- 1.) (* skoXC1 (* skoXC1 (+ (/ 1. 3.) (* skoXC1 (* skoXC1 (+ (/ 3. 20.) (* skoXC1 (* skoXC1 (/ 5. 56.))))))))))) 0.) (and (<= (* skoXC1 (* skoXC1 (* skoXC1 (* skoXC1 (+ (/ (- 80.) 3.) (* skoXC1 (* skoXC1 (+ (/ 128. 3.) (* skoXC1 (* skoXC1 (+ (/ (- 55.) 3.) (* skoXC1 (* skoXC1 (/ 5. 3.)))))))))))))) 0.) (and (<= (* skoXC1 (* skoXC1 (+ 256. (* skoXC1 (* skoXC1 (+ (- 160.) (* skoXC1 (* skoXC1 (+ 32. (* skoXC1 (* skoXC1 (- 1.)))))))))))) 128.) (and (<= (* skoXC1 (* skoXC1 (/ 1. 3.))) 1.) (and (<= (* skoXC1 (+ (- 1.) (* skoXC1 (* skoXC1 (/ (- 1.) 6.))))) 0.) (and (<= (* skoXC1 (* skoXC1 (* skoXC1 (* skoXC1 (/ (- 2.) 3.))))) 0.) (and (<= (* skoXC1 skoXC1) 2.) (and (<= (* skoXC1 (* skoXC1 (+ (/ (- 1.) 2.) (* skoXC1 (* skoXC1 (/ (- 1.) 6.)))))) 0.) (and (<= (* skoXC1 (* skoXC1 (/ (- 1.) 6.))) 1.) (and (<= (* skoXC1 (+ (- 1.) (* skoXC1 (* skoXC1 (/ 1. 3.))))) 0.) (and (> (/ 7. 8.) skoXC1) (and (> skoXC1 0.) (and (> (* skoXC1 (* skoXC1 (/ (- 1.) 2.))) (- 3.)) (and (<= (* skoXC1 (* skoXC1 (/ 1. 2.))) 3.) (and (<= (* skoXC1 (* skoXC1 (+ 24. (* skoXC1 (* skoXC1 (+ (- 10.) (* skoXC1 skoXC1))))))) 16.) (and (> (* skoXC1 (* skoXC1 (+ (- 80.) (* skoXC1 (* skoXC1 (+ 40. (* skoXC1 (* skoXC1 (+ (- 6.) (* skoXC1 (* skoXC1 (/ 1. 8.)))))))))))) (- 48.)) (and (<= (* skoXC1 (* skoXC1 (+ 80. (* skoXC1 (* skoXC1 (+ (- 40.) (* skoXC1 (* skoXC1 (+ 6. (* skoXC1 (* skoXC1 (/ (- 1.) 8.)))))))))))) 48.) (and (> (* skoXC1 skoXC1) 0.) (and (<= (* skoXC1 (+ (- 1.) (* skoXC1 (* skoXC1 (+ (/ 1. 3.) (* skoXC1 (* skoXC1 (/ 3. 20.)))))))) 0.) (and (<= (* skoXC1 (* skoXC1 (+ (/ (- 1.) 6.) (* skoXC1 (* skoXC1 (/ (- 3.) 40.)))))) 1.) (and (<= (* skoXC1 (* skoXC1 (+ (/ (- 1.) 2.) (* skoXC1 (* skoXC1 (+ (/ 7. 120.) (* skoXC1 (* skoXC1 (/ (- 3.) 40.))))))))) 0.) (and (<= (* skoXC1 (* skoXC1 (* skoXC1 (* skoXC1 (+ (/ (- 13.) 60.) (* skoXC1 (* skoXC1 (/ (- 3.) 10.)))))))) 0.) (and (<= (* skoXC1 (* skoXC1 (* skoXC1 (* skoXC1 (+ (/ (- 17.) 120.) (* skoXC1 (* skoXC1 (/ 3. 80.)))))))) 0.) (and (<= (* skoXC1 (* skoXC1 (+ (/ 1. 3.) (* skoXC1 (* skoXC1 (/ 3. 20.)))))) 1.) (and (<= (* skoXC1 (* skoXC1 (* skoXC1 (* skoXC1 (+ (/ 32. 15.) (* skoXC1 (* skoXC1 (+ (/ (- 296.) 15.) (* skoXC1 (* skoXC1 (+ (/ 391. 15.) (* skoXC1 (* skoXC1 (+ (/ (- 146.) 15.) (* skoXC1 (* skoXC1 (/ 3. 4.))))))))))))))))) 0.) (and (> (* skoXC1 (* skoXC1 (+ (/ 1. 6.) (* skoXC1 (* skoXC1 (/ 3. 40.)))))) (- 1.)) (<= (* skoXC1 (+ (- 1.) (* skoXC1 (* skoXC1 (+ (/ (- 1.) 6.) (* skoXC1 (* skoXC1 (/ (- 3.) 40.)))))))) 0.)))))))))))))))))))))))))))))

% In GRF format:
(sequent " MetiTarski formula " (antecedent (<= (* skoXC1 (* skoXC1 (+ (/ (- 1.) 6.) (* skoXC1 (* skoXC1 (+ (/ (- 3.) 40.) (* skoXC1 (* skoXC1 (/ (- 5.) 112.))))))))) 1.) (<= (* skoXC1 (+ (- 1.) (* skoXC1 (* skoXC1 (+ (/ 1. 3.) (* skoXC1 (* skoXC1 (+ (/ 3. 20.) (* skoXC1 (* skoXC1 (/ 5. 56.))))))))))) 0.) (<= (* skoXC1 (* skoXC1 (* skoXC1 (* skoXC1 (+ (/ (- 80.) 3.) (* skoXC1 (* skoXC1 (+ (/ 128. 3.) (* skoXC1 (* skoXC1 (+ (/ (- 55.) 3.) (* skoXC1 (* skoXC1 (/ 5. 3.)))))))))))))) 0.) (<= (* skoXC1 (* skoXC1 (+ 256. (* skoXC1 (* skoXC1 (+ (- 160.) (* skoXC1 (* skoXC1 (+ 32. (* skoXC1 (* skoXC1 (- 1.)))))))))))) 128.) (<= (* skoXC1 (* skoXC1 (/ 1. 3.))) 1.) (<= (* skoXC1 (+ (- 1.) (* skoXC1 (* skoXC1 (/ (- 1.) 6.))))) 0.) (<= (* skoXC1 (* skoXC1 (* skoXC1 (* skoXC1 (/ (- 2.) 3.))))) 0.) (<= (* skoXC1 skoXC1) 2.) (<= (* skoXC1 (* skoXC1 (+ (/ (- 1.) 2.) (* skoXC1 (* skoXC1 (/ (- 1.) 6.)))))) 0.) (<= (* skoXC1 (* skoXC1 (/ (- 1.) 6.))) 1.) (<= (* skoXC1 (+ (- 1.) (* skoXC1 (* skoXC1 (/ 1. 3.))))) 0.) (> (/ 7. 8.) skoXC1) (> skoXC1 0.) (> (* skoXC1 (* skoXC1 (/ (- 1.) 2.))) (- 3.)) (<= (* skoXC1 (* skoXC1 (/ 1. 2.))) 3.) (<= (* skoXC1 (* skoXC1 (+ 24. (* skoXC1 (* skoXC1 (+ (- 10.) (* skoXC1 skoXC1))))))) 16.) (> (* skoXC1 (* skoXC1 (+ (- 80.) (* skoXC1 (* skoXC1 (+ 40. (* skoXC1 (* skoXC1 (+ (- 6.) (* skoXC1 (* skoXC1 (/ 1. 8.)))))))))))) (- 48.)) (<= (* skoXC1 (* skoXC1 (+ 80. (* skoXC1 (* skoXC1 (+ (- 40.) (* skoXC1 (* skoXC1 (+ 6. (* skoXC1 (* skoXC1 (/ (- 1.) 8.)))))))))))) 48.) (> (* skoXC1 skoXC1) 0.) (<= (* skoXC1 (+ (- 1.) (* skoXC1 (* skoXC1 (+ (/ 1. 3.) (* skoXC1 (* skoXC1 (/ 3. 20.)))))))) 0.) (<= (* skoXC1 (* skoXC1 (+ (/ (- 1.) 6.) (* skoXC1 (* skoXC1 (/ (- 3.) 40.)))))) 1.) (<= (* skoXC1 (* skoXC1 (+ (/ (- 1.) 2.) (* skoXC1 (* skoXC1 (+ (/ 7. 120.) (* skoXC1 (* skoXC1 (/ (- 3.) 40.))))))))) 0.) (<= (* skoXC1 (* skoXC1 (* skoXC1 (* skoXC1 (+ (/ (- 13.) 60.) (* skoXC1 (* skoXC1 (/ (- 3.) 10.)))))))) 0.) (<= (* skoXC1 (* skoXC1 (* skoXC1 (* skoXC1 (+ (/ (- 17.) 120.) (* skoXC1 (* skoXC1 (/ 3. 80.)))))))) 0.) (<= (* skoXC1 (* skoXC1 (+ (/ 1. 3.) (* skoXC1 (* skoXC1 (/ 3. 20.)))))) 1.) (<= (* skoXC1 (* skoXC1 (* skoXC1 (* skoXC1 (+ (/ 32. 15.) (* skoXC1 (* skoXC1 (+ (/ (- 296.) 15.) (* skoXC1 (* skoXC1 (+ (/ 391. 15.) (* skoXC1 (* skoXC1 (+ (/ (- 146.) 15.) (* skoXC1 (* skoXC1 (/ 3. 4.))))))))))))))))) 0.) (> (* skoXC1 (* skoXC1 (+ (/ 1. 6.) (* skoXC1 (* skoXC1 (/ 3. 40.)))))) (- 1.))) (succedent (> (* skoXC1 (+ (- 1.) (* skoXC1 (* skoXC1 (+ (/ (- 1.) 6.) (* skoXC1 (* skoXC1 (/ (- 3.) 40.)))))))) 0.)))
-----[end problem]-----

-----[begin problem]-----
% In Mathematica format:
Timing[Resolve[Exists[{skoXC1}, And[skoXC1*skoXC1*((1/6)+skoXC1*skoXC1*((3/40)+skoXC1*skoXC1*(5/112)))<=-1,skoXC1*(-1+skoXC1*skoXC1*((1/3)+skoXC1*skoXC1*((3/20)+skoXC1*skoXC1*(5/56))))<=0,skoXC1*skoXC1*skoXC1*skoXC1*((-80/3)+skoXC1*skoXC1*((128/3)+skoXC1*skoXC1*((-55/3)+skoXC1*skoXC1*(5/3))))<=0,skoXC1*skoXC1*(256+skoXC1*skoXC1*(-160+skoXC1*skoXC1*(32+skoXC1*skoXC1*-1)))<=128,skoXC1*skoXC1*(1/3)<=1,skoXC1*(-1+skoXC1*skoXC1*(-1/6))<=0,skoXC1*skoXC1*skoXC1*skoXC1*(-2/3)<=0,skoXC1*skoXC1<=2,skoXC1*skoXC1*((-1/2)+skoXC1*skoXC1*(-1/6))<=0,skoXC1*skoXC1*(-1/6)<=1,skoXC1*(-1+skoXC1*skoXC1*(1/3))<=0,(7/8)>skoXC1,skoXC1>0,skoXC1*skoXC1*(-1/2)>-3,skoXC1*skoXC1*(1/2)<=3,skoXC1*skoXC1*(24+skoXC1*skoXC1*(-10+skoXC1*skoXC1))<=16,skoXC1*skoXC1*(-80+skoXC1*skoXC1*(40+skoXC1*skoXC1*(-6+skoXC1*skoXC1*(1/8))))>-48,skoXC1*skoXC1*(80+skoXC1*skoXC1*(-40+skoXC1*skoXC1*(6+skoXC1*skoXC1*(-1/8))))<=48,skoXC1*skoXC1>0,skoXC1*(-1+skoXC1*skoXC1*((1/3)+skoXC1*skoXC1*(3/20)))<=0,skoXC1*skoXC1*((-1/6)+skoXC1*skoXC1*(-3/40))<=1,skoXC1*skoXC1*((-1/2)+skoXC1*skoXC1*((7/120)+skoXC1*skoXC1*(-3/40)))<=0,skoXC1*skoXC1*skoXC1*skoXC1*((-13/60)+skoXC1*skoXC1*(-3/10))<=0,skoXC1*skoXC1*skoXC1*skoXC1*((-17/120)+skoXC1*skoXC1*(3/80))<=0,skoXC1*skoXC1*((1/3)+skoXC1*skoXC1*(3/20))<=1,skoXC1*skoXC1*skoXC1*skoXC1*((32/15)+skoXC1*skoXC1*((-296/15)+skoXC1*skoXC1*((391/15)+skoXC1*skoXC1*((-146/15)+skoXC1*skoXC1*(3/4)))))<=0,skoXC1*skoXC1*((1/6)+skoXC1*skoXC1*(3/40))>-1,skoXC1*(-1+skoXC1*skoXC1*((-1/6)+skoXC1*skoXC1*(-3/40)))<=0]], Reals]]

% In QepcadB format:
(E skoXC1) [[(skoXC1 skoXC1 (1/6+(skoXC1 skoXC1 (3/40+(skoXC1 skoXC1 (5/112))))))<=-1]/\[[(skoXC1 (-1+(skoXC1 skoXC1 (1/3+(skoXC1 skoXC1 (3/20+(skoXC1 skoXC1 (5/56))))))))<=0]/\[[(skoXC1 skoXC1 skoXC1 skoXC1 (-80/3+(skoXC1 skoXC1 (128/3+(skoXC1 skoXC1 (-55/3+(skoXC1 skoXC1 (5/3))))))))<=0]/\[[(skoXC1 skoXC1 (256+(skoXC1 skoXC1 (-160+(skoXC1 skoXC1 (32+(skoXC1 skoXC1 (-1))))))))<=128]/\[[(skoXC1 skoXC1 (1/3))<=1]/\[[(skoXC1 (-1+(skoXC1 skoXC1 (-1/6))))<=0]/\[[(skoXC1 skoXC1 skoXC1 skoXC1 (-2/3))<=0]/\[[(skoXC1 skoXC1)<=2]/\[[(skoXC1 skoXC1 (-1/2+(skoXC1 skoXC1 (-1/6))))<=0]/\[[(skoXC1 skoXC1 (-1/6))<=1]/\[[(skoXC1 (-1+(skoXC1 skoXC1 (1/3))))<=0]/\[[skoXC1<7/8]/\[[0<skoXC1]/\[[-3<(skoXC1 skoXC1 (-1/2))]/\[[(skoXC1 skoXC1 (1/2))<=3]/\[[(skoXC1 skoXC1 (24+(skoXC1 skoXC1 (-10+(skoXC1 skoXC1)))))<=16]/\[[-48<(skoXC1 skoXC1 (-80+(skoXC1 skoXC1 (40+(skoXC1 skoXC1 (-6+(skoXC1 skoXC1 (1/8))))))))]/\[[(skoXC1 skoXC1 (80+(skoXC1 skoXC1 (-40+(skoXC1 skoXC1 (6+(skoXC1 skoXC1 (-1/8))))))))<=48]/\[[0<(skoXC1 skoXC1)]/\[[(skoXC1 (-1+(skoXC1 skoXC1 (1/3+(skoXC1 skoXC1 (3/20))))))<=0]/\[[(skoXC1 skoXC1 (-1/6+(skoXC1 skoXC1 (-3/40))))<=1]/\[[(skoXC1 skoXC1 (-1/2+(skoXC1 skoXC1 (7/120+(skoXC1 skoXC1 (-3/40))))))<=0]/\[[(skoXC1 skoXC1 skoXC1 skoXC1 (-13/60+(skoXC1 skoXC1 (-3/10))))<=0]/\[[(skoXC1 skoXC1 skoXC1 skoXC1 (-17/120+(skoXC1 skoXC1 (3/80))))<=0]/\[[(skoXC1 skoXC1 (1/3+(skoXC1 skoXC1 (3/20))))<=1]/\[[(skoXC1 skoXC1 skoXC1 skoXC1 (32/15+(skoXC1 skoXC1 (-296/15+(skoXC1 skoXC1 (391/15+(skoXC1 skoXC1 (-146/15+(skoXC1 skoXC1 (3/4))))))))))<=0]/\[[-1<(skoXC1 skoXC1 (1/6+(skoXC1 skoXC1 (3/40))))]/\[(skoXC1 (-1+(skoXC1 skoXC1 (-1/6+(skoXC1 skoXC1 (-3/40))))))<=0]]]]]]]]]]]]]]]]]]]]]]]]]]]].

% In SMTLib2 format:
(declare-fun skoXC1 () Real) (assert (and (<= (* skoXC1 (* skoXC1 (+ (/ 1. 6.) (* skoXC1 (* skoXC1 (+ (/ 3. 40.) (* skoXC1 (* skoXC1 (/ 5. 112.))))))))) (- 1.)) (and (<= (* skoXC1 (+ (- 1.) (* skoXC1 (* skoXC1 (+ (/ 1. 3.) (* skoXC1 (* skoXC1 (+ (/ 3. 20.) (* skoXC1 (* skoXC1 (/ 5. 56.))))))))))) 0.) (and (<= (* skoXC1 (* skoXC1 (* skoXC1 (* skoXC1 (+ (/ (- 80.) 3.) (* skoXC1 (* skoXC1 (+ (/ 128. 3.) (* skoXC1 (* skoXC1 (+ (/ (- 55.) 3.) (* skoXC1 (* skoXC1 (/ 5. 3.)))))))))))))) 0.) (and (<= (* skoXC1 (* skoXC1 (+ 256. (* skoXC1 (* skoXC1 (+ (- 160.) (* skoXC1 (* skoXC1 (+ 32. (* skoXC1 (* skoXC1 (- 1.)))))))))))) 128.) (and (<= (* skoXC1 (* skoXC1 (/ 1. 3.))) 1.) (and (<= (* skoXC1 (+ (- 1.) (* skoXC1 (* skoXC1 (/ (- 1.) 6.))))) 0.) (and (<= (* skoXC1 (* skoXC1 (* skoXC1 (* skoXC1 (/ (- 2.) 3.))))) 0.) (and (<= (* skoXC1 skoXC1) 2.) (and (<= (* skoXC1 (* skoXC1 (+ (/ (- 1.) 2.) (* skoXC1 (* skoXC1 (/ (- 1.) 6.)))))) 0.) (and (<= (* skoXC1 (* skoXC1 (/ (- 1.) 6.))) 1.) (and (<= (* skoXC1 (+ (- 1.) (* skoXC1 (* skoXC1 (/ 1. 3.))))) 0.) (and (> (/ 7. 8.) skoXC1) (and (> skoXC1 0.) (and (> (* skoXC1 (* skoXC1 (/ (- 1.) 2.))) (- 3.)) (and (<= (* skoXC1 (* skoXC1 (/ 1. 2.))) 3.) (and (<= (* skoXC1 (* skoXC1 (+ 24. (* skoXC1 (* skoXC1 (+ (- 10.) (* skoXC1 skoXC1))))))) 16.) (and (> (* skoXC1 (* skoXC1 (+ (- 80.) (* skoXC1 (* skoXC1 (+ 40. (* skoXC1 (* skoXC1 (+ (- 6.) (* skoXC1 (* skoXC1 (/ 1. 8.)))))))))))) (- 48.)) (and (<= (* skoXC1 (* skoXC1 (+ 80. (* skoXC1 (* skoXC1 (+ (- 40.) (* skoXC1 (* skoXC1 (+ 6. (* skoXC1 (* skoXC1 (/ (- 1.) 8.)))))))))))) 48.) (and (> (* skoXC1 skoXC1) 0.) (and (<= (* skoXC1 (+ (- 1.) (* skoXC1 (* skoXC1 (+ (/ 1. 3.) (* skoXC1 (* skoXC1 (/ 3. 20.)))))))) 0.) (and (<= (* skoXC1 (* skoXC1 (+ (/ (- 1.) 6.) (* skoXC1 (* skoXC1 (/ (- 3.) 40.)))))) 1.) (and (<= (* skoXC1 (* skoXC1 (+ (/ (- 1.) 2.) (* skoXC1 (* skoXC1 (+ (/ 7. 120.) (* skoXC1 (* skoXC1 (/ (- 3.) 40.))))))))) 0.) (and (<= (* skoXC1 (* skoXC1 (* skoXC1 (* skoXC1 (+ (/ (- 13.) 60.) (* skoXC1 (* skoXC1 (/ (- 3.) 10.)))))))) 0.) (and (<= (* skoXC1 (* skoXC1 (* skoXC1 (* skoXC1 (+ (/ (- 17.) 120.) (* skoXC1 (* skoXC1 (/ 3. 80.)))))))) 0.) (and (<= (* skoXC1 (* skoXC1 (+ (/ 1. 3.) (* skoXC1 (* skoXC1 (/ 3. 20.)))))) 1.) (and (<= (* skoXC1 (* skoXC1 (* skoXC1 (* skoXC1 (+ (/ 32. 15.) (* skoXC1 (* skoXC1 (+ (/ (- 296.) 15.) (* skoXC1 (* skoXC1 (+ (/ 391. 15.) (* skoXC1 (* skoXC1 (+ (/ (- 146.) 15.) (* skoXC1 (* skoXC1 (/ 3. 4.))))))))))))))))) 0.) (and (> (* skoXC1 (* skoXC1 (+ (/ 1. 6.) (* skoXC1 (* skoXC1 (/ 3. 40.)))))) (- 1.)) (<= (* skoXC1 (+ (- 1.) (* skoXC1 (* skoXC1 (+ (/ (- 1.) 6.) (* skoXC1 (* skoXC1 (/ (- 3.) 40.)))))))) 0.)))))))))))))))))))))))))))))

% In GRF format:
(sequent " MetiTarski formula " (antecedent (<= (* skoXC1 (* skoXC1 (+ (/ 1. 6.) (* skoXC1 (* skoXC1 (+ (/ 3. 40.) (* skoXC1 (* skoXC1 (/ 5. 112.))))))))) (- 1.)) (<= (* skoXC1 (+ (- 1.) (* skoXC1 (* skoXC1 (+ (/ 1. 3.) (* skoXC1 (* skoXC1 (+ (/ 3. 20.) (* skoXC1 (* skoXC1 (/ 5. 56.))))))))))) 0.) (<= (* skoXC1 (* skoXC1 (* skoXC1 (* skoXC1 (+ (/ (- 80.) 3.) (* skoXC1 (* skoXC1 (+ (/ 128. 3.) (* skoXC1 (* skoXC1 (+ (/ (- 55.) 3.) (* skoXC1 (* skoXC1 (/ 5. 3.)))))))))))))) 0.) (<= (* skoXC1 (* skoXC1 (+ 256. (* skoXC1 (* skoXC1 (+ (- 160.) (* skoXC1 (* skoXC1 (+ 32. (* skoXC1 (* skoXC1 (- 1.)))))))))))) 128.) (<= (* skoXC1 (* skoXC1 (/ 1. 3.))) 1.) (<= (* skoXC1 (+ (- 1.) (* skoXC1 (* skoXC1 (/ (- 1.) 6.))))) 0.) (<= (* skoXC1 (* skoXC1 (* skoXC1 (* skoXC1 (/ (- 2.) 3.))))) 0.) (<= (* skoXC1 skoXC1) 2.) (<= (* skoXC1 (* skoXC1 (+ (/ (- 1.) 2.) (* skoXC1 (* skoXC1 (/ (- 1.) 6.)))))) 0.) (<= (* skoXC1 (* skoXC1 (/ (- 1.) 6.))) 1.) (<= (* skoXC1 (+ (- 1.) (* skoXC1 (* skoXC1 (/ 1. 3.))))) 0.) (> (/ 7. 8.) skoXC1) (> skoXC1 0.) (> (* skoXC1 (* skoXC1 (/ (- 1.) 2.))) (- 3.)) (<= (* skoXC1 (* skoXC1 (/ 1. 2.))) 3.) (<= (* skoXC1 (* skoXC1 (+ 24. (* skoXC1 (* skoXC1 (+ (- 10.) (* skoXC1 skoXC1))))))) 16.) (> (* skoXC1 (* skoXC1 (+ (- 80.) (* skoXC1 (* skoXC1 (+ 40. (* skoXC1 (* skoXC1 (+ (- 6.) (* skoXC1 (* skoXC1 (/ 1. 8.)))))))))))) (- 48.)) (<= (* skoXC1 (* skoXC1 (+ 80. (* skoXC1 (* skoXC1 (+ (- 40.) (* skoXC1 (* skoXC1 (+ 6. (* skoXC1 (* skoXC1 (/ (- 1.) 8.)))))))))))) 48.) (> (* skoXC1 skoXC1) 0.) (<= (* skoXC1 (+ (- 1.) (* skoXC1 (* skoXC1 (+ (/ 1. 3.) (* skoXC1 (* skoXC1 (/ 3. 20.)))))))) 0.) (<= (* skoXC1 (* skoXC1 (+ (/ (- 1.) 6.) (* skoXC1 (* skoXC1 (/ (- 3.) 40.)))))) 1.) (<= (* skoXC1 (* skoXC1 (+ (/ (- 1.) 2.) (* skoXC1 (* skoXC1 (+ (/ 7. 120.) (* skoXC1 (* skoXC1 (/ (- 3.) 40.))))))))) 0.) (<= (* skoXC1 (* skoXC1 (* skoXC1 (* skoXC1 (+ (/ (- 13.) 60.) (* skoXC1 (* skoXC1 (/ (- 3.) 10.)))))))) 0.) (<= (* skoXC1 (* skoXC1 (* skoXC1 (* skoXC1 (+ (/ (- 17.) 120.) (* skoXC1 (* skoXC1 (/ 3. 80.)))))))) 0.) (<= (* skoXC1 (* skoXC1 (+ (/ 1. 3.) (* skoXC1 (* skoXC1 (/ 3. 20.)))))) 1.) (<= (* skoXC1 (* skoXC1 (* skoXC1 (* skoXC1 (+ (/ 32. 15.) (* skoXC1 (* skoXC1 (+ (/ (- 296.) 15.) (* skoXC1 (* skoXC1 (+ (/ 391. 15.) (* skoXC1 (* skoXC1 (+ (/ (- 146.) 15.) (* skoXC1 (* skoXC1 (/ 3. 4.))))))))))))))))) 0.) (> (* skoXC1 (* skoXC1 (+ (/ 1. 6.) (* skoXC1 (* skoXC1 (/ 3. 40.)))))) (- 1.))) (succedent (> (* skoXC1 (+ (- 1.) (* skoXC1 (* skoXC1 (+ (/ (- 1.) 6.) (* skoXC1 (* skoXC1 (/ (- 3.) 40.)))))))) 0.)))
-----[end problem]-----

-----[begin problem]-----
% In Mathematica format:
Timing[Resolve[Exists[{skoXC1}, And[skoXC1*skoXC1>0,skoXC1*(-1+skoXC1*skoXC1*((1/3)+skoXC1*skoXC1*((3/20)+skoXC1*skoXC1*(5/56))))<=0,skoXC1*skoXC1*skoXC1*skoXC1*((-80/3)+skoXC1*skoXC1*((128/3)+skoXC1*skoXC1*((-55/3)+skoXC1*skoXC1*(5/3))))<=0,skoXC1*skoXC1*(256+skoXC1*skoXC1*(-160+skoXC1*skoXC1*(32+skoXC1*skoXC1*-1)))<=128,skoXC1*skoXC1*(1/3)<=1,skoXC1*(-1+skoXC1*skoXC1*(-1/6))<=0,skoXC1*skoXC1*skoXC1*skoXC1*(-2/3)<=0,skoXC1*skoXC1<=2,skoXC1*skoXC1*((-1/2)+skoXC1*skoXC1*(-1/6))<=0,skoXC1*skoXC1*(-1/6)<=1,skoXC1*(-1+skoXC1*skoXC1*(1/3))<=0,(7/8)>skoXC1,skoXC1>0,skoXC1*skoXC1*(-1/2)>-3,skoXC1*skoXC1*(1/2)<=3,skoXC1*skoXC1*(24+skoXC1*skoXC1*(-10+skoXC1*skoXC1))<=16,skoXC1*skoXC1*(-80+skoXC1*skoXC1*(40+skoXC1*skoXC1*(-6+skoXC1*skoXC1*(1/8))))>-48,skoXC1*skoXC1*(80+skoXC1*skoXC1*(-40+skoXC1*skoXC1*(6+skoXC1*skoXC1*(-1/8))))<=48,skoXC1*skoXC1>0,skoXC1*(-1+skoXC1*skoXC1*((1/3)+skoXC1*skoXC1*(3/20)))<=0,skoXC1*skoXC1*((-1/6)+skoXC1*skoXC1*(-3/40))<=1,skoXC1*skoXC1*((-1/2)+skoXC1*skoXC1*((7/120)+skoXC1*skoXC1*(-3/40)))<=0,skoXC1*skoXC1*skoXC1*skoXC1*((-13/60)+skoXC1*skoXC1*(-3/10))<=0,skoXC1*skoXC1*skoXC1*skoXC1*((-17/120)+skoXC1*skoXC1*(3/80))<=0,skoXC1*skoXC1*((1/3)+skoXC1*skoXC1*(3/20))<=1,skoXC1*skoXC1*skoXC1*skoXC1*((32/15)+skoXC1*skoXC1*((-296/15)+skoXC1*skoXC1*((391/15)+skoXC1*skoXC1*((-146/15)+skoXC1*skoXC1*(3/4)))))<=0,skoXC1*skoXC1*((1/6)+skoXC1*skoXC1*(3/40))>-1,skoXC1*(-1+skoXC1*skoXC1*((-1/6)+skoXC1*skoXC1*(-3/40)))<=0]], Reals]]

% In QepcadB format:
(E skoXC1) [[0<(skoXC1 skoXC1)]/\[[(skoXC1 (-1+(skoXC1 skoXC1 (1/3+(skoXC1 skoXC1 (3/20+(skoXC1 skoXC1 (5/56))))))))<=0]/\[[(skoXC1 skoXC1 skoXC1 skoXC1 (-80/3+(skoXC1 skoXC1 (128/3+(skoXC1 skoXC1 (-55/3+(skoXC1 skoXC1 (5/3))))))))<=0]/\[[(skoXC1 skoXC1 (256+(skoXC1 skoXC1 (-160+(skoXC1 skoXC1 (32+(skoXC1 skoXC1 (-1))))))))<=128]/\[[(skoXC1 skoXC1 (1/3))<=1]/\[[(skoXC1 (-1+(skoXC1 skoXC1 (-1/6))))<=0]/\[[(skoXC1 skoXC1 skoXC1 skoXC1 (-2/3))<=0]/\[[(skoXC1 skoXC1)<=2]/\[[(skoXC1 skoXC1 (-1/2+(skoXC1 skoXC1 (-1/6))))<=0]/\[[(skoXC1 skoXC1 (-1/6))<=1]/\[[(skoXC1 (-1+(skoXC1 skoXC1 (1/3))))<=0]/\[[skoXC1<7/8]/\[[0<skoXC1]/\[[-3<(skoXC1 skoXC1 (-1/2))]/\[[(skoXC1 skoXC1 (1/2))<=3]/\[[(skoXC1 skoXC1 (24+(skoXC1 skoXC1 (-10+(skoXC1 skoXC1)))))<=16]/\[[-48<(skoXC1 skoXC1 (-80+(skoXC1 skoXC1 (40+(skoXC1 skoXC1 (-6+(skoXC1 skoXC1 (1/8))))))))]/\[[(skoXC1 skoXC1 (80+(skoXC1 skoXC1 (-40+(skoXC1 skoXC1 (6+(skoXC1 skoXC1 (-1/8))))))))<=48]/\[[0<(skoXC1 skoXC1)]/\[[(skoXC1 (-1+(skoXC1 skoXC1 (1/3+(skoXC1 skoXC1 (3/20))))))<=0]/\[[(skoXC1 skoXC1 (-1/6+(skoXC1 skoXC1 (-3/40))))<=1]/\[[(skoXC1 skoXC1 (-1/2+(skoXC1 skoXC1 (7/120+(skoXC1 skoXC1 (-3/40))))))<=0]/\[[(skoXC1 skoXC1 skoXC1 skoXC1 (-13/60+(skoXC1 skoXC1 (-3/10))))<=0]/\[[(skoXC1 skoXC1 skoXC1 skoXC1 (-17/120+(skoXC1 skoXC1 (3/80))))<=0]/\[[(skoXC1 skoXC1 (1/3+(skoXC1 skoXC1 (3/20))))<=1]/\[[(skoXC1 skoXC1 skoXC1 skoXC1 (32/15+(skoXC1 skoXC1 (-296/15+(skoXC1 skoXC1 (391/15+(skoXC1 skoXC1 (-146/15+(skoXC1 skoXC1 (3/4))))))))))<=0]/\[[-1<(skoXC1 skoXC1 (1/6+(skoXC1 skoXC1 (3/40))))]/\[(skoXC1 (-1+(skoXC1 skoXC1 (-1/6+(skoXC1 skoXC1 (-3/40))))))<=0]]]]]]]]]]]]]]]]]]]]]]]]]]]].

% In SMTLib2 format:
(declare-fun skoXC1 () Real) (assert (and (> (* skoXC1 skoXC1) 0.) (and (<= (* skoXC1 (+ (- 1.) (* skoXC1 (* skoXC1 (+ (/ 1. 3.) (* skoXC1 (* skoXC1 (+ (/ 3. 20.) (* skoXC1 (* skoXC1 (/ 5. 56.))))))))))) 0.) (and (<= (* skoXC1 (* skoXC1 (* skoXC1 (* skoXC1 (+ (/ (- 80.) 3.) (* skoXC1 (* skoXC1 (+ (/ 128. 3.) (* skoXC1 (* skoXC1 (+ (/ (- 55.) 3.) (* skoXC1 (* skoXC1 (/ 5. 3.)))))))))))))) 0.) (and (<= (* skoXC1 (* skoXC1 (+ 256. (* skoXC1 (* skoXC1 (+ (- 160.) (* skoXC1 (* skoXC1 (+ 32. (* skoXC1 (* skoXC1 (- 1.)))))))))))) 128.) (and (<= (* skoXC1 (* skoXC1 (/ 1. 3.))) 1.) (and (<= (* skoXC1 (+ (- 1.) (* skoXC1 (* skoXC1 (/ (- 1.) 6.))))) 0.) (and (<= (* skoXC1 (* skoXC1 (* skoXC1 (* skoXC1 (/ (- 2.) 3.))))) 0.) (and (<= (* skoXC1 skoXC1) 2.) (and (<= (* skoXC1 (* skoXC1 (+ (/ (- 1.) 2.) (* skoXC1 (* skoXC1 (/ (- 1.) 6.)))))) 0.) (and (<= (* skoXC1 (* skoXC1 (/ (- 1.) 6.))) 1.) (and (<= (* skoXC1 (+ (- 1.) (* skoXC1 (* skoXC1 (/ 1. 3.))))) 0.) (and (> (/ 7. 8.) skoXC1) (and (> skoXC1 0.) (and (> (* skoXC1 (* skoXC1 (/ (- 1.) 2.))) (- 3.)) (and (<= (* skoXC1 (* skoXC1 (/ 1. 2.))) 3.) (and (<= (* skoXC1 (* skoXC1 (+ 24. (* skoXC1 (* skoXC1 (+ (- 10.) (* skoXC1 skoXC1))))))) 16.) (and (> (* skoXC1 (* skoXC1 (+ (- 80.) (* skoXC1 (* skoXC1 (+ 40. (* skoXC1 (* skoXC1 (+ (- 6.) (* skoXC1 (* skoXC1 (/ 1. 8.)))))))))))) (- 48.)) (and (<= (* skoXC1 (* skoXC1 (+ 80. (* skoXC1 (* skoXC1 (+ (- 40.) (* skoXC1 (* skoXC1 (+ 6. (* skoXC1 (* skoXC1 (/ (- 1.) 8.)))))))))))) 48.) (and (> (* skoXC1 skoXC1) 0.) (and (<= (* skoXC1 (+ (- 1.) (* skoXC1 (* skoXC1 (+ (/ 1. 3.) (* skoXC1 (* skoXC1 (/ 3. 20.)))))))) 0.) (and (<= (* skoXC1 (* skoXC1 (+ (/ (- 1.) 6.) (* skoXC1 (* skoXC1 (/ (- 3.) 40.)))))) 1.) (and (<= (* skoXC1 (* skoXC1 (+ (/ (- 1.) 2.) (* skoXC1 (* skoXC1 (+ (/ 7. 120.) (* skoXC1 (* skoXC1 (/ (- 3.) 40.))))))))) 0.) (and (<= (* skoXC1 (* skoXC1 (* skoXC1 (* skoXC1 (+ (/ (- 13.) 60.) (* skoXC1 (* skoXC1 (/ (- 3.) 10.)))))))) 0.) (and (<= (* skoXC1 (* skoXC1 (* skoXC1 (* skoXC1 (+ (/ (- 17.) 120.) (* skoXC1 (* skoXC1 (/ 3. 80.)))))))) 0.) (and (<= (* skoXC1 (* skoXC1 (+ (/ 1. 3.) (* skoXC1 (* skoXC1 (/ 3. 20.)))))) 1.) (and (<= (* skoXC1 (* skoXC1 (* skoXC1 (* skoXC1 (+ (/ 32. 15.) (* skoXC1 (* skoXC1 (+ (/ (- 296.) 15.) (* skoXC1 (* skoXC1 (+ (/ 391. 15.) (* skoXC1 (* skoXC1 (+ (/ (- 146.) 15.) (* skoXC1 (* skoXC1 (/ 3. 4.))))))))))))))))) 0.) (and (> (* skoXC1 (* skoXC1 (+ (/ 1. 6.) (* skoXC1 (* skoXC1 (/ 3. 40.)))))) (- 1.)) (<= (* skoXC1 (+ (- 1.) (* skoXC1 (* skoXC1 (+ (/ (- 1.) 6.) (* skoXC1 (* skoXC1 (/ (- 3.) 40.)))))))) 0.)))))))))))))))))))))))))))))

% In GRF format:
(sequent " MetiTarski formula " (antecedent (> (* skoXC1 skoXC1) 0.) (<= (* skoXC1 (+ (- 1.) (* skoXC1 (* skoXC1 (+ (/ 1. 3.) (* skoXC1 (* skoXC1 (+ (/ 3. 20.) (* skoXC1 (* skoXC1 (/ 5. 56.))))))))))) 0.) (<= (* skoXC1 (* skoXC1 (* skoXC1 (* skoXC1 (+ (/ (- 80.) 3.) (* skoXC1 (* skoXC1 (+ (/ 128. 3.) (* skoXC1 (* skoXC1 (+ (/ (- 55.) 3.) (* skoXC1 (* skoXC1 (/ 5. 3.)))))))))))))) 0.) (<= (* skoXC1 (* skoXC1 (+ 256. (* skoXC1 (* skoXC1 (+ (- 160.) (* skoXC1 (* skoXC1 (+ 32. (* skoXC1 (* skoXC1 (- 1.)))))))))))) 128.) (<= (* skoXC1 (* skoXC1 (/ 1. 3.))) 1.) (<= (* skoXC1 (+ (- 1.) (* skoXC1 (* skoXC1 (/ (- 1.) 6.))))) 0.) (<= (* skoXC1 (* skoXC1 (* skoXC1 (* skoXC1 (/ (- 2.) 3.))))) 0.) (<= (* skoXC1 skoXC1) 2.) (<= (* skoXC1 (* skoXC1 (+ (/ (- 1.) 2.) (* skoXC1 (* skoXC1 (/ (- 1.) 6.)))))) 0.) (<= (* skoXC1 (* skoXC1 (/ (- 1.) 6.))) 1.) (<= (* skoXC1 (+ (- 1.) (* skoXC1 (* skoXC1 (/ 1. 3.))))) 0.) (> (/ 7. 8.) skoXC1) (> skoXC1 0.) (> (* skoXC1 (* skoXC1 (/ (- 1.) 2.))) (- 3.)) (<= (* skoXC1 (* skoXC1 (/ 1. 2.))) 3.) (<= (* skoXC1 (* skoXC1 (+ 24. (* skoXC1 (* skoXC1 (+ (- 10.) (* skoXC1 skoXC1))))))) 16.) (> (* skoXC1 (* skoXC1 (+ (- 80.) (* skoXC1 (* skoXC1 (+ 40. (* skoXC1 (* skoXC1 (+ (- 6.) (* skoXC1 (* skoXC1 (/ 1. 8.)))))))))))) (- 48.)) (<= (* skoXC1 (* skoXC1 (+ 80. (* skoXC1 (* skoXC1 (+ (- 40.) (* skoXC1 (* skoXC1 (+ 6. (* skoXC1 (* skoXC1 (/ (- 1.) 8.)))))))))))) 48.) (> (* skoXC1 skoXC1) 0.) (<= (* skoXC1 (+ (- 1.) (* skoXC1 (* skoXC1 (+ (/ 1. 3.) (* skoXC1 (* skoXC1 (/ 3. 20.)))))))) 0.) (<= (* skoXC1 (* skoXC1 (+ (/ (- 1.) 6.) (* skoXC1 (* skoXC1 (/ (- 3.) 40.)))))) 1.) (<= (* skoXC1 (* skoXC1 (+ (/ (- 1.) 2.) (* skoXC1 (* skoXC1 (+ (/ 7. 120.) (* skoXC1 (* skoXC1 (/ (- 3.) 40.))))))))) 0.) (<= (* skoXC1 (* skoXC1 (* skoXC1 (* skoXC1 (+ (/ (- 13.) 60.) (* skoXC1 (* skoXC1 (/ (- 3.) 10.)))))))) 0.) (<= (* skoXC1 (* skoXC1 (* skoXC1 (* skoXC1 (+ (/ (- 17.) 120.) (* skoXC1 (* skoXC1 (/ 3. 80.)))))))) 0.) (<= (* skoXC1 (* skoXC1 (+ (/ 1. 3.) (* skoXC1 (* skoXC1 (/ 3. 20.)))))) 1.) (<= (* skoXC1 (* skoXC1 (* skoXC1 (* skoXC1 (+ (/ 32. 15.) (* skoXC1 (* skoXC1 (+ (/ (- 296.) 15.) (* skoXC1 (* skoXC1 (+ (/ 391. 15.) (* skoXC1 (* skoXC1 (+ (/ (- 146.) 15.) (* skoXC1 (* skoXC1 (/ 3. 4.))))))))))))))))) 0.) (> (* skoXC1 (* skoXC1 (+ (/ 1. 6.) (* skoXC1 (* skoXC1 (/ 3. 40.)))))) (- 1.))) (succedent (> (* skoXC1 (+ (- 1.) (* skoXC1 (* skoXC1 (+ (/ (- 1.) 6.) (* skoXC1 (* skoXC1 (/ (- 3.) 40.)))))))) 0.)))
-----[end problem]-----

-----[begin problem]-----
% In Mathematica format:
Timing[Resolve[Exists[{skoXC1}, And[skoXC1*skoXC1*((-1/2)+skoXC1*skoXC1*((7/120)+skoXC1*skoXC1*((33/560)+skoXC1*skoXC1*(-5/112))))<=0,skoXC1*skoXC1*((1/6)+skoXC1*skoXC1*((3/40)+skoXC1*skoXC1*(5/112)))>-1,skoXC1*(-1+skoXC1*skoXC1*((1/3)+skoXC1*skoXC1*((3/20)+skoXC1*skoXC1*(5/56))))<=0,skoXC1*skoXC1*skoXC1*skoXC1*((-80/3)+skoXC1*skoXC1*((128/3)+skoXC1*skoXC1*((-55/3)+skoXC1*skoXC1*(5/3))))<=0,skoXC1*skoXC1*(256+skoXC1*skoXC1*(-160+skoXC1*skoXC1*(32+skoXC1*skoXC1*-1)))<=128,skoXC1*skoXC1*(1/3)<=1,skoXC1*(-1+skoXC1*skoXC1*(-1/6))<=0,skoXC1*skoXC1*skoXC1*skoXC1*(-2/3)<=0,skoXC1*skoXC1<=2,skoXC1*skoXC1*((-1/2)+skoXC1*skoXC1*(-1/6))<=0,skoXC1*skoXC1*(-1/6)<=1,skoXC1*(-1+skoXC1*skoXC1*(1/3))<=0,(7/8)>skoXC1,skoXC1>0,skoXC1*skoXC1*(-1/2)>-3,skoXC1*skoXC1*(1/2)<=3,skoXC1*skoXC1*(24+skoXC1*skoXC1*(-10+skoXC1*skoXC1))<=16,skoXC1*skoXC1*(-80+skoXC1*skoXC1*(40+skoXC1*skoXC1*(-6+skoXC1*skoXC1*(1/8))))>-48,skoXC1*skoXC1*(80+skoXC1*skoXC1*(-40+skoXC1*skoXC1*(6+skoXC1*skoXC1*(-1/8))))<=48,skoXC1*skoXC1>0,skoXC1*(-1+skoXC1*skoXC1*((1/3)+skoXC1*skoXC1*(3/20)))<=0,skoXC1*skoXC1*((-1/6)+skoXC1*skoXC1*(-3/40))<=1,skoXC1*skoXC1*((-1/2)+skoXC1*skoXC1*((7/120)+skoXC1*skoXC1*(-3/40)))<=0,skoXC1*skoXC1*skoXC1*skoXC1*((-13/60)+skoXC1*skoXC1*(-3/10))<=0,skoXC1*skoXC1*skoXC1*skoXC1*((-17/120)+skoXC1*skoXC1*(3/80))<=0,skoXC1*skoXC1*((1/3)+skoXC1*skoXC1*(3/20))<=1,skoXC1*skoXC1*skoXC1*skoXC1*((32/15)+skoXC1*skoXC1*((-296/15)+skoXC1*skoXC1*((391/15)+skoXC1*skoXC1*((-146/15)+skoXC1*skoXC1*(3/4)))))<=0,skoXC1*skoXC1*((1/6)+skoXC1*skoXC1*(3/40))>-1,skoXC1*(-1+skoXC1*skoXC1*((-1/6)+skoXC1*skoXC1*(-3/40)))<=0]], Reals]]

% In QepcadB format:
(E skoXC1) [[(skoXC1 skoXC1 (-1/2+(skoXC1 skoXC1 (7/120+(skoXC1 skoXC1 (33/560+(skoXC1 skoXC1 (-5/112))))))))<=0]/\[[-1<(skoXC1 skoXC1 (1/6+(skoXC1 skoXC1 (3/40+(skoXC1 skoXC1 (5/112))))))]/\[[(skoXC1 (-1+(skoXC1 skoXC1 (1/3+(skoXC1 skoXC1 (3/20+(skoXC1 skoXC1 (5/56))))))))<=0]/\[[(skoXC1 skoXC1 skoXC1 skoXC1 (-80/3+(skoXC1 skoXC1 (128/3+(skoXC1 skoXC1 (-55/3+(skoXC1 skoXC1 (5/3))))))))<=0]/\[[(skoXC1 skoXC1 (256+(skoXC1 skoXC1 (-160+(skoXC1 skoXC1 (32+(skoXC1 skoXC1 (-1))))))))<=128]/\[[(skoXC1 skoXC1 (1/3))<=1]/\[[(skoXC1 (-1+(skoXC1 skoXC1 (-1/6))))<=0]/\[[(skoXC1 skoXC1 skoXC1 skoXC1 (-2/3))<=0]/\[[(skoXC1 skoXC1)<=2]/\[[(skoXC1 skoXC1 (-1/2+(skoXC1 skoXC1 (-1/6))))<=0]/\[[(skoXC1 skoXC1 (-1/6))<=1]/\[[(skoXC1 (-1+(skoXC1 skoXC1 (1/3))))<=0]/\[[skoXC1<7/8]/\[[0<skoXC1]/\[[-3<(skoXC1 skoXC1 (-1/2))]/\[[(skoXC1 skoXC1 (1/2))<=3]/\[[(skoXC1 skoXC1 (24+(skoXC1 skoXC1 (-10+(skoXC1 skoXC1)))))<=16]/\[[-48<(skoXC1 skoXC1 (-80+(skoXC1 skoXC1 (40+(skoXC1 skoXC1 (-6+(skoXC1 skoXC1 (1/8))))))))]/\[[(skoXC1 skoXC1 (80+(skoXC1 skoXC1 (-40+(skoXC1 skoXC1 (6+(skoXC1 skoXC1 (-1/8))))))))<=48]/\[[0<(skoXC1 skoXC1)]/\[[(skoXC1 (-1+(skoXC1 skoXC1 (1/3+(skoXC1 skoXC1 (3/20))))))<=0]/\[[(skoXC1 skoXC1 (-1/6+(skoXC1 skoXC1 (-3/40))))<=1]/\[[(skoXC1 skoXC1 (-1/2+(skoXC1 skoXC1 (7/120+(skoXC1 skoXC1 (-3/40))))))<=0]/\[[(skoXC1 skoXC1 skoXC1 skoXC1 (-13/60+(skoXC1 skoXC1 (-3/10))))<=0]/\[[(skoXC1 skoXC1 skoXC1 skoXC1 (-17/120+(skoXC1 skoXC1 (3/80))))<=0]/\[[(skoXC1 skoXC1 (1/3+(skoXC1 skoXC1 (3/20))))<=1]/\[[(skoXC1 skoXC1 skoXC1 skoXC1 (32/15+(skoXC1 skoXC1 (-296/15+(skoXC1 skoXC1 (391/15+(skoXC1 skoXC1 (-146/15+(skoXC1 skoXC1 (3/4))))))))))<=0]/\[[-1<(skoXC1 skoXC1 (1/6+(skoXC1 skoXC1 (3/40))))]/\[(skoXC1 (-1+(skoXC1 skoXC1 (-1/6+(skoXC1 skoXC1 (-3/40))))))<=0]]]]]]]]]]]]]]]]]]]]]]]]]]]]].

% In SMTLib2 format:
(declare-fun skoXC1 () Real) (assert (and (<= (* skoXC1 (* skoXC1 (+ (/ (- 1.) 2.) (* skoXC1 (* skoXC1 (+ (/ 7. 120.) (* skoXC1 (* skoXC1 (+ (/ 33. 560.) (* skoXC1 (* skoXC1 (/ (- 5.) 112.)))))))))))) 0.) (and (> (* skoXC1 (* skoXC1 (+ (/ 1. 6.) (* skoXC1 (* skoXC1 (+ (/ 3. 40.) (* skoXC1 (* skoXC1 (/ 5. 112.))))))))) (- 1.)) (and (<= (* skoXC1 (+ (- 1.) (* skoXC1 (* skoXC1 (+ (/ 1. 3.) (* skoXC1 (* skoXC1 (+ (/ 3. 20.) (* skoXC1 (* skoXC1 (/ 5. 56.))))))))))) 0.) (and (<= (* skoXC1 (* skoXC1 (* skoXC1 (* skoXC1 (+ (/ (- 80.) 3.) (* skoXC1 (* skoXC1 (+ (/ 128. 3.) (* skoXC1 (* skoXC1 (+ (/ (- 55.) 3.) (* skoXC1 (* skoXC1 (/ 5. 3.)))))))))))))) 0.) (and (<= (* skoXC1 (* skoXC1 (+ 256. (* skoXC1 (* skoXC1 (+ (- 160.) (* skoXC1 (* skoXC1 (+ 32. (* skoXC1 (* skoXC1 (- 1.)))))))))))) 128.) (and (<= (* skoXC1 (* skoXC1 (/ 1. 3.))) 1.) (and (<= (* skoXC1 (+ (- 1.) (* skoXC1 (* skoXC1 (/ (- 1.) 6.))))) 0.) (and (<= (* skoXC1 (* skoXC1 (* skoXC1 (* skoXC1 (/ (- 2.) 3.))))) 0.) (and (<= (* skoXC1 skoXC1) 2.) (and (<= (* skoXC1 (* skoXC1 (+ (/ (- 1.) 2.) (* skoXC1 (* skoXC1 (/ (- 1.) 6.)))))) 0.) (and (<= (* skoXC1 (* skoXC1 (/ (- 1.) 6.))) 1.) (and (<= (* skoXC1 (+ (- 1.) (* skoXC1 (* skoXC1 (/ 1. 3.))))) 0.) (and (> (/ 7. 8.) skoXC1) (and (> skoXC1 0.) (and (> (* skoXC1 (* skoXC1 (/ (- 1.) 2.))) (- 3.)) (and (<= (* skoXC1 (* skoXC1 (/ 1. 2.))) 3.) (and (<= (* skoXC1 (* skoXC1 (+ 24. (* skoXC1 (* skoXC1 (+ (- 10.) (* skoXC1 skoXC1))))))) 16.) (and (> (* skoXC1 (* skoXC1 (+ (- 80.) (* skoXC1 (* skoXC1 (+ 40. (* skoXC1 (* skoXC1 (+ (- 6.) (* skoXC1 (* skoXC1 (/ 1. 8.)))))))))))) (- 48.)) (and (<= (* skoXC1 (* skoXC1 (+ 80. (* skoXC1 (* skoXC1 (+ (- 40.) (* skoXC1 (* skoXC1 (+ 6. (* skoXC1 (* skoXC1 (/ (- 1.) 8.)))))))))))) 48.) (and (> (* skoXC1 skoXC1) 0.) (and (<= (* skoXC1 (+ (- 1.) (* skoXC1 (* skoXC1 (+ (/ 1. 3.) (* skoXC1 (* skoXC1 (/ 3. 20.)))))))) 0.) (and (<= (* skoXC1 (* skoXC1 (+ (/ (- 1.) 6.) (* skoXC1 (* skoXC1 (/ (- 3.) 40.)))))) 1.) (and (<= (* skoXC1 (* skoXC1 (+ (/ (- 1.) 2.) (* skoXC1 (* skoXC1 (+ (/ 7. 120.) (* skoXC1 (* skoXC1 (/ (- 3.) 40.))))))))) 0.) (and (<= (* skoXC1 (* skoXC1 (* skoXC1 (* skoXC1 (+ (/ (- 13.) 60.) (* skoXC1 (* skoXC1 (/ (- 3.) 10.)))))))) 0.) (and (<= (* skoXC1 (* skoXC1 (* skoXC1 (* skoXC1 (+ (/ (- 17.) 120.) (* skoXC1 (* skoXC1 (/ 3. 80.)))))))) 0.) (and (<= (* skoXC1 (* skoXC1 (+ (/ 1. 3.) (* skoXC1 (* skoXC1 (/ 3. 20.)))))) 1.) (and (<= (* skoXC1 (* skoXC1 (* skoXC1 (* skoXC1 (+ (/ 32. 15.) (* skoXC1 (* skoXC1 (+ (/ (- 296.) 15.) (* skoXC1 (* skoXC1 (+ (/ 391. 15.) (* skoXC1 (* skoXC1 (+ (/ (- 146.) 15.) (* skoXC1 (* skoXC1 (/ 3. 4.))))))))))))))))) 0.) (and (> (* skoXC1 (* skoXC1 (+ (/ 1. 6.) (* skoXC1 (* skoXC1 (/ 3. 40.)))))) (- 1.)) (<= (* skoXC1 (+ (- 1.) (* skoXC1 (* skoXC1 (+ (/ (- 1.) 6.) (* skoXC1 (* skoXC1 (/ (- 3.) 40.)))))))) 0.))))))))))))))))))))))))))))))

% In GRF format:
(sequent " MetiTarski formula " (antecedent (<= (* skoXC1 (* skoXC1 (+ (/ (- 1.) 2.) (* skoXC1 (* skoXC1 (+ (/ 7. 120.) (* skoXC1 (* skoXC1 (+ (/ 33. 560.) (* skoXC1 (* skoXC1 (/ (- 5.) 112.)))))))))))) 0.) (> (* skoXC1 (* skoXC1 (+ (/ 1. 6.) (* skoXC1 (* skoXC1 (+ (/ 3. 40.) (* skoXC1 (* skoXC1 (/ 5. 112.))))))))) (- 1.)) (<= (* skoXC1 (+ (- 1.) (* skoXC1 (* skoXC1 (+ (/ 1. 3.) (* skoXC1 (* skoXC1 (+ (/ 3. 20.) (* skoXC1 (* skoXC1 (/ 5. 56.))))))))))) 0.) (<= (* skoXC1 (* skoXC1 (* skoXC1 (* skoXC1 (+ (/ (- 80.) 3.) (* skoXC1 (* skoXC1 (+ (/ 128. 3.) (* skoXC1 (* skoXC1 (+ (/ (- 55.) 3.) (* skoXC1 (* skoXC1 (/ 5. 3.)))))))))))))) 0.) (<= (* skoXC1 (* skoXC1 (+ 256. (* skoXC1 (* skoXC1 (+ (- 160.) (* skoXC1 (* skoXC1 (+ 32. (* skoXC1 (* skoXC1 (- 1.)))))))))))) 128.) (<= (* skoXC1 (* skoXC1 (/ 1. 3.))) 1.) (<= (* skoXC1 (+ (- 1.) (* skoXC1 (* skoXC1 (/ (- 1.) 6.))))) 0.) (<= (* skoXC1 (* skoXC1 (* skoXC1 (* skoXC1 (/ (- 2.) 3.))))) 0.) (<= (* skoXC1 skoXC1) 2.) (<= (* skoXC1 (* skoXC1 (+ (/ (- 1.) 2.) (* skoXC1 (* skoXC1 (/ (- 1.) 6.)))))) 0.) (<= (* skoXC1 (* skoXC1 (/ (- 1.) 6.))) 1.) (<= (* skoXC1 (+ (- 1.) (* skoXC1 (* skoXC1 (/ 1. 3.))))) 0.) (> (/ 7. 8.) skoXC1) (> skoXC1 0.) (> (* skoXC1 (* skoXC1 (/ (- 1.) 2.))) (- 3.)) (<= (* skoXC1 (* skoXC1 (/ 1. 2.))) 3.) (<= (* skoXC1 (* skoXC1 (+ 24. (* skoXC1 (* skoXC1 (+ (- 10.) (* skoXC1 skoXC1))))))) 16.) (> (* skoXC1 (* skoXC1 (+ (- 80.) (* skoXC1 (* skoXC1 (+ 40. (* skoXC1 (* skoXC1 (+ (- 6.) (* skoXC1 (* skoXC1 (/ 1. 8.)))))))))))) (- 48.)) (<= (* skoXC1 (* skoXC1 (+ 80. (* skoXC1 (* skoXC1 (+ (- 40.) (* skoXC1 (* skoXC1 (+ 6. (* skoXC1 (* skoXC1 (/ (- 1.) 8.)))))))))))) 48.) (> (* skoXC1 skoXC1) 0.) (<= (* skoXC1 (+ (- 1.) (* skoXC1 (* skoXC1 (+ (/ 1. 3.) (* skoXC1 (* skoXC1 (/ 3. 20.)))))))) 0.) (<= (* skoXC1 (* skoXC1 (+ (/ (- 1.) 6.) (* skoXC1 (* skoXC1 (/ (- 3.) 40.)))))) 1.) (<= (* skoXC1 (* skoXC1 (+ (/ (- 1.) 2.) (* skoXC1 (* skoXC1 (+ (/ 7. 120.) (* skoXC1 (* skoXC1 (/ (- 3.) 40.))))))))) 0.) (<= (* skoXC1 (* skoXC1 (* skoXC1 (* skoXC1 (+ (/ (- 13.) 60.) (* skoXC1 (* skoXC1 (/ (- 3.) 10.)))))))) 0.) (<= (* skoXC1 (* skoXC1 (* skoXC1 (* skoXC1 (+ (/ (- 17.) 120.) (* skoXC1 (* skoXC1 (/ 3. 80.)))))))) 0.) (<= (* skoXC1 (* skoXC1 (+ (/ 1. 3.) (* skoXC1 (* skoXC1 (/ 3. 20.)))))) 1.) (<= (* skoXC1 (* skoXC1 (* skoXC1 (* skoXC1 (+ (/ 32. 15.) (* skoXC1 (* skoXC1 (+ (/ (- 296.) 15.) (* skoXC1 (* skoXC1 (+ (/ 391. 15.) (* skoXC1 (* skoXC1 (+ (/ (- 146.) 15.) (* skoXC1 (* skoXC1 (/ 3. 4.))))))))))))))))) 0.) (> (* skoXC1 (* skoXC1 (+ (/ 1. 6.) (* skoXC1 (* skoXC1 (/ 3. 40.)))))) (- 1.))) (succedent (> (* skoXC1 (+ (- 1.) (* skoXC1 (* skoXC1 (+ (/ (- 1.) 6.) (* skoXC1 (* skoXC1 (/ (- 3.) 40.)))))))) 0.)))
-----[end problem]-----

-----[begin problem]-----
% In Mathematica format:
Timing[Resolve[Exists[{skoXC1}, And[skoXC1*skoXC1*((-1/6)+skoXC1*skoXC1*((-3/40)+skoXC1*skoXC1*(-5/112)))<=1,skoXC1*(-1+skoXC1*skoXC1*((1/3)+skoXC1*skoXC1*((3/20)+skoXC1*skoXC1*(5/56))))<=0,skoXC1*skoXC1*skoXC1*skoXC1*((-80/3)+skoXC1*skoXC1*((128/3)+skoXC1*skoXC1*((-55/3)+skoXC1*skoXC1*(5/3))))<=0,skoXC1*skoXC1*(256+skoXC1*skoXC1*(-160+skoXC1*skoXC1*(32+skoXC1*skoXC1*-1)))<=128,skoXC1*skoXC1*(1/3)<=1,skoXC1*(-1+skoXC1*skoXC1*(-1/6))<=0,skoXC1*skoXC1*skoXC1*skoXC1*(-2/3)<=0,skoXC1*skoXC1<=2,skoXC1*skoXC1*((-1/2)+skoXC1*skoXC1*(-1/6))<=0,skoXC1*skoXC1*(-1/6)<=1,skoXC1*(-1+skoXC1*skoXC1*(1/3))<=0,(7/8)>skoXC1,skoXC1>0,skoXC1*skoXC1*(-1/2)>-3,skoXC1*skoXC1*(1/2)<=3,skoXC1*skoXC1*(24+skoXC1*skoXC1*(-10+skoXC1*skoXC1))<=16,skoXC1*skoXC1*(-80+skoXC1*skoXC1*(40+skoXC1*skoXC1*(-6+skoXC1*skoXC1*(1/8))))>-48,skoXC1*skoXC1*(80+skoXC1*skoXC1*(-40+skoXC1*skoXC1*(6+skoXC1*skoXC1*(-1/8))))<=48,skoXC1*skoXC1>0,skoXC1*(-1+skoXC1*skoXC1*((1/3)+skoXC1*skoXC1*(3/20)))<=0,skoXC1*skoXC1*((-1/6)+skoXC1*skoXC1*(-3/40))<=1,skoXC1*skoXC1*((-1/2)+skoXC1*skoXC1*((7/120)+skoXC1*skoXC1*(-3/40)))<=0,skoXC1*skoXC1*skoXC1*skoXC1*((-13/60)+skoXC1*skoXC1*(-3/10))<=0,skoXC1*skoXC1*skoXC1*skoXC1*((-17/120)+skoXC1*skoXC1*(3/80))<=0,skoXC1*skoXC1*((1/3)+skoXC1*skoXC1*(3/20))<=1,skoXC1*skoXC1*skoXC1*skoXC1*((32/15)+skoXC1*skoXC1*((-296/15)+skoXC1*skoXC1*((391/15)+skoXC1*skoXC1*((-146/15)+skoXC1*skoXC1*(3/4)))))<=0,skoXC1*skoXC1*((1/6)+skoXC1*skoXC1*(3/40))>-1,skoXC1*(-1+skoXC1*skoXC1*((-1/6)+skoXC1*skoXC1*(-3/40)))<=0]], Reals]]

% In QepcadB format:
(E skoXC1) [[(skoXC1 skoXC1 (-1/6+(skoXC1 skoXC1 (-3/40+(skoXC1 skoXC1 (-5/112))))))<=1]/\[[(skoXC1 (-1+(skoXC1 skoXC1 (1/3+(skoXC1 skoXC1 (3/20+(skoXC1 skoXC1 (5/56))))))))<=0]/\[[(skoXC1 skoXC1 skoXC1 skoXC1 (-80/3+(skoXC1 skoXC1 (128/3+(skoXC1 skoXC1 (-55/3+(skoXC1 skoXC1 (5/3))))))))<=0]/\[[(skoXC1 skoXC1 (256+(skoXC1 skoXC1 (-160+(skoXC1 skoXC1 (32+(skoXC1 skoXC1 (-1))))))))<=128]/\[[(skoXC1 skoXC1 (1/3))<=1]/\[[(skoXC1 (-1+(skoXC1 skoXC1 (-1/6))))<=0]/\[[(skoXC1 skoXC1 skoXC1 skoXC1 (-2/3))<=0]/\[[(skoXC1 skoXC1)<=2]/\[[(skoXC1 skoXC1 (-1/2+(skoXC1 skoXC1 (-1/6))))<=0]/\[[(skoXC1 skoXC1 (-1/6))<=1]/\[[(skoXC1 (-1+(skoXC1 skoXC1 (1/3))))<=0]/\[[skoXC1<7/8]/\[[0<skoXC1]/\[[-3<(skoXC1 skoXC1 (-1/2))]/\[[(skoXC1 skoXC1 (1/2))<=3]/\[[(skoXC1 skoXC1 (24+(skoXC1 skoXC1 (-10+(skoXC1 skoXC1)))))<=16]/\[[-48<(skoXC1 skoXC1 (-80+(skoXC1 skoXC1 (40+(skoXC1 skoXC1 (-6+(skoXC1 skoXC1 (1/8))))))))]/\[[(skoXC1 skoXC1 (80+(skoXC1 skoXC1 (-40+(skoXC1 skoXC1 (6+(skoXC1 skoXC1 (-1/8))))))))<=48]/\[[0<(skoXC1 skoXC1)]/\[[(skoXC1 (-1+(skoXC1 skoXC1 (1/3+(skoXC1 skoXC1 (3/20))))))<=0]/\[[(skoXC1 skoXC1 (-1/6+(skoXC1 skoXC1 (-3/40))))<=1]/\[[(skoXC1 skoXC1 (-1/2+(skoXC1 skoXC1 (7/120+(skoXC1 skoXC1 (-3/40))))))<=0]/\[[(skoXC1 skoXC1 skoXC1 skoXC1 (-13/60+(skoXC1 skoXC1 (-3/10))))<=0]/\[[(skoXC1 skoXC1 skoXC1 skoXC1 (-17/120+(skoXC1 skoXC1 (3/80))))<=0]/\[[(skoXC1 skoXC1 (1/3+(skoXC1 skoXC1 (3/20))))<=1]/\[[(skoXC1 skoXC1 skoXC1 skoXC1 (32/15+(skoXC1 skoXC1 (-296/15+(skoXC1 skoXC1 (391/15+(skoXC1 skoXC1 (-146/15+(skoXC1 skoXC1 (3/4))))))))))<=0]/\[[-1<(skoXC1 skoXC1 (1/6+(skoXC1 skoXC1 (3/40))))]/\[(skoXC1 (-1+(skoXC1 skoXC1 (-1/6+(skoXC1 skoXC1 (-3/40))))))<=0]]]]]]]]]]]]]]]]]]]]]]]]]]]].

% In SMTLib2 format:
(declare-fun skoXC1 () Real) (assert (and (<= (* skoXC1 (* skoXC1 (+ (/ (- 1.) 6.) (* skoXC1 (* skoXC1 (+ (/ (- 3.) 40.) (* skoXC1 (* skoXC1 (/ (- 5.) 112.))))))))) 1.) (and (<= (* skoXC1 (+ (- 1.) (* skoXC1 (* skoXC1 (+ (/ 1. 3.) (* skoXC1 (* skoXC1 (+ (/ 3. 20.) (* skoXC1 (* skoXC1 (/ 5. 56.))))))))))) 0.) (and (<= (* skoXC1 (* skoXC1 (* skoXC1 (* skoXC1 (+ (/ (- 80.) 3.) (* skoXC1 (* skoXC1 (+ (/ 128. 3.) (* skoXC1 (* skoXC1 (+ (/ (- 55.) 3.) (* skoXC1 (* skoXC1 (/ 5. 3.)))))))))))))) 0.) (and (<= (* skoXC1 (* skoXC1 (+ 256. (* skoXC1 (* skoXC1 (+ (- 160.) (* skoXC1 (* skoXC1 (+ 32. (* skoXC1 (* skoXC1 (- 1.)))))))))))) 128.) (and (<= (* skoXC1 (* skoXC1 (/ 1. 3.))) 1.) (and (<= (* skoXC1 (+ (- 1.) (* skoXC1 (* skoXC1 (/ (- 1.) 6.))))) 0.) (and (<= (* skoXC1 (* skoXC1 (* skoXC1 (* skoXC1 (/ (- 2.) 3.))))) 0.) (and (<= (* skoXC1 skoXC1) 2.) (and (<= (* skoXC1 (* skoXC1 (+ (/ (- 1.) 2.) (* skoXC1 (* skoXC1 (/ (- 1.) 6.)))))) 0.) (and (<= (* skoXC1 (* skoXC1 (/ (- 1.) 6.))) 1.) (and (<= (* skoXC1 (+ (- 1.) (* skoXC1 (* skoXC1 (/ 1. 3.))))) 0.) (and (> (/ 7. 8.) skoXC1) (and (> skoXC1 0.) (and (> (* skoXC1 (* skoXC1 (/ (- 1.) 2.))) (- 3.)) (and (<= (* skoXC1 (* skoXC1 (/ 1. 2.))) 3.) (and (<= (* skoXC1 (* skoXC1 (+ 24. (* skoXC1 (* skoXC1 (+ (- 10.) (* skoXC1 skoXC1))))))) 16.) (and (> (* skoXC1 (* skoXC1 (+ (- 80.) (* skoXC1 (* skoXC1 (+ 40. (* skoXC1 (* skoXC1 (+ (- 6.) (* skoXC1 (* skoXC1 (/ 1. 8.)))))))))))) (- 48.)) (and (<= (* skoXC1 (* skoXC1 (+ 80. (* skoXC1 (* skoXC1 (+ (- 40.) (* skoXC1 (* skoXC1 (+ 6. (* skoXC1 (* skoXC1 (/ (- 1.) 8.)))))))))))) 48.) (and (> (* skoXC1 skoXC1) 0.) (and (<= (* skoXC1 (+ (- 1.) (* skoXC1 (* skoXC1 (+ (/ 1. 3.) (* skoXC1 (* skoXC1 (/ 3. 20.)))))))) 0.) (and (<= (* skoXC1 (* skoXC1 (+ (/ (- 1.) 6.) (* skoXC1 (* skoXC1 (/ (- 3.) 40.)))))) 1.) (and (<= (* skoXC1 (* skoXC1 (+ (/ (- 1.) 2.) (* skoXC1 (* skoXC1 (+ (/ 7. 120.) (* skoXC1 (* skoXC1 (/ (- 3.) 40.))))))))) 0.) (and (<= (* skoXC1 (* skoXC1 (* skoXC1 (* skoXC1 (+ (/ (- 13.) 60.) (* skoXC1 (* skoXC1 (/ (- 3.) 10.)))))))) 0.) (and (<= (* skoXC1 (* skoXC1 (* skoXC1 (* skoXC1 (+ (/ (- 17.) 120.) (* skoXC1 (* skoXC1 (/ 3. 80.)))))))) 0.) (and (<= (* skoXC1 (* skoXC1 (+ (/ 1. 3.) (* skoXC1 (* skoXC1 (/ 3. 20.)))))) 1.) (and (<= (* skoXC1 (* skoXC1 (* skoXC1 (* skoXC1 (+ (/ 32. 15.) (* skoXC1 (* skoXC1 (+ (/ (- 296.) 15.) (* skoXC1 (* skoXC1 (+ (/ 391. 15.) (* skoXC1 (* skoXC1 (+ (/ (- 146.) 15.) (* skoXC1 (* skoXC1 (/ 3. 4.))))))))))))))))) 0.) (and (> (* skoXC1 (* skoXC1 (+ (/ 1. 6.) (* skoXC1 (* skoXC1 (/ 3. 40.)))))) (- 1.)) (<= (* skoXC1 (+ (- 1.) (* skoXC1 (* skoXC1 (+ (/ (- 1.) 6.) (* skoXC1 (* skoXC1 (/ (- 3.) 40.)))))))) 0.)))))))))))))))))))))))))))))

% In GRF format:
(sequent " MetiTarski formula " (antecedent (<= (* skoXC1 (* skoXC1 (+ (/ (- 1.) 6.) (* skoXC1 (* skoXC1 (+ (/ (- 3.) 40.) (* skoXC1 (* skoXC1 (/ (- 5.) 112.))))))))) 1.) (<= (* skoXC1 (+ (- 1.) (* skoXC1 (* skoXC1 (+ (/ 1. 3.) (* skoXC1 (* skoXC1 (+ (/ 3. 20.) (* skoXC1 (* skoXC1 (/ 5. 56.))))))))))) 0.) (<= (* skoXC1 (* skoXC1 (* skoXC1 (* skoXC1 (+ (/ (- 80.) 3.) (* skoXC1 (* skoXC1 (+ (/ 128. 3.) (* skoXC1 (* skoXC1 (+ (/ (- 55.) 3.) (* skoXC1 (* skoXC1 (/ 5. 3.)))))))))))))) 0.) (<= (* skoXC1 (* skoXC1 (+ 256. (* skoXC1 (* skoXC1 (+ (- 160.) (* skoXC1 (* skoXC1 (+ 32. (* skoXC1 (* skoXC1 (- 1.)))))))))))) 128.) (<= (* skoXC1 (* skoXC1 (/ 1. 3.))) 1.) (<= (* skoXC1 (+ (- 1.) (* skoXC1 (* skoXC1 (/ (- 1.) 6.))))) 0.) (<= (* skoXC1 (* skoXC1 (* skoXC1 (* skoXC1 (/ (- 2.) 3.))))) 0.) (<= (* skoXC1 skoXC1) 2.) (<= (* skoXC1 (* skoXC1 (+ (/ (- 1.) 2.) (* skoXC1 (* skoXC1 (/ (- 1.) 6.)))))) 0.) (<= (* skoXC1 (* skoXC1 (/ (- 1.) 6.))) 1.) (<= (* skoXC1 (+ (- 1.) (* skoXC1 (* skoXC1 (/ 1. 3.))))) 0.) (> (/ 7. 8.) skoXC1) (> skoXC1 0.) (> (* skoXC1 (* skoXC1 (/ (- 1.) 2.))) (- 3.)) (<= (* skoXC1 (* skoXC1 (/ 1. 2.))) 3.) (<= (* skoXC1 (* skoXC1 (+ 24. (* skoXC1 (* skoXC1 (+ (- 10.) (* skoXC1 skoXC1))))))) 16.) (> (* skoXC1 (* skoXC1 (+ (- 80.) (* skoXC1 (* skoXC1 (+ 40. (* skoXC1 (* skoXC1 (+ (- 6.) (* skoXC1 (* skoXC1 (/ 1. 8.)))))))))))) (- 48.)) (<= (* skoXC1 (* skoXC1 (+ 80. (* skoXC1 (* skoXC1 (+ (- 40.) (* skoXC1 (* skoXC1 (+ 6. (* skoXC1 (* skoXC1 (/ (- 1.) 8.)))))))))))) 48.) (> (* skoXC1 skoXC1) 0.) (<= (* skoXC1 (+ (- 1.) (* skoXC1 (* skoXC1 (+ (/ 1. 3.) (* skoXC1 (* skoXC1 (/ 3. 20.)))))))) 0.) (<= (* skoXC1 (* skoXC1 (+ (/ (- 1.) 6.) (* skoXC1 (* skoXC1 (/ (- 3.) 40.)))))) 1.) (<= (* skoXC1 (* skoXC1 (+ (/ (- 1.) 2.) (* skoXC1 (* skoXC1 (+ (/ 7. 120.) (* skoXC1 (* skoXC1 (/ (- 3.) 40.))))))))) 0.) (<= (* skoXC1 (* skoXC1 (* skoXC1 (* skoXC1 (+ (/ (- 13.) 60.) (* skoXC1 (* skoXC1 (/ (- 3.) 10.)))))))) 0.) (<= (* skoXC1 (* skoXC1 (* skoXC1 (* skoXC1 (+ (/ (- 17.) 120.) (* skoXC1 (* skoXC1 (/ 3. 80.)))))))) 0.) (<= (* skoXC1 (* skoXC1 (+ (/ 1. 3.) (* skoXC1 (* skoXC1 (/ 3. 20.)))))) 1.) (<= (* skoXC1 (* skoXC1 (* skoXC1 (* skoXC1 (+ (/ 32. 15.) (* skoXC1 (* skoXC1 (+ (/ (- 296.) 15.) (* skoXC1 (* skoXC1 (+ (/ 391. 15.) (* skoXC1 (* skoXC1 (+ (/ (- 146.) 15.) (* skoXC1 (* skoXC1 (/ 3. 4.))))))))))))))))) 0.) (> (* skoXC1 (* skoXC1 (+ (/ 1. 6.) (* skoXC1 (* skoXC1 (/ 3. 40.)))))) (- 1.))) (succedent (> (* skoXC1 (+ (- 1.) (* skoXC1 (* skoXC1 (+ (/ (- 1.) 6.) (* skoXC1 (* skoXC1 (/ (- 3.) 40.)))))))) 0.)))
-----[end problem]-----

-----[begin problem]-----
% In Mathematica format:
Timing[Resolve[Exists[{skoXC1}, And[skoXC1*skoXC1*((-1/2)+skoXC1*skoXC1*((7/120)+skoXC1*skoXC1*((33/560)+skoXC1*skoXC1*(-5/112))))<=0,skoXC1*skoXC1*((-1/6)+skoXC1*skoXC1*((-3/40)+skoXC1*skoXC1*(-5/112)))<=1,skoXC1*(-1+skoXC1*skoXC1*((1/3)+skoXC1*skoXC1*((3/20)+skoXC1*skoXC1*(5/56))))<=0,skoXC1*skoXC1*skoXC1*skoXC1*((-80/3)+skoXC1*skoXC1*((128/3)+skoXC1*skoXC1*((-55/3)+skoXC1*skoXC1*(5/3))))<=0,skoXC1*skoXC1*(256+skoXC1*skoXC1*(-160+skoXC1*skoXC1*(32+skoXC1*skoXC1*-1)))<=128,skoXC1*skoXC1*(1/3)<=1,skoXC1*(-1+skoXC1*skoXC1*(-1/6))<=0,skoXC1*skoXC1*skoXC1*skoXC1*(-2/3)<=0,skoXC1*skoXC1<=2,skoXC1*skoXC1*((-1/2)+skoXC1*skoXC1*(-1/6))<=0,skoXC1*skoXC1*(-1/6)<=1,skoXC1*(-1+skoXC1*skoXC1*(1/3))<=0,(7/8)>skoXC1,skoXC1>0,skoXC1*skoXC1*(-1/2)>-3,skoXC1*skoXC1*(1/2)<=3,skoXC1*skoXC1*(24+skoXC1*skoXC1*(-10+skoXC1*skoXC1))<=16,skoXC1*skoXC1*(-80+skoXC1*skoXC1*(40+skoXC1*skoXC1*(-6+skoXC1*skoXC1*(1/8))))>-48,skoXC1*skoXC1*(80+skoXC1*skoXC1*(-40+skoXC1*skoXC1*(6+skoXC1*skoXC1*(-1/8))))<=48,skoXC1*skoXC1>0,skoXC1*(-1+skoXC1*skoXC1*((1/3)+skoXC1*skoXC1*(3/20)))<=0,skoXC1*skoXC1*((-1/6)+skoXC1*skoXC1*(-3/40))<=1,skoXC1*skoXC1*((-1/2)+skoXC1*skoXC1*((7/120)+skoXC1*skoXC1*(-3/40)))<=0,skoXC1*skoXC1*skoXC1*skoXC1*((-13/60)+skoXC1*skoXC1*(-3/10))<=0,skoXC1*skoXC1*skoXC1*skoXC1*((-17/120)+skoXC1*skoXC1*(3/80))<=0,skoXC1*skoXC1*((1/3)+skoXC1*skoXC1*(3/20))<=1,skoXC1*skoXC1*skoXC1*skoXC1*((32/15)+skoXC1*skoXC1*((-296/15)+skoXC1*skoXC1*((391/15)+skoXC1*skoXC1*((-146/15)+skoXC1*skoXC1*(3/4)))))<=0,skoXC1*skoXC1*((1/6)+skoXC1*skoXC1*(3/40))>-1,skoXC1*(-1+skoXC1*skoXC1*((-1/6)+skoXC1*skoXC1*(-3/40)))<=0]], Reals]]

% In QepcadB format:
(E skoXC1) [[(skoXC1 skoXC1 (-1/2+(skoXC1 skoXC1 (7/120+(skoXC1 skoXC1 (33/560+(skoXC1 skoXC1 (-5/112))))))))<=0]/\[[(skoXC1 skoXC1 (-1/6+(skoXC1 skoXC1 (-3/40+(skoXC1 skoXC1 (-5/112))))))<=1]/\[[(skoXC1 (-1+(skoXC1 skoXC1 (1/3+(skoXC1 skoXC1 (3/20+(skoXC1 skoXC1 (5/56))))))))<=0]/\[[(skoXC1 skoXC1 skoXC1 skoXC1 (-80/3+(skoXC1 skoXC1 (128/3+(skoXC1 skoXC1 (-55/3+(skoXC1 skoXC1 (5/3))))))))<=0]/\[[(skoXC1 skoXC1 (256+(skoXC1 skoXC1 (-160+(skoXC1 skoXC1 (32+(skoXC1 skoXC1 (-1))))))))<=128]/\[[(skoXC1 skoXC1 (1/3))<=1]/\[[(skoXC1 (-1+(skoXC1 skoXC1 (-1/6))))<=0]/\[[(skoXC1 skoXC1 skoXC1 skoXC1 (-2/3))<=0]/\[[(skoXC1 skoXC1)<=2]/\[[(skoXC1 skoXC1 (-1/2+(skoXC1 skoXC1 (-1/6))))<=0]/\[[(skoXC1 skoXC1 (-1/6))<=1]/\[[(skoXC1 (-1+(skoXC1 skoXC1 (1/3))))<=0]/\[[skoXC1<7/8]/\[[0<skoXC1]/\[[-3<(skoXC1 skoXC1 (-1/2))]/\[[(skoXC1 skoXC1 (1/2))<=3]/\[[(skoXC1 skoXC1 (24+(skoXC1 skoXC1 (-10+(skoXC1 skoXC1)))))<=16]/\[[-48<(skoXC1 skoXC1 (-80+(skoXC1 skoXC1 (40+(skoXC1 skoXC1 (-6+(skoXC1 skoXC1 (1/8))))))))]/\[[(skoXC1 skoXC1 (80+(skoXC1 skoXC1 (-40+(skoXC1 skoXC1 (6+(skoXC1 skoXC1 (-1/8))))))))<=48]/\[[0<(skoXC1 skoXC1)]/\[[(skoXC1 (-1+(skoXC1 skoXC1 (1/3+(skoXC1 skoXC1 (3/20))))))<=0]/\[[(skoXC1 skoXC1 (-1/6+(skoXC1 skoXC1 (-3/40))))<=1]/\[[(skoXC1 skoXC1 (-1/2+(skoXC1 skoXC1 (7/120+(skoXC1 skoXC1 (-3/40))))))<=0]/\[[(skoXC1 skoXC1 skoXC1 skoXC1 (-13/60+(skoXC1 skoXC1 (-3/10))))<=0]/\[[(skoXC1 skoXC1 skoXC1 skoXC1 (-17/120+(skoXC1 skoXC1 (3/80))))<=0]/\[[(skoXC1 skoXC1 (1/3+(skoXC1 skoXC1 (3/20))))<=1]/\[[(skoXC1 skoXC1 skoXC1 skoXC1 (32/15+(skoXC1 skoXC1 (-296/15+(skoXC1 skoXC1 (391/15+(skoXC1 skoXC1 (-146/15+(skoXC1 skoXC1 (3/4))))))))))<=0]/\[[-1<(skoXC1 skoXC1 (1/6+(skoXC1 skoXC1 (3/40))))]/\[(skoXC1 (-1+(skoXC1 skoXC1 (-1/6+(skoXC1 skoXC1 (-3/40))))))<=0]]]]]]]]]]]]]]]]]]]]]]]]]]]]].

% In SMTLib2 format:
(declare-fun skoXC1 () Real) (assert (and (<= (* skoXC1 (* skoXC1 (+ (/ (- 1.) 2.) (* skoXC1 (* skoXC1 (+ (/ 7. 120.) (* skoXC1 (* skoXC1 (+ (/ 33. 560.) (* skoXC1 (* skoXC1 (/ (- 5.) 112.)))))))))))) 0.) (and (<= (* skoXC1 (* skoXC1 (+ (/ (- 1.) 6.) (* skoXC1 (* skoXC1 (+ (/ (- 3.) 40.) (* skoXC1 (* skoXC1 (/ (- 5.) 112.))))))))) 1.) (and (<= (* skoXC1 (+ (- 1.) (* skoXC1 (* skoXC1 (+ (/ 1. 3.) (* skoXC1 (* skoXC1 (+ (/ 3. 20.) (* skoXC1 (* skoXC1 (/ 5. 56.))))))))))) 0.) (and (<= (* skoXC1 (* skoXC1 (* skoXC1 (* skoXC1 (+ (/ (- 80.) 3.) (* skoXC1 (* skoXC1 (+ (/ 128. 3.) (* skoXC1 (* skoXC1 (+ (/ (- 55.) 3.) (* skoXC1 (* skoXC1 (/ 5. 3.)))))))))))))) 0.) (and (<= (* skoXC1 (* skoXC1 (+ 256. (* skoXC1 (* skoXC1 (+ (- 160.) (* skoXC1 (* skoXC1 (+ 32. (* skoXC1 (* skoXC1 (- 1.)))))))))))) 128.) (and (<= (* skoXC1 (* skoXC1 (/ 1. 3.))) 1.) (and (<= (* skoXC1 (+ (- 1.) (* skoXC1 (* skoXC1 (/ (- 1.) 6.))))) 0.) (and (<= (* skoXC1 (* skoXC1 (* skoXC1 (* skoXC1 (/ (- 2.) 3.))))) 0.) (and (<= (* skoXC1 skoXC1) 2.) (and (<= (* skoXC1 (* skoXC1 (+ (/ (- 1.) 2.) (* skoXC1 (* skoXC1 (/ (- 1.) 6.)))))) 0.) (and (<= (* skoXC1 (* skoXC1 (/ (- 1.) 6.))) 1.) (and (<= (* skoXC1 (+ (- 1.) (* skoXC1 (* skoXC1 (/ 1. 3.))))) 0.) (and (> (/ 7. 8.) skoXC1) (and (> skoXC1 0.) (and (> (* skoXC1 (* skoXC1 (/ (- 1.) 2.))) (- 3.)) (and (<= (* skoXC1 (* skoXC1 (/ 1. 2.))) 3.) (and (<= (* skoXC1 (* skoXC1 (+ 24. (* skoXC1 (* skoXC1 (+ (- 10.) (* skoXC1 skoXC1))))))) 16.) (and (> (* skoXC1 (* skoXC1 (+ (- 80.) (* skoXC1 (* skoXC1 (+ 40. (* skoXC1 (* skoXC1 (+ (- 6.) (* skoXC1 (* skoXC1 (/ 1. 8.)))))))))))) (- 48.)) (and (<= (* skoXC1 (* skoXC1 (+ 80. (* skoXC1 (* skoXC1 (+ (- 40.) (* skoXC1 (* skoXC1 (+ 6. (* skoXC1 (* skoXC1 (/ (- 1.) 8.)))))))))))) 48.) (and (> (* skoXC1 skoXC1) 0.) (and (<= (* skoXC1 (+ (- 1.) (* skoXC1 (* skoXC1 (+ (/ 1. 3.) (* skoXC1 (* skoXC1 (/ 3. 20.)))))))) 0.) (and (<= (* skoXC1 (* skoXC1 (+ (/ (- 1.) 6.) (* skoXC1 (* skoXC1 (/ (- 3.) 40.)))))) 1.) (and (<= (* skoXC1 (* skoXC1 (+ (/ (- 1.) 2.) (* skoXC1 (* skoXC1 (+ (/ 7. 120.) (* skoXC1 (* skoXC1 (/ (- 3.) 40.))))))))) 0.) (and (<= (* skoXC1 (* skoXC1 (* skoXC1 (* skoXC1 (+ (/ (- 13.) 60.) (* skoXC1 (* skoXC1 (/ (- 3.) 10.)))))))) 0.) (and (<= (* skoXC1 (* skoXC1 (* skoXC1 (* skoXC1 (+ (/ (- 17.) 120.) (* skoXC1 (* skoXC1 (/ 3. 80.)))))))) 0.) (and (<= (* skoXC1 (* skoXC1 (+ (/ 1. 3.) (* skoXC1 (* skoXC1 (/ 3. 20.)))))) 1.) (and (<= (* skoXC1 (* skoXC1 (* skoXC1 (* skoXC1 (+ (/ 32. 15.) (* skoXC1 (* skoXC1 (+ (/ (- 296.) 15.) (* skoXC1 (* skoXC1 (+ (/ 391. 15.) (* skoXC1 (* skoXC1 (+ (/ (- 146.) 15.) (* skoXC1 (* skoXC1 (/ 3. 4.))))))))))))))))) 0.) (and (> (* skoXC1 (* skoXC1 (+ (/ 1. 6.) (* skoXC1 (* skoXC1 (/ 3. 40.)))))) (- 1.)) (<= (* skoXC1 (+ (- 1.) (* skoXC1 (* skoXC1 (+ (/ (- 1.) 6.) (* skoXC1 (* skoXC1 (/ (- 3.) 40.)))))))) 0.))))))))))))))))))))))))))))))

% In GRF format:
(sequent " MetiTarski formula " (antecedent (<= (* skoXC1 (* skoXC1 (+ (/ (- 1.) 2.) (* skoXC1 (* skoXC1 (+ (/ 7. 120.) (* skoXC1 (* skoXC1 (+ (/ 33. 560.) (* skoXC1 (* skoXC1 (/ (- 5.) 112.)))))))))))) 0.) (<= (* skoXC1 (* skoXC1 (+ (/ (- 1.) 6.) (* skoXC1 (* skoXC1 (+ (/ (- 3.) 40.) (* skoXC1 (* skoXC1 (/ (- 5.) 112.))))))))) 1.) (<= (* skoXC1 (+ (- 1.) (* skoXC1 (* skoXC1 (+ (/ 1. 3.) (* skoXC1 (* skoXC1 (+ (/ 3. 20.) (* skoXC1 (* skoXC1 (/ 5. 56.))))))))))) 0.) (<= (* skoXC1 (* skoXC1 (* skoXC1 (* skoXC1 (+ (/ (- 80.) 3.) (* skoXC1 (* skoXC1 (+ (/ 128. 3.) (* skoXC1 (* skoXC1 (+ (/ (- 55.) 3.) (* skoXC1 (* skoXC1 (/ 5. 3.)))))))))))))) 0.) (<= (* skoXC1 (* skoXC1 (+ 256. (* skoXC1 (* skoXC1 (+ (- 160.) (* skoXC1 (* skoXC1 (+ 32. (* skoXC1 (* skoXC1 (- 1.)))))))))))) 128.) (<= (* skoXC1 (* skoXC1 (/ 1. 3.))) 1.) (<= (* skoXC1 (+ (- 1.) (* skoXC1 (* skoXC1 (/ (- 1.) 6.))))) 0.) (<= (* skoXC1 (* skoXC1 (* skoXC1 (* skoXC1 (/ (- 2.) 3.))))) 0.) (<= (* skoXC1 skoXC1) 2.) (<= (* skoXC1 (* skoXC1 (+ (/ (- 1.) 2.) (* skoXC1 (* skoXC1 (/ (- 1.) 6.)))))) 0.) (<= (* skoXC1 (* skoXC1 (/ (- 1.) 6.))) 1.) (<= (* skoXC1 (+ (- 1.) (* skoXC1 (* skoXC1 (/ 1. 3.))))) 0.) (> (/ 7. 8.) skoXC1) (> skoXC1 0.) (> (* skoXC1 (* skoXC1 (/ (- 1.) 2.))) (- 3.)) (<= (* skoXC1 (* skoXC1 (/ 1. 2.))) 3.) (<= (* skoXC1 (* skoXC1 (+ 24. (* skoXC1 (* skoXC1 (+ (- 10.) (* skoXC1 skoXC1))))))) 16.) (> (* skoXC1 (* skoXC1 (+ (- 80.) (* skoXC1 (* skoXC1 (+ 40. (* skoXC1 (* skoXC1 (+ (- 6.) (* skoXC1 (* skoXC1 (/ 1. 8.)))))))))))) (- 48.)) (<= (* skoXC1 (* skoXC1 (+ 80. (* skoXC1 (* skoXC1 (+ (- 40.) (* skoXC1 (* skoXC1 (+ 6. (* skoXC1 (* skoXC1 (/ (- 1.) 8.)))))))))))) 48.) (> (* skoXC1 skoXC1) 0.) (<= (* skoXC1 (+ (- 1.) (* skoXC1 (* skoXC1 (+ (/ 1. 3.) (* skoXC1 (* skoXC1 (/ 3. 20.)))))))) 0.) (<= (* skoXC1 (* skoXC1 (+ (/ (- 1.) 6.) (* skoXC1 (* skoXC1 (/ (- 3.) 40.)))))) 1.) (<= (* skoXC1 (* skoXC1 (+ (/ (- 1.) 2.) (* skoXC1 (* skoXC1 (+ (/ 7. 120.) (* skoXC1 (* skoXC1 (/ (- 3.) 40.))))))))) 0.) (<= (* skoXC1 (* skoXC1 (* skoXC1 (* skoXC1 (+ (/ (- 13.) 60.) (* skoXC1 (* skoXC1 (/ (- 3.) 10.)))))))) 0.) (<= (* skoXC1 (* skoXC1 (* skoXC1 (* skoXC1 (+ (/ (- 17.) 120.) (* skoXC1 (* skoXC1 (/ 3. 80.)))))))) 0.) (<= (* skoXC1 (* skoXC1 (+ (/ 1. 3.) (* skoXC1 (* skoXC1 (/ 3. 20.)))))) 1.) (<= (* skoXC1 (* skoXC1 (* skoXC1 (* skoXC1 (+ (/ 32. 15.) (* skoXC1 (* skoXC1 (+ (/ (- 296.) 15.) (* skoXC1 (* skoXC1 (+ (/ 391. 15.) (* skoXC1 (* skoXC1 (+ (/ (- 146.) 15.) (* skoXC1 (* skoXC1 (/ 3. 4.))))))))))))))))) 0.) (> (* skoXC1 (* skoXC1 (+ (/ 1. 6.) (* skoXC1 (* skoXC1 (/ 3. 40.)))))) (- 1.))) (succedent (> (* skoXC1 (+ (- 1.) (* skoXC1 (* skoXC1 (+ (/ (- 1.) 6.) (* skoXC1 (* skoXC1 (/ (- 3.) 40.)))))))) 0.)))
-----[end problem]-----

-----[begin problem]-----
% In Mathematica format:
Timing[Resolve[Exists[{skoXC1}, And[skoXC1*skoXC1*((-1/6)+skoXC1*skoXC1*((-3/40)+skoXC1*skoXC1*(-5/112)))<=1,skoXC1*skoXC1*((-1/2)+skoXC1*skoXC1*((7/120)+skoXC1*skoXC1*((33/560)+skoXC1*skoXC1*(-5/112))))<=0,skoXC1*skoXC1*((-1/6)+skoXC1*skoXC1*((-3/40)+skoXC1*skoXC1*(-5/112)))<=1,skoXC1*(-1+skoXC1*skoXC1*((1/3)+skoXC1*skoXC1*((3/20)+skoXC1*skoXC1*(5/56))))<=0,skoXC1*skoXC1*skoXC1*skoXC1*((-80/3)+skoXC1*skoXC1*((128/3)+skoXC1*skoXC1*((-55/3)+skoXC1*skoXC1*(5/3))))<=0,skoXC1*skoXC1*(256+skoXC1*skoXC1*(-160+skoXC1*skoXC1*(32+skoXC1*skoXC1*-1)))<=128,skoXC1*skoXC1*(1/3)<=1,skoXC1*(-1+skoXC1*skoXC1*(-1/6))<=0,skoXC1*skoXC1*skoXC1*skoXC1*(-2/3)<=0,skoXC1*skoXC1<=2,skoXC1*skoXC1*((-1/2)+skoXC1*skoXC1*(-1/6))<=0,skoXC1*skoXC1*(-1/6)<=1,skoXC1*(-1+skoXC1*skoXC1*(1/3))<=0,(7/8)>skoXC1,skoXC1>0,skoXC1*skoXC1*(-1/2)>-3,skoXC1*skoXC1*(1/2)<=3,skoXC1*skoXC1*(24+skoXC1*skoXC1*(-10+skoXC1*skoXC1))<=16,skoXC1*skoXC1*(-80+skoXC1*skoXC1*(40+skoXC1*skoXC1*(-6+skoXC1*skoXC1*(1/8))))>-48,skoXC1*skoXC1*(80+skoXC1*skoXC1*(-40+skoXC1*skoXC1*(6+skoXC1*skoXC1*(-1/8))))<=48,skoXC1*skoXC1>0,skoXC1*(-1+skoXC1*skoXC1*((1/3)+skoXC1*skoXC1*(3/20)))<=0,skoXC1*skoXC1*((-1/6)+skoXC1*skoXC1*(-3/40))<=1,skoXC1*skoXC1*((-1/2)+skoXC1*skoXC1*((7/120)+skoXC1*skoXC1*(-3/40)))<=0,skoXC1*skoXC1*skoXC1*skoXC1*((-13/60)+skoXC1*skoXC1*(-3/10))<=0,skoXC1*skoXC1*skoXC1*skoXC1*((-17/120)+skoXC1*skoXC1*(3/80))<=0,skoXC1*skoXC1*((1/3)+skoXC1*skoXC1*(3/20))<=1,skoXC1*skoXC1*skoXC1*skoXC1*((32/15)+skoXC1*skoXC1*((-296/15)+skoXC1*skoXC1*((391/15)+skoXC1*skoXC1*((-146/15)+skoXC1*skoXC1*(3/4)))))<=0,skoXC1*skoXC1*((1/6)+skoXC1*skoXC1*(3/40))>-1,skoXC1*(-1+skoXC1*skoXC1*((-1/6)+skoXC1*skoXC1*(-3/40)))<=0]], Reals]]

% In QepcadB format:
(E skoXC1) [[(skoXC1 skoXC1 (-1/6+(skoXC1 skoXC1 (-3/40+(skoXC1 skoXC1 (-5/112))))))<=1]/\[[(skoXC1 skoXC1 (-1/2+(skoXC1 skoXC1 (7/120+(skoXC1 skoXC1 (33/560+(skoXC1 skoXC1 (-5/112))))))))<=0]/\[[(skoXC1 skoXC1 (-1/6+(skoXC1 skoXC1 (-3/40+(skoXC1 skoXC1 (-5/112))))))<=1]/\[[(skoXC1 (-1+(skoXC1 skoXC1 (1/3+(skoXC1 skoXC1 (3/20+(skoXC1 skoXC1 (5/56))))))))<=0]/\[[(skoXC1 skoXC1 skoXC1 skoXC1 (-80/3+(skoXC1 skoXC1 (128/3+(skoXC1 skoXC1 (-55/3+(skoXC1 skoXC1 (5/3))))))))<=0]/\[[(skoXC1 skoXC1 (256+(skoXC1 skoXC1 (-160+(skoXC1 skoXC1 (32+(skoXC1 skoXC1 (-1))))))))<=128]/\[[(skoXC1 skoXC1 (1/3))<=1]/\[[(skoXC1 (-1+(skoXC1 skoXC1 (-1/6))))<=0]/\[[(skoXC1 skoXC1 skoXC1 skoXC1 (-2/3))<=0]/\[[(skoXC1 skoXC1)<=2]/\[[(skoXC1 skoXC1 (-1/2+(skoXC1 skoXC1 (-1/6))))<=0]/\[[(skoXC1 skoXC1 (-1/6))<=1]/\[[(skoXC1 (-1+(skoXC1 skoXC1 (1/3))))<=0]/\[[skoXC1<7/8]/\[[0<skoXC1]/\[[-3<(skoXC1 skoXC1 (-1/2))]/\[[(skoXC1 skoXC1 (1/2))<=3]/\[[(skoXC1 skoXC1 (24+(skoXC1 skoXC1 (-10+(skoXC1 skoXC1)))))<=16]/\[[-48<(skoXC1 skoXC1 (-80+(skoXC1 skoXC1 (40+(skoXC1 skoXC1 (-6+(skoXC1 skoXC1 (1/8))))))))]/\[[(skoXC1 skoXC1 (80+(skoXC1 skoXC1 (-40+(skoXC1 skoXC1 (6+(skoXC1 skoXC1 (-1/8))))))))<=48]/\[[0<(skoXC1 skoXC1)]/\[[(skoXC1 (-1+(skoXC1 skoXC1 (1/3+(skoXC1 skoXC1 (3/20))))))<=0]/\[[(skoXC1 skoXC1 (-1/6+(skoXC1 skoXC1 (-3/40))))<=1]/\[[(skoXC1 skoXC1 (-1/2+(skoXC1 skoXC1 (7/120+(skoXC1 skoXC1 (-3/40))))))<=0]/\[[(skoXC1 skoXC1 skoXC1 skoXC1 (-13/60+(skoXC1 skoXC1 (-3/10))))<=0]/\[[(skoXC1 skoXC1 skoXC1 skoXC1 (-17/120+(skoXC1 skoXC1 (3/80))))<=0]/\[[(skoXC1 skoXC1 (1/3+(skoXC1 skoXC1 (3/20))))<=1]/\[[(skoXC1 skoXC1 skoXC1 skoXC1 (32/15+(skoXC1 skoXC1 (-296/15+(skoXC1 skoXC1 (391/15+(skoXC1 skoXC1 (-146/15+(skoXC1 skoXC1 (3/4))))))))))<=0]/\[[-1<(skoXC1 skoXC1 (1/6+(skoXC1 skoXC1 (3/40))))]/\[(skoXC1 (-1+(skoXC1 skoXC1 (-1/6+(skoXC1 skoXC1 (-3/40))))))<=0]]]]]]]]]]]]]]]]]]]]]]]]]]]]]].

% In SMTLib2 format:
(declare-fun skoXC1 () Real) (assert (and (<= (* skoXC1 (* skoXC1 (+ (/ (- 1.) 6.) (* skoXC1 (* skoXC1 (+ (/ (- 3.) 40.) (* skoXC1 (* skoXC1 (/ (- 5.) 112.))))))))) 1.) (and (<= (* skoXC1 (* skoXC1 (+ (/ (- 1.) 2.) (* skoXC1 (* skoXC1 (+ (/ 7. 120.) (* skoXC1 (* skoXC1 (+ (/ 33. 560.) (* skoXC1 (* skoXC1 (/ (- 5.) 112.)))))))))))) 0.) (and (<= (* skoXC1 (* skoXC1 (+ (/ (- 1.) 6.) (* skoXC1 (* skoXC1 (+ (/ (- 3.) 40.) (* skoXC1 (* skoXC1 (/ (- 5.) 112.))))))))) 1.) (and (<= (* skoXC1 (+ (- 1.) (* skoXC1 (* skoXC1 (+ (/ 1. 3.) (* skoXC1 (* skoXC1 (+ (/ 3. 20.) (* skoXC1 (* skoXC1 (/ 5. 56.))))))))))) 0.) (and (<= (* skoXC1 (* skoXC1 (* skoXC1 (* skoXC1 (+ (/ (- 80.) 3.) (* skoXC1 (* skoXC1 (+ (/ 128. 3.) (* skoXC1 (* skoXC1 (+ (/ (- 55.) 3.) (* skoXC1 (* skoXC1 (/ 5. 3.)))))))))))))) 0.) (and (<= (* skoXC1 (* skoXC1 (+ 256. (* skoXC1 (* skoXC1 (+ (- 160.) (* skoXC1 (* skoXC1 (+ 32. (* skoXC1 (* skoXC1 (- 1.)))))))))))) 128.) (and (<= (* skoXC1 (* skoXC1 (/ 1. 3.))) 1.) (and (<= (* skoXC1 (+ (- 1.) (* skoXC1 (* skoXC1 (/ (- 1.) 6.))))) 0.) (and (<= (* skoXC1 (* skoXC1 (* skoXC1 (* skoXC1 (/ (- 2.) 3.))))) 0.) (and (<= (* skoXC1 skoXC1) 2.) (and (<= (* skoXC1 (* skoXC1 (+ (/ (- 1.) 2.) (* skoXC1 (* skoXC1 (/ (- 1.) 6.)))))) 0.) (and (<= (* skoXC1 (* skoXC1 (/ (- 1.) 6.))) 1.) (and (<= (* skoXC1 (+ (- 1.) (* skoXC1 (* skoXC1 (/ 1. 3.))))) 0.) (and (> (/ 7. 8.) skoXC1) (and (> skoXC1 0.) (and (> (* skoXC1 (* skoXC1 (/ (- 1.) 2.))) (- 3.)) (and (<= (* skoXC1 (* skoXC1 (/ 1. 2.))) 3.) (and (<= (* skoXC1 (* skoXC1 (+ 24. (* skoXC1 (* skoXC1 (+ (- 10.) (* skoXC1 skoXC1))))))) 16.) (and (> (* skoXC1 (* skoXC1 (+ (- 80.) (* skoXC1 (* skoXC1 (+ 40. (* skoXC1 (* skoXC1 (+ (- 6.) (* skoXC1 (* skoXC1 (/ 1. 8.)))))))))))) (- 48.)) (and (<= (* skoXC1 (* skoXC1 (+ 80. (* skoXC1 (* skoXC1 (+ (- 40.) (* skoXC1 (* skoXC1 (+ 6. (* skoXC1 (* skoXC1 (/ (- 1.) 8.)))))))))))) 48.) (and (> (* skoXC1 skoXC1) 0.) (and (<= (* skoXC1 (+ (- 1.) (* skoXC1 (* skoXC1 (+ (/ 1. 3.) (* skoXC1 (* skoXC1 (/ 3. 20.)))))))) 0.) (and (<= (* skoXC1 (* skoXC1 (+ (/ (- 1.) 6.) (* skoXC1 (* skoXC1 (/ (- 3.) 40.)))))) 1.) (and (<= (* skoXC1 (* skoXC1 (+ (/ (- 1.) 2.) (* skoXC1 (* skoXC1 (+ (/ 7. 120.) (* skoXC1 (* skoXC1 (/ (- 3.) 40.))))))))) 0.) (and (<= (* skoXC1 (* skoXC1 (* skoXC1 (* skoXC1 (+ (/ (- 13.) 60.) (* skoXC1 (* skoXC1 (/ (- 3.) 10.)))))))) 0.) (and (<= (* skoXC1 (* skoXC1 (* skoXC1 (* skoXC1 (+ (/ (- 17.) 120.) (* skoXC1 (* skoXC1 (/ 3. 80.)))))))) 0.) (and (<= (* skoXC1 (* skoXC1 (+ (/ 1. 3.) (* skoXC1 (* skoXC1 (/ 3. 20.)))))) 1.) (and (<= (* skoXC1 (* skoXC1 (* skoXC1 (* skoXC1 (+ (/ 32. 15.) (* skoXC1 (* skoXC1 (+ (/ (- 296.) 15.) (* skoXC1 (* skoXC1 (+ (/ 391. 15.) (* skoXC1 (* skoXC1 (+ (/ (- 146.) 15.) (* skoXC1 (* skoXC1 (/ 3. 4.))))))))))))))))) 0.) (and (> (* skoXC1 (* skoXC1 (+ (/ 1. 6.) (* skoXC1 (* skoXC1 (/ 3. 40.)))))) (- 1.)) (<= (* skoXC1 (+ (- 1.) (* skoXC1 (* skoXC1 (+ (/ (- 1.) 6.) (* skoXC1 (* skoXC1 (/ (- 3.) 40.)))))))) 0.)))))))))))))))))))))))))))))))

% In GRF format:
(sequent " MetiTarski formula " (antecedent (<= (* skoXC1 (* skoXC1 (+ (/ (- 1.) 6.) (* skoXC1 (* skoXC1 (+ (/ (- 3.) 40.) (* skoXC1 (* skoXC1 (/ (- 5.) 112.))))))))) 1.) (<= (* skoXC1 (* skoXC1 (+ (/ (- 1.) 2.) (* skoXC1 (* skoXC1 (+ (/ 7. 120.) (* skoXC1 (* skoXC1 (+ (/ 33. 560.) (* skoXC1 (* skoXC1 (/ (- 5.) 112.)))))))))))) 0.) (<= (* skoXC1 (* skoXC1 (+ (/ (- 1.) 6.) (* skoXC1 (* skoXC1 (+ (/ (- 3.) 40.) (* skoXC1 (* skoXC1 (/ (- 5.) 112.))))))))) 1.) (<= (* skoXC1 (+ (- 1.) (* skoXC1 (* skoXC1 (+ (/ 1. 3.) (* skoXC1 (* skoXC1 (+ (/ 3. 20.) (* skoXC1 (* skoXC1 (/ 5. 56.))))))))))) 0.) (<= (* skoXC1 (* skoXC1 (* skoXC1 (* skoXC1 (+ (/ (- 80.) 3.) (* skoXC1 (* skoXC1 (+ (/ 128. 3.) (* skoXC1 (* skoXC1 (+ (/ (- 55.) 3.) (* skoXC1 (* skoXC1 (/ 5. 3.)))))))))))))) 0.) (<= (* skoXC1 (* skoXC1 (+ 256. (* skoXC1 (* skoXC1 (+ (- 160.) (* skoXC1 (* skoXC1 (+ 32. (* skoXC1 (* skoXC1 (- 1.)))))))))))) 128.) (<= (* skoXC1 (* skoXC1 (/ 1. 3.))) 1.) (<= (* skoXC1 (+ (- 1.) (* skoXC1 (* skoXC1 (/ (- 1.) 6.))))) 0.) (<= (* skoXC1 (* skoXC1 (* skoXC1 (* skoXC1 (/ (- 2.) 3.))))) 0.) (<= (* skoXC1 skoXC1) 2.) (<= (* skoXC1 (* skoXC1 (+ (/ (- 1.) 2.) (* skoXC1 (* skoXC1 (/ (- 1.) 6.)))))) 0.) (<= (* skoXC1 (* skoXC1 (/ (- 1.) 6.))) 1.) (<= (* skoXC1 (+ (- 1.) (* skoXC1 (* skoXC1 (/ 1. 3.))))) 0.) (> (/ 7. 8.) skoXC1) (> skoXC1 0.) (> (* skoXC1 (* skoXC1 (/ (- 1.) 2.))) (- 3.)) (<= (* skoXC1 (* skoXC1 (/ 1. 2.))) 3.) (<= (* skoXC1 (* skoXC1 (+ 24. (* skoXC1 (* skoXC1 (+ (- 10.) (* skoXC1 skoXC1))))))) 16.) (> (* skoXC1 (* skoXC1 (+ (- 80.) (* skoXC1 (* skoXC1 (+ 40. (* skoXC1 (* skoXC1 (+ (- 6.) (* skoXC1 (* skoXC1 (/ 1. 8.)))))))))))) (- 48.)) (<= (* skoXC1 (* skoXC1 (+ 80. (* skoXC1 (* skoXC1 (+ (- 40.) (* skoXC1 (* skoXC1 (+ 6. (* skoXC1 (* skoXC1 (/ (- 1.) 8.)))))))))))) 48.) (> (* skoXC1 skoXC1) 0.) (<= (* skoXC1 (+ (- 1.) (* skoXC1 (* skoXC1 (+ (/ 1. 3.) (* skoXC1 (* skoXC1 (/ 3. 20.)))))))) 0.) (<= (* skoXC1 (* skoXC1 (+ (/ (- 1.) 6.) (* skoXC1 (* skoXC1 (/ (- 3.) 40.)))))) 1.) (<= (* skoXC1 (* skoXC1 (+ (/ (- 1.) 2.) (* skoXC1 (* skoXC1 (+ (/ 7. 120.) (* skoXC1 (* skoXC1 (/ (- 3.) 40.))))))))) 0.) (<= (* skoXC1 (* skoXC1 (* skoXC1 (* skoXC1 (+ (/ (- 13.) 60.) (* skoXC1 (* skoXC1 (/ (- 3.) 10.)))))))) 0.) (<= (* skoXC1 (* skoXC1 (* skoXC1 (* skoXC1 (+ (/ (- 17.) 120.) (* skoXC1 (* skoXC1 (/ 3. 80.)))))))) 0.) (<= (* skoXC1 (* skoXC1 (+ (/ 1. 3.) (* skoXC1 (* skoXC1 (/ 3. 20.)))))) 1.) (<= (* skoXC1 (* skoXC1 (* skoXC1 (* skoXC1 (+ (/ 32. 15.) (* skoXC1 (* skoXC1 (+ (/ (- 296.) 15.) (* skoXC1 (* skoXC1 (+ (/ 391. 15.) (* skoXC1 (* skoXC1 (+ (/ (- 146.) 15.) (* skoXC1 (* skoXC1 (/ 3. 4.))))))))))))))))) 0.) (> (* skoXC1 (* skoXC1 (+ (/ 1. 6.) (* skoXC1 (* skoXC1 (/ 3. 40.)))))) (- 1.))) (succedent (> (* skoXC1 (+ (- 1.) (* skoXC1 (* skoXC1 (+ (/ (- 1.) 6.) (* skoXC1 (* skoXC1 (/ (- 3.) 40.)))))))) 0.)))
-----[end problem]-----

-----[begin problem]-----
% In Mathematica format:
Timing[Resolve[Exists[{skoXC1}, And[skoXC1*skoXC1<=2,skoXC1*skoXC1*((-1/2)+skoXC1*skoXC1*((7/120)+skoXC1*skoXC1*((33/560)+skoXC1*skoXC1*(-5/112))))<=0,skoXC1*skoXC1*((-1/6)+skoXC1*skoXC1*((-3/40)+skoXC1*skoXC1*(-5/112)))<=1,skoXC1*(-1+skoXC1*skoXC1*((1/3)+skoXC1*skoXC1*((3/20)+skoXC1*skoXC1*(5/56))))<=0,skoXC1*skoXC1*skoXC1*skoXC1*((-80/3)+skoXC1*skoXC1*((128/3)+skoXC1*skoXC1*((-55/3)+skoXC1*skoXC1*(5/3))))<=0,skoXC1*skoXC1*(256+skoXC1*skoXC1*(-160+skoXC1*skoXC1*(32+skoXC1*skoXC1*-1)))<=128,skoXC1*skoXC1*(1/3)<=1,skoXC1*(-1+skoXC1*skoXC1*(-1/6))<=0,skoXC1*skoXC1*skoXC1*skoXC1*(-2/3)<=0,skoXC1*skoXC1<=2,skoXC1*skoXC1*((-1/2)+skoXC1*skoXC1*(-1/6))<=0,skoXC1*skoXC1*(-1/6)<=1,skoXC1*(-1+skoXC1*skoXC1*(1/3))<=0,(7/8)>skoXC1,skoXC1>0,skoXC1*skoXC1*(-1/2)>-3,skoXC1*skoXC1*(1/2)<=3,skoXC1*skoXC1*(24+skoXC1*skoXC1*(-10+skoXC1*skoXC1))<=16,skoXC1*skoXC1*(-80+skoXC1*skoXC1*(40+skoXC1*skoXC1*(-6+skoXC1*skoXC1*(1/8))))>-48,skoXC1*skoXC1*(80+skoXC1*skoXC1*(-40+skoXC1*skoXC1*(6+skoXC1*skoXC1*(-1/8))))<=48,skoXC1*skoXC1>0,skoXC1*(-1+skoXC1*skoXC1*((1/3)+skoXC1*skoXC1*(3/20)))<=0,skoXC1*skoXC1*((-1/6)+skoXC1*skoXC1*(-3/40))<=1,skoXC1*skoXC1*((-1/2)+skoXC1*skoXC1*((7/120)+skoXC1*skoXC1*(-3/40)))<=0,skoXC1*skoXC1*skoXC1*skoXC1*((-13/60)+skoXC1*skoXC1*(-3/10))<=0,skoXC1*skoXC1*skoXC1*skoXC1*((-17/120)+skoXC1*skoXC1*(3/80))<=0,skoXC1*skoXC1*((1/3)+skoXC1*skoXC1*(3/20))<=1,skoXC1*skoXC1*skoXC1*skoXC1*((32/15)+skoXC1*skoXC1*((-296/15)+skoXC1*skoXC1*((391/15)+skoXC1*skoXC1*((-146/15)+skoXC1*skoXC1*(3/4)))))<=0,skoXC1*skoXC1*((1/6)+skoXC1*skoXC1*(3/40))>-1,skoXC1*(-1+skoXC1*skoXC1*((-1/6)+skoXC1*skoXC1*(-3/40)))<=0]], Reals]]

% In QepcadB format:
(E skoXC1) [[(skoXC1 skoXC1)<=2]/\[[(skoXC1 skoXC1 (-1/2+(skoXC1 skoXC1 (7/120+(skoXC1 skoXC1 (33/560+(skoXC1 skoXC1 (-5/112))))))))<=0]/\[[(skoXC1 skoXC1 (-1/6+(skoXC1 skoXC1 (-3/40+(skoXC1 skoXC1 (-5/112))))))<=1]/\[[(skoXC1 (-1+(skoXC1 skoXC1 (1/3+(skoXC1 skoXC1 (3/20+(skoXC1 skoXC1 (5/56))))))))<=0]/\[[(skoXC1 skoXC1 skoXC1 skoXC1 (-80/3+(skoXC1 skoXC1 (128/3+(skoXC1 skoXC1 (-55/3+(skoXC1 skoXC1 (5/3))))))))<=0]/\[[(skoXC1 skoXC1 (256+(skoXC1 skoXC1 (-160+(skoXC1 skoXC1 (32+(skoXC1 skoXC1 (-1))))))))<=128]/\[[(skoXC1 skoXC1 (1/3))<=1]/\[[(skoXC1 (-1+(skoXC1 skoXC1 (-1/6))))<=0]/\[[(skoXC1 skoXC1 skoXC1 skoXC1 (-2/3))<=0]/\[[(skoXC1 skoXC1)<=2]/\[[(skoXC1 skoXC1 (-1/2+(skoXC1 skoXC1 (-1/6))))<=0]/\[[(skoXC1 skoXC1 (-1/6))<=1]/\[[(skoXC1 (-1+(skoXC1 skoXC1 (1/3))))<=0]/\[[skoXC1<7/8]/\[[0<skoXC1]/\[[-3<(skoXC1 skoXC1 (-1/2))]/\[[(skoXC1 skoXC1 (1/2))<=3]/\[[(skoXC1 skoXC1 (24+(skoXC1 skoXC1 (-10+(skoXC1 skoXC1)))))<=16]/\[[-48<(skoXC1 skoXC1 (-80+(skoXC1 skoXC1 (40+(skoXC1 skoXC1 (-6+(skoXC1 skoXC1 (1/8))))))))]/\[[(skoXC1 skoXC1 (80+(skoXC1 skoXC1 (-40+(skoXC1 skoXC1 (6+(skoXC1 skoXC1 (-1/8))))))))<=48]/\[[0<(skoXC1 skoXC1)]/\[[(skoXC1 (-1+(skoXC1 skoXC1 (1/3+(skoXC1 skoXC1 (3/20))))))<=0]/\[[(skoXC1 skoXC1 (-1/6+(skoXC1 skoXC1 (-3/40))))<=1]/\[[(skoXC1 skoXC1 (-1/2+(skoXC1 skoXC1 (7/120+(skoXC1 skoXC1 (-3/40))))))<=0]/\[[(skoXC1 skoXC1 skoXC1 skoXC1 (-13/60+(skoXC1 skoXC1 (-3/10))))<=0]/\[[(skoXC1 skoXC1 skoXC1 skoXC1 (-17/120+(skoXC1 skoXC1 (3/80))))<=0]/\[[(skoXC1 skoXC1 (1/3+(skoXC1 skoXC1 (3/20))))<=1]/\[[(skoXC1 skoXC1 skoXC1 skoXC1 (32/15+(skoXC1 skoXC1 (-296/15+(skoXC1 skoXC1 (391/15+(skoXC1 skoXC1 (-146/15+(skoXC1 skoXC1 (3/4))))))))))<=0]/\[[-1<(skoXC1 skoXC1 (1/6+(skoXC1 skoXC1 (3/40))))]/\[(skoXC1 (-1+(skoXC1 skoXC1 (-1/6+(skoXC1 skoXC1 (-3/40))))))<=0]]]]]]]]]]]]]]]]]]]]]]]]]]]]]].

% In SMTLib2 format:
(declare-fun skoXC1 () Real) (assert (and (<= (* skoXC1 skoXC1) 2.) (and (<= (* skoXC1 (* skoXC1 (+ (/ (- 1.) 2.) (* skoXC1 (* skoXC1 (+ (/ 7. 120.) (* skoXC1 (* skoXC1 (+ (/ 33. 560.) (* skoXC1 (* skoXC1 (/ (- 5.) 112.)))))))))))) 0.) (and (<= (* skoXC1 (* skoXC1 (+ (/ (- 1.) 6.) (* skoXC1 (* skoXC1 (+ (/ (- 3.) 40.) (* skoXC1 (* skoXC1 (/ (- 5.) 112.))))))))) 1.) (and (<= (* skoXC1 (+ (- 1.) (* skoXC1 (* skoXC1 (+ (/ 1. 3.) (* skoXC1 (* skoXC1 (+ (/ 3. 20.) (* skoXC1 (* skoXC1 (/ 5. 56.))))))))))) 0.) (and (<= (* skoXC1 (* skoXC1 (* skoXC1 (* skoXC1 (+ (/ (- 80.) 3.) (* skoXC1 (* skoXC1 (+ (/ 128. 3.) (* skoXC1 (* skoXC1 (+ (/ (- 55.) 3.) (* skoXC1 (* skoXC1 (/ 5. 3.)))))))))))))) 0.) (and (<= (* skoXC1 (* skoXC1 (+ 256. (* skoXC1 (* skoXC1 (+ (- 160.) (* skoXC1 (* skoXC1 (+ 32. (* skoXC1 (* skoXC1 (- 1.)))))))))))) 128.) (and (<= (* skoXC1 (* skoXC1 (/ 1. 3.))) 1.) (and (<= (* skoXC1 (+ (- 1.) (* skoXC1 (* skoXC1 (/ (- 1.) 6.))))) 0.) (and (<= (* skoXC1 (* skoXC1 (* skoXC1 (* skoXC1 (/ (- 2.) 3.))))) 0.) (and (<= (* skoXC1 skoXC1) 2.) (and (<= (* skoXC1 (* skoXC1 (+ (/ (- 1.) 2.) (* skoXC1 (* skoXC1 (/ (- 1.) 6.)))))) 0.) (and (<= (* skoXC1 (* skoXC1 (/ (- 1.) 6.))) 1.) (and (<= (* skoXC1 (+ (- 1.) (* skoXC1 (* skoXC1 (/ 1. 3.))))) 0.) (and (> (/ 7. 8.) skoXC1) (and (> skoXC1 0.) (and (> (* skoXC1 (* skoXC1 (/ (- 1.) 2.))) (- 3.)) (and (<= (* skoXC1 (* skoXC1 (/ 1. 2.))) 3.) (and (<= (* skoXC1 (* skoXC1 (+ 24. (* skoXC1 (* skoXC1 (+ (- 10.) (* skoXC1 skoXC1))))))) 16.) (and (> (* skoXC1 (* skoXC1 (+ (- 80.) (* skoXC1 (* skoXC1 (+ 40. (* skoXC1 (* skoXC1 (+ (- 6.) (* skoXC1 (* skoXC1 (/ 1. 8.)))))))))))) (- 48.)) (and (<= (* skoXC1 (* skoXC1 (+ 80. (* skoXC1 (* skoXC1 (+ (- 40.) (* skoXC1 (* skoXC1 (+ 6. (* skoXC1 (* skoXC1 (/ (- 1.) 8.)))))))))))) 48.) (and (> (* skoXC1 skoXC1) 0.) (and (<= (* skoXC1 (+ (- 1.) (* skoXC1 (* skoXC1 (+ (/ 1. 3.) (* skoXC1 (* skoXC1 (/ 3. 20.)))))))) 0.) (and (<= (* skoXC1 (* skoXC1 (+ (/ (- 1.) 6.) (* skoXC1 (* skoXC1 (/ (- 3.) 40.)))))) 1.) (and (<= (* skoXC1 (* skoXC1 (+ (/ (- 1.) 2.) (* skoXC1 (* skoXC1 (+ (/ 7. 120.) (* skoXC1 (* skoXC1 (/ (- 3.) 40.))))))))) 0.) (and (<= (* skoXC1 (* skoXC1 (* skoXC1 (* skoXC1 (+ (/ (- 13.) 60.) (* skoXC1 (* skoXC1 (/ (- 3.) 10.)))))))) 0.) (and (<= (* skoXC1 (* skoXC1 (* skoXC1 (* skoXC1 (+ (/ (- 17.) 120.) (* skoXC1 (* skoXC1 (/ 3. 80.)))))))) 0.) (and (<= (* skoXC1 (* skoXC1 (+ (/ 1. 3.) (* skoXC1 (* skoXC1 (/ 3. 20.)))))) 1.) (and (<= (* skoXC1 (* skoXC1 (* skoXC1 (* skoXC1 (+ (/ 32. 15.) (* skoXC1 (* skoXC1 (+ (/ (- 296.) 15.) (* skoXC1 (* skoXC1 (+ (/ 391. 15.) (* skoXC1 (* skoXC1 (+ (/ (- 146.) 15.) (* skoXC1 (* skoXC1 (/ 3. 4.))))))))))))))))) 0.) (and (> (* skoXC1 (* skoXC1 (+ (/ 1. 6.) (* skoXC1 (* skoXC1 (/ 3. 40.)))))) (- 1.)) (<= (* skoXC1 (+ (- 1.) (* skoXC1 (* skoXC1 (+ (/ (- 1.) 6.) (* skoXC1 (* skoXC1 (/ (- 3.) 40.)))))))) 0.)))))))))))))))))))))))))))))))

% In GRF format:
(sequent " MetiTarski formula " (antecedent (<= (* skoXC1 skoXC1) 2.) (<= (* skoXC1 (* skoXC1 (+ (/ (- 1.) 2.) (* skoXC1 (* skoXC1 (+ (/ 7. 120.) (* skoXC1 (* skoXC1 (+ (/ 33. 560.) (* skoXC1 (* skoXC1 (/ (- 5.) 112.)))))))))))) 0.) (<= (* skoXC1 (* skoXC1 (+ (/ (- 1.) 6.) (* skoXC1 (* skoXC1 (+ (/ (- 3.) 40.) (* skoXC1 (* skoXC1 (/ (- 5.) 112.))))))))) 1.) (<= (* skoXC1 (+ (- 1.) (* skoXC1 (* skoXC1 (+ (/ 1. 3.) (* skoXC1 (* skoXC1 (+ (/ 3. 20.) (* skoXC1 (* skoXC1 (/ 5. 56.))))))))))) 0.) (<= (* skoXC1 (* skoXC1 (* skoXC1 (* skoXC1 (+ (/ (- 80.) 3.) (* skoXC1 (* skoXC1 (+ (/ 128. 3.) (* skoXC1 (* skoXC1 (+ (/ (- 55.) 3.) (* skoXC1 (* skoXC1 (/ 5. 3.)))))))))))))) 0.) (<= (* skoXC1 (* skoXC1 (+ 256. (* skoXC1 (* skoXC1 (+ (- 160.) (* skoXC1 (* skoXC1 (+ 32. (* skoXC1 (* skoXC1 (- 1.)))))))))))) 128.) (<= (* skoXC1 (* skoXC1 (/ 1. 3.))) 1.) (<= (* skoXC1 (+ (- 1.) (* skoXC1 (* skoXC1 (/ (- 1.) 6.))))) 0.) (<= (* skoXC1 (* skoXC1 (* skoXC1 (* skoXC1 (/ (- 2.) 3.))))) 0.) (<= (* skoXC1 skoXC1) 2.) (<= (* skoXC1 (* skoXC1 (+ (/ (- 1.) 2.) (* skoXC1 (* skoXC1 (/ (- 1.) 6.)))))) 0.) (<= (* skoXC1 (* skoXC1 (/ (- 1.) 6.))) 1.) (<= (* skoXC1 (+ (- 1.) (* skoXC1 (* skoXC1 (/ 1. 3.))))) 0.) (> (/ 7. 8.) skoXC1) (> skoXC1 0.) (> (* skoXC1 (* skoXC1 (/ (- 1.) 2.))) (- 3.)) (<= (* skoXC1 (* skoXC1 (/ 1. 2.))) 3.) (<= (* skoXC1 (* skoXC1 (+ 24. (* skoXC1 (* skoXC1 (+ (- 10.) (* skoXC1 skoXC1))))))) 16.) (> (* skoXC1 (* skoXC1 (+ (- 80.) (* skoXC1 (* skoXC1 (+ 40. (* skoXC1 (* skoXC1 (+ (- 6.) (* skoXC1 (* skoXC1 (/ 1. 8.)))))))))))) (- 48.)) (<= (* skoXC1 (* skoXC1 (+ 80. (* skoXC1 (* skoXC1 (+ (- 40.) (* skoXC1 (* skoXC1 (+ 6. (* skoXC1 (* skoXC1 (/ (- 1.) 8.)))))))))))) 48.) (> (* skoXC1 skoXC1) 0.) (<= (* skoXC1 (+ (- 1.) (* skoXC1 (* skoXC1 (+ (/ 1. 3.) (* skoXC1 (* skoXC1 (/ 3. 20.)))))))) 0.) (<= (* skoXC1 (* skoXC1 (+ (/ (- 1.) 6.) (* skoXC1 (* skoXC1 (/ (- 3.) 40.)))))) 1.) (<= (* skoXC1 (* skoXC1 (+ (/ (- 1.) 2.) (* skoXC1 (* skoXC1 (+ (/ 7. 120.) (* skoXC1 (* skoXC1 (/ (- 3.) 40.))))))))) 0.) (<= (* skoXC1 (* skoXC1 (* skoXC1 (* skoXC1 (+ (/ (- 13.) 60.) (* skoXC1 (* skoXC1 (/ (- 3.) 10.)))))))) 0.) (<= (* skoXC1 (* skoXC1 (* skoXC1 (* skoXC1 (+ (/ (- 17.) 120.) (* skoXC1 (* skoXC1 (/ 3. 80.)))))))) 0.) (<= (* skoXC1 (* skoXC1 (+ (/ 1. 3.) (* skoXC1 (* skoXC1 (/ 3. 20.)))))) 1.) (<= (* skoXC1 (* skoXC1 (* skoXC1 (* skoXC1 (+ (/ 32. 15.) (* skoXC1 (* skoXC1 (+ (/ (- 296.) 15.) (* skoXC1 (* skoXC1 (+ (/ 391. 15.) (* skoXC1 (* skoXC1 (+ (/ (- 146.) 15.) (* skoXC1 (* skoXC1 (/ 3. 4.))))))))))))))))) 0.) (> (* skoXC1 (* skoXC1 (+ (/ 1. 6.) (* skoXC1 (* skoXC1 (/ 3. 40.)))))) (- 1.))) (succedent (> (* skoXC1 (+ (- 1.) (* skoXC1 (* skoXC1 (+ (/ (- 1.) 6.) (* skoXC1 (* skoXC1 (/ (- 3.) 40.)))))))) 0.)))
-----[end problem]-----

-----[begin problem]-----
% In Mathematica format:
Timing[Resolve[Exists[{skoXC1}, And[skoXC1*skoXC1*skoXC1*skoXC1*((-13/60)+skoXC1*skoXC1*((-9/280)+skoXC1*skoXC1*(-5/28)))<=0,skoXC1*skoXC1*-1>-2,skoXC1*skoXC1*((-1/2)+skoXC1*skoXC1*((7/120)+skoXC1*skoXC1*((33/560)+skoXC1*skoXC1*(-5/112))))<=0,skoXC1*skoXC1*((-1/6)+skoXC1*skoXC1*((-3/40)+skoXC1*skoXC1*(-5/112)))<=1,skoXC1*(-1+skoXC1*skoXC1*((1/3)+skoXC1*skoXC1*((3/20)+skoXC1*skoXC1*(5/56))))<=0,skoXC1*skoXC1*skoXC1*skoXC1*((-80/3)+skoXC1*skoXC1*((128/3)+skoXC1*skoXC1*((-55/3)+skoXC1*skoXC1*(5/3))))<=0,skoXC1*skoXC1*(256+skoXC1*skoXC1*(-160+skoXC1*skoXC1*(32+skoXC1*skoXC1*-1)))<=128,skoXC1*skoXC1*(1/3)<=1,skoXC1*(-1+skoXC1*skoXC1*(-1/6))<=0,skoXC1*skoXC1*skoXC1*skoXC1*(-2/3)<=0,skoXC1*skoXC1<=2,skoXC1*skoXC1*((-1/2)+skoXC1*skoXC1*(-1/6))<=0,skoXC1*skoXC1*(-1/6)<=1,skoXC1*(-1+skoXC1*skoXC1*(1/3))<=0,(7/8)>skoXC1,skoXC1>0,skoXC1*skoXC1*(-1/2)>-3,skoXC1*skoXC1*(1/2)<=3,skoXC1*skoXC1*(24+skoXC1*skoXC1*(-10+skoXC1*skoXC1))<=16,skoXC1*skoXC1*(-80+skoXC1*skoXC1*(40+skoXC1*skoXC1*(-6+skoXC1*skoXC1*(1/8))))>-48,skoXC1*skoXC1*(80+skoXC1*skoXC1*(-40+skoXC1*skoXC1*(6+skoXC1*skoXC1*(-1/8))))<=48,skoXC1*skoXC1>0,skoXC1*(-1+skoXC1*skoXC1*((1/3)+skoXC1*skoXC1*(3/20)))<=0,skoXC1*skoXC1*((-1/6)+skoXC1*skoXC1*(-3/40))<=1,skoXC1*skoXC1*((-1/2)+skoXC1*skoXC1*((7/120)+skoXC1*skoXC1*(-3/40)))<=0,skoXC1*skoXC1*skoXC1*skoXC1*((-13/60)+skoXC1*skoXC1*(-3/10))<=0,skoXC1*skoXC1*skoXC1*skoXC1*((-17/120)+skoXC1*skoXC1*(3/80))<=0,skoXC1*skoXC1*((1/3)+skoXC1*skoXC1*(3/20))<=1,skoXC1*skoXC1*skoXC1*skoXC1*((32/15)+skoXC1*skoXC1*((-296/15)+skoXC1*skoXC1*((391/15)+skoXC1*skoXC1*((-146/15)+skoXC1*skoXC1*(3/4)))))<=0,skoXC1*skoXC1*((1/6)+skoXC1*skoXC1*(3/40))>-1,skoXC1*(-1+skoXC1*skoXC1*((-1/6)+skoXC1*skoXC1*(-3/40)))<=0]], Reals]]

% In QepcadB format:
(E skoXC1) [[(skoXC1 skoXC1 skoXC1 skoXC1 (-13/60+(skoXC1 skoXC1 (-9/280+(skoXC1 skoXC1 (-5/28))))))<=0]/\[[-2<(skoXC1 skoXC1 (-1))]/\[[(skoXC1 skoXC1 (-1/2+(skoXC1 skoXC1 (7/120+(skoXC1 skoXC1 (33/560+(skoXC1 skoXC1 (-5/112))))))))<=0]/\[[(skoXC1 skoXC1 (-1/6+(skoXC1 skoXC1 (-3/40+(skoXC1 skoXC1 (-5/112))))))<=1]/\[[(skoXC1 (-1+(skoXC1 skoXC1 (1/3+(skoXC1 skoXC1 (3/20+(skoXC1 skoXC1 (5/56))))))))<=0]/\[[(skoXC1 skoXC1 skoXC1 skoXC1 (-80/3+(skoXC1 skoXC1 (128/3+(skoXC1 skoXC1 (-55/3+(skoXC1 skoXC1 (5/3))))))))<=0]/\[[(skoXC1 skoXC1 (256+(skoXC1 skoXC1 (-160+(skoXC1 skoXC1 (32+(skoXC1 skoXC1 (-1))))))))<=128]/\[[(skoXC1 skoXC1 (1/3))<=1]/\[[(skoXC1 (-1+(skoXC1 skoXC1 (-1/6))))<=0]/\[[(skoXC1 skoXC1 skoXC1 skoXC1 (-2/3))<=0]/\[[(skoXC1 skoXC1)<=2]/\[[(skoXC1 skoXC1 (-1/2+(skoXC1 skoXC1 (-1/6))))<=0]/\[[(skoXC1 skoXC1 (-1/6))<=1]/\[[(skoXC1 (-1+(skoXC1 skoXC1 (1/3))))<=0]/\[[skoXC1<7/8]/\[[0<skoXC1]/\[[-3<(skoXC1 skoXC1 (-1/2))]/\[[(skoXC1 skoXC1 (1/2))<=3]/\[[(skoXC1 skoXC1 (24+(skoXC1 skoXC1 (-10+(skoXC1 skoXC1)))))<=16]/\[[-48<(skoXC1 skoXC1 (-80+(skoXC1 skoXC1 (40+(skoXC1 skoXC1 (-6+(skoXC1 skoXC1 (1/8))))))))]/\[[(skoXC1 skoXC1 (80+(skoXC1 skoXC1 (-40+(skoXC1 skoXC1 (6+(skoXC1 skoXC1 (-1/8))))))))<=48]/\[[0<(skoXC1 skoXC1)]/\[[(skoXC1 (-1+(skoXC1 skoXC1 (1/3+(skoXC1 skoXC1 (3/20))))))<=0]/\[[(skoXC1 skoXC1 (-1/6+(skoXC1 skoXC1 (-3/40))))<=1]/\[[(skoXC1 skoXC1 (-1/2+(skoXC1 skoXC1 (7/120+(skoXC1 skoXC1 (-3/40))))))<=0]/\[[(skoXC1 skoXC1 skoXC1 skoXC1 (-13/60+(skoXC1 skoXC1 (-3/10))))<=0]/\[[(skoXC1 skoXC1 skoXC1 skoXC1 (-17/120+(skoXC1 skoXC1 (3/80))))<=0]/\[[(skoXC1 skoXC1 (1/3+(skoXC1 skoXC1 (3/20))))<=1]/\[[(skoXC1 skoXC1 skoXC1 skoXC1 (32/15+(skoXC1 skoXC1 (-296/15+(skoXC1 skoXC1 (391/15+(skoXC1 skoXC1 (-146/15+(skoXC1 skoXC1 (3/4))))))))))<=0]/\[[-1<(skoXC1 skoXC1 (1/6+(skoXC1 skoXC1 (3/40))))]/\[(skoXC1 (-1+(skoXC1 skoXC1 (-1/6+(skoXC1 skoXC1 (-3/40))))))<=0]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]].

% In SMTLib2 format:
(declare-fun skoXC1 () Real) (assert (and (<= (* skoXC1 (* skoXC1 (* skoXC1 (* skoXC1 (+ (/ (- 13.) 60.) (* skoXC1 (* skoXC1 (+ (/ (- 9.) 280.) (* skoXC1 (* skoXC1 (/ (- 5.) 28.))))))))))) 0.) (and (> (* skoXC1 (* skoXC1 (- 1.))) (- 2.)) (and (<= (* skoXC1 (* skoXC1 (+ (/ (- 1.) 2.) (* skoXC1 (* skoXC1 (+ (/ 7. 120.) (* skoXC1 (* skoXC1 (+ (/ 33. 560.) (* skoXC1 (* skoXC1 (/ (- 5.) 112.)))))))))))) 0.) (and (<= (* skoXC1 (* skoXC1 (+ (/ (- 1.) 6.) (* skoXC1 (* skoXC1 (+ (/ (- 3.) 40.) (* skoXC1 (* skoXC1 (/ (- 5.) 112.))))))))) 1.) (and (<= (* skoXC1 (+ (- 1.) (* skoXC1 (* skoXC1 (+ (/ 1. 3.) (* skoXC1 (* skoXC1 (+ (/ 3. 20.) (* skoXC1 (* skoXC1 (/ 5. 56.))))))))))) 0.) (and (<= (* skoXC1 (* skoXC1 (* skoXC1 (* skoXC1 (+ (/ (- 80.) 3.) (* skoXC1 (* skoXC1 (+ (/ 128. 3.) (* skoXC1 (* skoXC1 (+ (/ (- 55.) 3.) (* skoXC1 (* skoXC1 (/ 5. 3.)))))))))))))) 0.) (and (<= (* skoXC1 (* skoXC1 (+ 256. (* skoXC1 (* skoXC1 (+ (- 160.) (* skoXC1 (* skoXC1 (+ 32. (* skoXC1 (* skoXC1 (- 1.)))))))))))) 128.) (and (<= (* skoXC1 (* skoXC1 (/ 1. 3.))) 1.) (and (<= (* skoXC1 (+ (- 1.) (* skoXC1 (* skoXC1 (/ (- 1.) 6.))))) 0.) (and (<= (* skoXC1 (* skoXC1 (* skoXC1 (* skoXC1 (/ (- 2.) 3.))))) 0.) (and (<= (* skoXC1 skoXC1) 2.) (and (<= (* skoXC1 (* skoXC1 (+ (/ (- 1.) 2.) (* skoXC1 (* skoXC1 (/ (- 1.) 6.)))))) 0.) (and (<= (* skoXC1 (* skoXC1 (/ (- 1.) 6.))) 1.) (and (<= (* skoXC1 (+ (- 1.) (* skoXC1 (* skoXC1 (/ 1. 3.))))) 0.) (and (> (/ 7. 8.) skoXC1) (and (> skoXC1 0.) (and (> (* skoXC1 (* skoXC1 (/ (- 1.) 2.))) (- 3.)) (and (<= (* skoXC1 (* skoXC1 (/ 1. 2.))) 3.) (and (<= (* skoXC1 (* skoXC1 (+ 24. (* skoXC1 (* skoXC1 (+ (- 10.) (* skoXC1 skoXC1))))))) 16.) (and (> (* skoXC1 (* skoXC1 (+ (- 80.) (* skoXC1 (* skoXC1 (+ 40. (* skoXC1 (* skoXC1 (+ (- 6.) (* skoXC1 (* skoXC1 (/ 1. 8.)))))))))))) (- 48.)) (and (<= (* skoXC1 (* skoXC1 (+ 80. (* skoXC1 (* skoXC1 (+ (- 40.) (* skoXC1 (* skoXC1 (+ 6. (* skoXC1 (* skoXC1 (/ (- 1.) 8.)))))))))))) 48.) (and (> (* skoXC1 skoXC1) 0.) (and (<= (* skoXC1 (+ (- 1.) (* skoXC1 (* skoXC1 (+ (/ 1. 3.) (* skoXC1 (* skoXC1 (/ 3. 20.)))))))) 0.) (and (<= (* skoXC1 (* skoXC1 (+ (/ (- 1.) 6.) (* skoXC1 (* skoXC1 (/ (- 3.) 40.)))))) 1.) (and (<= (* skoXC1 (* skoXC1 (+ (/ (- 1.) 2.) (* skoXC1 (* skoXC1 (+ (/ 7. 120.) (* skoXC1 (* skoXC1 (/ (- 3.) 40.))))))))) 0.) (and (<= (* skoXC1 (* skoXC1 (* skoXC1 (* skoXC1 (+ (/ (- 13.) 60.) (* skoXC1 (* skoXC1 (/ (- 3.) 10.)))))))) 0.) (and (<= (* skoXC1 (* skoXC1 (* skoXC1 (* skoXC1 (+ (/ (- 17.) 120.) (* skoXC1 (* skoXC1 (/ 3. 80.)))))))) 0.) (and (<= (* skoXC1 (* skoXC1 (+ (/ 1. 3.) (* skoXC1 (* skoXC1 (/ 3. 20.)))))) 1.) (and (<= (* skoXC1 (* skoXC1 (* skoXC1 (* skoXC1 (+ (/ 32. 15.) (* skoXC1 (* skoXC1 (+ (/ (- 296.) 15.) (* skoXC1 (* skoXC1 (+ (/ 391. 15.) (* skoXC1 (* skoXC1 (+ (/ (- 146.) 15.) (* skoXC1 (* skoXC1 (/ 3. 4.))))))))))))))))) 0.) (and (> (* skoXC1 (* skoXC1 (+ (/ 1. 6.) (* skoXC1 (* skoXC1 (/ 3. 40.)))))) (- 1.)) (<= (* skoXC1 (+ (- 1.) (* skoXC1 (* skoXC1 (+ (/ (- 1.) 6.) (* skoXC1 (* skoXC1 (/ (- 3.) 40.)))))))) 0.))))))))))))))))))))))))))))))))

% In GRF format:
(sequent " MetiTarski formula " (antecedent (<= (* skoXC1 (* skoXC1 (* skoXC1 (* skoXC1 (+ (/ (- 13.) 60.) (* skoXC1 (* skoXC1 (+ (/ (- 9.) 280.) (* skoXC1 (* skoXC1 (/ (- 5.) 28.))))))))))) 0.) (> (* skoXC1 (* skoXC1 (- 1.))) (- 2.)) (<= (* skoXC1 (* skoXC1 (+ (/ (- 1.) 2.) (* skoXC1 (* skoXC1 (+ (/ 7. 120.) (* skoXC1 (* skoXC1 (+ (/ 33. 560.) (* skoXC1 (* skoXC1 (/ (- 5.) 112.)))))))))))) 0.) (<= (* skoXC1 (* skoXC1 (+ (/ (- 1.) 6.) (* skoXC1 (* skoXC1 (+ (/ (- 3.) 40.) (* skoXC1 (* skoXC1 (/ (- 5.) 112.))))))))) 1.) (<= (* skoXC1 (+ (- 1.) (* skoXC1 (* skoXC1 (+ (/ 1. 3.) (* skoXC1 (* skoXC1 (+ (/ 3. 20.) (* skoXC1 (* skoXC1 (/ 5. 56.))))))))))) 0.) (<= (* skoXC1 (* skoXC1 (* skoXC1 (* skoXC1 (+ (/ (- 80.) 3.) (* skoXC1 (* skoXC1 (+ (/ 128. 3.) (* skoXC1 (* skoXC1 (+ (/ (- 55.) 3.) (* skoXC1 (* skoXC1 (/ 5. 3.)))))))))))))) 0.) (<= (* skoXC1 (* skoXC1 (+ 256. (* skoXC1 (* skoXC1 (+ (- 160.) (* skoXC1 (* skoXC1 (+ 32. (* skoXC1 (* skoXC1 (- 1.)))))))))))) 128.) (<= (* skoXC1 (* skoXC1 (/ 1. 3.))) 1.) (<= (* skoXC1 (+ (- 1.) (* skoXC1 (* skoXC1 (/ (- 1.) 6.))))) 0.) (<= (* skoXC1 (* skoXC1 (* skoXC1 (* skoXC1 (/ (- 2.) 3.))))) 0.) (<= (* skoXC1 skoXC1) 2.) (<= (* skoXC1 (* skoXC1 (+ (/ (- 1.) 2.) (* skoXC1 (* skoXC1 (/ (- 1.) 6.)))))) 0.) (<= (* skoXC1 (* skoXC1 (/ (- 1.) 6.))) 1.) (<= (* skoXC1 (+ (- 1.) (* skoXC1 (* skoXC1 (/ 1. 3.))))) 0.) (> (/ 7. 8.) skoXC1) (> skoXC1 0.) (> (* skoXC1 (* skoXC1 (/ (- 1.) 2.))) (- 3.)) (<= (* skoXC1 (* skoXC1 (/ 1. 2.))) 3.) (<= (* skoXC1 (* skoXC1 (+ 24. (* skoXC1 (* skoXC1 (+ (- 10.) (* skoXC1 skoXC1))))))) 16.) (> (* skoXC1 (* skoXC1 (+ (- 80.) (* skoXC1 (* skoXC1 (+ 40. (* skoXC1 (* skoXC1 (+ (- 6.) (* skoXC1 (* skoXC1 (/ 1. 8.)))))))))))) (- 48.)) (<= (* skoXC1 (* skoXC1 (+ 80. (* skoXC1 (* skoXC1 (+ (- 40.) (* skoXC1 (* skoXC1 (+ 6. (* skoXC1 (* skoXC1 (/ (- 1.) 8.)))))))))))) 48.) (> (* skoXC1 skoXC1) 0.) (<= (* skoXC1 (+ (- 1.) (* skoXC1 (* skoXC1 (+ (/ 1. 3.) (* skoXC1 (* skoXC1 (/ 3. 20.)))))))) 0.) (<= (* skoXC1 (* skoXC1 (+ (/ (- 1.) 6.) (* skoXC1 (* skoXC1 (/ (- 3.) 40.)))))) 1.) (<= (* skoXC1 (* skoXC1 (+ (/ (- 1.) 2.) (* skoXC1 (* skoXC1 (+ (/ 7. 120.) (* skoXC1 (* skoXC1 (/ (- 3.) 40.))))))))) 0.) (<= (* skoXC1 (* skoXC1 (* skoXC1 (* skoXC1 (+ (/ (- 13.) 60.) (* skoXC1 (* skoXC1 (/ (- 3.) 10.)))))))) 0.) (<= (* skoXC1 (* skoXC1 (* skoXC1 (* skoXC1 (+ (/ (- 17.) 120.) (* skoXC1 (* skoXC1 (/ 3. 80.)))))))) 0.) (<= (* skoXC1 (* skoXC1 (+ (/ 1. 3.) (* skoXC1 (* skoXC1 (/ 3. 20.)))))) 1.) (<= (* skoXC1 (* skoXC1 (* skoXC1 (* skoXC1 (+ (/ 32. 15.) (* skoXC1 (* skoXC1 (+ (/ (- 296.) 15.) (* skoXC1 (* skoXC1 (+ (/ 391. 15.) (* skoXC1 (* skoXC1 (+ (/ (- 146.) 15.) (* skoXC1 (* skoXC1 (/ 3. 4.))))))))))))))))) 0.) (> (* skoXC1 (* skoXC1 (+ (/ 1. 6.) (* skoXC1 (* skoXC1 (/ 3. 40.)))))) (- 1.))) (succedent (> (* skoXC1 (+ (- 1.) (* skoXC1 (* skoXC1 (+ (/ (- 1.) 6.) (* skoXC1 (* skoXC1 (/ (- 3.) 40.)))))))) 0.)))
-----[end problem]-----

-----[begin problem]-----
% In Mathematica format:
Timing[Resolve[Exists[{skoXC1}, And[skoXC1*skoXC1<=2,skoXC1*skoXC1*((-1/2)+skoXC1*skoXC1*((7/120)+skoXC1*skoXC1*((33/560)+skoXC1*skoXC1*(-5/112))))<=0,skoXC1*skoXC1*((-1/6)+skoXC1*skoXC1*((-3/40)+skoXC1*skoXC1*(-5/112)))<=1,skoXC1*(-1+skoXC1*skoXC1*((1/3)+skoXC1*skoXC1*((3/20)+skoXC1*skoXC1*(5/56))))<=0,skoXC1*skoXC1*skoXC1*skoXC1*((-80/3)+skoXC1*skoXC1*((128/3)+skoXC1*skoXC1*((-55/3)+skoXC1*skoXC1*(5/3))))<=0,skoXC1*skoXC1*(256+skoXC1*skoXC1*(-160+skoXC1*skoXC1*(32+skoXC1*skoXC1*-1)))<=128,skoXC1*skoXC1*(1/3)<=1,skoXC1*(-1+skoXC1*skoXC1*(-1/6))<=0,skoXC1*skoXC1*skoXC1*skoXC1*(-2/3)<=0,skoXC1*skoXC1<=2,skoXC1*skoXC1*((-1/2)+skoXC1*skoXC1*(-1/6))<=0,skoXC1*skoXC1*(-1/6)<=1,skoXC1*(-1+skoXC1*skoXC1*(1/3))<=0,(7/8)>skoXC1,skoXC1>0,skoXC1*skoXC1*(-1/2)>-3,skoXC1*skoXC1*(1/2)<=3,skoXC1*skoXC1*(24+skoXC1*skoXC1*(-10+skoXC1*skoXC1))<=16,skoXC1*skoXC1*(-80+skoXC1*skoXC1*(40+skoXC1*skoXC1*(-6+skoXC1*skoXC1*(1/8))))>-48,skoXC1*skoXC1*(80+skoXC1*skoXC1*(-40+skoXC1*skoXC1*(6+skoXC1*skoXC1*(-1/8))))<=48,skoXC1*skoXC1>0,skoXC1*(-1+skoXC1*skoXC1*((1/3)+skoXC1*skoXC1*(3/20)))<=0,skoXC1*skoXC1*((-1/6)+skoXC1*skoXC1*(-3/40))<=1,skoXC1*skoXC1*((-1/2)+skoXC1*skoXC1*((7/120)+skoXC1*skoXC1*(-3/40)))<=0,skoXC1*skoXC1*skoXC1*skoXC1*((-13/60)+skoXC1*skoXC1*(-3/10))<=0,skoXC1*skoXC1*skoXC1*skoXC1*((-17/120)+skoXC1*skoXC1*(3/80))<=0,skoXC1*skoXC1*((1/3)+skoXC1*skoXC1*(3/20))<=1,skoXC1*skoXC1*skoXC1*skoXC1*((32/15)+skoXC1*skoXC1*((-296/15)+skoXC1*skoXC1*((391/15)+skoXC1*skoXC1*((-146/15)+skoXC1*skoXC1*(3/4)))))<=0,skoXC1*skoXC1*((1/6)+skoXC1*skoXC1*(3/40))>-1,skoXC1*(-1+skoXC1*skoXC1*((-1/6)+skoXC1*skoXC1*(-3/40)))<=0]], Reals]]

% In QepcadB format:
(E skoXC1) [[(skoXC1 skoXC1)<=2]/\[[(skoXC1 skoXC1 (-1/2+(skoXC1 skoXC1 (7/120+(skoXC1 skoXC1 (33/560+(skoXC1 skoXC1 (-5/112))))))))<=0]/\[[(skoXC1 skoXC1 (-1/6+(skoXC1 skoXC1 (-3/40+(skoXC1 skoXC1 (-5/112))))))<=1]/\[[(skoXC1 (-1+(skoXC1 skoXC1 (1/3+(skoXC1 skoXC1 (3/20+(skoXC1 skoXC1 (5/56))))))))<=0]/\[[(skoXC1 skoXC1 skoXC1 skoXC1 (-80/3+(skoXC1 skoXC1 (128/3+(skoXC1 skoXC1 (-55/3+(skoXC1 skoXC1 (5/3))))))))<=0]/\[[(skoXC1 skoXC1 (256+(skoXC1 skoXC1 (-160+(skoXC1 skoXC1 (32+(skoXC1 skoXC1 (-1))))))))<=128]/\[[(skoXC1 skoXC1 (1/3))<=1]/\[[(skoXC1 (-1+(skoXC1 skoXC1 (-1/6))))<=0]/\[[(skoXC1 skoXC1 skoXC1 skoXC1 (-2/3))<=0]/\[[(skoXC1 skoXC1)<=2]/\[[(skoXC1 skoXC1 (-1/2+(skoXC1 skoXC1 (-1/6))))<=0]/\[[(skoXC1 skoXC1 (-1/6))<=1]/\[[(skoXC1 (-1+(skoXC1 skoXC1 (1/3))))<=0]/\[[skoXC1<7/8]/\[[0<skoXC1]/\[[-3<(skoXC1 skoXC1 (-1/2))]/\[[(skoXC1 skoXC1 (1/2))<=3]/\[[(skoXC1 skoXC1 (24+(skoXC1 skoXC1 (-10+(skoXC1 skoXC1)))))<=16]/\[[-48<(skoXC1 skoXC1 (-80+(skoXC1 skoXC1 (40+(skoXC1 skoXC1 (-6+(skoXC1 skoXC1 (1/8))))))))]/\[[(skoXC1 skoXC1 (80+(skoXC1 skoXC1 (-40+(skoXC1 skoXC1 (6+(skoXC1 skoXC1 (-1/8))))))))<=48]/\[[0<(skoXC1 skoXC1)]/\[[(skoXC1 (-1+(skoXC1 skoXC1 (1/3+(skoXC1 skoXC1 (3/20))))))<=0]/\[[(skoXC1 skoXC1 (-1/6+(skoXC1 skoXC1 (-3/40))))<=1]/\[[(skoXC1 skoXC1 (-1/2+(skoXC1 skoXC1 (7/120+(skoXC1 skoXC1 (-3/40))))))<=0]/\[[(skoXC1 skoXC1 skoXC1 skoXC1 (-13/60+(skoXC1 skoXC1 (-3/10))))<=0]/\[[(skoXC1 skoXC1 skoXC1 skoXC1 (-17/120+(skoXC1 skoXC1 (3/80))))<=0]/\[[(skoXC1 skoXC1 (1/3+(skoXC1 skoXC1 (3/20))))<=1]/\[[(skoXC1 skoXC1 skoXC1 skoXC1 (32/15+(skoXC1 skoXC1 (-296/15+(skoXC1 skoXC1 (391/15+(skoXC1 skoXC1 (-146/15+(skoXC1 skoXC1 (3/4))))))))))<=0]/\[[-1<(skoXC1 skoXC1 (1/6+(skoXC1 skoXC1 (3/40))))]/\[(skoXC1 (-1+(skoXC1 skoXC1 (-1/6+(skoXC1 skoXC1 (-3/40))))))<=0]]]]]]]]]]]]]]]]]]]]]]]]]]]]]].

% In SMTLib2 format:
(declare-fun skoXC1 () Real) (assert (and (<= (* skoXC1 skoXC1) 2.) (and (<= (* skoXC1 (* skoXC1 (+ (/ (- 1.) 2.) (* skoXC1 (* skoXC1 (+ (/ 7. 120.) (* skoXC1 (* skoXC1 (+ (/ 33. 560.) (* skoXC1 (* skoXC1 (/ (- 5.) 112.)))))))))))) 0.) (and (<= (* skoXC1 (* skoXC1 (+ (/ (- 1.) 6.) (* skoXC1 (* skoXC1 (+ (/ (- 3.) 40.) (* skoXC1 (* skoXC1 (/ (- 5.) 112.))))))))) 1.) (and (<= (* skoXC1 (+ (- 1.) (* skoXC1 (* skoXC1 (+ (/ 1. 3.) (* skoXC1 (* skoXC1 (+ (/ 3. 20.) (* skoXC1 (* skoXC1 (/ 5. 56.))))))))))) 0.) (and (<= (* skoXC1 (* skoXC1 (* skoXC1 (* skoXC1 (+ (/ (- 80.) 3.) (* skoXC1 (* skoXC1 (+ (/ 128. 3.) (* skoXC1 (* skoXC1 (+ (/ (- 55.) 3.) (* skoXC1 (* skoXC1 (/ 5. 3.)))))))))))))) 0.) (and (<= (* skoXC1 (* skoXC1 (+ 256. (* skoXC1 (* skoXC1 (+ (- 160.) (* skoXC1 (* skoXC1 (+ 32. (* skoXC1 (* skoXC1 (- 1.)))))))))))) 128.) (and (<= (* skoXC1 (* skoXC1 (/ 1. 3.))) 1.) (and (<= (* skoXC1 (+ (- 1.) (* skoXC1 (* skoXC1 (/ (- 1.) 6.))))) 0.) (and (<= (* skoXC1 (* skoXC1 (* skoXC1 (* skoXC1 (/ (- 2.) 3.))))) 0.) (and (<= (* skoXC1 skoXC1) 2.) (and (<= (* skoXC1 (* skoXC1 (+ (/ (- 1.) 2.) (* skoXC1 (* skoXC1 (/ (- 1.) 6.)))))) 0.) (and (<= (* skoXC1 (* skoXC1 (/ (- 1.) 6.))) 1.) (and (<= (* skoXC1 (+ (- 1.) (* skoXC1 (* skoXC1 (/ 1. 3.))))) 0.) (and (> (/ 7. 8.) skoXC1) (and (> skoXC1 0.) (and (> (* skoXC1 (* skoXC1 (/ (- 1.) 2.))) (- 3.)) (and (<= (* skoXC1 (* skoXC1 (/ 1. 2.))) 3.) (and (<= (* skoXC1 (* skoXC1 (+ 24. (* skoXC1 (* skoXC1 (+ (- 10.) (* skoXC1 skoXC1))))))) 16.) (and (> (* skoXC1 (* skoXC1 (+ (- 80.) (* skoXC1 (* skoXC1 (+ 40. (* skoXC1 (* skoXC1 (+ (- 6.) (* skoXC1 (* skoXC1 (/ 1. 8.)))))))))))) (- 48.)) (and (<= (* skoXC1 (* skoXC1 (+ 80. (* skoXC1 (* skoXC1 (+ (- 40.) (* skoXC1 (* skoXC1 (+ 6. (* skoXC1 (* skoXC1 (/ (- 1.) 8.)))))))))))) 48.) (and (> (* skoXC1 skoXC1) 0.) (and (<= (* skoXC1 (+ (- 1.) (* skoXC1 (* skoXC1 (+ (/ 1. 3.) (* skoXC1 (* skoXC1 (/ 3. 20.)))))))) 0.) (and (<= (* skoXC1 (* skoXC1 (+ (/ (- 1.) 6.) (* skoXC1 (* skoXC1 (/ (- 3.) 40.)))))) 1.) (and (<= (* skoXC1 (* skoXC1 (+ (/ (- 1.) 2.) (* skoXC1 (* skoXC1 (+ (/ 7. 120.) (* skoXC1 (* skoXC1 (/ (- 3.) 40.))))))))) 0.) (and (<= (* skoXC1 (* skoXC1 (* skoXC1 (* skoXC1 (+ (/ (- 13.) 60.) (* skoXC1 (* skoXC1 (/ (- 3.) 10.)))))))) 0.) (and (<= (* skoXC1 (* skoXC1 (* skoXC1 (* skoXC1 (+ (/ (- 17.) 120.) (* skoXC1 (* skoXC1 (/ 3. 80.)))))))) 0.) (and (<= (* skoXC1 (* skoXC1 (+ (/ 1. 3.) (* skoXC1 (* skoXC1 (/ 3. 20.)))))) 1.) (and (<= (* skoXC1 (* skoXC1 (* skoXC1 (* skoXC1 (+ (/ 32. 15.) (* skoXC1 (* skoXC1 (+ (/ (- 296.) 15.) (* skoXC1 (* skoXC1 (+ (/ 391. 15.) (* skoXC1 (* skoXC1 (+ (/ (- 146.) 15.) (* skoXC1 (* skoXC1 (/ 3. 4.))))))))))))))))) 0.) (and (> (* skoXC1 (* skoXC1 (+ (/ 1. 6.) (* skoXC1 (* skoXC1 (/ 3. 40.)))))) (- 1.)) (<= (* skoXC1 (+ (- 1.) (* skoXC1 (* skoXC1 (+ (/ (- 1.) 6.) (* skoXC1 (* skoXC1 (/ (- 3.) 40.)))))))) 0.)))))))))))))))))))))))))))))))

% In GRF format:
(sequent " MetiTarski formula " (antecedent (<= (* skoXC1 skoXC1) 2.) (<= (* skoXC1 (* skoXC1 (+ (/ (- 1.) 2.) (* skoXC1 (* skoXC1 (+ (/ 7. 120.) (* skoXC1 (* skoXC1 (+ (/ 33. 560.) (* skoXC1 (* skoXC1 (/ (- 5.) 112.)))))))))))) 0.) (<= (* skoXC1 (* skoXC1 (+ (/ (- 1.) 6.) (* skoXC1 (* skoXC1 (+ (/ (- 3.) 40.) (* skoXC1 (* skoXC1 (/ (- 5.) 112.))))))))) 1.) (<= (* skoXC1 (+ (- 1.) (* skoXC1 (* skoXC1 (+ (/ 1. 3.) (* skoXC1 (* skoXC1 (+ (/ 3. 20.) (* skoXC1 (* skoXC1 (/ 5. 56.))))))))))) 0.) (<= (* skoXC1 (* skoXC1 (* skoXC1 (* skoXC1 (+ (/ (- 80.) 3.) (* skoXC1 (* skoXC1 (+ (/ 128. 3.) (* skoXC1 (* skoXC1 (+ (/ (- 55.) 3.) (* skoXC1 (* skoXC1 (/ 5. 3.)))))))))))))) 0.) (<= (* skoXC1 (* skoXC1 (+ 256. (* skoXC1 (* skoXC1 (+ (- 160.) (* skoXC1 (* skoXC1 (+ 32. (* skoXC1 (* skoXC1 (- 1.)))))))))))) 128.) (<= (* skoXC1 (* skoXC1 (/ 1. 3.))) 1.) (<= (* skoXC1 (+ (- 1.) (* skoXC1 (* skoXC1 (/ (- 1.) 6.))))) 0.) (<= (* skoXC1 (* skoXC1 (* skoXC1 (* skoXC1 (/ (- 2.) 3.))))) 0.) (<= (* skoXC1 skoXC1) 2.) (<= (* skoXC1 (* skoXC1 (+ (/ (- 1.) 2.) (* skoXC1 (* skoXC1 (/ (- 1.) 6.)))))) 0.) (<= (* skoXC1 (* skoXC1 (/ (- 1.) 6.))) 1.) (<= (* skoXC1 (+ (- 1.) (* skoXC1 (* skoXC1 (/ 1. 3.))))) 0.) (> (/ 7. 8.) skoXC1) (> skoXC1 0.) (> (* skoXC1 (* skoXC1 (/ (- 1.) 2.))) (- 3.)) (<= (* skoXC1 (* skoXC1 (/ 1. 2.))) 3.) (<= (* skoXC1 (* skoXC1 (+ 24. (* skoXC1 (* skoXC1 (+ (- 10.) (* skoXC1 skoXC1))))))) 16.) (> (* skoXC1 (* skoXC1 (+ (- 80.) (* skoXC1 (* skoXC1 (+ 40. (* skoXC1 (* skoXC1 (+ (- 6.) (* skoXC1 (* skoXC1 (/ 1. 8.)))))))))))) (- 48.)) (<= (* skoXC1 (* skoXC1 (+ 80. (* skoXC1 (* skoXC1 (+ (- 40.) (* skoXC1 (* skoXC1 (+ 6. (* skoXC1 (* skoXC1 (/ (- 1.) 8.)))))))))))) 48.) (> (* skoXC1 skoXC1) 0.) (<= (* skoXC1 (+ (- 1.) (* skoXC1 (* skoXC1 (+ (/ 1. 3.) (* skoXC1 (* skoXC1 (/ 3. 20.)))))))) 0.) (<= (* skoXC1 (* skoXC1 (+ (/ (- 1.) 6.) (* skoXC1 (* skoXC1 (/ (- 3.) 40.)))))) 1.) (<= (* skoXC1 (* skoXC1 (+ (/ (- 1.) 2.) (* skoXC1 (* skoXC1 (+ (/ 7. 120.) (* skoXC1 (* skoXC1 (/ (- 3.) 40.))))))))) 0.) (<= (* skoXC1 (* skoXC1 (* skoXC1 (* skoXC1 (+ (/ (- 13.) 60.) (* skoXC1 (* skoXC1 (/ (- 3.) 10.)))))))) 0.) (<= (* skoXC1 (* skoXC1 (* skoXC1 (* skoXC1 (+ (/ (- 17.) 120.) (* skoXC1 (* skoXC1 (/ 3. 80.)))))))) 0.) (<= (* skoXC1 (* skoXC1 (+ (/ 1. 3.) (* skoXC1 (* skoXC1 (/ 3. 20.)))))) 1.) (<= (* skoXC1 (* skoXC1 (* skoXC1 (* skoXC1 (+ (/ 32. 15.) (* skoXC1 (* skoXC1 (+ (/ (- 296.) 15.) (* skoXC1 (* skoXC1 (+ (/ 391. 15.) (* skoXC1 (* skoXC1 (+ (/ (- 146.) 15.) (* skoXC1 (* skoXC1 (/ 3. 4.))))))))))))))))) 0.) (> (* skoXC1 (* skoXC1 (+ (/ 1. 6.) (* skoXC1 (* skoXC1 (/ 3. 40.)))))) (- 1.))) (succedent (> (* skoXC1 (+ (- 1.) (* skoXC1 (* skoXC1 (+ (/ (- 1.) 6.) (* skoXC1 (* skoXC1 (/ (- 3.) 40.)))))))) 0.)))
-----[end problem]-----

-----[begin problem]-----
% In Mathematica format:
Timing[Resolve[Exists[{skoXC1}, And[skoXC1*skoXC1*skoXC1*skoXC1*((-13/60)+skoXC1*skoXC1*((-9/280)+skoXC1*skoXC1*(-5/28)))<=0,skoXC1*skoXC1*((-1/2)+skoXC1*skoXC1*((7/120)+skoXC1*skoXC1*((33/560)+skoXC1*skoXC1*(-5/112))))<=0,skoXC1*skoXC1*((-1/6)+skoXC1*skoXC1*((-3/40)+skoXC1*skoXC1*(-5/112)))<=1,skoXC1*(-1+skoXC1*skoXC1*((1/3)+skoXC1*skoXC1*((3/20)+skoXC1*skoXC1*(5/56))))<=0,skoXC1*skoXC1*skoXC1*skoXC1*((-80/3)+skoXC1*skoXC1*((128/3)+skoXC1*skoXC1*((-55/3)+skoXC1*skoXC1*(5/3))))<=0,skoXC1*skoXC1*(256+skoXC1*skoXC1*(-160+skoXC1*skoXC1*(32+skoXC1*skoXC1*-1)))<=128,skoXC1*skoXC1*(1/3)<=1,skoXC1*(-1+skoXC1*skoXC1*(-1/6))<=0,skoXC1*skoXC1*skoXC1*skoXC1*(-2/3)<=0,skoXC1*skoXC1<=2,skoXC1*skoXC1*((-1/2)+skoXC1*skoXC1*(-1/6))<=0,skoXC1*skoXC1*(-1/6)<=1,skoXC1*(-1+skoXC1*skoXC1*(1/3))<=0,(7/8)>skoXC1,skoXC1>0,skoXC1*skoXC1*(-1/2)>-3,skoXC1*skoXC1*(1/2)<=3,skoXC1*skoXC1*(24+skoXC1*skoXC1*(-10+skoXC1*skoXC1))<=16,skoXC1*skoXC1*(-80+skoXC1*skoXC1*(40+skoXC1*skoXC1*(-6+skoXC1*skoXC1*(1/8))))>-48,skoXC1*skoXC1*(80+skoXC1*skoXC1*(-40+skoXC1*skoXC1*(6+skoXC1*skoXC1*(-1/8))))<=48,skoXC1*skoXC1>0,skoXC1*(-1+skoXC1*skoXC1*((1/3)+skoXC1*skoXC1*(3/20)))<=0,skoXC1*skoXC1*((-1/6)+skoXC1*skoXC1*(-3/40))<=1,skoXC1*skoXC1*((-1/2)+skoXC1*skoXC1*((7/120)+skoXC1*skoXC1*(-3/40)))<=0,skoXC1*skoXC1*skoXC1*skoXC1*((-13/60)+skoXC1*skoXC1*(-3/10))<=0,skoXC1*skoXC1*skoXC1*skoXC1*((-17/120)+skoXC1*skoXC1*(3/80))<=0,skoXC1*skoXC1*((1/3)+skoXC1*skoXC1*(3/20))<=1,skoXC1*skoXC1*skoXC1*skoXC1*((32/15)+skoXC1*skoXC1*((-296/15)+skoXC1*skoXC1*((391/15)+skoXC1*skoXC1*((-146/15)+skoXC1*skoXC1*(3/4)))))<=0,skoXC1*skoXC1*((1/6)+skoXC1*skoXC1*(3/40))>-1,skoXC1*(-1+skoXC1*skoXC1*((-1/6)+skoXC1*skoXC1*(-3/40)))<=0]], Reals]]

% In QepcadB format:
(E skoXC1) [[(skoXC1 skoXC1 skoXC1 skoXC1 (-13/60+(skoXC1 skoXC1 (-9/280+(skoXC1 skoXC1 (-5/28))))))<=0]/\[[(skoXC1 skoXC1 (-1/2+(skoXC1 skoXC1 (7/120+(skoXC1 skoXC1 (33/560+(skoXC1 skoXC1 (-5/112))))))))<=0]/\[[(skoXC1 skoXC1 (-1/6+(skoXC1 skoXC1 (-3/40+(skoXC1 skoXC1 (-5/112))))))<=1]/\[[(skoXC1 (-1+(skoXC1 skoXC1 (1/3+(skoXC1 skoXC1 (3/20+(skoXC1 skoXC1 (5/56))))))))<=0]/\[[(skoXC1 skoXC1 skoXC1 skoXC1 (-80/3+(skoXC1 skoXC1 (128/3+(skoXC1 skoXC1 (-55/3+(skoXC1 skoXC1 (5/3))))))))<=0]/\[[(skoXC1 skoXC1 (256+(skoXC1 skoXC1 (-160+(skoXC1 skoXC1 (32+(skoXC1 skoXC1 (-1))))))))<=128]/\[[(skoXC1 skoXC1 (1/3))<=1]/\[[(skoXC1 (-1+(skoXC1 skoXC1 (-1/6))))<=0]/\[[(skoXC1 skoXC1 skoXC1 skoXC1 (-2/3))<=0]/\[[(skoXC1 skoXC1)<=2]/\[[(skoXC1 skoXC1 (-1/2+(skoXC1 skoXC1 (-1/6))))<=0]/\[[(skoXC1 skoXC1 (-1/6))<=1]/\[[(skoXC1 (-1+(skoXC1 skoXC1 (1/3))))<=0]/\[[skoXC1<7/8]/\[[0<skoXC1]/\[[-3<(skoXC1 skoXC1 (-1/2))]/\[[(skoXC1 skoXC1 (1/2))<=3]/\[[(skoXC1 skoXC1 (24+(skoXC1 skoXC1 (-10+(skoXC1 skoXC1)))))<=16]/\[[-48<(skoXC1 skoXC1 (-80+(skoXC1 skoXC1 (40+(skoXC1 skoXC1 (-6+(skoXC1 skoXC1 (1/8))))))))]/\[[(skoXC1 skoXC1 (80+(skoXC1 skoXC1 (-40+(skoXC1 skoXC1 (6+(skoXC1 skoXC1 (-1/8))))))))<=48]/\[[0<(skoXC1 skoXC1)]/\[[(skoXC1 (-1+(skoXC1 skoXC1 (1/3+(skoXC1 skoXC1 (3/20))))))<=0]/\[[(skoXC1 skoXC1 (-1/6+(skoXC1 skoXC1 (-3/40))))<=1]/\[[(skoXC1 skoXC1 (-1/2+(skoXC1 skoXC1 (7/120+(skoXC1 skoXC1 (-3/40))))))<=0]/\[[(skoXC1 skoXC1 skoXC1 skoXC1 (-13/60+(skoXC1 skoXC1 (-3/10))))<=0]/\[[(skoXC1 skoXC1 skoXC1 skoXC1 (-17/120+(skoXC1 skoXC1 (3/80))))<=0]/\[[(skoXC1 skoXC1 (1/3+(skoXC1 skoXC1 (3/20))))<=1]/\[[(skoXC1 skoXC1 skoXC1 skoXC1 (32/15+(skoXC1 skoXC1 (-296/15+(skoXC1 skoXC1 (391/15+(skoXC1 skoXC1 (-146/15+(skoXC1 skoXC1 (3/4))))))))))<=0]/\[[-1<(skoXC1 skoXC1 (1/6+(skoXC1 skoXC1 (3/40))))]/\[(skoXC1 (-1+(skoXC1 skoXC1 (-1/6+(skoXC1 skoXC1 (-3/40))))))<=0]]]]]]]]]]]]]]]]]]]]]]]]]]]]]].

% In SMTLib2 format:
(declare-fun skoXC1 () Real) (assert (and (<= (* skoXC1 (* skoXC1 (* skoXC1 (* skoXC1 (+ (/ (- 13.) 60.) (* skoXC1 (* skoXC1 (+ (/ (- 9.) 280.) (* skoXC1 (* skoXC1 (/ (- 5.) 28.))))))))))) 0.) (and (<= (* skoXC1 (* skoXC1 (+ (/ (- 1.) 2.) (* skoXC1 (* skoXC1 (+ (/ 7. 120.) (* skoXC1 (* skoXC1 (+ (/ 33. 560.) (* skoXC1 (* skoXC1 (/ (- 5.) 112.)))))))))))) 0.) (and (<= (* skoXC1 (* skoXC1 (+ (/ (- 1.) 6.) (* skoXC1 (* skoXC1 (+ (/ (- 3.) 40.) (* skoXC1 (* skoXC1 (/ (- 5.) 112.))))))))) 1.) (and (<= (* skoXC1 (+ (- 1.) (* skoXC1 (* skoXC1 (+ (/ 1. 3.) (* skoXC1 (* skoXC1 (+ (/ 3. 20.) (* skoXC1 (* skoXC1 (/ 5. 56.))))))))))) 0.) (and (<= (* skoXC1 (* skoXC1 (* skoXC1 (* skoXC1 (+ (/ (- 80.) 3.) (* skoXC1 (* skoXC1 (+ (/ 128. 3.) (* skoXC1 (* skoXC1 (+ (/ (- 55.) 3.) (* skoXC1 (* skoXC1 (/ 5. 3.)))))))))))))) 0.) (and (<= (* skoXC1 (* skoXC1 (+ 256. (* skoXC1 (* skoXC1 (+ (- 160.) (* skoXC1 (* skoXC1 (+ 32. (* skoXC1 (* skoXC1 (- 1.)))))))))))) 128.) (and (<= (* skoXC1 (* skoXC1 (/ 1. 3.))) 1.) (and (<= (* skoXC1 (+ (- 1.) (* skoXC1 (* skoXC1 (/ (- 1.) 6.))))) 0.) (and (<= (* skoXC1 (* skoXC1 (* skoXC1 (* skoXC1 (/ (- 2.) 3.))))) 0.) (and (<= (* skoXC1 skoXC1) 2.) (and (<= (* skoXC1 (* skoXC1 (+ (/ (- 1.) 2.) (* skoXC1 (* skoXC1 (/ (- 1.) 6.)))))) 0.) (and (<= (* skoXC1 (* skoXC1 (/ (- 1.) 6.))) 1.) (and (<= (* skoXC1 (+ (- 1.) (* skoXC1 (* skoXC1 (/ 1. 3.))))) 0.) (and (> (/ 7. 8.) skoXC1) (and (> skoXC1 0.) (and (> (* skoXC1 (* skoXC1 (/ (- 1.) 2.))) (- 3.)) (and (<= (* skoXC1 (* skoXC1 (/ 1. 2.))) 3.) (and (<= (* skoXC1 (* skoXC1 (+ 24. (* skoXC1 (* skoXC1 (+ (- 10.) (* skoXC1 skoXC1))))))) 16.) (and (> (* skoXC1 (* skoXC1 (+ (- 80.) (* skoXC1 (* skoXC1 (+ 40. (* skoXC1 (* skoXC1 (+ (- 6.) (* skoXC1 (* skoXC1 (/ 1. 8.)))))))))))) (- 48.)) (and (<= (* skoXC1 (* skoXC1 (+ 80. (* skoXC1 (* skoXC1 (+ (- 40.) (* skoXC1 (* skoXC1 (+ 6. (* skoXC1 (* skoXC1 (/ (- 1.) 8.)))))))))))) 48.) (and (> (* skoXC1 skoXC1) 0.) (and (<= (* skoXC1 (+ (- 1.) (* skoXC1 (* skoXC1 (+ (/ 1. 3.) (* skoXC1 (* skoXC1 (/ 3. 20.)))))))) 0.) (and (<= (* skoXC1 (* skoXC1 (+ (/ (- 1.) 6.) (* skoXC1 (* skoXC1 (/ (- 3.) 40.)))))) 1.) (and (<= (* skoXC1 (* skoXC1 (+ (/ (- 1.) 2.) (* skoXC1 (* skoXC1 (+ (/ 7. 120.) (* skoXC1 (* skoXC1 (/ (- 3.) 40.))))))))) 0.) (and (<= (* skoXC1 (* skoXC1 (* skoXC1 (* skoXC1 (+ (/ (- 13.) 60.) (* skoXC1 (* skoXC1 (/ (- 3.) 10.)))))))) 0.) (and (<= (* skoXC1 (* skoXC1 (* skoXC1 (* skoXC1 (+ (/ (- 17.) 120.) (* skoXC1 (* skoXC1 (/ 3. 80.)))))))) 0.) (and (<= (* skoXC1 (* skoXC1 (+ (/ 1. 3.) (* skoXC1 (* skoXC1 (/ 3. 20.)))))) 1.) (and (<= (* skoXC1 (* skoXC1 (* skoXC1 (* skoXC1 (+ (/ 32. 15.) (* skoXC1 (* skoXC1 (+ (/ (- 296.) 15.) (* skoXC1 (* skoXC1 (+ (/ 391. 15.) (* skoXC1 (* skoXC1 (+ (/ (- 146.) 15.) (* skoXC1 (* skoXC1 (/ 3. 4.))))))))))))))))) 0.) (and (> (* skoXC1 (* skoXC1 (+ (/ 1. 6.) (* skoXC1 (* skoXC1 (/ 3. 40.)))))) (- 1.)) (<= (* skoXC1 (+ (- 1.) (* skoXC1 (* skoXC1 (+ (/ (- 1.) 6.) (* skoXC1 (* skoXC1 (/ (- 3.) 40.)))))))) 0.)))))))))))))))))))))))))))))))

% In GRF format:
(sequent " MetiTarski formula " (antecedent (<= (* skoXC1 (* skoXC1 (* skoXC1 (* skoXC1 (+ (/ (- 13.) 60.) (* skoXC1 (* skoXC1 (+ (/ (- 9.) 280.) (* skoXC1 (* skoXC1 (/ (- 5.) 28.))))))))))) 0.) (<= (* skoXC1 (* skoXC1 (+ (/ (- 1.) 2.) (* skoXC1 (* skoXC1 (+ (/ 7. 120.) (* skoXC1 (* skoXC1 (+ (/ 33. 560.) (* skoXC1 (* skoXC1 (/ (- 5.) 112.)))))))))))) 0.) (<= (* skoXC1 (* skoXC1 (+ (/ (- 1.) 6.) (* skoXC1 (* skoXC1 (+ (/ (- 3.) 40.) (* skoXC1 (* skoXC1 (/ (- 5.) 112.))))))))) 1.) (<= (* skoXC1 (+ (- 1.) (* skoXC1 (* skoXC1 (+ (/ 1. 3.) (* skoXC1 (* skoXC1 (+ (/ 3. 20.) (* skoXC1 (* skoXC1 (/ 5. 56.))))))))))) 0.) (<= (* skoXC1 (* skoXC1 (* skoXC1 (* skoXC1 (+ (/ (- 80.) 3.) (* skoXC1 (* skoXC1 (+ (/ 128. 3.) (* skoXC1 (* skoXC1 (+ (/ (- 55.) 3.) (* skoXC1 (* skoXC1 (/ 5. 3.)))))))))))))) 0.) (<= (* skoXC1 (* skoXC1 (+ 256. (* skoXC1 (* skoXC1 (+ (- 160.) (* skoXC1 (* skoXC1 (+ 32. (* skoXC1 (* skoXC1 (- 1.)))))))))))) 128.) (<= (* skoXC1 (* skoXC1 (/ 1. 3.))) 1.) (<= (* skoXC1 (+ (- 1.) (* skoXC1 (* skoXC1 (/ (- 1.) 6.))))) 0.) (<= (* skoXC1 (* skoXC1 (* skoXC1 (* skoXC1 (/ (- 2.) 3.))))) 0.) (<= (* skoXC1 skoXC1) 2.) (<= (* skoXC1 (* skoXC1 (+ (/ (- 1.) 2.) (* skoXC1 (* skoXC1 (/ (- 1.) 6.)))))) 0.) (<= (* skoXC1 (* skoXC1 (/ (- 1.) 6.))) 1.) (<= (* skoXC1 (+ (- 1.) (* skoXC1 (* skoXC1 (/ 1. 3.))))) 0.) (> (/ 7. 8.) skoXC1) (> skoXC1 0.) (> (* skoXC1 (* skoXC1 (/ (- 1.) 2.))) (- 3.)) (<= (* skoXC1 (* skoXC1 (/ 1. 2.))) 3.) (<= (* skoXC1 (* skoXC1 (+ 24. (* skoXC1 (* skoXC1 (+ (- 10.) (* skoXC1 skoXC1))))))) 16.) (> (* skoXC1 (* skoXC1 (+ (- 80.) (* skoXC1 (* skoXC1 (+ 40. (* skoXC1 (* skoXC1 (+ (- 6.) (* skoXC1 (* skoXC1 (/ 1. 8.)))))))))))) (- 48.)) (<= (* skoXC1 (* skoXC1 (+ 80. (* skoXC1 (* skoXC1 (+ (- 40.) (* skoXC1 (* skoXC1 (+ 6. (* skoXC1 (* skoXC1 (/ (- 1.) 8.)))))))))))) 48.) (> (* skoXC1 skoXC1) 0.) (<= (* skoXC1 (+ (- 1.) (* skoXC1 (* skoXC1 (+ (/ 1. 3.) (* skoXC1 (* skoXC1 (/ 3. 20.)))))))) 0.) (<= (* skoXC1 (* skoXC1 (+ (/ (- 1.) 6.) (* skoXC1 (* skoXC1 (/ (- 3.) 40.)))))) 1.) (<= (* skoXC1 (* skoXC1 (+ (/ (- 1.) 2.) (* skoXC1 (* skoXC1 (+ (/ 7. 120.) (* skoXC1 (* skoXC1 (/ (- 3.) 40.))))))))) 0.) (<= (* skoXC1 (* skoXC1 (* skoXC1 (* skoXC1 (+ (/ (- 13.) 60.) (* skoXC1 (* skoXC1 (/ (- 3.) 10.)))))))) 0.) (<= (* skoXC1 (* skoXC1 (* skoXC1 (* skoXC1 (+ (/ (- 17.) 120.) (* skoXC1 (* skoXC1 (/ 3. 80.)))))))) 0.) (<= (* skoXC1 (* skoXC1 (+ (/ 1. 3.) (* skoXC1 (* skoXC1 (/ 3. 20.)))))) 1.) (<= (* skoXC1 (* skoXC1 (* skoXC1 (* skoXC1 (+ (/ 32. 15.) (* skoXC1 (* skoXC1 (+ (/ (- 296.) 15.) (* skoXC1 (* skoXC1 (+ (/ 391. 15.) (* skoXC1 (* skoXC1 (+ (/ (- 146.) 15.) (* skoXC1 (* skoXC1 (/ 3. 4.))))))))))))))))) 0.) (> (* skoXC1 (* skoXC1 (+ (/ 1. 6.) (* skoXC1 (* skoXC1 (/ 3. 40.)))))) (- 1.))) (succedent (> (* skoXC1 (+ (- 1.) (* skoXC1 (* skoXC1 (+ (/ (- 1.) 6.) (* skoXC1 (* skoXC1 (/ (- 3.) 40.)))))))) 0.)))
-----[end problem]-----

-----[begin problem]-----
% In Mathematica format:
Timing[Resolve[Exists[{skoXC1}, And[skoXC1*skoXC1*((-1/6)+skoXC1*skoXC1*((-3/40)+skoXC1*skoXC1*(-5/112)))<=1,skoXC1*skoXC1*skoXC1*skoXC1*((-13/60)+skoXC1*skoXC1*((-9/280)+skoXC1*skoXC1*(-5/28)))<=0,skoXC1*skoXC1*((-1/2)+skoXC1*skoXC1*((7/120)+skoXC1*skoXC1*((33/560)+skoXC1*skoXC1*(-5/112))))<=0,skoXC1*skoXC1*((-1/6)+skoXC1*skoXC1*((-3/40)+skoXC1*skoXC1*(-5/112)))<=1,skoXC1*(-1+skoXC1*skoXC1*((1/3)+skoXC1*skoXC1*((3/20)+skoXC1*skoXC1*(5/56))))<=0,skoXC1*skoXC1*skoXC1*skoXC1*((-80/3)+skoXC1*skoXC1*((128/3)+skoXC1*skoXC1*((-55/3)+skoXC1*skoXC1*(5/3))))<=0,skoXC1*skoXC1*(256+skoXC1*skoXC1*(-160+skoXC1*skoXC1*(32+skoXC1*skoXC1*-1)))<=128,skoXC1*skoXC1*(1/3)<=1,skoXC1*(-1+skoXC1*skoXC1*(-1/6))<=0,skoXC1*skoXC1*skoXC1*skoXC1*(-2/3)<=0,skoXC1*skoXC1<=2,skoXC1*skoXC1*((-1/2)+skoXC1*skoXC1*(-1/6))<=0,skoXC1*skoXC1*(-1/6)<=1,skoXC1*(-1+skoXC1*skoXC1*(1/3))<=0,(7/8)>skoXC1,skoXC1>0,skoXC1*skoXC1*(-1/2)>-3,skoXC1*skoXC1*(1/2)<=3,skoXC1*skoXC1*(24+skoXC1*skoXC1*(-10+skoXC1*skoXC1))<=16,skoXC1*skoXC1*(-80+skoXC1*skoXC1*(40+skoXC1*skoXC1*(-6+skoXC1*skoXC1*(1/8))))>-48,skoXC1*skoXC1*(80+skoXC1*skoXC1*(-40+skoXC1*skoXC1*(6+skoXC1*skoXC1*(-1/8))))<=48,skoXC1*skoXC1>0,skoXC1*(-1+skoXC1*skoXC1*((1/3)+skoXC1*skoXC1*(3/20)))<=0,skoXC1*skoXC1*((-1/6)+skoXC1*skoXC1*(-3/40))<=1,skoXC1*skoXC1*((-1/2)+skoXC1*skoXC1*((7/120)+skoXC1*skoXC1*(-3/40)))<=0,skoXC1*skoXC1*skoXC1*skoXC1*((-13/60)+skoXC1*skoXC1*(-3/10))<=0,skoXC1*skoXC1*skoXC1*skoXC1*((-17/120)+skoXC1*skoXC1*(3/80))<=0,skoXC1*skoXC1*((1/3)+skoXC1*skoXC1*(3/20))<=1,skoXC1*skoXC1*skoXC1*skoXC1*((32/15)+skoXC1*skoXC1*((-296/15)+skoXC1*skoXC1*((391/15)+skoXC1*skoXC1*((-146/15)+skoXC1*skoXC1*(3/4)))))<=0,skoXC1*skoXC1*((1/6)+skoXC1*skoXC1*(3/40))>-1,skoXC1*(-1+skoXC1*skoXC1*((-1/6)+skoXC1*skoXC1*(-3/40)))<=0]], Reals]]

% In QepcadB format:
(E skoXC1) [[(skoXC1 skoXC1 (-1/6+(skoXC1 skoXC1 (-3/40+(skoXC1 skoXC1 (-5/112))))))<=1]/\[[(skoXC1 skoXC1 skoXC1 skoXC1 (-13/60+(skoXC1 skoXC1 (-9/280+(skoXC1 skoXC1 (-5/28))))))<=0]/\[[(skoXC1 skoXC1 (-1/2+(skoXC1 skoXC1 (7/120+(skoXC1 skoXC1 (33/560+(skoXC1 skoXC1 (-5/112))))))))<=0]/\[[(skoXC1 skoXC1 (-1/6+(skoXC1 skoXC1 (-3/40+(skoXC1 skoXC1 (-5/112))))))<=1]/\[[(skoXC1 (-1+(skoXC1 skoXC1 (1/3+(skoXC1 skoXC1 (3/20+(skoXC1 skoXC1 (5/56))))))))<=0]/\[[(skoXC1 skoXC1 skoXC1 skoXC1 (-80/3+(skoXC1 skoXC1 (128/3+(skoXC1 skoXC1 (-55/3+(skoXC1 skoXC1 (5/3))))))))<=0]/\[[(skoXC1 skoXC1 (256+(skoXC1 skoXC1 (-160+(skoXC1 skoXC1 (32+(skoXC1 skoXC1 (-1))))))))<=128]/\[[(skoXC1 skoXC1 (1/3))<=1]/\[[(skoXC1 (-1+(skoXC1 skoXC1 (-1/6))))<=0]/\[[(skoXC1 skoXC1 skoXC1 skoXC1 (-2/3))<=0]/\[[(skoXC1 skoXC1)<=2]/\[[(skoXC1 skoXC1 (-1/2+(skoXC1 skoXC1 (-1/6))))<=0]/\[[(skoXC1 skoXC1 (-1/6))<=1]/\[[(skoXC1 (-1+(skoXC1 skoXC1 (1/3))))<=0]/\[[skoXC1<7/8]/\[[0<skoXC1]/\[[-3<(skoXC1 skoXC1 (-1/2))]/\[[(skoXC1 skoXC1 (1/2))<=3]/\[[(skoXC1 skoXC1 (24+(skoXC1 skoXC1 (-10+(skoXC1 skoXC1)))))<=16]/\[[-48<(skoXC1 skoXC1 (-80+(skoXC1 skoXC1 (40+(skoXC1 skoXC1 (-6+(skoXC1 skoXC1 (1/8))))))))]/\[[(skoXC1 skoXC1 (80+(skoXC1 skoXC1 (-40+(skoXC1 skoXC1 (6+(skoXC1 skoXC1 (-1/8))))))))<=48]/\[[0<(skoXC1 skoXC1)]/\[[(skoXC1 (-1+(skoXC1 skoXC1 (1/3+(skoXC1 skoXC1 (3/20))))))<=0]/\[[(skoXC1 skoXC1 (-1/6+(skoXC1 skoXC1 (-3/40))))<=1]/\[[(skoXC1 skoXC1 (-1/2+(skoXC1 skoXC1 (7/120+(skoXC1 skoXC1 (-3/40))))))<=0]/\[[(skoXC1 skoXC1 skoXC1 skoXC1 (-13/60+(skoXC1 skoXC1 (-3/10))))<=0]/\[[(skoXC1 skoXC1 skoXC1 skoXC1 (-17/120+(skoXC1 skoXC1 (3/80))))<=0]/\[[(skoXC1 skoXC1 (1/3+(skoXC1 skoXC1 (3/20))))<=1]/\[[(skoXC1 skoXC1 skoXC1 skoXC1 (32/15+(skoXC1 skoXC1 (-296/15+(skoXC1 skoXC1 (391/15+(skoXC1 skoXC1 (-146/15+(skoXC1 skoXC1 (3/4))))))))))<=0]/\[[-1<(skoXC1 skoXC1 (1/6+(skoXC1 skoXC1 (3/40))))]/\[(skoXC1 (-1+(skoXC1 skoXC1 (-1/6+(skoXC1 skoXC1 (-3/40))))))<=0]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]].

% In SMTLib2 format:
(declare-fun skoXC1 () Real) (assert (and (<= (* skoXC1 (* skoXC1 (+ (/ (- 1.) 6.) (* skoXC1 (* skoXC1 (+ (/ (- 3.) 40.) (* skoXC1 (* skoXC1 (/ (- 5.) 112.))))))))) 1.) (and (<= (* skoXC1 (* skoXC1 (* skoXC1 (* skoXC1 (+ (/ (- 13.) 60.) (* skoXC1 (* skoXC1 (+ (/ (- 9.) 280.) (* skoXC1 (* skoXC1 (/ (- 5.) 28.))))))))))) 0.) (and (<= (* skoXC1 (* skoXC1 (+ (/ (- 1.) 2.) (* skoXC1 (* skoXC1 (+ (/ 7. 120.) (* skoXC1 (* skoXC1 (+ (/ 33. 560.) (* skoXC1 (* skoXC1 (/ (- 5.) 112.)))))))))))) 0.) (and (<= (* skoXC1 (* skoXC1 (+ (/ (- 1.) 6.) (* skoXC1 (* skoXC1 (+ (/ (- 3.) 40.) (* skoXC1 (* skoXC1 (/ (- 5.) 112.))))))))) 1.) (and (<= (* skoXC1 (+ (- 1.) (* skoXC1 (* skoXC1 (+ (/ 1. 3.) (* skoXC1 (* skoXC1 (+ (/ 3. 20.) (* skoXC1 (* skoXC1 (/ 5. 56.))))))))))) 0.) (and (<= (* skoXC1 (* skoXC1 (* skoXC1 (* skoXC1 (+ (/ (- 80.) 3.) (* skoXC1 (* skoXC1 (+ (/ 128. 3.) (* skoXC1 (* skoXC1 (+ (/ (- 55.) 3.) (* skoXC1 (* skoXC1 (/ 5. 3.)))))))))))))) 0.) (and (<= (* skoXC1 (* skoXC1 (+ 256. (* skoXC1 (* skoXC1 (+ (- 160.) (* skoXC1 (* skoXC1 (+ 32. (* skoXC1 (* skoXC1 (- 1.)))))))))))) 128.) (and (<= (* skoXC1 (* skoXC1 (/ 1. 3.))) 1.) (and (<= (* skoXC1 (+ (- 1.) (* skoXC1 (* skoXC1 (/ (- 1.) 6.))))) 0.) (and (<= (* skoXC1 (* skoXC1 (* skoXC1 (* skoXC1 (/ (- 2.) 3.))))) 0.) (and (<= (* skoXC1 skoXC1) 2.) (and (<= (* skoXC1 (* skoXC1 (+ (/ (- 1.) 2.) (* skoXC1 (* skoXC1 (/ (- 1.) 6.)))))) 0.) (and (<= (* skoXC1 (* skoXC1 (/ (- 1.) 6.))) 1.) (and (<= (* skoXC1 (+ (- 1.) (* skoXC1 (* skoXC1 (/ 1. 3.))))) 0.) (and (> (/ 7. 8.) skoXC1) (and (> skoXC1 0.) (and (> (* skoXC1 (* skoXC1 (/ (- 1.) 2.))) (- 3.)) (and (<= (* skoXC1 (* skoXC1 (/ 1. 2.))) 3.) (and (<= (* skoXC1 (* skoXC1 (+ 24. (* skoXC1 (* skoXC1 (+ (- 10.) (* skoXC1 skoXC1))))))) 16.) (and (> (* skoXC1 (* skoXC1 (+ (- 80.) (* skoXC1 (* skoXC1 (+ 40. (* skoXC1 (* skoXC1 (+ (- 6.) (* skoXC1 (* skoXC1 (/ 1. 8.)))))))))))) (- 48.)) (and (<= (* skoXC1 (* skoXC1 (+ 80. (* skoXC1 (* skoXC1 (+ (- 40.) (* skoXC1 (* skoXC1 (+ 6. (* skoXC1 (* skoXC1 (/ (- 1.) 8.)))))))))))) 48.) (and (> (* skoXC1 skoXC1) 0.) (and (<= (* skoXC1 (+ (- 1.) (* skoXC1 (* skoXC1 (+ (/ 1. 3.) (* skoXC1 (* skoXC1 (/ 3. 20.)))))))) 0.) (and (<= (* skoXC1 (* skoXC1 (+ (/ (- 1.) 6.) (* skoXC1 (* skoXC1 (/ (- 3.) 40.)))))) 1.) (and (<= (* skoXC1 (* skoXC1 (+ (/ (- 1.) 2.) (* skoXC1 (* skoXC1 (+ (/ 7. 120.) (* skoXC1 (* skoXC1 (/ (- 3.) 40.))))))))) 0.) (and (<= (* skoXC1 (* skoXC1 (* skoXC1 (* skoXC1 (+ (/ (- 13.) 60.) (* skoXC1 (* skoXC1 (/ (- 3.) 10.)))))))) 0.) (and (<= (* skoXC1 (* skoXC1 (* skoXC1 (* skoXC1 (+ (/ (- 17.) 120.) (* skoXC1 (* skoXC1 (/ 3. 80.)))))))) 0.) (and (<= (* skoXC1 (* skoXC1 (+ (/ 1. 3.) (* skoXC1 (* skoXC1 (/ 3. 20.)))))) 1.) (and (<= (* skoXC1 (* skoXC1 (* skoXC1 (* skoXC1 (+ (/ 32. 15.) (* skoXC1 (* skoXC1 (+ (/ (- 296.) 15.) (* skoXC1 (* skoXC1 (+ (/ 391. 15.) (* skoXC1 (* skoXC1 (+ (/ (- 146.) 15.) (* skoXC1 (* skoXC1 (/ 3. 4.))))))))))))))))) 0.) (and (> (* skoXC1 (* skoXC1 (+ (/ 1. 6.) (* skoXC1 (* skoXC1 (/ 3. 40.)))))) (- 1.)) (<= (* skoXC1 (+ (- 1.) (* skoXC1 (* skoXC1 (+ (/ (- 1.) 6.) (* skoXC1 (* skoXC1 (/ (- 3.) 40.)))))))) 0.))))))))))))))))))))))))))))))))

% In GRF format:
(sequent " MetiTarski formula " (antecedent (<= (* skoXC1 (* skoXC1 (+ (/ (- 1.) 6.) (* skoXC1 (* skoXC1 (+ (/ (- 3.) 40.) (* skoXC1 (* skoXC1 (/ (- 5.) 112.))))))))) 1.) (<= (* skoXC1 (* skoXC1 (* skoXC1 (* skoXC1 (+ (/ (- 13.) 60.) (* skoXC1 (* skoXC1 (+ (/ (- 9.) 280.) (* skoXC1 (* skoXC1 (/ (- 5.) 28.))))))))))) 0.) (<= (* skoXC1 (* skoXC1 (+ (/ (- 1.) 2.) (* skoXC1 (* skoXC1 (+ (/ 7. 120.) (* skoXC1 (* skoXC1 (+ (/ 33. 560.) (* skoXC1 (* skoXC1 (/ (- 5.) 112.)))))))))))) 0.) (<= (* skoXC1 (* skoXC1 (+ (/ (- 1.) 6.) (* skoXC1 (* skoXC1 (+ (/ (- 3.) 40.) (* skoXC1 (* skoXC1 (/ (- 5.) 112.))))))))) 1.) (<= (* skoXC1 (+ (- 1.) (* skoXC1 (* skoXC1 (+ (/ 1. 3.) (* skoXC1 (* skoXC1 (+ (/ 3. 20.) (* skoXC1 (* skoXC1 (/ 5. 56.))))))))))) 0.) (<= (* skoXC1 (* skoXC1 (* skoXC1 (* skoXC1 (+ (/ (- 80.) 3.) (* skoXC1 (* skoXC1 (+ (/ 128. 3.) (* skoXC1 (* skoXC1 (+ (/ (- 55.) 3.) (* skoXC1 (* skoXC1 (/ 5. 3.)))))))))))))) 0.) (<= (* skoXC1 (* skoXC1 (+ 256. (* skoXC1 (* skoXC1 (+ (- 160.) (* skoXC1 (* skoXC1 (+ 32. (* skoXC1 (* skoXC1 (- 1.)))))))))))) 128.) (<= (* skoXC1 (* skoXC1 (/ 1. 3.))) 1.) (<= (* skoXC1 (+ (- 1.) (* skoXC1 (* skoXC1 (/ (- 1.) 6.))))) 0.) (<= (* skoXC1 (* skoXC1 (* skoXC1 (* skoXC1 (/ (- 2.) 3.))))) 0.) (<= (* skoXC1 skoXC1) 2.) (<= (* skoXC1 (* skoXC1 (+ (/ (- 1.) 2.) (* skoXC1 (* skoXC1 (/ (- 1.) 6.)))))) 0.) (<= (* skoXC1 (* skoXC1 (/ (- 1.) 6.))) 1.) (<= (* skoXC1 (+ (- 1.) (* skoXC1 (* skoXC1 (/ 1. 3.))))) 0.) (> (/ 7. 8.) skoXC1) (> skoXC1 0.) (> (* skoXC1 (* skoXC1 (/ (- 1.) 2.))) (- 3.)) (<= (* skoXC1 (* skoXC1 (/ 1. 2.))) 3.) (<= (* skoXC1 (* skoXC1 (+ 24. (* skoXC1 (* skoXC1 (+ (- 10.) (* skoXC1 skoXC1))))))) 16.) (> (* skoXC1 (* skoXC1 (+ (- 80.) (* skoXC1 (* skoXC1 (+ 40. (* skoXC1 (* skoXC1 (+ (- 6.) (* skoXC1 (* skoXC1 (/ 1. 8.)))))))))))) (- 48.)) (<= (* skoXC1 (* skoXC1 (+ 80. (* skoXC1 (* skoXC1 (+ (- 40.) (* skoXC1 (* skoXC1 (+ 6. (* skoXC1 (* skoXC1 (/ (- 1.) 8.)))))))))))) 48.) (> (* skoXC1 skoXC1) 0.) (<= (* skoXC1 (+ (- 1.) (* skoXC1 (* skoXC1 (+ (/ 1. 3.) (* skoXC1 (* skoXC1 (/ 3. 20.)))))))) 0.) (<= (* skoXC1 (* skoXC1 (+ (/ (- 1.) 6.) (* skoXC1 (* skoXC1 (/ (- 3.) 40.)))))) 1.) (<= (* skoXC1 (* skoXC1 (+ (/ (- 1.) 2.) (* skoXC1 (* skoXC1 (+ (/ 7. 120.) (* skoXC1 (* skoXC1 (/ (- 3.) 40.))))))))) 0.) (<= (* skoXC1 (* skoXC1 (* skoXC1 (* skoXC1 (+ (/ (- 13.) 60.) (* skoXC1 (* skoXC1 (/ (- 3.) 10.)))))))) 0.) (<= (* skoXC1 (* skoXC1 (* skoXC1 (* skoXC1 (+ (/ (- 17.) 120.) (* skoXC1 (* skoXC1 (/ 3. 80.)))))))) 0.) (<= (* skoXC1 (* skoXC1 (+ (/ 1. 3.) (* skoXC1 (* skoXC1 (/ 3. 20.)))))) 1.) (<= (* skoXC1 (* skoXC1 (* skoXC1 (* skoXC1 (+ (/ 32. 15.) (* skoXC1 (* skoXC1 (+ (/ (- 296.) 15.) (* skoXC1 (* skoXC1 (+ (/ 391. 15.) (* skoXC1 (* skoXC1 (+ (/ (- 146.) 15.) (* skoXC1 (* skoXC1 (/ 3. 4.))))))))))))))))) 0.) (> (* skoXC1 (* skoXC1 (+ (/ 1. 6.) (* skoXC1 (* skoXC1 (/ 3. 40.)))))) (- 1.))) (succedent (> (* skoXC1 (+ (- 1.) (* skoXC1 (* skoXC1 (+ (/ (- 1.) 6.) (* skoXC1 (* skoXC1 (/ (- 3.) 40.)))))))) 0.)))
-----[end problem]-----

-----[begin problem]-----
% In Mathematica format:
Timing[Resolve[Exists[{skoXC1}, And[skoXC1*skoXC1*skoXC1*skoXC1*((-13/60)+skoXC1*skoXC1*((-9/280)+skoXC1*skoXC1*(-5/28)))<=0,skoXC1*skoXC1*((1/6)+skoXC1*skoXC1*((3/40)+skoXC1*skoXC1*(5/112)))>-1,skoXC1*skoXC1*skoXC1*skoXC1*((-13/60)+skoXC1*skoXC1*((-9/280)+skoXC1*skoXC1*(-5/28)))<=0,skoXC1*skoXC1*((-1/2)+skoXC1*skoXC1*((7/120)+skoXC1*skoXC1*((33/560)+skoXC1*skoXC1*(-5/112))))<=0,skoXC1*skoXC1*((-1/6)+skoXC1*skoXC1*((-3/40)+skoXC1*skoXC1*(-5/112)))<=1,skoXC1*(-1+skoXC1*skoXC1*((1/3)+skoXC1*skoXC1*((3/20)+skoXC1*skoXC1*(5/56))))<=0,skoXC1*skoXC1*skoXC1*skoXC1*((-80/3)+skoXC1*skoXC1*((128/3)+skoXC1*skoXC1*((-55/3)+skoXC1*skoXC1*(5/3))))<=0,skoXC1*skoXC1*(256+skoXC1*skoXC1*(-160+skoXC1*skoXC1*(32+skoXC1*skoXC1*-1)))<=128,skoXC1*skoXC1*(1/3)<=1,skoXC1*(-1+skoXC1*skoXC1*(-1/6))<=0,skoXC1*skoXC1*skoXC1*skoXC1*(-2/3)<=0,skoXC1*skoXC1<=2,skoXC1*skoXC1*((-1/2)+skoXC1*skoXC1*(-1/6))<=0,skoXC1*skoXC1*(-1/6)<=1,skoXC1*(-1+skoXC1*skoXC1*(1/3))<=0,(7/8)>skoXC1,skoXC1>0,skoXC1*skoXC1*(-1/2)>-3,skoXC1*skoXC1*(1/2)<=3,skoXC1*skoXC1*(24+skoXC1*skoXC1*(-10+skoXC1*skoXC1))<=16,skoXC1*skoXC1*(-80+skoXC1*skoXC1*(40+skoXC1*skoXC1*(-6+skoXC1*skoXC1*(1/8))))>-48,skoXC1*skoXC1*(80+skoXC1*skoXC1*(-40+skoXC1*skoXC1*(6+skoXC1*skoXC1*(-1/8))))<=48,skoXC1*skoXC1>0,skoXC1*(-1+skoXC1*skoXC1*((1/3)+skoXC1*skoXC1*(3/20)))<=0,skoXC1*skoXC1*((-1/6)+skoXC1*skoXC1*(-3/40))<=1,skoXC1*skoXC1*((-1/2)+skoXC1*skoXC1*((7/120)+skoXC1*skoXC1*(-3/40)))<=0,skoXC1*skoXC1*skoXC1*skoXC1*((-13/60)+skoXC1*skoXC1*(-3/10))<=0,skoXC1*skoXC1*skoXC1*skoXC1*((-17/120)+skoXC1*skoXC1*(3/80))<=0,skoXC1*skoXC1*((1/3)+skoXC1*skoXC1*(3/20))<=1,skoXC1*skoXC1*skoXC1*skoXC1*((32/15)+skoXC1*skoXC1*((-296/15)+skoXC1*skoXC1*((391/15)+skoXC1*skoXC1*((-146/15)+skoXC1*skoXC1*(3/4)))))<=0,skoXC1*skoXC1*((1/6)+skoXC1*skoXC1*(3/40))>-1,skoXC1*(-1+skoXC1*skoXC1*((-1/6)+skoXC1*skoXC1*(-3/40)))<=0]], Reals]]

% In QepcadB format:
(E skoXC1) [[(skoXC1 skoXC1 skoXC1 skoXC1 (-13/60+(skoXC1 skoXC1 (-9/280+(skoXC1 skoXC1 (-5/28))))))<=0]/\[[-1<(skoXC1 skoXC1 (1/6+(skoXC1 skoXC1 (3/40+(skoXC1 skoXC1 (5/112))))))]/\[[(skoXC1 skoXC1 skoXC1 skoXC1 (-13/60+(skoXC1 skoXC1 (-9/280+(skoXC1 skoXC1 (-5/28))))))<=0]/\[[(skoXC1 skoXC1 (-1/2+(skoXC1 skoXC1 (7/120+(skoXC1 skoXC1 (33/560+(skoXC1 skoXC1 (-5/112))))))))<=0]/\[[(skoXC1 skoXC1 (-1/6+(skoXC1 skoXC1 (-3/40+(skoXC1 skoXC1 (-5/112))))))<=1]/\[[(skoXC1 (-1+(skoXC1 skoXC1 (1/3+(skoXC1 skoXC1 (3/20+(skoXC1 skoXC1 (5/56))))))))<=0]/\[[(skoXC1 skoXC1 skoXC1 skoXC1 (-80/3+(skoXC1 skoXC1 (128/3+(skoXC1 skoXC1 (-55/3+(skoXC1 skoXC1 (5/3))))))))<=0]/\[[(skoXC1 skoXC1 (256+(skoXC1 skoXC1 (-160+(skoXC1 skoXC1 (32+(skoXC1 skoXC1 (-1))))))))<=128]/\[[(skoXC1 skoXC1 (1/3))<=1]/\[[(skoXC1 (-1+(skoXC1 skoXC1 (-1/6))))<=0]/\[[(skoXC1 skoXC1 skoXC1 skoXC1 (-2/3))<=0]/\[[(skoXC1 skoXC1)<=2]/\[[(skoXC1 skoXC1 (-1/2+(skoXC1 skoXC1 (-1/6))))<=0]/\[[(skoXC1 skoXC1 (-1/6))<=1]/\[[(skoXC1 (-1+(skoXC1 skoXC1 (1/3))))<=0]/\[[skoXC1<7/8]/\[[0<skoXC1]/\[[-3<(skoXC1 skoXC1 (-1/2))]/\[[(skoXC1 skoXC1 (1/2))<=3]/\[[(skoXC1 skoXC1 (24+(skoXC1 skoXC1 (-10+(skoXC1 skoXC1)))))<=16]/\[[-48<(skoXC1 skoXC1 (-80+(skoXC1 skoXC1 (40+(skoXC1 skoXC1 (-6+(skoXC1 skoXC1 (1/8))))))))]/\[[(skoXC1 skoXC1 (80+(skoXC1 skoXC1 (-40+(skoXC1 skoXC1 (6+(skoXC1 skoXC1 (-1/8))))))))<=48]/\[[0<(skoXC1 skoXC1)]/\[[(skoXC1 (-1+(skoXC1 skoXC1 (1/3+(skoXC1 skoXC1 (3/20))))))<=0]/\[[(skoXC1 skoXC1 (-1/6+(skoXC1 skoXC1 (-3/40))))<=1]/\[[(skoXC1 skoXC1 (-1/2+(skoXC1 skoXC1 (7/120+(skoXC1 skoXC1 (-3/40))))))<=0]/\[[(skoXC1 skoXC1 skoXC1 skoXC1 (-13/60+(skoXC1 skoXC1 (-3/10))))<=0]/\[[(skoXC1 skoXC1 skoXC1 skoXC1 (-17/120+(skoXC1 skoXC1 (3/80))))<=0]/\[[(skoXC1 skoXC1 (1/3+(skoXC1 skoXC1 (3/20))))<=1]/\[[(skoXC1 skoXC1 skoXC1 skoXC1 (32/15+(skoXC1 skoXC1 (-296/15+(skoXC1 skoXC1 (391/15+(skoXC1 skoXC1 (-146/15+(skoXC1 skoXC1 (3/4))))))))))<=0]/\[[-1<(skoXC1 skoXC1 (1/6+(skoXC1 skoXC1 (3/40))))]/\[(skoXC1 (-1+(skoXC1 skoXC1 (-1/6+(skoXC1 skoXC1 (-3/40))))))<=0]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]].

% In SMTLib2 format:
(declare-fun skoXC1 () Real) (assert (and (<= (* skoXC1 (* skoXC1 (* skoXC1 (* skoXC1 (+ (/ (- 13.) 60.) (* skoXC1 (* skoXC1 (+ (/ (- 9.) 280.) (* skoXC1 (* skoXC1 (/ (- 5.) 28.))))))))))) 0.) (and (> (* skoXC1 (* skoXC1 (+ (/ 1. 6.) (* skoXC1 (* skoXC1 (+ (/ 3. 40.) (* skoXC1 (* skoXC1 (/ 5. 112.))))))))) (- 1.)) (and (<= (* skoXC1 (* skoXC1 (* skoXC1 (* skoXC1 (+ (/ (- 13.) 60.) (* skoXC1 (* skoXC1 (+ (/ (- 9.) 280.) (* skoXC1 (* skoXC1 (/ (- 5.) 28.))))))))))) 0.) (and (<= (* skoXC1 (* skoXC1 (+ (/ (- 1.) 2.) (* skoXC1 (* skoXC1 (+ (/ 7. 120.) (* skoXC1 (* skoXC1 (+ (/ 33. 560.) (* skoXC1 (* skoXC1 (/ (- 5.) 112.)))))))))))) 0.) (and (<= (* skoXC1 (* skoXC1 (+ (/ (- 1.) 6.) (* skoXC1 (* skoXC1 (+ (/ (- 3.) 40.) (* skoXC1 (* skoXC1 (/ (- 5.) 112.))))))))) 1.) (and (<= (* skoXC1 (+ (- 1.) (* skoXC1 (* skoXC1 (+ (/ 1. 3.) (* skoXC1 (* skoXC1 (+ (/ 3. 20.) (* skoXC1 (* skoXC1 (/ 5. 56.))))))))))) 0.) (and (<= (* skoXC1 (* skoXC1 (* skoXC1 (* skoXC1 (+ (/ (- 80.) 3.) (* skoXC1 (* skoXC1 (+ (/ 128. 3.) (* skoXC1 (* skoXC1 (+ (/ (- 55.) 3.) (* skoXC1 (* skoXC1 (/ 5. 3.)))))))))))))) 0.) (and (<= (* skoXC1 (* skoXC1 (+ 256. (* skoXC1 (* skoXC1 (+ (- 160.) (* skoXC1 (* skoXC1 (+ 32. (* skoXC1 (* skoXC1 (- 1.)))))))))))) 128.) (and (<= (* skoXC1 (* skoXC1 (/ 1. 3.))) 1.) (and (<= (* skoXC1 (+ (- 1.) (* skoXC1 (* skoXC1 (/ (- 1.) 6.))))) 0.) (and (<= (* skoXC1 (* skoXC1 (* skoXC1 (* skoXC1 (/ (- 2.) 3.))))) 0.) (and (<= (* skoXC1 skoXC1) 2.) (and (<= (* skoXC1 (* skoXC1 (+ (/ (- 1.) 2.) (* skoXC1 (* skoXC1 (/ (- 1.) 6.)))))) 0.) (and (<= (* skoXC1 (* skoXC1 (/ (- 1.) 6.))) 1.) (and (<= (* skoXC1 (+ (- 1.) (* skoXC1 (* skoXC1 (/ 1. 3.))))) 0.) (and (> (/ 7. 8.) skoXC1) (and (> skoXC1 0.) (and (> (* skoXC1 (* skoXC1 (/ (- 1.) 2.))) (- 3.)) (and (<= (* skoXC1 (* skoXC1 (/ 1. 2.))) 3.) (and (<= (* skoXC1 (* skoXC1 (+ 24. (* skoXC1 (* skoXC1 (+ (- 10.) (* skoXC1 skoXC1))))))) 16.) (and (> (* skoXC1 (* skoXC1 (+ (- 80.) (* skoXC1 (* skoXC1 (+ 40. (* skoXC1 (* skoXC1 (+ (- 6.) (* skoXC1 (* skoXC1 (/ 1. 8.)))))))))))) (- 48.)) (and (<= (* skoXC1 (* skoXC1 (+ 80. (* skoXC1 (* skoXC1 (+ (- 40.) (* skoXC1 (* skoXC1 (+ 6. (* skoXC1 (* skoXC1 (/ (- 1.) 8.)))))))))))) 48.) (and (> (* skoXC1 skoXC1) 0.) (and (<= (* skoXC1 (+ (- 1.) (* skoXC1 (* skoXC1 (+ (/ 1. 3.) (* skoXC1 (* skoXC1 (/ 3. 20.)))))))) 0.) (and (<= (* skoXC1 (* skoXC1 (+ (/ (- 1.) 6.) (* skoXC1 (* skoXC1 (/ (- 3.) 40.)))))) 1.) (and (<= (* skoXC1 (* skoXC1 (+ (/ (- 1.) 2.) (* skoXC1 (* skoXC1 (+ (/ 7. 120.) (* skoXC1 (* skoXC1 (/ (- 3.) 40.))))))))) 0.) (and (<= (* skoXC1 (* skoXC1 (* skoXC1 (* skoXC1 (+ (/ (- 13.) 60.) (* skoXC1 (* skoXC1 (/ (- 3.) 10.)))))))) 0.) (and (<= (* skoXC1 (* skoXC1 (* skoXC1 (* skoXC1 (+ (/ (- 17.) 120.) (* skoXC1 (* skoXC1 (/ 3. 80.)))))))) 0.) (and (<= (* skoXC1 (* skoXC1 (+ (/ 1. 3.) (* skoXC1 (* skoXC1 (/ 3. 20.)))))) 1.) (and (<= (* skoXC1 (* skoXC1 (* skoXC1 (* skoXC1 (+ (/ 32. 15.) (* skoXC1 (* skoXC1 (+ (/ (- 296.) 15.) (* skoXC1 (* skoXC1 (+ (/ 391. 15.) (* skoXC1 (* skoXC1 (+ (/ (- 146.) 15.) (* skoXC1 (* skoXC1 (/ 3. 4.))))))))))))))))) 0.) (and (> (* skoXC1 (* skoXC1 (+ (/ 1. 6.) (* skoXC1 (* skoXC1 (/ 3. 40.)))))) (- 1.)) (<= (* skoXC1 (+ (- 1.) (* skoXC1 (* skoXC1 (+ (/ (- 1.) 6.) (* skoXC1 (* skoXC1 (/ (- 3.) 40.)))))))) 0.)))))))))))))))))))))))))))))))))

% In GRF format:
(sequent " MetiTarski formula " (antecedent (<= (* skoXC1 (* skoXC1 (* skoXC1 (* skoXC1 (+ (/ (- 13.) 60.) (* skoXC1 (* skoXC1 (+ (/ (- 9.) 280.) (* skoXC1 (* skoXC1 (/ (- 5.) 28.))))))))))) 0.) (> (* skoXC1 (* skoXC1 (+ (/ 1. 6.) (* skoXC1 (* skoXC1 (+ (/ 3. 40.) (* skoXC1 (* skoXC1 (/ 5. 112.))))))))) (- 1.)) (<= (* skoXC1 (* skoXC1 (* skoXC1 (* skoXC1 (+ (/ (- 13.) 60.) (* skoXC1 (* skoXC1 (+ (/ (- 9.) 280.) (* skoXC1 (* skoXC1 (/ (- 5.) 28.))))))))))) 0.) (<= (* skoXC1 (* skoXC1 (+ (/ (- 1.) 2.) (* skoXC1 (* skoXC1 (+ (/ 7. 120.) (* skoXC1 (* skoXC1 (+ (/ 33. 560.) (* skoXC1 (* skoXC1 (/ (- 5.) 112.)))))))))))) 0.) (<= (* skoXC1 (* skoXC1 (+ (/ (- 1.) 6.) (* skoXC1 (* skoXC1 (+ (/ (- 3.) 40.) (* skoXC1 (* skoXC1 (/ (- 5.) 112.))))))))) 1.) (<= (* skoXC1 (+ (- 1.) (* skoXC1 (* skoXC1 (+ (/ 1. 3.) (* skoXC1 (* skoXC1 (+ (/ 3. 20.) (* skoXC1 (* skoXC1 (/ 5. 56.))))))))))) 0.) (<= (* skoXC1 (* skoXC1 (* skoXC1 (* skoXC1 (+ (/ (- 80.) 3.) (* skoXC1 (* skoXC1 (+ (/ 128. 3.) (* skoXC1 (* skoXC1 (+ (/ (- 55.) 3.) (* skoXC1 (* skoXC1 (/ 5. 3.)))))))))))))) 0.) (<= (* skoXC1 (* skoXC1 (+ 256. (* skoXC1 (* skoXC1 (+ (- 160.) (* skoXC1 (* skoXC1 (+ 32. (* skoXC1 (* skoXC1 (- 1.)))))))))))) 128.) (<= (* skoXC1 (* skoXC1 (/ 1. 3.))) 1.) (<= (* skoXC1 (+ (- 1.) (* skoXC1 (* skoXC1 (/ (- 1.) 6.))))) 0.) (<= (* skoXC1 (* skoXC1 (* skoXC1 (* skoXC1 (/ (- 2.) 3.))))) 0.) (<= (* skoXC1 skoXC1) 2.) (<= (* skoXC1 (* skoXC1 (+ (/ (- 1.) 2.) (* skoXC1 (* skoXC1 (/ (- 1.) 6.)))))) 0.) (<= (* skoXC1 (* skoXC1 (/ (- 1.) 6.))) 1.) (<= (* skoXC1 (+ (- 1.) (* skoXC1 (* skoXC1 (/ 1. 3.))))) 0.) (> (/ 7. 8.) skoXC1) (> skoXC1 0.) (> (* skoXC1 (* skoXC1 (/ (- 1.) 2.))) (- 3.)) (<= (* skoXC1 (* skoXC1 (/ 1. 2.))) 3.) (<= (* skoXC1 (* skoXC1 (+ 24. (* skoXC1 (* skoXC1 (+ (- 10.) (* skoXC1 skoXC1))))))) 16.) (> (* skoXC1 (* skoXC1 (+ (- 80.) (* skoXC1 (* skoXC1 (+ 40. (* skoXC1 (* skoXC1 (+ (- 6.) (* skoXC1 (* skoXC1 (/ 1. 8.)))))))))))) (- 48.)) (<= (* skoXC1 (* skoXC1 (+ 80. (* skoXC1 (* skoXC1 (+ (- 40.) (* skoXC1 (* skoXC1 (+ 6. (* skoXC1 (* skoXC1 (/ (- 1.) 8.)))))))))))) 48.) (> (* skoXC1 skoXC1) 0.) (<= (* skoXC1 (+ (- 1.) (* skoXC1 (* skoXC1 (+ (/ 1. 3.) (* skoXC1 (* skoXC1 (/ 3. 20.)))))))) 0.) (<= (* skoXC1 (* skoXC1 (+ (/ (- 1.) 6.) (* skoXC1 (* skoXC1 (/ (- 3.) 40.)))))) 1.) (<= (* skoXC1 (* skoXC1 (+ (/ (- 1.) 2.) (* skoXC1 (* skoXC1 (+ (/ 7. 120.) (* skoXC1 (* skoXC1 (/ (- 3.) 40.))))))))) 0.) (<= (* skoXC1 (* skoXC1 (* skoXC1 (* skoXC1 (+ (/ (- 13.) 60.) (* skoXC1 (* skoXC1 (/ (- 3.) 10.)))))))) 0.) (<= (* skoXC1 (* skoXC1 (* skoXC1 (* skoXC1 (+ (/ (- 17.) 120.) (* skoXC1 (* skoXC1 (/ 3. 80.)))))))) 0.) (<= (* skoXC1 (* skoXC1 (+ (/ 1. 3.) (* skoXC1 (* skoXC1 (/ 3. 20.)))))) 1.) (<= (* skoXC1 (* skoXC1 (* skoXC1 (* skoXC1 (+ (/ 32. 15.) (* skoXC1 (* skoXC1 (+ (/ (- 296.) 15.) (* skoXC1 (* skoXC1 (+ (/ 391. 15.) (* skoXC1 (* skoXC1 (+ (/ (- 146.) 15.) (* skoXC1 (* skoXC1 (/ 3. 4.))))))))))))))))) 0.) (> (* skoXC1 (* skoXC1 (+ (/ 1. 6.) (* skoXC1 (* skoXC1 (/ 3. 40.)))))) (- 1.))) (succedent (> (* skoXC1 (+ (- 1.) (* skoXC1 (* skoXC1 (+ (/ (- 1.) 6.) (* skoXC1 (* skoXC1 (/ (- 3.) 40.)))))))) 0.)))
-----[end problem]-----

-----[begin problem]-----
% In Mathematica format:
Timing[Resolve[Exists[{skoXC1}, And[skoXC1*skoXC1*((-1/6)+skoXC1*skoXC1*((-3/40)+skoXC1*skoXC1*(-5/112)))<=1,skoXC1*skoXC1*skoXC1*skoXC1*((-13/60)+skoXC1*skoXC1*((-9/280)+skoXC1*skoXC1*(-5/28)))<=0,skoXC1*skoXC1*((-1/2)+skoXC1*skoXC1*((7/120)+skoXC1*skoXC1*((33/560)+skoXC1*skoXC1*(-5/112))))<=0,skoXC1*skoXC1*((-1/6)+skoXC1*skoXC1*((-3/40)+skoXC1*skoXC1*(-5/112)))<=1,skoXC1*(-1+skoXC1*skoXC1*((1/3)+skoXC1*skoXC1*((3/20)+skoXC1*skoXC1*(5/56))))<=0,skoXC1*skoXC1*skoXC1*skoXC1*((-80/3)+skoXC1*skoXC1*((128/3)+skoXC1*skoXC1*((-55/3)+skoXC1*skoXC1*(5/3))))<=0,skoXC1*skoXC1*(256+skoXC1*skoXC1*(-160+skoXC1*skoXC1*(32+skoXC1*skoXC1*-1)))<=128,skoXC1*skoXC1*(1/3)<=1,skoXC1*(-1+skoXC1*skoXC1*(-1/6))<=0,skoXC1*skoXC1*skoXC1*skoXC1*(-2/3)<=0,skoXC1*skoXC1<=2,skoXC1*skoXC1*((-1/2)+skoXC1*skoXC1*(-1/6))<=0,skoXC1*skoXC1*(-1/6)<=1,skoXC1*(-1+skoXC1*skoXC1*(1/3))<=0,(7/8)>skoXC1,skoXC1>0,skoXC1*skoXC1*(-1/2)>-3,skoXC1*skoXC1*(1/2)<=3,skoXC1*skoXC1*(24+skoXC1*skoXC1*(-10+skoXC1*skoXC1))<=16,skoXC1*skoXC1*(-80+skoXC1*skoXC1*(40+skoXC1*skoXC1*(-6+skoXC1*skoXC1*(1/8))))>-48,skoXC1*skoXC1*(80+skoXC1*skoXC1*(-40+skoXC1*skoXC1*(6+skoXC1*skoXC1*(-1/8))))<=48,skoXC1*skoXC1>0,skoXC1*(-1+skoXC1*skoXC1*((1/3)+skoXC1*skoXC1*(3/20)))<=0,skoXC1*skoXC1*((-1/6)+skoXC1*skoXC1*(-3/40))<=1,skoXC1*skoXC1*((-1/2)+skoXC1*skoXC1*((7/120)+skoXC1*skoXC1*(-3/40)))<=0,skoXC1*skoXC1*skoXC1*skoXC1*((-13/60)+skoXC1*skoXC1*(-3/10))<=0,skoXC1*skoXC1*skoXC1*skoXC1*((-17/120)+skoXC1*skoXC1*(3/80))<=0,skoXC1*skoXC1*((1/3)+skoXC1*skoXC1*(3/20))<=1,skoXC1*skoXC1*skoXC1*skoXC1*((32/15)+skoXC1*skoXC1*((-296/15)+skoXC1*skoXC1*((391/15)+skoXC1*skoXC1*((-146/15)+skoXC1*skoXC1*(3/4)))))<=0,skoXC1*skoXC1*((1/6)+skoXC1*skoXC1*(3/40))>-1,skoXC1*(-1+skoXC1*skoXC1*((-1/6)+skoXC1*skoXC1*(-3/40)))<=0]], Reals]]

% In QepcadB format:
(E skoXC1) [[(skoXC1 skoXC1 (-1/6+(skoXC1 skoXC1 (-3/40+(skoXC1 skoXC1 (-5/112))))))<=1]/\[[(skoXC1 skoXC1 skoXC1 skoXC1 (-13/60+(skoXC1 skoXC1 (-9/280+(skoXC1 skoXC1 (-5/28))))))<=0]/\[[(skoXC1 skoXC1 (-1/2+(skoXC1 skoXC1 (7/120+(skoXC1 skoXC1 (33/560+(skoXC1 skoXC1 (-5/112))))))))<=0]/\[[(skoXC1 skoXC1 (-1/6+(skoXC1 skoXC1 (-3/40+(skoXC1 skoXC1 (-5/112))))))<=1]/\[[(skoXC1 (-1+(skoXC1 skoXC1 (1/3+(skoXC1 skoXC1 (3/20+(skoXC1 skoXC1 (5/56))))))))<=0]/\[[(skoXC1 skoXC1 skoXC1 skoXC1 (-80/3+(skoXC1 skoXC1 (128/3+(skoXC1 skoXC1 (-55/3+(skoXC1 skoXC1 (5/3))))))))<=0]/\[[(skoXC1 skoXC1 (256+(skoXC1 skoXC1 (-160+(skoXC1 skoXC1 (32+(skoXC1 skoXC1 (-1))))))))<=128]/\[[(skoXC1 skoXC1 (1/3))<=1]/\[[(skoXC1 (-1+(skoXC1 skoXC1 (-1/6))))<=0]/\[[(skoXC1 skoXC1 skoXC1 skoXC1 (-2/3))<=0]/\[[(skoXC1 skoXC1)<=2]/\[[(skoXC1 skoXC1 (-1/2+(skoXC1 skoXC1 (-1/6))))<=0]/\[[(skoXC1 skoXC1 (-1/6))<=1]/\[[(skoXC1 (-1+(skoXC1 skoXC1 (1/3))))<=0]/\[[skoXC1<7/8]/\[[0<skoXC1]/\[[-3<(skoXC1 skoXC1 (-1/2))]/\[[(skoXC1 skoXC1 (1/2))<=3]/\[[(skoXC1 skoXC1 (24+(skoXC1 skoXC1 (-10+(skoXC1 skoXC1)))))<=16]/\[[-48<(skoXC1 skoXC1 (-80+(skoXC1 skoXC1 (40+(skoXC1 skoXC1 (-6+(skoXC1 skoXC1 (1/8))))))))]/\[[(skoXC1 skoXC1 (80+(skoXC1 skoXC1 (-40+(skoXC1 skoXC1 (6+(skoXC1 skoXC1 (-1/8))))))))<=48]/\[[0<(skoXC1 skoXC1)]/\[[(skoXC1 (-1+(skoXC1 skoXC1 (1/3+(skoXC1 skoXC1 (3/20))))))<=0]/\[[(skoXC1 skoXC1 (-1/6+(skoXC1 skoXC1 (-3/40))))<=1]/\[[(skoXC1 skoXC1 (-1/2+(skoXC1 skoXC1 (7/120+(skoXC1 skoXC1 (-3/40))))))<=0]/\[[(skoXC1 skoXC1 skoXC1 skoXC1 (-13/60+(skoXC1 skoXC1 (-3/10))))<=0]/\[[(skoXC1 skoXC1 skoXC1 skoXC1 (-17/120+(skoXC1 skoXC1 (3/80))))<=0]/\[[(skoXC1 skoXC1 (1/3+(skoXC1 skoXC1 (3/20))))<=1]/\[[(skoXC1 skoXC1 skoXC1 skoXC1 (32/15+(skoXC1 skoXC1 (-296/15+(skoXC1 skoXC1 (391/15+(skoXC1 skoXC1 (-146/15+(skoXC1 skoXC1 (3/4))))))))))<=0]/\[[-1<(skoXC1 skoXC1 (1/6+(skoXC1 skoXC1 (3/40))))]/\[(skoXC1 (-1+(skoXC1 skoXC1 (-1/6+(skoXC1 skoXC1 (-3/40))))))<=0]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]].

% In SMTLib2 format:
(declare-fun skoXC1 () Real) (assert (and (<= (* skoXC1 (* skoXC1 (+ (/ (- 1.) 6.) (* skoXC1 (* skoXC1 (+ (/ (- 3.) 40.) (* skoXC1 (* skoXC1 (/ (- 5.) 112.))))))))) 1.) (and (<= (* skoXC1 (* skoXC1 (* skoXC1 (* skoXC1 (+ (/ (- 13.) 60.) (* skoXC1 (* skoXC1 (+ (/ (- 9.) 280.) (* skoXC1 (* skoXC1 (/ (- 5.) 28.))))))))))) 0.) (and (<= (* skoXC1 (* skoXC1 (+ (/ (- 1.) 2.) (* skoXC1 (* skoXC1 (+ (/ 7. 120.) (* skoXC1 (* skoXC1 (+ (/ 33. 560.) (* skoXC1 (* skoXC1 (/ (- 5.) 112.)))))))))))) 0.) (and (<= (* skoXC1 (* skoXC1 (+ (/ (- 1.) 6.) (* skoXC1 (* skoXC1 (+ (/ (- 3.) 40.) (* skoXC1 (* skoXC1 (/ (- 5.) 112.))))))))) 1.) (and (<= (* skoXC1 (+ (- 1.) (* skoXC1 (* skoXC1 (+ (/ 1. 3.) (* skoXC1 (* skoXC1 (+ (/ 3. 20.) (* skoXC1 (* skoXC1 (/ 5. 56.))))))))))) 0.) (and (<= (* skoXC1 (* skoXC1 (* skoXC1 (* skoXC1 (+ (/ (- 80.) 3.) (* skoXC1 (* skoXC1 (+ (/ 128. 3.) (* skoXC1 (* skoXC1 (+ (/ (- 55.) 3.) (* skoXC1 (* skoXC1 (/ 5. 3.)))))))))))))) 0.) (and (<= (* skoXC1 (* skoXC1 (+ 256. (* skoXC1 (* skoXC1 (+ (- 160.) (* skoXC1 (* skoXC1 (+ 32. (* skoXC1 (* skoXC1 (- 1.)))))))))))) 128.) (and (<= (* skoXC1 (* skoXC1 (/ 1. 3.))) 1.) (and (<= (* skoXC1 (+ (- 1.) (* skoXC1 (* skoXC1 (/ (- 1.) 6.))))) 0.) (and (<= (* skoXC1 (* skoXC1 (* skoXC1 (* skoXC1 (/ (- 2.) 3.))))) 0.) (and (<= (* skoXC1 skoXC1) 2.) (and (<= (* skoXC1 (* skoXC1 (+ (/ (- 1.) 2.) (* skoXC1 (* skoXC1 (/ (- 1.) 6.)))))) 0.) (and (<= (* skoXC1 (* skoXC1 (/ (- 1.) 6.))) 1.) (and (<= (* skoXC1 (+ (- 1.) (* skoXC1 (* skoXC1 (/ 1. 3.))))) 0.) (and (> (/ 7. 8.) skoXC1) (and (> skoXC1 0.) (and (> (* skoXC1 (* skoXC1 (/ (- 1.) 2.))) (- 3.)) (and (<= (* skoXC1 (* skoXC1 (/ 1. 2.))) 3.) (and (<= (* skoXC1 (* skoXC1 (+ 24. (* skoXC1 (* skoXC1 (+ (- 10.) (* skoXC1 skoXC1))))))) 16.) (and (> (* skoXC1 (* skoXC1 (+ (- 80.) (* skoXC1 (* skoXC1 (+ 40. (* skoXC1 (* skoXC1 (+ (- 6.) (* skoXC1 (* skoXC1 (/ 1. 8.)))))))))))) (- 48.)) (and (<= (* skoXC1 (* skoXC1 (+ 80. (* skoXC1 (* skoXC1 (+ (- 40.) (* skoXC1 (* skoXC1 (+ 6. (* skoXC1 (* skoXC1 (/ (- 1.) 8.)))))))))))) 48.) (and (> (* skoXC1 skoXC1) 0.) (and (<= (* skoXC1 (+ (- 1.) (* skoXC1 (* skoXC1 (+ (/ 1. 3.) (* skoXC1 (* skoXC1 (/ 3. 20.)))))))) 0.) (and (<= (* skoXC1 (* skoXC1 (+ (/ (- 1.) 6.) (* skoXC1 (* skoXC1 (/ (- 3.) 40.)))))) 1.) (and (<= (* skoXC1 (* skoXC1 (+ (/ (- 1.) 2.) (* skoXC1 (* skoXC1 (+ (/ 7. 120.) (* skoXC1 (* skoXC1 (/ (- 3.) 40.))))))))) 0.) (and (<= (* skoXC1 (* skoXC1 (* skoXC1 (* skoXC1 (+ (/ (- 13.) 60.) (* skoXC1 (* skoXC1 (/ (- 3.) 10.)))))))) 0.) (and (<= (* skoXC1 (* skoXC1 (* skoXC1 (* skoXC1 (+ (/ (- 17.) 120.) (* skoXC1 (* skoXC1 (/ 3. 80.)))))))) 0.) (and (<= (* skoXC1 (* skoXC1 (+ (/ 1. 3.) (* skoXC1 (* skoXC1 (/ 3. 20.)))))) 1.) (and (<= (* skoXC1 (* skoXC1 (* skoXC1 (* skoXC1 (+ (/ 32. 15.) (* skoXC1 (* skoXC1 (+ (/ (- 296.) 15.) (* skoXC1 (* skoXC1 (+ (/ 391. 15.) (* skoXC1 (* skoXC1 (+ (/ (- 146.) 15.) (* skoXC1 (* skoXC1 (/ 3. 4.))))))))))))))))) 0.) (and (> (* skoXC1 (* skoXC1 (+ (/ 1. 6.) (* skoXC1 (* skoXC1 (/ 3. 40.)))))) (- 1.)) (<= (* skoXC1 (+ (- 1.) (* skoXC1 (* skoXC1 (+ (/ (- 1.) 6.) (* skoXC1 (* skoXC1 (/ (- 3.) 40.)))))))) 0.))))))))))))))))))))))))))))))))

% In GRF format:
(sequent " MetiTarski formula " (antecedent (<= (* skoXC1 (* skoXC1 (+ (/ (- 1.) 6.) (* skoXC1 (* skoXC1 (+ (/ (- 3.) 40.) (* skoXC1 (* skoXC1 (/ (- 5.) 112.))))))))) 1.) (<= (* skoXC1 (* skoXC1 (* skoXC1 (* skoXC1 (+ (/ (- 13.) 60.) (* skoXC1 (* skoXC1 (+ (/ (- 9.) 280.) (* skoXC1 (* skoXC1 (/ (- 5.) 28.))))))))))) 0.) (<= (* skoXC1 (* skoXC1 (+ (/ (- 1.) 2.) (* skoXC1 (* skoXC1 (+ (/ 7. 120.) (* skoXC1 (* skoXC1 (+ (/ 33. 560.) (* skoXC1 (* skoXC1 (/ (- 5.) 112.)))))))))))) 0.) (<= (* skoXC1 (* skoXC1 (+ (/ (- 1.) 6.) (* skoXC1 (* skoXC1 (+ (/ (- 3.) 40.) (* skoXC1 (* skoXC1 (/ (- 5.) 112.))))))))) 1.) (<= (* skoXC1 (+ (- 1.) (* skoXC1 (* skoXC1 (+ (/ 1. 3.) (* skoXC1 (* skoXC1 (+ (/ 3. 20.) (* skoXC1 (* skoXC1 (/ 5. 56.))))))))))) 0.) (<= (* skoXC1 (* skoXC1 (* skoXC1 (* skoXC1 (+ (/ (- 80.) 3.) (* skoXC1 (* skoXC1 (+ (/ 128. 3.) (* skoXC1 (* skoXC1 (+ (/ (- 55.) 3.) (* skoXC1 (* skoXC1 (/ 5. 3.)))))))))))))) 0.) (<= (* skoXC1 (* skoXC1 (+ 256. (* skoXC1 (* skoXC1 (+ (- 160.) (* skoXC1 (* skoXC1 (+ 32. (* skoXC1 (* skoXC1 (- 1.)))))))))))) 128.) (<= (* skoXC1 (* skoXC1 (/ 1. 3.))) 1.) (<= (* skoXC1 (+ (- 1.) (* skoXC1 (* skoXC1 (/ (- 1.) 6.))))) 0.) (<= (* skoXC1 (* skoXC1 (* skoXC1 (* skoXC1 (/ (- 2.) 3.))))) 0.) (<= (* skoXC1 skoXC1) 2.) (<= (* skoXC1 (* skoXC1 (+ (/ (- 1.) 2.) (* skoXC1 (* skoXC1 (/ (- 1.) 6.)))))) 0.) (<= (* skoXC1 (* skoXC1 (/ (- 1.) 6.))) 1.) (<= (* skoXC1 (+ (- 1.) (* skoXC1 (* skoXC1 (/ 1. 3.))))) 0.) (> (/ 7. 8.) skoXC1) (> skoXC1 0.) (> (* skoXC1 (* skoXC1 (/ (- 1.) 2.))) (- 3.)) (<= (* skoXC1 (* skoXC1 (/ 1. 2.))) 3.) (<= (* skoXC1 (* skoXC1 (+ 24. (* skoXC1 (* skoXC1 (+ (- 10.) (* skoXC1 skoXC1))))))) 16.) (> (* skoXC1 (* skoXC1 (+ (- 80.) (* skoXC1 (* skoXC1 (+ 40. (* skoXC1 (* skoXC1 (+ (- 6.) (* skoXC1 (* skoXC1 (/ 1. 8.)))))))))))) (- 48.)) (<= (* skoXC1 (* skoXC1 (+ 80. (* skoXC1 (* skoXC1 (+ (- 40.) (* skoXC1 (* skoXC1 (+ 6. (* skoXC1 (* skoXC1 (/ (- 1.) 8.)))))))))))) 48.) (> (* skoXC1 skoXC1) 0.) (<= (* skoXC1 (+ (- 1.) (* skoXC1 (* skoXC1 (+ (/ 1. 3.) (* skoXC1 (* skoXC1 (/ 3. 20.)))))))) 0.) (<= (* skoXC1 (* skoXC1 (+ (/ (- 1.) 6.) (* skoXC1 (* skoXC1 (/ (- 3.) 40.)))))) 1.) (<= (* skoXC1 (* skoXC1 (+ (/ (- 1.) 2.) (* skoXC1 (* skoXC1 (+ (/ 7. 120.) (* skoXC1 (* skoXC1 (/ (- 3.) 40.))))))))) 0.) (<= (* skoXC1 (* skoXC1 (* skoXC1 (* skoXC1 (+ (/ (- 13.) 60.) (* skoXC1 (* skoXC1 (/ (- 3.) 10.)))))))) 0.) (<= (* skoXC1 (* skoXC1 (* skoXC1 (* skoXC1 (+ (/ (- 17.) 120.) (* skoXC1 (* skoXC1 (/ 3. 80.)))))))) 0.) (<= (* skoXC1 (* skoXC1 (+ (/ 1. 3.) (* skoXC1 (* skoXC1 (/ 3. 20.)))))) 1.) (<= (* skoXC1 (* skoXC1 (* skoXC1 (* skoXC1 (+ (/ 32. 15.) (* skoXC1 (* skoXC1 (+ (/ (- 296.) 15.) (* skoXC1 (* skoXC1 (+ (/ 391. 15.) (* skoXC1 (* skoXC1 (+ (/ (- 146.) 15.) (* skoXC1 (* skoXC1 (/ 3. 4.))))))))))))))))) 0.) (> (* skoXC1 (* skoXC1 (+ (/ 1. 6.) (* skoXC1 (* skoXC1 (/ 3. 40.)))))) (- 1.))) (succedent (> (* skoXC1 (+ (- 1.) (* skoXC1 (* skoXC1 (+ (/ (- 1.) 6.) (* skoXC1 (* skoXC1 (/ (- 3.) 40.)))))))) 0.)))
-----[end problem]-----

-----[begin problem]-----
% In Mathematica format:
Timing[Resolve[Exists[{skoXC1}, And[skoXC1*skoXC1*skoXC1*skoXC1*((-13/60)+skoXC1*skoXC1*((-9/280)+skoXC1*skoXC1*(-5/28)))<=0,skoXC1*skoXC1*skoXC1*skoXC1*((-13/60)+skoXC1*skoXC1*((-9/280)+skoXC1*skoXC1*(-5/28)))<=0,skoXC1*skoXC1*((-1/2)+skoXC1*skoXC1*((7/120)+skoXC1*skoXC1*((33/560)+skoXC1*skoXC1*(-5/112))))<=0,skoXC1*skoXC1*((-1/6)+skoXC1*skoXC1*((-3/40)+skoXC1*skoXC1*(-5/112)))<=1,skoXC1*(-1+skoXC1*skoXC1*((1/3)+skoXC1*skoXC1*((3/20)+skoXC1*skoXC1*(5/56))))<=0,skoXC1*skoXC1*skoXC1*skoXC1*((-80/3)+skoXC1*skoXC1*((128/3)+skoXC1*skoXC1*((-55/3)+skoXC1*skoXC1*(5/3))))<=0,skoXC1*skoXC1*(256+skoXC1*skoXC1*(-160+skoXC1*skoXC1*(32+skoXC1*skoXC1*-1)))<=128,skoXC1*skoXC1*(1/3)<=1,skoXC1*(-1+skoXC1*skoXC1*(-1/6))<=0,skoXC1*skoXC1*skoXC1*skoXC1*(-2/3)<=0,skoXC1*skoXC1<=2,skoXC1*skoXC1*((-1/2)+skoXC1*skoXC1*(-1/6))<=0,skoXC1*skoXC1*(-1/6)<=1,skoXC1*(-1+skoXC1*skoXC1*(1/3))<=0,(7/8)>skoXC1,skoXC1>0,skoXC1*skoXC1*(-1/2)>-3,skoXC1*skoXC1*(1/2)<=3,skoXC1*skoXC1*(24+skoXC1*skoXC1*(-10+skoXC1*skoXC1))<=16,skoXC1*skoXC1*(-80+skoXC1*skoXC1*(40+skoXC1*skoXC1*(-6+skoXC1*skoXC1*(1/8))))>-48,skoXC1*skoXC1*(80+skoXC1*skoXC1*(-40+skoXC1*skoXC1*(6+skoXC1*skoXC1*(-1/8))))<=48,skoXC1*skoXC1>0,skoXC1*(-1+skoXC1*skoXC1*((1/3)+skoXC1*skoXC1*(3/20)))<=0,skoXC1*skoXC1*((-1/6)+skoXC1*skoXC1*(-3/40))<=1,skoXC1*skoXC1*((-1/2)+skoXC1*skoXC1*((7/120)+skoXC1*skoXC1*(-3/40)))<=0,skoXC1*skoXC1*skoXC1*skoXC1*((-13/60)+skoXC1*skoXC1*(-3/10))<=0,skoXC1*skoXC1*skoXC1*skoXC1*((-17/120)+skoXC1*skoXC1*(3/80))<=0,skoXC1*skoXC1*((1/3)+skoXC1*skoXC1*(3/20))<=1,skoXC1*skoXC1*skoXC1*skoXC1*((32/15)+skoXC1*skoXC1*((-296/15)+skoXC1*skoXC1*((391/15)+skoXC1*skoXC1*((-146/15)+skoXC1*skoXC1*(3/4)))))<=0,skoXC1*skoXC1*((1/6)+skoXC1*skoXC1*(3/40))>-1,skoXC1*(-1+skoXC1*skoXC1*((-1/6)+skoXC1*skoXC1*(-3/40)))<=0]], Reals]]

% In QepcadB format:
(E skoXC1) [[(skoXC1 skoXC1 skoXC1 skoXC1 (-13/60+(skoXC1 skoXC1 (-9/280+(skoXC1 skoXC1 (-5/28))))))<=0]/\[[(skoXC1 skoXC1 skoXC1 skoXC1 (-13/60+(skoXC1 skoXC1 (-9/280+(skoXC1 skoXC1 (-5/28))))))<=0]/\[[(skoXC1 skoXC1 (-1/2+(skoXC1 skoXC1 (7/120+(skoXC1 skoXC1 (33/560+(skoXC1 skoXC1 (-5/112))))))))<=0]/\[[(skoXC1 skoXC1 (-1/6+(skoXC1 skoXC1 (-3/40+(skoXC1 skoXC1 (-5/112))))))<=1]/\[[(skoXC1 (-1+(skoXC1 skoXC1 (1/3+(skoXC1 skoXC1 (3/20+(skoXC1 skoXC1 (5/56))))))))<=0]/\[[(skoXC1 skoXC1 skoXC1 skoXC1 (-80/3+(skoXC1 skoXC1 (128/3+(skoXC1 skoXC1 (-55/3+(skoXC1 skoXC1 (5/3))))))))<=0]/\[[(skoXC1 skoXC1 (256+(skoXC1 skoXC1 (-160+(skoXC1 skoXC1 (32+(skoXC1 skoXC1 (-1))))))))<=128]/\[[(skoXC1 skoXC1 (1/3))<=1]/\[[(skoXC1 (-1+(skoXC1 skoXC1 (-1/6))))<=0]/\[[(skoXC1 skoXC1 skoXC1 skoXC1 (-2/3))<=0]/\[[(skoXC1 skoXC1)<=2]/\[[(skoXC1 skoXC1 (-1/2+(skoXC1 skoXC1 (-1/6))))<=0]/\[[(skoXC1 skoXC1 (-1/6))<=1]/\[[(skoXC1 (-1+(skoXC1 skoXC1 (1/3))))<=0]/\[[skoXC1<7/8]/\[[0<skoXC1]/\[[-3<(skoXC1 skoXC1 (-1/2))]/\[[(skoXC1 skoXC1 (1/2))<=3]/\[[(skoXC1 skoXC1 (24+(skoXC1 skoXC1 (-10+(skoXC1 skoXC1)))))<=16]/\[[-48<(skoXC1 skoXC1 (-80+(skoXC1 skoXC1 (40+(skoXC1 skoXC1 (-6+(skoXC1 skoXC1 (1/8))))))))]/\[[(skoXC1 skoXC1 (80+(skoXC1 skoXC1 (-40+(skoXC1 skoXC1 (6+(skoXC1 skoXC1 (-1/8))))))))<=48]/\[[0<(skoXC1 skoXC1)]/\[[(skoXC1 (-1+(skoXC1 skoXC1 (1/3+(skoXC1 skoXC1 (3/20))))))<=0]/\[[(skoXC1 skoXC1 (-1/6+(skoXC1 skoXC1 (-3/40))))<=1]/\[[(skoXC1 skoXC1 (-1/2+(skoXC1 skoXC1 (7/120+(skoXC1 skoXC1 (-3/40))))))<=0]/\[[(skoXC1 skoXC1 skoXC1 skoXC1 (-13/60+(skoXC1 skoXC1 (-3/10))))<=0]/\[[(skoXC1 skoXC1 skoXC1 skoXC1 (-17/120+(skoXC1 skoXC1 (3/80))))<=0]/\[[(skoXC1 skoXC1 (1/3+(skoXC1 skoXC1 (3/20))))<=1]/\[[(skoXC1 skoXC1 skoXC1 skoXC1 (32/15+(skoXC1 skoXC1 (-296/15+(skoXC1 skoXC1 (391/15+(skoXC1 skoXC1 (-146/15+(skoXC1 skoXC1 (3/4))))))))))<=0]/\[[-1<(skoXC1 skoXC1 (1/6+(skoXC1 skoXC1 (3/40))))]/\[(skoXC1 (-1+(skoXC1 skoXC1 (-1/6+(skoXC1 skoXC1 (-3/40))))))<=0]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]].

% In SMTLib2 format:
(declare-fun skoXC1 () Real) (assert (and (<= (* skoXC1 (* skoXC1 (* skoXC1 (* skoXC1 (+ (/ (- 13.) 60.) (* skoXC1 (* skoXC1 (+ (/ (- 9.) 280.) (* skoXC1 (* skoXC1 (/ (- 5.) 28.))))))))))) 0.) (and (<= (* skoXC1 (* skoXC1 (* skoXC1 (* skoXC1 (+ (/ (- 13.) 60.) (* skoXC1 (* skoXC1 (+ (/ (- 9.) 280.) (* skoXC1 (* skoXC1 (/ (- 5.) 28.))))))))))) 0.) (and (<= (* skoXC1 (* skoXC1 (+ (/ (- 1.) 2.) (* skoXC1 (* skoXC1 (+ (/ 7. 120.) (* skoXC1 (* skoXC1 (+ (/ 33. 560.) (* skoXC1 (* skoXC1 (/ (- 5.) 112.)))))))))))) 0.) (and (<= (* skoXC1 (* skoXC1 (+ (/ (- 1.) 6.) (* skoXC1 (* skoXC1 (+ (/ (- 3.) 40.) (* skoXC1 (* skoXC1 (/ (- 5.) 112.))))))))) 1.) (and (<= (* skoXC1 (+ (- 1.) (* skoXC1 (* skoXC1 (+ (/ 1. 3.) (* skoXC1 (* skoXC1 (+ (/ 3. 20.) (* skoXC1 (* skoXC1 (/ 5. 56.))))))))))) 0.) (and (<= (* skoXC1 (* skoXC1 (* skoXC1 (* skoXC1 (+ (/ (- 80.) 3.) (* skoXC1 (* skoXC1 (+ (/ 128. 3.) (* skoXC1 (* skoXC1 (+ (/ (- 55.) 3.) (* skoXC1 (* skoXC1 (/ 5. 3.)))))))))))))) 0.) (and (<= (* skoXC1 (* skoXC1 (+ 256. (* skoXC1 (* skoXC1 (+ (- 160.) (* skoXC1 (* skoXC1 (+ 32. (* skoXC1 (* skoXC1 (- 1.)))))))))))) 128.) (and (<= (* skoXC1 (* skoXC1 (/ 1. 3.))) 1.) (and (<= (* skoXC1 (+ (- 1.) (* skoXC1 (* skoXC1 (/ (- 1.) 6.))))) 0.) (and (<= (* skoXC1 (* skoXC1 (* skoXC1 (* skoXC1 (/ (- 2.) 3.))))) 0.) (and (<= (* skoXC1 skoXC1) 2.) (and (<= (* skoXC1 (* skoXC1 (+ (/ (- 1.) 2.) (* skoXC1 (* skoXC1 (/ (- 1.) 6.)))))) 0.) (and (<= (* skoXC1 (* skoXC1 (/ (- 1.) 6.))) 1.) (and (<= (* skoXC1 (+ (- 1.) (* skoXC1 (* skoXC1 (/ 1. 3.))))) 0.) (and (> (/ 7. 8.) skoXC1) (and (> skoXC1 0.) (and (> (* skoXC1 (* skoXC1 (/ (- 1.) 2.))) (- 3.)) (and (<= (* skoXC1 (* skoXC1 (/ 1. 2.))) 3.) (and (<= (* skoXC1 (* skoXC1 (+ 24. (* skoXC1 (* skoXC1 (+ (- 10.) (* skoXC1 skoXC1))))))) 16.) (and (> (* skoXC1 (* skoXC1 (+ (- 80.) (* skoXC1 (* skoXC1 (+ 40. (* skoXC1 (* skoXC1 (+ (- 6.) (* skoXC1 (* skoXC1 (/ 1. 8.)))))))))))) (- 48.)) (and (<= (* skoXC1 (* skoXC1 (+ 80. (* skoXC1 (* skoXC1 (+ (- 40.) (* skoXC1 (* skoXC1 (+ 6. (* skoXC1 (* skoXC1 (/ (- 1.) 8.)))))))))))) 48.) (and (> (* skoXC1 skoXC1) 0.) (and (<= (* skoXC1 (+ (- 1.) (* skoXC1 (* skoXC1 (+ (/ 1. 3.) (* skoXC1 (* skoXC1 (/ 3. 20.)))))))) 0.) (and (<= (* skoXC1 (* skoXC1 (+ (/ (- 1.) 6.) (* skoXC1 (* skoXC1 (/ (- 3.) 40.)))))) 1.) (and (<= (* skoXC1 (* skoXC1 (+ (/ (- 1.) 2.) (* skoXC1 (* skoXC1 (+ (/ 7. 120.) (* skoXC1 (* skoXC1 (/ (- 3.) 40.))))))))) 0.) (and (<= (* skoXC1 (* skoXC1 (* skoXC1 (* skoXC1 (+ (/ (- 13.) 60.) (* skoXC1 (* skoXC1 (/ (- 3.) 10.)))))))) 0.) (and (<= (* skoXC1 (* skoXC1 (* skoXC1 (* skoXC1 (+ (/ (- 17.) 120.) (* skoXC1 (* skoXC1 (/ 3. 80.)))))))) 0.) (and (<= (* skoXC1 (* skoXC1 (+ (/ 1. 3.) (* skoXC1 (* skoXC1 (/ 3. 20.)))))) 1.) (and (<= (* skoXC1 (* skoXC1 (* skoXC1 (* skoXC1 (+ (/ 32. 15.) (* skoXC1 (* skoXC1 (+ (/ (- 296.) 15.) (* skoXC1 (* skoXC1 (+ (/ 391. 15.) (* skoXC1 (* skoXC1 (+ (/ (- 146.) 15.) (* skoXC1 (* skoXC1 (/ 3. 4.))))))))))))))))) 0.) (and (> (* skoXC1 (* skoXC1 (+ (/ 1. 6.) (* skoXC1 (* skoXC1 (/ 3. 40.)))))) (- 1.)) (<= (* skoXC1 (+ (- 1.) (* skoXC1 (* skoXC1 (+ (/ (- 1.) 6.) (* skoXC1 (* skoXC1 (/ (- 3.) 40.)))))))) 0.))))))))))))))))))))))))))))))))

% In GRF format:
(sequent " MetiTarski formula " (antecedent (<= (* skoXC1 (* skoXC1 (* skoXC1 (* skoXC1 (+ (/ (- 13.) 60.) (* skoXC1 (* skoXC1 (+ (/ (- 9.) 280.) (* skoXC1 (* skoXC1 (/ (- 5.) 28.))))))))))) 0.) (<= (* skoXC1 (* skoXC1 (* skoXC1 (* skoXC1 (+ (/ (- 13.) 60.) (* skoXC1 (* skoXC1 (+ (/ (- 9.) 280.) (* skoXC1 (* skoXC1 (/ (- 5.) 28.))))))))))) 0.) (<= (* skoXC1 (* skoXC1 (+ (/ (- 1.) 2.) (* skoXC1 (* skoXC1 (+ (/ 7. 120.) (* skoXC1 (* skoXC1 (+ (/ 33. 560.) (* skoXC1 (* skoXC1 (/ (- 5.) 112.)))))))))))) 0.) (<= (* skoXC1 (* skoXC1 (+ (/ (- 1.) 6.) (* skoXC1 (* skoXC1 (+ (/ (- 3.) 40.) (* skoXC1 (* skoXC1 (/ (- 5.) 112.))))))))) 1.) (<= (* skoXC1 (+ (- 1.) (* skoXC1 (* skoXC1 (+ (/ 1. 3.) (* skoXC1 (* skoXC1 (+ (/ 3. 20.) (* skoXC1 (* skoXC1 (/ 5. 56.))))))))))) 0.) (<= (* skoXC1 (* skoXC1 (* skoXC1 (* skoXC1 (+ (/ (- 80.) 3.) (* skoXC1 (* skoXC1 (+ (/ 128. 3.) (* skoXC1 (* skoXC1 (+ (/ (- 55.) 3.) (* skoXC1 (* skoXC1 (/ 5. 3.)))))))))))))) 0.) (<= (* skoXC1 (* skoXC1 (+ 256. (* skoXC1 (* skoXC1 (+ (- 160.) (* skoXC1 (* skoXC1 (+ 32. (* skoXC1 (* skoXC1 (- 1.)))))))))))) 128.) (<= (* skoXC1 (* skoXC1 (/ 1. 3.))) 1.) (<= (* skoXC1 (+ (- 1.) (* skoXC1 (* skoXC1 (/ (- 1.) 6.))))) 0.) (<= (* skoXC1 (* skoXC1 (* skoXC1 (* skoXC1 (/ (- 2.) 3.))))) 0.) (<= (* skoXC1 skoXC1) 2.) (<= (* skoXC1 (* skoXC1 (+ (/ (- 1.) 2.) (* skoXC1 (* skoXC1 (/ (- 1.) 6.)))))) 0.) (<= (* skoXC1 (* skoXC1 (/ (- 1.) 6.))) 1.) (<= (* skoXC1 (+ (- 1.) (* skoXC1 (* skoXC1 (/ 1. 3.))))) 0.) (> (/ 7. 8.) skoXC1) (> skoXC1 0.) (> (* skoXC1 (* skoXC1 (/ (- 1.) 2.))) (- 3.)) (<= (* skoXC1 (* skoXC1 (/ 1. 2.))) 3.) (<= (* skoXC1 (* skoXC1 (+ 24. (* skoXC1 (* skoXC1 (+ (- 10.) (* skoXC1 skoXC1))))))) 16.) (> (* skoXC1 (* skoXC1 (+ (- 80.) (* skoXC1 (* skoXC1 (+ 40. (* skoXC1 (* skoXC1 (+ (- 6.) (* skoXC1 (* skoXC1 (/ 1. 8.)))))))))))) (- 48.)) (<= (* skoXC1 (* skoXC1 (+ 80. (* skoXC1 (* skoXC1 (+ (- 40.) (* skoXC1 (* skoXC1 (+ 6. (* skoXC1 (* skoXC1 (/ (- 1.) 8.)))))))))))) 48.) (> (* skoXC1 skoXC1) 0.) (<= (* skoXC1 (+ (- 1.) (* skoXC1 (* skoXC1 (+ (/ 1. 3.) (* skoXC1 (* skoXC1 (/ 3. 20.)))))))) 0.) (<= (* skoXC1 (* skoXC1 (+ (/ (- 1.) 6.) (* skoXC1 (* skoXC1 (/ (- 3.) 40.)))))) 1.) (<= (* skoXC1 (* skoXC1 (+ (/ (- 1.) 2.) (* skoXC1 (* skoXC1 (+ (/ 7. 120.) (* skoXC1 (* skoXC1 (/ (- 3.) 40.))))))))) 0.) (<= (* skoXC1 (* skoXC1 (* skoXC1 (* skoXC1 (+ (/ (- 13.) 60.) (* skoXC1 (* skoXC1 (/ (- 3.) 10.)))))))) 0.) (<= (* skoXC1 (* skoXC1 (* skoXC1 (* skoXC1 (+ (/ (- 17.) 120.) (* skoXC1 (* skoXC1 (/ 3. 80.)))))))) 0.) (<= (* skoXC1 (* skoXC1 (+ (/ 1. 3.) (* skoXC1 (* skoXC1 (/ 3. 20.)))))) 1.) (<= (* skoXC1 (* skoXC1 (* skoXC1 (* skoXC1 (+ (/ 32. 15.) (* skoXC1 (* skoXC1 (+ (/ (- 296.) 15.) (* skoXC1 (* skoXC1 (+ (/ 391. 15.) (* skoXC1 (* skoXC1 (+ (/ (- 146.) 15.) (* skoXC1 (* skoXC1 (/ 3. 4.))))))))))))))))) 0.) (> (* skoXC1 (* skoXC1 (+ (/ 1. 6.) (* skoXC1 (* skoXC1 (/ 3. 40.)))))) (- 1.))) (succedent (> (* skoXC1 (+ (- 1.) (* skoXC1 (* skoXC1 (+ (/ (- 1.) 6.) (* skoXC1 (* skoXC1 (/ (- 3.) 40.)))))))) 0.)))
-----[end problem]-----

-----[begin problem]-----
% In Mathematica format:
Timing[Resolve[Exists[{skoXC1}, And[skoXC1*(-1+skoXC1*skoXC1*((-1/6)+skoXC1*skoXC1*((-3/40)+skoXC1*skoXC1*(-5/112))))<=0,skoXC1*skoXC1<=0,skoXC1*skoXC1*skoXC1*skoXC1*((-13/60)+skoXC1*skoXC1*((-9/280)+skoXC1*skoXC1*(-5/28)))<=0,skoXC1*skoXC1*((-1/2)+skoXC1*skoXC1*((7/120)+skoXC1*skoXC1*((33/560)+skoXC1*skoXC1*(-5/112))))<=0,skoXC1*skoXC1*((-1/6)+skoXC1*skoXC1*((-3/40)+skoXC1*skoXC1*(-5/112)))<=1,skoXC1*(-1+skoXC1*skoXC1*((1/3)+skoXC1*skoXC1*((3/20)+skoXC1*skoXC1*(5/56))))<=0,skoXC1*skoXC1*skoXC1*skoXC1*((-80/3)+skoXC1*skoXC1*((128/3)+skoXC1*skoXC1*((-55/3)+skoXC1*skoXC1*(5/3))))<=0,skoXC1*skoXC1*(256+skoXC1*skoXC1*(-160+skoXC1*skoXC1*(32+skoXC1*skoXC1*-1)))<=128,skoXC1*skoXC1*(1/3)<=1,skoXC1*(-1+skoXC1*skoXC1*(-1/6))<=0,skoXC1*skoXC1*skoXC1*skoXC1*(-2/3)<=0,skoXC1*skoXC1<=2,skoXC1*skoXC1*((-1/2)+skoXC1*skoXC1*(-1/6))<=0,skoXC1*skoXC1*(-1/6)<=1,skoXC1*(-1+skoXC1*skoXC1*(1/3))<=0,(7/8)>skoXC1,skoXC1>0,skoXC1*skoXC1*(-1/2)>-3,skoXC1*skoXC1*(1/2)<=3,skoXC1*skoXC1*(24+skoXC1*skoXC1*(-10+skoXC1*skoXC1))<=16,skoXC1*skoXC1*(-80+skoXC1*skoXC1*(40+skoXC1*skoXC1*(-6+skoXC1*skoXC1*(1/8))))>-48,skoXC1*skoXC1*(80+skoXC1*skoXC1*(-40+skoXC1*skoXC1*(6+skoXC1*skoXC1*(-1/8))))<=48,skoXC1*skoXC1>0,skoXC1*(-1+skoXC1*skoXC1*((1/3)+skoXC1*skoXC1*(3/20)))<=0,skoXC1*skoXC1*((-1/6)+skoXC1*skoXC1*(-3/40))<=1,skoXC1*skoXC1*((-1/2)+skoXC1*skoXC1*((7/120)+skoXC1*skoXC1*(-3/40)))<=0,skoXC1*skoXC1*skoXC1*skoXC1*((-13/60)+skoXC1*skoXC1*(-3/10))<=0,skoXC1*skoXC1*skoXC1*skoXC1*((-17/120)+skoXC1*skoXC1*(3/80))<=0,skoXC1*skoXC1*((1/3)+skoXC1*skoXC1*(3/20))<=1,skoXC1*skoXC1*skoXC1*skoXC1*((32/15)+skoXC1*skoXC1*((-296/15)+skoXC1*skoXC1*((391/15)+skoXC1*skoXC1*((-146/15)+skoXC1*skoXC1*(3/4)))))<=0,skoXC1*skoXC1*((1/6)+skoXC1*skoXC1*(3/40))>-1,skoXC1*(-1+skoXC1*skoXC1*((-1/6)+skoXC1*skoXC1*(-3/40)))<=0]], Reals]]

% In QepcadB format:
(E skoXC1) [[(skoXC1 (-1+(skoXC1 skoXC1 (-1/6+(skoXC1 skoXC1 (-3/40+(skoXC1 skoXC1 (-5/112))))))))<=0]/\[[(skoXC1 skoXC1)<=0]/\[[(skoXC1 skoXC1 skoXC1 skoXC1 (-13/60+(skoXC1 skoXC1 (-9/280+(skoXC1 skoXC1 (-5/28))))))<=0]/\[[(skoXC1 skoXC1 (-1/2+(skoXC1 skoXC1 (7/120+(skoXC1 skoXC1 (33/560+(skoXC1 skoXC1 (-5/112))))))))<=0]/\[[(skoXC1 skoXC1 (-1/6+(skoXC1 skoXC1 (-3/40+(skoXC1 skoXC1 (-5/112))))))<=1]/\[[(skoXC1 (-1+(skoXC1 skoXC1 (1/3+(skoXC1 skoXC1 (3/20+(skoXC1 skoXC1 (5/56))))))))<=0]/\[[(skoXC1 skoXC1 skoXC1 skoXC1 (-80/3+(skoXC1 skoXC1 (128/3+(skoXC1 skoXC1 (-55/3+(skoXC1 skoXC1 (5/3))))))))<=0]/\[[(skoXC1 skoXC1 (256+(skoXC1 skoXC1 (-160+(skoXC1 skoXC1 (32+(skoXC1 skoXC1 (-1))))))))<=128]/\[[(skoXC1 skoXC1 (1/3))<=1]/\[[(skoXC1 (-1+(skoXC1 skoXC1 (-1/6))))<=0]/\[[(skoXC1 skoXC1 skoXC1 skoXC1 (-2/3))<=0]/\[[(skoXC1 skoXC1)<=2]/\[[(skoXC1 skoXC1 (-1/2+(skoXC1 skoXC1 (-1/6))))<=0]/\[[(skoXC1 skoXC1 (-1/6))<=1]/\[[(skoXC1 (-1+(skoXC1 skoXC1 (1/3))))<=0]/\[[skoXC1<7/8]/\[[0<skoXC1]/\[[-3<(skoXC1 skoXC1 (-1/2))]/\[[(skoXC1 skoXC1 (1/2))<=3]/\[[(skoXC1 skoXC1 (24+(skoXC1 skoXC1 (-10+(skoXC1 skoXC1)))))<=16]/\[[-48<(skoXC1 skoXC1 (-80+(skoXC1 skoXC1 (40+(skoXC1 skoXC1 (-6+(skoXC1 skoXC1 (1/8))))))))]/\[[(skoXC1 skoXC1 (80+(skoXC1 skoXC1 (-40+(skoXC1 skoXC1 (6+(skoXC1 skoXC1 (-1/8))))))))<=48]/\[[0<(skoXC1 skoXC1)]/\[[(skoXC1 (-1+(skoXC1 skoXC1 (1/3+(skoXC1 skoXC1 (3/20))))))<=0]/\[[(skoXC1 skoXC1 (-1/6+(skoXC1 skoXC1 (-3/40))))<=1]/\[[(skoXC1 skoXC1 (-1/2+(skoXC1 skoXC1 (7/120+(skoXC1 skoXC1 (-3/40))))))<=0]/\[[(skoXC1 skoXC1 skoXC1 skoXC1 (-13/60+(skoXC1 skoXC1 (-3/10))))<=0]/\[[(skoXC1 skoXC1 skoXC1 skoXC1 (-17/120+(skoXC1 skoXC1 (3/80))))<=0]/\[[(skoXC1 skoXC1 (1/3+(skoXC1 skoXC1 (3/20))))<=1]/\[[(skoXC1 skoXC1 skoXC1 skoXC1 (32/15+(skoXC1 skoXC1 (-296/15+(skoXC1 skoXC1 (391/15+(skoXC1 skoXC1 (-146/15+(skoXC1 skoXC1 (3/4))))))))))<=0]/\[[-1<(skoXC1 skoXC1 (1/6+(skoXC1 skoXC1 (3/40))))]/\[(skoXC1 (-1+(skoXC1 skoXC1 (-1/6+(skoXC1 skoXC1 (-3/40))))))<=0]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]].

% In SMTLib2 format:
(declare-fun skoXC1 () Real) (assert (and (<= (* skoXC1 (+ (- 1.) (* skoXC1 (* skoXC1 (+ (/ (- 1.) 6.) (* skoXC1 (* skoXC1 (+ (/ (- 3.) 40.) (* skoXC1 (* skoXC1 (/ (- 5.) 112.))))))))))) 0.) (and (<= (* skoXC1 skoXC1) 0.) (and (<= (* skoXC1 (* skoXC1 (* skoXC1 (* skoXC1 (+ (/ (- 13.) 60.) (* skoXC1 (* skoXC1 (+ (/ (- 9.) 280.) (* skoXC1 (* skoXC1 (/ (- 5.) 28.))))))))))) 0.) (and (<= (* skoXC1 (* skoXC1 (+ (/ (- 1.) 2.) (* skoXC1 (* skoXC1 (+ (/ 7. 120.) (* skoXC1 (* skoXC1 (+ (/ 33. 560.) (* skoXC1 (* skoXC1 (/ (- 5.) 112.)))))))))))) 0.) (and (<= (* skoXC1 (* skoXC1 (+ (/ (- 1.) 6.) (* skoXC1 (* skoXC1 (+ (/ (- 3.) 40.) (* skoXC1 (* skoXC1 (/ (- 5.) 112.))))))))) 1.) (and (<= (* skoXC1 (+ (- 1.) (* skoXC1 (* skoXC1 (+ (/ 1. 3.) (* skoXC1 (* skoXC1 (+ (/ 3. 20.) (* skoXC1 (* skoXC1 (/ 5. 56.))))))))))) 0.) (and (<= (* skoXC1 (* skoXC1 (* skoXC1 (* skoXC1 (+ (/ (- 80.) 3.) (* skoXC1 (* skoXC1 (+ (/ 128. 3.) (* skoXC1 (* skoXC1 (+ (/ (- 55.) 3.) (* skoXC1 (* skoXC1 (/ 5. 3.)))))))))))))) 0.) (and (<= (* skoXC1 (* skoXC1 (+ 256. (* skoXC1 (* skoXC1 (+ (- 160.) (* skoXC1 (* skoXC1 (+ 32. (* skoXC1 (* skoXC1 (- 1.)))))))))))) 128.) (and (<= (* skoXC1 (* skoXC1 (/ 1. 3.))) 1.) (and (<= (* skoXC1 (+ (- 1.) (* skoXC1 (* skoXC1 (/ (- 1.) 6.))))) 0.) (and (<= (* skoXC1 (* skoXC1 (* skoXC1 (* skoXC1 (/ (- 2.) 3.))))) 0.) (and (<= (* skoXC1 skoXC1) 2.) (and (<= (* skoXC1 (* skoXC1 (+ (/ (- 1.) 2.) (* skoXC1 (* skoXC1 (/ (- 1.) 6.)))))) 0.) (and (<= (* skoXC1 (* skoXC1 (/ (- 1.) 6.))) 1.) (and (<= (* skoXC1 (+ (- 1.) (* skoXC1 (* skoXC1 (/ 1. 3.))))) 0.) (and (> (/ 7. 8.) skoXC1) (and (> skoXC1 0.) (and (> (* skoXC1 (* skoXC1 (/ (- 1.) 2.))) (- 3.)) (and (<= (* skoXC1 (* skoXC1 (/ 1. 2.))) 3.) (and (<= (* skoXC1 (* skoXC1 (+ 24. (* skoXC1 (* skoXC1 (+ (- 10.) (* skoXC1 skoXC1))))))) 16.) (and (> (* skoXC1 (* skoXC1 (+ (- 80.) (* skoXC1 (* skoXC1 (+ 40. (* skoXC1 (* skoXC1 (+ (- 6.) (* skoXC1 (* skoXC1 (/ 1. 8.)))))))))))) (- 48.)) (and (<= (* skoXC1 (* skoXC1 (+ 80. (* skoXC1 (* skoXC1 (+ (- 40.) (* skoXC1 (* skoXC1 (+ 6. (* skoXC1 (* skoXC1 (/ (- 1.) 8.)))))))))))) 48.) (and (> (* skoXC1 skoXC1) 0.) (and (<= (* skoXC1 (+ (- 1.) (* skoXC1 (* skoXC1 (+ (/ 1. 3.) (* skoXC1 (* skoXC1 (/ 3. 20.)))))))) 0.) (and (<= (* skoXC1 (* skoXC1 (+ (/ (- 1.) 6.) (* skoXC1 (* skoXC1 (/ (- 3.) 40.)))))) 1.) (and (<= (* skoXC1 (* skoXC1 (+ (/ (- 1.) 2.) (* skoXC1 (* skoXC1 (+ (/ 7. 120.) (* skoXC1 (* skoXC1 (/ (- 3.) 40.))))))))) 0.) (and (<= (* skoXC1 (* skoXC1 (* skoXC1 (* skoXC1 (+ (/ (- 13.) 60.) (* skoXC1 (* skoXC1 (/ (- 3.) 10.)))))))) 0.) (and (<= (* skoXC1 (* skoXC1 (* skoXC1 (* skoXC1 (+ (/ (- 17.) 120.) (* skoXC1 (* skoXC1 (/ 3. 80.)))))))) 0.) (and (<= (* skoXC1 (* skoXC1 (+ (/ 1. 3.) (* skoXC1 (* skoXC1 (/ 3. 20.)))))) 1.) (and (<= (* skoXC1 (* skoXC1 (* skoXC1 (* skoXC1 (+ (/ 32. 15.) (* skoXC1 (* skoXC1 (+ (/ (- 296.) 15.) (* skoXC1 (* skoXC1 (+ (/ 391. 15.) (* skoXC1 (* skoXC1 (+ (/ (- 146.) 15.) (* skoXC1 (* skoXC1 (/ 3. 4.))))))))))))))))) 0.) (and (> (* skoXC1 (* skoXC1 (+ (/ 1. 6.) (* skoXC1 (* skoXC1 (/ 3. 40.)))))) (- 1.)) (<= (* skoXC1 (+ (- 1.) (* skoXC1 (* skoXC1 (+ (/ (- 1.) 6.) (* skoXC1 (* skoXC1 (/ (- 3.) 40.)))))))) 0.)))))))))))))))))))))))))))))))))

% In GRF format:
(sequent " MetiTarski formula " (antecedent (<= (* skoXC1 (+ (- 1.) (* skoXC1 (* skoXC1 (+ (/ (- 1.) 6.) (* skoXC1 (* skoXC1 (+ (/ (- 3.) 40.) (* skoXC1 (* skoXC1 (/ (- 5.) 112.))))))))))) 0.) (<= (* skoXC1 skoXC1) 0.) (<= (* skoXC1 (* skoXC1 (* skoXC1 (* skoXC1 (+ (/ (- 13.) 60.) (* skoXC1 (* skoXC1 (+ (/ (- 9.) 280.) (* skoXC1 (* skoXC1 (/ (- 5.) 28.))))))))))) 0.) (<= (* skoXC1 (* skoXC1 (+ (/ (- 1.) 2.) (* skoXC1 (* skoXC1 (+ (/ 7. 120.) (* skoXC1 (* skoXC1 (+ (/ 33. 560.) (* skoXC1 (* skoXC1 (/ (- 5.) 112.)))))))))))) 0.) (<= (* skoXC1 (* skoXC1 (+ (/ (- 1.) 6.) (* skoXC1 (* skoXC1 (+ (/ (- 3.) 40.) (* skoXC1 (* skoXC1 (/ (- 5.) 112.))))))))) 1.) (<= (* skoXC1 (+ (- 1.) (* skoXC1 (* skoXC1 (+ (/ 1. 3.) (* skoXC1 (* skoXC1 (+ (/ 3. 20.) (* skoXC1 (* skoXC1 (/ 5. 56.))))))))))) 0.) (<= (* skoXC1 (* skoXC1 (* skoXC1 (* skoXC1 (+ (/ (- 80.) 3.) (* skoXC1 (* skoXC1 (+ (/ 128. 3.) (* skoXC1 (* skoXC1 (+ (/ (- 55.) 3.) (* skoXC1 (* skoXC1 (/ 5. 3.)))))))))))))) 0.) (<= (* skoXC1 (* skoXC1 (+ 256. (* skoXC1 (* skoXC1 (+ (- 160.) (* skoXC1 (* skoXC1 (+ 32. (* skoXC1 (* skoXC1 (- 1.)))))))))))) 128.) (<= (* skoXC1 (* skoXC1 (/ 1. 3.))) 1.) (<= (* skoXC1 (+ (- 1.) (* skoXC1 (* skoXC1 (/ (- 1.) 6.))))) 0.) (<= (* skoXC1 (* skoXC1 (* skoXC1 (* skoXC1 (/ (- 2.) 3.))))) 0.) (<= (* skoXC1 skoXC1) 2.) (<= (* skoXC1 (* skoXC1 (+ (/ (- 1.) 2.) (* skoXC1 (* skoXC1 (/ (- 1.) 6.)))))) 0.) (<= (* skoXC1 (* skoXC1 (/ (- 1.) 6.))) 1.) (<= (* skoXC1 (+ (- 1.) (* skoXC1 (* skoXC1 (/ 1. 3.))))) 0.) (> (/ 7. 8.) skoXC1) (> skoXC1 0.) (> (* skoXC1 (* skoXC1 (/ (- 1.) 2.))) (- 3.)) (<= (* skoXC1 (* skoXC1 (/ 1. 2.))) 3.) (<= (* skoXC1 (* skoXC1 (+ 24. (* skoXC1 (* skoXC1 (+ (- 10.) (* skoXC1 skoXC1))))))) 16.) (> (* skoXC1 (* skoXC1 (+ (- 80.) (* skoXC1 (* skoXC1 (+ 40. (* skoXC1 (* skoXC1 (+ (- 6.) (* skoXC1 (* skoXC1 (/ 1. 8.)))))))))))) (- 48.)) (<= (* skoXC1 (* skoXC1 (+ 80. (* skoXC1 (* skoXC1 (+ (- 40.) (* skoXC1 (* skoXC1 (+ 6. (* skoXC1 (* skoXC1 (/ (- 1.) 8.)))))))))))) 48.) (> (* skoXC1 skoXC1) 0.) (<= (* skoXC1 (+ (- 1.) (* skoXC1 (* skoXC1 (+ (/ 1. 3.) (* skoXC1 (* skoXC1 (/ 3. 20.)))))))) 0.) (<= (* skoXC1 (* skoXC1 (+ (/ (- 1.) 6.) (* skoXC1 (* skoXC1 (/ (- 3.) 40.)))))) 1.) (<= (* skoXC1 (* skoXC1 (+ (/ (- 1.) 2.) (* skoXC1 (* skoXC1 (+ (/ 7. 120.) (* skoXC1 (* skoXC1 (/ (- 3.) 40.))))))))) 0.) (<= (* skoXC1 (* skoXC1 (* skoXC1 (* skoXC1 (+ (/ (- 13.) 60.) (* skoXC1 (* skoXC1 (/ (- 3.) 10.)))))))) 0.) (<= (* skoXC1 (* skoXC1 (* skoXC1 (* skoXC1 (+ (/ (- 17.) 120.) (* skoXC1 (* skoXC1 (/ 3. 80.)))))))) 0.) (<= (* skoXC1 (* skoXC1 (+ (/ 1. 3.) (* skoXC1 (* skoXC1 (/ 3. 20.)))))) 1.) (<= (* skoXC1 (* skoXC1 (* skoXC1 (* skoXC1 (+ (/ 32. 15.) (* skoXC1 (* skoXC1 (+ (/ (- 296.) 15.) (* skoXC1 (* skoXC1 (+ (/ 391. 15.) (* skoXC1 (* skoXC1 (+ (/ (- 146.) 15.) (* skoXC1 (* skoXC1 (/ 3. 4.))))))))))))))))) 0.) (> (* skoXC1 (* skoXC1 (+ (/ 1. 6.) (* skoXC1 (* skoXC1 (/ 3. 40.)))))) (- 1.))) (succedent (> (* skoXC1 (+ (- 1.) (* skoXC1 (* skoXC1 (+ (/ (- 1.) 6.) (* skoXC1 (* skoXC1 (/ (- 3.) 40.)))))))) 0.)))
-----[end problem]-----

-----[begin problem]-----
% In Mathematica format:
Timing[Resolve[Exists[{skoXC1}, And[skoXC1*skoXC1>0,skoXC1*skoXC1*skoXC1*skoXC1*((-13/60)+skoXC1*skoXC1*((-9/280)+skoXC1*skoXC1*(-5/28)))<=0,skoXC1*skoXC1*((-1/2)+skoXC1*skoXC1*((7/120)+skoXC1*skoXC1*((33/560)+skoXC1*skoXC1*(-5/112))))<=0,skoXC1*skoXC1*((-1/6)+skoXC1*skoXC1*((-3/40)+skoXC1*skoXC1*(-5/112)))<=1,skoXC1*(-1+skoXC1*skoXC1*((1/3)+skoXC1*skoXC1*((3/20)+skoXC1*skoXC1*(5/56))))<=0,skoXC1*skoXC1*skoXC1*skoXC1*((-80/3)+skoXC1*skoXC1*((128/3)+skoXC1*skoXC1*((-55/3)+skoXC1*skoXC1*(5/3))))<=0,skoXC1*skoXC1*(256+skoXC1*skoXC1*(-160+skoXC1*skoXC1*(32+skoXC1*skoXC1*-1)))<=128,skoXC1*skoXC1*(1/3)<=1,skoXC1*(-1+skoXC1*skoXC1*(-1/6))<=0,skoXC1*skoXC1*skoXC1*skoXC1*(-2/3)<=0,skoXC1*skoXC1<=2,skoXC1*skoXC1*((-1/2)+skoXC1*skoXC1*(-1/6))<=0,skoXC1*skoXC1*(-1/6)<=1,skoXC1*(-1+skoXC1*skoXC1*(1/3))<=0,(7/8)>skoXC1,skoXC1>0,skoXC1*skoXC1*(-1/2)>-3,skoXC1*skoXC1*(1/2)<=3,skoXC1*skoXC1*(24+skoXC1*skoXC1*(-10+skoXC1*skoXC1))<=16,skoXC1*skoXC1*(-80+skoXC1*skoXC1*(40+skoXC1*skoXC1*(-6+skoXC1*skoXC1*(1/8))))>-48,skoXC1*skoXC1*(80+skoXC1*skoXC1*(-40+skoXC1*skoXC1*(6+skoXC1*skoXC1*(-1/8))))<=48,skoXC1*skoXC1>0,skoXC1*(-1+skoXC1*skoXC1*((1/3)+skoXC1*skoXC1*(3/20)))<=0,skoXC1*skoXC1*((-1/6)+skoXC1*skoXC1*(-3/40))<=1,skoXC1*skoXC1*((-1/2)+skoXC1*skoXC1*((7/120)+skoXC1*skoXC1*(-3/40)))<=0,skoXC1*skoXC1*skoXC1*skoXC1*((-13/60)+skoXC1*skoXC1*(-3/10))<=0,skoXC1*skoXC1*skoXC1*skoXC1*((-17/120)+skoXC1*skoXC1*(3/80))<=0,skoXC1*skoXC1*((1/3)+skoXC1*skoXC1*(3/20))<=1,skoXC1*skoXC1*skoXC1*skoXC1*((32/15)+skoXC1*skoXC1*((-296/15)+skoXC1*skoXC1*((391/15)+skoXC1*skoXC1*((-146/15)+skoXC1*skoXC1*(3/4)))))<=0,skoXC1*skoXC1*((1/6)+skoXC1*skoXC1*(3/40))>-1,skoXC1*(-1+skoXC1*skoXC1*((-1/6)+skoXC1*skoXC1*(-3/40)))<=0]], Reals]]

% In QepcadB format:
(E skoXC1) [[0<(skoXC1 skoXC1)]/\[[(skoXC1 skoXC1 skoXC1 skoXC1 (-13/60+(skoXC1 skoXC1 (-9/280+(skoXC1 skoXC1 (-5/28))))))<=0]/\[[(skoXC1 skoXC1 (-1/2+(skoXC1 skoXC1 (7/120+(skoXC1 skoXC1 (33/560+(skoXC1 skoXC1 (-5/112))))))))<=0]/\[[(skoXC1 skoXC1 (-1/6+(skoXC1 skoXC1 (-3/40+(skoXC1 skoXC1 (-5/112))))))<=1]/\[[(skoXC1 (-1+(skoXC1 skoXC1 (1/3+(skoXC1 skoXC1 (3/20+(skoXC1 skoXC1 (5/56))))))))<=0]/\[[(skoXC1 skoXC1 skoXC1 skoXC1 (-80/3+(skoXC1 skoXC1 (128/3+(skoXC1 skoXC1 (-55/3+(skoXC1 skoXC1 (5/3))))))))<=0]/\[[(skoXC1 skoXC1 (256+(skoXC1 skoXC1 (-160+(skoXC1 skoXC1 (32+(skoXC1 skoXC1 (-1))))))))<=128]/\[[(skoXC1 skoXC1 (1/3))<=1]/\[[(skoXC1 (-1+(skoXC1 skoXC1 (-1/6))))<=0]/\[[(skoXC1 skoXC1 skoXC1 skoXC1 (-2/3))<=0]/\[[(skoXC1 skoXC1)<=2]/\[[(skoXC1 skoXC1 (-1/2+(skoXC1 skoXC1 (-1/6))))<=0]/\[[(skoXC1 skoXC1 (-1/6))<=1]/\[[(skoXC1 (-1+(skoXC1 skoXC1 (1/3))))<=0]/\[[skoXC1<7/8]/\[[0<skoXC1]/\[[-3<(skoXC1 skoXC1 (-1/2))]/\[[(skoXC1 skoXC1 (1/2))<=3]/\[[(skoXC1 skoXC1 (24+(skoXC1 skoXC1 (-10+(skoXC1 skoXC1)))))<=16]/\[[-48<(skoXC1 skoXC1 (-80+(skoXC1 skoXC1 (40+(skoXC1 skoXC1 (-6+(skoXC1 skoXC1 (1/8))))))))]/\[[(skoXC1 skoXC1 (80+(skoXC1 skoXC1 (-40+(skoXC1 skoXC1 (6+(skoXC1 skoXC1 (-1/8))))))))<=48]/\[[0<(skoXC1 skoXC1)]/\[[(skoXC1 (-1+(skoXC1 skoXC1 (1/3+(skoXC1 skoXC1 (3/20))))))<=0]/\[[(skoXC1 skoXC1 (-1/6+(skoXC1 skoXC1 (-3/40))))<=1]/\[[(skoXC1 skoXC1 (-1/2+(skoXC1 skoXC1 (7/120+(skoXC1 skoXC1 (-3/40))))))<=0]/\[[(skoXC1 skoXC1 skoXC1 skoXC1 (-13/60+(skoXC1 skoXC1 (-3/10))))<=0]/\[[(skoXC1 skoXC1 skoXC1 skoXC1 (-17/120+(skoXC1 skoXC1 (3/80))))<=0]/\[[(skoXC1 skoXC1 (1/3+(skoXC1 skoXC1 (3/20))))<=1]/\[[(skoXC1 skoXC1 skoXC1 skoXC1 (32/15+(skoXC1 skoXC1 (-296/15+(skoXC1 skoXC1 (391/15+(skoXC1 skoXC1 (-146/15+(skoXC1 skoXC1 (3/4))))))))))<=0]/\[[-1<(skoXC1 skoXC1 (1/6+(skoXC1 skoXC1 (3/40))))]/\[(skoXC1 (-1+(skoXC1 skoXC1 (-1/6+(skoXC1 skoXC1 (-3/40))))))<=0]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]].

% In SMTLib2 format:
(declare-fun skoXC1 () Real) (assert (and (> (* skoXC1 skoXC1) 0.) (and (<= (* skoXC1 (* skoXC1 (* skoXC1 (* skoXC1 (+ (/ (- 13.) 60.) (* skoXC1 (* skoXC1 (+ (/ (- 9.) 280.) (* skoXC1 (* skoXC1 (/ (- 5.) 28.))))))))))) 0.) (and (<= (* skoXC1 (* skoXC1 (+ (/ (- 1.) 2.) (* skoXC1 (* skoXC1 (+ (/ 7. 120.) (* skoXC1 (* skoXC1 (+ (/ 33. 560.) (* skoXC1 (* skoXC1 (/ (- 5.) 112.)))))))))))) 0.) (and (<= (* skoXC1 (* skoXC1 (+ (/ (- 1.) 6.) (* skoXC1 (* skoXC1 (+ (/ (- 3.) 40.) (* skoXC1 (* skoXC1 (/ (- 5.) 112.))))))))) 1.) (and (<= (* skoXC1 (+ (- 1.) (* skoXC1 (* skoXC1 (+ (/ 1. 3.) (* skoXC1 (* skoXC1 (+ (/ 3. 20.) (* skoXC1 (* skoXC1 (/ 5. 56.))))))))))) 0.) (and (<= (* skoXC1 (* skoXC1 (* skoXC1 (* skoXC1 (+ (/ (- 80.) 3.) (* skoXC1 (* skoXC1 (+ (/ 128. 3.) (* skoXC1 (* skoXC1 (+ (/ (- 55.) 3.) (* skoXC1 (* skoXC1 (/ 5. 3.)))))))))))))) 0.) (and (<= (* skoXC1 (* skoXC1 (+ 256. (* skoXC1 (* skoXC1 (+ (- 160.) (* skoXC1 (* skoXC1 (+ 32. (* skoXC1 (* skoXC1 (- 1.)))))))))))) 128.) (and (<= (* skoXC1 (* skoXC1 (/ 1. 3.))) 1.) (and (<= (* skoXC1 (+ (- 1.) (* skoXC1 (* skoXC1 (/ (- 1.) 6.))))) 0.) (and (<= (* skoXC1 (* skoXC1 (* skoXC1 (* skoXC1 (/ (- 2.) 3.))))) 0.) (and (<= (* skoXC1 skoXC1) 2.) (and (<= (* skoXC1 (* skoXC1 (+ (/ (- 1.) 2.) (* skoXC1 (* skoXC1 (/ (- 1.) 6.)))))) 0.) (and (<= (* skoXC1 (* skoXC1 (/ (- 1.) 6.))) 1.) (and (<= (* skoXC1 (+ (- 1.) (* skoXC1 (* skoXC1 (/ 1. 3.))))) 0.) (and (> (/ 7. 8.) skoXC1) (and (> skoXC1 0.) (and (> (* skoXC1 (* skoXC1 (/ (- 1.) 2.))) (- 3.)) (and (<= (* skoXC1 (* skoXC1 (/ 1. 2.))) 3.) (and (<= (* skoXC1 (* skoXC1 (+ 24. (* skoXC1 (* skoXC1 (+ (- 10.) (* skoXC1 skoXC1))))))) 16.) (and (> (* skoXC1 (* skoXC1 (+ (- 80.) (* skoXC1 (* skoXC1 (+ 40. (* skoXC1 (* skoXC1 (+ (- 6.) (* skoXC1 (* skoXC1 (/ 1. 8.)))))))))))) (- 48.)) (and (<= (* skoXC1 (* skoXC1 (+ 80. (* skoXC1 (* skoXC1 (+ (- 40.) (* skoXC1 (* skoXC1 (+ 6. (* skoXC1 (* skoXC1 (/ (- 1.) 8.)))))))))))) 48.) (and (> (* skoXC1 skoXC1) 0.) (and (<= (* skoXC1 (+ (- 1.) (* skoXC1 (* skoXC1 (+ (/ 1. 3.) (* skoXC1 (* skoXC1 (/ 3. 20.)))))))) 0.) (and (<= (* skoXC1 (* skoXC1 (+ (/ (- 1.) 6.) (* skoXC1 (* skoXC1 (/ (- 3.) 40.)))))) 1.) (and (<= (* skoXC1 (* skoXC1 (+ (/ (- 1.) 2.) (* skoXC1 (* skoXC1 (+ (/ 7. 120.) (* skoXC1 (* skoXC1 (/ (- 3.) 40.))))))))) 0.) (and (<= (* skoXC1 (* skoXC1 (* skoXC1 (* skoXC1 (+ (/ (- 13.) 60.) (* skoXC1 (* skoXC1 (/ (- 3.) 10.)))))))) 0.) (and (<= (* skoXC1 (* skoXC1 (* skoXC1 (* skoXC1 (+ (/ (- 17.) 120.) (* skoXC1 (* skoXC1 (/ 3. 80.)))))))) 0.) (and (<= (* skoXC1 (* skoXC1 (+ (/ 1. 3.) (* skoXC1 (* skoXC1 (/ 3. 20.)))))) 1.) (and (<= (* skoXC1 (* skoXC1 (* skoXC1 (* skoXC1 (+ (/ 32. 15.) (* skoXC1 (* skoXC1 (+ (/ (- 296.) 15.) (* skoXC1 (* skoXC1 (+ (/ 391. 15.) (* skoXC1 (* skoXC1 (+ (/ (- 146.) 15.) (* skoXC1 (* skoXC1 (/ 3. 4.))))))))))))))))) 0.) (and (> (* skoXC1 (* skoXC1 (+ (/ 1. 6.) (* skoXC1 (* skoXC1 (/ 3. 40.)))))) (- 1.)) (<= (* skoXC1 (+ (- 1.) (* skoXC1 (* skoXC1 (+ (/ (- 1.) 6.) (* skoXC1 (* skoXC1 (/ (- 3.) 40.)))))))) 0.))))))))))))))))))))))))))))))))

% In GRF format:
(sequent " MetiTarski formula " (antecedent (> (* skoXC1 skoXC1) 0.) (<= (* skoXC1 (* skoXC1 (* skoXC1 (* skoXC1 (+ (/ (- 13.) 60.) (* skoXC1 (* skoXC1 (+ (/ (- 9.) 280.) (* skoXC1 (* skoXC1 (/ (- 5.) 28.))))))))))) 0.) (<= (* skoXC1 (* skoXC1 (+ (/ (- 1.) 2.) (* skoXC1 (* skoXC1 (+ (/ 7. 120.) (* skoXC1 (* skoXC1 (+ (/ 33. 560.) (* skoXC1 (* skoXC1 (/ (- 5.) 112.)))))))))))) 0.) (<= (* skoXC1 (* skoXC1 (+ (/ (- 1.) 6.) (* skoXC1 (* skoXC1 (+ (/ (- 3.) 40.) (* skoXC1 (* skoXC1 (/ (- 5.) 112.))))))))) 1.) (<= (* skoXC1 (+ (- 1.) (* skoXC1 (* skoXC1 (+ (/ 1. 3.) (* skoXC1 (* skoXC1 (+ (/ 3. 20.) (* skoXC1 (* skoXC1 (/ 5. 56.))))))))))) 0.) (<= (* skoXC1 (* skoXC1 (* skoXC1 (* skoXC1 (+ (/ (- 80.) 3.) (* skoXC1 (* skoXC1 (+ (/ 128. 3.) (* skoXC1 (* skoXC1 (+ (/ (- 55.) 3.) (* skoXC1 (* skoXC1 (/ 5. 3.)))))))))))))) 0.) (<= (* skoXC1 (* skoXC1 (+ 256. (* skoXC1 (* skoXC1 (+ (- 160.) (* skoXC1 (* skoXC1 (+ 32. (* skoXC1 (* skoXC1 (- 1.)))))))))))) 128.) (<= (* skoXC1 (* skoXC1 (/ 1. 3.))) 1.) (<= (* skoXC1 (+ (- 1.) (* skoXC1 (* skoXC1 (/ (- 1.) 6.))))) 0.) (<= (* skoXC1 (* skoXC1 (* skoXC1 (* skoXC1 (/ (- 2.) 3.))))) 0.) (<= (* skoXC1 skoXC1) 2.) (<= (* skoXC1 (* skoXC1 (+ (/ (- 1.) 2.) (* skoXC1 (* skoXC1 (/ (- 1.) 6.)))))) 0.) (<= (* skoXC1 (* skoXC1 (/ (- 1.) 6.))) 1.) (<= (* skoXC1 (+ (- 1.) (* skoXC1 (* skoXC1 (/ 1. 3.))))) 0.) (> (/ 7. 8.) skoXC1) (> skoXC1 0.) (> (* skoXC1 (* skoXC1 (/ (- 1.) 2.))) (- 3.)) (<= (* skoXC1 (* skoXC1 (/ 1. 2.))) 3.) (<= (* skoXC1 (* skoXC1 (+ 24. (* skoXC1 (* skoXC1 (+ (- 10.) (* skoXC1 skoXC1))))))) 16.) (> (* skoXC1 (* skoXC1 (+ (- 80.) (* skoXC1 (* skoXC1 (+ 40. (* skoXC1 (* skoXC1 (+ (- 6.) (* skoXC1 (* skoXC1 (/ 1. 8.)))))))))))) (- 48.)) (<= (* skoXC1 (* skoXC1 (+ 80. (* skoXC1 (* skoXC1 (+ (- 40.) (* skoXC1 (* skoXC1 (+ 6. (* skoXC1 (* skoXC1 (/ (- 1.) 8.)))))))))))) 48.) (> (* skoXC1 skoXC1) 0.) (<= (* skoXC1 (+ (- 1.) (* skoXC1 (* skoXC1 (+ (/ 1. 3.) (* skoXC1 (* skoXC1 (/ 3. 20.)))))))) 0.) (<= (* skoXC1 (* skoXC1 (+ (/ (- 1.) 6.) (* skoXC1 (* skoXC1 (/ (- 3.) 40.)))))) 1.) (<= (* skoXC1 (* skoXC1 (+ (/ (- 1.) 2.) (* skoXC1 (* skoXC1 (+ (/ 7. 120.) (* skoXC1 (* skoXC1 (/ (- 3.) 40.))))))))) 0.) (<= (* skoXC1 (* skoXC1 (* skoXC1 (* skoXC1 (+ (/ (- 13.) 60.) (* skoXC1 (* skoXC1 (/ (- 3.) 10.)))))))) 0.) (<= (* skoXC1 (* skoXC1 (* skoXC1 (* skoXC1 (+ (/ (- 17.) 120.) (* skoXC1 (* skoXC1 (/ 3. 80.)))))))) 0.) (<= (* skoXC1 (* skoXC1 (+ (/ 1. 3.) (* skoXC1 (* skoXC1 (/ 3. 20.)))))) 1.) (<= (* skoXC1 (* skoXC1 (* skoXC1 (* skoXC1 (+ (/ 32. 15.) (* skoXC1 (* skoXC1 (+ (/ (- 296.) 15.) (* skoXC1 (* skoXC1 (+ (/ 391. 15.) (* skoXC1 (* skoXC1 (+ (/ (- 146.) 15.) (* skoXC1 (* skoXC1 (/ 3. 4.))))))))))))))))) 0.) (> (* skoXC1 (* skoXC1 (+ (/ 1. 6.) (* skoXC1 (* skoXC1 (/ 3. 40.)))))) (- 1.))) (succedent (> (* skoXC1 (+ (- 1.) (* skoXC1 (* skoXC1 (+ (/ (- 1.) 6.) (* skoXC1 (* skoXC1 (/ (- 3.) 40.)))))))) 0.)))
-----[end problem]-----

-----[begin problem]-----
% In Mathematica format:
Timing[Resolve[Exists[{skoXC1}, And[skoXC1*(-1+skoXC1*skoXC1*((-1/6)+skoXC1*skoXC1*((-3/40)+skoXC1*skoXC1*(-5/112))))<=0,skoXC1*skoXC1<=1,skoXC1*skoXC1*skoXC1*skoXC1*((-13/60)+skoXC1*skoXC1*((-9/280)+skoXC1*skoXC1*(-5/28)))<=0,skoXC1*skoXC1*((-1/2)+skoXC1*skoXC1*((7/120)+skoXC1*skoXC1*((33/560)+skoXC1*skoXC1*(-5/112))))<=0,skoXC1*skoXC1*((-1/6)+skoXC1*skoXC1*((-3/40)+skoXC1*skoXC1*(-5/112)))<=1,skoXC1*(-1+skoXC1*skoXC1*((1/3)+skoXC1*skoXC1*((3/20)+skoXC1*skoXC1*(5/56))))<=0,skoXC1*skoXC1*skoXC1*skoXC1*((-80/3)+skoXC1*skoXC1*((128/3)+skoXC1*skoXC1*((-55/3)+skoXC1*skoXC1*(5/3))))<=0,skoXC1*skoXC1*(256+skoXC1*skoXC1*(-160+skoXC1*skoXC1*(32+skoXC1*skoXC1*-1)))<=128,skoXC1*skoXC1*(1/3)<=1,skoXC1*(-1+skoXC1*skoXC1*(-1/6))<=0,skoXC1*skoXC1*skoXC1*skoXC1*(-2/3)<=0,skoXC1*skoXC1<=2,skoXC1*skoXC1*((-1/2)+skoXC1*skoXC1*(-1/6))<=0,skoXC1*skoXC1*(-1/6)<=1,skoXC1*(-1+skoXC1*skoXC1*(1/3))<=0,(7/8)>skoXC1,skoXC1>0,skoXC1*skoXC1*(-1/2)>-3,skoXC1*skoXC1*(1/2)<=3,skoXC1*skoXC1*(24+skoXC1*skoXC1*(-10+skoXC1*skoXC1))<=16,skoXC1*skoXC1*(-80+skoXC1*skoXC1*(40+skoXC1*skoXC1*(-6+skoXC1*skoXC1*(1/8))))>-48,skoXC1*skoXC1*(80+skoXC1*skoXC1*(-40+skoXC1*skoXC1*(6+skoXC1*skoXC1*(-1/8))))<=48,skoXC1*skoXC1>0,skoXC1*(-1+skoXC1*skoXC1*((1/3)+skoXC1*skoXC1*(3/20)))<=0,skoXC1*skoXC1*((-1/6)+skoXC1*skoXC1*(-3/40))<=1,skoXC1*skoXC1*((-1/2)+skoXC1*skoXC1*((7/120)+skoXC1*skoXC1*(-3/40)))<=0,skoXC1*skoXC1*skoXC1*skoXC1*((-13/60)+skoXC1*skoXC1*(-3/10))<=0,skoXC1*skoXC1*skoXC1*skoXC1*((-17/120)+skoXC1*skoXC1*(3/80))<=0,skoXC1*skoXC1*((1/3)+skoXC1*skoXC1*(3/20))<=1,skoXC1*skoXC1*skoXC1*skoXC1*((32/15)+skoXC1*skoXC1*((-296/15)+skoXC1*skoXC1*((391/15)+skoXC1*skoXC1*((-146/15)+skoXC1*skoXC1*(3/4)))))<=0,skoXC1*skoXC1*((1/6)+skoXC1*skoXC1*(3/40))>-1,skoXC1*(-1+skoXC1*skoXC1*((-1/6)+skoXC1*skoXC1*(-3/40)))<=0]], Reals]]

% In QepcadB format:
(E skoXC1) [[(skoXC1 (-1+(skoXC1 skoXC1 (-1/6+(skoXC1 skoXC1 (-3/40+(skoXC1 skoXC1 (-5/112))))))))<=0]/\[[(skoXC1 skoXC1)<=1]/\[[(skoXC1 skoXC1 skoXC1 skoXC1 (-13/60+(skoXC1 skoXC1 (-9/280+(skoXC1 skoXC1 (-5/28))))))<=0]/\[[(skoXC1 skoXC1 (-1/2+(skoXC1 skoXC1 (7/120+(skoXC1 skoXC1 (33/560+(skoXC1 skoXC1 (-5/112))))))))<=0]/\[[(skoXC1 skoXC1 (-1/6+(skoXC1 skoXC1 (-3/40+(skoXC1 skoXC1 (-5/112))))))<=1]/\[[(skoXC1 (-1+(skoXC1 skoXC1 (1/3+(skoXC1 skoXC1 (3/20+(skoXC1 skoXC1 (5/56))))))))<=0]/\[[(skoXC1 skoXC1 skoXC1 skoXC1 (-80/3+(skoXC1 skoXC1 (128/3+(skoXC1 skoXC1 (-55/3+(skoXC1 skoXC1 (5/3))))))))<=0]/\[[(skoXC1 skoXC1 (256+(skoXC1 skoXC1 (-160+(skoXC1 skoXC1 (32+(skoXC1 skoXC1 (-1))))))))<=128]/\[[(skoXC1 skoXC1 (1/3))<=1]/\[[(skoXC1 (-1+(skoXC1 skoXC1 (-1/6))))<=0]/\[[(skoXC1 skoXC1 skoXC1 skoXC1 (-2/3))<=0]/\[[(skoXC1 skoXC1)<=2]/\[[(skoXC1 skoXC1 (-1/2+(skoXC1 skoXC1 (-1/6))))<=0]/\[[(skoXC1 skoXC1 (-1/6))<=1]/\[[(skoXC1 (-1+(skoXC1 skoXC1 (1/3))))<=0]/\[[skoXC1<7/8]/\[[0<skoXC1]/\[[-3<(skoXC1 skoXC1 (-1/2))]/\[[(skoXC1 skoXC1 (1/2))<=3]/\[[(skoXC1 skoXC1 (24+(skoXC1 skoXC1 (-10+(skoXC1 skoXC1)))))<=16]/\[[-48<(skoXC1 skoXC1 (-80+(skoXC1 skoXC1 (40+(skoXC1 skoXC1 (-6+(skoXC1 skoXC1 (1/8))))))))]/\[[(skoXC1 skoXC1 (80+(skoXC1 skoXC1 (-40+(skoXC1 skoXC1 (6+(skoXC1 skoXC1 (-1/8))))))))<=48]/\[[0<(skoXC1 skoXC1)]/\[[(skoXC1 (-1+(skoXC1 skoXC1 (1/3+(skoXC1 skoXC1 (3/20))))))<=0]/\[[(skoXC1 skoXC1 (-1/6+(skoXC1 skoXC1 (-3/40))))<=1]/\[[(skoXC1 skoXC1 (-1/2+(skoXC1 skoXC1 (7/120+(skoXC1 skoXC1 (-3/40))))))<=0]/\[[(skoXC1 skoXC1 skoXC1 skoXC1 (-13/60+(skoXC1 skoXC1 (-3/10))))<=0]/\[[(skoXC1 skoXC1 skoXC1 skoXC1 (-17/120+(skoXC1 skoXC1 (3/80))))<=0]/\[[(skoXC1 skoXC1 (1/3+(skoXC1 skoXC1 (3/20))))<=1]/\[[(skoXC1 skoXC1 skoXC1 skoXC1 (32/15+(skoXC1 skoXC1 (-296/15+(skoXC1 skoXC1 (391/15+(skoXC1 skoXC1 (-146/15+(skoXC1 skoXC1 (3/4))))))))))<=0]/\[[-1<(skoXC1 skoXC1 (1/6+(skoXC1 skoXC1 (3/40))))]/\[(skoXC1 (-1+(skoXC1 skoXC1 (-1/6+(skoXC1 skoXC1 (-3/40))))))<=0]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]].

% In SMTLib2 format:
(declare-fun skoXC1 () Real) (assert (and (<= (* skoXC1 (+ (- 1.) (* skoXC1 (* skoXC1 (+ (/ (- 1.) 6.) (* skoXC1 (* skoXC1 (+ (/ (- 3.) 40.) (* skoXC1 (* skoXC1 (/ (- 5.) 112.))))))))))) 0.) (and (<= (* skoXC1 skoXC1) 1.) (and (<= (* skoXC1 (* skoXC1 (* skoXC1 (* skoXC1 (+ (/ (- 13.) 60.) (* skoXC1 (* skoXC1 (+ (/ (- 9.) 280.) (* skoXC1 (* skoXC1 (/ (- 5.) 28.))))))))))) 0.) (and (<= (* skoXC1 (* skoXC1 (+ (/ (- 1.) 2.) (* skoXC1 (* skoXC1 (+ (/ 7. 120.) (* skoXC1 (* skoXC1 (+ (/ 33. 560.) (* skoXC1 (* skoXC1 (/ (- 5.) 112.)))))))))))) 0.) (and (<= (* skoXC1 (* skoXC1 (+ (/ (- 1.) 6.) (* skoXC1 (* skoXC1 (+ (/ (- 3.) 40.) (* skoXC1 (* skoXC1 (/ (- 5.) 112.))))))))) 1.) (and (<= (* skoXC1 (+ (- 1.) (* skoXC1 (* skoXC1 (+ (/ 1. 3.) (* skoXC1 (* skoXC1 (+ (/ 3. 20.) (* skoXC1 (* skoXC1 (/ 5. 56.))))))))))) 0.) (and (<= (* skoXC1 (* skoXC1 (* skoXC1 (* skoXC1 (+ (/ (- 80.) 3.) (* skoXC1 (* skoXC1 (+ (/ 128. 3.) (* skoXC1 (* skoXC1 (+ (/ (- 55.) 3.) (* skoXC1 (* skoXC1 (/ 5. 3.)))))))))))))) 0.) (and (<= (* skoXC1 (* skoXC1 (+ 256. (* skoXC1 (* skoXC1 (+ (- 160.) (* skoXC1 (* skoXC1 (+ 32. (* skoXC1 (* skoXC1 (- 1.)))))))))))) 128.) (and (<= (* skoXC1 (* skoXC1 (/ 1. 3.))) 1.) (and (<= (* skoXC1 (+ (- 1.) (* skoXC1 (* skoXC1 (/ (- 1.) 6.))))) 0.) (and (<= (* skoXC1 (* skoXC1 (* skoXC1 (* skoXC1 (/ (- 2.) 3.))))) 0.) (and (<= (* skoXC1 skoXC1) 2.) (and (<= (* skoXC1 (* skoXC1 (+ (/ (- 1.) 2.) (* skoXC1 (* skoXC1 (/ (- 1.) 6.)))))) 0.) (and (<= (* skoXC1 (* skoXC1 (/ (- 1.) 6.))) 1.) (and (<= (* skoXC1 (+ (- 1.) (* skoXC1 (* skoXC1 (/ 1. 3.))))) 0.) (and (> (/ 7. 8.) skoXC1) (and (> skoXC1 0.) (and (> (* skoXC1 (* skoXC1 (/ (- 1.) 2.))) (- 3.)) (and (<= (* skoXC1 (* skoXC1 (/ 1. 2.))) 3.) (and (<= (* skoXC1 (* skoXC1 (+ 24. (* skoXC1 (* skoXC1 (+ (- 10.) (* skoXC1 skoXC1))))))) 16.) (and (> (* skoXC1 (* skoXC1 (+ (- 80.) (* skoXC1 (* skoXC1 (+ 40. (* skoXC1 (* skoXC1 (+ (- 6.) (* skoXC1 (* skoXC1 (/ 1. 8.)))))))))))) (- 48.)) (and (<= (* skoXC1 (* skoXC1 (+ 80. (* skoXC1 (* skoXC1 (+ (- 40.) (* skoXC1 (* skoXC1 (+ 6. (* skoXC1 (* skoXC1 (/ (- 1.) 8.)))))))))))) 48.) (and (> (* skoXC1 skoXC1) 0.) (and (<= (* skoXC1 (+ (- 1.) (* skoXC1 (* skoXC1 (+ (/ 1. 3.) (* skoXC1 (* skoXC1 (/ 3. 20.)))))))) 0.) (and (<= (* skoXC1 (* skoXC1 (+ (/ (- 1.) 6.) (* skoXC1 (* skoXC1 (/ (- 3.) 40.)))))) 1.) (and (<= (* skoXC1 (* skoXC1 (+ (/ (- 1.) 2.) (* skoXC1 (* skoXC1 (+ (/ 7. 120.) (* skoXC1 (* skoXC1 (/ (- 3.) 40.))))))))) 0.) (and (<= (* skoXC1 (* skoXC1 (* skoXC1 (* skoXC1 (+ (/ (- 13.) 60.) (* skoXC1 (* skoXC1 (/ (- 3.) 10.)))))))) 0.) (and (<= (* skoXC1 (* skoXC1 (* skoXC1 (* skoXC1 (+ (/ (- 17.) 120.) (* skoXC1 (* skoXC1 (/ 3. 80.)))))))) 0.) (and (<= (* skoXC1 (* skoXC1 (+ (/ 1. 3.) (* skoXC1 (* skoXC1 (/ 3. 20.)))))) 1.) (and (<= (* skoXC1 (* skoXC1 (* skoXC1 (* skoXC1 (+ (/ 32. 15.) (* skoXC1 (* skoXC1 (+ (/ (- 296.) 15.) (* skoXC1 (* skoXC1 (+ (/ 391. 15.) (* skoXC1 (* skoXC1 (+ (/ (- 146.) 15.) (* skoXC1 (* skoXC1 (/ 3. 4.))))))))))))))))) 0.) (and (> (* skoXC1 (* skoXC1 (+ (/ 1. 6.) (* skoXC1 (* skoXC1 (/ 3. 40.)))))) (- 1.)) (<= (* skoXC1 (+ (- 1.) (* skoXC1 (* skoXC1 (+ (/ (- 1.) 6.) (* skoXC1 (* skoXC1 (/ (- 3.) 40.)))))))) 0.)))))))))))))))))))))))))))))))))

% In GRF format:
(sequent " MetiTarski formula " (antecedent (<= (* skoXC1 (+ (- 1.) (* skoXC1 (* skoXC1 (+ (/ (- 1.) 6.) (* skoXC1 (* skoXC1 (+ (/ (- 3.) 40.) (* skoXC1 (* skoXC1 (/ (- 5.) 112.))))))))))) 0.) (<= (* skoXC1 skoXC1) 1.) (<= (* skoXC1 (* skoXC1 (* skoXC1 (* skoXC1 (+ (/ (- 13.) 60.) (* skoXC1 (* skoXC1 (+ (/ (- 9.) 280.) (* skoXC1 (* skoXC1 (/ (- 5.) 28.))))))))))) 0.) (<= (* skoXC1 (* skoXC1 (+ (/ (- 1.) 2.) (* skoXC1 (* skoXC1 (+ (/ 7. 120.) (* skoXC1 (* skoXC1 (+ (/ 33. 560.) (* skoXC1 (* skoXC1 (/ (- 5.) 112.)))))))))))) 0.) (<= (* skoXC1 (* skoXC1 (+ (/ (- 1.) 6.) (* skoXC1 (* skoXC1 (+ (/ (- 3.) 40.) (* skoXC1 (* skoXC1 (/ (- 5.) 112.))))))))) 1.) (<= (* skoXC1 (+ (- 1.) (* skoXC1 (* skoXC1 (+ (/ 1. 3.) (* skoXC1 (* skoXC1 (+ (/ 3. 20.) (* skoXC1 (* skoXC1 (/ 5. 56.))))))))))) 0.) (<= (* skoXC1 (* skoXC1 (* skoXC1 (* skoXC1 (+ (/ (- 80.) 3.) (* skoXC1 (* skoXC1 (+ (/ 128. 3.) (* skoXC1 (* skoXC1 (+ (/ (- 55.) 3.) (* skoXC1 (* skoXC1 (/ 5. 3.)))))))))))))) 0.) (<= (* skoXC1 (* skoXC1 (+ 256. (* skoXC1 (* skoXC1 (+ (- 160.) (* skoXC1 (* skoXC1 (+ 32. (* skoXC1 (* skoXC1 (- 1.)))))))))))) 128.) (<= (* skoXC1 (* skoXC1 (/ 1. 3.))) 1.) (<= (* skoXC1 (+ (- 1.) (* skoXC1 (* skoXC1 (/ (- 1.) 6.))))) 0.) (<= (* skoXC1 (* skoXC1 (* skoXC1 (* skoXC1 (/ (- 2.) 3.))))) 0.) (<= (* skoXC1 skoXC1) 2.) (<= (* skoXC1 (* skoXC1 (+ (/ (- 1.) 2.) (* skoXC1 (* skoXC1 (/ (- 1.) 6.)))))) 0.) (<= (* skoXC1 (* skoXC1 (/ (- 1.) 6.))) 1.) (<= (* skoXC1 (+ (- 1.) (* skoXC1 (* skoXC1 (/ 1. 3.))))) 0.) (> (/ 7. 8.) skoXC1) (> skoXC1 0.) (> (* skoXC1 (* skoXC1 (/ (- 1.) 2.))) (- 3.)) (<= (* skoXC1 (* skoXC1 (/ 1. 2.))) 3.) (<= (* skoXC1 (* skoXC1 (+ 24. (* skoXC1 (* skoXC1 (+ (- 10.) (* skoXC1 skoXC1))))))) 16.) (> (* skoXC1 (* skoXC1 (+ (- 80.) (* skoXC1 (* skoXC1 (+ 40. (* skoXC1 (* skoXC1 (+ (- 6.) (* skoXC1 (* skoXC1 (/ 1. 8.)))))))))))) (- 48.)) (<= (* skoXC1 (* skoXC1 (+ 80. (* skoXC1 (* skoXC1 (+ (- 40.) (* skoXC1 (* skoXC1 (+ 6. (* skoXC1 (* skoXC1 (/ (- 1.) 8.)))))))))))) 48.) (> (* skoXC1 skoXC1) 0.) (<= (* skoXC1 (+ (- 1.) (* skoXC1 (* skoXC1 (+ (/ 1. 3.) (* skoXC1 (* skoXC1 (/ 3. 20.)))))))) 0.) (<= (* skoXC1 (* skoXC1 (+ (/ (- 1.) 6.) (* skoXC1 (* skoXC1 (/ (- 3.) 40.)))))) 1.) (<= (* skoXC1 (* skoXC1 (+ (/ (- 1.) 2.) (* skoXC1 (* skoXC1 (+ (/ 7. 120.) (* skoXC1 (* skoXC1 (/ (- 3.) 40.))))))))) 0.) (<= (* skoXC1 (* skoXC1 (* skoXC1 (* skoXC1 (+ (/ (- 13.) 60.) (* skoXC1 (* skoXC1 (/ (- 3.) 10.)))))))) 0.) (<= (* skoXC1 (* skoXC1 (* skoXC1 (* skoXC1 (+ (/ (- 17.) 120.) (* skoXC1 (* skoXC1 (/ 3. 80.)))))))) 0.) (<= (* skoXC1 (* skoXC1 (+ (/ 1. 3.) (* skoXC1 (* skoXC1 (/ 3. 20.)))))) 1.) (<= (* skoXC1 (* skoXC1 (* skoXC1 (* skoXC1 (+ (/ 32. 15.) (* skoXC1 (* skoXC1 (+ (/ (- 296.) 15.) (* skoXC1 (* skoXC1 (+ (/ 391. 15.) (* skoXC1 (* skoXC1 (+ (/ (- 146.) 15.) (* skoXC1 (* skoXC1 (/ 3. 4.))))))))))))))))) 0.) (> (* skoXC1 (* skoXC1 (+ (/ 1. 6.) (* skoXC1 (* skoXC1 (/ 3. 40.)))))) (- 1.))) (succedent (> (* skoXC1 (+ (- 1.) (* skoXC1 (* skoXC1 (+ (/ (- 1.) 6.) (* skoXC1 (* skoXC1 (/ (- 3.) 40.)))))))) 0.)))
-----[end problem]-----

-----[begin problem]-----
% In Mathematica format:
Timing[Resolve[Exists[{skoXC1}, And[skoXC1*(-1+skoXC1*skoXC1*((-1/6)+skoXC1*skoXC1*((-3/40)+skoXC1*skoXC1*(-5/112))))<=0,skoXC1*skoXC1*((1/6)+skoXC1*skoXC1*((3/40)+skoXC1*skoXC1*(5/112)))>-1,skoXC1*skoXC1*skoXC1*skoXC1*((-13/60)+skoXC1*skoXC1*((-9/280)+skoXC1*skoXC1*(-5/28)))<=0,skoXC1*skoXC1*((-1/2)+skoXC1*skoXC1*((7/120)+skoXC1*skoXC1*((33/560)+skoXC1*skoXC1*(-5/112))))<=0,skoXC1*skoXC1*((-1/6)+skoXC1*skoXC1*((-3/40)+skoXC1*skoXC1*(-5/112)))<=1,skoXC1*(-1+skoXC1*skoXC1*((1/3)+skoXC1*skoXC1*((3/20)+skoXC1*skoXC1*(5/56))))<=0,skoXC1*skoXC1*skoXC1*skoXC1*((-80/3)+skoXC1*skoXC1*((128/3)+skoXC1*skoXC1*((-55/3)+skoXC1*skoXC1*(5/3))))<=0,skoXC1*skoXC1*(256+skoXC1*skoXC1*(-160+skoXC1*skoXC1*(32+skoXC1*skoXC1*-1)))<=128,skoXC1*skoXC1*(1/3)<=1,skoXC1*(-1+skoXC1*skoXC1*(-1/6))<=0,skoXC1*skoXC1*skoXC1*skoXC1*(-2/3)<=0,skoXC1*skoXC1<=2,skoXC1*skoXC1*((-1/2)+skoXC1*skoXC1*(-1/6))<=0,skoXC1*skoXC1*(-1/6)<=1,skoXC1*(-1+skoXC1*skoXC1*(1/3))<=0,(7/8)>skoXC1,skoXC1>0,skoXC1*skoXC1*(-1/2)>-3,skoXC1*skoXC1*(1/2)<=3,skoXC1*skoXC1*(24+skoXC1*skoXC1*(-10+skoXC1*skoXC1))<=16,skoXC1*skoXC1*(-80+skoXC1*skoXC1*(40+skoXC1*skoXC1*(-6+skoXC1*skoXC1*(1/8))))>-48,skoXC1*skoXC1*(80+skoXC1*skoXC1*(-40+skoXC1*skoXC1*(6+skoXC1*skoXC1*(-1/8))))<=48,skoXC1*skoXC1>0,skoXC1*(-1+skoXC1*skoXC1*((1/3)+skoXC1*skoXC1*(3/20)))<=0,skoXC1*skoXC1*((-1/6)+skoXC1*skoXC1*(-3/40))<=1,skoXC1*skoXC1*((-1/2)+skoXC1*skoXC1*((7/120)+skoXC1*skoXC1*(-3/40)))<=0,skoXC1*skoXC1*skoXC1*skoXC1*((-13/60)+skoXC1*skoXC1*(-3/10))<=0,skoXC1*skoXC1*skoXC1*skoXC1*((-17/120)+skoXC1*skoXC1*(3/80))<=0,skoXC1*skoXC1*((1/3)+skoXC1*skoXC1*(3/20))<=1,skoXC1*skoXC1*skoXC1*skoXC1*((32/15)+skoXC1*skoXC1*((-296/15)+skoXC1*skoXC1*((391/15)+skoXC1*skoXC1*((-146/15)+skoXC1*skoXC1*(3/4)))))<=0,skoXC1*skoXC1*((1/6)+skoXC1*skoXC1*(3/40))>-1,skoXC1*(-1+skoXC1*skoXC1*((-1/6)+skoXC1*skoXC1*(-3/40)))<=0]], Reals]]

% In QepcadB format:
(E skoXC1) [[(skoXC1 (-1+(skoXC1 skoXC1 (-1/6+(skoXC1 skoXC1 (-3/40+(skoXC1 skoXC1 (-5/112))))))))<=0]/\[[-1<(skoXC1 skoXC1 (1/6+(skoXC1 skoXC1 (3/40+(skoXC1 skoXC1 (5/112))))))]/\[[(skoXC1 skoXC1 skoXC1 skoXC1 (-13/60+(skoXC1 skoXC1 (-9/280+(skoXC1 skoXC1 (-5/28))))))<=0]/\[[(skoXC1 skoXC1 (-1/2+(skoXC1 skoXC1 (7/120+(skoXC1 skoXC1 (33/560+(skoXC1 skoXC1 (-5/112))))))))<=0]/\[[(skoXC1 skoXC1 (-1/6+(skoXC1 skoXC1 (-3/40+(skoXC1 skoXC1 (-5/112))))))<=1]/\[[(skoXC1 (-1+(skoXC1 skoXC1 (1/3+(skoXC1 skoXC1 (3/20+(skoXC1 skoXC1 (5/56))))))))<=0]/\[[(skoXC1 skoXC1 skoXC1 skoXC1 (-80/3+(skoXC1 skoXC1 (128/3+(skoXC1 skoXC1 (-55/3+(skoXC1 skoXC1 (5/3))))))))<=0]/\[[(skoXC1 skoXC1 (256+(skoXC1 skoXC1 (-160+(skoXC1 skoXC1 (32+(skoXC1 skoXC1 (-1))))))))<=128]/\[[(skoXC1 skoXC1 (1/3))<=1]/\[[(skoXC1 (-1+(skoXC1 skoXC1 (-1/6))))<=0]/\[[(skoXC1 skoXC1 skoXC1 skoXC1 (-2/3))<=0]/\[[(skoXC1 skoXC1)<=2]/\[[(skoXC1 skoXC1 (-1/2+(skoXC1 skoXC1 (-1/6))))<=0]/\[[(skoXC1 skoXC1 (-1/6))<=1]/\[[(skoXC1 (-1+(skoXC1 skoXC1 (1/3))))<=0]/\[[skoXC1<7/8]/\[[0<skoXC1]/\[[-3<(skoXC1 skoXC1 (-1/2))]/\[[(skoXC1 skoXC1 (1/2))<=3]/\[[(skoXC1 skoXC1 (24+(skoXC1 skoXC1 (-10+(skoXC1 skoXC1)))))<=16]/\[[-48<(skoXC1 skoXC1 (-80+(skoXC1 skoXC1 (40+(skoXC1 skoXC1 (-6+(skoXC1 skoXC1 (1/8))))))))]/\[[(skoXC1 skoXC1 (80+(skoXC1 skoXC1 (-40+(skoXC1 skoXC1 (6+(skoXC1 skoXC1 (-1/8))))))))<=48]/\[[0<(skoXC1 skoXC1)]/\[[(skoXC1 (-1+(skoXC1 skoXC1 (1/3+(skoXC1 skoXC1 (3/20))))))<=0]/\[[(skoXC1 skoXC1 (-1/6+(skoXC1 skoXC1 (-3/40))))<=1]/\[[(skoXC1 skoXC1 (-1/2+(skoXC1 skoXC1 (7/120+(skoXC1 skoXC1 (-3/40))))))<=0]/\[[(skoXC1 skoXC1 skoXC1 skoXC1 (-13/60+(skoXC1 skoXC1 (-3/10))))<=0]/\[[(skoXC1 skoXC1 skoXC1 skoXC1 (-17/120+(skoXC1 skoXC1 (3/80))))<=0]/\[[(skoXC1 skoXC1 (1/3+(skoXC1 skoXC1 (3/20))))<=1]/\[[(skoXC1 skoXC1 skoXC1 skoXC1 (32/15+(skoXC1 skoXC1 (-296/15+(skoXC1 skoXC1 (391/15+(skoXC1 skoXC1 (-146/15+(skoXC1 skoXC1 (3/4))))))))))<=0]/\[[-1<(skoXC1 skoXC1 (1/6+(skoXC1 skoXC1 (3/40))))]/\[(skoXC1 (-1+(skoXC1 skoXC1 (-1/6+(skoXC1 skoXC1 (-3/40))))))<=0]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]].

% In SMTLib2 format:
(declare-fun skoXC1 () Real) (assert (and (<= (* skoXC1 (+ (- 1.) (* skoXC1 (* skoXC1 (+ (/ (- 1.) 6.) (* skoXC1 (* skoXC1 (+ (/ (- 3.) 40.) (* skoXC1 (* skoXC1 (/ (- 5.) 112.))))))))))) 0.) (and (> (* skoXC1 (* skoXC1 (+ (/ 1. 6.) (* skoXC1 (* skoXC1 (+ (/ 3. 40.) (* skoXC1 (* skoXC1 (/ 5. 112.))))))))) (- 1.)) (and (<= (* skoXC1 (* skoXC1 (* skoXC1 (* skoXC1 (+ (/ (- 13.) 60.) (* skoXC1 (* skoXC1 (+ (/ (- 9.) 280.) (* skoXC1 (* skoXC1 (/ (- 5.) 28.))))))))))) 0.) (and (<= (* skoXC1 (* skoXC1 (+ (/ (- 1.) 2.) (* skoXC1 (* skoXC1 (+ (/ 7. 120.) (* skoXC1 (* skoXC1 (+ (/ 33. 560.) (* skoXC1 (* skoXC1 (/ (- 5.) 112.)))))))))))) 0.) (and (<= (* skoXC1 (* skoXC1 (+ (/ (- 1.) 6.) (* skoXC1 (* skoXC1 (+ (/ (- 3.) 40.) (* skoXC1 (* skoXC1 (/ (- 5.) 112.))))))))) 1.) (and (<= (* skoXC1 (+ (- 1.) (* skoXC1 (* skoXC1 (+ (/ 1. 3.) (* skoXC1 (* skoXC1 (+ (/ 3. 20.) (* skoXC1 (* skoXC1 (/ 5. 56.))))))))))) 0.) (and (<= (* skoXC1 (* skoXC1 (* skoXC1 (* skoXC1 (+ (/ (- 80.) 3.) (* skoXC1 (* skoXC1 (+ (/ 128. 3.) (* skoXC1 (* skoXC1 (+ (/ (- 55.) 3.) (* skoXC1 (* skoXC1 (/ 5. 3.)))))))))))))) 0.) (and (<= (* skoXC1 (* skoXC1 (+ 256. (* skoXC1 (* skoXC1 (+ (- 160.) (* skoXC1 (* skoXC1 (+ 32. (* skoXC1 (* skoXC1 (- 1.)))))))))))) 128.) (and (<= (* skoXC1 (* skoXC1 (/ 1. 3.))) 1.) (and (<= (* skoXC1 (+ (- 1.) (* skoXC1 (* skoXC1 (/ (- 1.) 6.))))) 0.) (and (<= (* skoXC1 (* skoXC1 (* skoXC1 (* skoXC1 (/ (- 2.) 3.))))) 0.) (and (<= (* skoXC1 skoXC1) 2.) (and (<= (* skoXC1 (* skoXC1 (+ (/ (- 1.) 2.) (* skoXC1 (* skoXC1 (/ (- 1.) 6.)))))) 0.) (and (<= (* skoXC1 (* skoXC1 (/ (- 1.) 6.))) 1.) (and (<= (* skoXC1 (+ (- 1.) (* skoXC1 (* skoXC1 (/ 1. 3.))))) 0.) (and (> (/ 7. 8.) skoXC1) (and (> skoXC1 0.) (and (> (* skoXC1 (* skoXC1 (/ (- 1.) 2.))) (- 3.)) (and (<= (* skoXC1 (* skoXC1 (/ 1. 2.))) 3.) (and (<= (* skoXC1 (* skoXC1 (+ 24. (* skoXC1 (* skoXC1 (+ (- 10.) (* skoXC1 skoXC1))))))) 16.) (and (> (* skoXC1 (* skoXC1 (+ (- 80.) (* skoXC1 (* skoXC1 (+ 40. (* skoXC1 (* skoXC1 (+ (- 6.) (* skoXC1 (* skoXC1 (/ 1. 8.)))))))))))) (- 48.)) (and (<= (* skoXC1 (* skoXC1 (+ 80. (* skoXC1 (* skoXC1 (+ (- 40.) (* skoXC1 (* skoXC1 (+ 6. (* skoXC1 (* skoXC1 (/ (- 1.) 8.)))))))))))) 48.) (and (> (* skoXC1 skoXC1) 0.) (and (<= (* skoXC1 (+ (- 1.) (* skoXC1 (* skoXC1 (+ (/ 1. 3.) (* skoXC1 (* skoXC1 (/ 3. 20.)))))))) 0.) (and (<= (* skoXC1 (* skoXC1 (+ (/ (- 1.) 6.) (* skoXC1 (* skoXC1 (/ (- 3.) 40.)))))) 1.) (and (<= (* skoXC1 (* skoXC1 (+ (/ (- 1.) 2.) (* skoXC1 (* skoXC1 (+ (/ 7. 120.) (* skoXC1 (* skoXC1 (/ (- 3.) 40.))))))))) 0.) (and (<= (* skoXC1 (* skoXC1 (* skoXC1 (* skoXC1 (+ (/ (- 13.) 60.) (* skoXC1 (* skoXC1 (/ (- 3.) 10.)))))))) 0.) (and (<= (* skoXC1 (* skoXC1 (* skoXC1 (* skoXC1 (+ (/ (- 17.) 120.) (* skoXC1 (* skoXC1 (/ 3. 80.)))))))) 0.) (and (<= (* skoXC1 (* skoXC1 (+ (/ 1. 3.) (* skoXC1 (* skoXC1 (/ 3. 20.)))))) 1.) (and (<= (* skoXC1 (* skoXC1 (* skoXC1 (* skoXC1 (+ (/ 32. 15.) (* skoXC1 (* skoXC1 (+ (/ (- 296.) 15.) (* skoXC1 (* skoXC1 (+ (/ 391. 15.) (* skoXC1 (* skoXC1 (+ (/ (- 146.) 15.) (* skoXC1 (* skoXC1 (/ 3. 4.))))))))))))))))) 0.) (and (> (* skoXC1 (* skoXC1 (+ (/ 1. 6.) (* skoXC1 (* skoXC1 (/ 3. 40.)))))) (- 1.)) (<= (* skoXC1 (+ (- 1.) (* skoXC1 (* skoXC1 (+ (/ (- 1.) 6.) (* skoXC1 (* skoXC1 (/ (- 3.) 40.)))))))) 0.)))))))))))))))))))))))))))))))))

% In GRF format:
(sequent " MetiTarski formula " (antecedent (<= (* skoXC1 (+ (- 1.) (* skoXC1 (* skoXC1 (+ (/ (- 1.) 6.) (* skoXC1 (* skoXC1 (+ (/ (- 3.) 40.) (* skoXC1 (* skoXC1 (/ (- 5.) 112.))))))))))) 0.) (> (* skoXC1 (* skoXC1 (+ (/ 1. 6.) (* skoXC1 (* skoXC1 (+ (/ 3. 40.) (* skoXC1 (* skoXC1 (/ 5. 112.))))))))) (- 1.)) (<= (* skoXC1 (* skoXC1 (* skoXC1 (* skoXC1 (+ (/ (- 13.) 60.) (* skoXC1 (* skoXC1 (+ (/ (- 9.) 280.) (* skoXC1 (* skoXC1 (/ (- 5.) 28.))))))))))) 0.) (<= (* skoXC1 (* skoXC1 (+ (/ (- 1.) 2.) (* skoXC1 (* skoXC1 (+ (/ 7. 120.) (* skoXC1 (* skoXC1 (+ (/ 33. 560.) (* skoXC1 (* skoXC1 (/ (- 5.) 112.)))))))))))) 0.) (<= (* skoXC1 (* skoXC1 (+ (/ (- 1.) 6.) (* skoXC1 (* skoXC1 (+ (/ (- 3.) 40.) (* skoXC1 (* skoXC1 (/ (- 5.) 112.))))))))) 1.) (<= (* skoXC1 (+ (- 1.) (* skoXC1 (* skoXC1 (+ (/ 1. 3.) (* skoXC1 (* skoXC1 (+ (/ 3. 20.) (* skoXC1 (* skoXC1 (/ 5. 56.))))))))))) 0.) (<= (* skoXC1 (* skoXC1 (* skoXC1 (* skoXC1 (+ (/ (- 80.) 3.) (* skoXC1 (* skoXC1 (+ (/ 128. 3.) (* skoXC1 (* skoXC1 (+ (/ (- 55.) 3.) (* skoXC1 (* skoXC1 (/ 5. 3.)))))))))))))) 0.) (<= (* skoXC1 (* skoXC1 (+ 256. (* skoXC1 (* skoXC1 (+ (- 160.) (* skoXC1 (* skoXC1 (+ 32. (* skoXC1 (* skoXC1 (- 1.)))))))))))) 128.) (<= (* skoXC1 (* skoXC1 (/ 1. 3.))) 1.) (<= (* skoXC1 (+ (- 1.) (* skoXC1 (* skoXC1 (/ (- 1.) 6.))))) 0.) (<= (* skoXC1 (* skoXC1 (* skoXC1 (* skoXC1 (/ (- 2.) 3.))))) 0.) (<= (* skoXC1 skoXC1) 2.) (<= (* skoXC1 (* skoXC1 (+ (/ (- 1.) 2.) (* skoXC1 (* skoXC1 (/ (- 1.) 6.)))))) 0.) (<= (* skoXC1 (* skoXC1 (/ (- 1.) 6.))) 1.) (<= (* skoXC1 (+ (- 1.) (* skoXC1 (* skoXC1 (/ 1. 3.))))) 0.) (> (/ 7. 8.) skoXC1) (> skoXC1 0.) (> (* skoXC1 (* skoXC1 (/ (- 1.) 2.))) (- 3.)) (<= (* skoXC1 (* skoXC1 (/ 1. 2.))) 3.) (<= (* skoXC1 (* skoXC1 (+ 24. (* skoXC1 (* skoXC1 (+ (- 10.) (* skoXC1 skoXC1))))))) 16.) (> (* skoXC1 (* skoXC1 (+ (- 80.) (* skoXC1 (* skoXC1 (+ 40. (* skoXC1 (* skoXC1 (+ (- 6.) (* skoXC1 (* skoXC1 (/ 1. 8.)))))))))))) (- 48.)) (<= (* skoXC1 (* skoXC1 (+ 80. (* skoXC1 (* skoXC1 (+ (- 40.) (* skoXC1 (* skoXC1 (+ 6. (* skoXC1 (* skoXC1 (/ (- 1.) 8.)))))))))))) 48.) (> (* skoXC1 skoXC1) 0.) (<= (* skoXC1 (+ (- 1.) (* skoXC1 (* skoXC1 (+ (/ 1. 3.) (* skoXC1 (* skoXC1 (/ 3. 20.)))))))) 0.) (<= (* skoXC1 (* skoXC1 (+ (/ (- 1.) 6.) (* skoXC1 (* skoXC1 (/ (- 3.) 40.)))))) 1.) (<= (* skoXC1 (* skoXC1 (+ (/ (- 1.) 2.) (* skoXC1 (* skoXC1 (+ (/ 7. 120.) (* skoXC1 (* skoXC1 (/ (- 3.) 40.))))))))) 0.) (<= (* skoXC1 (* skoXC1 (* skoXC1 (* skoXC1 (+ (/ (- 13.) 60.) (* skoXC1 (* skoXC1 (/ (- 3.) 10.)))))))) 0.) (<= (* skoXC1 (* skoXC1 (* skoXC1 (* skoXC1 (+ (/ (- 17.) 120.) (* skoXC1 (* skoXC1 (/ 3. 80.)))))))) 0.) (<= (* skoXC1 (* skoXC1 (+ (/ 1. 3.) (* skoXC1 (* skoXC1 (/ 3. 20.)))))) 1.) (<= (* skoXC1 (* skoXC1 (* skoXC1 (* skoXC1 (+ (/ 32. 15.) (* skoXC1 (* skoXC1 (+ (/ (- 296.) 15.) (* skoXC1 (* skoXC1 (+ (/ 391. 15.) (* skoXC1 (* skoXC1 (+ (/ (- 146.) 15.) (* skoXC1 (* skoXC1 (/ 3. 4.))))))))))))))))) 0.) (> (* skoXC1 (* skoXC1 (+ (/ 1. 6.) (* skoXC1 (* skoXC1 (/ 3. 40.)))))) (- 1.))) (succedent (> (* skoXC1 (+ (- 1.) (* skoXC1 (* skoXC1 (+ (/ (- 1.) 6.) (* skoXC1 (* skoXC1 (/ (- 3.) 40.)))))))) 0.)))
-----[end problem]-----

-----[begin problem]-----
% In Mathematica format:
Timing[Resolve[Exists[{skoXC1}, And[skoXC1*skoXC1*skoXC1*skoXC1*((-17/120)+skoXC1*skoXC1*((-27/280)+skoXC1*skoXC1*(5/224)))<=0,skoXC1*skoXC1*((1/6)+skoXC1*skoXC1*((3/40)+skoXC1*skoXC1*(5/112)))>-1,skoXC1*skoXC1*skoXC1*skoXC1*((-13/60)+skoXC1*skoXC1*((-9/280)+skoXC1*skoXC1*(-5/28)))<=0,skoXC1*skoXC1*((-1/2)+skoXC1*skoXC1*((7/120)+skoXC1*skoXC1*((33/560)+skoXC1*skoXC1*(-5/112))))<=0,skoXC1*skoXC1*((-1/6)+skoXC1*skoXC1*((-3/40)+skoXC1*skoXC1*(-5/112)))<=1,skoXC1*(-1+skoXC1*skoXC1*((1/3)+skoXC1*skoXC1*((3/20)+skoXC1*skoXC1*(5/56))))<=0,skoXC1*skoXC1*skoXC1*skoXC1*((-80/3)+skoXC1*skoXC1*((128/3)+skoXC1*skoXC1*((-55/3)+skoXC1*skoXC1*(5/3))))<=0,skoXC1*skoXC1*(256+skoXC1*skoXC1*(-160+skoXC1*skoXC1*(32+skoXC1*skoXC1*-1)))<=128,skoXC1*skoXC1*(1/3)<=1,skoXC1*(-1+skoXC1*skoXC1*(-1/6))<=0,skoXC1*skoXC1*skoXC1*skoXC1*(-2/3)<=0,skoXC1*skoXC1<=2,skoXC1*skoXC1*((-1/2)+skoXC1*skoXC1*(-1/6))<=0,skoXC1*skoXC1*(-1/6)<=1,skoXC1*(-1+skoXC1*skoXC1*(1/3))<=0,(7/8)>skoXC1,skoXC1>0,skoXC1*skoXC1*(-1/2)>-3,skoXC1*skoXC1*(1/2)<=3,skoXC1*skoXC1*(24+skoXC1*skoXC1*(-10+skoXC1*skoXC1))<=16,skoXC1*skoXC1*(-80+skoXC1*skoXC1*(40+skoXC1*skoXC1*(-6+skoXC1*skoXC1*(1/8))))>-48,skoXC1*skoXC1*(80+skoXC1*skoXC1*(-40+skoXC1*skoXC1*(6+skoXC1*skoXC1*(-1/8))))<=48,skoXC1*skoXC1>0,skoXC1*(-1+skoXC1*skoXC1*((1/3)+skoXC1*skoXC1*(3/20)))<=0,skoXC1*skoXC1*((-1/6)+skoXC1*skoXC1*(-3/40))<=1,skoXC1*skoXC1*((-1/2)+skoXC1*skoXC1*((7/120)+skoXC1*skoXC1*(-3/40)))<=0,skoXC1*skoXC1*skoXC1*skoXC1*((-13/60)+skoXC1*skoXC1*(-3/10))<=0,skoXC1*skoXC1*skoXC1*skoXC1*((-17/120)+skoXC1*skoXC1*(3/80))<=0,skoXC1*skoXC1*((1/3)+skoXC1*skoXC1*(3/20))<=1,skoXC1*skoXC1*skoXC1*skoXC1*((32/15)+skoXC1*skoXC1*((-296/15)+skoXC1*skoXC1*((391/15)+skoXC1*skoXC1*((-146/15)+skoXC1*skoXC1*(3/4)))))<=0,skoXC1*skoXC1*((1/6)+skoXC1*skoXC1*(3/40))>-1,skoXC1*(-1+skoXC1*skoXC1*((-1/6)+skoXC1*skoXC1*(-3/40)))<=0]], Reals]]

% In QepcadB format:
(E skoXC1) [[(skoXC1 skoXC1 skoXC1 skoXC1 (-17/120+(skoXC1 skoXC1 (-27/280+(skoXC1 skoXC1 (5/224))))))<=0]/\[[-1<(skoXC1 skoXC1 (1/6+(skoXC1 skoXC1 (3/40+(skoXC1 skoXC1 (5/112))))))]/\[[(skoXC1 skoXC1 skoXC1 skoXC1 (-13/60+(skoXC1 skoXC1 (-9/280+(skoXC1 skoXC1 (-5/28))))))<=0]/\[[(skoXC1 skoXC1 (-1/2+(skoXC1 skoXC1 (7/120+(skoXC1 skoXC1 (33/560+(skoXC1 skoXC1 (-5/112))))))))<=0]/\[[(skoXC1 skoXC1 (-1/6+(skoXC1 skoXC1 (-3/40+(skoXC1 skoXC1 (-5/112))))))<=1]/\[[(skoXC1 (-1+(skoXC1 skoXC1 (1/3+(skoXC1 skoXC1 (3/20+(skoXC1 skoXC1 (5/56))))))))<=0]/\[[(skoXC1 skoXC1 skoXC1 skoXC1 (-80/3+(skoXC1 skoXC1 (128/3+(skoXC1 skoXC1 (-55/3+(skoXC1 skoXC1 (5/3))))))))<=0]/\[[(skoXC1 skoXC1 (256+(skoXC1 skoXC1 (-160+(skoXC1 skoXC1 (32+(skoXC1 skoXC1 (-1))))))))<=128]/\[[(skoXC1 skoXC1 (1/3))<=1]/\[[(skoXC1 (-1+(skoXC1 skoXC1 (-1/6))))<=0]/\[[(skoXC1 skoXC1 skoXC1 skoXC1 (-2/3))<=0]/\[[(skoXC1 skoXC1)<=2]/\[[(skoXC1 skoXC1 (-1/2+(skoXC1 skoXC1 (-1/6))))<=0]/\[[(skoXC1 skoXC1 (-1/6))<=1]/\[[(skoXC1 (-1+(skoXC1 skoXC1 (1/3))))<=0]/\[[skoXC1<7/8]/\[[0<skoXC1]/\[[-3<(skoXC1 skoXC1 (-1/2))]/\[[(skoXC1 skoXC1 (1/2))<=3]/\[[(skoXC1 skoXC1 (24+(skoXC1 skoXC1 (-10+(skoXC1 skoXC1)))))<=16]/\[[-48<(skoXC1 skoXC1 (-80+(skoXC1 skoXC1 (40+(skoXC1 skoXC1 (-6+(skoXC1 skoXC1 (1/8))))))))]/\[[(skoXC1 skoXC1 (80+(skoXC1 skoXC1 (-40+(skoXC1 skoXC1 (6+(skoXC1 skoXC1 (-1/8))))))))<=48]/\[[0<(skoXC1 skoXC1)]/\[[(skoXC1 (-1+(skoXC1 skoXC1 (1/3+(skoXC1 skoXC1 (3/20))))))<=0]/\[[(skoXC1 skoXC1 (-1/6+(skoXC1 skoXC1 (-3/40))))<=1]/\[[(skoXC1 skoXC1 (-1/2+(skoXC1 skoXC1 (7/120+(skoXC1 skoXC1 (-3/40))))))<=0]/\[[(skoXC1 skoXC1 skoXC1 skoXC1 (-13/60+(skoXC1 skoXC1 (-3/10))))<=0]/\[[(skoXC1 skoXC1 skoXC1 skoXC1 (-17/120+(skoXC1 skoXC1 (3/80))))<=0]/\[[(skoXC1 skoXC1 (1/3+(skoXC1 skoXC1 (3/20))))<=1]/\[[(skoXC1 skoXC1 skoXC1 skoXC1 (32/15+(skoXC1 skoXC1 (-296/15+(skoXC1 skoXC1 (391/15+(skoXC1 skoXC1 (-146/15+(skoXC1 skoXC1 (3/4))))))))))<=0]/\[[-1<(skoXC1 skoXC1 (1/6+(skoXC1 skoXC1 (3/40))))]/\[(skoXC1 (-1+(skoXC1 skoXC1 (-1/6+(skoXC1 skoXC1 (-3/40))))))<=0]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]].

% In SMTLib2 format:
(declare-fun skoXC1 () Real) (assert (and (<= (* skoXC1 (* skoXC1 (* skoXC1 (* skoXC1 (+ (/ (- 17.) 120.) (* skoXC1 (* skoXC1 (+ (/ (- 27.) 280.) (* skoXC1 (* skoXC1 (/ 5. 224.))))))))))) 0.) (and (> (* skoXC1 (* skoXC1 (+ (/ 1. 6.) (* skoXC1 (* skoXC1 (+ (/ 3. 40.) (* skoXC1 (* skoXC1 (/ 5. 112.))))))))) (- 1.)) (and (<= (* skoXC1 (* skoXC1 (* skoXC1 (* skoXC1 (+ (/ (- 13.) 60.) (* skoXC1 (* skoXC1 (+ (/ (- 9.) 280.) (* skoXC1 (* skoXC1 (/ (- 5.) 28.))))))))))) 0.) (and (<= (* skoXC1 (* skoXC1 (+ (/ (- 1.) 2.) (* skoXC1 (* skoXC1 (+ (/ 7. 120.) (* skoXC1 (* skoXC1 (+ (/ 33. 560.) (* skoXC1 (* skoXC1 (/ (- 5.) 112.)))))))))))) 0.) (and (<= (* skoXC1 (* skoXC1 (+ (/ (- 1.) 6.) (* skoXC1 (* skoXC1 (+ (/ (- 3.) 40.) (* skoXC1 (* skoXC1 (/ (- 5.) 112.))))))))) 1.) (and (<= (* skoXC1 (+ (- 1.) (* skoXC1 (* skoXC1 (+ (/ 1. 3.) (* skoXC1 (* skoXC1 (+ (/ 3. 20.) (* skoXC1 (* skoXC1 (/ 5. 56.))))))))))) 0.) (and (<= (* skoXC1 (* skoXC1 (* skoXC1 (* skoXC1 (+ (/ (- 80.) 3.) (* skoXC1 (* skoXC1 (+ (/ 128. 3.) (* skoXC1 (* skoXC1 (+ (/ (- 55.) 3.) (* skoXC1 (* skoXC1 (/ 5. 3.)))))))))))))) 0.) (and (<= (* skoXC1 (* skoXC1 (+ 256. (* skoXC1 (* skoXC1 (+ (- 160.) (* skoXC1 (* skoXC1 (+ 32. (* skoXC1 (* skoXC1 (- 1.)))))))))))) 128.) (and (<= (* skoXC1 (* skoXC1 (/ 1. 3.))) 1.) (and (<= (* skoXC1 (+ (- 1.) (* skoXC1 (* skoXC1 (/ (- 1.) 6.))))) 0.) (and (<= (* skoXC1 (* skoXC1 (* skoXC1 (* skoXC1 (/ (- 2.) 3.))))) 0.) (and (<= (* skoXC1 skoXC1) 2.) (and (<= (* skoXC1 (* skoXC1 (+ (/ (- 1.) 2.) (* skoXC1 (* skoXC1 (/ (- 1.) 6.)))))) 0.) (and (<= (* skoXC1 (* skoXC1 (/ (- 1.) 6.))) 1.) (and (<= (* skoXC1 (+ (- 1.) (* skoXC1 (* skoXC1 (/ 1. 3.))))) 0.) (and (> (/ 7. 8.) skoXC1) (and (> skoXC1 0.) (and (> (* skoXC1 (* skoXC1 (/ (- 1.) 2.))) (- 3.)) (and (<= (* skoXC1 (* skoXC1 (/ 1. 2.))) 3.) (and (<= (* skoXC1 (* skoXC1 (+ 24. (* skoXC1 (* skoXC1 (+ (- 10.) (* skoXC1 skoXC1))))))) 16.) (and (> (* skoXC1 (* skoXC1 (+ (- 80.) (* skoXC1 (* skoXC1 (+ 40. (* skoXC1 (* skoXC1 (+ (- 6.) (* skoXC1 (* skoXC1 (/ 1. 8.)))))))))))) (- 48.)) (and (<= (* skoXC1 (* skoXC1 (+ 80. (* skoXC1 (* skoXC1 (+ (- 40.) (* skoXC1 (* skoXC1 (+ 6. (* skoXC1 (* skoXC1 (/ (- 1.) 8.)))))))))))) 48.) (and (> (* skoXC1 skoXC1) 0.) (and (<= (* skoXC1 (+ (- 1.) (* skoXC1 (* skoXC1 (+ (/ 1. 3.) (* skoXC1 (* skoXC1 (/ 3. 20.)))))))) 0.) (and (<= (* skoXC1 (* skoXC1 (+ (/ (- 1.) 6.) (* skoXC1 (* skoXC1 (/ (- 3.) 40.)))))) 1.) (and (<= (* skoXC1 (* skoXC1 (+ (/ (- 1.) 2.) (* skoXC1 (* skoXC1 (+ (/ 7. 120.) (* skoXC1 (* skoXC1 (/ (- 3.) 40.))))))))) 0.) (and (<= (* skoXC1 (* skoXC1 (* skoXC1 (* skoXC1 (+ (/ (- 13.) 60.) (* skoXC1 (* skoXC1 (/ (- 3.) 10.)))))))) 0.) (and (<= (* skoXC1 (* skoXC1 (* skoXC1 (* skoXC1 (+ (/ (- 17.) 120.) (* skoXC1 (* skoXC1 (/ 3. 80.)))))))) 0.) (and (<= (* skoXC1 (* skoXC1 (+ (/ 1. 3.) (* skoXC1 (* skoXC1 (/ 3. 20.)))))) 1.) (and (<= (* skoXC1 (* skoXC1 (* skoXC1 (* skoXC1 (+ (/ 32. 15.) (* skoXC1 (* skoXC1 (+ (/ (- 296.) 15.) (* skoXC1 (* skoXC1 (+ (/ 391. 15.) (* skoXC1 (* skoXC1 (+ (/ (- 146.) 15.) (* skoXC1 (* skoXC1 (/ 3. 4.))))))))))))))))) 0.) (and (> (* skoXC1 (* skoXC1 (+ (/ 1. 6.) (* skoXC1 (* skoXC1 (/ 3. 40.)))))) (- 1.)) (<= (* skoXC1 (+ (- 1.) (* skoXC1 (* skoXC1 (+ (/ (- 1.) 6.) (* skoXC1 (* skoXC1 (/ (- 3.) 40.)))))))) 0.)))))))))))))))))))))))))))))))))

% In GRF format:
(sequent " MetiTarski formula " (antecedent (<= (* skoXC1 (* skoXC1 (* skoXC1 (* skoXC1 (+ (/ (- 17.) 120.) (* skoXC1 (* skoXC1 (+ (/ (- 27.) 280.) (* skoXC1 (* skoXC1 (/ 5. 224.))))))))))) 0.) (> (* skoXC1 (* skoXC1 (+ (/ 1. 6.) (* skoXC1 (* skoXC1 (+ (/ 3. 40.) (* skoXC1 (* skoXC1 (/ 5. 112.))))))))) (- 1.)) (<= (* skoXC1 (* skoXC1 (* skoXC1 (* skoXC1 (+ (/ (- 13.) 60.) (* skoXC1 (* skoXC1 (+ (/ (- 9.) 280.) (* skoXC1 (* skoXC1 (/ (- 5.) 28.))))))))))) 0.) (<= (* skoXC1 (* skoXC1 (+ (/ (- 1.) 2.) (* skoXC1 (* skoXC1 (+ (/ 7. 120.) (* skoXC1 (* skoXC1 (+ (/ 33. 560.) (* skoXC1 (* skoXC1 (/ (- 5.) 112.)))))))))))) 0.) (<= (* skoXC1 (* skoXC1 (+ (/ (- 1.) 6.) (* skoXC1 (* skoXC1 (+ (/ (- 3.) 40.) (* skoXC1 (* skoXC1 (/ (- 5.) 112.))))))))) 1.) (<= (* skoXC1 (+ (- 1.) (* skoXC1 (* skoXC1 (+ (/ 1. 3.) (* skoXC1 (* skoXC1 (+ (/ 3. 20.) (* skoXC1 (* skoXC1 (/ 5. 56.))))))))))) 0.) (<= (* skoXC1 (* skoXC1 (* skoXC1 (* skoXC1 (+ (/ (- 80.) 3.) (* skoXC1 (* skoXC1 (+ (/ 128. 3.) (* skoXC1 (* skoXC1 (+ (/ (- 55.) 3.) (* skoXC1 (* skoXC1 (/ 5. 3.)))))))))))))) 0.) (<= (* skoXC1 (* skoXC1 (+ 256. (* skoXC1 (* skoXC1 (+ (- 160.) (* skoXC1 (* skoXC1 (+ 32. (* skoXC1 (* skoXC1 (- 1.)))))))))))) 128.) (<= (* skoXC1 (* skoXC1 (/ 1. 3.))) 1.) (<= (* skoXC1 (+ (- 1.) (* skoXC1 (* skoXC1 (/ (- 1.) 6.))))) 0.) (<= (* skoXC1 (* skoXC1 (* skoXC1 (* skoXC1 (/ (- 2.) 3.))))) 0.) (<= (* skoXC1 skoXC1) 2.) (<= (* skoXC1 (* skoXC1 (+ (/ (- 1.) 2.) (* skoXC1 (* skoXC1 (/ (- 1.) 6.)))))) 0.) (<= (* skoXC1 (* skoXC1 (/ (- 1.) 6.))) 1.) (<= (* skoXC1 (+ (- 1.) (* skoXC1 (* skoXC1 (/ 1. 3.))))) 0.) (> (/ 7. 8.) skoXC1) (> skoXC1 0.) (> (* skoXC1 (* skoXC1 (/ (- 1.) 2.))) (- 3.)) (<= (* skoXC1 (* skoXC1 (/ 1. 2.))) 3.) (<= (* skoXC1 (* skoXC1 (+ 24. (* skoXC1 (* skoXC1 (+ (- 10.) (* skoXC1 skoXC1))))))) 16.) (> (* skoXC1 (* skoXC1 (+ (- 80.) (* skoXC1 (* skoXC1 (+ 40. (* skoXC1 (* skoXC1 (+ (- 6.) (* skoXC1 (* skoXC1 (/ 1. 8.)))))))))))) (- 48.)) (<= (* skoXC1 (* skoXC1 (+ 80. (* skoXC1 (* skoXC1 (+ (- 40.) (* skoXC1 (* skoXC1 (+ 6. (* skoXC1 (* skoXC1 (/ (- 1.) 8.)))))))))))) 48.) (> (* skoXC1 skoXC1) 0.) (<= (* skoXC1 (+ (- 1.) (* skoXC1 (* skoXC1 (+ (/ 1. 3.) (* skoXC1 (* skoXC1 (/ 3. 20.)))))))) 0.) (<= (* skoXC1 (* skoXC1 (+ (/ (- 1.) 6.) (* skoXC1 (* skoXC1 (/ (- 3.) 40.)))))) 1.) (<= (* skoXC1 (* skoXC1 (+ (/ (- 1.) 2.) (* skoXC1 (* skoXC1 (+ (/ 7. 120.) (* skoXC1 (* skoXC1 (/ (- 3.) 40.))))))))) 0.) (<= (* skoXC1 (* skoXC1 (* skoXC1 (* skoXC1 (+ (/ (- 13.) 60.) (* skoXC1 (* skoXC1 (/ (- 3.) 10.)))))))) 0.) (<= (* skoXC1 (* skoXC1 (* skoXC1 (* skoXC1 (+ (/ (- 17.) 120.) (* skoXC1 (* skoXC1 (/ 3. 80.)))))))) 0.) (<= (* skoXC1 (* skoXC1 (+ (/ 1. 3.) (* skoXC1 (* skoXC1 (/ 3. 20.)))))) 1.) (<= (* skoXC1 (* skoXC1 (* skoXC1 (* skoXC1 (+ (/ 32. 15.) (* skoXC1 (* skoXC1 (+ (/ (- 296.) 15.) (* skoXC1 (* skoXC1 (+ (/ 391. 15.) (* skoXC1 (* skoXC1 (+ (/ (- 146.) 15.) (* skoXC1 (* skoXC1 (/ 3. 4.))))))))))))))))) 0.) (> (* skoXC1 (* skoXC1 (+ (/ 1. 6.) (* skoXC1 (* skoXC1 (/ 3. 40.)))))) (- 1.))) (succedent (> (* skoXC1 (+ (- 1.) (* skoXC1 (* skoXC1 (+ (/ (- 1.) 6.) (* skoXC1 (* skoXC1 (/ (- 3.) 40.)))))))) 0.)))
-----[end problem]-----

-----[begin problem]-----
% In Mathematica format:
Timing[Resolve[Exists[{skoXC1}, And[skoXC1*skoXC1*skoXC1*skoXC1*((-17/120)+skoXC1*skoXC1*((-27/280)+skoXC1*skoXC1*(5/224)))<=0,skoXC1*skoXC1*skoXC1*skoXC1*((-13/60)+skoXC1*skoXC1*((-9/280)+skoXC1*skoXC1*(-5/28)))<=0,skoXC1*skoXC1*((-1/2)+skoXC1*skoXC1*((7/120)+skoXC1*skoXC1*((33/560)+skoXC1*skoXC1*(-5/112))))<=0,skoXC1*skoXC1*((-1/6)+skoXC1*skoXC1*((-3/40)+skoXC1*skoXC1*(-5/112)))<=1,skoXC1*(-1+skoXC1*skoXC1*((1/3)+skoXC1*skoXC1*((3/20)+skoXC1*skoXC1*(5/56))))<=0,skoXC1*skoXC1*skoXC1*skoXC1*((-80/3)+skoXC1*skoXC1*((128/3)+skoXC1*skoXC1*((-55/3)+skoXC1*skoXC1*(5/3))))<=0,skoXC1*skoXC1*(256+skoXC1*skoXC1*(-160+skoXC1*skoXC1*(32+skoXC1*skoXC1*-1)))<=128,skoXC1*skoXC1*(1/3)<=1,skoXC1*(-1+skoXC1*skoXC1*(-1/6))<=0,skoXC1*skoXC1*skoXC1*skoXC1*(-2/3)<=0,skoXC1*skoXC1<=2,skoXC1*skoXC1*((-1/2)+skoXC1*skoXC1*(-1/6))<=0,skoXC1*skoXC1*(-1/6)<=1,skoXC1*(-1+skoXC1*skoXC1*(1/3))<=0,(7/8)>skoXC1,skoXC1>0,skoXC1*skoXC1*(-1/2)>-3,skoXC1*skoXC1*(1/2)<=3,skoXC1*skoXC1*(24+skoXC1*skoXC1*(-10+skoXC1*skoXC1))<=16,skoXC1*skoXC1*(-80+skoXC1*skoXC1*(40+skoXC1*skoXC1*(-6+skoXC1*skoXC1*(1/8))))>-48,skoXC1*skoXC1*(80+skoXC1*skoXC1*(-40+skoXC1*skoXC1*(6+skoXC1*skoXC1*(-1/8))))<=48,skoXC1*skoXC1>0,skoXC1*(-1+skoXC1*skoXC1*((1/3)+skoXC1*skoXC1*(3/20)))<=0,skoXC1*skoXC1*((-1/6)+skoXC1*skoXC1*(-3/40))<=1,skoXC1*skoXC1*((-1/2)+skoXC1*skoXC1*((7/120)+skoXC1*skoXC1*(-3/40)))<=0,skoXC1*skoXC1*skoXC1*skoXC1*((-13/60)+skoXC1*skoXC1*(-3/10))<=0,skoXC1*skoXC1*skoXC1*skoXC1*((-17/120)+skoXC1*skoXC1*(3/80))<=0,skoXC1*skoXC1*((1/3)+skoXC1*skoXC1*(3/20))<=1,skoXC1*skoXC1*skoXC1*skoXC1*((32/15)+skoXC1*skoXC1*((-296/15)+skoXC1*skoXC1*((391/15)+skoXC1*skoXC1*((-146/15)+skoXC1*skoXC1*(3/4)))))<=0,skoXC1*skoXC1*((1/6)+skoXC1*skoXC1*(3/40))>-1,skoXC1*(-1+skoXC1*skoXC1*((-1/6)+skoXC1*skoXC1*(-3/40)))<=0]], Reals]]

% In QepcadB format:
(E skoXC1) [[(skoXC1 skoXC1 skoXC1 skoXC1 (-17/120+(skoXC1 skoXC1 (-27/280+(skoXC1 skoXC1 (5/224))))))<=0]/\[[(skoXC1 skoXC1 skoXC1 skoXC1 (-13/60+(skoXC1 skoXC1 (-9/280+(skoXC1 skoXC1 (-5/28))))))<=0]/\[[(skoXC1 skoXC1 (-1/2+(skoXC1 skoXC1 (7/120+(skoXC1 skoXC1 (33/560+(skoXC1 skoXC1 (-5/112))))))))<=0]/\[[(skoXC1 skoXC1 (-1/6+(skoXC1 skoXC1 (-3/40+(skoXC1 skoXC1 (-5/112))))))<=1]/\[[(skoXC1 (-1+(skoXC1 skoXC1 (1/3+(skoXC1 skoXC1 (3/20+(skoXC1 skoXC1 (5/56))))))))<=0]/\[[(skoXC1 skoXC1 skoXC1 skoXC1 (-80/3+(skoXC1 skoXC1 (128/3+(skoXC1 skoXC1 (-55/3+(skoXC1 skoXC1 (5/3))))))))<=0]/\[[(skoXC1 skoXC1 (256+(skoXC1 skoXC1 (-160+(skoXC1 skoXC1 (32+(skoXC1 skoXC1 (-1))))))))<=128]/\[[(skoXC1 skoXC1 (1/3))<=1]/\[[(skoXC1 (-1+(skoXC1 skoXC1 (-1/6))))<=0]/\[[(skoXC1 skoXC1 skoXC1 skoXC1 (-2/3))<=0]/\[[(skoXC1 skoXC1)<=2]/\[[(skoXC1 skoXC1 (-1/2+(skoXC1 skoXC1 (-1/6))))<=0]/\[[(skoXC1 skoXC1 (-1/6))<=1]/\[[(skoXC1 (-1+(skoXC1 skoXC1 (1/3))))<=0]/\[[skoXC1<7/8]/\[[0<skoXC1]/\[[-3<(skoXC1 skoXC1 (-1/2))]/\[[(skoXC1 skoXC1 (1/2))<=3]/\[[(skoXC1 skoXC1 (24+(skoXC1 skoXC1 (-10+(skoXC1 skoXC1)))))<=16]/\[[-48<(skoXC1 skoXC1 (-80+(skoXC1 skoXC1 (40+(skoXC1 skoXC1 (-6+(skoXC1 skoXC1 (1/8))))))))]/\[[(skoXC1 skoXC1 (80+(skoXC1 skoXC1 (-40+(skoXC1 skoXC1 (6+(skoXC1 skoXC1 (-1/8))))))))<=48]/\[[0<(skoXC1 skoXC1)]/\[[(skoXC1 (-1+(skoXC1 skoXC1 (1/3+(skoXC1 skoXC1 (3/20))))))<=0]/\[[(skoXC1 skoXC1 (-1/6+(skoXC1 skoXC1 (-3/40))))<=1]/\[[(skoXC1 skoXC1 (-1/2+(skoXC1 skoXC1 (7/120+(skoXC1 skoXC1 (-3/40))))))<=0]/\[[(skoXC1 skoXC1 skoXC1 skoXC1 (-13/60+(skoXC1 skoXC1 (-3/10))))<=0]/\[[(skoXC1 skoXC1 skoXC1 skoXC1 (-17/120+(skoXC1 skoXC1 (3/80))))<=0]/\[[(skoXC1 skoXC1 (1/3+(skoXC1 skoXC1 (3/20))))<=1]/\[[(skoXC1 skoXC1 skoXC1 skoXC1 (32/15+(skoXC1 skoXC1 (-296/15+(skoXC1 skoXC1 (391/15+(skoXC1 skoXC1 (-146/15+(skoXC1 skoXC1 (3/4))))))))))<=0]/\[[-1<(skoXC1 skoXC1 (1/6+(skoXC1 skoXC1 (3/40))))]/\[(skoXC1 (-1+(skoXC1 skoXC1 (-1/6+(skoXC1 skoXC1 (-3/40))))))<=0]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]].

% In SMTLib2 format:
(declare-fun skoXC1 () Real) (assert (and (<= (* skoXC1 (* skoXC1 (* skoXC1 (* skoXC1 (+ (/ (- 17.) 120.) (* skoXC1 (* skoXC1 (+ (/ (- 27.) 280.) (* skoXC1 (* skoXC1 (/ 5. 224.))))))))))) 0.) (and (<= (* skoXC1 (* skoXC1 (* skoXC1 (* skoXC1 (+ (/ (- 13.) 60.) (* skoXC1 (* skoXC1 (+ (/ (- 9.) 280.) (* skoXC1 (* skoXC1 (/ (- 5.) 28.))))))))))) 0.) (and (<= (* skoXC1 (* skoXC1 (+ (/ (- 1.) 2.) (* skoXC1 (* skoXC1 (+ (/ 7. 120.) (* skoXC1 (* skoXC1 (+ (/ 33. 560.) (* skoXC1 (* skoXC1 (/ (- 5.) 112.)))))))))))) 0.) (and (<= (* skoXC1 (* skoXC1 (+ (/ (- 1.) 6.) (* skoXC1 (* skoXC1 (+ (/ (- 3.) 40.) (* skoXC1 (* skoXC1 (/ (- 5.) 112.))))))))) 1.) (and (<= (* skoXC1 (+ (- 1.) (* skoXC1 (* skoXC1 (+ (/ 1. 3.) (* skoXC1 (* skoXC1 (+ (/ 3. 20.) (* skoXC1 (* skoXC1 (/ 5. 56.))))))))))) 0.) (and (<= (* skoXC1 (* skoXC1 (* skoXC1 (* skoXC1 (+ (/ (- 80.) 3.) (* skoXC1 (* skoXC1 (+ (/ 128. 3.) (* skoXC1 (* skoXC1 (+ (/ (- 55.) 3.) (* skoXC1 (* skoXC1 (/ 5. 3.)))))))))))))) 0.) (and (<= (* skoXC1 (* skoXC1 (+ 256. (* skoXC1 (* skoXC1 (+ (- 160.) (* skoXC1 (* skoXC1 (+ 32. (* skoXC1 (* skoXC1 (- 1.)))))))))))) 128.) (and (<= (* skoXC1 (* skoXC1 (/ 1. 3.))) 1.) (and (<= (* skoXC1 (+ (- 1.) (* skoXC1 (* skoXC1 (/ (- 1.) 6.))))) 0.) (and (<= (* skoXC1 (* skoXC1 (* skoXC1 (* skoXC1 (/ (- 2.) 3.))))) 0.) (and (<= (* skoXC1 skoXC1) 2.) (and (<= (* skoXC1 (* skoXC1 (+ (/ (- 1.) 2.) (* skoXC1 (* skoXC1 (/ (- 1.) 6.)))))) 0.) (and (<= (* skoXC1 (* skoXC1 (/ (- 1.) 6.))) 1.) (and (<= (* skoXC1 (+ (- 1.) (* skoXC1 (* skoXC1 (/ 1. 3.))))) 0.) (and (> (/ 7. 8.) skoXC1) (and (> skoXC1 0.) (and (> (* skoXC1 (* skoXC1 (/ (- 1.) 2.))) (- 3.)) (and (<= (* skoXC1 (* skoXC1 (/ 1. 2.))) 3.) (and (<= (* skoXC1 (* skoXC1 (+ 24. (* skoXC1 (* skoXC1 (+ (- 10.) (* skoXC1 skoXC1))))))) 16.) (and (> (* skoXC1 (* skoXC1 (+ (- 80.) (* skoXC1 (* skoXC1 (+ 40. (* skoXC1 (* skoXC1 (+ (- 6.) (* skoXC1 (* skoXC1 (/ 1. 8.)))))))))))) (- 48.)) (and (<= (* skoXC1 (* skoXC1 (+ 80. (* skoXC1 (* skoXC1 (+ (- 40.) (* skoXC1 (* skoXC1 (+ 6. (* skoXC1 (* skoXC1 (/ (- 1.) 8.)))))))))))) 48.) (and (> (* skoXC1 skoXC1) 0.) (and (<= (* skoXC1 (+ (- 1.) (* skoXC1 (* skoXC1 (+ (/ 1. 3.) (* skoXC1 (* skoXC1 (/ 3. 20.)))))))) 0.) (and (<= (* skoXC1 (* skoXC1 (+ (/ (- 1.) 6.) (* skoXC1 (* skoXC1 (/ (- 3.) 40.)))))) 1.) (and (<= (* skoXC1 (* skoXC1 (+ (/ (- 1.) 2.) (* skoXC1 (* skoXC1 (+ (/ 7. 120.) (* skoXC1 (* skoXC1 (/ (- 3.) 40.))))))))) 0.) (and (<= (* skoXC1 (* skoXC1 (* skoXC1 (* skoXC1 (+ (/ (- 13.) 60.) (* skoXC1 (* skoXC1 (/ (- 3.) 10.)))))))) 0.) (and (<= (* skoXC1 (* skoXC1 (* skoXC1 (* skoXC1 (+ (/ (- 17.) 120.) (* skoXC1 (* skoXC1 (/ 3. 80.)))))))) 0.) (and (<= (* skoXC1 (* skoXC1 (+ (/ 1. 3.) (* skoXC1 (* skoXC1 (/ 3. 20.)))))) 1.) (and (<= (* skoXC1 (* skoXC1 (* skoXC1 (* skoXC1 (+ (/ 32. 15.) (* skoXC1 (* skoXC1 (+ (/ (- 296.) 15.) (* skoXC1 (* skoXC1 (+ (/ 391. 15.) (* skoXC1 (* skoXC1 (+ (/ (- 146.) 15.) (* skoXC1 (* skoXC1 (/ 3. 4.))))))))))))))))) 0.) (and (> (* skoXC1 (* skoXC1 (+ (/ 1. 6.) (* skoXC1 (* skoXC1 (/ 3. 40.)))))) (- 1.)) (<= (* skoXC1 (+ (- 1.) (* skoXC1 (* skoXC1 (+ (/ (- 1.) 6.) (* skoXC1 (* skoXC1 (/ (- 3.) 40.)))))))) 0.))))))))))))))))))))))))))))))))

% In GRF format:
(sequent " MetiTarski formula " (antecedent (<= (* skoXC1 (* skoXC1 (* skoXC1 (* skoXC1 (+ (/ (- 17.) 120.) (* skoXC1 (* skoXC1 (+ (/ (- 27.) 280.) (* skoXC1 (* skoXC1 (/ 5. 224.))))))))))) 0.) (<= (* skoXC1 (* skoXC1 (* skoXC1 (* skoXC1 (+ (/ (- 13.) 60.) (* skoXC1 (* skoXC1 (+ (/ (- 9.) 280.) (* skoXC1 (* skoXC1 (/ (- 5.) 28.))))))))))) 0.) (<= (* skoXC1 (* skoXC1 (+ (/ (- 1.) 2.) (* skoXC1 (* skoXC1 (+ (/ 7. 120.) (* skoXC1 (* skoXC1 (+ (/ 33. 560.) (* skoXC1 (* skoXC1 (/ (- 5.) 112.)))))))))))) 0.) (<= (* skoXC1 (* skoXC1 (+ (/ (- 1.) 6.) (* skoXC1 (* skoXC1 (+ (/ (- 3.) 40.) (* skoXC1 (* skoXC1 (/ (- 5.) 112.))))))))) 1.) (<= (* skoXC1 (+ (- 1.) (* skoXC1 (* skoXC1 (+ (/ 1. 3.) (* skoXC1 (* skoXC1 (+ (/ 3. 20.) (* skoXC1 (* skoXC1 (/ 5. 56.))))))))))) 0.) (<= (* skoXC1 (* skoXC1 (* skoXC1 (* skoXC1 (+ (/ (- 80.) 3.) (* skoXC1 (* skoXC1 (+ (/ 128. 3.) (* skoXC1 (* skoXC1 (+ (/ (- 55.) 3.) (* skoXC1 (* skoXC1 (/ 5. 3.)))))))))))))) 0.) (<= (* skoXC1 (* skoXC1 (+ 256. (* skoXC1 (* skoXC1 (+ (- 160.) (* skoXC1 (* skoXC1 (+ 32. (* skoXC1 (* skoXC1 (- 1.)))))))))))) 128.) (<= (* skoXC1 (* skoXC1 (/ 1. 3.))) 1.) (<= (* skoXC1 (+ (- 1.) (* skoXC1 (* skoXC1 (/ (- 1.) 6.))))) 0.) (<= (* skoXC1 (* skoXC1 (* skoXC1 (* skoXC1 (/ (- 2.) 3.))))) 0.) (<= (* skoXC1 skoXC1) 2.) (<= (* skoXC1 (* skoXC1 (+ (/ (- 1.) 2.) (* skoXC1 (* skoXC1 (/ (- 1.) 6.)))))) 0.) (<= (* skoXC1 (* skoXC1 (/ (- 1.) 6.))) 1.) (<= (* skoXC1 (+ (- 1.) (* skoXC1 (* skoXC1 (/ 1. 3.))))) 0.) (> (/ 7. 8.) skoXC1) (> skoXC1 0.) (> (* skoXC1 (* skoXC1 (/ (- 1.) 2.))) (- 3.)) (<= (* skoXC1 (* skoXC1 (/ 1. 2.))) 3.) (<= (* skoXC1 (* skoXC1 (+ 24. (* skoXC1 (* skoXC1 (+ (- 10.) (* skoXC1 skoXC1))))))) 16.) (> (* skoXC1 (* skoXC1 (+ (- 80.) (* skoXC1 (* skoXC1 (+ 40. (* skoXC1 (* skoXC1 (+ (- 6.) (* skoXC1 (* skoXC1 (/ 1. 8.)))))))))))) (- 48.)) (<= (* skoXC1 (* skoXC1 (+ 80. (* skoXC1 (* skoXC1 (+ (- 40.) (* skoXC1 (* skoXC1 (+ 6. (* skoXC1 (* skoXC1 (/ (- 1.) 8.)))))))))))) 48.) (> (* skoXC1 skoXC1) 0.) (<= (* skoXC1 (+ (- 1.) (* skoXC1 (* skoXC1 (+ (/ 1. 3.) (* skoXC1 (* skoXC1 (/ 3. 20.)))))))) 0.) (<= (* skoXC1 (* skoXC1 (+ (/ (- 1.) 6.) (* skoXC1 (* skoXC1 (/ (- 3.) 40.)))))) 1.) (<= (* skoXC1 (* skoXC1 (+ (/ (- 1.) 2.) (* skoXC1 (* skoXC1 (+ (/ 7. 120.) (* skoXC1 (* skoXC1 (/ (- 3.) 40.))))))))) 0.) (<= (* skoXC1 (* skoXC1 (* skoXC1 (* skoXC1 (+ (/ (- 13.) 60.) (* skoXC1 (* skoXC1 (/ (- 3.) 10.)))))))) 0.) (<= (* skoXC1 (* skoXC1 (* skoXC1 (* skoXC1 (+ (/ (- 17.) 120.) (* skoXC1 (* skoXC1 (/ 3. 80.)))))))) 0.) (<= (* skoXC1 (* skoXC1 (+ (/ 1. 3.) (* skoXC1 (* skoXC1 (/ 3. 20.)))))) 1.) (<= (* skoXC1 (* skoXC1 (* skoXC1 (* skoXC1 (+ (/ 32. 15.) (* skoXC1 (* skoXC1 (+ (/ (- 296.) 15.) (* skoXC1 (* skoXC1 (+ (/ 391. 15.) (* skoXC1 (* skoXC1 (+ (/ (- 146.) 15.) (* skoXC1 (* skoXC1 (/ 3. 4.))))))))))))))))) 0.) (> (* skoXC1 (* skoXC1 (+ (/ 1. 6.) (* skoXC1 (* skoXC1 (/ 3. 40.)))))) (- 1.))) (succedent (> (* skoXC1 (+ (- 1.) (* skoXC1 (* skoXC1 (+ (/ (- 1.) 6.) (* skoXC1 (* skoXC1 (/ (- 3.) 40.)))))))) 0.)))
-----[end problem]-----

-----[begin problem]-----
% In Mathematica format:
Timing[Resolve[Exists[{skoXC1}, And[skoXC1*skoXC1*((1/3)+skoXC1*skoXC1*((3/20)+skoXC1*skoXC1*(5/56)))<=1,skoXC1*skoXC1*skoXC1*skoXC1*((-17/120)+skoXC1*skoXC1*((-27/280)+skoXC1*skoXC1*(5/224)))<=0,skoXC1*skoXC1*skoXC1*skoXC1*((-13/60)+skoXC1*skoXC1*((-9/280)+skoXC1*skoXC1*(-5/28)))<=0,skoXC1*skoXC1*((-1/2)+skoXC1*skoXC1*((7/120)+skoXC1*skoXC1*((33/560)+skoXC1*skoXC1*(-5/112))))<=0,skoXC1*skoXC1*((-1/6)+skoXC1*skoXC1*((-3/40)+skoXC1*skoXC1*(-5/112)))<=1,skoXC1*(-1+skoXC1*skoXC1*((1/3)+skoXC1*skoXC1*((3/20)+skoXC1*skoXC1*(5/56))))<=0,skoXC1*skoXC1*skoXC1*skoXC1*((-80/3)+skoXC1*skoXC1*((128/3)+skoXC1*skoXC1*((-55/3)+skoXC1*skoXC1*(5/3))))<=0,skoXC1*skoXC1*(256+skoXC1*skoXC1*(-160+skoXC1*skoXC1*(32+skoXC1*skoXC1*-1)))<=128,skoXC1*skoXC1*(1/3)<=1,skoXC1*(-1+skoXC1*skoXC1*(-1/6))<=0,skoXC1*skoXC1*skoXC1*skoXC1*(-2/3)<=0,skoXC1*skoXC1<=2,skoXC1*skoXC1*((-1/2)+skoXC1*skoXC1*(-1/6))<=0,skoXC1*skoXC1*(-1/6)<=1,skoXC1*(-1+skoXC1*skoXC1*(1/3))<=0,(7/8)>skoXC1,skoXC1>0,skoXC1*skoXC1*(-1/2)>-3,skoXC1*skoXC1*(1/2)<=3,skoXC1*skoXC1*(24+skoXC1*skoXC1*(-10+skoXC1*skoXC1))<=16,skoXC1*skoXC1*(-80+skoXC1*skoXC1*(40+skoXC1*skoXC1*(-6+skoXC1*skoXC1*(1/8))))>-48,skoXC1*skoXC1*(80+skoXC1*skoXC1*(-40+skoXC1*skoXC1*(6+skoXC1*skoXC1*(-1/8))))<=48,skoXC1*skoXC1>0,skoXC1*(-1+skoXC1*skoXC1*((1/3)+skoXC1*skoXC1*(3/20)))<=0,skoXC1*skoXC1*((-1/6)+skoXC1*skoXC1*(-3/40))<=1,skoXC1*skoXC1*((-1/2)+skoXC1*skoXC1*((7/120)+skoXC1*skoXC1*(-3/40)))<=0,skoXC1*skoXC1*skoXC1*skoXC1*((-13/60)+skoXC1*skoXC1*(-3/10))<=0,skoXC1*skoXC1*skoXC1*skoXC1*((-17/120)+skoXC1*skoXC1*(3/80))<=0,skoXC1*skoXC1*((1/3)+skoXC1*skoXC1*(3/20))<=1,skoXC1*skoXC1*skoXC1*skoXC1*((32/15)+skoXC1*skoXC1*((-296/15)+skoXC1*skoXC1*((391/15)+skoXC1*skoXC1*((-146/15)+skoXC1*skoXC1*(3/4)))))<=0,skoXC1*skoXC1*((1/6)+skoXC1*skoXC1*(3/40))>-1,skoXC1*(-1+skoXC1*skoXC1*((-1/6)+skoXC1*skoXC1*(-3/40)))<=0]], Reals]]

% In QepcadB format:
(E skoXC1) [[(skoXC1 skoXC1 (1/3+(skoXC1 skoXC1 (3/20+(skoXC1 skoXC1 (5/56))))))<=1]/\[[(skoXC1 skoXC1 skoXC1 skoXC1 (-17/120+(skoXC1 skoXC1 (-27/280+(skoXC1 skoXC1 (5/224))))))<=0]/\[[(skoXC1 skoXC1 skoXC1 skoXC1 (-13/60+(skoXC1 skoXC1 (-9/280+(skoXC1 skoXC1 (-5/28))))))<=0]/\[[(skoXC1 skoXC1 (-1/2+(skoXC1 skoXC1 (7/120+(skoXC1 skoXC1 (33/560+(skoXC1 skoXC1 (-5/112))))))))<=0]/\[[(skoXC1 skoXC1 (-1/6+(skoXC1 skoXC1 (-3/40+(skoXC1 skoXC1 (-5/112))))))<=1]/\[[(skoXC1 (-1+(skoXC1 skoXC1 (1/3+(skoXC1 skoXC1 (3/20+(skoXC1 skoXC1 (5/56))))))))<=0]/\[[(skoXC1 skoXC1 skoXC1 skoXC1 (-80/3+(skoXC1 skoXC1 (128/3+(skoXC1 skoXC1 (-55/3+(skoXC1 skoXC1 (5/3))))))))<=0]/\[[(skoXC1 skoXC1 (256+(skoXC1 skoXC1 (-160+(skoXC1 skoXC1 (32+(skoXC1 skoXC1 (-1))))))))<=128]/\[[(skoXC1 skoXC1 (1/3))<=1]/\[[(skoXC1 (-1+(skoXC1 skoXC1 (-1/6))))<=0]/\[[(skoXC1 skoXC1 skoXC1 skoXC1 (-2/3))<=0]/\[[(skoXC1 skoXC1)<=2]/\[[(skoXC1 skoXC1 (-1/2+(skoXC1 skoXC1 (-1/6))))<=0]/\[[(skoXC1 skoXC1 (-1/6))<=1]/\[[(skoXC1 (-1+(skoXC1 skoXC1 (1/3))))<=0]/\[[skoXC1<7/8]/\[[0<skoXC1]/\[[-3<(skoXC1 skoXC1 (-1/2))]/\[[(skoXC1 skoXC1 (1/2))<=3]/\[[(skoXC1 skoXC1 (24+(skoXC1 skoXC1 (-10+(skoXC1 skoXC1)))))<=16]/\[[-48<(skoXC1 skoXC1 (-80+(skoXC1 skoXC1 (40+(skoXC1 skoXC1 (-6+(skoXC1 skoXC1 (1/8))))))))]/\[[(skoXC1 skoXC1 (80+(skoXC1 skoXC1 (-40+(skoXC1 skoXC1 (6+(skoXC1 skoXC1 (-1/8))))))))<=48]/\[[0<(skoXC1 skoXC1)]/\[[(skoXC1 (-1+(skoXC1 skoXC1 (1/3+(skoXC1 skoXC1 (3/20))))))<=0]/\[[(skoXC1 skoXC1 (-1/6+(skoXC1 skoXC1 (-3/40))))<=1]/\[[(skoXC1 skoXC1 (-1/2+(skoXC1 skoXC1 (7/120+(skoXC1 skoXC1 (-3/40))))))<=0]/\[[(skoXC1 skoXC1 skoXC1 skoXC1 (-13/60+(skoXC1 skoXC1 (-3/10))))<=0]/\[[(skoXC1 skoXC1 skoXC1 skoXC1 (-17/120+(skoXC1 skoXC1 (3/80))))<=0]/\[[(skoXC1 skoXC1 (1/3+(skoXC1 skoXC1 (3/20))))<=1]/\[[(skoXC1 skoXC1 skoXC1 skoXC1 (32/15+(skoXC1 skoXC1 (-296/15+(skoXC1 skoXC1 (391/15+(skoXC1 skoXC1 (-146/15+(skoXC1 skoXC1 (3/4))))))))))<=0]/\[[-1<(skoXC1 skoXC1 (1/6+(skoXC1 skoXC1 (3/40))))]/\[(skoXC1 (-1+(skoXC1 skoXC1 (-1/6+(skoXC1 skoXC1 (-3/40))))))<=0]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]].

% In SMTLib2 format:
(declare-fun skoXC1 () Real) (assert (and (<= (* skoXC1 (* skoXC1 (+ (/ 1. 3.) (* skoXC1 (* skoXC1 (+ (/ 3. 20.) (* skoXC1 (* skoXC1 (/ 5. 56.))))))))) 1.) (and (<= (* skoXC1 (* skoXC1 (* skoXC1 (* skoXC1 (+ (/ (- 17.) 120.) (* skoXC1 (* skoXC1 (+ (/ (- 27.) 280.) (* skoXC1 (* skoXC1 (/ 5. 224.))))))))))) 0.) (and (<= (* skoXC1 (* skoXC1 (* skoXC1 (* skoXC1 (+ (/ (- 13.) 60.) (* skoXC1 (* skoXC1 (+ (/ (- 9.) 280.) (* skoXC1 (* skoXC1 (/ (- 5.) 28.))))))))))) 0.) (and (<= (* skoXC1 (* skoXC1 (+ (/ (- 1.) 2.) (* skoXC1 (* skoXC1 (+ (/ 7. 120.) (* skoXC1 (* skoXC1 (+ (/ 33. 560.) (* skoXC1 (* skoXC1 (/ (- 5.) 112.)))))))))))) 0.) (and (<= (* skoXC1 (* skoXC1 (+ (/ (- 1.) 6.) (* skoXC1 (* skoXC1 (+ (/ (- 3.) 40.) (* skoXC1 (* skoXC1 (/ (- 5.) 112.))))))))) 1.) (and (<= (* skoXC1 (+ (- 1.) (* skoXC1 (* skoXC1 (+ (/ 1. 3.) (* skoXC1 (* skoXC1 (+ (/ 3. 20.) (* skoXC1 (* skoXC1 (/ 5. 56.))))))))))) 0.) (and (<= (* skoXC1 (* skoXC1 (* skoXC1 (* skoXC1 (+ (/ (- 80.) 3.) (* skoXC1 (* skoXC1 (+ (/ 128. 3.) (* skoXC1 (* skoXC1 (+ (/ (- 55.) 3.) (* skoXC1 (* skoXC1 (/ 5. 3.)))))))))))))) 0.) (and (<= (* skoXC1 (* skoXC1 (+ 256. (* skoXC1 (* skoXC1 (+ (- 160.) (* skoXC1 (* skoXC1 (+ 32. (* skoXC1 (* skoXC1 (- 1.)))))))))))) 128.) (and (<= (* skoXC1 (* skoXC1 (/ 1. 3.))) 1.) (and (<= (* skoXC1 (+ (- 1.) (* skoXC1 (* skoXC1 (/ (- 1.) 6.))))) 0.) (and (<= (* skoXC1 (* skoXC1 (* skoXC1 (* skoXC1 (/ (- 2.) 3.))))) 0.) (and (<= (* skoXC1 skoXC1) 2.) (and (<= (* skoXC1 (* skoXC1 (+ (/ (- 1.) 2.) (* skoXC1 (* skoXC1 (/ (- 1.) 6.)))))) 0.) (and (<= (* skoXC1 (* skoXC1 (/ (- 1.) 6.))) 1.) (and (<= (* skoXC1 (+ (- 1.) (* skoXC1 (* skoXC1 (/ 1. 3.))))) 0.) (and (> (/ 7. 8.) skoXC1) (and (> skoXC1 0.) (and (> (* skoXC1 (* skoXC1 (/ (- 1.) 2.))) (- 3.)) (and (<= (* skoXC1 (* skoXC1 (/ 1. 2.))) 3.) (and (<= (* skoXC1 (* skoXC1 (+ 24. (* skoXC1 (* skoXC1 (+ (- 10.) (* skoXC1 skoXC1))))))) 16.) (and (> (* skoXC1 (* skoXC1 (+ (- 80.) (* skoXC1 (* skoXC1 (+ 40. (* skoXC1 (* skoXC1 (+ (- 6.) (* skoXC1 (* skoXC1 (/ 1. 8.)))))))))))) (- 48.)) (and (<= (* skoXC1 (* skoXC1 (+ 80. (* skoXC1 (* skoXC1 (+ (- 40.) (* skoXC1 (* skoXC1 (+ 6. (* skoXC1 (* skoXC1 (/ (- 1.) 8.)))))))))))) 48.) (and (> (* skoXC1 skoXC1) 0.) (and (<= (* skoXC1 (+ (- 1.) (* skoXC1 (* skoXC1 (+ (/ 1. 3.) (* skoXC1 (* skoXC1 (/ 3. 20.)))))))) 0.) (and (<= (* skoXC1 (* skoXC1 (+ (/ (- 1.) 6.) (* skoXC1 (* skoXC1 (/ (- 3.) 40.)))))) 1.) (and (<= (* skoXC1 (* skoXC1 (+ (/ (- 1.) 2.) (* skoXC1 (* skoXC1 (+ (/ 7. 120.) (* skoXC1 (* skoXC1 (/ (- 3.) 40.))))))))) 0.) (and (<= (* skoXC1 (* skoXC1 (* skoXC1 (* skoXC1 (+ (/ (- 13.) 60.) (* skoXC1 (* skoXC1 (/ (- 3.) 10.)))))))) 0.) (and (<= (* skoXC1 (* skoXC1 (* skoXC1 (* skoXC1 (+ (/ (- 17.) 120.) (* skoXC1 (* skoXC1 (/ 3. 80.)))))))) 0.) (and (<= (* skoXC1 (* skoXC1 (+ (/ 1. 3.) (* skoXC1 (* skoXC1 (/ 3. 20.)))))) 1.) (and (<= (* skoXC1 (* skoXC1 (* skoXC1 (* skoXC1 (+ (/ 32. 15.) (* skoXC1 (* skoXC1 (+ (/ (- 296.) 15.) (* skoXC1 (* skoXC1 (+ (/ 391. 15.) (* skoXC1 (* skoXC1 (+ (/ (- 146.) 15.) (* skoXC1 (* skoXC1 (/ 3. 4.))))))))))))))))) 0.) (and (> (* skoXC1 (* skoXC1 (+ (/ 1. 6.) (* skoXC1 (* skoXC1 (/ 3. 40.)))))) (- 1.)) (<= (* skoXC1 (+ (- 1.) (* skoXC1 (* skoXC1 (+ (/ (- 1.) 6.) (* skoXC1 (* skoXC1 (/ (- 3.) 40.)))))))) 0.)))))))))))))))))))))))))))))))))

% In GRF format:
(sequent " MetiTarski formula " (antecedent (<= (* skoXC1 (* skoXC1 (+ (/ 1. 3.) (* skoXC1 (* skoXC1 (+ (/ 3. 20.) (* skoXC1 (* skoXC1 (/ 5. 56.))))))))) 1.) (<= (* skoXC1 (* skoXC1 (* skoXC1 (* skoXC1 (+ (/ (- 17.) 120.) (* skoXC1 (* skoXC1 (+ (/ (- 27.) 280.) (* skoXC1 (* skoXC1 (/ 5. 224.))))))))))) 0.) (<= (* skoXC1 (* skoXC1 (* skoXC1 (* skoXC1 (+ (/ (- 13.) 60.) (* skoXC1 (* skoXC1 (+ (/ (- 9.) 280.) (* skoXC1 (* skoXC1 (/ (- 5.) 28.))))))))))) 0.) (<= (* skoXC1 (* skoXC1 (+ (/ (- 1.) 2.) (* skoXC1 (* skoXC1 (+ (/ 7. 120.) (* skoXC1 (* skoXC1 (+ (/ 33. 560.) (* skoXC1 (* skoXC1 (/ (- 5.) 112.)))))))))))) 0.) (<= (* skoXC1 (* skoXC1 (+ (/ (- 1.) 6.) (* skoXC1 (* skoXC1 (+ (/ (- 3.) 40.) (* skoXC1 (* skoXC1 (/ (- 5.) 112.))))))))) 1.) (<= (* skoXC1 (+ (- 1.) (* skoXC1 (* skoXC1 (+ (/ 1. 3.) (* skoXC1 (* skoXC1 (+ (/ 3. 20.) (* skoXC1 (* skoXC1 (/ 5. 56.))))))))))) 0.) (<= (* skoXC1 (* skoXC1 (* skoXC1 (* skoXC1 (+ (/ (- 80.) 3.) (* skoXC1 (* skoXC1 (+ (/ 128. 3.) (* skoXC1 (* skoXC1 (+ (/ (- 55.) 3.) (* skoXC1 (* skoXC1 (/ 5. 3.)))))))))))))) 0.) (<= (* skoXC1 (* skoXC1 (+ 256. (* skoXC1 (* skoXC1 (+ (- 160.) (* skoXC1 (* skoXC1 (+ 32. (* skoXC1 (* skoXC1 (- 1.)))))))))))) 128.) (<= (* skoXC1 (* skoXC1 (/ 1. 3.))) 1.) (<= (* skoXC1 (+ (- 1.) (* skoXC1 (* skoXC1 (/ (- 1.) 6.))))) 0.) (<= (* skoXC1 (* skoXC1 (* skoXC1 (* skoXC1 (/ (- 2.) 3.))))) 0.) (<= (* skoXC1 skoXC1) 2.) (<= (* skoXC1 (* skoXC1 (+ (/ (- 1.) 2.) (* skoXC1 (* skoXC1 (/ (- 1.) 6.)))))) 0.) (<= (* skoXC1 (* skoXC1 (/ (- 1.) 6.))) 1.) (<= (* skoXC1 (+ (- 1.) (* skoXC1 (* skoXC1 (/ 1. 3.))))) 0.) (> (/ 7. 8.) skoXC1) (> skoXC1 0.) (> (* skoXC1 (* skoXC1 (/ (- 1.) 2.))) (- 3.)) (<= (* skoXC1 (* skoXC1 (/ 1. 2.))) 3.) (<= (* skoXC1 (* skoXC1 (+ 24. (* skoXC1 (* skoXC1 (+ (- 10.) (* skoXC1 skoXC1))))))) 16.) (> (* skoXC1 (* skoXC1 (+ (- 80.) (* skoXC1 (* skoXC1 (+ 40. (* skoXC1 (* skoXC1 (+ (- 6.) (* skoXC1 (* skoXC1 (/ 1. 8.)))))))))))) (- 48.)) (<= (* skoXC1 (* skoXC1 (+ 80. (* skoXC1 (* skoXC1 (+ (- 40.) (* skoXC1 (* skoXC1 (+ 6. (* skoXC1 (* skoXC1 (/ (- 1.) 8.)))))))))))) 48.) (> (* skoXC1 skoXC1) 0.) (<= (* skoXC1 (+ (- 1.) (* skoXC1 (* skoXC1 (+ (/ 1. 3.) (* skoXC1 (* skoXC1 (/ 3. 20.)))))))) 0.) (<= (* skoXC1 (* skoXC1 (+ (/ (- 1.) 6.) (* skoXC1 (* skoXC1 (/ (- 3.) 40.)))))) 1.) (<= (* skoXC1 (* skoXC1 (+ (/ (- 1.) 2.) (* skoXC1 (* skoXC1 (+ (/ 7. 120.) (* skoXC1 (* skoXC1 (/ (- 3.) 40.))))))))) 0.) (<= (* skoXC1 (* skoXC1 (* skoXC1 (* skoXC1 (+ (/ (- 13.) 60.) (* skoXC1 (* skoXC1 (/ (- 3.) 10.)))))))) 0.) (<= (* skoXC1 (* skoXC1 (* skoXC1 (* skoXC1 (+ (/ (- 17.) 120.) (* skoXC1 (* skoXC1 (/ 3. 80.)))))))) 0.) (<= (* skoXC1 (* skoXC1 (+ (/ 1. 3.) (* skoXC1 (* skoXC1 (/ 3. 20.)))))) 1.) (<= (* skoXC1 (* skoXC1 (* skoXC1 (* skoXC1 (+ (/ 32. 15.) (* skoXC1 (* skoXC1 (+ (/ (- 296.) 15.) (* skoXC1 (* skoXC1 (+ (/ 391. 15.) (* skoXC1 (* skoXC1 (+ (/ (- 146.) 15.) (* skoXC1 (* skoXC1 (/ 3. 4.))))))))))))))))) 0.) (> (* skoXC1 (* skoXC1 (+ (/ 1. 6.) (* skoXC1 (* skoXC1 (/ 3. 40.)))))) (- 1.))) (succedent (> (* skoXC1 (+ (- 1.) (* skoXC1 (* skoXC1 (+ (/ (- 1.) 6.) (* skoXC1 (* skoXC1 (/ (- 3.) 40.)))))))) 0.)))
-----[end problem]-----

-----[begin problem]-----
% In Mathematica format:
Timing[Resolve[Exists[{skoXC1}, And[skoXC1*skoXC1*((1/3)+skoXC1*skoXC1*((3/20)+skoXC1*skoXC1*(5/56)))<=1,skoXC1*skoXC1*skoXC1*skoXC1*((-17/120)+skoXC1*skoXC1*((-27/280)+skoXC1*skoXC1*(5/224)))<=0,skoXC1*skoXC1*skoXC1*skoXC1*((-13/60)+skoXC1*skoXC1*((-9/280)+skoXC1*skoXC1*(-5/28)))<=0,skoXC1*skoXC1*((-1/2)+skoXC1*skoXC1*((7/120)+skoXC1*skoXC1*((33/560)+skoXC1*skoXC1*(-5/112))))<=0,skoXC1*skoXC1*((-1/6)+skoXC1*skoXC1*((-3/40)+skoXC1*skoXC1*(-5/112)))<=1,skoXC1*(-1+skoXC1*skoXC1*((1/3)+skoXC1*skoXC1*((3/20)+skoXC1*skoXC1*(5/56))))<=0,skoXC1*skoXC1*skoXC1*skoXC1*((-80/3)+skoXC1*skoXC1*((128/3)+skoXC1*skoXC1*((-55/3)+skoXC1*skoXC1*(5/3))))<=0,skoXC1*skoXC1*(256+skoXC1*skoXC1*(-160+skoXC1*skoXC1*(32+skoXC1*skoXC1*-1)))<=128,skoXC1*skoXC1*(1/3)<=1,skoXC1*(-1+skoXC1*skoXC1*(-1/6))<=0,skoXC1*skoXC1*skoXC1*skoXC1*(-2/3)<=0,skoXC1*skoXC1<=2,skoXC1*skoXC1*((-1/2)+skoXC1*skoXC1*(-1/6))<=0,skoXC1*skoXC1*(-1/6)<=1,skoXC1*(-1+skoXC1*skoXC1*(1/3))<=0,(7/8)>skoXC1,skoXC1>0,skoXC1*skoXC1*(-1/2)>-3,skoXC1*skoXC1*(1/2)<=3,skoXC1*skoXC1*(24+skoXC1*skoXC1*(-10+skoXC1*skoXC1))<=16,skoXC1*skoXC1*(-80+skoXC1*skoXC1*(40+skoXC1*skoXC1*(-6+skoXC1*skoXC1*(1/8))))>-48,skoXC1*skoXC1*(80+skoXC1*skoXC1*(-40+skoXC1*skoXC1*(6+skoXC1*skoXC1*(-1/8))))<=48,skoXC1*skoXC1>0,skoXC1*(-1+skoXC1*skoXC1*((1/3)+skoXC1*skoXC1*(3/20)))<=0,skoXC1*skoXC1*((-1/6)+skoXC1*skoXC1*(-3/40))<=1,skoXC1*skoXC1*((-1/2)+skoXC1*skoXC1*((7/120)+skoXC1*skoXC1*(-3/40)))<=0,skoXC1*skoXC1*skoXC1*skoXC1*((-13/60)+skoXC1*skoXC1*(-3/10))<=0,skoXC1*skoXC1*skoXC1*skoXC1*((-17/120)+skoXC1*skoXC1*(3/80))<=0,skoXC1*skoXC1*((1/3)+skoXC1*skoXC1*(3/20))<=1,skoXC1*skoXC1*skoXC1*skoXC1*((32/15)+skoXC1*skoXC1*((-296/15)+skoXC1*skoXC1*((391/15)+skoXC1*skoXC1*((-146/15)+skoXC1*skoXC1*(3/4)))))<=0,skoXC1*skoXC1*((1/6)+skoXC1*skoXC1*(3/40))>-1,skoXC1*(-1+skoXC1*skoXC1*((-1/6)+skoXC1*skoXC1*(-3/40)))<=0]], Reals]]

% In QepcadB format:
(E skoXC1) [[(skoXC1 skoXC1 (1/3+(skoXC1 skoXC1 (3/20+(skoXC1 skoXC1 (5/56))))))<=1]/\[[(skoXC1 skoXC1 skoXC1 skoXC1 (-17/120+(skoXC1 skoXC1 (-27/280+(skoXC1 skoXC1 (5/224))))))<=0]/\[[(skoXC1 skoXC1 skoXC1 skoXC1 (-13/60+(skoXC1 skoXC1 (-9/280+(skoXC1 skoXC1 (-5/28))))))<=0]/\[[(skoXC1 skoXC1 (-1/2+(skoXC1 skoXC1 (7/120+(skoXC1 skoXC1 (33/560+(skoXC1 skoXC1 (-5/112))))))))<=0]/\[[(skoXC1 skoXC1 (-1/6+(skoXC1 skoXC1 (-3/40+(skoXC1 skoXC1 (-5/112))))))<=1]/\[[(skoXC1 (-1+(skoXC1 skoXC1 (1/3+(skoXC1 skoXC1 (3/20+(skoXC1 skoXC1 (5/56))))))))<=0]/\[[(skoXC1 skoXC1 skoXC1 skoXC1 (-80/3+(skoXC1 skoXC1 (128/3+(skoXC1 skoXC1 (-55/3+(skoXC1 skoXC1 (5/3))))))))<=0]/\[[(skoXC1 skoXC1 (256+(skoXC1 skoXC1 (-160+(skoXC1 skoXC1 (32+(skoXC1 skoXC1 (-1))))))))<=128]/\[[(skoXC1 skoXC1 (1/3))<=1]/\[[(skoXC1 (-1+(skoXC1 skoXC1 (-1/6))))<=0]/\[[(skoXC1 skoXC1 skoXC1 skoXC1 (-2/3))<=0]/\[[(skoXC1 skoXC1)<=2]/\[[(skoXC1 skoXC1 (-1/2+(skoXC1 skoXC1 (-1/6))))<=0]/\[[(skoXC1 skoXC1 (-1/6))<=1]/\[[(skoXC1 (-1+(skoXC1 skoXC1 (1/3))))<=0]/\[[skoXC1<7/8]/\[[0<skoXC1]/\[[-3<(skoXC1 skoXC1 (-1/2))]/\[[(skoXC1 skoXC1 (1/2))<=3]/\[[(skoXC1 skoXC1 (24+(skoXC1 skoXC1 (-10+(skoXC1 skoXC1)))))<=16]/\[[-48<(skoXC1 skoXC1 (-80+(skoXC1 skoXC1 (40+(skoXC1 skoXC1 (-6+(skoXC1 skoXC1 (1/8))))))))]/\[[(skoXC1 skoXC1 (80+(skoXC1 skoXC1 (-40+(skoXC1 skoXC1 (6+(skoXC1 skoXC1 (-1/8))))))))<=48]/\[[0<(skoXC1 skoXC1)]/\[[(skoXC1 (-1+(skoXC1 skoXC1 (1/3+(skoXC1 skoXC1 (3/20))))))<=0]/\[[(skoXC1 skoXC1 (-1/6+(skoXC1 skoXC1 (-3/40))))<=1]/\[[(skoXC1 skoXC1 (-1/2+(skoXC1 skoXC1 (7/120+(skoXC1 skoXC1 (-3/40))))))<=0]/\[[(skoXC1 skoXC1 skoXC1 skoXC1 (-13/60+(skoXC1 skoXC1 (-3/10))))<=0]/\[[(skoXC1 skoXC1 skoXC1 skoXC1 (-17/120+(skoXC1 skoXC1 (3/80))))<=0]/\[[(skoXC1 skoXC1 (1/3+(skoXC1 skoXC1 (3/20))))<=1]/\[[(skoXC1 skoXC1 skoXC1 skoXC1 (32/15+(skoXC1 skoXC1 (-296/15+(skoXC1 skoXC1 (391/15+(skoXC1 skoXC1 (-146/15+(skoXC1 skoXC1 (3/4))))))))))<=0]/\[[-1<(skoXC1 skoXC1 (1/6+(skoXC1 skoXC1 (3/40))))]/\[(skoXC1 (-1+(skoXC1 skoXC1 (-1/6+(skoXC1 skoXC1 (-3/40))))))<=0]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]].

% In SMTLib2 format:
(declare-fun skoXC1 () Real) (assert (and (<= (* skoXC1 (* skoXC1 (+ (/ 1. 3.) (* skoXC1 (* skoXC1 (+ (/ 3. 20.) (* skoXC1 (* skoXC1 (/ 5. 56.))))))))) 1.) (and (<= (* skoXC1 (* skoXC1 (* skoXC1 (* skoXC1 (+ (/ (- 17.) 120.) (* skoXC1 (* skoXC1 (+ (/ (- 27.) 280.) (* skoXC1 (* skoXC1 (/ 5. 224.))))))))))) 0.) (and (<= (* skoXC1 (* skoXC1 (* skoXC1 (* skoXC1 (+ (/ (- 13.) 60.) (* skoXC1 (* skoXC1 (+ (/ (- 9.) 280.) (* skoXC1 (* skoXC1 (/ (- 5.) 28.))))))))))) 0.) (and (<= (* skoXC1 (* skoXC1 (+ (/ (- 1.) 2.) (* skoXC1 (* skoXC1 (+ (/ 7. 120.) (* skoXC1 (* skoXC1 (+ (/ 33. 560.) (* skoXC1 (* skoXC1 (/ (- 5.) 112.)))))))))))) 0.) (and (<= (* skoXC1 (* skoXC1 (+ (/ (- 1.) 6.) (* skoXC1 (* skoXC1 (+ (/ (- 3.) 40.) (* skoXC1 (* skoXC1 (/ (- 5.) 112.))))))))) 1.) (and (<= (* skoXC1 (+ (- 1.) (* skoXC1 (* skoXC1 (+ (/ 1. 3.) (* skoXC1 (* skoXC1 (+ (/ 3. 20.) (* skoXC1 (* skoXC1 (/ 5. 56.))))))))))) 0.) (and (<= (* skoXC1 (* skoXC1 (* skoXC1 (* skoXC1 (+ (/ (- 80.) 3.) (* skoXC1 (* skoXC1 (+ (/ 128. 3.) (* skoXC1 (* skoXC1 (+ (/ (- 55.) 3.) (* skoXC1 (* skoXC1 (/ 5. 3.)))))))))))))) 0.) (and (<= (* skoXC1 (* skoXC1 (+ 256. (* skoXC1 (* skoXC1 (+ (- 160.) (* skoXC1 (* skoXC1 (+ 32. (* skoXC1 (* skoXC1 (- 1.)))))))))))) 128.) (and (<= (* skoXC1 (* skoXC1 (/ 1. 3.))) 1.) (and (<= (* skoXC1 (+ (- 1.) (* skoXC1 (* skoXC1 (/ (- 1.) 6.))))) 0.) (and (<= (* skoXC1 (* skoXC1 (* skoXC1 (* skoXC1 (/ (- 2.) 3.))))) 0.) (and (<= (* skoXC1 skoXC1) 2.) (and (<= (* skoXC1 (* skoXC1 (+ (/ (- 1.) 2.) (* skoXC1 (* skoXC1 (/ (- 1.) 6.)))))) 0.) (and (<= (* skoXC1 (* skoXC1 (/ (- 1.) 6.))) 1.) (and (<= (* skoXC1 (+ (- 1.) (* skoXC1 (* skoXC1 (/ 1. 3.))))) 0.) (and (> (/ 7. 8.) skoXC1) (and (> skoXC1 0.) (and (> (* skoXC1 (* skoXC1 (/ (- 1.) 2.))) (- 3.)) (and (<= (* skoXC1 (* skoXC1 (/ 1. 2.))) 3.) (and (<= (* skoXC1 (* skoXC1 (+ 24. (* skoXC1 (* skoXC1 (+ (- 10.) (* skoXC1 skoXC1))))))) 16.) (and (> (* skoXC1 (* skoXC1 (+ (- 80.) (* skoXC1 (* skoXC1 (+ 40. (* skoXC1 (* skoXC1 (+ (- 6.) (* skoXC1 (* skoXC1 (/ 1. 8.)))))))))))) (- 48.)) (and (<= (* skoXC1 (* skoXC1 (+ 80. (* skoXC1 (* skoXC1 (+ (- 40.) (* skoXC1 (* skoXC1 (+ 6. (* skoXC1 (* skoXC1 (/ (- 1.) 8.)))))))))))) 48.) (and (> (* skoXC1 skoXC1) 0.) (and (<= (* skoXC1 (+ (- 1.) (* skoXC1 (* skoXC1 (+ (/ 1. 3.) (* skoXC1 (* skoXC1 (/ 3. 20.)))))))) 0.) (and (<= (* skoXC1 (* skoXC1 (+ (/ (- 1.) 6.) (* skoXC1 (* skoXC1 (/ (- 3.) 40.)))))) 1.) (and (<= (* skoXC1 (* skoXC1 (+ (/ (- 1.) 2.) (* skoXC1 (* skoXC1 (+ (/ 7. 120.) (* skoXC1 (* skoXC1 (/ (- 3.) 40.))))))))) 0.) (and (<= (* skoXC1 (* skoXC1 (* skoXC1 (* skoXC1 (+ (/ (- 13.) 60.) (* skoXC1 (* skoXC1 (/ (- 3.) 10.)))))))) 0.) (and (<= (* skoXC1 (* skoXC1 (* skoXC1 (* skoXC1 (+ (/ (- 17.) 120.) (* skoXC1 (* skoXC1 (/ 3. 80.)))))))) 0.) (and (<= (* skoXC1 (* skoXC1 (+ (/ 1. 3.) (* skoXC1 (* skoXC1 (/ 3. 20.)))))) 1.) (and (<= (* skoXC1 (* skoXC1 (* skoXC1 (* skoXC1 (+ (/ 32. 15.) (* skoXC1 (* skoXC1 (+ (/ (- 296.) 15.) (* skoXC1 (* skoXC1 (+ (/ 391. 15.) (* skoXC1 (* skoXC1 (+ (/ (- 146.) 15.) (* skoXC1 (* skoXC1 (/ 3. 4.))))))))))))))))) 0.) (and (> (* skoXC1 (* skoXC1 (+ (/ 1. 6.) (* skoXC1 (* skoXC1 (/ 3. 40.)))))) (- 1.)) (<= (* skoXC1 (+ (- 1.) (* skoXC1 (* skoXC1 (+ (/ (- 1.) 6.) (* skoXC1 (* skoXC1 (/ (- 3.) 40.)))))))) 0.)))))))))))))))))))))))))))))))))

% In GRF format:
(sequent " MetiTarski formula " (antecedent (<= (* skoXC1 (* skoXC1 (+ (/ 1. 3.) (* skoXC1 (* skoXC1 (+ (/ 3. 20.) (* skoXC1 (* skoXC1 (/ 5. 56.))))))))) 1.) (<= (* skoXC1 (* skoXC1 (* skoXC1 (* skoXC1 (+ (/ (- 17.) 120.) (* skoXC1 (* skoXC1 (+ (/ (- 27.) 280.) (* skoXC1 (* skoXC1 (/ 5. 224.))))))))))) 0.) (<= (* skoXC1 (* skoXC1 (* skoXC1 (* skoXC1 (+ (/ (- 13.) 60.) (* skoXC1 (* skoXC1 (+ (/ (- 9.) 280.) (* skoXC1 (* skoXC1 (/ (- 5.) 28.))))))))))) 0.) (<= (* skoXC1 (* skoXC1 (+ (/ (- 1.) 2.) (* skoXC1 (* skoXC1 (+ (/ 7. 120.) (* skoXC1 (* skoXC1 (+ (/ 33. 560.) (* skoXC1 (* skoXC1 (/ (- 5.) 112.)))))))))))) 0.) (<= (* skoXC1 (* skoXC1 (+ (/ (- 1.) 6.) (* skoXC1 (* skoXC1 (+ (/ (- 3.) 40.) (* skoXC1 (* skoXC1 (/ (- 5.) 112.))))))))) 1.) (<= (* skoXC1 (+ (- 1.) (* skoXC1 (* skoXC1 (+ (/ 1. 3.) (* skoXC1 (* skoXC1 (+ (/ 3. 20.) (* skoXC1 (* skoXC1 (/ 5. 56.))))))))))) 0.) (<= (* skoXC1 (* skoXC1 (* skoXC1 (* skoXC1 (+ (/ (- 80.) 3.) (* skoXC1 (* skoXC1 (+ (/ 128. 3.) (* skoXC1 (* skoXC1 (+ (/ (- 55.) 3.) (* skoXC1 (* skoXC1 (/ 5. 3.)))))))))))))) 0.) (<= (* skoXC1 (* skoXC1 (+ 256. (* skoXC1 (* skoXC1 (+ (- 160.) (* skoXC1 (* skoXC1 (+ 32. (* skoXC1 (* skoXC1 (- 1.)))))))))))) 128.) (<= (* skoXC1 (* skoXC1 (/ 1. 3.))) 1.) (<= (* skoXC1 (+ (- 1.) (* skoXC1 (* skoXC1 (/ (- 1.) 6.))))) 0.) (<= (* skoXC1 (* skoXC1 (* skoXC1 (* skoXC1 (/ (- 2.) 3.))))) 0.) (<= (* skoXC1 skoXC1) 2.) (<= (* skoXC1 (* skoXC1 (+ (/ (- 1.) 2.) (* skoXC1 (* skoXC1 (/ (- 1.) 6.)))))) 0.) (<= (* skoXC1 (* skoXC1 (/ (- 1.) 6.))) 1.) (<= (* skoXC1 (+ (- 1.) (* skoXC1 (* skoXC1 (/ 1. 3.))))) 0.) (> (/ 7. 8.) skoXC1) (> skoXC1 0.) (> (* skoXC1 (* skoXC1 (/ (- 1.) 2.))) (- 3.)) (<= (* skoXC1 (* skoXC1 (/ 1. 2.))) 3.) (<= (* skoXC1 (* skoXC1 (+ 24. (* skoXC1 (* skoXC1 (+ (- 10.) (* skoXC1 skoXC1))))))) 16.) (> (* skoXC1 (* skoXC1 (+ (- 80.) (* skoXC1 (* skoXC1 (+ 40. (* skoXC1 (* skoXC1 (+ (- 6.) (* skoXC1 (* skoXC1 (/ 1. 8.)))))))))))) (- 48.)) (<= (* skoXC1 (* skoXC1 (+ 80. (* skoXC1 (* skoXC1 (+ (- 40.) (* skoXC1 (* skoXC1 (+ 6. (* skoXC1 (* skoXC1 (/ (- 1.) 8.)))))))))))) 48.) (> (* skoXC1 skoXC1) 0.) (<= (* skoXC1 (+ (- 1.) (* skoXC1 (* skoXC1 (+ (/ 1. 3.) (* skoXC1 (* skoXC1 (/ 3. 20.)))))))) 0.) (<= (* skoXC1 (* skoXC1 (+ (/ (- 1.) 6.) (* skoXC1 (* skoXC1 (/ (- 3.) 40.)))))) 1.) (<= (* skoXC1 (* skoXC1 (+ (/ (- 1.) 2.) (* skoXC1 (* skoXC1 (+ (/ 7. 120.) (* skoXC1 (* skoXC1 (/ (- 3.) 40.))))))))) 0.) (<= (* skoXC1 (* skoXC1 (* skoXC1 (* skoXC1 (+ (/ (- 13.) 60.) (* skoXC1 (* skoXC1 (/ (- 3.) 10.)))))))) 0.) (<= (* skoXC1 (* skoXC1 (* skoXC1 (* skoXC1 (+ (/ (- 17.) 120.) (* skoXC1 (* skoXC1 (/ 3. 80.)))))))) 0.) (<= (* skoXC1 (* skoXC1 (+ (/ 1. 3.) (* skoXC1 (* skoXC1 (/ 3. 20.)))))) 1.) (<= (* skoXC1 (* skoXC1 (* skoXC1 (* skoXC1 (+ (/ 32. 15.) (* skoXC1 (* skoXC1 (+ (/ (- 296.) 15.) (* skoXC1 (* skoXC1 (+ (/ 391. 15.) (* skoXC1 (* skoXC1 (+ (/ (- 146.) 15.) (* skoXC1 (* skoXC1 (/ 3. 4.))))))))))))))))) 0.) (> (* skoXC1 (* skoXC1 (+ (/ 1. 6.) (* skoXC1 (* skoXC1 (/ 3. 40.)))))) (- 1.))) (succedent (> (* skoXC1 (+ (- 1.) (* skoXC1 (* skoXC1 (+ (/ (- 1.) 6.) (* skoXC1 (* skoXC1 (/ (- 3.) 40.)))))))) 0.)))
-----[end problem]-----

-----[begin problem]-----
% In Mathematica format:
Timing[Resolve[Exists[{skoXC1}, And[skoXC1*skoXC1*((-1/6)+skoXC1*skoXC1*((-3/40)+skoXC1*skoXC1*(-5/112)))<=1,skoXC1*skoXC1*((1/3)+skoXC1*skoXC1*((3/20)+skoXC1*skoXC1*(5/56)))<=1,skoXC1*skoXC1*skoXC1*skoXC1*((-17/120)+skoXC1*skoXC1*((-27/280)+skoXC1*skoXC1*(5/224)))<=0,skoXC1*skoXC1*skoXC1*skoXC1*((-13/60)+skoXC1*skoXC1*((-9/280)+skoXC1*skoXC1*(-5/28)))<=0,skoXC1*skoXC1*((-1/2)+skoXC1*skoXC1*((7/120)+skoXC1*skoXC1*((33/560)+skoXC1*skoXC1*(-5/112))))<=0,skoXC1*skoXC1*((-1/6)+skoXC1*skoXC1*((-3/40)+skoXC1*skoXC1*(-5/112)))<=1,skoXC1*(-1+skoXC1*skoXC1*((1/3)+skoXC1*skoXC1*((3/20)+skoXC1*skoXC1*(5/56))))<=0,skoXC1*skoXC1*skoXC1*skoXC1*((-80/3)+skoXC1*skoXC1*((128/3)+skoXC1*skoXC1*((-55/3)+skoXC1*skoXC1*(5/3))))<=0,skoXC1*skoXC1*(256+skoXC1*skoXC1*(-160+skoXC1*skoXC1*(32+skoXC1*skoXC1*-1)))<=128,skoXC1*skoXC1*(1/3)<=1,skoXC1*(-1+skoXC1*skoXC1*(-1/6))<=0,skoXC1*skoXC1*skoXC1*skoXC1*(-2/3)<=0,skoXC1*skoXC1<=2,skoXC1*skoXC1*((-1/2)+skoXC1*skoXC1*(-1/6))<=0,skoXC1*skoXC1*(-1/6)<=1,skoXC1*(-1+skoXC1*skoXC1*(1/3))<=0,(7/8)>skoXC1,skoXC1>0,skoXC1*skoXC1*(-1/2)>-3,skoXC1*skoXC1*(1/2)<=3,skoXC1*skoXC1*(24+skoXC1*skoXC1*(-10+skoXC1*skoXC1))<=16,skoXC1*skoXC1*(-80+skoXC1*skoXC1*(40+skoXC1*skoXC1*(-6+skoXC1*skoXC1*(1/8))))>-48,skoXC1*skoXC1*(80+skoXC1*skoXC1*(-40+skoXC1*skoXC1*(6+skoXC1*skoXC1*(-1/8))))<=48,skoXC1*skoXC1>0,skoXC1*(-1+skoXC1*skoXC1*((1/3)+skoXC1*skoXC1*(3/20)))<=0,skoXC1*skoXC1*((-1/6)+skoXC1*skoXC1*(-3/40))<=1,skoXC1*skoXC1*((-1/2)+skoXC1*skoXC1*((7/120)+skoXC1*skoXC1*(-3/40)))<=0,skoXC1*skoXC1*skoXC1*skoXC1*((-13/60)+skoXC1*skoXC1*(-3/10))<=0,skoXC1*skoXC1*skoXC1*skoXC1*((-17/120)+skoXC1*skoXC1*(3/80))<=0,skoXC1*skoXC1*((1/3)+skoXC1*skoXC1*(3/20))<=1,skoXC1*skoXC1*skoXC1*skoXC1*((32/15)+skoXC1*skoXC1*((-296/15)+skoXC1*skoXC1*((391/15)+skoXC1*skoXC1*((-146/15)+skoXC1*skoXC1*(3/4)))))<=0,skoXC1*skoXC1*((1/6)+skoXC1*skoXC1*(3/40))>-1,skoXC1*(-1+skoXC1*skoXC1*((-1/6)+skoXC1*skoXC1*(-3/40)))<=0]], Reals]]

% In QepcadB format:
(E skoXC1) [[(skoXC1 skoXC1 (-1/6+(skoXC1 skoXC1 (-3/40+(skoXC1 skoXC1 (-5/112))))))<=1]/\[[(skoXC1 skoXC1 (1/3+(skoXC1 skoXC1 (3/20+(skoXC1 skoXC1 (5/56))))))<=1]/\[[(skoXC1 skoXC1 skoXC1 skoXC1 (-17/120+(skoXC1 skoXC1 (-27/280+(skoXC1 skoXC1 (5/224))))))<=0]/\[[(skoXC1 skoXC1 skoXC1 skoXC1 (-13/60+(skoXC1 skoXC1 (-9/280+(skoXC1 skoXC1 (-5/28))))))<=0]/\[[(skoXC1 skoXC1 (-1/2+(skoXC1 skoXC1 (7/120+(skoXC1 skoXC1 (33/560+(skoXC1 skoXC1 (-5/112))))))))<=0]/\[[(skoXC1 skoXC1 (-1/6+(skoXC1 skoXC1 (-3/40+(skoXC1 skoXC1 (-5/112))))))<=1]/\[[(skoXC1 (-1+(skoXC1 skoXC1 (1/3+(skoXC1 skoXC1 (3/20+(skoXC1 skoXC1 (5/56))))))))<=0]/\[[(skoXC1 skoXC1 skoXC1 skoXC1 (-80/3+(skoXC1 skoXC1 (128/3+(skoXC1 skoXC1 (-55/3+(skoXC1 skoXC1 (5/3))))))))<=0]/\[[(skoXC1 skoXC1 (256+(skoXC1 skoXC1 (-160+(skoXC1 skoXC1 (32+(skoXC1 skoXC1 (-1))))))))<=128]/\[[(skoXC1 skoXC1 (1/3))<=1]/\[[(skoXC1 (-1+(skoXC1 skoXC1 (-1/6))))<=0]/\[[(skoXC1 skoXC1 skoXC1 skoXC1 (-2/3))<=0]/\[[(skoXC1 skoXC1)<=2]/\[[(skoXC1 skoXC1 (-1/2+(skoXC1 skoXC1 (-1/6))))<=0]/\[[(skoXC1 skoXC1 (-1/6))<=1]/\[[(skoXC1 (-1+(skoXC1 skoXC1 (1/3))))<=0]/\[[skoXC1<7/8]/\[[0<skoXC1]/\[[-3<(skoXC1 skoXC1 (-1/2))]/\[[(skoXC1 skoXC1 (1/2))<=3]/\[[(skoXC1 skoXC1 (24+(skoXC1 skoXC1 (-10+(skoXC1 skoXC1)))))<=16]/\[[-48<(skoXC1 skoXC1 (-80+(skoXC1 skoXC1 (40+(skoXC1 skoXC1 (-6+(skoXC1 skoXC1 (1/8))))))))]/\[[(skoXC1 skoXC1 (80+(skoXC1 skoXC1 (-40+(skoXC1 skoXC1 (6+(skoXC1 skoXC1 (-1/8))))))))<=48]/\[[0<(skoXC1 skoXC1)]/\[[(skoXC1 (-1+(skoXC1 skoXC1 (1/3+(skoXC1 skoXC1 (3/20))))))<=0]/\[[(skoXC1 skoXC1 (-1/6+(skoXC1 skoXC1 (-3/40))))<=1]/\[[(skoXC1 skoXC1 (-1/2+(skoXC1 skoXC1 (7/120+(skoXC1 skoXC1 (-3/40))))))<=0]/\[[(skoXC1 skoXC1 skoXC1 skoXC1 (-13/60+(skoXC1 skoXC1 (-3/10))))<=0]/\[[(skoXC1 skoXC1 skoXC1 skoXC1 (-17/120+(skoXC1 skoXC1 (3/80))))<=0]/\[[(skoXC1 skoXC1 (1/3+(skoXC1 skoXC1 (3/20))))<=1]/\[[(skoXC1 skoXC1 skoXC1 skoXC1 (32/15+(skoXC1 skoXC1 (-296/15+(skoXC1 skoXC1 (391/15+(skoXC1 skoXC1 (-146/15+(skoXC1 skoXC1 (3/4))))))))))<=0]/\[[-1<(skoXC1 skoXC1 (1/6+(skoXC1 skoXC1 (3/40))))]/\[(skoXC1 (-1+(skoXC1 skoXC1 (-1/6+(skoXC1 skoXC1 (-3/40))))))<=0]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]].

% In SMTLib2 format:
(declare-fun skoXC1 () Real) (assert (and (<= (* skoXC1 (* skoXC1 (+ (/ (- 1.) 6.) (* skoXC1 (* skoXC1 (+ (/ (- 3.) 40.) (* skoXC1 (* skoXC1 (/ (- 5.) 112.))))))))) 1.) (and (<= (* skoXC1 (* skoXC1 (+ (/ 1. 3.) (* skoXC1 (* skoXC1 (+ (/ 3. 20.) (* skoXC1 (* skoXC1 (/ 5. 56.))))))))) 1.) (and (<= (* skoXC1 (* skoXC1 (* skoXC1 (* skoXC1 (+ (/ (- 17.) 120.) (* skoXC1 (* skoXC1 (+ (/ (- 27.) 280.) (* skoXC1 (* skoXC1 (/ 5. 224.))))))))))) 0.) (and (<= (* skoXC1 (* skoXC1 (* skoXC1 (* skoXC1 (+ (/ (- 13.) 60.) (* skoXC1 (* skoXC1 (+ (/ (- 9.) 280.) (* skoXC1 (* skoXC1 (/ (- 5.) 28.))))))))))) 0.) (and (<= (* skoXC1 (* skoXC1 (+ (/ (- 1.) 2.) (* skoXC1 (* skoXC1 (+ (/ 7. 120.) (* skoXC1 (* skoXC1 (+ (/ 33. 560.) (* skoXC1 (* skoXC1 (/ (- 5.) 112.)))))))))))) 0.) (and (<= (* skoXC1 (* skoXC1 (+ (/ (- 1.) 6.) (* skoXC1 (* skoXC1 (+ (/ (- 3.) 40.) (* skoXC1 (* skoXC1 (/ (- 5.) 112.))))))))) 1.) (and (<= (* skoXC1 (+ (- 1.) (* skoXC1 (* skoXC1 (+ (/ 1. 3.) (* skoXC1 (* skoXC1 (+ (/ 3. 20.) (* skoXC1 (* skoXC1 (/ 5. 56.))))))))))) 0.) (and (<= (* skoXC1 (* skoXC1 (* skoXC1 (* skoXC1 (+ (/ (- 80.) 3.) (* skoXC1 (* skoXC1 (+ (/ 128. 3.) (* skoXC1 (* skoXC1 (+ (/ (- 55.) 3.) (* skoXC1 (* skoXC1 (/ 5. 3.)))))))))))))) 0.) (and (<= (* skoXC1 (* skoXC1 (+ 256. (* skoXC1 (* skoXC1 (+ (- 160.) (* skoXC1 (* skoXC1 (+ 32. (* skoXC1 (* skoXC1 (- 1.)))))))))))) 128.) (and (<= (* skoXC1 (* skoXC1 (/ 1. 3.))) 1.) (and (<= (* skoXC1 (+ (- 1.) (* skoXC1 (* skoXC1 (/ (- 1.) 6.))))) 0.) (and (<= (* skoXC1 (* skoXC1 (* skoXC1 (* skoXC1 (/ (- 2.) 3.))))) 0.) (and (<= (* skoXC1 skoXC1) 2.) (and (<= (* skoXC1 (* skoXC1 (+ (/ (- 1.) 2.) (* skoXC1 (* skoXC1 (/ (- 1.) 6.)))))) 0.) (and (<= (* skoXC1 (* skoXC1 (/ (- 1.) 6.))) 1.) (and (<= (* skoXC1 (+ (- 1.) (* skoXC1 (* skoXC1 (/ 1. 3.))))) 0.) (and (> (/ 7. 8.) skoXC1) (and (> skoXC1 0.) (and (> (* skoXC1 (* skoXC1 (/ (- 1.) 2.))) (- 3.)) (and (<= (* skoXC1 (* skoXC1 (/ 1. 2.))) 3.) (and (<= (* skoXC1 (* skoXC1 (+ 24. (* skoXC1 (* skoXC1 (+ (- 10.) (* skoXC1 skoXC1))))))) 16.) (and (> (* skoXC1 (* skoXC1 (+ (- 80.) (* skoXC1 (* skoXC1 (+ 40. (* skoXC1 (* skoXC1 (+ (- 6.) (* skoXC1 (* skoXC1 (/ 1. 8.)))))))))))) (- 48.)) (and (<= (* skoXC1 (* skoXC1 (+ 80. (* skoXC1 (* skoXC1 (+ (- 40.) (* skoXC1 (* skoXC1 (+ 6. (* skoXC1 (* skoXC1 (/ (- 1.) 8.)))))))))))) 48.) (and (> (* skoXC1 skoXC1) 0.) (and (<= (* skoXC1 (+ (- 1.) (* skoXC1 (* skoXC1 (+ (/ 1. 3.) (* skoXC1 (* skoXC1 (/ 3. 20.)))))))) 0.) (and (<= (* skoXC1 (* skoXC1 (+ (/ (- 1.) 6.) (* skoXC1 (* skoXC1 (/ (- 3.) 40.)))))) 1.) (and (<= (* skoXC1 (* skoXC1 (+ (/ (- 1.) 2.) (* skoXC1 (* skoXC1 (+ (/ 7. 120.) (* skoXC1 (* skoXC1 (/ (- 3.) 40.))))))))) 0.) (and (<= (* skoXC1 (* skoXC1 (* skoXC1 (* skoXC1 (+ (/ (- 13.) 60.) (* skoXC1 (* skoXC1 (/ (- 3.) 10.)))))))) 0.) (and (<= (* skoXC1 (* skoXC1 (* skoXC1 (* skoXC1 (+ (/ (- 17.) 120.) (* skoXC1 (* skoXC1 (/ 3. 80.)))))))) 0.) (and (<= (* skoXC1 (* skoXC1 (+ (/ 1. 3.) (* skoXC1 (* skoXC1 (/ 3. 20.)))))) 1.) (and (<= (* skoXC1 (* skoXC1 (* skoXC1 (* skoXC1 (+ (/ 32. 15.) (* skoXC1 (* skoXC1 (+ (/ (- 296.) 15.) (* skoXC1 (* skoXC1 (+ (/ 391. 15.) (* skoXC1 (* skoXC1 (+ (/ (- 146.) 15.) (* skoXC1 (* skoXC1 (/ 3. 4.))))))))))))))))) 0.) (and (> (* skoXC1 (* skoXC1 (+ (/ 1. 6.) (* skoXC1 (* skoXC1 (/ 3. 40.)))))) (- 1.)) (<= (* skoXC1 (+ (- 1.) (* skoXC1 (* skoXC1 (+ (/ (- 1.) 6.) (* skoXC1 (* skoXC1 (/ (- 3.) 40.)))))))) 0.))))))))))))))))))))))))))))))))))

% In GRF format:
(sequent " MetiTarski formula " (antecedent (<= (* skoXC1 (* skoXC1 (+ (/ (- 1.) 6.) (* skoXC1 (* skoXC1 (+ (/ (- 3.) 40.) (* skoXC1 (* skoXC1 (/ (- 5.) 112.))))))))) 1.) (<= (* skoXC1 (* skoXC1 (+ (/ 1. 3.) (* skoXC1 (* skoXC1 (+ (/ 3. 20.) (* skoXC1 (* skoXC1 (/ 5. 56.))))))))) 1.) (<= (* skoXC1 (* skoXC1 (* skoXC1 (* skoXC1 (+ (/ (- 17.) 120.) (* skoXC1 (* skoXC1 (+ (/ (- 27.) 280.) (* skoXC1 (* skoXC1 (/ 5. 224.))))))))))) 0.) (<= (* skoXC1 (* skoXC1 (* skoXC1 (* skoXC1 (+ (/ (- 13.) 60.) (* skoXC1 (* skoXC1 (+ (/ (- 9.) 280.) (* skoXC1 (* skoXC1 (/ (- 5.) 28.))))))))))) 0.) (<= (* skoXC1 (* skoXC1 (+ (/ (- 1.) 2.) (* skoXC1 (* skoXC1 (+ (/ 7. 120.) (* skoXC1 (* skoXC1 (+ (/ 33. 560.) (* skoXC1 (* skoXC1 (/ (- 5.) 112.)))))))))))) 0.) (<= (* skoXC1 (* skoXC1 (+ (/ (- 1.) 6.) (* skoXC1 (* skoXC1 (+ (/ (- 3.) 40.) (* skoXC1 (* skoXC1 (/ (- 5.) 112.))))))))) 1.) (<= (* skoXC1 (+ (- 1.) (* skoXC1 (* skoXC1 (+ (/ 1. 3.) (* skoXC1 (* skoXC1 (+ (/ 3. 20.) (* skoXC1 (* skoXC1 (/ 5. 56.))))))))))) 0.) (<= (* skoXC1 (* skoXC1 (* skoXC1 (* skoXC1 (+ (/ (- 80.) 3.) (* skoXC1 (* skoXC1 (+ (/ 128. 3.) (* skoXC1 (* skoXC1 (+ (/ (- 55.) 3.) (* skoXC1 (* skoXC1 (/ 5. 3.)))))))))))))) 0.) (<= (* skoXC1 (* skoXC1 (+ 256. (* skoXC1 (* skoXC1 (+ (- 160.) (* skoXC1 (* skoXC1 (+ 32. (* skoXC1 (* skoXC1 (- 1.)))))))))))) 128.) (<= (* skoXC1 (* skoXC1 (/ 1. 3.))) 1.) (<= (* skoXC1 (+ (- 1.) (* skoXC1 (* skoXC1 (/ (- 1.) 6.))))) 0.) (<= (* skoXC1 (* skoXC1 (* skoXC1 (* skoXC1 (/ (- 2.) 3.))))) 0.) (<= (* skoXC1 skoXC1) 2.) (<= (* skoXC1 (* skoXC1 (+ (/ (- 1.) 2.) (* skoXC1 (* skoXC1 (/ (- 1.) 6.)))))) 0.) (<= (* skoXC1 (* skoXC1 (/ (- 1.) 6.))) 1.) (<= (* skoXC1 (+ (- 1.) (* skoXC1 (* skoXC1 (/ 1. 3.))))) 0.) (> (/ 7. 8.) skoXC1) (> skoXC1 0.) (> (* skoXC1 (* skoXC1 (/ (- 1.) 2.))) (- 3.)) (<= (* skoXC1 (* skoXC1 (/ 1. 2.))) 3.) (<= (* skoXC1 (* skoXC1 (+ 24. (* skoXC1 (* skoXC1 (+ (- 10.) (* skoXC1 skoXC1))))))) 16.) (> (* skoXC1 (* skoXC1 (+ (- 80.) (* skoXC1 (* skoXC1 (+ 40. (* skoXC1 (* skoXC1 (+ (- 6.) (* skoXC1 (* skoXC1 (/ 1. 8.)))))))))))) (- 48.)) (<= (* skoXC1 (* skoXC1 (+ 80. (* skoXC1 (* skoXC1 (+ (- 40.) (* skoXC1 (* skoXC1 (+ 6. (* skoXC1 (* skoXC1 (/ (- 1.) 8.)))))))))))) 48.) (> (* skoXC1 skoXC1) 0.) (<= (* skoXC1 (+ (- 1.) (* skoXC1 (* skoXC1 (+ (/ 1. 3.) (* skoXC1 (* skoXC1 (/ 3. 20.)))))))) 0.) (<= (* skoXC1 (* skoXC1 (+ (/ (- 1.) 6.) (* skoXC1 (* skoXC1 (/ (- 3.) 40.)))))) 1.) (<= (* skoXC1 (* skoXC1 (+ (/ (- 1.) 2.) (* skoXC1 (* skoXC1 (+ (/ 7. 120.) (* skoXC1 (* skoXC1 (/ (- 3.) 40.))))))))) 0.) (<= (* skoXC1 (* skoXC1 (* skoXC1 (* skoXC1 (+ (/ (- 13.) 60.) (* skoXC1 (* skoXC1 (/ (- 3.) 10.)))))))) 0.) (<= (* skoXC1 (* skoXC1 (* skoXC1 (* skoXC1 (+ (/ (- 17.) 120.) (* skoXC1 (* skoXC1 (/ 3. 80.)))))))) 0.) (<= (* skoXC1 (* skoXC1 (+ (/ 1. 3.) (* skoXC1 (* skoXC1 (/ 3. 20.)))))) 1.) (<= (* skoXC1 (* skoXC1 (* skoXC1 (* skoXC1 (+ (/ 32. 15.) (* skoXC1 (* skoXC1 (+ (/ (- 296.) 15.) (* skoXC1 (* skoXC1 (+ (/ 391. 15.) (* skoXC1 (* skoXC1 (+ (/ (- 146.) 15.) (* skoXC1 (* skoXC1 (/ 3. 4.))))))))))))))))) 0.) (> (* skoXC1 (* skoXC1 (+ (/ 1. 6.) (* skoXC1 (* skoXC1 (/ 3. 40.)))))) (- 1.))) (succedent (> (* skoXC1 (+ (- 1.) (* skoXC1 (* skoXC1 (+ (/ (- 1.) 6.) (* skoXC1 (* skoXC1 (/ (- 3.) 40.)))))))) 0.)))
-----[end problem]-----

-----[begin problem]-----
% In Mathematica format:
Timing[Resolve[Exists[{skoXC1}, And[skoXC1*skoXC1*(256+skoXC1*skoXC1*(-160+skoXC1*skoXC1*(32+skoXC1*skoXC1*-1)))<=128,skoXC1*skoXC1*((1/3)+skoXC1*skoXC1*((3/20)+skoXC1*skoXC1*(5/56)))<=1,skoXC1*skoXC1*skoXC1*skoXC1*((-17/120)+skoXC1*skoXC1*((-27/280)+skoXC1*skoXC1*(5/224)))<=0,skoXC1*skoXC1*skoXC1*skoXC1*((-13/60)+skoXC1*skoXC1*((-9/280)+skoXC1*skoXC1*(-5/28)))<=0,skoXC1*skoXC1*((-1/2)+skoXC1*skoXC1*((7/120)+skoXC1*skoXC1*((33/560)+skoXC1*skoXC1*(-5/112))))<=0,skoXC1*skoXC1*((-1/6)+skoXC1*skoXC1*((-3/40)+skoXC1*skoXC1*(-5/112)))<=1,skoXC1*(-1+skoXC1*skoXC1*((1/3)+skoXC1*skoXC1*((3/20)+skoXC1*skoXC1*(5/56))))<=0,skoXC1*skoXC1*skoXC1*skoXC1*((-80/3)+skoXC1*skoXC1*((128/3)+skoXC1*skoXC1*((-55/3)+skoXC1*skoXC1*(5/3))))<=0,skoXC1*skoXC1*(256+skoXC1*skoXC1*(-160+skoXC1*skoXC1*(32+skoXC1*skoXC1*-1)))<=128,skoXC1*skoXC1*(1/3)<=1,skoXC1*(-1+skoXC1*skoXC1*(-1/6))<=0,skoXC1*skoXC1*skoXC1*skoXC1*(-2/3)<=0,skoXC1*skoXC1<=2,skoXC1*skoXC1*((-1/2)+skoXC1*skoXC1*(-1/6))<=0,skoXC1*skoXC1*(-1/6)<=1,skoXC1*(-1+skoXC1*skoXC1*(1/3))<=0,(7/8)>skoXC1,skoXC1>0,skoXC1*skoXC1*(-1/2)>-3,skoXC1*skoXC1*(1/2)<=3,skoXC1*skoXC1*(24+skoXC1*skoXC1*(-10+skoXC1*skoXC1))<=16,skoXC1*skoXC1*(-80+skoXC1*skoXC1*(40+skoXC1*skoXC1*(-6+skoXC1*skoXC1*(1/8))))>-48,skoXC1*skoXC1*(80+skoXC1*skoXC1*(-40+skoXC1*skoXC1*(6+skoXC1*skoXC1*(-1/8))))<=48,skoXC1*skoXC1>0,skoXC1*(-1+skoXC1*skoXC1*((1/3)+skoXC1*skoXC1*(3/20)))<=0,skoXC1*skoXC1*((-1/6)+skoXC1*skoXC1*(-3/40))<=1,skoXC1*skoXC1*((-1/2)+skoXC1*skoXC1*((7/120)+skoXC1*skoXC1*(-3/40)))<=0,skoXC1*skoXC1*skoXC1*skoXC1*((-13/60)+skoXC1*skoXC1*(-3/10))<=0,skoXC1*skoXC1*skoXC1*skoXC1*((-17/120)+skoXC1*skoXC1*(3/80))<=0,skoXC1*skoXC1*((1/3)+skoXC1*skoXC1*(3/20))<=1,skoXC1*skoXC1*skoXC1*skoXC1*((32/15)+skoXC1*skoXC1*((-296/15)+skoXC1*skoXC1*((391/15)+skoXC1*skoXC1*((-146/15)+skoXC1*skoXC1*(3/4)))))<=0,skoXC1*skoXC1*((1/6)+skoXC1*skoXC1*(3/40))>-1,skoXC1*(-1+skoXC1*skoXC1*((-1/6)+skoXC1*skoXC1*(-3/40)))<=0]], Reals]]

% In QepcadB format:
(E skoXC1) [[(skoXC1 skoXC1 (256+(skoXC1 skoXC1 (-160+(skoXC1 skoXC1 (32+(skoXC1 skoXC1 (-1))))))))<=128]/\[[(skoXC1 skoXC1 (1/3+(skoXC1 skoXC1 (3/20+(skoXC1 skoXC1 (5/56))))))<=1]/\[[(skoXC1 skoXC1 skoXC1 skoXC1 (-17/120+(skoXC1 skoXC1 (-27/280+(skoXC1 skoXC1 (5/224))))))<=0]/\[[(skoXC1 skoXC1 skoXC1 skoXC1 (-13/60+(skoXC1 skoXC1 (-9/280+(skoXC1 skoXC1 (-5/28))))))<=0]/\[[(skoXC1 skoXC1 (-1/2+(skoXC1 skoXC1 (7/120+(skoXC1 skoXC1 (33/560+(skoXC1 skoXC1 (-5/112))))))))<=0]/\[[(skoXC1 skoXC1 (-1/6+(skoXC1 skoXC1 (-3/40+(skoXC1 skoXC1 (-5/112))))))<=1]/\[[(skoXC1 (-1+(skoXC1 skoXC1 (1/3+(skoXC1 skoXC1 (3/20+(skoXC1 skoXC1 (5/56))))))))<=0]/\[[(skoXC1 skoXC1 skoXC1 skoXC1 (-80/3+(skoXC1 skoXC1 (128/3+(skoXC1 skoXC1 (-55/3+(skoXC1 skoXC1 (5/3))))))))<=0]/\[[(skoXC1 skoXC1 (256+(skoXC1 skoXC1 (-160+(skoXC1 skoXC1 (32+(skoXC1 skoXC1 (-1))))))))<=128]/\[[(skoXC1 skoXC1 (1/3))<=1]/\[[(skoXC1 (-1+(skoXC1 skoXC1 (-1/6))))<=0]/\[[(skoXC1 skoXC1 skoXC1 skoXC1 (-2/3))<=0]/\[[(skoXC1 skoXC1)<=2]/\[[(skoXC1 skoXC1 (-1/2+(skoXC1 skoXC1 (-1/6))))<=0]/\[[(skoXC1 skoXC1 (-1/6))<=1]/\[[(skoXC1 (-1+(skoXC1 skoXC1 (1/3))))<=0]/\[[skoXC1<7/8]/\[[0<skoXC1]/\[[-3<(skoXC1 skoXC1 (-1/2))]/\[[(skoXC1 skoXC1 (1/2))<=3]/\[[(skoXC1 skoXC1 (24+(skoXC1 skoXC1 (-10+(skoXC1 skoXC1)))))<=16]/\[[-48<(skoXC1 skoXC1 (-80+(skoXC1 skoXC1 (40+(skoXC1 skoXC1 (-6+(skoXC1 skoXC1 (1/8))))))))]/\[[(skoXC1 skoXC1 (80+(skoXC1 skoXC1 (-40+(skoXC1 skoXC1 (6+(skoXC1 skoXC1 (-1/8))))))))<=48]/\[[0<(skoXC1 skoXC1)]/\[[(skoXC1 (-1+(skoXC1 skoXC1 (1/3+(skoXC1 skoXC1 (3/20))))))<=0]/\[[(skoXC1 skoXC1 (-1/6+(skoXC1 skoXC1 (-3/40))))<=1]/\[[(skoXC1 skoXC1 (-1/2+(skoXC1 skoXC1 (7/120+(skoXC1 skoXC1 (-3/40))))))<=0]/\[[(skoXC1 skoXC1 skoXC1 skoXC1 (-13/60+(skoXC1 skoXC1 (-3/10))))<=0]/\[[(skoXC1 skoXC1 skoXC1 skoXC1 (-17/120+(skoXC1 skoXC1 (3/80))))<=0]/\[[(skoXC1 skoXC1 (1/3+(skoXC1 skoXC1 (3/20))))<=1]/\[[(skoXC1 skoXC1 skoXC1 skoXC1 (32/15+(skoXC1 skoXC1 (-296/15+(skoXC1 skoXC1 (391/15+(skoXC1 skoXC1 (-146/15+(skoXC1 skoXC1 (3/4))))))))))<=0]/\[[-1<(skoXC1 skoXC1 (1/6+(skoXC1 skoXC1 (3/40))))]/\[(skoXC1 (-1+(skoXC1 skoXC1 (-1/6+(skoXC1 skoXC1 (-3/40))))))<=0]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]].

% In SMTLib2 format:
(declare-fun skoXC1 () Real) (assert (and (<= (* skoXC1 (* skoXC1 (+ 256. (* skoXC1 (* skoXC1 (+ (- 160.) (* skoXC1 (* skoXC1 (+ 32. (* skoXC1 (* skoXC1 (- 1.)))))))))))) 128.) (and (<= (* skoXC1 (* skoXC1 (+ (/ 1. 3.) (* skoXC1 (* skoXC1 (+ (/ 3. 20.) (* skoXC1 (* skoXC1 (/ 5. 56.))))))))) 1.) (and (<= (* skoXC1 (* skoXC1 (* skoXC1 (* skoXC1 (+ (/ (- 17.) 120.) (* skoXC1 (* skoXC1 (+ (/ (- 27.) 280.) (* skoXC1 (* skoXC1 (/ 5. 224.))))))))))) 0.) (and (<= (* skoXC1 (* skoXC1 (* skoXC1 (* skoXC1 (+ (/ (- 13.) 60.) (* skoXC1 (* skoXC1 (+ (/ (- 9.) 280.) (* skoXC1 (* skoXC1 (/ (- 5.) 28.))))))))))) 0.) (and (<= (* skoXC1 (* skoXC1 (+ (/ (- 1.) 2.) (* skoXC1 (* skoXC1 (+ (/ 7. 120.) (* skoXC1 (* skoXC1 (+ (/ 33. 560.) (* skoXC1 (* skoXC1 (/ (- 5.) 112.)))))))))))) 0.) (and (<= (* skoXC1 (* skoXC1 (+ (/ (- 1.) 6.) (* skoXC1 (* skoXC1 (+ (/ (- 3.) 40.) (* skoXC1 (* skoXC1 (/ (- 5.) 112.))))))))) 1.) (and (<= (* skoXC1 (+ (- 1.) (* skoXC1 (* skoXC1 (+ (/ 1. 3.) (* skoXC1 (* skoXC1 (+ (/ 3. 20.) (* skoXC1 (* skoXC1 (/ 5. 56.))))))))))) 0.) (and (<= (* skoXC1 (* skoXC1 (* skoXC1 (* skoXC1 (+ (/ (- 80.) 3.) (* skoXC1 (* skoXC1 (+ (/ 128. 3.) (* skoXC1 (* skoXC1 (+ (/ (- 55.) 3.) (* skoXC1 (* skoXC1 (/ 5. 3.)))))))))))))) 0.) (and (<= (* skoXC1 (* skoXC1 (+ 256. (* skoXC1 (* skoXC1 (+ (- 160.) (* skoXC1 (* skoXC1 (+ 32. (* skoXC1 (* skoXC1 (- 1.)))))))))))) 128.) (and (<= (* skoXC1 (* skoXC1 (/ 1. 3.))) 1.) (and (<= (* skoXC1 (+ (- 1.) (* skoXC1 (* skoXC1 (/ (- 1.) 6.))))) 0.) (and (<= (* skoXC1 (* skoXC1 (* skoXC1 (* skoXC1 (/ (- 2.) 3.))))) 0.) (and (<= (* skoXC1 skoXC1) 2.) (and (<= (* skoXC1 (* skoXC1 (+ (/ (- 1.) 2.) (* skoXC1 (* skoXC1 (/ (- 1.) 6.)))))) 0.) (and (<= (* skoXC1 (* skoXC1 (/ (- 1.) 6.))) 1.) (and (<= (* skoXC1 (+ (- 1.) (* skoXC1 (* skoXC1 (/ 1. 3.))))) 0.) (and (> (/ 7. 8.) skoXC1) (and (> skoXC1 0.) (and (> (* skoXC1 (* skoXC1 (/ (- 1.) 2.))) (- 3.)) (and (<= (* skoXC1 (* skoXC1 (/ 1. 2.))) 3.) (and (<= (* skoXC1 (* skoXC1 (+ 24. (* skoXC1 (* skoXC1 (+ (- 10.) (* skoXC1 skoXC1))))))) 16.) (and (> (* skoXC1 (* skoXC1 (+ (- 80.) (* skoXC1 (* skoXC1 (+ 40. (* skoXC1 (* skoXC1 (+ (- 6.) (* skoXC1 (* skoXC1 (/ 1. 8.)))))))))))) (- 48.)) (and (<= (* skoXC1 (* skoXC1 (+ 80. (* skoXC1 (* skoXC1 (+ (- 40.) (* skoXC1 (* skoXC1 (+ 6. (* skoXC1 (* skoXC1 (/ (- 1.) 8.)))))))))))) 48.) (and (> (* skoXC1 skoXC1) 0.) (and (<= (* skoXC1 (+ (- 1.) (* skoXC1 (* skoXC1 (+ (/ 1. 3.) (* skoXC1 (* skoXC1 (/ 3. 20.)))))))) 0.) (and (<= (* skoXC1 (* skoXC1 (+ (/ (- 1.) 6.) (* skoXC1 (* skoXC1 (/ (- 3.) 40.)))))) 1.) (and (<= (* skoXC1 (* skoXC1 (+ (/ (- 1.) 2.) (* skoXC1 (* skoXC1 (+ (/ 7. 120.) (* skoXC1 (* skoXC1 (/ (- 3.) 40.))))))))) 0.) (and (<= (* skoXC1 (* skoXC1 (* skoXC1 (* skoXC1 (+ (/ (- 13.) 60.) (* skoXC1 (* skoXC1 (/ (- 3.) 10.)))))))) 0.) (and (<= (* skoXC1 (* skoXC1 (* skoXC1 (* skoXC1 (+ (/ (- 17.) 120.) (* skoXC1 (* skoXC1 (/ 3. 80.)))))))) 0.) (and (<= (* skoXC1 (* skoXC1 (+ (/ 1. 3.) (* skoXC1 (* skoXC1 (/ 3. 20.)))))) 1.) (and (<= (* skoXC1 (* skoXC1 (* skoXC1 (* skoXC1 (+ (/ 32. 15.) (* skoXC1 (* skoXC1 (+ (/ (- 296.) 15.) (* skoXC1 (* skoXC1 (+ (/ 391. 15.) (* skoXC1 (* skoXC1 (+ (/ (- 146.) 15.) (* skoXC1 (* skoXC1 (/ 3. 4.))))))))))))))))) 0.) (and (> (* skoXC1 (* skoXC1 (+ (/ 1. 6.) (* skoXC1 (* skoXC1 (/ 3. 40.)))))) (- 1.)) (<= (* skoXC1 (+ (- 1.) (* skoXC1 (* skoXC1 (+ (/ (- 1.) 6.) (* skoXC1 (* skoXC1 (/ (- 3.) 40.)))))))) 0.))))))))))))))))))))))))))))))))))

% In GRF format:
(sequent " MetiTarski formula " (antecedent (<= (* skoXC1 (* skoXC1 (+ 256. (* skoXC1 (* skoXC1 (+ (- 160.) (* skoXC1 (* skoXC1 (+ 32. (* skoXC1 (* skoXC1 (- 1.)))))))))))) 128.) (<= (* skoXC1 (* skoXC1 (+ (/ 1. 3.) (* skoXC1 (* skoXC1 (+ (/ 3. 20.) (* skoXC1 (* skoXC1 (/ 5. 56.))))))))) 1.) (<= (* skoXC1 (* skoXC1 (* skoXC1 (* skoXC1 (+ (/ (- 17.) 120.) (* skoXC1 (* skoXC1 (+ (/ (- 27.) 280.) (* skoXC1 (* skoXC1 (/ 5. 224.))))))))))) 0.) (<= (* skoXC1 (* skoXC1 (* skoXC1 (* skoXC1 (+ (/ (- 13.) 60.) (* skoXC1 (* skoXC1 (+ (/ (- 9.) 280.) (* skoXC1 (* skoXC1 (/ (- 5.) 28.))))))))))) 0.) (<= (* skoXC1 (* skoXC1 (+ (/ (- 1.) 2.) (* skoXC1 (* skoXC1 (+ (/ 7. 120.) (* skoXC1 (* skoXC1 (+ (/ 33. 560.) (* skoXC1 (* skoXC1 (/ (- 5.) 112.)))))))))))) 0.) (<= (* skoXC1 (* skoXC1 (+ (/ (- 1.) 6.) (* skoXC1 (* skoXC1 (+ (/ (- 3.) 40.) (* skoXC1 (* skoXC1 (/ (- 5.) 112.))))))))) 1.) (<= (* skoXC1 (+ (- 1.) (* skoXC1 (* skoXC1 (+ (/ 1. 3.) (* skoXC1 (* skoXC1 (+ (/ 3. 20.) (* skoXC1 (* skoXC1 (/ 5. 56.))))))))))) 0.) (<= (* skoXC1 (* skoXC1 (* skoXC1 (* skoXC1 (+ (/ (- 80.) 3.) (* skoXC1 (* skoXC1 (+ (/ 128. 3.) (* skoXC1 (* skoXC1 (+ (/ (- 55.) 3.) (* skoXC1 (* skoXC1 (/ 5. 3.)))))))))))))) 0.) (<= (* skoXC1 (* skoXC1 (+ 256. (* skoXC1 (* skoXC1 (+ (- 160.) (* skoXC1 (* skoXC1 (+ 32. (* skoXC1 (* skoXC1 (- 1.)))))))))))) 128.) (<= (* skoXC1 (* skoXC1 (/ 1. 3.))) 1.) (<= (* skoXC1 (+ (- 1.) (* skoXC1 (* skoXC1 (/ (- 1.) 6.))))) 0.) (<= (* skoXC1 (* skoXC1 (* skoXC1 (* skoXC1 (/ (- 2.) 3.))))) 0.) (<= (* skoXC1 skoXC1) 2.) (<= (* skoXC1 (* skoXC1 (+ (/ (- 1.) 2.) (* skoXC1 (* skoXC1 (/ (- 1.) 6.)))))) 0.) (<= (* skoXC1 (* skoXC1 (/ (- 1.) 6.))) 1.) (<= (* skoXC1 (+ (- 1.) (* skoXC1 (* skoXC1 (/ 1. 3.))))) 0.) (> (/ 7. 8.) skoXC1) (> skoXC1 0.) (> (* skoXC1 (* skoXC1 (/ (- 1.) 2.))) (- 3.)) (<= (* skoXC1 (* skoXC1 (/ 1. 2.))) 3.) (<= (* skoXC1 (* skoXC1 (+ 24. (* skoXC1 (* skoXC1 (+ (- 10.) (* skoXC1 skoXC1))))))) 16.) (> (* skoXC1 (* skoXC1 (+ (- 80.) (* skoXC1 (* skoXC1 (+ 40. (* skoXC1 (* skoXC1 (+ (- 6.) (* skoXC1 (* skoXC1 (/ 1. 8.)))))))))))) (- 48.)) (<= (* skoXC1 (* skoXC1 (+ 80. (* skoXC1 (* skoXC1 (+ (- 40.) (* skoXC1 (* skoXC1 (+ 6. (* skoXC1 (* skoXC1 (/ (- 1.) 8.)))))))))))) 48.) (> (* skoXC1 skoXC1) 0.) (<= (* skoXC1 (+ (- 1.) (* skoXC1 (* skoXC1 (+ (/ 1. 3.) (* skoXC1 (* skoXC1 (/ 3. 20.)))))))) 0.) (<= (* skoXC1 (* skoXC1 (+ (/ (- 1.) 6.) (* skoXC1 (* skoXC1 (/ (- 3.) 40.)))))) 1.) (<= (* skoXC1 (* skoXC1 (+ (/ (- 1.) 2.) (* skoXC1 (* skoXC1 (+ (/ 7. 120.) (* skoXC1 (* skoXC1 (/ (- 3.) 40.))))))))) 0.) (<= (* skoXC1 (* skoXC1 (* skoXC1 (* skoXC1 (+ (/ (- 13.) 60.) (* skoXC1 (* skoXC1 (/ (- 3.) 10.)))))))) 0.) (<= (* skoXC1 (* skoXC1 (* skoXC1 (* skoXC1 (+ (/ (- 17.) 120.) (* skoXC1 (* skoXC1 (/ 3. 80.)))))))) 0.) (<= (* skoXC1 (* skoXC1 (+ (/ 1. 3.) (* skoXC1 (* skoXC1 (/ 3. 20.)))))) 1.) (<= (* skoXC1 (* skoXC1 (* skoXC1 (* skoXC1 (+ (/ 32. 15.) (* skoXC1 (* skoXC1 (+ (/ (- 296.) 15.) (* skoXC1 (* skoXC1 (+ (/ 391. 15.) (* skoXC1 (* skoXC1 (+ (/ (- 146.) 15.) (* skoXC1 (* skoXC1 (/ 3. 4.))))))))))))))))) 0.) (> (* skoXC1 (* skoXC1 (+ (/ 1. 6.) (* skoXC1 (* skoXC1 (/ 3. 40.)))))) (- 1.))) (succedent (> (* skoXC1 (+ (- 1.) (* skoXC1 (* skoXC1 (+ (/ (- 1.) 6.) (* skoXC1 (* skoXC1 (/ (- 3.) 40.)))))))) 0.)))
-----[end problem]-----

-----[begin problem]-----
% In Mathematica format:
Timing[Resolve[Exists[{skoXC1}, And[skoXC1*skoXC1*skoXC1*skoXC1*((32/15)+skoXC1*skoXC1*((-272/105)+skoXC1*skoXC1*((-1163/105)+skoXC1*skoXC1*((1753/105)+skoXC1*skoXC1*((-169/28)+skoXC1*skoXC1*(25/56))))))<=0,skoXC1*skoXC1*(-256+skoXC1*skoXC1*(160+skoXC1*skoXC1*(-32+skoXC1*skoXC1)))>-128,skoXC1*skoXC1*((1/3)+skoXC1*skoXC1*((3/20)+skoXC1*skoXC1*(5/56)))<=1,skoXC1*skoXC1*skoXC1*skoXC1*((-17/120)+skoXC1*skoXC1*((-27/280)+skoXC1*skoXC1*(5/224)))<=0,skoXC1*skoXC1*skoXC1*skoXC1*((-13/60)+skoXC1*skoXC1*((-9/280)+skoXC1*skoXC1*(-5/28)))<=0,skoXC1*skoXC1*((-1/2)+skoXC1*skoXC1*((7/120)+skoXC1*skoXC1*((33/560)+skoXC1*skoXC1*(-5/112))))<=0,skoXC1*skoXC1*((-1/6)+skoXC1*skoXC1*((-3/40)+skoXC1*skoXC1*(-5/112)))<=1,skoXC1*(-1+skoXC1*skoXC1*((1/3)+skoXC1*skoXC1*((3/20)+skoXC1*skoXC1*(5/56))))<=0,skoXC1*skoXC1*skoXC1*skoXC1*((-80/3)+skoXC1*skoXC1*((128/3)+skoXC1*skoXC1*((-55/3)+skoXC1*skoXC1*(5/3))))<=0,skoXC1*skoXC1*(256+skoXC1*skoXC1*(-160+skoXC1*skoXC1*(32+skoXC1*skoXC1*-1)))<=128,skoXC1*skoXC1*(1/3)<=1,skoXC1*(-1+skoXC1*skoXC1*(-1/6))<=0,skoXC1*skoXC1*skoXC1*skoXC1*(-2/3)<=0,skoXC1*skoXC1<=2,skoXC1*skoXC1*((-1/2)+skoXC1*skoXC1*(-1/6))<=0,skoXC1*skoXC1*(-1/6)<=1,skoXC1*(-1+skoXC1*skoXC1*(1/3))<=0,(7/8)>skoXC1,skoXC1>0,skoXC1*skoXC1*(-1/2)>-3,skoXC1*skoXC1*(1/2)<=3,skoXC1*skoXC1*(24+skoXC1*skoXC1*(-10+skoXC1*skoXC1))<=16,skoXC1*skoXC1*(-80+skoXC1*skoXC1*(40+skoXC1*skoXC1*(-6+skoXC1*skoXC1*(1/8))))>-48,skoXC1*skoXC1*(80+skoXC1*skoXC1*(-40+skoXC1*skoXC1*(6+skoXC1*skoXC1*(-1/8))))<=48,skoXC1*skoXC1>0,skoXC1*(-1+skoXC1*skoXC1*((1/3)+skoXC1*skoXC1*(3/20)))<=0,skoXC1*skoXC1*((-1/6)+skoXC1*skoXC1*(-3/40))<=1,skoXC1*skoXC1*((-1/2)+skoXC1*skoXC1*((7/120)+skoXC1*skoXC1*(-3/40)))<=0,skoXC1*skoXC1*skoXC1*skoXC1*((-13/60)+skoXC1*skoXC1*(-3/10))<=0,skoXC1*skoXC1*skoXC1*skoXC1*((-17/120)+skoXC1*skoXC1*(3/80))<=0,skoXC1*skoXC1*((1/3)+skoXC1*skoXC1*(3/20))<=1,skoXC1*skoXC1*skoXC1*skoXC1*((32/15)+skoXC1*skoXC1*((-296/15)+skoXC1*skoXC1*((391/15)+skoXC1*skoXC1*((-146/15)+skoXC1*skoXC1*(3/4)))))<=0,skoXC1*skoXC1*((1/6)+skoXC1*skoXC1*(3/40))>-1,skoXC1*(-1+skoXC1*skoXC1*((-1/6)+skoXC1*skoXC1*(-3/40)))<=0]], Reals]]

% In QepcadB format:
(E skoXC1) [[(skoXC1 skoXC1 skoXC1 skoXC1 (32/15+(skoXC1 skoXC1 (-272/105+(skoXC1 skoXC1 (-1163/105+(skoXC1 skoXC1 (1753/105+(skoXC1 skoXC1 (-169/28+(skoXC1 skoXC1 (25/56))))))))))))<=0]/\[[-128<(skoXC1 skoXC1 (-256+(skoXC1 skoXC1 (160+(skoXC1 skoXC1 (-32+(skoXC1 skoXC1)))))))]/\[[(skoXC1 skoXC1 (1/3+(skoXC1 skoXC1 (3/20+(skoXC1 skoXC1 (5/56))))))<=1]/\[[(skoXC1 skoXC1 skoXC1 skoXC1 (-17/120+(skoXC1 skoXC1 (-27/280+(skoXC1 skoXC1 (5/224))))))<=0]/\[[(skoXC1 skoXC1 skoXC1 skoXC1 (-13/60+(skoXC1 skoXC1 (-9/280+(skoXC1 skoXC1 (-5/28))))))<=0]/\[[(skoXC1 skoXC1 (-1/2+(skoXC1 skoXC1 (7/120+(skoXC1 skoXC1 (33/560+(skoXC1 skoXC1 (-5/112))))))))<=0]/\[[(skoXC1 skoXC1 (-1/6+(skoXC1 skoXC1 (-3/40+(skoXC1 skoXC1 (-5/112))))))<=1]/\[[(skoXC1 (-1+(skoXC1 skoXC1 (1/3+(skoXC1 skoXC1 (3/20+(skoXC1 skoXC1 (5/56))))))))<=0]/\[[(skoXC1 skoXC1 skoXC1 skoXC1 (-80/3+(skoXC1 skoXC1 (128/3+(skoXC1 skoXC1 (-55/3+(skoXC1 skoXC1 (5/3))))))))<=0]/\[[(skoXC1 skoXC1 (256+(skoXC1 skoXC1 (-160+(skoXC1 skoXC1 (32+(skoXC1 skoXC1 (-1))))))))<=128]/\[[(skoXC1 skoXC1 (1/3))<=1]/\[[(skoXC1 (-1+(skoXC1 skoXC1 (-1/6))))<=0]/\[[(skoXC1 skoXC1 skoXC1 skoXC1 (-2/3))<=0]/\[[(skoXC1 skoXC1)<=2]/\[[(skoXC1 skoXC1 (-1/2+(skoXC1 skoXC1 (-1/6))))<=0]/\[[(skoXC1 skoXC1 (-1/6))<=1]/\[[(skoXC1 (-1+(skoXC1 skoXC1 (1/3))))<=0]/\[[skoXC1<7/8]/\[[0<skoXC1]/\[[-3<(skoXC1 skoXC1 (-1/2))]/\[[(skoXC1 skoXC1 (1/2))<=3]/\[[(skoXC1 skoXC1 (24+(skoXC1 skoXC1 (-10+(skoXC1 skoXC1)))))<=16]/\[[-48<(skoXC1 skoXC1 (-80+(skoXC1 skoXC1 (40+(skoXC1 skoXC1 (-6+(skoXC1 skoXC1 (1/8))))))))]/\[[(skoXC1 skoXC1 (80+(skoXC1 skoXC1 (-40+(skoXC1 skoXC1 (6+(skoXC1 skoXC1 (-1/8))))))))<=48]/\[[0<(skoXC1 skoXC1)]/\[[(skoXC1 (-1+(skoXC1 skoXC1 (1/3+(skoXC1 skoXC1 (3/20))))))<=0]/\[[(skoXC1 skoXC1 (-1/6+(skoXC1 skoXC1 (-3/40))))<=1]/\[[(skoXC1 skoXC1 (-1/2+(skoXC1 skoXC1 (7/120+(skoXC1 skoXC1 (-3/40))))))<=0]/\[[(skoXC1 skoXC1 skoXC1 skoXC1 (-13/60+(skoXC1 skoXC1 (-3/10))))<=0]/\[[(skoXC1 skoXC1 skoXC1 skoXC1 (-17/120+(skoXC1 skoXC1 (3/80))))<=0]/\[[(skoXC1 skoXC1 (1/3+(skoXC1 skoXC1 (3/20))))<=1]/\[[(skoXC1 skoXC1 skoXC1 skoXC1 (32/15+(skoXC1 skoXC1 (-296/15+(skoXC1 skoXC1 (391/15+(skoXC1 skoXC1 (-146/15+(skoXC1 skoXC1 (3/4))))))))))<=0]/\[[-1<(skoXC1 skoXC1 (1/6+(skoXC1 skoXC1 (3/40))))]/\[(skoXC1 (-1+(skoXC1 skoXC1 (-1/6+(skoXC1 skoXC1 (-3/40))))))<=0]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]].

% In SMTLib2 format:
(declare-fun skoXC1 () Real) (assert (and (<= (* skoXC1 (* skoXC1 (* skoXC1 (* skoXC1 (+ (/ 32. 15.) (* skoXC1 (* skoXC1 (+ (/ (- 272.) 105.) (* skoXC1 (* skoXC1 (+ (/ (- 1163.) 105.) (* skoXC1 (* skoXC1 (+ (/ 1753. 105.) (* skoXC1 (* skoXC1 (+ (/ (- 169.) 28.) (* skoXC1 (* skoXC1 (/ 25. 56.)))))))))))))))))))) 0.) (and (> (* skoXC1 (* skoXC1 (+ (- 256.) (* skoXC1 (* skoXC1 (+ 160. (* skoXC1 (* skoXC1 (+ (- 32.) (* skoXC1 skoXC1)))))))))) (- 128.)) (and (<= (* skoXC1 (* skoXC1 (+ (/ 1. 3.) (* skoXC1 (* skoXC1 (+ (/ 3. 20.) (* skoXC1 (* skoXC1 (/ 5. 56.))))))))) 1.) (and (<= (* skoXC1 (* skoXC1 (* skoXC1 (* skoXC1 (+ (/ (- 17.) 120.) (* skoXC1 (* skoXC1 (+ (/ (- 27.) 280.) (* skoXC1 (* skoXC1 (/ 5. 224.))))))))))) 0.) (and (<= (* skoXC1 (* skoXC1 (* skoXC1 (* skoXC1 (+ (/ (- 13.) 60.) (* skoXC1 (* skoXC1 (+ (/ (- 9.) 280.) (* skoXC1 (* skoXC1 (/ (- 5.) 28.))))))))))) 0.) (and (<= (* skoXC1 (* skoXC1 (+ (/ (- 1.) 2.) (* skoXC1 (* skoXC1 (+ (/ 7. 120.) (* skoXC1 (* skoXC1 (+ (/ 33. 560.) (* skoXC1 (* skoXC1 (/ (- 5.) 112.)))))))))))) 0.) (and (<= (* skoXC1 (* skoXC1 (+ (/ (- 1.) 6.) (* skoXC1 (* skoXC1 (+ (/ (- 3.) 40.) (* skoXC1 (* skoXC1 (/ (- 5.) 112.))))))))) 1.) (and (<= (* skoXC1 (+ (- 1.) (* skoXC1 (* skoXC1 (+ (/ 1. 3.) (* skoXC1 (* skoXC1 (+ (/ 3. 20.) (* skoXC1 (* skoXC1 (/ 5. 56.))))))))))) 0.) (and (<= (* skoXC1 (* skoXC1 (* skoXC1 (* skoXC1 (+ (/ (- 80.) 3.) (* skoXC1 (* skoXC1 (+ (/ 128. 3.) (* skoXC1 (* skoXC1 (+ (/ (- 55.) 3.) (* skoXC1 (* skoXC1 (/ 5. 3.)))))))))))))) 0.) (and (<= (* skoXC1 (* skoXC1 (+ 256. (* skoXC1 (* skoXC1 (+ (- 160.) (* skoXC1 (* skoXC1 (+ 32. (* skoXC1 (* skoXC1 (- 1.)))))))))))) 128.) (and (<= (* skoXC1 (* skoXC1 (/ 1. 3.))) 1.) (and (<= (* skoXC1 (+ (- 1.) (* skoXC1 (* skoXC1 (/ (- 1.) 6.))))) 0.) (and (<= (* skoXC1 (* skoXC1 (* skoXC1 (* skoXC1 (/ (- 2.) 3.))))) 0.) (and (<= (* skoXC1 skoXC1) 2.) (and (<= (* skoXC1 (* skoXC1 (+ (/ (- 1.) 2.) (* skoXC1 (* skoXC1 (/ (- 1.) 6.)))))) 0.) (and (<= (* skoXC1 (* skoXC1 (/ (- 1.) 6.))) 1.) (and (<= (* skoXC1 (+ (- 1.) (* skoXC1 (* skoXC1 (/ 1. 3.))))) 0.) (and (> (/ 7. 8.) skoXC1) (and (> skoXC1 0.) (and (> (* skoXC1 (* skoXC1 (/ (- 1.) 2.))) (- 3.)) (and (<= (* skoXC1 (* skoXC1 (/ 1. 2.))) 3.) (and (<= (* skoXC1 (* skoXC1 (+ 24. (* skoXC1 (* skoXC1 (+ (- 10.) (* skoXC1 skoXC1))))))) 16.) (and (> (* skoXC1 (* skoXC1 (+ (- 80.) (* skoXC1 (* skoXC1 (+ 40. (* skoXC1 (* skoXC1 (+ (- 6.) (* skoXC1 (* skoXC1 (/ 1. 8.)))))))))))) (- 48.)) (and (<= (* skoXC1 (* skoXC1 (+ 80. (* skoXC1 (* skoXC1 (+ (- 40.) (* skoXC1 (* skoXC1 (+ 6. (* skoXC1 (* skoXC1 (/ (- 1.) 8.)))))))))))) 48.) (and (> (* skoXC1 skoXC1) 0.) (and (<= (* skoXC1 (+ (- 1.) (* skoXC1 (* skoXC1 (+ (/ 1. 3.) (* skoXC1 (* skoXC1 (/ 3. 20.)))))))) 0.) (and (<= (* skoXC1 (* skoXC1 (+ (/ (- 1.) 6.) (* skoXC1 (* skoXC1 (/ (- 3.) 40.)))))) 1.) (and (<= (* skoXC1 (* skoXC1 (+ (/ (- 1.) 2.) (* skoXC1 (* skoXC1 (+ (/ 7. 120.) (* skoXC1 (* skoXC1 (/ (- 3.) 40.))))))))) 0.) (and (<= (* skoXC1 (* skoXC1 (* skoXC1 (* skoXC1 (+ (/ (- 13.) 60.) (* skoXC1 (* skoXC1 (/ (- 3.) 10.)))))))) 0.) (and (<= (* skoXC1 (* skoXC1 (* skoXC1 (* skoXC1 (+ (/ (- 17.) 120.) (* skoXC1 (* skoXC1 (/ 3. 80.)))))))) 0.) (and (<= (* skoXC1 (* skoXC1 (+ (/ 1. 3.) (* skoXC1 (* skoXC1 (/ 3. 20.)))))) 1.) (and (<= (* skoXC1 (* skoXC1 (* skoXC1 (* skoXC1 (+ (/ 32. 15.) (* skoXC1 (* skoXC1 (+ (/ (- 296.) 15.) (* skoXC1 (* skoXC1 (+ (/ 391. 15.) (* skoXC1 (* skoXC1 (+ (/ (- 146.) 15.) (* skoXC1 (* skoXC1 (/ 3. 4.))))))))))))))))) 0.) (and (> (* skoXC1 (* skoXC1 (+ (/ 1. 6.) (* skoXC1 (* skoXC1 (/ 3. 40.)))))) (- 1.)) (<= (* skoXC1 (+ (- 1.) (* skoXC1 (* skoXC1 (+ (/ (- 1.) 6.) (* skoXC1 (* skoXC1 (/ (- 3.) 40.)))))))) 0.)))))))))))))))))))))))))))))))))))

% In GRF format:
(sequent " MetiTarski formula " (antecedent (<= (* skoXC1 (* skoXC1 (* skoXC1 (* skoXC1 (+ (/ 32. 15.) (* skoXC1 (* skoXC1 (+ (/ (- 272.) 105.) (* skoXC1 (* skoXC1 (+ (/ (- 1163.) 105.) (* skoXC1 (* skoXC1 (+ (/ 1753. 105.) (* skoXC1 (* skoXC1 (+ (/ (- 169.) 28.) (* skoXC1 (* skoXC1 (/ 25. 56.)))))))))))))))))))) 0.) (> (* skoXC1 (* skoXC1 (+ (- 256.) (* skoXC1 (* skoXC1 (+ 160. (* skoXC1 (* skoXC1 (+ (- 32.) (* skoXC1 skoXC1)))))))))) (- 128.)) (<= (* skoXC1 (* skoXC1 (+ (/ 1. 3.) (* skoXC1 (* skoXC1 (+ (/ 3. 20.) (* skoXC1 (* skoXC1 (/ 5. 56.))))))))) 1.) (<= (* skoXC1 (* skoXC1 (* skoXC1 (* skoXC1 (+ (/ (- 17.) 120.) (* skoXC1 (* skoXC1 (+ (/ (- 27.) 280.) (* skoXC1 (* skoXC1 (/ 5. 224.))))))))))) 0.) (<= (* skoXC1 (* skoXC1 (* skoXC1 (* skoXC1 (+ (/ (- 13.) 60.) (* skoXC1 (* skoXC1 (+ (/ (- 9.) 280.) (* skoXC1 (* skoXC1 (/ (- 5.) 28.))))))))))) 0.) (<= (* skoXC1 (* skoXC1 (+ (/ (- 1.) 2.) (* skoXC1 (* skoXC1 (+ (/ 7. 120.) (* skoXC1 (* skoXC1 (+ (/ 33. 560.) (* skoXC1 (* skoXC1 (/ (- 5.) 112.)))))))))))) 0.) (<= (* skoXC1 (* skoXC1 (+ (/ (- 1.) 6.) (* skoXC1 (* skoXC1 (+ (/ (- 3.) 40.) (* skoXC1 (* skoXC1 (/ (- 5.) 112.))))))))) 1.) (<= (* skoXC1 (+ (- 1.) (* skoXC1 (* skoXC1 (+ (/ 1. 3.) (* skoXC1 (* skoXC1 (+ (/ 3. 20.) (* skoXC1 (* skoXC1 (/ 5. 56.))))))))))) 0.) (<= (* skoXC1 (* skoXC1 (* skoXC1 (* skoXC1 (+ (/ (- 80.) 3.) (* skoXC1 (* skoXC1 (+ (/ 128. 3.) (* skoXC1 (* skoXC1 (+ (/ (- 55.) 3.) (* skoXC1 (* skoXC1 (/ 5. 3.)))))))))))))) 0.) (<= (* skoXC1 (* skoXC1 (+ 256. (* skoXC1 (* skoXC1 (+ (- 160.) (* skoXC1 (* skoXC1 (+ 32. (* skoXC1 (* skoXC1 (- 1.)))))))))))) 128.) (<= (* skoXC1 (* skoXC1 (/ 1. 3.))) 1.) (<= (* skoXC1 (+ (- 1.) (* skoXC1 (* skoXC1 (/ (- 1.) 6.))))) 0.) (<= (* skoXC1 (* skoXC1 (* skoXC1 (* skoXC1 (/ (- 2.) 3.))))) 0.) (<= (* skoXC1 skoXC1) 2.) (<= (* skoXC1 (* skoXC1 (+ (/ (- 1.) 2.) (* skoXC1 (* skoXC1 (/ (- 1.) 6.)))))) 0.) (<= (* skoXC1 (* skoXC1 (/ (- 1.) 6.))) 1.) (<= (* skoXC1 (+ (- 1.) (* skoXC1 (* skoXC1 (/ 1. 3.))))) 0.) (> (/ 7. 8.) skoXC1) (> skoXC1 0.) (> (* skoXC1 (* skoXC1 (/ (- 1.) 2.))) (- 3.)) (<= (* skoXC1 (* skoXC1 (/ 1. 2.))) 3.) (<= (* skoXC1 (* skoXC1 (+ 24. (* skoXC1 (* skoXC1 (+ (- 10.) (* skoXC1 skoXC1))))))) 16.) (> (* skoXC1 (* skoXC1 (+ (- 80.) (* skoXC1 (* skoXC1 (+ 40. (* skoXC1 (* skoXC1 (+ (- 6.) (* skoXC1 (* skoXC1 (/ 1. 8.)))))))))))) (- 48.)) (<= (* skoXC1 (* skoXC1 (+ 80. (* skoXC1 (* skoXC1 (+ (- 40.) (* skoXC1 (* skoXC1 (+ 6. (* skoXC1 (* skoXC1 (/ (- 1.) 8.)))))))))))) 48.) (> (* skoXC1 skoXC1) 0.) (<= (* skoXC1 (+ (- 1.) (* skoXC1 (* skoXC1 (+ (/ 1. 3.) (* skoXC1 (* skoXC1 (/ 3. 20.)))))))) 0.) (<= (* skoXC1 (* skoXC1 (+ (/ (- 1.) 6.) (* skoXC1 (* skoXC1 (/ (- 3.) 40.)))))) 1.) (<= (* skoXC1 (* skoXC1 (+ (/ (- 1.) 2.) (* skoXC1 (* skoXC1 (+ (/ 7. 120.) (* skoXC1 (* skoXC1 (/ (- 3.) 40.))))))))) 0.) (<= (* skoXC1 (* skoXC1 (* skoXC1 (* skoXC1 (+ (/ (- 13.) 60.) (* skoXC1 (* skoXC1 (/ (- 3.) 10.)))))))) 0.) (<= (* skoXC1 (* skoXC1 (* skoXC1 (* skoXC1 (+ (/ (- 17.) 120.) (* skoXC1 (* skoXC1 (/ 3. 80.)))))))) 0.) (<= (* skoXC1 (* skoXC1 (+ (/ 1. 3.) (* skoXC1 (* skoXC1 (/ 3. 20.)))))) 1.) (<= (* skoXC1 (* skoXC1 (* skoXC1 (* skoXC1 (+ (/ 32. 15.) (* skoXC1 (* skoXC1 (+ (/ (- 296.) 15.) (* skoXC1 (* skoXC1 (+ (/ 391. 15.) (* skoXC1 (* skoXC1 (+ (/ (- 146.) 15.) (* skoXC1 (* skoXC1 (/ 3. 4.))))))))))))))))) 0.) (> (* skoXC1 (* skoXC1 (+ (/ 1. 6.) (* skoXC1 (* skoXC1 (/ 3. 40.)))))) (- 1.))) (succedent (> (* skoXC1 (+ (- 1.) (* skoXC1 (* skoXC1 (+ (/ (- 1.) 6.) (* skoXC1 (* skoXC1 (/ (- 3.) 40.)))))))) 0.)))
-----[end problem]-----

-----[begin problem]-----
% In Mathematica format:
Timing[Resolve[Exists[{skoXC1}, And[skoXC1*skoXC1*(-256+skoXC1*skoXC1*(160+skoXC1*skoXC1*(-32+skoXC1*skoXC1)))<=-128,skoXC1*skoXC1*skoXC1*skoXC1*((32/15)+skoXC1*skoXC1*((-272/105)+skoXC1*skoXC1*((-1163/105)+skoXC1*skoXC1*((1753/105)+skoXC1*skoXC1*((-169/28)+skoXC1*skoXC1*(25/56))))))>0,skoXC1*skoXC1*((1/3)+skoXC1*skoXC1*((3/20)+skoXC1*skoXC1*(5/56)))<=1,skoXC1*skoXC1*skoXC1*skoXC1*((-17/120)+skoXC1*skoXC1*((-27/280)+skoXC1*skoXC1*(5/224)))<=0,skoXC1*skoXC1*skoXC1*skoXC1*((-13/60)+skoXC1*skoXC1*((-9/280)+skoXC1*skoXC1*(-5/28)))<=0,skoXC1*skoXC1*((-1/2)+skoXC1*skoXC1*((7/120)+skoXC1*skoXC1*((33/560)+skoXC1*skoXC1*(-5/112))))<=0,skoXC1*skoXC1*((-1/6)+skoXC1*skoXC1*((-3/40)+skoXC1*skoXC1*(-5/112)))<=1,skoXC1*(-1+skoXC1*skoXC1*((1/3)+skoXC1*skoXC1*((3/20)+skoXC1*skoXC1*(5/56))))<=0,skoXC1*skoXC1*skoXC1*skoXC1*((-80/3)+skoXC1*skoXC1*((128/3)+skoXC1*skoXC1*((-55/3)+skoXC1*skoXC1*(5/3))))<=0,skoXC1*skoXC1*(256+skoXC1*skoXC1*(-160+skoXC1*skoXC1*(32+skoXC1*skoXC1*-1)))<=128,skoXC1*skoXC1*(1/3)<=1,skoXC1*(-1+skoXC1*skoXC1*(-1/6))<=0,skoXC1*skoXC1*skoXC1*skoXC1*(-2/3)<=0,skoXC1*skoXC1<=2,skoXC1*skoXC1*((-1/2)+skoXC1*skoXC1*(-1/6))<=0,skoXC1*skoXC1*(-1/6)<=1,skoXC1*(-1+skoXC1*skoXC1*(1/3))<=0,(7/8)>skoXC1,skoXC1>0,skoXC1*skoXC1*(-1/2)>-3,skoXC1*skoXC1*(1/2)<=3,skoXC1*skoXC1*(24+skoXC1*skoXC1*(-10+skoXC1*skoXC1))<=16,skoXC1*skoXC1*(-80+skoXC1*skoXC1*(40+skoXC1*skoXC1*(-6+skoXC1*skoXC1*(1/8))))>-48,skoXC1*skoXC1*(80+skoXC1*skoXC1*(-40+skoXC1*skoXC1*(6+skoXC1*skoXC1*(-1/8))))<=48,skoXC1*skoXC1>0,skoXC1*(-1+skoXC1*skoXC1*((1/3)+skoXC1*skoXC1*(3/20)))<=0,skoXC1*skoXC1*((-1/6)+skoXC1*skoXC1*(-3/40))<=1,skoXC1*skoXC1*((-1/2)+skoXC1*skoXC1*((7/120)+skoXC1*skoXC1*(-3/40)))<=0,skoXC1*skoXC1*skoXC1*skoXC1*((-13/60)+skoXC1*skoXC1*(-3/10))<=0,skoXC1*skoXC1*skoXC1*skoXC1*((-17/120)+skoXC1*skoXC1*(3/80))<=0,skoXC1*skoXC1*((1/3)+skoXC1*skoXC1*(3/20))<=1,skoXC1*skoXC1*skoXC1*skoXC1*((32/15)+skoXC1*skoXC1*((-296/15)+skoXC1*skoXC1*((391/15)+skoXC1*skoXC1*((-146/15)+skoXC1*skoXC1*(3/4)))))<=0,skoXC1*skoXC1*((1/6)+skoXC1*skoXC1*(3/40))>-1,skoXC1*(-1+skoXC1*skoXC1*((-1/6)+skoXC1*skoXC1*(-3/40)))<=0]], Reals]]

% In QepcadB format:
(E skoXC1) [[(skoXC1 skoXC1 (-256+(skoXC1 skoXC1 (160+(skoXC1 skoXC1 (-32+(skoXC1 skoXC1)))))))<=-128]/\[[0<(skoXC1 skoXC1 skoXC1 skoXC1 (32/15+(skoXC1 skoXC1 (-272/105+(skoXC1 skoXC1 (-1163/105+(skoXC1 skoXC1 (1753/105+(skoXC1 skoXC1 (-169/28+(skoXC1 skoXC1 (25/56))))))))))))]/\[[(skoXC1 skoXC1 (1/3+(skoXC1 skoXC1 (3/20+(skoXC1 skoXC1 (5/56))))))<=1]/\[[(skoXC1 skoXC1 skoXC1 skoXC1 (-17/120+(skoXC1 skoXC1 (-27/280+(skoXC1 skoXC1 (5/224))))))<=0]/\[[(skoXC1 skoXC1 skoXC1 skoXC1 (-13/60+(skoXC1 skoXC1 (-9/280+(skoXC1 skoXC1 (-5/28))))))<=0]/\[[(skoXC1 skoXC1 (-1/2+(skoXC1 skoXC1 (7/120+(skoXC1 skoXC1 (33/560+(skoXC1 skoXC1 (-5/112))))))))<=0]/\[[(skoXC1 skoXC1 (-1/6+(skoXC1 skoXC1 (-3/40+(skoXC1 skoXC1 (-5/112))))))<=1]/\[[(skoXC1 (-1+(skoXC1 skoXC1 (1/3+(skoXC1 skoXC1 (3/20+(skoXC1 skoXC1 (5/56))))))))<=0]/\[[(skoXC1 skoXC1 skoXC1 skoXC1 (-80/3+(skoXC1 skoXC1 (128/3+(skoXC1 skoXC1 (-55/3+(skoXC1 skoXC1 (5/3))))))))<=0]/\[[(skoXC1 skoXC1 (256+(skoXC1 skoXC1 (-160+(skoXC1 skoXC1 (32+(skoXC1 skoXC1 (-1))))))))<=128]/\[[(skoXC1 skoXC1 (1/3))<=1]/\[[(skoXC1 (-1+(skoXC1 skoXC1 (-1/6))))<=0]/\[[(skoXC1 skoXC1 skoXC1 skoXC1 (-2/3))<=0]/\[[(skoXC1 skoXC1)<=2]/\[[(skoXC1 skoXC1 (-1/2+(skoXC1 skoXC1 (-1/6))))<=0]/\[[(skoXC1 skoXC1 (-1/6))<=1]/\[[(skoXC1 (-1+(skoXC1 skoXC1 (1/3))))<=0]/\[[skoXC1<7/8]/\[[0<skoXC1]/\[[-3<(skoXC1 skoXC1 (-1/2))]/\[[(skoXC1 skoXC1 (1/2))<=3]/\[[(skoXC1 skoXC1 (24+(skoXC1 skoXC1 (-10+(skoXC1 skoXC1)))))<=16]/\[[-48<(skoXC1 skoXC1 (-80+(skoXC1 skoXC1 (40+(skoXC1 skoXC1 (-6+(skoXC1 skoXC1 (1/8))))))))]/\[[(skoXC1 skoXC1 (80+(skoXC1 skoXC1 (-40+(skoXC1 skoXC1 (6+(skoXC1 skoXC1 (-1/8))))))))<=48]/\[[0<(skoXC1 skoXC1)]/\[[(skoXC1 (-1+(skoXC1 skoXC1 (1/3+(skoXC1 skoXC1 (3/20))))))<=0]/\[[(skoXC1 skoXC1 (-1/6+(skoXC1 skoXC1 (-3/40))))<=1]/\[[(skoXC1 skoXC1 (-1/2+(skoXC1 skoXC1 (7/120+(skoXC1 skoXC1 (-3/40))))))<=0]/\[[(skoXC1 skoXC1 skoXC1 skoXC1 (-13/60+(skoXC1 skoXC1 (-3/10))))<=0]/\[[(skoXC1 skoXC1 skoXC1 skoXC1 (-17/120+(skoXC1 skoXC1 (3/80))))<=0]/\[[(skoXC1 skoXC1 (1/3+(skoXC1 skoXC1 (3/20))))<=1]/\[[(skoXC1 skoXC1 skoXC1 skoXC1 (32/15+(skoXC1 skoXC1 (-296/15+(skoXC1 skoXC1 (391/15+(skoXC1 skoXC1 (-146/15+(skoXC1 skoXC1 (3/4))))))))))<=0]/\[[-1<(skoXC1 skoXC1 (1/6+(skoXC1 skoXC1 (3/40))))]/\[(skoXC1 (-1+(skoXC1 skoXC1 (-1/6+(skoXC1 skoXC1 (-3/40))))))<=0]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]].

% In SMTLib2 format:
(declare-fun skoXC1 () Real) (assert (and (<= (* skoXC1 (* skoXC1 (+ (- 256.) (* skoXC1 (* skoXC1 (+ 160. (* skoXC1 (* skoXC1 (+ (- 32.) (* skoXC1 skoXC1)))))))))) (- 128.)) (and (> (* skoXC1 (* skoXC1 (* skoXC1 (* skoXC1 (+ (/ 32. 15.) (* skoXC1 (* skoXC1 (+ (/ (- 272.) 105.) (* skoXC1 (* skoXC1 (+ (/ (- 1163.) 105.) (* skoXC1 (* skoXC1 (+ (/ 1753. 105.) (* skoXC1 (* skoXC1 (+ (/ (- 169.) 28.) (* skoXC1 (* skoXC1 (/ 25. 56.)))))))))))))))))))) 0.) (and (<= (* skoXC1 (* skoXC1 (+ (/ 1. 3.) (* skoXC1 (* skoXC1 (+ (/ 3. 20.) (* skoXC1 (* skoXC1 (/ 5. 56.))))))))) 1.) (and (<= (* skoXC1 (* skoXC1 (* skoXC1 (* skoXC1 (+ (/ (- 17.) 120.) (* skoXC1 (* skoXC1 (+ (/ (- 27.) 280.) (* skoXC1 (* skoXC1 (/ 5. 224.))))))))))) 0.) (and (<= (* skoXC1 (* skoXC1 (* skoXC1 (* skoXC1 (+ (/ (- 13.) 60.) (* skoXC1 (* skoXC1 (+ (/ (- 9.) 280.) (* skoXC1 (* skoXC1 (/ (- 5.) 28.))))))))))) 0.) (and (<= (* skoXC1 (* skoXC1 (+ (/ (- 1.) 2.) (* skoXC1 (* skoXC1 (+ (/ 7. 120.) (* skoXC1 (* skoXC1 (+ (/ 33. 560.) (* skoXC1 (* skoXC1 (/ (- 5.) 112.)))))))))))) 0.) (and (<= (* skoXC1 (* skoXC1 (+ (/ (- 1.) 6.) (* skoXC1 (* skoXC1 (+ (/ (- 3.) 40.) (* skoXC1 (* skoXC1 (/ (- 5.) 112.))))))))) 1.) (and (<= (* skoXC1 (+ (- 1.) (* skoXC1 (* skoXC1 (+ (/ 1. 3.) (* skoXC1 (* skoXC1 (+ (/ 3. 20.) (* skoXC1 (* skoXC1 (/ 5. 56.))))))))))) 0.) (and (<= (* skoXC1 (* skoXC1 (* skoXC1 (* skoXC1 (+ (/ (- 80.) 3.) (* skoXC1 (* skoXC1 (+ (/ 128. 3.) (* skoXC1 (* skoXC1 (+ (/ (- 55.) 3.) (* skoXC1 (* skoXC1 (/ 5. 3.)))))))))))))) 0.) (and (<= (* skoXC1 (* skoXC1 (+ 256. (* skoXC1 (* skoXC1 (+ (- 160.) (* skoXC1 (* skoXC1 (+ 32. (* skoXC1 (* skoXC1 (- 1.)))))))))))) 128.) (and (<= (* skoXC1 (* skoXC1 (/ 1. 3.))) 1.) (and (<= (* skoXC1 (+ (- 1.) (* skoXC1 (* skoXC1 (/ (- 1.) 6.))))) 0.) (and (<= (* skoXC1 (* skoXC1 (* skoXC1 (* skoXC1 (/ (- 2.) 3.))))) 0.) (and (<= (* skoXC1 skoXC1) 2.) (and (<= (* skoXC1 (* skoXC1 (+ (/ (- 1.) 2.) (* skoXC1 (* skoXC1 (/ (- 1.) 6.)))))) 0.) (and (<= (* skoXC1 (* skoXC1 (/ (- 1.) 6.))) 1.) (and (<= (* skoXC1 (+ (- 1.) (* skoXC1 (* skoXC1 (/ 1. 3.))))) 0.) (and (> (/ 7. 8.) skoXC1) (and (> skoXC1 0.) (and (> (* skoXC1 (* skoXC1 (/ (- 1.) 2.))) (- 3.)) (and (<= (* skoXC1 (* skoXC1 (/ 1. 2.))) 3.) (and (<= (* skoXC1 (* skoXC1 (+ 24. (* skoXC1 (* skoXC1 (+ (- 10.) (* skoXC1 skoXC1))))))) 16.) (and (> (* skoXC1 (* skoXC1 (+ (- 80.) (* skoXC1 (* skoXC1 (+ 40. (* skoXC1 (* skoXC1 (+ (- 6.) (* skoXC1 (* skoXC1 (/ 1. 8.)))))))))))) (- 48.)) (and (<= (* skoXC1 (* skoXC1 (+ 80. (* skoXC1 (* skoXC1 (+ (- 40.) (* skoXC1 (* skoXC1 (+ 6. (* skoXC1 (* skoXC1 (/ (- 1.) 8.)))))))))))) 48.) (and (> (* skoXC1 skoXC1) 0.) (and (<= (* skoXC1 (+ (- 1.) (* skoXC1 (* skoXC1 (+ (/ 1. 3.) (* skoXC1 (* skoXC1 (/ 3. 20.)))))))) 0.) (and (<= (* skoXC1 (* skoXC1 (+ (/ (- 1.) 6.) (* skoXC1 (* skoXC1 (/ (- 3.) 40.)))))) 1.) (and (<= (* skoXC1 (* skoXC1 (+ (/ (- 1.) 2.) (* skoXC1 (* skoXC1 (+ (/ 7. 120.) (* skoXC1 (* skoXC1 (/ (- 3.) 40.))))))))) 0.) (and (<= (* skoXC1 (* skoXC1 (* skoXC1 (* skoXC1 (+ (/ (- 13.) 60.) (* skoXC1 (* skoXC1 (/ (- 3.) 10.)))))))) 0.) (and (<= (* skoXC1 (* skoXC1 (* skoXC1 (* skoXC1 (+ (/ (- 17.) 120.) (* skoXC1 (* skoXC1 (/ 3. 80.)))))))) 0.) (and (<= (* skoXC1 (* skoXC1 (+ (/ 1. 3.) (* skoXC1 (* skoXC1 (/ 3. 20.)))))) 1.) (and (<= (* skoXC1 (* skoXC1 (* skoXC1 (* skoXC1 (+ (/ 32. 15.) (* skoXC1 (* skoXC1 (+ (/ (- 296.) 15.) (* skoXC1 (* skoXC1 (+ (/ 391. 15.) (* skoXC1 (* skoXC1 (+ (/ (- 146.) 15.) (* skoXC1 (* skoXC1 (/ 3. 4.))))))))))))))))) 0.) (and (> (* skoXC1 (* skoXC1 (+ (/ 1. 6.) (* skoXC1 (* skoXC1 (/ 3. 40.)))))) (- 1.)) (<= (* skoXC1 (+ (- 1.) (* skoXC1 (* skoXC1 (+ (/ (- 1.) 6.) (* skoXC1 (* skoXC1 (/ (- 3.) 40.)))))))) 0.)))))))))))))))))))))))))))))))))))

% In GRF format:
(sequent " MetiTarski formula " (antecedent (<= (* skoXC1 (* skoXC1 (+ (- 256.) (* skoXC1 (* skoXC1 (+ 160. (* skoXC1 (* skoXC1 (+ (- 32.) (* skoXC1 skoXC1)))))))))) (- 128.)) (> (* skoXC1 (* skoXC1 (* skoXC1 (* skoXC1 (+ (/ 32. 15.) (* skoXC1 (* skoXC1 (+ (/ (- 272.) 105.) (* skoXC1 (* skoXC1 (+ (/ (- 1163.) 105.) (* skoXC1 (* skoXC1 (+ (/ 1753. 105.) (* skoXC1 (* skoXC1 (+ (/ (- 169.) 28.) (* skoXC1 (* skoXC1 (/ 25. 56.)))))))))))))))))))) 0.) (<= (* skoXC1 (* skoXC1 (+ (/ 1. 3.) (* skoXC1 (* skoXC1 (+ (/ 3. 20.) (* skoXC1 (* skoXC1 (/ 5. 56.))))))))) 1.) (<= (* skoXC1 (* skoXC1 (* skoXC1 (* skoXC1 (+ (/ (- 17.) 120.) (* skoXC1 (* skoXC1 (+ (/ (- 27.) 280.) (* skoXC1 (* skoXC1 (/ 5. 224.))))))))))) 0.) (<= (* skoXC1 (* skoXC1 (* skoXC1 (* skoXC1 (+ (/ (- 13.) 60.) (* skoXC1 (* skoXC1 (+ (/ (- 9.) 280.) (* skoXC1 (* skoXC1 (/ (- 5.) 28.))))))))))) 0.) (<= (* skoXC1 (* skoXC1 (+ (/ (- 1.) 2.) (* skoXC1 (* skoXC1 (+ (/ 7. 120.) (* skoXC1 (* skoXC1 (+ (/ 33. 560.) (* skoXC1 (* skoXC1 (/ (- 5.) 112.)))))))))))) 0.) (<= (* skoXC1 (* skoXC1 (+ (/ (- 1.) 6.) (* skoXC1 (* skoXC1 (+ (/ (- 3.) 40.) (* skoXC1 (* skoXC1 (/ (- 5.) 112.))))))))) 1.) (<= (* skoXC1 (+ (- 1.) (* skoXC1 (* skoXC1 (+ (/ 1. 3.) (* skoXC1 (* skoXC1 (+ (/ 3. 20.) (* skoXC1 (* skoXC1 (/ 5. 56.))))))))))) 0.) (<= (* skoXC1 (* skoXC1 (* skoXC1 (* skoXC1 (+ (/ (- 80.) 3.) (* skoXC1 (* skoXC1 (+ (/ 128. 3.) (* skoXC1 (* skoXC1 (+ (/ (- 55.) 3.) (* skoXC1 (* skoXC1 (/ 5. 3.)))))))))))))) 0.) (<= (* skoXC1 (* skoXC1 (+ 256. (* skoXC1 (* skoXC1 (+ (- 160.) (* skoXC1 (* skoXC1 (+ 32. (* skoXC1 (* skoXC1 (- 1.)))))))))))) 128.) (<= (* skoXC1 (* skoXC1 (/ 1. 3.))) 1.) (<= (* skoXC1 (+ (- 1.) (* skoXC1 (* skoXC1 (/ (- 1.) 6.))))) 0.) (<= (* skoXC1 (* skoXC1 (* skoXC1 (* skoXC1 (/ (- 2.) 3.))))) 0.) (<= (* skoXC1 skoXC1) 2.) (<= (* skoXC1 (* skoXC1 (+ (/ (- 1.) 2.) (* skoXC1 (* skoXC1 (/ (- 1.) 6.)))))) 0.) (<= (* skoXC1 (* skoXC1 (/ (- 1.) 6.))) 1.) (<= (* skoXC1 (+ (- 1.) (* skoXC1 (* skoXC1 (/ 1. 3.))))) 0.) (> (/ 7. 8.) skoXC1) (> skoXC1 0.) (> (* skoXC1 (* skoXC1 (/ (- 1.) 2.))) (- 3.)) (<= (* skoXC1 (* skoXC1 (/ 1. 2.))) 3.) (<= (* skoXC1 (* skoXC1 (+ 24. (* skoXC1 (* skoXC1 (+ (- 10.) (* skoXC1 skoXC1))))))) 16.) (> (* skoXC1 (* skoXC1 (+ (- 80.) (* skoXC1 (* skoXC1 (+ 40. (* skoXC1 (* skoXC1 (+ (- 6.) (* skoXC1 (* skoXC1 (/ 1. 8.)))))))))))) (- 48.)) (<= (* skoXC1 (* skoXC1 (+ 80. (* skoXC1 (* skoXC1 (+ (- 40.) (* skoXC1 (* skoXC1 (+ 6. (* skoXC1 (* skoXC1 (/ (- 1.) 8.)))))))))))) 48.) (> (* skoXC1 skoXC1) 0.) (<= (* skoXC1 (+ (- 1.) (* skoXC1 (* skoXC1 (+ (/ 1. 3.) (* skoXC1 (* skoXC1 (/ 3. 20.)))))))) 0.) (<= (* skoXC1 (* skoXC1 (+ (/ (- 1.) 6.) (* skoXC1 (* skoXC1 (/ (- 3.) 40.)))))) 1.) (<= (* skoXC1 (* skoXC1 (+ (/ (- 1.) 2.) (* skoXC1 (* skoXC1 (+ (/ 7. 120.) (* skoXC1 (* skoXC1 (/ (- 3.) 40.))))))))) 0.) (<= (* skoXC1 (* skoXC1 (* skoXC1 (* skoXC1 (+ (/ (- 13.) 60.) (* skoXC1 (* skoXC1 (/ (- 3.) 10.)))))))) 0.) (<= (* skoXC1 (* skoXC1 (* skoXC1 (* skoXC1 (+ (/ (- 17.) 120.) (* skoXC1 (* skoXC1 (/ 3. 80.)))))))) 0.) (<= (* skoXC1 (* skoXC1 (+ (/ 1. 3.) (* skoXC1 (* skoXC1 (/ 3. 20.)))))) 1.) (<= (* skoXC1 (* skoXC1 (* skoXC1 (* skoXC1 (+ (/ 32. 15.) (* skoXC1 (* skoXC1 (+ (/ (- 296.) 15.) (* skoXC1 (* skoXC1 (+ (/ 391. 15.) (* skoXC1 (* skoXC1 (+ (/ (- 146.) 15.) (* skoXC1 (* skoXC1 (/ 3. 4.))))))))))))))))) 0.) (> (* skoXC1 (* skoXC1 (+ (/ 1. 6.) (* skoXC1 (* skoXC1 (/ 3. 40.)))))) (- 1.))) (succedent (> (* skoXC1 (+ (- 1.) (* skoXC1 (* skoXC1 (+ (/ (- 1.) 6.) (* skoXC1 (* skoXC1 (/ (- 3.) 40.)))))))) 0.)))
-----[end problem]-----

-----[begin problem]-----
% In Mathematica format:
Timing[Resolve[Exists[{skoXC1}, And[skoXC1*skoXC1*(256+skoXC1*skoXC1*(-160+skoXC1*skoXC1*(32+skoXC1*skoXC1*-1)))<=128,skoXC1*skoXC1*((1/3)+skoXC1*skoXC1*((3/20)+skoXC1*skoXC1*(5/56)))<=1,skoXC1*skoXC1*skoXC1*skoXC1*((-17/120)+skoXC1*skoXC1*((-27/280)+skoXC1*skoXC1*(5/224)))<=0,skoXC1*skoXC1*skoXC1*skoXC1*((-13/60)+skoXC1*skoXC1*((-9/280)+skoXC1*skoXC1*(-5/28)))<=0,skoXC1*skoXC1*((-1/2)+skoXC1*skoXC1*((7/120)+skoXC1*skoXC1*((33/560)+skoXC1*skoXC1*(-5/112))))<=0,skoXC1*skoXC1*((-1/6)+skoXC1*skoXC1*((-3/40)+skoXC1*skoXC1*(-5/112)))<=1,skoXC1*(-1+skoXC1*skoXC1*((1/3)+skoXC1*skoXC1*((3/20)+skoXC1*skoXC1*(5/56))))<=0,skoXC1*skoXC1*skoXC1*skoXC1*((-80/3)+skoXC1*skoXC1*((128/3)+skoXC1*skoXC1*((-55/3)+skoXC1*skoXC1*(5/3))))<=0,skoXC1*skoXC1*(256+skoXC1*skoXC1*(-160+skoXC1*skoXC1*(32+skoXC1*skoXC1*-1)))<=128,skoXC1*skoXC1*(1/3)<=1,skoXC1*(-1+skoXC1*skoXC1*(-1/6))<=0,skoXC1*skoXC1*skoXC1*skoXC1*(-2/3)<=0,skoXC1*skoXC1<=2,skoXC1*skoXC1*((-1/2)+skoXC1*skoXC1*(-1/6))<=0,skoXC1*skoXC1*(-1/6)<=1,skoXC1*(-1+skoXC1*skoXC1*(1/3))<=0,(7/8)>skoXC1,skoXC1>0,skoXC1*skoXC1*(-1/2)>-3,skoXC1*skoXC1*(1/2)<=3,skoXC1*skoXC1*(24+skoXC1*skoXC1*(-10+skoXC1*skoXC1))<=16,skoXC1*skoXC1*(-80+skoXC1*skoXC1*(40+skoXC1*skoXC1*(-6+skoXC1*skoXC1*(1/8))))>-48,skoXC1*skoXC1*(80+skoXC1*skoXC1*(-40+skoXC1*skoXC1*(6+skoXC1*skoXC1*(-1/8))))<=48,skoXC1*skoXC1>0,skoXC1*(-1+skoXC1*skoXC1*((1/3)+skoXC1*skoXC1*(3/20)))<=0,skoXC1*skoXC1*((-1/6)+skoXC1*skoXC1*(-3/40))<=1,skoXC1*skoXC1*((-1/2)+skoXC1*skoXC1*((7/120)+skoXC1*skoXC1*(-3/40)))<=0,skoXC1*skoXC1*skoXC1*skoXC1*((-13/60)+skoXC1*skoXC1*(-3/10))<=0,skoXC1*skoXC1*skoXC1*skoXC1*((-17/120)+skoXC1*skoXC1*(3/80))<=0,skoXC1*skoXC1*((1/3)+skoXC1*skoXC1*(3/20))<=1,skoXC1*skoXC1*skoXC1*skoXC1*((32/15)+skoXC1*skoXC1*((-296/15)+skoXC1*skoXC1*((391/15)+skoXC1*skoXC1*((-146/15)+skoXC1*skoXC1*(3/4)))))<=0,skoXC1*skoXC1*((1/6)+skoXC1*skoXC1*(3/40))>-1,skoXC1*(-1+skoXC1*skoXC1*((-1/6)+skoXC1*skoXC1*(-3/40)))<=0]], Reals]]

% In QepcadB format:
(E skoXC1) [[(skoXC1 skoXC1 (256+(skoXC1 skoXC1 (-160+(skoXC1 skoXC1 (32+(skoXC1 skoXC1 (-1))))))))<=128]/\[[(skoXC1 skoXC1 (1/3+(skoXC1 skoXC1 (3/20+(skoXC1 skoXC1 (5/56))))))<=1]/\[[(skoXC1 skoXC1 skoXC1 skoXC1 (-17/120+(skoXC1 skoXC1 (-27/280+(skoXC1 skoXC1 (5/224))))))<=0]/\[[(skoXC1 skoXC1 skoXC1 skoXC1 (-13/60+(skoXC1 skoXC1 (-9/280+(skoXC1 skoXC1 (-5/28))))))<=0]/\[[(skoXC1 skoXC1 (-1/2+(skoXC1 skoXC1 (7/120+(skoXC1 skoXC1 (33/560+(skoXC1 skoXC1 (-5/112))))))))<=0]/\[[(skoXC1 skoXC1 (-1/6+(skoXC1 skoXC1 (-3/40+(skoXC1 skoXC1 (-5/112))))))<=1]/\[[(skoXC1 (-1+(skoXC1 skoXC1 (1/3+(skoXC1 skoXC1 (3/20+(skoXC1 skoXC1 (5/56))))))))<=0]/\[[(skoXC1 skoXC1 skoXC1 skoXC1 (-80/3+(skoXC1 skoXC1 (128/3+(skoXC1 skoXC1 (-55/3+(skoXC1 skoXC1 (5/3))))))))<=0]/\[[(skoXC1 skoXC1 (256+(skoXC1 skoXC1 (-160+(skoXC1 skoXC1 (32+(skoXC1 skoXC1 (-1))))))))<=128]/\[[(skoXC1 skoXC1 (1/3))<=1]/\[[(skoXC1 (-1+(skoXC1 skoXC1 (-1/6))))<=0]/\[[(skoXC1 skoXC1 skoXC1 skoXC1 (-2/3))<=0]/\[[(skoXC1 skoXC1)<=2]/\[[(skoXC1 skoXC1 (-1/2+(skoXC1 skoXC1 (-1/6))))<=0]/\[[(skoXC1 skoXC1 (-1/6))<=1]/\[[(skoXC1 (-1+(skoXC1 skoXC1 (1/3))))<=0]/\[[skoXC1<7/8]/\[[0<skoXC1]/\[[-3<(skoXC1 skoXC1 (-1/2))]/\[[(skoXC1 skoXC1 (1/2))<=3]/\[[(skoXC1 skoXC1 (24+(skoXC1 skoXC1 (-10+(skoXC1 skoXC1)))))<=16]/\[[-48<(skoXC1 skoXC1 (-80+(skoXC1 skoXC1 (40+(skoXC1 skoXC1 (-6+(skoXC1 skoXC1 (1/8))))))))]/\[[(skoXC1 skoXC1 (80+(skoXC1 skoXC1 (-40+(skoXC1 skoXC1 (6+(skoXC1 skoXC1 (-1/8))))))))<=48]/\[[0<(skoXC1 skoXC1)]/\[[(skoXC1 (-1+(skoXC1 skoXC1 (1/3+(skoXC1 skoXC1 (3/20))))))<=0]/\[[(skoXC1 skoXC1 (-1/6+(skoXC1 skoXC1 (-3/40))))<=1]/\[[(skoXC1 skoXC1 (-1/2+(skoXC1 skoXC1 (7/120+(skoXC1 skoXC1 (-3/40))))))<=0]/\[[(skoXC1 skoXC1 skoXC1 skoXC1 (-13/60+(skoXC1 skoXC1 (-3/10))))<=0]/\[[(skoXC1 skoXC1 skoXC1 skoXC1 (-17/120+(skoXC1 skoXC1 (3/80))))<=0]/\[[(skoXC1 skoXC1 (1/3+(skoXC1 skoXC1 (3/20))))<=1]/\[[(skoXC1 skoXC1 skoXC1 skoXC1 (32/15+(skoXC1 skoXC1 (-296/15+(skoXC1 skoXC1 (391/15+(skoXC1 skoXC1 (-146/15+(skoXC1 skoXC1 (3/4))))))))))<=0]/\[[-1<(skoXC1 skoXC1 (1/6+(skoXC1 skoXC1 (3/40))))]/\[(skoXC1 (-1+(skoXC1 skoXC1 (-1/6+(skoXC1 skoXC1 (-3/40))))))<=0]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]].

% In SMTLib2 format:
(declare-fun skoXC1 () Real) (assert (and (<= (* skoXC1 (* skoXC1 (+ 256. (* skoXC1 (* skoXC1 (+ (- 160.) (* skoXC1 (* skoXC1 (+ 32. (* skoXC1 (* skoXC1 (- 1.)))))))))))) 128.) (and (<= (* skoXC1 (* skoXC1 (+ (/ 1. 3.) (* skoXC1 (* skoXC1 (+ (/ 3. 20.) (* skoXC1 (* skoXC1 (/ 5. 56.))))))))) 1.) (and (<= (* skoXC1 (* skoXC1 (* skoXC1 (* skoXC1 (+ (/ (- 17.) 120.) (* skoXC1 (* skoXC1 (+ (/ (- 27.) 280.) (* skoXC1 (* skoXC1 (/ 5. 224.))))))))))) 0.) (and (<= (* skoXC1 (* skoXC1 (* skoXC1 (* skoXC1 (+ (/ (- 13.) 60.) (* skoXC1 (* skoXC1 (+ (/ (- 9.) 280.) (* skoXC1 (* skoXC1 (/ (- 5.) 28.))))))))))) 0.) (and (<= (* skoXC1 (* skoXC1 (+ (/ (- 1.) 2.) (* skoXC1 (* skoXC1 (+ (/ 7. 120.) (* skoXC1 (* skoXC1 (+ (/ 33. 560.) (* skoXC1 (* skoXC1 (/ (- 5.) 112.)))))))))))) 0.) (and (<= (* skoXC1 (* skoXC1 (+ (/ (- 1.) 6.) (* skoXC1 (* skoXC1 (+ (/ (- 3.) 40.) (* skoXC1 (* skoXC1 (/ (- 5.) 112.))))))))) 1.) (and (<= (* skoXC1 (+ (- 1.) (* skoXC1 (* skoXC1 (+ (/ 1. 3.) (* skoXC1 (* skoXC1 (+ (/ 3. 20.) (* skoXC1 (* skoXC1 (/ 5. 56.))))))))))) 0.) (and (<= (* skoXC1 (* skoXC1 (* skoXC1 (* skoXC1 (+ (/ (- 80.) 3.) (* skoXC1 (* skoXC1 (+ (/ 128. 3.) (* skoXC1 (* skoXC1 (+ (/ (- 55.) 3.) (* skoXC1 (* skoXC1 (/ 5. 3.)))))))))))))) 0.) (and (<= (* skoXC1 (* skoXC1 (+ 256. (* skoXC1 (* skoXC1 (+ (- 160.) (* skoXC1 (* skoXC1 (+ 32. (* skoXC1 (* skoXC1 (- 1.)))))))))))) 128.) (and (<= (* skoXC1 (* skoXC1 (/ 1. 3.))) 1.) (and (<= (* skoXC1 (+ (- 1.) (* skoXC1 (* skoXC1 (/ (- 1.) 6.))))) 0.) (and (<= (* skoXC1 (* skoXC1 (* skoXC1 (* skoXC1 (/ (- 2.) 3.))))) 0.) (and (<= (* skoXC1 skoXC1) 2.) (and (<= (* skoXC1 (* skoXC1 (+ (/ (- 1.) 2.) (* skoXC1 (* skoXC1 (/ (- 1.) 6.)))))) 0.) (and (<= (* skoXC1 (* skoXC1 (/ (- 1.) 6.))) 1.) (and (<= (* skoXC1 (+ (- 1.) (* skoXC1 (* skoXC1 (/ 1. 3.))))) 0.) (and (> (/ 7. 8.) skoXC1) (and (> skoXC1 0.) (and (> (* skoXC1 (* skoXC1 (/ (- 1.) 2.))) (- 3.)) (and (<= (* skoXC1 (* skoXC1 (/ 1. 2.))) 3.) (and (<= (* skoXC1 (* skoXC1 (+ 24. (* skoXC1 (* skoXC1 (+ (- 10.) (* skoXC1 skoXC1))))))) 16.) (and (> (* skoXC1 (* skoXC1 (+ (- 80.) (* skoXC1 (* skoXC1 (+ 40. (* skoXC1 (* skoXC1 (+ (- 6.) (* skoXC1 (* skoXC1 (/ 1. 8.)))))))))))) (- 48.)) (and (<= (* skoXC1 (* skoXC1 (+ 80. (* skoXC1 (* skoXC1 (+ (- 40.) (* skoXC1 (* skoXC1 (+ 6. (* skoXC1 (* skoXC1 (/ (- 1.) 8.)))))))))))) 48.) (and (> (* skoXC1 skoXC1) 0.) (and (<= (* skoXC1 (+ (- 1.) (* skoXC1 (* skoXC1 (+ (/ 1. 3.) (* skoXC1 (* skoXC1 (/ 3. 20.)))))))) 0.) (and (<= (* skoXC1 (* skoXC1 (+ (/ (- 1.) 6.) (* skoXC1 (* skoXC1 (/ (- 3.) 40.)))))) 1.) (and (<= (* skoXC1 (* skoXC1 (+ (/ (- 1.) 2.) (* skoXC1 (* skoXC1 (+ (/ 7. 120.) (* skoXC1 (* skoXC1 (/ (- 3.) 40.))))))))) 0.) (and (<= (* skoXC1 (* skoXC1 (* skoXC1 (* skoXC1 (+ (/ (- 13.) 60.) (* skoXC1 (* skoXC1 (/ (- 3.) 10.)))))))) 0.) (and (<= (* skoXC1 (* skoXC1 (* skoXC1 (* skoXC1 (+ (/ (- 17.) 120.) (* skoXC1 (* skoXC1 (/ 3. 80.)))))))) 0.) (and (<= (* skoXC1 (* skoXC1 (+ (/ 1. 3.) (* skoXC1 (* skoXC1 (/ 3. 20.)))))) 1.) (and (<= (* skoXC1 (* skoXC1 (* skoXC1 (* skoXC1 (+ (/ 32. 15.) (* skoXC1 (* skoXC1 (+ (/ (- 296.) 15.) (* skoXC1 (* skoXC1 (+ (/ 391. 15.) (* skoXC1 (* skoXC1 (+ (/ (- 146.) 15.) (* skoXC1 (* skoXC1 (/ 3. 4.))))))))))))))))) 0.) (and (> (* skoXC1 (* skoXC1 (+ (/ 1. 6.) (* skoXC1 (* skoXC1 (/ 3. 40.)))))) (- 1.)) (<= (* skoXC1 (+ (- 1.) (* skoXC1 (* skoXC1 (+ (/ (- 1.) 6.) (* skoXC1 (* skoXC1 (/ (- 3.) 40.)))))))) 0.))))))))))))))))))))))))))))))))))

% In GRF format:
(sequent " MetiTarski formula " (antecedent (<= (* skoXC1 (* skoXC1 (+ 256. (* skoXC1 (* skoXC1 (+ (- 160.) (* skoXC1 (* skoXC1 (+ 32. (* skoXC1 (* skoXC1 (- 1.)))))))))))) 128.) (<= (* skoXC1 (* skoXC1 (+ (/ 1. 3.) (* skoXC1 (* skoXC1 (+ (/ 3. 20.) (* skoXC1 (* skoXC1 (/ 5. 56.))))))))) 1.) (<= (* skoXC1 (* skoXC1 (* skoXC1 (* skoXC1 (+ (/ (- 17.) 120.) (* skoXC1 (* skoXC1 (+ (/ (- 27.) 280.) (* skoXC1 (* skoXC1 (/ 5. 224.))))))))))) 0.) (<= (* skoXC1 (* skoXC1 (* skoXC1 (* skoXC1 (+ (/ (- 13.) 60.) (* skoXC1 (* skoXC1 (+ (/ (- 9.) 280.) (* skoXC1 (* skoXC1 (/ (- 5.) 28.))))))))))) 0.) (<= (* skoXC1 (* skoXC1 (+ (/ (- 1.) 2.) (* skoXC1 (* skoXC1 (+ (/ 7. 120.) (* skoXC1 (* skoXC1 (+ (/ 33. 560.) (* skoXC1 (* skoXC1 (/ (- 5.) 112.)))))))))))) 0.) (<= (* skoXC1 (* skoXC1 (+ (/ (- 1.) 6.) (* skoXC1 (* skoXC1 (+ (/ (- 3.) 40.) (* skoXC1 (* skoXC1 (/ (- 5.) 112.))))))))) 1.) (<= (* skoXC1 (+ (- 1.) (* skoXC1 (* skoXC1 (+ (/ 1. 3.) (* skoXC1 (* skoXC1 (+ (/ 3. 20.) (* skoXC1 (* skoXC1 (/ 5. 56.))))))))))) 0.) (<= (* skoXC1 (* skoXC1 (* skoXC1 (* skoXC1 (+ (/ (- 80.) 3.) (* skoXC1 (* skoXC1 (+ (/ 128. 3.) (* skoXC1 (* skoXC1 (+ (/ (- 55.) 3.) (* skoXC1 (* skoXC1 (/ 5. 3.)))))))))))))) 0.) (<= (* skoXC1 (* skoXC1 (+ 256. (* skoXC1 (* skoXC1 (+ (- 160.) (* skoXC1 (* skoXC1 (+ 32. (* skoXC1 (* skoXC1 (- 1.)))))))))))) 128.) (<= (* skoXC1 (* skoXC1 (/ 1. 3.))) 1.) (<= (* skoXC1 (+ (- 1.) (* skoXC1 (* skoXC1 (/ (- 1.) 6.))))) 0.) (<= (* skoXC1 (* skoXC1 (* skoXC1 (* skoXC1 (/ (- 2.) 3.))))) 0.) (<= (* skoXC1 skoXC1) 2.) (<= (* skoXC1 (* skoXC1 (+ (/ (- 1.) 2.) (* skoXC1 (* skoXC1 (/ (- 1.) 6.)))))) 0.) (<= (* skoXC1 (* skoXC1 (/ (- 1.) 6.))) 1.) (<= (* skoXC1 (+ (- 1.) (* skoXC1 (* skoXC1 (/ 1. 3.))))) 0.) (> (/ 7. 8.) skoXC1) (> skoXC1 0.) (> (* skoXC1 (* skoXC1 (/ (- 1.) 2.))) (- 3.)) (<= (* skoXC1 (* skoXC1 (/ 1. 2.))) 3.) (<= (* skoXC1 (* skoXC1 (+ 24. (* skoXC1 (* skoXC1 (+ (- 10.) (* skoXC1 skoXC1))))))) 16.) (> (* skoXC1 (* skoXC1 (+ (- 80.) (* skoXC1 (* skoXC1 (+ 40. (* skoXC1 (* skoXC1 (+ (- 6.) (* skoXC1 (* skoXC1 (/ 1. 8.)))))))))))) (- 48.)) (<= (* skoXC1 (* skoXC1 (+ 80. (* skoXC1 (* skoXC1 (+ (- 40.) (* skoXC1 (* skoXC1 (+ 6. (* skoXC1 (* skoXC1 (/ (- 1.) 8.)))))))))))) 48.) (> (* skoXC1 skoXC1) 0.) (<= (* skoXC1 (+ (- 1.) (* skoXC1 (* skoXC1 (+ (/ 1. 3.) (* skoXC1 (* skoXC1 (/ 3. 20.)))))))) 0.) (<= (* skoXC1 (* skoXC1 (+ (/ (- 1.) 6.) (* skoXC1 (* skoXC1 (/ (- 3.) 40.)))))) 1.) (<= (* skoXC1 (* skoXC1 (+ (/ (- 1.) 2.) (* skoXC1 (* skoXC1 (+ (/ 7. 120.) (* skoXC1 (* skoXC1 (/ (- 3.) 40.))))))))) 0.) (<= (* skoXC1 (* skoXC1 (* skoXC1 (* skoXC1 (+ (/ (- 13.) 60.) (* skoXC1 (* skoXC1 (/ (- 3.) 10.)))))))) 0.) (<= (* skoXC1 (* skoXC1 (* skoXC1 (* skoXC1 (+ (/ (- 17.) 120.) (* skoXC1 (* skoXC1 (/ 3. 80.)))))))) 0.) (<= (* skoXC1 (* skoXC1 (+ (/ 1. 3.) (* skoXC1 (* skoXC1 (/ 3. 20.)))))) 1.) (<= (* skoXC1 (* skoXC1 (* skoXC1 (* skoXC1 (+ (/ 32. 15.) (* skoXC1 (* skoXC1 (+ (/ (- 296.) 15.) (* skoXC1 (* skoXC1 (+ (/ 391. 15.) (* skoXC1 (* skoXC1 (+ (/ (- 146.) 15.) (* skoXC1 (* skoXC1 (/ 3. 4.))))))))))))))))) 0.) (> (* skoXC1 (* skoXC1 (+ (/ 1. 6.) (* skoXC1 (* skoXC1 (/ 3. 40.)))))) (- 1.))) (succedent (> (* skoXC1 (+ (- 1.) (* skoXC1 (* skoXC1 (+ (/ (- 1.) 6.) (* skoXC1 (* skoXC1 (/ (- 3.) 40.)))))))) 0.)))
-----[end problem]-----

-----[begin problem]-----
% In Mathematica format:
Timing[Resolve[Exists[{skoXC1}, And[skoXC1*skoXC1*skoXC1*skoXC1*((32/15)+skoXC1*skoXC1*((-272/105)+skoXC1*skoXC1*((-1163/105)+skoXC1*skoXC1*((1753/105)+skoXC1*skoXC1*((-169/28)+skoXC1*skoXC1*(25/56))))))<=0,skoXC1*skoXC1*((1/3)+skoXC1*skoXC1*((3/20)+skoXC1*skoXC1*(5/56)))<=1,skoXC1*skoXC1*skoXC1*skoXC1*((-17/120)+skoXC1*skoXC1*((-27/280)+skoXC1*skoXC1*(5/224)))<=0,skoXC1*skoXC1*skoXC1*skoXC1*((-13/60)+skoXC1*skoXC1*((-9/280)+skoXC1*skoXC1*(-5/28)))<=0,skoXC1*skoXC1*((-1/2)+skoXC1*skoXC1*((7/120)+skoXC1*skoXC1*((33/560)+skoXC1*skoXC1*(-5/112))))<=0,skoXC1*skoXC1*((-1/6)+skoXC1*skoXC1*((-3/40)+skoXC1*skoXC1*(-5/112)))<=1,skoXC1*(-1+skoXC1*skoXC1*((1/3)+skoXC1*skoXC1*((3/20)+skoXC1*skoXC1*(5/56))))<=0,skoXC1*skoXC1*skoXC1*skoXC1*((-80/3)+skoXC1*skoXC1*((128/3)+skoXC1*skoXC1*((-55/3)+skoXC1*skoXC1*(5/3))))<=0,skoXC1*skoXC1*(256+skoXC1*skoXC1*(-160+skoXC1*skoXC1*(32+skoXC1*skoXC1*-1)))<=128,skoXC1*skoXC1*(1/3)<=1,skoXC1*(-1+skoXC1*skoXC1*(-1/6))<=0,skoXC1*skoXC1*skoXC1*skoXC1*(-2/3)<=0,skoXC1*skoXC1<=2,skoXC1*skoXC1*((-1/2)+skoXC1*skoXC1*(-1/6))<=0,skoXC1*skoXC1*(-1/6)<=1,skoXC1*(-1+skoXC1*skoXC1*(1/3))<=0,(7/8)>skoXC1,skoXC1>0,skoXC1*skoXC1*(-1/2)>-3,skoXC1*skoXC1*(1/2)<=3,skoXC1*skoXC1*(24+skoXC1*skoXC1*(-10+skoXC1*skoXC1))<=16,skoXC1*skoXC1*(-80+skoXC1*skoXC1*(40+skoXC1*skoXC1*(-6+skoXC1*skoXC1*(1/8))))>-48,skoXC1*skoXC1*(80+skoXC1*skoXC1*(-40+skoXC1*skoXC1*(6+skoXC1*skoXC1*(-1/8))))<=48,skoXC1*skoXC1>0,skoXC1*(-1+skoXC1*skoXC1*((1/3)+skoXC1*skoXC1*(3/20)))<=0,skoXC1*skoXC1*((-1/6)+skoXC1*skoXC1*(-3/40))<=1,skoXC1*skoXC1*((-1/2)+skoXC1*skoXC1*((7/120)+skoXC1*skoXC1*(-3/40)))<=0,skoXC1*skoXC1*skoXC1*skoXC1*((-13/60)+skoXC1*skoXC1*(-3/10))<=0,skoXC1*skoXC1*skoXC1*skoXC1*((-17/120)+skoXC1*skoXC1*(3/80))<=0,skoXC1*skoXC1*((1/3)+skoXC1*skoXC1*(3/20))<=1,skoXC1*skoXC1*skoXC1*skoXC1*((32/15)+skoXC1*skoXC1*((-296/15)+skoXC1*skoXC1*((391/15)+skoXC1*skoXC1*((-146/15)+skoXC1*skoXC1*(3/4)))))<=0,skoXC1*skoXC1*((1/6)+skoXC1*skoXC1*(3/40))>-1,skoXC1*(-1+skoXC1*skoXC1*((-1/6)+skoXC1*skoXC1*(-3/40)))<=0]], Reals]]

% In QepcadB format:
(E skoXC1) [[(skoXC1 skoXC1 skoXC1 skoXC1 (32/15+(skoXC1 skoXC1 (-272/105+(skoXC1 skoXC1 (-1163/105+(skoXC1 skoXC1 (1753/105+(skoXC1 skoXC1 (-169/28+(skoXC1 skoXC1 (25/56))))))))))))<=0]/\[[(skoXC1 skoXC1 (1/3+(skoXC1 skoXC1 (3/20+(skoXC1 skoXC1 (5/56))))))<=1]/\[[(skoXC1 skoXC1 skoXC1 skoXC1 (-17/120+(skoXC1 skoXC1 (-27/280+(skoXC1 skoXC1 (5/224))))))<=0]/\[[(skoXC1 skoXC1 skoXC1 skoXC1 (-13/60+(skoXC1 skoXC1 (-9/280+(skoXC1 skoXC1 (-5/28))))))<=0]/\[[(skoXC1 skoXC1 (-1/2+(skoXC1 skoXC1 (7/120+(skoXC1 skoXC1 (33/560+(skoXC1 skoXC1 (-5/112))))))))<=0]/\[[(skoXC1 skoXC1 (-1/6+(skoXC1 skoXC1 (-3/40+(skoXC1 skoXC1 (-5/112))))))<=1]/\[[(skoXC1 (-1+(skoXC1 skoXC1 (1/3+(skoXC1 skoXC1 (3/20+(skoXC1 skoXC1 (5/56))))))))<=0]/\[[(skoXC1 skoXC1 skoXC1 skoXC1 (-80/3+(skoXC1 skoXC1 (128/3+(skoXC1 skoXC1 (-55/3+(skoXC1 skoXC1 (5/3))))))))<=0]/\[[(skoXC1 skoXC1 (256+(skoXC1 skoXC1 (-160+(skoXC1 skoXC1 (32+(skoXC1 skoXC1 (-1))))))))<=128]/\[[(skoXC1 skoXC1 (1/3))<=1]/\[[(skoXC1 (-1+(skoXC1 skoXC1 (-1/6))))<=0]/\[[(skoXC1 skoXC1 skoXC1 skoXC1 (-2/3))<=0]/\[[(skoXC1 skoXC1)<=2]/\[[(skoXC1 skoXC1 (-1/2+(skoXC1 skoXC1 (-1/6))))<=0]/\[[(skoXC1 skoXC1 (-1/6))<=1]/\[[(skoXC1 (-1+(skoXC1 skoXC1 (1/3))))<=0]/\[[skoXC1<7/8]/\[[0<skoXC1]/\[[-3<(skoXC1 skoXC1 (-1/2))]/\[[(skoXC1 skoXC1 (1/2))<=3]/\[[(skoXC1 skoXC1 (24+(skoXC1 skoXC1 (-10+(skoXC1 skoXC1)))))<=16]/\[[-48<(skoXC1 skoXC1 (-80+(skoXC1 skoXC1 (40+(skoXC1 skoXC1 (-6+(skoXC1 skoXC1 (1/8))))))))]/\[[(skoXC1 skoXC1 (80+(skoXC1 skoXC1 (-40+(skoXC1 skoXC1 (6+(skoXC1 skoXC1 (-1/8))))))))<=48]/\[[0<(skoXC1 skoXC1)]/\[[(skoXC1 (-1+(skoXC1 skoXC1 (1/3+(skoXC1 skoXC1 (3/20))))))<=0]/\[[(skoXC1 skoXC1 (-1/6+(skoXC1 skoXC1 (-3/40))))<=1]/\[[(skoXC1 skoXC1 (-1/2+(skoXC1 skoXC1 (7/120+(skoXC1 skoXC1 (-3/40))))))<=0]/\[[(skoXC1 skoXC1 skoXC1 skoXC1 (-13/60+(skoXC1 skoXC1 (-3/10))))<=0]/\[[(skoXC1 skoXC1 skoXC1 skoXC1 (-17/120+(skoXC1 skoXC1 (3/80))))<=0]/\[[(skoXC1 skoXC1 (1/3+(skoXC1 skoXC1 (3/20))))<=1]/\[[(skoXC1 skoXC1 skoXC1 skoXC1 (32/15+(skoXC1 skoXC1 (-296/15+(skoXC1 skoXC1 (391/15+(skoXC1 skoXC1 (-146/15+(skoXC1 skoXC1 (3/4))))))))))<=0]/\[[-1<(skoXC1 skoXC1 (1/6+(skoXC1 skoXC1 (3/40))))]/\[(skoXC1 (-1+(skoXC1 skoXC1 (-1/6+(skoXC1 skoXC1 (-3/40))))))<=0]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]].

% In SMTLib2 format:
(declare-fun skoXC1 () Real) (assert (and (<= (* skoXC1 (* skoXC1 (* skoXC1 (* skoXC1 (+ (/ 32. 15.) (* skoXC1 (* skoXC1 (+ (/ (- 272.) 105.) (* skoXC1 (* skoXC1 (+ (/ (- 1163.) 105.) (* skoXC1 (* skoXC1 (+ (/ 1753. 105.) (* skoXC1 (* skoXC1 (+ (/ (- 169.) 28.) (* skoXC1 (* skoXC1 (/ 25. 56.)))))))))))))))))))) 0.) (and (<= (* skoXC1 (* skoXC1 (+ (/ 1. 3.) (* skoXC1 (* skoXC1 (+ (/ 3. 20.) (* skoXC1 (* skoXC1 (/ 5. 56.))))))))) 1.) (and (<= (* skoXC1 (* skoXC1 (* skoXC1 (* skoXC1 (+ (/ (- 17.) 120.) (* skoXC1 (* skoXC1 (+ (/ (- 27.) 280.) (* skoXC1 (* skoXC1 (/ 5. 224.))))))))))) 0.) (and (<= (* skoXC1 (* skoXC1 (* skoXC1 (* skoXC1 (+ (/ (- 13.) 60.) (* skoXC1 (* skoXC1 (+ (/ (- 9.) 280.) (* skoXC1 (* skoXC1 (/ (- 5.) 28.))))))))))) 0.) (and (<= (* skoXC1 (* skoXC1 (+ (/ (- 1.) 2.) (* skoXC1 (* skoXC1 (+ (/ 7. 120.) (* skoXC1 (* skoXC1 (+ (/ 33. 560.) (* skoXC1 (* skoXC1 (/ (- 5.) 112.)))))))))))) 0.) (and (<= (* skoXC1 (* skoXC1 (+ (/ (- 1.) 6.) (* skoXC1 (* skoXC1 (+ (/ (- 3.) 40.) (* skoXC1 (* skoXC1 (/ (- 5.) 112.))))))))) 1.) (and (<= (* skoXC1 (+ (- 1.) (* skoXC1 (* skoXC1 (+ (/ 1. 3.) (* skoXC1 (* skoXC1 (+ (/ 3. 20.) (* skoXC1 (* skoXC1 (/ 5. 56.))))))))))) 0.) (and (<= (* skoXC1 (* skoXC1 (* skoXC1 (* skoXC1 (+ (/ (- 80.) 3.) (* skoXC1 (* skoXC1 (+ (/ 128. 3.) (* skoXC1 (* skoXC1 (+ (/ (- 55.) 3.) (* skoXC1 (* skoXC1 (/ 5. 3.)))))))))))))) 0.) (and (<= (* skoXC1 (* skoXC1 (+ 256. (* skoXC1 (* skoXC1 (+ (- 160.) (* skoXC1 (* skoXC1 (+ 32. (* skoXC1 (* skoXC1 (- 1.)))))))))))) 128.) (and (<= (* skoXC1 (* skoXC1 (/ 1. 3.))) 1.) (and (<= (* skoXC1 (+ (- 1.) (* skoXC1 (* skoXC1 (/ (- 1.) 6.))))) 0.) (and (<= (* skoXC1 (* skoXC1 (* skoXC1 (* skoXC1 (/ (- 2.) 3.))))) 0.) (and (<= (* skoXC1 skoXC1) 2.) (and (<= (* skoXC1 (* skoXC1 (+ (/ (- 1.) 2.) (* skoXC1 (* skoXC1 (/ (- 1.) 6.)))))) 0.) (and (<= (* skoXC1 (* skoXC1 (/ (- 1.) 6.))) 1.) (and (<= (* skoXC1 (+ (- 1.) (* skoXC1 (* skoXC1 (/ 1. 3.))))) 0.) (and (> (/ 7. 8.) skoXC1) (and (> skoXC1 0.) (and (> (* skoXC1 (* skoXC1 (/ (- 1.) 2.))) (- 3.)) (and (<= (* skoXC1 (* skoXC1 (/ 1. 2.))) 3.) (and (<= (* skoXC1 (* skoXC1 (+ 24. (* skoXC1 (* skoXC1 (+ (- 10.) (* skoXC1 skoXC1))))))) 16.) (and (> (* skoXC1 (* skoXC1 (+ (- 80.) (* skoXC1 (* skoXC1 (+ 40. (* skoXC1 (* skoXC1 (+ (- 6.) (* skoXC1 (* skoXC1 (/ 1. 8.)))))))))))) (- 48.)) (and (<= (* skoXC1 (* skoXC1 (+ 80. (* skoXC1 (* skoXC1 (+ (- 40.) (* skoXC1 (* skoXC1 (+ 6. (* skoXC1 (* skoXC1 (/ (- 1.) 8.)))))))))))) 48.) (and (> (* skoXC1 skoXC1) 0.) (and (<= (* skoXC1 (+ (- 1.) (* skoXC1 (* skoXC1 (+ (/ 1. 3.) (* skoXC1 (* skoXC1 (/ 3. 20.)))))))) 0.) (and (<= (* skoXC1 (* skoXC1 (+ (/ (- 1.) 6.) (* skoXC1 (* skoXC1 (/ (- 3.) 40.)))))) 1.) (and (<= (* skoXC1 (* skoXC1 (+ (/ (- 1.) 2.) (* skoXC1 (* skoXC1 (+ (/ 7. 120.) (* skoXC1 (* skoXC1 (/ (- 3.) 40.))))))))) 0.) (and (<= (* skoXC1 (* skoXC1 (* skoXC1 (* skoXC1 (+ (/ (- 13.) 60.) (* skoXC1 (* skoXC1 (/ (- 3.) 10.)))))))) 0.) (and (<= (* skoXC1 (* skoXC1 (* skoXC1 (* skoXC1 (+ (/ (- 17.) 120.) (* skoXC1 (* skoXC1 (/ 3. 80.)))))))) 0.) (and (<= (* skoXC1 (* skoXC1 (+ (/ 1. 3.) (* skoXC1 (* skoXC1 (/ 3. 20.)))))) 1.) (and (<= (* skoXC1 (* skoXC1 (* skoXC1 (* skoXC1 (+ (/ 32. 15.) (* skoXC1 (* skoXC1 (+ (/ (- 296.) 15.) (* skoXC1 (* skoXC1 (+ (/ 391. 15.) (* skoXC1 (* skoXC1 (+ (/ (- 146.) 15.) (* skoXC1 (* skoXC1 (/ 3. 4.))))))))))))))))) 0.) (and (> (* skoXC1 (* skoXC1 (+ (/ 1. 6.) (* skoXC1 (* skoXC1 (/ 3. 40.)))))) (- 1.)) (<= (* skoXC1 (+ (- 1.) (* skoXC1 (* skoXC1 (+ (/ (- 1.) 6.) (* skoXC1 (* skoXC1 (/ (- 3.) 40.)))))))) 0.))))))))))))))))))))))))))))))))))

% In GRF format:
(sequent " MetiTarski formula " (antecedent (<= (* skoXC1 (* skoXC1 (* skoXC1 (* skoXC1 (+ (/ 32. 15.) (* skoXC1 (* skoXC1 (+ (/ (- 272.) 105.) (* skoXC1 (* skoXC1 (+ (/ (- 1163.) 105.) (* skoXC1 (* skoXC1 (+ (/ 1753. 105.) (* skoXC1 (* skoXC1 (+ (/ (- 169.) 28.) (* skoXC1 (* skoXC1 (/ 25. 56.)))))))))))))))))))) 0.) (<= (* skoXC1 (* skoXC1 (+ (/ 1. 3.) (* skoXC1 (* skoXC1 (+ (/ 3. 20.) (* skoXC1 (* skoXC1 (/ 5. 56.))))))))) 1.) (<= (* skoXC1 (* skoXC1 (* skoXC1 (* skoXC1 (+ (/ (- 17.) 120.) (* skoXC1 (* skoXC1 (+ (/ (- 27.) 280.) (* skoXC1 (* skoXC1 (/ 5. 224.))))))))))) 0.) (<= (* skoXC1 (* skoXC1 (* skoXC1 (* skoXC1 (+ (/ (- 13.) 60.) (* skoXC1 (* skoXC1 (+ (/ (- 9.) 280.) (* skoXC1 (* skoXC1 (/ (- 5.) 28.))))))))))) 0.) (<= (* skoXC1 (* skoXC1 (+ (/ (- 1.) 2.) (* skoXC1 (* skoXC1 (+ (/ 7. 120.) (* skoXC1 (* skoXC1 (+ (/ 33. 560.) (* skoXC1 (* skoXC1 (/ (- 5.) 112.)))))))))))) 0.) (<= (* skoXC1 (* skoXC1 (+ (/ (- 1.) 6.) (* skoXC1 (* skoXC1 (+ (/ (- 3.) 40.) (* skoXC1 (* skoXC1 (/ (- 5.) 112.))))))))) 1.) (<= (* skoXC1 (+ (- 1.) (* skoXC1 (* skoXC1 (+ (/ 1. 3.) (* skoXC1 (* skoXC1 (+ (/ 3. 20.) (* skoXC1 (* skoXC1 (/ 5. 56.))))))))))) 0.) (<= (* skoXC1 (* skoXC1 (* skoXC1 (* skoXC1 (+ (/ (- 80.) 3.) (* skoXC1 (* skoXC1 (+ (/ 128. 3.) (* skoXC1 (* skoXC1 (+ (/ (- 55.) 3.) (* skoXC1 (* skoXC1 (/ 5. 3.)))))))))))))) 0.) (<= (* skoXC1 (* skoXC1 (+ 256. (* skoXC1 (* skoXC1 (+ (- 160.) (* skoXC1 (* skoXC1 (+ 32. (* skoXC1 (* skoXC1 (- 1.)))))))))))) 128.) (<= (* skoXC1 (* skoXC1 (/ 1. 3.))) 1.) (<= (* skoXC1 (+ (- 1.) (* skoXC1 (* skoXC1 (/ (- 1.) 6.))))) 0.) (<= (* skoXC1 (* skoXC1 (* skoXC1 (* skoXC1 (/ (- 2.) 3.))))) 0.) (<= (* skoXC1 skoXC1) 2.) (<= (* skoXC1 (* skoXC1 (+ (/ (- 1.) 2.) (* skoXC1 (* skoXC1 (/ (- 1.) 6.)))))) 0.) (<= (* skoXC1 (* skoXC1 (/ (- 1.) 6.))) 1.) (<= (* skoXC1 (+ (- 1.) (* skoXC1 (* skoXC1 (/ 1. 3.))))) 0.) (> (/ 7. 8.) skoXC1) (> skoXC1 0.) (> (* skoXC1 (* skoXC1 (/ (- 1.) 2.))) (- 3.)) (<= (* skoXC1 (* skoXC1 (/ 1. 2.))) 3.) (<= (* skoXC1 (* skoXC1 (+ 24. (* skoXC1 (* skoXC1 (+ (- 10.) (* skoXC1 skoXC1))))))) 16.) (> (* skoXC1 (* skoXC1 (+ (- 80.) (* skoXC1 (* skoXC1 (+ 40. (* skoXC1 (* skoXC1 (+ (- 6.) (* skoXC1 (* skoXC1 (/ 1. 8.)))))))))))) (- 48.)) (<= (* skoXC1 (* skoXC1 (+ 80. (* skoXC1 (* skoXC1 (+ (- 40.) (* skoXC1 (* skoXC1 (+ 6. (* skoXC1 (* skoXC1 (/ (- 1.) 8.)))))))))))) 48.) (> (* skoXC1 skoXC1) 0.) (<= (* skoXC1 (+ (- 1.) (* skoXC1 (* skoXC1 (+ (/ 1. 3.) (* skoXC1 (* skoXC1 (/ 3. 20.)))))))) 0.) (<= (* skoXC1 (* skoXC1 (+ (/ (- 1.) 6.) (* skoXC1 (* skoXC1 (/ (- 3.) 40.)))))) 1.) (<= (* skoXC1 (* skoXC1 (+ (/ (- 1.) 2.) (* skoXC1 (* skoXC1 (+ (/ 7. 120.) (* skoXC1 (* skoXC1 (/ (- 3.) 40.))))))))) 0.) (<= (* skoXC1 (* skoXC1 (* skoXC1 (* skoXC1 (+ (/ (- 13.) 60.) (* skoXC1 (* skoXC1 (/ (- 3.) 10.)))))))) 0.) (<= (* skoXC1 (* skoXC1 (* skoXC1 (* skoXC1 (+ (/ (- 17.) 120.) (* skoXC1 (* skoXC1 (/ 3. 80.)))))))) 0.) (<= (* skoXC1 (* skoXC1 (+ (/ 1. 3.) (* skoXC1 (* skoXC1 (/ 3. 20.)))))) 1.) (<= (* skoXC1 (* skoXC1 (* skoXC1 (* skoXC1 (+ (/ 32. 15.) (* skoXC1 (* skoXC1 (+ (/ (- 296.) 15.) (* skoXC1 (* skoXC1 (+ (/ 391. 15.) (* skoXC1 (* skoXC1 (+ (/ (- 146.) 15.) (* skoXC1 (* skoXC1 (/ 3. 4.))))))))))))))))) 0.) (> (* skoXC1 (* skoXC1 (+ (/ 1. 6.) (* skoXC1 (* skoXC1 (/ 3. 40.)))))) (- 1.))) (succedent (> (* skoXC1 (+ (- 1.) (* skoXC1 (* skoXC1 (+ (/ (- 1.) 6.) (* skoXC1 (* skoXC1 (/ (- 3.) 40.)))))))) 0.)))
-----[end problem]-----

-----[begin problem]-----
% In Mathematica format:
Timing[Resolve[Exists[{skoXC1}, And[skoXC1*skoXC1*((-1/6)+skoXC1*skoXC1*((-3/40)+skoXC1*skoXC1*(-5/112)))<=1,skoXC1*skoXC1*skoXC1*skoXC1*((32/15)+skoXC1*skoXC1*((-272/105)+skoXC1*skoXC1*((-1163/105)+skoXC1*skoXC1*((1753/105)+skoXC1*skoXC1*((-169/28)+skoXC1*skoXC1*(25/56))))))<=0,skoXC1*skoXC1*((1/3)+skoXC1*skoXC1*((3/20)+skoXC1*skoXC1*(5/56)))<=1,skoXC1*skoXC1*skoXC1*skoXC1*((-17/120)+skoXC1*skoXC1*((-27/280)+skoXC1*skoXC1*(5/224)))<=0,skoXC1*skoXC1*skoXC1*skoXC1*((-13/60)+skoXC1*skoXC1*((-9/280)+skoXC1*skoXC1*(-5/28)))<=0,skoXC1*skoXC1*((-1/2)+skoXC1*skoXC1*((7/120)+skoXC1*skoXC1*((33/560)+skoXC1*skoXC1*(-5/112))))<=0,skoXC1*skoXC1*((-1/6)+skoXC1*skoXC1*((-3/40)+skoXC1*skoXC1*(-5/112)))<=1,skoXC1*(-1+skoXC1*skoXC1*((1/3)+skoXC1*skoXC1*((3/20)+skoXC1*skoXC1*(5/56))))<=0,skoXC1*skoXC1*skoXC1*skoXC1*((-80/3)+skoXC1*skoXC1*((128/3)+skoXC1*skoXC1*((-55/3)+skoXC1*skoXC1*(5/3))))<=0,skoXC1*skoXC1*(256+skoXC1*skoXC1*(-160+skoXC1*skoXC1*(32+skoXC1*skoXC1*-1)))<=128,skoXC1*skoXC1*(1/3)<=1,skoXC1*(-1+skoXC1*skoXC1*(-1/6))<=0,skoXC1*skoXC1*skoXC1*skoXC1*(-2/3)<=0,skoXC1*skoXC1<=2,skoXC1*skoXC1*((-1/2)+skoXC1*skoXC1*(-1/6))<=0,skoXC1*skoXC1*(-1/6)<=1,skoXC1*(-1+skoXC1*skoXC1*(1/3))<=0,(7/8)>skoXC1,skoXC1>0,skoXC1*skoXC1*(-1/2)>-3,skoXC1*skoXC1*(1/2)<=3,skoXC1*skoXC1*(24+skoXC1*skoXC1*(-10+skoXC1*skoXC1))<=16,skoXC1*skoXC1*(-80+skoXC1*skoXC1*(40+skoXC1*skoXC1*(-6+skoXC1*skoXC1*(1/8))))>-48,skoXC1*skoXC1*(80+skoXC1*skoXC1*(-40+skoXC1*skoXC1*(6+skoXC1*skoXC1*(-1/8))))<=48,skoXC1*skoXC1>0,skoXC1*(-1+skoXC1*skoXC1*((1/3)+skoXC1*skoXC1*(3/20)))<=0,skoXC1*skoXC1*((-1/6)+skoXC1*skoXC1*(-3/40))<=1,skoXC1*skoXC1*((-1/2)+skoXC1*skoXC1*((7/120)+skoXC1*skoXC1*(-3/40)))<=0,skoXC1*skoXC1*skoXC1*skoXC1*((-13/60)+skoXC1*skoXC1*(-3/10))<=0,skoXC1*skoXC1*skoXC1*skoXC1*((-17/120)+skoXC1*skoXC1*(3/80))<=0,skoXC1*skoXC1*((1/3)+skoXC1*skoXC1*(3/20))<=1,skoXC1*skoXC1*skoXC1*skoXC1*((32/15)+skoXC1*skoXC1*((-296/15)+skoXC1*skoXC1*((391/15)+skoXC1*skoXC1*((-146/15)+skoXC1*skoXC1*(3/4)))))<=0,skoXC1*skoXC1*((1/6)+skoXC1*skoXC1*(3/40))>-1,skoXC1*(-1+skoXC1*skoXC1*((-1/6)+skoXC1*skoXC1*(-3/40)))<=0]], Reals]]

% In QepcadB format:
(E skoXC1) [[(skoXC1 skoXC1 (-1/6+(skoXC1 skoXC1 (-3/40+(skoXC1 skoXC1 (-5/112))))))<=1]/\[[(skoXC1 skoXC1 skoXC1 skoXC1 (32/15+(skoXC1 skoXC1 (-272/105+(skoXC1 skoXC1 (-1163/105+(skoXC1 skoXC1 (1753/105+(skoXC1 skoXC1 (-169/28+(skoXC1 skoXC1 (25/56))))))))))))<=0]/\[[(skoXC1 skoXC1 (1/3+(skoXC1 skoXC1 (3/20+(skoXC1 skoXC1 (5/56))))))<=1]/\[[(skoXC1 skoXC1 skoXC1 skoXC1 (-17/120+(skoXC1 skoXC1 (-27/280+(skoXC1 skoXC1 (5/224))))))<=0]/\[[(skoXC1 skoXC1 skoXC1 skoXC1 (-13/60+(skoXC1 skoXC1 (-9/280+(skoXC1 skoXC1 (-5/28))))))<=0]/\[[(skoXC1 skoXC1 (-1/2+(skoXC1 skoXC1 (7/120+(skoXC1 skoXC1 (33/560+(skoXC1 skoXC1 (-5/112))))))))<=0]/\[[(skoXC1 skoXC1 (-1/6+(skoXC1 skoXC1 (-3/40+(skoXC1 skoXC1 (-5/112))))))<=1]/\[[(skoXC1 (-1+(skoXC1 skoXC1 (1/3+(skoXC1 skoXC1 (3/20+(skoXC1 skoXC1 (5/56))))))))<=0]/\[[(skoXC1 skoXC1 skoXC1 skoXC1 (-80/3+(skoXC1 skoXC1 (128/3+(skoXC1 skoXC1 (-55/3+(skoXC1 skoXC1 (5/3))))))))<=0]/\[[(skoXC1 skoXC1 (256+(skoXC1 skoXC1 (-160+(skoXC1 skoXC1 (32+(skoXC1 skoXC1 (-1))))))))<=128]/\[[(skoXC1 skoXC1 (1/3))<=1]/\[[(skoXC1 (-1+(skoXC1 skoXC1 (-1/6))))<=0]/\[[(skoXC1 skoXC1 skoXC1 skoXC1 (-2/3))<=0]/\[[(skoXC1 skoXC1)<=2]/\[[(skoXC1 skoXC1 (-1/2+(skoXC1 skoXC1 (-1/6))))<=0]/\[[(skoXC1 skoXC1 (-1/6))<=1]/\[[(skoXC1 (-1+(skoXC1 skoXC1 (1/3))))<=0]/\[[skoXC1<7/8]/\[[0<skoXC1]/\[[-3<(skoXC1 skoXC1 (-1/2))]/\[[(skoXC1 skoXC1 (1/2))<=3]/\[[(skoXC1 skoXC1 (24+(skoXC1 skoXC1 (-10+(skoXC1 skoXC1)))))<=16]/\[[-48<(skoXC1 skoXC1 (-80+(skoXC1 skoXC1 (40+(skoXC1 skoXC1 (-6+(skoXC1 skoXC1 (1/8))))))))]/\[[(skoXC1 skoXC1 (80+(skoXC1 skoXC1 (-40+(skoXC1 skoXC1 (6+(skoXC1 skoXC1 (-1/8))))))))<=48]/\[[0<(skoXC1 skoXC1)]/\[[(skoXC1 (-1+(skoXC1 skoXC1 (1/3+(skoXC1 skoXC1 (3/20))))))<=0]/\[[(skoXC1 skoXC1 (-1/6+(skoXC1 skoXC1 (-3/40))))<=1]/\[[(skoXC1 skoXC1 (-1/2+(skoXC1 skoXC1 (7/120+(skoXC1 skoXC1 (-3/40))))))<=0]/\[[(skoXC1 skoXC1 skoXC1 skoXC1 (-13/60+(skoXC1 skoXC1 (-3/10))))<=0]/\[[(skoXC1 skoXC1 skoXC1 skoXC1 (-17/120+(skoXC1 skoXC1 (3/80))))<=0]/\[[(skoXC1 skoXC1 (1/3+(skoXC1 skoXC1 (3/20))))<=1]/\[[(skoXC1 skoXC1 skoXC1 skoXC1 (32/15+(skoXC1 skoXC1 (-296/15+(skoXC1 skoXC1 (391/15+(skoXC1 skoXC1 (-146/15+(skoXC1 skoXC1 (3/4))))))))))<=0]/\[[-1<(skoXC1 skoXC1 (1/6+(skoXC1 skoXC1 (3/40))))]/\[(skoXC1 (-1+(skoXC1 skoXC1 (-1/6+(skoXC1 skoXC1 (-3/40))))))<=0]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]].

% In SMTLib2 format:
(declare-fun skoXC1 () Real) (assert (and (<= (* skoXC1 (* skoXC1 (+ (/ (- 1.) 6.) (* skoXC1 (* skoXC1 (+ (/ (- 3.) 40.) (* skoXC1 (* skoXC1 (/ (- 5.) 112.))))))))) 1.) (and (<= (* skoXC1 (* skoXC1 (* skoXC1 (* skoXC1 (+ (/ 32. 15.) (* skoXC1 (* skoXC1 (+ (/ (- 272.) 105.) (* skoXC1 (* skoXC1 (+ (/ (- 1163.) 105.) (* skoXC1 (* skoXC1 (+ (/ 1753. 105.) (* skoXC1 (* skoXC1 (+ (/ (- 169.) 28.) (* skoXC1 (* skoXC1 (/ 25. 56.)))))))))))))))))))) 0.) (and (<= (* skoXC1 (* skoXC1 (+ (/ 1. 3.) (* skoXC1 (* skoXC1 (+ (/ 3. 20.) (* skoXC1 (* skoXC1 (/ 5. 56.))))))))) 1.) (and (<= (* skoXC1 (* skoXC1 (* skoXC1 (* skoXC1 (+ (/ (- 17.) 120.) (* skoXC1 (* skoXC1 (+ (/ (- 27.) 280.) (* skoXC1 (* skoXC1 (/ 5. 224.))))))))))) 0.) (and (<= (* skoXC1 (* skoXC1 (* skoXC1 (* skoXC1 (+ (/ (- 13.) 60.) (* skoXC1 (* skoXC1 (+ (/ (- 9.) 280.) (* skoXC1 (* skoXC1 (/ (- 5.) 28.))))))))))) 0.) (and (<= (* skoXC1 (* skoXC1 (+ (/ (- 1.) 2.) (* skoXC1 (* skoXC1 (+ (/ 7. 120.) (* skoXC1 (* skoXC1 (+ (/ 33. 560.) (* skoXC1 (* skoXC1 (/ (- 5.) 112.)))))))))))) 0.) (and (<= (* skoXC1 (* skoXC1 (+ (/ (- 1.) 6.) (* skoXC1 (* skoXC1 (+ (/ (- 3.) 40.) (* skoXC1 (* skoXC1 (/ (- 5.) 112.))))))))) 1.) (and (<= (* skoXC1 (+ (- 1.) (* skoXC1 (* skoXC1 (+ (/ 1. 3.) (* skoXC1 (* skoXC1 (+ (/ 3. 20.) (* skoXC1 (* skoXC1 (/ 5. 56.))))))))))) 0.) (and (<= (* skoXC1 (* skoXC1 (* skoXC1 (* skoXC1 (+ (/ (- 80.) 3.) (* skoXC1 (* skoXC1 (+ (/ 128. 3.) (* skoXC1 (* skoXC1 (+ (/ (- 55.) 3.) (* skoXC1 (* skoXC1 (/ 5. 3.)))))))))))))) 0.) (and (<= (* skoXC1 (* skoXC1 (+ 256. (* skoXC1 (* skoXC1 (+ (- 160.) (* skoXC1 (* skoXC1 (+ 32. (* skoXC1 (* skoXC1 (- 1.)))))))))))) 128.) (and (<= (* skoXC1 (* skoXC1 (/ 1. 3.))) 1.) (and (<= (* skoXC1 (+ (- 1.) (* skoXC1 (* skoXC1 (/ (- 1.) 6.))))) 0.) (and (<= (* skoXC1 (* skoXC1 (* skoXC1 (* skoXC1 (/ (- 2.) 3.))))) 0.) (and (<= (* skoXC1 skoXC1) 2.) (and (<= (* skoXC1 (* skoXC1 (+ (/ (- 1.) 2.) (* skoXC1 (* skoXC1 (/ (- 1.) 6.)))))) 0.) (and (<= (* skoXC1 (* skoXC1 (/ (- 1.) 6.))) 1.) (and (<= (* skoXC1 (+ (- 1.) (* skoXC1 (* skoXC1 (/ 1. 3.))))) 0.) (and (> (/ 7. 8.) skoXC1) (and (> skoXC1 0.) (and (> (* skoXC1 (* skoXC1 (/ (- 1.) 2.))) (- 3.)) (and (<= (* skoXC1 (* skoXC1 (/ 1. 2.))) 3.) (and (<= (* skoXC1 (* skoXC1 (+ 24. (* skoXC1 (* skoXC1 (+ (- 10.) (* skoXC1 skoXC1))))))) 16.) (and (> (* skoXC1 (* skoXC1 (+ (- 80.) (* skoXC1 (* skoXC1 (+ 40. (* skoXC1 (* skoXC1 (+ (- 6.) (* skoXC1 (* skoXC1 (/ 1. 8.)))))))))))) (- 48.)) (and (<= (* skoXC1 (* skoXC1 (+ 80. (* skoXC1 (* skoXC1 (+ (- 40.) (* skoXC1 (* skoXC1 (+ 6. (* skoXC1 (* skoXC1 (/ (- 1.) 8.)))))))))))) 48.) (and (> (* skoXC1 skoXC1) 0.) (and (<= (* skoXC1 (+ (- 1.) (* skoXC1 (* skoXC1 (+ (/ 1. 3.) (* skoXC1 (* skoXC1 (/ 3. 20.)))))))) 0.) (and (<= (* skoXC1 (* skoXC1 (+ (/ (- 1.) 6.) (* skoXC1 (* skoXC1 (/ (- 3.) 40.)))))) 1.) (and (<= (* skoXC1 (* skoXC1 (+ (/ (- 1.) 2.) (* skoXC1 (* skoXC1 (+ (/ 7. 120.) (* skoXC1 (* skoXC1 (/ (- 3.) 40.))))))))) 0.) (and (<= (* skoXC1 (* skoXC1 (* skoXC1 (* skoXC1 (+ (/ (- 13.) 60.) (* skoXC1 (* skoXC1 (/ (- 3.) 10.)))))))) 0.) (and (<= (* skoXC1 (* skoXC1 (* skoXC1 (* skoXC1 (+ (/ (- 17.) 120.) (* skoXC1 (* skoXC1 (/ 3. 80.)))))))) 0.) (and (<= (* skoXC1 (* skoXC1 (+ (/ 1. 3.) (* skoXC1 (* skoXC1 (/ 3. 20.)))))) 1.) (and (<= (* skoXC1 (* skoXC1 (* skoXC1 (* skoXC1 (+ (/ 32. 15.) (* skoXC1 (* skoXC1 (+ (/ (- 296.) 15.) (* skoXC1 (* skoXC1 (+ (/ 391. 15.) (* skoXC1 (* skoXC1 (+ (/ (- 146.) 15.) (* skoXC1 (* skoXC1 (/ 3. 4.))))))))))))))))) 0.) (and (> (* skoXC1 (* skoXC1 (+ (/ 1. 6.) (* skoXC1 (* skoXC1 (/ 3. 40.)))))) (- 1.)) (<= (* skoXC1 (+ (- 1.) (* skoXC1 (* skoXC1 (+ (/ (- 1.) 6.) (* skoXC1 (* skoXC1 (/ (- 3.) 40.)))))))) 0.)))))))))))))))))))))))))))))))))))

% In GRF format:
(sequent " MetiTarski formula " (antecedent (<= (* skoXC1 (* skoXC1 (+ (/ (- 1.) 6.) (* skoXC1 (* skoXC1 (+ (/ (- 3.) 40.) (* skoXC1 (* skoXC1 (/ (- 5.) 112.))))))))) 1.) (<= (* skoXC1 (* skoXC1 (* skoXC1 (* skoXC1 (+ (/ 32. 15.) (* skoXC1 (* skoXC1 (+ (/ (- 272.) 105.) (* skoXC1 (* skoXC1 (+ (/ (- 1163.) 105.) (* skoXC1 (* skoXC1 (+ (/ 1753. 105.) (* skoXC1 (* skoXC1 (+ (/ (- 169.) 28.) (* skoXC1 (* skoXC1 (/ 25. 56.)))))))))))))))))))) 0.) (<= (* skoXC1 (* skoXC1 (+ (/ 1. 3.) (* skoXC1 (* skoXC1 (+ (/ 3. 20.) (* skoXC1 (* skoXC1 (/ 5. 56.))))))))) 1.) (<= (* skoXC1 (* skoXC1 (* skoXC1 (* skoXC1 (+ (/ (- 17.) 120.) (* skoXC1 (* skoXC1 (+ (/ (- 27.) 280.) (* skoXC1 (* skoXC1 (/ 5. 224.))))))))))) 0.) (<= (* skoXC1 (* skoXC1 (* skoXC1 (* skoXC1 (+ (/ (- 13.) 60.) (* skoXC1 (* skoXC1 (+ (/ (- 9.) 280.) (* skoXC1 (* skoXC1 (/ (- 5.) 28.))))))))))) 0.) (<= (* skoXC1 (* skoXC1 (+ (/ (- 1.) 2.) (* skoXC1 (* skoXC1 (+ (/ 7. 120.) (* skoXC1 (* skoXC1 (+ (/ 33. 560.) (* skoXC1 (* skoXC1 (/ (- 5.) 112.)))))))))))) 0.) (<= (* skoXC1 (* skoXC1 (+ (/ (- 1.) 6.) (* skoXC1 (* skoXC1 (+ (/ (- 3.) 40.) (* skoXC1 (* skoXC1 (/ (- 5.) 112.))))))))) 1.) (<= (* skoXC1 (+ (- 1.) (* skoXC1 (* skoXC1 (+ (/ 1. 3.) (* skoXC1 (* skoXC1 (+ (/ 3. 20.) (* skoXC1 (* skoXC1 (/ 5. 56.))))))))))) 0.) (<= (* skoXC1 (* skoXC1 (* skoXC1 (* skoXC1 (+ (/ (- 80.) 3.) (* skoXC1 (* skoXC1 (+ (/ 128. 3.) (* skoXC1 (* skoXC1 (+ (/ (- 55.) 3.) (* skoXC1 (* skoXC1 (/ 5. 3.)))))))))))))) 0.) (<= (* skoXC1 (* skoXC1 (+ 256. (* skoXC1 (* skoXC1 (+ (- 160.) (* skoXC1 (* skoXC1 (+ 32. (* skoXC1 (* skoXC1 (- 1.)))))))))))) 128.) (<= (* skoXC1 (* skoXC1 (/ 1. 3.))) 1.) (<= (* skoXC1 (+ (- 1.) (* skoXC1 (* skoXC1 (/ (- 1.) 6.))))) 0.) (<= (* skoXC1 (* skoXC1 (* skoXC1 (* skoXC1 (/ (- 2.) 3.))))) 0.) (<= (* skoXC1 skoXC1) 2.) (<= (* skoXC1 (* skoXC1 (+ (/ (- 1.) 2.) (* skoXC1 (* skoXC1 (/ (- 1.) 6.)))))) 0.) (<= (* skoXC1 (* skoXC1 (/ (- 1.) 6.))) 1.) (<= (* skoXC1 (+ (- 1.) (* skoXC1 (* skoXC1 (/ 1. 3.))))) 0.) (> (/ 7. 8.) skoXC1) (> skoXC1 0.) (> (* skoXC1 (* skoXC1 (/ (- 1.) 2.))) (- 3.)) (<= (* skoXC1 (* skoXC1 (/ 1. 2.))) 3.) (<= (* skoXC1 (* skoXC1 (+ 24. (* skoXC1 (* skoXC1 (+ (- 10.) (* skoXC1 skoXC1))))))) 16.) (> (* skoXC1 (* skoXC1 (+ (- 80.) (* skoXC1 (* skoXC1 (+ 40. (* skoXC1 (* skoXC1 (+ (- 6.) (* skoXC1 (* skoXC1 (/ 1. 8.)))))))))))) (- 48.)) (<= (* skoXC1 (* skoXC1 (+ 80. (* skoXC1 (* skoXC1 (+ (- 40.) (* skoXC1 (* skoXC1 (+ 6. (* skoXC1 (* skoXC1 (/ (- 1.) 8.)))))))))))) 48.) (> (* skoXC1 skoXC1) 0.) (<= (* skoXC1 (+ (- 1.) (* skoXC1 (* skoXC1 (+ (/ 1. 3.) (* skoXC1 (* skoXC1 (/ 3. 20.)))))))) 0.) (<= (* skoXC1 (* skoXC1 (+ (/ (- 1.) 6.) (* skoXC1 (* skoXC1 (/ (- 3.) 40.)))))) 1.) (<= (* skoXC1 (* skoXC1 (+ (/ (- 1.) 2.) (* skoXC1 (* skoXC1 (+ (/ 7. 120.) (* skoXC1 (* skoXC1 (/ (- 3.) 40.))))))))) 0.) (<= (* skoXC1 (* skoXC1 (* skoXC1 (* skoXC1 (+ (/ (- 13.) 60.) (* skoXC1 (* skoXC1 (/ (- 3.) 10.)))))))) 0.) (<= (* skoXC1 (* skoXC1 (* skoXC1 (* skoXC1 (+ (/ (- 17.) 120.) (* skoXC1 (* skoXC1 (/ 3. 80.)))))))) 0.) (<= (* skoXC1 (* skoXC1 (+ (/ 1. 3.) (* skoXC1 (* skoXC1 (/ 3. 20.)))))) 1.) (<= (* skoXC1 (* skoXC1 (* skoXC1 (* skoXC1 (+ (/ 32. 15.) (* skoXC1 (* skoXC1 (+ (/ (- 296.) 15.) (* skoXC1 (* skoXC1 (+ (/ 391. 15.) (* skoXC1 (* skoXC1 (+ (/ (- 146.) 15.) (* skoXC1 (* skoXC1 (/ 3. 4.))))))))))))))))) 0.) (> (* skoXC1 (* skoXC1 (+ (/ 1. 6.) (* skoXC1 (* skoXC1 (/ 3. 40.)))))) (- 1.))) (succedent (> (* skoXC1 (+ (- 1.) (* skoXC1 (* skoXC1 (+ (/ (- 1.) 6.) (* skoXC1 (* skoXC1 (/ (- 3.) 40.)))))))) 0.)))
-----[end problem]-----

-----[begin problem]-----
% In Mathematica format:
Timing[Resolve[Exists[{skoXC1}, And[skoXC1*skoXC1*skoXC1*skoXC1*((32/15)+skoXC1*skoXC1*((-272/105)+skoXC1*skoXC1*((-1163/105)+skoXC1*skoXC1*((1753/105)+skoXC1*skoXC1*((-169/28)+skoXC1*skoXC1*(25/56))))))<=0,skoXC1*skoXC1*((1/6)+skoXC1*skoXC1*((3/40)+skoXC1*skoXC1*(5/112)))>-1,skoXC1*skoXC1*skoXC1*skoXC1*((32/15)+skoXC1*skoXC1*((-272/105)+skoXC1*skoXC1*((-1163/105)+skoXC1*skoXC1*((1753/105)+skoXC1*skoXC1*((-169/28)+skoXC1*skoXC1*(25/56))))))<=0,skoXC1*skoXC1*((1/3)+skoXC1*skoXC1*((3/20)+skoXC1*skoXC1*(5/56)))<=1,skoXC1*skoXC1*skoXC1*skoXC1*((-17/120)+skoXC1*skoXC1*((-27/280)+skoXC1*skoXC1*(5/224)))<=0,skoXC1*skoXC1*skoXC1*skoXC1*((-13/60)+skoXC1*skoXC1*((-9/280)+skoXC1*skoXC1*(-5/28)))<=0,skoXC1*skoXC1*((-1/2)+skoXC1*skoXC1*((7/120)+skoXC1*skoXC1*((33/560)+skoXC1*skoXC1*(-5/112))))<=0,skoXC1*skoXC1*((-1/6)+skoXC1*skoXC1*((-3/40)+skoXC1*skoXC1*(-5/112)))<=1,skoXC1*(-1+skoXC1*skoXC1*((1/3)+skoXC1*skoXC1*((3/20)+skoXC1*skoXC1*(5/56))))<=0,skoXC1*skoXC1*skoXC1*skoXC1*((-80/3)+skoXC1*skoXC1*((128/3)+skoXC1*skoXC1*((-55/3)+skoXC1*skoXC1*(5/3))))<=0,skoXC1*skoXC1*(256+skoXC1*skoXC1*(-160+skoXC1*skoXC1*(32+skoXC1*skoXC1*-1)))<=128,skoXC1*skoXC1*(1/3)<=1,skoXC1*(-1+skoXC1*skoXC1*(-1/6))<=0,skoXC1*skoXC1*skoXC1*skoXC1*(-2/3)<=0,skoXC1*skoXC1<=2,skoXC1*skoXC1*((-1/2)+skoXC1*skoXC1*(-1/6))<=0,skoXC1*skoXC1*(-1/6)<=1,skoXC1*(-1+skoXC1*skoXC1*(1/3))<=0,(7/8)>skoXC1,skoXC1>0,skoXC1*skoXC1*(-1/2)>-3,skoXC1*skoXC1*(1/2)<=3,skoXC1*skoXC1*(24+skoXC1*skoXC1*(-10+skoXC1*skoXC1))<=16,skoXC1*skoXC1*(-80+skoXC1*skoXC1*(40+skoXC1*skoXC1*(-6+skoXC1*skoXC1*(1/8))))>-48,skoXC1*skoXC1*(80+skoXC1*skoXC1*(-40+skoXC1*skoXC1*(6+skoXC1*skoXC1*(-1/8))))<=48,skoXC1*skoXC1>0,skoXC1*(-1+skoXC1*skoXC1*((1/3)+skoXC1*skoXC1*(3/20)))<=0,skoXC1*skoXC1*((-1/6)+skoXC1*skoXC1*(-3/40))<=1,skoXC1*skoXC1*((-1/2)+skoXC1*skoXC1*((7/120)+skoXC1*skoXC1*(-3/40)))<=0,skoXC1*skoXC1*skoXC1*skoXC1*((-13/60)+skoXC1*skoXC1*(-3/10))<=0,skoXC1*skoXC1*skoXC1*skoXC1*((-17/120)+skoXC1*skoXC1*(3/80))<=0,skoXC1*skoXC1*((1/3)+skoXC1*skoXC1*(3/20))<=1,skoXC1*skoXC1*skoXC1*skoXC1*((32/15)+skoXC1*skoXC1*((-296/15)+skoXC1*skoXC1*((391/15)+skoXC1*skoXC1*((-146/15)+skoXC1*skoXC1*(3/4)))))<=0,skoXC1*skoXC1*((1/6)+skoXC1*skoXC1*(3/40))>-1,skoXC1*(-1+skoXC1*skoXC1*((-1/6)+skoXC1*skoXC1*(-3/40)))<=0]], Reals]]

% In QepcadB format:
(E skoXC1) [[(skoXC1 skoXC1 skoXC1 skoXC1 (32/15+(skoXC1 skoXC1 (-272/105+(skoXC1 skoXC1 (-1163/105+(skoXC1 skoXC1 (1753/105+(skoXC1 skoXC1 (-169/28+(skoXC1 skoXC1 (25/56))))))))))))<=0]/\[[-1<(skoXC1 skoXC1 (1/6+(skoXC1 skoXC1 (3/40+(skoXC1 skoXC1 (5/112))))))]/\[[(skoXC1 skoXC1 skoXC1 skoXC1 (32/15+(skoXC1 skoXC1 (-272/105+(skoXC1 skoXC1 (-1163/105+(skoXC1 skoXC1 (1753/105+(skoXC1 skoXC1 (-169/28+(skoXC1 skoXC1 (25/56))))))))))))<=0]/\[[(skoXC1 skoXC1 (1/3+(skoXC1 skoXC1 (3/20+(skoXC1 skoXC1 (5/56))))))<=1]/\[[(skoXC1 skoXC1 skoXC1 skoXC1 (-17/120+(skoXC1 skoXC1 (-27/280+(skoXC1 skoXC1 (5/224))))))<=0]/\[[(skoXC1 skoXC1 skoXC1 skoXC1 (-13/60+(skoXC1 skoXC1 (-9/280+(skoXC1 skoXC1 (-5/28))))))<=0]/\[[(skoXC1 skoXC1 (-1/2+(skoXC1 skoXC1 (7/120+(skoXC1 skoXC1 (33/560+(skoXC1 skoXC1 (-5/112))))))))<=0]/\[[(skoXC1 skoXC1 (-1/6+(skoXC1 skoXC1 (-3/40+(skoXC1 skoXC1 (-5/112))))))<=1]/\[[(skoXC1 (-1+(skoXC1 skoXC1 (1/3+(skoXC1 skoXC1 (3/20+(skoXC1 skoXC1 (5/56))))))))<=0]/\[[(skoXC1 skoXC1 skoXC1 skoXC1 (-80/3+(skoXC1 skoXC1 (128/3+(skoXC1 skoXC1 (-55/3+(skoXC1 skoXC1 (5/3))))))))<=0]/\[[(skoXC1 skoXC1 (256+(skoXC1 skoXC1 (-160+(skoXC1 skoXC1 (32+(skoXC1 skoXC1 (-1))))))))<=128]/\[[(skoXC1 skoXC1 (1/3))<=1]/\[[(skoXC1 (-1+(skoXC1 skoXC1 (-1/6))))<=0]/\[[(skoXC1 skoXC1 skoXC1 skoXC1 (-2/3))<=0]/\[[(skoXC1 skoXC1)<=2]/\[[(skoXC1 skoXC1 (-1/2+(skoXC1 skoXC1 (-1/6))))<=0]/\[[(skoXC1 skoXC1 (-1/6))<=1]/\[[(skoXC1 (-1+(skoXC1 skoXC1 (1/3))))<=0]/\[[skoXC1<7/8]/\[[0<skoXC1]/\[[-3<(skoXC1 skoXC1 (-1/2))]/\[[(skoXC1 skoXC1 (1/2))<=3]/\[[(skoXC1 skoXC1 (24+(skoXC1 skoXC1 (-10+(skoXC1 skoXC1)))))<=16]/\[[-48<(skoXC1 skoXC1 (-80+(skoXC1 skoXC1 (40+(skoXC1 skoXC1 (-6+(skoXC1 skoXC1 (1/8))))))))]/\[[(skoXC1 skoXC1 (80+(skoXC1 skoXC1 (-40+(skoXC1 skoXC1 (6+(skoXC1 skoXC1 (-1/8))))))))<=48]/\[[0<(skoXC1 skoXC1)]/\[[(skoXC1 (-1+(skoXC1 skoXC1 (1/3+(skoXC1 skoXC1 (3/20))))))<=0]/\[[(skoXC1 skoXC1 (-1/6+(skoXC1 skoXC1 (-3/40))))<=1]/\[[(skoXC1 skoXC1 (-1/2+(skoXC1 skoXC1 (7/120+(skoXC1 skoXC1 (-3/40))))))<=0]/\[[(skoXC1 skoXC1 skoXC1 skoXC1 (-13/60+(skoXC1 skoXC1 (-3/10))))<=0]/\[[(skoXC1 skoXC1 skoXC1 skoXC1 (-17/120+(skoXC1 skoXC1 (3/80))))<=0]/\[[(skoXC1 skoXC1 (1/3+(skoXC1 skoXC1 (3/20))))<=1]/\[[(skoXC1 skoXC1 skoXC1 skoXC1 (32/15+(skoXC1 skoXC1 (-296/15+(skoXC1 skoXC1 (391/15+(skoXC1 skoXC1 (-146/15+(skoXC1 skoXC1 (3/4))))))))))<=0]/\[[-1<(skoXC1 skoXC1 (1/6+(skoXC1 skoXC1 (3/40))))]/\[(skoXC1 (-1+(skoXC1 skoXC1 (-1/6+(skoXC1 skoXC1 (-3/40))))))<=0]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]].

% In SMTLib2 format:
(declare-fun skoXC1 () Real) (assert (and (<= (* skoXC1 (* skoXC1 (* skoXC1 (* skoXC1 (+ (/ 32. 15.) (* skoXC1 (* skoXC1 (+ (/ (- 272.) 105.) (* skoXC1 (* skoXC1 (+ (/ (- 1163.) 105.) (* skoXC1 (* skoXC1 (+ (/ 1753. 105.) (* skoXC1 (* skoXC1 (+ (/ (- 169.) 28.) (* skoXC1 (* skoXC1 (/ 25. 56.)))))))))))))))))))) 0.) (and (> (* skoXC1 (* skoXC1 (+ (/ 1. 6.) (* skoXC1 (* skoXC1 (+ (/ 3. 40.) (* skoXC1 (* skoXC1 (/ 5. 112.))))))))) (- 1.)) (and (<= (* skoXC1 (* skoXC1 (* skoXC1 (* skoXC1 (+ (/ 32. 15.) (* skoXC1 (* skoXC1 (+ (/ (- 272.) 105.) (* skoXC1 (* skoXC1 (+ (/ (- 1163.) 105.) (* skoXC1 (* skoXC1 (+ (/ 1753. 105.) (* skoXC1 (* skoXC1 (+ (/ (- 169.) 28.) (* skoXC1 (* skoXC1 (/ 25. 56.)))))))))))))))))))) 0.) (and (<= (* skoXC1 (* skoXC1 (+ (/ 1. 3.) (* skoXC1 (* skoXC1 (+ (/ 3. 20.) (* skoXC1 (* skoXC1 (/ 5. 56.))))))))) 1.) (and (<= (* skoXC1 (* skoXC1 (* skoXC1 (* skoXC1 (+ (/ (- 17.) 120.) (* skoXC1 (* skoXC1 (+ (/ (- 27.) 280.) (* skoXC1 (* skoXC1 (/ 5. 224.))))))))))) 0.) (and (<= (* skoXC1 (* skoXC1 (* skoXC1 (* skoXC1 (+ (/ (- 13.) 60.) (* skoXC1 (* skoXC1 (+ (/ (- 9.) 280.) (* skoXC1 (* skoXC1 (/ (- 5.) 28.))))))))))) 0.) (and (<= (* skoXC1 (* skoXC1 (+ (/ (- 1.) 2.) (* skoXC1 (* skoXC1 (+ (/ 7. 120.) (* skoXC1 (* skoXC1 (+ (/ 33. 560.) (* skoXC1 (* skoXC1 (/ (- 5.) 112.)))))))))))) 0.) (and (<= (* skoXC1 (* skoXC1 (+ (/ (- 1.) 6.) (* skoXC1 (* skoXC1 (+ (/ (- 3.) 40.) (* skoXC1 (* skoXC1 (/ (- 5.) 112.))))))))) 1.) (and (<= (* skoXC1 (+ (- 1.) (* skoXC1 (* skoXC1 (+ (/ 1. 3.) (* skoXC1 (* skoXC1 (+ (/ 3. 20.) (* skoXC1 (* skoXC1 (/ 5. 56.))))))))))) 0.) (and (<= (* skoXC1 (* skoXC1 (* skoXC1 (* skoXC1 (+ (/ (- 80.) 3.) (* skoXC1 (* skoXC1 (+ (/ 128. 3.) (* skoXC1 (* skoXC1 (+ (/ (- 55.) 3.) (* skoXC1 (* skoXC1 (/ 5. 3.)))))))))))))) 0.) (and (<= (* skoXC1 (* skoXC1 (+ 256. (* skoXC1 (* skoXC1 (+ (- 160.) (* skoXC1 (* skoXC1 (+ 32. (* skoXC1 (* skoXC1 (- 1.)))))))))))) 128.) (and (<= (* skoXC1 (* skoXC1 (/ 1. 3.))) 1.) (and (<= (* skoXC1 (+ (- 1.) (* skoXC1 (* skoXC1 (/ (- 1.) 6.))))) 0.) (and (<= (* skoXC1 (* skoXC1 (* skoXC1 (* skoXC1 (/ (- 2.) 3.))))) 0.) (and (<= (* skoXC1 skoXC1) 2.) (and (<= (* skoXC1 (* skoXC1 (+ (/ (- 1.) 2.) (* skoXC1 (* skoXC1 (/ (- 1.) 6.)))))) 0.) (and (<= (* skoXC1 (* skoXC1 (/ (- 1.) 6.))) 1.) (and (<= (* skoXC1 (+ (- 1.) (* skoXC1 (* skoXC1 (/ 1. 3.))))) 0.) (and (> (/ 7. 8.) skoXC1) (and (> skoXC1 0.) (and (> (* skoXC1 (* skoXC1 (/ (- 1.) 2.))) (- 3.)) (and (<= (* skoXC1 (* skoXC1 (/ 1. 2.))) 3.) (and (<= (* skoXC1 (* skoXC1 (+ 24. (* skoXC1 (* skoXC1 (+ (- 10.) (* skoXC1 skoXC1))))))) 16.) (and (> (* skoXC1 (* skoXC1 (+ (- 80.) (* skoXC1 (* skoXC1 (+ 40. (* skoXC1 (* skoXC1 (+ (- 6.) (* skoXC1 (* skoXC1 (/ 1. 8.)))))))))))) (- 48.)) (and (<= (* skoXC1 (* skoXC1 (+ 80. (* skoXC1 (* skoXC1 (+ (- 40.) (* skoXC1 (* skoXC1 (+ 6. (* skoXC1 (* skoXC1 (/ (- 1.) 8.)))))))))))) 48.) (and (> (* skoXC1 skoXC1) 0.) (and (<= (* skoXC1 (+ (- 1.) (* skoXC1 (* skoXC1 (+ (/ 1. 3.) (* skoXC1 (* skoXC1 (/ 3. 20.)))))))) 0.) (and (<= (* skoXC1 (* skoXC1 (+ (/ (- 1.) 6.) (* skoXC1 (* skoXC1 (/ (- 3.) 40.)))))) 1.) (and (<= (* skoXC1 (* skoXC1 (+ (/ (- 1.) 2.) (* skoXC1 (* skoXC1 (+ (/ 7. 120.) (* skoXC1 (* skoXC1 (/ (- 3.) 40.))))))))) 0.) (and (<= (* skoXC1 (* skoXC1 (* skoXC1 (* skoXC1 (+ (/ (- 13.) 60.) (* skoXC1 (* skoXC1 (/ (- 3.) 10.)))))))) 0.) (and (<= (* skoXC1 (* skoXC1 (* skoXC1 (* skoXC1 (+ (/ (- 17.) 120.) (* skoXC1 (* skoXC1 (/ 3. 80.)))))))) 0.) (and (<= (* skoXC1 (* skoXC1 (+ (/ 1. 3.) (* skoXC1 (* skoXC1 (/ 3. 20.)))))) 1.) (and (<= (* skoXC1 (* skoXC1 (* skoXC1 (* skoXC1 (+ (/ 32. 15.) (* skoXC1 (* skoXC1 (+ (/ (- 296.) 15.) (* skoXC1 (* skoXC1 (+ (/ 391. 15.) (* skoXC1 (* skoXC1 (+ (/ (- 146.) 15.) (* skoXC1 (* skoXC1 (/ 3. 4.))))))))))))))))) 0.) (and (> (* skoXC1 (* skoXC1 (+ (/ 1. 6.) (* skoXC1 (* skoXC1 (/ 3. 40.)))))) (- 1.)) (<= (* skoXC1 (+ (- 1.) (* skoXC1 (* skoXC1 (+ (/ (- 1.) 6.) (* skoXC1 (* skoXC1 (/ (- 3.) 40.)))))))) 0.))))))))))))))))))))))))))))))))))))

% In GRF format:
(sequent " MetiTarski formula " (antecedent (<= (* skoXC1 (* skoXC1 (* skoXC1 (* skoXC1 (+ (/ 32. 15.) (* skoXC1 (* skoXC1 (+ (/ (- 272.) 105.) (* skoXC1 (* skoXC1 (+ (/ (- 1163.) 105.) (* skoXC1 (* skoXC1 (+ (/ 1753. 105.) (* skoXC1 (* skoXC1 (+ (/ (- 169.) 28.) (* skoXC1 (* skoXC1 (/ 25. 56.)))))))))))))))))))) 0.) (> (* skoXC1 (* skoXC1 (+ (/ 1. 6.) (* skoXC1 (* skoXC1 (+ (/ 3. 40.) (* skoXC1 (* skoXC1 (/ 5. 112.))))))))) (- 1.)) (<= (* skoXC1 (* skoXC1 (* skoXC1 (* skoXC1 (+ (/ 32. 15.) (* skoXC1 (* skoXC1 (+ (/ (- 272.) 105.) (* skoXC1 (* skoXC1 (+ (/ (- 1163.) 105.) (* skoXC1 (* skoXC1 (+ (/ 1753. 105.) (* skoXC1 (* skoXC1 (+ (/ (- 169.) 28.) (* skoXC1 (* skoXC1 (/ 25. 56.)))))))))))))))))))) 0.) (<= (* skoXC1 (* skoXC1 (+ (/ 1. 3.) (* skoXC1 (* skoXC1 (+ (/ 3. 20.) (* skoXC1 (* skoXC1 (/ 5. 56.))))))))) 1.) (<= (* skoXC1 (* skoXC1 (* skoXC1 (* skoXC1 (+ (/ (- 17.) 120.) (* skoXC1 (* skoXC1 (+ (/ (- 27.) 280.) (* skoXC1 (* skoXC1 (/ 5. 224.))))))))))) 0.) (<= (* skoXC1 (* skoXC1 (* skoXC1 (* skoXC1 (+ (/ (- 13.) 60.) (* skoXC1 (* skoXC1 (+ (/ (- 9.) 280.) (* skoXC1 (* skoXC1 (/ (- 5.) 28.))))))))))) 0.) (<= (* skoXC1 (* skoXC1 (+ (/ (- 1.) 2.) (* skoXC1 (* skoXC1 (+ (/ 7. 120.) (* skoXC1 (* skoXC1 (+ (/ 33. 560.) (* skoXC1 (* skoXC1 (/ (- 5.) 112.)))))))))))) 0.) (<= (* skoXC1 (* skoXC1 (+ (/ (- 1.) 6.) (* skoXC1 (* skoXC1 (+ (/ (- 3.) 40.) (* skoXC1 (* skoXC1 (/ (- 5.) 112.))))))))) 1.) (<= (* skoXC1 (+ (- 1.) (* skoXC1 (* skoXC1 (+ (/ 1. 3.) (* skoXC1 (* skoXC1 (+ (/ 3. 20.) (* skoXC1 (* skoXC1 (/ 5. 56.))))))))))) 0.) (<= (* skoXC1 (* skoXC1 (* skoXC1 (* skoXC1 (+ (/ (- 80.) 3.) (* skoXC1 (* skoXC1 (+ (/ 128. 3.) (* skoXC1 (* skoXC1 (+ (/ (- 55.) 3.) (* skoXC1 (* skoXC1 (/ 5. 3.)))))))))))))) 0.) (<= (* skoXC1 (* skoXC1 (+ 256. (* skoXC1 (* skoXC1 (+ (- 160.) (* skoXC1 (* skoXC1 (+ 32. (* skoXC1 (* skoXC1 (- 1.)))))))))))) 128.) (<= (* skoXC1 (* skoXC1 (/ 1. 3.))) 1.) (<= (* skoXC1 (+ (- 1.) (* skoXC1 (* skoXC1 (/ (- 1.) 6.))))) 0.) (<= (* skoXC1 (* skoXC1 (* skoXC1 (* skoXC1 (/ (- 2.) 3.))))) 0.) (<= (* skoXC1 skoXC1) 2.) (<= (* skoXC1 (* skoXC1 (+ (/ (- 1.) 2.) (* skoXC1 (* skoXC1 (/ (- 1.) 6.)))))) 0.) (<= (* skoXC1 (* skoXC1 (/ (- 1.) 6.))) 1.) (<= (* skoXC1 (+ (- 1.) (* skoXC1 (* skoXC1 (/ 1. 3.))))) 0.) (> (/ 7. 8.) skoXC1) (> skoXC1 0.) (> (* skoXC1 (* skoXC1 (/ (- 1.) 2.))) (- 3.)) (<= (* skoXC1 (* skoXC1 (/ 1. 2.))) 3.) (<= (* skoXC1 (* skoXC1 (+ 24. (* skoXC1 (* skoXC1 (+ (- 10.) (* skoXC1 skoXC1))))))) 16.) (> (* skoXC1 (* skoXC1 (+ (- 80.) (* skoXC1 (* skoXC1 (+ 40. (* skoXC1 (* skoXC1 (+ (- 6.) (* skoXC1 (* skoXC1 (/ 1. 8.)))))))))))) (- 48.)) (<= (* skoXC1 (* skoXC1 (+ 80. (* skoXC1 (* skoXC1 (+ (- 40.) (* skoXC1 (* skoXC1 (+ 6. (* skoXC1 (* skoXC1 (/ (- 1.) 8.)))))))))))) 48.) (> (* skoXC1 skoXC1) 0.) (<= (* skoXC1 (+ (- 1.) (* skoXC1 (* skoXC1 (+ (/ 1. 3.) (* skoXC1 (* skoXC1 (/ 3. 20.)))))))) 0.) (<= (* skoXC1 (* skoXC1 (+ (/ (- 1.) 6.) (* skoXC1 (* skoXC1 (/ (- 3.) 40.)))))) 1.) (<= (* skoXC1 (* skoXC1 (+ (/ (- 1.) 2.) (* skoXC1 (* skoXC1 (+ (/ 7. 120.) (* skoXC1 (* skoXC1 (/ (- 3.) 40.))))))))) 0.) (<= (* skoXC1 (* skoXC1 (* skoXC1 (* skoXC1 (+ (/ (- 13.) 60.) (* skoXC1 (* skoXC1 (/ (- 3.) 10.)))))))) 0.) (<= (* skoXC1 (* skoXC1 (* skoXC1 (* skoXC1 (+ (/ (- 17.) 120.) (* skoXC1 (* skoXC1 (/ 3. 80.)))))))) 0.) (<= (* skoXC1 (* skoXC1 (+ (/ 1. 3.) (* skoXC1 (* skoXC1 (/ 3. 20.)))))) 1.) (<= (* skoXC1 (* skoXC1 (* skoXC1 (* skoXC1 (+ (/ 32. 15.) (* skoXC1 (* skoXC1 (+ (/ (- 296.) 15.) (* skoXC1 (* skoXC1 (+ (/ 391. 15.) (* skoXC1 (* skoXC1 (+ (/ (- 146.) 15.) (* skoXC1 (* skoXC1 (/ 3. 4.))))))))))))))))) 0.) (> (* skoXC1 (* skoXC1 (+ (/ 1. 6.) (* skoXC1 (* skoXC1 (/ 3. 40.)))))) (- 1.))) (succedent (> (* skoXC1 (+ (- 1.) (* skoXC1 (* skoXC1 (+ (/ (- 1.) 6.) (* skoXC1 (* skoXC1 (/ (- 3.) 40.)))))))) 0.)))
-----[end problem]-----

-----[begin problem]-----
% In Mathematica format:
Timing[Resolve[Exists[{skoXC1}, And[skoXC1*skoXC1*((1/6)+skoXC1*skoXC1*((3/40)+skoXC1*skoXC1*(5/112)))<=-1,skoXC1*skoXC1*skoXC1*skoXC1*((32/15)+skoXC1*skoXC1*((-272/105)+skoXC1*skoXC1*((-1163/105)+skoXC1*skoXC1*((1753/105)+skoXC1*skoXC1*((-169/28)+skoXC1*skoXC1*(25/56))))))>0,skoXC1*skoXC1*skoXC1*skoXC1*((32/15)+skoXC1*skoXC1*((-272/105)+skoXC1*skoXC1*((-1163/105)+skoXC1*skoXC1*((1753/105)+skoXC1*skoXC1*((-169/28)+skoXC1*skoXC1*(25/56))))))<=0,skoXC1*skoXC1*((1/3)+skoXC1*skoXC1*((3/20)+skoXC1*skoXC1*(5/56)))<=1,skoXC1*skoXC1*skoXC1*skoXC1*((-17/120)+skoXC1*skoXC1*((-27/280)+skoXC1*skoXC1*(5/224)))<=0,skoXC1*skoXC1*skoXC1*skoXC1*((-13/60)+skoXC1*skoXC1*((-9/280)+skoXC1*skoXC1*(-5/28)))<=0,skoXC1*skoXC1*((-1/2)+skoXC1*skoXC1*((7/120)+skoXC1*skoXC1*((33/560)+skoXC1*skoXC1*(-5/112))))<=0,skoXC1*skoXC1*((-1/6)+skoXC1*skoXC1*((-3/40)+skoXC1*skoXC1*(-5/112)))<=1,skoXC1*(-1+skoXC1*skoXC1*((1/3)+skoXC1*skoXC1*((3/20)+skoXC1*skoXC1*(5/56))))<=0,skoXC1*skoXC1*skoXC1*skoXC1*((-80/3)+skoXC1*skoXC1*((128/3)+skoXC1*skoXC1*((-55/3)+skoXC1*skoXC1*(5/3))))<=0,skoXC1*skoXC1*(256+skoXC1*skoXC1*(-160+skoXC1*skoXC1*(32+skoXC1*skoXC1*-1)))<=128,skoXC1*skoXC1*(1/3)<=1,skoXC1*(-1+skoXC1*skoXC1*(-1/6))<=0,skoXC1*skoXC1*skoXC1*skoXC1*(-2/3)<=0,skoXC1*skoXC1<=2,skoXC1*skoXC1*((-1/2)+skoXC1*skoXC1*(-1/6))<=0,skoXC1*skoXC1*(-1/6)<=1,skoXC1*(-1+skoXC1*skoXC1*(1/3))<=0,(7/8)>skoXC1,skoXC1>0,skoXC1*skoXC1*(-1/2)>-3,skoXC1*skoXC1*(1/2)<=3,skoXC1*skoXC1*(24+skoXC1*skoXC1*(-10+skoXC1*skoXC1))<=16,skoXC1*skoXC1*(-80+skoXC1*skoXC1*(40+skoXC1*skoXC1*(-6+skoXC1*skoXC1*(1/8))))>-48,skoXC1*skoXC1*(80+skoXC1*skoXC1*(-40+skoXC1*skoXC1*(6+skoXC1*skoXC1*(-1/8))))<=48,skoXC1*skoXC1>0,skoXC1*(-1+skoXC1*skoXC1*((1/3)+skoXC1*skoXC1*(3/20)))<=0,skoXC1*skoXC1*((-1/6)+skoXC1*skoXC1*(-3/40))<=1,skoXC1*skoXC1*((-1/2)+skoXC1*skoXC1*((7/120)+skoXC1*skoXC1*(-3/40)))<=0,skoXC1*skoXC1*skoXC1*skoXC1*((-13/60)+skoXC1*skoXC1*(-3/10))<=0,skoXC1*skoXC1*skoXC1*skoXC1*((-17/120)+skoXC1*skoXC1*(3/80))<=0,skoXC1*skoXC1*((1/3)+skoXC1*skoXC1*(3/20))<=1,skoXC1*skoXC1*skoXC1*skoXC1*((32/15)+skoXC1*skoXC1*((-296/15)+skoXC1*skoXC1*((391/15)+skoXC1*skoXC1*((-146/15)+skoXC1*skoXC1*(3/4)))))<=0,skoXC1*skoXC1*((1/6)+skoXC1*skoXC1*(3/40))>-1,skoXC1*(-1+skoXC1*skoXC1*((-1/6)+skoXC1*skoXC1*(-3/40)))<=0]], Reals]]

% In QepcadB format:
(E skoXC1) [[(skoXC1 skoXC1 (1/6+(skoXC1 skoXC1 (3/40+(skoXC1 skoXC1 (5/112))))))<=-1]/\[[0<(skoXC1 skoXC1 skoXC1 skoXC1 (32/15+(skoXC1 skoXC1 (-272/105+(skoXC1 skoXC1 (-1163/105+(skoXC1 skoXC1 (1753/105+(skoXC1 skoXC1 (-169/28+(skoXC1 skoXC1 (25/56))))))))))))]/\[[(skoXC1 skoXC1 skoXC1 skoXC1 (32/15+(skoXC1 skoXC1 (-272/105+(skoXC1 skoXC1 (-1163/105+(skoXC1 skoXC1 (1753/105+(skoXC1 skoXC1 (-169/28+(skoXC1 skoXC1 (25/56))))))))))))<=0]/\[[(skoXC1 skoXC1 (1/3+(skoXC1 skoXC1 (3/20+(skoXC1 skoXC1 (5/56))))))<=1]/\[[(skoXC1 skoXC1 skoXC1 skoXC1 (-17/120+(skoXC1 skoXC1 (-27/280+(skoXC1 skoXC1 (5/224))))))<=0]/\[[(skoXC1 skoXC1 skoXC1 skoXC1 (-13/60+(skoXC1 skoXC1 (-9/280+(skoXC1 skoXC1 (-5/28))))))<=0]/\[[(skoXC1 skoXC1 (-1/2+(skoXC1 skoXC1 (7/120+(skoXC1 skoXC1 (33/560+(skoXC1 skoXC1 (-5/112))))))))<=0]/\[[(skoXC1 skoXC1 (-1/6+(skoXC1 skoXC1 (-3/40+(skoXC1 skoXC1 (-5/112))))))<=1]/\[[(skoXC1 (-1+(skoXC1 skoXC1 (1/3+(skoXC1 skoXC1 (3/20+(skoXC1 skoXC1 (5/56))))))))<=0]/\[[(skoXC1 skoXC1 skoXC1 skoXC1 (-80/3+(skoXC1 skoXC1 (128/3+(skoXC1 skoXC1 (-55/3+(skoXC1 skoXC1 (5/3))))))))<=0]/\[[(skoXC1 skoXC1 (256+(skoXC1 skoXC1 (-160+(skoXC1 skoXC1 (32+(skoXC1 skoXC1 (-1))))))))<=128]/\[[(skoXC1 skoXC1 (1/3))<=1]/\[[(skoXC1 (-1+(skoXC1 skoXC1 (-1/6))))<=0]/\[[(skoXC1 skoXC1 skoXC1 skoXC1 (-2/3))<=0]/\[[(skoXC1 skoXC1)<=2]/\[[(skoXC1 skoXC1 (-1/2+(skoXC1 skoXC1 (-1/6))))<=0]/\[[(skoXC1 skoXC1 (-1/6))<=1]/\[[(skoXC1 (-1+(skoXC1 skoXC1 (1/3))))<=0]/\[[skoXC1<7/8]/\[[0<skoXC1]/\[[-3<(skoXC1 skoXC1 (-1/2))]/\[[(skoXC1 skoXC1 (1/2))<=3]/\[[(skoXC1 skoXC1 (24+(skoXC1 skoXC1 (-10+(skoXC1 skoXC1)))))<=16]/\[[-48<(skoXC1 skoXC1 (-80+(skoXC1 skoXC1 (40+(skoXC1 skoXC1 (-6+(skoXC1 skoXC1 (1/8))))))))]/\[[(skoXC1 skoXC1 (80+(skoXC1 skoXC1 (-40+(skoXC1 skoXC1 (6+(skoXC1 skoXC1 (-1/8))))))))<=48]/\[[0<(skoXC1 skoXC1)]/\[[(skoXC1 (-1+(skoXC1 skoXC1 (1/3+(skoXC1 skoXC1 (3/20))))))<=0]/\[[(skoXC1 skoXC1 (-1/6+(skoXC1 skoXC1 (-3/40))))<=1]/\[[(skoXC1 skoXC1 (-1/2+(skoXC1 skoXC1 (7/120+(skoXC1 skoXC1 (-3/40))))))<=0]/\[[(skoXC1 skoXC1 skoXC1 skoXC1 (-13/60+(skoXC1 skoXC1 (-3/10))))<=0]/\[[(skoXC1 skoXC1 skoXC1 skoXC1 (-17/120+(skoXC1 skoXC1 (3/80))))<=0]/\[[(skoXC1 skoXC1 (1/3+(skoXC1 skoXC1 (3/20))))<=1]/\[[(skoXC1 skoXC1 skoXC1 skoXC1 (32/15+(skoXC1 skoXC1 (-296/15+(skoXC1 skoXC1 (391/15+(skoXC1 skoXC1 (-146/15+(skoXC1 skoXC1 (3/4))))))))))<=0]/\[[-1<(skoXC1 skoXC1 (1/6+(skoXC1 skoXC1 (3/40))))]/\[(skoXC1 (-1+(skoXC1 skoXC1 (-1/6+(skoXC1 skoXC1 (-3/40))))))<=0]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]].

% In SMTLib2 format:
(declare-fun skoXC1 () Real) (assert (and (<= (* skoXC1 (* skoXC1 (+ (/ 1. 6.) (* skoXC1 (* skoXC1 (+ (/ 3. 40.) (* skoXC1 (* skoXC1 (/ 5. 112.))))))))) (- 1.)) (and (> (* skoXC1 (* skoXC1 (* skoXC1 (* skoXC1 (+ (/ 32. 15.) (* skoXC1 (* skoXC1 (+ (/ (- 272.) 105.) (* skoXC1 (* skoXC1 (+ (/ (- 1163.) 105.) (* skoXC1 (* skoXC1 (+ (/ 1753. 105.) (* skoXC1 (* skoXC1 (+ (/ (- 169.) 28.) (* skoXC1 (* skoXC1 (/ 25. 56.)))))))))))))))))))) 0.) (and (<= (* skoXC1 (* skoXC1 (* skoXC1 (* skoXC1 (+ (/ 32. 15.) (* skoXC1 (* skoXC1 (+ (/ (- 272.) 105.) (* skoXC1 (* skoXC1 (+ (/ (- 1163.) 105.) (* skoXC1 (* skoXC1 (+ (/ 1753. 105.) (* skoXC1 (* skoXC1 (+ (/ (- 169.) 28.) (* skoXC1 (* skoXC1 (/ 25. 56.)))))))))))))))))))) 0.) (and (<= (* skoXC1 (* skoXC1 (+ (/ 1. 3.) (* skoXC1 (* skoXC1 (+ (/ 3. 20.) (* skoXC1 (* skoXC1 (/ 5. 56.))))))))) 1.) (and (<= (* skoXC1 (* skoXC1 (* skoXC1 (* skoXC1 (+ (/ (- 17.) 120.) (* skoXC1 (* skoXC1 (+ (/ (- 27.) 280.) (* skoXC1 (* skoXC1 (/ 5. 224.))))))))))) 0.) (and (<= (* skoXC1 (* skoXC1 (* skoXC1 (* skoXC1 (+ (/ (- 13.) 60.) (* skoXC1 (* skoXC1 (+ (/ (- 9.) 280.) (* skoXC1 (* skoXC1 (/ (- 5.) 28.))))))))))) 0.) (and (<= (* skoXC1 (* skoXC1 (+ (/ (- 1.) 2.) (* skoXC1 (* skoXC1 (+ (/ 7. 120.) (* skoXC1 (* skoXC1 (+ (/ 33. 560.) (* skoXC1 (* skoXC1 (/ (- 5.) 112.)))))))))))) 0.) (and (<= (* skoXC1 (* skoXC1 (+ (/ (- 1.) 6.) (* skoXC1 (* skoXC1 (+ (/ (- 3.) 40.) (* skoXC1 (* skoXC1 (/ (- 5.) 112.))))))))) 1.) (and (<= (* skoXC1 (+ (- 1.) (* skoXC1 (* skoXC1 (+ (/ 1. 3.) (* skoXC1 (* skoXC1 (+ (/ 3. 20.) (* skoXC1 (* skoXC1 (/ 5. 56.))))))))))) 0.) (and (<= (* skoXC1 (* skoXC1 (* skoXC1 (* skoXC1 (+ (/ (- 80.) 3.) (* skoXC1 (* skoXC1 (+ (/ 128. 3.) (* skoXC1 (* skoXC1 (+ (/ (- 55.) 3.) (* skoXC1 (* skoXC1 (/ 5. 3.)))))))))))))) 0.) (and (<= (* skoXC1 (* skoXC1 (+ 256. (* skoXC1 (* skoXC1 (+ (- 160.) (* skoXC1 (* skoXC1 (+ 32. (* skoXC1 (* skoXC1 (- 1.)))))))))))) 128.) (and (<= (* skoXC1 (* skoXC1 (/ 1. 3.))) 1.) (and (<= (* skoXC1 (+ (- 1.) (* skoXC1 (* skoXC1 (/ (- 1.) 6.))))) 0.) (and (<= (* skoXC1 (* skoXC1 (* skoXC1 (* skoXC1 (/ (- 2.) 3.))))) 0.) (and (<= (* skoXC1 skoXC1) 2.) (and (<= (* skoXC1 (* skoXC1 (+ (/ (- 1.) 2.) (* skoXC1 (* skoXC1 (/ (- 1.) 6.)))))) 0.) (and (<= (* skoXC1 (* skoXC1 (/ (- 1.) 6.))) 1.) (and (<= (* skoXC1 (+ (- 1.) (* skoXC1 (* skoXC1 (/ 1. 3.))))) 0.) (and (> (/ 7. 8.) skoXC1) (and (> skoXC1 0.) (and (> (* skoXC1 (* skoXC1 (/ (- 1.) 2.))) (- 3.)) (and (<= (* skoXC1 (* skoXC1 (/ 1. 2.))) 3.) (and (<= (* skoXC1 (* skoXC1 (+ 24. (* skoXC1 (* skoXC1 (+ (- 10.) (* skoXC1 skoXC1))))))) 16.) (and (> (* skoXC1 (* skoXC1 (+ (- 80.) (* skoXC1 (* skoXC1 (+ 40. (* skoXC1 (* skoXC1 (+ (- 6.) (* skoXC1 (* skoXC1 (/ 1. 8.)))))))))))) (- 48.)) (and (<= (* skoXC1 (* skoXC1 (+ 80. (* skoXC1 (* skoXC1 (+ (- 40.) (* skoXC1 (* skoXC1 (+ 6. (* skoXC1 (* skoXC1 (/ (- 1.) 8.)))))))))))) 48.) (and (> (* skoXC1 skoXC1) 0.) (and (<= (* skoXC1 (+ (- 1.) (* skoXC1 (* skoXC1 (+ (/ 1. 3.) (* skoXC1 (* skoXC1 (/ 3. 20.)))))))) 0.) (and (<= (* skoXC1 (* skoXC1 (+ (/ (- 1.) 6.) (* skoXC1 (* skoXC1 (/ (- 3.) 40.)))))) 1.) (and (<= (* skoXC1 (* skoXC1 (+ (/ (- 1.) 2.) (* skoXC1 (* skoXC1 (+ (/ 7. 120.) (* skoXC1 (* skoXC1 (/ (- 3.) 40.))))))))) 0.) (and (<= (* skoXC1 (* skoXC1 (* skoXC1 (* skoXC1 (+ (/ (- 13.) 60.) (* skoXC1 (* skoXC1 (/ (- 3.) 10.)))))))) 0.) (and (<= (* skoXC1 (* skoXC1 (* skoXC1 (* skoXC1 (+ (/ (- 17.) 120.) (* skoXC1 (* skoXC1 (/ 3. 80.)))))))) 0.) (and (<= (* skoXC1 (* skoXC1 (+ (/ 1. 3.) (* skoXC1 (* skoXC1 (/ 3. 20.)))))) 1.) (and (<= (* skoXC1 (* skoXC1 (* skoXC1 (* skoXC1 (+ (/ 32. 15.) (* skoXC1 (* skoXC1 (+ (/ (- 296.) 15.) (* skoXC1 (* skoXC1 (+ (/ 391. 15.) (* skoXC1 (* skoXC1 (+ (/ (- 146.) 15.) (* skoXC1 (* skoXC1 (/ 3. 4.))))))))))))))))) 0.) (and (> (* skoXC1 (* skoXC1 (+ (/ 1. 6.) (* skoXC1 (* skoXC1 (/ 3. 40.)))))) (- 1.)) (<= (* skoXC1 (+ (- 1.) (* skoXC1 (* skoXC1 (+ (/ (- 1.) 6.) (* skoXC1 (* skoXC1 (/ (- 3.) 40.)))))))) 0.))))))))))))))))))))))))))))))))))))

% In GRF format:
(sequent " MetiTarski formula " (antecedent (<= (* skoXC1 (* skoXC1 (+ (/ 1. 6.) (* skoXC1 (* skoXC1 (+ (/ 3. 40.) (* skoXC1 (* skoXC1 (/ 5. 112.))))))))) (- 1.)) (> (* skoXC1 (* skoXC1 (* skoXC1 (* skoXC1 (+ (/ 32. 15.) (* skoXC1 (* skoXC1 (+ (/ (- 272.) 105.) (* skoXC1 (* skoXC1 (+ (/ (- 1163.) 105.) (* skoXC1 (* skoXC1 (+ (/ 1753. 105.) (* skoXC1 (* skoXC1 (+ (/ (- 169.) 28.) (* skoXC1 (* skoXC1 (/ 25. 56.)))))))))))))))))))) 0.) (<= (* skoXC1 (* skoXC1 (* skoXC1 (* skoXC1 (+ (/ 32. 15.) (* skoXC1 (* skoXC1 (+ (/ (- 272.) 105.) (* skoXC1 (* skoXC1 (+ (/ (- 1163.) 105.) (* skoXC1 (* skoXC1 (+ (/ 1753. 105.) (* skoXC1 (* skoXC1 (+ (/ (- 169.) 28.) (* skoXC1 (* skoXC1 (/ 25. 56.)))))))))))))))))))) 0.) (<= (* skoXC1 (* skoXC1 (+ (/ 1. 3.) (* skoXC1 (* skoXC1 (+ (/ 3. 20.) (* skoXC1 (* skoXC1 (/ 5. 56.))))))))) 1.) (<= (* skoXC1 (* skoXC1 (* skoXC1 (* skoXC1 (+ (/ (- 17.) 120.) (* skoXC1 (* skoXC1 (+ (/ (- 27.) 280.) (* skoXC1 (* skoXC1 (/ 5. 224.))))))))))) 0.) (<= (* skoXC1 (* skoXC1 (* skoXC1 (* skoXC1 (+ (/ (- 13.) 60.) (* skoXC1 (* skoXC1 (+ (/ (- 9.) 280.) (* skoXC1 (* skoXC1 (/ (- 5.) 28.))))))))))) 0.) (<= (* skoXC1 (* skoXC1 (+ (/ (- 1.) 2.) (* skoXC1 (* skoXC1 (+ (/ 7. 120.) (* skoXC1 (* skoXC1 (+ (/ 33. 560.) (* skoXC1 (* skoXC1 (/ (- 5.) 112.)))))))))))) 0.) (<= (* skoXC1 (* skoXC1 (+ (/ (- 1.) 6.) (* skoXC1 (* skoXC1 (+ (/ (- 3.) 40.) (* skoXC1 (* skoXC1 (/ (- 5.) 112.))))))))) 1.) (<= (* skoXC1 (+ (- 1.) (* skoXC1 (* skoXC1 (+ (/ 1. 3.) (* skoXC1 (* skoXC1 (+ (/ 3. 20.) (* skoXC1 (* skoXC1 (/ 5. 56.))))))))))) 0.) (<= (* skoXC1 (* skoXC1 (* skoXC1 (* skoXC1 (+ (/ (- 80.) 3.) (* skoXC1 (* skoXC1 (+ (/ 128. 3.) (* skoXC1 (* skoXC1 (+ (/ (- 55.) 3.) (* skoXC1 (* skoXC1 (/ 5. 3.)))))))))))))) 0.) (<= (* skoXC1 (* skoXC1 (+ 256. (* skoXC1 (* skoXC1 (+ (- 160.) (* skoXC1 (* skoXC1 (+ 32. (* skoXC1 (* skoXC1 (- 1.)))))))))))) 128.) (<= (* skoXC1 (* skoXC1 (/ 1. 3.))) 1.) (<= (* skoXC1 (+ (- 1.) (* skoXC1 (* skoXC1 (/ (- 1.) 6.))))) 0.) (<= (* skoXC1 (* skoXC1 (* skoXC1 (* skoXC1 (/ (- 2.) 3.))))) 0.) (<= (* skoXC1 skoXC1) 2.) (<= (* skoXC1 (* skoXC1 (+ (/ (- 1.) 2.) (* skoXC1 (* skoXC1 (/ (- 1.) 6.)))))) 0.) (<= (* skoXC1 (* skoXC1 (/ (- 1.) 6.))) 1.) (<= (* skoXC1 (+ (- 1.) (* skoXC1 (* skoXC1 (/ 1. 3.))))) 0.) (> (/ 7. 8.) skoXC1) (> skoXC1 0.) (> (* skoXC1 (* skoXC1 (/ (- 1.) 2.))) (- 3.)) (<= (* skoXC1 (* skoXC1 (/ 1. 2.))) 3.) (<= (* skoXC1 (* skoXC1 (+ 24. (* skoXC1 (* skoXC1 (+ (- 10.) (* skoXC1 skoXC1))))))) 16.) (> (* skoXC1 (* skoXC1 (+ (- 80.) (* skoXC1 (* skoXC1 (+ 40. (* skoXC1 (* skoXC1 (+ (- 6.) (* skoXC1 (* skoXC1 (/ 1. 8.)))))))))))) (- 48.)) (<= (* skoXC1 (* skoXC1 (+ 80. (* skoXC1 (* skoXC1 (+ (- 40.) (* skoXC1 (* skoXC1 (+ 6. (* skoXC1 (* skoXC1 (/ (- 1.) 8.)))))))))))) 48.) (> (* skoXC1 skoXC1) 0.) (<= (* skoXC1 (+ (- 1.) (* skoXC1 (* skoXC1 (+ (/ 1. 3.) (* skoXC1 (* skoXC1 (/ 3. 20.)))))))) 0.) (<= (* skoXC1 (* skoXC1 (+ (/ (- 1.) 6.) (* skoXC1 (* skoXC1 (/ (- 3.) 40.)))))) 1.) (<= (* skoXC1 (* skoXC1 (+ (/ (- 1.) 2.) (* skoXC1 (* skoXC1 (+ (/ 7. 120.) (* skoXC1 (* skoXC1 (/ (- 3.) 40.))))))))) 0.) (<= (* skoXC1 (* skoXC1 (* skoXC1 (* skoXC1 (+ (/ (- 13.) 60.) (* skoXC1 (* skoXC1 (/ (- 3.) 10.)))))))) 0.) (<= (* skoXC1 (* skoXC1 (* skoXC1 (* skoXC1 (+ (/ (- 17.) 120.) (* skoXC1 (* skoXC1 (/ 3. 80.)))))))) 0.) (<= (* skoXC1 (* skoXC1 (+ (/ 1. 3.) (* skoXC1 (* skoXC1 (/ 3. 20.)))))) 1.) (<= (* skoXC1 (* skoXC1 (* skoXC1 (* skoXC1 (+ (/ 32. 15.) (* skoXC1 (* skoXC1 (+ (/ (- 296.) 15.) (* skoXC1 (* skoXC1 (+ (/ 391. 15.) (* skoXC1 (* skoXC1 (+ (/ (- 146.) 15.) (* skoXC1 (* skoXC1 (/ 3. 4.))))))))))))))))) 0.) (> (* skoXC1 (* skoXC1 (+ (/ 1. 6.) (* skoXC1 (* skoXC1 (/ 3. 40.)))))) (- 1.))) (succedent (> (* skoXC1 (+ (- 1.) (* skoXC1 (* skoXC1 (+ (/ (- 1.) 6.) (* skoXC1 (* skoXC1 (/ (- 3.) 40.)))))))) 0.)))
-----[end problem]-----

-----[begin problem]-----
% In Mathematica format:
Timing[Resolve[Exists[{skoXC1}, And[skoXC1*skoXC1*((-1/6)+skoXC1*skoXC1*((-3/40)+skoXC1*skoXC1*(-5/112)))<=1,skoXC1*skoXC1*skoXC1*skoXC1*((32/15)+skoXC1*skoXC1*((-272/105)+skoXC1*skoXC1*((-1163/105)+skoXC1*skoXC1*((1753/105)+skoXC1*skoXC1*((-169/28)+skoXC1*skoXC1*(25/56))))))<=0,skoXC1*skoXC1*((1/3)+skoXC1*skoXC1*((3/20)+skoXC1*skoXC1*(5/56)))<=1,skoXC1*skoXC1*skoXC1*skoXC1*((-17/120)+skoXC1*skoXC1*((-27/280)+skoXC1*skoXC1*(5/224)))<=0,skoXC1*skoXC1*skoXC1*skoXC1*((-13/60)+skoXC1*skoXC1*((-9/280)+skoXC1*skoXC1*(-5/28)))<=0,skoXC1*skoXC1*((-1/2)+skoXC1*skoXC1*((7/120)+skoXC1*skoXC1*((33/560)+skoXC1*skoXC1*(-5/112))))<=0,skoXC1*skoXC1*((-1/6)+skoXC1*skoXC1*((-3/40)+skoXC1*skoXC1*(-5/112)))<=1,skoXC1*(-1+skoXC1*skoXC1*((1/3)+skoXC1*skoXC1*((3/20)+skoXC1*skoXC1*(5/56))))<=0,skoXC1*skoXC1*skoXC1*skoXC1*((-80/3)+skoXC1*skoXC1*((128/3)+skoXC1*skoXC1*((-55/3)+skoXC1*skoXC1*(5/3))))<=0,skoXC1*skoXC1*(256+skoXC1*skoXC1*(-160+skoXC1*skoXC1*(32+skoXC1*skoXC1*-1)))<=128,skoXC1*skoXC1*(1/3)<=1,skoXC1*(-1+skoXC1*skoXC1*(-1/6))<=0,skoXC1*skoXC1*skoXC1*skoXC1*(-2/3)<=0,skoXC1*skoXC1<=2,skoXC1*skoXC1*((-1/2)+skoXC1*skoXC1*(-1/6))<=0,skoXC1*skoXC1*(-1/6)<=1,skoXC1*(-1+skoXC1*skoXC1*(1/3))<=0,(7/8)>skoXC1,skoXC1>0,skoXC1*skoXC1*(-1/2)>-3,skoXC1*skoXC1*(1/2)<=3,skoXC1*skoXC1*(24+skoXC1*skoXC1*(-10+skoXC1*skoXC1))<=16,skoXC1*skoXC1*(-80+skoXC1*skoXC1*(40+skoXC1*skoXC1*(-6+skoXC1*skoXC1*(1/8))))>-48,skoXC1*skoXC1*(80+skoXC1*skoXC1*(-40+skoXC1*skoXC1*(6+skoXC1*skoXC1*(-1/8))))<=48,skoXC1*skoXC1>0,skoXC1*(-1+skoXC1*skoXC1*((1/3)+skoXC1*skoXC1*(3/20)))<=0,skoXC1*skoXC1*((-1/6)+skoXC1*skoXC1*(-3/40))<=1,skoXC1*skoXC1*((-1/2)+skoXC1*skoXC1*((7/120)+skoXC1*skoXC1*(-3/40)))<=0,skoXC1*skoXC1*skoXC1*skoXC1*((-13/60)+skoXC1*skoXC1*(-3/10))<=0,skoXC1*skoXC1*skoXC1*skoXC1*((-17/120)+skoXC1*skoXC1*(3/80))<=0,skoXC1*skoXC1*((1/3)+skoXC1*skoXC1*(3/20))<=1,skoXC1*skoXC1*skoXC1*skoXC1*((32/15)+skoXC1*skoXC1*((-296/15)+skoXC1*skoXC1*((391/15)+skoXC1*skoXC1*((-146/15)+skoXC1*skoXC1*(3/4)))))<=0,skoXC1*skoXC1*((1/6)+skoXC1*skoXC1*(3/40))>-1,skoXC1*(-1+skoXC1*skoXC1*((-1/6)+skoXC1*skoXC1*(-3/40)))<=0]], Reals]]

% In QepcadB format:
(E skoXC1) [[(skoXC1 skoXC1 (-1/6+(skoXC1 skoXC1 (-3/40+(skoXC1 skoXC1 (-5/112))))))<=1]/\[[(skoXC1 skoXC1 skoXC1 skoXC1 (32/15+(skoXC1 skoXC1 (-272/105+(skoXC1 skoXC1 (-1163/105+(skoXC1 skoXC1 (1753/105+(skoXC1 skoXC1 (-169/28+(skoXC1 skoXC1 (25/56))))))))))))<=0]/\[[(skoXC1 skoXC1 (1/3+(skoXC1 skoXC1 (3/20+(skoXC1 skoXC1 (5/56))))))<=1]/\[[(skoXC1 skoXC1 skoXC1 skoXC1 (-17/120+(skoXC1 skoXC1 (-27/280+(skoXC1 skoXC1 (5/224))))))<=0]/\[[(skoXC1 skoXC1 skoXC1 skoXC1 (-13/60+(skoXC1 skoXC1 (-9/280+(skoXC1 skoXC1 (-5/28))))))<=0]/\[[(skoXC1 skoXC1 (-1/2+(skoXC1 skoXC1 (7/120+(skoXC1 skoXC1 (33/560+(skoXC1 skoXC1 (-5/112))))))))<=0]/\[[(skoXC1 skoXC1 (-1/6+(skoXC1 skoXC1 (-3/40+(skoXC1 skoXC1 (-5/112))))))<=1]/\[[(skoXC1 (-1+(skoXC1 skoXC1 (1/3+(skoXC1 skoXC1 (3/20+(skoXC1 skoXC1 (5/56))))))))<=0]/\[[(skoXC1 skoXC1 skoXC1 skoXC1 (-80/3+(skoXC1 skoXC1 (128/3+(skoXC1 skoXC1 (-55/3+(skoXC1 skoXC1 (5/3))))))))<=0]/\[[(skoXC1 skoXC1 (256+(skoXC1 skoXC1 (-160+(skoXC1 skoXC1 (32+(skoXC1 skoXC1 (-1))))))))<=128]/\[[(skoXC1 skoXC1 (1/3))<=1]/\[[(skoXC1 (-1+(skoXC1 skoXC1 (-1/6))))<=0]/\[[(skoXC1 skoXC1 skoXC1 skoXC1 (-2/3))<=0]/\[[(skoXC1 skoXC1)<=2]/\[[(skoXC1 skoXC1 (-1/2+(skoXC1 skoXC1 (-1/6))))<=0]/\[[(skoXC1 skoXC1 (-1/6))<=1]/\[[(skoXC1 (-1+(skoXC1 skoXC1 (1/3))))<=0]/\[[skoXC1<7/8]/\[[0<skoXC1]/\[[-3<(skoXC1 skoXC1 (-1/2))]/\[[(skoXC1 skoXC1 (1/2))<=3]/\[[(skoXC1 skoXC1 (24+(skoXC1 skoXC1 (-10+(skoXC1 skoXC1)))))<=16]/\[[-48<(skoXC1 skoXC1 (-80+(skoXC1 skoXC1 (40+(skoXC1 skoXC1 (-6+(skoXC1 skoXC1 (1/8))))))))]/\[[(skoXC1 skoXC1 (80+(skoXC1 skoXC1 (-40+(skoXC1 skoXC1 (6+(skoXC1 skoXC1 (-1/8))))))))<=48]/\[[0<(skoXC1 skoXC1)]/\[[(skoXC1 (-1+(skoXC1 skoXC1 (1/3+(skoXC1 skoXC1 (3/20))))))<=0]/\[[(skoXC1 skoXC1 (-1/6+(skoXC1 skoXC1 (-3/40))))<=1]/\[[(skoXC1 skoXC1 (-1/2+(skoXC1 skoXC1 (7/120+(skoXC1 skoXC1 (-3/40))))))<=0]/\[[(skoXC1 skoXC1 skoXC1 skoXC1 (-13/60+(skoXC1 skoXC1 (-3/10))))<=0]/\[[(skoXC1 skoXC1 skoXC1 skoXC1 (-17/120+(skoXC1 skoXC1 (3/80))))<=0]/\[[(skoXC1 skoXC1 (1/3+(skoXC1 skoXC1 (3/20))))<=1]/\[[(skoXC1 skoXC1 skoXC1 skoXC1 (32/15+(skoXC1 skoXC1 (-296/15+(skoXC1 skoXC1 (391/15+(skoXC1 skoXC1 (-146/15+(skoXC1 skoXC1 (3/4))))))))))<=0]/\[[-1<(skoXC1 skoXC1 (1/6+(skoXC1 skoXC1 (3/40))))]/\[(skoXC1 (-1+(skoXC1 skoXC1 (-1/6+(skoXC1 skoXC1 (-3/40))))))<=0]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]].

% In SMTLib2 format:
(declare-fun skoXC1 () Real) (assert (and (<= (* skoXC1 (* skoXC1 (+ (/ (- 1.) 6.) (* skoXC1 (* skoXC1 (+ (/ (- 3.) 40.) (* skoXC1 (* skoXC1 (/ (- 5.) 112.))))))))) 1.) (and (<= (* skoXC1 (* skoXC1 (* skoXC1 (* skoXC1 (+ (/ 32. 15.) (* skoXC1 (* skoXC1 (+ (/ (- 272.) 105.) (* skoXC1 (* skoXC1 (+ (/ (- 1163.) 105.) (* skoXC1 (* skoXC1 (+ (/ 1753. 105.) (* skoXC1 (* skoXC1 (+ (/ (- 169.) 28.) (* skoXC1 (* skoXC1 (/ 25. 56.)))))))))))))))))))) 0.) (and (<= (* skoXC1 (* skoXC1 (+ (/ 1. 3.) (* skoXC1 (* skoXC1 (+ (/ 3. 20.) (* skoXC1 (* skoXC1 (/ 5. 56.))))))))) 1.) (and (<= (* skoXC1 (* skoXC1 (* skoXC1 (* skoXC1 (+ (/ (- 17.) 120.) (* skoXC1 (* skoXC1 (+ (/ (- 27.) 280.) (* skoXC1 (* skoXC1 (/ 5. 224.))))))))))) 0.) (and (<= (* skoXC1 (* skoXC1 (* skoXC1 (* skoXC1 (+ (/ (- 13.) 60.) (* skoXC1 (* skoXC1 (+ (/ (- 9.) 280.) (* skoXC1 (* skoXC1 (/ (- 5.) 28.))))))))))) 0.) (and (<= (* skoXC1 (* skoXC1 (+ (/ (- 1.) 2.) (* skoXC1 (* skoXC1 (+ (/ 7. 120.) (* skoXC1 (* skoXC1 (+ (/ 33. 560.) (* skoXC1 (* skoXC1 (/ (- 5.) 112.)))))))))))) 0.) (and (<= (* skoXC1 (* skoXC1 (+ (/ (- 1.) 6.) (* skoXC1 (* skoXC1 (+ (/ (- 3.) 40.) (* skoXC1 (* skoXC1 (/ (- 5.) 112.))))))))) 1.) (and (<= (* skoXC1 (+ (- 1.) (* skoXC1 (* skoXC1 (+ (/ 1. 3.) (* skoXC1 (* skoXC1 (+ (/ 3. 20.) (* skoXC1 (* skoXC1 (/ 5. 56.))))))))))) 0.) (and (<= (* skoXC1 (* skoXC1 (* skoXC1 (* skoXC1 (+ (/ (- 80.) 3.) (* skoXC1 (* skoXC1 (+ (/ 128. 3.) (* skoXC1 (* skoXC1 (+ (/ (- 55.) 3.) (* skoXC1 (* skoXC1 (/ 5. 3.)))))))))))))) 0.) (and (<= (* skoXC1 (* skoXC1 (+ 256. (* skoXC1 (* skoXC1 (+ (- 160.) (* skoXC1 (* skoXC1 (+ 32. (* skoXC1 (* skoXC1 (- 1.)))))))))))) 128.) (and (<= (* skoXC1 (* skoXC1 (/ 1. 3.))) 1.) (and (<= (* skoXC1 (+ (- 1.) (* skoXC1 (* skoXC1 (/ (- 1.) 6.))))) 0.) (and (<= (* skoXC1 (* skoXC1 (* skoXC1 (* skoXC1 (/ (- 2.) 3.))))) 0.) (and (<= (* skoXC1 skoXC1) 2.) (and (<= (* skoXC1 (* skoXC1 (+ (/ (- 1.) 2.) (* skoXC1 (* skoXC1 (/ (- 1.) 6.)))))) 0.) (and (<= (* skoXC1 (* skoXC1 (/ (- 1.) 6.))) 1.) (and (<= (* skoXC1 (+ (- 1.) (* skoXC1 (* skoXC1 (/ 1. 3.))))) 0.) (and (> (/ 7. 8.) skoXC1) (and (> skoXC1 0.) (and (> (* skoXC1 (* skoXC1 (/ (- 1.) 2.))) (- 3.)) (and (<= (* skoXC1 (* skoXC1 (/ 1. 2.))) 3.) (and (<= (* skoXC1 (* skoXC1 (+ 24. (* skoXC1 (* skoXC1 (+ (- 10.) (* skoXC1 skoXC1))))))) 16.) (and (> (* skoXC1 (* skoXC1 (+ (- 80.) (* skoXC1 (* skoXC1 (+ 40. (* skoXC1 (* skoXC1 (+ (- 6.) (* skoXC1 (* skoXC1 (/ 1. 8.)))))))))))) (- 48.)) (and (<= (* skoXC1 (* skoXC1 (+ 80. (* skoXC1 (* skoXC1 (+ (- 40.) (* skoXC1 (* skoXC1 (+ 6. (* skoXC1 (* skoXC1 (/ (- 1.) 8.)))))))))))) 48.) (and (> (* skoXC1 skoXC1) 0.) (and (<= (* skoXC1 (+ (- 1.) (* skoXC1 (* skoXC1 (+ (/ 1. 3.) (* skoXC1 (* skoXC1 (/ 3. 20.)))))))) 0.) (and (<= (* skoXC1 (* skoXC1 (+ (/ (- 1.) 6.) (* skoXC1 (* skoXC1 (/ (- 3.) 40.)))))) 1.) (and (<= (* skoXC1 (* skoXC1 (+ (/ (- 1.) 2.) (* skoXC1 (* skoXC1 (+ (/ 7. 120.) (* skoXC1 (* skoXC1 (/ (- 3.) 40.))))))))) 0.) (and (<= (* skoXC1 (* skoXC1 (* skoXC1 (* skoXC1 (+ (/ (- 13.) 60.) (* skoXC1 (* skoXC1 (/ (- 3.) 10.)))))))) 0.) (and (<= (* skoXC1 (* skoXC1 (* skoXC1 (* skoXC1 (+ (/ (- 17.) 120.) (* skoXC1 (* skoXC1 (/ 3. 80.)))))))) 0.) (and (<= (* skoXC1 (* skoXC1 (+ (/ 1. 3.) (* skoXC1 (* skoXC1 (/ 3. 20.)))))) 1.) (and (<= (* skoXC1 (* skoXC1 (* skoXC1 (* skoXC1 (+ (/ 32. 15.) (* skoXC1 (* skoXC1 (+ (/ (- 296.) 15.) (* skoXC1 (* skoXC1 (+ (/ 391. 15.) (* skoXC1 (* skoXC1 (+ (/ (- 146.) 15.) (* skoXC1 (* skoXC1 (/ 3. 4.))))))))))))))))) 0.) (and (> (* skoXC1 (* skoXC1 (+ (/ 1. 6.) (* skoXC1 (* skoXC1 (/ 3. 40.)))))) (- 1.)) (<= (* skoXC1 (+ (- 1.) (* skoXC1 (* skoXC1 (+ (/ (- 1.) 6.) (* skoXC1 (* skoXC1 (/ (- 3.) 40.)))))))) 0.)))))))))))))))))))))))))))))))))))

% In GRF format:
(sequent " MetiTarski formula " (antecedent (<= (* skoXC1 (* skoXC1 (+ (/ (- 1.) 6.) (* skoXC1 (* skoXC1 (+ (/ (- 3.) 40.) (* skoXC1 (* skoXC1 (/ (- 5.) 112.))))))))) 1.) (<= (* skoXC1 (* skoXC1 (* skoXC1 (* skoXC1 (+ (/ 32. 15.) (* skoXC1 (* skoXC1 (+ (/ (- 272.) 105.) (* skoXC1 (* skoXC1 (+ (/ (- 1163.) 105.) (* skoXC1 (* skoXC1 (+ (/ 1753. 105.) (* skoXC1 (* skoXC1 (+ (/ (- 169.) 28.) (* skoXC1 (* skoXC1 (/ 25. 56.)))))))))))))))))))) 0.) (<= (* skoXC1 (* skoXC1 (+ (/ 1. 3.) (* skoXC1 (* skoXC1 (+ (/ 3. 20.) (* skoXC1 (* skoXC1 (/ 5. 56.))))))))) 1.) (<= (* skoXC1 (* skoXC1 (* skoXC1 (* skoXC1 (+ (/ (- 17.) 120.) (* skoXC1 (* skoXC1 (+ (/ (- 27.) 280.) (* skoXC1 (* skoXC1 (/ 5. 224.))))))))))) 0.) (<= (* skoXC1 (* skoXC1 (* skoXC1 (* skoXC1 (+ (/ (- 13.) 60.) (* skoXC1 (* skoXC1 (+ (/ (- 9.) 280.) (* skoXC1 (* skoXC1 (/ (- 5.) 28.))))))))))) 0.) (<= (* skoXC1 (* skoXC1 (+ (/ (- 1.) 2.) (* skoXC1 (* skoXC1 (+ (/ 7. 120.) (* skoXC1 (* skoXC1 (+ (/ 33. 560.) (* skoXC1 (* skoXC1 (/ (- 5.) 112.)))))))))))) 0.) (<= (* skoXC1 (* skoXC1 (+ (/ (- 1.) 6.) (* skoXC1 (* skoXC1 (+ (/ (- 3.) 40.) (* skoXC1 (* skoXC1 (/ (- 5.) 112.))))))))) 1.) (<= (* skoXC1 (+ (- 1.) (* skoXC1 (* skoXC1 (+ (/ 1. 3.) (* skoXC1 (* skoXC1 (+ (/ 3. 20.) (* skoXC1 (* skoXC1 (/ 5. 56.))))))))))) 0.) (<= (* skoXC1 (* skoXC1 (* skoXC1 (* skoXC1 (+ (/ (- 80.) 3.) (* skoXC1 (* skoXC1 (+ (/ 128. 3.) (* skoXC1 (* skoXC1 (+ (/ (- 55.) 3.) (* skoXC1 (* skoXC1 (/ 5. 3.)))))))))))))) 0.) (<= (* skoXC1 (* skoXC1 (+ 256. (* skoXC1 (* skoXC1 (+ (- 160.) (* skoXC1 (* skoXC1 (+ 32. (* skoXC1 (* skoXC1 (- 1.)))))))))))) 128.) (<= (* skoXC1 (* skoXC1 (/ 1. 3.))) 1.) (<= (* skoXC1 (+ (- 1.) (* skoXC1 (* skoXC1 (/ (- 1.) 6.))))) 0.) (<= (* skoXC1 (* skoXC1 (* skoXC1 (* skoXC1 (/ (- 2.) 3.))))) 0.) (<= (* skoXC1 skoXC1) 2.) (<= (* skoXC1 (* skoXC1 (+ (/ (- 1.) 2.) (* skoXC1 (* skoXC1 (/ (- 1.) 6.)))))) 0.) (<= (* skoXC1 (* skoXC1 (/ (- 1.) 6.))) 1.) (<= (* skoXC1 (+ (- 1.) (* skoXC1 (* skoXC1 (/ 1. 3.))))) 0.) (> (/ 7. 8.) skoXC1) (> skoXC1 0.) (> (* skoXC1 (* skoXC1 (/ (- 1.) 2.))) (- 3.)) (<= (* skoXC1 (* skoXC1 (/ 1. 2.))) 3.) (<= (* skoXC1 (* skoXC1 (+ 24. (* skoXC1 (* skoXC1 (+ (- 10.) (* skoXC1 skoXC1))))))) 16.) (> (* skoXC1 (* skoXC1 (+ (- 80.) (* skoXC1 (* skoXC1 (+ 40. (* skoXC1 (* skoXC1 (+ (- 6.) (* skoXC1 (* skoXC1 (/ 1. 8.)))))))))))) (- 48.)) (<= (* skoXC1 (* skoXC1 (+ 80. (* skoXC1 (* skoXC1 (+ (- 40.) (* skoXC1 (* skoXC1 (+ 6. (* skoXC1 (* skoXC1 (/ (- 1.) 8.)))))))))))) 48.) (> (* skoXC1 skoXC1) 0.) (<= (* skoXC1 (+ (- 1.) (* skoXC1 (* skoXC1 (+ (/ 1. 3.) (* skoXC1 (* skoXC1 (/ 3. 20.)))))))) 0.) (<= (* skoXC1 (* skoXC1 (+ (/ (- 1.) 6.) (* skoXC1 (* skoXC1 (/ (- 3.) 40.)))))) 1.) (<= (* skoXC1 (* skoXC1 (+ (/ (- 1.) 2.) (* skoXC1 (* skoXC1 (+ (/ 7. 120.) (* skoXC1 (* skoXC1 (/ (- 3.) 40.))))))))) 0.) (<= (* skoXC1 (* skoXC1 (* skoXC1 (* skoXC1 (+ (/ (- 13.) 60.) (* skoXC1 (* skoXC1 (/ (- 3.) 10.)))))))) 0.) (<= (* skoXC1 (* skoXC1 (* skoXC1 (* skoXC1 (+ (/ (- 17.) 120.) (* skoXC1 (* skoXC1 (/ 3. 80.)))))))) 0.) (<= (* skoXC1 (* skoXC1 (+ (/ 1. 3.) (* skoXC1 (* skoXC1 (/ 3. 20.)))))) 1.) (<= (* skoXC1 (* skoXC1 (* skoXC1 (* skoXC1 (+ (/ 32. 15.) (* skoXC1 (* skoXC1 (+ (/ (- 296.) 15.) (* skoXC1 (* skoXC1 (+ (/ 391. 15.) (* skoXC1 (* skoXC1 (+ (/ (- 146.) 15.) (* skoXC1 (* skoXC1 (/ 3. 4.))))))))))))))))) 0.) (> (* skoXC1 (* skoXC1 (+ (/ 1. 6.) (* skoXC1 (* skoXC1 (/ 3. 40.)))))) (- 1.))) (succedent (> (* skoXC1 (+ (- 1.) (* skoXC1 (* skoXC1 (+ (/ (- 1.) 6.) (* skoXC1 (* skoXC1 (/ (- 3.) 40.)))))))) 0.)))
-----[end problem]-----

-----[begin problem]-----
% In Mathematica format:
Timing[Resolve[Exists[{skoXC1}, And[skoXC1*skoXC1*skoXC1*skoXC1*((32/15)+skoXC1*skoXC1*((-272/105)+skoXC1*skoXC1*((-1163/105)+skoXC1*skoXC1*((1753/105)+skoXC1*skoXC1*((-169/28)+skoXC1*skoXC1*(25/56))))))<=0,skoXC1*skoXC1*skoXC1*skoXC1*((32/15)+skoXC1*skoXC1*((-272/105)+skoXC1*skoXC1*((-1163/105)+skoXC1*skoXC1*((1753/105)+skoXC1*skoXC1*((-169/28)+skoXC1*skoXC1*(25/56))))))<=0,skoXC1*skoXC1*((1/3)+skoXC1*skoXC1*((3/20)+skoXC1*skoXC1*(5/56)))<=1,skoXC1*skoXC1*skoXC1*skoXC1*((-17/120)+skoXC1*skoXC1*((-27/280)+skoXC1*skoXC1*(5/224)))<=0,skoXC1*skoXC1*skoXC1*skoXC1*((-13/60)+skoXC1*skoXC1*((-9/280)+skoXC1*skoXC1*(-5/28)))<=0,skoXC1*skoXC1*((-1/2)+skoXC1*skoXC1*((7/120)+skoXC1*skoXC1*((33/560)+skoXC1*skoXC1*(-5/112))))<=0,skoXC1*skoXC1*((-1/6)+skoXC1*skoXC1*((-3/40)+skoXC1*skoXC1*(-5/112)))<=1,skoXC1*(-1+skoXC1*skoXC1*((1/3)+skoXC1*skoXC1*((3/20)+skoXC1*skoXC1*(5/56))))<=0,skoXC1*skoXC1*skoXC1*skoXC1*((-80/3)+skoXC1*skoXC1*((128/3)+skoXC1*skoXC1*((-55/3)+skoXC1*skoXC1*(5/3))))<=0,skoXC1*skoXC1*(256+skoXC1*skoXC1*(-160+skoXC1*skoXC1*(32+skoXC1*skoXC1*-1)))<=128,skoXC1*skoXC1*(1/3)<=1,skoXC1*(-1+skoXC1*skoXC1*(-1/6))<=0,skoXC1*skoXC1*skoXC1*skoXC1*(-2/3)<=0,skoXC1*skoXC1<=2,skoXC1*skoXC1*((-1/2)+skoXC1*skoXC1*(-1/6))<=0,skoXC1*skoXC1*(-1/6)<=1,skoXC1*(-1+skoXC1*skoXC1*(1/3))<=0,(7/8)>skoXC1,skoXC1>0,skoXC1*skoXC1*(-1/2)>-3,skoXC1*skoXC1*(1/2)<=3,skoXC1*skoXC1*(24+skoXC1*skoXC1*(-10+skoXC1*skoXC1))<=16,skoXC1*skoXC1*(-80+skoXC1*skoXC1*(40+skoXC1*skoXC1*(-6+skoXC1*skoXC1*(1/8))))>-48,skoXC1*skoXC1*(80+skoXC1*skoXC1*(-40+skoXC1*skoXC1*(6+skoXC1*skoXC1*(-1/8))))<=48,skoXC1*skoXC1>0,skoXC1*(-1+skoXC1*skoXC1*((1/3)+skoXC1*skoXC1*(3/20)))<=0,skoXC1*skoXC1*((-1/6)+skoXC1*skoXC1*(-3/40))<=1,skoXC1*skoXC1*((-1/2)+skoXC1*skoXC1*((7/120)+skoXC1*skoXC1*(-3/40)))<=0,skoXC1*skoXC1*skoXC1*skoXC1*((-13/60)+skoXC1*skoXC1*(-3/10))<=0,skoXC1*skoXC1*skoXC1*skoXC1*((-17/120)+skoXC1*skoXC1*(3/80))<=0,skoXC1*skoXC1*((1/3)+skoXC1*skoXC1*(3/20))<=1,skoXC1*skoXC1*skoXC1*skoXC1*((32/15)+skoXC1*skoXC1*((-296/15)+skoXC1*skoXC1*((391/15)+skoXC1*skoXC1*((-146/15)+skoXC1*skoXC1*(3/4)))))<=0,skoXC1*skoXC1*((1/6)+skoXC1*skoXC1*(3/40))>-1,skoXC1*(-1+skoXC1*skoXC1*((-1/6)+skoXC1*skoXC1*(-3/40)))<=0]], Reals]]

% In QepcadB format:
(E skoXC1) [[(skoXC1 skoXC1 skoXC1 skoXC1 (32/15+(skoXC1 skoXC1 (-272/105+(skoXC1 skoXC1 (-1163/105+(skoXC1 skoXC1 (1753/105+(skoXC1 skoXC1 (-169/28+(skoXC1 skoXC1 (25/56))))))))))))<=0]/\[[(skoXC1 skoXC1 skoXC1 skoXC1 (32/15+(skoXC1 skoXC1 (-272/105+(skoXC1 skoXC1 (-1163/105+(skoXC1 skoXC1 (1753/105+(skoXC1 skoXC1 (-169/28+(skoXC1 skoXC1 (25/56))))))))))))<=0]/\[[(skoXC1 skoXC1 (1/3+(skoXC1 skoXC1 (3/20+(skoXC1 skoXC1 (5/56))))))<=1]/\[[(skoXC1 skoXC1 skoXC1 skoXC1 (-17/120+(skoXC1 skoXC1 (-27/280+(skoXC1 skoXC1 (5/224))))))<=0]/\[[(skoXC1 skoXC1 skoXC1 skoXC1 (-13/60+(skoXC1 skoXC1 (-9/280+(skoXC1 skoXC1 (-5/28))))))<=0]/\[[(skoXC1 skoXC1 (-1/2+(skoXC1 skoXC1 (7/120+(skoXC1 skoXC1 (33/560+(skoXC1 skoXC1 (-5/112))))))))<=0]/\[[(skoXC1 skoXC1 (-1/6+(skoXC1 skoXC1 (-3/40+(skoXC1 skoXC1 (-5/112))))))<=1]/\[[(skoXC1 (-1+(skoXC1 skoXC1 (1/3+(skoXC1 skoXC1 (3/20+(skoXC1 skoXC1 (5/56))))))))<=0]/\[[(skoXC1 skoXC1 skoXC1 skoXC1 (-80/3+(skoXC1 skoXC1 (128/3+(skoXC1 skoXC1 (-55/3+(skoXC1 skoXC1 (5/3))))))))<=0]/\[[(skoXC1 skoXC1 (256+(skoXC1 skoXC1 (-160+(skoXC1 skoXC1 (32+(skoXC1 skoXC1 (-1))))))))<=128]/\[[(skoXC1 skoXC1 (1/3))<=1]/\[[(skoXC1 (-1+(skoXC1 skoXC1 (-1/6))))<=0]/\[[(skoXC1 skoXC1 skoXC1 skoXC1 (-2/3))<=0]/\[[(skoXC1 skoXC1)<=2]/\[[(skoXC1 skoXC1 (-1/2+(skoXC1 skoXC1 (-1/6))))<=0]/\[[(skoXC1 skoXC1 (-1/6))<=1]/\[[(skoXC1 (-1+(skoXC1 skoXC1 (1/3))))<=0]/\[[skoXC1<7/8]/\[[0<skoXC1]/\[[-3<(skoXC1 skoXC1 (-1/2))]/\[[(skoXC1 skoXC1 (1/2))<=3]/\[[(skoXC1 skoXC1 (24+(skoXC1 skoXC1 (-10+(skoXC1 skoXC1)))))<=16]/\[[-48<(skoXC1 skoXC1 (-80+(skoXC1 skoXC1 (40+(skoXC1 skoXC1 (-6+(skoXC1 skoXC1 (1/8))))))))]/\[[(skoXC1 skoXC1 (80+(skoXC1 skoXC1 (-40+(skoXC1 skoXC1 (6+(skoXC1 skoXC1 (-1/8))))))))<=48]/\[[0<(skoXC1 skoXC1)]/\[[(skoXC1 (-1+(skoXC1 skoXC1 (1/3+(skoXC1 skoXC1 (3/20))))))<=0]/\[[(skoXC1 skoXC1 (-1/6+(skoXC1 skoXC1 (-3/40))))<=1]/\[[(skoXC1 skoXC1 (-1/2+(skoXC1 skoXC1 (7/120+(skoXC1 skoXC1 (-3/40))))))<=0]/\[[(skoXC1 skoXC1 skoXC1 skoXC1 (-13/60+(skoXC1 skoXC1 (-3/10))))<=0]/\[[(skoXC1 skoXC1 skoXC1 skoXC1 (-17/120+(skoXC1 skoXC1 (3/80))))<=0]/\[[(skoXC1 skoXC1 (1/3+(skoXC1 skoXC1 (3/20))))<=1]/\[[(skoXC1 skoXC1 skoXC1 skoXC1 (32/15+(skoXC1 skoXC1 (-296/15+(skoXC1 skoXC1 (391/15+(skoXC1 skoXC1 (-146/15+(skoXC1 skoXC1 (3/4))))))))))<=0]/\[[-1<(skoXC1 skoXC1 (1/6+(skoXC1 skoXC1 (3/40))))]/\[(skoXC1 (-1+(skoXC1 skoXC1 (-1/6+(skoXC1 skoXC1 (-3/40))))))<=0]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]].

% In SMTLib2 format:
(declare-fun skoXC1 () Real) (assert (and (<= (* skoXC1 (* skoXC1 (* skoXC1 (* skoXC1 (+ (/ 32. 15.) (* skoXC1 (* skoXC1 (+ (/ (- 272.) 105.) (* skoXC1 (* skoXC1 (+ (/ (- 1163.) 105.) (* skoXC1 (* skoXC1 (+ (/ 1753. 105.) (* skoXC1 (* skoXC1 (+ (/ (- 169.) 28.) (* skoXC1 (* skoXC1 (/ 25. 56.)))))))))))))))))))) 0.) (and (<= (* skoXC1 (* skoXC1 (* skoXC1 (* skoXC1 (+ (/ 32. 15.) (* skoXC1 (* skoXC1 (+ (/ (- 272.) 105.) (* skoXC1 (* skoXC1 (+ (/ (- 1163.) 105.) (* skoXC1 (* skoXC1 (+ (/ 1753. 105.) (* skoXC1 (* skoXC1 (+ (/ (- 169.) 28.) (* skoXC1 (* skoXC1 (/ 25. 56.)))))))))))))))))))) 0.) (and (<= (* skoXC1 (* skoXC1 (+ (/ 1. 3.) (* skoXC1 (* skoXC1 (+ (/ 3. 20.) (* skoXC1 (* skoXC1 (/ 5. 56.))))))))) 1.) (and (<= (* skoXC1 (* skoXC1 (* skoXC1 (* skoXC1 (+ (/ (- 17.) 120.) (* skoXC1 (* skoXC1 (+ (/ (- 27.) 280.) (* skoXC1 (* skoXC1 (/ 5. 224.))))))))))) 0.) (and (<= (* skoXC1 (* skoXC1 (* skoXC1 (* skoXC1 (+ (/ (- 13.) 60.) (* skoXC1 (* skoXC1 (+ (/ (- 9.) 280.) (* skoXC1 (* skoXC1 (/ (- 5.) 28.))))))))))) 0.) (and (<= (* skoXC1 (* skoXC1 (+ (/ (- 1.) 2.) (* skoXC1 (* skoXC1 (+ (/ 7. 120.) (* skoXC1 (* skoXC1 (+ (/ 33. 560.) (* skoXC1 (* skoXC1 (/ (- 5.) 112.)))))))))))) 0.) (and (<= (* skoXC1 (* skoXC1 (+ (/ (- 1.) 6.) (* skoXC1 (* skoXC1 (+ (/ (- 3.) 40.) (* skoXC1 (* skoXC1 (/ (- 5.) 112.))))))))) 1.) (and (<= (* skoXC1 (+ (- 1.) (* skoXC1 (* skoXC1 (+ (/ 1. 3.) (* skoXC1 (* skoXC1 (+ (/ 3. 20.) (* skoXC1 (* skoXC1 (/ 5. 56.))))))))))) 0.) (and (<= (* skoXC1 (* skoXC1 (* skoXC1 (* skoXC1 (+ (/ (- 80.) 3.) (* skoXC1 (* skoXC1 (+ (/ 128. 3.) (* skoXC1 (* skoXC1 (+ (/ (- 55.) 3.) (* skoXC1 (* skoXC1 (/ 5. 3.)))))))))))))) 0.) (and (<= (* skoXC1 (* skoXC1 (+ 256. (* skoXC1 (* skoXC1 (+ (- 160.) (* skoXC1 (* skoXC1 (+ 32. (* skoXC1 (* skoXC1 (- 1.)))))))))))) 128.) (and (<= (* skoXC1 (* skoXC1 (/ 1. 3.))) 1.) (and (<= (* skoXC1 (+ (- 1.) (* skoXC1 (* skoXC1 (/ (- 1.) 6.))))) 0.) (and (<= (* skoXC1 (* skoXC1 (* skoXC1 (* skoXC1 (/ (- 2.) 3.))))) 0.) (and (<= (* skoXC1 skoXC1) 2.) (and (<= (* skoXC1 (* skoXC1 (+ (/ (- 1.) 2.) (* skoXC1 (* skoXC1 (/ (- 1.) 6.)))))) 0.) (and (<= (* skoXC1 (* skoXC1 (/ (- 1.) 6.))) 1.) (and (<= (* skoXC1 (+ (- 1.) (* skoXC1 (* skoXC1 (/ 1. 3.))))) 0.) (and (> (/ 7. 8.) skoXC1) (and (> skoXC1 0.) (and (> (* skoXC1 (* skoXC1 (/ (- 1.) 2.))) (- 3.)) (and (<= (* skoXC1 (* skoXC1 (/ 1. 2.))) 3.) (and (<= (* skoXC1 (* skoXC1 (+ 24. (* skoXC1 (* skoXC1 (+ (- 10.) (* skoXC1 skoXC1))))))) 16.) (and (> (* skoXC1 (* skoXC1 (+ (- 80.) (* skoXC1 (* skoXC1 (+ 40. (* skoXC1 (* skoXC1 (+ (- 6.) (* skoXC1 (* skoXC1 (/ 1. 8.)))))))))))) (- 48.)) (and (<= (* skoXC1 (* skoXC1 (+ 80. (* skoXC1 (* skoXC1 (+ (- 40.) (* skoXC1 (* skoXC1 (+ 6. (* skoXC1 (* skoXC1 (/ (- 1.) 8.)))))))))))) 48.) (and (> (* skoXC1 skoXC1) 0.) (and (<= (* skoXC1 (+ (- 1.) (* skoXC1 (* skoXC1 (+ (/ 1. 3.) (* skoXC1 (* skoXC1 (/ 3. 20.)))))))) 0.) (and (<= (* skoXC1 (* skoXC1 (+ (/ (- 1.) 6.) (* skoXC1 (* skoXC1 (/ (- 3.) 40.)))))) 1.) (and (<= (* skoXC1 (* skoXC1 (+ (/ (- 1.) 2.) (* skoXC1 (* skoXC1 (+ (/ 7. 120.) (* skoXC1 (* skoXC1 (/ (- 3.) 40.))))))))) 0.) (and (<= (* skoXC1 (* skoXC1 (* skoXC1 (* skoXC1 (+ (/ (- 13.) 60.) (* skoXC1 (* skoXC1 (/ (- 3.) 10.)))))))) 0.) (and (<= (* skoXC1 (* skoXC1 (* skoXC1 (* skoXC1 (+ (/ (- 17.) 120.) (* skoXC1 (* skoXC1 (/ 3. 80.)))))))) 0.) (and (<= (* skoXC1 (* skoXC1 (+ (/ 1. 3.) (* skoXC1 (* skoXC1 (/ 3. 20.)))))) 1.) (and (<= (* skoXC1 (* skoXC1 (* skoXC1 (* skoXC1 (+ (/ 32. 15.) (* skoXC1 (* skoXC1 (+ (/ (- 296.) 15.) (* skoXC1 (* skoXC1 (+ (/ 391. 15.) (* skoXC1 (* skoXC1 (+ (/ (- 146.) 15.) (* skoXC1 (* skoXC1 (/ 3. 4.))))))))))))))))) 0.) (and (> (* skoXC1 (* skoXC1 (+ (/ 1. 6.) (* skoXC1 (* skoXC1 (/ 3. 40.)))))) (- 1.)) (<= (* skoXC1 (+ (- 1.) (* skoXC1 (* skoXC1 (+ (/ (- 1.) 6.) (* skoXC1 (* skoXC1 (/ (- 3.) 40.)))))))) 0.)))))))))))))))))))))))))))))))))))

% In GRF format:
(sequent " MetiTarski formula " (antecedent (<= (* skoXC1 (* skoXC1 (* skoXC1 (* skoXC1 (+ (/ 32. 15.) (* skoXC1 (* skoXC1 (+ (/ (- 272.) 105.) (* skoXC1 (* skoXC1 (+ (/ (- 1163.) 105.) (* skoXC1 (* skoXC1 (+ (/ 1753. 105.) (* skoXC1 (* skoXC1 (+ (/ (- 169.) 28.) (* skoXC1 (* skoXC1 (/ 25. 56.)))))))))))))))))))) 0.) (<= (* skoXC1 (* skoXC1 (* skoXC1 (* skoXC1 (+ (/ 32. 15.) (* skoXC1 (* skoXC1 (+ (/ (- 272.) 105.) (* skoXC1 (* skoXC1 (+ (/ (- 1163.) 105.) (* skoXC1 (* skoXC1 (+ (/ 1753. 105.) (* skoXC1 (* skoXC1 (+ (/ (- 169.) 28.) (* skoXC1 (* skoXC1 (/ 25. 56.)))))))))))))))))))) 0.) (<= (* skoXC1 (* skoXC1 (+ (/ 1. 3.) (* skoXC1 (* skoXC1 (+ (/ 3. 20.) (* skoXC1 (* skoXC1 (/ 5. 56.))))))))) 1.) (<= (* skoXC1 (* skoXC1 (* skoXC1 (* skoXC1 (+ (/ (- 17.) 120.) (* skoXC1 (* skoXC1 (+ (/ (- 27.) 280.) (* skoXC1 (* skoXC1 (/ 5. 224.))))))))))) 0.) (<= (* skoXC1 (* skoXC1 (* skoXC1 (* skoXC1 (+ (/ (- 13.) 60.) (* skoXC1 (* skoXC1 (+ (/ (- 9.) 280.) (* skoXC1 (* skoXC1 (/ (- 5.) 28.))))))))))) 0.) (<= (* skoXC1 (* skoXC1 (+ (/ (- 1.) 2.) (* skoXC1 (* skoXC1 (+ (/ 7. 120.) (* skoXC1 (* skoXC1 (+ (/ 33. 560.) (* skoXC1 (* skoXC1 (/ (- 5.) 112.)))))))))))) 0.) (<= (* skoXC1 (* skoXC1 (+ (/ (- 1.) 6.) (* skoXC1 (* skoXC1 (+ (/ (- 3.) 40.) (* skoXC1 (* skoXC1 (/ (- 5.) 112.))))))))) 1.) (<= (* skoXC1 (+ (- 1.) (* skoXC1 (* skoXC1 (+ (/ 1. 3.) (* skoXC1 (* skoXC1 (+ (/ 3. 20.) (* skoXC1 (* skoXC1 (/ 5. 56.))))))))))) 0.) (<= (* skoXC1 (* skoXC1 (* skoXC1 (* skoXC1 (+ (/ (- 80.) 3.) (* skoXC1 (* skoXC1 (+ (/ 128. 3.) (* skoXC1 (* skoXC1 (+ (/ (- 55.) 3.) (* skoXC1 (* skoXC1 (/ 5. 3.)))))))))))))) 0.) (<= (* skoXC1 (* skoXC1 (+ 256. (* skoXC1 (* skoXC1 (+ (- 160.) (* skoXC1 (* skoXC1 (+ 32. (* skoXC1 (* skoXC1 (- 1.)))))))))))) 128.) (<= (* skoXC1 (* skoXC1 (/ 1. 3.))) 1.) (<= (* skoXC1 (+ (- 1.) (* skoXC1 (* skoXC1 (/ (- 1.) 6.))))) 0.) (<= (* skoXC1 (* skoXC1 (* skoXC1 (* skoXC1 (/ (- 2.) 3.))))) 0.) (<= (* skoXC1 skoXC1) 2.) (<= (* skoXC1 (* skoXC1 (+ (/ (- 1.) 2.) (* skoXC1 (* skoXC1 (/ (- 1.) 6.)))))) 0.) (<= (* skoXC1 (* skoXC1 (/ (- 1.) 6.))) 1.) (<= (* skoXC1 (+ (- 1.) (* skoXC1 (* skoXC1 (/ 1. 3.))))) 0.) (> (/ 7. 8.) skoXC1) (> skoXC1 0.) (> (* skoXC1 (* skoXC1 (/ (- 1.) 2.))) (- 3.)) (<= (* skoXC1 (* skoXC1 (/ 1. 2.))) 3.) (<= (* skoXC1 (* skoXC1 (+ 24. (* skoXC1 (* skoXC1 (+ (- 10.) (* skoXC1 skoXC1))))))) 16.) (> (* skoXC1 (* skoXC1 (+ (- 80.) (* skoXC1 (* skoXC1 (+ 40. (* skoXC1 (* skoXC1 (+ (- 6.) (* skoXC1 (* skoXC1 (/ 1. 8.)))))))))))) (- 48.)) (<= (* skoXC1 (* skoXC1 (+ 80. (* skoXC1 (* skoXC1 (+ (- 40.) (* skoXC1 (* skoXC1 (+ 6. (* skoXC1 (* skoXC1 (/ (- 1.) 8.)))))))))))) 48.) (> (* skoXC1 skoXC1) 0.) (<= (* skoXC1 (+ (- 1.) (* skoXC1 (* skoXC1 (+ (/ 1. 3.) (* skoXC1 (* skoXC1 (/ 3. 20.)))))))) 0.) (<= (* skoXC1 (* skoXC1 (+ (/ (- 1.) 6.) (* skoXC1 (* skoXC1 (/ (- 3.) 40.)))))) 1.) (<= (* skoXC1 (* skoXC1 (+ (/ (- 1.) 2.) (* skoXC1 (* skoXC1 (+ (/ 7. 120.) (* skoXC1 (* skoXC1 (/ (- 3.) 40.))))))))) 0.) (<= (* skoXC1 (* skoXC1 (* skoXC1 (* skoXC1 (+ (/ (- 13.) 60.) (* skoXC1 (* skoXC1 (/ (- 3.) 10.)))))))) 0.) (<= (* skoXC1 (* skoXC1 (* skoXC1 (* skoXC1 (+ (/ (- 17.) 120.) (* skoXC1 (* skoXC1 (/ 3. 80.)))))))) 0.) (<= (* skoXC1 (* skoXC1 (+ (/ 1. 3.) (* skoXC1 (* skoXC1 (/ 3. 20.)))))) 1.) (<= (* skoXC1 (* skoXC1 (* skoXC1 (* skoXC1 (+ (/ 32. 15.) (* skoXC1 (* skoXC1 (+ (/ (- 296.) 15.) (* skoXC1 (* skoXC1 (+ (/ 391. 15.) (* skoXC1 (* skoXC1 (+ (/ (- 146.) 15.) (* skoXC1 (* skoXC1 (/ 3. 4.))))))))))))))))) 0.) (> (* skoXC1 (* skoXC1 (+ (/ 1. 6.) (* skoXC1 (* skoXC1 (/ 3. 40.)))))) (- 1.))) (succedent (> (* skoXC1 (+ (- 1.) (* skoXC1 (* skoXC1 (+ (/ (- 1.) 6.) (* skoXC1 (* skoXC1 (/ (- 3.) 40.)))))))) 0.)))
-----[end problem]-----

-----[begin problem]-----
% In Mathematica format:
Timing[Resolve[Exists[{skoXC1}, And[skoXC1*(-1+skoXC1*skoXC1*((-1/6)+skoXC1*skoXC1*((-3/40)+skoXC1*skoXC1*(-5/112))))<=0,skoXC1*skoXC1*((1/6)+skoXC1*skoXC1*((3/40)+skoXC1*skoXC1*(5/112)))>-1,skoXC1*skoXC1*skoXC1*skoXC1*((32/15)+skoXC1*skoXC1*((-272/105)+skoXC1*skoXC1*((-1163/105)+skoXC1*skoXC1*((1753/105)+skoXC1*skoXC1*((-169/28)+skoXC1*skoXC1*(25/56))))))<=0,skoXC1*skoXC1*((1/3)+skoXC1*skoXC1*((3/20)+skoXC1*skoXC1*(5/56)))<=1,skoXC1*skoXC1*skoXC1*skoXC1*((-17/120)+skoXC1*skoXC1*((-27/280)+skoXC1*skoXC1*(5/224)))<=0,skoXC1*skoXC1*skoXC1*skoXC1*((-13/60)+skoXC1*skoXC1*((-9/280)+skoXC1*skoXC1*(-5/28)))<=0,skoXC1*skoXC1*((-1/2)+skoXC1*skoXC1*((7/120)+skoXC1*skoXC1*((33/560)+skoXC1*skoXC1*(-5/112))))<=0,skoXC1*skoXC1*((-1/6)+skoXC1*skoXC1*((-3/40)+skoXC1*skoXC1*(-5/112)))<=1,skoXC1*(-1+skoXC1*skoXC1*((1/3)+skoXC1*skoXC1*((3/20)+skoXC1*skoXC1*(5/56))))<=0,skoXC1*skoXC1*skoXC1*skoXC1*((-80/3)+skoXC1*skoXC1*((128/3)+skoXC1*skoXC1*((-55/3)+skoXC1*skoXC1*(5/3))))<=0,skoXC1*skoXC1*(256+skoXC1*skoXC1*(-160+skoXC1*skoXC1*(32+skoXC1*skoXC1*-1)))<=128,skoXC1*skoXC1*(1/3)<=1,skoXC1*(-1+skoXC1*skoXC1*(-1/6))<=0,skoXC1*skoXC1*skoXC1*skoXC1*(-2/3)<=0,skoXC1*skoXC1<=2,skoXC1*skoXC1*((-1/2)+skoXC1*skoXC1*(-1/6))<=0,skoXC1*skoXC1*(-1/6)<=1,skoXC1*(-1+skoXC1*skoXC1*(1/3))<=0,(7/8)>skoXC1,skoXC1>0,skoXC1*skoXC1*(-1/2)>-3,skoXC1*skoXC1*(1/2)<=3,skoXC1*skoXC1*(24+skoXC1*skoXC1*(-10+skoXC1*skoXC1))<=16,skoXC1*skoXC1*(-80+skoXC1*skoXC1*(40+skoXC1*skoXC1*(-6+skoXC1*skoXC1*(1/8))))>-48,skoXC1*skoXC1*(80+skoXC1*skoXC1*(-40+skoXC1*skoXC1*(6+skoXC1*skoXC1*(-1/8))))<=48,skoXC1*skoXC1>0,skoXC1*(-1+skoXC1*skoXC1*((1/3)+skoXC1*skoXC1*(3/20)))<=0,skoXC1*skoXC1*((-1/6)+skoXC1*skoXC1*(-3/40))<=1,skoXC1*skoXC1*((-1/2)+skoXC1*skoXC1*((7/120)+skoXC1*skoXC1*(-3/40)))<=0,skoXC1*skoXC1*skoXC1*skoXC1*((-13/60)+skoXC1*skoXC1*(-3/10))<=0,skoXC1*skoXC1*skoXC1*skoXC1*((-17/120)+skoXC1*skoXC1*(3/80))<=0,skoXC1*skoXC1*((1/3)+skoXC1*skoXC1*(3/20))<=1,skoXC1*skoXC1*skoXC1*skoXC1*((32/15)+skoXC1*skoXC1*((-296/15)+skoXC1*skoXC1*((391/15)+skoXC1*skoXC1*((-146/15)+skoXC1*skoXC1*(3/4)))))<=0,skoXC1*skoXC1*((1/6)+skoXC1*skoXC1*(3/40))>-1,skoXC1*(-1+skoXC1*skoXC1*((-1/6)+skoXC1*skoXC1*(-3/40)))<=0]], Reals]]

% In QepcadB format:
(E skoXC1) [[(skoXC1 (-1+(skoXC1 skoXC1 (-1/6+(skoXC1 skoXC1 (-3/40+(skoXC1 skoXC1 (-5/112))))))))<=0]/\[[-1<(skoXC1 skoXC1 (1/6+(skoXC1 skoXC1 (3/40+(skoXC1 skoXC1 (5/112))))))]/\[[(skoXC1 skoXC1 skoXC1 skoXC1 (32/15+(skoXC1 skoXC1 (-272/105+(skoXC1 skoXC1 (-1163/105+(skoXC1 skoXC1 (1753/105+(skoXC1 skoXC1 (-169/28+(skoXC1 skoXC1 (25/56))))))))))))<=0]/\[[(skoXC1 skoXC1 (1/3+(skoXC1 skoXC1 (3/20+(skoXC1 skoXC1 (5/56))))))<=1]/\[[(skoXC1 skoXC1 skoXC1 skoXC1 (-17/120+(skoXC1 skoXC1 (-27/280+(skoXC1 skoXC1 (5/224))))))<=0]/\[[(skoXC1 skoXC1 skoXC1 skoXC1 (-13/60+(skoXC1 skoXC1 (-9/280+(skoXC1 skoXC1 (-5/28))))))<=0]/\[[(skoXC1 skoXC1 (-1/2+(skoXC1 skoXC1 (7/120+(skoXC1 skoXC1 (33/560+(skoXC1 skoXC1 (-5/112))))))))<=0]/\[[(skoXC1 skoXC1 (-1/6+(skoXC1 skoXC1 (-3/40+(skoXC1 skoXC1 (-5/112))))))<=1]/\[[(skoXC1 (-1+(skoXC1 skoXC1 (1/3+(skoXC1 skoXC1 (3/20+(skoXC1 skoXC1 (5/56))))))))<=0]/\[[(skoXC1 skoXC1 skoXC1 skoXC1 (-80/3+(skoXC1 skoXC1 (128/3+(skoXC1 skoXC1 (-55/3+(skoXC1 skoXC1 (5/3))))))))<=0]/\[[(skoXC1 skoXC1 (256+(skoXC1 skoXC1 (-160+(skoXC1 skoXC1 (32+(skoXC1 skoXC1 (-1))))))))<=128]/\[[(skoXC1 skoXC1 (1/3))<=1]/\[[(skoXC1 (-1+(skoXC1 skoXC1 (-1/6))))<=0]/\[[(skoXC1 skoXC1 skoXC1 skoXC1 (-2/3))<=0]/\[[(skoXC1 skoXC1)<=2]/\[[(skoXC1 skoXC1 (-1/2+(skoXC1 skoXC1 (-1/6))))<=0]/\[[(skoXC1 skoXC1 (-1/6))<=1]/\[[(skoXC1 (-1+(skoXC1 skoXC1 (1/3))))<=0]/\[[skoXC1<7/8]/\[[0<skoXC1]/\[[-3<(skoXC1 skoXC1 (-1/2))]/\[[(skoXC1 skoXC1 (1/2))<=3]/\[[(skoXC1 skoXC1 (24+(skoXC1 skoXC1 (-10+(skoXC1 skoXC1)))))<=16]/\[[-48<(skoXC1 skoXC1 (-80+(skoXC1 skoXC1 (40+(skoXC1 skoXC1 (-6+(skoXC1 skoXC1 (1/8))))))))]/\[[(skoXC1 skoXC1 (80+(skoXC1 skoXC1 (-40+(skoXC1 skoXC1 (6+(skoXC1 skoXC1 (-1/8))))))))<=48]/\[[0<(skoXC1 skoXC1)]/\[[(skoXC1 (-1+(skoXC1 skoXC1 (1/3+(skoXC1 skoXC1 (3/20))))))<=0]/\[[(skoXC1 skoXC1 (-1/6+(skoXC1 skoXC1 (-3/40))))<=1]/\[[(skoXC1 skoXC1 (-1/2+(skoXC1 skoXC1 (7/120+(skoXC1 skoXC1 (-3/40))))))<=0]/\[[(skoXC1 skoXC1 skoXC1 skoXC1 (-13/60+(skoXC1 skoXC1 (-3/10))))<=0]/\[[(skoXC1 skoXC1 skoXC1 skoXC1 (-17/120+(skoXC1 skoXC1 (3/80))))<=0]/\[[(skoXC1 skoXC1 (1/3+(skoXC1 skoXC1 (3/20))))<=1]/\[[(skoXC1 skoXC1 skoXC1 skoXC1 (32/15+(skoXC1 skoXC1 (-296/15+(skoXC1 skoXC1 (391/15+(skoXC1 skoXC1 (-146/15+(skoXC1 skoXC1 (3/4))))))))))<=0]/\[[-1<(skoXC1 skoXC1 (1/6+(skoXC1 skoXC1 (3/40))))]/\[(skoXC1 (-1+(skoXC1 skoXC1 (-1/6+(skoXC1 skoXC1 (-3/40))))))<=0]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]].

% In SMTLib2 format:
(declare-fun skoXC1 () Real) (assert (and (<= (* skoXC1 (+ (- 1.) (* skoXC1 (* skoXC1 (+ (/ (- 1.) 6.) (* skoXC1 (* skoXC1 (+ (/ (- 3.) 40.) (* skoXC1 (* skoXC1 (/ (- 5.) 112.))))))))))) 0.) (and (> (* skoXC1 (* skoXC1 (+ (/ 1. 6.) (* skoXC1 (* skoXC1 (+ (/ 3. 40.) (* skoXC1 (* skoXC1 (/ 5. 112.))))))))) (- 1.)) (and (<= (* skoXC1 (* skoXC1 (* skoXC1 (* skoXC1 (+ (/ 32. 15.) (* skoXC1 (* skoXC1 (+ (/ (- 272.) 105.) (* skoXC1 (* skoXC1 (+ (/ (- 1163.) 105.) (* skoXC1 (* skoXC1 (+ (/ 1753. 105.) (* skoXC1 (* skoXC1 (+ (/ (- 169.) 28.) (* skoXC1 (* skoXC1 (/ 25. 56.)))))))))))))))))))) 0.) (and (<= (* skoXC1 (* skoXC1 (+ (/ 1. 3.) (* skoXC1 (* skoXC1 (+ (/ 3. 20.) (* skoXC1 (* skoXC1 (/ 5. 56.))))))))) 1.) (and (<= (* skoXC1 (* skoXC1 (* skoXC1 (* skoXC1 (+ (/ (- 17.) 120.) (* skoXC1 (* skoXC1 (+ (/ (- 27.) 280.) (* skoXC1 (* skoXC1 (/ 5. 224.))))))))))) 0.) (and (<= (* skoXC1 (* skoXC1 (* skoXC1 (* skoXC1 (+ (/ (- 13.) 60.) (* skoXC1 (* skoXC1 (+ (/ (- 9.) 280.) (* skoXC1 (* skoXC1 (/ (- 5.) 28.))))))))))) 0.) (and (<= (* skoXC1 (* skoXC1 (+ (/ (- 1.) 2.) (* skoXC1 (* skoXC1 (+ (/ 7. 120.) (* skoXC1 (* skoXC1 (+ (/ 33. 560.) (* skoXC1 (* skoXC1 (/ (- 5.) 112.)))))))))))) 0.) (and (<= (* skoXC1 (* skoXC1 (+ (/ (- 1.) 6.) (* skoXC1 (* skoXC1 (+ (/ (- 3.) 40.) (* skoXC1 (* skoXC1 (/ (- 5.) 112.))))))))) 1.) (and (<= (* skoXC1 (+ (- 1.) (* skoXC1 (* skoXC1 (+ (/ 1. 3.) (* skoXC1 (* skoXC1 (+ (/ 3. 20.) (* skoXC1 (* skoXC1 (/ 5. 56.))))))))))) 0.) (and (<= (* skoXC1 (* skoXC1 (* skoXC1 (* skoXC1 (+ (/ (- 80.) 3.) (* skoXC1 (* skoXC1 (+ (/ 128. 3.) (* skoXC1 (* skoXC1 (+ (/ (- 55.) 3.) (* skoXC1 (* skoXC1 (/ 5. 3.)))))))))))))) 0.) (and (<= (* skoXC1 (* skoXC1 (+ 256. (* skoXC1 (* skoXC1 (+ (- 160.) (* skoXC1 (* skoXC1 (+ 32. (* skoXC1 (* skoXC1 (- 1.)))))))))))) 128.) (and (<= (* skoXC1 (* skoXC1 (/ 1. 3.))) 1.) (and (<= (* skoXC1 (+ (- 1.) (* skoXC1 (* skoXC1 (/ (- 1.) 6.))))) 0.) (and (<= (* skoXC1 (* skoXC1 (* skoXC1 (* skoXC1 (/ (- 2.) 3.))))) 0.) (and (<= (* skoXC1 skoXC1) 2.) (and (<= (* skoXC1 (* skoXC1 (+ (/ (- 1.) 2.) (* skoXC1 (* skoXC1 (/ (- 1.) 6.)))))) 0.) (and (<= (* skoXC1 (* skoXC1 (/ (- 1.) 6.))) 1.) (and (<= (* skoXC1 (+ (- 1.) (* skoXC1 (* skoXC1 (/ 1. 3.))))) 0.) (and (> (/ 7. 8.) skoXC1) (and (> skoXC1 0.) (and (> (* skoXC1 (* skoXC1 (/ (- 1.) 2.))) (- 3.)) (and (<= (* skoXC1 (* skoXC1 (/ 1. 2.))) 3.) (and (<= (* skoXC1 (* skoXC1 (+ 24. (* skoXC1 (* skoXC1 (+ (- 10.) (* skoXC1 skoXC1))))))) 16.) (and (> (* skoXC1 (* skoXC1 (+ (- 80.) (* skoXC1 (* skoXC1 (+ 40. (* skoXC1 (* skoXC1 (+ (- 6.) (* skoXC1 (* skoXC1 (/ 1. 8.)))))))))))) (- 48.)) (and (<= (* skoXC1 (* skoXC1 (+ 80. (* skoXC1 (* skoXC1 (+ (- 40.) (* skoXC1 (* skoXC1 (+ 6. (* skoXC1 (* skoXC1 (/ (- 1.) 8.)))))))))))) 48.) (and (> (* skoXC1 skoXC1) 0.) (and (<= (* skoXC1 (+ (- 1.) (* skoXC1 (* skoXC1 (+ (/ 1. 3.) (* skoXC1 (* skoXC1 (/ 3. 20.)))))))) 0.) (and (<= (* skoXC1 (* skoXC1 (+ (/ (- 1.) 6.) (* skoXC1 (* skoXC1 (/ (- 3.) 40.)))))) 1.) (and (<= (* skoXC1 (* skoXC1 (+ (/ (- 1.) 2.) (* skoXC1 (* skoXC1 (+ (/ 7. 120.) (* skoXC1 (* skoXC1 (/ (- 3.) 40.))))))))) 0.) (and (<= (* skoXC1 (* skoXC1 (* skoXC1 (* skoXC1 (+ (/ (- 13.) 60.) (* skoXC1 (* skoXC1 (/ (- 3.) 10.)))))))) 0.) (and (<= (* skoXC1 (* skoXC1 (* skoXC1 (* skoXC1 (+ (/ (- 17.) 120.) (* skoXC1 (* skoXC1 (/ 3. 80.)))))))) 0.) (and (<= (* skoXC1 (* skoXC1 (+ (/ 1. 3.) (* skoXC1 (* skoXC1 (/ 3. 20.)))))) 1.) (and (<= (* skoXC1 (* skoXC1 (* skoXC1 (* skoXC1 (+ (/ 32. 15.) (* skoXC1 (* skoXC1 (+ (/ (- 296.) 15.) (* skoXC1 (* skoXC1 (+ (/ 391. 15.) (* skoXC1 (* skoXC1 (+ (/ (- 146.) 15.) (* skoXC1 (* skoXC1 (/ 3. 4.))))))))))))))))) 0.) (and (> (* skoXC1 (* skoXC1 (+ (/ 1. 6.) (* skoXC1 (* skoXC1 (/ 3. 40.)))))) (- 1.)) (<= (* skoXC1 (+ (- 1.) (* skoXC1 (* skoXC1 (+ (/ (- 1.) 6.) (* skoXC1 (* skoXC1 (/ (- 3.) 40.)))))))) 0.))))))))))))))))))))))))))))))))))))

% In GRF format:
(sequent " MetiTarski formula " (antecedent (<= (* skoXC1 (+ (- 1.) (* skoXC1 (* skoXC1 (+ (/ (- 1.) 6.) (* skoXC1 (* skoXC1 (+ (/ (- 3.) 40.) (* skoXC1 (* skoXC1 (/ (- 5.) 112.))))))))))) 0.) (> (* skoXC1 (* skoXC1 (+ (/ 1. 6.) (* skoXC1 (* skoXC1 (+ (/ 3. 40.) (* skoXC1 (* skoXC1 (/ 5. 112.))))))))) (- 1.)) (<= (* skoXC1 (* skoXC1 (* skoXC1 (* skoXC1 (+ (/ 32. 15.) (* skoXC1 (* skoXC1 (+ (/ (- 272.) 105.) (* skoXC1 (* skoXC1 (+ (/ (- 1163.) 105.) (* skoXC1 (* skoXC1 (+ (/ 1753. 105.) (* skoXC1 (* skoXC1 (+ (/ (- 169.) 28.) (* skoXC1 (* skoXC1 (/ 25. 56.)))))))))))))))))))) 0.) (<= (* skoXC1 (* skoXC1 (+ (/ 1. 3.) (* skoXC1 (* skoXC1 (+ (/ 3. 20.) (* skoXC1 (* skoXC1 (/ 5. 56.))))))))) 1.) (<= (* skoXC1 (* skoXC1 (* skoXC1 (* skoXC1 (+ (/ (- 17.) 120.) (* skoXC1 (* skoXC1 (+ (/ (- 27.) 280.) (* skoXC1 (* skoXC1 (/ 5. 224.))))))))))) 0.) (<= (* skoXC1 (* skoXC1 (* skoXC1 (* skoXC1 (+ (/ (- 13.) 60.) (* skoXC1 (* skoXC1 (+ (/ (- 9.) 280.) (* skoXC1 (* skoXC1 (/ (- 5.) 28.))))))))))) 0.) (<= (* skoXC1 (* skoXC1 (+ (/ (- 1.) 2.) (* skoXC1 (* skoXC1 (+ (/ 7. 120.) (* skoXC1 (* skoXC1 (+ (/ 33. 560.) (* skoXC1 (* skoXC1 (/ (- 5.) 112.)))))))))))) 0.) (<= (* skoXC1 (* skoXC1 (+ (/ (- 1.) 6.) (* skoXC1 (* skoXC1 (+ (/ (- 3.) 40.) (* skoXC1 (* skoXC1 (/ (- 5.) 112.))))))))) 1.) (<= (* skoXC1 (+ (- 1.) (* skoXC1 (* skoXC1 (+ (/ 1. 3.) (* skoXC1 (* skoXC1 (+ (/ 3. 20.) (* skoXC1 (* skoXC1 (/ 5. 56.))))))))))) 0.) (<= (* skoXC1 (* skoXC1 (* skoXC1 (* skoXC1 (+ (/ (- 80.) 3.) (* skoXC1 (* skoXC1 (+ (/ 128. 3.) (* skoXC1 (* skoXC1 (+ (/ (- 55.) 3.) (* skoXC1 (* skoXC1 (/ 5. 3.)))))))))))))) 0.) (<= (* skoXC1 (* skoXC1 (+ 256. (* skoXC1 (* skoXC1 (+ (- 160.) (* skoXC1 (* skoXC1 (+ 32. (* skoXC1 (* skoXC1 (- 1.)))))))))))) 128.) (<= (* skoXC1 (* skoXC1 (/ 1. 3.))) 1.) (<= (* skoXC1 (+ (- 1.) (* skoXC1 (* skoXC1 (/ (- 1.) 6.))))) 0.) (<= (* skoXC1 (* skoXC1 (* skoXC1 (* skoXC1 (/ (- 2.) 3.))))) 0.) (<= (* skoXC1 skoXC1) 2.) (<= (* skoXC1 (* skoXC1 (+ (/ (- 1.) 2.) (* skoXC1 (* skoXC1 (/ (- 1.) 6.)))))) 0.) (<= (* skoXC1 (* skoXC1 (/ (- 1.) 6.))) 1.) (<= (* skoXC1 (+ (- 1.) (* skoXC1 (* skoXC1 (/ 1. 3.))))) 0.) (> (/ 7. 8.) skoXC1) (> skoXC1 0.) (> (* skoXC1 (* skoXC1 (/ (- 1.) 2.))) (- 3.)) (<= (* skoXC1 (* skoXC1 (/ 1. 2.))) 3.) (<= (* skoXC1 (* skoXC1 (+ 24. (* skoXC1 (* skoXC1 (+ (- 10.) (* skoXC1 skoXC1))))))) 16.) (> (* skoXC1 (* skoXC1 (+ (- 80.) (* skoXC1 (* skoXC1 (+ 40. (* skoXC1 (* skoXC1 (+ (- 6.) (* skoXC1 (* skoXC1 (/ 1. 8.)))))))))))) (- 48.)) (<= (* skoXC1 (* skoXC1 (+ 80. (* skoXC1 (* skoXC1 (+ (- 40.) (* skoXC1 (* skoXC1 (+ 6. (* skoXC1 (* skoXC1 (/ (- 1.) 8.)))))))))))) 48.) (> (* skoXC1 skoXC1) 0.) (<= (* skoXC1 (+ (- 1.) (* skoXC1 (* skoXC1 (+ (/ 1. 3.) (* skoXC1 (* skoXC1 (/ 3. 20.)))))))) 0.) (<= (* skoXC1 (* skoXC1 (+ (/ (- 1.) 6.) (* skoXC1 (* skoXC1 (/ (- 3.) 40.)))))) 1.) (<= (* skoXC1 (* skoXC1 (+ (/ (- 1.) 2.) (* skoXC1 (* skoXC1 (+ (/ 7. 120.) (* skoXC1 (* skoXC1 (/ (- 3.) 40.))))))))) 0.) (<= (* skoXC1 (* skoXC1 (* skoXC1 (* skoXC1 (+ (/ (- 13.) 60.) (* skoXC1 (* skoXC1 (/ (- 3.) 10.)))))))) 0.) (<= (* skoXC1 (* skoXC1 (* skoXC1 (* skoXC1 (+ (/ (- 17.) 120.) (* skoXC1 (* skoXC1 (/ 3. 80.)))))))) 0.) (<= (* skoXC1 (* skoXC1 (+ (/ 1. 3.) (* skoXC1 (* skoXC1 (/ 3. 20.)))))) 1.) (<= (* skoXC1 (* skoXC1 (* skoXC1 (* skoXC1 (+ (/ 32. 15.) (* skoXC1 (* skoXC1 (+ (/ (- 296.) 15.) (* skoXC1 (* skoXC1 (+ (/ 391. 15.) (* skoXC1 (* skoXC1 (+ (/ (- 146.) 15.) (* skoXC1 (* skoXC1 (/ 3. 4.))))))))))))))))) 0.) (> (* skoXC1 (* skoXC1 (+ (/ 1. 6.) (* skoXC1 (* skoXC1 (/ 3. 40.)))))) (- 1.))) (succedent (> (* skoXC1 (+ (- 1.) (* skoXC1 (* skoXC1 (+ (/ (- 1.) 6.) (* skoXC1 (* skoXC1 (/ (- 3.) 40.)))))))) 0.)))
-----[end problem]-----

-----[begin problem]-----
% In Mathematica format:
Timing[Resolve[Exists[{skoXC1}, And[skoXC1*skoXC1*((-1/6)+skoXC1*skoXC1*((-3/40)+skoXC1*skoXC1*(-5/112)))<=1,skoXC1*skoXC1*((1/6)+skoXC1*skoXC1*((3/40)+skoXC1*skoXC1*(5/112)))<=-1,skoXC1*(-1+skoXC1*skoXC1*((-1/6)+skoXC1*skoXC1*((-3/40)+skoXC1*skoXC1*(-5/112))))<=0,skoXC1*skoXC1*((-1/3)+skoXC1*skoXC1*((-3/20)+skoXC1*skoXC1*(-5/56)))>-1,skoXC1*skoXC1*skoXC1*skoXC1*((32/15)+skoXC1*skoXC1*((-272/105)+skoXC1*skoXC1*((-1163/105)+skoXC1*skoXC1*((1753/105)+skoXC1*skoXC1*((-169/28)+skoXC1*skoXC1*(25/56))))))<=0,skoXC1*skoXC1*((1/3)+skoXC1*skoXC1*((3/20)+skoXC1*skoXC1*(5/56)))<=1,skoXC1*skoXC1*skoXC1*skoXC1*((-17/120)+skoXC1*skoXC1*((-27/280)+skoXC1*skoXC1*(5/224)))<=0,skoXC1*skoXC1*skoXC1*skoXC1*((-13/60)+skoXC1*skoXC1*((-9/280)+skoXC1*skoXC1*(-5/28)))<=0,skoXC1*skoXC1*((-1/2)+skoXC1*skoXC1*((7/120)+skoXC1*skoXC1*((33/560)+skoXC1*skoXC1*(-5/112))))<=0,skoXC1*skoXC1*((-1/6)+skoXC1*skoXC1*((-3/40)+skoXC1*skoXC1*(-5/112)))<=1,skoXC1*(-1+skoXC1*skoXC1*((1/3)+skoXC1*skoXC1*((3/20)+skoXC1*skoXC1*(5/56))))<=0,skoXC1*skoXC1*skoXC1*skoXC1*((-80/3)+skoXC1*skoXC1*((128/3)+skoXC1*skoXC1*((-55/3)+skoXC1*skoXC1*(5/3))))<=0,skoXC1*skoXC1*(256+skoXC1*skoXC1*(-160+skoXC1*skoXC1*(32+skoXC1*skoXC1*-1)))<=128,skoXC1*skoXC1*(1/3)<=1,skoXC1*(-1+skoXC1*skoXC1*(-1/6))<=0,skoXC1*skoXC1*skoXC1*skoXC1*(-2/3)<=0,skoXC1*skoXC1<=2,skoXC1*skoXC1*((-1/2)+skoXC1*skoXC1*(-1/6))<=0,skoXC1*skoXC1*(-1/6)<=1,skoXC1*(-1+skoXC1*skoXC1*(1/3))<=0,(7/8)>skoXC1,skoXC1>0,skoXC1*skoXC1*(-1/2)>-3,skoXC1*skoXC1*(1/2)<=3,skoXC1*skoXC1*(24+skoXC1*skoXC1*(-10+skoXC1*skoXC1))<=16,skoXC1*skoXC1*(-80+skoXC1*skoXC1*(40+skoXC1*skoXC1*(-6+skoXC1*skoXC1*(1/8))))>-48,skoXC1*skoXC1*(80+skoXC1*skoXC1*(-40+skoXC1*skoXC1*(6+skoXC1*skoXC1*(-1/8))))<=48,skoXC1*skoXC1>0,skoXC1*(-1+skoXC1*skoXC1*((1/3)+skoXC1*skoXC1*(3/20)))<=0,skoXC1*skoXC1*((-1/6)+skoXC1*skoXC1*(-3/40))<=1,skoXC1*skoXC1*((-1/2)+skoXC1*skoXC1*((7/120)+skoXC1*skoXC1*(-3/40)))<=0,skoXC1*skoXC1*skoXC1*skoXC1*((-13/60)+skoXC1*skoXC1*(-3/10))<=0,skoXC1*skoXC1*skoXC1*skoXC1*((-17/120)+skoXC1*skoXC1*(3/80))<=0,skoXC1*skoXC1*((1/3)+skoXC1*skoXC1*(3/20))<=1,skoXC1*skoXC1*skoXC1*skoXC1*((32/15)+skoXC1*skoXC1*((-296/15)+skoXC1*skoXC1*((391/15)+skoXC1*skoXC1*((-146/15)+skoXC1*skoXC1*(3/4)))))<=0,skoXC1*skoXC1*((1/6)+skoXC1*skoXC1*(3/40))>-1,skoXC1*(-1+skoXC1*skoXC1*((-1/6)+skoXC1*skoXC1*(-3/40)))<=0]], Reals]]

% In QepcadB format:
(E skoXC1) [[(skoXC1 skoXC1 (-1/6+(skoXC1 skoXC1 (-3/40+(skoXC1 skoXC1 (-5/112))))))<=1]/\[[(skoXC1 skoXC1 (1/6+(skoXC1 skoXC1 (3/40+(skoXC1 skoXC1 (5/112))))))<=-1]/\[[(skoXC1 (-1+(skoXC1 skoXC1 (-1/6+(skoXC1 skoXC1 (-3/40+(skoXC1 skoXC1 (-5/112))))))))<=0]/\[[-1<(skoXC1 skoXC1 (-1/3+(skoXC1 skoXC1 (-3/20+(skoXC1 skoXC1 (-5/56))))))]/\[[(skoXC1 skoXC1 skoXC1 skoXC1 (32/15+(skoXC1 skoXC1 (-272/105+(skoXC1 skoXC1 (-1163/105+(skoXC1 skoXC1 (1753/105+(skoXC1 skoXC1 (-169/28+(skoXC1 skoXC1 (25/56))))))))))))<=0]/\[[(skoXC1 skoXC1 (1/3+(skoXC1 skoXC1 (3/20+(skoXC1 skoXC1 (5/56))))))<=1]/\[[(skoXC1 skoXC1 skoXC1 skoXC1 (-17/120+(skoXC1 skoXC1 (-27/280+(skoXC1 skoXC1 (5/224))))))<=0]/\[[(skoXC1 skoXC1 skoXC1 skoXC1 (-13/60+(skoXC1 skoXC1 (-9/280+(skoXC1 skoXC1 (-5/28))))))<=0]/\[[(skoXC1 skoXC1 (-1/2+(skoXC1 skoXC1 (7/120+(skoXC1 skoXC1 (33/560+(skoXC1 skoXC1 (-5/112))))))))<=0]/\[[(skoXC1 skoXC1 (-1/6+(skoXC1 skoXC1 (-3/40+(skoXC1 skoXC1 (-5/112))))))<=1]/\[[(skoXC1 (-1+(skoXC1 skoXC1 (1/3+(skoXC1 skoXC1 (3/20+(skoXC1 skoXC1 (5/56))))))))<=0]/\[[(skoXC1 skoXC1 skoXC1 skoXC1 (-80/3+(skoXC1 skoXC1 (128/3+(skoXC1 skoXC1 (-55/3+(skoXC1 skoXC1 (5/3))))))))<=0]/\[[(skoXC1 skoXC1 (256+(skoXC1 skoXC1 (-160+(skoXC1 skoXC1 (32+(skoXC1 skoXC1 (-1))))))))<=128]/\[[(skoXC1 skoXC1 (1/3))<=1]/\[[(skoXC1 (-1+(skoXC1 skoXC1 (-1/6))))<=0]/\[[(skoXC1 skoXC1 skoXC1 skoXC1 (-2/3))<=0]/\[[(skoXC1 skoXC1)<=2]/\[[(skoXC1 skoXC1 (-1/2+(skoXC1 skoXC1 (-1/6))))<=0]/\[[(skoXC1 skoXC1 (-1/6))<=1]/\[[(skoXC1 (-1+(skoXC1 skoXC1 (1/3))))<=0]/\[[skoXC1<7/8]/\[[0<skoXC1]/\[[-3<(skoXC1 skoXC1 (-1/2))]/\[[(skoXC1 skoXC1 (1/2))<=3]/\[[(skoXC1 skoXC1 (24+(skoXC1 skoXC1 (-10+(skoXC1 skoXC1)))))<=16]/\[[-48<(skoXC1 skoXC1 (-80+(skoXC1 skoXC1 (40+(skoXC1 skoXC1 (-6+(skoXC1 skoXC1 (1/8))))))))]/\[[(skoXC1 skoXC1 (80+(skoXC1 skoXC1 (-40+(skoXC1 skoXC1 (6+(skoXC1 skoXC1 (-1/8))))))))<=48]/\[[0<(skoXC1 skoXC1)]/\[[(skoXC1 (-1+(skoXC1 skoXC1 (1/3+(skoXC1 skoXC1 (3/20))))))<=0]/\[[(skoXC1 skoXC1 (-1/6+(skoXC1 skoXC1 (-3/40))))<=1]/\[[(skoXC1 skoXC1 (-1/2+(skoXC1 skoXC1 (7/120+(skoXC1 skoXC1 (-3/40))))))<=0]/\[[(skoXC1 skoXC1 skoXC1 skoXC1 (-13/60+(skoXC1 skoXC1 (-3/10))))<=0]/\[[(skoXC1 skoXC1 skoXC1 skoXC1 (-17/120+(skoXC1 skoXC1 (3/80))))<=0]/\[[(skoXC1 skoXC1 (1/3+(skoXC1 skoXC1 (3/20))))<=1]/\[[(skoXC1 skoXC1 skoXC1 skoXC1 (32/15+(skoXC1 skoXC1 (-296/15+(skoXC1 skoXC1 (391/15+(skoXC1 skoXC1 (-146/15+(skoXC1 skoXC1 (3/4))))))))))<=0]/\[[-1<(skoXC1 skoXC1 (1/6+(skoXC1 skoXC1 (3/40))))]/\[(skoXC1 (-1+(skoXC1 skoXC1 (-1/6+(skoXC1 skoXC1 (-3/40))))))<=0]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]].

% In SMTLib2 format:
(declare-fun skoXC1 () Real) (assert (and (<= (* skoXC1 (* skoXC1 (+ (/ (- 1.) 6.) (* skoXC1 (* skoXC1 (+ (/ (- 3.) 40.) (* skoXC1 (* skoXC1 (/ (- 5.) 112.))))))))) 1.) (and (<= (* skoXC1 (* skoXC1 (+ (/ 1. 6.) (* skoXC1 (* skoXC1 (+ (/ 3. 40.) (* skoXC1 (* skoXC1 (/ 5. 112.))))))))) (- 1.)) (and (<= (* skoXC1 (+ (- 1.) (* skoXC1 (* skoXC1 (+ (/ (- 1.) 6.) (* skoXC1 (* skoXC1 (+ (/ (- 3.) 40.) (* skoXC1 (* skoXC1 (/ (- 5.) 112.))))))))))) 0.) (and (> (* skoXC1 (* skoXC1 (+ (/ (- 1.) 3.) (* skoXC1 (* skoXC1 (+ (/ (- 3.) 20.) (* skoXC1 (* skoXC1 (/ (- 5.) 56.))))))))) (- 1.)) (and (<= (* skoXC1 (* skoXC1 (* skoXC1 (* skoXC1 (+ (/ 32. 15.) (* skoXC1 (* skoXC1 (+ (/ (- 272.) 105.) (* skoXC1 (* skoXC1 (+ (/ (- 1163.) 105.) (* skoXC1 (* skoXC1 (+ (/ 1753. 105.) (* skoXC1 (* skoXC1 (+ (/ (- 169.) 28.) (* skoXC1 (* skoXC1 (/ 25. 56.)))))))))))))))))))) 0.) (and (<= (* skoXC1 (* skoXC1 (+ (/ 1. 3.) (* skoXC1 (* skoXC1 (+ (/ 3. 20.) (* skoXC1 (* skoXC1 (/ 5. 56.))))))))) 1.) (and (<= (* skoXC1 (* skoXC1 (* skoXC1 (* skoXC1 (+ (/ (- 17.) 120.) (* skoXC1 (* skoXC1 (+ (/ (- 27.) 280.) (* skoXC1 (* skoXC1 (/ 5. 224.))))))))))) 0.) (and (<= (* skoXC1 (* skoXC1 (* skoXC1 (* skoXC1 (+ (/ (- 13.) 60.) (* skoXC1 (* skoXC1 (+ (/ (- 9.) 280.) (* skoXC1 (* skoXC1 (/ (- 5.) 28.))))))))))) 0.) (and (<= (* skoXC1 (* skoXC1 (+ (/ (- 1.) 2.) (* skoXC1 (* skoXC1 (+ (/ 7. 120.) (* skoXC1 (* skoXC1 (+ (/ 33. 560.) (* skoXC1 (* skoXC1 (/ (- 5.) 112.)))))))))))) 0.) (and (<= (* skoXC1 (* skoXC1 (+ (/ (- 1.) 6.) (* skoXC1 (* skoXC1 (+ (/ (- 3.) 40.) (* skoXC1 (* skoXC1 (/ (- 5.) 112.))))))))) 1.) (and (<= (* skoXC1 (+ (- 1.) (* skoXC1 (* skoXC1 (+ (/ 1. 3.) (* skoXC1 (* skoXC1 (+ (/ 3. 20.) (* skoXC1 (* skoXC1 (/ 5. 56.))))))))))) 0.) (and (<= (* skoXC1 (* skoXC1 (* skoXC1 (* skoXC1 (+ (/ (- 80.) 3.) (* skoXC1 (* skoXC1 (+ (/ 128. 3.) (* skoXC1 (* skoXC1 (+ (/ (- 55.) 3.) (* skoXC1 (* skoXC1 (/ 5. 3.)))))))))))))) 0.) (and (<= (* skoXC1 (* skoXC1 (+ 256. (* skoXC1 (* skoXC1 (+ (- 160.) (* skoXC1 (* skoXC1 (+ 32. (* skoXC1 (* skoXC1 (- 1.)))))))))))) 128.) (and (<= (* skoXC1 (* skoXC1 (/ 1. 3.))) 1.) (and (<= (* skoXC1 (+ (- 1.) (* skoXC1 (* skoXC1 (/ (- 1.) 6.))))) 0.) (and (<= (* skoXC1 (* skoXC1 (* skoXC1 (* skoXC1 (/ (- 2.) 3.))))) 0.) (and (<= (* skoXC1 skoXC1) 2.) (and (<= (* skoXC1 (* skoXC1 (+ (/ (- 1.) 2.) (* skoXC1 (* skoXC1 (/ (- 1.) 6.)))))) 0.) (and (<= (* skoXC1 (* skoXC1 (/ (- 1.) 6.))) 1.) (and (<= (* skoXC1 (+ (- 1.) (* skoXC1 (* skoXC1 (/ 1. 3.))))) 0.) (and (> (/ 7. 8.) skoXC1) (and (> skoXC1 0.) (and (> (* skoXC1 (* skoXC1 (/ (- 1.) 2.))) (- 3.)) (and (<= (* skoXC1 (* skoXC1 (/ 1. 2.))) 3.) (and (<= (* skoXC1 (* skoXC1 (+ 24. (* skoXC1 (* skoXC1 (+ (- 10.) (* skoXC1 skoXC1))))))) 16.) (and (> (* skoXC1 (* skoXC1 (+ (- 80.) (* skoXC1 (* skoXC1 (+ 40. (* skoXC1 (* skoXC1 (+ (- 6.) (* skoXC1 (* skoXC1 (/ 1. 8.)))))))))))) (- 48.)) (and (<= (* skoXC1 (* skoXC1 (+ 80. (* skoXC1 (* skoXC1 (+ (- 40.) (* skoXC1 (* skoXC1 (+ 6. (* skoXC1 (* skoXC1 (/ (- 1.) 8.)))))))))))) 48.) (and (> (* skoXC1 skoXC1) 0.) (and (<= (* skoXC1 (+ (- 1.) (* skoXC1 (* skoXC1 (+ (/ 1. 3.) (* skoXC1 (* skoXC1 (/ 3. 20.)))))))) 0.) (and (<= (* skoXC1 (* skoXC1 (+ (/ (- 1.) 6.) (* skoXC1 (* skoXC1 (/ (- 3.) 40.)))))) 1.) (and (<= (* skoXC1 (* skoXC1 (+ (/ (- 1.) 2.) (* skoXC1 (* skoXC1 (+ (/ 7. 120.) (* skoXC1 (* skoXC1 (/ (- 3.) 40.))))))))) 0.) (and (<= (* skoXC1 (* skoXC1 (* skoXC1 (* skoXC1 (+ (/ (- 13.) 60.) (* skoXC1 (* skoXC1 (/ (- 3.) 10.)))))))) 0.) (and (<= (* skoXC1 (* skoXC1 (* skoXC1 (* skoXC1 (+ (/ (- 17.) 120.) (* skoXC1 (* skoXC1 (/ 3. 80.)))))))) 0.) (and (<= (* skoXC1 (* skoXC1 (+ (/ 1. 3.) (* skoXC1 (* skoXC1 (/ 3. 20.)))))) 1.) (and (<= (* skoXC1 (* skoXC1 (* skoXC1 (* skoXC1 (+ (/ 32. 15.) (* skoXC1 (* skoXC1 (+ (/ (- 296.) 15.) (* skoXC1 (* skoXC1 (+ (/ 391. 15.) (* skoXC1 (* skoXC1 (+ (/ (- 146.) 15.) (* skoXC1 (* skoXC1 (/ 3. 4.))))))))))))))))) 0.) (and (> (* skoXC1 (* skoXC1 (+ (/ 1. 6.) (* skoXC1 (* skoXC1 (/ 3. 40.)))))) (- 1.)) (<= (* skoXC1 (+ (- 1.) (* skoXC1 (* skoXC1 (+ (/ (- 1.) 6.) (* skoXC1 (* skoXC1 (/ (- 3.) 40.)))))))) 0.))))))))))))))))))))))))))))))))))))))

% In GRF format:
(sequent " MetiTarski formula " (antecedent (<= (* skoXC1 (* skoXC1 (+ (/ (- 1.) 6.) (* skoXC1 (* skoXC1 (+ (/ (- 3.) 40.) (* skoXC1 (* skoXC1 (/ (- 5.) 112.))))))))) 1.) (<= (* skoXC1 (* skoXC1 (+ (/ 1. 6.) (* skoXC1 (* skoXC1 (+ (/ 3. 40.) (* skoXC1 (* skoXC1 (/ 5. 112.))))))))) (- 1.)) (<= (* skoXC1 (+ (- 1.) (* skoXC1 (* skoXC1 (+ (/ (- 1.) 6.) (* skoXC1 (* skoXC1 (+ (/ (- 3.) 40.) (* skoXC1 (* skoXC1 (/ (- 5.) 112.))))))))))) 0.) (> (* skoXC1 (* skoXC1 (+ (/ (- 1.) 3.) (* skoXC1 (* skoXC1 (+ (/ (- 3.) 20.) (* skoXC1 (* skoXC1 (/ (- 5.) 56.))))))))) (- 1.)) (<= (* skoXC1 (* skoXC1 (* skoXC1 (* skoXC1 (+ (/ 32. 15.) (* skoXC1 (* skoXC1 (+ (/ (- 272.) 105.) (* skoXC1 (* skoXC1 (+ (/ (- 1163.) 105.) (* skoXC1 (* skoXC1 (+ (/ 1753. 105.) (* skoXC1 (* skoXC1 (+ (/ (- 169.) 28.) (* skoXC1 (* skoXC1 (/ 25. 56.)))))))))))))))))))) 0.) (<= (* skoXC1 (* skoXC1 (+ (/ 1. 3.) (* skoXC1 (* skoXC1 (+ (/ 3. 20.) (* skoXC1 (* skoXC1 (/ 5. 56.))))))))) 1.) (<= (* skoXC1 (* skoXC1 (* skoXC1 (* skoXC1 (+ (/ (- 17.) 120.) (* skoXC1 (* skoXC1 (+ (/ (- 27.) 280.) (* skoXC1 (* skoXC1 (/ 5. 224.))))))))))) 0.) (<= (* skoXC1 (* skoXC1 (* skoXC1 (* skoXC1 (+ (/ (- 13.) 60.) (* skoXC1 (* skoXC1 (+ (/ (- 9.) 280.) (* skoXC1 (* skoXC1 (/ (- 5.) 28.))))))))))) 0.) (<= (* skoXC1 (* skoXC1 (+ (/ (- 1.) 2.) (* skoXC1 (* skoXC1 (+ (/ 7. 120.) (* skoXC1 (* skoXC1 (+ (/ 33. 560.) (* skoXC1 (* skoXC1 (/ (- 5.) 112.)))))))))))) 0.) (<= (* skoXC1 (* skoXC1 (+ (/ (- 1.) 6.) (* skoXC1 (* skoXC1 (+ (/ (- 3.) 40.) (* skoXC1 (* skoXC1 (/ (- 5.) 112.))))))))) 1.) (<= (* skoXC1 (+ (- 1.) (* skoXC1 (* skoXC1 (+ (/ 1. 3.) (* skoXC1 (* skoXC1 (+ (/ 3. 20.) (* skoXC1 (* skoXC1 (/ 5. 56.))))))))))) 0.) (<= (* skoXC1 (* skoXC1 (* skoXC1 (* skoXC1 (+ (/ (- 80.) 3.) (* skoXC1 (* skoXC1 (+ (/ 128. 3.) (* skoXC1 (* skoXC1 (+ (/ (- 55.) 3.) (* skoXC1 (* skoXC1 (/ 5. 3.)))))))))))))) 0.) (<= (* skoXC1 (* skoXC1 (+ 256. (* skoXC1 (* skoXC1 (+ (- 160.) (* skoXC1 (* skoXC1 (+ 32. (* skoXC1 (* skoXC1 (- 1.)))))))))))) 128.) (<= (* skoXC1 (* skoXC1 (/ 1. 3.))) 1.) (<= (* skoXC1 (+ (- 1.) (* skoXC1 (* skoXC1 (/ (- 1.) 6.))))) 0.) (<= (* skoXC1 (* skoXC1 (* skoXC1 (* skoXC1 (/ (- 2.) 3.))))) 0.) (<= (* skoXC1 skoXC1) 2.) (<= (* skoXC1 (* skoXC1 (+ (/ (- 1.) 2.) (* skoXC1 (* skoXC1 (/ (- 1.) 6.)))))) 0.) (<= (* skoXC1 (* skoXC1 (/ (- 1.) 6.))) 1.) (<= (* skoXC1 (+ (- 1.) (* skoXC1 (* skoXC1 (/ 1. 3.))))) 0.) (> (/ 7. 8.) skoXC1) (> skoXC1 0.) (> (* skoXC1 (* skoXC1 (/ (- 1.) 2.))) (- 3.)) (<= (* skoXC1 (* skoXC1 (/ 1. 2.))) 3.) (<= (* skoXC1 (* skoXC1 (+ 24. (* skoXC1 (* skoXC1 (+ (- 10.) (* skoXC1 skoXC1))))))) 16.) (> (* skoXC1 (* skoXC1 (+ (- 80.) (* skoXC1 (* skoXC1 (+ 40. (* skoXC1 (* skoXC1 (+ (- 6.) (* skoXC1 (* skoXC1 (/ 1. 8.)))))))))))) (- 48.)) (<= (* skoXC1 (* skoXC1 (+ 80. (* skoXC1 (* skoXC1 (+ (- 40.) (* skoXC1 (* skoXC1 (+ 6. (* skoXC1 (* skoXC1 (/ (- 1.) 8.)))))))))))) 48.) (> (* skoXC1 skoXC1) 0.) (<= (* skoXC1 (+ (- 1.) (* skoXC1 (* skoXC1 (+ (/ 1. 3.) (* skoXC1 (* skoXC1 (/ 3. 20.)))))))) 0.) (<= (* skoXC1 (* skoXC1 (+ (/ (- 1.) 6.) (* skoXC1 (* skoXC1 (/ (- 3.) 40.)))))) 1.) (<= (* skoXC1 (* skoXC1 (+ (/ (- 1.) 2.) (* skoXC1 (* skoXC1 (+ (/ 7. 120.) (* skoXC1 (* skoXC1 (/ (- 3.) 40.))))))))) 0.) (<= (* skoXC1 (* skoXC1 (* skoXC1 (* skoXC1 (+ (/ (- 13.) 60.) (* skoXC1 (* skoXC1 (/ (- 3.) 10.)))))))) 0.) (<= (* skoXC1 (* skoXC1 (* skoXC1 (* skoXC1 (+ (/ (- 17.) 120.) (* skoXC1 (* skoXC1 (/ 3. 80.)))))))) 0.) (<= (* skoXC1 (* skoXC1 (+ (/ 1. 3.) (* skoXC1 (* skoXC1 (/ 3. 20.)))))) 1.) (<= (* skoXC1 (* skoXC1 (* skoXC1 (* skoXC1 (+ (/ 32. 15.) (* skoXC1 (* skoXC1 (+ (/ (- 296.) 15.) (* skoXC1 (* skoXC1 (+ (/ 391. 15.) (* skoXC1 (* skoXC1 (+ (/ (- 146.) 15.) (* skoXC1 (* skoXC1 (/ 3. 4.))))))))))))))))) 0.) (> (* skoXC1 (* skoXC1 (+ (/ 1. 6.) (* skoXC1 (* skoXC1 (/ 3. 40.)))))) (- 1.))) (succedent (> (* skoXC1 (+ (- 1.) (* skoXC1 (* skoXC1 (+ (/ (- 1.) 6.) (* skoXC1 (* skoXC1 (/ (- 3.) 40.)))))))) 0.)))
-----[end problem]-----

-----[begin problem]-----
% In Mathematica format:
Timing[Resolve[Exists[{skoXC1}, And[skoXC1*skoXC1*((-1/3)+skoXC1*skoXC1*((-3/20)+skoXC1*skoXC1*(-5/56)))>-1,skoXC1*skoXC1*((1/6)+skoXC1*skoXC1*((3/40)+skoXC1*skoXC1*(5/112)))>-1,skoXC1*skoXC1*skoXC1*skoXC1*((32/15)+skoXC1*skoXC1*((-272/105)+skoXC1*skoXC1*((-1163/105)+skoXC1*skoXC1*((1753/105)+skoXC1*skoXC1*((-169/28)+skoXC1*skoXC1*(25/56))))))<=0,skoXC1*skoXC1*((1/3)+skoXC1*skoXC1*((3/20)+skoXC1*skoXC1*(5/56)))<=1,skoXC1*skoXC1*skoXC1*skoXC1*((-17/120)+skoXC1*skoXC1*((-27/280)+skoXC1*skoXC1*(5/224)))<=0,skoXC1*skoXC1*skoXC1*skoXC1*((-13/60)+skoXC1*skoXC1*((-9/280)+skoXC1*skoXC1*(-5/28)))<=0,skoXC1*skoXC1*((-1/2)+skoXC1*skoXC1*((7/120)+skoXC1*skoXC1*((33/560)+skoXC1*skoXC1*(-5/112))))<=0,skoXC1*skoXC1*((-1/6)+skoXC1*skoXC1*((-3/40)+skoXC1*skoXC1*(-5/112)))<=1,skoXC1*(-1+skoXC1*skoXC1*((1/3)+skoXC1*skoXC1*((3/20)+skoXC1*skoXC1*(5/56))))<=0,skoXC1*skoXC1*skoXC1*skoXC1*((-80/3)+skoXC1*skoXC1*((128/3)+skoXC1*skoXC1*((-55/3)+skoXC1*skoXC1*(5/3))))<=0,skoXC1*skoXC1*(256+skoXC1*skoXC1*(-160+skoXC1*skoXC1*(32+skoXC1*skoXC1*-1)))<=128,skoXC1*skoXC1*(1/3)<=1,skoXC1*(-1+skoXC1*skoXC1*(-1/6))<=0,skoXC1*skoXC1*skoXC1*skoXC1*(-2/3)<=0,skoXC1*skoXC1<=2,skoXC1*skoXC1*((-1/2)+skoXC1*skoXC1*(-1/6))<=0,skoXC1*skoXC1*(-1/6)<=1,skoXC1*(-1+skoXC1*skoXC1*(1/3))<=0,(7/8)>skoXC1,skoXC1>0,skoXC1*skoXC1*(-1/2)>-3,skoXC1*skoXC1*(1/2)<=3,skoXC1*skoXC1*(24+skoXC1*skoXC1*(-10+skoXC1*skoXC1))<=16,skoXC1*skoXC1*(-80+skoXC1*skoXC1*(40+skoXC1*skoXC1*(-6+skoXC1*skoXC1*(1/8))))>-48,skoXC1*skoXC1*(80+skoXC1*skoXC1*(-40+skoXC1*skoXC1*(6+skoXC1*skoXC1*(-1/8))))<=48,skoXC1*skoXC1>0,skoXC1*(-1+skoXC1*skoXC1*((1/3)+skoXC1*skoXC1*(3/20)))<=0,skoXC1*skoXC1*((-1/6)+skoXC1*skoXC1*(-3/40))<=1,skoXC1*skoXC1*((-1/2)+skoXC1*skoXC1*((7/120)+skoXC1*skoXC1*(-3/40)))<=0,skoXC1*skoXC1*skoXC1*skoXC1*((-13/60)+skoXC1*skoXC1*(-3/10))<=0,skoXC1*skoXC1*skoXC1*skoXC1*((-17/120)+skoXC1*skoXC1*(3/80))<=0,skoXC1*skoXC1*((1/3)+skoXC1*skoXC1*(3/20))<=1,skoXC1*skoXC1*skoXC1*skoXC1*((32/15)+skoXC1*skoXC1*((-296/15)+skoXC1*skoXC1*((391/15)+skoXC1*skoXC1*((-146/15)+skoXC1*skoXC1*(3/4)))))<=0,skoXC1*skoXC1*((1/6)+skoXC1*skoXC1*(3/40))>-1,skoXC1*(-1+skoXC1*skoXC1*((-1/6)+skoXC1*skoXC1*(-3/40)))<=0]], Reals]]

% In QepcadB format:
(E skoXC1) [[-1<(skoXC1 skoXC1 (-1/3+(skoXC1 skoXC1 (-3/20+(skoXC1 skoXC1 (-5/56))))))]/\[[-1<(skoXC1 skoXC1 (1/6+(skoXC1 skoXC1 (3/40+(skoXC1 skoXC1 (5/112))))))]/\[[(skoXC1 skoXC1 skoXC1 skoXC1 (32/15+(skoXC1 skoXC1 (-272/105+(skoXC1 skoXC1 (-1163/105+(skoXC1 skoXC1 (1753/105+(skoXC1 skoXC1 (-169/28+(skoXC1 skoXC1 (25/56))))))))))))<=0]/\[[(skoXC1 skoXC1 (1/3+(skoXC1 skoXC1 (3/20+(skoXC1 skoXC1 (5/56))))))<=1]/\[[(skoXC1 skoXC1 skoXC1 skoXC1 (-17/120+(skoXC1 skoXC1 (-27/280+(skoXC1 skoXC1 (5/224))))))<=0]/\[[(skoXC1 skoXC1 skoXC1 skoXC1 (-13/60+(skoXC1 skoXC1 (-9/280+(skoXC1 skoXC1 (-5/28))))))<=0]/\[[(skoXC1 skoXC1 (-1/2+(skoXC1 skoXC1 (7/120+(skoXC1 skoXC1 (33/560+(skoXC1 skoXC1 (-5/112))))))))<=0]/\[[(skoXC1 skoXC1 (-1/6+(skoXC1 skoXC1 (-3/40+(skoXC1 skoXC1 (-5/112))))))<=1]/\[[(skoXC1 (-1+(skoXC1 skoXC1 (1/3+(skoXC1 skoXC1 (3/20+(skoXC1 skoXC1 (5/56))))))))<=0]/\[[(skoXC1 skoXC1 skoXC1 skoXC1 (-80/3+(skoXC1 skoXC1 (128/3+(skoXC1 skoXC1 (-55/3+(skoXC1 skoXC1 (5/3))))))))<=0]/\[[(skoXC1 skoXC1 (256+(skoXC1 skoXC1 (-160+(skoXC1 skoXC1 (32+(skoXC1 skoXC1 (-1))))))))<=128]/\[[(skoXC1 skoXC1 (1/3))<=1]/\[[(skoXC1 (-1+(skoXC1 skoXC1 (-1/6))))<=0]/\[[(skoXC1 skoXC1 skoXC1 skoXC1 (-2/3))<=0]/\[[(skoXC1 skoXC1)<=2]/\[[(skoXC1 skoXC1 (-1/2+(skoXC1 skoXC1 (-1/6))))<=0]/\[[(skoXC1 skoXC1 (-1/6))<=1]/\[[(skoXC1 (-1+(skoXC1 skoXC1 (1/3))))<=0]/\[[skoXC1<7/8]/\[[0<skoXC1]/\[[-3<(skoXC1 skoXC1 (-1/2))]/\[[(skoXC1 skoXC1 (1/2))<=3]/\[[(skoXC1 skoXC1 (24+(skoXC1 skoXC1 (-10+(skoXC1 skoXC1)))))<=16]/\[[-48<(skoXC1 skoXC1 (-80+(skoXC1 skoXC1 (40+(skoXC1 skoXC1 (-6+(skoXC1 skoXC1 (1/8))))))))]/\[[(skoXC1 skoXC1 (80+(skoXC1 skoXC1 (-40+(skoXC1 skoXC1 (6+(skoXC1 skoXC1 (-1/8))))))))<=48]/\[[0<(skoXC1 skoXC1)]/\[[(skoXC1 (-1+(skoXC1 skoXC1 (1/3+(skoXC1 skoXC1 (3/20))))))<=0]/\[[(skoXC1 skoXC1 (-1/6+(skoXC1 skoXC1 (-3/40))))<=1]/\[[(skoXC1 skoXC1 (-1/2+(skoXC1 skoXC1 (7/120+(skoXC1 skoXC1 (-3/40))))))<=0]/\[[(skoXC1 skoXC1 skoXC1 skoXC1 (-13/60+(skoXC1 skoXC1 (-3/10))))<=0]/\[[(skoXC1 skoXC1 skoXC1 skoXC1 (-17/120+(skoXC1 skoXC1 (3/80))))<=0]/\[[(skoXC1 skoXC1 (1/3+(skoXC1 skoXC1 (3/20))))<=1]/\[[(skoXC1 skoXC1 skoXC1 skoXC1 (32/15+(skoXC1 skoXC1 (-296/15+(skoXC1 skoXC1 (391/15+(skoXC1 skoXC1 (-146/15+(skoXC1 skoXC1 (3/4))))))))))<=0]/\[[-1<(skoXC1 skoXC1 (1/6+(skoXC1 skoXC1 (3/40))))]/\[(skoXC1 (-1+(skoXC1 skoXC1 (-1/6+(skoXC1 skoXC1 (-3/40))))))<=0]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]].

% In SMTLib2 format:
(declare-fun skoXC1 () Real) (assert (and (> (* skoXC1 (* skoXC1 (+ (/ (- 1.) 3.) (* skoXC1 (* skoXC1 (+ (/ (- 3.) 20.) (* skoXC1 (* skoXC1 (/ (- 5.) 56.))))))))) (- 1.)) (and (> (* skoXC1 (* skoXC1 (+ (/ 1. 6.) (* skoXC1 (* skoXC1 (+ (/ 3. 40.) (* skoXC1 (* skoXC1 (/ 5. 112.))))))))) (- 1.)) (and (<= (* skoXC1 (* skoXC1 (* skoXC1 (* skoXC1 (+ (/ 32. 15.) (* skoXC1 (* skoXC1 (+ (/ (- 272.) 105.) (* skoXC1 (* skoXC1 (+ (/ (- 1163.) 105.) (* skoXC1 (* skoXC1 (+ (/ 1753. 105.) (* skoXC1 (* skoXC1 (+ (/ (- 169.) 28.) (* skoXC1 (* skoXC1 (/ 25. 56.)))))))))))))))))))) 0.) (and (<= (* skoXC1 (* skoXC1 (+ (/ 1. 3.) (* skoXC1 (* skoXC1 (+ (/ 3. 20.) (* skoXC1 (* skoXC1 (/ 5. 56.))))))))) 1.) (and (<= (* skoXC1 (* skoXC1 (* skoXC1 (* skoXC1 (+ (/ (- 17.) 120.) (* skoXC1 (* skoXC1 (+ (/ (- 27.) 280.) (* skoXC1 (* skoXC1 (/ 5. 224.))))))))))) 0.) (and (<= (* skoXC1 (* skoXC1 (* skoXC1 (* skoXC1 (+ (/ (- 13.) 60.) (* skoXC1 (* skoXC1 (+ (/ (- 9.) 280.) (* skoXC1 (* skoXC1 (/ (- 5.) 28.))))))))))) 0.) (and (<= (* skoXC1 (* skoXC1 (+ (/ (- 1.) 2.) (* skoXC1 (* skoXC1 (+ (/ 7. 120.) (* skoXC1 (* skoXC1 (+ (/ 33. 560.) (* skoXC1 (* skoXC1 (/ (- 5.) 112.)))))))))))) 0.) (and (<= (* skoXC1 (* skoXC1 (+ (/ (- 1.) 6.) (* skoXC1 (* skoXC1 (+ (/ (- 3.) 40.) (* skoXC1 (* skoXC1 (/ (- 5.) 112.))))))))) 1.) (and (<= (* skoXC1 (+ (- 1.) (* skoXC1 (* skoXC1 (+ (/ 1. 3.) (* skoXC1 (* skoXC1 (+ (/ 3. 20.) (* skoXC1 (* skoXC1 (/ 5. 56.))))))))))) 0.) (and (<= (* skoXC1 (* skoXC1 (* skoXC1 (* skoXC1 (+ (/ (- 80.) 3.) (* skoXC1 (* skoXC1 (+ (/ 128. 3.) (* skoXC1 (* skoXC1 (+ (/ (- 55.) 3.) (* skoXC1 (* skoXC1 (/ 5. 3.)))))))))))))) 0.) (and (<= (* skoXC1 (* skoXC1 (+ 256. (* skoXC1 (* skoXC1 (+ (- 160.) (* skoXC1 (* skoXC1 (+ 32. (* skoXC1 (* skoXC1 (- 1.)))))))))))) 128.) (and (<= (* skoXC1 (* skoXC1 (/ 1. 3.))) 1.) (and (<= (* skoXC1 (+ (- 1.) (* skoXC1 (* skoXC1 (/ (- 1.) 6.))))) 0.) (and (<= (* skoXC1 (* skoXC1 (* skoXC1 (* skoXC1 (/ (- 2.) 3.))))) 0.) (and (<= (* skoXC1 skoXC1) 2.) (and (<= (* skoXC1 (* skoXC1 (+ (/ (- 1.) 2.) (* skoXC1 (* skoXC1 (/ (- 1.) 6.)))))) 0.) (and (<= (* skoXC1 (* skoXC1 (/ (- 1.) 6.))) 1.) (and (<= (* skoXC1 (+ (- 1.) (* skoXC1 (* skoXC1 (/ 1. 3.))))) 0.) (and (> (/ 7. 8.) skoXC1) (and (> skoXC1 0.) (and (> (* skoXC1 (* skoXC1 (/ (- 1.) 2.))) (- 3.)) (and (<= (* skoXC1 (* skoXC1 (/ 1. 2.))) 3.) (and (<= (* skoXC1 (* skoXC1 (+ 24. (* skoXC1 (* skoXC1 (+ (- 10.) (* skoXC1 skoXC1))))))) 16.) (and (> (* skoXC1 (* skoXC1 (+ (- 80.) (* skoXC1 (* skoXC1 (+ 40. (* skoXC1 (* skoXC1 (+ (- 6.) (* skoXC1 (* skoXC1 (/ 1. 8.)))))))))))) (- 48.)) (and (<= (* skoXC1 (* skoXC1 (+ 80. (* skoXC1 (* skoXC1 (+ (- 40.) (* skoXC1 (* skoXC1 (+ 6. (* skoXC1 (* skoXC1 (/ (- 1.) 8.)))))))))))) 48.) (and (> (* skoXC1 skoXC1) 0.) (and (<= (* skoXC1 (+ (- 1.) (* skoXC1 (* skoXC1 (+ (/ 1. 3.) (* skoXC1 (* skoXC1 (/ 3. 20.)))))))) 0.) (and (<= (* skoXC1 (* skoXC1 (+ (/ (- 1.) 6.) (* skoXC1 (* skoXC1 (/ (- 3.) 40.)))))) 1.) (and (<= (* skoXC1 (* skoXC1 (+ (/ (- 1.) 2.) (* skoXC1 (* skoXC1 (+ (/ 7. 120.) (* skoXC1 (* skoXC1 (/ (- 3.) 40.))))))))) 0.) (and (<= (* skoXC1 (* skoXC1 (* skoXC1 (* skoXC1 (+ (/ (- 13.) 60.) (* skoXC1 (* skoXC1 (/ (- 3.) 10.)))))))) 0.) (and (<= (* skoXC1 (* skoXC1 (* skoXC1 (* skoXC1 (+ (/ (- 17.) 120.) (* skoXC1 (* skoXC1 (/ 3. 80.)))))))) 0.) (and (<= (* skoXC1 (* skoXC1 (+ (/ 1. 3.) (* skoXC1 (* skoXC1 (/ 3. 20.)))))) 1.) (and (<= (* skoXC1 (* skoXC1 (* skoXC1 (* skoXC1 (+ (/ 32. 15.) (* skoXC1 (* skoXC1 (+ (/ (- 296.) 15.) (* skoXC1 (* skoXC1 (+ (/ 391. 15.) (* skoXC1 (* skoXC1 (+ (/ (- 146.) 15.) (* skoXC1 (* skoXC1 (/ 3. 4.))))))))))))))))) 0.) (and (> (* skoXC1 (* skoXC1 (+ (/ 1. 6.) (* skoXC1 (* skoXC1 (/ 3. 40.)))))) (- 1.)) (<= (* skoXC1 (+ (- 1.) (* skoXC1 (* skoXC1 (+ (/ (- 1.) 6.) (* skoXC1 (* skoXC1 (/ (- 3.) 40.)))))))) 0.))))))))))))))))))))))))))))))))))))

% In GRF format:
(sequent " MetiTarski formula " (antecedent (> (* skoXC1 (* skoXC1 (+ (/ (- 1.) 3.) (* skoXC1 (* skoXC1 (+ (/ (- 3.) 20.) (* skoXC1 (* skoXC1 (/ (- 5.) 56.))))))))) (- 1.)) (> (* skoXC1 (* skoXC1 (+ (/ 1. 6.) (* skoXC1 (* skoXC1 (+ (/ 3. 40.) (* skoXC1 (* skoXC1 (/ 5. 112.))))))))) (- 1.)) (<= (* skoXC1 (* skoXC1 (* skoXC1 (* skoXC1 (+ (/ 32. 15.) (* skoXC1 (* skoXC1 (+ (/ (- 272.) 105.) (* skoXC1 (* skoXC1 (+ (/ (- 1163.) 105.) (* skoXC1 (* skoXC1 (+ (/ 1753. 105.) (* skoXC1 (* skoXC1 (+ (/ (- 169.) 28.) (* skoXC1 (* skoXC1 (/ 25. 56.)))))))))))))))))))) 0.) (<= (* skoXC1 (* skoXC1 (+ (/ 1. 3.) (* skoXC1 (* skoXC1 (+ (/ 3. 20.) (* skoXC1 (* skoXC1 (/ 5. 56.))))))))) 1.) (<= (* skoXC1 (* skoXC1 (* skoXC1 (* skoXC1 (+ (/ (- 17.) 120.) (* skoXC1 (* skoXC1 (+ (/ (- 27.) 280.) (* skoXC1 (* skoXC1 (/ 5. 224.))))))))))) 0.) (<= (* skoXC1 (* skoXC1 (* skoXC1 (* skoXC1 (+ (/ (- 13.) 60.) (* skoXC1 (* skoXC1 (+ (/ (- 9.) 280.) (* skoXC1 (* skoXC1 (/ (- 5.) 28.))))))))))) 0.) (<= (* skoXC1 (* skoXC1 (+ (/ (- 1.) 2.) (* skoXC1 (* skoXC1 (+ (/ 7. 120.) (* skoXC1 (* skoXC1 (+ (/ 33. 560.) (* skoXC1 (* skoXC1 (/ (- 5.) 112.)))))))))))) 0.) (<= (* skoXC1 (* skoXC1 (+ (/ (- 1.) 6.) (* skoXC1 (* skoXC1 (+ (/ (- 3.) 40.) (* skoXC1 (* skoXC1 (/ (- 5.) 112.))))))))) 1.) (<= (* skoXC1 (+ (- 1.) (* skoXC1 (* skoXC1 (+ (/ 1. 3.) (* skoXC1 (* skoXC1 (+ (/ 3. 20.) (* skoXC1 (* skoXC1 (/ 5. 56.))))))))))) 0.) (<= (* skoXC1 (* skoXC1 (* skoXC1 (* skoXC1 (+ (/ (- 80.) 3.) (* skoXC1 (* skoXC1 (+ (/ 128. 3.) (* skoXC1 (* skoXC1 (+ (/ (- 55.) 3.) (* skoXC1 (* skoXC1 (/ 5. 3.)))))))))))))) 0.) (<= (* skoXC1 (* skoXC1 (+ 256. (* skoXC1 (* skoXC1 (+ (- 160.) (* skoXC1 (* skoXC1 (+ 32. (* skoXC1 (* skoXC1 (- 1.)))))))))))) 128.) (<= (* skoXC1 (* skoXC1 (/ 1. 3.))) 1.) (<= (* skoXC1 (+ (- 1.) (* skoXC1 (* skoXC1 (/ (- 1.) 6.))))) 0.) (<= (* skoXC1 (* skoXC1 (* skoXC1 (* skoXC1 (/ (- 2.) 3.))))) 0.) (<= (* skoXC1 skoXC1) 2.) (<= (* skoXC1 (* skoXC1 (+ (/ (- 1.) 2.) (* skoXC1 (* skoXC1 (/ (- 1.) 6.)))))) 0.) (<= (* skoXC1 (* skoXC1 (/ (- 1.) 6.))) 1.) (<= (* skoXC1 (+ (- 1.) (* skoXC1 (* skoXC1 (/ 1. 3.))))) 0.) (> (/ 7. 8.) skoXC1) (> skoXC1 0.) (> (* skoXC1 (* skoXC1 (/ (- 1.) 2.))) (- 3.)) (<= (* skoXC1 (* skoXC1 (/ 1. 2.))) 3.) (<= (* skoXC1 (* skoXC1 (+ 24. (* skoXC1 (* skoXC1 (+ (- 10.) (* skoXC1 skoXC1))))))) 16.) (> (* skoXC1 (* skoXC1 (+ (- 80.) (* skoXC1 (* skoXC1 (+ 40. (* skoXC1 (* skoXC1 (+ (- 6.) (* skoXC1 (* skoXC1 (/ 1. 8.)))))))))))) (- 48.)) (<= (* skoXC1 (* skoXC1 (+ 80. (* skoXC1 (* skoXC1 (+ (- 40.) (* skoXC1 (* skoXC1 (+ 6. (* skoXC1 (* skoXC1 (/ (- 1.) 8.)))))))))))) 48.) (> (* skoXC1 skoXC1) 0.) (<= (* skoXC1 (+ (- 1.) (* skoXC1 (* skoXC1 (+ (/ 1. 3.) (* skoXC1 (* skoXC1 (/ 3. 20.)))))))) 0.) (<= (* skoXC1 (* skoXC1 (+ (/ (- 1.) 6.) (* skoXC1 (* skoXC1 (/ (- 3.) 40.)))))) 1.) (<= (* skoXC1 (* skoXC1 (+ (/ (- 1.) 2.) (* skoXC1 (* skoXC1 (+ (/ 7. 120.) (* skoXC1 (* skoXC1 (/ (- 3.) 40.))))))))) 0.) (<= (* skoXC1 (* skoXC1 (* skoXC1 (* skoXC1 (+ (/ (- 13.) 60.) (* skoXC1 (* skoXC1 (/ (- 3.) 10.)))))))) 0.) (<= (* skoXC1 (* skoXC1 (* skoXC1 (* skoXC1 (+ (/ (- 17.) 120.) (* skoXC1 (* skoXC1 (/ 3. 80.)))))))) 0.) (<= (* skoXC1 (* skoXC1 (+ (/ 1. 3.) (* skoXC1 (* skoXC1 (/ 3. 20.)))))) 1.) (<= (* skoXC1 (* skoXC1 (* skoXC1 (* skoXC1 (+ (/ 32. 15.) (* skoXC1 (* skoXC1 (+ (/ (- 296.) 15.) (* skoXC1 (* skoXC1 (+ (/ 391. 15.) (* skoXC1 (* skoXC1 (+ (/ (- 146.) 15.) (* skoXC1 (* skoXC1 (/ 3. 4.))))))))))))))))) 0.) (> (* skoXC1 (* skoXC1 (+ (/ 1. 6.) (* skoXC1 (* skoXC1 (/ 3. 40.)))))) (- 1.))) (succedent (> (* skoXC1 (+ (- 1.) (* skoXC1 (* skoXC1 (+ (/ (- 1.) 6.) (* skoXC1 (* skoXC1 (/ (- 3.) 40.)))))))) 0.)))
-----[end problem]-----

-----[begin problem]-----
% In Mathematica format:
Timing[Resolve[Exists[{skoXC1}, And[skoXC1*skoXC1*((-1/3)+skoXC1*skoXC1*((-3/20)+skoXC1*skoXC1*(-5/56)))<=-1,skoXC1*skoXC1*((1/6)+skoXC1*skoXC1*((3/40)+skoXC1*skoXC1*(5/112)))<=-1,skoXC1*skoXC1*skoXC1*skoXC1*((32/15)+skoXC1*skoXC1*((-272/105)+skoXC1*skoXC1*((-1163/105)+skoXC1*skoXC1*((1753/105)+skoXC1*skoXC1*((-169/28)+skoXC1*skoXC1*(25/56))))))<=0,skoXC1*skoXC1*((1/3)+skoXC1*skoXC1*((3/20)+skoXC1*skoXC1*(5/56)))<=1,skoXC1*skoXC1*skoXC1*skoXC1*((-17/120)+skoXC1*skoXC1*((-27/280)+skoXC1*skoXC1*(5/224)))<=0,skoXC1*skoXC1*skoXC1*skoXC1*((-13/60)+skoXC1*skoXC1*((-9/280)+skoXC1*skoXC1*(-5/28)))<=0,skoXC1*skoXC1*((-1/2)+skoXC1*skoXC1*((7/120)+skoXC1*skoXC1*((33/560)+skoXC1*skoXC1*(-5/112))))<=0,skoXC1*skoXC1*((-1/6)+skoXC1*skoXC1*((-3/40)+skoXC1*skoXC1*(-5/112)))<=1,skoXC1*(-1+skoXC1*skoXC1*((1/3)+skoXC1*skoXC1*((3/20)+skoXC1*skoXC1*(5/56))))<=0,skoXC1*skoXC1*skoXC1*skoXC1*((-80/3)+skoXC1*skoXC1*((128/3)+skoXC1*skoXC1*((-55/3)+skoXC1*skoXC1*(5/3))))<=0,skoXC1*skoXC1*(256+skoXC1*skoXC1*(-160+skoXC1*skoXC1*(32+skoXC1*skoXC1*-1)))<=128,skoXC1*skoXC1*(1/3)<=1,skoXC1*(-1+skoXC1*skoXC1*(-1/6))<=0,skoXC1*skoXC1*skoXC1*skoXC1*(-2/3)<=0,skoXC1*skoXC1<=2,skoXC1*skoXC1*((-1/2)+skoXC1*skoXC1*(-1/6))<=0,skoXC1*skoXC1*(-1/6)<=1,skoXC1*(-1+skoXC1*skoXC1*(1/3))<=0,(7/8)>skoXC1,skoXC1>0,skoXC1*skoXC1*(-1/2)>-3,skoXC1*skoXC1*(1/2)<=3,skoXC1*skoXC1*(24+skoXC1*skoXC1*(-10+skoXC1*skoXC1))<=16,skoXC1*skoXC1*(-80+skoXC1*skoXC1*(40+skoXC1*skoXC1*(-6+skoXC1*skoXC1*(1/8))))>-48,skoXC1*skoXC1*(80+skoXC1*skoXC1*(-40+skoXC1*skoXC1*(6+skoXC1*skoXC1*(-1/8))))<=48,skoXC1*skoXC1>0,skoXC1*(-1+skoXC1*skoXC1*((1/3)+skoXC1*skoXC1*(3/20)))<=0,skoXC1*skoXC1*((-1/6)+skoXC1*skoXC1*(-3/40))<=1,skoXC1*skoXC1*((-1/2)+skoXC1*skoXC1*((7/120)+skoXC1*skoXC1*(-3/40)))<=0,skoXC1*skoXC1*skoXC1*skoXC1*((-13/60)+skoXC1*skoXC1*(-3/10))<=0,skoXC1*skoXC1*skoXC1*skoXC1*((-17/120)+skoXC1*skoXC1*(3/80))<=0,skoXC1*skoXC1*((1/3)+skoXC1*skoXC1*(3/20))<=1,skoXC1*skoXC1*skoXC1*skoXC1*((32/15)+skoXC1*skoXC1*((-296/15)+skoXC1*skoXC1*((391/15)+skoXC1*skoXC1*((-146/15)+skoXC1*skoXC1*(3/4)))))<=0,skoXC1*skoXC1*((1/6)+skoXC1*skoXC1*(3/40))>-1,skoXC1*(-1+skoXC1*skoXC1*((-1/6)+skoXC1*skoXC1*(-3/40)))<=0]], Reals]]

% In QepcadB format:
(E skoXC1) [[(skoXC1 skoXC1 (-1/3+(skoXC1 skoXC1 (-3/20+(skoXC1 skoXC1 (-5/56))))))<=-1]/\[[(skoXC1 skoXC1 (1/6+(skoXC1 skoXC1 (3/40+(skoXC1 skoXC1 (5/112))))))<=-1]/\[[(skoXC1 skoXC1 skoXC1 skoXC1 (32/15+(skoXC1 skoXC1 (-272/105+(skoXC1 skoXC1 (-1163/105+(skoXC1 skoXC1 (1753/105+(skoXC1 skoXC1 (-169/28+(skoXC1 skoXC1 (25/56))))))))))))<=0]/\[[(skoXC1 skoXC1 (1/3+(skoXC1 skoXC1 (3/20+(skoXC1 skoXC1 (5/56))))))<=1]/\[[(skoXC1 skoXC1 skoXC1 skoXC1 (-17/120+(skoXC1 skoXC1 (-27/280+(skoXC1 skoXC1 (5/224))))))<=0]/\[[(skoXC1 skoXC1 skoXC1 skoXC1 (-13/60+(skoXC1 skoXC1 (-9/280+(skoXC1 skoXC1 (-5/28))))))<=0]/\[[(skoXC1 skoXC1 (-1/2+(skoXC1 skoXC1 (7/120+(skoXC1 skoXC1 (33/560+(skoXC1 skoXC1 (-5/112))))))))<=0]/\[[(skoXC1 skoXC1 (-1/6+(skoXC1 skoXC1 (-3/40+(skoXC1 skoXC1 (-5/112))))))<=1]/\[[(skoXC1 (-1+(skoXC1 skoXC1 (1/3+(skoXC1 skoXC1 (3/20+(skoXC1 skoXC1 (5/56))))))))<=0]/\[[(skoXC1 skoXC1 skoXC1 skoXC1 (-80/3+(skoXC1 skoXC1 (128/3+(skoXC1 skoXC1 (-55/3+(skoXC1 skoXC1 (5/3))))))))<=0]/\[[(skoXC1 skoXC1 (256+(skoXC1 skoXC1 (-160+(skoXC1 skoXC1 (32+(skoXC1 skoXC1 (-1))))))))<=128]/\[[(skoXC1 skoXC1 (1/3))<=1]/\[[(skoXC1 (-1+(skoXC1 skoXC1 (-1/6))))<=0]/\[[(skoXC1 skoXC1 skoXC1 skoXC1 (-2/3))<=0]/\[[(skoXC1 skoXC1)<=2]/\[[(skoXC1 skoXC1 (-1/2+(skoXC1 skoXC1 (-1/6))))<=0]/\[[(skoXC1 skoXC1 (-1/6))<=1]/\[[(skoXC1 (-1+(skoXC1 skoXC1 (1/3))))<=0]/\[[skoXC1<7/8]/\[[0<skoXC1]/\[[-3<(skoXC1 skoXC1 (-1/2))]/\[[(skoXC1 skoXC1 (1/2))<=3]/\[[(skoXC1 skoXC1 (24+(skoXC1 skoXC1 (-10+(skoXC1 skoXC1)))))<=16]/\[[-48<(skoXC1 skoXC1 (-80+(skoXC1 skoXC1 (40+(skoXC1 skoXC1 (-6+(skoXC1 skoXC1 (1/8))))))))]/\[[(skoXC1 skoXC1 (80+(skoXC1 skoXC1 (-40+(skoXC1 skoXC1 (6+(skoXC1 skoXC1 (-1/8))))))))<=48]/\[[0<(skoXC1 skoXC1)]/\[[(skoXC1 (-1+(skoXC1 skoXC1 (1/3+(skoXC1 skoXC1 (3/20))))))<=0]/\[[(skoXC1 skoXC1 (-1/6+(skoXC1 skoXC1 (-3/40))))<=1]/\[[(skoXC1 skoXC1 (-1/2+(skoXC1 skoXC1 (7/120+(skoXC1 skoXC1 (-3/40))))))<=0]/\[[(skoXC1 skoXC1 skoXC1 skoXC1 (-13/60+(skoXC1 skoXC1 (-3/10))))<=0]/\[[(skoXC1 skoXC1 skoXC1 skoXC1 (-17/120+(skoXC1 skoXC1 (3/80))))<=0]/\[[(skoXC1 skoXC1 (1/3+(skoXC1 skoXC1 (3/20))))<=1]/\[[(skoXC1 skoXC1 skoXC1 skoXC1 (32/15+(skoXC1 skoXC1 (-296/15+(skoXC1 skoXC1 (391/15+(skoXC1 skoXC1 (-146/15+(skoXC1 skoXC1 (3/4))))))))))<=0]/\[[-1<(skoXC1 skoXC1 (1/6+(skoXC1 skoXC1 (3/40))))]/\[(skoXC1 (-1+(skoXC1 skoXC1 (-1/6+(skoXC1 skoXC1 (-3/40))))))<=0]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]].

% In SMTLib2 format:
(declare-fun skoXC1 () Real) (assert (and (<= (* skoXC1 (* skoXC1 (+ (/ (- 1.) 3.) (* skoXC1 (* skoXC1 (+ (/ (- 3.) 20.) (* skoXC1 (* skoXC1 (/ (- 5.) 56.))))))))) (- 1.)) (and (<= (* skoXC1 (* skoXC1 (+ (/ 1. 6.) (* skoXC1 (* skoXC1 (+ (/ 3. 40.) (* skoXC1 (* skoXC1 (/ 5. 112.))))))))) (- 1.)) (and (<= (* skoXC1 (* skoXC1 (* skoXC1 (* skoXC1 (+ (/ 32. 15.) (* skoXC1 (* skoXC1 (+ (/ (- 272.) 105.) (* skoXC1 (* skoXC1 (+ (/ (- 1163.) 105.) (* skoXC1 (* skoXC1 (+ (/ 1753. 105.) (* skoXC1 (* skoXC1 (+ (/ (- 169.) 28.) (* skoXC1 (* skoXC1 (/ 25. 56.)))))))))))))))))))) 0.) (and (<= (* skoXC1 (* skoXC1 (+ (/ 1. 3.) (* skoXC1 (* skoXC1 (+ (/ 3. 20.) (* skoXC1 (* skoXC1 (/ 5. 56.))))))))) 1.) (and (<= (* skoXC1 (* skoXC1 (* skoXC1 (* skoXC1 (+ (/ (- 17.) 120.) (* skoXC1 (* skoXC1 (+ (/ (- 27.) 280.) (* skoXC1 (* skoXC1 (/ 5. 224.))))))))))) 0.) (and (<= (* skoXC1 (* skoXC1 (* skoXC1 (* skoXC1 (+ (/ (- 13.) 60.) (* skoXC1 (* skoXC1 (+ (/ (- 9.) 280.) (* skoXC1 (* skoXC1 (/ (- 5.) 28.))))))))))) 0.) (and (<= (* skoXC1 (* skoXC1 (+ (/ (- 1.) 2.) (* skoXC1 (* skoXC1 (+ (/ 7. 120.) (* skoXC1 (* skoXC1 (+ (/ 33. 560.) (* skoXC1 (* skoXC1 (/ (- 5.) 112.)))))))))))) 0.) (and (<= (* skoXC1 (* skoXC1 (+ (/ (- 1.) 6.) (* skoXC1 (* skoXC1 (+ (/ (- 3.) 40.) (* skoXC1 (* skoXC1 (/ (- 5.) 112.))))))))) 1.) (and (<= (* skoXC1 (+ (- 1.) (* skoXC1 (* skoXC1 (+ (/ 1. 3.) (* skoXC1 (* skoXC1 (+ (/ 3. 20.) (* skoXC1 (* skoXC1 (/ 5. 56.))))))))))) 0.) (and (<= (* skoXC1 (* skoXC1 (* skoXC1 (* skoXC1 (+ (/ (- 80.) 3.) (* skoXC1 (* skoXC1 (+ (/ 128. 3.) (* skoXC1 (* skoXC1 (+ (/ (- 55.) 3.) (* skoXC1 (* skoXC1 (/ 5. 3.)))))))))))))) 0.) (and (<= (* skoXC1 (* skoXC1 (+ 256. (* skoXC1 (* skoXC1 (+ (- 160.) (* skoXC1 (* skoXC1 (+ 32. (* skoXC1 (* skoXC1 (- 1.)))))))))))) 128.) (and (<= (* skoXC1 (* skoXC1 (/ 1. 3.))) 1.) (and (<= (* skoXC1 (+ (- 1.) (* skoXC1 (* skoXC1 (/ (- 1.) 6.))))) 0.) (and (<= (* skoXC1 (* skoXC1 (* skoXC1 (* skoXC1 (/ (- 2.) 3.))))) 0.) (and (<= (* skoXC1 skoXC1) 2.) (and (<= (* skoXC1 (* skoXC1 (+ (/ (- 1.) 2.) (* skoXC1 (* skoXC1 (/ (- 1.) 6.)))))) 0.) (and (<= (* skoXC1 (* skoXC1 (/ (- 1.) 6.))) 1.) (and (<= (* skoXC1 (+ (- 1.) (* skoXC1 (* skoXC1 (/ 1. 3.))))) 0.) (and (> (/ 7. 8.) skoXC1) (and (> skoXC1 0.) (and (> (* skoXC1 (* skoXC1 (/ (- 1.) 2.))) (- 3.)) (and (<= (* skoXC1 (* skoXC1 (/ 1. 2.))) 3.) (and (<= (* skoXC1 (* skoXC1 (+ 24. (* skoXC1 (* skoXC1 (+ (- 10.) (* skoXC1 skoXC1))))))) 16.) (and (> (* skoXC1 (* skoXC1 (+ (- 80.) (* skoXC1 (* skoXC1 (+ 40. (* skoXC1 (* skoXC1 (+ (- 6.) (* skoXC1 (* skoXC1 (/ 1. 8.)))))))))))) (- 48.)) (and (<= (* skoXC1 (* skoXC1 (+ 80. (* skoXC1 (* skoXC1 (+ (- 40.) (* skoXC1 (* skoXC1 (+ 6. (* skoXC1 (* skoXC1 (/ (- 1.) 8.)))))))))))) 48.) (and (> (* skoXC1 skoXC1) 0.) (and (<= (* skoXC1 (+ (- 1.) (* skoXC1 (* skoXC1 (+ (/ 1. 3.) (* skoXC1 (* skoXC1 (/ 3. 20.)))))))) 0.) (and (<= (* skoXC1 (* skoXC1 (+ (/ (- 1.) 6.) (* skoXC1 (* skoXC1 (/ (- 3.) 40.)))))) 1.) (and (<= (* skoXC1 (* skoXC1 (+ (/ (- 1.) 2.) (* skoXC1 (* skoXC1 (+ (/ 7. 120.) (* skoXC1 (* skoXC1 (/ (- 3.) 40.))))))))) 0.) (and (<= (* skoXC1 (* skoXC1 (* skoXC1 (* skoXC1 (+ (/ (- 13.) 60.) (* skoXC1 (* skoXC1 (/ (- 3.) 10.)))))))) 0.) (and (<= (* skoXC1 (* skoXC1 (* skoXC1 (* skoXC1 (+ (/ (- 17.) 120.) (* skoXC1 (* skoXC1 (/ 3. 80.)))))))) 0.) (and (<= (* skoXC1 (* skoXC1 (+ (/ 1. 3.) (* skoXC1 (* skoXC1 (/ 3. 20.)))))) 1.) (and (<= (* skoXC1 (* skoXC1 (* skoXC1 (* skoXC1 (+ (/ 32. 15.) (* skoXC1 (* skoXC1 (+ (/ (- 296.) 15.) (* skoXC1 (* skoXC1 (+ (/ 391. 15.) (* skoXC1 (* skoXC1 (+ (/ (- 146.) 15.) (* skoXC1 (* skoXC1 (/ 3. 4.))))))))))))))))) 0.) (and (> (* skoXC1 (* skoXC1 (+ (/ 1. 6.) (* skoXC1 (* skoXC1 (/ 3. 40.)))))) (- 1.)) (<= (* skoXC1 (+ (- 1.) (* skoXC1 (* skoXC1 (+ (/ (- 1.) 6.) (* skoXC1 (* skoXC1 (/ (- 3.) 40.)))))))) 0.))))))))))))))))))))))))))))))))))))

% In GRF format:
(sequent " MetiTarski formula " (antecedent (<= (* skoXC1 (* skoXC1 (+ (/ (- 1.) 3.) (* skoXC1 (* skoXC1 (+ (/ (- 3.) 20.) (* skoXC1 (* skoXC1 (/ (- 5.) 56.))))))))) (- 1.)) (<= (* skoXC1 (* skoXC1 (+ (/ 1. 6.) (* skoXC1 (* skoXC1 (+ (/ 3. 40.) (* skoXC1 (* skoXC1 (/ 5. 112.))))))))) (- 1.)) (<= (* skoXC1 (* skoXC1 (* skoXC1 (* skoXC1 (+ (/ 32. 15.) (* skoXC1 (* skoXC1 (+ (/ (- 272.) 105.) (* skoXC1 (* skoXC1 (+ (/ (- 1163.) 105.) (* skoXC1 (* skoXC1 (+ (/ 1753. 105.) (* skoXC1 (* skoXC1 (+ (/ (- 169.) 28.) (* skoXC1 (* skoXC1 (/ 25. 56.)))))))))))))))))))) 0.) (<= (* skoXC1 (* skoXC1 (+ (/ 1. 3.) (* skoXC1 (* skoXC1 (+ (/ 3. 20.) (* skoXC1 (* skoXC1 (/ 5. 56.))))))))) 1.) (<= (* skoXC1 (* skoXC1 (* skoXC1 (* skoXC1 (+ (/ (- 17.) 120.) (* skoXC1 (* skoXC1 (+ (/ (- 27.) 280.) (* skoXC1 (* skoXC1 (/ 5. 224.))))))))))) 0.) (<= (* skoXC1 (* skoXC1 (* skoXC1 (* skoXC1 (+ (/ (- 13.) 60.) (* skoXC1 (* skoXC1 (+ (/ (- 9.) 280.) (* skoXC1 (* skoXC1 (/ (- 5.) 28.))))))))))) 0.) (<= (* skoXC1 (* skoXC1 (+ (/ (- 1.) 2.) (* skoXC1 (* skoXC1 (+ (/ 7. 120.) (* skoXC1 (* skoXC1 (+ (/ 33. 560.) (* skoXC1 (* skoXC1 (/ (- 5.) 112.)))))))))))) 0.) (<= (* skoXC1 (* skoXC1 (+ (/ (- 1.) 6.) (* skoXC1 (* skoXC1 (+ (/ (- 3.) 40.) (* skoXC1 (* skoXC1 (/ (- 5.) 112.))))))))) 1.) (<= (* skoXC1 (+ (- 1.) (* skoXC1 (* skoXC1 (+ (/ 1. 3.) (* skoXC1 (* skoXC1 (+ (/ 3. 20.) (* skoXC1 (* skoXC1 (/ 5. 56.))))))))))) 0.) (<= (* skoXC1 (* skoXC1 (* skoXC1 (* skoXC1 (+ (/ (- 80.) 3.) (* skoXC1 (* skoXC1 (+ (/ 128. 3.) (* skoXC1 (* skoXC1 (+ (/ (- 55.) 3.) (* skoXC1 (* skoXC1 (/ 5. 3.)))))))))))))) 0.) (<= (* skoXC1 (* skoXC1 (+ 256. (* skoXC1 (* skoXC1 (+ (- 160.) (* skoXC1 (* skoXC1 (+ 32. (* skoXC1 (* skoXC1 (- 1.)))))))))))) 128.) (<= (* skoXC1 (* skoXC1 (/ 1. 3.))) 1.) (<= (* skoXC1 (+ (- 1.) (* skoXC1 (* skoXC1 (/ (- 1.) 6.))))) 0.) (<= (* skoXC1 (* skoXC1 (* skoXC1 (* skoXC1 (/ (- 2.) 3.))))) 0.) (<= (* skoXC1 skoXC1) 2.) (<= (* skoXC1 (* skoXC1 (+ (/ (- 1.) 2.) (* skoXC1 (* skoXC1 (/ (- 1.) 6.)))))) 0.) (<= (* skoXC1 (* skoXC1 (/ (- 1.) 6.))) 1.) (<= (* skoXC1 (+ (- 1.) (* skoXC1 (* skoXC1 (/ 1. 3.))))) 0.) (> (/ 7. 8.) skoXC1) (> skoXC1 0.) (> (* skoXC1 (* skoXC1 (/ (- 1.) 2.))) (- 3.)) (<= (* skoXC1 (* skoXC1 (/ 1. 2.))) 3.) (<= (* skoXC1 (* skoXC1 (+ 24. (* skoXC1 (* skoXC1 (+ (- 10.) (* skoXC1 skoXC1))))))) 16.) (> (* skoXC1 (* skoXC1 (+ (- 80.) (* skoXC1 (* skoXC1 (+ 40. (* skoXC1 (* skoXC1 (+ (- 6.) (* skoXC1 (* skoXC1 (/ 1. 8.)))))))))))) (- 48.)) (<= (* skoXC1 (* skoXC1 (+ 80. (* skoXC1 (* skoXC1 (+ (- 40.) (* skoXC1 (* skoXC1 (+ 6. (* skoXC1 (* skoXC1 (/ (- 1.) 8.)))))))))))) 48.) (> (* skoXC1 skoXC1) 0.) (<= (* skoXC1 (+ (- 1.) (* skoXC1 (* skoXC1 (+ (/ 1. 3.) (* skoXC1 (* skoXC1 (/ 3. 20.)))))))) 0.) (<= (* skoXC1 (* skoXC1 (+ (/ (- 1.) 6.) (* skoXC1 (* skoXC1 (/ (- 3.) 40.)))))) 1.) (<= (* skoXC1 (* skoXC1 (+ (/ (- 1.) 2.) (* skoXC1 (* skoXC1 (+ (/ 7. 120.) (* skoXC1 (* skoXC1 (/ (- 3.) 40.))))))))) 0.) (<= (* skoXC1 (* skoXC1 (* skoXC1 (* skoXC1 (+ (/ (- 13.) 60.) (* skoXC1 (* skoXC1 (/ (- 3.) 10.)))))))) 0.) (<= (* skoXC1 (* skoXC1 (* skoXC1 (* skoXC1 (+ (/ (- 17.) 120.) (* skoXC1 (* skoXC1 (/ 3. 80.)))))))) 0.) (<= (* skoXC1 (* skoXC1 (+ (/ 1. 3.) (* skoXC1 (* skoXC1 (/ 3. 20.)))))) 1.) (<= (* skoXC1 (* skoXC1 (* skoXC1 (* skoXC1 (+ (/ 32. 15.) (* skoXC1 (* skoXC1 (+ (/ (- 296.) 15.) (* skoXC1 (* skoXC1 (+ (/ 391. 15.) (* skoXC1 (* skoXC1 (+ (/ (- 146.) 15.) (* skoXC1 (* skoXC1 (/ 3. 4.))))))))))))))))) 0.) (> (* skoXC1 (* skoXC1 (+ (/ 1. 6.) (* skoXC1 (* skoXC1 (/ 3. 40.)))))) (- 1.))) (succedent (> (* skoXC1 (+ (- 1.) (* skoXC1 (* skoXC1 (+ (/ (- 1.) 6.) (* skoXC1 (* skoXC1 (/ (- 3.) 40.)))))))) 0.)))
-----[end problem]-----

-----[begin problem]-----
% In Mathematica format:
Timing[Resolve[Exists[{skoXC1}, And[skoXC1*skoXC1*((1/6)+skoXC1*skoXC1*((3/40)+skoXC1*skoXC1*(5/112)))>-1,skoXC1*skoXC1*skoXC1*skoXC1*((32/15)+skoXC1*skoXC1*((-272/105)+skoXC1*skoXC1*((-1163/105)+skoXC1*skoXC1*((1753/105)+skoXC1*skoXC1*((-169/28)+skoXC1*skoXC1*(25/56))))))<=0,skoXC1*skoXC1*((1/3)+skoXC1*skoXC1*((3/20)+skoXC1*skoXC1*(5/56)))<=1,skoXC1*skoXC1*skoXC1*skoXC1*((-17/120)+skoXC1*skoXC1*((-27/280)+skoXC1*skoXC1*(5/224)))<=0,skoXC1*skoXC1*skoXC1*skoXC1*((-13/60)+skoXC1*skoXC1*((-9/280)+skoXC1*skoXC1*(-5/28)))<=0,skoXC1*skoXC1*((-1/2)+skoXC1*skoXC1*((7/120)+skoXC1*skoXC1*((33/560)+skoXC1*skoXC1*(-5/112))))<=0,skoXC1*skoXC1*((-1/6)+skoXC1*skoXC1*((-3/40)+skoXC1*skoXC1*(-5/112)))<=1,skoXC1*(-1+skoXC1*skoXC1*((1/3)+skoXC1*skoXC1*((3/20)+skoXC1*skoXC1*(5/56))))<=0,skoXC1*skoXC1*skoXC1*skoXC1*((-80/3)+skoXC1*skoXC1*((128/3)+skoXC1*skoXC1*((-55/3)+skoXC1*skoXC1*(5/3))))<=0,skoXC1*skoXC1*(256+skoXC1*skoXC1*(-160+skoXC1*skoXC1*(32+skoXC1*skoXC1*-1)))<=128,skoXC1*skoXC1*(1/3)<=1,skoXC1*(-1+skoXC1*skoXC1*(-1/6))<=0,skoXC1*skoXC1*skoXC1*skoXC1*(-2/3)<=0,skoXC1*skoXC1<=2,skoXC1*skoXC1*((-1/2)+skoXC1*skoXC1*(-1/6))<=0,skoXC1*skoXC1*(-1/6)<=1,skoXC1*(-1+skoXC1*skoXC1*(1/3))<=0,(7/8)>skoXC1,skoXC1>0,skoXC1*skoXC1*(-1/2)>-3,skoXC1*skoXC1*(1/2)<=3,skoXC1*skoXC1*(24+skoXC1*skoXC1*(-10+skoXC1*skoXC1))<=16,skoXC1*skoXC1*(-80+skoXC1*skoXC1*(40+skoXC1*skoXC1*(-6+skoXC1*skoXC1*(1/8))))>-48,skoXC1*skoXC1*(80+skoXC1*skoXC1*(-40+skoXC1*skoXC1*(6+skoXC1*skoXC1*(-1/8))))<=48,skoXC1*skoXC1>0,skoXC1*(-1+skoXC1*skoXC1*((1/3)+skoXC1*skoXC1*(3/20)))<=0,skoXC1*skoXC1*((-1/6)+skoXC1*skoXC1*(-3/40))<=1,skoXC1*skoXC1*((-1/2)+skoXC1*skoXC1*((7/120)+skoXC1*skoXC1*(-3/40)))<=0,skoXC1*skoXC1*skoXC1*skoXC1*((-13/60)+skoXC1*skoXC1*(-3/10))<=0,skoXC1*skoXC1*skoXC1*skoXC1*((-17/120)+skoXC1*skoXC1*(3/80))<=0,skoXC1*skoXC1*((1/3)+skoXC1*skoXC1*(3/20))<=1,skoXC1*skoXC1*skoXC1*skoXC1*((32/15)+skoXC1*skoXC1*((-296/15)+skoXC1*skoXC1*((391/15)+skoXC1*skoXC1*((-146/15)+skoXC1*skoXC1*(3/4)))))<=0,skoXC1*skoXC1*((1/6)+skoXC1*skoXC1*(3/40))>-1,skoXC1*(-1+skoXC1*skoXC1*((-1/6)+skoXC1*skoXC1*(-3/40)))<=0]], Reals]]

% In QepcadB format:
(E skoXC1) [[-1<(skoXC1 skoXC1 (1/6+(skoXC1 skoXC1 (3/40+(skoXC1 skoXC1 (5/112))))))]/\[[(skoXC1 skoXC1 skoXC1 skoXC1 (32/15+(skoXC1 skoXC1 (-272/105+(skoXC1 skoXC1 (-1163/105+(skoXC1 skoXC1 (1753/105+(skoXC1 skoXC1 (-169/28+(skoXC1 skoXC1 (25/56))))))))))))<=0]/\[[(skoXC1 skoXC1 (1/3+(skoXC1 skoXC1 (3/20+(skoXC1 skoXC1 (5/56))))))<=1]/\[[(skoXC1 skoXC1 skoXC1 skoXC1 (-17/120+(skoXC1 skoXC1 (-27/280+(skoXC1 skoXC1 (5/224))))))<=0]/\[[(skoXC1 skoXC1 skoXC1 skoXC1 (-13/60+(skoXC1 skoXC1 (-9/280+(skoXC1 skoXC1 (-5/28))))))<=0]/\[[(skoXC1 skoXC1 (-1/2+(skoXC1 skoXC1 (7/120+(skoXC1 skoXC1 (33/560+(skoXC1 skoXC1 (-5/112))))))))<=0]/\[[(skoXC1 skoXC1 (-1/6+(skoXC1 skoXC1 (-3/40+(skoXC1 skoXC1 (-5/112))))))<=1]/\[[(skoXC1 (-1+(skoXC1 skoXC1 (1/3+(skoXC1 skoXC1 (3/20+(skoXC1 skoXC1 (5/56))))))))<=0]/\[[(skoXC1 skoXC1 skoXC1 skoXC1 (-80/3+(skoXC1 skoXC1 (128/3+(skoXC1 skoXC1 (-55/3+(skoXC1 skoXC1 (5/3))))))))<=0]/\[[(skoXC1 skoXC1 (256+(skoXC1 skoXC1 (-160+(skoXC1 skoXC1 (32+(skoXC1 skoXC1 (-1))))))))<=128]/\[[(skoXC1 skoXC1 (1/3))<=1]/\[[(skoXC1 (-1+(skoXC1 skoXC1 (-1/6))))<=0]/\[[(skoXC1 skoXC1 skoXC1 skoXC1 (-2/3))<=0]/\[[(skoXC1 skoXC1)<=2]/\[[(skoXC1 skoXC1 (-1/2+(skoXC1 skoXC1 (-1/6))))<=0]/\[[(skoXC1 skoXC1 (-1/6))<=1]/\[[(skoXC1 (-1+(skoXC1 skoXC1 (1/3))))<=0]/\[[skoXC1<7/8]/\[[0<skoXC1]/\[[-3<(skoXC1 skoXC1 (-1/2))]/\[[(skoXC1 skoXC1 (1/2))<=3]/\[[(skoXC1 skoXC1 (24+(skoXC1 skoXC1 (-10+(skoXC1 skoXC1)))))<=16]/\[[-48<(skoXC1 skoXC1 (-80+(skoXC1 skoXC1 (40+(skoXC1 skoXC1 (-6+(skoXC1 skoXC1 (1/8))))))))]/\[[(skoXC1 skoXC1 (80+(skoXC1 skoXC1 (-40+(skoXC1 skoXC1 (6+(skoXC1 skoXC1 (-1/8))))))))<=48]/\[[0<(skoXC1 skoXC1)]/\[[(skoXC1 (-1+(skoXC1 skoXC1 (1/3+(skoXC1 skoXC1 (3/20))))))<=0]/\[[(skoXC1 skoXC1 (-1/6+(skoXC1 skoXC1 (-3/40))))<=1]/\[[(skoXC1 skoXC1 (-1/2+(skoXC1 skoXC1 (7/120+(skoXC1 skoXC1 (-3/40))))))<=0]/\[[(skoXC1 skoXC1 skoXC1 skoXC1 (-13/60+(skoXC1 skoXC1 (-3/10))))<=0]/\[[(skoXC1 skoXC1 skoXC1 skoXC1 (-17/120+(skoXC1 skoXC1 (3/80))))<=0]/\[[(skoXC1 skoXC1 (1/3+(skoXC1 skoXC1 (3/20))))<=1]/\[[(skoXC1 skoXC1 skoXC1 skoXC1 (32/15+(skoXC1 skoXC1 (-296/15+(skoXC1 skoXC1 (391/15+(skoXC1 skoXC1 (-146/15+(skoXC1 skoXC1 (3/4))))))))))<=0]/\[[-1<(skoXC1 skoXC1 (1/6+(skoXC1 skoXC1 (3/40))))]/\[(skoXC1 (-1+(skoXC1 skoXC1 (-1/6+(skoXC1 skoXC1 (-3/40))))))<=0]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]].

% In SMTLib2 format:
(declare-fun skoXC1 () Real) (assert (and (> (* skoXC1 (* skoXC1 (+ (/ 1. 6.) (* skoXC1 (* skoXC1 (+ (/ 3. 40.) (* skoXC1 (* skoXC1 (/ 5. 112.))))))))) (- 1.)) (and (<= (* skoXC1 (* skoXC1 (* skoXC1 (* skoXC1 (+ (/ 32. 15.) (* skoXC1 (* skoXC1 (+ (/ (- 272.) 105.) (* skoXC1 (* skoXC1 (+ (/ (- 1163.) 105.) (* skoXC1 (* skoXC1 (+ (/ 1753. 105.) (* skoXC1 (* skoXC1 (+ (/ (- 169.) 28.) (* skoXC1 (* skoXC1 (/ 25. 56.)))))))))))))))))))) 0.) (and (<= (* skoXC1 (* skoXC1 (+ (/ 1. 3.) (* skoXC1 (* skoXC1 (+ (/ 3. 20.) (* skoXC1 (* skoXC1 (/ 5. 56.))))))))) 1.) (and (<= (* skoXC1 (* skoXC1 (* skoXC1 (* skoXC1 (+ (/ (- 17.) 120.) (* skoXC1 (* skoXC1 (+ (/ (- 27.) 280.) (* skoXC1 (* skoXC1 (/ 5. 224.))))))))))) 0.) (and (<= (* skoXC1 (* skoXC1 (* skoXC1 (* skoXC1 (+ (/ (- 13.) 60.) (* skoXC1 (* skoXC1 (+ (/ (- 9.) 280.) (* skoXC1 (* skoXC1 (/ (- 5.) 28.))))))))))) 0.) (and (<= (* skoXC1 (* skoXC1 (+ (/ (- 1.) 2.) (* skoXC1 (* skoXC1 (+ (/ 7. 120.) (* skoXC1 (* skoXC1 (+ (/ 33. 560.) (* skoXC1 (* skoXC1 (/ (- 5.) 112.)))))))))))) 0.) (and (<= (* skoXC1 (* skoXC1 (+ (/ (- 1.) 6.) (* skoXC1 (* skoXC1 (+ (/ (- 3.) 40.) (* skoXC1 (* skoXC1 (/ (- 5.) 112.))))))))) 1.) (and (<= (* skoXC1 (+ (- 1.) (* skoXC1 (* skoXC1 (+ (/ 1. 3.) (* skoXC1 (* skoXC1 (+ (/ 3. 20.) (* skoXC1 (* skoXC1 (/ 5. 56.))))))))))) 0.) (and (<= (* skoXC1 (* skoXC1 (* skoXC1 (* skoXC1 (+ (/ (- 80.) 3.) (* skoXC1 (* skoXC1 (+ (/ 128. 3.) (* skoXC1 (* skoXC1 (+ (/ (- 55.) 3.) (* skoXC1 (* skoXC1 (/ 5. 3.)))))))))))))) 0.) (and (<= (* skoXC1 (* skoXC1 (+ 256. (* skoXC1 (* skoXC1 (+ (- 160.) (* skoXC1 (* skoXC1 (+ 32. (* skoXC1 (* skoXC1 (- 1.)))))))))))) 128.) (and (<= (* skoXC1 (* skoXC1 (/ 1. 3.))) 1.) (and (<= (* skoXC1 (+ (- 1.) (* skoXC1 (* skoXC1 (/ (- 1.) 6.))))) 0.) (and (<= (* skoXC1 (* skoXC1 (* skoXC1 (* skoXC1 (/ (- 2.) 3.))))) 0.) (and (<= (* skoXC1 skoXC1) 2.) (and (<= (* skoXC1 (* skoXC1 (+ (/ (- 1.) 2.) (* skoXC1 (* skoXC1 (/ (- 1.) 6.)))))) 0.) (and (<= (* skoXC1 (* skoXC1 (/ (- 1.) 6.))) 1.) (and (<= (* skoXC1 (+ (- 1.) (* skoXC1 (* skoXC1 (/ 1. 3.))))) 0.) (and (> (/ 7. 8.) skoXC1) (and (> skoXC1 0.) (and (> (* skoXC1 (* skoXC1 (/ (- 1.) 2.))) (- 3.)) (and (<= (* skoXC1 (* skoXC1 (/ 1. 2.))) 3.) (and (<= (* skoXC1 (* skoXC1 (+ 24. (* skoXC1 (* skoXC1 (+ (- 10.) (* skoXC1 skoXC1))))))) 16.) (and (> (* skoXC1 (* skoXC1 (+ (- 80.) (* skoXC1 (* skoXC1 (+ 40. (* skoXC1 (* skoXC1 (+ (- 6.) (* skoXC1 (* skoXC1 (/ 1. 8.)))))))))))) (- 48.)) (and (<= (* skoXC1 (* skoXC1 (+ 80. (* skoXC1 (* skoXC1 (+ (- 40.) (* skoXC1 (* skoXC1 (+ 6. (* skoXC1 (* skoXC1 (/ (- 1.) 8.)))))))))))) 48.) (and (> (* skoXC1 skoXC1) 0.) (and (<= (* skoXC1 (+ (- 1.) (* skoXC1 (* skoXC1 (+ (/ 1. 3.) (* skoXC1 (* skoXC1 (/ 3. 20.)))))))) 0.) (and (<= (* skoXC1 (* skoXC1 (+ (/ (- 1.) 6.) (* skoXC1 (* skoXC1 (/ (- 3.) 40.)))))) 1.) (and (<= (* skoXC1 (* skoXC1 (+ (/ (- 1.) 2.) (* skoXC1 (* skoXC1 (+ (/ 7. 120.) (* skoXC1 (* skoXC1 (/ (- 3.) 40.))))))))) 0.) (and (<= (* skoXC1 (* skoXC1 (* skoXC1 (* skoXC1 (+ (/ (- 13.) 60.) (* skoXC1 (* skoXC1 (/ (- 3.) 10.)))))))) 0.) (and (<= (* skoXC1 (* skoXC1 (* skoXC1 (* skoXC1 (+ (/ (- 17.) 120.) (* skoXC1 (* skoXC1 (/ 3. 80.)))))))) 0.) (and (<= (* skoXC1 (* skoXC1 (+ (/ 1. 3.) (* skoXC1 (* skoXC1 (/ 3. 20.)))))) 1.) (and (<= (* skoXC1 (* skoXC1 (* skoXC1 (* skoXC1 (+ (/ 32. 15.) (* skoXC1 (* skoXC1 (+ (/ (- 296.) 15.) (* skoXC1 (* skoXC1 (+ (/ 391. 15.) (* skoXC1 (* skoXC1 (+ (/ (- 146.) 15.) (* skoXC1 (* skoXC1 (/ 3. 4.))))))))))))))))) 0.) (and (> (* skoXC1 (* skoXC1 (+ (/ 1. 6.) (* skoXC1 (* skoXC1 (/ 3. 40.)))))) (- 1.)) (<= (* skoXC1 (+ (- 1.) (* skoXC1 (* skoXC1 (+ (/ (- 1.) 6.) (* skoXC1 (* skoXC1 (/ (- 3.) 40.)))))))) 0.)))))))))))))))))))))))))))))))))))

% In GRF format:
(sequent " MetiTarski formula " (antecedent (> (* skoXC1 (* skoXC1 (+ (/ 1. 6.) (* skoXC1 (* skoXC1 (+ (/ 3. 40.) (* skoXC1 (* skoXC1 (/ 5. 112.))))))))) (- 1.)) (<= (* skoXC1 (* skoXC1 (* skoXC1 (* skoXC1 (+ (/ 32. 15.) (* skoXC1 (* skoXC1 (+ (/ (- 272.) 105.) (* skoXC1 (* skoXC1 (+ (/ (- 1163.) 105.) (* skoXC1 (* skoXC1 (+ (/ 1753. 105.) (* skoXC1 (* skoXC1 (+ (/ (- 169.) 28.) (* skoXC1 (* skoXC1 (/ 25. 56.)))))))))))))))))))) 0.) (<= (* skoXC1 (* skoXC1 (+ (/ 1. 3.) (* skoXC1 (* skoXC1 (+ (/ 3. 20.) (* skoXC1 (* skoXC1 (/ 5. 56.))))))))) 1.) (<= (* skoXC1 (* skoXC1 (* skoXC1 (* skoXC1 (+ (/ (- 17.) 120.) (* skoXC1 (* skoXC1 (+ (/ (- 27.) 280.) (* skoXC1 (* skoXC1 (/ 5. 224.))))))))))) 0.) (<= (* skoXC1 (* skoXC1 (* skoXC1 (* skoXC1 (+ (/ (- 13.) 60.) (* skoXC1 (* skoXC1 (+ (/ (- 9.) 280.) (* skoXC1 (* skoXC1 (/ (- 5.) 28.))))))))))) 0.) (<= (* skoXC1 (* skoXC1 (+ (/ (- 1.) 2.) (* skoXC1 (* skoXC1 (+ (/ 7. 120.) (* skoXC1 (* skoXC1 (+ (/ 33. 560.) (* skoXC1 (* skoXC1 (/ (- 5.) 112.)))))))))))) 0.) (<= (* skoXC1 (* skoXC1 (+ (/ (- 1.) 6.) (* skoXC1 (* skoXC1 (+ (/ (- 3.) 40.) (* skoXC1 (* skoXC1 (/ (- 5.) 112.))))))))) 1.) (<= (* skoXC1 (+ (- 1.) (* skoXC1 (* skoXC1 (+ (/ 1. 3.) (* skoXC1 (* skoXC1 (+ (/ 3. 20.) (* skoXC1 (* skoXC1 (/ 5. 56.))))))))))) 0.) (<= (* skoXC1 (* skoXC1 (* skoXC1 (* skoXC1 (+ (/ (- 80.) 3.) (* skoXC1 (* skoXC1 (+ (/ 128. 3.) (* skoXC1 (* skoXC1 (+ (/ (- 55.) 3.) (* skoXC1 (* skoXC1 (/ 5. 3.)))))))))))))) 0.) (<= (* skoXC1 (* skoXC1 (+ 256. (* skoXC1 (* skoXC1 (+ (- 160.) (* skoXC1 (* skoXC1 (+ 32. (* skoXC1 (* skoXC1 (- 1.)))))))))))) 128.) (<= (* skoXC1 (* skoXC1 (/ 1. 3.))) 1.) (<= (* skoXC1 (+ (- 1.) (* skoXC1 (* skoXC1 (/ (- 1.) 6.))))) 0.) (<= (* skoXC1 (* skoXC1 (* skoXC1 (* skoXC1 (/ (- 2.) 3.))))) 0.) (<= (* skoXC1 skoXC1) 2.) (<= (* skoXC1 (* skoXC1 (+ (/ (- 1.) 2.) (* skoXC1 (* skoXC1 (/ (- 1.) 6.)))))) 0.) (<= (* skoXC1 (* skoXC1 (/ (- 1.) 6.))) 1.) (<= (* skoXC1 (+ (- 1.) (* skoXC1 (* skoXC1 (/ 1. 3.))))) 0.) (> (/ 7. 8.) skoXC1) (> skoXC1 0.) (> (* skoXC1 (* skoXC1 (/ (- 1.) 2.))) (- 3.)) (<= (* skoXC1 (* skoXC1 (/ 1. 2.))) 3.) (<= (* skoXC1 (* skoXC1 (+ 24. (* skoXC1 (* skoXC1 (+ (- 10.) (* skoXC1 skoXC1))))))) 16.) (> (* skoXC1 (* skoXC1 (+ (- 80.) (* skoXC1 (* skoXC1 (+ 40. (* skoXC1 (* skoXC1 (+ (- 6.) (* skoXC1 (* skoXC1 (/ 1. 8.)))))))))))) (- 48.)) (<= (* skoXC1 (* skoXC1 (+ 80. (* skoXC1 (* skoXC1 (+ (- 40.) (* skoXC1 (* skoXC1 (+ 6. (* skoXC1 (* skoXC1 (/ (- 1.) 8.)))))))))))) 48.) (> (* skoXC1 skoXC1) 0.) (<= (* skoXC1 (+ (- 1.) (* skoXC1 (* skoXC1 (+ (/ 1. 3.) (* skoXC1 (* skoXC1 (/ 3. 20.)))))))) 0.) (<= (* skoXC1 (* skoXC1 (+ (/ (- 1.) 6.) (* skoXC1 (* skoXC1 (/ (- 3.) 40.)))))) 1.) (<= (* skoXC1 (* skoXC1 (+ (/ (- 1.) 2.) (* skoXC1 (* skoXC1 (+ (/ 7. 120.) (* skoXC1 (* skoXC1 (/ (- 3.) 40.))))))))) 0.) (<= (* skoXC1 (* skoXC1 (* skoXC1 (* skoXC1 (+ (/ (- 13.) 60.) (* skoXC1 (* skoXC1 (/ (- 3.) 10.)))))))) 0.) (<= (* skoXC1 (* skoXC1 (* skoXC1 (* skoXC1 (+ (/ (- 17.) 120.) (* skoXC1 (* skoXC1 (/ 3. 80.)))))))) 0.) (<= (* skoXC1 (* skoXC1 (+ (/ 1. 3.) (* skoXC1 (* skoXC1 (/ 3. 20.)))))) 1.) (<= (* skoXC1 (* skoXC1 (* skoXC1 (* skoXC1 (+ (/ 32. 15.) (* skoXC1 (* skoXC1 (+ (/ (- 296.) 15.) (* skoXC1 (* skoXC1 (+ (/ 391. 15.) (* skoXC1 (* skoXC1 (+ (/ (- 146.) 15.) (* skoXC1 (* skoXC1 (/ 3. 4.))))))))))))))))) 0.) (> (* skoXC1 (* skoXC1 (+ (/ 1. 6.) (* skoXC1 (* skoXC1 (/ 3. 40.)))))) (- 1.))) (succedent (> (* skoXC1 (+ (- 1.) (* skoXC1 (* skoXC1 (+ (/ (- 1.) 6.) (* skoXC1 (* skoXC1 (/ (- 3.) 40.)))))))) 0.)))
-----[end problem]-----

-----[begin problem]-----
% In Mathematica format:
Timing[Resolve[Exists[{skoXC1}, And[skoXC1*skoXC1>0,skoXC1*skoXC1*((1/6)+skoXC1*skoXC1*((3/40)+skoXC1*skoXC1*(5/112)))>-1,skoXC1*skoXC1*skoXC1*skoXC1*((32/15)+skoXC1*skoXC1*((-272/105)+skoXC1*skoXC1*((-1163/105)+skoXC1*skoXC1*((1753/105)+skoXC1*skoXC1*((-169/28)+skoXC1*skoXC1*(25/56))))))<=0,skoXC1*skoXC1*((1/3)+skoXC1*skoXC1*((3/20)+skoXC1*skoXC1*(5/56)))<=1,skoXC1*skoXC1*skoXC1*skoXC1*((-17/120)+skoXC1*skoXC1*((-27/280)+skoXC1*skoXC1*(5/224)))<=0,skoXC1*skoXC1*skoXC1*skoXC1*((-13/60)+skoXC1*skoXC1*((-9/280)+skoXC1*skoXC1*(-5/28)))<=0,skoXC1*skoXC1*((-1/2)+skoXC1*skoXC1*((7/120)+skoXC1*skoXC1*((33/560)+skoXC1*skoXC1*(-5/112))))<=0,skoXC1*skoXC1*((-1/6)+skoXC1*skoXC1*((-3/40)+skoXC1*skoXC1*(-5/112)))<=1,skoXC1*(-1+skoXC1*skoXC1*((1/3)+skoXC1*skoXC1*((3/20)+skoXC1*skoXC1*(5/56))))<=0,skoXC1*skoXC1*skoXC1*skoXC1*((-80/3)+skoXC1*skoXC1*((128/3)+skoXC1*skoXC1*((-55/3)+skoXC1*skoXC1*(5/3))))<=0,skoXC1*skoXC1*(256+skoXC1*skoXC1*(-160+skoXC1*skoXC1*(32+skoXC1*skoXC1*-1)))<=128,skoXC1*skoXC1*(1/3)<=1,skoXC1*(-1+skoXC1*skoXC1*(-1/6))<=0,skoXC1*skoXC1*skoXC1*skoXC1*(-2/3)<=0,skoXC1*skoXC1<=2,skoXC1*skoXC1*((-1/2)+skoXC1*skoXC1*(-1/6))<=0,skoXC1*skoXC1*(-1/6)<=1,skoXC1*(-1+skoXC1*skoXC1*(1/3))<=0,(7/8)>skoXC1,skoXC1>0,skoXC1*skoXC1*(-1/2)>-3,skoXC1*skoXC1*(1/2)<=3,skoXC1*skoXC1*(24+skoXC1*skoXC1*(-10+skoXC1*skoXC1))<=16,skoXC1*skoXC1*(-80+skoXC1*skoXC1*(40+skoXC1*skoXC1*(-6+skoXC1*skoXC1*(1/8))))>-48,skoXC1*skoXC1*(80+skoXC1*skoXC1*(-40+skoXC1*skoXC1*(6+skoXC1*skoXC1*(-1/8))))<=48,skoXC1*skoXC1>0,skoXC1*(-1+skoXC1*skoXC1*((1/3)+skoXC1*skoXC1*(3/20)))<=0,skoXC1*skoXC1*((-1/6)+skoXC1*skoXC1*(-3/40))<=1,skoXC1*skoXC1*((-1/2)+skoXC1*skoXC1*((7/120)+skoXC1*skoXC1*(-3/40)))<=0,skoXC1*skoXC1*skoXC1*skoXC1*((-13/60)+skoXC1*skoXC1*(-3/10))<=0,skoXC1*skoXC1*skoXC1*skoXC1*((-17/120)+skoXC1*skoXC1*(3/80))<=0,skoXC1*skoXC1*((1/3)+skoXC1*skoXC1*(3/20))<=1,skoXC1*skoXC1*skoXC1*skoXC1*((32/15)+skoXC1*skoXC1*((-296/15)+skoXC1*skoXC1*((391/15)+skoXC1*skoXC1*((-146/15)+skoXC1*skoXC1*(3/4)))))<=0,skoXC1*skoXC1*((1/6)+skoXC1*skoXC1*(3/40))>-1,skoXC1*(-1+skoXC1*skoXC1*((-1/6)+skoXC1*skoXC1*(-3/40)))<=0]], Reals]]

% In QepcadB format:
(E skoXC1) [[0<(skoXC1 skoXC1)]/\[[-1<(skoXC1 skoXC1 (1/6+(skoXC1 skoXC1 (3/40+(skoXC1 skoXC1 (5/112))))))]/\[[(skoXC1 skoXC1 skoXC1 skoXC1 (32/15+(skoXC1 skoXC1 (-272/105+(skoXC1 skoXC1 (-1163/105+(skoXC1 skoXC1 (1753/105+(skoXC1 skoXC1 (-169/28+(skoXC1 skoXC1 (25/56))))))))))))<=0]/\[[(skoXC1 skoXC1 (1/3+(skoXC1 skoXC1 (3/20+(skoXC1 skoXC1 (5/56))))))<=1]/\[[(skoXC1 skoXC1 skoXC1 skoXC1 (-17/120+(skoXC1 skoXC1 (-27/280+(skoXC1 skoXC1 (5/224))))))<=0]/\[[(skoXC1 skoXC1 skoXC1 skoXC1 (-13/60+(skoXC1 skoXC1 (-9/280+(skoXC1 skoXC1 (-5/28))))))<=0]/\[[(skoXC1 skoXC1 (-1/2+(skoXC1 skoXC1 (7/120+(skoXC1 skoXC1 (33/560+(skoXC1 skoXC1 (-5/112))))))))<=0]/\[[(skoXC1 skoXC1 (-1/6+(skoXC1 skoXC1 (-3/40+(skoXC1 skoXC1 (-5/112))))))<=1]/\[[(skoXC1 (-1+(skoXC1 skoXC1 (1/3+(skoXC1 skoXC1 (3/20+(skoXC1 skoXC1 (5/56))))))))<=0]/\[[(skoXC1 skoXC1 skoXC1 skoXC1 (-80/3+(skoXC1 skoXC1 (128/3+(skoXC1 skoXC1 (-55/3+(skoXC1 skoXC1 (5/3))))))))<=0]/\[[(skoXC1 skoXC1 (256+(skoXC1 skoXC1 (-160+(skoXC1 skoXC1 (32+(skoXC1 skoXC1 (-1))))))))<=128]/\[[(skoXC1 skoXC1 (1/3))<=1]/\[[(skoXC1 (-1+(skoXC1 skoXC1 (-1/6))))<=0]/\[[(skoXC1 skoXC1 skoXC1 skoXC1 (-2/3))<=0]/\[[(skoXC1 skoXC1)<=2]/\[[(skoXC1 skoXC1 (-1/2+(skoXC1 skoXC1 (-1/6))))<=0]/\[[(skoXC1 skoXC1 (-1/6))<=1]/\[[(skoXC1 (-1+(skoXC1 skoXC1 (1/3))))<=0]/\[[skoXC1<7/8]/\[[0<skoXC1]/\[[-3<(skoXC1 skoXC1 (-1/2))]/\[[(skoXC1 skoXC1 (1/2))<=3]/\[[(skoXC1 skoXC1 (24+(skoXC1 skoXC1 (-10+(skoXC1 skoXC1)))))<=16]/\[[-48<(skoXC1 skoXC1 (-80+(skoXC1 skoXC1 (40+(skoXC1 skoXC1 (-6+(skoXC1 skoXC1 (1/8))))))))]/\[[(skoXC1 skoXC1 (80+(skoXC1 skoXC1 (-40+(skoXC1 skoXC1 (6+(skoXC1 skoXC1 (-1/8))))))))<=48]/\[[0<(skoXC1 skoXC1)]/\[[(skoXC1 (-1+(skoXC1 skoXC1 (1/3+(skoXC1 skoXC1 (3/20))))))<=0]/\[[(skoXC1 skoXC1 (-1/6+(skoXC1 skoXC1 (-3/40))))<=1]/\[[(skoXC1 skoXC1 (-1/2+(skoXC1 skoXC1 (7/120+(skoXC1 skoXC1 (-3/40))))))<=0]/\[[(skoXC1 skoXC1 skoXC1 skoXC1 (-13/60+(skoXC1 skoXC1 (-3/10))))<=0]/\[[(skoXC1 skoXC1 skoXC1 skoXC1 (-17/120+(skoXC1 skoXC1 (3/80))))<=0]/\[[(skoXC1 skoXC1 (1/3+(skoXC1 skoXC1 (3/20))))<=1]/\[[(skoXC1 skoXC1 skoXC1 skoXC1 (32/15+(skoXC1 skoXC1 (-296/15+(skoXC1 skoXC1 (391/15+(skoXC1 skoXC1 (-146/15+(skoXC1 skoXC1 (3/4))))))))))<=0]/\[[-1<(skoXC1 skoXC1 (1/6+(skoXC1 skoXC1 (3/40))))]/\[(skoXC1 (-1+(skoXC1 skoXC1 (-1/6+(skoXC1 skoXC1 (-3/40))))))<=0]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]].

% In SMTLib2 format:
(declare-fun skoXC1 () Real) (assert (and (> (* skoXC1 skoXC1) 0.) (and (> (* skoXC1 (* skoXC1 (+ (/ 1. 6.) (* skoXC1 (* skoXC1 (+ (/ 3. 40.) (* skoXC1 (* skoXC1 (/ 5. 112.))))))))) (- 1.)) (and (<= (* skoXC1 (* skoXC1 (* skoXC1 (* skoXC1 (+ (/ 32. 15.) (* skoXC1 (* skoXC1 (+ (/ (- 272.) 105.) (* skoXC1 (* skoXC1 (+ (/ (- 1163.) 105.) (* skoXC1 (* skoXC1 (+ (/ 1753. 105.) (* skoXC1 (* skoXC1 (+ (/ (- 169.) 28.) (* skoXC1 (* skoXC1 (/ 25. 56.)))))))))))))))))))) 0.) (and (<= (* skoXC1 (* skoXC1 (+ (/ 1. 3.) (* skoXC1 (* skoXC1 (+ (/ 3. 20.) (* skoXC1 (* skoXC1 (/ 5. 56.))))))))) 1.) (and (<= (* skoXC1 (* skoXC1 (* skoXC1 (* skoXC1 (+ (/ (- 17.) 120.) (* skoXC1 (* skoXC1 (+ (/ (- 27.) 280.) (* skoXC1 (* skoXC1 (/ 5. 224.))))))))))) 0.) (and (<= (* skoXC1 (* skoXC1 (* skoXC1 (* skoXC1 (+ (/ (- 13.) 60.) (* skoXC1 (* skoXC1 (+ (/ (- 9.) 280.) (* skoXC1 (* skoXC1 (/ (- 5.) 28.))))))))))) 0.) (and (<= (* skoXC1 (* skoXC1 (+ (/ (- 1.) 2.) (* skoXC1 (* skoXC1 (+ (/ 7. 120.) (* skoXC1 (* skoXC1 (+ (/ 33. 560.) (* skoXC1 (* skoXC1 (/ (- 5.) 112.)))))))))))) 0.) (and (<= (* skoXC1 (* skoXC1 (+ (/ (- 1.) 6.) (* skoXC1 (* skoXC1 (+ (/ (- 3.) 40.) (* skoXC1 (* skoXC1 (/ (- 5.) 112.))))))))) 1.) (and (<= (* skoXC1 (+ (- 1.) (* skoXC1 (* skoXC1 (+ (/ 1. 3.) (* skoXC1 (* skoXC1 (+ (/ 3. 20.) (* skoXC1 (* skoXC1 (/ 5. 56.))))))))))) 0.) (and (<= (* skoXC1 (* skoXC1 (* skoXC1 (* skoXC1 (+ (/ (- 80.) 3.) (* skoXC1 (* skoXC1 (+ (/ 128. 3.) (* skoXC1 (* skoXC1 (+ (/ (- 55.) 3.) (* skoXC1 (* skoXC1 (/ 5. 3.)))))))))))))) 0.) (and (<= (* skoXC1 (* skoXC1 (+ 256. (* skoXC1 (* skoXC1 (+ (- 160.) (* skoXC1 (* skoXC1 (+ 32. (* skoXC1 (* skoXC1 (- 1.)))))))))))) 128.) (and (<= (* skoXC1 (* skoXC1 (/ 1. 3.))) 1.) (and (<= (* skoXC1 (+ (- 1.) (* skoXC1 (* skoXC1 (/ (- 1.) 6.))))) 0.) (and (<= (* skoXC1 (* skoXC1 (* skoXC1 (* skoXC1 (/ (- 2.) 3.))))) 0.) (and (<= (* skoXC1 skoXC1) 2.) (and (<= (* skoXC1 (* skoXC1 (+ (/ (- 1.) 2.) (* skoXC1 (* skoXC1 (/ (- 1.) 6.)))))) 0.) (and (<= (* skoXC1 (* skoXC1 (/ (- 1.) 6.))) 1.) (and (<= (* skoXC1 (+ (- 1.) (* skoXC1 (* skoXC1 (/ 1. 3.))))) 0.) (and (> (/ 7. 8.) skoXC1) (and (> skoXC1 0.) (and (> (* skoXC1 (* skoXC1 (/ (- 1.) 2.))) (- 3.)) (and (<= (* skoXC1 (* skoXC1 (/ 1. 2.))) 3.) (and (<= (* skoXC1 (* skoXC1 (+ 24. (* skoXC1 (* skoXC1 (+ (- 10.) (* skoXC1 skoXC1))))))) 16.) (and (> (* skoXC1 (* skoXC1 (+ (- 80.) (* skoXC1 (* skoXC1 (+ 40. (* skoXC1 (* skoXC1 (+ (- 6.) (* skoXC1 (* skoXC1 (/ 1. 8.)))))))))))) (- 48.)) (and (<= (* skoXC1 (* skoXC1 (+ 80. (* skoXC1 (* skoXC1 (+ (- 40.) (* skoXC1 (* skoXC1 (+ 6. (* skoXC1 (* skoXC1 (/ (- 1.) 8.)))))))))))) 48.) (and (> (* skoXC1 skoXC1) 0.) (and (<= (* skoXC1 (+ (- 1.) (* skoXC1 (* skoXC1 (+ (/ 1. 3.) (* skoXC1 (* skoXC1 (/ 3. 20.)))))))) 0.) (and (<= (* skoXC1 (* skoXC1 (+ (/ (- 1.) 6.) (* skoXC1 (* skoXC1 (/ (- 3.) 40.)))))) 1.) (and (<= (* skoXC1 (* skoXC1 (+ (/ (- 1.) 2.) (* skoXC1 (* skoXC1 (+ (/ 7. 120.) (* skoXC1 (* skoXC1 (/ (- 3.) 40.))))))))) 0.) (and (<= (* skoXC1 (* skoXC1 (* skoXC1 (* skoXC1 (+ (/ (- 13.) 60.) (* skoXC1 (* skoXC1 (/ (- 3.) 10.)))))))) 0.) (and (<= (* skoXC1 (* skoXC1 (* skoXC1 (* skoXC1 (+ (/ (- 17.) 120.) (* skoXC1 (* skoXC1 (/ 3. 80.)))))))) 0.) (and (<= (* skoXC1 (* skoXC1 (+ (/ 1. 3.) (* skoXC1 (* skoXC1 (/ 3. 20.)))))) 1.) (and (<= (* skoXC1 (* skoXC1 (* skoXC1 (* skoXC1 (+ (/ 32. 15.) (* skoXC1 (* skoXC1 (+ (/ (- 296.) 15.) (* skoXC1 (* skoXC1 (+ (/ 391. 15.) (* skoXC1 (* skoXC1 (+ (/ (- 146.) 15.) (* skoXC1 (* skoXC1 (/ 3. 4.))))))))))))))))) 0.) (and (> (* skoXC1 (* skoXC1 (+ (/ 1. 6.) (* skoXC1 (* skoXC1 (/ 3. 40.)))))) (- 1.)) (<= (* skoXC1 (+ (- 1.) (* skoXC1 (* skoXC1 (+ (/ (- 1.) 6.) (* skoXC1 (* skoXC1 (/ (- 3.) 40.)))))))) 0.))))))))))))))))))))))))))))))))))))

% In GRF format:
(sequent " MetiTarski formula " (antecedent (> (* skoXC1 skoXC1) 0.) (> (* skoXC1 (* skoXC1 (+ (/ 1. 6.) (* skoXC1 (* skoXC1 (+ (/ 3. 40.) (* skoXC1 (* skoXC1 (/ 5. 112.))))))))) (- 1.)) (<= (* skoXC1 (* skoXC1 (* skoXC1 (* skoXC1 (+ (/ 32. 15.) (* skoXC1 (* skoXC1 (+ (/ (- 272.) 105.) (* skoXC1 (* skoXC1 (+ (/ (- 1163.) 105.) (* skoXC1 (* skoXC1 (+ (/ 1753. 105.) (* skoXC1 (* skoXC1 (+ (/ (- 169.) 28.) (* skoXC1 (* skoXC1 (/ 25. 56.)))))))))))))))))))) 0.) (<= (* skoXC1 (* skoXC1 (+ (/ 1. 3.) (* skoXC1 (* skoXC1 (+ (/ 3. 20.) (* skoXC1 (* skoXC1 (/ 5. 56.))))))))) 1.) (<= (* skoXC1 (* skoXC1 (* skoXC1 (* skoXC1 (+ (/ (- 17.) 120.) (* skoXC1 (* skoXC1 (+ (/ (- 27.) 280.) (* skoXC1 (* skoXC1 (/ 5. 224.))))))))))) 0.) (<= (* skoXC1 (* skoXC1 (* skoXC1 (* skoXC1 (+ (/ (- 13.) 60.) (* skoXC1 (* skoXC1 (+ (/ (- 9.) 280.) (* skoXC1 (* skoXC1 (/ (- 5.) 28.))))))))))) 0.) (<= (* skoXC1 (* skoXC1 (+ (/ (- 1.) 2.) (* skoXC1 (* skoXC1 (+ (/ 7. 120.) (* skoXC1 (* skoXC1 (+ (/ 33. 560.) (* skoXC1 (* skoXC1 (/ (- 5.) 112.)))))))))))) 0.) (<= (* skoXC1 (* skoXC1 (+ (/ (- 1.) 6.) (* skoXC1 (* skoXC1 (+ (/ (- 3.) 40.) (* skoXC1 (* skoXC1 (/ (- 5.) 112.))))))))) 1.) (<= (* skoXC1 (+ (- 1.) (* skoXC1 (* skoXC1 (+ (/ 1. 3.) (* skoXC1 (* skoXC1 (+ (/ 3. 20.) (* skoXC1 (* skoXC1 (/ 5. 56.))))))))))) 0.) (<= (* skoXC1 (* skoXC1 (* skoXC1 (* skoXC1 (+ (/ (- 80.) 3.) (* skoXC1 (* skoXC1 (+ (/ 128. 3.) (* skoXC1 (* skoXC1 (+ (/ (- 55.) 3.) (* skoXC1 (* skoXC1 (/ 5. 3.)))))))))))))) 0.) (<= (* skoXC1 (* skoXC1 (+ 256. (* skoXC1 (* skoXC1 (+ (- 160.) (* skoXC1 (* skoXC1 (+ 32. (* skoXC1 (* skoXC1 (- 1.)))))))))))) 128.) (<= (* skoXC1 (* skoXC1 (/ 1. 3.))) 1.) (<= (* skoXC1 (+ (- 1.) (* skoXC1 (* skoXC1 (/ (- 1.) 6.))))) 0.) (<= (* skoXC1 (* skoXC1 (* skoXC1 (* skoXC1 (/ (- 2.) 3.))))) 0.) (<= (* skoXC1 skoXC1) 2.) (<= (* skoXC1 (* skoXC1 (+ (/ (- 1.) 2.) (* skoXC1 (* skoXC1 (/ (- 1.) 6.)))))) 0.) (<= (* skoXC1 (* skoXC1 (/ (- 1.) 6.))) 1.) (<= (* skoXC1 (+ (- 1.) (* skoXC1 (* skoXC1 (/ 1. 3.))))) 0.) (> (/ 7. 8.) skoXC1) (> skoXC1 0.) (> (* skoXC1 (* skoXC1 (/ (- 1.) 2.))) (- 3.)) (<= (* skoXC1 (* skoXC1 (/ 1. 2.))) 3.) (<= (* skoXC1 (* skoXC1 (+ 24. (* skoXC1 (* skoXC1 (+ (- 10.) (* skoXC1 skoXC1))))))) 16.) (> (* skoXC1 (* skoXC1 (+ (- 80.) (* skoXC1 (* skoXC1 (+ 40. (* skoXC1 (* skoXC1 (+ (- 6.) (* skoXC1 (* skoXC1 (/ 1. 8.)))))))))))) (- 48.)) (<= (* skoXC1 (* skoXC1 (+ 80. (* skoXC1 (* skoXC1 (+ (- 40.) (* skoXC1 (* skoXC1 (+ 6. (* skoXC1 (* skoXC1 (/ (- 1.) 8.)))))))))))) 48.) (> (* skoXC1 skoXC1) 0.) (<= (* skoXC1 (+ (- 1.) (* skoXC1 (* skoXC1 (+ (/ 1. 3.) (* skoXC1 (* skoXC1 (/ 3. 20.)))))))) 0.) (<= (* skoXC1 (* skoXC1 (+ (/ (- 1.) 6.) (* skoXC1 (* skoXC1 (/ (- 3.) 40.)))))) 1.) (<= (* skoXC1 (* skoXC1 (+ (/ (- 1.) 2.) (* skoXC1 (* skoXC1 (+ (/ 7. 120.) (* skoXC1 (* skoXC1 (/ (- 3.) 40.))))))))) 0.) (<= (* skoXC1 (* skoXC1 (* skoXC1 (* skoXC1 (+ (/ (- 13.) 60.) (* skoXC1 (* skoXC1 (/ (- 3.) 10.)))))))) 0.) (<= (* skoXC1 (* skoXC1 (* skoXC1 (* skoXC1 (+ (/ (- 17.) 120.) (* skoXC1 (* skoXC1 (/ 3. 80.)))))))) 0.) (<= (* skoXC1 (* skoXC1 (+ (/ 1. 3.) (* skoXC1 (* skoXC1 (/ 3. 20.)))))) 1.) (<= (* skoXC1 (* skoXC1 (* skoXC1 (* skoXC1 (+ (/ 32. 15.) (* skoXC1 (* skoXC1 (+ (/ (- 296.) 15.) (* skoXC1 (* skoXC1 (+ (/ 391. 15.) (* skoXC1 (* skoXC1 (+ (/ (- 146.) 15.) (* skoXC1 (* skoXC1 (/ 3. 4.))))))))))))))))) 0.) (> (* skoXC1 (* skoXC1 (+ (/ 1. 6.) (* skoXC1 (* skoXC1 (/ 3. 40.)))))) (- 1.))) (succedent (> (* skoXC1 (+ (- 1.) (* skoXC1 (* skoXC1 (+ (/ (- 1.) 6.) (* skoXC1 (* skoXC1 (/ (- 3.) 40.)))))))) 0.)))
-----[end problem]-----

-----[begin problem]-----
% In Mathematica format:
Timing[Resolve[Exists[{skoXC1}, And[skoXC1*(-1+skoXC1*skoXC1*((-1/6)+skoXC1*skoXC1*((-3/40)+skoXC1*skoXC1*(-5/112))))<=0,skoXC1*skoXC1<=1,skoXC1*skoXC1*((1/6)+skoXC1*skoXC1*((3/40)+skoXC1*skoXC1*(5/112)))>-1,skoXC1*skoXC1*skoXC1*skoXC1*((32/15)+skoXC1*skoXC1*((-272/105)+skoXC1*skoXC1*((-1163/105)+skoXC1*skoXC1*((1753/105)+skoXC1*skoXC1*((-169/28)+skoXC1*skoXC1*(25/56))))))<=0,skoXC1*skoXC1*((1/3)+skoXC1*skoXC1*((3/20)+skoXC1*skoXC1*(5/56)))<=1,skoXC1*skoXC1*skoXC1*skoXC1*((-17/120)+skoXC1*skoXC1*((-27/280)+skoXC1*skoXC1*(5/224)))<=0,skoXC1*skoXC1*skoXC1*skoXC1*((-13/60)+skoXC1*skoXC1*((-9/280)+skoXC1*skoXC1*(-5/28)))<=0,skoXC1*skoXC1*((-1/2)+skoXC1*skoXC1*((7/120)+skoXC1*skoXC1*((33/560)+skoXC1*skoXC1*(-5/112))))<=0,skoXC1*skoXC1*((-1/6)+skoXC1*skoXC1*((-3/40)+skoXC1*skoXC1*(-5/112)))<=1,skoXC1*(-1+skoXC1*skoXC1*((1/3)+skoXC1*skoXC1*((3/20)+skoXC1*skoXC1*(5/56))))<=0,skoXC1*skoXC1*skoXC1*skoXC1*((-80/3)+skoXC1*skoXC1*((128/3)+skoXC1*skoXC1*((-55/3)+skoXC1*skoXC1*(5/3))))<=0,skoXC1*skoXC1*(256+skoXC1*skoXC1*(-160+skoXC1*skoXC1*(32+skoXC1*skoXC1*-1)))<=128,skoXC1*skoXC1*(1/3)<=1,skoXC1*(-1+skoXC1*skoXC1*(-1/6))<=0,skoXC1*skoXC1*skoXC1*skoXC1*(-2/3)<=0,skoXC1*skoXC1<=2,skoXC1*skoXC1*((-1/2)+skoXC1*skoXC1*(-1/6))<=0,skoXC1*skoXC1*(-1/6)<=1,skoXC1*(-1+skoXC1*skoXC1*(1/3))<=0,(7/8)>skoXC1,skoXC1>0,skoXC1*skoXC1*(-1/2)>-3,skoXC1*skoXC1*(1/2)<=3,skoXC1*skoXC1*(24+skoXC1*skoXC1*(-10+skoXC1*skoXC1))<=16,skoXC1*skoXC1*(-80+skoXC1*skoXC1*(40+skoXC1*skoXC1*(-6+skoXC1*skoXC1*(1/8))))>-48,skoXC1*skoXC1*(80+skoXC1*skoXC1*(-40+skoXC1*skoXC1*(6+skoXC1*skoXC1*(-1/8))))<=48,skoXC1*skoXC1>0,skoXC1*(-1+skoXC1*skoXC1*((1/3)+skoXC1*skoXC1*(3/20)))<=0,skoXC1*skoXC1*((-1/6)+skoXC1*skoXC1*(-3/40))<=1,skoXC1*skoXC1*((-1/2)+skoXC1*skoXC1*((7/120)+skoXC1*skoXC1*(-3/40)))<=0,skoXC1*skoXC1*skoXC1*skoXC1*((-13/60)+skoXC1*skoXC1*(-3/10))<=0,skoXC1*skoXC1*skoXC1*skoXC1*((-17/120)+skoXC1*skoXC1*(3/80))<=0,skoXC1*skoXC1*((1/3)+skoXC1*skoXC1*(3/20))<=1,skoXC1*skoXC1*skoXC1*skoXC1*((32/15)+skoXC1*skoXC1*((-296/15)+skoXC1*skoXC1*((391/15)+skoXC1*skoXC1*((-146/15)+skoXC1*skoXC1*(3/4)))))<=0,skoXC1*skoXC1*((1/6)+skoXC1*skoXC1*(3/40))>-1,skoXC1*(-1+skoXC1*skoXC1*((-1/6)+skoXC1*skoXC1*(-3/40)))<=0]], Reals]]

% In QepcadB format:
(E skoXC1) [[(skoXC1 (-1+(skoXC1 skoXC1 (-1/6+(skoXC1 skoXC1 (-3/40+(skoXC1 skoXC1 (-5/112))))))))<=0]/\[[(skoXC1 skoXC1)<=1]/\[[-1<(skoXC1 skoXC1 (1/6+(skoXC1 skoXC1 (3/40+(skoXC1 skoXC1 (5/112))))))]/\[[(skoXC1 skoXC1 skoXC1 skoXC1 (32/15+(skoXC1 skoXC1 (-272/105+(skoXC1 skoXC1 (-1163/105+(skoXC1 skoXC1 (1753/105+(skoXC1 skoXC1 (-169/28+(skoXC1 skoXC1 (25/56))))))))))))<=0]/\[[(skoXC1 skoXC1 (1/3+(skoXC1 skoXC1 (3/20+(skoXC1 skoXC1 (5/56))))))<=1]/\[[(skoXC1 skoXC1 skoXC1 skoXC1 (-17/120+(skoXC1 skoXC1 (-27/280+(skoXC1 skoXC1 (5/224))))))<=0]/\[[(skoXC1 skoXC1 skoXC1 skoXC1 (-13/60+(skoXC1 skoXC1 (-9/280+(skoXC1 skoXC1 (-5/28))))))<=0]/\[[(skoXC1 skoXC1 (-1/2+(skoXC1 skoXC1 (7/120+(skoXC1 skoXC1 (33/560+(skoXC1 skoXC1 (-5/112))))))))<=0]/\[[(skoXC1 skoXC1 (-1/6+(skoXC1 skoXC1 (-3/40+(skoXC1 skoXC1 (-5/112))))))<=1]/\[[(skoXC1 (-1+(skoXC1 skoXC1 (1/3+(skoXC1 skoXC1 (3/20+(skoXC1 skoXC1 (5/56))))))))<=0]/\[[(skoXC1 skoXC1 skoXC1 skoXC1 (-80/3+(skoXC1 skoXC1 (128/3+(skoXC1 skoXC1 (-55/3+(skoXC1 skoXC1 (5/3))))))))<=0]/\[[(skoXC1 skoXC1 (256+(skoXC1 skoXC1 (-160+(skoXC1 skoXC1 (32+(skoXC1 skoXC1 (-1))))))))<=128]/\[[(skoXC1 skoXC1 (1/3))<=1]/\[[(skoXC1 (-1+(skoXC1 skoXC1 (-1/6))))<=0]/\[[(skoXC1 skoXC1 skoXC1 skoXC1 (-2/3))<=0]/\[[(skoXC1 skoXC1)<=2]/\[[(skoXC1 skoXC1 (-1/2+(skoXC1 skoXC1 (-1/6))))<=0]/\[[(skoXC1 skoXC1 (-1/6))<=1]/\[[(skoXC1 (-1+(skoXC1 skoXC1 (1/3))))<=0]/\[[skoXC1<7/8]/\[[0<skoXC1]/\[[-3<(skoXC1 skoXC1 (-1/2))]/\[[(skoXC1 skoXC1 (1/2))<=3]/\[[(skoXC1 skoXC1 (24+(skoXC1 skoXC1 (-10+(skoXC1 skoXC1)))))<=16]/\[[-48<(skoXC1 skoXC1 (-80+(skoXC1 skoXC1 (40+(skoXC1 skoXC1 (-6+(skoXC1 skoXC1 (1/8))))))))]/\[[(skoXC1 skoXC1 (80+(skoXC1 skoXC1 (-40+(skoXC1 skoXC1 (6+(skoXC1 skoXC1 (-1/8))))))))<=48]/\[[0<(skoXC1 skoXC1)]/\[[(skoXC1 (-1+(skoXC1 skoXC1 (1/3+(skoXC1 skoXC1 (3/20))))))<=0]/\[[(skoXC1 skoXC1 (-1/6+(skoXC1 skoXC1 (-3/40))))<=1]/\[[(skoXC1 skoXC1 (-1/2+(skoXC1 skoXC1 (7/120+(skoXC1 skoXC1 (-3/40))))))<=0]/\[[(skoXC1 skoXC1 skoXC1 skoXC1 (-13/60+(skoXC1 skoXC1 (-3/10))))<=0]/\[[(skoXC1 skoXC1 skoXC1 skoXC1 (-17/120+(skoXC1 skoXC1 (3/80))))<=0]/\[[(skoXC1 skoXC1 (1/3+(skoXC1 skoXC1 (3/20))))<=1]/\[[(skoXC1 skoXC1 skoXC1 skoXC1 (32/15+(skoXC1 skoXC1 (-296/15+(skoXC1 skoXC1 (391/15+(skoXC1 skoXC1 (-146/15+(skoXC1 skoXC1 (3/4))))))))))<=0]/\[[-1<(skoXC1 skoXC1 (1/6+(skoXC1 skoXC1 (3/40))))]/\[(skoXC1 (-1+(skoXC1 skoXC1 (-1/6+(skoXC1 skoXC1 (-3/40))))))<=0]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]].

% In SMTLib2 format:
(declare-fun skoXC1 () Real) (assert (and (<= (* skoXC1 (+ (- 1.) (* skoXC1 (* skoXC1 (+ (/ (- 1.) 6.) (* skoXC1 (* skoXC1 (+ (/ (- 3.) 40.) (* skoXC1 (* skoXC1 (/ (- 5.) 112.))))))))))) 0.) (and (<= (* skoXC1 skoXC1) 1.) (and (> (* skoXC1 (* skoXC1 (+ (/ 1. 6.) (* skoXC1 (* skoXC1 (+ (/ 3. 40.) (* skoXC1 (* skoXC1 (/ 5. 112.))))))))) (- 1.)) (and (<= (* skoXC1 (* skoXC1 (* skoXC1 (* skoXC1 (+ (/ 32. 15.) (* skoXC1 (* skoXC1 (+ (/ (- 272.) 105.) (* skoXC1 (* skoXC1 (+ (/ (- 1163.) 105.) (* skoXC1 (* skoXC1 (+ (/ 1753. 105.) (* skoXC1 (* skoXC1 (+ (/ (- 169.) 28.) (* skoXC1 (* skoXC1 (/ 25. 56.)))))))))))))))))))) 0.) (and (<= (* skoXC1 (* skoXC1 (+ (/ 1. 3.) (* skoXC1 (* skoXC1 (+ (/ 3. 20.) (* skoXC1 (* skoXC1 (/ 5. 56.))))))))) 1.) (and (<= (* skoXC1 (* skoXC1 (* skoXC1 (* skoXC1 (+ (/ (- 17.) 120.) (* skoXC1 (* skoXC1 (+ (/ (- 27.) 280.) (* skoXC1 (* skoXC1 (/ 5. 224.))))))))))) 0.) (and (<= (* skoXC1 (* skoXC1 (* skoXC1 (* skoXC1 (+ (/ (- 13.) 60.) (* skoXC1 (* skoXC1 (+ (/ (- 9.) 280.) (* skoXC1 (* skoXC1 (/ (- 5.) 28.))))))))))) 0.) (and (<= (* skoXC1 (* skoXC1 (+ (/ (- 1.) 2.) (* skoXC1 (* skoXC1 (+ (/ 7. 120.) (* skoXC1 (* skoXC1 (+ (/ 33. 560.) (* skoXC1 (* skoXC1 (/ (- 5.) 112.)))))))))))) 0.) (and (<= (* skoXC1 (* skoXC1 (+ (/ (- 1.) 6.) (* skoXC1 (* skoXC1 (+ (/ (- 3.) 40.) (* skoXC1 (* skoXC1 (/ (- 5.) 112.))))))))) 1.) (and (<= (* skoXC1 (+ (- 1.) (* skoXC1 (* skoXC1 (+ (/ 1. 3.) (* skoXC1 (* skoXC1 (+ (/ 3. 20.) (* skoXC1 (* skoXC1 (/ 5. 56.))))))))))) 0.) (and (<= (* skoXC1 (* skoXC1 (* skoXC1 (* skoXC1 (+ (/ (- 80.) 3.) (* skoXC1 (* skoXC1 (+ (/ 128. 3.) (* skoXC1 (* skoXC1 (+ (/ (- 55.) 3.) (* skoXC1 (* skoXC1 (/ 5. 3.)))))))))))))) 0.) (and (<= (* skoXC1 (* skoXC1 (+ 256. (* skoXC1 (* skoXC1 (+ (- 160.) (* skoXC1 (* skoXC1 (+ 32. (* skoXC1 (* skoXC1 (- 1.)))))))))))) 128.) (and (<= (* skoXC1 (* skoXC1 (/ 1. 3.))) 1.) (and (<= (* skoXC1 (+ (- 1.) (* skoXC1 (* skoXC1 (/ (- 1.) 6.))))) 0.) (and (<= (* skoXC1 (* skoXC1 (* skoXC1 (* skoXC1 (/ (- 2.) 3.))))) 0.) (and (<= (* skoXC1 skoXC1) 2.) (and (<= (* skoXC1 (* skoXC1 (+ (/ (- 1.) 2.) (* skoXC1 (* skoXC1 (/ (- 1.) 6.)))))) 0.) (and (<= (* skoXC1 (* skoXC1 (/ (- 1.) 6.))) 1.) (and (<= (* skoXC1 (+ (- 1.) (* skoXC1 (* skoXC1 (/ 1. 3.))))) 0.) (and (> (/ 7. 8.) skoXC1) (and (> skoXC1 0.) (and (> (* skoXC1 (* skoXC1 (/ (- 1.) 2.))) (- 3.)) (and (<= (* skoXC1 (* skoXC1 (/ 1. 2.))) 3.) (and (<= (* skoXC1 (* skoXC1 (+ 24. (* skoXC1 (* skoXC1 (+ (- 10.) (* skoXC1 skoXC1))))))) 16.) (and (> (* skoXC1 (* skoXC1 (+ (- 80.) (* skoXC1 (* skoXC1 (+ 40. (* skoXC1 (* skoXC1 (+ (- 6.) (* skoXC1 (* skoXC1 (/ 1. 8.)))))))))))) (- 48.)) (and (<= (* skoXC1 (* skoXC1 (+ 80. (* skoXC1 (* skoXC1 (+ (- 40.) (* skoXC1 (* skoXC1 (+ 6. (* skoXC1 (* skoXC1 (/ (- 1.) 8.)))))))))))) 48.) (and (> (* skoXC1 skoXC1) 0.) (and (<= (* skoXC1 (+ (- 1.) (* skoXC1 (* skoXC1 (+ (/ 1. 3.) (* skoXC1 (* skoXC1 (/ 3. 20.)))))))) 0.) (and (<= (* skoXC1 (* skoXC1 (+ (/ (- 1.) 6.) (* skoXC1 (* skoXC1 (/ (- 3.) 40.)))))) 1.) (and (<= (* skoXC1 (* skoXC1 (+ (/ (- 1.) 2.) (* skoXC1 (* skoXC1 (+ (/ 7. 120.) (* skoXC1 (* skoXC1 (/ (- 3.) 40.))))))))) 0.) (and (<= (* skoXC1 (* skoXC1 (* skoXC1 (* skoXC1 (+ (/ (- 13.) 60.) (* skoXC1 (* skoXC1 (/ (- 3.) 10.)))))))) 0.) (and (<= (* skoXC1 (* skoXC1 (* skoXC1 (* skoXC1 (+ (/ (- 17.) 120.) (* skoXC1 (* skoXC1 (/ 3. 80.)))))))) 0.) (and (<= (* skoXC1 (* skoXC1 (+ (/ 1. 3.) (* skoXC1 (* skoXC1 (/ 3. 20.)))))) 1.) (and (<= (* skoXC1 (* skoXC1 (* skoXC1 (* skoXC1 (+ (/ 32. 15.) (* skoXC1 (* skoXC1 (+ (/ (- 296.) 15.) (* skoXC1 (* skoXC1 (+ (/ 391. 15.) (* skoXC1 (* skoXC1 (+ (/ (- 146.) 15.) (* skoXC1 (* skoXC1 (/ 3. 4.))))))))))))))))) 0.) (and (> (* skoXC1 (* skoXC1 (+ (/ 1. 6.) (* skoXC1 (* skoXC1 (/ 3. 40.)))))) (- 1.)) (<= (* skoXC1 (+ (- 1.) (* skoXC1 (* skoXC1 (+ (/ (- 1.) 6.) (* skoXC1 (* skoXC1 (/ (- 3.) 40.)))))))) 0.)))))))))))))))))))))))))))))))))))))

% In GRF format:
(sequent " MetiTarski formula " (antecedent (<= (* skoXC1 (+ (- 1.) (* skoXC1 (* skoXC1 (+ (/ (- 1.) 6.) (* skoXC1 (* skoXC1 (+ (/ (- 3.) 40.) (* skoXC1 (* skoXC1 (/ (- 5.) 112.))))))))))) 0.) (<= (* skoXC1 skoXC1) 1.) (> (* skoXC1 (* skoXC1 (+ (/ 1. 6.) (* skoXC1 (* skoXC1 (+ (/ 3. 40.) (* skoXC1 (* skoXC1 (/ 5. 112.))))))))) (- 1.)) (<= (* skoXC1 (* skoXC1 (* skoXC1 (* skoXC1 (+ (/ 32. 15.) (* skoXC1 (* skoXC1 (+ (/ (- 272.) 105.) (* skoXC1 (* skoXC1 (+ (/ (- 1163.) 105.) (* skoXC1 (* skoXC1 (+ (/ 1753. 105.) (* skoXC1 (* skoXC1 (+ (/ (- 169.) 28.) (* skoXC1 (* skoXC1 (/ 25. 56.)))))))))))))))))))) 0.) (<= (* skoXC1 (* skoXC1 (+ (/ 1. 3.) (* skoXC1 (* skoXC1 (+ (/ 3. 20.) (* skoXC1 (* skoXC1 (/ 5. 56.))))))))) 1.) (<= (* skoXC1 (* skoXC1 (* skoXC1 (* skoXC1 (+ (/ (- 17.) 120.) (* skoXC1 (* skoXC1 (+ (/ (- 27.) 280.) (* skoXC1 (* skoXC1 (/ 5. 224.))))))))))) 0.) (<= (* skoXC1 (* skoXC1 (* skoXC1 (* skoXC1 (+ (/ (- 13.) 60.) (* skoXC1 (* skoXC1 (+ (/ (- 9.) 280.) (* skoXC1 (* skoXC1 (/ (- 5.) 28.))))))))))) 0.) (<= (* skoXC1 (* skoXC1 (+ (/ (- 1.) 2.) (* skoXC1 (* skoXC1 (+ (/ 7. 120.) (* skoXC1 (* skoXC1 (+ (/ 33. 560.) (* skoXC1 (* skoXC1 (/ (- 5.) 112.)))))))))))) 0.) (<= (* skoXC1 (* skoXC1 (+ (/ (- 1.) 6.) (* skoXC1 (* skoXC1 (+ (/ (- 3.) 40.) (* skoXC1 (* skoXC1 (/ (- 5.) 112.))))))))) 1.) (<= (* skoXC1 (+ (- 1.) (* skoXC1 (* skoXC1 (+ (/ 1. 3.) (* skoXC1 (* skoXC1 (+ (/ 3. 20.) (* skoXC1 (* skoXC1 (/ 5. 56.))))))))))) 0.) (<= (* skoXC1 (* skoXC1 (* skoXC1 (* skoXC1 (+ (/ (- 80.) 3.) (* skoXC1 (* skoXC1 (+ (/ 128. 3.) (* skoXC1 (* skoXC1 (+ (/ (- 55.) 3.) (* skoXC1 (* skoXC1 (/ 5. 3.)))))))))))))) 0.) (<= (* skoXC1 (* skoXC1 (+ 256. (* skoXC1 (* skoXC1 (+ (- 160.) (* skoXC1 (* skoXC1 (+ 32. (* skoXC1 (* skoXC1 (- 1.)))))))))))) 128.) (<= (* skoXC1 (* skoXC1 (/ 1. 3.))) 1.) (<= (* skoXC1 (+ (- 1.) (* skoXC1 (* skoXC1 (/ (- 1.) 6.))))) 0.) (<= (* skoXC1 (* skoXC1 (* skoXC1 (* skoXC1 (/ (- 2.) 3.))))) 0.) (<= (* skoXC1 skoXC1) 2.) (<= (* skoXC1 (* skoXC1 (+ (/ (- 1.) 2.) (* skoXC1 (* skoXC1 (/ (- 1.) 6.)))))) 0.) (<= (* skoXC1 (* skoXC1 (/ (- 1.) 6.))) 1.) (<= (* skoXC1 (+ (- 1.) (* skoXC1 (* skoXC1 (/ 1. 3.))))) 0.) (> (/ 7. 8.) skoXC1) (> skoXC1 0.) (> (* skoXC1 (* skoXC1 (/ (- 1.) 2.))) (- 3.)) (<= (* skoXC1 (* skoXC1 (/ 1. 2.))) 3.) (<= (* skoXC1 (* skoXC1 (+ 24. (* skoXC1 (* skoXC1 (+ (- 10.) (* skoXC1 skoXC1))))))) 16.) (> (* skoXC1 (* skoXC1 (+ (- 80.) (* skoXC1 (* skoXC1 (+ 40. (* skoXC1 (* skoXC1 (+ (- 6.) (* skoXC1 (* skoXC1 (/ 1. 8.)))))))))))) (- 48.)) (<= (* skoXC1 (* skoXC1 (+ 80. (* skoXC1 (* skoXC1 (+ (- 40.) (* skoXC1 (* skoXC1 (+ 6. (* skoXC1 (* skoXC1 (/ (- 1.) 8.)))))))))))) 48.) (> (* skoXC1 skoXC1) 0.) (<= (* skoXC1 (+ (- 1.) (* skoXC1 (* skoXC1 (+ (/ 1. 3.) (* skoXC1 (* skoXC1 (/ 3. 20.)))))))) 0.) (<= (* skoXC1 (* skoXC1 (+ (/ (- 1.) 6.) (* skoXC1 (* skoXC1 (/ (- 3.) 40.)))))) 1.) (<= (* skoXC1 (* skoXC1 (+ (/ (- 1.) 2.) (* skoXC1 (* skoXC1 (+ (/ 7. 120.) (* skoXC1 (* skoXC1 (/ (- 3.) 40.))))))))) 0.) (<= (* skoXC1 (* skoXC1 (* skoXC1 (* skoXC1 (+ (/ (- 13.) 60.) (* skoXC1 (* skoXC1 (/ (- 3.) 10.)))))))) 0.) (<= (* skoXC1 (* skoXC1 (* skoXC1 (* skoXC1 (+ (/ (- 17.) 120.) (* skoXC1 (* skoXC1 (/ 3. 80.)))))))) 0.) (<= (* skoXC1 (* skoXC1 (+ (/ 1. 3.) (* skoXC1 (* skoXC1 (/ 3. 20.)))))) 1.) (<= (* skoXC1 (* skoXC1 (* skoXC1 (* skoXC1 (+ (/ 32. 15.) (* skoXC1 (* skoXC1 (+ (/ (- 296.) 15.) (* skoXC1 (* skoXC1 (+ (/ 391. 15.) (* skoXC1 (* skoXC1 (+ (/ (- 146.) 15.) (* skoXC1 (* skoXC1 (/ 3. 4.))))))))))))))))) 0.) (> (* skoXC1 (* skoXC1 (+ (/ 1. 6.) (* skoXC1 (* skoXC1 (/ 3. 40.)))))) (- 1.))) (succedent (> (* skoXC1 (+ (- 1.) (* skoXC1 (* skoXC1 (+ (/ (- 1.) 6.) (* skoXC1 (* skoXC1 (/ (- 3.) 40.)))))))) 0.)))
-----[end problem]-----

-----[begin problem]-----
% In Mathematica format:
Timing[Resolve[Exists[{skoXC1}, And[skoXC1*skoXC1*((-1/6)+skoXC1*skoXC1*((-3/40)+skoXC1*skoXC1*(-5/112)))<=1,skoXC1*skoXC1*((1/6)+skoXC1*skoXC1*((3/40)+skoXC1*skoXC1*(5/112)))>-1,skoXC1*skoXC1*skoXC1*skoXC1*((32/15)+skoXC1*skoXC1*((-272/105)+skoXC1*skoXC1*((-1163/105)+skoXC1*skoXC1*((1753/105)+skoXC1*skoXC1*((-169/28)+skoXC1*skoXC1*(25/56))))))<=0,skoXC1*skoXC1*((1/3)+skoXC1*skoXC1*((3/20)+skoXC1*skoXC1*(5/56)))<=1,skoXC1*skoXC1*skoXC1*skoXC1*((-17/120)+skoXC1*skoXC1*((-27/280)+skoXC1*skoXC1*(5/224)))<=0,skoXC1*skoXC1*skoXC1*skoXC1*((-13/60)+skoXC1*skoXC1*((-9/280)+skoXC1*skoXC1*(-5/28)))<=0,skoXC1*skoXC1*((-1/2)+skoXC1*skoXC1*((7/120)+skoXC1*skoXC1*((33/560)+skoXC1*skoXC1*(-5/112))))<=0,skoXC1*skoXC1*((-1/6)+skoXC1*skoXC1*((-3/40)+skoXC1*skoXC1*(-5/112)))<=1,skoXC1*(-1+skoXC1*skoXC1*((1/3)+skoXC1*skoXC1*((3/20)+skoXC1*skoXC1*(5/56))))<=0,skoXC1*skoXC1*skoXC1*skoXC1*((-80/3)+skoXC1*skoXC1*((128/3)+skoXC1*skoXC1*((-55/3)+skoXC1*skoXC1*(5/3))))<=0,skoXC1*skoXC1*(256+skoXC1*skoXC1*(-160+skoXC1*skoXC1*(32+skoXC1*skoXC1*-1)))<=128,skoXC1*skoXC1*(1/3)<=1,skoXC1*(-1+skoXC1*skoXC1*(-1/6))<=0,skoXC1*skoXC1*skoXC1*skoXC1*(-2/3)<=0,skoXC1*skoXC1<=2,skoXC1*skoXC1*((-1/2)+skoXC1*skoXC1*(-1/6))<=0,skoXC1*skoXC1*(-1/6)<=1,skoXC1*(-1+skoXC1*skoXC1*(1/3))<=0,(7/8)>skoXC1,skoXC1>0,skoXC1*skoXC1*(-1/2)>-3,skoXC1*skoXC1*(1/2)<=3,skoXC1*skoXC1*(24+skoXC1*skoXC1*(-10+skoXC1*skoXC1))<=16,skoXC1*skoXC1*(-80+skoXC1*skoXC1*(40+skoXC1*skoXC1*(-6+skoXC1*skoXC1*(1/8))))>-48,skoXC1*skoXC1*(80+skoXC1*skoXC1*(-40+skoXC1*skoXC1*(6+skoXC1*skoXC1*(-1/8))))<=48,skoXC1*skoXC1>0,skoXC1*(-1+skoXC1*skoXC1*((1/3)+skoXC1*skoXC1*(3/20)))<=0,skoXC1*skoXC1*((-1/6)+skoXC1*skoXC1*(-3/40))<=1,skoXC1*skoXC1*((-1/2)+skoXC1*skoXC1*((7/120)+skoXC1*skoXC1*(-3/40)))<=0,skoXC1*skoXC1*skoXC1*skoXC1*((-13/60)+skoXC1*skoXC1*(-3/10))<=0,skoXC1*skoXC1*skoXC1*skoXC1*((-17/120)+skoXC1*skoXC1*(3/80))<=0,skoXC1*skoXC1*((1/3)+skoXC1*skoXC1*(3/20))<=1,skoXC1*skoXC1*skoXC1*skoXC1*((32/15)+skoXC1*skoXC1*((-296/15)+skoXC1*skoXC1*((391/15)+skoXC1*skoXC1*((-146/15)+skoXC1*skoXC1*(3/4)))))<=0,skoXC1*skoXC1*((1/6)+skoXC1*skoXC1*(3/40))>-1,skoXC1*(-1+skoXC1*skoXC1*((-1/6)+skoXC1*skoXC1*(-3/40)))<=0]], Reals]]

% In QepcadB format:
(E skoXC1) [[(skoXC1 skoXC1 (-1/6+(skoXC1 skoXC1 (-3/40+(skoXC1 skoXC1 (-5/112))))))<=1]/\[[-1<(skoXC1 skoXC1 (1/6+(skoXC1 skoXC1 (3/40+(skoXC1 skoXC1 (5/112))))))]/\[[(skoXC1 skoXC1 skoXC1 skoXC1 (32/15+(skoXC1 skoXC1 (-272/105+(skoXC1 skoXC1 (-1163/105+(skoXC1 skoXC1 (1753/105+(skoXC1 skoXC1 (-169/28+(skoXC1 skoXC1 (25/56))))))))))))<=0]/\[[(skoXC1 skoXC1 (1/3+(skoXC1 skoXC1 (3/20+(skoXC1 skoXC1 (5/56))))))<=1]/\[[(skoXC1 skoXC1 skoXC1 skoXC1 (-17/120+(skoXC1 skoXC1 (-27/280+(skoXC1 skoXC1 (5/224))))))<=0]/\[[(skoXC1 skoXC1 skoXC1 skoXC1 (-13/60+(skoXC1 skoXC1 (-9/280+(skoXC1 skoXC1 (-5/28))))))<=0]/\[[(skoXC1 skoXC1 (-1/2+(skoXC1 skoXC1 (7/120+(skoXC1 skoXC1 (33/560+(skoXC1 skoXC1 (-5/112))))))))<=0]/\[[(skoXC1 skoXC1 (-1/6+(skoXC1 skoXC1 (-3/40+(skoXC1 skoXC1 (-5/112))))))<=1]/\[[(skoXC1 (-1+(skoXC1 skoXC1 (1/3+(skoXC1 skoXC1 (3/20+(skoXC1 skoXC1 (5/56))))))))<=0]/\[[(skoXC1 skoXC1 skoXC1 skoXC1 (-80/3+(skoXC1 skoXC1 (128/3+(skoXC1 skoXC1 (-55/3+(skoXC1 skoXC1 (5/3))))))))<=0]/\[[(skoXC1 skoXC1 (256+(skoXC1 skoXC1 (-160+(skoXC1 skoXC1 (32+(skoXC1 skoXC1 (-1))))))))<=128]/\[[(skoXC1 skoXC1 (1/3))<=1]/\[[(skoXC1 (-1+(skoXC1 skoXC1 (-1/6))))<=0]/\[[(skoXC1 skoXC1 skoXC1 skoXC1 (-2/3))<=0]/\[[(skoXC1 skoXC1)<=2]/\[[(skoXC1 skoXC1 (-1/2+(skoXC1 skoXC1 (-1/6))))<=0]/\[[(skoXC1 skoXC1 (-1/6))<=1]/\[[(skoXC1 (-1+(skoXC1 skoXC1 (1/3))))<=0]/\[[skoXC1<7/8]/\[[0<skoXC1]/\[[-3<(skoXC1 skoXC1 (-1/2))]/\[[(skoXC1 skoXC1 (1/2))<=3]/\[[(skoXC1 skoXC1 (24+(skoXC1 skoXC1 (-10+(skoXC1 skoXC1)))))<=16]/\[[-48<(skoXC1 skoXC1 (-80+(skoXC1 skoXC1 (40+(skoXC1 skoXC1 (-6+(skoXC1 skoXC1 (1/8))))))))]/\[[(skoXC1 skoXC1 (80+(skoXC1 skoXC1 (-40+(skoXC1 skoXC1 (6+(skoXC1 skoXC1 (-1/8))))))))<=48]/\[[0<(skoXC1 skoXC1)]/\[[(skoXC1 (-1+(skoXC1 skoXC1 (1/3+(skoXC1 skoXC1 (3/20))))))<=0]/\[[(skoXC1 skoXC1 (-1/6+(skoXC1 skoXC1 (-3/40))))<=1]/\[[(skoXC1 skoXC1 (-1/2+(skoXC1 skoXC1 (7/120+(skoXC1 skoXC1 (-3/40))))))<=0]/\[[(skoXC1 skoXC1 skoXC1 skoXC1 (-13/60+(skoXC1 skoXC1 (-3/10))))<=0]/\[[(skoXC1 skoXC1 skoXC1 skoXC1 (-17/120+(skoXC1 skoXC1 (3/80))))<=0]/\[[(skoXC1 skoXC1 (1/3+(skoXC1 skoXC1 (3/20))))<=1]/\[[(skoXC1 skoXC1 skoXC1 skoXC1 (32/15+(skoXC1 skoXC1 (-296/15+(skoXC1 skoXC1 (391/15+(skoXC1 skoXC1 (-146/15+(skoXC1 skoXC1 (3/4))))))))))<=0]/\[[-1<(skoXC1 skoXC1 (1/6+(skoXC1 skoXC1 (3/40))))]/\[(skoXC1 (-1+(skoXC1 skoXC1 (-1/6+(skoXC1 skoXC1 (-3/40))))))<=0]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]].

% In SMTLib2 format:
(declare-fun skoXC1 () Real) (assert (and (<= (* skoXC1 (* skoXC1 (+ (/ (- 1.) 6.) (* skoXC1 (* skoXC1 (+ (/ (- 3.) 40.) (* skoXC1 (* skoXC1 (/ (- 5.) 112.))))))))) 1.) (and (> (* skoXC1 (* skoXC1 (+ (/ 1. 6.) (* skoXC1 (* skoXC1 (+ (/ 3. 40.) (* skoXC1 (* skoXC1 (/ 5. 112.))))))))) (- 1.)) (and (<= (* skoXC1 (* skoXC1 (* skoXC1 (* skoXC1 (+ (/ 32. 15.) (* skoXC1 (* skoXC1 (+ (/ (- 272.) 105.) (* skoXC1 (* skoXC1 (+ (/ (- 1163.) 105.) (* skoXC1 (* skoXC1 (+ (/ 1753. 105.) (* skoXC1 (* skoXC1 (+ (/ (- 169.) 28.) (* skoXC1 (* skoXC1 (/ 25. 56.)))))))))))))))))))) 0.) (and (<= (* skoXC1 (* skoXC1 (+ (/ 1. 3.) (* skoXC1 (* skoXC1 (+ (/ 3. 20.) (* skoXC1 (* skoXC1 (/ 5. 56.))))))))) 1.) (and (<= (* skoXC1 (* skoXC1 (* skoXC1 (* skoXC1 (+ (/ (- 17.) 120.) (* skoXC1 (* skoXC1 (+ (/ (- 27.) 280.) (* skoXC1 (* skoXC1 (/ 5. 224.))))))))))) 0.) (and (<= (* skoXC1 (* skoXC1 (* skoXC1 (* skoXC1 (+ (/ (- 13.) 60.) (* skoXC1 (* skoXC1 (+ (/ (- 9.) 280.) (* skoXC1 (* skoXC1 (/ (- 5.) 28.))))))))))) 0.) (and (<= (* skoXC1 (* skoXC1 (+ (/ (- 1.) 2.) (* skoXC1 (* skoXC1 (+ (/ 7. 120.) (* skoXC1 (* skoXC1 (+ (/ 33. 560.) (* skoXC1 (* skoXC1 (/ (- 5.) 112.)))))))))))) 0.) (and (<= (* skoXC1 (* skoXC1 (+ (/ (- 1.) 6.) (* skoXC1 (* skoXC1 (+ (/ (- 3.) 40.) (* skoXC1 (* skoXC1 (/ (- 5.) 112.))))))))) 1.) (and (<= (* skoXC1 (+ (- 1.) (* skoXC1 (* skoXC1 (+ (/ 1. 3.) (* skoXC1 (* skoXC1 (+ (/ 3. 20.) (* skoXC1 (* skoXC1 (/ 5. 56.))))))))))) 0.) (and (<= (* skoXC1 (* skoXC1 (* skoXC1 (* skoXC1 (+ (/ (- 80.) 3.) (* skoXC1 (* skoXC1 (+ (/ 128. 3.) (* skoXC1 (* skoXC1 (+ (/ (- 55.) 3.) (* skoXC1 (* skoXC1 (/ 5. 3.)))))))))))))) 0.) (and (<= (* skoXC1 (* skoXC1 (+ 256. (* skoXC1 (* skoXC1 (+ (- 160.) (* skoXC1 (* skoXC1 (+ 32. (* skoXC1 (* skoXC1 (- 1.)))))))))))) 128.) (and (<= (* skoXC1 (* skoXC1 (/ 1. 3.))) 1.) (and (<= (* skoXC1 (+ (- 1.) (* skoXC1 (* skoXC1 (/ (- 1.) 6.))))) 0.) (and (<= (* skoXC1 (* skoXC1 (* skoXC1 (* skoXC1 (/ (- 2.) 3.))))) 0.) (and (<= (* skoXC1 skoXC1) 2.) (and (<= (* skoXC1 (* skoXC1 (+ (/ (- 1.) 2.) (* skoXC1 (* skoXC1 (/ (- 1.) 6.)))))) 0.) (and (<= (* skoXC1 (* skoXC1 (/ (- 1.) 6.))) 1.) (and (<= (* skoXC1 (+ (- 1.) (* skoXC1 (* skoXC1 (/ 1. 3.))))) 0.) (and (> (/ 7. 8.) skoXC1) (and (> skoXC1 0.) (and (> (* skoXC1 (* skoXC1 (/ (- 1.) 2.))) (- 3.)) (and (<= (* skoXC1 (* skoXC1 (/ 1. 2.))) 3.) (and (<= (* skoXC1 (* skoXC1 (+ 24. (* skoXC1 (* skoXC1 (+ (- 10.) (* skoXC1 skoXC1))))))) 16.) (and (> (* skoXC1 (* skoXC1 (+ (- 80.) (* skoXC1 (* skoXC1 (+ 40. (* skoXC1 (* skoXC1 (+ (- 6.) (* skoXC1 (* skoXC1 (/ 1. 8.)))))))))))) (- 48.)) (and (<= (* skoXC1 (* skoXC1 (+ 80. (* skoXC1 (* skoXC1 (+ (- 40.) (* skoXC1 (* skoXC1 (+ 6. (* skoXC1 (* skoXC1 (/ (- 1.) 8.)))))))))))) 48.) (and (> (* skoXC1 skoXC1) 0.) (and (<= (* skoXC1 (+ (- 1.) (* skoXC1 (* skoXC1 (+ (/ 1. 3.) (* skoXC1 (* skoXC1 (/ 3. 20.)))))))) 0.) (and (<= (* skoXC1 (* skoXC1 (+ (/ (- 1.) 6.) (* skoXC1 (* skoXC1 (/ (- 3.) 40.)))))) 1.) (and (<= (* skoXC1 (* skoXC1 (+ (/ (- 1.) 2.) (* skoXC1 (* skoXC1 (+ (/ 7. 120.) (* skoXC1 (* skoXC1 (/ (- 3.) 40.))))))))) 0.) (and (<= (* skoXC1 (* skoXC1 (* skoXC1 (* skoXC1 (+ (/ (- 13.) 60.) (* skoXC1 (* skoXC1 (/ (- 3.) 10.)))))))) 0.) (and (<= (* skoXC1 (* skoXC1 (* skoXC1 (* skoXC1 (+ (/ (- 17.) 120.) (* skoXC1 (* skoXC1 (/ 3. 80.)))))))) 0.) (and (<= (* skoXC1 (* skoXC1 (+ (/ 1. 3.) (* skoXC1 (* skoXC1 (/ 3. 20.)))))) 1.) (and (<= (* skoXC1 (* skoXC1 (* skoXC1 (* skoXC1 (+ (/ 32. 15.) (* skoXC1 (* skoXC1 (+ (/ (- 296.) 15.) (* skoXC1 (* skoXC1 (+ (/ 391. 15.) (* skoXC1 (* skoXC1 (+ (/ (- 146.) 15.) (* skoXC1 (* skoXC1 (/ 3. 4.))))))))))))))))) 0.) (and (> (* skoXC1 (* skoXC1 (+ (/ 1. 6.) (* skoXC1 (* skoXC1 (/ 3. 40.)))))) (- 1.)) (<= (* skoXC1 (+ (- 1.) (* skoXC1 (* skoXC1 (+ (/ (- 1.) 6.) (* skoXC1 (* skoXC1 (/ (- 3.) 40.)))))))) 0.))))))))))))))))))))))))))))))))))))

% In GRF format:
(sequent " MetiTarski formula " (antecedent (<= (* skoXC1 (* skoXC1 (+ (/ (- 1.) 6.) (* skoXC1 (* skoXC1 (+ (/ (- 3.) 40.) (* skoXC1 (* skoXC1 (/ (- 5.) 112.))))))))) 1.) (> (* skoXC1 (* skoXC1 (+ (/ 1. 6.) (* skoXC1 (* skoXC1 (+ (/ 3. 40.) (* skoXC1 (* skoXC1 (/ 5. 112.))))))))) (- 1.)) (<= (* skoXC1 (* skoXC1 (* skoXC1 (* skoXC1 (+ (/ 32. 15.) (* skoXC1 (* skoXC1 (+ (/ (- 272.) 105.) (* skoXC1 (* skoXC1 (+ (/ (- 1163.) 105.) (* skoXC1 (* skoXC1 (+ (/ 1753. 105.) (* skoXC1 (* skoXC1 (+ (/ (- 169.) 28.) (* skoXC1 (* skoXC1 (/ 25. 56.)))))))))))))))))))) 0.) (<= (* skoXC1 (* skoXC1 (+ (/ 1. 3.) (* skoXC1 (* skoXC1 (+ (/ 3. 20.) (* skoXC1 (* skoXC1 (/ 5. 56.))))))))) 1.) (<= (* skoXC1 (* skoXC1 (* skoXC1 (* skoXC1 (+ (/ (- 17.) 120.) (* skoXC1 (* skoXC1 (+ (/ (- 27.) 280.) (* skoXC1 (* skoXC1 (/ 5. 224.))))))))))) 0.) (<= (* skoXC1 (* skoXC1 (* skoXC1 (* skoXC1 (+ (/ (- 13.) 60.) (* skoXC1 (* skoXC1 (+ (/ (- 9.) 280.) (* skoXC1 (* skoXC1 (/ (- 5.) 28.))))))))))) 0.) (<= (* skoXC1 (* skoXC1 (+ (/ (- 1.) 2.) (* skoXC1 (* skoXC1 (+ (/ 7. 120.) (* skoXC1 (* skoXC1 (+ (/ 33. 560.) (* skoXC1 (* skoXC1 (/ (- 5.) 112.)))))))))))) 0.) (<= (* skoXC1 (* skoXC1 (+ (/ (- 1.) 6.) (* skoXC1 (* skoXC1 (+ (/ (- 3.) 40.) (* skoXC1 (* skoXC1 (/ (- 5.) 112.))))))))) 1.) (<= (* skoXC1 (+ (- 1.) (* skoXC1 (* skoXC1 (+ (/ 1. 3.) (* skoXC1 (* skoXC1 (+ (/ 3. 20.) (* skoXC1 (* skoXC1 (/ 5. 56.))))))))))) 0.) (<= (* skoXC1 (* skoXC1 (* skoXC1 (* skoXC1 (+ (/ (- 80.) 3.) (* skoXC1 (* skoXC1 (+ (/ 128. 3.) (* skoXC1 (* skoXC1 (+ (/ (- 55.) 3.) (* skoXC1 (* skoXC1 (/ 5. 3.)))))))))))))) 0.) (<= (* skoXC1 (* skoXC1 (+ 256. (* skoXC1 (* skoXC1 (+ (- 160.) (* skoXC1 (* skoXC1 (+ 32. (* skoXC1 (* skoXC1 (- 1.)))))))))))) 128.) (<= (* skoXC1 (* skoXC1 (/ 1. 3.))) 1.) (<= (* skoXC1 (+ (- 1.) (* skoXC1 (* skoXC1 (/ (- 1.) 6.))))) 0.) (<= (* skoXC1 (* skoXC1 (* skoXC1 (* skoXC1 (/ (- 2.) 3.))))) 0.) (<= (* skoXC1 skoXC1) 2.) (<= (* skoXC1 (* skoXC1 (+ (/ (- 1.) 2.) (* skoXC1 (* skoXC1 (/ (- 1.) 6.)))))) 0.) (<= (* skoXC1 (* skoXC1 (/ (- 1.) 6.))) 1.) (<= (* skoXC1 (+ (- 1.) (* skoXC1 (* skoXC1 (/ 1. 3.))))) 0.) (> (/ 7. 8.) skoXC1) (> skoXC1 0.) (> (* skoXC1 (* skoXC1 (/ (- 1.) 2.))) (- 3.)) (<= (* skoXC1 (* skoXC1 (/ 1. 2.))) 3.) (<= (* skoXC1 (* skoXC1 (+ 24. (* skoXC1 (* skoXC1 (+ (- 10.) (* skoXC1 skoXC1))))))) 16.) (> (* skoXC1 (* skoXC1 (+ (- 80.) (* skoXC1 (* skoXC1 (+ 40. (* skoXC1 (* skoXC1 (+ (- 6.) (* skoXC1 (* skoXC1 (/ 1. 8.)))))))))))) (- 48.)) (<= (* skoXC1 (* skoXC1 (+ 80. (* skoXC1 (* skoXC1 (+ (- 40.) (* skoXC1 (* skoXC1 (+ 6. (* skoXC1 (* skoXC1 (/ (- 1.) 8.)))))))))))) 48.) (> (* skoXC1 skoXC1) 0.) (<= (* skoXC1 (+ (- 1.) (* skoXC1 (* skoXC1 (+ (/ 1. 3.) (* skoXC1 (* skoXC1 (/ 3. 20.)))))))) 0.) (<= (* skoXC1 (* skoXC1 (+ (/ (- 1.) 6.) (* skoXC1 (* skoXC1 (/ (- 3.) 40.)))))) 1.) (<= (* skoXC1 (* skoXC1 (+ (/ (- 1.) 2.) (* skoXC1 (* skoXC1 (+ (/ 7. 120.) (* skoXC1 (* skoXC1 (/ (- 3.) 40.))))))))) 0.) (<= (* skoXC1 (* skoXC1 (* skoXC1 (* skoXC1 (+ (/ (- 13.) 60.) (* skoXC1 (* skoXC1 (/ (- 3.) 10.)))))))) 0.) (<= (* skoXC1 (* skoXC1 (* skoXC1 (* skoXC1 (+ (/ (- 17.) 120.) (* skoXC1 (* skoXC1 (/ 3. 80.)))))))) 0.) (<= (* skoXC1 (* skoXC1 (+ (/ 1. 3.) (* skoXC1 (* skoXC1 (/ 3. 20.)))))) 1.) (<= (* skoXC1 (* skoXC1 (* skoXC1 (* skoXC1 (+ (/ 32. 15.) (* skoXC1 (* skoXC1 (+ (/ (- 296.) 15.) (* skoXC1 (* skoXC1 (+ (/ 391. 15.) (* skoXC1 (* skoXC1 (+ (/ (- 146.) 15.) (* skoXC1 (* skoXC1 (/ 3. 4.))))))))))))))))) 0.) (> (* skoXC1 (* skoXC1 (+ (/ 1. 6.) (* skoXC1 (* skoXC1 (/ 3. 40.)))))) (- 1.))) (succedent (> (* skoXC1 (+ (- 1.) (* skoXC1 (* skoXC1 (+ (/ (- 1.) 6.) (* skoXC1 (* skoXC1 (/ (- 3.) 40.)))))))) 0.)))
-----[end problem]-----

-----[begin problem]-----
% In Mathematica format:
Timing[Resolve[Exists[{skoXC1}, And[skoXC1*skoXC1*skoXC1*skoXC1*((-17/120)+skoXC1*skoXC1*((-27/280)+skoXC1*skoXC1*(5/224)))<=0,skoXC1*skoXC1*((1/6)+skoXC1*skoXC1*((3/40)+skoXC1*skoXC1*(5/112)))>-1,skoXC1*skoXC1*((1/6)+skoXC1*skoXC1*((3/40)+skoXC1*skoXC1*(5/112)))>-1,skoXC1*skoXC1*skoXC1*skoXC1*((32/15)+skoXC1*skoXC1*((-272/105)+skoXC1*skoXC1*((-1163/105)+skoXC1*skoXC1*((1753/105)+skoXC1*skoXC1*((-169/28)+skoXC1*skoXC1*(25/56))))))<=0,skoXC1*skoXC1*((1/3)+skoXC1*skoXC1*((3/20)+skoXC1*skoXC1*(5/56)))<=1,skoXC1*skoXC1*skoXC1*skoXC1*((-17/120)+skoXC1*skoXC1*((-27/280)+skoXC1*skoXC1*(5/224)))<=0,skoXC1*skoXC1*skoXC1*skoXC1*((-13/60)+skoXC1*skoXC1*((-9/280)+skoXC1*skoXC1*(-5/28)))<=0,skoXC1*skoXC1*((-1/2)+skoXC1*skoXC1*((7/120)+skoXC1*skoXC1*((33/560)+skoXC1*skoXC1*(-5/112))))<=0,skoXC1*skoXC1*((-1/6)+skoXC1*skoXC1*((-3/40)+skoXC1*skoXC1*(-5/112)))<=1,skoXC1*(-1+skoXC1*skoXC1*((1/3)+skoXC1*skoXC1*((3/20)+skoXC1*skoXC1*(5/56))))<=0,skoXC1*skoXC1*skoXC1*skoXC1*((-80/3)+skoXC1*skoXC1*((128/3)+skoXC1*skoXC1*((-55/3)+skoXC1*skoXC1*(5/3))))<=0,skoXC1*skoXC1*(256+skoXC1*skoXC1*(-160+skoXC1*skoXC1*(32+skoXC1*skoXC1*-1)))<=128,skoXC1*skoXC1*(1/3)<=1,skoXC1*(-1+skoXC1*skoXC1*(-1/6))<=0,skoXC1*skoXC1*skoXC1*skoXC1*(-2/3)<=0,skoXC1*skoXC1<=2,skoXC1*skoXC1*((-1/2)+skoXC1*skoXC1*(-1/6))<=0,skoXC1*skoXC1*(-1/6)<=1,skoXC1*(-1+skoXC1*skoXC1*(1/3))<=0,(7/8)>skoXC1,skoXC1>0,skoXC1*skoXC1*(-1/2)>-3,skoXC1*skoXC1*(1/2)<=3,skoXC1*skoXC1*(24+skoXC1*skoXC1*(-10+skoXC1*skoXC1))<=16,skoXC1*skoXC1*(-80+skoXC1*skoXC1*(40+skoXC1*skoXC1*(-6+skoXC1*skoXC1*(1/8))))>-48,skoXC1*skoXC1*(80+skoXC1*skoXC1*(-40+skoXC1*skoXC1*(6+skoXC1*skoXC1*(-1/8))))<=48,skoXC1*skoXC1>0,skoXC1*(-1+skoXC1*skoXC1*((1/3)+skoXC1*skoXC1*(3/20)))<=0,skoXC1*skoXC1*((-1/6)+skoXC1*skoXC1*(-3/40))<=1,skoXC1*skoXC1*((-1/2)+skoXC1*skoXC1*((7/120)+skoXC1*skoXC1*(-3/40)))<=0,skoXC1*skoXC1*skoXC1*skoXC1*((-13/60)+skoXC1*skoXC1*(-3/10))<=0,skoXC1*skoXC1*skoXC1*skoXC1*((-17/120)+skoXC1*skoXC1*(3/80))<=0,skoXC1*skoXC1*((1/3)+skoXC1*skoXC1*(3/20))<=1,skoXC1*skoXC1*skoXC1*skoXC1*((32/15)+skoXC1*skoXC1*((-296/15)+skoXC1*skoXC1*((391/15)+skoXC1*skoXC1*((-146/15)+skoXC1*skoXC1*(3/4)))))<=0,skoXC1*skoXC1*((1/6)+skoXC1*skoXC1*(3/40))>-1,skoXC1*(-1+skoXC1*skoXC1*((-1/6)+skoXC1*skoXC1*(-3/40)))<=0]], Reals]]

% In QepcadB format:
(E skoXC1) [[(skoXC1 skoXC1 skoXC1 skoXC1 (-17/120+(skoXC1 skoXC1 (-27/280+(skoXC1 skoXC1 (5/224))))))<=0]/\[[-1<(skoXC1 skoXC1 (1/6+(skoXC1 skoXC1 (3/40+(skoXC1 skoXC1 (5/112))))))]/\[[-1<(skoXC1 skoXC1 (1/6+(skoXC1 skoXC1 (3/40+(skoXC1 skoXC1 (5/112))))))]/\[[(skoXC1 skoXC1 skoXC1 skoXC1 (32/15+(skoXC1 skoXC1 (-272/105+(skoXC1 skoXC1 (-1163/105+(skoXC1 skoXC1 (1753/105+(skoXC1 skoXC1 (-169/28+(skoXC1 skoXC1 (25/56))))))))))))<=0]/\[[(skoXC1 skoXC1 (1/3+(skoXC1 skoXC1 (3/20+(skoXC1 skoXC1 (5/56))))))<=1]/\[[(skoXC1 skoXC1 skoXC1 skoXC1 (-17/120+(skoXC1 skoXC1 (-27/280+(skoXC1 skoXC1 (5/224))))))<=0]/\[[(skoXC1 skoXC1 skoXC1 skoXC1 (-13/60+(skoXC1 skoXC1 (-9/280+(skoXC1 skoXC1 (-5/28))))))<=0]/\[[(skoXC1 skoXC1 (-1/2+(skoXC1 skoXC1 (7/120+(skoXC1 skoXC1 (33/560+(skoXC1 skoXC1 (-5/112))))))))<=0]/\[[(skoXC1 skoXC1 (-1/6+(skoXC1 skoXC1 (-3/40+(skoXC1 skoXC1 (-5/112))))))<=1]/\[[(skoXC1 (-1+(skoXC1 skoXC1 (1/3+(skoXC1 skoXC1 (3/20+(skoXC1 skoXC1 (5/56))))))))<=0]/\[[(skoXC1 skoXC1 skoXC1 skoXC1 (-80/3+(skoXC1 skoXC1 (128/3+(skoXC1 skoXC1 (-55/3+(skoXC1 skoXC1 (5/3))))))))<=0]/\[[(skoXC1 skoXC1 (256+(skoXC1 skoXC1 (-160+(skoXC1 skoXC1 (32+(skoXC1 skoXC1 (-1))))))))<=128]/\[[(skoXC1 skoXC1 (1/3))<=1]/\[[(skoXC1 (-1+(skoXC1 skoXC1 (-1/6))))<=0]/\[[(skoXC1 skoXC1 skoXC1 skoXC1 (-2/3))<=0]/\[[(skoXC1 skoXC1)<=2]/\[[(skoXC1 skoXC1 (-1/2+(skoXC1 skoXC1 (-1/6))))<=0]/\[[(skoXC1 skoXC1 (-1/6))<=1]/\[[(skoXC1 (-1+(skoXC1 skoXC1 (1/3))))<=0]/\[[skoXC1<7/8]/\[[0<skoXC1]/\[[-3<(skoXC1 skoXC1 (-1/2))]/\[[(skoXC1 skoXC1 (1/2))<=3]/\[[(skoXC1 skoXC1 (24+(skoXC1 skoXC1 (-10+(skoXC1 skoXC1)))))<=16]/\[[-48<(skoXC1 skoXC1 (-80+(skoXC1 skoXC1 (40+(skoXC1 skoXC1 (-6+(skoXC1 skoXC1 (1/8))))))))]/\[[(skoXC1 skoXC1 (80+(skoXC1 skoXC1 (-40+(skoXC1 skoXC1 (6+(skoXC1 skoXC1 (-1/8))))))))<=48]/\[[0<(skoXC1 skoXC1)]/\[[(skoXC1 (-1+(skoXC1 skoXC1 (1/3+(skoXC1 skoXC1 (3/20))))))<=0]/\[[(skoXC1 skoXC1 (-1/6+(skoXC1 skoXC1 (-3/40))))<=1]/\[[(skoXC1 skoXC1 (-1/2+(skoXC1 skoXC1 (7/120+(skoXC1 skoXC1 (-3/40))))))<=0]/\[[(skoXC1 skoXC1 skoXC1 skoXC1 (-13/60+(skoXC1 skoXC1 (-3/10))))<=0]/\[[(skoXC1 skoXC1 skoXC1 skoXC1 (-17/120+(skoXC1 skoXC1 (3/80))))<=0]/\[[(skoXC1 skoXC1 (1/3+(skoXC1 skoXC1 (3/20))))<=1]/\[[(skoXC1 skoXC1 skoXC1 skoXC1 (32/15+(skoXC1 skoXC1 (-296/15+(skoXC1 skoXC1 (391/15+(skoXC1 skoXC1 (-146/15+(skoXC1 skoXC1 (3/4))))))))))<=0]/\[[-1<(skoXC1 skoXC1 (1/6+(skoXC1 skoXC1 (3/40))))]/\[(skoXC1 (-1+(skoXC1 skoXC1 (-1/6+(skoXC1 skoXC1 (-3/40))))))<=0]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]].

% In SMTLib2 format:
(declare-fun skoXC1 () Real) (assert (and (<= (* skoXC1 (* skoXC1 (* skoXC1 (* skoXC1 (+ (/ (- 17.) 120.) (* skoXC1 (* skoXC1 (+ (/ (- 27.) 280.) (* skoXC1 (* skoXC1 (/ 5. 224.))))))))))) 0.) (and (> (* skoXC1 (* skoXC1 (+ (/ 1. 6.) (* skoXC1 (* skoXC1 (+ (/ 3. 40.) (* skoXC1 (* skoXC1 (/ 5. 112.))))))))) (- 1.)) (and (> (* skoXC1 (* skoXC1 (+ (/ 1. 6.) (* skoXC1 (* skoXC1 (+ (/ 3. 40.) (* skoXC1 (* skoXC1 (/ 5. 112.))))))))) (- 1.)) (and (<= (* skoXC1 (* skoXC1 (* skoXC1 (* skoXC1 (+ (/ 32. 15.) (* skoXC1 (* skoXC1 (+ (/ (- 272.) 105.) (* skoXC1 (* skoXC1 (+ (/ (- 1163.) 105.) (* skoXC1 (* skoXC1 (+ (/ 1753. 105.) (* skoXC1 (* skoXC1 (+ (/ (- 169.) 28.) (* skoXC1 (* skoXC1 (/ 25. 56.)))))))))))))))))))) 0.) (and (<= (* skoXC1 (* skoXC1 (+ (/ 1. 3.) (* skoXC1 (* skoXC1 (+ (/ 3. 20.) (* skoXC1 (* skoXC1 (/ 5. 56.))))))))) 1.) (and (<= (* skoXC1 (* skoXC1 (* skoXC1 (* skoXC1 (+ (/ (- 17.) 120.) (* skoXC1 (* skoXC1 (+ (/ (- 27.) 280.) (* skoXC1 (* skoXC1 (/ 5. 224.))))))))))) 0.) (and (<= (* skoXC1 (* skoXC1 (* skoXC1 (* skoXC1 (+ (/ (- 13.) 60.) (* skoXC1 (* skoXC1 (+ (/ (- 9.) 280.) (* skoXC1 (* skoXC1 (/ (- 5.) 28.))))))))))) 0.) (and (<= (* skoXC1 (* skoXC1 (+ (/ (- 1.) 2.) (* skoXC1 (* skoXC1 (+ (/ 7. 120.) (* skoXC1 (* skoXC1 (+ (/ 33. 560.) (* skoXC1 (* skoXC1 (/ (- 5.) 112.)))))))))))) 0.) (and (<= (* skoXC1 (* skoXC1 (+ (/ (- 1.) 6.) (* skoXC1 (* skoXC1 (+ (/ (- 3.) 40.) (* skoXC1 (* skoXC1 (/ (- 5.) 112.))))))))) 1.) (and (<= (* skoXC1 (+ (- 1.) (* skoXC1 (* skoXC1 (+ (/ 1. 3.) (* skoXC1 (* skoXC1 (+ (/ 3. 20.) (* skoXC1 (* skoXC1 (/ 5. 56.))))))))))) 0.) (and (<= (* skoXC1 (* skoXC1 (* skoXC1 (* skoXC1 (+ (/ (- 80.) 3.) (* skoXC1 (* skoXC1 (+ (/ 128. 3.) (* skoXC1 (* skoXC1 (+ (/ (- 55.) 3.) (* skoXC1 (* skoXC1 (/ 5. 3.)))))))))))))) 0.) (and (<= (* skoXC1 (* skoXC1 (+ 256. (* skoXC1 (* skoXC1 (+ (- 160.) (* skoXC1 (* skoXC1 (+ 32. (* skoXC1 (* skoXC1 (- 1.)))))))))))) 128.) (and (<= (* skoXC1 (* skoXC1 (/ 1. 3.))) 1.) (and (<= (* skoXC1 (+ (- 1.) (* skoXC1 (* skoXC1 (/ (- 1.) 6.))))) 0.) (and (<= (* skoXC1 (* skoXC1 (* skoXC1 (* skoXC1 (/ (- 2.) 3.))))) 0.) (and (<= (* skoXC1 skoXC1) 2.) (and (<= (* skoXC1 (* skoXC1 (+ (/ (- 1.) 2.) (* skoXC1 (* skoXC1 (/ (- 1.) 6.)))))) 0.) (and (<= (* skoXC1 (* skoXC1 (/ (- 1.) 6.))) 1.) (and (<= (* skoXC1 (+ (- 1.) (* skoXC1 (* skoXC1 (/ 1. 3.))))) 0.) (and (> (/ 7. 8.) skoXC1) (and (> skoXC1 0.) (and (> (* skoXC1 (* skoXC1 (/ (- 1.) 2.))) (- 3.)) (and (<= (* skoXC1 (* skoXC1 (/ 1. 2.))) 3.) (and (<= (* skoXC1 (* skoXC1 (+ 24. (* skoXC1 (* skoXC1 (+ (- 10.) (* skoXC1 skoXC1))))))) 16.) (and (> (* skoXC1 (* skoXC1 (+ (- 80.) (* skoXC1 (* skoXC1 (+ 40. (* skoXC1 (* skoXC1 (+ (- 6.) (* skoXC1 (* skoXC1 (/ 1. 8.)))))))))))) (- 48.)) (and (<= (* skoXC1 (* skoXC1 (+ 80. (* skoXC1 (* skoXC1 (+ (- 40.) (* skoXC1 (* skoXC1 (+ 6. (* skoXC1 (* skoXC1 (/ (- 1.) 8.)))))))))))) 48.) (and (> (* skoXC1 skoXC1) 0.) (and (<= (* skoXC1 (+ (- 1.) (* skoXC1 (* skoXC1 (+ (/ 1. 3.) (* skoXC1 (* skoXC1 (/ 3. 20.)))))))) 0.) (and (<= (* skoXC1 (* skoXC1 (+ (/ (- 1.) 6.) (* skoXC1 (* skoXC1 (/ (- 3.) 40.)))))) 1.) (and (<= (* skoXC1 (* skoXC1 (+ (/ (- 1.) 2.) (* skoXC1 (* skoXC1 (+ (/ 7. 120.) (* skoXC1 (* skoXC1 (/ (- 3.) 40.))))))))) 0.) (and (<= (* skoXC1 (* skoXC1 (* skoXC1 (* skoXC1 (+ (/ (- 13.) 60.) (* skoXC1 (* skoXC1 (/ (- 3.) 10.)))))))) 0.) (and (<= (* skoXC1 (* skoXC1 (* skoXC1 (* skoXC1 (+ (/ (- 17.) 120.) (* skoXC1 (* skoXC1 (/ 3. 80.)))))))) 0.) (and (<= (* skoXC1 (* skoXC1 (+ (/ 1. 3.) (* skoXC1 (* skoXC1 (/ 3. 20.)))))) 1.) (and (<= (* skoXC1 (* skoXC1 (* skoXC1 (* skoXC1 (+ (/ 32. 15.) (* skoXC1 (* skoXC1 (+ (/ (- 296.) 15.) (* skoXC1 (* skoXC1 (+ (/ 391. 15.) (* skoXC1 (* skoXC1 (+ (/ (- 146.) 15.) (* skoXC1 (* skoXC1 (/ 3. 4.))))))))))))))))) 0.) (and (> (* skoXC1 (* skoXC1 (+ (/ 1. 6.) (* skoXC1 (* skoXC1 (/ 3. 40.)))))) (- 1.)) (<= (* skoXC1 (+ (- 1.) (* skoXC1 (* skoXC1 (+ (/ (- 1.) 6.) (* skoXC1 (* skoXC1 (/ (- 3.) 40.)))))))) 0.)))))))))))))))))))))))))))))))))))))

% In GRF format:
(sequent " MetiTarski formula " (antecedent (<= (* skoXC1 (* skoXC1 (* skoXC1 (* skoXC1 (+ (/ (- 17.) 120.) (* skoXC1 (* skoXC1 (+ (/ (- 27.) 280.) (* skoXC1 (* skoXC1 (/ 5. 224.))))))))))) 0.) (> (* skoXC1 (* skoXC1 (+ (/ 1. 6.) (* skoXC1 (* skoXC1 (+ (/ 3. 40.) (* skoXC1 (* skoXC1 (/ 5. 112.))))))))) (- 1.)) (> (* skoXC1 (* skoXC1 (+ (/ 1. 6.) (* skoXC1 (* skoXC1 (+ (/ 3. 40.) (* skoXC1 (* skoXC1 (/ 5. 112.))))))))) (- 1.)) (<= (* skoXC1 (* skoXC1 (* skoXC1 (* skoXC1 (+ (/ 32. 15.) (* skoXC1 (* skoXC1 (+ (/ (- 272.) 105.) (* skoXC1 (* skoXC1 (+ (/ (- 1163.) 105.) (* skoXC1 (* skoXC1 (+ (/ 1753. 105.) (* skoXC1 (* skoXC1 (+ (/ (- 169.) 28.) (* skoXC1 (* skoXC1 (/ 25. 56.)))))))))))))))))))) 0.) (<= (* skoXC1 (* skoXC1 (+ (/ 1. 3.) (* skoXC1 (* skoXC1 (+ (/ 3. 20.) (* skoXC1 (* skoXC1 (/ 5. 56.))))))))) 1.) (<= (* skoXC1 (* skoXC1 (* skoXC1 (* skoXC1 (+ (/ (- 17.) 120.) (* skoXC1 (* skoXC1 (+ (/ (- 27.) 280.) (* skoXC1 (* skoXC1 (/ 5. 224.))))))))))) 0.) (<= (* skoXC1 (* skoXC1 (* skoXC1 (* skoXC1 (+ (/ (- 13.) 60.) (* skoXC1 (* skoXC1 (+ (/ (- 9.) 280.) (* skoXC1 (* skoXC1 (/ (- 5.) 28.))))))))))) 0.) (<= (* skoXC1 (* skoXC1 (+ (/ (- 1.) 2.) (* skoXC1 (* skoXC1 (+ (/ 7. 120.) (* skoXC1 (* skoXC1 (+ (/ 33. 560.) (* skoXC1 (* skoXC1 (/ (- 5.) 112.)))))))))))) 0.) (<= (* skoXC1 (* skoXC1 (+ (/ (- 1.) 6.) (* skoXC1 (* skoXC1 (+ (/ (- 3.) 40.) (* skoXC1 (* skoXC1 (/ (- 5.) 112.))))))))) 1.) (<= (* skoXC1 (+ (- 1.) (* skoXC1 (* skoXC1 (+ (/ 1. 3.) (* skoXC1 (* skoXC1 (+ (/ 3. 20.) (* skoXC1 (* skoXC1 (/ 5. 56.))))))))))) 0.) (<= (* skoXC1 (* skoXC1 (* skoXC1 (* skoXC1 (+ (/ (- 80.) 3.) (* skoXC1 (* skoXC1 (+ (/ 128. 3.) (* skoXC1 (* skoXC1 (+ (/ (- 55.) 3.) (* skoXC1 (* skoXC1 (/ 5. 3.)))))))))))))) 0.) (<= (* skoXC1 (* skoXC1 (+ 256. (* skoXC1 (* skoXC1 (+ (- 160.) (* skoXC1 (* skoXC1 (+ 32. (* skoXC1 (* skoXC1 (- 1.)))))))))))) 128.) (<= (* skoXC1 (* skoXC1 (/ 1. 3.))) 1.) (<= (* skoXC1 (+ (- 1.) (* skoXC1 (* skoXC1 (/ (- 1.) 6.))))) 0.) (<= (* skoXC1 (* skoXC1 (* skoXC1 (* skoXC1 (/ (- 2.) 3.))))) 0.) (<= (* skoXC1 skoXC1) 2.) (<= (* skoXC1 (* skoXC1 (+ (/ (- 1.) 2.) (* skoXC1 (* skoXC1 (/ (- 1.) 6.)))))) 0.) (<= (* skoXC1 (* skoXC1 (/ (- 1.) 6.))) 1.) (<= (* skoXC1 (+ (- 1.) (* skoXC1 (* skoXC1 (/ 1. 3.))))) 0.) (> (/ 7. 8.) skoXC1) (> skoXC1 0.) (> (* skoXC1 (* skoXC1 (/ (- 1.) 2.))) (- 3.)) (<= (* skoXC1 (* skoXC1 (/ 1. 2.))) 3.) (<= (* skoXC1 (* skoXC1 (+ 24. (* skoXC1 (* skoXC1 (+ (- 10.) (* skoXC1 skoXC1))))))) 16.) (> (* skoXC1 (* skoXC1 (+ (- 80.) (* skoXC1 (* skoXC1 (+ 40. (* skoXC1 (* skoXC1 (+ (- 6.) (* skoXC1 (* skoXC1 (/ 1. 8.)))))))))))) (- 48.)) (<= (* skoXC1 (* skoXC1 (+ 80. (* skoXC1 (* skoXC1 (+ (- 40.) (* skoXC1 (* skoXC1 (+ 6. (* skoXC1 (* skoXC1 (/ (- 1.) 8.)))))))))))) 48.) (> (* skoXC1 skoXC1) 0.) (<= (* skoXC1 (+ (- 1.) (* skoXC1 (* skoXC1 (+ (/ 1. 3.) (* skoXC1 (* skoXC1 (/ 3. 20.)))))))) 0.) (<= (* skoXC1 (* skoXC1 (+ (/ (- 1.) 6.) (* skoXC1 (* skoXC1 (/ (- 3.) 40.)))))) 1.) (<= (* skoXC1 (* skoXC1 (+ (/ (- 1.) 2.) (* skoXC1 (* skoXC1 (+ (/ 7. 120.) (* skoXC1 (* skoXC1 (/ (- 3.) 40.))))))))) 0.) (<= (* skoXC1 (* skoXC1 (* skoXC1 (* skoXC1 (+ (/ (- 13.) 60.) (* skoXC1 (* skoXC1 (/ (- 3.) 10.)))))))) 0.) (<= (* skoXC1 (* skoXC1 (* skoXC1 (* skoXC1 (+ (/ (- 17.) 120.) (* skoXC1 (* skoXC1 (/ 3. 80.)))))))) 0.) (<= (* skoXC1 (* skoXC1 (+ (/ 1. 3.) (* skoXC1 (* skoXC1 (/ 3. 20.)))))) 1.) (<= (* skoXC1 (* skoXC1 (* skoXC1 (* skoXC1 (+ (/ 32. 15.) (* skoXC1 (* skoXC1 (+ (/ (- 296.) 15.) (* skoXC1 (* skoXC1 (+ (/ 391. 15.) (* skoXC1 (* skoXC1 (+ (/ (- 146.) 15.) (* skoXC1 (* skoXC1 (/ 3. 4.))))))))))))))))) 0.) (> (* skoXC1 (* skoXC1 (+ (/ 1. 6.) (* skoXC1 (* skoXC1 (/ 3. 40.)))))) (- 1.))) (succedent (> (* skoXC1 (+ (- 1.) (* skoXC1 (* skoXC1 (+ (/ (- 1.) 6.) (* skoXC1 (* skoXC1 (/ (- 3.) 40.)))))))) 0.)))
-----[end problem]-----

-----[begin problem]-----
% In Mathematica format:
Timing[Resolve[Exists[{skoXC1}, And[skoXC1*skoXC1*((-1/6)+skoXC1*skoXC1*((-3/40)+skoXC1*skoXC1*(-5/112)))<=1,skoXC1*skoXC1*((1/6)+skoXC1*skoXC1*((3/40)+skoXC1*skoXC1*(5/112)))>-1,skoXC1*skoXC1*skoXC1*skoXC1*((32/15)+skoXC1*skoXC1*((-272/105)+skoXC1*skoXC1*((-1163/105)+skoXC1*skoXC1*((1753/105)+skoXC1*skoXC1*((-169/28)+skoXC1*skoXC1*(25/56))))))<=0,skoXC1*skoXC1*((1/3)+skoXC1*skoXC1*((3/20)+skoXC1*skoXC1*(5/56)))<=1,skoXC1*skoXC1*skoXC1*skoXC1*((-17/120)+skoXC1*skoXC1*((-27/280)+skoXC1*skoXC1*(5/224)))<=0,skoXC1*skoXC1*skoXC1*skoXC1*((-13/60)+skoXC1*skoXC1*((-9/280)+skoXC1*skoXC1*(-5/28)))<=0,skoXC1*skoXC1*((-1/2)+skoXC1*skoXC1*((7/120)+skoXC1*skoXC1*((33/560)+skoXC1*skoXC1*(-5/112))))<=0,skoXC1*skoXC1*((-1/6)+skoXC1*skoXC1*((-3/40)+skoXC1*skoXC1*(-5/112)))<=1,skoXC1*(-1+skoXC1*skoXC1*((1/3)+skoXC1*skoXC1*((3/20)+skoXC1*skoXC1*(5/56))))<=0,skoXC1*skoXC1*skoXC1*skoXC1*((-80/3)+skoXC1*skoXC1*((128/3)+skoXC1*skoXC1*((-55/3)+skoXC1*skoXC1*(5/3))))<=0,skoXC1*skoXC1*(256+skoXC1*skoXC1*(-160+skoXC1*skoXC1*(32+skoXC1*skoXC1*-1)))<=128,skoXC1*skoXC1*(1/3)<=1,skoXC1*(-1+skoXC1*skoXC1*(-1/6))<=0,skoXC1*skoXC1*skoXC1*skoXC1*(-2/3)<=0,skoXC1*skoXC1<=2,skoXC1*skoXC1*((-1/2)+skoXC1*skoXC1*(-1/6))<=0,skoXC1*skoXC1*(-1/6)<=1,skoXC1*(-1+skoXC1*skoXC1*(1/3))<=0,(7/8)>skoXC1,skoXC1>0,skoXC1*skoXC1*(-1/2)>-3,skoXC1*skoXC1*(1/2)<=3,skoXC1*skoXC1*(24+skoXC1*skoXC1*(-10+skoXC1*skoXC1))<=16,skoXC1*skoXC1*(-80+skoXC1*skoXC1*(40+skoXC1*skoXC1*(-6+skoXC1*skoXC1*(1/8))))>-48,skoXC1*skoXC1*(80+skoXC1*skoXC1*(-40+skoXC1*skoXC1*(6+skoXC1*skoXC1*(-1/8))))<=48,skoXC1*skoXC1>0,skoXC1*(-1+skoXC1*skoXC1*((1/3)+skoXC1*skoXC1*(3/20)))<=0,skoXC1*skoXC1*((-1/6)+skoXC1*skoXC1*(-3/40))<=1,skoXC1*skoXC1*((-1/2)+skoXC1*skoXC1*((7/120)+skoXC1*skoXC1*(-3/40)))<=0,skoXC1*skoXC1*skoXC1*skoXC1*((-13/60)+skoXC1*skoXC1*(-3/10))<=0,skoXC1*skoXC1*skoXC1*skoXC1*((-17/120)+skoXC1*skoXC1*(3/80))<=0,skoXC1*skoXC1*((1/3)+skoXC1*skoXC1*(3/20))<=1,skoXC1*skoXC1*skoXC1*skoXC1*((32/15)+skoXC1*skoXC1*((-296/15)+skoXC1*skoXC1*((391/15)+skoXC1*skoXC1*((-146/15)+skoXC1*skoXC1*(3/4)))))<=0,skoXC1*skoXC1*((1/6)+skoXC1*skoXC1*(3/40))>-1,skoXC1*(-1+skoXC1*skoXC1*((-1/6)+skoXC1*skoXC1*(-3/40)))<=0]], Reals]]

% In QepcadB format:
(E skoXC1) [[(skoXC1 skoXC1 (-1/6+(skoXC1 skoXC1 (-3/40+(skoXC1 skoXC1 (-5/112))))))<=1]/\[[-1<(skoXC1 skoXC1 (1/6+(skoXC1 skoXC1 (3/40+(skoXC1 skoXC1 (5/112))))))]/\[[(skoXC1 skoXC1 skoXC1 skoXC1 (32/15+(skoXC1 skoXC1 (-272/105+(skoXC1 skoXC1 (-1163/105+(skoXC1 skoXC1 (1753/105+(skoXC1 skoXC1 (-169/28+(skoXC1 skoXC1 (25/56))))))))))))<=0]/\[[(skoXC1 skoXC1 (1/3+(skoXC1 skoXC1 (3/20+(skoXC1 skoXC1 (5/56))))))<=1]/\[[(skoXC1 skoXC1 skoXC1 skoXC1 (-17/120+(skoXC1 skoXC1 (-27/280+(skoXC1 skoXC1 (5/224))))))<=0]/\[[(skoXC1 skoXC1 skoXC1 skoXC1 (-13/60+(skoXC1 skoXC1 (-9/280+(skoXC1 skoXC1 (-5/28))))))<=0]/\[[(skoXC1 skoXC1 (-1/2+(skoXC1 skoXC1 (7/120+(skoXC1 skoXC1 (33/560+(skoXC1 skoXC1 (-5/112))))))))<=0]/\[[(skoXC1 skoXC1 (-1/6+(skoXC1 skoXC1 (-3/40+(skoXC1 skoXC1 (-5/112))))))<=1]/\[[(skoXC1 (-1+(skoXC1 skoXC1 (1/3+(skoXC1 skoXC1 (3/20+(skoXC1 skoXC1 (5/56))))))))<=0]/\[[(skoXC1 skoXC1 skoXC1 skoXC1 (-80/3+(skoXC1 skoXC1 (128/3+(skoXC1 skoXC1 (-55/3+(skoXC1 skoXC1 (5/3))))))))<=0]/\[[(skoXC1 skoXC1 (256+(skoXC1 skoXC1 (-160+(skoXC1 skoXC1 (32+(skoXC1 skoXC1 (-1))))))))<=128]/\[[(skoXC1 skoXC1 (1/3))<=1]/\[[(skoXC1 (-1+(skoXC1 skoXC1 (-1/6))))<=0]/\[[(skoXC1 skoXC1 skoXC1 skoXC1 (-2/3))<=0]/\[[(skoXC1 skoXC1)<=2]/\[[(skoXC1 skoXC1 (-1/2+(skoXC1 skoXC1 (-1/6))))<=0]/\[[(skoXC1 skoXC1 (-1/6))<=1]/\[[(skoXC1 (-1+(skoXC1 skoXC1 (1/3))))<=0]/\[[skoXC1<7/8]/\[[0<skoXC1]/\[[-3<(skoXC1 skoXC1 (-1/2))]/\[[(skoXC1 skoXC1 (1/2))<=3]/\[[(skoXC1 skoXC1 (24+(skoXC1 skoXC1 (-10+(skoXC1 skoXC1)))))<=16]/\[[-48<(skoXC1 skoXC1 (-80+(skoXC1 skoXC1 (40+(skoXC1 skoXC1 (-6+(skoXC1 skoXC1 (1/8))))))))]/\[[(skoXC1 skoXC1 (80+(skoXC1 skoXC1 (-40+(skoXC1 skoXC1 (6+(skoXC1 skoXC1 (-1/8))))))))<=48]/\[[0<(skoXC1 skoXC1)]/\[[(skoXC1 (-1+(skoXC1 skoXC1 (1/3+(skoXC1 skoXC1 (3/20))))))<=0]/\[[(skoXC1 skoXC1 (-1/6+(skoXC1 skoXC1 (-3/40))))<=1]/\[[(skoXC1 skoXC1 (-1/2+(skoXC1 skoXC1 (7/120+(skoXC1 skoXC1 (-3/40))))))<=0]/\[[(skoXC1 skoXC1 skoXC1 skoXC1 (-13/60+(skoXC1 skoXC1 (-3/10))))<=0]/\[[(skoXC1 skoXC1 skoXC1 skoXC1 (-17/120+(skoXC1 skoXC1 (3/80))))<=0]/\[[(skoXC1 skoXC1 (1/3+(skoXC1 skoXC1 (3/20))))<=1]/\[[(skoXC1 skoXC1 skoXC1 skoXC1 (32/15+(skoXC1 skoXC1 (-296/15+(skoXC1 skoXC1 (391/15+(skoXC1 skoXC1 (-146/15+(skoXC1 skoXC1 (3/4))))))))))<=0]/\[[-1<(skoXC1 skoXC1 (1/6+(skoXC1 skoXC1 (3/40))))]/\[(skoXC1 (-1+(skoXC1 skoXC1 (-1/6+(skoXC1 skoXC1 (-3/40))))))<=0]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]].

% In SMTLib2 format:
(declare-fun skoXC1 () Real) (assert (and (<= (* skoXC1 (* skoXC1 (+ (/ (- 1.) 6.) (* skoXC1 (* skoXC1 (+ (/ (- 3.) 40.) (* skoXC1 (* skoXC1 (/ (- 5.) 112.))))))))) 1.) (and (> (* skoXC1 (* skoXC1 (+ (/ 1. 6.) (* skoXC1 (* skoXC1 (+ (/ 3. 40.) (* skoXC1 (* skoXC1 (/ 5. 112.))))))))) (- 1.)) (and (<= (* skoXC1 (* skoXC1 (* skoXC1 (* skoXC1 (+ (/ 32. 15.) (* skoXC1 (* skoXC1 (+ (/ (- 272.) 105.) (* skoXC1 (* skoXC1 (+ (/ (- 1163.) 105.) (* skoXC1 (* skoXC1 (+ (/ 1753. 105.) (* skoXC1 (* skoXC1 (+ (/ (- 169.) 28.) (* skoXC1 (* skoXC1 (/ 25. 56.)))))))))))))))))))) 0.) (and (<= (* skoXC1 (* skoXC1 (+ (/ 1. 3.) (* skoXC1 (* skoXC1 (+ (/ 3. 20.) (* skoXC1 (* skoXC1 (/ 5. 56.))))))))) 1.) (and (<= (* skoXC1 (* skoXC1 (* skoXC1 (* skoXC1 (+ (/ (- 17.) 120.) (* skoXC1 (* skoXC1 (+ (/ (- 27.) 280.) (* skoXC1 (* skoXC1 (/ 5. 224.))))))))))) 0.) (and (<= (* skoXC1 (* skoXC1 (* skoXC1 (* skoXC1 (+ (/ (- 13.) 60.) (* skoXC1 (* skoXC1 (+ (/ (- 9.) 280.) (* skoXC1 (* skoXC1 (/ (- 5.) 28.))))))))))) 0.) (and (<= (* skoXC1 (* skoXC1 (+ (/ (- 1.) 2.) (* skoXC1 (* skoXC1 (+ (/ 7. 120.) (* skoXC1 (* skoXC1 (+ (/ 33. 560.) (* skoXC1 (* skoXC1 (/ (- 5.) 112.)))))))))))) 0.) (and (<= (* skoXC1 (* skoXC1 (+ (/ (- 1.) 6.) (* skoXC1 (* skoXC1 (+ (/ (- 3.) 40.) (* skoXC1 (* skoXC1 (/ (- 5.) 112.))))))))) 1.) (and (<= (* skoXC1 (+ (- 1.) (* skoXC1 (* skoXC1 (+ (/ 1. 3.) (* skoXC1 (* skoXC1 (+ (/ 3. 20.) (* skoXC1 (* skoXC1 (/ 5. 56.))))))))))) 0.) (and (<= (* skoXC1 (* skoXC1 (* skoXC1 (* skoXC1 (+ (/ (- 80.) 3.) (* skoXC1 (* skoXC1 (+ (/ 128. 3.) (* skoXC1 (* skoXC1 (+ (/ (- 55.) 3.) (* skoXC1 (* skoXC1 (/ 5. 3.)))))))))))))) 0.) (and (<= (* skoXC1 (* skoXC1 (+ 256. (* skoXC1 (* skoXC1 (+ (- 160.) (* skoXC1 (* skoXC1 (+ 32. (* skoXC1 (* skoXC1 (- 1.)))))))))))) 128.) (and (<= (* skoXC1 (* skoXC1 (/ 1. 3.))) 1.) (and (<= (* skoXC1 (+ (- 1.) (* skoXC1 (* skoXC1 (/ (- 1.) 6.))))) 0.) (and (<= (* skoXC1 (* skoXC1 (* skoXC1 (* skoXC1 (/ (- 2.) 3.))))) 0.) (and (<= (* skoXC1 skoXC1) 2.) (and (<= (* skoXC1 (* skoXC1 (+ (/ (- 1.) 2.) (* skoXC1 (* skoXC1 (/ (- 1.) 6.)))))) 0.) (and (<= (* skoXC1 (* skoXC1 (/ (- 1.) 6.))) 1.) (and (<= (* skoXC1 (+ (- 1.) (* skoXC1 (* skoXC1 (/ 1. 3.))))) 0.) (and (> (/ 7. 8.) skoXC1) (and (> skoXC1 0.) (and (> (* skoXC1 (* skoXC1 (/ (- 1.) 2.))) (- 3.)) (and (<= (* skoXC1 (* skoXC1 (/ 1. 2.))) 3.) (and (<= (* skoXC1 (* skoXC1 (+ 24. (* skoXC1 (* skoXC1 (+ (- 10.) (* skoXC1 skoXC1))))))) 16.) (and (> (* skoXC1 (* skoXC1 (+ (- 80.) (* skoXC1 (* skoXC1 (+ 40. (* skoXC1 (* skoXC1 (+ (- 6.) (* skoXC1 (* skoXC1 (/ 1. 8.)))))))))))) (- 48.)) (and (<= (* skoXC1 (* skoXC1 (+ 80. (* skoXC1 (* skoXC1 (+ (- 40.) (* skoXC1 (* skoXC1 (+ 6. (* skoXC1 (* skoXC1 (/ (- 1.) 8.)))))))))))) 48.) (and (> (* skoXC1 skoXC1) 0.) (and (<= (* skoXC1 (+ (- 1.) (* skoXC1 (* skoXC1 (+ (/ 1. 3.) (* skoXC1 (* skoXC1 (/ 3. 20.)))))))) 0.) (and (<= (* skoXC1 (* skoXC1 (+ (/ (- 1.) 6.) (* skoXC1 (* skoXC1 (/ (- 3.) 40.)))))) 1.) (and (<= (* skoXC1 (* skoXC1 (+ (/ (- 1.) 2.) (* skoXC1 (* skoXC1 (+ (/ 7. 120.) (* skoXC1 (* skoXC1 (/ (- 3.) 40.))))))))) 0.) (and (<= (* skoXC1 (* skoXC1 (* skoXC1 (* skoXC1 (+ (/ (- 13.) 60.) (* skoXC1 (* skoXC1 (/ (- 3.) 10.)))))))) 0.) (and (<= (* skoXC1 (* skoXC1 (* skoXC1 (* skoXC1 (+ (/ (- 17.) 120.) (* skoXC1 (* skoXC1 (/ 3. 80.)))))))) 0.) (and (<= (* skoXC1 (* skoXC1 (+ (/ 1. 3.) (* skoXC1 (* skoXC1 (/ 3. 20.)))))) 1.) (and (<= (* skoXC1 (* skoXC1 (* skoXC1 (* skoXC1 (+ (/ 32. 15.) (* skoXC1 (* skoXC1 (+ (/ (- 296.) 15.) (* skoXC1 (* skoXC1 (+ (/ 391. 15.) (* skoXC1 (* skoXC1 (+ (/ (- 146.) 15.) (* skoXC1 (* skoXC1 (/ 3. 4.))))))))))))))))) 0.) (and (> (* skoXC1 (* skoXC1 (+ (/ 1. 6.) (* skoXC1 (* skoXC1 (/ 3. 40.)))))) (- 1.)) (<= (* skoXC1 (+ (- 1.) (* skoXC1 (* skoXC1 (+ (/ (- 1.) 6.) (* skoXC1 (* skoXC1 (/ (- 3.) 40.)))))))) 0.))))))))))))))))))))))))))))))))))))

% In GRF format:
(sequent " MetiTarski formula " (antecedent (<= (* skoXC1 (* skoXC1 (+ (/ (- 1.) 6.) (* skoXC1 (* skoXC1 (+ (/ (- 3.) 40.) (* skoXC1 (* skoXC1 (/ (- 5.) 112.))))))))) 1.) (> (* skoXC1 (* skoXC1 (+ (/ 1. 6.) (* skoXC1 (* skoXC1 (+ (/ 3. 40.) (* skoXC1 (* skoXC1 (/ 5. 112.))))))))) (- 1.)) (<= (* skoXC1 (* skoXC1 (* skoXC1 (* skoXC1 (+ (/ 32. 15.) (* skoXC1 (* skoXC1 (+ (/ (- 272.) 105.) (* skoXC1 (* skoXC1 (+ (/ (- 1163.) 105.) (* skoXC1 (* skoXC1 (+ (/ 1753. 105.) (* skoXC1 (* skoXC1 (+ (/ (- 169.) 28.) (* skoXC1 (* skoXC1 (/ 25. 56.)))))))))))))))))))) 0.) (<= (* skoXC1 (* skoXC1 (+ (/ 1. 3.) (* skoXC1 (* skoXC1 (+ (/ 3. 20.) (* skoXC1 (* skoXC1 (/ 5. 56.))))))))) 1.) (<= (* skoXC1 (* skoXC1 (* skoXC1 (* skoXC1 (+ (/ (- 17.) 120.) (* skoXC1 (* skoXC1 (+ (/ (- 27.) 280.) (* skoXC1 (* skoXC1 (/ 5. 224.))))))))))) 0.) (<= (* skoXC1 (* skoXC1 (* skoXC1 (* skoXC1 (+ (/ (- 13.) 60.) (* skoXC1 (* skoXC1 (+ (/ (- 9.) 280.) (* skoXC1 (* skoXC1 (/ (- 5.) 28.))))))))))) 0.) (<= (* skoXC1 (* skoXC1 (+ (/ (- 1.) 2.) (* skoXC1 (* skoXC1 (+ (/ 7. 120.) (* skoXC1 (* skoXC1 (+ (/ 33. 560.) (* skoXC1 (* skoXC1 (/ (- 5.) 112.)))))))))))) 0.) (<= (* skoXC1 (* skoXC1 (+ (/ (- 1.) 6.) (* skoXC1 (* skoXC1 (+ (/ (- 3.) 40.) (* skoXC1 (* skoXC1 (/ (- 5.) 112.))))))))) 1.) (<= (* skoXC1 (+ (- 1.) (* skoXC1 (* skoXC1 (+ (/ 1. 3.) (* skoXC1 (* skoXC1 (+ (/ 3. 20.) (* skoXC1 (* skoXC1 (/ 5. 56.))))))))))) 0.) (<= (* skoXC1 (* skoXC1 (* skoXC1 (* skoXC1 (+ (/ (- 80.) 3.) (* skoXC1 (* skoXC1 (+ (/ 128. 3.) (* skoXC1 (* skoXC1 (+ (/ (- 55.) 3.) (* skoXC1 (* skoXC1 (/ 5. 3.)))))))))))))) 0.) (<= (* skoXC1 (* skoXC1 (+ 256. (* skoXC1 (* skoXC1 (+ (- 160.) (* skoXC1 (* skoXC1 (+ 32. (* skoXC1 (* skoXC1 (- 1.)))))))))))) 128.) (<= (* skoXC1 (* skoXC1 (/ 1. 3.))) 1.) (<= (* skoXC1 (+ (- 1.) (* skoXC1 (* skoXC1 (/ (- 1.) 6.))))) 0.) (<= (* skoXC1 (* skoXC1 (* skoXC1 (* skoXC1 (/ (- 2.) 3.))))) 0.) (<= (* skoXC1 skoXC1) 2.) (<= (* skoXC1 (* skoXC1 (+ (/ (- 1.) 2.) (* skoXC1 (* skoXC1 (/ (- 1.) 6.)))))) 0.) (<= (* skoXC1 (* skoXC1 (/ (- 1.) 6.))) 1.) (<= (* skoXC1 (+ (- 1.) (* skoXC1 (* skoXC1 (/ 1. 3.))))) 0.) (> (/ 7. 8.) skoXC1) (> skoXC1 0.) (> (* skoXC1 (* skoXC1 (/ (- 1.) 2.))) (- 3.)) (<= (* skoXC1 (* skoXC1 (/ 1. 2.))) 3.) (<= (* skoXC1 (* skoXC1 (+ 24. (* skoXC1 (* skoXC1 (+ (- 10.) (* skoXC1 skoXC1))))))) 16.) (> (* skoXC1 (* skoXC1 (+ (- 80.) (* skoXC1 (* skoXC1 (+ 40. (* skoXC1 (* skoXC1 (+ (- 6.) (* skoXC1 (* skoXC1 (/ 1. 8.)))))))))))) (- 48.)) (<= (* skoXC1 (* skoXC1 (+ 80. (* skoXC1 (* skoXC1 (+ (- 40.) (* skoXC1 (* skoXC1 (+ 6. (* skoXC1 (* skoXC1 (/ (- 1.) 8.)))))))))))) 48.) (> (* skoXC1 skoXC1) 0.) (<= (* skoXC1 (+ (- 1.) (* skoXC1 (* skoXC1 (+ (/ 1. 3.) (* skoXC1 (* skoXC1 (/ 3. 20.)))))))) 0.) (<= (* skoXC1 (* skoXC1 (+ (/ (- 1.) 6.) (* skoXC1 (* skoXC1 (/ (- 3.) 40.)))))) 1.) (<= (* skoXC1 (* skoXC1 (+ (/ (- 1.) 2.) (* skoXC1 (* skoXC1 (+ (/ 7. 120.) (* skoXC1 (* skoXC1 (/ (- 3.) 40.))))))))) 0.) (<= (* skoXC1 (* skoXC1 (* skoXC1 (* skoXC1 (+ (/ (- 13.) 60.) (* skoXC1 (* skoXC1 (/ (- 3.) 10.)))))))) 0.) (<= (* skoXC1 (* skoXC1 (* skoXC1 (* skoXC1 (+ (/ (- 17.) 120.) (* skoXC1 (* skoXC1 (/ 3. 80.)))))))) 0.) (<= (* skoXC1 (* skoXC1 (+ (/ 1. 3.) (* skoXC1 (* skoXC1 (/ 3. 20.)))))) 1.) (<= (* skoXC1 (* skoXC1 (* skoXC1 (* skoXC1 (+ (/ 32. 15.) (* skoXC1 (* skoXC1 (+ (/ (- 296.) 15.) (* skoXC1 (* skoXC1 (+ (/ 391. 15.) (* skoXC1 (* skoXC1 (+ (/ (- 146.) 15.) (* skoXC1 (* skoXC1 (/ 3. 4.))))))))))))))))) 0.) (> (* skoXC1 (* skoXC1 (+ (/ 1. 6.) (* skoXC1 (* skoXC1 (/ 3. 40.)))))) (- 1.))) (succedent (> (* skoXC1 (+ (- 1.) (* skoXC1 (* skoXC1 (+ (/ (- 1.) 6.) (* skoXC1 (* skoXC1 (/ (- 3.) 40.)))))))) 0.)))
-----[end problem]-----

-----[begin problem]-----
% In Mathematica format:
Timing[Resolve[Exists[{skoXC1}, And[skoXC1*skoXC1*skoXC1*skoXC1*((-17/120)+skoXC1*skoXC1*((-27/280)+skoXC1*skoXC1*(5/224)))<=0,skoXC1*skoXC1*((1/6)+skoXC1*skoXC1*((3/40)+skoXC1*skoXC1*(5/112)))>-1,skoXC1*skoXC1*skoXC1*skoXC1*((32/15)+skoXC1*skoXC1*((-272/105)+skoXC1*skoXC1*((-1163/105)+skoXC1*skoXC1*((1753/105)+skoXC1*skoXC1*((-169/28)+skoXC1*skoXC1*(25/56))))))<=0,skoXC1*skoXC1*((1/3)+skoXC1*skoXC1*((3/20)+skoXC1*skoXC1*(5/56)))<=1,skoXC1*skoXC1*skoXC1*skoXC1*((-17/120)+skoXC1*skoXC1*((-27/280)+skoXC1*skoXC1*(5/224)))<=0,skoXC1*skoXC1*skoXC1*skoXC1*((-13/60)+skoXC1*skoXC1*((-9/280)+skoXC1*skoXC1*(-5/28)))<=0,skoXC1*skoXC1*((-1/2)+skoXC1*skoXC1*((7/120)+skoXC1*skoXC1*((33/560)+skoXC1*skoXC1*(-5/112))))<=0,skoXC1*skoXC1*((-1/6)+skoXC1*skoXC1*((-3/40)+skoXC1*skoXC1*(-5/112)))<=1,skoXC1*(-1+skoXC1*skoXC1*((1/3)+skoXC1*skoXC1*((3/20)+skoXC1*skoXC1*(5/56))))<=0,skoXC1*skoXC1*skoXC1*skoXC1*((-80/3)+skoXC1*skoXC1*((128/3)+skoXC1*skoXC1*((-55/3)+skoXC1*skoXC1*(5/3))))<=0,skoXC1*skoXC1*(256+skoXC1*skoXC1*(-160+skoXC1*skoXC1*(32+skoXC1*skoXC1*-1)))<=128,skoXC1*skoXC1*(1/3)<=1,skoXC1*(-1+skoXC1*skoXC1*(-1/6))<=0,skoXC1*skoXC1*skoXC1*skoXC1*(-2/3)<=0,skoXC1*skoXC1<=2,skoXC1*skoXC1*((-1/2)+skoXC1*skoXC1*(-1/6))<=0,skoXC1*skoXC1*(-1/6)<=1,skoXC1*(-1+skoXC1*skoXC1*(1/3))<=0,(7/8)>skoXC1,skoXC1>0,skoXC1*skoXC1*(-1/2)>-3,skoXC1*skoXC1*(1/2)<=3,skoXC1*skoXC1*(24+skoXC1*skoXC1*(-10+skoXC1*skoXC1))<=16,skoXC1*skoXC1*(-80+skoXC1*skoXC1*(40+skoXC1*skoXC1*(-6+skoXC1*skoXC1*(1/8))))>-48,skoXC1*skoXC1*(80+skoXC1*skoXC1*(-40+skoXC1*skoXC1*(6+skoXC1*skoXC1*(-1/8))))<=48,skoXC1*skoXC1>0,skoXC1*(-1+skoXC1*skoXC1*((1/3)+skoXC1*skoXC1*(3/20)))<=0,skoXC1*skoXC1*((-1/6)+skoXC1*skoXC1*(-3/40))<=1,skoXC1*skoXC1*((-1/2)+skoXC1*skoXC1*((7/120)+skoXC1*skoXC1*(-3/40)))<=0,skoXC1*skoXC1*skoXC1*skoXC1*((-13/60)+skoXC1*skoXC1*(-3/10))<=0,skoXC1*skoXC1*skoXC1*skoXC1*((-17/120)+skoXC1*skoXC1*(3/80))<=0,skoXC1*skoXC1*((1/3)+skoXC1*skoXC1*(3/20))<=1,skoXC1*skoXC1*skoXC1*skoXC1*((32/15)+skoXC1*skoXC1*((-296/15)+skoXC1*skoXC1*((391/15)+skoXC1*skoXC1*((-146/15)+skoXC1*skoXC1*(3/4)))))<=0,skoXC1*skoXC1*((1/6)+skoXC1*skoXC1*(3/40))>-1,skoXC1*(-1+skoXC1*skoXC1*((-1/6)+skoXC1*skoXC1*(-3/40)))<=0]], Reals]]

% In QepcadB format:
(E skoXC1) [[(skoXC1 skoXC1 skoXC1 skoXC1 (-17/120+(skoXC1 skoXC1 (-27/280+(skoXC1 skoXC1 (5/224))))))<=0]/\[[-1<(skoXC1 skoXC1 (1/6+(skoXC1 skoXC1 (3/40+(skoXC1 skoXC1 (5/112))))))]/\[[(skoXC1 skoXC1 skoXC1 skoXC1 (32/15+(skoXC1 skoXC1 (-272/105+(skoXC1 skoXC1 (-1163/105+(skoXC1 skoXC1 (1753/105+(skoXC1 skoXC1 (-169/28+(skoXC1 skoXC1 (25/56))))))))))))<=0]/\[[(skoXC1 skoXC1 (1/3+(skoXC1 skoXC1 (3/20+(skoXC1 skoXC1 (5/56))))))<=1]/\[[(skoXC1 skoXC1 skoXC1 skoXC1 (-17/120+(skoXC1 skoXC1 (-27/280+(skoXC1 skoXC1 (5/224))))))<=0]/\[[(skoXC1 skoXC1 skoXC1 skoXC1 (-13/60+(skoXC1 skoXC1 (-9/280+(skoXC1 skoXC1 (-5/28))))))<=0]/\[[(skoXC1 skoXC1 (-1/2+(skoXC1 skoXC1 (7/120+(skoXC1 skoXC1 (33/560+(skoXC1 skoXC1 (-5/112))))))))<=0]/\[[(skoXC1 skoXC1 (-1/6+(skoXC1 skoXC1 (-3/40+(skoXC1 skoXC1 (-5/112))))))<=1]/\[[(skoXC1 (-1+(skoXC1 skoXC1 (1/3+(skoXC1 skoXC1 (3/20+(skoXC1 skoXC1 (5/56))))))))<=0]/\[[(skoXC1 skoXC1 skoXC1 skoXC1 (-80/3+(skoXC1 skoXC1 (128/3+(skoXC1 skoXC1 (-55/3+(skoXC1 skoXC1 (5/3))))))))<=0]/\[[(skoXC1 skoXC1 (256+(skoXC1 skoXC1 (-160+(skoXC1 skoXC1 (32+(skoXC1 skoXC1 (-1))))))))<=128]/\[[(skoXC1 skoXC1 (1/3))<=1]/\[[(skoXC1 (-1+(skoXC1 skoXC1 (-1/6))))<=0]/\[[(skoXC1 skoXC1 skoXC1 skoXC1 (-2/3))<=0]/\[[(skoXC1 skoXC1)<=2]/\[[(skoXC1 skoXC1 (-1/2+(skoXC1 skoXC1 (-1/6))))<=0]/\[[(skoXC1 skoXC1 (-1/6))<=1]/\[[(skoXC1 (-1+(skoXC1 skoXC1 (1/3))))<=0]/\[[skoXC1<7/8]/\[[0<skoXC1]/\[[-3<(skoXC1 skoXC1 (-1/2))]/\[[(skoXC1 skoXC1 (1/2))<=3]/\[[(skoXC1 skoXC1 (24+(skoXC1 skoXC1 (-10+(skoXC1 skoXC1)))))<=16]/\[[-48<(skoXC1 skoXC1 (-80+(skoXC1 skoXC1 (40+(skoXC1 skoXC1 (-6+(skoXC1 skoXC1 (1/8))))))))]/\[[(skoXC1 skoXC1 (80+(skoXC1 skoXC1 (-40+(skoXC1 skoXC1 (6+(skoXC1 skoXC1 (-1/8))))))))<=48]/\[[0<(skoXC1 skoXC1)]/\[[(skoXC1 (-1+(skoXC1 skoXC1 (1/3+(skoXC1 skoXC1 (3/20))))))<=0]/\[[(skoXC1 skoXC1 (-1/6+(skoXC1 skoXC1 (-3/40))))<=1]/\[[(skoXC1 skoXC1 (-1/2+(skoXC1 skoXC1 (7/120+(skoXC1 skoXC1 (-3/40))))))<=0]/\[[(skoXC1 skoXC1 skoXC1 skoXC1 (-13/60+(skoXC1 skoXC1 (-3/10))))<=0]/\[[(skoXC1 skoXC1 skoXC1 skoXC1 (-17/120+(skoXC1 skoXC1 (3/80))))<=0]/\[[(skoXC1 skoXC1 (1/3+(skoXC1 skoXC1 (3/20))))<=1]/\[[(skoXC1 skoXC1 skoXC1 skoXC1 (32/15+(skoXC1 skoXC1 (-296/15+(skoXC1 skoXC1 (391/15+(skoXC1 skoXC1 (-146/15+(skoXC1 skoXC1 (3/4))))))))))<=0]/\[[-1<(skoXC1 skoXC1 (1/6+(skoXC1 skoXC1 (3/40))))]/\[(skoXC1 (-1+(skoXC1 skoXC1 (-1/6+(skoXC1 skoXC1 (-3/40))))))<=0]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]].

% In SMTLib2 format:
(declare-fun skoXC1 () Real) (assert (and (<= (* skoXC1 (* skoXC1 (* skoXC1 (* skoXC1 (+ (/ (- 17.) 120.) (* skoXC1 (* skoXC1 (+ (/ (- 27.) 280.) (* skoXC1 (* skoXC1 (/ 5. 224.))))))))))) 0.) (and (> (* skoXC1 (* skoXC1 (+ (/ 1. 6.) (* skoXC1 (* skoXC1 (+ (/ 3. 40.) (* skoXC1 (* skoXC1 (/ 5. 112.))))))))) (- 1.)) (and (<= (* skoXC1 (* skoXC1 (* skoXC1 (* skoXC1 (+ (/ 32. 15.) (* skoXC1 (* skoXC1 (+ (/ (- 272.) 105.) (* skoXC1 (* skoXC1 (+ (/ (- 1163.) 105.) (* skoXC1 (* skoXC1 (+ (/ 1753. 105.) (* skoXC1 (* skoXC1 (+ (/ (- 169.) 28.) (* skoXC1 (* skoXC1 (/ 25. 56.)))))))))))))))))))) 0.) (and (<= (* skoXC1 (* skoXC1 (+ (/ 1. 3.) (* skoXC1 (* skoXC1 (+ (/ 3. 20.) (* skoXC1 (* skoXC1 (/ 5. 56.))))))))) 1.) (and (<= (* skoXC1 (* skoXC1 (* skoXC1 (* skoXC1 (+ (/ (- 17.) 120.) (* skoXC1 (* skoXC1 (+ (/ (- 27.) 280.) (* skoXC1 (* skoXC1 (/ 5. 224.))))))))))) 0.) (and (<= (* skoXC1 (* skoXC1 (* skoXC1 (* skoXC1 (+ (/ (- 13.) 60.) (* skoXC1 (* skoXC1 (+ (/ (- 9.) 280.) (* skoXC1 (* skoXC1 (/ (- 5.) 28.))))))))))) 0.) (and (<= (* skoXC1 (* skoXC1 (+ (/ (- 1.) 2.) (* skoXC1 (* skoXC1 (+ (/ 7. 120.) (* skoXC1 (* skoXC1 (+ (/ 33. 560.) (* skoXC1 (* skoXC1 (/ (- 5.) 112.)))))))))))) 0.) (and (<= (* skoXC1 (* skoXC1 (+ (/ (- 1.) 6.) (* skoXC1 (* skoXC1 (+ (/ (- 3.) 40.) (* skoXC1 (* skoXC1 (/ (- 5.) 112.))))))))) 1.) (and (<= (* skoXC1 (+ (- 1.) (* skoXC1 (* skoXC1 (+ (/ 1. 3.) (* skoXC1 (* skoXC1 (+ (/ 3. 20.) (* skoXC1 (* skoXC1 (/ 5. 56.))))))))))) 0.) (and (<= (* skoXC1 (* skoXC1 (* skoXC1 (* skoXC1 (+ (/ (- 80.) 3.) (* skoXC1 (* skoXC1 (+ (/ 128. 3.) (* skoXC1 (* skoXC1 (+ (/ (- 55.) 3.) (* skoXC1 (* skoXC1 (/ 5. 3.)))))))))))))) 0.) (and (<= (* skoXC1 (* skoXC1 (+ 256. (* skoXC1 (* skoXC1 (+ (- 160.) (* skoXC1 (* skoXC1 (+ 32. (* skoXC1 (* skoXC1 (- 1.)))))))))))) 128.) (and (<= (* skoXC1 (* skoXC1 (/ 1. 3.))) 1.) (and (<= (* skoXC1 (+ (- 1.) (* skoXC1 (* skoXC1 (/ (- 1.) 6.))))) 0.) (and (<= (* skoXC1 (* skoXC1 (* skoXC1 (* skoXC1 (/ (- 2.) 3.))))) 0.) (and (<= (* skoXC1 skoXC1) 2.) (and (<= (* skoXC1 (* skoXC1 (+ (/ (- 1.) 2.) (* skoXC1 (* skoXC1 (/ (- 1.) 6.)))))) 0.) (and (<= (* skoXC1 (* skoXC1 (/ (- 1.) 6.))) 1.) (and (<= (* skoXC1 (+ (- 1.) (* skoXC1 (* skoXC1 (/ 1. 3.))))) 0.) (and (> (/ 7. 8.) skoXC1) (and (> skoXC1 0.) (and (> (* skoXC1 (* skoXC1 (/ (- 1.) 2.))) (- 3.)) (and (<= (* skoXC1 (* skoXC1 (/ 1. 2.))) 3.) (and (<= (* skoXC1 (* skoXC1 (+ 24. (* skoXC1 (* skoXC1 (+ (- 10.) (* skoXC1 skoXC1))))))) 16.) (and (> (* skoXC1 (* skoXC1 (+ (- 80.) (* skoXC1 (* skoXC1 (+ 40. (* skoXC1 (* skoXC1 (+ (- 6.) (* skoXC1 (* skoXC1 (/ 1. 8.)))))))))))) (- 48.)) (and (<= (* skoXC1 (* skoXC1 (+ 80. (* skoXC1 (* skoXC1 (+ (- 40.) (* skoXC1 (* skoXC1 (+ 6. (* skoXC1 (* skoXC1 (/ (- 1.) 8.)))))))))))) 48.) (and (> (* skoXC1 skoXC1) 0.) (and (<= (* skoXC1 (+ (- 1.) (* skoXC1 (* skoXC1 (+ (/ 1. 3.) (* skoXC1 (* skoXC1 (/ 3. 20.)))))))) 0.) (and (<= (* skoXC1 (* skoXC1 (+ (/ (- 1.) 6.) (* skoXC1 (* skoXC1 (/ (- 3.) 40.)))))) 1.) (and (<= (* skoXC1 (* skoXC1 (+ (/ (- 1.) 2.) (* skoXC1 (* skoXC1 (+ (/ 7. 120.) (* skoXC1 (* skoXC1 (/ (- 3.) 40.))))))))) 0.) (and (<= (* skoXC1 (* skoXC1 (* skoXC1 (* skoXC1 (+ (/ (- 13.) 60.) (* skoXC1 (* skoXC1 (/ (- 3.) 10.)))))))) 0.) (and (<= (* skoXC1 (* skoXC1 (* skoXC1 (* skoXC1 (+ (/ (- 17.) 120.) (* skoXC1 (* skoXC1 (/ 3. 80.)))))))) 0.) (and (<= (* skoXC1 (* skoXC1 (+ (/ 1. 3.) (* skoXC1 (* skoXC1 (/ 3. 20.)))))) 1.) (and (<= (* skoXC1 (* skoXC1 (* skoXC1 (* skoXC1 (+ (/ 32. 15.) (* skoXC1 (* skoXC1 (+ (/ (- 296.) 15.) (* skoXC1 (* skoXC1 (+ (/ 391. 15.) (* skoXC1 (* skoXC1 (+ (/ (- 146.) 15.) (* skoXC1 (* skoXC1 (/ 3. 4.))))))))))))))))) 0.) (and (> (* skoXC1 (* skoXC1 (+ (/ 1. 6.) (* skoXC1 (* skoXC1 (/ 3. 40.)))))) (- 1.)) (<= (* skoXC1 (+ (- 1.) (* skoXC1 (* skoXC1 (+ (/ (- 1.) 6.) (* skoXC1 (* skoXC1 (/ (- 3.) 40.)))))))) 0.))))))))))))))))))))))))))))))))))))

% In GRF format:
(sequent " MetiTarski formula " (antecedent (<= (* skoXC1 (* skoXC1 (* skoXC1 (* skoXC1 (+ (/ (- 17.) 120.) (* skoXC1 (* skoXC1 (+ (/ (- 27.) 280.) (* skoXC1 (* skoXC1 (/ 5. 224.))))))))))) 0.) (> (* skoXC1 (* skoXC1 (+ (/ 1. 6.) (* skoXC1 (* skoXC1 (+ (/ 3. 40.) (* skoXC1 (* skoXC1 (/ 5. 112.))))))))) (- 1.)) (<= (* skoXC1 (* skoXC1 (* skoXC1 (* skoXC1 (+ (/ 32. 15.) (* skoXC1 (* skoXC1 (+ (/ (- 272.) 105.) (* skoXC1 (* skoXC1 (+ (/ (- 1163.) 105.) (* skoXC1 (* skoXC1 (+ (/ 1753. 105.) (* skoXC1 (* skoXC1 (+ (/ (- 169.) 28.) (* skoXC1 (* skoXC1 (/ 25. 56.)))))))))))))))))))) 0.) (<= (* skoXC1 (* skoXC1 (+ (/ 1. 3.) (* skoXC1 (* skoXC1 (+ (/ 3. 20.) (* skoXC1 (* skoXC1 (/ 5. 56.))))))))) 1.) (<= (* skoXC1 (* skoXC1 (* skoXC1 (* skoXC1 (+ (/ (- 17.) 120.) (* skoXC1 (* skoXC1 (+ (/ (- 27.) 280.) (* skoXC1 (* skoXC1 (/ 5. 224.))))))))))) 0.) (<= (* skoXC1 (* skoXC1 (* skoXC1 (* skoXC1 (+ (/ (- 13.) 60.) (* skoXC1 (* skoXC1 (+ (/ (- 9.) 280.) (* skoXC1 (* skoXC1 (/ (- 5.) 28.))))))))))) 0.) (<= (* skoXC1 (* skoXC1 (+ (/ (- 1.) 2.) (* skoXC1 (* skoXC1 (+ (/ 7. 120.) (* skoXC1 (* skoXC1 (+ (/ 33. 560.) (* skoXC1 (* skoXC1 (/ (- 5.) 112.)))))))))))) 0.) (<= (* skoXC1 (* skoXC1 (+ (/ (- 1.) 6.) (* skoXC1 (* skoXC1 (+ (/ (- 3.) 40.) (* skoXC1 (* skoXC1 (/ (- 5.) 112.))))))))) 1.) (<= (* skoXC1 (+ (- 1.) (* skoXC1 (* skoXC1 (+ (/ 1. 3.) (* skoXC1 (* skoXC1 (+ (/ 3. 20.) (* skoXC1 (* skoXC1 (/ 5. 56.))))))))))) 0.) (<= (* skoXC1 (* skoXC1 (* skoXC1 (* skoXC1 (+ (/ (- 80.) 3.) (* skoXC1 (* skoXC1 (+ (/ 128. 3.) (* skoXC1 (* skoXC1 (+ (/ (- 55.) 3.) (* skoXC1 (* skoXC1 (/ 5. 3.)))))))))))))) 0.) (<= (* skoXC1 (* skoXC1 (+ 256. (* skoXC1 (* skoXC1 (+ (- 160.) (* skoXC1 (* skoXC1 (+ 32. (* skoXC1 (* skoXC1 (- 1.)))))))))))) 128.) (<= (* skoXC1 (* skoXC1 (/ 1. 3.))) 1.) (<= (* skoXC1 (+ (- 1.) (* skoXC1 (* skoXC1 (/ (- 1.) 6.))))) 0.) (<= (* skoXC1 (* skoXC1 (* skoXC1 (* skoXC1 (/ (- 2.) 3.))))) 0.) (<= (* skoXC1 skoXC1) 2.) (<= (* skoXC1 (* skoXC1 (+ (/ (- 1.) 2.) (* skoXC1 (* skoXC1 (/ (- 1.) 6.)))))) 0.) (<= (* skoXC1 (* skoXC1 (/ (- 1.) 6.))) 1.) (<= (* skoXC1 (+ (- 1.) (* skoXC1 (* skoXC1 (/ 1. 3.))))) 0.) (> (/ 7. 8.) skoXC1) (> skoXC1 0.) (> (* skoXC1 (* skoXC1 (/ (- 1.) 2.))) (- 3.)) (<= (* skoXC1 (* skoXC1 (/ 1. 2.))) 3.) (<= (* skoXC1 (* skoXC1 (+ 24. (* skoXC1 (* skoXC1 (+ (- 10.) (* skoXC1 skoXC1))))))) 16.) (> (* skoXC1 (* skoXC1 (+ (- 80.) (* skoXC1 (* skoXC1 (+ 40. (* skoXC1 (* skoXC1 (+ (- 6.) (* skoXC1 (* skoXC1 (/ 1. 8.)))))))))))) (- 48.)) (<= (* skoXC1 (* skoXC1 (+ 80. (* skoXC1 (* skoXC1 (+ (- 40.) (* skoXC1 (* skoXC1 (+ 6. (* skoXC1 (* skoXC1 (/ (- 1.) 8.)))))))))))) 48.) (> (* skoXC1 skoXC1) 0.) (<= (* skoXC1 (+ (- 1.) (* skoXC1 (* skoXC1 (+ (/ 1. 3.) (* skoXC1 (* skoXC1 (/ 3. 20.)))))))) 0.) (<= (* skoXC1 (* skoXC1 (+ (/ (- 1.) 6.) (* skoXC1 (* skoXC1 (/ (- 3.) 40.)))))) 1.) (<= (* skoXC1 (* skoXC1 (+ (/ (- 1.) 2.) (* skoXC1 (* skoXC1 (+ (/ 7. 120.) (* skoXC1 (* skoXC1 (/ (- 3.) 40.))))))))) 0.) (<= (* skoXC1 (* skoXC1 (* skoXC1 (* skoXC1 (+ (/ (- 13.) 60.) (* skoXC1 (* skoXC1 (/ (- 3.) 10.)))))))) 0.) (<= (* skoXC1 (* skoXC1 (* skoXC1 (* skoXC1 (+ (/ (- 17.) 120.) (* skoXC1 (* skoXC1 (/ 3. 80.)))))))) 0.) (<= (* skoXC1 (* skoXC1 (+ (/ 1. 3.) (* skoXC1 (* skoXC1 (/ 3. 20.)))))) 1.) (<= (* skoXC1 (* skoXC1 (* skoXC1 (* skoXC1 (+ (/ 32. 15.) (* skoXC1 (* skoXC1 (+ (/ (- 296.) 15.) (* skoXC1 (* skoXC1 (+ (/ 391. 15.) (* skoXC1 (* skoXC1 (+ (/ (- 146.) 15.) (* skoXC1 (* skoXC1 (/ 3. 4.))))))))))))))))) 0.) (> (* skoXC1 (* skoXC1 (+ (/ 1. 6.) (* skoXC1 (* skoXC1 (/ 3. 40.)))))) (- 1.))) (succedent (> (* skoXC1 (+ (- 1.) (* skoXC1 (* skoXC1 (+ (/ (- 1.) 6.) (* skoXC1 (* skoXC1 (/ (- 3.) 40.)))))))) 0.)))
-----[end problem]-----

-----[begin problem]-----
% In Mathematica format:
Timing[Resolve[Exists[{skoXC1}, And[skoXC1*skoXC1*(24+skoXC1*skoXC1*(-10+skoXC1*skoXC1))<=16,skoXC1*skoXC1*((1/6)+skoXC1*skoXC1*((3/40)+skoXC1*skoXC1*(5/112)))>-1,skoXC1*skoXC1*skoXC1*skoXC1*((32/15)+skoXC1*skoXC1*((-272/105)+skoXC1*skoXC1*((-1163/105)+skoXC1*skoXC1*((1753/105)+skoXC1*skoXC1*((-169/28)+skoXC1*skoXC1*(25/56))))))<=0,skoXC1*skoXC1*((1/3)+skoXC1*skoXC1*((3/20)+skoXC1*skoXC1*(5/56)))<=1,skoXC1*skoXC1*skoXC1*skoXC1*((-17/120)+skoXC1*skoXC1*((-27/280)+skoXC1*skoXC1*(5/224)))<=0,skoXC1*skoXC1*skoXC1*skoXC1*((-13/60)+skoXC1*skoXC1*((-9/280)+skoXC1*skoXC1*(-5/28)))<=0,skoXC1*skoXC1*((-1/2)+skoXC1*skoXC1*((7/120)+skoXC1*skoXC1*((33/560)+skoXC1*skoXC1*(-5/112))))<=0,skoXC1*skoXC1*((-1/6)+skoXC1*skoXC1*((-3/40)+skoXC1*skoXC1*(-5/112)))<=1,skoXC1*(-1+skoXC1*skoXC1*((1/3)+skoXC1*skoXC1*((3/20)+skoXC1*skoXC1*(5/56))))<=0,skoXC1*skoXC1*skoXC1*skoXC1*((-80/3)+skoXC1*skoXC1*((128/3)+skoXC1*skoXC1*((-55/3)+skoXC1*skoXC1*(5/3))))<=0,skoXC1*skoXC1*(256+skoXC1*skoXC1*(-160+skoXC1*skoXC1*(32+skoXC1*skoXC1*-1)))<=128,skoXC1*skoXC1*(1/3)<=1,skoXC1*(-1+skoXC1*skoXC1*(-1/6))<=0,skoXC1*skoXC1*skoXC1*skoXC1*(-2/3)<=0,skoXC1*skoXC1<=2,skoXC1*skoXC1*((-1/2)+skoXC1*skoXC1*(-1/6))<=0,skoXC1*skoXC1*(-1/6)<=1,skoXC1*(-1+skoXC1*skoXC1*(1/3))<=0,(7/8)>skoXC1,skoXC1>0,skoXC1*skoXC1*(-1/2)>-3,skoXC1*skoXC1*(1/2)<=3,skoXC1*skoXC1*(24+skoXC1*skoXC1*(-10+skoXC1*skoXC1))<=16,skoXC1*skoXC1*(-80+skoXC1*skoXC1*(40+skoXC1*skoXC1*(-6+skoXC1*skoXC1*(1/8))))>-48,skoXC1*skoXC1*(80+skoXC1*skoXC1*(-40+skoXC1*skoXC1*(6+skoXC1*skoXC1*(-1/8))))<=48,skoXC1*skoXC1>0,skoXC1*(-1+skoXC1*skoXC1*((1/3)+skoXC1*skoXC1*(3/20)))<=0,skoXC1*skoXC1*((-1/6)+skoXC1*skoXC1*(-3/40))<=1,skoXC1*skoXC1*((-1/2)+skoXC1*skoXC1*((7/120)+skoXC1*skoXC1*(-3/40)))<=0,skoXC1*skoXC1*skoXC1*skoXC1*((-13/60)+skoXC1*skoXC1*(-3/10))<=0,skoXC1*skoXC1*skoXC1*skoXC1*((-17/120)+skoXC1*skoXC1*(3/80))<=0,skoXC1*skoXC1*((1/3)+skoXC1*skoXC1*(3/20))<=1,skoXC1*skoXC1*skoXC1*skoXC1*((32/15)+skoXC1*skoXC1*((-296/15)+skoXC1*skoXC1*((391/15)+skoXC1*skoXC1*((-146/15)+skoXC1*skoXC1*(3/4)))))<=0,skoXC1*skoXC1*((1/6)+skoXC1*skoXC1*(3/40))>-1,skoXC1*(-1+skoXC1*skoXC1*((-1/6)+skoXC1*skoXC1*(-3/40)))<=0]], Reals]]

% In QepcadB format:
(E skoXC1) [[(skoXC1 skoXC1 (24+(skoXC1 skoXC1 (-10+(skoXC1 skoXC1)))))<=16]/\[[-1<(skoXC1 skoXC1 (1/6+(skoXC1 skoXC1 (3/40+(skoXC1 skoXC1 (5/112))))))]/\[[(skoXC1 skoXC1 skoXC1 skoXC1 (32/15+(skoXC1 skoXC1 (-272/105+(skoXC1 skoXC1 (-1163/105+(skoXC1 skoXC1 (1753/105+(skoXC1 skoXC1 (-169/28+(skoXC1 skoXC1 (25/56))))))))))))<=0]/\[[(skoXC1 skoXC1 (1/3+(skoXC1 skoXC1 (3/20+(skoXC1 skoXC1 (5/56))))))<=1]/\[[(skoXC1 skoXC1 skoXC1 skoXC1 (-17/120+(skoXC1 skoXC1 (-27/280+(skoXC1 skoXC1 (5/224))))))<=0]/\[[(skoXC1 skoXC1 skoXC1 skoXC1 (-13/60+(skoXC1 skoXC1 (-9/280+(skoXC1 skoXC1 (-5/28))))))<=0]/\[[(skoXC1 skoXC1 (-1/2+(skoXC1 skoXC1 (7/120+(skoXC1 skoXC1 (33/560+(skoXC1 skoXC1 (-5/112))))))))<=0]/\[[(skoXC1 skoXC1 (-1/6+(skoXC1 skoXC1 (-3/40+(skoXC1 skoXC1 (-5/112))))))<=1]/\[[(skoXC1 (-1+(skoXC1 skoXC1 (1/3+(skoXC1 skoXC1 (3/20+(skoXC1 skoXC1 (5/56))))))))<=0]/\[[(skoXC1 skoXC1 skoXC1 skoXC1 (-80/3+(skoXC1 skoXC1 (128/3+(skoXC1 skoXC1 (-55/3+(skoXC1 skoXC1 (5/3))))))))<=0]/\[[(skoXC1 skoXC1 (256+(skoXC1 skoXC1 (-160+(skoXC1 skoXC1 (32+(skoXC1 skoXC1 (-1))))))))<=128]/\[[(skoXC1 skoXC1 (1/3))<=1]/\[[(skoXC1 (-1+(skoXC1 skoXC1 (-1/6))))<=0]/\[[(skoXC1 skoXC1 skoXC1 skoXC1 (-2/3))<=0]/\[[(skoXC1 skoXC1)<=2]/\[[(skoXC1 skoXC1 (-1/2+(skoXC1 skoXC1 (-1/6))))<=0]/\[[(skoXC1 skoXC1 (-1/6))<=1]/\[[(skoXC1 (-1+(skoXC1 skoXC1 (1/3))))<=0]/\[[skoXC1<7/8]/\[[0<skoXC1]/\[[-3<(skoXC1 skoXC1 (-1/2))]/\[[(skoXC1 skoXC1 (1/2))<=3]/\[[(skoXC1 skoXC1 (24+(skoXC1 skoXC1 (-10+(skoXC1 skoXC1)))))<=16]/\[[-48<(skoXC1 skoXC1 (-80+(skoXC1 skoXC1 (40+(skoXC1 skoXC1 (-6+(skoXC1 skoXC1 (1/8))))))))]/\[[(skoXC1 skoXC1 (80+(skoXC1 skoXC1 (-40+(skoXC1 skoXC1 (6+(skoXC1 skoXC1 (-1/8))))))))<=48]/\[[0<(skoXC1 skoXC1)]/\[[(skoXC1 (-1+(skoXC1 skoXC1 (1/3+(skoXC1 skoXC1 (3/20))))))<=0]/\[[(skoXC1 skoXC1 (-1/6+(skoXC1 skoXC1 (-3/40))))<=1]/\[[(skoXC1 skoXC1 (-1/2+(skoXC1 skoXC1 (7/120+(skoXC1 skoXC1 (-3/40))))))<=0]/\[[(skoXC1 skoXC1 skoXC1 skoXC1 (-13/60+(skoXC1 skoXC1 (-3/10))))<=0]/\[[(skoXC1 skoXC1 skoXC1 skoXC1 (-17/120+(skoXC1 skoXC1 (3/80))))<=0]/\[[(skoXC1 skoXC1 (1/3+(skoXC1 skoXC1 (3/20))))<=1]/\[[(skoXC1 skoXC1 skoXC1 skoXC1 (32/15+(skoXC1 skoXC1 (-296/15+(skoXC1 skoXC1 (391/15+(skoXC1 skoXC1 (-146/15+(skoXC1 skoXC1 (3/4))))))))))<=0]/\[[-1<(skoXC1 skoXC1 (1/6+(skoXC1 skoXC1 (3/40))))]/\[(skoXC1 (-1+(skoXC1 skoXC1 (-1/6+(skoXC1 skoXC1 (-3/40))))))<=0]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]].

% In SMTLib2 format:
(declare-fun skoXC1 () Real) (assert (and (<= (* skoXC1 (* skoXC1 (+ 24. (* skoXC1 (* skoXC1 (+ (- 10.) (* skoXC1 skoXC1))))))) 16.) (and (> (* skoXC1 (* skoXC1 (+ (/ 1. 6.) (* skoXC1 (* skoXC1 (+ (/ 3. 40.) (* skoXC1 (* skoXC1 (/ 5. 112.))))))))) (- 1.)) (and (<= (* skoXC1 (* skoXC1 (* skoXC1 (* skoXC1 (+ (/ 32. 15.) (* skoXC1 (* skoXC1 (+ (/ (- 272.) 105.) (* skoXC1 (* skoXC1 (+ (/ (- 1163.) 105.) (* skoXC1 (* skoXC1 (+ (/ 1753. 105.) (* skoXC1 (* skoXC1 (+ (/ (- 169.) 28.) (* skoXC1 (* skoXC1 (/ 25. 56.)))))))))))))))))))) 0.) (and (<= (* skoXC1 (* skoXC1 (+ (/ 1. 3.) (* skoXC1 (* skoXC1 (+ (/ 3. 20.) (* skoXC1 (* skoXC1 (/ 5. 56.))))))))) 1.) (and (<= (* skoXC1 (* skoXC1 (* skoXC1 (* skoXC1 (+ (/ (- 17.) 120.) (* skoXC1 (* skoXC1 (+ (/ (- 27.) 280.) (* skoXC1 (* skoXC1 (/ 5. 224.))))))))))) 0.) (and (<= (* skoXC1 (* skoXC1 (* skoXC1 (* skoXC1 (+ (/ (- 13.) 60.) (* skoXC1 (* skoXC1 (+ (/ (- 9.) 280.) (* skoXC1 (* skoXC1 (/ (- 5.) 28.))))))))))) 0.) (and (<= (* skoXC1 (* skoXC1 (+ (/ (- 1.) 2.) (* skoXC1 (* skoXC1 (+ (/ 7. 120.) (* skoXC1 (* skoXC1 (+ (/ 33. 560.) (* skoXC1 (* skoXC1 (/ (- 5.) 112.)))))))))))) 0.) (and (<= (* skoXC1 (* skoXC1 (+ (/ (- 1.) 6.) (* skoXC1 (* skoXC1 (+ (/ (- 3.) 40.) (* skoXC1 (* skoXC1 (/ (- 5.) 112.))))))))) 1.) (and (<= (* skoXC1 (+ (- 1.) (* skoXC1 (* skoXC1 (+ (/ 1. 3.) (* skoXC1 (* skoXC1 (+ (/ 3. 20.) (* skoXC1 (* skoXC1 (/ 5. 56.))))))))))) 0.) (and (<= (* skoXC1 (* skoXC1 (* skoXC1 (* skoXC1 (+ (/ (- 80.) 3.) (* skoXC1 (* skoXC1 (+ (/ 128. 3.) (* skoXC1 (* skoXC1 (+ (/ (- 55.) 3.) (* skoXC1 (* skoXC1 (/ 5. 3.)))))))))))))) 0.) (and (<= (* skoXC1 (* skoXC1 (+ 256. (* skoXC1 (* skoXC1 (+ (- 160.) (* skoXC1 (* skoXC1 (+ 32. (* skoXC1 (* skoXC1 (- 1.)))))))))))) 128.) (and (<= (* skoXC1 (* skoXC1 (/ 1. 3.))) 1.) (and (<= (* skoXC1 (+ (- 1.) (* skoXC1 (* skoXC1 (/ (- 1.) 6.))))) 0.) (and (<= (* skoXC1 (* skoXC1 (* skoXC1 (* skoXC1 (/ (- 2.) 3.))))) 0.) (and (<= (* skoXC1 skoXC1) 2.) (and (<= (* skoXC1 (* skoXC1 (+ (/ (- 1.) 2.) (* skoXC1 (* skoXC1 (/ (- 1.) 6.)))))) 0.) (and (<= (* skoXC1 (* skoXC1 (/ (- 1.) 6.))) 1.) (and (<= (* skoXC1 (+ (- 1.) (* skoXC1 (* skoXC1 (/ 1. 3.))))) 0.) (and (> (/ 7. 8.) skoXC1) (and (> skoXC1 0.) (and (> (* skoXC1 (* skoXC1 (/ (- 1.) 2.))) (- 3.)) (and (<= (* skoXC1 (* skoXC1 (/ 1. 2.))) 3.) (and (<= (* skoXC1 (* skoXC1 (+ 24. (* skoXC1 (* skoXC1 (+ (- 10.) (* skoXC1 skoXC1))))))) 16.) (and (> (* skoXC1 (* skoXC1 (+ (- 80.) (* skoXC1 (* skoXC1 (+ 40. (* skoXC1 (* skoXC1 (+ (- 6.) (* skoXC1 (* skoXC1 (/ 1. 8.)))))))))))) (- 48.)) (and (<= (* skoXC1 (* skoXC1 (+ 80. (* skoXC1 (* skoXC1 (+ (- 40.) (* skoXC1 (* skoXC1 (+ 6. (* skoXC1 (* skoXC1 (/ (- 1.) 8.)))))))))))) 48.) (and (> (* skoXC1 skoXC1) 0.) (and (<= (* skoXC1 (+ (- 1.) (* skoXC1 (* skoXC1 (+ (/ 1. 3.) (* skoXC1 (* skoXC1 (/ 3. 20.)))))))) 0.) (and (<= (* skoXC1 (* skoXC1 (+ (/ (- 1.) 6.) (* skoXC1 (* skoXC1 (/ (- 3.) 40.)))))) 1.) (and (<= (* skoXC1 (* skoXC1 (+ (/ (- 1.) 2.) (* skoXC1 (* skoXC1 (+ (/ 7. 120.) (* skoXC1 (* skoXC1 (/ (- 3.) 40.))))))))) 0.) (and (<= (* skoXC1 (* skoXC1 (* skoXC1 (* skoXC1 (+ (/ (- 13.) 60.) (* skoXC1 (* skoXC1 (/ (- 3.) 10.)))))))) 0.) (and (<= (* skoXC1 (* skoXC1 (* skoXC1 (* skoXC1 (+ (/ (- 17.) 120.) (* skoXC1 (* skoXC1 (/ 3. 80.)))))))) 0.) (and (<= (* skoXC1 (* skoXC1 (+ (/ 1. 3.) (* skoXC1 (* skoXC1 (/ 3. 20.)))))) 1.) (and (<= (* skoXC1 (* skoXC1 (* skoXC1 (* skoXC1 (+ (/ 32. 15.) (* skoXC1 (* skoXC1 (+ (/ (- 296.) 15.) (* skoXC1 (* skoXC1 (+ (/ 391. 15.) (* skoXC1 (* skoXC1 (+ (/ (- 146.) 15.) (* skoXC1 (* skoXC1 (/ 3. 4.))))))))))))))))) 0.) (and (> (* skoXC1 (* skoXC1 (+ (/ 1. 6.) (* skoXC1 (* skoXC1 (/ 3. 40.)))))) (- 1.)) (<= (* skoXC1 (+ (- 1.) (* skoXC1 (* skoXC1 (+ (/ (- 1.) 6.) (* skoXC1 (* skoXC1 (/ (- 3.) 40.)))))))) 0.))))))))))))))))))))))))))))))))))))

% In GRF format:
(sequent " MetiTarski formula " (antecedent (<= (* skoXC1 (* skoXC1 (+ 24. (* skoXC1 (* skoXC1 (+ (- 10.) (* skoXC1 skoXC1))))))) 16.) (> (* skoXC1 (* skoXC1 (+ (/ 1. 6.) (* skoXC1 (* skoXC1 (+ (/ 3. 40.) (* skoXC1 (* skoXC1 (/ 5. 112.))))))))) (- 1.)) (<= (* skoXC1 (* skoXC1 (* skoXC1 (* skoXC1 (+ (/ 32. 15.) (* skoXC1 (* skoXC1 (+ (/ (- 272.) 105.) (* skoXC1 (* skoXC1 (+ (/ (- 1163.) 105.) (* skoXC1 (* skoXC1 (+ (/ 1753. 105.) (* skoXC1 (* skoXC1 (+ (/ (- 169.) 28.) (* skoXC1 (* skoXC1 (/ 25. 56.)))))))))))))))))))) 0.) (<= (* skoXC1 (* skoXC1 (+ (/ 1. 3.) (* skoXC1 (* skoXC1 (+ (/ 3. 20.) (* skoXC1 (* skoXC1 (/ 5. 56.))))))))) 1.) (<= (* skoXC1 (* skoXC1 (* skoXC1 (* skoXC1 (+ (/ (- 17.) 120.) (* skoXC1 (* skoXC1 (+ (/ (- 27.) 280.) (* skoXC1 (* skoXC1 (/ 5. 224.))))))))))) 0.) (<= (* skoXC1 (* skoXC1 (* skoXC1 (* skoXC1 (+ (/ (- 13.) 60.) (* skoXC1 (* skoXC1 (+ (/ (- 9.) 280.) (* skoXC1 (* skoXC1 (/ (- 5.) 28.))))))))))) 0.) (<= (* skoXC1 (* skoXC1 (+ (/ (- 1.) 2.) (* skoXC1 (* skoXC1 (+ (/ 7. 120.) (* skoXC1 (* skoXC1 (+ (/ 33. 560.) (* skoXC1 (* skoXC1 (/ (- 5.) 112.)))))))))))) 0.) (<= (* skoXC1 (* skoXC1 (+ (/ (- 1.) 6.) (* skoXC1 (* skoXC1 (+ (/ (- 3.) 40.) (* skoXC1 (* skoXC1 (/ (- 5.) 112.))))))))) 1.) (<= (* skoXC1 (+ (- 1.) (* skoXC1 (* skoXC1 (+ (/ 1. 3.) (* skoXC1 (* skoXC1 (+ (/ 3. 20.) (* skoXC1 (* skoXC1 (/ 5. 56.))))))))))) 0.) (<= (* skoXC1 (* skoXC1 (* skoXC1 (* skoXC1 (+ (/ (- 80.) 3.) (* skoXC1 (* skoXC1 (+ (/ 128. 3.) (* skoXC1 (* skoXC1 (+ (/ (- 55.) 3.) (* skoXC1 (* skoXC1 (/ 5. 3.)))))))))))))) 0.) (<= (* skoXC1 (* skoXC1 (+ 256. (* skoXC1 (* skoXC1 (+ (- 160.) (* skoXC1 (* skoXC1 (+ 32. (* skoXC1 (* skoXC1 (- 1.)))))))))))) 128.) (<= (* skoXC1 (* skoXC1 (/ 1. 3.))) 1.) (<= (* skoXC1 (+ (- 1.) (* skoXC1 (* skoXC1 (/ (- 1.) 6.))))) 0.) (<= (* skoXC1 (* skoXC1 (* skoXC1 (* skoXC1 (/ (- 2.) 3.))))) 0.) (<= (* skoXC1 skoXC1) 2.) (<= (* skoXC1 (* skoXC1 (+ (/ (- 1.) 2.) (* skoXC1 (* skoXC1 (/ (- 1.) 6.)))))) 0.) (<= (* skoXC1 (* skoXC1 (/ (- 1.) 6.))) 1.) (<= (* skoXC1 (+ (- 1.) (* skoXC1 (* skoXC1 (/ 1. 3.))))) 0.) (> (/ 7. 8.) skoXC1) (> skoXC1 0.) (> (* skoXC1 (* skoXC1 (/ (- 1.) 2.))) (- 3.)) (<= (* skoXC1 (* skoXC1 (/ 1. 2.))) 3.) (<= (* skoXC1 (* skoXC1 (+ 24. (* skoXC1 (* skoXC1 (+ (- 10.) (* skoXC1 skoXC1))))))) 16.) (> (* skoXC1 (* skoXC1 (+ (- 80.) (* skoXC1 (* skoXC1 (+ 40. (* skoXC1 (* skoXC1 (+ (- 6.) (* skoXC1 (* skoXC1 (/ 1. 8.)))))))))))) (- 48.)) (<= (* skoXC1 (* skoXC1 (+ 80. (* skoXC1 (* skoXC1 (+ (- 40.) (* skoXC1 (* skoXC1 (+ 6. (* skoXC1 (* skoXC1 (/ (- 1.) 8.)))))))))))) 48.) (> (* skoXC1 skoXC1) 0.) (<= (* skoXC1 (+ (- 1.) (* skoXC1 (* skoXC1 (+ (/ 1. 3.) (* skoXC1 (* skoXC1 (/ 3. 20.)))))))) 0.) (<= (* skoXC1 (* skoXC1 (+ (/ (- 1.) 6.) (* skoXC1 (* skoXC1 (/ (- 3.) 40.)))))) 1.) (<= (* skoXC1 (* skoXC1 (+ (/ (- 1.) 2.) (* skoXC1 (* skoXC1 (+ (/ 7. 120.) (* skoXC1 (* skoXC1 (/ (- 3.) 40.))))))))) 0.) (<= (* skoXC1 (* skoXC1 (* skoXC1 (* skoXC1 (+ (/ (- 13.) 60.) (* skoXC1 (* skoXC1 (/ (- 3.) 10.)))))))) 0.) (<= (* skoXC1 (* skoXC1 (* skoXC1 (* skoXC1 (+ (/ (- 17.) 120.) (* skoXC1 (* skoXC1 (/ 3. 80.)))))))) 0.) (<= (* skoXC1 (* skoXC1 (+ (/ 1. 3.) (* skoXC1 (* skoXC1 (/ 3. 20.)))))) 1.) (<= (* skoXC1 (* skoXC1 (* skoXC1 (* skoXC1 (+ (/ 32. 15.) (* skoXC1 (* skoXC1 (+ (/ (- 296.) 15.) (* skoXC1 (* skoXC1 (+ (/ 391. 15.) (* skoXC1 (* skoXC1 (+ (/ (- 146.) 15.) (* skoXC1 (* skoXC1 (/ 3. 4.))))))))))))))))) 0.) (> (* skoXC1 (* skoXC1 (+ (/ 1. 6.) (* skoXC1 (* skoXC1 (/ 3. 40.)))))) (- 1.))) (succedent (> (* skoXC1 (+ (- 1.) (* skoXC1 (* skoXC1 (+ (/ (- 1.) 6.) (* skoXC1 (* skoXC1 (/ (- 3.) 40.)))))))) 0.)))
-----[end problem]-----

-----[begin problem]-----
% In Mathematica format:
Timing[Resolve[Exists[{skoXC1}, And[skoXC1*(-1+skoXC1*skoXC1*((-1/6)+skoXC1*skoXC1*((-3/40)+skoXC1*skoXC1*(-5/112))))<=0,skoXC1*skoXC1*(-24+skoXC1*skoXC1*(10+skoXC1*skoXC1*-1))>-16,skoXC1*skoXC1*((1/6)+skoXC1*skoXC1*((3/40)+skoXC1*skoXC1*(5/112)))>-1,skoXC1*skoXC1*skoXC1*skoXC1*((32/15)+skoXC1*skoXC1*((-272/105)+skoXC1*skoXC1*((-1163/105)+skoXC1*skoXC1*((1753/105)+skoXC1*skoXC1*((-169/28)+skoXC1*skoXC1*(25/56))))))<=0,skoXC1*skoXC1*((1/3)+skoXC1*skoXC1*((3/20)+skoXC1*skoXC1*(5/56)))<=1,skoXC1*skoXC1*skoXC1*skoXC1*((-17/120)+skoXC1*skoXC1*((-27/280)+skoXC1*skoXC1*(5/224)))<=0,skoXC1*skoXC1*skoXC1*skoXC1*((-13/60)+skoXC1*skoXC1*((-9/280)+skoXC1*skoXC1*(-5/28)))<=0,skoXC1*skoXC1*((-1/2)+skoXC1*skoXC1*((7/120)+skoXC1*skoXC1*((33/560)+skoXC1*skoXC1*(-5/112))))<=0,skoXC1*skoXC1*((-1/6)+skoXC1*skoXC1*((-3/40)+skoXC1*skoXC1*(-5/112)))<=1,skoXC1*(-1+skoXC1*skoXC1*((1/3)+skoXC1*skoXC1*((3/20)+skoXC1*skoXC1*(5/56))))<=0,skoXC1*skoXC1*skoXC1*skoXC1*((-80/3)+skoXC1*skoXC1*((128/3)+skoXC1*skoXC1*((-55/3)+skoXC1*skoXC1*(5/3))))<=0,skoXC1*skoXC1*(256+skoXC1*skoXC1*(-160+skoXC1*skoXC1*(32+skoXC1*skoXC1*-1)))<=128,skoXC1*skoXC1*(1/3)<=1,skoXC1*(-1+skoXC1*skoXC1*(-1/6))<=0,skoXC1*skoXC1*skoXC1*skoXC1*(-2/3)<=0,skoXC1*skoXC1<=2,skoXC1*skoXC1*((-1/2)+skoXC1*skoXC1*(-1/6))<=0,skoXC1*skoXC1*(-1/6)<=1,skoXC1*(-1+skoXC1*skoXC1*(1/3))<=0,(7/8)>skoXC1,skoXC1>0,skoXC1*skoXC1*(-1/2)>-3,skoXC1*skoXC1*(1/2)<=3,skoXC1*skoXC1*(24+skoXC1*skoXC1*(-10+skoXC1*skoXC1))<=16,skoXC1*skoXC1*(-80+skoXC1*skoXC1*(40+skoXC1*skoXC1*(-6+skoXC1*skoXC1*(1/8))))>-48,skoXC1*skoXC1*(80+skoXC1*skoXC1*(-40+skoXC1*skoXC1*(6+skoXC1*skoXC1*(-1/8))))<=48,skoXC1*skoXC1>0,skoXC1*(-1+skoXC1*skoXC1*((1/3)+skoXC1*skoXC1*(3/20)))<=0,skoXC1*skoXC1*((-1/6)+skoXC1*skoXC1*(-3/40))<=1,skoXC1*skoXC1*((-1/2)+skoXC1*skoXC1*((7/120)+skoXC1*skoXC1*(-3/40)))<=0,skoXC1*skoXC1*skoXC1*skoXC1*((-13/60)+skoXC1*skoXC1*(-3/10))<=0,skoXC1*skoXC1*skoXC1*skoXC1*((-17/120)+skoXC1*skoXC1*(3/80))<=0,skoXC1*skoXC1*((1/3)+skoXC1*skoXC1*(3/20))<=1,skoXC1*skoXC1*skoXC1*skoXC1*((32/15)+skoXC1*skoXC1*((-296/15)+skoXC1*skoXC1*((391/15)+skoXC1*skoXC1*((-146/15)+skoXC1*skoXC1*(3/4)))))<=0,skoXC1*skoXC1*((1/6)+skoXC1*skoXC1*(3/40))>-1,skoXC1*(-1+skoXC1*skoXC1*((-1/6)+skoXC1*skoXC1*(-3/40)))<=0]], Reals]]

% In QepcadB format:
(E skoXC1) [[(skoXC1 (-1+(skoXC1 skoXC1 (-1/6+(skoXC1 skoXC1 (-3/40+(skoXC1 skoXC1 (-5/112))))))))<=0]/\[[-16<(skoXC1 skoXC1 (-24+(skoXC1 skoXC1 (10+(skoXC1 skoXC1 (-1))))))]/\[[-1<(skoXC1 skoXC1 (1/6+(skoXC1 skoXC1 (3/40+(skoXC1 skoXC1 (5/112))))))]/\[[(skoXC1 skoXC1 skoXC1 skoXC1 (32/15+(skoXC1 skoXC1 (-272/105+(skoXC1 skoXC1 (-1163/105+(skoXC1 skoXC1 (1753/105+(skoXC1 skoXC1 (-169/28+(skoXC1 skoXC1 (25/56))))))))))))<=0]/\[[(skoXC1 skoXC1 (1/3+(skoXC1 skoXC1 (3/20+(skoXC1 skoXC1 (5/56))))))<=1]/\[[(skoXC1 skoXC1 skoXC1 skoXC1 (-17/120+(skoXC1 skoXC1 (-27/280+(skoXC1 skoXC1 (5/224))))))<=0]/\[[(skoXC1 skoXC1 skoXC1 skoXC1 (-13/60+(skoXC1 skoXC1 (-9/280+(skoXC1 skoXC1 (-5/28))))))<=0]/\[[(skoXC1 skoXC1 (-1/2+(skoXC1 skoXC1 (7/120+(skoXC1 skoXC1 (33/560+(skoXC1 skoXC1 (-5/112))))))))<=0]/\[[(skoXC1 skoXC1 (-1/6+(skoXC1 skoXC1 (-3/40+(skoXC1 skoXC1 (-5/112))))))<=1]/\[[(skoXC1 (-1+(skoXC1 skoXC1 (1/3+(skoXC1 skoXC1 (3/20+(skoXC1 skoXC1 (5/56))))))))<=0]/\[[(skoXC1 skoXC1 skoXC1 skoXC1 (-80/3+(skoXC1 skoXC1 (128/3+(skoXC1 skoXC1 (-55/3+(skoXC1 skoXC1 (5/3))))))))<=0]/\[[(skoXC1 skoXC1 (256+(skoXC1 skoXC1 (-160+(skoXC1 skoXC1 (32+(skoXC1 skoXC1 (-1))))))))<=128]/\[[(skoXC1 skoXC1 (1/3))<=1]/\[[(skoXC1 (-1+(skoXC1 skoXC1 (-1/6))))<=0]/\[[(skoXC1 skoXC1 skoXC1 skoXC1 (-2/3))<=0]/\[[(skoXC1 skoXC1)<=2]/\[[(skoXC1 skoXC1 (-1/2+(skoXC1 skoXC1 (-1/6))))<=0]/\[[(skoXC1 skoXC1 (-1/6))<=1]/\[[(skoXC1 (-1+(skoXC1 skoXC1 (1/3))))<=0]/\[[skoXC1<7/8]/\[[0<skoXC1]/\[[-3<(skoXC1 skoXC1 (-1/2))]/\[[(skoXC1 skoXC1 (1/2))<=3]/\[[(skoXC1 skoXC1 (24+(skoXC1 skoXC1 (-10+(skoXC1 skoXC1)))))<=16]/\[[-48<(skoXC1 skoXC1 (-80+(skoXC1 skoXC1 (40+(skoXC1 skoXC1 (-6+(skoXC1 skoXC1 (1/8))))))))]/\[[(skoXC1 skoXC1 (80+(skoXC1 skoXC1 (-40+(skoXC1 skoXC1 (6+(skoXC1 skoXC1 (-1/8))))))))<=48]/\[[0<(skoXC1 skoXC1)]/\[[(skoXC1 (-1+(skoXC1 skoXC1 (1/3+(skoXC1 skoXC1 (3/20))))))<=0]/\[[(skoXC1 skoXC1 (-1/6+(skoXC1 skoXC1 (-3/40))))<=1]/\[[(skoXC1 skoXC1 (-1/2+(skoXC1 skoXC1 (7/120+(skoXC1 skoXC1 (-3/40))))))<=0]/\[[(skoXC1 skoXC1 skoXC1 skoXC1 (-13/60+(skoXC1 skoXC1 (-3/10))))<=0]/\[[(skoXC1 skoXC1 skoXC1 skoXC1 (-17/120+(skoXC1 skoXC1 (3/80))))<=0]/\[[(skoXC1 skoXC1 (1/3+(skoXC1 skoXC1 (3/20))))<=1]/\[[(skoXC1 skoXC1 skoXC1 skoXC1 (32/15+(skoXC1 skoXC1 (-296/15+(skoXC1 skoXC1 (391/15+(skoXC1 skoXC1 (-146/15+(skoXC1 skoXC1 (3/4))))))))))<=0]/\[[-1<(skoXC1 skoXC1 (1/6+(skoXC1 skoXC1 (3/40))))]/\[(skoXC1 (-1+(skoXC1 skoXC1 (-1/6+(skoXC1 skoXC1 (-3/40))))))<=0]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]].

% In SMTLib2 format:
(declare-fun skoXC1 () Real) (assert (and (<= (* skoXC1 (+ (- 1.) (* skoXC1 (* skoXC1 (+ (/ (- 1.) 6.) (* skoXC1 (* skoXC1 (+ (/ (- 3.) 40.) (* skoXC1 (* skoXC1 (/ (- 5.) 112.))))))))))) 0.) (and (> (* skoXC1 (* skoXC1 (+ (- 24.) (* skoXC1 (* skoXC1 (+ 10. (* skoXC1 (* skoXC1 (- 1.))))))))) (- 16.)) (and (> (* skoXC1 (* skoXC1 (+ (/ 1. 6.) (* skoXC1 (* skoXC1 (+ (/ 3. 40.) (* skoXC1 (* skoXC1 (/ 5. 112.))))))))) (- 1.)) (and (<= (* skoXC1 (* skoXC1 (* skoXC1 (* skoXC1 (+ (/ 32. 15.) (* skoXC1 (* skoXC1 (+ (/ (- 272.) 105.) (* skoXC1 (* skoXC1 (+ (/ (- 1163.) 105.) (* skoXC1 (* skoXC1 (+ (/ 1753. 105.) (* skoXC1 (* skoXC1 (+ (/ (- 169.) 28.) (* skoXC1 (* skoXC1 (/ 25. 56.)))))))))))))))))))) 0.) (and (<= (* skoXC1 (* skoXC1 (+ (/ 1. 3.) (* skoXC1 (* skoXC1 (+ (/ 3. 20.) (* skoXC1 (* skoXC1 (/ 5. 56.))))))))) 1.) (and (<= (* skoXC1 (* skoXC1 (* skoXC1 (* skoXC1 (+ (/ (- 17.) 120.) (* skoXC1 (* skoXC1 (+ (/ (- 27.) 280.) (* skoXC1 (* skoXC1 (/ 5. 224.))))))))))) 0.) (and (<= (* skoXC1 (* skoXC1 (* skoXC1 (* skoXC1 (+ (/ (- 13.) 60.) (* skoXC1 (* skoXC1 (+ (/ (- 9.) 280.) (* skoXC1 (* skoXC1 (/ (- 5.) 28.))))))))))) 0.) (and (<= (* skoXC1 (* skoXC1 (+ (/ (- 1.) 2.) (* skoXC1 (* skoXC1 (+ (/ 7. 120.) (* skoXC1 (* skoXC1 (+ (/ 33. 560.) (* skoXC1 (* skoXC1 (/ (- 5.) 112.)))))))))))) 0.) (and (<= (* skoXC1 (* skoXC1 (+ (/ (- 1.) 6.) (* skoXC1 (* skoXC1 (+ (/ (- 3.) 40.) (* skoXC1 (* skoXC1 (/ (- 5.) 112.))))))))) 1.) (and (<= (* skoXC1 (+ (- 1.) (* skoXC1 (* skoXC1 (+ (/ 1. 3.) (* skoXC1 (* skoXC1 (+ (/ 3. 20.) (* skoXC1 (* skoXC1 (/ 5. 56.))))))))))) 0.) (and (<= (* skoXC1 (* skoXC1 (* skoXC1 (* skoXC1 (+ (/ (- 80.) 3.) (* skoXC1 (* skoXC1 (+ (/ 128. 3.) (* skoXC1 (* skoXC1 (+ (/ (- 55.) 3.) (* skoXC1 (* skoXC1 (/ 5. 3.)))))))))))))) 0.) (and (<= (* skoXC1 (* skoXC1 (+ 256. (* skoXC1 (* skoXC1 (+ (- 160.) (* skoXC1 (* skoXC1 (+ 32. (* skoXC1 (* skoXC1 (- 1.)))))))))))) 128.) (and (<= (* skoXC1 (* skoXC1 (/ 1. 3.))) 1.) (and (<= (* skoXC1 (+ (- 1.) (* skoXC1 (* skoXC1 (/ (- 1.) 6.))))) 0.) (and (<= (* skoXC1 (* skoXC1 (* skoXC1 (* skoXC1 (/ (- 2.) 3.))))) 0.) (and (<= (* skoXC1 skoXC1) 2.) (and (<= (* skoXC1 (* skoXC1 (+ (/ (- 1.) 2.) (* skoXC1 (* skoXC1 (/ (- 1.) 6.)))))) 0.) (and (<= (* skoXC1 (* skoXC1 (/ (- 1.) 6.))) 1.) (and (<= (* skoXC1 (+ (- 1.) (* skoXC1 (* skoXC1 (/ 1. 3.))))) 0.) (and (> (/ 7. 8.) skoXC1) (and (> skoXC1 0.) (and (> (* skoXC1 (* skoXC1 (/ (- 1.) 2.))) (- 3.)) (and (<= (* skoXC1 (* skoXC1 (/ 1. 2.))) 3.) (and (<= (* skoXC1 (* skoXC1 (+ 24. (* skoXC1 (* skoXC1 (+ (- 10.) (* skoXC1 skoXC1))))))) 16.) (and (> (* skoXC1 (* skoXC1 (+ (- 80.) (* skoXC1 (* skoXC1 (+ 40. (* skoXC1 (* skoXC1 (+ (- 6.) (* skoXC1 (* skoXC1 (/ 1. 8.)))))))))))) (- 48.)) (and (<= (* skoXC1 (* skoXC1 (+ 80. (* skoXC1 (* skoXC1 (+ (- 40.) (* skoXC1 (* skoXC1 (+ 6. (* skoXC1 (* skoXC1 (/ (- 1.) 8.)))))))))))) 48.) (and (> (* skoXC1 skoXC1) 0.) (and (<= (* skoXC1 (+ (- 1.) (* skoXC1 (* skoXC1 (+ (/ 1. 3.) (* skoXC1 (* skoXC1 (/ 3. 20.)))))))) 0.) (and (<= (* skoXC1 (* skoXC1 (+ (/ (- 1.) 6.) (* skoXC1 (* skoXC1 (/ (- 3.) 40.)))))) 1.) (and (<= (* skoXC1 (* skoXC1 (+ (/ (- 1.) 2.) (* skoXC1 (* skoXC1 (+ (/ 7. 120.) (* skoXC1 (* skoXC1 (/ (- 3.) 40.))))))))) 0.) (and (<= (* skoXC1 (* skoXC1 (* skoXC1 (* skoXC1 (+ (/ (- 13.) 60.) (* skoXC1 (* skoXC1 (/ (- 3.) 10.)))))))) 0.) (and (<= (* skoXC1 (* skoXC1 (* skoXC1 (* skoXC1 (+ (/ (- 17.) 120.) (* skoXC1 (* skoXC1 (/ 3. 80.)))))))) 0.) (and (<= (* skoXC1 (* skoXC1 (+ (/ 1. 3.) (* skoXC1 (* skoXC1 (/ 3. 20.)))))) 1.) (and (<= (* skoXC1 (* skoXC1 (* skoXC1 (* skoXC1 (+ (/ 32. 15.) (* skoXC1 (* skoXC1 (+ (/ (- 296.) 15.) (* skoXC1 (* skoXC1 (+ (/ 391. 15.) (* skoXC1 (* skoXC1 (+ (/ (- 146.) 15.) (* skoXC1 (* skoXC1 (/ 3. 4.))))))))))))))))) 0.) (and (> (* skoXC1 (* skoXC1 (+ (/ 1. 6.) (* skoXC1 (* skoXC1 (/ 3. 40.)))))) (- 1.)) (<= (* skoXC1 (+ (- 1.) (* skoXC1 (* skoXC1 (+ (/ (- 1.) 6.) (* skoXC1 (* skoXC1 (/ (- 3.) 40.)))))))) 0.)))))))))))))))))))))))))))))))))))))

% In GRF format:
(sequent " MetiTarski formula " (antecedent (<= (* skoXC1 (+ (- 1.) (* skoXC1 (* skoXC1 (+ (/ (- 1.) 6.) (* skoXC1 (* skoXC1 (+ (/ (- 3.) 40.) (* skoXC1 (* skoXC1 (/ (- 5.) 112.))))))))))) 0.) (> (* skoXC1 (* skoXC1 (+ (- 24.) (* skoXC1 (* skoXC1 (+ 10. (* skoXC1 (* skoXC1 (- 1.))))))))) (- 16.)) (> (* skoXC1 (* skoXC1 (+ (/ 1. 6.) (* skoXC1 (* skoXC1 (+ (/ 3. 40.) (* skoXC1 (* skoXC1 (/ 5. 112.))))))))) (- 1.)) (<= (* skoXC1 (* skoXC1 (* skoXC1 (* skoXC1 (+ (/ 32. 15.) (* skoXC1 (* skoXC1 (+ (/ (- 272.) 105.) (* skoXC1 (* skoXC1 (+ (/ (- 1163.) 105.) (* skoXC1 (* skoXC1 (+ (/ 1753. 105.) (* skoXC1 (* skoXC1 (+ (/ (- 169.) 28.) (* skoXC1 (* skoXC1 (/ 25. 56.)))))))))))))))))))) 0.) (<= (* skoXC1 (* skoXC1 (+ (/ 1. 3.) (* skoXC1 (* skoXC1 (+ (/ 3. 20.) (* skoXC1 (* skoXC1 (/ 5. 56.))))))))) 1.) (<= (* skoXC1 (* skoXC1 (* skoXC1 (* skoXC1 (+ (/ (- 17.) 120.) (* skoXC1 (* skoXC1 (+ (/ (- 27.) 280.) (* skoXC1 (* skoXC1 (/ 5. 224.))))))))))) 0.) (<= (* skoXC1 (* skoXC1 (* skoXC1 (* skoXC1 (+ (/ (- 13.) 60.) (* skoXC1 (* skoXC1 (+ (/ (- 9.) 280.) (* skoXC1 (* skoXC1 (/ (- 5.) 28.))))))))))) 0.) (<= (* skoXC1 (* skoXC1 (+ (/ (- 1.) 2.) (* skoXC1 (* skoXC1 (+ (/ 7. 120.) (* skoXC1 (* skoXC1 (+ (/ 33. 560.) (* skoXC1 (* skoXC1 (/ (- 5.) 112.)))))))))))) 0.) (<= (* skoXC1 (* skoXC1 (+ (/ (- 1.) 6.) (* skoXC1 (* skoXC1 (+ (/ (- 3.) 40.) (* skoXC1 (* skoXC1 (/ (- 5.) 112.))))))))) 1.) (<= (* skoXC1 (+ (- 1.) (* skoXC1 (* skoXC1 (+ (/ 1. 3.) (* skoXC1 (* skoXC1 (+ (/ 3. 20.) (* skoXC1 (* skoXC1 (/ 5. 56.))))))))))) 0.) (<= (* skoXC1 (* skoXC1 (* skoXC1 (* skoXC1 (+ (/ (- 80.) 3.) (* skoXC1 (* skoXC1 (+ (/ 128. 3.) (* skoXC1 (* skoXC1 (+ (/ (- 55.) 3.) (* skoXC1 (* skoXC1 (/ 5. 3.)))))))))))))) 0.) (<= (* skoXC1 (* skoXC1 (+ 256. (* skoXC1 (* skoXC1 (+ (- 160.) (* skoXC1 (* skoXC1 (+ 32. (* skoXC1 (* skoXC1 (- 1.)))))))))))) 128.) (<= (* skoXC1 (* skoXC1 (/ 1. 3.))) 1.) (<= (* skoXC1 (+ (- 1.) (* skoXC1 (* skoXC1 (/ (- 1.) 6.))))) 0.) (<= (* skoXC1 (* skoXC1 (* skoXC1 (* skoXC1 (/ (- 2.) 3.))))) 0.) (<= (* skoXC1 skoXC1) 2.) (<= (* skoXC1 (* skoXC1 (+ (/ (- 1.) 2.) (* skoXC1 (* skoXC1 (/ (- 1.) 6.)))))) 0.) (<= (* skoXC1 (* skoXC1 (/ (- 1.) 6.))) 1.) (<= (* skoXC1 (+ (- 1.) (* skoXC1 (* skoXC1 (/ 1. 3.))))) 0.) (> (/ 7. 8.) skoXC1) (> skoXC1 0.) (> (* skoXC1 (* skoXC1 (/ (- 1.) 2.))) (- 3.)) (<= (* skoXC1 (* skoXC1 (/ 1. 2.))) 3.) (<= (* skoXC1 (* skoXC1 (+ 24. (* skoXC1 (* skoXC1 (+ (- 10.) (* skoXC1 skoXC1))))))) 16.) (> (* skoXC1 (* skoXC1 (+ (- 80.) (* skoXC1 (* skoXC1 (+ 40. (* skoXC1 (* skoXC1 (+ (- 6.) (* skoXC1 (* skoXC1 (/ 1. 8.)))))))))))) (- 48.)) (<= (* skoXC1 (* skoXC1 (+ 80. (* skoXC1 (* skoXC1 (+ (- 40.) (* skoXC1 (* skoXC1 (+ 6. (* skoXC1 (* skoXC1 (/ (- 1.) 8.)))))))))))) 48.) (> (* skoXC1 skoXC1) 0.) (<= (* skoXC1 (+ (- 1.) (* skoXC1 (* skoXC1 (+ (/ 1. 3.) (* skoXC1 (* skoXC1 (/ 3. 20.)))))))) 0.) (<= (* skoXC1 (* skoXC1 (+ (/ (- 1.) 6.) (* skoXC1 (* skoXC1 (/ (- 3.) 40.)))))) 1.) (<= (* skoXC1 (* skoXC1 (+ (/ (- 1.) 2.) (* skoXC1 (* skoXC1 (+ (/ 7. 120.) (* skoXC1 (* skoXC1 (/ (- 3.) 40.))))))))) 0.) (<= (* skoXC1 (* skoXC1 (* skoXC1 (* skoXC1 (+ (/ (- 13.) 60.) (* skoXC1 (* skoXC1 (/ (- 3.) 10.)))))))) 0.) (<= (* skoXC1 (* skoXC1 (* skoXC1 (* skoXC1 (+ (/ (- 17.) 120.) (* skoXC1 (* skoXC1 (/ 3. 80.)))))))) 0.) (<= (* skoXC1 (* skoXC1 (+ (/ 1. 3.) (* skoXC1 (* skoXC1 (/ 3. 20.)))))) 1.) (<= (* skoXC1 (* skoXC1 (* skoXC1 (* skoXC1 (+ (/ 32. 15.) (* skoXC1 (* skoXC1 (+ (/ (- 296.) 15.) (* skoXC1 (* skoXC1 (+ (/ 391. 15.) (* skoXC1 (* skoXC1 (+ (/ (- 146.) 15.) (* skoXC1 (* skoXC1 (/ 3. 4.))))))))))))))))) 0.) (> (* skoXC1 (* skoXC1 (+ (/ 1. 6.) (* skoXC1 (* skoXC1 (/ 3. 40.)))))) (- 1.))) (succedent (> (* skoXC1 (+ (- 1.) (* skoXC1 (* skoXC1 (+ (/ (- 1.) 6.) (* skoXC1 (* skoXC1 (/ (- 3.) 40.)))))))) 0.)))
-----[end problem]-----

-----[begin problem]-----
% In Mathematica format:
Timing[Resolve[Exists[{skoXC1}, And[skoXC1*(-1+skoXC1*skoXC1*((-1/6)+skoXC1*skoXC1*((-3/40)+skoXC1*skoXC1*(-5/112))))<=0,skoXC1*skoXC1*((1/6)+skoXC1*skoXC1*((3/40)+skoXC1*skoXC1*(5/112)))>-1,skoXC1*skoXC1*((1/6)+skoXC1*skoXC1*((3/40)+skoXC1*skoXC1*(5/112)))>-1,skoXC1*skoXC1*skoXC1*skoXC1*((32/15)+skoXC1*skoXC1*((-272/105)+skoXC1*skoXC1*((-1163/105)+skoXC1*skoXC1*((1753/105)+skoXC1*skoXC1*((-169/28)+skoXC1*skoXC1*(25/56))))))<=0,skoXC1*skoXC1*((1/3)+skoXC1*skoXC1*((3/20)+skoXC1*skoXC1*(5/56)))<=1,skoXC1*skoXC1*skoXC1*skoXC1*((-17/120)+skoXC1*skoXC1*((-27/280)+skoXC1*skoXC1*(5/224)))<=0,skoXC1*skoXC1*skoXC1*skoXC1*((-13/60)+skoXC1*skoXC1*((-9/280)+skoXC1*skoXC1*(-5/28)))<=0,skoXC1*skoXC1*((-1/2)+skoXC1*skoXC1*((7/120)+skoXC1*skoXC1*((33/560)+skoXC1*skoXC1*(-5/112))))<=0,skoXC1*skoXC1*((-1/6)+skoXC1*skoXC1*((-3/40)+skoXC1*skoXC1*(-5/112)))<=1,skoXC1*(-1+skoXC1*skoXC1*((1/3)+skoXC1*skoXC1*((3/20)+skoXC1*skoXC1*(5/56))))<=0,skoXC1*skoXC1*skoXC1*skoXC1*((-80/3)+skoXC1*skoXC1*((128/3)+skoXC1*skoXC1*((-55/3)+skoXC1*skoXC1*(5/3))))<=0,skoXC1*skoXC1*(256+skoXC1*skoXC1*(-160+skoXC1*skoXC1*(32+skoXC1*skoXC1*-1)))<=128,skoXC1*skoXC1*(1/3)<=1,skoXC1*(-1+skoXC1*skoXC1*(-1/6))<=0,skoXC1*skoXC1*skoXC1*skoXC1*(-2/3)<=0,skoXC1*skoXC1<=2,skoXC1*skoXC1*((-1/2)+skoXC1*skoXC1*(-1/6))<=0,skoXC1*skoXC1*(-1/6)<=1,skoXC1*(-1+skoXC1*skoXC1*(1/3))<=0,(7/8)>skoXC1,skoXC1>0,skoXC1*skoXC1*(-1/2)>-3,skoXC1*skoXC1*(1/2)<=3,skoXC1*skoXC1*(24+skoXC1*skoXC1*(-10+skoXC1*skoXC1))<=16,skoXC1*skoXC1*(-80+skoXC1*skoXC1*(40+skoXC1*skoXC1*(-6+skoXC1*skoXC1*(1/8))))>-48,skoXC1*skoXC1*(80+skoXC1*skoXC1*(-40+skoXC1*skoXC1*(6+skoXC1*skoXC1*(-1/8))))<=48,skoXC1*skoXC1>0,skoXC1*(-1+skoXC1*skoXC1*((1/3)+skoXC1*skoXC1*(3/20)))<=0,skoXC1*skoXC1*((-1/6)+skoXC1*skoXC1*(-3/40))<=1,skoXC1*skoXC1*((-1/2)+skoXC1*skoXC1*((7/120)+skoXC1*skoXC1*(-3/40)))<=0,skoXC1*skoXC1*skoXC1*skoXC1*((-13/60)+skoXC1*skoXC1*(-3/10))<=0,skoXC1*skoXC1*skoXC1*skoXC1*((-17/120)+skoXC1*skoXC1*(3/80))<=0,skoXC1*skoXC1*((1/3)+skoXC1*skoXC1*(3/20))<=1,skoXC1*skoXC1*skoXC1*skoXC1*((32/15)+skoXC1*skoXC1*((-296/15)+skoXC1*skoXC1*((391/15)+skoXC1*skoXC1*((-146/15)+skoXC1*skoXC1*(3/4)))))<=0,skoXC1*skoXC1*((1/6)+skoXC1*skoXC1*(3/40))>-1,skoXC1*(-1+skoXC1*skoXC1*((-1/6)+skoXC1*skoXC1*(-3/40)))<=0]], Reals]]

% In QepcadB format:
(E skoXC1) [[(skoXC1 (-1+(skoXC1 skoXC1 (-1/6+(skoXC1 skoXC1 (-3/40+(skoXC1 skoXC1 (-5/112))))))))<=0]/\[[-1<(skoXC1 skoXC1 (1/6+(skoXC1 skoXC1 (3/40+(skoXC1 skoXC1 (5/112))))))]/\[[-1<(skoXC1 skoXC1 (1/6+(skoXC1 skoXC1 (3/40+(skoXC1 skoXC1 (5/112))))))]/\[[(skoXC1 skoXC1 skoXC1 skoXC1 (32/15+(skoXC1 skoXC1 (-272/105+(skoXC1 skoXC1 (-1163/105+(skoXC1 skoXC1 (1753/105+(skoXC1 skoXC1 (-169/28+(skoXC1 skoXC1 (25/56))))))))))))<=0]/\[[(skoXC1 skoXC1 (1/3+(skoXC1 skoXC1 (3/20+(skoXC1 skoXC1 (5/56))))))<=1]/\[[(skoXC1 skoXC1 skoXC1 skoXC1 (-17/120+(skoXC1 skoXC1 (-27/280+(skoXC1 skoXC1 (5/224))))))<=0]/\[[(skoXC1 skoXC1 skoXC1 skoXC1 (-13/60+(skoXC1 skoXC1 (-9/280+(skoXC1 skoXC1 (-5/28))))))<=0]/\[[(skoXC1 skoXC1 (-1/2+(skoXC1 skoXC1 (7/120+(skoXC1 skoXC1 (33/560+(skoXC1 skoXC1 (-5/112))))))))<=0]/\[[(skoXC1 skoXC1 (-1/6+(skoXC1 skoXC1 (-3/40+(skoXC1 skoXC1 (-5/112))))))<=1]/\[[(skoXC1 (-1+(skoXC1 skoXC1 (1/3+(skoXC1 skoXC1 (3/20+(skoXC1 skoXC1 (5/56))))))))<=0]/\[[(skoXC1 skoXC1 skoXC1 skoXC1 (-80/3+(skoXC1 skoXC1 (128/3+(skoXC1 skoXC1 (-55/3+(skoXC1 skoXC1 (5/3))))))))<=0]/\[[(skoXC1 skoXC1 (256+(skoXC1 skoXC1 (-160+(skoXC1 skoXC1 (32+(skoXC1 skoXC1 (-1))))))))<=128]/\[[(skoXC1 skoXC1 (1/3))<=1]/\[[(skoXC1 (-1+(skoXC1 skoXC1 (-1/6))))<=0]/\[[(skoXC1 skoXC1 skoXC1 skoXC1 (-2/3))<=0]/\[[(skoXC1 skoXC1)<=2]/\[[(skoXC1 skoXC1 (-1/2+(skoXC1 skoXC1 (-1/6))))<=0]/\[[(skoXC1 skoXC1 (-1/6))<=1]/\[[(skoXC1 (-1+(skoXC1 skoXC1 (1/3))))<=0]/\[[skoXC1<7/8]/\[[0<skoXC1]/\[[-3<(skoXC1 skoXC1 (-1/2))]/\[[(skoXC1 skoXC1 (1/2))<=3]/\[[(skoXC1 skoXC1 (24+(skoXC1 skoXC1 (-10+(skoXC1 skoXC1)))))<=16]/\[[-48<(skoXC1 skoXC1 (-80+(skoXC1 skoXC1 (40+(skoXC1 skoXC1 (-6+(skoXC1 skoXC1 (1/8))))))))]/\[[(skoXC1 skoXC1 (80+(skoXC1 skoXC1 (-40+(skoXC1 skoXC1 (6+(skoXC1 skoXC1 (-1/8))))))))<=48]/\[[0<(skoXC1 skoXC1)]/\[[(skoXC1 (-1+(skoXC1 skoXC1 (1/3+(skoXC1 skoXC1 (3/20))))))<=0]/\[[(skoXC1 skoXC1 (-1/6+(skoXC1 skoXC1 (-3/40))))<=1]/\[[(skoXC1 skoXC1 (-1/2+(skoXC1 skoXC1 (7/120+(skoXC1 skoXC1 (-3/40))))))<=0]/\[[(skoXC1 skoXC1 skoXC1 skoXC1 (-13/60+(skoXC1 skoXC1 (-3/10))))<=0]/\[[(skoXC1 skoXC1 skoXC1 skoXC1 (-17/120+(skoXC1 skoXC1 (3/80))))<=0]/\[[(skoXC1 skoXC1 (1/3+(skoXC1 skoXC1 (3/20))))<=1]/\[[(skoXC1 skoXC1 skoXC1 skoXC1 (32/15+(skoXC1 skoXC1 (-296/15+(skoXC1 skoXC1 (391/15+(skoXC1 skoXC1 (-146/15+(skoXC1 skoXC1 (3/4))))))))))<=0]/\[[-1<(skoXC1 skoXC1 (1/6+(skoXC1 skoXC1 (3/40))))]/\[(skoXC1 (-1+(skoXC1 skoXC1 (-1/6+(skoXC1 skoXC1 (-3/40))))))<=0]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]].

% In SMTLib2 format:
(declare-fun skoXC1 () Real) (assert (and (<= (* skoXC1 (+ (- 1.) (* skoXC1 (* skoXC1 (+ (/ (- 1.) 6.) (* skoXC1 (* skoXC1 (+ (/ (- 3.) 40.) (* skoXC1 (* skoXC1 (/ (- 5.) 112.))))))))))) 0.) (and (> (* skoXC1 (* skoXC1 (+ (/ 1. 6.) (* skoXC1 (* skoXC1 (+ (/ 3. 40.) (* skoXC1 (* skoXC1 (/ 5. 112.))))))))) (- 1.)) (and (> (* skoXC1 (* skoXC1 (+ (/ 1. 6.) (* skoXC1 (* skoXC1 (+ (/ 3. 40.) (* skoXC1 (* skoXC1 (/ 5. 112.))))))))) (- 1.)) (and (<= (* skoXC1 (* skoXC1 (* skoXC1 (* skoXC1 (+ (/ 32. 15.) (* skoXC1 (* skoXC1 (+ (/ (- 272.) 105.) (* skoXC1 (* skoXC1 (+ (/ (- 1163.) 105.) (* skoXC1 (* skoXC1 (+ (/ 1753. 105.) (* skoXC1 (* skoXC1 (+ (/ (- 169.) 28.) (* skoXC1 (* skoXC1 (/ 25. 56.)))))))))))))))))))) 0.) (and (<= (* skoXC1 (* skoXC1 (+ (/ 1. 3.) (* skoXC1 (* skoXC1 (+ (/ 3. 20.) (* skoXC1 (* skoXC1 (/ 5. 56.))))))))) 1.) (and (<= (* skoXC1 (* skoXC1 (* skoXC1 (* skoXC1 (+ (/ (- 17.) 120.) (* skoXC1 (* skoXC1 (+ (/ (- 27.) 280.) (* skoXC1 (* skoXC1 (/ 5. 224.))))))))))) 0.) (and (<= (* skoXC1 (* skoXC1 (* skoXC1 (* skoXC1 (+ (/ (- 13.) 60.) (* skoXC1 (* skoXC1 (+ (/ (- 9.) 280.) (* skoXC1 (* skoXC1 (/ (- 5.) 28.))))))))))) 0.) (and (<= (* skoXC1 (* skoXC1 (+ (/ (- 1.) 2.) (* skoXC1 (* skoXC1 (+ (/ 7. 120.) (* skoXC1 (* skoXC1 (+ (/ 33. 560.) (* skoXC1 (* skoXC1 (/ (- 5.) 112.)))))))))))) 0.) (and (<= (* skoXC1 (* skoXC1 (+ (/ (- 1.) 6.) (* skoXC1 (* skoXC1 (+ (/ (- 3.) 40.) (* skoXC1 (* skoXC1 (/ (- 5.) 112.))))))))) 1.) (and (<= (* skoXC1 (+ (- 1.) (* skoXC1 (* skoXC1 (+ (/ 1. 3.) (* skoXC1 (* skoXC1 (+ (/ 3. 20.) (* skoXC1 (* skoXC1 (/ 5. 56.))))))))))) 0.) (and (<= (* skoXC1 (* skoXC1 (* skoXC1 (* skoXC1 (+ (/ (- 80.) 3.) (* skoXC1 (* skoXC1 (+ (/ 128. 3.) (* skoXC1 (* skoXC1 (+ (/ (- 55.) 3.) (* skoXC1 (* skoXC1 (/ 5. 3.)))))))))))))) 0.) (and (<= (* skoXC1 (* skoXC1 (+ 256. (* skoXC1 (* skoXC1 (+ (- 160.) (* skoXC1 (* skoXC1 (+ 32. (* skoXC1 (* skoXC1 (- 1.)))))))))))) 128.) (and (<= (* skoXC1 (* skoXC1 (/ 1. 3.))) 1.) (and (<= (* skoXC1 (+ (- 1.) (* skoXC1 (* skoXC1 (/ (- 1.) 6.))))) 0.) (and (<= (* skoXC1 (* skoXC1 (* skoXC1 (* skoXC1 (/ (- 2.) 3.))))) 0.) (and (<= (* skoXC1 skoXC1) 2.) (and (<= (* skoXC1 (* skoXC1 (+ (/ (- 1.) 2.) (* skoXC1 (* skoXC1 (/ (- 1.) 6.)))))) 0.) (and (<= (* skoXC1 (* skoXC1 (/ (- 1.) 6.))) 1.) (and (<= (* skoXC1 (+ (- 1.) (* skoXC1 (* skoXC1 (/ 1. 3.))))) 0.) (and (> (/ 7. 8.) skoXC1) (and (> skoXC1 0.) (and (> (* skoXC1 (* skoXC1 (/ (- 1.) 2.))) (- 3.)) (and (<= (* skoXC1 (* skoXC1 (/ 1. 2.))) 3.) (and (<= (* skoXC1 (* skoXC1 (+ 24. (* skoXC1 (* skoXC1 (+ (- 10.) (* skoXC1 skoXC1))))))) 16.) (and (> (* skoXC1 (* skoXC1 (+ (- 80.) (* skoXC1 (* skoXC1 (+ 40. (* skoXC1 (* skoXC1 (+ (- 6.) (* skoXC1 (* skoXC1 (/ 1. 8.)))))))))))) (- 48.)) (and (<= (* skoXC1 (* skoXC1 (+ 80. (* skoXC1 (* skoXC1 (+ (- 40.) (* skoXC1 (* skoXC1 (+ 6. (* skoXC1 (* skoXC1 (/ (- 1.) 8.)))))))))))) 48.) (and (> (* skoXC1 skoXC1) 0.) (and (<= (* skoXC1 (+ (- 1.) (* skoXC1 (* skoXC1 (+ (/ 1. 3.) (* skoXC1 (* skoXC1 (/ 3. 20.)))))))) 0.) (and (<= (* skoXC1 (* skoXC1 (+ (/ (- 1.) 6.) (* skoXC1 (* skoXC1 (/ (- 3.) 40.)))))) 1.) (and (<= (* skoXC1 (* skoXC1 (+ (/ (- 1.) 2.) (* skoXC1 (* skoXC1 (+ (/ 7. 120.) (* skoXC1 (* skoXC1 (/ (- 3.) 40.))))))))) 0.) (and (<= (* skoXC1 (* skoXC1 (* skoXC1 (* skoXC1 (+ (/ (- 13.) 60.) (* skoXC1 (* skoXC1 (/ (- 3.) 10.)))))))) 0.) (and (<= (* skoXC1 (* skoXC1 (* skoXC1 (* skoXC1 (+ (/ (- 17.) 120.) (* skoXC1 (* skoXC1 (/ 3. 80.)))))))) 0.) (and (<= (* skoXC1 (* skoXC1 (+ (/ 1. 3.) (* skoXC1 (* skoXC1 (/ 3. 20.)))))) 1.) (and (<= (* skoXC1 (* skoXC1 (* skoXC1 (* skoXC1 (+ (/ 32. 15.) (* skoXC1 (* skoXC1 (+ (/ (- 296.) 15.) (* skoXC1 (* skoXC1 (+ (/ 391. 15.) (* skoXC1 (* skoXC1 (+ (/ (- 146.) 15.) (* skoXC1 (* skoXC1 (/ 3. 4.))))))))))))))))) 0.) (and (> (* skoXC1 (* skoXC1 (+ (/ 1. 6.) (* skoXC1 (* skoXC1 (/ 3. 40.)))))) (- 1.)) (<= (* skoXC1 (+ (- 1.) (* skoXC1 (* skoXC1 (+ (/ (- 1.) 6.) (* skoXC1 (* skoXC1 (/ (- 3.) 40.)))))))) 0.)))))))))))))))))))))))))))))))))))))

% In GRF format:
(sequent " MetiTarski formula " (antecedent (<= (* skoXC1 (+ (- 1.) (* skoXC1 (* skoXC1 (+ (/ (- 1.) 6.) (* skoXC1 (* skoXC1 (+ (/ (- 3.) 40.) (* skoXC1 (* skoXC1 (/ (- 5.) 112.))))))))))) 0.) (> (* skoXC1 (* skoXC1 (+ (/ 1. 6.) (* skoXC1 (* skoXC1 (+ (/ 3. 40.) (* skoXC1 (* skoXC1 (/ 5. 112.))))))))) (- 1.)) (> (* skoXC1 (* skoXC1 (+ (/ 1. 6.) (* skoXC1 (* skoXC1 (+ (/ 3. 40.) (* skoXC1 (* skoXC1 (/ 5. 112.))))))))) (- 1.)) (<= (* skoXC1 (* skoXC1 (* skoXC1 (* skoXC1 (+ (/ 32. 15.) (* skoXC1 (* skoXC1 (+ (/ (- 272.) 105.) (* skoXC1 (* skoXC1 (+ (/ (- 1163.) 105.) (* skoXC1 (* skoXC1 (+ (/ 1753. 105.) (* skoXC1 (* skoXC1 (+ (/ (- 169.) 28.) (* skoXC1 (* skoXC1 (/ 25. 56.)))))))))))))))))))) 0.) (<= (* skoXC1 (* skoXC1 (+ (/ 1. 3.) (* skoXC1 (* skoXC1 (+ (/ 3. 20.) (* skoXC1 (* skoXC1 (/ 5. 56.))))))))) 1.) (<= (* skoXC1 (* skoXC1 (* skoXC1 (* skoXC1 (+ (/ (- 17.) 120.) (* skoXC1 (* skoXC1 (+ (/ (- 27.) 280.) (* skoXC1 (* skoXC1 (/ 5. 224.))))))))))) 0.) (<= (* skoXC1 (* skoXC1 (* skoXC1 (* skoXC1 (+ (/ (- 13.) 60.) (* skoXC1 (* skoXC1 (+ (/ (- 9.) 280.) (* skoXC1 (* skoXC1 (/ (- 5.) 28.))))))))))) 0.) (<= (* skoXC1 (* skoXC1 (+ (/ (- 1.) 2.) (* skoXC1 (* skoXC1 (+ (/ 7. 120.) (* skoXC1 (* skoXC1 (+ (/ 33. 560.) (* skoXC1 (* skoXC1 (/ (- 5.) 112.)))))))))))) 0.) (<= (* skoXC1 (* skoXC1 (+ (/ (- 1.) 6.) (* skoXC1 (* skoXC1 (+ (/ (- 3.) 40.) (* skoXC1 (* skoXC1 (/ (- 5.) 112.))))))))) 1.) (<= (* skoXC1 (+ (- 1.) (* skoXC1 (* skoXC1 (+ (/ 1. 3.) (* skoXC1 (* skoXC1 (+ (/ 3. 20.) (* skoXC1 (* skoXC1 (/ 5. 56.))))))))))) 0.) (<= (* skoXC1 (* skoXC1 (* skoXC1 (* skoXC1 (+ (/ (- 80.) 3.) (* skoXC1 (* skoXC1 (+ (/ 128. 3.) (* skoXC1 (* skoXC1 (+ (/ (- 55.) 3.) (* skoXC1 (* skoXC1 (/ 5. 3.)))))))))))))) 0.) (<= (* skoXC1 (* skoXC1 (+ 256. (* skoXC1 (* skoXC1 (+ (- 160.) (* skoXC1 (* skoXC1 (+ 32. (* skoXC1 (* skoXC1 (- 1.)))))))))))) 128.) (<= (* skoXC1 (* skoXC1 (/ 1. 3.))) 1.) (<= (* skoXC1 (+ (- 1.) (* skoXC1 (* skoXC1 (/ (- 1.) 6.))))) 0.) (<= (* skoXC1 (* skoXC1 (* skoXC1 (* skoXC1 (/ (- 2.) 3.))))) 0.) (<= (* skoXC1 skoXC1) 2.) (<= (* skoXC1 (* skoXC1 (+ (/ (- 1.) 2.) (* skoXC1 (* skoXC1 (/ (- 1.) 6.)))))) 0.) (<= (* skoXC1 (* skoXC1 (/ (- 1.) 6.))) 1.) (<= (* skoXC1 (+ (- 1.) (* skoXC1 (* skoXC1 (/ 1. 3.))))) 0.) (> (/ 7. 8.) skoXC1) (> skoXC1 0.) (> (* skoXC1 (* skoXC1 (/ (- 1.) 2.))) (- 3.)) (<= (* skoXC1 (* skoXC1 (/ 1. 2.))) 3.) (<= (* skoXC1 (* skoXC1 (+ 24. (* skoXC1 (* skoXC1 (+ (- 10.) (* skoXC1 skoXC1))))))) 16.) (> (* skoXC1 (* skoXC1 (+ (- 80.) (* skoXC1 (* skoXC1 (+ 40. (* skoXC1 (* skoXC1 (+ (- 6.) (* skoXC1 (* skoXC1 (/ 1. 8.)))))))))))) (- 48.)) (<= (* skoXC1 (* skoXC1 (+ 80. (* skoXC1 (* skoXC1 (+ (- 40.) (* skoXC1 (* skoXC1 (+ 6. (* skoXC1 (* skoXC1 (/ (- 1.) 8.)))))))))))) 48.) (> (* skoXC1 skoXC1) 0.) (<= (* skoXC1 (+ (- 1.) (* skoXC1 (* skoXC1 (+ (/ 1. 3.) (* skoXC1 (* skoXC1 (/ 3. 20.)))))))) 0.) (<= (* skoXC1 (* skoXC1 (+ (/ (- 1.) 6.) (* skoXC1 (* skoXC1 (/ (- 3.) 40.)))))) 1.) (<= (* skoXC1 (* skoXC1 (+ (/ (- 1.) 2.) (* skoXC1 (* skoXC1 (+ (/ 7. 120.) (* skoXC1 (* skoXC1 (/ (- 3.) 40.))))))))) 0.) (<= (* skoXC1 (* skoXC1 (* skoXC1 (* skoXC1 (+ (/ (- 13.) 60.) (* skoXC1 (* skoXC1 (/ (- 3.) 10.)))))))) 0.) (<= (* skoXC1 (* skoXC1 (* skoXC1 (* skoXC1 (+ (/ (- 17.) 120.) (* skoXC1 (* skoXC1 (/ 3. 80.)))))))) 0.) (<= (* skoXC1 (* skoXC1 (+ (/ 1. 3.) (* skoXC1 (* skoXC1 (/ 3. 20.)))))) 1.) (<= (* skoXC1 (* skoXC1 (* skoXC1 (* skoXC1 (+ (/ 32. 15.) (* skoXC1 (* skoXC1 (+ (/ (- 296.) 15.) (* skoXC1 (* skoXC1 (+ (/ 391. 15.) (* skoXC1 (* skoXC1 (+ (/ (- 146.) 15.) (* skoXC1 (* skoXC1 (/ 3. 4.))))))))))))))))) 0.) (> (* skoXC1 (* skoXC1 (+ (/ 1. 6.) (* skoXC1 (* skoXC1 (/ 3. 40.)))))) (- 1.))) (succedent (> (* skoXC1 (+ (- 1.) (* skoXC1 (* skoXC1 (+ (/ (- 1.) 6.) (* skoXC1 (* skoXC1 (/ (- 3.) 40.)))))))) 0.)))
-----[end problem]-----

-----[begin problem]-----
% In Mathematica format:
Timing[Resolve[Exists[{skoXC1}, And[skoXC1*(-1+skoXC1*skoXC1*((-1/6)+skoXC1*skoXC1*((-3/40)+skoXC1*skoXC1*(-5/112))))<=0,skoXC1*skoXC1*((1/6)+skoXC1*skoXC1*((3/40)+skoXC1*skoXC1*(5/112)))>-1,skoXC1*skoXC1*skoXC1*skoXC1*((32/15)+skoXC1*skoXC1*((-272/105)+skoXC1*skoXC1*((-1163/105)+skoXC1*skoXC1*((1753/105)+skoXC1*skoXC1*((-169/28)+skoXC1*skoXC1*(25/56))))))<=0,skoXC1*skoXC1*((1/3)+skoXC1*skoXC1*((3/20)+skoXC1*skoXC1*(5/56)))<=1,skoXC1*skoXC1*skoXC1*skoXC1*((-17/120)+skoXC1*skoXC1*((-27/280)+skoXC1*skoXC1*(5/224)))<=0,skoXC1*skoXC1*skoXC1*skoXC1*((-13/60)+skoXC1*skoXC1*((-9/280)+skoXC1*skoXC1*(-5/28)))<=0,skoXC1*skoXC1*((-1/2)+skoXC1*skoXC1*((7/120)+skoXC1*skoXC1*((33/560)+skoXC1*skoXC1*(-5/112))))<=0,skoXC1*skoXC1*((-1/6)+skoXC1*skoXC1*((-3/40)+skoXC1*skoXC1*(-5/112)))<=1,skoXC1*(-1+skoXC1*skoXC1*((1/3)+skoXC1*skoXC1*((3/20)+skoXC1*skoXC1*(5/56))))<=0,skoXC1*skoXC1*skoXC1*skoXC1*((-80/3)+skoXC1*skoXC1*((128/3)+skoXC1*skoXC1*((-55/3)+skoXC1*skoXC1*(5/3))))<=0,skoXC1*skoXC1*(256+skoXC1*skoXC1*(-160+skoXC1*skoXC1*(32+skoXC1*skoXC1*-1)))<=128,skoXC1*skoXC1*(1/3)<=1,skoXC1*(-1+skoXC1*skoXC1*(-1/6))<=0,skoXC1*skoXC1*skoXC1*skoXC1*(-2/3)<=0,skoXC1*skoXC1<=2,skoXC1*skoXC1*((-1/2)+skoXC1*skoXC1*(-1/6))<=0,skoXC1*skoXC1*(-1/6)<=1,skoXC1*(-1+skoXC1*skoXC1*(1/3))<=0,(7/8)>skoXC1,skoXC1>0,skoXC1*skoXC1*(-1/2)>-3,skoXC1*skoXC1*(1/2)<=3,skoXC1*skoXC1*(24+skoXC1*skoXC1*(-10+skoXC1*skoXC1))<=16,skoXC1*skoXC1*(-80+skoXC1*skoXC1*(40+skoXC1*skoXC1*(-6+skoXC1*skoXC1*(1/8))))>-48,skoXC1*skoXC1*(80+skoXC1*skoXC1*(-40+skoXC1*skoXC1*(6+skoXC1*skoXC1*(-1/8))))<=48,skoXC1*skoXC1>0,skoXC1*(-1+skoXC1*skoXC1*((1/3)+skoXC1*skoXC1*(3/20)))<=0,skoXC1*skoXC1*((-1/6)+skoXC1*skoXC1*(-3/40))<=1,skoXC1*skoXC1*((-1/2)+skoXC1*skoXC1*((7/120)+skoXC1*skoXC1*(-3/40)))<=0,skoXC1*skoXC1*skoXC1*skoXC1*((-13/60)+skoXC1*skoXC1*(-3/10))<=0,skoXC1*skoXC1*skoXC1*skoXC1*((-17/120)+skoXC1*skoXC1*(3/80))<=0,skoXC1*skoXC1*((1/3)+skoXC1*skoXC1*(3/20))<=1,skoXC1*skoXC1*skoXC1*skoXC1*((32/15)+skoXC1*skoXC1*((-296/15)+skoXC1*skoXC1*((391/15)+skoXC1*skoXC1*((-146/15)+skoXC1*skoXC1*(3/4)))))<=0,skoXC1*skoXC1*((1/6)+skoXC1*skoXC1*(3/40))>-1,skoXC1*(-1+skoXC1*skoXC1*((-1/6)+skoXC1*skoXC1*(-3/40)))<=0]], Reals]]

% In QepcadB format:
(E skoXC1) [[(skoXC1 (-1+(skoXC1 skoXC1 (-1/6+(skoXC1 skoXC1 (-3/40+(skoXC1 skoXC1 (-5/112))))))))<=0]/\[[-1<(skoXC1 skoXC1 (1/6+(skoXC1 skoXC1 (3/40+(skoXC1 skoXC1 (5/112))))))]/\[[(skoXC1 skoXC1 skoXC1 skoXC1 (32/15+(skoXC1 skoXC1 (-272/105+(skoXC1 skoXC1 (-1163/105+(skoXC1 skoXC1 (1753/105+(skoXC1 skoXC1 (-169/28+(skoXC1 skoXC1 (25/56))))))))))))<=0]/\[[(skoXC1 skoXC1 (1/3+(skoXC1 skoXC1 (3/20+(skoXC1 skoXC1 (5/56))))))<=1]/\[[(skoXC1 skoXC1 skoXC1 skoXC1 (-17/120+(skoXC1 skoXC1 (-27/280+(skoXC1 skoXC1 (5/224))))))<=0]/\[[(skoXC1 skoXC1 skoXC1 skoXC1 (-13/60+(skoXC1 skoXC1 (-9/280+(skoXC1 skoXC1 (-5/28))))))<=0]/\[[(skoXC1 skoXC1 (-1/2+(skoXC1 skoXC1 (7/120+(skoXC1 skoXC1 (33/560+(skoXC1 skoXC1 (-5/112))))))))<=0]/\[[(skoXC1 skoXC1 (-1/6+(skoXC1 skoXC1 (-3/40+(skoXC1 skoXC1 (-5/112))))))<=1]/\[[(skoXC1 (-1+(skoXC1 skoXC1 (1/3+(skoXC1 skoXC1 (3/20+(skoXC1 skoXC1 (5/56))))))))<=0]/\[[(skoXC1 skoXC1 skoXC1 skoXC1 (-80/3+(skoXC1 skoXC1 (128/3+(skoXC1 skoXC1 (-55/3+(skoXC1 skoXC1 (5/3))))))))<=0]/\[[(skoXC1 skoXC1 (256+(skoXC1 skoXC1 (-160+(skoXC1 skoXC1 (32+(skoXC1 skoXC1 (-1))))))))<=128]/\[[(skoXC1 skoXC1 (1/3))<=1]/\[[(skoXC1 (-1+(skoXC1 skoXC1 (-1/6))))<=0]/\[[(skoXC1 skoXC1 skoXC1 skoXC1 (-2/3))<=0]/\[[(skoXC1 skoXC1)<=2]/\[[(skoXC1 skoXC1 (-1/2+(skoXC1 skoXC1 (-1/6))))<=0]/\[[(skoXC1 skoXC1 (-1/6))<=1]/\[[(skoXC1 (-1+(skoXC1 skoXC1 (1/3))))<=0]/\[[skoXC1<7/8]/\[[0<skoXC1]/\[[-3<(skoXC1 skoXC1 (-1/2))]/\[[(skoXC1 skoXC1 (1/2))<=3]/\[[(skoXC1 skoXC1 (24+(skoXC1 skoXC1 (-10+(skoXC1 skoXC1)))))<=16]/\[[-48<(skoXC1 skoXC1 (-80+(skoXC1 skoXC1 (40+(skoXC1 skoXC1 (-6+(skoXC1 skoXC1 (1/8))))))))]/\[[(skoXC1 skoXC1 (80+(skoXC1 skoXC1 (-40+(skoXC1 skoXC1 (6+(skoXC1 skoXC1 (-1/8))))))))<=48]/\[[0<(skoXC1 skoXC1)]/\[[(skoXC1 (-1+(skoXC1 skoXC1 (1/3+(skoXC1 skoXC1 (3/20))))))<=0]/\[[(skoXC1 skoXC1 (-1/6+(skoXC1 skoXC1 (-3/40))))<=1]/\[[(skoXC1 skoXC1 (-1/2+(skoXC1 skoXC1 (7/120+(skoXC1 skoXC1 (-3/40))))))<=0]/\[[(skoXC1 skoXC1 skoXC1 skoXC1 (-13/60+(skoXC1 skoXC1 (-3/10))))<=0]/\[[(skoXC1 skoXC1 skoXC1 skoXC1 (-17/120+(skoXC1 skoXC1 (3/80))))<=0]/\[[(skoXC1 skoXC1 (1/3+(skoXC1 skoXC1 (3/20))))<=1]/\[[(skoXC1 skoXC1 skoXC1 skoXC1 (32/15+(skoXC1 skoXC1 (-296/15+(skoXC1 skoXC1 (391/15+(skoXC1 skoXC1 (-146/15+(skoXC1 skoXC1 (3/4))))))))))<=0]/\[[-1<(skoXC1 skoXC1 (1/6+(skoXC1 skoXC1 (3/40))))]/\[(skoXC1 (-1+(skoXC1 skoXC1 (-1/6+(skoXC1 skoXC1 (-3/40))))))<=0]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]].

% In SMTLib2 format:
(declare-fun skoXC1 () Real) (assert (and (<= (* skoXC1 (+ (- 1.) (* skoXC1 (* skoXC1 (+ (/ (- 1.) 6.) (* skoXC1 (* skoXC1 (+ (/ (- 3.) 40.) (* skoXC1 (* skoXC1 (/ (- 5.) 112.))))))))))) 0.) (and (> (* skoXC1 (* skoXC1 (+ (/ 1. 6.) (* skoXC1 (* skoXC1 (+ (/ 3. 40.) (* skoXC1 (* skoXC1 (/ 5. 112.))))))))) (- 1.)) (and (<= (* skoXC1 (* skoXC1 (* skoXC1 (* skoXC1 (+ (/ 32. 15.) (* skoXC1 (* skoXC1 (+ (/ (- 272.) 105.) (* skoXC1 (* skoXC1 (+ (/ (- 1163.) 105.) (* skoXC1 (* skoXC1 (+ (/ 1753. 105.) (* skoXC1 (* skoXC1 (+ (/ (- 169.) 28.) (* skoXC1 (* skoXC1 (/ 25. 56.)))))))))))))))))))) 0.) (and (<= (* skoXC1 (* skoXC1 (+ (/ 1. 3.) (* skoXC1 (* skoXC1 (+ (/ 3. 20.) (* skoXC1 (* skoXC1 (/ 5. 56.))))))))) 1.) (and (<= (* skoXC1 (* skoXC1 (* skoXC1 (* skoXC1 (+ (/ (- 17.) 120.) (* skoXC1 (* skoXC1 (+ (/ (- 27.) 280.) (* skoXC1 (* skoXC1 (/ 5. 224.))))))))))) 0.) (and (<= (* skoXC1 (* skoXC1 (* skoXC1 (* skoXC1 (+ (/ (- 13.) 60.) (* skoXC1 (* skoXC1 (+ (/ (- 9.) 280.) (* skoXC1 (* skoXC1 (/ (- 5.) 28.))))))))))) 0.) (and (<= (* skoXC1 (* skoXC1 (+ (/ (- 1.) 2.) (* skoXC1 (* skoXC1 (+ (/ 7. 120.) (* skoXC1 (* skoXC1 (+ (/ 33. 560.) (* skoXC1 (* skoXC1 (/ (- 5.) 112.)))))))))))) 0.) (and (<= (* skoXC1 (* skoXC1 (+ (/ (- 1.) 6.) (* skoXC1 (* skoXC1 (+ (/ (- 3.) 40.) (* skoXC1 (* skoXC1 (/ (- 5.) 112.))))))))) 1.) (and (<= (* skoXC1 (+ (- 1.) (* skoXC1 (* skoXC1 (+ (/ 1. 3.) (* skoXC1 (* skoXC1 (+ (/ 3. 20.) (* skoXC1 (* skoXC1 (/ 5. 56.))))))))))) 0.) (and (<= (* skoXC1 (* skoXC1 (* skoXC1 (* skoXC1 (+ (/ (- 80.) 3.) (* skoXC1 (* skoXC1 (+ (/ 128. 3.) (* skoXC1 (* skoXC1 (+ (/ (- 55.) 3.) (* skoXC1 (* skoXC1 (/ 5. 3.)))))))))))))) 0.) (and (<= (* skoXC1 (* skoXC1 (+ 256. (* skoXC1 (* skoXC1 (+ (- 160.) (* skoXC1 (* skoXC1 (+ 32. (* skoXC1 (* skoXC1 (- 1.)))))))))))) 128.) (and (<= (* skoXC1 (* skoXC1 (/ 1. 3.))) 1.) (and (<= (* skoXC1 (+ (- 1.) (* skoXC1 (* skoXC1 (/ (- 1.) 6.))))) 0.) (and (<= (* skoXC1 (* skoXC1 (* skoXC1 (* skoXC1 (/ (- 2.) 3.))))) 0.) (and (<= (* skoXC1 skoXC1) 2.) (and (<= (* skoXC1 (* skoXC1 (+ (/ (- 1.) 2.) (* skoXC1 (* skoXC1 (/ (- 1.) 6.)))))) 0.) (and (<= (* skoXC1 (* skoXC1 (/ (- 1.) 6.))) 1.) (and (<= (* skoXC1 (+ (- 1.) (* skoXC1 (* skoXC1 (/ 1. 3.))))) 0.) (and (> (/ 7. 8.) skoXC1) (and (> skoXC1 0.) (and (> (* skoXC1 (* skoXC1 (/ (- 1.) 2.))) (- 3.)) (and (<= (* skoXC1 (* skoXC1 (/ 1. 2.))) 3.) (and (<= (* skoXC1 (* skoXC1 (+ 24. (* skoXC1 (* skoXC1 (+ (- 10.) (* skoXC1 skoXC1))))))) 16.) (and (> (* skoXC1 (* skoXC1 (+ (- 80.) (* skoXC1 (* skoXC1 (+ 40. (* skoXC1 (* skoXC1 (+ (- 6.) (* skoXC1 (* skoXC1 (/ 1. 8.)))))))))))) (- 48.)) (and (<= (* skoXC1 (* skoXC1 (+ 80. (* skoXC1 (* skoXC1 (+ (- 40.) (* skoXC1 (* skoXC1 (+ 6. (* skoXC1 (* skoXC1 (/ (- 1.) 8.)))))))))))) 48.) (and (> (* skoXC1 skoXC1) 0.) (and (<= (* skoXC1 (+ (- 1.) (* skoXC1 (* skoXC1 (+ (/ 1. 3.) (* skoXC1 (* skoXC1 (/ 3. 20.)))))))) 0.) (and (<= (* skoXC1 (* skoXC1 (+ (/ (- 1.) 6.) (* skoXC1 (* skoXC1 (/ (- 3.) 40.)))))) 1.) (and (<= (* skoXC1 (* skoXC1 (+ (/ (- 1.) 2.) (* skoXC1 (* skoXC1 (+ (/ 7. 120.) (* skoXC1 (* skoXC1 (/ (- 3.) 40.))))))))) 0.) (and (<= (* skoXC1 (* skoXC1 (* skoXC1 (* skoXC1 (+ (/ (- 13.) 60.) (* skoXC1 (* skoXC1 (/ (- 3.) 10.)))))))) 0.) (and (<= (* skoXC1 (* skoXC1 (* skoXC1 (* skoXC1 (+ (/ (- 17.) 120.) (* skoXC1 (* skoXC1 (/ 3. 80.)))))))) 0.) (and (<= (* skoXC1 (* skoXC1 (+ (/ 1. 3.) (* skoXC1 (* skoXC1 (/ 3. 20.)))))) 1.) (and (<= (* skoXC1 (* skoXC1 (* skoXC1 (* skoXC1 (+ (/ 32. 15.) (* skoXC1 (* skoXC1 (+ (/ (- 296.) 15.) (* skoXC1 (* skoXC1 (+ (/ 391. 15.) (* skoXC1 (* skoXC1 (+ (/ (- 146.) 15.) (* skoXC1 (* skoXC1 (/ 3. 4.))))))))))))))))) 0.) (and (> (* skoXC1 (* skoXC1 (+ (/ 1. 6.) (* skoXC1 (* skoXC1 (/ 3. 40.)))))) (- 1.)) (<= (* skoXC1 (+ (- 1.) (* skoXC1 (* skoXC1 (+ (/ (- 1.) 6.) (* skoXC1 (* skoXC1 (/ (- 3.) 40.)))))))) 0.))))))))))))))))))))))))))))))))))))

% In GRF format:
(sequent " MetiTarski formula " (antecedent (<= (* skoXC1 (+ (- 1.) (* skoXC1 (* skoXC1 (+ (/ (- 1.) 6.) (* skoXC1 (* skoXC1 (+ (/ (- 3.) 40.) (* skoXC1 (* skoXC1 (/ (- 5.) 112.))))))))))) 0.) (> (* skoXC1 (* skoXC1 (+ (/ 1. 6.) (* skoXC1 (* skoXC1 (+ (/ 3. 40.) (* skoXC1 (* skoXC1 (/ 5. 112.))))))))) (- 1.)) (<= (* skoXC1 (* skoXC1 (* skoXC1 (* skoXC1 (+ (/ 32. 15.) (* skoXC1 (* skoXC1 (+ (/ (- 272.) 105.) (* skoXC1 (* skoXC1 (+ (/ (- 1163.) 105.) (* skoXC1 (* skoXC1 (+ (/ 1753. 105.) (* skoXC1 (* skoXC1 (+ (/ (- 169.) 28.) (* skoXC1 (* skoXC1 (/ 25. 56.)))))))))))))))))))) 0.) (<= (* skoXC1 (* skoXC1 (+ (/ 1. 3.) (* skoXC1 (* skoXC1 (+ (/ 3. 20.) (* skoXC1 (* skoXC1 (/ 5. 56.))))))))) 1.) (<= (* skoXC1 (* skoXC1 (* skoXC1 (* skoXC1 (+ (/ (- 17.) 120.) (* skoXC1 (* skoXC1 (+ (/ (- 27.) 280.) (* skoXC1 (* skoXC1 (/ 5. 224.))))))))))) 0.) (<= (* skoXC1 (* skoXC1 (* skoXC1 (* skoXC1 (+ (/ (- 13.) 60.) (* skoXC1 (* skoXC1 (+ (/ (- 9.) 280.) (* skoXC1 (* skoXC1 (/ (- 5.) 28.))))))))))) 0.) (<= (* skoXC1 (* skoXC1 (+ (/ (- 1.) 2.) (* skoXC1 (* skoXC1 (+ (/ 7. 120.) (* skoXC1 (* skoXC1 (+ (/ 33. 560.) (* skoXC1 (* skoXC1 (/ (- 5.) 112.)))))))))))) 0.) (<= (* skoXC1 (* skoXC1 (+ (/ (- 1.) 6.) (* skoXC1 (* skoXC1 (+ (/ (- 3.) 40.) (* skoXC1 (* skoXC1 (/ (- 5.) 112.))))))))) 1.) (<= (* skoXC1 (+ (- 1.) (* skoXC1 (* skoXC1 (+ (/ 1. 3.) (* skoXC1 (* skoXC1 (+ (/ 3. 20.) (* skoXC1 (* skoXC1 (/ 5. 56.))))))))))) 0.) (<= (* skoXC1 (* skoXC1 (* skoXC1 (* skoXC1 (+ (/ (- 80.) 3.) (* skoXC1 (* skoXC1 (+ (/ 128. 3.) (* skoXC1 (* skoXC1 (+ (/ (- 55.) 3.) (* skoXC1 (* skoXC1 (/ 5. 3.)))))))))))))) 0.) (<= (* skoXC1 (* skoXC1 (+ 256. (* skoXC1 (* skoXC1 (+ (- 160.) (* skoXC1 (* skoXC1 (+ 32. (* skoXC1 (* skoXC1 (- 1.)))))))))))) 128.) (<= (* skoXC1 (* skoXC1 (/ 1. 3.))) 1.) (<= (* skoXC1 (+ (- 1.) (* skoXC1 (* skoXC1 (/ (- 1.) 6.))))) 0.) (<= (* skoXC1 (* skoXC1 (* skoXC1 (* skoXC1 (/ (- 2.) 3.))))) 0.) (<= (* skoXC1 skoXC1) 2.) (<= (* skoXC1 (* skoXC1 (+ (/ (- 1.) 2.) (* skoXC1 (* skoXC1 (/ (- 1.) 6.)))))) 0.) (<= (* skoXC1 (* skoXC1 (/ (- 1.) 6.))) 1.) (<= (* skoXC1 (+ (- 1.) (* skoXC1 (* skoXC1 (/ 1. 3.))))) 0.) (> (/ 7. 8.) skoXC1) (> skoXC1 0.) (> (* skoXC1 (* skoXC1 (/ (- 1.) 2.))) (- 3.)) (<= (* skoXC1 (* skoXC1 (/ 1. 2.))) 3.) (<= (* skoXC1 (* skoXC1 (+ 24. (* skoXC1 (* skoXC1 (+ (- 10.) (* skoXC1 skoXC1))))))) 16.) (> (* skoXC1 (* skoXC1 (+ (- 80.) (* skoXC1 (* skoXC1 (+ 40. (* skoXC1 (* skoXC1 (+ (- 6.) (* skoXC1 (* skoXC1 (/ 1. 8.)))))))))))) (- 48.)) (<= (* skoXC1 (* skoXC1 (+ 80. (* skoXC1 (* skoXC1 (+ (- 40.) (* skoXC1 (* skoXC1 (+ 6. (* skoXC1 (* skoXC1 (/ (- 1.) 8.)))))))))))) 48.) (> (* skoXC1 skoXC1) 0.) (<= (* skoXC1 (+ (- 1.) (* skoXC1 (* skoXC1 (+ (/ 1. 3.) (* skoXC1 (* skoXC1 (/ 3. 20.)))))))) 0.) (<= (* skoXC1 (* skoXC1 (+ (/ (- 1.) 6.) (* skoXC1 (* skoXC1 (/ (- 3.) 40.)))))) 1.) (<= (* skoXC1 (* skoXC1 (+ (/ (- 1.) 2.) (* skoXC1 (* skoXC1 (+ (/ 7. 120.) (* skoXC1 (* skoXC1 (/ (- 3.) 40.))))))))) 0.) (<= (* skoXC1 (* skoXC1 (* skoXC1 (* skoXC1 (+ (/ (- 13.) 60.) (* skoXC1 (* skoXC1 (/ (- 3.) 10.)))))))) 0.) (<= (* skoXC1 (* skoXC1 (* skoXC1 (* skoXC1 (+ (/ (- 17.) 120.) (* skoXC1 (* skoXC1 (/ 3. 80.)))))))) 0.) (<= (* skoXC1 (* skoXC1 (+ (/ 1. 3.) (* skoXC1 (* skoXC1 (/ 3. 20.)))))) 1.) (<= (* skoXC1 (* skoXC1 (* skoXC1 (* skoXC1 (+ (/ 32. 15.) (* skoXC1 (* skoXC1 (+ (/ (- 296.) 15.) (* skoXC1 (* skoXC1 (+ (/ 391. 15.) (* skoXC1 (* skoXC1 (+ (/ (- 146.) 15.) (* skoXC1 (* skoXC1 (/ 3. 4.))))))))))))))))) 0.) (> (* skoXC1 (* skoXC1 (+ (/ 1. 6.) (* skoXC1 (* skoXC1 (/ 3. 40.)))))) (- 1.))) (succedent (> (* skoXC1 (+ (- 1.) (* skoXC1 (* skoXC1 (+ (/ (- 1.) 6.) (* skoXC1 (* skoXC1 (/ (- 3.) 40.)))))))) 0.)))
-----[end problem]-----

-----[begin problem]-----
% In Mathematica format:
Timing[Resolve[Exists[{skoXC1}, And[skoXC1*skoXC1>0,skoXC1*(-1+skoXC1*skoXC1*((-1/6)+skoXC1*skoXC1*((-3/40)+skoXC1*skoXC1*(-5/112))))<=0,skoXC1*skoXC1*((1/6)+skoXC1*skoXC1*((3/40)+skoXC1*skoXC1*(5/112)))>-1,skoXC1*skoXC1*skoXC1*skoXC1*((32/15)+skoXC1*skoXC1*((-272/105)+skoXC1*skoXC1*((-1163/105)+skoXC1*skoXC1*((1753/105)+skoXC1*skoXC1*((-169/28)+skoXC1*skoXC1*(25/56))))))<=0,skoXC1*skoXC1*((1/3)+skoXC1*skoXC1*((3/20)+skoXC1*skoXC1*(5/56)))<=1,skoXC1*skoXC1*skoXC1*skoXC1*((-17/120)+skoXC1*skoXC1*((-27/280)+skoXC1*skoXC1*(5/224)))<=0,skoXC1*skoXC1*skoXC1*skoXC1*((-13/60)+skoXC1*skoXC1*((-9/280)+skoXC1*skoXC1*(-5/28)))<=0,skoXC1*skoXC1*((-1/2)+skoXC1*skoXC1*((7/120)+skoXC1*skoXC1*((33/560)+skoXC1*skoXC1*(-5/112))))<=0,skoXC1*skoXC1*((-1/6)+skoXC1*skoXC1*((-3/40)+skoXC1*skoXC1*(-5/112)))<=1,skoXC1*(-1+skoXC1*skoXC1*((1/3)+skoXC1*skoXC1*((3/20)+skoXC1*skoXC1*(5/56))))<=0,skoXC1*skoXC1*skoXC1*skoXC1*((-80/3)+skoXC1*skoXC1*((128/3)+skoXC1*skoXC1*((-55/3)+skoXC1*skoXC1*(5/3))))<=0,skoXC1*skoXC1*(256+skoXC1*skoXC1*(-160+skoXC1*skoXC1*(32+skoXC1*skoXC1*-1)))<=128,skoXC1*skoXC1*(1/3)<=1,skoXC1*(-1+skoXC1*skoXC1*(-1/6))<=0,skoXC1*skoXC1*skoXC1*skoXC1*(-2/3)<=0,skoXC1*skoXC1<=2,skoXC1*skoXC1*((-1/2)+skoXC1*skoXC1*(-1/6))<=0,skoXC1*skoXC1*(-1/6)<=1,skoXC1*(-1+skoXC1*skoXC1*(1/3))<=0,(7/8)>skoXC1,skoXC1>0,skoXC1*skoXC1*(-1/2)>-3,skoXC1*skoXC1*(1/2)<=3,skoXC1*skoXC1*(24+skoXC1*skoXC1*(-10+skoXC1*skoXC1))<=16,skoXC1*skoXC1*(-80+skoXC1*skoXC1*(40+skoXC1*skoXC1*(-6+skoXC1*skoXC1*(1/8))))>-48,skoXC1*skoXC1*(80+skoXC1*skoXC1*(-40+skoXC1*skoXC1*(6+skoXC1*skoXC1*(-1/8))))<=48,skoXC1*skoXC1>0,skoXC1*(-1+skoXC1*skoXC1*((1/3)+skoXC1*skoXC1*(3/20)))<=0,skoXC1*skoXC1*((-1/6)+skoXC1*skoXC1*(-3/40))<=1,skoXC1*skoXC1*((-1/2)+skoXC1*skoXC1*((7/120)+skoXC1*skoXC1*(-3/40)))<=0,skoXC1*skoXC1*skoXC1*skoXC1*((-13/60)+skoXC1*skoXC1*(-3/10))<=0,skoXC1*skoXC1*skoXC1*skoXC1*((-17/120)+skoXC1*skoXC1*(3/80))<=0,skoXC1*skoXC1*((1/3)+skoXC1*skoXC1*(3/20))<=1,skoXC1*skoXC1*skoXC1*skoXC1*((32/15)+skoXC1*skoXC1*((-296/15)+skoXC1*skoXC1*((391/15)+skoXC1*skoXC1*((-146/15)+skoXC1*skoXC1*(3/4)))))<=0,skoXC1*skoXC1*((1/6)+skoXC1*skoXC1*(3/40))>-1,skoXC1*(-1+skoXC1*skoXC1*((-1/6)+skoXC1*skoXC1*(-3/40)))<=0]], Reals]]

% In QepcadB format:
(E skoXC1) [[0<(skoXC1 skoXC1)]/\[[(skoXC1 (-1+(skoXC1 skoXC1 (-1/6+(skoXC1 skoXC1 (-3/40+(skoXC1 skoXC1 (-5/112))))))))<=0]/\[[-1<(skoXC1 skoXC1 (1/6+(skoXC1 skoXC1 (3/40+(skoXC1 skoXC1 (5/112))))))]/\[[(skoXC1 skoXC1 skoXC1 skoXC1 (32/15+(skoXC1 skoXC1 (-272/105+(skoXC1 skoXC1 (-1163/105+(skoXC1 skoXC1 (1753/105+(skoXC1 skoXC1 (-169/28+(skoXC1 skoXC1 (25/56))))))))))))<=0]/\[[(skoXC1 skoXC1 (1/3+(skoXC1 skoXC1 (3/20+(skoXC1 skoXC1 (5/56))))))<=1]/\[[(skoXC1 skoXC1 skoXC1 skoXC1 (-17/120+(skoXC1 skoXC1 (-27/280+(skoXC1 skoXC1 (5/224))))))<=0]/\[[(skoXC1 skoXC1 skoXC1 skoXC1 (-13/60+(skoXC1 skoXC1 (-9/280+(skoXC1 skoXC1 (-5/28))))))<=0]/\[[(skoXC1 skoXC1 (-1/2+(skoXC1 skoXC1 (7/120+(skoXC1 skoXC1 (33/560+(skoXC1 skoXC1 (-5/112))))))))<=0]/\[[(skoXC1 skoXC1 (-1/6+(skoXC1 skoXC1 (-3/40+(skoXC1 skoXC1 (-5/112))))))<=1]/\[[(skoXC1 (-1+(skoXC1 skoXC1 (1/3+(skoXC1 skoXC1 (3/20+(skoXC1 skoXC1 (5/56))))))))<=0]/\[[(skoXC1 skoXC1 skoXC1 skoXC1 (-80/3+(skoXC1 skoXC1 (128/3+(skoXC1 skoXC1 (-55/3+(skoXC1 skoXC1 (5/3))))))))<=0]/\[[(skoXC1 skoXC1 (256+(skoXC1 skoXC1 (-160+(skoXC1 skoXC1 (32+(skoXC1 skoXC1 (-1))))))))<=128]/\[[(skoXC1 skoXC1 (1/3))<=1]/\[[(skoXC1 (-1+(skoXC1 skoXC1 (-1/6))))<=0]/\[[(skoXC1 skoXC1 skoXC1 skoXC1 (-2/3))<=0]/\[[(skoXC1 skoXC1)<=2]/\[[(skoXC1 skoXC1 (-1/2+(skoXC1 skoXC1 (-1/6))))<=0]/\[[(skoXC1 skoXC1 (-1/6))<=1]/\[[(skoXC1 (-1+(skoXC1 skoXC1 (1/3))))<=0]/\[[skoXC1<7/8]/\[[0<skoXC1]/\[[-3<(skoXC1 skoXC1 (-1/2))]/\[[(skoXC1 skoXC1 (1/2))<=3]/\[[(skoXC1 skoXC1 (24+(skoXC1 skoXC1 (-10+(skoXC1 skoXC1)))))<=16]/\[[-48<(skoXC1 skoXC1 (-80+(skoXC1 skoXC1 (40+(skoXC1 skoXC1 (-6+(skoXC1 skoXC1 (1/8))))))))]/\[[(skoXC1 skoXC1 (80+(skoXC1 skoXC1 (-40+(skoXC1 skoXC1 (6+(skoXC1 skoXC1 (-1/8))))))))<=48]/\[[0<(skoXC1 skoXC1)]/\[[(skoXC1 (-1+(skoXC1 skoXC1 (1/3+(skoXC1 skoXC1 (3/20))))))<=0]/\[[(skoXC1 skoXC1 (-1/6+(skoXC1 skoXC1 (-3/40))))<=1]/\[[(skoXC1 skoXC1 (-1/2+(skoXC1 skoXC1 (7/120+(skoXC1 skoXC1 (-3/40))))))<=0]/\[[(skoXC1 skoXC1 skoXC1 skoXC1 (-13/60+(skoXC1 skoXC1 (-3/10))))<=0]/\[[(skoXC1 skoXC1 skoXC1 skoXC1 (-17/120+(skoXC1 skoXC1 (3/80))))<=0]/\[[(skoXC1 skoXC1 (1/3+(skoXC1 skoXC1 (3/20))))<=1]/\[[(skoXC1 skoXC1 skoXC1 skoXC1 (32/15+(skoXC1 skoXC1 (-296/15+(skoXC1 skoXC1 (391/15+(skoXC1 skoXC1 (-146/15+(skoXC1 skoXC1 (3/4))))))))))<=0]/\[[-1<(skoXC1 skoXC1 (1/6+(skoXC1 skoXC1 (3/40))))]/\[(skoXC1 (-1+(skoXC1 skoXC1 (-1/6+(skoXC1 skoXC1 (-3/40))))))<=0]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]].

% In SMTLib2 format:
(declare-fun skoXC1 () Real) (assert (and (> (* skoXC1 skoXC1) 0.) (and (<= (* skoXC1 (+ (- 1.) (* skoXC1 (* skoXC1 (+ (/ (- 1.) 6.) (* skoXC1 (* skoXC1 (+ (/ (- 3.) 40.) (* skoXC1 (* skoXC1 (/ (- 5.) 112.))))))))))) 0.) (and (> (* skoXC1 (* skoXC1 (+ (/ 1. 6.) (* skoXC1 (* skoXC1 (+ (/ 3. 40.) (* skoXC1 (* skoXC1 (/ 5. 112.))))))))) (- 1.)) (and (<= (* skoXC1 (* skoXC1 (* skoXC1 (* skoXC1 (+ (/ 32. 15.) (* skoXC1 (* skoXC1 (+ (/ (- 272.) 105.) (* skoXC1 (* skoXC1 (+ (/ (- 1163.) 105.) (* skoXC1 (* skoXC1 (+ (/ 1753. 105.) (* skoXC1 (* skoXC1 (+ (/ (- 169.) 28.) (* skoXC1 (* skoXC1 (/ 25. 56.)))))))))))))))))))) 0.) (and (<= (* skoXC1 (* skoXC1 (+ (/ 1. 3.) (* skoXC1 (* skoXC1 (+ (/ 3. 20.) (* skoXC1 (* skoXC1 (/ 5. 56.))))))))) 1.) (and (<= (* skoXC1 (* skoXC1 (* skoXC1 (* skoXC1 (+ (/ (- 17.) 120.) (* skoXC1 (* skoXC1 (+ (/ (- 27.) 280.) (* skoXC1 (* skoXC1 (/ 5. 224.))))))))))) 0.) (and (<= (* skoXC1 (* skoXC1 (* skoXC1 (* skoXC1 (+ (/ (- 13.) 60.) (* skoXC1 (* skoXC1 (+ (/ (- 9.) 280.) (* skoXC1 (* skoXC1 (/ (- 5.) 28.))))))))))) 0.) (and (<= (* skoXC1 (* skoXC1 (+ (/ (- 1.) 2.) (* skoXC1 (* skoXC1 (+ (/ 7. 120.) (* skoXC1 (* skoXC1 (+ (/ 33. 560.) (* skoXC1 (* skoXC1 (/ (- 5.) 112.)))))))))))) 0.) (and (<= (* skoXC1 (* skoXC1 (+ (/ (- 1.) 6.) (* skoXC1 (* skoXC1 (+ (/ (- 3.) 40.) (* skoXC1 (* skoXC1 (/ (- 5.) 112.))))))))) 1.) (and (<= (* skoXC1 (+ (- 1.) (* skoXC1 (* skoXC1 (+ (/ 1. 3.) (* skoXC1 (* skoXC1 (+ (/ 3. 20.) (* skoXC1 (* skoXC1 (/ 5. 56.))))))))))) 0.) (and (<= (* skoXC1 (* skoXC1 (* skoXC1 (* skoXC1 (+ (/ (- 80.) 3.) (* skoXC1 (* skoXC1 (+ (/ 128. 3.) (* skoXC1 (* skoXC1 (+ (/ (- 55.) 3.) (* skoXC1 (* skoXC1 (/ 5. 3.)))))))))))))) 0.) (and (<= (* skoXC1 (* skoXC1 (+ 256. (* skoXC1 (* skoXC1 (+ (- 160.) (* skoXC1 (* skoXC1 (+ 32. (* skoXC1 (* skoXC1 (- 1.)))))))))))) 128.) (and (<= (* skoXC1 (* skoXC1 (/ 1. 3.))) 1.) (and (<= (* skoXC1 (+ (- 1.) (* skoXC1 (* skoXC1 (/ (- 1.) 6.))))) 0.) (and (<= (* skoXC1 (* skoXC1 (* skoXC1 (* skoXC1 (/ (- 2.) 3.))))) 0.) (and (<= (* skoXC1 skoXC1) 2.) (and (<= (* skoXC1 (* skoXC1 (+ (/ (- 1.) 2.) (* skoXC1 (* skoXC1 (/ (- 1.) 6.)))))) 0.) (and (<= (* skoXC1 (* skoXC1 (/ (- 1.) 6.))) 1.) (and (<= (* skoXC1 (+ (- 1.) (* skoXC1 (* skoXC1 (/ 1. 3.))))) 0.) (and (> (/ 7. 8.) skoXC1) (and (> skoXC1 0.) (and (> (* skoXC1 (* skoXC1 (/ (- 1.) 2.))) (- 3.)) (and (<= (* skoXC1 (* skoXC1 (/ 1. 2.))) 3.) (and (<= (* skoXC1 (* skoXC1 (+ 24. (* skoXC1 (* skoXC1 (+ (- 10.) (* skoXC1 skoXC1))))))) 16.) (and (> (* skoXC1 (* skoXC1 (+ (- 80.) (* skoXC1 (* skoXC1 (+ 40. (* skoXC1 (* skoXC1 (+ (- 6.) (* skoXC1 (* skoXC1 (/ 1. 8.)))))))))))) (- 48.)) (and (<= (* skoXC1 (* skoXC1 (+ 80. (* skoXC1 (* skoXC1 (+ (- 40.) (* skoXC1 (* skoXC1 (+ 6. (* skoXC1 (* skoXC1 (/ (- 1.) 8.)))))))))))) 48.) (and (> (* skoXC1 skoXC1) 0.) (and (<= (* skoXC1 (+ (- 1.) (* skoXC1 (* skoXC1 (+ (/ 1. 3.) (* skoXC1 (* skoXC1 (/ 3. 20.)))))))) 0.) (and (<= (* skoXC1 (* skoXC1 (+ (/ (- 1.) 6.) (* skoXC1 (* skoXC1 (/ (- 3.) 40.)))))) 1.) (and (<= (* skoXC1 (* skoXC1 (+ (/ (- 1.) 2.) (* skoXC1 (* skoXC1 (+ (/ 7. 120.) (* skoXC1 (* skoXC1 (/ (- 3.) 40.))))))))) 0.) (and (<= (* skoXC1 (* skoXC1 (* skoXC1 (* skoXC1 (+ (/ (- 13.) 60.) (* skoXC1 (* skoXC1 (/ (- 3.) 10.)))))))) 0.) (and (<= (* skoXC1 (* skoXC1 (* skoXC1 (* skoXC1 (+ (/ (- 17.) 120.) (* skoXC1 (* skoXC1 (/ 3. 80.)))))))) 0.) (and (<= (* skoXC1 (* skoXC1 (+ (/ 1. 3.) (* skoXC1 (* skoXC1 (/ 3. 20.)))))) 1.) (and (<= (* skoXC1 (* skoXC1 (* skoXC1 (* skoXC1 (+ (/ 32. 15.) (* skoXC1 (* skoXC1 (+ (/ (- 296.) 15.) (* skoXC1 (* skoXC1 (+ (/ 391. 15.) (* skoXC1 (* skoXC1 (+ (/ (- 146.) 15.) (* skoXC1 (* skoXC1 (/ 3. 4.))))))))))))))))) 0.) (and (> (* skoXC1 (* skoXC1 (+ (/ 1. 6.) (* skoXC1 (* skoXC1 (/ 3. 40.)))))) (- 1.)) (<= (* skoXC1 (+ (- 1.) (* skoXC1 (* skoXC1 (+ (/ (- 1.) 6.) (* skoXC1 (* skoXC1 (/ (- 3.) 40.)))))))) 0.)))))))))))))))))))))))))))))))))))))

% In GRF format:
(sequent " MetiTarski formula " (antecedent (> (* skoXC1 skoXC1) 0.) (<= (* skoXC1 (+ (- 1.) (* skoXC1 (* skoXC1 (+ (/ (- 1.) 6.) (* skoXC1 (* skoXC1 (+ (/ (- 3.) 40.) (* skoXC1 (* skoXC1 (/ (- 5.) 112.))))))))))) 0.) (> (* skoXC1 (* skoXC1 (+ (/ 1. 6.) (* skoXC1 (* skoXC1 (+ (/ 3. 40.) (* skoXC1 (* skoXC1 (/ 5. 112.))))))))) (- 1.)) (<= (* skoXC1 (* skoXC1 (* skoXC1 (* skoXC1 (+ (/ 32. 15.) (* skoXC1 (* skoXC1 (+ (/ (- 272.) 105.) (* skoXC1 (* skoXC1 (+ (/ (- 1163.) 105.) (* skoXC1 (* skoXC1 (+ (/ 1753. 105.) (* skoXC1 (* skoXC1 (+ (/ (- 169.) 28.) (* skoXC1 (* skoXC1 (/ 25. 56.)))))))))))))))))))) 0.) (<= (* skoXC1 (* skoXC1 (+ (/ 1. 3.) (* skoXC1 (* skoXC1 (+ (/ 3. 20.) (* skoXC1 (* skoXC1 (/ 5. 56.))))))))) 1.) (<= (* skoXC1 (* skoXC1 (* skoXC1 (* skoXC1 (+ (/ (- 17.) 120.) (* skoXC1 (* skoXC1 (+ (/ (- 27.) 280.) (* skoXC1 (* skoXC1 (/ 5. 224.))))))))))) 0.) (<= (* skoXC1 (* skoXC1 (* skoXC1 (* skoXC1 (+ (/ (- 13.) 60.) (* skoXC1 (* skoXC1 (+ (/ (- 9.) 280.) (* skoXC1 (* skoXC1 (/ (- 5.) 28.))))))))))) 0.) (<= (* skoXC1 (* skoXC1 (+ (/ (- 1.) 2.) (* skoXC1 (* skoXC1 (+ (/ 7. 120.) (* skoXC1 (* skoXC1 (+ (/ 33. 560.) (* skoXC1 (* skoXC1 (/ (- 5.) 112.)))))))))))) 0.) (<= (* skoXC1 (* skoXC1 (+ (/ (- 1.) 6.) (* skoXC1 (* skoXC1 (+ (/ (- 3.) 40.) (* skoXC1 (* skoXC1 (/ (- 5.) 112.))))))))) 1.) (<= (* skoXC1 (+ (- 1.) (* skoXC1 (* skoXC1 (+ (/ 1. 3.) (* skoXC1 (* skoXC1 (+ (/ 3. 20.) (* skoXC1 (* skoXC1 (/ 5. 56.))))))))))) 0.) (<= (* skoXC1 (* skoXC1 (* skoXC1 (* skoXC1 (+ (/ (- 80.) 3.) (* skoXC1 (* skoXC1 (+ (/ 128. 3.) (* skoXC1 (* skoXC1 (+ (/ (- 55.) 3.) (* skoXC1 (* skoXC1 (/ 5. 3.)))))))))))))) 0.) (<= (* skoXC1 (* skoXC1 (+ 256. (* skoXC1 (* skoXC1 (+ (- 160.) (* skoXC1 (* skoXC1 (+ 32. (* skoXC1 (* skoXC1 (- 1.)))))))))))) 128.) (<= (* skoXC1 (* skoXC1 (/ 1. 3.))) 1.) (<= (* skoXC1 (+ (- 1.) (* skoXC1 (* skoXC1 (/ (- 1.) 6.))))) 0.) (<= (* skoXC1 (* skoXC1 (* skoXC1 (* skoXC1 (/ (- 2.) 3.))))) 0.) (<= (* skoXC1 skoXC1) 2.) (<= (* skoXC1 (* skoXC1 (+ (/ (- 1.) 2.) (* skoXC1 (* skoXC1 (/ (- 1.) 6.)))))) 0.) (<= (* skoXC1 (* skoXC1 (/ (- 1.) 6.))) 1.) (<= (* skoXC1 (+ (- 1.) (* skoXC1 (* skoXC1 (/ 1. 3.))))) 0.) (> (/ 7. 8.) skoXC1) (> skoXC1 0.) (> (* skoXC1 (* skoXC1 (/ (- 1.) 2.))) (- 3.)) (<= (* skoXC1 (* skoXC1 (/ 1. 2.))) 3.) (<= (* skoXC1 (* skoXC1 (+ 24. (* skoXC1 (* skoXC1 (+ (- 10.) (* skoXC1 skoXC1))))))) 16.) (> (* skoXC1 (* skoXC1 (+ (- 80.) (* skoXC1 (* skoXC1 (+ 40. (* skoXC1 (* skoXC1 (+ (- 6.) (* skoXC1 (* skoXC1 (/ 1. 8.)))))))))))) (- 48.)) (<= (* skoXC1 (* skoXC1 (+ 80. (* skoXC1 (* skoXC1 (+ (- 40.) (* skoXC1 (* skoXC1 (+ 6. (* skoXC1 (* skoXC1 (/ (- 1.) 8.)))))))))))) 48.) (> (* skoXC1 skoXC1) 0.) (<= (* skoXC1 (+ (- 1.) (* skoXC1 (* skoXC1 (+ (/ 1. 3.) (* skoXC1 (* skoXC1 (/ 3. 20.)))))))) 0.) (<= (* skoXC1 (* skoXC1 (+ (/ (- 1.) 6.) (* skoXC1 (* skoXC1 (/ (- 3.) 40.)))))) 1.) (<= (* skoXC1 (* skoXC1 (+ (/ (- 1.) 2.) (* skoXC1 (* skoXC1 (+ (/ 7. 120.) (* skoXC1 (* skoXC1 (/ (- 3.) 40.))))))))) 0.) (<= (* skoXC1 (* skoXC1 (* skoXC1 (* skoXC1 (+ (/ (- 13.) 60.) (* skoXC1 (* skoXC1 (/ (- 3.) 10.)))))))) 0.) (<= (* skoXC1 (* skoXC1 (* skoXC1 (* skoXC1 (+ (/ (- 17.) 120.) (* skoXC1 (* skoXC1 (/ 3. 80.)))))))) 0.) (<= (* skoXC1 (* skoXC1 (+ (/ 1. 3.) (* skoXC1 (* skoXC1 (/ 3. 20.)))))) 1.) (<= (* skoXC1 (* skoXC1 (* skoXC1 (* skoXC1 (+ (/ 32. 15.) (* skoXC1 (* skoXC1 (+ (/ (- 296.) 15.) (* skoXC1 (* skoXC1 (+ (/ 391. 15.) (* skoXC1 (* skoXC1 (+ (/ (- 146.) 15.) (* skoXC1 (* skoXC1 (/ 3. 4.))))))))))))))))) 0.) (> (* skoXC1 (* skoXC1 (+ (/ 1. 6.) (* skoXC1 (* skoXC1 (/ 3. 40.)))))) (- 1.))) (succedent (> (* skoXC1 (+ (- 1.) (* skoXC1 (* skoXC1 (+ (/ (- 1.) 6.) (* skoXC1 (* skoXC1 (/ (- 3.) 40.)))))))) 0.)))
-----[end problem]-----

-----[begin problem]-----
% In Mathematica format:
Timing[Resolve[Exists[{skoXC1}, And[skoXC1*(-1+skoXC1*skoXC1*((1/3)+skoXC1*skoXC1*((3/20)+skoXC1*skoXC1*((5/56)+skoXC1*skoXC1*((35/576)+skoXC1*skoXC1*(63/1408))))))<=0,skoXC1*(-1+skoXC1*skoXC1*((-1/6)+skoXC1*skoXC1*(-3/40)))<=0,skoXC1*skoXC1*((1/6)+skoXC1*skoXC1*(3/40))>-1,skoXC1*skoXC1*skoXC1*skoXC1*((32/15)+skoXC1*skoXC1*((-296/15)+skoXC1*skoXC1*((391/15)+skoXC1*skoXC1*((-146/15)+skoXC1*skoXC1*(3/4)))))<=0,skoXC1*skoXC1*((1/3)+skoXC1*skoXC1*(3/20))<=1,skoXC1*skoXC1*skoXC1*skoXC1*((-17/120)+skoXC1*skoXC1*(3/80))<=0,skoXC1*skoXC1*skoXC1*skoXC1*((-13/60)+skoXC1*skoXC1*(-3/10))<=0,skoXC1*skoXC1*((-1/2)+skoXC1*skoXC1*((7/120)+skoXC1*skoXC1*(-3/40)))<=0,skoXC1*skoXC1*((-1/6)+skoXC1*skoXC1*(-3/40))<=1,skoXC1*(-1+skoXC1*skoXC1*((1/3)+skoXC1*skoXC1*(3/20)))<=0,skoXC1*skoXC1>0,skoXC1*skoXC1*(80+skoXC1*skoXC1*(-40+skoXC1*skoXC1*(6+skoXC1*skoXC1*(-1/8))))<=48,skoXC1*skoXC1*(-80+skoXC1*skoXC1*(40+skoXC1*skoXC1*(-6+skoXC1*skoXC1*(1/8))))>-48,skoXC1*skoXC1*(24+skoXC1*skoXC1*(-10+skoXC1*skoXC1))<=16,skoXC1*skoXC1*(1/2)<=3,skoXC1*skoXC1*(-1/2)>-3,skoXC1>0,(7/8)>skoXC1,skoXC1*(-1+skoXC1*skoXC1*(1/3))<=0,skoXC1*skoXC1*(-1/6)<=1,skoXC1*skoXC1*((-1/2)+skoXC1*skoXC1*(-1/6))<=0,skoXC1*skoXC1<=2,skoXC1*skoXC1*skoXC1*skoXC1*(-2/3)<=0,skoXC1*(-1+skoXC1*skoXC1*(-1/6))<=0,skoXC1*skoXC1*(1/3)<=1,skoXC1*skoXC1*(256+skoXC1*skoXC1*(-160+skoXC1*skoXC1*(32+skoXC1*skoXC1*-1)))<=128,skoXC1*skoXC1*skoXC1*skoXC1*((-80/3)+skoXC1*skoXC1*((128/3)+skoXC1*skoXC1*((-55/3)+skoXC1*skoXC1*(5/3))))<=0,skoXC1*(-1+skoXC1*skoXC1*((1/3)+skoXC1*skoXC1*((3/20)+skoXC1*skoXC1*(5/56))))<=0,skoXC1*skoXC1*((-1/6)+skoXC1*skoXC1*((-3/40)+skoXC1*skoXC1*(-5/112)))<=1,skoXC1*skoXC1*((-1/2)+skoXC1*skoXC1*((7/120)+skoXC1*skoXC1*((33/560)+skoXC1*skoXC1*(-5/112))))<=0,skoXC1*skoXC1*skoXC1*skoXC1*((-13/60)+skoXC1*skoXC1*((-9/280)+skoXC1*skoXC1*(-5/28)))<=0,skoXC1*skoXC1*skoXC1*skoXC1*((-17/120)+skoXC1*skoXC1*((-27/280)+skoXC1*skoXC1*(5/224)))<=0,skoXC1*skoXC1*((1/3)+skoXC1*skoXC1*((3/20)+skoXC1*skoXC1*(5/56)))<=1,skoXC1*skoXC1*skoXC1*skoXC1*((32/15)+skoXC1*skoXC1*((-272/105)+skoXC1*skoXC1*((-1163/105)+skoXC1*skoXC1*((1753/105)+skoXC1*skoXC1*((-169/28)+skoXC1*skoXC1*(25/56))))))<=0,skoXC1*skoXC1*((1/6)+skoXC1*skoXC1*((3/40)+skoXC1*skoXC1*(5/112)))>-1,skoXC1*(-1+skoXC1*skoXC1*((-1/6)+skoXC1*skoXC1*((-3/40)+skoXC1*skoXC1*(-5/112))))<=0]], Reals]]

% In QepcadB format:
(E skoXC1) [[(skoXC1 (-1+(skoXC1 skoXC1 (1/3+(skoXC1 skoXC1 (3/20+(skoXC1 skoXC1 (5/56+(skoXC1 skoXC1 (35/576+(skoXC1 skoXC1 (63/1408))))))))))))<=0]/\[[(skoXC1 (-1+(skoXC1 skoXC1 (-1/6+(skoXC1 skoXC1 (-3/40))))))<=0]/\[[-1<(skoXC1 skoXC1 (1/6+(skoXC1 skoXC1 (3/40))))]/\[[(skoXC1 skoXC1 skoXC1 skoXC1 (32/15+(skoXC1 skoXC1 (-296/15+(skoXC1 skoXC1 (391/15+(skoXC1 skoXC1 (-146/15+(skoXC1 skoXC1 (3/4))))))))))<=0]/\[[(skoXC1 skoXC1 (1/3+(skoXC1 skoXC1 (3/20))))<=1]/\[[(skoXC1 skoXC1 skoXC1 skoXC1 (-17/120+(skoXC1 skoXC1 (3/80))))<=0]/\[[(skoXC1 skoXC1 skoXC1 skoXC1 (-13/60+(skoXC1 skoXC1 (-3/10))))<=0]/\[[(skoXC1 skoXC1 (-1/2+(skoXC1 skoXC1 (7/120+(skoXC1 skoXC1 (-3/40))))))<=0]/\[[(skoXC1 skoXC1 (-1/6+(skoXC1 skoXC1 (-3/40))))<=1]/\[[(skoXC1 (-1+(skoXC1 skoXC1 (1/3+(skoXC1 skoXC1 (3/20))))))<=0]/\[[0<(skoXC1 skoXC1)]/\[[(skoXC1 skoXC1 (80+(skoXC1 skoXC1 (-40+(skoXC1 skoXC1 (6+(skoXC1 skoXC1 (-1/8))))))))<=48]/\[[-48<(skoXC1 skoXC1 (-80+(skoXC1 skoXC1 (40+(skoXC1 skoXC1 (-6+(skoXC1 skoXC1 (1/8))))))))]/\[[(skoXC1 skoXC1 (24+(skoXC1 skoXC1 (-10+(skoXC1 skoXC1)))))<=16]/\[[(skoXC1 skoXC1 (1/2))<=3]/\[[-3<(skoXC1 skoXC1 (-1/2))]/\[[0<skoXC1]/\[[skoXC1<7/8]/\[[(skoXC1 (-1+(skoXC1 skoXC1 (1/3))))<=0]/\[[(skoXC1 skoXC1 (-1/6))<=1]/\[[(skoXC1 skoXC1 (-1/2+(skoXC1 skoXC1 (-1/6))))<=0]/\[[(skoXC1 skoXC1)<=2]/\[[(skoXC1 skoXC1 skoXC1 skoXC1 (-2/3))<=0]/\[[(skoXC1 (-1+(skoXC1 skoXC1 (-1/6))))<=0]/\[[(skoXC1 skoXC1 (1/3))<=1]/\[[(skoXC1 skoXC1 (256+(skoXC1 skoXC1 (-160+(skoXC1 skoXC1 (32+(skoXC1 skoXC1 (-1))))))))<=128]/\[[(skoXC1 skoXC1 skoXC1 skoXC1 (-80/3+(skoXC1 skoXC1 (128/3+(skoXC1 skoXC1 (-55/3+(skoXC1 skoXC1 (5/3))))))))<=0]/\[[(skoXC1 (-1+(skoXC1 skoXC1 (1/3+(skoXC1 skoXC1 (3/20+(skoXC1 skoXC1 (5/56))))))))<=0]/\[[(skoXC1 skoXC1 (-1/6+(skoXC1 skoXC1 (-3/40+(skoXC1 skoXC1 (-5/112))))))<=1]/\[[(skoXC1 skoXC1 (-1/2+(skoXC1 skoXC1 (7/120+(skoXC1 skoXC1 (33/560+(skoXC1 skoXC1 (-5/112))))))))<=0]/\[[(skoXC1 skoXC1 skoXC1 skoXC1 (-13/60+(skoXC1 skoXC1 (-9/280+(skoXC1 skoXC1 (-5/28))))))<=0]/\[[(skoXC1 skoXC1 skoXC1 skoXC1 (-17/120+(skoXC1 skoXC1 (-27/280+(skoXC1 skoXC1 (5/224))))))<=0]/\[[(skoXC1 skoXC1 (1/3+(skoXC1 skoXC1 (3/20+(skoXC1 skoXC1 (5/56))))))<=1]/\[[(skoXC1 skoXC1 skoXC1 skoXC1 (32/15+(skoXC1 skoXC1 (-272/105+(skoXC1 skoXC1 (-1163/105+(skoXC1 skoXC1 (1753/105+(skoXC1 skoXC1 (-169/28+(skoXC1 skoXC1 (25/56))))))))))))<=0]/\[[-1<(skoXC1 skoXC1 (1/6+(skoXC1 skoXC1 (3/40+(skoXC1 skoXC1 (5/112))))))]/\[(skoXC1 (-1+(skoXC1 skoXC1 (-1/6+(skoXC1 skoXC1 (-3/40+(skoXC1 skoXC1 (-5/112))))))))<=0]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]].

% In SMTLib2 format:
(declare-fun skoXC1 () Real) (assert (and (<= (* skoXC1 (+ (- 1.) (* skoXC1 (* skoXC1 (+ (/ 1. 3.) (* skoXC1 (* skoXC1 (+ (/ 3. 20.) (* skoXC1 (* skoXC1 (+ (/ 5. 56.) (* skoXC1 (* skoXC1 (+ (/ 35. 576.) (* skoXC1 (* skoXC1 (/ 63. 1408.))))))))))))))))) 0.) (and (<= (* skoXC1 (+ (- 1.) (* skoXC1 (* skoXC1 (+ (/ (- 1.) 6.) (* skoXC1 (* skoXC1 (/ (- 3.) 40.)))))))) 0.) (and (> (* skoXC1 (* skoXC1 (+ (/ 1. 6.) (* skoXC1 (* skoXC1 (/ 3. 40.)))))) (- 1.)) (and (<= (* skoXC1 (* skoXC1 (* skoXC1 (* skoXC1 (+ (/ 32. 15.) (* skoXC1 (* skoXC1 (+ (/ (- 296.) 15.) (* skoXC1 (* skoXC1 (+ (/ 391. 15.) (* skoXC1 (* skoXC1 (+ (/ (- 146.) 15.) (* skoXC1 (* skoXC1 (/ 3. 4.))))))))))))))))) 0.) (and (<= (* skoXC1 (* skoXC1 (+ (/ 1. 3.) (* skoXC1 (* skoXC1 (/ 3. 20.)))))) 1.) (and (<= (* skoXC1 (* skoXC1 (* skoXC1 (* skoXC1 (+ (/ (- 17.) 120.) (* skoXC1 (* skoXC1 (/ 3. 80.)))))))) 0.) (and (<= (* skoXC1 (* skoXC1 (* skoXC1 (* skoXC1 (+ (/ (- 13.) 60.) (* skoXC1 (* skoXC1 (/ (- 3.) 10.)))))))) 0.) (and (<= (* skoXC1 (* skoXC1 (+ (/ (- 1.) 2.) (* skoXC1 (* skoXC1 (+ (/ 7. 120.) (* skoXC1 (* skoXC1 (/ (- 3.) 40.))))))))) 0.) (and (<= (* skoXC1 (* skoXC1 (+ (/ (- 1.) 6.) (* skoXC1 (* skoXC1 (/ (- 3.) 40.)))))) 1.) (and (<= (* skoXC1 (+ (- 1.) (* skoXC1 (* skoXC1 (+ (/ 1. 3.) (* skoXC1 (* skoXC1 (/ 3. 20.)))))))) 0.) (and (> (* skoXC1 skoXC1) 0.) (and (<= (* skoXC1 (* skoXC1 (+ 80. (* skoXC1 (* skoXC1 (+ (- 40.) (* skoXC1 (* skoXC1 (+ 6. (* skoXC1 (* skoXC1 (/ (- 1.) 8.)))))))))))) 48.) (and (> (* skoXC1 (* skoXC1 (+ (- 80.) (* skoXC1 (* skoXC1 (+ 40. (* skoXC1 (* skoXC1 (+ (- 6.) (* skoXC1 (* skoXC1 (/ 1. 8.)))))))))))) (- 48.)) (and (<= (* skoXC1 (* skoXC1 (+ 24. (* skoXC1 (* skoXC1 (+ (- 10.) (* skoXC1 skoXC1))))))) 16.) (and (<= (* skoXC1 (* skoXC1 (/ 1. 2.))) 3.) (and (> (* skoXC1 (* skoXC1 (/ (- 1.) 2.))) (- 3.)) (and (> skoXC1 0.) (and (> (/ 7. 8.) skoXC1) (and (<= (* skoXC1 (+ (- 1.) (* skoXC1 (* skoXC1 (/ 1. 3.))))) 0.) (and (<= (* skoXC1 (* skoXC1 (/ (- 1.) 6.))) 1.) (and (<= (* skoXC1 (* skoXC1 (+ (/ (- 1.) 2.) (* skoXC1 (* skoXC1 (/ (- 1.) 6.)))))) 0.) (and (<= (* skoXC1 skoXC1) 2.) (and (<= (* skoXC1 (* skoXC1 (* skoXC1 (* skoXC1 (/ (- 2.) 3.))))) 0.) (and (<= (* skoXC1 (+ (- 1.) (* skoXC1 (* skoXC1 (/ (- 1.) 6.))))) 0.) (and (<= (* skoXC1 (* skoXC1 (/ 1. 3.))) 1.) (and (<= (* skoXC1 (* skoXC1 (+ 256. (* skoXC1 (* skoXC1 (+ (- 160.) (* skoXC1 (* skoXC1 (+ 32. (* skoXC1 (* skoXC1 (- 1.)))))))))))) 128.) (and (<= (* skoXC1 (* skoXC1 (* skoXC1 (* skoXC1 (+ (/ (- 80.) 3.) (* skoXC1 (* skoXC1 (+ (/ 128. 3.) (* skoXC1 (* skoXC1 (+ (/ (- 55.) 3.) (* skoXC1 (* skoXC1 (/ 5. 3.)))))))))))))) 0.) (and (<= (* skoXC1 (+ (- 1.) (* skoXC1 (* skoXC1 (+ (/ 1. 3.) (* skoXC1 (* skoXC1 (+ (/ 3. 20.) (* skoXC1 (* skoXC1 (/ 5. 56.))))))))))) 0.) (and (<= (* skoXC1 (* skoXC1 (+ (/ (- 1.) 6.) (* skoXC1 (* skoXC1 (+ (/ (- 3.) 40.) (* skoXC1 (* skoXC1 (/ (- 5.) 112.))))))))) 1.) (and (<= (* skoXC1 (* skoXC1 (+ (/ (- 1.) 2.) (* skoXC1 (* skoXC1 (+ (/ 7. 120.) (* skoXC1 (* skoXC1 (+ (/ 33. 560.) (* skoXC1 (* skoXC1 (/ (- 5.) 112.)))))))))))) 0.) (and (<= (* skoXC1 (* skoXC1 (* skoXC1 (* skoXC1 (+ (/ (- 13.) 60.) (* skoXC1 (* skoXC1 (+ (/ (- 9.) 280.) (* skoXC1 (* skoXC1 (/ (- 5.) 28.))))))))))) 0.) (and (<= (* skoXC1 (* skoXC1 (* skoXC1 (* skoXC1 (+ (/ (- 17.) 120.) (* skoXC1 (* skoXC1 (+ (/ (- 27.) 280.) (* skoXC1 (* skoXC1 (/ 5. 224.))))))))))) 0.) (and (<= (* skoXC1 (* skoXC1 (+ (/ 1. 3.) (* skoXC1 (* skoXC1 (+ (/ 3. 20.) (* skoXC1 (* skoXC1 (/ 5. 56.))))))))) 1.) (and (<= (* skoXC1 (* skoXC1 (* skoXC1 (* skoXC1 (+ (/ 32. 15.) (* skoXC1 (* skoXC1 (+ (/ (- 272.) 105.) (* skoXC1 (* skoXC1 (+ (/ (- 1163.) 105.) (* skoXC1 (* skoXC1 (+ (/ 1753. 105.) (* skoXC1 (* skoXC1 (+ (/ (- 169.) 28.) (* skoXC1 (* skoXC1 (/ 25. 56.)))))))))))))))))))) 0.) (and (> (* skoXC1 (* skoXC1 (+ (/ 1. 6.) (* skoXC1 (* skoXC1 (+ (/ 3. 40.) (* skoXC1 (* skoXC1 (/ 5. 112.))))))))) (- 1.)) (<= (* skoXC1 (+ (- 1.) (* skoXC1 (* skoXC1 (+ (/ (- 1.) 6.) (* skoXC1 (* skoXC1 (+ (/ (- 3.) 40.) (* skoXC1 (* skoXC1 (/ (- 5.) 112.))))))))))) 0.)))))))))))))))))))))))))))))))))))))

% In GRF format:
(sequent " MetiTarski formula " (antecedent (<= (* skoXC1 (+ (- 1.) (* skoXC1 (* skoXC1 (+ (/ 1. 3.) (* skoXC1 (* skoXC1 (+ (/ 3. 20.) (* skoXC1 (* skoXC1 (+ (/ 5. 56.) (* skoXC1 (* skoXC1 (+ (/ 35. 576.) (* skoXC1 (* skoXC1 (/ 63. 1408.))))))))))))))))) 0.) (<= (* skoXC1 (+ (- 1.) (* skoXC1 (* skoXC1 (+ (/ (- 1.) 6.) (* skoXC1 (* skoXC1 (/ (- 3.) 40.)))))))) 0.) (> (* skoXC1 (* skoXC1 (+ (/ 1. 6.) (* skoXC1 (* skoXC1 (/ 3. 40.)))))) (- 1.)) (<= (* skoXC1 (* skoXC1 (* skoXC1 (* skoXC1 (+ (/ 32. 15.) (* skoXC1 (* skoXC1 (+ (/ (- 296.) 15.) (* skoXC1 (* skoXC1 (+ (/ 391. 15.) (* skoXC1 (* skoXC1 (+ (/ (- 146.) 15.) (* skoXC1 (* skoXC1 (/ 3. 4.))))))))))))))))) 0.) (<= (* skoXC1 (* skoXC1 (+ (/ 1. 3.) (* skoXC1 (* skoXC1 (/ 3. 20.)))))) 1.) (<= (* skoXC1 (* skoXC1 (* skoXC1 (* skoXC1 (+ (/ (- 17.) 120.) (* skoXC1 (* skoXC1 (/ 3. 80.)))))))) 0.) (<= (* skoXC1 (* skoXC1 (* skoXC1 (* skoXC1 (+ (/ (- 13.) 60.) (* skoXC1 (* skoXC1 (/ (- 3.) 10.)))))))) 0.) (<= (* skoXC1 (* skoXC1 (+ (/ (- 1.) 2.) (* skoXC1 (* skoXC1 (+ (/ 7. 120.) (* skoXC1 (* skoXC1 (/ (- 3.) 40.))))))))) 0.) (<= (* skoXC1 (* skoXC1 (+ (/ (- 1.) 6.) (* skoXC1 (* skoXC1 (/ (- 3.) 40.)))))) 1.) (<= (* skoXC1 (+ (- 1.) (* skoXC1 (* skoXC1 (+ (/ 1. 3.) (* skoXC1 (* skoXC1 (/ 3. 20.)))))))) 0.) (> (* skoXC1 skoXC1) 0.) (<= (* skoXC1 (* skoXC1 (+ 80. (* skoXC1 (* skoXC1 (+ (- 40.) (* skoXC1 (* skoXC1 (+ 6. (* skoXC1 (* skoXC1 (/ (- 1.) 8.)))))))))))) 48.) (> (* skoXC1 (* skoXC1 (+ (- 80.) (* skoXC1 (* skoXC1 (+ 40. (* skoXC1 (* skoXC1 (+ (- 6.) (* skoXC1 (* skoXC1 (/ 1. 8.)))))))))))) (- 48.)) (<= (* skoXC1 (* skoXC1 (+ 24. (* skoXC1 (* skoXC1 (+ (- 10.) (* skoXC1 skoXC1))))))) 16.) (<= (* skoXC1 (* skoXC1 (/ 1. 2.))) 3.) (> (* skoXC1 (* skoXC1 (/ (- 1.) 2.))) (- 3.)) (> skoXC1 0.) (> (/ 7. 8.) skoXC1) (<= (* skoXC1 (+ (- 1.) (* skoXC1 (* skoXC1 (/ 1. 3.))))) 0.) (<= (* skoXC1 (* skoXC1 (/ (- 1.) 6.))) 1.) (<= (* skoXC1 (* skoXC1 (+ (/ (- 1.) 2.) (* skoXC1 (* skoXC1 (/ (- 1.) 6.)))))) 0.) (<= (* skoXC1 skoXC1) 2.) (<= (* skoXC1 (* skoXC1 (* skoXC1 (* skoXC1 (/ (- 2.) 3.))))) 0.) (<= (* skoXC1 (+ (- 1.) (* skoXC1 (* skoXC1 (/ (- 1.) 6.))))) 0.) (<= (* skoXC1 (* skoXC1 (/ 1. 3.))) 1.) (<= (* skoXC1 (* skoXC1 (+ 256. (* skoXC1 (* skoXC1 (+ (- 160.) (* skoXC1 (* skoXC1 (+ 32. (* skoXC1 (* skoXC1 (- 1.)))))))))))) 128.) (<= (* skoXC1 (* skoXC1 (* skoXC1 (* skoXC1 (+ (/ (- 80.) 3.) (* skoXC1 (* skoXC1 (+ (/ 128. 3.) (* skoXC1 (* skoXC1 (+ (/ (- 55.) 3.) (* skoXC1 (* skoXC1 (/ 5. 3.)))))))))))))) 0.) (<= (* skoXC1 (+ (- 1.) (* skoXC1 (* skoXC1 (+ (/ 1. 3.) (* skoXC1 (* skoXC1 (+ (/ 3. 20.) (* skoXC1 (* skoXC1 (/ 5. 56.))))))))))) 0.) (<= (* skoXC1 (* skoXC1 (+ (/ (- 1.) 6.) (* skoXC1 (* skoXC1 (+ (/ (- 3.) 40.) (* skoXC1 (* skoXC1 (/ (- 5.) 112.))))))))) 1.) (<= (* skoXC1 (* skoXC1 (+ (/ (- 1.) 2.) (* skoXC1 (* skoXC1 (+ (/ 7. 120.) (* skoXC1 (* skoXC1 (+ (/ 33. 560.) (* skoXC1 (* skoXC1 (/ (- 5.) 112.)))))))))))) 0.) (<= (* skoXC1 (* skoXC1 (* skoXC1 (* skoXC1 (+ (/ (- 13.) 60.) (* skoXC1 (* skoXC1 (+ (/ (- 9.) 280.) (* skoXC1 (* skoXC1 (/ (- 5.) 28.))))))))))) 0.) (<= (* skoXC1 (* skoXC1 (* skoXC1 (* skoXC1 (+ (/ (- 17.) 120.) (* skoXC1 (* skoXC1 (+ (/ (- 27.) 280.) (* skoXC1 (* skoXC1 (/ 5. 224.))))))))))) 0.) (<= (* skoXC1 (* skoXC1 (+ (/ 1. 3.) (* skoXC1 (* skoXC1 (+ (/ 3. 20.) (* skoXC1 (* skoXC1 (/ 5. 56.))))))))) 1.) (<= (* skoXC1 (* skoXC1 (* skoXC1 (* skoXC1 (+ (/ 32. 15.) (* skoXC1 (* skoXC1 (+ (/ (- 272.) 105.) (* skoXC1 (* skoXC1 (+ (/ (- 1163.) 105.) (* skoXC1 (* skoXC1 (+ (/ 1753. 105.) (* skoXC1 (* skoXC1 (+ (/ (- 169.) 28.) (* skoXC1 (* skoXC1 (/ 25. 56.)))))))))))))))))))) 0.) (> (* skoXC1 (* skoXC1 (+ (/ 1. 6.) (* skoXC1 (* skoXC1 (+ (/ 3. 40.) (* skoXC1 (* skoXC1 (/ 5. 112.))))))))) (- 1.))) (succedent (> (* skoXC1 (+ (- 1.) (* skoXC1 (* skoXC1 (+ (/ (- 1.) 6.) (* skoXC1 (* skoXC1 (+ (/ (- 3.) 40.) (* skoXC1 (* skoXC1 (/ (- 5.) 112.))))))))))) 0.)))
-----[end problem]-----

-----[begin problem]-----
% In Mathematica format:
Timing[Resolve[Exists[{skoXC1}, And[skoXC1*(-1+skoXC1*skoXC1*((-1/6)+skoXC1*skoXC1*((-3/40)+skoXC1*skoXC1*((-5/112)+skoXC1*skoXC1*((-35/1152)+skoXC1*skoXC1*(-63/2816))))))<=0,skoXC1!=0,skoXC1*(-1+skoXC1*skoXC1*((-1/6)+skoXC1*skoXC1*(-3/40)))<=0,skoXC1*skoXC1*((1/6)+skoXC1*skoXC1*(3/40))>-1,skoXC1*skoXC1*skoXC1*skoXC1*((32/15)+skoXC1*skoXC1*((-296/15)+skoXC1*skoXC1*((391/15)+skoXC1*skoXC1*((-146/15)+skoXC1*skoXC1*(3/4)))))<=0,skoXC1*skoXC1*((1/3)+skoXC1*skoXC1*(3/20))<=1,skoXC1*skoXC1*skoXC1*skoXC1*((-17/120)+skoXC1*skoXC1*(3/80))<=0,skoXC1*skoXC1*skoXC1*skoXC1*((-13/60)+skoXC1*skoXC1*(-3/10))<=0,skoXC1*skoXC1*((-1/2)+skoXC1*skoXC1*((7/120)+skoXC1*skoXC1*(-3/40)))<=0,skoXC1*skoXC1*((-1/6)+skoXC1*skoXC1*(-3/40))<=1,skoXC1*(-1+skoXC1*skoXC1*((1/3)+skoXC1*skoXC1*(3/20)))<=0,skoXC1*skoXC1>0,skoXC1*skoXC1*(80+skoXC1*skoXC1*(-40+skoXC1*skoXC1*(6+skoXC1*skoXC1*(-1/8))))<=48,skoXC1*skoXC1*(-80+skoXC1*skoXC1*(40+skoXC1*skoXC1*(-6+skoXC1*skoXC1*(1/8))))>-48,skoXC1*skoXC1*(24+skoXC1*skoXC1*(-10+skoXC1*skoXC1))<=16,skoXC1*skoXC1*(1/2)<=3,skoXC1*skoXC1*(-1/2)>-3,skoXC1>0,(7/8)>skoXC1,skoXC1*(-1+skoXC1*skoXC1*(1/3))<=0,skoXC1*skoXC1*(-1/6)<=1,skoXC1*skoXC1*((-1/2)+skoXC1*skoXC1*(-1/6))<=0,skoXC1*skoXC1<=2,skoXC1*skoXC1*skoXC1*skoXC1*(-2/3)<=0,skoXC1*(-1+skoXC1*skoXC1*(-1/6))<=0,skoXC1*skoXC1*(1/3)<=1,skoXC1*skoXC1*(256+skoXC1*skoXC1*(-160+skoXC1*skoXC1*(32+skoXC1*skoXC1*-1)))<=128,skoXC1*skoXC1*skoXC1*skoXC1*((-80/3)+skoXC1*skoXC1*((128/3)+skoXC1*skoXC1*((-55/3)+skoXC1*skoXC1*(5/3))))<=0,skoXC1*(-1+skoXC1*skoXC1*((1/3)+skoXC1*skoXC1*((3/20)+skoXC1*skoXC1*(5/56))))<=0,skoXC1*skoXC1*((-1/6)+skoXC1*skoXC1*((-3/40)+skoXC1*skoXC1*(-5/112)))<=1,skoXC1*skoXC1*((-1/2)+skoXC1*skoXC1*((7/120)+skoXC1*skoXC1*((33/560)+skoXC1*skoXC1*(-5/112))))<=0,skoXC1*skoXC1*skoXC1*skoXC1*((-13/60)+skoXC1*skoXC1*((-9/280)+skoXC1*skoXC1*(-5/28)))<=0,skoXC1*skoXC1*skoXC1*skoXC1*((-17/120)+skoXC1*skoXC1*((-27/280)+skoXC1*skoXC1*(5/224)))<=0,skoXC1*skoXC1*((1/3)+skoXC1*skoXC1*((3/20)+skoXC1*skoXC1*(5/56)))<=1,skoXC1*skoXC1*skoXC1*skoXC1*((32/15)+skoXC1*skoXC1*((-272/105)+skoXC1*skoXC1*((-1163/105)+skoXC1*skoXC1*((1753/105)+skoXC1*skoXC1*((-169/28)+skoXC1*skoXC1*(25/56))))))<=0,skoXC1*skoXC1*((1/6)+skoXC1*skoXC1*((3/40)+skoXC1*skoXC1*(5/112)))>-1,skoXC1*(-1+skoXC1*skoXC1*((-1/6)+skoXC1*skoXC1*((-3/40)+skoXC1*skoXC1*(-5/112))))<=0]], Reals]]

% In QepcadB format:
(E skoXC1) [[(skoXC1 (-1+(skoXC1 skoXC1 (-1/6+(skoXC1 skoXC1 (-3/40+(skoXC1 skoXC1 (-5/112+(skoXC1 skoXC1 (-35/1152+(skoXC1 skoXC1 (-63/2816))))))))))))<=0]/\[[skoXC1 /=0]/\[[(skoXC1 (-1+(skoXC1 skoXC1 (-1/6+(skoXC1 skoXC1 (-3/40))))))<=0]/\[[-1<(skoXC1 skoXC1 (1/6+(skoXC1 skoXC1 (3/40))))]/\[[(skoXC1 skoXC1 skoXC1 skoXC1 (32/15+(skoXC1 skoXC1 (-296/15+(skoXC1 skoXC1 (391/15+(skoXC1 skoXC1 (-146/15+(skoXC1 skoXC1 (3/4))))))))))<=0]/\[[(skoXC1 skoXC1 (1/3+(skoXC1 skoXC1 (3/20))))<=1]/\[[(skoXC1 skoXC1 skoXC1 skoXC1 (-17/120+(skoXC1 skoXC1 (3/80))))<=0]/\[[(skoXC1 skoXC1 skoXC1 skoXC1 (-13/60+(skoXC1 skoXC1 (-3/10))))<=0]/\[[(skoXC1 skoXC1 (-1/2+(skoXC1 skoXC1 (7/120+(skoXC1 skoXC1 (-3/40))))))<=0]/\[[(skoXC1 skoXC1 (-1/6+(skoXC1 skoXC1 (-3/40))))<=1]/\[[(skoXC1 (-1+(skoXC1 skoXC1 (1/3+(skoXC1 skoXC1 (3/20))))))<=0]/\[[0<(skoXC1 skoXC1)]/\[[(skoXC1 skoXC1 (80+(skoXC1 skoXC1 (-40+(skoXC1 skoXC1 (6+(skoXC1 skoXC1 (-1/8))))))))<=48]/\[[-48<(skoXC1 skoXC1 (-80+(skoXC1 skoXC1 (40+(skoXC1 skoXC1 (-6+(skoXC1 skoXC1 (1/8))))))))]/\[[(skoXC1 skoXC1 (24+(skoXC1 skoXC1 (-10+(skoXC1 skoXC1)))))<=16]/\[[(skoXC1 skoXC1 (1/2))<=3]/\[[-3<(skoXC1 skoXC1 (-1/2))]/\[[0<skoXC1]/\[[skoXC1<7/8]/\[[(skoXC1 (-1+(skoXC1 skoXC1 (1/3))))<=0]/\[[(skoXC1 skoXC1 (-1/6))<=1]/\[[(skoXC1 skoXC1 (-1/2+(skoXC1 skoXC1 (-1/6))))<=0]/\[[(skoXC1 skoXC1)<=2]/\[[(skoXC1 skoXC1 skoXC1 skoXC1 (-2/3))<=0]/\[[(skoXC1 (-1+(skoXC1 skoXC1 (-1/6))))<=0]/\[[(skoXC1 skoXC1 (1/3))<=1]/\[[(skoXC1 skoXC1 (256+(skoXC1 skoXC1 (-160+(skoXC1 skoXC1 (32+(skoXC1 skoXC1 (-1))))))))<=128]/\[[(skoXC1 skoXC1 skoXC1 skoXC1 (-80/3+(skoXC1 skoXC1 (128/3+(skoXC1 skoXC1 (-55/3+(skoXC1 skoXC1 (5/3))))))))<=0]/\[[(skoXC1 (-1+(skoXC1 skoXC1 (1/3+(skoXC1 skoXC1 (3/20+(skoXC1 skoXC1 (5/56))))))))<=0]/\[[(skoXC1 skoXC1 (-1/6+(skoXC1 skoXC1 (-3/40+(skoXC1 skoXC1 (-5/112))))))<=1]/\[[(skoXC1 skoXC1 (-1/2+(skoXC1 skoXC1 (7/120+(skoXC1 skoXC1 (33/560+(skoXC1 skoXC1 (-5/112))))))))<=0]/\[[(skoXC1 skoXC1 skoXC1 skoXC1 (-13/60+(skoXC1 skoXC1 (-9/280+(skoXC1 skoXC1 (-5/28))))))<=0]/\[[(skoXC1 skoXC1 skoXC1 skoXC1 (-17/120+(skoXC1 skoXC1 (-27/280+(skoXC1 skoXC1 (5/224))))))<=0]/\[[(skoXC1 skoXC1 (1/3+(skoXC1 skoXC1 (3/20+(skoXC1 skoXC1 (5/56))))))<=1]/\[[(skoXC1 skoXC1 skoXC1 skoXC1 (32/15+(skoXC1 skoXC1 (-272/105+(skoXC1 skoXC1 (-1163/105+(skoXC1 skoXC1 (1753/105+(skoXC1 skoXC1 (-169/28+(skoXC1 skoXC1 (25/56))))))))))))<=0]/\[[-1<(skoXC1 skoXC1 (1/6+(skoXC1 skoXC1 (3/40+(skoXC1 skoXC1 (5/112))))))]/\[(skoXC1 (-1+(skoXC1 skoXC1 (-1/6+(skoXC1 skoXC1 (-3/40+(skoXC1 skoXC1 (-5/112))))))))<=0]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]].

% In SMTLib2 format:
(declare-fun skoXC1 () Real) (assert (and (<= (* skoXC1 (+ (- 1.) (* skoXC1 (* skoXC1 (+ (/ (- 1.) 6.) (* skoXC1 (* skoXC1 (+ (/ (- 3.) 40.) (* skoXC1 (* skoXC1 (+ (/ (- 5.) 112.) (* skoXC1 (* skoXC1 (+ (/ (- 35.) 1152.) (* skoXC1 (* skoXC1 (/ (- 63.) 2816.))))))))))))))))) 0.) (and (!= skoXC1 0.) (and (<= (* skoXC1 (+ (- 1.) (* skoXC1 (* skoXC1 (+ (/ (- 1.) 6.) (* skoXC1 (* skoXC1 (/ (- 3.) 40.)))))))) 0.) (and (> (* skoXC1 (* skoXC1 (+ (/ 1. 6.) (* skoXC1 (* skoXC1 (/ 3. 40.)))))) (- 1.)) (and (<= (* skoXC1 (* skoXC1 (* skoXC1 (* skoXC1 (+ (/ 32. 15.) (* skoXC1 (* skoXC1 (+ (/ (- 296.) 15.) (* skoXC1 (* skoXC1 (+ (/ 391. 15.) (* skoXC1 (* skoXC1 (+ (/ (- 146.) 15.) (* skoXC1 (* skoXC1 (/ 3. 4.))))))))))))))))) 0.) (and (<= (* skoXC1 (* skoXC1 (+ (/ 1. 3.) (* skoXC1 (* skoXC1 (/ 3. 20.)))))) 1.) (and (<= (* skoXC1 (* skoXC1 (* skoXC1 (* skoXC1 (+ (/ (- 17.) 120.) (* skoXC1 (* skoXC1 (/ 3. 80.)))))))) 0.) (and (<= (* skoXC1 (* skoXC1 (* skoXC1 (* skoXC1 (+ (/ (- 13.) 60.) (* skoXC1 (* skoXC1 (/ (- 3.) 10.)))))))) 0.) (and (<= (* skoXC1 (* skoXC1 (+ (/ (- 1.) 2.) (* skoXC1 (* skoXC1 (+ (/ 7. 120.) (* skoXC1 (* skoXC1 (/ (- 3.) 40.))))))))) 0.) (and (<= (* skoXC1 (* skoXC1 (+ (/ (- 1.) 6.) (* skoXC1 (* skoXC1 (/ (- 3.) 40.)))))) 1.) (and (<= (* skoXC1 (+ (- 1.) (* skoXC1 (* skoXC1 (+ (/ 1. 3.) (* skoXC1 (* skoXC1 (/ 3. 20.)))))))) 0.) (and (> (* skoXC1 skoXC1) 0.) (and (<= (* skoXC1 (* skoXC1 (+ 80. (* skoXC1 (* skoXC1 (+ (- 40.) (* skoXC1 (* skoXC1 (+ 6. (* skoXC1 (* skoXC1 (/ (- 1.) 8.)))))))))))) 48.) (and (> (* skoXC1 (* skoXC1 (+ (- 80.) (* skoXC1 (* skoXC1 (+ 40. (* skoXC1 (* skoXC1 (+ (- 6.) (* skoXC1 (* skoXC1 (/ 1. 8.)))))))))))) (- 48.)) (and (<= (* skoXC1 (* skoXC1 (+ 24. (* skoXC1 (* skoXC1 (+ (- 10.) (* skoXC1 skoXC1))))))) 16.) (and (<= (* skoXC1 (* skoXC1 (/ 1. 2.))) 3.) (and (> (* skoXC1 (* skoXC1 (/ (- 1.) 2.))) (- 3.)) (and (> skoXC1 0.) (and (> (/ 7. 8.) skoXC1) (and (<= (* skoXC1 (+ (- 1.) (* skoXC1 (* skoXC1 (/ 1. 3.))))) 0.) (and (<= (* skoXC1 (* skoXC1 (/ (- 1.) 6.))) 1.) (and (<= (* skoXC1 (* skoXC1 (+ (/ (- 1.) 2.) (* skoXC1 (* skoXC1 (/ (- 1.) 6.)))))) 0.) (and (<= (* skoXC1 skoXC1) 2.) (and (<= (* skoXC1 (* skoXC1 (* skoXC1 (* skoXC1 (/ (- 2.) 3.))))) 0.) (and (<= (* skoXC1 (+ (- 1.) (* skoXC1 (* skoXC1 (/ (- 1.) 6.))))) 0.) (and (<= (* skoXC1 (* skoXC1 (/ 1. 3.))) 1.) (and (<= (* skoXC1 (* skoXC1 (+ 256. (* skoXC1 (* skoXC1 (+ (- 160.) (* skoXC1 (* skoXC1 (+ 32. (* skoXC1 (* skoXC1 (- 1.)))))))))))) 128.) (and (<= (* skoXC1 (* skoXC1 (* skoXC1 (* skoXC1 (+ (/ (- 80.) 3.) (* skoXC1 (* skoXC1 (+ (/ 128. 3.) (* skoXC1 (* skoXC1 (+ (/ (- 55.) 3.) (* skoXC1 (* skoXC1 (/ 5. 3.)))))))))))))) 0.) (and (<= (* skoXC1 (+ (- 1.) (* skoXC1 (* skoXC1 (+ (/ 1. 3.) (* skoXC1 (* skoXC1 (+ (/ 3. 20.) (* skoXC1 (* skoXC1 (/ 5. 56.))))))))))) 0.) (and (<= (* skoXC1 (* skoXC1 (+ (/ (- 1.) 6.) (* skoXC1 (* skoXC1 (+ (/ (- 3.) 40.) (* skoXC1 (* skoXC1 (/ (- 5.) 112.))))))))) 1.) (and (<= (* skoXC1 (* skoXC1 (+ (/ (- 1.) 2.) (* skoXC1 (* skoXC1 (+ (/ 7. 120.) (* skoXC1 (* skoXC1 (+ (/ 33. 560.) (* skoXC1 (* skoXC1 (/ (- 5.) 112.)))))))))))) 0.) (and (<= (* skoXC1 (* skoXC1 (* skoXC1 (* skoXC1 (+ (/ (- 13.) 60.) (* skoXC1 (* skoXC1 (+ (/ (- 9.) 280.) (* skoXC1 (* skoXC1 (/ (- 5.) 28.))))))))))) 0.) (and (<= (* skoXC1 (* skoXC1 (* skoXC1 (* skoXC1 (+ (/ (- 17.) 120.) (* skoXC1 (* skoXC1 (+ (/ (- 27.) 280.) (* skoXC1 (* skoXC1 (/ 5. 224.))))))))))) 0.) (and (<= (* skoXC1 (* skoXC1 (+ (/ 1. 3.) (* skoXC1 (* skoXC1 (+ (/ 3. 20.) (* skoXC1 (* skoXC1 (/ 5. 56.))))))))) 1.) (and (<= (* skoXC1 (* skoXC1 (* skoXC1 (* skoXC1 (+ (/ 32. 15.) (* skoXC1 (* skoXC1 (+ (/ (- 272.) 105.) (* skoXC1 (* skoXC1 (+ (/ (- 1163.) 105.) (* skoXC1 (* skoXC1 (+ (/ 1753. 105.) (* skoXC1 (* skoXC1 (+ (/ (- 169.) 28.) (* skoXC1 (* skoXC1 (/ 25. 56.)))))))))))))))))))) 0.) (and (> (* skoXC1 (* skoXC1 (+ (/ 1. 6.) (* skoXC1 (* skoXC1 (+ (/ 3. 40.) (* skoXC1 (* skoXC1 (/ 5. 112.))))))))) (- 1.)) (<= (* skoXC1 (+ (- 1.) (* skoXC1 (* skoXC1 (+ (/ (- 1.) 6.) (* skoXC1 (* skoXC1 (+ (/ (- 3.) 40.) (* skoXC1 (* skoXC1 (/ (- 5.) 112.))))))))))) 0.))))))))))))))))))))))))))))))))))))))

% In GRF format:
(sequent " MetiTarski formula " (antecedent (<= (* skoXC1 (+ (- 1.) (* skoXC1 (* skoXC1 (+ (/ (- 1.) 6.) (* skoXC1 (* skoXC1 (+ (/ (- 3.) 40.) (* skoXC1 (* skoXC1 (+ (/ (- 5.) 112.) (* skoXC1 (* skoXC1 (+ (/ (- 35.) 1152.) (* skoXC1 (* skoXC1 (/ (- 63.) 2816.))))))))))))))))) 0.) (!= skoXC1 0.) (<= (* skoXC1 (+ (- 1.) (* skoXC1 (* skoXC1 (+ (/ (- 1.) 6.) (* skoXC1 (* skoXC1 (/ (- 3.) 40.)))))))) 0.) (> (* skoXC1 (* skoXC1 (+ (/ 1. 6.) (* skoXC1 (* skoXC1 (/ 3. 40.)))))) (- 1.)) (<= (* skoXC1 (* skoXC1 (* skoXC1 (* skoXC1 (+ (/ 32. 15.) (* skoXC1 (* skoXC1 (+ (/ (- 296.) 15.) (* skoXC1 (* skoXC1 (+ (/ 391. 15.) (* skoXC1 (* skoXC1 (+ (/ (- 146.) 15.) (* skoXC1 (* skoXC1 (/ 3. 4.))))))))))))))))) 0.) (<= (* skoXC1 (* skoXC1 (+ (/ 1. 3.) (* skoXC1 (* skoXC1 (/ 3. 20.)))))) 1.) (<= (* skoXC1 (* skoXC1 (* skoXC1 (* skoXC1 (+ (/ (- 17.) 120.) (* skoXC1 (* skoXC1 (/ 3. 80.)))))))) 0.) (<= (* skoXC1 (* skoXC1 (* skoXC1 (* skoXC1 (+ (/ (- 13.) 60.) (* skoXC1 (* skoXC1 (/ (- 3.) 10.)))))))) 0.) (<= (* skoXC1 (* skoXC1 (+ (/ (- 1.) 2.) (* skoXC1 (* skoXC1 (+ (/ 7. 120.) (* skoXC1 (* skoXC1 (/ (- 3.) 40.))))))))) 0.) (<= (* skoXC1 (* skoXC1 (+ (/ (- 1.) 6.) (* skoXC1 (* skoXC1 (/ (- 3.) 40.)))))) 1.) (<= (* skoXC1 (+ (- 1.) (* skoXC1 (* skoXC1 (+ (/ 1. 3.) (* skoXC1 (* skoXC1 (/ 3. 20.)))))))) 0.) (> (* skoXC1 skoXC1) 0.) (<= (* skoXC1 (* skoXC1 (+ 80. (* skoXC1 (* skoXC1 (+ (- 40.) (* skoXC1 (* skoXC1 (+ 6. (* skoXC1 (* skoXC1 (/ (- 1.) 8.)))))))))))) 48.) (> (* skoXC1 (* skoXC1 (+ (- 80.) (* skoXC1 (* skoXC1 (+ 40. (* skoXC1 (* skoXC1 (+ (- 6.) (* skoXC1 (* skoXC1 (/ 1. 8.)))))))))))) (- 48.)) (<= (* skoXC1 (* skoXC1 (+ 24. (* skoXC1 (* skoXC1 (+ (- 10.) (* skoXC1 skoXC1))))))) 16.) (<= (* skoXC1 (* skoXC1 (/ 1. 2.))) 3.) (> (* skoXC1 (* skoXC1 (/ (- 1.) 2.))) (- 3.)) (> skoXC1 0.) (> (/ 7. 8.) skoXC1) (<= (* skoXC1 (+ (- 1.) (* skoXC1 (* skoXC1 (/ 1. 3.))))) 0.) (<= (* skoXC1 (* skoXC1 (/ (- 1.) 6.))) 1.) (<= (* skoXC1 (* skoXC1 (+ (/ (- 1.) 2.) (* skoXC1 (* skoXC1 (/ (- 1.) 6.)))))) 0.) (<= (* skoXC1 skoXC1) 2.) (<= (* skoXC1 (* skoXC1 (* skoXC1 (* skoXC1 (/ (- 2.) 3.))))) 0.) (<= (* skoXC1 (+ (- 1.) (* skoXC1 (* skoXC1 (/ (- 1.) 6.))))) 0.) (<= (* skoXC1 (* skoXC1 (/ 1. 3.))) 1.) (<= (* skoXC1 (* skoXC1 (+ 256. (* skoXC1 (* skoXC1 (+ (- 160.) (* skoXC1 (* skoXC1 (+ 32. (* skoXC1 (* skoXC1 (- 1.)))))))))))) 128.) (<= (* skoXC1 (* skoXC1 (* skoXC1 (* skoXC1 (+ (/ (- 80.) 3.) (* skoXC1 (* skoXC1 (+ (/ 128. 3.) (* skoXC1 (* skoXC1 (+ (/ (- 55.) 3.) (* skoXC1 (* skoXC1 (/ 5. 3.)))))))))))))) 0.) (<= (* skoXC1 (+ (- 1.) (* skoXC1 (* skoXC1 (+ (/ 1. 3.) (* skoXC1 (* skoXC1 (+ (/ 3. 20.) (* skoXC1 (* skoXC1 (/ 5. 56.))))))))))) 0.) (<= (* skoXC1 (* skoXC1 (+ (/ (- 1.) 6.) (* skoXC1 (* skoXC1 (+ (/ (- 3.) 40.) (* skoXC1 (* skoXC1 (/ (- 5.) 112.))))))))) 1.) (<= (* skoXC1 (* skoXC1 (+ (/ (- 1.) 2.) (* skoXC1 (* skoXC1 (+ (/ 7. 120.) (* skoXC1 (* skoXC1 (+ (/ 33. 560.) (* skoXC1 (* skoXC1 (/ (- 5.) 112.)))))))))))) 0.) (<= (* skoXC1 (* skoXC1 (* skoXC1 (* skoXC1 (+ (/ (- 13.) 60.) (* skoXC1 (* skoXC1 (+ (/ (- 9.) 280.) (* skoXC1 (* skoXC1 (/ (- 5.) 28.))))))))))) 0.) (<= (* skoXC1 (* skoXC1 (* skoXC1 (* skoXC1 (+ (/ (- 17.) 120.) (* skoXC1 (* skoXC1 (+ (/ (- 27.) 280.) (* skoXC1 (* skoXC1 (/ 5. 224.))))))))))) 0.) (<= (* skoXC1 (* skoXC1 (+ (/ 1. 3.) (* skoXC1 (* skoXC1 (+ (/ 3. 20.) (* skoXC1 (* skoXC1 (/ 5. 56.))))))))) 1.) (<= (* skoXC1 (* skoXC1 (* skoXC1 (* skoXC1 (+ (/ 32. 15.) (* skoXC1 (* skoXC1 (+ (/ (- 272.) 105.) (* skoXC1 (* skoXC1 (+ (/ (- 1163.) 105.) (* skoXC1 (* skoXC1 (+ (/ 1753. 105.) (* skoXC1 (* skoXC1 (+ (/ (- 169.) 28.) (* skoXC1 (* skoXC1 (/ 25. 56.)))))))))))))))))))) 0.) (> (* skoXC1 (* skoXC1 (+ (/ 1. 6.) (* skoXC1 (* skoXC1 (+ (/ 3. 40.) (* skoXC1 (* skoXC1 (/ 5. 112.))))))))) (- 1.))) (succedent (> (* skoXC1 (+ (- 1.) (* skoXC1 (* skoXC1 (+ (/ (- 1.) 6.) (* skoXC1 (* skoXC1 (+ (/ (- 3.) 40.) (* skoXC1 (* skoXC1 (/ (- 5.) 112.))))))))))) 0.)))
-----[end problem]-----

-----[begin problem]-----
% In Mathematica format:
Timing[Resolve[Exists[{skoXC1}, And[skoXC1*(1+skoXC1*skoXC1*((1/6)+skoXC1*skoXC1*((3/40)+skoXC1*skoXC1*((5/112)+skoXC1*skoXC1*((35/1152)+skoXC1*skoXC1*(63/2816))))))<=0,skoXC1!=0,skoXC1*(-1+skoXC1*skoXC1*((-1/6)+skoXC1*skoXC1*(-3/40)))<=0,skoXC1*skoXC1*((1/6)+skoXC1*skoXC1*(3/40))>-1,skoXC1*skoXC1*skoXC1*skoXC1*((32/15)+skoXC1*skoXC1*((-296/15)+skoXC1*skoXC1*((391/15)+skoXC1*skoXC1*((-146/15)+skoXC1*skoXC1*(3/4)))))<=0,skoXC1*skoXC1*((1/3)+skoXC1*skoXC1*(3/20))<=1,skoXC1*skoXC1*skoXC1*skoXC1*((-17/120)+skoXC1*skoXC1*(3/80))<=0,skoXC1*skoXC1*skoXC1*skoXC1*((-13/60)+skoXC1*skoXC1*(-3/10))<=0,skoXC1*skoXC1*((-1/2)+skoXC1*skoXC1*((7/120)+skoXC1*skoXC1*(-3/40)))<=0,skoXC1*skoXC1*((-1/6)+skoXC1*skoXC1*(-3/40))<=1,skoXC1*(-1+skoXC1*skoXC1*((1/3)+skoXC1*skoXC1*(3/20)))<=0,skoXC1*skoXC1>0,skoXC1*skoXC1*(80+skoXC1*skoXC1*(-40+skoXC1*skoXC1*(6+skoXC1*skoXC1*(-1/8))))<=48,skoXC1*skoXC1*(-80+skoXC1*skoXC1*(40+skoXC1*skoXC1*(-6+skoXC1*skoXC1*(1/8))))>-48,skoXC1*skoXC1*(24+skoXC1*skoXC1*(-10+skoXC1*skoXC1))<=16,skoXC1*skoXC1*(1/2)<=3,skoXC1*skoXC1*(-1/2)>-3,skoXC1>0,(7/8)>skoXC1,skoXC1*(-1+skoXC1*skoXC1*(1/3))<=0,skoXC1*skoXC1*(-1/6)<=1,skoXC1*skoXC1*((-1/2)+skoXC1*skoXC1*(-1/6))<=0,skoXC1*skoXC1<=2,skoXC1*skoXC1*skoXC1*skoXC1*(-2/3)<=0,skoXC1*(-1+skoXC1*skoXC1*(-1/6))<=0,skoXC1*skoXC1*(1/3)<=1,skoXC1*skoXC1*(256+skoXC1*skoXC1*(-160+skoXC1*skoXC1*(32+skoXC1*skoXC1*-1)))<=128,skoXC1*skoXC1*skoXC1*skoXC1*((-80/3)+skoXC1*skoXC1*((128/3)+skoXC1*skoXC1*((-55/3)+skoXC1*skoXC1*(5/3))))<=0,skoXC1*(-1+skoXC1*skoXC1*((1/3)+skoXC1*skoXC1*((3/20)+skoXC1*skoXC1*(5/56))))<=0,skoXC1*skoXC1*((-1/6)+skoXC1*skoXC1*((-3/40)+skoXC1*skoXC1*(-5/112)))<=1,skoXC1*skoXC1*((-1/2)+skoXC1*skoXC1*((7/120)+skoXC1*skoXC1*((33/560)+skoXC1*skoXC1*(-5/112))))<=0,skoXC1*skoXC1*skoXC1*skoXC1*((-13/60)+skoXC1*skoXC1*((-9/280)+skoXC1*skoXC1*(-5/28)))<=0,skoXC1*skoXC1*skoXC1*skoXC1*((-17/120)+skoXC1*skoXC1*((-27/280)+skoXC1*skoXC1*(5/224)))<=0,skoXC1*skoXC1*((1/3)+skoXC1*skoXC1*((3/20)+skoXC1*skoXC1*(5/56)))<=1,skoXC1*skoXC1*skoXC1*skoXC1*((32/15)+skoXC1*skoXC1*((-272/105)+skoXC1*skoXC1*((-1163/105)+skoXC1*skoXC1*((1753/105)+skoXC1*skoXC1*((-169/28)+skoXC1*skoXC1*(25/56))))))<=0,skoXC1*skoXC1*((1/6)+skoXC1*skoXC1*((3/40)+skoXC1*skoXC1*(5/112)))>-1,skoXC1*(-1+skoXC1*skoXC1*((-1/6)+skoXC1*skoXC1*((-3/40)+skoXC1*skoXC1*(-5/112))))<=0]], Reals]]

% In QepcadB format:
(E skoXC1) [[(skoXC1 (1+(skoXC1 skoXC1 (1/6+(skoXC1 skoXC1 (3/40+(skoXC1 skoXC1 (5/112+(skoXC1 skoXC1 (35/1152+(skoXC1 skoXC1 (63/2816))))))))))))<=0]/\[[skoXC1 /=0]/\[[(skoXC1 (-1+(skoXC1 skoXC1 (-1/6+(skoXC1 skoXC1 (-3/40))))))<=0]/\[[-1<(skoXC1 skoXC1 (1/6+(skoXC1 skoXC1 (3/40))))]/\[[(skoXC1 skoXC1 skoXC1 skoXC1 (32/15+(skoXC1 skoXC1 (-296/15+(skoXC1 skoXC1 (391/15+(skoXC1 skoXC1 (-146/15+(skoXC1 skoXC1 (3/4))))))))))<=0]/\[[(skoXC1 skoXC1 (1/3+(skoXC1 skoXC1 (3/20))))<=1]/\[[(skoXC1 skoXC1 skoXC1 skoXC1 (-17/120+(skoXC1 skoXC1 (3/80))))<=0]/\[[(skoXC1 skoXC1 skoXC1 skoXC1 (-13/60+(skoXC1 skoXC1 (-3/10))))<=0]/\[[(skoXC1 skoXC1 (-1/2+(skoXC1 skoXC1 (7/120+(skoXC1 skoXC1 (-3/40))))))<=0]/\[[(skoXC1 skoXC1 (-1/6+(skoXC1 skoXC1 (-3/40))))<=1]/\[[(skoXC1 (-1+(skoXC1 skoXC1 (1/3+(skoXC1 skoXC1 (3/20))))))<=0]/\[[0<(skoXC1 skoXC1)]/\[[(skoXC1 skoXC1 (80+(skoXC1 skoXC1 (-40+(skoXC1 skoXC1 (6+(skoXC1 skoXC1 (-1/8))))))))<=48]/\[[-48<(skoXC1 skoXC1 (-80+(skoXC1 skoXC1 (40+(skoXC1 skoXC1 (-6+(skoXC1 skoXC1 (1/8))))))))]/\[[(skoXC1 skoXC1 (24+(skoXC1 skoXC1 (-10+(skoXC1 skoXC1)))))<=16]/\[[(skoXC1 skoXC1 (1/2))<=3]/\[[-3<(skoXC1 skoXC1 (-1/2))]/\[[0<skoXC1]/\[[skoXC1<7/8]/\[[(skoXC1 (-1+(skoXC1 skoXC1 (1/3))))<=0]/\[[(skoXC1 skoXC1 (-1/6))<=1]/\[[(skoXC1 skoXC1 (-1/2+(skoXC1 skoXC1 (-1/6))))<=0]/\[[(skoXC1 skoXC1)<=2]/\[[(skoXC1 skoXC1 skoXC1 skoXC1 (-2/3))<=0]/\[[(skoXC1 (-1+(skoXC1 skoXC1 (-1/6))))<=0]/\[[(skoXC1 skoXC1 (1/3))<=1]/\[[(skoXC1 skoXC1 (256+(skoXC1 skoXC1 (-160+(skoXC1 skoXC1 (32+(skoXC1 skoXC1 (-1))))))))<=128]/\[[(skoXC1 skoXC1 skoXC1 skoXC1 (-80/3+(skoXC1 skoXC1 (128/3+(skoXC1 skoXC1 (-55/3+(skoXC1 skoXC1 (5/3))))))))<=0]/\[[(skoXC1 (-1+(skoXC1 skoXC1 (1/3+(skoXC1 skoXC1 (3/20+(skoXC1 skoXC1 (5/56))))))))<=0]/\[[(skoXC1 skoXC1 (-1/6+(skoXC1 skoXC1 (-3/40+(skoXC1 skoXC1 (-5/112))))))<=1]/\[[(skoXC1 skoXC1 (-1/2+(skoXC1 skoXC1 (7/120+(skoXC1 skoXC1 (33/560+(skoXC1 skoXC1 (-5/112))))))))<=0]/\[[(skoXC1 skoXC1 skoXC1 skoXC1 (-13/60+(skoXC1 skoXC1 (-9/280+(skoXC1 skoXC1 (-5/28))))))<=0]/\[[(skoXC1 skoXC1 skoXC1 skoXC1 (-17/120+(skoXC1 skoXC1 (-27/280+(skoXC1 skoXC1 (5/224))))))<=0]/\[[(skoXC1 skoXC1 (1/3+(skoXC1 skoXC1 (3/20+(skoXC1 skoXC1 (5/56))))))<=1]/\[[(skoXC1 skoXC1 skoXC1 skoXC1 (32/15+(skoXC1 skoXC1 (-272/105+(skoXC1 skoXC1 (-1163/105+(skoXC1 skoXC1 (1753/105+(skoXC1 skoXC1 (-169/28+(skoXC1 skoXC1 (25/56))))))))))))<=0]/\[[-1<(skoXC1 skoXC1 (1/6+(skoXC1 skoXC1 (3/40+(skoXC1 skoXC1 (5/112))))))]/\[(skoXC1 (-1+(skoXC1 skoXC1 (-1/6+(skoXC1 skoXC1 (-3/40+(skoXC1 skoXC1 (-5/112))))))))<=0]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]].

% In SMTLib2 format:
(declare-fun skoXC1 () Real) (assert (and (<= (* skoXC1 (+ 1. (* skoXC1 (* skoXC1 (+ (/ 1. 6.) (* skoXC1 (* skoXC1 (+ (/ 3. 40.) (* skoXC1 (* skoXC1 (+ (/ 5. 112.) (* skoXC1 (* skoXC1 (+ (/ 35. 1152.) (* skoXC1 (* skoXC1 (/ 63. 2816.))))))))))))))))) 0.) (and (!= skoXC1 0.) (and (<= (* skoXC1 (+ (- 1.) (* skoXC1 (* skoXC1 (+ (/ (- 1.) 6.) (* skoXC1 (* skoXC1 (/ (- 3.) 40.)))))))) 0.) (and (> (* skoXC1 (* skoXC1 (+ (/ 1. 6.) (* skoXC1 (* skoXC1 (/ 3. 40.)))))) (- 1.)) (and (<= (* skoXC1 (* skoXC1 (* skoXC1 (* skoXC1 (+ (/ 32. 15.) (* skoXC1 (* skoXC1 (+ (/ (- 296.) 15.) (* skoXC1 (* skoXC1 (+ (/ 391. 15.) (* skoXC1 (* skoXC1 (+ (/ (- 146.) 15.) (* skoXC1 (* skoXC1 (/ 3. 4.))))))))))))))))) 0.) (and (<= (* skoXC1 (* skoXC1 (+ (/ 1. 3.) (* skoXC1 (* skoXC1 (/ 3. 20.)))))) 1.) (and (<= (* skoXC1 (* skoXC1 (* skoXC1 (* skoXC1 (+ (/ (- 17.) 120.) (* skoXC1 (* skoXC1 (/ 3. 80.)))))))) 0.) (and (<= (* skoXC1 (* skoXC1 (* skoXC1 (* skoXC1 (+ (/ (- 13.) 60.) (* skoXC1 (* skoXC1 (/ (- 3.) 10.)))))))) 0.) (and (<= (* skoXC1 (* skoXC1 (+ (/ (- 1.) 2.) (* skoXC1 (* skoXC1 (+ (/ 7. 120.) (* skoXC1 (* skoXC1 (/ (- 3.) 40.))))))))) 0.) (and (<= (* skoXC1 (* skoXC1 (+ (/ (- 1.) 6.) (* skoXC1 (* skoXC1 (/ (- 3.) 40.)))))) 1.) (and (<= (* skoXC1 (+ (- 1.) (* skoXC1 (* skoXC1 (+ (/ 1. 3.) (* skoXC1 (* skoXC1 (/ 3. 20.)))))))) 0.) (and (> (* skoXC1 skoXC1) 0.) (and (<= (* skoXC1 (* skoXC1 (+ 80. (* skoXC1 (* skoXC1 (+ (- 40.) (* skoXC1 (* skoXC1 (+ 6. (* skoXC1 (* skoXC1 (/ (- 1.) 8.)))))))))))) 48.) (and (> (* skoXC1 (* skoXC1 (+ (- 80.) (* skoXC1 (* skoXC1 (+ 40. (* skoXC1 (* skoXC1 (+ (- 6.) (* skoXC1 (* skoXC1 (/ 1. 8.)))))))))))) (- 48.)) (and (<= (* skoXC1 (* skoXC1 (+ 24. (* skoXC1 (* skoXC1 (+ (- 10.) (* skoXC1 skoXC1))))))) 16.) (and (<= (* skoXC1 (* skoXC1 (/ 1. 2.))) 3.) (and (> (* skoXC1 (* skoXC1 (/ (- 1.) 2.))) (- 3.)) (and (> skoXC1 0.) (and (> (/ 7. 8.) skoXC1) (and (<= (* skoXC1 (+ (- 1.) (* skoXC1 (* skoXC1 (/ 1. 3.))))) 0.) (and (<= (* skoXC1 (* skoXC1 (/ (- 1.) 6.))) 1.) (and (<= (* skoXC1 (* skoXC1 (+ (/ (- 1.) 2.) (* skoXC1 (* skoXC1 (/ (- 1.) 6.)))))) 0.) (and (<= (* skoXC1 skoXC1) 2.) (and (<= (* skoXC1 (* skoXC1 (* skoXC1 (* skoXC1 (/ (- 2.) 3.))))) 0.) (and (<= (* skoXC1 (+ (- 1.) (* skoXC1 (* skoXC1 (/ (- 1.) 6.))))) 0.) (and (<= (* skoXC1 (* skoXC1 (/ 1. 3.))) 1.) (and (<= (* skoXC1 (* skoXC1 (+ 256. (* skoXC1 (* skoXC1 (+ (- 160.) (* skoXC1 (* skoXC1 (+ 32. (* skoXC1 (* skoXC1 (- 1.)))))))))))) 128.) (and (<= (* skoXC1 (* skoXC1 (* skoXC1 (* skoXC1 (+ (/ (- 80.) 3.) (* skoXC1 (* skoXC1 (+ (/ 128. 3.) (* skoXC1 (* skoXC1 (+ (/ (- 55.) 3.) (* skoXC1 (* skoXC1 (/ 5. 3.)))))))))))))) 0.) (and (<= (* skoXC1 (+ (- 1.) (* skoXC1 (* skoXC1 (+ (/ 1. 3.) (* skoXC1 (* skoXC1 (+ (/ 3. 20.) (* skoXC1 (* skoXC1 (/ 5. 56.))))))))))) 0.) (and (<= (* skoXC1 (* skoXC1 (+ (/ (- 1.) 6.) (* skoXC1 (* skoXC1 (+ (/ (- 3.) 40.) (* skoXC1 (* skoXC1 (/ (- 5.) 112.))))))))) 1.) (and (<= (* skoXC1 (* skoXC1 (+ (/ (- 1.) 2.) (* skoXC1 (* skoXC1 (+ (/ 7. 120.) (* skoXC1 (* skoXC1 (+ (/ 33. 560.) (* skoXC1 (* skoXC1 (/ (- 5.) 112.)))))))))))) 0.) (and (<= (* skoXC1 (* skoXC1 (* skoXC1 (* skoXC1 (+ (/ (- 13.) 60.) (* skoXC1 (* skoXC1 (+ (/ (- 9.) 280.) (* skoXC1 (* skoXC1 (/ (- 5.) 28.))))))))))) 0.) (and (<= (* skoXC1 (* skoXC1 (* skoXC1 (* skoXC1 (+ (/ (- 17.) 120.) (* skoXC1 (* skoXC1 (+ (/ (- 27.) 280.) (* skoXC1 (* skoXC1 (/ 5. 224.))))))))))) 0.) (and (<= (* skoXC1 (* skoXC1 (+ (/ 1. 3.) (* skoXC1 (* skoXC1 (+ (/ 3. 20.) (* skoXC1 (* skoXC1 (/ 5. 56.))))))))) 1.) (and (<= (* skoXC1 (* skoXC1 (* skoXC1 (* skoXC1 (+ (/ 32. 15.) (* skoXC1 (* skoXC1 (+ (/ (- 272.) 105.) (* skoXC1 (* skoXC1 (+ (/ (- 1163.) 105.) (* skoXC1 (* skoXC1 (+ (/ 1753. 105.) (* skoXC1 (* skoXC1 (+ (/ (- 169.) 28.) (* skoXC1 (* skoXC1 (/ 25. 56.)))))))))))))))))))) 0.) (and (> (* skoXC1 (* skoXC1 (+ (/ 1. 6.) (* skoXC1 (* skoXC1 (+ (/ 3. 40.) (* skoXC1 (* skoXC1 (/ 5. 112.))))))))) (- 1.)) (<= (* skoXC1 (+ (- 1.) (* skoXC1 (* skoXC1 (+ (/ (- 1.) 6.) (* skoXC1 (* skoXC1 (+ (/ (- 3.) 40.) (* skoXC1 (* skoXC1 (/ (- 5.) 112.))))))))))) 0.))))))))))))))))))))))))))))))))))))))

% In GRF format:
(sequent " MetiTarski formula " (antecedent (<= (* skoXC1 (+ 1. (* skoXC1 (* skoXC1 (+ (/ 1. 6.) (* skoXC1 (* skoXC1 (+ (/ 3. 40.) (* skoXC1 (* skoXC1 (+ (/ 5. 112.) (* skoXC1 (* skoXC1 (+ (/ 35. 1152.) (* skoXC1 (* skoXC1 (/ 63. 2816.))))))))))))))))) 0.) (!= skoXC1 0.) (<= (* skoXC1 (+ (- 1.) (* skoXC1 (* skoXC1 (+ (/ (- 1.) 6.) (* skoXC1 (* skoXC1 (/ (- 3.) 40.)))))))) 0.) (> (* skoXC1 (* skoXC1 (+ (/ 1. 6.) (* skoXC1 (* skoXC1 (/ 3. 40.)))))) (- 1.)) (<= (* skoXC1 (* skoXC1 (* skoXC1 (* skoXC1 (+ (/ 32. 15.) (* skoXC1 (* skoXC1 (+ (/ (- 296.) 15.) (* skoXC1 (* skoXC1 (+ (/ 391. 15.) (* skoXC1 (* skoXC1 (+ (/ (- 146.) 15.) (* skoXC1 (* skoXC1 (/ 3. 4.))))))))))))))))) 0.) (<= (* skoXC1 (* skoXC1 (+ (/ 1. 3.) (* skoXC1 (* skoXC1 (/ 3. 20.)))))) 1.) (<= (* skoXC1 (* skoXC1 (* skoXC1 (* skoXC1 (+ (/ (- 17.) 120.) (* skoXC1 (* skoXC1 (/ 3. 80.)))))))) 0.) (<= (* skoXC1 (* skoXC1 (* skoXC1 (* skoXC1 (+ (/ (- 13.) 60.) (* skoXC1 (* skoXC1 (/ (- 3.) 10.)))))))) 0.) (<= (* skoXC1 (* skoXC1 (+ (/ (- 1.) 2.) (* skoXC1 (* skoXC1 (+ (/ 7. 120.) (* skoXC1 (* skoXC1 (/ (- 3.) 40.))))))))) 0.) (<= (* skoXC1 (* skoXC1 (+ (/ (- 1.) 6.) (* skoXC1 (* skoXC1 (/ (- 3.) 40.)))))) 1.) (<= (* skoXC1 (+ (- 1.) (* skoXC1 (* skoXC1 (+ (/ 1. 3.) (* skoXC1 (* skoXC1 (/ 3. 20.)))))))) 0.) (> (* skoXC1 skoXC1) 0.) (<= (* skoXC1 (* skoXC1 (+ 80. (* skoXC1 (* skoXC1 (+ (- 40.) (* skoXC1 (* skoXC1 (+ 6. (* skoXC1 (* skoXC1 (/ (- 1.) 8.)))))))))))) 48.) (> (* skoXC1 (* skoXC1 (+ (- 80.) (* skoXC1 (* skoXC1 (+ 40. (* skoXC1 (* skoXC1 (+ (- 6.) (* skoXC1 (* skoXC1 (/ 1. 8.)))))))))))) (- 48.)) (<= (* skoXC1 (* skoXC1 (+ 24. (* skoXC1 (* skoXC1 (+ (- 10.) (* skoXC1 skoXC1))))))) 16.) (<= (* skoXC1 (* skoXC1 (/ 1. 2.))) 3.) (> (* skoXC1 (* skoXC1 (/ (- 1.) 2.))) (- 3.)) (> skoXC1 0.) (> (/ 7. 8.) skoXC1) (<= (* skoXC1 (+ (- 1.) (* skoXC1 (* skoXC1 (/ 1. 3.))))) 0.) (<= (* skoXC1 (* skoXC1 (/ (- 1.) 6.))) 1.) (<= (* skoXC1 (* skoXC1 (+ (/ (- 1.) 2.) (* skoXC1 (* skoXC1 (/ (- 1.) 6.)))))) 0.) (<= (* skoXC1 skoXC1) 2.) (<= (* skoXC1 (* skoXC1 (* skoXC1 (* skoXC1 (/ (- 2.) 3.))))) 0.) (<= (* skoXC1 (+ (- 1.) (* skoXC1 (* skoXC1 (/ (- 1.) 6.))))) 0.) (<= (* skoXC1 (* skoXC1 (/ 1. 3.))) 1.) (<= (* skoXC1 (* skoXC1 (+ 256. (* skoXC1 (* skoXC1 (+ (- 160.) (* skoXC1 (* skoXC1 (+ 32. (* skoXC1 (* skoXC1 (- 1.)))))))))))) 128.) (<= (* skoXC1 (* skoXC1 (* skoXC1 (* skoXC1 (+ (/ (- 80.) 3.) (* skoXC1 (* skoXC1 (+ (/ 128. 3.) (* skoXC1 (* skoXC1 (+ (/ (- 55.) 3.) (* skoXC1 (* skoXC1 (/ 5. 3.)))))))))))))) 0.) (<= (* skoXC1 (+ (- 1.) (* skoXC1 (* skoXC1 (+ (/ 1. 3.) (* skoXC1 (* skoXC1 (+ (/ 3. 20.) (* skoXC1 (* skoXC1 (/ 5. 56.))))))))))) 0.) (<= (* skoXC1 (* skoXC1 (+ (/ (- 1.) 6.) (* skoXC1 (* skoXC1 (+ (/ (- 3.) 40.) (* skoXC1 (* skoXC1 (/ (- 5.) 112.))))))))) 1.) (<= (* skoXC1 (* skoXC1 (+ (/ (- 1.) 2.) (* skoXC1 (* skoXC1 (+ (/ 7. 120.) (* skoXC1 (* skoXC1 (+ (/ 33. 560.) (* skoXC1 (* skoXC1 (/ (- 5.) 112.)))))))))))) 0.) (<= (* skoXC1 (* skoXC1 (* skoXC1 (* skoXC1 (+ (/ (- 13.) 60.) (* skoXC1 (* skoXC1 (+ (/ (- 9.) 280.) (* skoXC1 (* skoXC1 (/ (- 5.) 28.))))))))))) 0.) (<= (* skoXC1 (* skoXC1 (* skoXC1 (* skoXC1 (+ (/ (- 17.) 120.) (* skoXC1 (* skoXC1 (+ (/ (- 27.) 280.) (* skoXC1 (* skoXC1 (/ 5. 224.))))))))))) 0.) (<= (* skoXC1 (* skoXC1 (+ (/ 1. 3.) (* skoXC1 (* skoXC1 (+ (/ 3. 20.) (* skoXC1 (* skoXC1 (/ 5. 56.))))))))) 1.) (<= (* skoXC1 (* skoXC1 (* skoXC1 (* skoXC1 (+ (/ 32. 15.) (* skoXC1 (* skoXC1 (+ (/ (- 272.) 105.) (* skoXC1 (* skoXC1 (+ (/ (- 1163.) 105.) (* skoXC1 (* skoXC1 (+ (/ 1753. 105.) (* skoXC1 (* skoXC1 (+ (/ (- 169.) 28.) (* skoXC1 (* skoXC1 (/ 25. 56.)))))))))))))))))))) 0.) (> (* skoXC1 (* skoXC1 (+ (/ 1. 6.) (* skoXC1 (* skoXC1 (+ (/ 3. 40.) (* skoXC1 (* skoXC1 (/ 5. 112.))))))))) (- 1.))) (succedent (> (* skoXC1 (+ (- 1.) (* skoXC1 (* skoXC1 (+ (/ (- 1.) 6.) (* skoXC1 (* skoXC1 (+ (/ (- 3.) 40.) (* skoXC1 (* skoXC1 (/ (- 5.) 112.))))))))))) 0.)))
-----[end problem]-----

-----[begin problem]-----
% In Mathematica format:
Timing[Resolve[Exists[{skoXC1}, And[skoXC1*(-1+skoXC1*skoXC1*((1/3)+skoXC1*skoXC1*((3/20)+skoXC1*skoXC1*((5/56)+skoXC1*skoXC1*((35/576)+skoXC1*skoXC1*(63/1408))))))<=0,skoXC1*(-1+skoXC1*skoXC1*((-1/6)+skoXC1*skoXC1*(-3/40)))<=0,skoXC1*skoXC1*((1/6)+skoXC1*skoXC1*(3/40))>-1,skoXC1*skoXC1*skoXC1*skoXC1*((32/15)+skoXC1*skoXC1*((-296/15)+skoXC1*skoXC1*((391/15)+skoXC1*skoXC1*((-146/15)+skoXC1*skoXC1*(3/4)))))<=0,skoXC1*skoXC1*((1/3)+skoXC1*skoXC1*(3/20))<=1,skoXC1*skoXC1*skoXC1*skoXC1*((-17/120)+skoXC1*skoXC1*(3/80))<=0,skoXC1*skoXC1*skoXC1*skoXC1*((-13/60)+skoXC1*skoXC1*(-3/10))<=0,skoXC1*skoXC1*((-1/2)+skoXC1*skoXC1*((7/120)+skoXC1*skoXC1*(-3/40)))<=0,skoXC1*skoXC1*((-1/6)+skoXC1*skoXC1*(-3/40))<=1,skoXC1*(-1+skoXC1*skoXC1*((1/3)+skoXC1*skoXC1*(3/20)))<=0,skoXC1*skoXC1>0,skoXC1*skoXC1*(80+skoXC1*skoXC1*(-40+skoXC1*skoXC1*(6+skoXC1*skoXC1*(-1/8))))<=48,skoXC1*skoXC1*(-80+skoXC1*skoXC1*(40+skoXC1*skoXC1*(-6+skoXC1*skoXC1*(1/8))))>-48,skoXC1*skoXC1*(24+skoXC1*skoXC1*(-10+skoXC1*skoXC1))<=16,skoXC1*skoXC1*(1/2)<=3,skoXC1*skoXC1*(-1/2)>-3,skoXC1>0,(7/8)>skoXC1,skoXC1*(-1+skoXC1*skoXC1*(1/3))<=0,skoXC1*skoXC1*(-1/6)<=1,skoXC1*skoXC1*((-1/2)+skoXC1*skoXC1*(-1/6))<=0,skoXC1*skoXC1<=2,skoXC1*skoXC1*skoXC1*skoXC1*(-2/3)<=0,skoXC1*(-1+skoXC1*skoXC1*(-1/6))<=0,skoXC1*skoXC1*(1/3)<=1,skoXC1*skoXC1*(256+skoXC1*skoXC1*(-160+skoXC1*skoXC1*(32+skoXC1*skoXC1*-1)))<=128,skoXC1*skoXC1*skoXC1*skoXC1*((-80/3)+skoXC1*skoXC1*((128/3)+skoXC1*skoXC1*((-55/3)+skoXC1*skoXC1*(5/3))))<=0,skoXC1*(-1+skoXC1*skoXC1*((1/3)+skoXC1*skoXC1*((3/20)+skoXC1*skoXC1*(5/56))))<=0,skoXC1*skoXC1*((-1/6)+skoXC1*skoXC1*((-3/40)+skoXC1*skoXC1*(-5/112)))<=1,skoXC1*skoXC1*((-1/2)+skoXC1*skoXC1*((7/120)+skoXC1*skoXC1*((33/560)+skoXC1*skoXC1*(-5/112))))<=0,skoXC1*skoXC1*skoXC1*skoXC1*((-13/60)+skoXC1*skoXC1*((-9/280)+skoXC1*skoXC1*(-5/28)))<=0,skoXC1*skoXC1*skoXC1*skoXC1*((-17/120)+skoXC1*skoXC1*((-27/280)+skoXC1*skoXC1*(5/224)))<=0,skoXC1*skoXC1*((1/3)+skoXC1*skoXC1*((3/20)+skoXC1*skoXC1*(5/56)))<=1,skoXC1*skoXC1*skoXC1*skoXC1*((32/15)+skoXC1*skoXC1*((-272/105)+skoXC1*skoXC1*((-1163/105)+skoXC1*skoXC1*((1753/105)+skoXC1*skoXC1*((-169/28)+skoXC1*skoXC1*(25/56))))))<=0,skoXC1*skoXC1*((1/6)+skoXC1*skoXC1*((3/40)+skoXC1*skoXC1*(5/112)))>-1,skoXC1*(-1+skoXC1*skoXC1*((-1/6)+skoXC1*skoXC1*((-3/40)+skoXC1*skoXC1*(-5/112))))<=0]], Reals]]

% In QepcadB format:
(E skoXC1) [[(skoXC1 (-1+(skoXC1 skoXC1 (1/3+(skoXC1 skoXC1 (3/20+(skoXC1 skoXC1 (5/56+(skoXC1 skoXC1 (35/576+(skoXC1 skoXC1 (63/1408))))))))))))<=0]/\[[(skoXC1 (-1+(skoXC1 skoXC1 (-1/6+(skoXC1 skoXC1 (-3/40))))))<=0]/\[[-1<(skoXC1 skoXC1 (1/6+(skoXC1 skoXC1 (3/40))))]/\[[(skoXC1 skoXC1 skoXC1 skoXC1 (32/15+(skoXC1 skoXC1 (-296/15+(skoXC1 skoXC1 (391/15+(skoXC1 skoXC1 (-146/15+(skoXC1 skoXC1 (3/4))))))))))<=0]/\[[(skoXC1 skoXC1 (1/3+(skoXC1 skoXC1 (3/20))))<=1]/\[[(skoXC1 skoXC1 skoXC1 skoXC1 (-17/120+(skoXC1 skoXC1 (3/80))))<=0]/\[[(skoXC1 skoXC1 skoXC1 skoXC1 (-13/60+(skoXC1 skoXC1 (-3/10))))<=0]/\[[(skoXC1 skoXC1 (-1/2+(skoXC1 skoXC1 (7/120+(skoXC1 skoXC1 (-3/40))))))<=0]/\[[(skoXC1 skoXC1 (-1/6+(skoXC1 skoXC1 (-3/40))))<=1]/\[[(skoXC1 (-1+(skoXC1 skoXC1 (1/3+(skoXC1 skoXC1 (3/20))))))<=0]/\[[0<(skoXC1 skoXC1)]/\[[(skoXC1 skoXC1 (80+(skoXC1 skoXC1 (-40+(skoXC1 skoXC1 (6+(skoXC1 skoXC1 (-1/8))))))))<=48]/\[[-48<(skoXC1 skoXC1 (-80+(skoXC1 skoXC1 (40+(skoXC1 skoXC1 (-6+(skoXC1 skoXC1 (1/8))))))))]/\[[(skoXC1 skoXC1 (24+(skoXC1 skoXC1 (-10+(skoXC1 skoXC1)))))<=16]/\[[(skoXC1 skoXC1 (1/2))<=3]/\[[-3<(skoXC1 skoXC1 (-1/2))]/\[[0<skoXC1]/\[[skoXC1<7/8]/\[[(skoXC1 (-1+(skoXC1 skoXC1 (1/3))))<=0]/\[[(skoXC1 skoXC1 (-1/6))<=1]/\[[(skoXC1 skoXC1 (-1/2+(skoXC1 skoXC1 (-1/6))))<=0]/\[[(skoXC1 skoXC1)<=2]/\[[(skoXC1 skoXC1 skoXC1 skoXC1 (-2/3))<=0]/\[[(skoXC1 (-1+(skoXC1 skoXC1 (-1/6))))<=0]/\[[(skoXC1 skoXC1 (1/3))<=1]/\[[(skoXC1 skoXC1 (256+(skoXC1 skoXC1 (-160+(skoXC1 skoXC1 (32+(skoXC1 skoXC1 (-1))))))))<=128]/\[[(skoXC1 skoXC1 skoXC1 skoXC1 (-80/3+(skoXC1 skoXC1 (128/3+(skoXC1 skoXC1 (-55/3+(skoXC1 skoXC1 (5/3))))))))<=0]/\[[(skoXC1 (-1+(skoXC1 skoXC1 (1/3+(skoXC1 skoXC1 (3/20+(skoXC1 skoXC1 (5/56))))))))<=0]/\[[(skoXC1 skoXC1 (-1/6+(skoXC1 skoXC1 (-3/40+(skoXC1 skoXC1 (-5/112))))))<=1]/\[[(skoXC1 skoXC1 (-1/2+(skoXC1 skoXC1 (7/120+(skoXC1 skoXC1 (33/560+(skoXC1 skoXC1 (-5/112))))))))<=0]/\[[(skoXC1 skoXC1 skoXC1 skoXC1 (-13/60+(skoXC1 skoXC1 (-9/280+(skoXC1 skoXC1 (-5/28))))))<=0]/\[[(skoXC1 skoXC1 skoXC1 skoXC1 (-17/120+(skoXC1 skoXC1 (-27/280+(skoXC1 skoXC1 (5/224))))))<=0]/\[[(skoXC1 skoXC1 (1/3+(skoXC1 skoXC1 (3/20+(skoXC1 skoXC1 (5/56))))))<=1]/\[[(skoXC1 skoXC1 skoXC1 skoXC1 (32/15+(skoXC1 skoXC1 (-272/105+(skoXC1 skoXC1 (-1163/105+(skoXC1 skoXC1 (1753/105+(skoXC1 skoXC1 (-169/28+(skoXC1 skoXC1 (25/56))))))))))))<=0]/\[[-1<(skoXC1 skoXC1 (1/6+(skoXC1 skoXC1 (3/40+(skoXC1 skoXC1 (5/112))))))]/\[(skoXC1 (-1+(skoXC1 skoXC1 (-1/6+(skoXC1 skoXC1 (-3/40+(skoXC1 skoXC1 (-5/112))))))))<=0]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]].

% In SMTLib2 format:
(declare-fun skoXC1 () Real) (assert (and (<= (* skoXC1 (+ (- 1.) (* skoXC1 (* skoXC1 (+ (/ 1. 3.) (* skoXC1 (* skoXC1 (+ (/ 3. 20.) (* skoXC1 (* skoXC1 (+ (/ 5. 56.) (* skoXC1 (* skoXC1 (+ (/ 35. 576.) (* skoXC1 (* skoXC1 (/ 63. 1408.))))))))))))))))) 0.) (and (<= (* skoXC1 (+ (- 1.) (* skoXC1 (* skoXC1 (+ (/ (- 1.) 6.) (* skoXC1 (* skoXC1 (/ (- 3.) 40.)))))))) 0.) (and (> (* skoXC1 (* skoXC1 (+ (/ 1. 6.) (* skoXC1 (* skoXC1 (/ 3. 40.)))))) (- 1.)) (and (<= (* skoXC1 (* skoXC1 (* skoXC1 (* skoXC1 (+ (/ 32. 15.) (* skoXC1 (* skoXC1 (+ (/ (- 296.) 15.) (* skoXC1 (* skoXC1 (+ (/ 391. 15.) (* skoXC1 (* skoXC1 (+ (/ (- 146.) 15.) (* skoXC1 (* skoXC1 (/ 3. 4.))))))))))))))))) 0.) (and (<= (* skoXC1 (* skoXC1 (+ (/ 1. 3.) (* skoXC1 (* skoXC1 (/ 3. 20.)))))) 1.) (and (<= (* skoXC1 (* skoXC1 (* skoXC1 (* skoXC1 (+ (/ (- 17.) 120.) (* skoXC1 (* skoXC1 (/ 3. 80.)))))))) 0.) (and (<= (* skoXC1 (* skoXC1 (* skoXC1 (* skoXC1 (+ (/ (- 13.) 60.) (* skoXC1 (* skoXC1 (/ (- 3.) 10.)))))))) 0.) (and (<= (* skoXC1 (* skoXC1 (+ (/ (- 1.) 2.) (* skoXC1 (* skoXC1 (+ (/ 7. 120.) (* skoXC1 (* skoXC1 (/ (- 3.) 40.))))))))) 0.) (and (<= (* skoXC1 (* skoXC1 (+ (/ (- 1.) 6.) (* skoXC1 (* skoXC1 (/ (- 3.) 40.)))))) 1.) (and (<= (* skoXC1 (+ (- 1.) (* skoXC1 (* skoXC1 (+ (/ 1. 3.) (* skoXC1 (* skoXC1 (/ 3. 20.)))))))) 0.) (and (> (* skoXC1 skoXC1) 0.) (and (<= (* skoXC1 (* skoXC1 (+ 80. (* skoXC1 (* skoXC1 (+ (- 40.) (* skoXC1 (* skoXC1 (+ 6. (* skoXC1 (* skoXC1 (/ (- 1.) 8.)))))))))))) 48.) (and (> (* skoXC1 (* skoXC1 (+ (- 80.) (* skoXC1 (* skoXC1 (+ 40. (* skoXC1 (* skoXC1 (+ (- 6.) (* skoXC1 (* skoXC1 (/ 1. 8.)))))))))))) (- 48.)) (and (<= (* skoXC1 (* skoXC1 (+ 24. (* skoXC1 (* skoXC1 (+ (- 10.) (* skoXC1 skoXC1))))))) 16.) (and (<= (* skoXC1 (* skoXC1 (/ 1. 2.))) 3.) (and (> (* skoXC1 (* skoXC1 (/ (- 1.) 2.))) (- 3.)) (and (> skoXC1 0.) (and (> (/ 7. 8.) skoXC1) (and (<= (* skoXC1 (+ (- 1.) (* skoXC1 (* skoXC1 (/ 1. 3.))))) 0.) (and (<= (* skoXC1 (* skoXC1 (/ (- 1.) 6.))) 1.) (and (<= (* skoXC1 (* skoXC1 (+ (/ (- 1.) 2.) (* skoXC1 (* skoXC1 (/ (- 1.) 6.)))))) 0.) (and (<= (* skoXC1 skoXC1) 2.) (and (<= (* skoXC1 (* skoXC1 (* skoXC1 (* skoXC1 (/ (- 2.) 3.))))) 0.) (and (<= (* skoXC1 (+ (- 1.) (* skoXC1 (* skoXC1 (/ (- 1.) 6.))))) 0.) (and (<= (* skoXC1 (* skoXC1 (/ 1. 3.))) 1.) (and (<= (* skoXC1 (* skoXC1 (+ 256. (* skoXC1 (* skoXC1 (+ (- 160.) (* skoXC1 (* skoXC1 (+ 32. (* skoXC1 (* skoXC1 (- 1.)))))))))))) 128.) (and (<= (* skoXC1 (* skoXC1 (* skoXC1 (* skoXC1 (+ (/ (- 80.) 3.) (* skoXC1 (* skoXC1 (+ (/ 128. 3.) (* skoXC1 (* skoXC1 (+ (/ (- 55.) 3.) (* skoXC1 (* skoXC1 (/ 5. 3.)))))))))))))) 0.) (and (<= (* skoXC1 (+ (- 1.) (* skoXC1 (* skoXC1 (+ (/ 1. 3.) (* skoXC1 (* skoXC1 (+ (/ 3. 20.) (* skoXC1 (* skoXC1 (/ 5. 56.))))))))))) 0.) (and (<= (* skoXC1 (* skoXC1 (+ (/ (- 1.) 6.) (* skoXC1 (* skoXC1 (+ (/ (- 3.) 40.) (* skoXC1 (* skoXC1 (/ (- 5.) 112.))))))))) 1.) (and (<= (* skoXC1 (* skoXC1 (+ (/ (- 1.) 2.) (* skoXC1 (* skoXC1 (+ (/ 7. 120.) (* skoXC1 (* skoXC1 (+ (/ 33. 560.) (* skoXC1 (* skoXC1 (/ (- 5.) 112.)))))))))))) 0.) (and (<= (* skoXC1 (* skoXC1 (* skoXC1 (* skoXC1 (+ (/ (- 13.) 60.) (* skoXC1 (* skoXC1 (+ (/ (- 9.) 280.) (* skoXC1 (* skoXC1 (/ (- 5.) 28.))))))))))) 0.) (and (<= (* skoXC1 (* skoXC1 (* skoXC1 (* skoXC1 (+ (/ (- 17.) 120.) (* skoXC1 (* skoXC1 (+ (/ (- 27.) 280.) (* skoXC1 (* skoXC1 (/ 5. 224.))))))))))) 0.) (and (<= (* skoXC1 (* skoXC1 (+ (/ 1. 3.) (* skoXC1 (* skoXC1 (+ (/ 3. 20.) (* skoXC1 (* skoXC1 (/ 5. 56.))))))))) 1.) (and (<= (* skoXC1 (* skoXC1 (* skoXC1 (* skoXC1 (+ (/ 32. 15.) (* skoXC1 (* skoXC1 (+ (/ (- 272.) 105.) (* skoXC1 (* skoXC1 (+ (/ (- 1163.) 105.) (* skoXC1 (* skoXC1 (+ (/ 1753. 105.) (* skoXC1 (* skoXC1 (+ (/ (- 169.) 28.) (* skoXC1 (* skoXC1 (/ 25. 56.)))))))))))))))))))) 0.) (and (> (* skoXC1 (* skoXC1 (+ (/ 1. 6.) (* skoXC1 (* skoXC1 (+ (/ 3. 40.) (* skoXC1 (* skoXC1 (/ 5. 112.))))))))) (- 1.)) (<= (* skoXC1 (+ (- 1.) (* skoXC1 (* skoXC1 (+ (/ (- 1.) 6.) (* skoXC1 (* skoXC1 (+ (/ (- 3.) 40.) (* skoXC1 (* skoXC1 (/ (- 5.) 112.))))))))))) 0.)))))))))))))))))))))))))))))))))))))

% In GRF format:
(sequent " MetiTarski formula " (antecedent (<= (* skoXC1 (+ (- 1.) (* skoXC1 (* skoXC1 (+ (/ 1. 3.) (* skoXC1 (* skoXC1 (+ (/ 3. 20.) (* skoXC1 (* skoXC1 (+ (/ 5. 56.) (* skoXC1 (* skoXC1 (+ (/ 35. 576.) (* skoXC1 (* skoXC1 (/ 63. 1408.))))))))))))))))) 0.) (<= (* skoXC1 (+ (- 1.) (* skoXC1 (* skoXC1 (+ (/ (- 1.) 6.) (* skoXC1 (* skoXC1 (/ (- 3.) 40.)))))))) 0.) (> (* skoXC1 (* skoXC1 (+ (/ 1. 6.) (* skoXC1 (* skoXC1 (/ 3. 40.)))))) (- 1.)) (<= (* skoXC1 (* skoXC1 (* skoXC1 (* skoXC1 (+ (/ 32. 15.) (* skoXC1 (* skoXC1 (+ (/ (- 296.) 15.) (* skoXC1 (* skoXC1 (+ (/ 391. 15.) (* skoXC1 (* skoXC1 (+ (/ (- 146.) 15.) (* skoXC1 (* skoXC1 (/ 3. 4.))))))))))))))))) 0.) (<= (* skoXC1 (* skoXC1 (+ (/ 1. 3.) (* skoXC1 (* skoXC1 (/ 3. 20.)))))) 1.) (<= (* skoXC1 (* skoXC1 (* skoXC1 (* skoXC1 (+ (/ (- 17.) 120.) (* skoXC1 (* skoXC1 (/ 3. 80.)))))))) 0.) (<= (* skoXC1 (* skoXC1 (* skoXC1 (* skoXC1 (+ (/ (- 13.) 60.) (* skoXC1 (* skoXC1 (/ (- 3.) 10.)))))))) 0.) (<= (* skoXC1 (* skoXC1 (+ (/ (- 1.) 2.) (* skoXC1 (* skoXC1 (+ (/ 7. 120.) (* skoXC1 (* skoXC1 (/ (- 3.) 40.))))))))) 0.) (<= (* skoXC1 (* skoXC1 (+ (/ (- 1.) 6.) (* skoXC1 (* skoXC1 (/ (- 3.) 40.)))))) 1.) (<= (* skoXC1 (+ (- 1.) (* skoXC1 (* skoXC1 (+ (/ 1. 3.) (* skoXC1 (* skoXC1 (/ 3. 20.)))))))) 0.) (> (* skoXC1 skoXC1) 0.) (<= (* skoXC1 (* skoXC1 (+ 80. (* skoXC1 (* skoXC1 (+ (- 40.) (* skoXC1 (* skoXC1 (+ 6. (* skoXC1 (* skoXC1 (/ (- 1.) 8.)))))))))))) 48.) (> (* skoXC1 (* skoXC1 (+ (- 80.) (* skoXC1 (* skoXC1 (+ 40. (* skoXC1 (* skoXC1 (+ (- 6.) (* skoXC1 (* skoXC1 (/ 1. 8.)))))))))))) (- 48.)) (<= (* skoXC1 (* skoXC1 (+ 24. (* skoXC1 (* skoXC1 (+ (- 10.) (* skoXC1 skoXC1))))))) 16.) (<= (* skoXC1 (* skoXC1 (/ 1. 2.))) 3.) (> (* skoXC1 (* skoXC1 (/ (- 1.) 2.))) (- 3.)) (> skoXC1 0.) (> (/ 7. 8.) skoXC1) (<= (* skoXC1 (+ (- 1.) (* skoXC1 (* skoXC1 (/ 1. 3.))))) 0.) (<= (* skoXC1 (* skoXC1 (/ (- 1.) 6.))) 1.) (<= (* skoXC1 (* skoXC1 (+ (/ (- 1.) 2.) (* skoXC1 (* skoXC1 (/ (- 1.) 6.)))))) 0.) (<= (* skoXC1 skoXC1) 2.) (<= (* skoXC1 (* skoXC1 (* skoXC1 (* skoXC1 (/ (- 2.) 3.))))) 0.) (<= (* skoXC1 (+ (- 1.) (* skoXC1 (* skoXC1 (/ (- 1.) 6.))))) 0.) (<= (* skoXC1 (* skoXC1 (/ 1. 3.))) 1.) (<= (* skoXC1 (* skoXC1 (+ 256. (* skoXC1 (* skoXC1 (+ (- 160.) (* skoXC1 (* skoXC1 (+ 32. (* skoXC1 (* skoXC1 (- 1.)))))))))))) 128.) (<= (* skoXC1 (* skoXC1 (* skoXC1 (* skoXC1 (+ (/ (- 80.) 3.) (* skoXC1 (* skoXC1 (+ (/ 128. 3.) (* skoXC1 (* skoXC1 (+ (/ (- 55.) 3.) (* skoXC1 (* skoXC1 (/ 5. 3.)))))))))))))) 0.) (<= (* skoXC1 (+ (- 1.) (* skoXC1 (* skoXC1 (+ (/ 1. 3.) (* skoXC1 (* skoXC1 (+ (/ 3. 20.) (* skoXC1 (* skoXC1 (/ 5. 56.))))))))))) 0.) (<= (* skoXC1 (* skoXC1 (+ (/ (- 1.) 6.) (* skoXC1 (* skoXC1 (+ (/ (- 3.) 40.) (* skoXC1 (* skoXC1 (/ (- 5.) 112.))))))))) 1.) (<= (* skoXC1 (* skoXC1 (+ (/ (- 1.) 2.) (* skoXC1 (* skoXC1 (+ (/ 7. 120.) (* skoXC1 (* skoXC1 (+ (/ 33. 560.) (* skoXC1 (* skoXC1 (/ (- 5.) 112.)))))))))))) 0.) (<= (* skoXC1 (* skoXC1 (* skoXC1 (* skoXC1 (+ (/ (- 13.) 60.) (* skoXC1 (* skoXC1 (+ (/ (- 9.) 280.) (* skoXC1 (* skoXC1 (/ (- 5.) 28.))))))))))) 0.) (<= (* skoXC1 (* skoXC1 (* skoXC1 (* skoXC1 (+ (/ (- 17.) 120.) (* skoXC1 (* skoXC1 (+ (/ (- 27.) 280.) (* skoXC1 (* skoXC1 (/ 5. 224.))))))))))) 0.) (<= (* skoXC1 (* skoXC1 (+ (/ 1. 3.) (* skoXC1 (* skoXC1 (+ (/ 3. 20.) (* skoXC1 (* skoXC1 (/ 5. 56.))))))))) 1.) (<= (* skoXC1 (* skoXC1 (* skoXC1 (* skoXC1 (+ (/ 32. 15.) (* skoXC1 (* skoXC1 (+ (/ (- 272.) 105.) (* skoXC1 (* skoXC1 (+ (/ (- 1163.) 105.) (* skoXC1 (* skoXC1 (+ (/ 1753. 105.) (* skoXC1 (* skoXC1 (+ (/ (- 169.) 28.) (* skoXC1 (* skoXC1 (/ 25. 56.)))))))))))))))))))) 0.) (> (* skoXC1 (* skoXC1 (+ (/ 1. 6.) (* skoXC1 (* skoXC1 (+ (/ 3. 40.) (* skoXC1 (* skoXC1 (/ 5. 112.))))))))) (- 1.))) (succedent (> (* skoXC1 (+ (- 1.) (* skoXC1 (* skoXC1 (+ (/ (- 1.) 6.) (* skoXC1 (* skoXC1 (+ (/ (- 3.) 40.) (* skoXC1 (* skoXC1 (/ (- 5.) 112.))))))))))) 0.)))
-----[end problem]-----

-----[begin problem]-----
% In Mathematica format:
Timing[Resolve[Exists[{skoXC1}, And[skoXC1*skoXC1*((-1/6)+skoXC1*skoXC1*((-3/40)+skoXC1*skoXC1*((-5/112)+skoXC1*skoXC1*((-35/1152)+skoXC1*skoXC1*(-63/2816)))))<=1,skoXC1*(-1+skoXC1*skoXC1*((1/3)+skoXC1*skoXC1*((3/20)+skoXC1*skoXC1*((5/56)+skoXC1*skoXC1*((35/576)+skoXC1*skoXC1*(63/1408))))))<=0,skoXC1*(-1+skoXC1*skoXC1*((-1/6)+skoXC1*skoXC1*(-3/40)))<=0,skoXC1*skoXC1*((1/6)+skoXC1*skoXC1*(3/40))>-1,skoXC1*skoXC1*skoXC1*skoXC1*((32/15)+skoXC1*skoXC1*((-296/15)+skoXC1*skoXC1*((391/15)+skoXC1*skoXC1*((-146/15)+skoXC1*skoXC1*(3/4)))))<=0,skoXC1*skoXC1*((1/3)+skoXC1*skoXC1*(3/20))<=1,skoXC1*skoXC1*skoXC1*skoXC1*((-17/120)+skoXC1*skoXC1*(3/80))<=0,skoXC1*skoXC1*skoXC1*skoXC1*((-13/60)+skoXC1*skoXC1*(-3/10))<=0,skoXC1*skoXC1*((-1/2)+skoXC1*skoXC1*((7/120)+skoXC1*skoXC1*(-3/40)))<=0,skoXC1*skoXC1*((-1/6)+skoXC1*skoXC1*(-3/40))<=1,skoXC1*(-1+skoXC1*skoXC1*((1/3)+skoXC1*skoXC1*(3/20)))<=0,skoXC1*skoXC1>0,skoXC1*skoXC1*(80+skoXC1*skoXC1*(-40+skoXC1*skoXC1*(6+skoXC1*skoXC1*(-1/8))))<=48,skoXC1*skoXC1*(-80+skoXC1*skoXC1*(40+skoXC1*skoXC1*(-6+skoXC1*skoXC1*(1/8))))>-48,skoXC1*skoXC1*(24+skoXC1*skoXC1*(-10+skoXC1*skoXC1))<=16,skoXC1*skoXC1*(1/2)<=3,skoXC1*skoXC1*(-1/2)>-3,skoXC1>0,(7/8)>skoXC1,skoXC1*(-1+skoXC1*skoXC1*(1/3))<=0,skoXC1*skoXC1*(-1/6)<=1,skoXC1*skoXC1*((-1/2)+skoXC1*skoXC1*(-1/6))<=0,skoXC1*skoXC1<=2,skoXC1*skoXC1*skoXC1*skoXC1*(-2/3)<=0,skoXC1*(-1+skoXC1*skoXC1*(-1/6))<=0,skoXC1*skoXC1*(1/3)<=1,skoXC1*skoXC1*(256+skoXC1*skoXC1*(-160+skoXC1*skoXC1*(32+skoXC1*skoXC1*-1)))<=128,skoXC1*skoXC1*skoXC1*skoXC1*((-80/3)+skoXC1*skoXC1*((128/3)+skoXC1*skoXC1*((-55/3)+skoXC1*skoXC1*(5/3))))<=0,skoXC1*(-1+skoXC1*skoXC1*((1/3)+skoXC1*skoXC1*((3/20)+skoXC1*skoXC1*(5/56))))<=0,skoXC1*skoXC1*((-1/6)+skoXC1*skoXC1*((-3/40)+skoXC1*skoXC1*(-5/112)))<=1,skoXC1*skoXC1*((-1/2)+skoXC1*skoXC1*((7/120)+skoXC1*skoXC1*((33/560)+skoXC1*skoXC1*(-5/112))))<=0,skoXC1*skoXC1*skoXC1*skoXC1*((-13/60)+skoXC1*skoXC1*((-9/280)+skoXC1*skoXC1*(-5/28)))<=0,skoXC1*skoXC1*skoXC1*skoXC1*((-17/120)+skoXC1*skoXC1*((-27/280)+skoXC1*skoXC1*(5/224)))<=0,skoXC1*skoXC1*((1/3)+skoXC1*skoXC1*((3/20)+skoXC1*skoXC1*(5/56)))<=1,skoXC1*skoXC1*skoXC1*skoXC1*((32/15)+skoXC1*skoXC1*((-272/105)+skoXC1*skoXC1*((-1163/105)+skoXC1*skoXC1*((1753/105)+skoXC1*skoXC1*((-169/28)+skoXC1*skoXC1*(25/56))))))<=0,skoXC1*skoXC1*((1/6)+skoXC1*skoXC1*((3/40)+skoXC1*skoXC1*(5/112)))>-1,skoXC1*(-1+skoXC1*skoXC1*((-1/6)+skoXC1*skoXC1*((-3/40)+skoXC1*skoXC1*(-5/112))))<=0]], Reals]]

% In QepcadB format:
(E skoXC1) [[(skoXC1 skoXC1 (-1/6+(skoXC1 skoXC1 (-3/40+(skoXC1 skoXC1 (-5/112+(skoXC1 skoXC1 (-35/1152+(skoXC1 skoXC1 (-63/2816))))))))))<=1]/\[[(skoXC1 (-1+(skoXC1 skoXC1 (1/3+(skoXC1 skoXC1 (3/20+(skoXC1 skoXC1 (5/56+(skoXC1 skoXC1 (35/576+(skoXC1 skoXC1 (63/1408))))))))))))<=0]/\[[(skoXC1 (-1+(skoXC1 skoXC1 (-1/6+(skoXC1 skoXC1 (-3/40))))))<=0]/\[[-1<(skoXC1 skoXC1 (1/6+(skoXC1 skoXC1 (3/40))))]/\[[(skoXC1 skoXC1 skoXC1 skoXC1 (32/15+(skoXC1 skoXC1 (-296/15+(skoXC1 skoXC1 (391/15+(skoXC1 skoXC1 (-146/15+(skoXC1 skoXC1 (3/4))))))))))<=0]/\[[(skoXC1 skoXC1 (1/3+(skoXC1 skoXC1 (3/20))))<=1]/\[[(skoXC1 skoXC1 skoXC1 skoXC1 (-17/120+(skoXC1 skoXC1 (3/80))))<=0]/\[[(skoXC1 skoXC1 skoXC1 skoXC1 (-13/60+(skoXC1 skoXC1 (-3/10))))<=0]/\[[(skoXC1 skoXC1 (-1/2+(skoXC1 skoXC1 (7/120+(skoXC1 skoXC1 (-3/40))))))<=0]/\[[(skoXC1 skoXC1 (-1/6+(skoXC1 skoXC1 (-3/40))))<=1]/\[[(skoXC1 (-1+(skoXC1 skoXC1 (1/3+(skoXC1 skoXC1 (3/20))))))<=0]/\[[0<(skoXC1 skoXC1)]/\[[(skoXC1 skoXC1 (80+(skoXC1 skoXC1 (-40+(skoXC1 skoXC1 (6+(skoXC1 skoXC1 (-1/8))))))))<=48]/\[[-48<(skoXC1 skoXC1 (-80+(skoXC1 skoXC1 (40+(skoXC1 skoXC1 (-6+(skoXC1 skoXC1 (1/8))))))))]/\[[(skoXC1 skoXC1 (24+(skoXC1 skoXC1 (-10+(skoXC1 skoXC1)))))<=16]/\[[(skoXC1 skoXC1 (1/2))<=3]/\[[-3<(skoXC1 skoXC1 (-1/2))]/\[[0<skoXC1]/\[[skoXC1<7/8]/\[[(skoXC1 (-1+(skoXC1 skoXC1 (1/3))))<=0]/\[[(skoXC1 skoXC1 (-1/6))<=1]/\[[(skoXC1 skoXC1 (-1/2+(skoXC1 skoXC1 (-1/6))))<=0]/\[[(skoXC1 skoXC1)<=2]/\[[(skoXC1 skoXC1 skoXC1 skoXC1 (-2/3))<=0]/\[[(skoXC1 (-1+(skoXC1 skoXC1 (-1/6))))<=0]/\[[(skoXC1 skoXC1 (1/3))<=1]/\[[(skoXC1 skoXC1 (256+(skoXC1 skoXC1 (-160+(skoXC1 skoXC1 (32+(skoXC1 skoXC1 (-1))))))))<=128]/\[[(skoXC1 skoXC1 skoXC1 skoXC1 (-80/3+(skoXC1 skoXC1 (128/3+(skoXC1 skoXC1 (-55/3+(skoXC1 skoXC1 (5/3))))))))<=0]/\[[(skoXC1 (-1+(skoXC1 skoXC1 (1/3+(skoXC1 skoXC1 (3/20+(skoXC1 skoXC1 (5/56))))))))<=0]/\[[(skoXC1 skoXC1 (-1/6+(skoXC1 skoXC1 (-3/40+(skoXC1 skoXC1 (-5/112))))))<=1]/\[[(skoXC1 skoXC1 (-1/2+(skoXC1 skoXC1 (7/120+(skoXC1 skoXC1 (33/560+(skoXC1 skoXC1 (-5/112))))))))<=0]/\[[(skoXC1 skoXC1 skoXC1 skoXC1 (-13/60+(skoXC1 skoXC1 (-9/280+(skoXC1 skoXC1 (-5/28))))))<=0]/\[[(skoXC1 skoXC1 skoXC1 skoXC1 (-17/120+(skoXC1 skoXC1 (-27/280+(skoXC1 skoXC1 (5/224))))))<=0]/\[[(skoXC1 skoXC1 (1/3+(skoXC1 skoXC1 (3/20+(skoXC1 skoXC1 (5/56))))))<=1]/\[[(skoXC1 skoXC1 skoXC1 skoXC1 (32/15+(skoXC1 skoXC1 (-272/105+(skoXC1 skoXC1 (-1163/105+(skoXC1 skoXC1 (1753/105+(skoXC1 skoXC1 (-169/28+(skoXC1 skoXC1 (25/56))))))))))))<=0]/\[[-1<(skoXC1 skoXC1 (1/6+(skoXC1 skoXC1 (3/40+(skoXC1 skoXC1 (5/112))))))]/\[(skoXC1 (-1+(skoXC1 skoXC1 (-1/6+(skoXC1 skoXC1 (-3/40+(skoXC1 skoXC1 (-5/112))))))))<=0]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]].

% In SMTLib2 format:
(declare-fun skoXC1 () Real) (assert (and (<= (* skoXC1 (* skoXC1 (+ (/ (- 1.) 6.) (* skoXC1 (* skoXC1 (+ (/ (- 3.) 40.) (* skoXC1 (* skoXC1 (+ (/ (- 5.) 112.) (* skoXC1 (* skoXC1 (+ (/ (- 35.) 1152.) (* skoXC1 (* skoXC1 (/ (- 63.) 2816.))))))))))))))) 1.) (and (<= (* skoXC1 (+ (- 1.) (* skoXC1 (* skoXC1 (+ (/ 1. 3.) (* skoXC1 (* skoXC1 (+ (/ 3. 20.) (* skoXC1 (* skoXC1 (+ (/ 5. 56.) (* skoXC1 (* skoXC1 (+ (/ 35. 576.) (* skoXC1 (* skoXC1 (/ 63. 1408.))))))))))))))))) 0.) (and (<= (* skoXC1 (+ (- 1.) (* skoXC1 (* skoXC1 (+ (/ (- 1.) 6.) (* skoXC1 (* skoXC1 (/ (- 3.) 40.)))))))) 0.) (and (> (* skoXC1 (* skoXC1 (+ (/ 1. 6.) (* skoXC1 (* skoXC1 (/ 3. 40.)))))) (- 1.)) (and (<= (* skoXC1 (* skoXC1 (* skoXC1 (* skoXC1 (+ (/ 32. 15.) (* skoXC1 (* skoXC1 (+ (/ (- 296.) 15.) (* skoXC1 (* skoXC1 (+ (/ 391. 15.) (* skoXC1 (* skoXC1 (+ (/ (- 146.) 15.) (* skoXC1 (* skoXC1 (/ 3. 4.))))))))))))))))) 0.) (and (<= (* skoXC1 (* skoXC1 (+ (/ 1. 3.) (* skoXC1 (* skoXC1 (/ 3. 20.)))))) 1.) (and (<= (* skoXC1 (* skoXC1 (* skoXC1 (* skoXC1 (+ (/ (- 17.) 120.) (* skoXC1 (* skoXC1 (/ 3. 80.)))))))) 0.) (and (<= (* skoXC1 (* skoXC1 (* skoXC1 (* skoXC1 (+ (/ (- 13.) 60.) (* skoXC1 (* skoXC1 (/ (- 3.) 10.)))))))) 0.) (and (<= (* skoXC1 (* skoXC1 (+ (/ (- 1.) 2.) (* skoXC1 (* skoXC1 (+ (/ 7. 120.) (* skoXC1 (* skoXC1 (/ (- 3.) 40.))))))))) 0.) (and (<= (* skoXC1 (* skoXC1 (+ (/ (- 1.) 6.) (* skoXC1 (* skoXC1 (/ (- 3.) 40.)))))) 1.) (and (<= (* skoXC1 (+ (- 1.) (* skoXC1 (* skoXC1 (+ (/ 1. 3.) (* skoXC1 (* skoXC1 (/ 3. 20.)))))))) 0.) (and (> (* skoXC1 skoXC1) 0.) (and (<= (* skoXC1 (* skoXC1 (+ 80. (* skoXC1 (* skoXC1 (+ (- 40.) (* skoXC1 (* skoXC1 (+ 6. (* skoXC1 (* skoXC1 (/ (- 1.) 8.)))))))))))) 48.) (and (> (* skoXC1 (* skoXC1 (+ (- 80.) (* skoXC1 (* skoXC1 (+ 40. (* skoXC1 (* skoXC1 (+ (- 6.) (* skoXC1 (* skoXC1 (/ 1. 8.)))))))))))) (- 48.)) (and (<= (* skoXC1 (* skoXC1 (+ 24. (* skoXC1 (* skoXC1 (+ (- 10.) (* skoXC1 skoXC1))))))) 16.) (and (<= (* skoXC1 (* skoXC1 (/ 1. 2.))) 3.) (and (> (* skoXC1 (* skoXC1 (/ (- 1.) 2.))) (- 3.)) (and (> skoXC1 0.) (and (> (/ 7. 8.) skoXC1) (and (<= (* skoXC1 (+ (- 1.) (* skoXC1 (* skoXC1 (/ 1. 3.))))) 0.) (and (<= (* skoXC1 (* skoXC1 (/ (- 1.) 6.))) 1.) (and (<= (* skoXC1 (* skoXC1 (+ (/ (- 1.) 2.) (* skoXC1 (* skoXC1 (/ (- 1.) 6.)))))) 0.) (and (<= (* skoXC1 skoXC1) 2.) (and (<= (* skoXC1 (* skoXC1 (* skoXC1 (* skoXC1 (/ (- 2.) 3.))))) 0.) (and (<= (* skoXC1 (+ (- 1.) (* skoXC1 (* skoXC1 (/ (- 1.) 6.))))) 0.) (and (<= (* skoXC1 (* skoXC1 (/ 1. 3.))) 1.) (and (<= (* skoXC1 (* skoXC1 (+ 256. (* skoXC1 (* skoXC1 (+ (- 160.) (* skoXC1 (* skoXC1 (+ 32. (* skoXC1 (* skoXC1 (- 1.)))))))))))) 128.) (and (<= (* skoXC1 (* skoXC1 (* skoXC1 (* skoXC1 (+ (/ (- 80.) 3.) (* skoXC1 (* skoXC1 (+ (/ 128. 3.) (* skoXC1 (* skoXC1 (+ (/ (- 55.) 3.) (* skoXC1 (* skoXC1 (/ 5. 3.)))))))))))))) 0.) (and (<= (* skoXC1 (+ (- 1.) (* skoXC1 (* skoXC1 (+ (/ 1. 3.) (* skoXC1 (* skoXC1 (+ (/ 3. 20.) (* skoXC1 (* skoXC1 (/ 5. 56.))))))))))) 0.) (and (<= (* skoXC1 (* skoXC1 (+ (/ (- 1.) 6.) (* skoXC1 (* skoXC1 (+ (/ (- 3.) 40.) (* skoXC1 (* skoXC1 (/ (- 5.) 112.))))))))) 1.) (and (<= (* skoXC1 (* skoXC1 (+ (/ (- 1.) 2.) (* skoXC1 (* skoXC1 (+ (/ 7. 120.) (* skoXC1 (* skoXC1 (+ (/ 33. 560.) (* skoXC1 (* skoXC1 (/ (- 5.) 112.)))))))))))) 0.) (and (<= (* skoXC1 (* skoXC1 (* skoXC1 (* skoXC1 (+ (/ (- 13.) 60.) (* skoXC1 (* skoXC1 (+ (/ (- 9.) 280.) (* skoXC1 (* skoXC1 (/ (- 5.) 28.))))))))))) 0.) (and (<= (* skoXC1 (* skoXC1 (* skoXC1 (* skoXC1 (+ (/ (- 17.) 120.) (* skoXC1 (* skoXC1 (+ (/ (- 27.) 280.) (* skoXC1 (* skoXC1 (/ 5. 224.))))))))))) 0.) (and (<= (* skoXC1 (* skoXC1 (+ (/ 1. 3.) (* skoXC1 (* skoXC1 (+ (/ 3. 20.) (* skoXC1 (* skoXC1 (/ 5. 56.))))))))) 1.) (and (<= (* skoXC1 (* skoXC1 (* skoXC1 (* skoXC1 (+ (/ 32. 15.) (* skoXC1 (* skoXC1 (+ (/ (- 272.) 105.) (* skoXC1 (* skoXC1 (+ (/ (- 1163.) 105.) (* skoXC1 (* skoXC1 (+ (/ 1753. 105.) (* skoXC1 (* skoXC1 (+ (/ (- 169.) 28.) (* skoXC1 (* skoXC1 (/ 25. 56.)))))))))))))))))))) 0.) (and (> (* skoXC1 (* skoXC1 (+ (/ 1. 6.) (* skoXC1 (* skoXC1 (+ (/ 3. 40.) (* skoXC1 (* skoXC1 (/ 5. 112.))))))))) (- 1.)) (<= (* skoXC1 (+ (- 1.) (* skoXC1 (* skoXC1 (+ (/ (- 1.) 6.) (* skoXC1 (* skoXC1 (+ (/ (- 3.) 40.) (* skoXC1 (* skoXC1 (/ (- 5.) 112.))))))))))) 0.))))))))))))))))))))))))))))))))))))))

% In GRF format:
(sequent " MetiTarski formula " (antecedent (<= (* skoXC1 (* skoXC1 (+ (/ (- 1.) 6.) (* skoXC1 (* skoXC1 (+ (/ (- 3.) 40.) (* skoXC1 (* skoXC1 (+ (/ (- 5.) 112.) (* skoXC1 (* skoXC1 (+ (/ (- 35.) 1152.) (* skoXC1 (* skoXC1 (/ (- 63.) 2816.))))))))))))))) 1.) (<= (* skoXC1 (+ (- 1.) (* skoXC1 (* skoXC1 (+ (/ 1. 3.) (* skoXC1 (* skoXC1 (+ (/ 3. 20.) (* skoXC1 (* skoXC1 (+ (/ 5. 56.) (* skoXC1 (* skoXC1 (+ (/ 35. 576.) (* skoXC1 (* skoXC1 (/ 63. 1408.))))))))))))))))) 0.) (<= (* skoXC1 (+ (- 1.) (* skoXC1 (* skoXC1 (+ (/ (- 1.) 6.) (* skoXC1 (* skoXC1 (/ (- 3.) 40.)))))))) 0.) (> (* skoXC1 (* skoXC1 (+ (/ 1. 6.) (* skoXC1 (* skoXC1 (/ 3. 40.)))))) (- 1.)) (<= (* skoXC1 (* skoXC1 (* skoXC1 (* skoXC1 (+ (/ 32. 15.) (* skoXC1 (* skoXC1 (+ (/ (- 296.) 15.) (* skoXC1 (* skoXC1 (+ (/ 391. 15.) (* skoXC1 (* skoXC1 (+ (/ (- 146.) 15.) (* skoXC1 (* skoXC1 (/ 3. 4.))))))))))))))))) 0.) (<= (* skoXC1 (* skoXC1 (+ (/ 1. 3.) (* skoXC1 (* skoXC1 (/ 3. 20.)))))) 1.) (<= (* skoXC1 (* skoXC1 (* skoXC1 (* skoXC1 (+ (/ (- 17.) 120.) (* skoXC1 (* skoXC1 (/ 3. 80.)))))))) 0.) (<= (* skoXC1 (* skoXC1 (* skoXC1 (* skoXC1 (+ (/ (- 13.) 60.) (* skoXC1 (* skoXC1 (/ (- 3.) 10.)))))))) 0.) (<= (* skoXC1 (* skoXC1 (+ (/ (- 1.) 2.) (* skoXC1 (* skoXC1 (+ (/ 7. 120.) (* skoXC1 (* skoXC1 (/ (- 3.) 40.))))))))) 0.) (<= (* skoXC1 (* skoXC1 (+ (/ (- 1.) 6.) (* skoXC1 (* skoXC1 (/ (- 3.) 40.)))))) 1.) (<= (* skoXC1 (+ (- 1.) (* skoXC1 (* skoXC1 (+ (/ 1. 3.) (* skoXC1 (* skoXC1 (/ 3. 20.)))))))) 0.) (> (* skoXC1 skoXC1) 0.) (<= (* skoXC1 (* skoXC1 (+ 80. (* skoXC1 (* skoXC1 (+ (- 40.) (* skoXC1 (* skoXC1 (+ 6. (* skoXC1 (* skoXC1 (/ (- 1.) 8.)))))))))))) 48.) (> (* skoXC1 (* skoXC1 (+ (- 80.) (* skoXC1 (* skoXC1 (+ 40. (* skoXC1 (* skoXC1 (+ (- 6.) (* skoXC1 (* skoXC1 (/ 1. 8.)))))))))))) (- 48.)) (<= (* skoXC1 (* skoXC1 (+ 24. (* skoXC1 (* skoXC1 (+ (- 10.) (* skoXC1 skoXC1))))))) 16.) (<= (* skoXC1 (* skoXC1 (/ 1. 2.))) 3.) (> (* skoXC1 (* skoXC1 (/ (- 1.) 2.))) (- 3.)) (> skoXC1 0.) (> (/ 7. 8.) skoXC1) (<= (* skoXC1 (+ (- 1.) (* skoXC1 (* skoXC1 (/ 1. 3.))))) 0.) (<= (* skoXC1 (* skoXC1 (/ (- 1.) 6.))) 1.) (<= (* skoXC1 (* skoXC1 (+ (/ (- 1.) 2.) (* skoXC1 (* skoXC1 (/ (- 1.) 6.)))))) 0.) (<= (* skoXC1 skoXC1) 2.) (<= (* skoXC1 (* skoXC1 (* skoXC1 (* skoXC1 (/ (- 2.) 3.))))) 0.) (<= (* skoXC1 (+ (- 1.) (* skoXC1 (* skoXC1 (/ (- 1.) 6.))))) 0.) (<= (* skoXC1 (* skoXC1 (/ 1. 3.))) 1.) (<= (* skoXC1 (* skoXC1 (+ 256. (* skoXC1 (* skoXC1 (+ (- 160.) (* skoXC1 (* skoXC1 (+ 32. (* skoXC1 (* skoXC1 (- 1.)))))))))))) 128.) (<= (* skoXC1 (* skoXC1 (* skoXC1 (* skoXC1 (+ (/ (- 80.) 3.) (* skoXC1 (* skoXC1 (+ (/ 128. 3.) (* skoXC1 (* skoXC1 (+ (/ (- 55.) 3.) (* skoXC1 (* skoXC1 (/ 5. 3.)))))))))))))) 0.) (<= (* skoXC1 (+ (- 1.) (* skoXC1 (* skoXC1 (+ (/ 1. 3.) (* skoXC1 (* skoXC1 (+ (/ 3. 20.) (* skoXC1 (* skoXC1 (/ 5. 56.))))))))))) 0.) (<= (* skoXC1 (* skoXC1 (+ (/ (- 1.) 6.) (* skoXC1 (* skoXC1 (+ (/ (- 3.) 40.) (* skoXC1 (* skoXC1 (/ (- 5.) 112.))))))))) 1.) (<= (* skoXC1 (* skoXC1 (+ (/ (- 1.) 2.) (* skoXC1 (* skoXC1 (+ (/ 7. 120.) (* skoXC1 (* skoXC1 (+ (/ 33. 560.) (* skoXC1 (* skoXC1 (/ (- 5.) 112.)))))))))))) 0.) (<= (* skoXC1 (* skoXC1 (* skoXC1 (* skoXC1 (+ (/ (- 13.) 60.) (* skoXC1 (* skoXC1 (+ (/ (- 9.) 280.) (* skoXC1 (* skoXC1 (/ (- 5.) 28.))))))))))) 0.) (<= (* skoXC1 (* skoXC1 (* skoXC1 (* skoXC1 (+ (/ (- 17.) 120.) (* skoXC1 (* skoXC1 (+ (/ (- 27.) 280.) (* skoXC1 (* skoXC1 (/ 5. 224.))))))))))) 0.) (<= (* skoXC1 (* skoXC1 (+ (/ 1. 3.) (* skoXC1 (* skoXC1 (+ (/ 3. 20.) (* skoXC1 (* skoXC1 (/ 5. 56.))))))))) 1.) (<= (* skoXC1 (* skoXC1 (* skoXC1 (* skoXC1 (+ (/ 32. 15.) (* skoXC1 (* skoXC1 (+ (/ (- 272.) 105.) (* skoXC1 (* skoXC1 (+ (/ (- 1163.) 105.) (* skoXC1 (* skoXC1 (+ (/ 1753. 105.) (* skoXC1 (* skoXC1 (+ (/ (- 169.) 28.) (* skoXC1 (* skoXC1 (/ 25. 56.)))))))))))))))))))) 0.) (> (* skoXC1 (* skoXC1 (+ (/ 1. 6.) (* skoXC1 (* skoXC1 (+ (/ 3. 40.) (* skoXC1 (* skoXC1 (/ 5. 112.))))))))) (- 1.))) (succedent (> (* skoXC1 (+ (- 1.) (* skoXC1 (* skoXC1 (+ (/ (- 1.) 6.) (* skoXC1 (* skoXC1 (+ (/ (- 3.) 40.) (* skoXC1 (* skoXC1 (/ (- 5.) 112.))))))))))) 0.)))
-----[end problem]-----

-----[begin problem]-----
% In Mathematica format:
Timing[Resolve[Exists[{skoXC1}, And[skoXC1*skoXC1*((1/6)+skoXC1*skoXC1*((3/40)+skoXC1*skoXC1*((5/112)+skoXC1*skoXC1*((35/1152)+skoXC1*skoXC1*(63/2816)))))<=-1,skoXC1*(-1+skoXC1*skoXC1*((1/3)+skoXC1*skoXC1*((3/20)+skoXC1*skoXC1*((5/56)+skoXC1*skoXC1*((35/576)+skoXC1*skoXC1*(63/1408))))))<=0,skoXC1*(-1+skoXC1*skoXC1*((-1/6)+skoXC1*skoXC1*(-3/40)))<=0,skoXC1*skoXC1*((1/6)+skoXC1*skoXC1*(3/40))>-1,skoXC1*skoXC1*skoXC1*skoXC1*((32/15)+skoXC1*skoXC1*((-296/15)+skoXC1*skoXC1*((391/15)+skoXC1*skoXC1*((-146/15)+skoXC1*skoXC1*(3/4)))))<=0,skoXC1*skoXC1*((1/3)+skoXC1*skoXC1*(3/20))<=1,skoXC1*skoXC1*skoXC1*skoXC1*((-17/120)+skoXC1*skoXC1*(3/80))<=0,skoXC1*skoXC1*skoXC1*skoXC1*((-13/60)+skoXC1*skoXC1*(-3/10))<=0,skoXC1*skoXC1*((-1/2)+skoXC1*skoXC1*((7/120)+skoXC1*skoXC1*(-3/40)))<=0,skoXC1*skoXC1*((-1/6)+skoXC1*skoXC1*(-3/40))<=1,skoXC1*(-1+skoXC1*skoXC1*((1/3)+skoXC1*skoXC1*(3/20)))<=0,skoXC1*skoXC1>0,skoXC1*skoXC1*(80+skoXC1*skoXC1*(-40+skoXC1*skoXC1*(6+skoXC1*skoXC1*(-1/8))))<=48,skoXC1*skoXC1*(-80+skoXC1*skoXC1*(40+skoXC1*skoXC1*(-6+skoXC1*skoXC1*(1/8))))>-48,skoXC1*skoXC1*(24+skoXC1*skoXC1*(-10+skoXC1*skoXC1))<=16,skoXC1*skoXC1*(1/2)<=3,skoXC1*skoXC1*(-1/2)>-3,skoXC1>0,(7/8)>skoXC1,skoXC1*(-1+skoXC1*skoXC1*(1/3))<=0,skoXC1*skoXC1*(-1/6)<=1,skoXC1*skoXC1*((-1/2)+skoXC1*skoXC1*(-1/6))<=0,skoXC1*skoXC1<=2,skoXC1*skoXC1*skoXC1*skoXC1*(-2/3)<=0,skoXC1*(-1+skoXC1*skoXC1*(-1/6))<=0,skoXC1*skoXC1*(1/3)<=1,skoXC1*skoXC1*(256+skoXC1*skoXC1*(-160+skoXC1*skoXC1*(32+skoXC1*skoXC1*-1)))<=128,skoXC1*skoXC1*skoXC1*skoXC1*((-80/3)+skoXC1*skoXC1*((128/3)+skoXC1*skoXC1*((-55/3)+skoXC1*skoXC1*(5/3))))<=0,skoXC1*(-1+skoXC1*skoXC1*((1/3)+skoXC1*skoXC1*((3/20)+skoXC1*skoXC1*(5/56))))<=0,skoXC1*skoXC1*((-1/6)+skoXC1*skoXC1*((-3/40)+skoXC1*skoXC1*(-5/112)))<=1,skoXC1*skoXC1*((-1/2)+skoXC1*skoXC1*((7/120)+skoXC1*skoXC1*((33/560)+skoXC1*skoXC1*(-5/112))))<=0,skoXC1*skoXC1*skoXC1*skoXC1*((-13/60)+skoXC1*skoXC1*((-9/280)+skoXC1*skoXC1*(-5/28)))<=0,skoXC1*skoXC1*skoXC1*skoXC1*((-17/120)+skoXC1*skoXC1*((-27/280)+skoXC1*skoXC1*(5/224)))<=0,skoXC1*skoXC1*((1/3)+skoXC1*skoXC1*((3/20)+skoXC1*skoXC1*(5/56)))<=1,skoXC1*skoXC1*skoXC1*skoXC1*((32/15)+skoXC1*skoXC1*((-272/105)+skoXC1*skoXC1*((-1163/105)+skoXC1*skoXC1*((1753/105)+skoXC1*skoXC1*((-169/28)+skoXC1*skoXC1*(25/56))))))<=0,skoXC1*skoXC1*((1/6)+skoXC1*skoXC1*((3/40)+skoXC1*skoXC1*(5/112)))>-1,skoXC1*(-1+skoXC1*skoXC1*((-1/6)+skoXC1*skoXC1*((-3/40)+skoXC1*skoXC1*(-5/112))))<=0]], Reals]]

% In QepcadB format:
(E skoXC1) [[(skoXC1 skoXC1 (1/6+(skoXC1 skoXC1 (3/40+(skoXC1 skoXC1 (5/112+(skoXC1 skoXC1 (35/1152+(skoXC1 skoXC1 (63/2816))))))))))<=-1]/\[[(skoXC1 (-1+(skoXC1 skoXC1 (1/3+(skoXC1 skoXC1 (3/20+(skoXC1 skoXC1 (5/56+(skoXC1 skoXC1 (35/576+(skoXC1 skoXC1 (63/1408))))))))))))<=0]/\[[(skoXC1 (-1+(skoXC1 skoXC1 (-1/6+(skoXC1 skoXC1 (-3/40))))))<=0]/\[[-1<(skoXC1 skoXC1 (1/6+(skoXC1 skoXC1 (3/40))))]/\[[(skoXC1 skoXC1 skoXC1 skoXC1 (32/15+(skoXC1 skoXC1 (-296/15+(skoXC1 skoXC1 (391/15+(skoXC1 skoXC1 (-146/15+(skoXC1 skoXC1 (3/4))))))))))<=0]/\[[(skoXC1 skoXC1 (1/3+(skoXC1 skoXC1 (3/20))))<=1]/\[[(skoXC1 skoXC1 skoXC1 skoXC1 (-17/120+(skoXC1 skoXC1 (3/80))))<=0]/\[[(skoXC1 skoXC1 skoXC1 skoXC1 (-13/60+(skoXC1 skoXC1 (-3/10))))<=0]/\[[(skoXC1 skoXC1 (-1/2+(skoXC1 skoXC1 (7/120+(skoXC1 skoXC1 (-3/40))))))<=0]/\[[(skoXC1 skoXC1 (-1/6+(skoXC1 skoXC1 (-3/40))))<=1]/\[[(skoXC1 (-1+(skoXC1 skoXC1 (1/3+(skoXC1 skoXC1 (3/20))))))<=0]/\[[0<(skoXC1 skoXC1)]/\[[(skoXC1 skoXC1 (80+(skoXC1 skoXC1 (-40+(skoXC1 skoXC1 (6+(skoXC1 skoXC1 (-1/8))))))))<=48]/\[[-48<(skoXC1 skoXC1 (-80+(skoXC1 skoXC1 (40+(skoXC1 skoXC1 (-6+(skoXC1 skoXC1 (1/8))))))))]/\[[(skoXC1 skoXC1 (24+(skoXC1 skoXC1 (-10+(skoXC1 skoXC1)))))<=16]/\[[(skoXC1 skoXC1 (1/2))<=3]/\[[-3<(skoXC1 skoXC1 (-1/2))]/\[[0<skoXC1]/\[[skoXC1<7/8]/\[[(skoXC1 (-1+(skoXC1 skoXC1 (1/3))))<=0]/\[[(skoXC1 skoXC1 (-1/6))<=1]/\[[(skoXC1 skoXC1 (-1/2+(skoXC1 skoXC1 (-1/6))))<=0]/\[[(skoXC1 skoXC1)<=2]/\[[(skoXC1 skoXC1 skoXC1 skoXC1 (-2/3))<=0]/\[[(skoXC1 (-1+(skoXC1 skoXC1 (-1/6))))<=0]/\[[(skoXC1 skoXC1 (1/3))<=1]/\[[(skoXC1 skoXC1 (256+(skoXC1 skoXC1 (-160+(skoXC1 skoXC1 (32+(skoXC1 skoXC1 (-1))))))))<=128]/\[[(skoXC1 skoXC1 skoXC1 skoXC1 (-80/3+(skoXC1 skoXC1 (128/3+(skoXC1 skoXC1 (-55/3+(skoXC1 skoXC1 (5/3))))))))<=0]/\[[(skoXC1 (-1+(skoXC1 skoXC1 (1/3+(skoXC1 skoXC1 (3/20+(skoXC1 skoXC1 (5/56))))))))<=0]/\[[(skoXC1 skoXC1 (-1/6+(skoXC1 skoXC1 (-3/40+(skoXC1 skoXC1 (-5/112))))))<=1]/\[[(skoXC1 skoXC1 (-1/2+(skoXC1 skoXC1 (7/120+(skoXC1 skoXC1 (33/560+(skoXC1 skoXC1 (-5/112))))))))<=0]/\[[(skoXC1 skoXC1 skoXC1 skoXC1 (-13/60+(skoXC1 skoXC1 (-9/280+(skoXC1 skoXC1 (-5/28))))))<=0]/\[[(skoXC1 skoXC1 skoXC1 skoXC1 (-17/120+(skoXC1 skoXC1 (-27/280+(skoXC1 skoXC1 (5/224))))))<=0]/\[[(skoXC1 skoXC1 (1/3+(skoXC1 skoXC1 (3/20+(skoXC1 skoXC1 (5/56))))))<=1]/\[[(skoXC1 skoXC1 skoXC1 skoXC1 (32/15+(skoXC1 skoXC1 (-272/105+(skoXC1 skoXC1 (-1163/105+(skoXC1 skoXC1 (1753/105+(skoXC1 skoXC1 (-169/28+(skoXC1 skoXC1 (25/56))))))))))))<=0]/\[[-1<(skoXC1 skoXC1 (1/6+(skoXC1 skoXC1 (3/40+(skoXC1 skoXC1 (5/112))))))]/\[(skoXC1 (-1+(skoXC1 skoXC1 (-1/6+(skoXC1 skoXC1 (-3/40+(skoXC1 skoXC1 (-5/112))))))))<=0]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]].

% In SMTLib2 format:
(declare-fun skoXC1 () Real) (assert (and (<= (* skoXC1 (* skoXC1 (+ (/ 1. 6.) (* skoXC1 (* skoXC1 (+ (/ 3. 40.) (* skoXC1 (* skoXC1 (+ (/ 5. 112.) (* skoXC1 (* skoXC1 (+ (/ 35. 1152.) (* skoXC1 (* skoXC1 (/ 63. 2816.))))))))))))))) (- 1.)) (and (<= (* skoXC1 (+ (- 1.) (* skoXC1 (* skoXC1 (+ (/ 1. 3.) (* skoXC1 (* skoXC1 (+ (/ 3. 20.) (* skoXC1 (* skoXC1 (+ (/ 5. 56.) (* skoXC1 (* skoXC1 (+ (/ 35. 576.) (* skoXC1 (* skoXC1 (/ 63. 1408.))))))))))))))))) 0.) (and (<= (* skoXC1 (+ (- 1.) (* skoXC1 (* skoXC1 (+ (/ (- 1.) 6.) (* skoXC1 (* skoXC1 (/ (- 3.) 40.)))))))) 0.) (and (> (* skoXC1 (* skoXC1 (+ (/ 1. 6.) (* skoXC1 (* skoXC1 (/ 3. 40.)))))) (- 1.)) (and (<= (* skoXC1 (* skoXC1 (* skoXC1 (* skoXC1 (+ (/ 32. 15.) (* skoXC1 (* skoXC1 (+ (/ (- 296.) 15.) (* skoXC1 (* skoXC1 (+ (/ 391. 15.) (* skoXC1 (* skoXC1 (+ (/ (- 146.) 15.) (* skoXC1 (* skoXC1 (/ 3. 4.))))))))))))))))) 0.) (and (<= (* skoXC1 (* skoXC1 (+ (/ 1. 3.) (* skoXC1 (* skoXC1 (/ 3. 20.)))))) 1.) (and (<= (* skoXC1 (* skoXC1 (* skoXC1 (* skoXC1 (+ (/ (- 17.) 120.) (* skoXC1 (* skoXC1 (/ 3. 80.)))))))) 0.) (and (<= (* skoXC1 (* skoXC1 (* skoXC1 (* skoXC1 (+ (/ (- 13.) 60.) (* skoXC1 (* skoXC1 (/ (- 3.) 10.)))))))) 0.) (and (<= (* skoXC1 (* skoXC1 (+ (/ (- 1.) 2.) (* skoXC1 (* skoXC1 (+ (/ 7. 120.) (* skoXC1 (* skoXC1 (/ (- 3.) 40.))))))))) 0.) (and (<= (* skoXC1 (* skoXC1 (+ (/ (- 1.) 6.) (* skoXC1 (* skoXC1 (/ (- 3.) 40.)))))) 1.) (and (<= (* skoXC1 (+ (- 1.) (* skoXC1 (* skoXC1 (+ (/ 1. 3.) (* skoXC1 (* skoXC1 (/ 3. 20.)))))))) 0.) (and (> (* skoXC1 skoXC1) 0.) (and (<= (* skoXC1 (* skoXC1 (+ 80. (* skoXC1 (* skoXC1 (+ (- 40.) (* skoXC1 (* skoXC1 (+ 6. (* skoXC1 (* skoXC1 (/ (- 1.) 8.)))))))))))) 48.) (and (> (* skoXC1 (* skoXC1 (+ (- 80.) (* skoXC1 (* skoXC1 (+ 40. (* skoXC1 (* skoXC1 (+ (- 6.) (* skoXC1 (* skoXC1 (/ 1. 8.)))))))))))) (- 48.)) (and (<= (* skoXC1 (* skoXC1 (+ 24. (* skoXC1 (* skoXC1 (+ (- 10.) (* skoXC1 skoXC1))))))) 16.) (and (<= (* skoXC1 (* skoXC1 (/ 1. 2.))) 3.) (and (> (* skoXC1 (* skoXC1 (/ (- 1.) 2.))) (- 3.)) (and (> skoXC1 0.) (and (> (/ 7. 8.) skoXC1) (and (<= (* skoXC1 (+ (- 1.) (* skoXC1 (* skoXC1 (/ 1. 3.))))) 0.) (and (<= (* skoXC1 (* skoXC1 (/ (- 1.) 6.))) 1.) (and (<= (* skoXC1 (* skoXC1 (+ (/ (- 1.) 2.) (* skoXC1 (* skoXC1 (/ (- 1.) 6.)))))) 0.) (and (<= (* skoXC1 skoXC1) 2.) (and (<= (* skoXC1 (* skoXC1 (* skoXC1 (* skoXC1 (/ (- 2.) 3.))))) 0.) (and (<= (* skoXC1 (+ (- 1.) (* skoXC1 (* skoXC1 (/ (- 1.) 6.))))) 0.) (and (<= (* skoXC1 (* skoXC1 (/ 1. 3.))) 1.) (and (<= (* skoXC1 (* skoXC1 (+ 256. (* skoXC1 (* skoXC1 (+ (- 160.) (* skoXC1 (* skoXC1 (+ 32. (* skoXC1 (* skoXC1 (- 1.)))))))))))) 128.) (and (<= (* skoXC1 (* skoXC1 (* skoXC1 (* skoXC1 (+ (/ (- 80.) 3.) (* skoXC1 (* skoXC1 (+ (/ 128. 3.) (* skoXC1 (* skoXC1 (+ (/ (- 55.) 3.) (* skoXC1 (* skoXC1 (/ 5. 3.)))))))))))))) 0.) (and (<= (* skoXC1 (+ (- 1.) (* skoXC1 (* skoXC1 (+ (/ 1. 3.) (* skoXC1 (* skoXC1 (+ (/ 3. 20.) (* skoXC1 (* skoXC1 (/ 5. 56.))))))))))) 0.) (and (<= (* skoXC1 (* skoXC1 (+ (/ (- 1.) 6.) (* skoXC1 (* skoXC1 (+ (/ (- 3.) 40.) (* skoXC1 (* skoXC1 (/ (- 5.) 112.))))))))) 1.) (and (<= (* skoXC1 (* skoXC1 (+ (/ (- 1.) 2.) (* skoXC1 (* skoXC1 (+ (/ 7. 120.) (* skoXC1 (* skoXC1 (+ (/ 33. 560.) (* skoXC1 (* skoXC1 (/ (- 5.) 112.)))))))))))) 0.) (and (<= (* skoXC1 (* skoXC1 (* skoXC1 (* skoXC1 (+ (/ (- 13.) 60.) (* skoXC1 (* skoXC1 (+ (/ (- 9.) 280.) (* skoXC1 (* skoXC1 (/ (- 5.) 28.))))))))))) 0.) (and (<= (* skoXC1 (* skoXC1 (* skoXC1 (* skoXC1 (+ (/ (- 17.) 120.) (* skoXC1 (* skoXC1 (+ (/ (- 27.) 280.) (* skoXC1 (* skoXC1 (/ 5. 224.))))))))))) 0.) (and (<= (* skoXC1 (* skoXC1 (+ (/ 1. 3.) (* skoXC1 (* skoXC1 (+ (/ 3. 20.) (* skoXC1 (* skoXC1 (/ 5. 56.))))))))) 1.) (and (<= (* skoXC1 (* skoXC1 (* skoXC1 (* skoXC1 (+ (/ 32. 15.) (* skoXC1 (* skoXC1 (+ (/ (- 272.) 105.) (* skoXC1 (* skoXC1 (+ (/ (- 1163.) 105.) (* skoXC1 (* skoXC1 (+ (/ 1753. 105.) (* skoXC1 (* skoXC1 (+ (/ (- 169.) 28.) (* skoXC1 (* skoXC1 (/ 25. 56.)))))))))))))))))))) 0.) (and (> (* skoXC1 (* skoXC1 (+ (/ 1. 6.) (* skoXC1 (* skoXC1 (+ (/ 3. 40.) (* skoXC1 (* skoXC1 (/ 5. 112.))))))))) (- 1.)) (<= (* skoXC1 (+ (- 1.) (* skoXC1 (* skoXC1 (+ (/ (- 1.) 6.) (* skoXC1 (* skoXC1 (+ (/ (- 3.) 40.) (* skoXC1 (* skoXC1 (/ (- 5.) 112.))))))))))) 0.))))))))))))))))))))))))))))))))))))))

% In GRF format:
(sequent " MetiTarski formula " (antecedent (<= (* skoXC1 (* skoXC1 (+ (/ 1. 6.) (* skoXC1 (* skoXC1 (+ (/ 3. 40.) (* skoXC1 (* skoXC1 (+ (/ 5. 112.) (* skoXC1 (* skoXC1 (+ (/ 35. 1152.) (* skoXC1 (* skoXC1 (/ 63. 2816.))))))))))))))) (- 1.)) (<= (* skoXC1 (+ (- 1.) (* skoXC1 (* skoXC1 (+ (/ 1. 3.) (* skoXC1 (* skoXC1 (+ (/ 3. 20.) (* skoXC1 (* skoXC1 (+ (/ 5. 56.) (* skoXC1 (* skoXC1 (+ (/ 35. 576.) (* skoXC1 (* skoXC1 (/ 63. 1408.))))))))))))))))) 0.) (<= (* skoXC1 (+ (- 1.) (* skoXC1 (* skoXC1 (+ (/ (- 1.) 6.) (* skoXC1 (* skoXC1 (/ (- 3.) 40.)))))))) 0.) (> (* skoXC1 (* skoXC1 (+ (/ 1. 6.) (* skoXC1 (* skoXC1 (/ 3. 40.)))))) (- 1.)) (<= (* skoXC1 (* skoXC1 (* skoXC1 (* skoXC1 (+ (/ 32. 15.) (* skoXC1 (* skoXC1 (+ (/ (- 296.) 15.) (* skoXC1 (* skoXC1 (+ (/ 391. 15.) (* skoXC1 (* skoXC1 (+ (/ (- 146.) 15.) (* skoXC1 (* skoXC1 (/ 3. 4.))))))))))))))))) 0.) (<= (* skoXC1 (* skoXC1 (+ (/ 1. 3.) (* skoXC1 (* skoXC1 (/ 3. 20.)))))) 1.) (<= (* skoXC1 (* skoXC1 (* skoXC1 (* skoXC1 (+ (/ (- 17.) 120.) (* skoXC1 (* skoXC1 (/ 3. 80.)))))))) 0.) (<= (* skoXC1 (* skoXC1 (* skoXC1 (* skoXC1 (+ (/ (- 13.) 60.) (* skoXC1 (* skoXC1 (/ (- 3.) 10.)))))))) 0.) (<= (* skoXC1 (* skoXC1 (+ (/ (- 1.) 2.) (* skoXC1 (* skoXC1 (+ (/ 7. 120.) (* skoXC1 (* skoXC1 (/ (- 3.) 40.))))))))) 0.) (<= (* skoXC1 (* skoXC1 (+ (/ (- 1.) 6.) (* skoXC1 (* skoXC1 (/ (- 3.) 40.)))))) 1.) (<= (* skoXC1 (+ (- 1.) (* skoXC1 (* skoXC1 (+ (/ 1. 3.) (* skoXC1 (* skoXC1 (/ 3. 20.)))))))) 0.) (> (* skoXC1 skoXC1) 0.) (<= (* skoXC1 (* skoXC1 (+ 80. (* skoXC1 (* skoXC1 (+ (- 40.) (* skoXC1 (* skoXC1 (+ 6. (* skoXC1 (* skoXC1 (/ (- 1.) 8.)))))))))))) 48.) (> (* skoXC1 (* skoXC1 (+ (- 80.) (* skoXC1 (* skoXC1 (+ 40. (* skoXC1 (* skoXC1 (+ (- 6.) (* skoXC1 (* skoXC1 (/ 1. 8.)))))))))))) (- 48.)) (<= (* skoXC1 (* skoXC1 (+ 24. (* skoXC1 (* skoXC1 (+ (- 10.) (* skoXC1 skoXC1))))))) 16.) (<= (* skoXC1 (* skoXC1 (/ 1. 2.))) 3.) (> (* skoXC1 (* skoXC1 (/ (- 1.) 2.))) (- 3.)) (> skoXC1 0.) (> (/ 7. 8.) skoXC1) (<= (* skoXC1 (+ (- 1.) (* skoXC1 (* skoXC1 (/ 1. 3.))))) 0.) (<= (* skoXC1 (* skoXC1 (/ (- 1.) 6.))) 1.) (<= (* skoXC1 (* skoXC1 (+ (/ (- 1.) 2.) (* skoXC1 (* skoXC1 (/ (- 1.) 6.)))))) 0.) (<= (* skoXC1 skoXC1) 2.) (<= (* skoXC1 (* skoXC1 (* skoXC1 (* skoXC1 (/ (- 2.) 3.))))) 0.) (<= (* skoXC1 (+ (- 1.) (* skoXC1 (* skoXC1 (/ (- 1.) 6.))))) 0.) (<= (* skoXC1 (* skoXC1 (/ 1. 3.))) 1.) (<= (* skoXC1 (* skoXC1 (+ 256. (* skoXC1 (* skoXC1 (+ (- 160.) (* skoXC1 (* skoXC1 (+ 32. (* skoXC1 (* skoXC1 (- 1.)))))))))))) 128.) (<= (* skoXC1 (* skoXC1 (* skoXC1 (* skoXC1 (+ (/ (- 80.) 3.) (* skoXC1 (* skoXC1 (+ (/ 128. 3.) (* skoXC1 (* skoXC1 (+ (/ (- 55.) 3.) (* skoXC1 (* skoXC1 (/ 5. 3.)))))))))))))) 0.) (<= (* skoXC1 (+ (- 1.) (* skoXC1 (* skoXC1 (+ (/ 1. 3.) (* skoXC1 (* skoXC1 (+ (/ 3. 20.) (* skoXC1 (* skoXC1 (/ 5. 56.))))))))))) 0.) (<= (* skoXC1 (* skoXC1 (+ (/ (- 1.) 6.) (* skoXC1 (* skoXC1 (+ (/ (- 3.) 40.) (* skoXC1 (* skoXC1 (/ (- 5.) 112.))))))))) 1.) (<= (* skoXC1 (* skoXC1 (+ (/ (- 1.) 2.) (* skoXC1 (* skoXC1 (+ (/ 7. 120.) (* skoXC1 (* skoXC1 (+ (/ 33. 560.) (* skoXC1 (* skoXC1 (/ (- 5.) 112.)))))))))))) 0.) (<= (* skoXC1 (* skoXC1 (* skoXC1 (* skoXC1 (+ (/ (- 13.) 60.) (* skoXC1 (* skoXC1 (+ (/ (- 9.) 280.) (* skoXC1 (* skoXC1 (/ (- 5.) 28.))))))))))) 0.) (<= (* skoXC1 (* skoXC1 (* skoXC1 (* skoXC1 (+ (/ (- 17.) 120.) (* skoXC1 (* skoXC1 (+ (/ (- 27.) 280.) (* skoXC1 (* skoXC1 (/ 5. 224.))))))))))) 0.) (<= (* skoXC1 (* skoXC1 (+ (/ 1. 3.) (* skoXC1 (* skoXC1 (+ (/ 3. 20.) (* skoXC1 (* skoXC1 (/ 5. 56.))))))))) 1.) (<= (* skoXC1 (* skoXC1 (* skoXC1 (* skoXC1 (+ (/ 32. 15.) (* skoXC1 (* skoXC1 (+ (/ (- 272.) 105.) (* skoXC1 (* skoXC1 (+ (/ (- 1163.) 105.) (* skoXC1 (* skoXC1 (+ (/ 1753. 105.) (* skoXC1 (* skoXC1 (+ (/ (- 169.) 28.) (* skoXC1 (* skoXC1 (/ 25. 56.)))))))))))))))))))) 0.) (> (* skoXC1 (* skoXC1 (+ (/ 1. 6.) (* skoXC1 (* skoXC1 (+ (/ 3. 40.) (* skoXC1 (* skoXC1 (/ 5. 112.))))))))) (- 1.))) (succedent (> (* skoXC1 (+ (- 1.) (* skoXC1 (* skoXC1 (+ (/ (- 1.) 6.) (* skoXC1 (* skoXC1 (+ (/ (- 3.) 40.) (* skoXC1 (* skoXC1 (/ (- 5.) 112.))))))))))) 0.)))
-----[end problem]-----

-----[begin problem]-----
% In Mathematica format:
Timing[Resolve[Exists[{skoXC1}, And[skoXC1*skoXC1>0,skoXC1*(-1+skoXC1*skoXC1*((1/3)+skoXC1*skoXC1*((3/20)+skoXC1*skoXC1*((5/56)+skoXC1*skoXC1*((35/576)+skoXC1*skoXC1*(63/1408))))))<=0,skoXC1*(-1+skoXC1*skoXC1*((-1/6)+skoXC1*skoXC1*(-3/40)))<=0,skoXC1*skoXC1*((1/6)+skoXC1*skoXC1*(3/40))>-1,skoXC1*skoXC1*skoXC1*skoXC1*((32/15)+skoXC1*skoXC1*((-296/15)+skoXC1*skoXC1*((391/15)+skoXC1*skoXC1*((-146/15)+skoXC1*skoXC1*(3/4)))))<=0,skoXC1*skoXC1*((1/3)+skoXC1*skoXC1*(3/20))<=1,skoXC1*skoXC1*skoXC1*skoXC1*((-17/120)+skoXC1*skoXC1*(3/80))<=0,skoXC1*skoXC1*skoXC1*skoXC1*((-13/60)+skoXC1*skoXC1*(-3/10))<=0,skoXC1*skoXC1*((-1/2)+skoXC1*skoXC1*((7/120)+skoXC1*skoXC1*(-3/40)))<=0,skoXC1*skoXC1*((-1/6)+skoXC1*skoXC1*(-3/40))<=1,skoXC1*(-1+skoXC1*skoXC1*((1/3)+skoXC1*skoXC1*(3/20)))<=0,skoXC1*skoXC1>0,skoXC1*skoXC1*(80+skoXC1*skoXC1*(-40+skoXC1*skoXC1*(6+skoXC1*skoXC1*(-1/8))))<=48,skoXC1*skoXC1*(-80+skoXC1*skoXC1*(40+skoXC1*skoXC1*(-6+skoXC1*skoXC1*(1/8))))>-48,skoXC1*skoXC1*(24+skoXC1*skoXC1*(-10+skoXC1*skoXC1))<=16,skoXC1*skoXC1*(1/2)<=3,skoXC1*skoXC1*(-1/2)>-3,skoXC1>0,(7/8)>skoXC1,skoXC1*(-1+skoXC1*skoXC1*(1/3))<=0,skoXC1*skoXC1*(-1/6)<=1,skoXC1*skoXC1*((-1/2)+skoXC1*skoXC1*(-1/6))<=0,skoXC1*skoXC1<=2,skoXC1*skoXC1*skoXC1*skoXC1*(-2/3)<=0,skoXC1*(-1+skoXC1*skoXC1*(-1/6))<=0,skoXC1*skoXC1*(1/3)<=1,skoXC1*skoXC1*(256+skoXC1*skoXC1*(-160+skoXC1*skoXC1*(32+skoXC1*skoXC1*-1)))<=128,skoXC1*skoXC1*skoXC1*skoXC1*((-80/3)+skoXC1*skoXC1*((128/3)+skoXC1*skoXC1*((-55/3)+skoXC1*skoXC1*(5/3))))<=0,skoXC1*(-1+skoXC1*skoXC1*((1/3)+skoXC1*skoXC1*((3/20)+skoXC1*skoXC1*(5/56))))<=0,skoXC1*skoXC1*((-1/6)+skoXC1*skoXC1*((-3/40)+skoXC1*skoXC1*(-5/112)))<=1,skoXC1*skoXC1*((-1/2)+skoXC1*skoXC1*((7/120)+skoXC1*skoXC1*((33/560)+skoXC1*skoXC1*(-5/112))))<=0,skoXC1*skoXC1*skoXC1*skoXC1*((-13/60)+skoXC1*skoXC1*((-9/280)+skoXC1*skoXC1*(-5/28)))<=0,skoXC1*skoXC1*skoXC1*skoXC1*((-17/120)+skoXC1*skoXC1*((-27/280)+skoXC1*skoXC1*(5/224)))<=0,skoXC1*skoXC1*((1/3)+skoXC1*skoXC1*((3/20)+skoXC1*skoXC1*(5/56)))<=1,skoXC1*skoXC1*skoXC1*skoXC1*((32/15)+skoXC1*skoXC1*((-272/105)+skoXC1*skoXC1*((-1163/105)+skoXC1*skoXC1*((1753/105)+skoXC1*skoXC1*((-169/28)+skoXC1*skoXC1*(25/56))))))<=0,skoXC1*skoXC1*((1/6)+skoXC1*skoXC1*((3/40)+skoXC1*skoXC1*(5/112)))>-1,skoXC1*(-1+skoXC1*skoXC1*((-1/6)+skoXC1*skoXC1*((-3/40)+skoXC1*skoXC1*(-5/112))))<=0]], Reals]]

% In QepcadB format:
(E skoXC1) [[0<(skoXC1 skoXC1)]/\[[(skoXC1 (-1+(skoXC1 skoXC1 (1/3+(skoXC1 skoXC1 (3/20+(skoXC1 skoXC1 (5/56+(skoXC1 skoXC1 (35/576+(skoXC1 skoXC1 (63/1408))))))))))))<=0]/\[[(skoXC1 (-1+(skoXC1 skoXC1 (-1/6+(skoXC1 skoXC1 (-3/40))))))<=0]/\[[-1<(skoXC1 skoXC1 (1/6+(skoXC1 skoXC1 (3/40))))]/\[[(skoXC1 skoXC1 skoXC1 skoXC1 (32/15+(skoXC1 skoXC1 (-296/15+(skoXC1 skoXC1 (391/15+(skoXC1 skoXC1 (-146/15+(skoXC1 skoXC1 (3/4))))))))))<=0]/\[[(skoXC1 skoXC1 (1/3+(skoXC1 skoXC1 (3/20))))<=1]/\[[(skoXC1 skoXC1 skoXC1 skoXC1 (-17/120+(skoXC1 skoXC1 (3/80))))<=0]/\[[(skoXC1 skoXC1 skoXC1 skoXC1 (-13/60+(skoXC1 skoXC1 (-3/10))))<=0]/\[[(skoXC1 skoXC1 (-1/2+(skoXC1 skoXC1 (7/120+(skoXC1 skoXC1 (-3/40))))))<=0]/\[[(skoXC1 skoXC1 (-1/6+(skoXC1 skoXC1 (-3/40))))<=1]/\[[(skoXC1 (-1+(skoXC1 skoXC1 (1/3+(skoXC1 skoXC1 (3/20))))))<=0]/\[[0<(skoXC1 skoXC1)]/\[[(skoXC1 skoXC1 (80+(skoXC1 skoXC1 (-40+(skoXC1 skoXC1 (6+(skoXC1 skoXC1 (-1/8))))))))<=48]/\[[-48<(skoXC1 skoXC1 (-80+(skoXC1 skoXC1 (40+(skoXC1 skoXC1 (-6+(skoXC1 skoXC1 (1/8))))))))]/\[[(skoXC1 skoXC1 (24+(skoXC1 skoXC1 (-10+(skoXC1 skoXC1)))))<=16]/\[[(skoXC1 skoXC1 (1/2))<=3]/\[[-3<(skoXC1 skoXC1 (-1/2))]/\[[0<skoXC1]/\[[skoXC1<7/8]/\[[(skoXC1 (-1+(skoXC1 skoXC1 (1/3))))<=0]/\[[(skoXC1 skoXC1 (-1/6))<=1]/\[[(skoXC1 skoXC1 (-1/2+(skoXC1 skoXC1 (-1/6))))<=0]/\[[(skoXC1 skoXC1)<=2]/\[[(skoXC1 skoXC1 skoXC1 skoXC1 (-2/3))<=0]/\[[(skoXC1 (-1+(skoXC1 skoXC1 (-1/6))))<=0]/\[[(skoXC1 skoXC1 (1/3))<=1]/\[[(skoXC1 skoXC1 (256+(skoXC1 skoXC1 (-160+(skoXC1 skoXC1 (32+(skoXC1 skoXC1 (-1))))))))<=128]/\[[(skoXC1 skoXC1 skoXC1 skoXC1 (-80/3+(skoXC1 skoXC1 (128/3+(skoXC1 skoXC1 (-55/3+(skoXC1 skoXC1 (5/3))))))))<=0]/\[[(skoXC1 (-1+(skoXC1 skoXC1 (1/3+(skoXC1 skoXC1 (3/20+(skoXC1 skoXC1 (5/56))))))))<=0]/\[[(skoXC1 skoXC1 (-1/6+(skoXC1 skoXC1 (-3/40+(skoXC1 skoXC1 (-5/112))))))<=1]/\[[(skoXC1 skoXC1 (-1/2+(skoXC1 skoXC1 (7/120+(skoXC1 skoXC1 (33/560+(skoXC1 skoXC1 (-5/112))))))))<=0]/\[[(skoXC1 skoXC1 skoXC1 skoXC1 (-13/60+(skoXC1 skoXC1 (-9/280+(skoXC1 skoXC1 (-5/28))))))<=0]/\[[(skoXC1 skoXC1 skoXC1 skoXC1 (-17/120+(skoXC1 skoXC1 (-27/280+(skoXC1 skoXC1 (5/224))))))<=0]/\[[(skoXC1 skoXC1 (1/3+(skoXC1 skoXC1 (3/20+(skoXC1 skoXC1 (5/56))))))<=1]/\[[(skoXC1 skoXC1 skoXC1 skoXC1 (32/15+(skoXC1 skoXC1 (-272/105+(skoXC1 skoXC1 (-1163/105+(skoXC1 skoXC1 (1753/105+(skoXC1 skoXC1 (-169/28+(skoXC1 skoXC1 (25/56))))))))))))<=0]/\[[-1<(skoXC1 skoXC1 (1/6+(skoXC1 skoXC1 (3/40+(skoXC1 skoXC1 (5/112))))))]/\[(skoXC1 (-1+(skoXC1 skoXC1 (-1/6+(skoXC1 skoXC1 (-3/40+(skoXC1 skoXC1 (-5/112))))))))<=0]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]].

% In SMTLib2 format:
(declare-fun skoXC1 () Real) (assert (and (> (* skoXC1 skoXC1) 0.) (and (<= (* skoXC1 (+ (- 1.) (* skoXC1 (* skoXC1 (+ (/ 1. 3.) (* skoXC1 (* skoXC1 (+ (/ 3. 20.) (* skoXC1 (* skoXC1 (+ (/ 5. 56.) (* skoXC1 (* skoXC1 (+ (/ 35. 576.) (* skoXC1 (* skoXC1 (/ 63. 1408.))))))))))))))))) 0.) (and (<= (* skoXC1 (+ (- 1.) (* skoXC1 (* skoXC1 (+ (/ (- 1.) 6.) (* skoXC1 (* skoXC1 (/ (- 3.) 40.)))))))) 0.) (and (> (* skoXC1 (* skoXC1 (+ (/ 1. 6.) (* skoXC1 (* skoXC1 (/ 3. 40.)))))) (- 1.)) (and (<= (* skoXC1 (* skoXC1 (* skoXC1 (* skoXC1 (+ (/ 32. 15.) (* skoXC1 (* skoXC1 (+ (/ (- 296.) 15.) (* skoXC1 (* skoXC1 (+ (/ 391. 15.) (* skoXC1 (* skoXC1 (+ (/ (- 146.) 15.) (* skoXC1 (* skoXC1 (/ 3. 4.))))))))))))))))) 0.) (and (<= (* skoXC1 (* skoXC1 (+ (/ 1. 3.) (* skoXC1 (* skoXC1 (/ 3. 20.)))))) 1.) (and (<= (* skoXC1 (* skoXC1 (* skoXC1 (* skoXC1 (+ (/ (- 17.) 120.) (* skoXC1 (* skoXC1 (/ 3. 80.)))))))) 0.) (and (<= (* skoXC1 (* skoXC1 (* skoXC1 (* skoXC1 (+ (/ (- 13.) 60.) (* skoXC1 (* skoXC1 (/ (- 3.) 10.)))))))) 0.) (and (<= (* skoXC1 (* skoXC1 (+ (/ (- 1.) 2.) (* skoXC1 (* skoXC1 (+ (/ 7. 120.) (* skoXC1 (* skoXC1 (/ (- 3.) 40.))))))))) 0.) (and (<= (* skoXC1 (* skoXC1 (+ (/ (- 1.) 6.) (* skoXC1 (* skoXC1 (/ (- 3.) 40.)))))) 1.) (and (<= (* skoXC1 (+ (- 1.) (* skoXC1 (* skoXC1 (+ (/ 1. 3.) (* skoXC1 (* skoXC1 (/ 3. 20.)))))))) 0.) (and (> (* skoXC1 skoXC1) 0.) (and (<= (* skoXC1 (* skoXC1 (+ 80. (* skoXC1 (* skoXC1 (+ (- 40.) (* skoXC1 (* skoXC1 (+ 6. (* skoXC1 (* skoXC1 (/ (- 1.) 8.)))))))))))) 48.) (and (> (* skoXC1 (* skoXC1 (+ (- 80.) (* skoXC1 (* skoXC1 (+ 40. (* skoXC1 (* skoXC1 (+ (- 6.) (* skoXC1 (* skoXC1 (/ 1. 8.)))))))))))) (- 48.)) (and (<= (* skoXC1 (* skoXC1 (+ 24. (* skoXC1 (* skoXC1 (+ (- 10.) (* skoXC1 skoXC1))))))) 16.) (and (<= (* skoXC1 (* skoXC1 (/ 1. 2.))) 3.) (and (> (* skoXC1 (* skoXC1 (/ (- 1.) 2.))) (- 3.)) (and (> skoXC1 0.) (and (> (/ 7. 8.) skoXC1) (and (<= (* skoXC1 (+ (- 1.) (* skoXC1 (* skoXC1 (/ 1. 3.))))) 0.) (and (<= (* skoXC1 (* skoXC1 (/ (- 1.) 6.))) 1.) (and (<= (* skoXC1 (* skoXC1 (+ (/ (- 1.) 2.) (* skoXC1 (* skoXC1 (/ (- 1.) 6.)))))) 0.) (and (<= (* skoXC1 skoXC1) 2.) (and (<= (* skoXC1 (* skoXC1 (* skoXC1 (* skoXC1 (/ (- 2.) 3.))))) 0.) (and (<= (* skoXC1 (+ (- 1.) (* skoXC1 (* skoXC1 (/ (- 1.) 6.))))) 0.) (and (<= (* skoXC1 (* skoXC1 (/ 1. 3.))) 1.) (and (<= (* skoXC1 (* skoXC1 (+ 256. (* skoXC1 (* skoXC1 (+ (- 160.) (* skoXC1 (* skoXC1 (+ 32. (* skoXC1 (* skoXC1 (- 1.)))))))))))) 128.) (and (<= (* skoXC1 (* skoXC1 (* skoXC1 (* skoXC1 (+ (/ (- 80.) 3.) (* skoXC1 (* skoXC1 (+ (/ 128. 3.) (* skoXC1 (* skoXC1 (+ (/ (- 55.) 3.) (* skoXC1 (* skoXC1 (/ 5. 3.)))))))))))))) 0.) (and (<= (* skoXC1 (+ (- 1.) (* skoXC1 (* skoXC1 (+ (/ 1. 3.) (* skoXC1 (* skoXC1 (+ (/ 3. 20.) (* skoXC1 (* skoXC1 (/ 5. 56.))))))))))) 0.) (and (<= (* skoXC1 (* skoXC1 (+ (/ (- 1.) 6.) (* skoXC1 (* skoXC1 (+ (/ (- 3.) 40.) (* skoXC1 (* skoXC1 (/ (- 5.) 112.))))))))) 1.) (and (<= (* skoXC1 (* skoXC1 (+ (/ (- 1.) 2.) (* skoXC1 (* skoXC1 (+ (/ 7. 120.) (* skoXC1 (* skoXC1 (+ (/ 33. 560.) (* skoXC1 (* skoXC1 (/ (- 5.) 112.)))))))))))) 0.) (and (<= (* skoXC1 (* skoXC1 (* skoXC1 (* skoXC1 (+ (/ (- 13.) 60.) (* skoXC1 (* skoXC1 (+ (/ (- 9.) 280.) (* skoXC1 (* skoXC1 (/ (- 5.) 28.))))))))))) 0.) (and (<= (* skoXC1 (* skoXC1 (* skoXC1 (* skoXC1 (+ (/ (- 17.) 120.) (* skoXC1 (* skoXC1 (+ (/ (- 27.) 280.) (* skoXC1 (* skoXC1 (/ 5. 224.))))))))))) 0.) (and (<= (* skoXC1 (* skoXC1 (+ (/ 1. 3.) (* skoXC1 (* skoXC1 (+ (/ 3. 20.) (* skoXC1 (* skoXC1 (/ 5. 56.))))))))) 1.) (and (<= (* skoXC1 (* skoXC1 (* skoXC1 (* skoXC1 (+ (/ 32. 15.) (* skoXC1 (* skoXC1 (+ (/ (- 272.) 105.) (* skoXC1 (* skoXC1 (+ (/ (- 1163.) 105.) (* skoXC1 (* skoXC1 (+ (/ 1753. 105.) (* skoXC1 (* skoXC1 (+ (/ (- 169.) 28.) (* skoXC1 (* skoXC1 (/ 25. 56.)))))))))))))))))))) 0.) (and (> (* skoXC1 (* skoXC1 (+ (/ 1. 6.) (* skoXC1 (* skoXC1 (+ (/ 3. 40.) (* skoXC1 (* skoXC1 (/ 5. 112.))))))))) (- 1.)) (<= (* skoXC1 (+ (- 1.) (* skoXC1 (* skoXC1 (+ (/ (- 1.) 6.) (* skoXC1 (* skoXC1 (+ (/ (- 3.) 40.) (* skoXC1 (* skoXC1 (/ (- 5.) 112.))))))))))) 0.))))))))))))))))))))))))))))))))))))))

% In GRF format:
(sequent " MetiTarski formula " (antecedent (> (* skoXC1 skoXC1) 0.) (<= (* skoXC1 (+ (- 1.) (* skoXC1 (* skoXC1 (+ (/ 1. 3.) (* skoXC1 (* skoXC1 (+ (/ 3. 20.) (* skoXC1 (* skoXC1 (+ (/ 5. 56.) (* skoXC1 (* skoXC1 (+ (/ 35. 576.) (* skoXC1 (* skoXC1 (/ 63. 1408.))))))))))))))))) 0.) (<= (* skoXC1 (+ (- 1.) (* skoXC1 (* skoXC1 (+ (/ (- 1.) 6.) (* skoXC1 (* skoXC1 (/ (- 3.) 40.)))))))) 0.) (> (* skoXC1 (* skoXC1 (+ (/ 1. 6.) (* skoXC1 (* skoXC1 (/ 3. 40.)))))) (- 1.)) (<= (* skoXC1 (* skoXC1 (* skoXC1 (* skoXC1 (+ (/ 32. 15.) (* skoXC1 (* skoXC1 (+ (/ (- 296.) 15.) (* skoXC1 (* skoXC1 (+ (/ 391. 15.) (* skoXC1 (* skoXC1 (+ (/ (- 146.) 15.) (* skoXC1 (* skoXC1 (/ 3. 4.))))))))))))))))) 0.) (<= (* skoXC1 (* skoXC1 (+ (/ 1. 3.) (* skoXC1 (* skoXC1 (/ 3. 20.)))))) 1.) (<= (* skoXC1 (* skoXC1 (* skoXC1 (* skoXC1 (+ (/ (- 17.) 120.) (* skoXC1 (* skoXC1 (/ 3. 80.)))))))) 0.) (<= (* skoXC1 (* skoXC1 (* skoXC1 (* skoXC1 (+ (/ (- 13.) 60.) (* skoXC1 (* skoXC1 (/ (- 3.) 10.)))))))) 0.) (<= (* skoXC1 (* skoXC1 (+ (/ (- 1.) 2.) (* skoXC1 (* skoXC1 (+ (/ 7. 120.) (* skoXC1 (* skoXC1 (/ (- 3.) 40.))))))))) 0.) (<= (* skoXC1 (* skoXC1 (+ (/ (- 1.) 6.) (* skoXC1 (* skoXC1 (/ (- 3.) 40.)))))) 1.) (<= (* skoXC1 (+ (- 1.) (* skoXC1 (* skoXC1 (+ (/ 1. 3.) (* skoXC1 (* skoXC1 (/ 3. 20.)))))))) 0.) (> (* skoXC1 skoXC1) 0.) (<= (* skoXC1 (* skoXC1 (+ 80. (* skoXC1 (* skoXC1 (+ (- 40.) (* skoXC1 (* skoXC1 (+ 6. (* skoXC1 (* skoXC1 (/ (- 1.) 8.)))))))))))) 48.) (> (* skoXC1 (* skoXC1 (+ (- 80.) (* skoXC1 (* skoXC1 (+ 40. (* skoXC1 (* skoXC1 (+ (- 6.) (* skoXC1 (* skoXC1 (/ 1. 8.)))))))))))) (- 48.)) (<= (* skoXC1 (* skoXC1 (+ 24. (* skoXC1 (* skoXC1 (+ (- 10.) (* skoXC1 skoXC1))))))) 16.) (<= (* skoXC1 (* skoXC1 (/ 1. 2.))) 3.) (> (* skoXC1 (* skoXC1 (/ (- 1.) 2.))) (- 3.)) (> skoXC1 0.) (> (/ 7. 8.) skoXC1) (<= (* skoXC1 (+ (- 1.) (* skoXC1 (* skoXC1 (/ 1. 3.))))) 0.) (<= (* skoXC1 (* skoXC1 (/ (- 1.) 6.))) 1.) (<= (* skoXC1 (* skoXC1 (+ (/ (- 1.) 2.) (* skoXC1 (* skoXC1 (/ (- 1.) 6.)))))) 0.) (<= (* skoXC1 skoXC1) 2.) (<= (* skoXC1 (* skoXC1 (* skoXC1 (* skoXC1 (/ (- 2.) 3.))))) 0.) (<= (* skoXC1 (+ (- 1.) (* skoXC1 (* skoXC1 (/ (- 1.) 6.))))) 0.) (<= (* skoXC1 (* skoXC1 (/ 1. 3.))) 1.) (<= (* skoXC1 (* skoXC1 (+ 256. (* skoXC1 (* skoXC1 (+ (- 160.) (* skoXC1 (* skoXC1 (+ 32. (* skoXC1 (* skoXC1 (- 1.)))))))))))) 128.) (<= (* skoXC1 (* skoXC1 (* skoXC1 (* skoXC1 (+ (/ (- 80.) 3.) (* skoXC1 (* skoXC1 (+ (/ 128. 3.) (* skoXC1 (* skoXC1 (+ (/ (- 55.) 3.) (* skoXC1 (* skoXC1 (/ 5. 3.)))))))))))))) 0.) (<= (* skoXC1 (+ (- 1.) (* skoXC1 (* skoXC1 (+ (/ 1. 3.) (* skoXC1 (* skoXC1 (+ (/ 3. 20.) (* skoXC1 (* skoXC1 (/ 5. 56.))))))))))) 0.) (<= (* skoXC1 (* skoXC1 (+ (/ (- 1.) 6.) (* skoXC1 (* skoXC1 (+ (/ (- 3.) 40.) (* skoXC1 (* skoXC1 (/ (- 5.) 112.))))))))) 1.) (<= (* skoXC1 (* skoXC1 (+ (/ (- 1.) 2.) (* skoXC1 (* skoXC1 (+ (/ 7. 120.) (* skoXC1 (* skoXC1 (+ (/ 33. 560.) (* skoXC1 (* skoXC1 (/ (- 5.) 112.)))))))))))) 0.) (<= (* skoXC1 (* skoXC1 (* skoXC1 (* skoXC1 (+ (/ (- 13.) 60.) (* skoXC1 (* skoXC1 (+ (/ (- 9.) 280.) (* skoXC1 (* skoXC1 (/ (- 5.) 28.))))))))))) 0.) (<= (* skoXC1 (* skoXC1 (* skoXC1 (* skoXC1 (+ (/ (- 17.) 120.) (* skoXC1 (* skoXC1 (+ (/ (- 27.) 280.) (* skoXC1 (* skoXC1 (/ 5. 224.))))))))))) 0.) (<= (* skoXC1 (* skoXC1 (+ (/ 1. 3.) (* skoXC1 (* skoXC1 (+ (/ 3. 20.) (* skoXC1 (* skoXC1 (/ 5. 56.))))))))) 1.) (<= (* skoXC1 (* skoXC1 (* skoXC1 (* skoXC1 (+ (/ 32. 15.) (* skoXC1 (* skoXC1 (+ (/ (- 272.) 105.) (* skoXC1 (* skoXC1 (+ (/ (- 1163.) 105.) (* skoXC1 (* skoXC1 (+ (/ 1753. 105.) (* skoXC1 (* skoXC1 (+ (/ (- 169.) 28.) (* skoXC1 (* skoXC1 (/ 25. 56.)))))))))))))))))))) 0.) (> (* skoXC1 (* skoXC1 (+ (/ 1. 6.) (* skoXC1 (* skoXC1 (+ (/ 3. 40.) (* skoXC1 (* skoXC1 (/ 5. 112.))))))))) (- 1.))) (succedent (> (* skoXC1 (+ (- 1.) (* skoXC1 (* skoXC1 (+ (/ (- 1.) 6.) (* skoXC1 (* skoXC1 (+ (/ (- 3.) 40.) (* skoXC1 (* skoXC1 (/ (- 5.) 112.))))))))))) 0.)))
-----[end problem]-----

-----[begin problem]-----
% In Mathematica format:
Timing[Resolve[Exists[{skoXC1}, And[skoXC1*skoXC1*((-1/2)+skoXC1*skoXC1*((7/120)+skoXC1*skoXC1*((33/560)+skoXC1*skoXC1*((125/2688)+skoXC1*skoXC1*((931/25344)+skoXC1*skoXC1*(-63/2816))))))<=0,skoXC1*skoXC1*((1/6)+skoXC1*skoXC1*((3/40)+skoXC1*skoXC1*((5/112)+skoXC1*skoXC1*((35/1152)+skoXC1*skoXC1*(63/2816)))))>-1,skoXC1*(-1+skoXC1*skoXC1*((1/3)+skoXC1*skoXC1*((3/20)+skoXC1*skoXC1*((5/56)+skoXC1*skoXC1*((35/576)+skoXC1*skoXC1*(63/1408))))))<=0,skoXC1*(-1+skoXC1*skoXC1*((-1/6)+skoXC1*skoXC1*(-3/40)))<=0,skoXC1*skoXC1*((1/6)+skoXC1*skoXC1*(3/40))>-1,skoXC1*skoXC1*skoXC1*skoXC1*((32/15)+skoXC1*skoXC1*((-296/15)+skoXC1*skoXC1*((391/15)+skoXC1*skoXC1*((-146/15)+skoXC1*skoXC1*(3/4)))))<=0,skoXC1*skoXC1*((1/3)+skoXC1*skoXC1*(3/20))<=1,skoXC1*skoXC1*skoXC1*skoXC1*((-17/120)+skoXC1*skoXC1*(3/80))<=0,skoXC1*skoXC1*skoXC1*skoXC1*((-13/60)+skoXC1*skoXC1*(-3/10))<=0,skoXC1*skoXC1*((-1/2)+skoXC1*skoXC1*((7/120)+skoXC1*skoXC1*(-3/40)))<=0,skoXC1*skoXC1*((-1/6)+skoXC1*skoXC1*(-3/40))<=1,skoXC1*(-1+skoXC1*skoXC1*((1/3)+skoXC1*skoXC1*(3/20)))<=0,skoXC1*skoXC1>0,skoXC1*skoXC1*(80+skoXC1*skoXC1*(-40+skoXC1*skoXC1*(6+skoXC1*skoXC1*(-1/8))))<=48,skoXC1*skoXC1*(-80+skoXC1*skoXC1*(40+skoXC1*skoXC1*(-6+skoXC1*skoXC1*(1/8))))>-48,skoXC1*skoXC1*(24+skoXC1*skoXC1*(-10+skoXC1*skoXC1))<=16,skoXC1*skoXC1*(1/2)<=3,skoXC1*skoXC1*(-1/2)>-3,skoXC1>0,(7/8)>skoXC1,skoXC1*(-1+skoXC1*skoXC1*(1/3))<=0,skoXC1*skoXC1*(-1/6)<=1,skoXC1*skoXC1*((-1/2)+skoXC1*skoXC1*(-1/6))<=0,skoXC1*skoXC1<=2,skoXC1*skoXC1*skoXC1*skoXC1*(-2/3)<=0,skoXC1*(-1+skoXC1*skoXC1*(-1/6))<=0,skoXC1*skoXC1*(1/3)<=1,skoXC1*skoXC1*(256+skoXC1*skoXC1*(-160+skoXC1*skoXC1*(32+skoXC1*skoXC1*-1)))<=128,skoXC1*skoXC1*skoXC1*skoXC1*((-80/3)+skoXC1*skoXC1*((128/3)+skoXC1*skoXC1*((-55/3)+skoXC1*skoXC1*(5/3))))<=0,skoXC1*(-1+skoXC1*skoXC1*((1/3)+skoXC1*skoXC1*((3/20)+skoXC1*skoXC1*(5/56))))<=0,skoXC1*skoXC1*((-1/6)+skoXC1*skoXC1*((-3/40)+skoXC1*skoXC1*(-5/112)))<=1,skoXC1*skoXC1*((-1/2)+skoXC1*skoXC1*((7/120)+skoXC1*skoXC1*((33/560)+skoXC1*skoXC1*(-5/112))))<=0,skoXC1*skoXC1*skoXC1*skoXC1*((-13/60)+skoXC1*skoXC1*((-9/280)+skoXC1*skoXC1*(-5/28)))<=0,skoXC1*skoXC1*skoXC1*skoXC1*((-17/120)+skoXC1*skoXC1*((-27/280)+skoXC1*skoXC1*(5/224)))<=0,skoXC1*skoXC1*((1/3)+skoXC1*skoXC1*((3/20)+skoXC1*skoXC1*(5/56)))<=1,skoXC1*skoXC1*skoXC1*skoXC1*((32/15)+skoXC1*skoXC1*((-272/105)+skoXC1*skoXC1*((-1163/105)+skoXC1*skoXC1*((1753/105)+skoXC1*skoXC1*((-169/28)+skoXC1*skoXC1*(25/56))))))<=0,skoXC1*skoXC1*((1/6)+skoXC1*skoXC1*((3/40)+skoXC1*skoXC1*(5/112)))>-1,skoXC1*(-1+skoXC1*skoXC1*((-1/6)+skoXC1*skoXC1*((-3/40)+skoXC1*skoXC1*(-5/112))))<=0]], Reals]]

% In QepcadB format:
(E skoXC1) [[(skoXC1 skoXC1 (-1/2+(skoXC1 skoXC1 (7/120+(skoXC1 skoXC1 (33/560+(skoXC1 skoXC1 (125/2688+(skoXC1 skoXC1 (931/25344+(skoXC1 skoXC1 (-63/2816))))))))))))<=0]/\[[-1<(skoXC1 skoXC1 (1/6+(skoXC1 skoXC1 (3/40+(skoXC1 skoXC1 (5/112+(skoXC1 skoXC1 (35/1152+(skoXC1 skoXC1 (63/2816))))))))))]/\[[(skoXC1 (-1+(skoXC1 skoXC1 (1/3+(skoXC1 skoXC1 (3/20+(skoXC1 skoXC1 (5/56+(skoXC1 skoXC1 (35/576+(skoXC1 skoXC1 (63/1408))))))))))))<=0]/\[[(skoXC1 (-1+(skoXC1 skoXC1 (-1/6+(skoXC1 skoXC1 (-3/40))))))<=0]/\[[-1<(skoXC1 skoXC1 (1/6+(skoXC1 skoXC1 (3/40))))]/\[[(skoXC1 skoXC1 skoXC1 skoXC1 (32/15+(skoXC1 skoXC1 (-296/15+(skoXC1 skoXC1 (391/15+(skoXC1 skoXC1 (-146/15+(skoXC1 skoXC1 (3/4))))))))))<=0]/\[[(skoXC1 skoXC1 (1/3+(skoXC1 skoXC1 (3/20))))<=1]/\[[(skoXC1 skoXC1 skoXC1 skoXC1 (-17/120+(skoXC1 skoXC1 (3/80))))<=0]/\[[(skoXC1 skoXC1 skoXC1 skoXC1 (-13/60+(skoXC1 skoXC1 (-3/10))))<=0]/\[[(skoXC1 skoXC1 (-1/2+(skoXC1 skoXC1 (7/120+(skoXC1 skoXC1 (-3/40))))))<=0]/\[[(skoXC1 skoXC1 (-1/6+(skoXC1 skoXC1 (-3/40))))<=1]/\[[(skoXC1 (-1+(skoXC1 skoXC1 (1/3+(skoXC1 skoXC1 (3/20))))))<=0]/\[[0<(skoXC1 skoXC1)]/\[[(skoXC1 skoXC1 (80+(skoXC1 skoXC1 (-40+(skoXC1 skoXC1 (6+(skoXC1 skoXC1 (-1/8))))))))<=48]/\[[-48<(skoXC1 skoXC1 (-80+(skoXC1 skoXC1 (40+(skoXC1 skoXC1 (-6+(skoXC1 skoXC1 (1/8))))))))]/\[[(skoXC1 skoXC1 (24+(skoXC1 skoXC1 (-10+(skoXC1 skoXC1)))))<=16]/\[[(skoXC1 skoXC1 (1/2))<=3]/\[[-3<(skoXC1 skoXC1 (-1/2))]/\[[0<skoXC1]/\[[skoXC1<7/8]/\[[(skoXC1 (-1+(skoXC1 skoXC1 (1/3))))<=0]/\[[(skoXC1 skoXC1 (-1/6))<=1]/\[[(skoXC1 skoXC1 (-1/2+(skoXC1 skoXC1 (-1/6))))<=0]/\[[(skoXC1 skoXC1)<=2]/\[[(skoXC1 skoXC1 skoXC1 skoXC1 (-2/3))<=0]/\[[(skoXC1 (-1+(skoXC1 skoXC1 (-1/6))))<=0]/\[[(skoXC1 skoXC1 (1/3))<=1]/\[[(skoXC1 skoXC1 (256+(skoXC1 skoXC1 (-160+(skoXC1 skoXC1 (32+(skoXC1 skoXC1 (-1))))))))<=128]/\[[(skoXC1 skoXC1 skoXC1 skoXC1 (-80/3+(skoXC1 skoXC1 (128/3+(skoXC1 skoXC1 (-55/3+(skoXC1 skoXC1 (5/3))))))))<=0]/\[[(skoXC1 (-1+(skoXC1 skoXC1 (1/3+(skoXC1 skoXC1 (3/20+(skoXC1 skoXC1 (5/56))))))))<=0]/\[[(skoXC1 skoXC1 (-1/6+(skoXC1 skoXC1 (-3/40+(skoXC1 skoXC1 (-5/112))))))<=1]/\[[(skoXC1 skoXC1 (-1/2+(skoXC1 skoXC1 (7/120+(skoXC1 skoXC1 (33/560+(skoXC1 skoXC1 (-5/112))))))))<=0]/\[[(skoXC1 skoXC1 skoXC1 skoXC1 (-13/60+(skoXC1 skoXC1 (-9/280+(skoXC1 skoXC1 (-5/28))))))<=0]/\[[(skoXC1 skoXC1 skoXC1 skoXC1 (-17/120+(skoXC1 skoXC1 (-27/280+(skoXC1 skoXC1 (5/224))))))<=0]/\[[(skoXC1 skoXC1 (1/3+(skoXC1 skoXC1 (3/20+(skoXC1 skoXC1 (5/56))))))<=1]/\[[(skoXC1 skoXC1 skoXC1 skoXC1 (32/15+(skoXC1 skoXC1 (-272/105+(skoXC1 skoXC1 (-1163/105+(skoXC1 skoXC1 (1753/105+(skoXC1 skoXC1 (-169/28+(skoXC1 skoXC1 (25/56))))))))))))<=0]/\[[-1<(skoXC1 skoXC1 (1/6+(skoXC1 skoXC1 (3/40+(skoXC1 skoXC1 (5/112))))))]/\[(skoXC1 (-1+(skoXC1 skoXC1 (-1/6+(skoXC1 skoXC1 (-3/40+(skoXC1 skoXC1 (-5/112))))))))<=0]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]].

% In SMTLib2 format:
(declare-fun skoXC1 () Real) (assert (and (<= (* skoXC1 (* skoXC1 (+ (/ (- 1.) 2.) (* skoXC1 (* skoXC1 (+ (/ 7. 120.) (* skoXC1 (* skoXC1 (+ (/ 33. 560.) (* skoXC1 (* skoXC1 (+ (/ 125. 2688.) (* skoXC1 (* skoXC1 (+ (/ 931. 25344.) (* skoXC1 (* skoXC1 (/ (- 63.) 2816.)))))))))))))))))) 0.) (and (> (* skoXC1 (* skoXC1 (+ (/ 1. 6.) (* skoXC1 (* skoXC1 (+ (/ 3. 40.) (* skoXC1 (* skoXC1 (+ (/ 5. 112.) (* skoXC1 (* skoXC1 (+ (/ 35. 1152.) (* skoXC1 (* skoXC1 (/ 63. 2816.))))))))))))))) (- 1.)) (and (<= (* skoXC1 (+ (- 1.) (* skoXC1 (* skoXC1 (+ (/ 1. 3.) (* skoXC1 (* skoXC1 (+ (/ 3. 20.) (* skoXC1 (* skoXC1 (+ (/ 5. 56.) (* skoXC1 (* skoXC1 (+ (/ 35. 576.) (* skoXC1 (* skoXC1 (/ 63. 1408.))))))))))))))))) 0.) (and (<= (* skoXC1 (+ (- 1.) (* skoXC1 (* skoXC1 (+ (/ (- 1.) 6.) (* skoXC1 (* skoXC1 (/ (- 3.) 40.)))))))) 0.) (and (> (* skoXC1 (* skoXC1 (+ (/ 1. 6.) (* skoXC1 (* skoXC1 (/ 3. 40.)))))) (- 1.)) (and (<= (* skoXC1 (* skoXC1 (* skoXC1 (* skoXC1 (+ (/ 32. 15.) (* skoXC1 (* skoXC1 (+ (/ (- 296.) 15.) (* skoXC1 (* skoXC1 (+ (/ 391. 15.) (* skoXC1 (* skoXC1 (+ (/ (- 146.) 15.) (* skoXC1 (* skoXC1 (/ 3. 4.))))))))))))))))) 0.) (and (<= (* skoXC1 (* skoXC1 (+ (/ 1. 3.) (* skoXC1 (* skoXC1 (/ 3. 20.)))))) 1.) (and (<= (* skoXC1 (* skoXC1 (* skoXC1 (* skoXC1 (+ (/ (- 17.) 120.) (* skoXC1 (* skoXC1 (/ 3. 80.)))))))) 0.) (and (<= (* skoXC1 (* skoXC1 (* skoXC1 (* skoXC1 (+ (/ (- 13.) 60.) (* skoXC1 (* skoXC1 (/ (- 3.) 10.)))))))) 0.) (and (<= (* skoXC1 (* skoXC1 (+ (/ (- 1.) 2.) (* skoXC1 (* skoXC1 (+ (/ 7. 120.) (* skoXC1 (* skoXC1 (/ (- 3.) 40.))))))))) 0.) (and (<= (* skoXC1 (* skoXC1 (+ (/ (- 1.) 6.) (* skoXC1 (* skoXC1 (/ (- 3.) 40.)))))) 1.) (and (<= (* skoXC1 (+ (- 1.) (* skoXC1 (* skoXC1 (+ (/ 1. 3.) (* skoXC1 (* skoXC1 (/ 3. 20.)))))))) 0.) (and (> (* skoXC1 skoXC1) 0.) (and (<= (* skoXC1 (* skoXC1 (+ 80. (* skoXC1 (* skoXC1 (+ (- 40.) (* skoXC1 (* skoXC1 (+ 6. (* skoXC1 (* skoXC1 (/ (- 1.) 8.)))))))))))) 48.) (and (> (* skoXC1 (* skoXC1 (+ (- 80.) (* skoXC1 (* skoXC1 (+ 40. (* skoXC1 (* skoXC1 (+ (- 6.) (* skoXC1 (* skoXC1 (/ 1. 8.)))))))))))) (- 48.)) (and (<= (* skoXC1 (* skoXC1 (+ 24. (* skoXC1 (* skoXC1 (+ (- 10.) (* skoXC1 skoXC1))))))) 16.) (and (<= (* skoXC1 (* skoXC1 (/ 1. 2.))) 3.) (and (> (* skoXC1 (* skoXC1 (/ (- 1.) 2.))) (- 3.)) (and (> skoXC1 0.) (and (> (/ 7. 8.) skoXC1) (and (<= (* skoXC1 (+ (- 1.) (* skoXC1 (* skoXC1 (/ 1. 3.))))) 0.) (and (<= (* skoXC1 (* skoXC1 (/ (- 1.) 6.))) 1.) (and (<= (* skoXC1 (* skoXC1 (+ (/ (- 1.) 2.) (* skoXC1 (* skoXC1 (/ (- 1.) 6.)))))) 0.) (and (<= (* skoXC1 skoXC1) 2.) (and (<= (* skoXC1 (* skoXC1 (* skoXC1 (* skoXC1 (/ (- 2.) 3.))))) 0.) (and (<= (* skoXC1 (+ (- 1.) (* skoXC1 (* skoXC1 (/ (- 1.) 6.))))) 0.) (and (<= (* skoXC1 (* skoXC1 (/ 1. 3.))) 1.) (and (<= (* skoXC1 (* skoXC1 (+ 256. (* skoXC1 (* skoXC1 (+ (- 160.) (* skoXC1 (* skoXC1 (+ 32. (* skoXC1 (* skoXC1 (- 1.)))))))))))) 128.) (and (<= (* skoXC1 (* skoXC1 (* skoXC1 (* skoXC1 (+ (/ (- 80.) 3.) (* skoXC1 (* skoXC1 (+ (/ 128. 3.) (* skoXC1 (* skoXC1 (+ (/ (- 55.) 3.) (* skoXC1 (* skoXC1 (/ 5. 3.)))))))))))))) 0.) (and (<= (* skoXC1 (+ (- 1.) (* skoXC1 (* skoXC1 (+ (/ 1. 3.) (* skoXC1 (* skoXC1 (+ (/ 3. 20.) (* skoXC1 (* skoXC1 (/ 5. 56.))))))))))) 0.) (and (<= (* skoXC1 (* skoXC1 (+ (/ (- 1.) 6.) (* skoXC1 (* skoXC1 (+ (/ (- 3.) 40.) (* skoXC1 (* skoXC1 (/ (- 5.) 112.))))))))) 1.) (and (<= (* skoXC1 (* skoXC1 (+ (/ (- 1.) 2.) (* skoXC1 (* skoXC1 (+ (/ 7. 120.) (* skoXC1 (* skoXC1 (+ (/ 33. 560.) (* skoXC1 (* skoXC1 (/ (- 5.) 112.)))))))))))) 0.) (and (<= (* skoXC1 (* skoXC1 (* skoXC1 (* skoXC1 (+ (/ (- 13.) 60.) (* skoXC1 (* skoXC1 (+ (/ (- 9.) 280.) (* skoXC1 (* skoXC1 (/ (- 5.) 28.))))))))))) 0.) (and (<= (* skoXC1 (* skoXC1 (* skoXC1 (* skoXC1 (+ (/ (- 17.) 120.) (* skoXC1 (* skoXC1 (+ (/ (- 27.) 280.) (* skoXC1 (* skoXC1 (/ 5. 224.))))))))))) 0.) (and (<= (* skoXC1 (* skoXC1 (+ (/ 1. 3.) (* skoXC1 (* skoXC1 (+ (/ 3. 20.) (* skoXC1 (* skoXC1 (/ 5. 56.))))))))) 1.) (and (<= (* skoXC1 (* skoXC1 (* skoXC1 (* skoXC1 (+ (/ 32. 15.) (* skoXC1 (* skoXC1 (+ (/ (- 272.) 105.) (* skoXC1 (* skoXC1 (+ (/ (- 1163.) 105.) (* skoXC1 (* skoXC1 (+ (/ 1753. 105.) (* skoXC1 (* skoXC1 (+ (/ (- 169.) 28.) (* skoXC1 (* skoXC1 (/ 25. 56.)))))))))))))))))))) 0.) (and (> (* skoXC1 (* skoXC1 (+ (/ 1. 6.) (* skoXC1 (* skoXC1 (+ (/ 3. 40.) (* skoXC1 (* skoXC1 (/ 5. 112.))))))))) (- 1.)) (<= (* skoXC1 (+ (- 1.) (* skoXC1 (* skoXC1 (+ (/ (- 1.) 6.) (* skoXC1 (* skoXC1 (+ (/ (- 3.) 40.) (* skoXC1 (* skoXC1 (/ (- 5.) 112.))))))))))) 0.)))))))))))))))))))))))))))))))))))))))

% In GRF format:
(sequent " MetiTarski formula " (antecedent (<= (* skoXC1 (* skoXC1 (+ (/ (- 1.) 2.) (* skoXC1 (* skoXC1 (+ (/ 7. 120.) (* skoXC1 (* skoXC1 (+ (/ 33. 560.) (* skoXC1 (* skoXC1 (+ (/ 125. 2688.) (* skoXC1 (* skoXC1 (+ (/ 931. 25344.) (* skoXC1 (* skoXC1 (/ (- 63.) 2816.)))))))))))))))))) 0.) (> (* skoXC1 (* skoXC1 (+ (/ 1. 6.) (* skoXC1 (* skoXC1 (+ (/ 3. 40.) (* skoXC1 (* skoXC1 (+ (/ 5. 112.) (* skoXC1 (* skoXC1 (+ (/ 35. 1152.) (* skoXC1 (* skoXC1 (/ 63. 2816.))))))))))))))) (- 1.)) (<= (* skoXC1 (+ (- 1.) (* skoXC1 (* skoXC1 (+ (/ 1. 3.) (* skoXC1 (* skoXC1 (+ (/ 3. 20.) (* skoXC1 (* skoXC1 (+ (/ 5. 56.) (* skoXC1 (* skoXC1 (+ (/ 35. 576.) (* skoXC1 (* skoXC1 (/ 63. 1408.))))))))))))))))) 0.) (<= (* skoXC1 (+ (- 1.) (* skoXC1 (* skoXC1 (+ (/ (- 1.) 6.) (* skoXC1 (* skoXC1 (/ (- 3.) 40.)))))))) 0.) (> (* skoXC1 (* skoXC1 (+ (/ 1. 6.) (* skoXC1 (* skoXC1 (/ 3. 40.)))))) (- 1.)) (<= (* skoXC1 (* skoXC1 (* skoXC1 (* skoXC1 (+ (/ 32. 15.) (* skoXC1 (* skoXC1 (+ (/ (- 296.) 15.) (* skoXC1 (* skoXC1 (+ (/ 391. 15.) (* skoXC1 (* skoXC1 (+ (/ (- 146.) 15.) (* skoXC1 (* skoXC1 (/ 3. 4.))))))))))))))))) 0.) (<= (* skoXC1 (* skoXC1 (+ (/ 1. 3.) (* skoXC1 (* skoXC1 (/ 3. 20.)))))) 1.) (<= (* skoXC1 (* skoXC1 (* skoXC1 (* skoXC1 (+ (/ (- 17.) 120.) (* skoXC1 (* skoXC1 (/ 3. 80.)))))))) 0.) (<= (* skoXC1 (* skoXC1 (* skoXC1 (* skoXC1 (+ (/ (- 13.) 60.) (* skoXC1 (* skoXC1 (/ (- 3.) 10.)))))))) 0.) (<= (* skoXC1 (* skoXC1 (+ (/ (- 1.) 2.) (* skoXC1 (* skoXC1 (+ (/ 7. 120.) (* skoXC1 (* skoXC1 (/ (- 3.) 40.))))))))) 0.) (<= (* skoXC1 (* skoXC1 (+ (/ (- 1.) 6.) (* skoXC1 (* skoXC1 (/ (- 3.) 40.)))))) 1.) (<= (* skoXC1 (+ (- 1.) (* skoXC1 (* skoXC1 (+ (/ 1. 3.) (* skoXC1 (* skoXC1 (/ 3. 20.)))))))) 0.) (> (* skoXC1 skoXC1) 0.) (<= (* skoXC1 (* skoXC1 (+ 80. (* skoXC1 (* skoXC1 (+ (- 40.) (* skoXC1 (* skoXC1 (+ 6. (* skoXC1 (* skoXC1 (/ (- 1.) 8.)))))))))))) 48.) (> (* skoXC1 (* skoXC1 (+ (- 80.) (* skoXC1 (* skoXC1 (+ 40. (* skoXC1 (* skoXC1 (+ (- 6.) (* skoXC1 (* skoXC1 (/ 1. 8.)))))))))))) (- 48.)) (<= (* skoXC1 (* skoXC1 (+ 24. (* skoXC1 (* skoXC1 (+ (- 10.) (* skoXC1 skoXC1))))))) 16.) (<= (* skoXC1 (* skoXC1 (/ 1. 2.))) 3.) (> (* skoXC1 (* skoXC1 (/ (- 1.) 2.))) (- 3.)) (> skoXC1 0.) (> (/ 7. 8.) skoXC1) (<= (* skoXC1 (+ (- 1.) (* skoXC1 (* skoXC1 (/ 1. 3.))))) 0.) (<= (* skoXC1 (* skoXC1 (/ (- 1.) 6.))) 1.) (<= (* skoXC1 (* skoXC1 (+ (/ (- 1.) 2.) (* skoXC1 (* skoXC1 (/ (- 1.) 6.)))))) 0.) (<= (* skoXC1 skoXC1) 2.) (<= (* skoXC1 (* skoXC1 (* skoXC1 (* skoXC1 (/ (- 2.) 3.))))) 0.) (<= (* skoXC1 (+ (- 1.) (* skoXC1 (* skoXC1 (/ (- 1.) 6.))))) 0.) (<= (* skoXC1 (* skoXC1 (/ 1. 3.))) 1.) (<= (* skoXC1 (* skoXC1 (+ 256. (* skoXC1 (* skoXC1 (+ (- 160.) (* skoXC1 (* skoXC1 (+ 32. (* skoXC1 (* skoXC1 (- 1.)))))))))))) 128.) (<= (* skoXC1 (* skoXC1 (* skoXC1 (* skoXC1 (+ (/ (- 80.) 3.) (* skoXC1 (* skoXC1 (+ (/ 128. 3.) (* skoXC1 (* skoXC1 (+ (/ (- 55.) 3.) (* skoXC1 (* skoXC1 (/ 5. 3.)))))))))))))) 0.) (<= (* skoXC1 (+ (- 1.) (* skoXC1 (* skoXC1 (+ (/ 1. 3.) (* skoXC1 (* skoXC1 (+ (/ 3. 20.) (* skoXC1 (* skoXC1 (/ 5. 56.))))))))))) 0.) (<= (* skoXC1 (* skoXC1 (+ (/ (- 1.) 6.) (* skoXC1 (* skoXC1 (+ (/ (- 3.) 40.) (* skoXC1 (* skoXC1 (/ (- 5.) 112.))))))))) 1.) (<= (* skoXC1 (* skoXC1 (+ (/ (- 1.) 2.) (* skoXC1 (* skoXC1 (+ (/ 7. 120.) (* skoXC1 (* skoXC1 (+ (/ 33. 560.) (* skoXC1 (* skoXC1 (/ (- 5.) 112.)))))))))))) 0.) (<= (* skoXC1 (* skoXC1 (* skoXC1 (* skoXC1 (+ (/ (- 13.) 60.) (* skoXC1 (* skoXC1 (+ (/ (- 9.) 280.) (* skoXC1 (* skoXC1 (/ (- 5.) 28.))))))))))) 0.) (<= (* skoXC1 (* skoXC1 (* skoXC1 (* skoXC1 (+ (/ (- 17.) 120.) (* skoXC1 (* skoXC1 (+ (/ (- 27.) 280.) (* skoXC1 (* skoXC1 (/ 5. 224.))))))))))) 0.) (<= (* skoXC1 (* skoXC1 (+ (/ 1. 3.) (* skoXC1 (* skoXC1 (+ (/ 3. 20.) (* skoXC1 (* skoXC1 (/ 5. 56.))))))))) 1.) (<= (* skoXC1 (* skoXC1 (* skoXC1 (* skoXC1 (+ (/ 32. 15.) (* skoXC1 (* skoXC1 (+ (/ (- 272.) 105.) (* skoXC1 (* skoXC1 (+ (/ (- 1163.) 105.) (* skoXC1 (* skoXC1 (+ (/ 1753. 105.) (* skoXC1 (* skoXC1 (+ (/ (- 169.) 28.) (* skoXC1 (* skoXC1 (/ 25. 56.)))))))))))))))))))) 0.) (> (* skoXC1 (* skoXC1 (+ (/ 1. 6.) (* skoXC1 (* skoXC1 (+ (/ 3. 40.) (* skoXC1 (* skoXC1 (/ 5. 112.))))))))) (- 1.))) (succedent (> (* skoXC1 (+ (- 1.) (* skoXC1 (* skoXC1 (+ (/ (- 1.) 6.) (* skoXC1 (* skoXC1 (+ (/ (- 3.) 40.) (* skoXC1 (* skoXC1 (/ (- 5.) 112.))))))))))) 0.)))
-----[end problem]-----

-----[begin problem]-----
% In Mathematica format:
Timing[Resolve[Exists[{skoXC1}, And[skoXC1*skoXC1*((-1/6)+skoXC1*skoXC1*((-3/40)+skoXC1*skoXC1*((-5/112)+skoXC1*skoXC1*((-35/1152)+skoXC1*skoXC1*(-63/2816)))))<=1,skoXC1*(-1+skoXC1*skoXC1*((1/3)+skoXC1*skoXC1*((3/20)+skoXC1*skoXC1*((5/56)+skoXC1*skoXC1*((35/576)+skoXC1*skoXC1*(63/1408))))))<=0,skoXC1*(-1+skoXC1*skoXC1*((-1/6)+skoXC1*skoXC1*(-3/40)))<=0,skoXC1*skoXC1*((1/6)+skoXC1*skoXC1*(3/40))>-1,skoXC1*skoXC1*skoXC1*skoXC1*((32/15)+skoXC1*skoXC1*((-296/15)+skoXC1*skoXC1*((391/15)+skoXC1*skoXC1*((-146/15)+skoXC1*skoXC1*(3/4)))))<=0,skoXC1*skoXC1*((1/3)+skoXC1*skoXC1*(3/20))<=1,skoXC1*skoXC1*skoXC1*skoXC1*((-17/120)+skoXC1*skoXC1*(3/80))<=0,skoXC1*skoXC1*skoXC1*skoXC1*((-13/60)+skoXC1*skoXC1*(-3/10))<=0,skoXC1*skoXC1*((-1/2)+skoXC1*skoXC1*((7/120)+skoXC1*skoXC1*(-3/40)))<=0,skoXC1*skoXC1*((-1/6)+skoXC1*skoXC1*(-3/40))<=1,skoXC1*(-1+skoXC1*skoXC1*((1/3)+skoXC1*skoXC1*(3/20)))<=0,skoXC1*skoXC1>0,skoXC1*skoXC1*(80+skoXC1*skoXC1*(-40+skoXC1*skoXC1*(6+skoXC1*skoXC1*(-1/8))))<=48,skoXC1*skoXC1*(-80+skoXC1*skoXC1*(40+skoXC1*skoXC1*(-6+skoXC1*skoXC1*(1/8))))>-48,skoXC1*skoXC1*(24+skoXC1*skoXC1*(-10+skoXC1*skoXC1))<=16,skoXC1*skoXC1*(1/2)<=3,skoXC1*skoXC1*(-1/2)>-3,skoXC1>0,(7/8)>skoXC1,skoXC1*(-1+skoXC1*skoXC1*(1/3))<=0,skoXC1*skoXC1*(-1/6)<=1,skoXC1*skoXC1*((-1/2)+skoXC1*skoXC1*(-1/6))<=0,skoXC1*skoXC1<=2,skoXC1*skoXC1*skoXC1*skoXC1*(-2/3)<=0,skoXC1*(-1+skoXC1*skoXC1*(-1/6))<=0,skoXC1*skoXC1*(1/3)<=1,skoXC1*skoXC1*(256+skoXC1*skoXC1*(-160+skoXC1*skoXC1*(32+skoXC1*skoXC1*-1)))<=128,skoXC1*skoXC1*skoXC1*skoXC1*((-80/3)+skoXC1*skoXC1*((128/3)+skoXC1*skoXC1*((-55/3)+skoXC1*skoXC1*(5/3))))<=0,skoXC1*(-1+skoXC1*skoXC1*((1/3)+skoXC1*skoXC1*((3/20)+skoXC1*skoXC1*(5/56))))<=0,skoXC1*skoXC1*((-1/6)+skoXC1*skoXC1*((-3/40)+skoXC1*skoXC1*(-5/112)))<=1,skoXC1*skoXC1*((-1/2)+skoXC1*skoXC1*((7/120)+skoXC1*skoXC1*((33/560)+skoXC1*skoXC1*(-5/112))))<=0,skoXC1*skoXC1*skoXC1*skoXC1*((-13/60)+skoXC1*skoXC1*((-9/280)+skoXC1*skoXC1*(-5/28)))<=0,skoXC1*skoXC1*skoXC1*skoXC1*((-17/120)+skoXC1*skoXC1*((-27/280)+skoXC1*skoXC1*(5/224)))<=0,skoXC1*skoXC1*((1/3)+skoXC1*skoXC1*((3/20)+skoXC1*skoXC1*(5/56)))<=1,skoXC1*skoXC1*skoXC1*skoXC1*((32/15)+skoXC1*skoXC1*((-272/105)+skoXC1*skoXC1*((-1163/105)+skoXC1*skoXC1*((1753/105)+skoXC1*skoXC1*((-169/28)+skoXC1*skoXC1*(25/56))))))<=0,skoXC1*skoXC1*((1/6)+skoXC1*skoXC1*((3/40)+skoXC1*skoXC1*(5/112)))>-1,skoXC1*(-1+skoXC1*skoXC1*((-1/6)+skoXC1*skoXC1*((-3/40)+skoXC1*skoXC1*(-5/112))))<=0]], Reals]]

% In QepcadB format:
(E skoXC1) [[(skoXC1 skoXC1 (-1/6+(skoXC1 skoXC1 (-3/40+(skoXC1 skoXC1 (-5/112+(skoXC1 skoXC1 (-35/1152+(skoXC1 skoXC1 (-63/2816))))))))))<=1]/\[[(skoXC1 (-1+(skoXC1 skoXC1 (1/3+(skoXC1 skoXC1 (3/20+(skoXC1 skoXC1 (5/56+(skoXC1 skoXC1 (35/576+(skoXC1 skoXC1 (63/1408))))))))))))<=0]/\[[(skoXC1 (-1+(skoXC1 skoXC1 (-1/6+(skoXC1 skoXC1 (-3/40))))))<=0]/\[[-1<(skoXC1 skoXC1 (1/6+(skoXC1 skoXC1 (3/40))))]/\[[(skoXC1 skoXC1 skoXC1 skoXC1 (32/15+(skoXC1 skoXC1 (-296/15+(skoXC1 skoXC1 (391/15+(skoXC1 skoXC1 (-146/15+(skoXC1 skoXC1 (3/4))))))))))<=0]/\[[(skoXC1 skoXC1 (1/3+(skoXC1 skoXC1 (3/20))))<=1]/\[[(skoXC1 skoXC1 skoXC1 skoXC1 (-17/120+(skoXC1 skoXC1 (3/80))))<=0]/\[[(skoXC1 skoXC1 skoXC1 skoXC1 (-13/60+(skoXC1 skoXC1 (-3/10))))<=0]/\[[(skoXC1 skoXC1 (-1/2+(skoXC1 skoXC1 (7/120+(skoXC1 skoXC1 (-3/40))))))<=0]/\[[(skoXC1 skoXC1 (-1/6+(skoXC1 skoXC1 (-3/40))))<=1]/\[[(skoXC1 (-1+(skoXC1 skoXC1 (1/3+(skoXC1 skoXC1 (3/20))))))<=0]/\[[0<(skoXC1 skoXC1)]/\[[(skoXC1 skoXC1 (80+(skoXC1 skoXC1 (-40+(skoXC1 skoXC1 (6+(skoXC1 skoXC1 (-1/8))))))))<=48]/\[[-48<(skoXC1 skoXC1 (-80+(skoXC1 skoXC1 (40+(skoXC1 skoXC1 (-6+(skoXC1 skoXC1 (1/8))))))))]/\[[(skoXC1 skoXC1 (24+(skoXC1 skoXC1 (-10+(skoXC1 skoXC1)))))<=16]/\[[(skoXC1 skoXC1 (1/2))<=3]/\[[-3<(skoXC1 skoXC1 (-1/2))]/\[[0<skoXC1]/\[[skoXC1<7/8]/\[[(skoXC1 (-1+(skoXC1 skoXC1 (1/3))))<=0]/\[[(skoXC1 skoXC1 (-1/6))<=1]/\[[(skoXC1 skoXC1 (-1/2+(skoXC1 skoXC1 (-1/6))))<=0]/\[[(skoXC1 skoXC1)<=2]/\[[(skoXC1 skoXC1 skoXC1 skoXC1 (-2/3))<=0]/\[[(skoXC1 (-1+(skoXC1 skoXC1 (-1/6))))<=0]/\[[(skoXC1 skoXC1 (1/3))<=1]/\[[(skoXC1 skoXC1 (256+(skoXC1 skoXC1 (-160+(skoXC1 skoXC1 (32+(skoXC1 skoXC1 (-1))))))))<=128]/\[[(skoXC1 skoXC1 skoXC1 skoXC1 (-80/3+(skoXC1 skoXC1 (128/3+(skoXC1 skoXC1 (-55/3+(skoXC1 skoXC1 (5/3))))))))<=0]/\[[(skoXC1 (-1+(skoXC1 skoXC1 (1/3+(skoXC1 skoXC1 (3/20+(skoXC1 skoXC1 (5/56))))))))<=0]/\[[(skoXC1 skoXC1 (-1/6+(skoXC1 skoXC1 (-3/40+(skoXC1 skoXC1 (-5/112))))))<=1]/\[[(skoXC1 skoXC1 (-1/2+(skoXC1 skoXC1 (7/120+(skoXC1 skoXC1 (33/560+(skoXC1 skoXC1 (-5/112))))))))<=0]/\[[(skoXC1 skoXC1 skoXC1 skoXC1 (-13/60+(skoXC1 skoXC1 (-9/280+(skoXC1 skoXC1 (-5/28))))))<=0]/\[[(skoXC1 skoXC1 skoXC1 skoXC1 (-17/120+(skoXC1 skoXC1 (-27/280+(skoXC1 skoXC1 (5/224))))))<=0]/\[[(skoXC1 skoXC1 (1/3+(skoXC1 skoXC1 (3/20+(skoXC1 skoXC1 (5/56))))))<=1]/\[[(skoXC1 skoXC1 skoXC1 skoXC1 (32/15+(skoXC1 skoXC1 (-272/105+(skoXC1 skoXC1 (-1163/105+(skoXC1 skoXC1 (1753/105+(skoXC1 skoXC1 (-169/28+(skoXC1 skoXC1 (25/56))))))))))))<=0]/\[[-1<(skoXC1 skoXC1 (1/6+(skoXC1 skoXC1 (3/40+(skoXC1 skoXC1 (5/112))))))]/\[(skoXC1 (-1+(skoXC1 skoXC1 (-1/6+(skoXC1 skoXC1 (-3/40+(skoXC1 skoXC1 (-5/112))))))))<=0]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]].

% In SMTLib2 format:
(declare-fun skoXC1 () Real) (assert (and (<= (* skoXC1 (* skoXC1 (+ (/ (- 1.) 6.) (* skoXC1 (* skoXC1 (+ (/ (- 3.) 40.) (* skoXC1 (* skoXC1 (+ (/ (- 5.) 112.) (* skoXC1 (* skoXC1 (+ (/ (- 35.) 1152.) (* skoXC1 (* skoXC1 (/ (- 63.) 2816.))))))))))))))) 1.) (and (<= (* skoXC1 (+ (- 1.) (* skoXC1 (* skoXC1 (+ (/ 1. 3.) (* skoXC1 (* skoXC1 (+ (/ 3. 20.) (* skoXC1 (* skoXC1 (+ (/ 5. 56.) (* skoXC1 (* skoXC1 (+ (/ 35. 576.) (* skoXC1 (* skoXC1 (/ 63. 1408.))))))))))))))))) 0.) (and (<= (* skoXC1 (+ (- 1.) (* skoXC1 (* skoXC1 (+ (/ (- 1.) 6.) (* skoXC1 (* skoXC1 (/ (- 3.) 40.)))))))) 0.) (and (> (* skoXC1 (* skoXC1 (+ (/ 1. 6.) (* skoXC1 (* skoXC1 (/ 3. 40.)))))) (- 1.)) (and (<= (* skoXC1 (* skoXC1 (* skoXC1 (* skoXC1 (+ (/ 32. 15.) (* skoXC1 (* skoXC1 (+ (/ (- 296.) 15.) (* skoXC1 (* skoXC1 (+ (/ 391. 15.) (* skoXC1 (* skoXC1 (+ (/ (- 146.) 15.) (* skoXC1 (* skoXC1 (/ 3. 4.))))))))))))))))) 0.) (and (<= (* skoXC1 (* skoXC1 (+ (/ 1. 3.) (* skoXC1 (* skoXC1 (/ 3. 20.)))))) 1.) (and (<= (* skoXC1 (* skoXC1 (* skoXC1 (* skoXC1 (+ (/ (- 17.) 120.) (* skoXC1 (* skoXC1 (/ 3. 80.)))))))) 0.) (and (<= (* skoXC1 (* skoXC1 (* skoXC1 (* skoXC1 (+ (/ (- 13.) 60.) (* skoXC1 (* skoXC1 (/ (- 3.) 10.)))))))) 0.) (and (<= (* skoXC1 (* skoXC1 (+ (/ (- 1.) 2.) (* skoXC1 (* skoXC1 (+ (/ 7. 120.) (* skoXC1 (* skoXC1 (/ (- 3.) 40.))))))))) 0.) (and (<= (* skoXC1 (* skoXC1 (+ (/ (- 1.) 6.) (* skoXC1 (* skoXC1 (/ (- 3.) 40.)))))) 1.) (and (<= (* skoXC1 (+ (- 1.) (* skoXC1 (* skoXC1 (+ (/ 1. 3.) (* skoXC1 (* skoXC1 (/ 3. 20.)))))))) 0.) (and (> (* skoXC1 skoXC1) 0.) (and (<= (* skoXC1 (* skoXC1 (+ 80. (* skoXC1 (* skoXC1 (+ (- 40.) (* skoXC1 (* skoXC1 (+ 6. (* skoXC1 (* skoXC1 (/ (- 1.) 8.)))))))))))) 48.) (and (> (* skoXC1 (* skoXC1 (+ (- 80.) (* skoXC1 (* skoXC1 (+ 40. (* skoXC1 (* skoXC1 (+ (- 6.) (* skoXC1 (* skoXC1 (/ 1. 8.)))))))))))) (- 48.)) (and (<= (* skoXC1 (* skoXC1 (+ 24. (* skoXC1 (* skoXC1 (+ (- 10.) (* skoXC1 skoXC1))))))) 16.) (and (<= (* skoXC1 (* skoXC1 (/ 1. 2.))) 3.) (and (> (* skoXC1 (* skoXC1 (/ (- 1.) 2.))) (- 3.)) (and (> skoXC1 0.) (and (> (/ 7. 8.) skoXC1) (and (<= (* skoXC1 (+ (- 1.) (* skoXC1 (* skoXC1 (/ 1. 3.))))) 0.) (and (<= (* skoXC1 (* skoXC1 (/ (- 1.) 6.))) 1.) (and (<= (* skoXC1 (* skoXC1 (+ (/ (- 1.) 2.) (* skoXC1 (* skoXC1 (/ (- 1.) 6.)))))) 0.) (and (<= (* skoXC1 skoXC1) 2.) (and (<= (* skoXC1 (* skoXC1 (* skoXC1 (* skoXC1 (/ (- 2.) 3.))))) 0.) (and (<= (* skoXC1 (+ (- 1.) (* skoXC1 (* skoXC1 (/ (- 1.) 6.))))) 0.) (and (<= (* skoXC1 (* skoXC1 (/ 1. 3.))) 1.) (and (<= (* skoXC1 (* skoXC1 (+ 256. (* skoXC1 (* skoXC1 (+ (- 160.) (* skoXC1 (* skoXC1 (+ 32. (* skoXC1 (* skoXC1 (- 1.)))))))))))) 128.) (and (<= (* skoXC1 (* skoXC1 (* skoXC1 (* skoXC1 (+ (/ (- 80.) 3.) (* skoXC1 (* skoXC1 (+ (/ 128. 3.) (* skoXC1 (* skoXC1 (+ (/ (- 55.) 3.) (* skoXC1 (* skoXC1 (/ 5. 3.)))))))))))))) 0.) (and (<= (* skoXC1 (+ (- 1.) (* skoXC1 (* skoXC1 (+ (/ 1. 3.) (* skoXC1 (* skoXC1 (+ (/ 3. 20.) (* skoXC1 (* skoXC1 (/ 5. 56.))))))))))) 0.) (and (<= (* skoXC1 (* skoXC1 (+ (/ (- 1.) 6.) (* skoXC1 (* skoXC1 (+ (/ (- 3.) 40.) (* skoXC1 (* skoXC1 (/ (- 5.) 112.))))))))) 1.) (and (<= (* skoXC1 (* skoXC1 (+ (/ (- 1.) 2.) (* skoXC1 (* skoXC1 (+ (/ 7. 120.) (* skoXC1 (* skoXC1 (+ (/ 33. 560.) (* skoXC1 (* skoXC1 (/ (- 5.) 112.)))))))))))) 0.) (and (<= (* skoXC1 (* skoXC1 (* skoXC1 (* skoXC1 (+ (/ (- 13.) 60.) (* skoXC1 (* skoXC1 (+ (/ (- 9.) 280.) (* skoXC1 (* skoXC1 (/ (- 5.) 28.))))))))))) 0.) (and (<= (* skoXC1 (* skoXC1 (* skoXC1 (* skoXC1 (+ (/ (- 17.) 120.) (* skoXC1 (* skoXC1 (+ (/ (- 27.) 280.) (* skoXC1 (* skoXC1 (/ 5. 224.))))))))))) 0.) (and (<= (* skoXC1 (* skoXC1 (+ (/ 1. 3.) (* skoXC1 (* skoXC1 (+ (/ 3. 20.) (* skoXC1 (* skoXC1 (/ 5. 56.))))))))) 1.) (and (<= (* skoXC1 (* skoXC1 (* skoXC1 (* skoXC1 (+ (/ 32. 15.) (* skoXC1 (* skoXC1 (+ (/ (- 272.) 105.) (* skoXC1 (* skoXC1 (+ (/ (- 1163.) 105.) (* skoXC1 (* skoXC1 (+ (/ 1753. 105.) (* skoXC1 (* skoXC1 (+ (/ (- 169.) 28.) (* skoXC1 (* skoXC1 (/ 25. 56.)))))))))))))))))))) 0.) (and (> (* skoXC1 (* skoXC1 (+ (/ 1. 6.) (* skoXC1 (* skoXC1 (+ (/ 3. 40.) (* skoXC1 (* skoXC1 (/ 5. 112.))))))))) (- 1.)) (<= (* skoXC1 (+ (- 1.) (* skoXC1 (* skoXC1 (+ (/ (- 1.) 6.) (* skoXC1 (* skoXC1 (+ (/ (- 3.) 40.) (* skoXC1 (* skoXC1 (/ (- 5.) 112.))))))))))) 0.))))))))))))))))))))))))))))))))))))))

% In GRF format:
(sequent " MetiTarski formula " (antecedent (<= (* skoXC1 (* skoXC1 (+ (/ (- 1.) 6.) (* skoXC1 (* skoXC1 (+ (/ (- 3.) 40.) (* skoXC1 (* skoXC1 (+ (/ (- 5.) 112.) (* skoXC1 (* skoXC1 (+ (/ (- 35.) 1152.) (* skoXC1 (* skoXC1 (/ (- 63.) 2816.))))))))))))))) 1.) (<= (* skoXC1 (+ (- 1.) (* skoXC1 (* skoXC1 (+ (/ 1. 3.) (* skoXC1 (* skoXC1 (+ (/ 3. 20.) (* skoXC1 (* skoXC1 (+ (/ 5. 56.) (* skoXC1 (* skoXC1 (+ (/ 35. 576.) (* skoXC1 (* skoXC1 (/ 63. 1408.))))))))))))))))) 0.) (<= (* skoXC1 (+ (- 1.) (* skoXC1 (* skoXC1 (+ (/ (- 1.) 6.) (* skoXC1 (* skoXC1 (/ (- 3.) 40.)))))))) 0.) (> (* skoXC1 (* skoXC1 (+ (/ 1. 6.) (* skoXC1 (* skoXC1 (/ 3. 40.)))))) (- 1.)) (<= (* skoXC1 (* skoXC1 (* skoXC1 (* skoXC1 (+ (/ 32. 15.) (* skoXC1 (* skoXC1 (+ (/ (- 296.) 15.) (* skoXC1 (* skoXC1 (+ (/ 391. 15.) (* skoXC1 (* skoXC1 (+ (/ (- 146.) 15.) (* skoXC1 (* skoXC1 (/ 3. 4.))))))))))))))))) 0.) (<= (* skoXC1 (* skoXC1 (+ (/ 1. 3.) (* skoXC1 (* skoXC1 (/ 3. 20.)))))) 1.) (<= (* skoXC1 (* skoXC1 (* skoXC1 (* skoXC1 (+ (/ (- 17.) 120.) (* skoXC1 (* skoXC1 (/ 3. 80.)))))))) 0.) (<= (* skoXC1 (* skoXC1 (* skoXC1 (* skoXC1 (+ (/ (- 13.) 60.) (* skoXC1 (* skoXC1 (/ (- 3.) 10.)))))))) 0.) (<= (* skoXC1 (* skoXC1 (+ (/ (- 1.) 2.) (* skoXC1 (* skoXC1 (+ (/ 7. 120.) (* skoXC1 (* skoXC1 (/ (- 3.) 40.))))))))) 0.) (<= (* skoXC1 (* skoXC1 (+ (/ (- 1.) 6.) (* skoXC1 (* skoXC1 (/ (- 3.) 40.)))))) 1.) (<= (* skoXC1 (+ (- 1.) (* skoXC1 (* skoXC1 (+ (/ 1. 3.) (* skoXC1 (* skoXC1 (/ 3. 20.)))))))) 0.) (> (* skoXC1 skoXC1) 0.) (<= (* skoXC1 (* skoXC1 (+ 80. (* skoXC1 (* skoXC1 (+ (- 40.) (* skoXC1 (* skoXC1 (+ 6. (* skoXC1 (* skoXC1 (/ (- 1.) 8.)))))))))))) 48.) (> (* skoXC1 (* skoXC1 (+ (- 80.) (* skoXC1 (* skoXC1 (+ 40. (* skoXC1 (* skoXC1 (+ (- 6.) (* skoXC1 (* skoXC1 (/ 1. 8.)))))))))))) (- 48.)) (<= (* skoXC1 (* skoXC1 (+ 24. (* skoXC1 (* skoXC1 (+ (- 10.) (* skoXC1 skoXC1))))))) 16.) (<= (* skoXC1 (* skoXC1 (/ 1. 2.))) 3.) (> (* skoXC1 (* skoXC1 (/ (- 1.) 2.))) (- 3.)) (> skoXC1 0.) (> (/ 7. 8.) skoXC1) (<= (* skoXC1 (+ (- 1.) (* skoXC1 (* skoXC1 (/ 1. 3.))))) 0.) (<= (* skoXC1 (* skoXC1 (/ (- 1.) 6.))) 1.) (<= (* skoXC1 (* skoXC1 (+ (/ (- 1.) 2.) (* skoXC1 (* skoXC1 (/ (- 1.) 6.)))))) 0.) (<= (* skoXC1 skoXC1) 2.) (<= (* skoXC1 (* skoXC1 (* skoXC1 (* skoXC1 (/ (- 2.) 3.))))) 0.) (<= (* skoXC1 (+ (- 1.) (* skoXC1 (* skoXC1 (/ (- 1.) 6.))))) 0.) (<= (* skoXC1 (* skoXC1 (/ 1. 3.))) 1.) (<= (* skoXC1 (* skoXC1 (+ 256. (* skoXC1 (* skoXC1 (+ (- 160.) (* skoXC1 (* skoXC1 (+ 32. (* skoXC1 (* skoXC1 (- 1.)))))))))))) 128.) (<= (* skoXC1 (* skoXC1 (* skoXC1 (* skoXC1 (+ (/ (- 80.) 3.) (* skoXC1 (* skoXC1 (+ (/ 128. 3.) (* skoXC1 (* skoXC1 (+ (/ (- 55.) 3.) (* skoXC1 (* skoXC1 (/ 5. 3.)))))))))))))) 0.) (<= (* skoXC1 (+ (- 1.) (* skoXC1 (* skoXC1 (+ (/ 1. 3.) (* skoXC1 (* skoXC1 (+ (/ 3. 20.) (* skoXC1 (* skoXC1 (/ 5. 56.))))))))))) 0.) (<= (* skoXC1 (* skoXC1 (+ (/ (- 1.) 6.) (* skoXC1 (* skoXC1 (+ (/ (- 3.) 40.) (* skoXC1 (* skoXC1 (/ (- 5.) 112.))))))))) 1.) (<= (* skoXC1 (* skoXC1 (+ (/ (- 1.) 2.) (* skoXC1 (* skoXC1 (+ (/ 7. 120.) (* skoXC1 (* skoXC1 (+ (/ 33. 560.) (* skoXC1 (* skoXC1 (/ (- 5.) 112.)))))))))))) 0.) (<= (* skoXC1 (* skoXC1 (* skoXC1 (* skoXC1 (+ (/ (- 13.) 60.) (* skoXC1 (* skoXC1 (+ (/ (- 9.) 280.) (* skoXC1 (* skoXC1 (/ (- 5.) 28.))))))))))) 0.) (<= (* skoXC1 (* skoXC1 (* skoXC1 (* skoXC1 (+ (/ (- 17.) 120.) (* skoXC1 (* skoXC1 (+ (/ (- 27.) 280.) (* skoXC1 (* skoXC1 (/ 5. 224.))))))))))) 0.) (<= (* skoXC1 (* skoXC1 (+ (/ 1. 3.) (* skoXC1 (* skoXC1 (+ (/ 3. 20.) (* skoXC1 (* skoXC1 (/ 5. 56.))))))))) 1.) (<= (* skoXC1 (* skoXC1 (* skoXC1 (* skoXC1 (+ (/ 32. 15.) (* skoXC1 (* skoXC1 (+ (/ (- 272.) 105.) (* skoXC1 (* skoXC1 (+ (/ (- 1163.) 105.) (* skoXC1 (* skoXC1 (+ (/ 1753. 105.) (* skoXC1 (* skoXC1 (+ (/ (- 169.) 28.) (* skoXC1 (* skoXC1 (/ 25. 56.)))))))))))))))))))) 0.) (> (* skoXC1 (* skoXC1 (+ (/ 1. 6.) (* skoXC1 (* skoXC1 (+ (/ 3. 40.) (* skoXC1 (* skoXC1 (/ 5. 112.))))))))) (- 1.))) (succedent (> (* skoXC1 (+ (- 1.) (* skoXC1 (* skoXC1 (+ (/ (- 1.) 6.) (* skoXC1 (* skoXC1 (+ (/ (- 3.) 40.) (* skoXC1 (* skoXC1 (/ (- 5.) 112.))))))))))) 0.)))
-----[end problem]-----

-----[begin problem]-----
% In Mathematica format:
Timing[Resolve[Exists[{skoXC1}, And[skoXC1*skoXC1*((-1/2)+skoXC1*skoXC1*((7/120)+skoXC1*skoXC1*((33/560)+skoXC1*skoXC1*((125/2688)+skoXC1*skoXC1*((931/25344)+skoXC1*skoXC1*(-63/2816))))))<=0,skoXC1*skoXC1*((-1/6)+skoXC1*skoXC1*((-3/40)+skoXC1*skoXC1*((-5/112)+skoXC1*skoXC1*((-35/1152)+skoXC1*skoXC1*(-63/2816)))))<=1,skoXC1*(-1+skoXC1*skoXC1*((1/3)+skoXC1*skoXC1*((3/20)+skoXC1*skoXC1*((5/56)+skoXC1*skoXC1*((35/576)+skoXC1*skoXC1*(63/1408))))))<=0,skoXC1*(-1+skoXC1*skoXC1*((-1/6)+skoXC1*skoXC1*(-3/40)))<=0,skoXC1*skoXC1*((1/6)+skoXC1*skoXC1*(3/40))>-1,skoXC1*skoXC1*skoXC1*skoXC1*((32/15)+skoXC1*skoXC1*((-296/15)+skoXC1*skoXC1*((391/15)+skoXC1*skoXC1*((-146/15)+skoXC1*skoXC1*(3/4)))))<=0,skoXC1*skoXC1*((1/3)+skoXC1*skoXC1*(3/20))<=1,skoXC1*skoXC1*skoXC1*skoXC1*((-17/120)+skoXC1*skoXC1*(3/80))<=0,skoXC1*skoXC1*skoXC1*skoXC1*((-13/60)+skoXC1*skoXC1*(-3/10))<=0,skoXC1*skoXC1*((-1/2)+skoXC1*skoXC1*((7/120)+skoXC1*skoXC1*(-3/40)))<=0,skoXC1*skoXC1*((-1/6)+skoXC1*skoXC1*(-3/40))<=1,skoXC1*(-1+skoXC1*skoXC1*((1/3)+skoXC1*skoXC1*(3/20)))<=0,skoXC1*skoXC1>0,skoXC1*skoXC1*(80+skoXC1*skoXC1*(-40+skoXC1*skoXC1*(6+skoXC1*skoXC1*(-1/8))))<=48,skoXC1*skoXC1*(-80+skoXC1*skoXC1*(40+skoXC1*skoXC1*(-6+skoXC1*skoXC1*(1/8))))>-48,skoXC1*skoXC1*(24+skoXC1*skoXC1*(-10+skoXC1*skoXC1))<=16,skoXC1*skoXC1*(1/2)<=3,skoXC1*skoXC1*(-1/2)>-3,skoXC1>0,(7/8)>skoXC1,skoXC1*(-1+skoXC1*skoXC1*(1/3))<=0,skoXC1*skoXC1*(-1/6)<=1,skoXC1*skoXC1*((-1/2)+skoXC1*skoXC1*(-1/6))<=0,skoXC1*skoXC1<=2,skoXC1*skoXC1*skoXC1*skoXC1*(-2/3)<=0,skoXC1*(-1+skoXC1*skoXC1*(-1/6))<=0,skoXC1*skoXC1*(1/3)<=1,skoXC1*skoXC1*(256+skoXC1*skoXC1*(-160+skoXC1*skoXC1*(32+skoXC1*skoXC1*-1)))<=128,skoXC1*skoXC1*skoXC1*skoXC1*((-80/3)+skoXC1*skoXC1*((128/3)+skoXC1*skoXC1*((-55/3)+skoXC1*skoXC1*(5/3))))<=0,skoXC1*(-1+skoXC1*skoXC1*((1/3)+skoXC1*skoXC1*((3/20)+skoXC1*skoXC1*(5/56))))<=0,skoXC1*skoXC1*((-1/6)+skoXC1*skoXC1*((-3/40)+skoXC1*skoXC1*(-5/112)))<=1,skoXC1*skoXC1*((-1/2)+skoXC1*skoXC1*((7/120)+skoXC1*skoXC1*((33/560)+skoXC1*skoXC1*(-5/112))))<=0,skoXC1*skoXC1*skoXC1*skoXC1*((-13/60)+skoXC1*skoXC1*((-9/280)+skoXC1*skoXC1*(-5/28)))<=0,skoXC1*skoXC1*skoXC1*skoXC1*((-17/120)+skoXC1*skoXC1*((-27/280)+skoXC1*skoXC1*(5/224)))<=0,skoXC1*skoXC1*((1/3)+skoXC1*skoXC1*((3/20)+skoXC1*skoXC1*(5/56)))<=1,skoXC1*skoXC1*skoXC1*skoXC1*((32/15)+skoXC1*skoXC1*((-272/105)+skoXC1*skoXC1*((-1163/105)+skoXC1*skoXC1*((1753/105)+skoXC1*skoXC1*((-169/28)+skoXC1*skoXC1*(25/56))))))<=0,skoXC1*skoXC1*((1/6)+skoXC1*skoXC1*((3/40)+skoXC1*skoXC1*(5/112)))>-1,skoXC1*(-1+skoXC1*skoXC1*((-1/6)+skoXC1*skoXC1*((-3/40)+skoXC1*skoXC1*(-5/112))))<=0]], Reals]]

% In QepcadB format:
(E skoXC1) [[(skoXC1 skoXC1 (-1/2+(skoXC1 skoXC1 (7/120+(skoXC1 skoXC1 (33/560+(skoXC1 skoXC1 (125/2688+(skoXC1 skoXC1 (931/25344+(skoXC1 skoXC1 (-63/2816))))))))))))<=0]/\[[(skoXC1 skoXC1 (-1/6+(skoXC1 skoXC1 (-3/40+(skoXC1 skoXC1 (-5/112+(skoXC1 skoXC1 (-35/1152+(skoXC1 skoXC1 (-63/2816))))))))))<=1]/\[[(skoXC1 (-1+(skoXC1 skoXC1 (1/3+(skoXC1 skoXC1 (3/20+(skoXC1 skoXC1 (5/56+(skoXC1 skoXC1 (35/576+(skoXC1 skoXC1 (63/1408))))))))))))<=0]/\[[(skoXC1 (-1+(skoXC1 skoXC1 (-1/6+(skoXC1 skoXC1 (-3/40))))))<=0]/\[[-1<(skoXC1 skoXC1 (1/6+(skoXC1 skoXC1 (3/40))))]/\[[(skoXC1 skoXC1 skoXC1 skoXC1 (32/15+(skoXC1 skoXC1 (-296/15+(skoXC1 skoXC1 (391/15+(skoXC1 skoXC1 (-146/15+(skoXC1 skoXC1 (3/4))))))))))<=0]/\[[(skoXC1 skoXC1 (1/3+(skoXC1 skoXC1 (3/20))))<=1]/\[[(skoXC1 skoXC1 skoXC1 skoXC1 (-17/120+(skoXC1 skoXC1 (3/80))))<=0]/\[[(skoXC1 skoXC1 skoXC1 skoXC1 (-13/60+(skoXC1 skoXC1 (-3/10))))<=0]/\[[(skoXC1 skoXC1 (-1/2+(skoXC1 skoXC1 (7/120+(skoXC1 skoXC1 (-3/40))))))<=0]/\[[(skoXC1 skoXC1 (-1/6+(skoXC1 skoXC1 (-3/40))))<=1]/\[[(skoXC1 (-1+(skoXC1 skoXC1 (1/3+(skoXC1 skoXC1 (3/20))))))<=0]/\[[0<(skoXC1 skoXC1)]/\[[(skoXC1 skoXC1 (80+(skoXC1 skoXC1 (-40+(skoXC1 skoXC1 (6+(skoXC1 skoXC1 (-1/8))))))))<=48]/\[[-48<(skoXC1 skoXC1 (-80+(skoXC1 skoXC1 (40+(skoXC1 skoXC1 (-6+(skoXC1 skoXC1 (1/8))))))))]/\[[(skoXC1 skoXC1 (24+(skoXC1 skoXC1 (-10+(skoXC1 skoXC1)))))<=16]/\[[(skoXC1 skoXC1 (1/2))<=3]/\[[-3<(skoXC1 skoXC1 (-1/2))]/\[[0<skoXC1]/\[[skoXC1<7/8]/\[[(skoXC1 (-1+(skoXC1 skoXC1 (1/3))))<=0]/\[[(skoXC1 skoXC1 (-1/6))<=1]/\[[(skoXC1 skoXC1 (-1/2+(skoXC1 skoXC1 (-1/6))))<=0]/\[[(skoXC1 skoXC1)<=2]/\[[(skoXC1 skoXC1 skoXC1 skoXC1 (-2/3))<=0]/\[[(skoXC1 (-1+(skoXC1 skoXC1 (-1/6))))<=0]/\[[(skoXC1 skoXC1 (1/3))<=1]/\[[(skoXC1 skoXC1 (256+(skoXC1 skoXC1 (-160+(skoXC1 skoXC1 (32+(skoXC1 skoXC1 (-1))))))))<=128]/\[[(skoXC1 skoXC1 skoXC1 skoXC1 (-80/3+(skoXC1 skoXC1 (128/3+(skoXC1 skoXC1 (-55/3+(skoXC1 skoXC1 (5/3))))))))<=0]/\[[(skoXC1 (-1+(skoXC1 skoXC1 (1/3+(skoXC1 skoXC1 (3/20+(skoXC1 skoXC1 (5/56))))))))<=0]/\[[(skoXC1 skoXC1 (-1/6+(skoXC1 skoXC1 (-3/40+(skoXC1 skoXC1 (-5/112))))))<=1]/\[[(skoXC1 skoXC1 (-1/2+(skoXC1 skoXC1 (7/120+(skoXC1 skoXC1 (33/560+(skoXC1 skoXC1 (-5/112))))))))<=0]/\[[(skoXC1 skoXC1 skoXC1 skoXC1 (-13/60+(skoXC1 skoXC1 (-9/280+(skoXC1 skoXC1 (-5/28))))))<=0]/\[[(skoXC1 skoXC1 skoXC1 skoXC1 (-17/120+(skoXC1 skoXC1 (-27/280+(skoXC1 skoXC1 (5/224))))))<=0]/\[[(skoXC1 skoXC1 (1/3+(skoXC1 skoXC1 (3/20+(skoXC1 skoXC1 (5/56))))))<=1]/\[[(skoXC1 skoXC1 skoXC1 skoXC1 (32/15+(skoXC1 skoXC1 (-272/105+(skoXC1 skoXC1 (-1163/105+(skoXC1 skoXC1 (1753/105+(skoXC1 skoXC1 (-169/28+(skoXC1 skoXC1 (25/56))))))))))))<=0]/\[[-1<(skoXC1 skoXC1 (1/6+(skoXC1 skoXC1 (3/40+(skoXC1 skoXC1 (5/112))))))]/\[(skoXC1 (-1+(skoXC1 skoXC1 (-1/6+(skoXC1 skoXC1 (-3/40+(skoXC1 skoXC1 (-5/112))))))))<=0]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]].

% In SMTLib2 format:
(declare-fun skoXC1 () Real) (assert (and (<= (* skoXC1 (* skoXC1 (+ (/ (- 1.) 2.) (* skoXC1 (* skoXC1 (+ (/ 7. 120.) (* skoXC1 (* skoXC1 (+ (/ 33. 560.) (* skoXC1 (* skoXC1 (+ (/ 125. 2688.) (* skoXC1 (* skoXC1 (+ (/ 931. 25344.) (* skoXC1 (* skoXC1 (/ (- 63.) 2816.)))))))))))))))))) 0.) (and (<= (* skoXC1 (* skoXC1 (+ (/ (- 1.) 6.) (* skoXC1 (* skoXC1 (+ (/ (- 3.) 40.) (* skoXC1 (* skoXC1 (+ (/ (- 5.) 112.) (* skoXC1 (* skoXC1 (+ (/ (- 35.) 1152.) (* skoXC1 (* skoXC1 (/ (- 63.) 2816.))))))))))))))) 1.) (and (<= (* skoXC1 (+ (- 1.) (* skoXC1 (* skoXC1 (+ (/ 1. 3.) (* skoXC1 (* skoXC1 (+ (/ 3. 20.) (* skoXC1 (* skoXC1 (+ (/ 5. 56.) (* skoXC1 (* skoXC1 (+ (/ 35. 576.) (* skoXC1 (* skoXC1 (/ 63. 1408.))))))))))))))))) 0.) (and (<= (* skoXC1 (+ (- 1.) (* skoXC1 (* skoXC1 (+ (/ (- 1.) 6.) (* skoXC1 (* skoXC1 (/ (- 3.) 40.)))))))) 0.) (and (> (* skoXC1 (* skoXC1 (+ (/ 1. 6.) (* skoXC1 (* skoXC1 (/ 3. 40.)))))) (- 1.)) (and (<= (* skoXC1 (* skoXC1 (* skoXC1 (* skoXC1 (+ (/ 32. 15.) (* skoXC1 (* skoXC1 (+ (/ (- 296.) 15.) (* skoXC1 (* skoXC1 (+ (/ 391. 15.) (* skoXC1 (* skoXC1 (+ (/ (- 146.) 15.) (* skoXC1 (* skoXC1 (/ 3. 4.))))))))))))))))) 0.) (and (<= (* skoXC1 (* skoXC1 (+ (/ 1. 3.) (* skoXC1 (* skoXC1 (/ 3. 20.)))))) 1.) (and (<= (* skoXC1 (* skoXC1 (* skoXC1 (* skoXC1 (+ (/ (- 17.) 120.) (* skoXC1 (* skoXC1 (/ 3. 80.)))))))) 0.) (and (<= (* skoXC1 (* skoXC1 (* skoXC1 (* skoXC1 (+ (/ (- 13.) 60.) (* skoXC1 (* skoXC1 (/ (- 3.) 10.)))))))) 0.) (and (<= (* skoXC1 (* skoXC1 (+ (/ (- 1.) 2.) (* skoXC1 (* skoXC1 (+ (/ 7. 120.) (* skoXC1 (* skoXC1 (/ (- 3.) 40.))))))))) 0.) (and (<= (* skoXC1 (* skoXC1 (+ (/ (- 1.) 6.) (* skoXC1 (* skoXC1 (/ (- 3.) 40.)))))) 1.) (and (<= (* skoXC1 (+ (- 1.) (* skoXC1 (* skoXC1 (+ (/ 1. 3.) (* skoXC1 (* skoXC1 (/ 3. 20.)))))))) 0.) (and (> (* skoXC1 skoXC1) 0.) (and (<= (* skoXC1 (* skoXC1 (+ 80. (* skoXC1 (* skoXC1 (+ (- 40.) (* skoXC1 (* skoXC1 (+ 6. (* skoXC1 (* skoXC1 (/ (- 1.) 8.)))))))))))) 48.) (and (> (* skoXC1 (* skoXC1 (+ (- 80.) (* skoXC1 (* skoXC1 (+ 40. (* skoXC1 (* skoXC1 (+ (- 6.) (* skoXC1 (* skoXC1 (/ 1. 8.)))))))))))) (- 48.)) (and (<= (* skoXC1 (* skoXC1 (+ 24. (* skoXC1 (* skoXC1 (+ (- 10.) (* skoXC1 skoXC1))))))) 16.) (and (<= (* skoXC1 (* skoXC1 (/ 1. 2.))) 3.) (and (> (* skoXC1 (* skoXC1 (/ (- 1.) 2.))) (- 3.)) (and (> skoXC1 0.) (and (> (/ 7. 8.) skoXC1) (and (<= (* skoXC1 (+ (- 1.) (* skoXC1 (* skoXC1 (/ 1. 3.))))) 0.) (and (<= (* skoXC1 (* skoXC1 (/ (- 1.) 6.))) 1.) (and (<= (* skoXC1 (* skoXC1 (+ (/ (- 1.) 2.) (* skoXC1 (* skoXC1 (/ (- 1.) 6.)))))) 0.) (and (<= (* skoXC1 skoXC1) 2.) (and (<= (* skoXC1 (* skoXC1 (* skoXC1 (* skoXC1 (/ (- 2.) 3.))))) 0.) (and (<= (* skoXC1 (+ (- 1.) (* skoXC1 (* skoXC1 (/ (- 1.) 6.))))) 0.) (and (<= (* skoXC1 (* skoXC1 (/ 1. 3.))) 1.) (and (<= (* skoXC1 (* skoXC1 (+ 256. (* skoXC1 (* skoXC1 (+ (- 160.) (* skoXC1 (* skoXC1 (+ 32. (* skoXC1 (* skoXC1 (- 1.)))))))))))) 128.) (and (<= (* skoXC1 (* skoXC1 (* skoXC1 (* skoXC1 (+ (/ (- 80.) 3.) (* skoXC1 (* skoXC1 (+ (/ 128. 3.) (* skoXC1 (* skoXC1 (+ (/ (- 55.) 3.) (* skoXC1 (* skoXC1 (/ 5. 3.)))))))))))))) 0.) (and (<= (* skoXC1 (+ (- 1.) (* skoXC1 (* skoXC1 (+ (/ 1. 3.) (* skoXC1 (* skoXC1 (+ (/ 3. 20.) (* skoXC1 (* skoXC1 (/ 5. 56.))))))))))) 0.) (and (<= (* skoXC1 (* skoXC1 (+ (/ (- 1.) 6.) (* skoXC1 (* skoXC1 (+ (/ (- 3.) 40.) (* skoXC1 (* skoXC1 (/ (- 5.) 112.))))))))) 1.) (and (<= (* skoXC1 (* skoXC1 (+ (/ (- 1.) 2.) (* skoXC1 (* skoXC1 (+ (/ 7. 120.) (* skoXC1 (* skoXC1 (+ (/ 33. 560.) (* skoXC1 (* skoXC1 (/ (- 5.) 112.)))))))))))) 0.) (and (<= (* skoXC1 (* skoXC1 (* skoXC1 (* skoXC1 (+ (/ (- 13.) 60.) (* skoXC1 (* skoXC1 (+ (/ (- 9.) 280.) (* skoXC1 (* skoXC1 (/ (- 5.) 28.))))))))))) 0.) (and (<= (* skoXC1 (* skoXC1 (* skoXC1 (* skoXC1 (+ (/ (- 17.) 120.) (* skoXC1 (* skoXC1 (+ (/ (- 27.) 280.) (* skoXC1 (* skoXC1 (/ 5. 224.))))))))))) 0.) (and (<= (* skoXC1 (* skoXC1 (+ (/ 1. 3.) (* skoXC1 (* skoXC1 (+ (/ 3. 20.) (* skoXC1 (* skoXC1 (/ 5. 56.))))))))) 1.) (and (<= (* skoXC1 (* skoXC1 (* skoXC1 (* skoXC1 (+ (/ 32. 15.) (* skoXC1 (* skoXC1 (+ (/ (- 272.) 105.) (* skoXC1 (* skoXC1 (+ (/ (- 1163.) 105.) (* skoXC1 (* skoXC1 (+ (/ 1753. 105.) (* skoXC1 (* skoXC1 (+ (/ (- 169.) 28.) (* skoXC1 (* skoXC1 (/ 25. 56.)))))))))))))))))))) 0.) (and (> (* skoXC1 (* skoXC1 (+ (/ 1. 6.) (* skoXC1 (* skoXC1 (+ (/ 3. 40.) (* skoXC1 (* skoXC1 (/ 5. 112.))))))))) (- 1.)) (<= (* skoXC1 (+ (- 1.) (* skoXC1 (* skoXC1 (+ (/ (- 1.) 6.) (* skoXC1 (* skoXC1 (+ (/ (- 3.) 40.) (* skoXC1 (* skoXC1 (/ (- 5.) 112.))))))))))) 0.)))))))))))))))))))))))))))))))))))))))

% In GRF format:
(sequent " MetiTarski formula " (antecedent (<= (* skoXC1 (* skoXC1 (+ (/ (- 1.) 2.) (* skoXC1 (* skoXC1 (+ (/ 7. 120.) (* skoXC1 (* skoXC1 (+ (/ 33. 560.) (* skoXC1 (* skoXC1 (+ (/ 125. 2688.) (* skoXC1 (* skoXC1 (+ (/ 931. 25344.) (* skoXC1 (* skoXC1 (/ (- 63.) 2816.)))))))))))))))))) 0.) (<= (* skoXC1 (* skoXC1 (+ (/ (- 1.) 6.) (* skoXC1 (* skoXC1 (+ (/ (- 3.) 40.) (* skoXC1 (* skoXC1 (+ (/ (- 5.) 112.) (* skoXC1 (* skoXC1 (+ (/ (- 35.) 1152.) (* skoXC1 (* skoXC1 (/ (- 63.) 2816.))))))))))))))) 1.) (<= (* skoXC1 (+ (- 1.) (* skoXC1 (* skoXC1 (+ (/ 1. 3.) (* skoXC1 (* skoXC1 (+ (/ 3. 20.) (* skoXC1 (* skoXC1 (+ (/ 5. 56.) (* skoXC1 (* skoXC1 (+ (/ 35. 576.) (* skoXC1 (* skoXC1 (/ 63. 1408.))))))))))))))))) 0.) (<= (* skoXC1 (+ (- 1.) (* skoXC1 (* skoXC1 (+ (/ (- 1.) 6.) (* skoXC1 (* skoXC1 (/ (- 3.) 40.)))))))) 0.) (> (* skoXC1 (* skoXC1 (+ (/ 1. 6.) (* skoXC1 (* skoXC1 (/ 3. 40.)))))) (- 1.)) (<= (* skoXC1 (* skoXC1 (* skoXC1 (* skoXC1 (+ (/ 32. 15.) (* skoXC1 (* skoXC1 (+ (/ (- 296.) 15.) (* skoXC1 (* skoXC1 (+ (/ 391. 15.) (* skoXC1 (* skoXC1 (+ (/ (- 146.) 15.) (* skoXC1 (* skoXC1 (/ 3. 4.))))))))))))))))) 0.) (<= (* skoXC1 (* skoXC1 (+ (/ 1. 3.) (* skoXC1 (* skoXC1 (/ 3. 20.)))))) 1.) (<= (* skoXC1 (* skoXC1 (* skoXC1 (* skoXC1 (+ (/ (- 17.) 120.) (* skoXC1 (* skoXC1 (/ 3. 80.)))))))) 0.) (<= (* skoXC1 (* skoXC1 (* skoXC1 (* skoXC1 (+ (/ (- 13.) 60.) (* skoXC1 (* skoXC1 (/ (- 3.) 10.)))))))) 0.) (<= (* skoXC1 (* skoXC1 (+ (/ (- 1.) 2.) (* skoXC1 (* skoXC1 (+ (/ 7. 120.) (* skoXC1 (* skoXC1 (/ (- 3.) 40.))))))))) 0.) (<= (* skoXC1 (* skoXC1 (+ (/ (- 1.) 6.) (* skoXC1 (* skoXC1 (/ (- 3.) 40.)))))) 1.) (<= (* skoXC1 (+ (- 1.) (* skoXC1 (* skoXC1 (+ (/ 1. 3.) (* skoXC1 (* skoXC1 (/ 3. 20.)))))))) 0.) (> (* skoXC1 skoXC1) 0.) (<= (* skoXC1 (* skoXC1 (+ 80. (* skoXC1 (* skoXC1 (+ (- 40.) (* skoXC1 (* skoXC1 (+ 6. (* skoXC1 (* skoXC1 (/ (- 1.) 8.)))))))))))) 48.) (> (* skoXC1 (* skoXC1 (+ (- 80.) (* skoXC1 (* skoXC1 (+ 40. (* skoXC1 (* skoXC1 (+ (- 6.) (* skoXC1 (* skoXC1 (/ 1. 8.)))))))))))) (- 48.)) (<= (* skoXC1 (* skoXC1 (+ 24. (* skoXC1 (* skoXC1 (+ (- 10.) (* skoXC1 skoXC1))))))) 16.) (<= (* skoXC1 (* skoXC1 (/ 1. 2.))) 3.) (> (* skoXC1 (* skoXC1 (/ (- 1.) 2.))) (- 3.)) (> skoXC1 0.) (> (/ 7. 8.) skoXC1) (<= (* skoXC1 (+ (- 1.) (* skoXC1 (* skoXC1 (/ 1. 3.))))) 0.) (<= (* skoXC1 (* skoXC1 (/ (- 1.) 6.))) 1.) (<= (* skoXC1 (* skoXC1 (+ (/ (- 1.) 2.) (* skoXC1 (* skoXC1 (/ (- 1.) 6.)))))) 0.) (<= (* skoXC1 skoXC1) 2.) (<= (* skoXC1 (* skoXC1 (* skoXC1 (* skoXC1 (/ (- 2.) 3.))))) 0.) (<= (* skoXC1 (+ (- 1.) (* skoXC1 (* skoXC1 (/ (- 1.) 6.))))) 0.) (<= (* skoXC1 (* skoXC1 (/ 1. 3.))) 1.) (<= (* skoXC1 (* skoXC1 (+ 256. (* skoXC1 (* skoXC1 (+ (- 160.) (* skoXC1 (* skoXC1 (+ 32. (* skoXC1 (* skoXC1 (- 1.)))))))))))) 128.) (<= (* skoXC1 (* skoXC1 (* skoXC1 (* skoXC1 (+ (/ (- 80.) 3.) (* skoXC1 (* skoXC1 (+ (/ 128. 3.) (* skoXC1 (* skoXC1 (+ (/ (- 55.) 3.) (* skoXC1 (* skoXC1 (/ 5. 3.)))))))))))))) 0.) (<= (* skoXC1 (+ (- 1.) (* skoXC1 (* skoXC1 (+ (/ 1. 3.) (* skoXC1 (* skoXC1 (+ (/ 3. 20.) (* skoXC1 (* skoXC1 (/ 5. 56.))))))))))) 0.) (<= (* skoXC1 (* skoXC1 (+ (/ (- 1.) 6.) (* skoXC1 (* skoXC1 (+ (/ (- 3.) 40.) (* skoXC1 (* skoXC1 (/ (- 5.) 112.))))))))) 1.) (<= (* skoXC1 (* skoXC1 (+ (/ (- 1.) 2.) (* skoXC1 (* skoXC1 (+ (/ 7. 120.) (* skoXC1 (* skoXC1 (+ (/ 33. 560.) (* skoXC1 (* skoXC1 (/ (- 5.) 112.)))))))))))) 0.) (<= (* skoXC1 (* skoXC1 (* skoXC1 (* skoXC1 (+ (/ (- 13.) 60.) (* skoXC1 (* skoXC1 (+ (/ (- 9.) 280.) (* skoXC1 (* skoXC1 (/ (- 5.) 28.))))))))))) 0.) (<= (* skoXC1 (* skoXC1 (* skoXC1 (* skoXC1 (+ (/ (- 17.) 120.) (* skoXC1 (* skoXC1 (+ (/ (- 27.) 280.) (* skoXC1 (* skoXC1 (/ 5. 224.))))))))))) 0.) (<= (* skoXC1 (* skoXC1 (+ (/ 1. 3.) (* skoXC1 (* skoXC1 (+ (/ 3. 20.) (* skoXC1 (* skoXC1 (/ 5. 56.))))))))) 1.) (<= (* skoXC1 (* skoXC1 (* skoXC1 (* skoXC1 (+ (/ 32. 15.) (* skoXC1 (* skoXC1 (+ (/ (- 272.) 105.) (* skoXC1 (* skoXC1 (+ (/ (- 1163.) 105.) (* skoXC1 (* skoXC1 (+ (/ 1753. 105.) (* skoXC1 (* skoXC1 (+ (/ (- 169.) 28.) (* skoXC1 (* skoXC1 (/ 25. 56.)))))))))))))))))))) 0.) (> (* skoXC1 (* skoXC1 (+ (/ 1. 6.) (* skoXC1 (* skoXC1 (+ (/ 3. 40.) (* skoXC1 (* skoXC1 (/ 5. 112.))))))))) (- 1.))) (succedent (> (* skoXC1 (+ (- 1.) (* skoXC1 (* skoXC1 (+ (/ (- 1.) 6.) (* skoXC1 (* skoXC1 (+ (/ (- 3.) 40.) (* skoXC1 (* skoXC1 (/ (- 5.) 112.))))))))))) 0.)))
-----[end problem]-----

-----[begin problem]-----
% In Mathematica format:
Timing[Resolve[Exists[{skoXC1}, And[skoXC1*skoXC1*((-1/6)+skoXC1*skoXC1*((-3/40)+skoXC1*skoXC1*((-5/112)+skoXC1*skoXC1*((-35/1152)+skoXC1*skoXC1*(-63/2816)))))<=1,skoXC1*skoXC1*((-1/2)+skoXC1*skoXC1*((7/120)+skoXC1*skoXC1*((33/560)+skoXC1*skoXC1*((125/2688)+skoXC1*skoXC1*((931/25344)+skoXC1*skoXC1*(-63/2816))))))<=0,skoXC1*skoXC1*((-1/6)+skoXC1*skoXC1*((-3/40)+skoXC1*skoXC1*((-5/112)+skoXC1*skoXC1*((-35/1152)+skoXC1*skoXC1*(-63/2816)))))<=1,skoXC1*(-1+skoXC1*skoXC1*((1/3)+skoXC1*skoXC1*((3/20)+skoXC1*skoXC1*((5/56)+skoXC1*skoXC1*((35/576)+skoXC1*skoXC1*(63/1408))))))<=0,skoXC1*(-1+skoXC1*skoXC1*((-1/6)+skoXC1*skoXC1*(-3/40)))<=0,skoXC1*skoXC1*((1/6)+skoXC1*skoXC1*(3/40))>-1,skoXC1*skoXC1*skoXC1*skoXC1*((32/15)+skoXC1*skoXC1*((-296/15)+skoXC1*skoXC1*((391/15)+skoXC1*skoXC1*((-146/15)+skoXC1*skoXC1*(3/4)))))<=0,skoXC1*skoXC1*((1/3)+skoXC1*skoXC1*(3/20))<=1,skoXC1*skoXC1*skoXC1*skoXC1*((-17/120)+skoXC1*skoXC1*(3/80))<=0,skoXC1*skoXC1*skoXC1*skoXC1*((-13/60)+skoXC1*skoXC1*(-3/10))<=0,skoXC1*skoXC1*((-1/2)+skoXC1*skoXC1*((7/120)+skoXC1*skoXC1*(-3/40)))<=0,skoXC1*skoXC1*((-1/6)+skoXC1*skoXC1*(-3/40))<=1,skoXC1*(-1+skoXC1*skoXC1*((1/3)+skoXC1*skoXC1*(3/20)))<=0,skoXC1*skoXC1>0,skoXC1*skoXC1*(80+skoXC1*skoXC1*(-40+skoXC1*skoXC1*(6+skoXC1*skoXC1*(-1/8))))<=48,skoXC1*skoXC1*(-80+skoXC1*skoXC1*(40+skoXC1*skoXC1*(-6+skoXC1*skoXC1*(1/8))))>-48,skoXC1*skoXC1*(24+skoXC1*skoXC1*(-10+skoXC1*skoXC1))<=16,skoXC1*skoXC1*(1/2)<=3,skoXC1*skoXC1*(-1/2)>-3,skoXC1>0,(7/8)>skoXC1,skoXC1*(-1+skoXC1*skoXC1*(1/3))<=0,skoXC1*skoXC1*(-1/6)<=1,skoXC1*skoXC1*((-1/2)+skoXC1*skoXC1*(-1/6))<=0,skoXC1*skoXC1<=2,skoXC1*skoXC1*skoXC1*skoXC1*(-2/3)<=0,skoXC1*(-1+skoXC1*skoXC1*(-1/6))<=0,skoXC1*skoXC1*(1/3)<=1,skoXC1*skoXC1*(256+skoXC1*skoXC1*(-160+skoXC1*skoXC1*(32+skoXC1*skoXC1*-1)))<=128,skoXC1*skoXC1*skoXC1*skoXC1*((-80/3)+skoXC1*skoXC1*((128/3)+skoXC1*skoXC1*((-55/3)+skoXC1*skoXC1*(5/3))))<=0,skoXC1*(-1+skoXC1*skoXC1*((1/3)+skoXC1*skoXC1*((3/20)+skoXC1*skoXC1*(5/56))))<=0,skoXC1*skoXC1*((-1/6)+skoXC1*skoXC1*((-3/40)+skoXC1*skoXC1*(-5/112)))<=1,skoXC1*skoXC1*((-1/2)+skoXC1*skoXC1*((7/120)+skoXC1*skoXC1*((33/560)+skoXC1*skoXC1*(-5/112))))<=0,skoXC1*skoXC1*skoXC1*skoXC1*((-13/60)+skoXC1*skoXC1*((-9/280)+skoXC1*skoXC1*(-5/28)))<=0,skoXC1*skoXC1*skoXC1*skoXC1*((-17/120)+skoXC1*skoXC1*((-27/280)+skoXC1*skoXC1*(5/224)))<=0,skoXC1*skoXC1*((1/3)+skoXC1*skoXC1*((3/20)+skoXC1*skoXC1*(5/56)))<=1,skoXC1*skoXC1*skoXC1*skoXC1*((32/15)+skoXC1*skoXC1*((-272/105)+skoXC1*skoXC1*((-1163/105)+skoXC1*skoXC1*((1753/105)+skoXC1*skoXC1*((-169/28)+skoXC1*skoXC1*(25/56))))))<=0,skoXC1*skoXC1*((1/6)+skoXC1*skoXC1*((3/40)+skoXC1*skoXC1*(5/112)))>-1,skoXC1*(-1+skoXC1*skoXC1*((-1/6)+skoXC1*skoXC1*((-3/40)+skoXC1*skoXC1*(-5/112))))<=0]], Reals]]

% In QepcadB format:
(E skoXC1) [[(skoXC1 skoXC1 (-1/6+(skoXC1 skoXC1 (-3/40+(skoXC1 skoXC1 (-5/112+(skoXC1 skoXC1 (-35/1152+(skoXC1 skoXC1 (-63/2816))))))))))<=1]/\[[(skoXC1 skoXC1 (-1/2+(skoXC1 skoXC1 (7/120+(skoXC1 skoXC1 (33/560+(skoXC1 skoXC1 (125/2688+(skoXC1 skoXC1 (931/25344+(skoXC1 skoXC1 (-63/2816))))))))))))<=0]/\[[(skoXC1 skoXC1 (-1/6+(skoXC1 skoXC1 (-3/40+(skoXC1 skoXC1 (-5/112+(skoXC1 skoXC1 (-35/1152+(skoXC1 skoXC1 (-63/2816))))))))))<=1]/\[[(skoXC1 (-1+(skoXC1 skoXC1 (1/3+(skoXC1 skoXC1 (3/20+(skoXC1 skoXC1 (5/56+(skoXC1 skoXC1 (35/576+(skoXC1 skoXC1 (63/1408))))))))))))<=0]/\[[(skoXC1 (-1+(skoXC1 skoXC1 (-1/6+(skoXC1 skoXC1 (-3/40))))))<=0]/\[[-1<(skoXC1 skoXC1 (1/6+(skoXC1 skoXC1 (3/40))))]/\[[(skoXC1 skoXC1 skoXC1 skoXC1 (32/15+(skoXC1 skoXC1 (-296/15+(skoXC1 skoXC1 (391/15+(skoXC1 skoXC1 (-146/15+(skoXC1 skoXC1 (3/4))))))))))<=0]/\[[(skoXC1 skoXC1 (1/3+(skoXC1 skoXC1 (3/20))))<=1]/\[[(skoXC1 skoXC1 skoXC1 skoXC1 (-17/120+(skoXC1 skoXC1 (3/80))))<=0]/\[[(skoXC1 skoXC1 skoXC1 skoXC1 (-13/60+(skoXC1 skoXC1 (-3/10))))<=0]/\[[(skoXC1 skoXC1 (-1/2+(skoXC1 skoXC1 (7/120+(skoXC1 skoXC1 (-3/40))))))<=0]/\[[(skoXC1 skoXC1 (-1/6+(skoXC1 skoXC1 (-3/40))))<=1]/\[[(skoXC1 (-1+(skoXC1 skoXC1 (1/3+(skoXC1 skoXC1 (3/20))))))<=0]/\[[0<(skoXC1 skoXC1)]/\[[(skoXC1 skoXC1 (80+(skoXC1 skoXC1 (-40+(skoXC1 skoXC1 (6+(skoXC1 skoXC1 (-1/8))))))))<=48]/\[[-48<(skoXC1 skoXC1 (-80+(skoXC1 skoXC1 (40+(skoXC1 skoXC1 (-6+(skoXC1 skoXC1 (1/8))))))))]/\[[(skoXC1 skoXC1 (24+(skoXC1 skoXC1 (-10+(skoXC1 skoXC1)))))<=16]/\[[(skoXC1 skoXC1 (1/2))<=3]/\[[-3<(skoXC1 skoXC1 (-1/2))]/\[[0<skoXC1]/\[[skoXC1<7/8]/\[[(skoXC1 (-1+(skoXC1 skoXC1 (1/3))))<=0]/\[[(skoXC1 skoXC1 (-1/6))<=1]/\[[(skoXC1 skoXC1 (-1/2+(skoXC1 skoXC1 (-1/6))))<=0]/\[[(skoXC1 skoXC1)<=2]/\[[(skoXC1 skoXC1 skoXC1 skoXC1 (-2/3))<=0]/\[[(skoXC1 (-1+(skoXC1 skoXC1 (-1/6))))<=0]/\[[(skoXC1 skoXC1 (1/3))<=1]/\[[(skoXC1 skoXC1 (256+(skoXC1 skoXC1 (-160+(skoXC1 skoXC1 (32+(skoXC1 skoXC1 (-1))))))))<=128]/\[[(skoXC1 skoXC1 skoXC1 skoXC1 (-80/3+(skoXC1 skoXC1 (128/3+(skoXC1 skoXC1 (-55/3+(skoXC1 skoXC1 (5/3))))))))<=0]/\[[(skoXC1 (-1+(skoXC1 skoXC1 (1/3+(skoXC1 skoXC1 (3/20+(skoXC1 skoXC1 (5/56))))))))<=0]/\[[(skoXC1 skoXC1 (-1/6+(skoXC1 skoXC1 (-3/40+(skoXC1 skoXC1 (-5/112))))))<=1]/\[[(skoXC1 skoXC1 (-1/2+(skoXC1 skoXC1 (7/120+(skoXC1 skoXC1 (33/560+(skoXC1 skoXC1 (-5/112))))))))<=0]/\[[(skoXC1 skoXC1 skoXC1 skoXC1 (-13/60+(skoXC1 skoXC1 (-9/280+(skoXC1 skoXC1 (-5/28))))))<=0]/\[[(skoXC1 skoXC1 skoXC1 skoXC1 (-17/120+(skoXC1 skoXC1 (-27/280+(skoXC1 skoXC1 (5/224))))))<=0]/\[[(skoXC1 skoXC1 (1/3+(skoXC1 skoXC1 (3/20+(skoXC1 skoXC1 (5/56))))))<=1]/\[[(skoXC1 skoXC1 skoXC1 skoXC1 (32/15+(skoXC1 skoXC1 (-272/105+(skoXC1 skoXC1 (-1163/105+(skoXC1 skoXC1 (1753/105+(skoXC1 skoXC1 (-169/28+(skoXC1 skoXC1 (25/56))))))))))))<=0]/\[[-1<(skoXC1 skoXC1 (1/6+(skoXC1 skoXC1 (3/40+(skoXC1 skoXC1 (5/112))))))]/\[(skoXC1 (-1+(skoXC1 skoXC1 (-1/6+(skoXC1 skoXC1 (-3/40+(skoXC1 skoXC1 (-5/112))))))))<=0]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]].

% In SMTLib2 format:
(declare-fun skoXC1 () Real) (assert (and (<= (* skoXC1 (* skoXC1 (+ (/ (- 1.) 6.) (* skoXC1 (* skoXC1 (+ (/ (- 3.) 40.) (* skoXC1 (* skoXC1 (+ (/ (- 5.) 112.) (* skoXC1 (* skoXC1 (+ (/ (- 35.) 1152.) (* skoXC1 (* skoXC1 (/ (- 63.) 2816.))))))))))))))) 1.) (and (<= (* skoXC1 (* skoXC1 (+ (/ (- 1.) 2.) (* skoXC1 (* skoXC1 (+ (/ 7. 120.) (* skoXC1 (* skoXC1 (+ (/ 33. 560.) (* skoXC1 (* skoXC1 (+ (/ 125. 2688.) (* skoXC1 (* skoXC1 (+ (/ 931. 25344.) (* skoXC1 (* skoXC1 (/ (- 63.) 2816.)))))))))))))))))) 0.) (and (<= (* skoXC1 (* skoXC1 (+ (/ (- 1.) 6.) (* skoXC1 (* skoXC1 (+ (/ (- 3.) 40.) (* skoXC1 (* skoXC1 (+ (/ (- 5.) 112.) (* skoXC1 (* skoXC1 (+ (/ (- 35.) 1152.) (* skoXC1 (* skoXC1 (/ (- 63.) 2816.))))))))))))))) 1.) (and (<= (* skoXC1 (+ (- 1.) (* skoXC1 (* skoXC1 (+ (/ 1. 3.) (* skoXC1 (* skoXC1 (+ (/ 3. 20.) (* skoXC1 (* skoXC1 (+ (/ 5. 56.) (* skoXC1 (* skoXC1 (+ (/ 35. 576.) (* skoXC1 (* skoXC1 (/ 63. 1408.))))))))))))))))) 0.) (and (<= (* skoXC1 (+ (- 1.) (* skoXC1 (* skoXC1 (+ (/ (- 1.) 6.) (* skoXC1 (* skoXC1 (/ (- 3.) 40.)))))))) 0.) (and (> (* skoXC1 (* skoXC1 (+ (/ 1. 6.) (* skoXC1 (* skoXC1 (/ 3. 40.)))))) (- 1.)) (and (<= (* skoXC1 (* skoXC1 (* skoXC1 (* skoXC1 (+ (/ 32. 15.) (* skoXC1 (* skoXC1 (+ (/ (- 296.) 15.) (* skoXC1 (* skoXC1 (+ (/ 391. 15.) (* skoXC1 (* skoXC1 (+ (/ (- 146.) 15.) (* skoXC1 (* skoXC1 (/ 3. 4.))))))))))))))))) 0.) (and (<= (* skoXC1 (* skoXC1 (+ (/ 1. 3.) (* skoXC1 (* skoXC1 (/ 3. 20.)))))) 1.) (and (<= (* skoXC1 (* skoXC1 (* skoXC1 (* skoXC1 (+ (/ (- 17.) 120.) (* skoXC1 (* skoXC1 (/ 3. 80.)))))))) 0.) (and (<= (* skoXC1 (* skoXC1 (* skoXC1 (* skoXC1 (+ (/ (- 13.) 60.) (* skoXC1 (* skoXC1 (/ (- 3.) 10.)))))))) 0.) (and (<= (* skoXC1 (* skoXC1 (+ (/ (- 1.) 2.) (* skoXC1 (* skoXC1 (+ (/ 7. 120.) (* skoXC1 (* skoXC1 (/ (- 3.) 40.))))))))) 0.) (and (<= (* skoXC1 (* skoXC1 (+ (/ (- 1.) 6.) (* skoXC1 (* skoXC1 (/ (- 3.) 40.)))))) 1.) (and (<= (* skoXC1 (+ (- 1.) (* skoXC1 (* skoXC1 (+ (/ 1. 3.) (* skoXC1 (* skoXC1 (/ 3. 20.)))))))) 0.) (and (> (* skoXC1 skoXC1) 0.) (and (<= (* skoXC1 (* skoXC1 (+ 80. (* skoXC1 (* skoXC1 (+ (- 40.) (* skoXC1 (* skoXC1 (+ 6. (* skoXC1 (* skoXC1 (/ (- 1.) 8.)))))))))))) 48.) (and (> (* skoXC1 (* skoXC1 (+ (- 80.) (* skoXC1 (* skoXC1 (+ 40. (* skoXC1 (* skoXC1 (+ (- 6.) (* skoXC1 (* skoXC1 (/ 1. 8.)))))))))))) (- 48.)) (and (<= (* skoXC1 (* skoXC1 (+ 24. (* skoXC1 (* skoXC1 (+ (- 10.) (* skoXC1 skoXC1))))))) 16.) (and (<= (* skoXC1 (* skoXC1 (/ 1. 2.))) 3.) (and (> (* skoXC1 (* skoXC1 (/ (- 1.) 2.))) (- 3.)) (and (> skoXC1 0.) (and (> (/ 7. 8.) skoXC1) (and (<= (* skoXC1 (+ (- 1.) (* skoXC1 (* skoXC1 (/ 1. 3.))))) 0.) (and (<= (* skoXC1 (* skoXC1 (/ (- 1.) 6.))) 1.) (and (<= (* skoXC1 (* skoXC1 (+ (/ (- 1.) 2.) (* skoXC1 (* skoXC1 (/ (- 1.) 6.)))))) 0.) (and (<= (* skoXC1 skoXC1) 2.) (and (<= (* skoXC1 (* skoXC1 (* skoXC1 (* skoXC1 (/ (- 2.) 3.))))) 0.) (and (<= (* skoXC1 (+ (- 1.) (* skoXC1 (* skoXC1 (/ (- 1.) 6.))))) 0.) (and (<= (* skoXC1 (* skoXC1 (/ 1. 3.))) 1.) (and (<= (* skoXC1 (* skoXC1 (+ 256. (* skoXC1 (* skoXC1 (+ (- 160.) (* skoXC1 (* skoXC1 (+ 32. (* skoXC1 (* skoXC1 (- 1.)))))))))))) 128.) (and (<= (* skoXC1 (* skoXC1 (* skoXC1 (* skoXC1 (+ (/ (- 80.) 3.) (* skoXC1 (* skoXC1 (+ (/ 128. 3.) (* skoXC1 (* skoXC1 (+ (/ (- 55.) 3.) (* skoXC1 (* skoXC1 (/ 5. 3.)))))))))))))) 0.) (and (<= (* skoXC1 (+ (- 1.) (* skoXC1 (* skoXC1 (+ (/ 1. 3.) (* skoXC1 (* skoXC1 (+ (/ 3. 20.) (* skoXC1 (* skoXC1 (/ 5. 56.))))))))))) 0.) (and (<= (* skoXC1 (* skoXC1 (+ (/ (- 1.) 6.) (* skoXC1 (* skoXC1 (+ (/ (- 3.) 40.) (* skoXC1 (* skoXC1 (/ (- 5.) 112.))))))))) 1.) (and (<= (* skoXC1 (* skoXC1 (+ (/ (- 1.) 2.) (* skoXC1 (* skoXC1 (+ (/ 7. 120.) (* skoXC1 (* skoXC1 (+ (/ 33. 560.) (* skoXC1 (* skoXC1 (/ (- 5.) 112.)))))))))))) 0.) (and (<= (* skoXC1 (* skoXC1 (* skoXC1 (* skoXC1 (+ (/ (- 13.) 60.) (* skoXC1 (* skoXC1 (+ (/ (- 9.) 280.) (* skoXC1 (* skoXC1 (/ (- 5.) 28.))))))))))) 0.) (and (<= (* skoXC1 (* skoXC1 (* skoXC1 (* skoXC1 (+ (/ (- 17.) 120.) (* skoXC1 (* skoXC1 (+ (/ (- 27.) 280.) (* skoXC1 (* skoXC1 (/ 5. 224.))))))))))) 0.) (and (<= (* skoXC1 (* skoXC1 (+ (/ 1. 3.) (* skoXC1 (* skoXC1 (+ (/ 3. 20.) (* skoXC1 (* skoXC1 (/ 5. 56.))))))))) 1.) (and (<= (* skoXC1 (* skoXC1 (* skoXC1 (* skoXC1 (+ (/ 32. 15.) (* skoXC1 (* skoXC1 (+ (/ (- 272.) 105.) (* skoXC1 (* skoXC1 (+ (/ (- 1163.) 105.) (* skoXC1 (* skoXC1 (+ (/ 1753. 105.) (* skoXC1 (* skoXC1 (+ (/ (- 169.) 28.) (* skoXC1 (* skoXC1 (/ 25. 56.)))))))))))))))))))) 0.) (and (> (* skoXC1 (* skoXC1 (+ (/ 1. 6.) (* skoXC1 (* skoXC1 (+ (/ 3. 40.) (* skoXC1 (* skoXC1 (/ 5. 112.))))))))) (- 1.)) (<= (* skoXC1 (+ (- 1.) (* skoXC1 (* skoXC1 (+ (/ (- 1.) 6.) (* skoXC1 (* skoXC1 (+ (/ (- 3.) 40.) (* skoXC1 (* skoXC1 (/ (- 5.) 112.))))))))))) 0.))))))))))))))))))))))))))))))))))))))))

% In GRF format:
(sequent " MetiTarski formula " (antecedent (<= (* skoXC1 (* skoXC1 (+ (/ (- 1.) 6.) (* skoXC1 (* skoXC1 (+ (/ (- 3.) 40.) (* skoXC1 (* skoXC1 (+ (/ (- 5.) 112.) (* skoXC1 (* skoXC1 (+ (/ (- 35.) 1152.) (* skoXC1 (* skoXC1 (/ (- 63.) 2816.))))))))))))))) 1.) (<= (* skoXC1 (* skoXC1 (+ (/ (- 1.) 2.) (* skoXC1 (* skoXC1 (+ (/ 7. 120.) (* skoXC1 (* skoXC1 (+ (/ 33. 560.) (* skoXC1 (* skoXC1 (+ (/ 125. 2688.) (* skoXC1 (* skoXC1 (+ (/ 931. 25344.) (* skoXC1 (* skoXC1 (/ (- 63.) 2816.)))))))))))))))))) 0.) (<= (* skoXC1 (* skoXC1 (+ (/ (- 1.) 6.) (* skoXC1 (* skoXC1 (+ (/ (- 3.) 40.) (* skoXC1 (* skoXC1 (+ (/ (- 5.) 112.) (* skoXC1 (* skoXC1 (+ (/ (- 35.) 1152.) (* skoXC1 (* skoXC1 (/ (- 63.) 2816.))))))))))))))) 1.) (<= (* skoXC1 (+ (- 1.) (* skoXC1 (* skoXC1 (+ (/ 1. 3.) (* skoXC1 (* skoXC1 (+ (/ 3. 20.) (* skoXC1 (* skoXC1 (+ (/ 5. 56.) (* skoXC1 (* skoXC1 (+ (/ 35. 576.) (* skoXC1 (* skoXC1 (/ 63. 1408.))))))))))))))))) 0.) (<= (* skoXC1 (+ (- 1.) (* skoXC1 (* skoXC1 (+ (/ (- 1.) 6.) (* skoXC1 (* skoXC1 (/ (- 3.) 40.)))))))) 0.) (> (* skoXC1 (* skoXC1 (+ (/ 1. 6.) (* skoXC1 (* skoXC1 (/ 3. 40.)))))) (- 1.)) (<= (* skoXC1 (* skoXC1 (* skoXC1 (* skoXC1 (+ (/ 32. 15.) (* skoXC1 (* skoXC1 (+ (/ (- 296.) 15.) (* skoXC1 (* skoXC1 (+ (/ 391. 15.) (* skoXC1 (* skoXC1 (+ (/ (- 146.) 15.) (* skoXC1 (* skoXC1 (/ 3. 4.))))))))))))))))) 0.) (<= (* skoXC1 (* skoXC1 (+ (/ 1. 3.) (* skoXC1 (* skoXC1 (/ 3. 20.)))))) 1.) (<= (* skoXC1 (* skoXC1 (* skoXC1 (* skoXC1 (+ (/ (- 17.) 120.) (* skoXC1 (* skoXC1 (/ 3. 80.)))))))) 0.) (<= (* skoXC1 (* skoXC1 (* skoXC1 (* skoXC1 (+ (/ (- 13.) 60.) (* skoXC1 (* skoXC1 (/ (- 3.) 10.)))))))) 0.) (<= (* skoXC1 (* skoXC1 (+ (/ (- 1.) 2.) (* skoXC1 (* skoXC1 (+ (/ 7. 120.) (* skoXC1 (* skoXC1 (/ (- 3.) 40.))))))))) 0.) (<= (* skoXC1 (* skoXC1 (+ (/ (- 1.) 6.) (* skoXC1 (* skoXC1 (/ (- 3.) 40.)))))) 1.) (<= (* skoXC1 (+ (- 1.) (* skoXC1 (* skoXC1 (+ (/ 1. 3.) (* skoXC1 (* skoXC1 (/ 3. 20.)))))))) 0.) (> (* skoXC1 skoXC1) 0.) (<= (* skoXC1 (* skoXC1 (+ 80. (* skoXC1 (* skoXC1 (+ (- 40.) (* skoXC1 (* skoXC1 (+ 6. (* skoXC1 (* skoXC1 (/ (- 1.) 8.)))))))))))) 48.) (> (* skoXC1 (* skoXC1 (+ (- 80.) (* skoXC1 (* skoXC1 (+ 40. (* skoXC1 (* skoXC1 (+ (- 6.) (* skoXC1 (* skoXC1 (/ 1. 8.)))))))))))) (- 48.)) (<= (* skoXC1 (* skoXC1 (+ 24. (* skoXC1 (* skoXC1 (+ (- 10.) (* skoXC1 skoXC1))))))) 16.) (<= (* skoXC1 (* skoXC1 (/ 1. 2.))) 3.) (> (* skoXC1 (* skoXC1 (/ (- 1.) 2.))) (- 3.)) (> skoXC1 0.) (> (/ 7. 8.) skoXC1) (<= (* skoXC1 (+ (- 1.) (* skoXC1 (* skoXC1 (/ 1. 3.))))) 0.) (<= (* skoXC1 (* skoXC1 (/ (- 1.) 6.))) 1.) (<= (* skoXC1 (* skoXC1 (+ (/ (- 1.) 2.) (* skoXC1 (* skoXC1 (/ (- 1.) 6.)))))) 0.) (<= (* skoXC1 skoXC1) 2.) (<= (* skoXC1 (* skoXC1 (* skoXC1 (* skoXC1 (/ (- 2.) 3.))))) 0.) (<= (* skoXC1 (+ (- 1.) (* skoXC1 (* skoXC1 (/ (- 1.) 6.))))) 0.) (<= (* skoXC1 (* skoXC1 (/ 1. 3.))) 1.) (<= (* skoXC1 (* skoXC1 (+ 256. (* skoXC1 (* skoXC1 (+ (- 160.) (* skoXC1 (* skoXC1 (+ 32. (* skoXC1 (* skoXC1 (- 1.)))))))))))) 128.) (<= (* skoXC1 (* skoXC1 (* skoXC1 (* skoXC1 (+ (/ (- 80.) 3.) (* skoXC1 (* skoXC1 (+ (/ 128. 3.) (* skoXC1 (* skoXC1 (+ (/ (- 55.) 3.) (* skoXC1 (* skoXC1 (/ 5. 3.)))))))))))))) 0.) (<= (* skoXC1 (+ (- 1.) (* skoXC1 (* skoXC1 (+ (/ 1. 3.) (* skoXC1 (* skoXC1 (+ (/ 3. 20.) (* skoXC1 (* skoXC1 (/ 5. 56.))))))))))) 0.) (<= (* skoXC1 (* skoXC1 (+ (/ (- 1.) 6.) (* skoXC1 (* skoXC1 (+ (/ (- 3.) 40.) (* skoXC1 (* skoXC1 (/ (- 5.) 112.))))))))) 1.) (<= (* skoXC1 (* skoXC1 (+ (/ (- 1.) 2.) (* skoXC1 (* skoXC1 (+ (/ 7. 120.) (* skoXC1 (* skoXC1 (+ (/ 33. 560.) (* skoXC1 (* skoXC1 (/ (- 5.) 112.)))))))))))) 0.) (<= (* skoXC1 (* skoXC1 (* skoXC1 (* skoXC1 (+ (/ (- 13.) 60.) (* skoXC1 (* skoXC1 (+ (/ (- 9.) 280.) (* skoXC1 (* skoXC1 (/ (- 5.) 28.))))))))))) 0.) (<= (* skoXC1 (* skoXC1 (* skoXC1 (* skoXC1 (+ (/ (- 17.) 120.) (* skoXC1 (* skoXC1 (+ (/ (- 27.) 280.) (* skoXC1 (* skoXC1 (/ 5. 224.))))))))))) 0.) (<= (* skoXC1 (* skoXC1 (+ (/ 1. 3.) (* skoXC1 (* skoXC1 (+ (/ 3. 20.) (* skoXC1 (* skoXC1 (/ 5. 56.))))))))) 1.) (<= (* skoXC1 (* skoXC1 (* skoXC1 (* skoXC1 (+ (/ 32. 15.) (* skoXC1 (* skoXC1 (+ (/ (- 272.) 105.) (* skoXC1 (* skoXC1 (+ (/ (- 1163.) 105.) (* skoXC1 (* skoXC1 (+ (/ 1753. 105.) (* skoXC1 (* skoXC1 (+ (/ (- 169.) 28.) (* skoXC1 (* skoXC1 (/ 25. 56.)))))))))))))))))))) 0.) (> (* skoXC1 (* skoXC1 (+ (/ 1. 6.) (* skoXC1 (* skoXC1 (+ (/ 3. 40.) (* skoXC1 (* skoXC1 (/ 5. 112.))))))))) (- 1.))) (succedent (> (* skoXC1 (+ (- 1.) (* skoXC1 (* skoXC1 (+ (/ (- 1.) 6.) (* skoXC1 (* skoXC1 (+ (/ (- 3.) 40.) (* skoXC1 (* skoXC1 (/ (- 5.) 112.))))))))))) 0.)))
-----[end problem]-----

-----[begin problem]-----
% In Mathematica format:
Timing[Resolve[Exists[{skoXC1}, And[skoXC1*skoXC1<=2,skoXC1*skoXC1*((-1/2)+skoXC1*skoXC1*((7/120)+skoXC1*skoXC1*((33/560)+skoXC1*skoXC1*((125/2688)+skoXC1*skoXC1*((931/25344)+skoXC1*skoXC1*(-63/2816))))))<=0,skoXC1*skoXC1*((-1/6)+skoXC1*skoXC1*((-3/40)+skoXC1*skoXC1*((-5/112)+skoXC1*skoXC1*((-35/1152)+skoXC1*skoXC1*(-63/2816)))))<=1,skoXC1*(-1+skoXC1*skoXC1*((1/3)+skoXC1*skoXC1*((3/20)+skoXC1*skoXC1*((5/56)+skoXC1*skoXC1*((35/576)+skoXC1*skoXC1*(63/1408))))))<=0,skoXC1*(-1+skoXC1*skoXC1*((-1/6)+skoXC1*skoXC1*(-3/40)))<=0,skoXC1*skoXC1*((1/6)+skoXC1*skoXC1*(3/40))>-1,skoXC1*skoXC1*skoXC1*skoXC1*((32/15)+skoXC1*skoXC1*((-296/15)+skoXC1*skoXC1*((391/15)+skoXC1*skoXC1*((-146/15)+skoXC1*skoXC1*(3/4)))))<=0,skoXC1*skoXC1*((1/3)+skoXC1*skoXC1*(3/20))<=1,skoXC1*skoXC1*skoXC1*skoXC1*((-17/120)+skoXC1*skoXC1*(3/80))<=0,skoXC1*skoXC1*skoXC1*skoXC1*((-13/60)+skoXC1*skoXC1*(-3/10))<=0,skoXC1*skoXC1*((-1/2)+skoXC1*skoXC1*((7/120)+skoXC1*skoXC1*(-3/40)))<=0,skoXC1*skoXC1*((-1/6)+skoXC1*skoXC1*(-3/40))<=1,skoXC1*(-1+skoXC1*skoXC1*((1/3)+skoXC1*skoXC1*(3/20)))<=0,skoXC1*skoXC1>0,skoXC1*skoXC1*(80+skoXC1*skoXC1*(-40+skoXC1*skoXC1*(6+skoXC1*skoXC1*(-1/8))))<=48,skoXC1*skoXC1*(-80+skoXC1*skoXC1*(40+skoXC1*skoXC1*(-6+skoXC1*skoXC1*(1/8))))>-48,skoXC1*skoXC1*(24+skoXC1*skoXC1*(-10+skoXC1*skoXC1))<=16,skoXC1*skoXC1*(1/2)<=3,skoXC1*skoXC1*(-1/2)>-3,skoXC1>0,(7/8)>skoXC1,skoXC1*(-1+skoXC1*skoXC1*(1/3))<=0,skoXC1*skoXC1*(-1/6)<=1,skoXC1*skoXC1*((-1/2)+skoXC1*skoXC1*(-1/6))<=0,skoXC1*skoXC1<=2,skoXC1*skoXC1*skoXC1*skoXC1*(-2/3)<=0,skoXC1*(-1+skoXC1*skoXC1*(-1/6))<=0,skoXC1*skoXC1*(1/3)<=1,skoXC1*skoXC1*(256+skoXC1*skoXC1*(-160+skoXC1*skoXC1*(32+skoXC1*skoXC1*-1)))<=128,skoXC1*skoXC1*skoXC1*skoXC1*((-80/3)+skoXC1*skoXC1*((128/3)+skoXC1*skoXC1*((-55/3)+skoXC1*skoXC1*(5/3))))<=0,skoXC1*(-1+skoXC1*skoXC1*((1/3)+skoXC1*skoXC1*((3/20)+skoXC1*skoXC1*(5/56))))<=0,skoXC1*skoXC1*((-1/6)+skoXC1*skoXC1*((-3/40)+skoXC1*skoXC1*(-5/112)))<=1,skoXC1*skoXC1*((-1/2)+skoXC1*skoXC1*((7/120)+skoXC1*skoXC1*((33/560)+skoXC1*skoXC1*(-5/112))))<=0,skoXC1*skoXC1*skoXC1*skoXC1*((-13/60)+skoXC1*skoXC1*((-9/280)+skoXC1*skoXC1*(-5/28)))<=0,skoXC1*skoXC1*skoXC1*skoXC1*((-17/120)+skoXC1*skoXC1*((-27/280)+skoXC1*skoXC1*(5/224)))<=0,skoXC1*skoXC1*((1/3)+skoXC1*skoXC1*((3/20)+skoXC1*skoXC1*(5/56)))<=1,skoXC1*skoXC1*skoXC1*skoXC1*((32/15)+skoXC1*skoXC1*((-272/105)+skoXC1*skoXC1*((-1163/105)+skoXC1*skoXC1*((1753/105)+skoXC1*skoXC1*((-169/28)+skoXC1*skoXC1*(25/56))))))<=0,skoXC1*skoXC1*((1/6)+skoXC1*skoXC1*((3/40)+skoXC1*skoXC1*(5/112)))>-1,skoXC1*(-1+skoXC1*skoXC1*((-1/6)+skoXC1*skoXC1*((-3/40)+skoXC1*skoXC1*(-5/112))))<=0]], Reals]]

% In QepcadB format:
(E skoXC1) [[(skoXC1 skoXC1)<=2]/\[[(skoXC1 skoXC1 (-1/2+(skoXC1 skoXC1 (7/120+(skoXC1 skoXC1 (33/560+(skoXC1 skoXC1 (125/2688+(skoXC1 skoXC1 (931/25344+(skoXC1 skoXC1 (-63/2816))))))))))))<=0]/\[[(skoXC1 skoXC1 (-1/6+(skoXC1 skoXC1 (-3/40+(skoXC1 skoXC1 (-5/112+(skoXC1 skoXC1 (-35/1152+(skoXC1 skoXC1 (-63/2816))))))))))<=1]/\[[(skoXC1 (-1+(skoXC1 skoXC1 (1/3+(skoXC1 skoXC1 (3/20+(skoXC1 skoXC1 (5/56+(skoXC1 skoXC1 (35/576+(skoXC1 skoXC1 (63/1408))))))))))))<=0]/\[[(skoXC1 (-1+(skoXC1 skoXC1 (-1/6+(skoXC1 skoXC1 (-3/40))))))<=0]/\[[-1<(skoXC1 skoXC1 (1/6+(skoXC1 skoXC1 (3/40))))]/\[[(skoXC1 skoXC1 skoXC1 skoXC1 (32/15+(skoXC1 skoXC1 (-296/15+(skoXC1 skoXC1 (391/15+(skoXC1 skoXC1 (-146/15+(skoXC1 skoXC1 (3/4))))))))))<=0]/\[[(skoXC1 skoXC1 (1/3+(skoXC1 skoXC1 (3/20))))<=1]/\[[(skoXC1 skoXC1 skoXC1 skoXC1 (-17/120+(skoXC1 skoXC1 (3/80))))<=0]/\[[(skoXC1 skoXC1 skoXC1 skoXC1 (-13/60+(skoXC1 skoXC1 (-3/10))))<=0]/\[[(skoXC1 skoXC1 (-1/2+(skoXC1 skoXC1 (7/120+(skoXC1 skoXC1 (-3/40))))))<=0]/\[[(skoXC1 skoXC1 (-1/6+(skoXC1 skoXC1 (-3/40))))<=1]/\[[(skoXC1 (-1+(skoXC1 skoXC1 (1/3+(skoXC1 skoXC1 (3/20))))))<=0]/\[[0<(skoXC1 skoXC1)]/\[[(skoXC1 skoXC1 (80+(skoXC1 skoXC1 (-40+(skoXC1 skoXC1 (6+(skoXC1 skoXC1 (-1/8))))))))<=48]/\[[-48<(skoXC1 skoXC1 (-80+(skoXC1 skoXC1 (40+(skoXC1 skoXC1 (-6+(skoXC1 skoXC1 (1/8))))))))]/\[[(skoXC1 skoXC1 (24+(skoXC1 skoXC1 (-10+(skoXC1 skoXC1)))))<=16]/\[[(skoXC1 skoXC1 (1/2))<=3]/\[[-3<(skoXC1 skoXC1 (-1/2))]/\[[0<skoXC1]/\[[skoXC1<7/8]/\[[(skoXC1 (-1+(skoXC1 skoXC1 (1/3))))<=0]/\[[(skoXC1 skoXC1 (-1/6))<=1]/\[[(skoXC1 skoXC1 (-1/2+(skoXC1 skoXC1 (-1/6))))<=0]/\[[(skoXC1 skoXC1)<=2]/\[[(skoXC1 skoXC1 skoXC1 skoXC1 (-2/3))<=0]/\[[(skoXC1 (-1+(skoXC1 skoXC1 (-1/6))))<=0]/\[[(skoXC1 skoXC1 (1/3))<=1]/\[[(skoXC1 skoXC1 (256+(skoXC1 skoXC1 (-160+(skoXC1 skoXC1 (32+(skoXC1 skoXC1 (-1))))))))<=128]/\[[(skoXC1 skoXC1 skoXC1 skoXC1 (-80/3+(skoXC1 skoXC1 (128/3+(skoXC1 skoXC1 (-55/3+(skoXC1 skoXC1 (5/3))))))))<=0]/\[[(skoXC1 (-1+(skoXC1 skoXC1 (1/3+(skoXC1 skoXC1 (3/20+(skoXC1 skoXC1 (5/56))))))))<=0]/\[[(skoXC1 skoXC1 (-1/6+(skoXC1 skoXC1 (-3/40+(skoXC1 skoXC1 (-5/112))))))<=1]/\[[(skoXC1 skoXC1 (-1/2+(skoXC1 skoXC1 (7/120+(skoXC1 skoXC1 (33/560+(skoXC1 skoXC1 (-5/112))))))))<=0]/\[[(skoXC1 skoXC1 skoXC1 skoXC1 (-13/60+(skoXC1 skoXC1 (-9/280+(skoXC1 skoXC1 (-5/28))))))<=0]/\[[(skoXC1 skoXC1 skoXC1 skoXC1 (-17/120+(skoXC1 skoXC1 (-27/280+(skoXC1 skoXC1 (5/224))))))<=0]/\[[(skoXC1 skoXC1 (1/3+(skoXC1 skoXC1 (3/20+(skoXC1 skoXC1 (5/56))))))<=1]/\[[(skoXC1 skoXC1 skoXC1 skoXC1 (32/15+(skoXC1 skoXC1 (-272/105+(skoXC1 skoXC1 (-1163/105+(skoXC1 skoXC1 (1753/105+(skoXC1 skoXC1 (-169/28+(skoXC1 skoXC1 (25/56))))))))))))<=0]/\[[-1<(skoXC1 skoXC1 (1/6+(skoXC1 skoXC1 (3/40+(skoXC1 skoXC1 (5/112))))))]/\[(skoXC1 (-1+(skoXC1 skoXC1 (-1/6+(skoXC1 skoXC1 (-3/40+(skoXC1 skoXC1 (-5/112))))))))<=0]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]].

% In SMTLib2 format:
(declare-fun skoXC1 () Real) (assert (and (<= (* skoXC1 skoXC1) 2.) (and (<= (* skoXC1 (* skoXC1 (+ (/ (- 1.) 2.) (* skoXC1 (* skoXC1 (+ (/ 7. 120.) (* skoXC1 (* skoXC1 (+ (/ 33. 560.) (* skoXC1 (* skoXC1 (+ (/ 125. 2688.) (* skoXC1 (* skoXC1 (+ (/ 931. 25344.) (* skoXC1 (* skoXC1 (/ (- 63.) 2816.)))))))))))))))))) 0.) (and (<= (* skoXC1 (* skoXC1 (+ (/ (- 1.) 6.) (* skoXC1 (* skoXC1 (+ (/ (- 3.) 40.) (* skoXC1 (* skoXC1 (+ (/ (- 5.) 112.) (* skoXC1 (* skoXC1 (+ (/ (- 35.) 1152.) (* skoXC1 (* skoXC1 (/ (- 63.) 2816.))))))))))))))) 1.) (and (<= (* skoXC1 (+ (- 1.) (* skoXC1 (* skoXC1 (+ (/ 1. 3.) (* skoXC1 (* skoXC1 (+ (/ 3. 20.) (* skoXC1 (* skoXC1 (+ (/ 5. 56.) (* skoXC1 (* skoXC1 (+ (/ 35. 576.) (* skoXC1 (* skoXC1 (/ 63. 1408.))))))))))))))))) 0.) (and (<= (* skoXC1 (+ (- 1.) (* skoXC1 (* skoXC1 (+ (/ (- 1.) 6.) (* skoXC1 (* skoXC1 (/ (- 3.) 40.)))))))) 0.) (and (> (* skoXC1 (* skoXC1 (+ (/ 1. 6.) (* skoXC1 (* skoXC1 (/ 3. 40.)))))) (- 1.)) (and (<= (* skoXC1 (* skoXC1 (* skoXC1 (* skoXC1 (+ (/ 32. 15.) (* skoXC1 (* skoXC1 (+ (/ (- 296.) 15.) (* skoXC1 (* skoXC1 (+ (/ 391. 15.) (* skoXC1 (* skoXC1 (+ (/ (- 146.) 15.) (* skoXC1 (* skoXC1 (/ 3. 4.))))))))))))))))) 0.) (and (<= (* skoXC1 (* skoXC1 (+ (/ 1. 3.) (* skoXC1 (* skoXC1 (/ 3. 20.)))))) 1.) (and (<= (* skoXC1 (* skoXC1 (* skoXC1 (* skoXC1 (+ (/ (- 17.) 120.) (* skoXC1 (* skoXC1 (/ 3. 80.)))))))) 0.) (and (<= (* skoXC1 (* skoXC1 (* skoXC1 (* skoXC1 (+ (/ (- 13.) 60.) (* skoXC1 (* skoXC1 (/ (- 3.) 10.)))))))) 0.) (and (<= (* skoXC1 (* skoXC1 (+ (/ (- 1.) 2.) (* skoXC1 (* skoXC1 (+ (/ 7. 120.) (* skoXC1 (* skoXC1 (/ (- 3.) 40.))))))))) 0.) (and (<= (* skoXC1 (* skoXC1 (+ (/ (- 1.) 6.) (* skoXC1 (* skoXC1 (/ (- 3.) 40.)))))) 1.) (and (<= (* skoXC1 (+ (- 1.) (* skoXC1 (* skoXC1 (+ (/ 1. 3.) (* skoXC1 (* skoXC1 (/ 3. 20.)))))))) 0.) (and (> (* skoXC1 skoXC1) 0.) (and (<= (* skoXC1 (* skoXC1 (+ 80. (* skoXC1 (* skoXC1 (+ (- 40.) (* skoXC1 (* skoXC1 (+ 6. (* skoXC1 (* skoXC1 (/ (- 1.) 8.)))))))))))) 48.) (and (> (* skoXC1 (* skoXC1 (+ (- 80.) (* skoXC1 (* skoXC1 (+ 40. (* skoXC1 (* skoXC1 (+ (- 6.) (* skoXC1 (* skoXC1 (/ 1. 8.)))))))))))) (- 48.)) (and (<= (* skoXC1 (* skoXC1 (+ 24. (* skoXC1 (* skoXC1 (+ (- 10.) (* skoXC1 skoXC1))))))) 16.) (and (<= (* skoXC1 (* skoXC1 (/ 1. 2.))) 3.) (and (> (* skoXC1 (* skoXC1 (/ (- 1.) 2.))) (- 3.)) (and (> skoXC1 0.) (and (> (/ 7. 8.) skoXC1) (and (<= (* skoXC1 (+ (- 1.) (* skoXC1 (* skoXC1 (/ 1. 3.))))) 0.) (and (<= (* skoXC1 (* skoXC1 (/ (- 1.) 6.))) 1.) (and (<= (* skoXC1 (* skoXC1 (+ (/ (- 1.) 2.) (* skoXC1 (* skoXC1 (/ (- 1.) 6.)))))) 0.) (and (<= (* skoXC1 skoXC1) 2.) (and (<= (* skoXC1 (* skoXC1 (* skoXC1 (* skoXC1 (/ (- 2.) 3.))))) 0.) (and (<= (* skoXC1 (+ (- 1.) (* skoXC1 (* skoXC1 (/ (- 1.) 6.))))) 0.) (and (<= (* skoXC1 (* skoXC1 (/ 1. 3.))) 1.) (and (<= (* skoXC1 (* skoXC1 (+ 256. (* skoXC1 (* skoXC1 (+ (- 160.) (* skoXC1 (* skoXC1 (+ 32. (* skoXC1 (* skoXC1 (- 1.)))))))))))) 128.) (and (<= (* skoXC1 (* skoXC1 (* skoXC1 (* skoXC1 (+ (/ (- 80.) 3.) (* skoXC1 (* skoXC1 (+ (/ 128. 3.) (* skoXC1 (* skoXC1 (+ (/ (- 55.) 3.) (* skoXC1 (* skoXC1 (/ 5. 3.)))))))))))))) 0.) (and (<= (* skoXC1 (+ (- 1.) (* skoXC1 (* skoXC1 (+ (/ 1. 3.) (* skoXC1 (* skoXC1 (+ (/ 3. 20.) (* skoXC1 (* skoXC1 (/ 5. 56.))))))))))) 0.) (and (<= (* skoXC1 (* skoXC1 (+ (/ (- 1.) 6.) (* skoXC1 (* skoXC1 (+ (/ (- 3.) 40.) (* skoXC1 (* skoXC1 (/ (- 5.) 112.))))))))) 1.) (and (<= (* skoXC1 (* skoXC1 (+ (/ (- 1.) 2.) (* skoXC1 (* skoXC1 (+ (/ 7. 120.) (* skoXC1 (* skoXC1 (+ (/ 33. 560.) (* skoXC1 (* skoXC1 (/ (- 5.) 112.)))))))))))) 0.) (and (<= (* skoXC1 (* skoXC1 (* skoXC1 (* skoXC1 (+ (/ (- 13.) 60.) (* skoXC1 (* skoXC1 (+ (/ (- 9.) 280.) (* skoXC1 (* skoXC1 (/ (- 5.) 28.))))))))))) 0.) (and (<= (* skoXC1 (* skoXC1 (* skoXC1 (* skoXC1 (+ (/ (- 17.) 120.) (* skoXC1 (* skoXC1 (+ (/ (- 27.) 280.) (* skoXC1 (* skoXC1 (/ 5. 224.))))))))))) 0.) (and (<= (* skoXC1 (* skoXC1 (+ (/ 1. 3.) (* skoXC1 (* skoXC1 (+ (/ 3. 20.) (* skoXC1 (* skoXC1 (/ 5. 56.))))))))) 1.) (and (<= (* skoXC1 (* skoXC1 (* skoXC1 (* skoXC1 (+ (/ 32. 15.) (* skoXC1 (* skoXC1 (+ (/ (- 272.) 105.) (* skoXC1 (* skoXC1 (+ (/ (- 1163.) 105.) (* skoXC1 (* skoXC1 (+ (/ 1753. 105.) (* skoXC1 (* skoXC1 (+ (/ (- 169.) 28.) (* skoXC1 (* skoXC1 (/ 25. 56.)))))))))))))))))))) 0.) (and (> (* skoXC1 (* skoXC1 (+ (/ 1. 6.) (* skoXC1 (* skoXC1 (+ (/ 3. 40.) (* skoXC1 (* skoXC1 (/ 5. 112.))))))))) (- 1.)) (<= (* skoXC1 (+ (- 1.) (* skoXC1 (* skoXC1 (+ (/ (- 1.) 6.) (* skoXC1 (* skoXC1 (+ (/ (- 3.) 40.) (* skoXC1 (* skoXC1 (/ (- 5.) 112.))))))))))) 0.))))))))))))))))))))))))))))))))))))))))

% In GRF format:
(sequent " MetiTarski formula " (antecedent (<= (* skoXC1 skoXC1) 2.) (<= (* skoXC1 (* skoXC1 (+ (/ (- 1.) 2.) (* skoXC1 (* skoXC1 (+ (/ 7. 120.) (* skoXC1 (* skoXC1 (+ (/ 33. 560.) (* skoXC1 (* skoXC1 (+ (/ 125. 2688.) (* skoXC1 (* skoXC1 (+ (/ 931. 25344.) (* skoXC1 (* skoXC1 (/ (- 63.) 2816.)))))))))))))))))) 0.) (<= (* skoXC1 (* skoXC1 (+ (/ (- 1.) 6.) (* skoXC1 (* skoXC1 (+ (/ (- 3.) 40.) (* skoXC1 (* skoXC1 (+ (/ (- 5.) 112.) (* skoXC1 (* skoXC1 (+ (/ (- 35.) 1152.) (* skoXC1 (* skoXC1 (/ (- 63.) 2816.))))))))))))))) 1.) (<= (* skoXC1 (+ (- 1.) (* skoXC1 (* skoXC1 (+ (/ 1. 3.) (* skoXC1 (* skoXC1 (+ (/ 3. 20.) (* skoXC1 (* skoXC1 (+ (/ 5. 56.) (* skoXC1 (* skoXC1 (+ (/ 35. 576.) (* skoXC1 (* skoXC1 (/ 63. 1408.))))))))))))))))) 0.) (<= (* skoXC1 (+ (- 1.) (* skoXC1 (* skoXC1 (+ (/ (- 1.) 6.) (* skoXC1 (* skoXC1 (/ (- 3.) 40.)))))))) 0.) (> (* skoXC1 (* skoXC1 (+ (/ 1. 6.) (* skoXC1 (* skoXC1 (/ 3. 40.)))))) (- 1.)) (<= (* skoXC1 (* skoXC1 (* skoXC1 (* skoXC1 (+ (/ 32. 15.) (* skoXC1 (* skoXC1 (+ (/ (- 296.) 15.) (* skoXC1 (* skoXC1 (+ (/ 391. 15.) (* skoXC1 (* skoXC1 (+ (/ (- 146.) 15.) (* skoXC1 (* skoXC1 (/ 3. 4.))))))))))))))))) 0.) (<= (* skoXC1 (* skoXC1 (+ (/ 1. 3.) (* skoXC1 (* skoXC1 (/ 3. 20.)))))) 1.) (<= (* skoXC1 (* skoXC1 (* skoXC1 (* skoXC1 (+ (/ (- 17.) 120.) (* skoXC1 (* skoXC1 (/ 3. 80.)))))))) 0.) (<= (* skoXC1 (* skoXC1 (* skoXC1 (* skoXC1 (+ (/ (- 13.) 60.) (* skoXC1 (* skoXC1 (/ (- 3.) 10.)))))))) 0.) (<= (* skoXC1 (* skoXC1 (+ (/ (- 1.) 2.) (* skoXC1 (* skoXC1 (+ (/ 7. 120.) (* skoXC1 (* skoXC1 (/ (- 3.) 40.))))))))) 0.) (<= (* skoXC1 (* skoXC1 (+ (/ (- 1.) 6.) (* skoXC1 (* skoXC1 (/ (- 3.) 40.)))))) 1.) (<= (* skoXC1 (+ (- 1.) (* skoXC1 (* skoXC1 (+ (/ 1. 3.) (* skoXC1 (* skoXC1 (/ 3. 20.)))))))) 0.) (> (* skoXC1 skoXC1) 0.) (<= (* skoXC1 (* skoXC1 (+ 80. (* skoXC1 (* skoXC1 (+ (- 40.) (* skoXC1 (* skoXC1 (+ 6. (* skoXC1 (* skoXC1 (/ (- 1.) 8.)))))))))))) 48.) (> (* skoXC1 (* skoXC1 (+ (- 80.) (* skoXC1 (* skoXC1 (+ 40. (* skoXC1 (* skoXC1 (+ (- 6.) (* skoXC1 (* skoXC1 (/ 1. 8.)))))))))))) (- 48.)) (<= (* skoXC1 (* skoXC1 (+ 24. (* skoXC1 (* skoXC1 (+ (- 10.) (* skoXC1 skoXC1))))))) 16.) (<= (* skoXC1 (* skoXC1 (/ 1. 2.))) 3.) (> (* skoXC1 (* skoXC1 (/ (- 1.) 2.))) (- 3.)) (> skoXC1 0.) (> (/ 7. 8.) skoXC1) (<= (* skoXC1 (+ (- 1.) (* skoXC1 (* skoXC1 (/ 1. 3.))))) 0.) (<= (* skoXC1 (* skoXC1 (/ (- 1.) 6.))) 1.) (<= (* skoXC1 (* skoXC1 (+ (/ (- 1.) 2.) (* skoXC1 (* skoXC1 (/ (- 1.) 6.)))))) 0.) (<= (* skoXC1 skoXC1) 2.) (<= (* skoXC1 (* skoXC1 (* skoXC1 (* skoXC1 (/ (- 2.) 3.))))) 0.) (<= (* skoXC1 (+ (- 1.) (* skoXC1 (* skoXC1 (/ (- 1.) 6.))))) 0.) (<= (* skoXC1 (* skoXC1 (/ 1. 3.))) 1.) (<= (* skoXC1 (* skoXC1 (+ 256. (* skoXC1 (* skoXC1 (+ (- 160.) (* skoXC1 (* skoXC1 (+ 32. (* skoXC1 (* skoXC1 (- 1.)))))))))))) 128.) (<= (* skoXC1 (* skoXC1 (* skoXC1 (* skoXC1 (+ (/ (- 80.) 3.) (* skoXC1 (* skoXC1 (+ (/ 128. 3.) (* skoXC1 (* skoXC1 (+ (/ (- 55.) 3.) (* skoXC1 (* skoXC1 (/ 5. 3.)))))))))))))) 0.) (<= (* skoXC1 (+ (- 1.) (* skoXC1 (* skoXC1 (+ (/ 1. 3.) (* skoXC1 (* skoXC1 (+ (/ 3. 20.) (* skoXC1 (* skoXC1 (/ 5. 56.))))))))))) 0.) (<= (* skoXC1 (* skoXC1 (+ (/ (- 1.) 6.) (* skoXC1 (* skoXC1 (+ (/ (- 3.) 40.) (* skoXC1 (* skoXC1 (/ (- 5.) 112.))))))))) 1.) (<= (* skoXC1 (* skoXC1 (+ (/ (- 1.) 2.) (* skoXC1 (* skoXC1 (+ (/ 7. 120.) (* skoXC1 (* skoXC1 (+ (/ 33. 560.) (* skoXC1 (* skoXC1 (/ (- 5.) 112.)))))))))))) 0.) (<= (* skoXC1 (* skoXC1 (* skoXC1 (* skoXC1 (+ (/ (- 13.) 60.) (* skoXC1 (* skoXC1 (+ (/ (- 9.) 280.) (* skoXC1 (* skoXC1 (/ (- 5.) 28.))))))))))) 0.) (<= (* skoXC1 (* skoXC1 (* skoXC1 (* skoXC1 (+ (/ (- 17.) 120.) (* skoXC1 (* skoXC1 (+ (/ (- 27.) 280.) (* skoXC1 (* skoXC1 (/ 5. 224.))))))))))) 0.) (<= (* skoXC1 (* skoXC1 (+ (/ 1. 3.) (* skoXC1 (* skoXC1 (+ (/ 3. 20.) (* skoXC1 (* skoXC1 (/ 5. 56.))))))))) 1.) (<= (* skoXC1 (* skoXC1 (* skoXC1 (* skoXC1 (+ (/ 32. 15.) (* skoXC1 (* skoXC1 (+ (/ (- 272.) 105.) (* skoXC1 (* skoXC1 (+ (/ (- 1163.) 105.) (* skoXC1 (* skoXC1 (+ (/ 1753. 105.) (* skoXC1 (* skoXC1 (+ (/ (- 169.) 28.) (* skoXC1 (* skoXC1 (/ 25. 56.)))))))))))))))))))) 0.) (> (* skoXC1 (* skoXC1 (+ (/ 1. 6.) (* skoXC1 (* skoXC1 (+ (/ 3. 40.) (* skoXC1 (* skoXC1 (/ 5. 112.))))))))) (- 1.))) (succedent (> (* skoXC1 (+ (- 1.) (* skoXC1 (* skoXC1 (+ (/ (- 1.) 6.) (* skoXC1 (* skoXC1 (+ (/ (- 3.) 40.) (* skoXC1 (* skoXC1 (/ (- 5.) 112.))))))))))) 0.)))
-----[end problem]-----

-----[begin problem]-----
% In Mathematica format:
Timing[Resolve[Exists[{skoXC1}, And[skoXC1*skoXC1*skoXC1*skoXC1*((-13/60)+skoXC1*skoXC1*((-9/280)+skoXC1*skoXC1*((5/1344)+skoXC1*skoXC1*((161/12672)+skoXC1*skoXC1*(-63/704)))))<=0,skoXC1*skoXC1*-1>-2,skoXC1*skoXC1*((-1/2)+skoXC1*skoXC1*((7/120)+skoXC1*skoXC1*((33/560)+skoXC1*skoXC1*((125/2688)+skoXC1*skoXC1*((931/25344)+skoXC1*skoXC1*(-63/2816))))))<=0,skoXC1*skoXC1*((-1/6)+skoXC1*skoXC1*((-3/40)+skoXC1*skoXC1*((-5/112)+skoXC1*skoXC1*((-35/1152)+skoXC1*skoXC1*(-63/2816)))))<=1,skoXC1*(-1+skoXC1*skoXC1*((1/3)+skoXC1*skoXC1*((3/20)+skoXC1*skoXC1*((5/56)+skoXC1*skoXC1*((35/576)+skoXC1*skoXC1*(63/1408))))))<=0,skoXC1*(-1+skoXC1*skoXC1*((-1/6)+skoXC1*skoXC1*(-3/40)))<=0,skoXC1*skoXC1*((1/6)+skoXC1*skoXC1*(3/40))>-1,skoXC1*skoXC1*skoXC1*skoXC1*((32/15)+skoXC1*skoXC1*((-296/15)+skoXC1*skoXC1*((391/15)+skoXC1*skoXC1*((-146/15)+skoXC1*skoXC1*(3/4)))))<=0,skoXC1*skoXC1*((1/3)+skoXC1*skoXC1*(3/20))<=1,skoXC1*skoXC1*skoXC1*skoXC1*((-17/120)+skoXC1*skoXC1*(3/80))<=0,skoXC1*skoXC1*skoXC1*skoXC1*((-13/60)+skoXC1*skoXC1*(-3/10))<=0,skoXC1*skoXC1*((-1/2)+skoXC1*skoXC1*((7/120)+skoXC1*skoXC1*(-3/40)))<=0,skoXC1*skoXC1*((-1/6)+skoXC1*skoXC1*(-3/40))<=1,skoXC1*(-1+skoXC1*skoXC1*((1/3)+skoXC1*skoXC1*(3/20)))<=0,skoXC1*skoXC1>0,skoXC1*skoXC1*(80+skoXC1*skoXC1*(-40+skoXC1*skoXC1*(6+skoXC1*skoXC1*(-1/8))))<=48,skoXC1*skoXC1*(-80+skoXC1*skoXC1*(40+skoXC1*skoXC1*(-6+skoXC1*skoXC1*(1/8))))>-48,skoXC1*skoXC1*(24+skoXC1*skoXC1*(-10+skoXC1*skoXC1))<=16,skoXC1*skoXC1*(1/2)<=3,skoXC1*skoXC1*(-1/2)>-3,skoXC1>0,(7/8)>skoXC1,skoXC1*(-1+skoXC1*skoXC1*(1/3))<=0,skoXC1*skoXC1*(-1/6)<=1,skoXC1*skoXC1*((-1/2)+skoXC1*skoXC1*(-1/6))<=0,skoXC1*skoXC1<=2,skoXC1*skoXC1*skoXC1*skoXC1*(-2/3)<=0,skoXC1*(-1+skoXC1*skoXC1*(-1/6))<=0,skoXC1*skoXC1*(1/3)<=1,skoXC1*skoXC1*(256+skoXC1*skoXC1*(-160+skoXC1*skoXC1*(32+skoXC1*skoXC1*-1)))<=128,skoXC1*skoXC1*skoXC1*skoXC1*((-80/3)+skoXC1*skoXC1*((128/3)+skoXC1*skoXC1*((-55/3)+skoXC1*skoXC1*(5/3))))<=0,skoXC1*(-1+skoXC1*skoXC1*((1/3)+skoXC1*skoXC1*((3/20)+skoXC1*skoXC1*(5/56))))<=0,skoXC1*skoXC1*((-1/6)+skoXC1*skoXC1*((-3/40)+skoXC1*skoXC1*(-5/112)))<=1,skoXC1*skoXC1*((-1/2)+skoXC1*skoXC1*((7/120)+skoXC1*skoXC1*((33/560)+skoXC1*skoXC1*(-5/112))))<=0,skoXC1*skoXC1*skoXC1*skoXC1*((-13/60)+skoXC1*skoXC1*((-9/280)+skoXC1*skoXC1*(-5/28)))<=0,skoXC1*skoXC1*skoXC1*skoXC1*((-17/120)+skoXC1*skoXC1*((-27/280)+skoXC1*skoXC1*(5/224)))<=0,skoXC1*skoXC1*((1/3)+skoXC1*skoXC1*((3/20)+skoXC1*skoXC1*(5/56)))<=1,skoXC1*skoXC1*skoXC1*skoXC1*((32/15)+skoXC1*skoXC1*((-272/105)+skoXC1*skoXC1*((-1163/105)+skoXC1*skoXC1*((1753/105)+skoXC1*skoXC1*((-169/28)+skoXC1*skoXC1*(25/56))))))<=0,skoXC1*skoXC1*((1/6)+skoXC1*skoXC1*((3/40)+skoXC1*skoXC1*(5/112)))>-1,skoXC1*(-1+skoXC1*skoXC1*((-1/6)+skoXC1*skoXC1*((-3/40)+skoXC1*skoXC1*(-5/112))))<=0]], Reals]]

% In QepcadB format:
(E skoXC1) [[(skoXC1 skoXC1 skoXC1 skoXC1 (-13/60+(skoXC1 skoXC1 (-9/280+(skoXC1 skoXC1 (5/1344+(skoXC1 skoXC1 (161/12672+(skoXC1 skoXC1 (-63/704))))))))))<=0]/\[[-2<(skoXC1 skoXC1 (-1))]/\[[(skoXC1 skoXC1 (-1/2+(skoXC1 skoXC1 (7/120+(skoXC1 skoXC1 (33/560+(skoXC1 skoXC1 (125/2688+(skoXC1 skoXC1 (931/25344+(skoXC1 skoXC1 (-63/2816))))))))))))<=0]/\[[(skoXC1 skoXC1 (-1/6+(skoXC1 skoXC1 (-3/40+(skoXC1 skoXC1 (-5/112+(skoXC1 skoXC1 (-35/1152+(skoXC1 skoXC1 (-63/2816))))))))))<=1]/\[[(skoXC1 (-1+(skoXC1 skoXC1 (1/3+(skoXC1 skoXC1 (3/20+(skoXC1 skoXC1 (5/56+(skoXC1 skoXC1 (35/576+(skoXC1 skoXC1 (63/1408))))))))))))<=0]/\[[(skoXC1 (-1+(skoXC1 skoXC1 (-1/6+(skoXC1 skoXC1 (-3/40))))))<=0]/\[[-1<(skoXC1 skoXC1 (1/6+(skoXC1 skoXC1 (3/40))))]/\[[(skoXC1 skoXC1 skoXC1 skoXC1 (32/15+(skoXC1 skoXC1 (-296/15+(skoXC1 skoXC1 (391/15+(skoXC1 skoXC1 (-146/15+(skoXC1 skoXC1 (3/4))))))))))<=0]/\[[(skoXC1 skoXC1 (1/3+(skoXC1 skoXC1 (3/20))))<=1]/\[[(skoXC1 skoXC1 skoXC1 skoXC1 (-17/120+(skoXC1 skoXC1 (3/80))))<=0]/\[[(skoXC1 skoXC1 skoXC1 skoXC1 (-13/60+(skoXC1 skoXC1 (-3/10))))<=0]/\[[(skoXC1 skoXC1 (-1/2+(skoXC1 skoXC1 (7/120+(skoXC1 skoXC1 (-3/40))))))<=0]/\[[(skoXC1 skoXC1 (-1/6+(skoXC1 skoXC1 (-3/40))))<=1]/\[[(skoXC1 (-1+(skoXC1 skoXC1 (1/3+(skoXC1 skoXC1 (3/20))))))<=0]/\[[0<(skoXC1 skoXC1)]/\[[(skoXC1 skoXC1 (80+(skoXC1 skoXC1 (-40+(skoXC1 skoXC1 (6+(skoXC1 skoXC1 (-1/8))))))))<=48]/\[[-48<(skoXC1 skoXC1 (-80+(skoXC1 skoXC1 (40+(skoXC1 skoXC1 (-6+(skoXC1 skoXC1 (1/8))))))))]/\[[(skoXC1 skoXC1 (24+(skoXC1 skoXC1 (-10+(skoXC1 skoXC1)))))<=16]/\[[(skoXC1 skoXC1 (1/2))<=3]/\[[-3<(skoXC1 skoXC1 (-1/2))]/\[[0<skoXC1]/\[[skoXC1<7/8]/\[[(skoXC1 (-1+(skoXC1 skoXC1 (1/3))))<=0]/\[[(skoXC1 skoXC1 (-1/6))<=1]/\[[(skoXC1 skoXC1 (-1/2+(skoXC1 skoXC1 (-1/6))))<=0]/\[[(skoXC1 skoXC1)<=2]/\[[(skoXC1 skoXC1 skoXC1 skoXC1 (-2/3))<=0]/\[[(skoXC1 (-1+(skoXC1 skoXC1 (-1/6))))<=0]/\[[(skoXC1 skoXC1 (1/3))<=1]/\[[(skoXC1 skoXC1 (256+(skoXC1 skoXC1 (-160+(skoXC1 skoXC1 (32+(skoXC1 skoXC1 (-1))))))))<=128]/\[[(skoXC1 skoXC1 skoXC1 skoXC1 (-80/3+(skoXC1 skoXC1 (128/3+(skoXC1 skoXC1 (-55/3+(skoXC1 skoXC1 (5/3))))))))<=0]/\[[(skoXC1 (-1+(skoXC1 skoXC1 (1/3+(skoXC1 skoXC1 (3/20+(skoXC1 skoXC1 (5/56))))))))<=0]/\[[(skoXC1 skoXC1 (-1/6+(skoXC1 skoXC1 (-3/40+(skoXC1 skoXC1 (-5/112))))))<=1]/\[[(skoXC1 skoXC1 (-1/2+(skoXC1 skoXC1 (7/120+(skoXC1 skoXC1 (33/560+(skoXC1 skoXC1 (-5/112))))))))<=0]/\[[(skoXC1 skoXC1 skoXC1 skoXC1 (-13/60+(skoXC1 skoXC1 (-9/280+(skoXC1 skoXC1 (-5/28))))))<=0]/\[[(skoXC1 skoXC1 skoXC1 skoXC1 (-17/120+(skoXC1 skoXC1 (-27/280+(skoXC1 skoXC1 (5/224))))))<=0]/\[[(skoXC1 skoXC1 (1/3+(skoXC1 skoXC1 (3/20+(skoXC1 skoXC1 (5/56))))))<=1]/\[[(skoXC1 skoXC1 skoXC1 skoXC1 (32/15+(skoXC1 skoXC1 (-272/105+(skoXC1 skoXC1 (-1163/105+(skoXC1 skoXC1 (1753/105+(skoXC1 skoXC1 (-169/28+(skoXC1 skoXC1 (25/56))))))))))))<=0]/\[[-1<(skoXC1 skoXC1 (1/6+(skoXC1 skoXC1 (3/40+(skoXC1 skoXC1 (5/112))))))]/\[(skoXC1 (-1+(skoXC1 skoXC1 (-1/6+(skoXC1 skoXC1 (-3/40+(skoXC1 skoXC1 (-5/112))))))))<=0]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]].

% In SMTLib2 format:
(declare-fun skoXC1 () Real) (assert (and (<= (* skoXC1 (* skoXC1 (* skoXC1 (* skoXC1 (+ (/ (- 13.) 60.) (* skoXC1 (* skoXC1 (+ (/ (- 9.) 280.) (* skoXC1 (* skoXC1 (+ (/ 5. 1344.) (* skoXC1 (* skoXC1 (+ (/ 161. 12672.) (* skoXC1 (* skoXC1 (/ (- 63.) 704.))))))))))))))))) 0.) (and (> (* skoXC1 (* skoXC1 (- 1.))) (- 2.)) (and (<= (* skoXC1 (* skoXC1 (+ (/ (- 1.) 2.) (* skoXC1 (* skoXC1 (+ (/ 7. 120.) (* skoXC1 (* skoXC1 (+ (/ 33. 560.) (* skoXC1 (* skoXC1 (+ (/ 125. 2688.) (* skoXC1 (* skoXC1 (+ (/ 931. 25344.) (* skoXC1 (* skoXC1 (/ (- 63.) 2816.)))))))))))))))))) 0.) (and (<= (* skoXC1 (* skoXC1 (+ (/ (- 1.) 6.) (* skoXC1 (* skoXC1 (+ (/ (- 3.) 40.) (* skoXC1 (* skoXC1 (+ (/ (- 5.) 112.) (* skoXC1 (* skoXC1 (+ (/ (- 35.) 1152.) (* skoXC1 (* skoXC1 (/ (- 63.) 2816.))))))))))))))) 1.) (and (<= (* skoXC1 (+ (- 1.) (* skoXC1 (* skoXC1 (+ (/ 1. 3.) (* skoXC1 (* skoXC1 (+ (/ 3. 20.) (* skoXC1 (* skoXC1 (+ (/ 5. 56.) (* skoXC1 (* skoXC1 (+ (/ 35. 576.) (* skoXC1 (* skoXC1 (/ 63. 1408.))))))))))))))))) 0.) (and (<= (* skoXC1 (+ (- 1.) (* skoXC1 (* skoXC1 (+ (/ (- 1.) 6.) (* skoXC1 (* skoXC1 (/ (- 3.) 40.)))))))) 0.) (and (> (* skoXC1 (* skoXC1 (+ (/ 1. 6.) (* skoXC1 (* skoXC1 (/ 3. 40.)))))) (- 1.)) (and (<= (* skoXC1 (* skoXC1 (* skoXC1 (* skoXC1 (+ (/ 32. 15.) (* skoXC1 (* skoXC1 (+ (/ (- 296.) 15.) (* skoXC1 (* skoXC1 (+ (/ 391. 15.) (* skoXC1 (* skoXC1 (+ (/ (- 146.) 15.) (* skoXC1 (* skoXC1 (/ 3. 4.))))))))))))))))) 0.) (and (<= (* skoXC1 (* skoXC1 (+ (/ 1. 3.) (* skoXC1 (* skoXC1 (/ 3. 20.)))))) 1.) (and (<= (* skoXC1 (* skoXC1 (* skoXC1 (* skoXC1 (+ (/ (- 17.) 120.) (* skoXC1 (* skoXC1 (/ 3. 80.)))))))) 0.) (and (<= (* skoXC1 (* skoXC1 (* skoXC1 (* skoXC1 (+ (/ (- 13.) 60.) (* skoXC1 (* skoXC1 (/ (- 3.) 10.)))))))) 0.) (and (<= (* skoXC1 (* skoXC1 (+ (/ (- 1.) 2.) (* skoXC1 (* skoXC1 (+ (/ 7. 120.) (* skoXC1 (* skoXC1 (/ (- 3.) 40.))))))))) 0.) (and (<= (* skoXC1 (* skoXC1 (+ (/ (- 1.) 6.) (* skoXC1 (* skoXC1 (/ (- 3.) 40.)))))) 1.) (and (<= (* skoXC1 (+ (- 1.) (* skoXC1 (* skoXC1 (+ (/ 1. 3.) (* skoXC1 (* skoXC1 (/ 3. 20.)))))))) 0.) (and (> (* skoXC1 skoXC1) 0.) (and (<= (* skoXC1 (* skoXC1 (+ 80. (* skoXC1 (* skoXC1 (+ (- 40.) (* skoXC1 (* skoXC1 (+ 6. (* skoXC1 (* skoXC1 (/ (- 1.) 8.)))))))))))) 48.) (and (> (* skoXC1 (* skoXC1 (+ (- 80.) (* skoXC1 (* skoXC1 (+ 40. (* skoXC1 (* skoXC1 (+ (- 6.) (* skoXC1 (* skoXC1 (/ 1. 8.)))))))))))) (- 48.)) (and (<= (* skoXC1 (* skoXC1 (+ 24. (* skoXC1 (* skoXC1 (+ (- 10.) (* skoXC1 skoXC1))))))) 16.) (and (<= (* skoXC1 (* skoXC1 (/ 1. 2.))) 3.) (and (> (* skoXC1 (* skoXC1 (/ (- 1.) 2.))) (- 3.)) (and (> skoXC1 0.) (and (> (/ 7. 8.) skoXC1) (and (<= (* skoXC1 (+ (- 1.) (* skoXC1 (* skoXC1 (/ 1. 3.))))) 0.) (and (<= (* skoXC1 (* skoXC1 (/ (- 1.) 6.))) 1.) (and (<= (* skoXC1 (* skoXC1 (+ (/ (- 1.) 2.) (* skoXC1 (* skoXC1 (/ (- 1.) 6.)))))) 0.) (and (<= (* skoXC1 skoXC1) 2.) (and (<= (* skoXC1 (* skoXC1 (* skoXC1 (* skoXC1 (/ (- 2.) 3.))))) 0.) (and (<= (* skoXC1 (+ (- 1.) (* skoXC1 (* skoXC1 (/ (- 1.) 6.))))) 0.) (and (<= (* skoXC1 (* skoXC1 (/ 1. 3.))) 1.) (and (<= (* skoXC1 (* skoXC1 (+ 256. (* skoXC1 (* skoXC1 (+ (- 160.) (* skoXC1 (* skoXC1 (+ 32. (* skoXC1 (* skoXC1 (- 1.)))))))))))) 128.) (and (<= (* skoXC1 (* skoXC1 (* skoXC1 (* skoXC1 (+ (/ (- 80.) 3.) (* skoXC1 (* skoXC1 (+ (/ 128. 3.) (* skoXC1 (* skoXC1 (+ (/ (- 55.) 3.) (* skoXC1 (* skoXC1 (/ 5. 3.)))))))))))))) 0.) (and (<= (* skoXC1 (+ (- 1.) (* skoXC1 (* skoXC1 (+ (/ 1. 3.) (* skoXC1 (* skoXC1 (+ (/ 3. 20.) (* skoXC1 (* skoXC1 (/ 5. 56.))))))))))) 0.) (and (<= (* skoXC1 (* skoXC1 (+ (/ (- 1.) 6.) (* skoXC1 (* skoXC1 (+ (/ (- 3.) 40.) (* skoXC1 (* skoXC1 (/ (- 5.) 112.))))))))) 1.) (and (<= (* skoXC1 (* skoXC1 (+ (/ (- 1.) 2.) (* skoXC1 (* skoXC1 (+ (/ 7. 120.) (* skoXC1 (* skoXC1 (+ (/ 33. 560.) (* skoXC1 (* skoXC1 (/ (- 5.) 112.)))))))))))) 0.) (and (<= (* skoXC1 (* skoXC1 (* skoXC1 (* skoXC1 (+ (/ (- 13.) 60.) (* skoXC1 (* skoXC1 (+ (/ (- 9.) 280.) (* skoXC1 (* skoXC1 (/ (- 5.) 28.))))))))))) 0.) (and (<= (* skoXC1 (* skoXC1 (* skoXC1 (* skoXC1 (+ (/ (- 17.) 120.) (* skoXC1 (* skoXC1 (+ (/ (- 27.) 280.) (* skoXC1 (* skoXC1 (/ 5. 224.))))))))))) 0.) (and (<= (* skoXC1 (* skoXC1 (+ (/ 1. 3.) (* skoXC1 (* skoXC1 (+ (/ 3. 20.) (* skoXC1 (* skoXC1 (/ 5. 56.))))))))) 1.) (and (<= (* skoXC1 (* skoXC1 (* skoXC1 (* skoXC1 (+ (/ 32. 15.) (* skoXC1 (* skoXC1 (+ (/ (- 272.) 105.) (* skoXC1 (* skoXC1 (+ (/ (- 1163.) 105.) (* skoXC1 (* skoXC1 (+ (/ 1753. 105.) (* skoXC1 (* skoXC1 (+ (/ (- 169.) 28.) (* skoXC1 (* skoXC1 (/ 25. 56.)))))))))))))))))))) 0.) (and (> (* skoXC1 (* skoXC1 (+ (/ 1. 6.) (* skoXC1 (* skoXC1 (+ (/ 3. 40.) (* skoXC1 (* skoXC1 (/ 5. 112.))))))))) (- 1.)) (<= (* skoXC1 (+ (- 1.) (* skoXC1 (* skoXC1 (+ (/ (- 1.) 6.) (* skoXC1 (* skoXC1 (+ (/ (- 3.) 40.) (* skoXC1 (* skoXC1 (/ (- 5.) 112.))))))))))) 0.)))))))))))))))))))))))))))))))))))))))))

% In GRF format:
(sequent " MetiTarski formula " (antecedent (<= (* skoXC1 (* skoXC1 (* skoXC1 (* skoXC1 (+ (/ (- 13.) 60.) (* skoXC1 (* skoXC1 (+ (/ (- 9.) 280.) (* skoXC1 (* skoXC1 (+ (/ 5. 1344.) (* skoXC1 (* skoXC1 (+ (/ 161. 12672.) (* skoXC1 (* skoXC1 (/ (- 63.) 704.))))))))))))))))) 0.) (> (* skoXC1 (* skoXC1 (- 1.))) (- 2.)) (<= (* skoXC1 (* skoXC1 (+ (/ (- 1.) 2.) (* skoXC1 (* skoXC1 (+ (/ 7. 120.) (* skoXC1 (* skoXC1 (+ (/ 33. 560.) (* skoXC1 (* skoXC1 (+ (/ 125. 2688.) (* skoXC1 (* skoXC1 (+ (/ 931. 25344.) (* skoXC1 (* skoXC1 (/ (- 63.) 2816.)))))))))))))))))) 0.) (<= (* skoXC1 (* skoXC1 (+ (/ (- 1.) 6.) (* skoXC1 (* skoXC1 (+ (/ (- 3.) 40.) (* skoXC1 (* skoXC1 (+ (/ (- 5.) 112.) (* skoXC1 (* skoXC1 (+ (/ (- 35.) 1152.) (* skoXC1 (* skoXC1 (/ (- 63.) 2816.))))))))))))))) 1.) (<= (* skoXC1 (+ (- 1.) (* skoXC1 (* skoXC1 (+ (/ 1. 3.) (* skoXC1 (* skoXC1 (+ (/ 3. 20.) (* skoXC1 (* skoXC1 (+ (/ 5. 56.) (* skoXC1 (* skoXC1 (+ (/ 35. 576.) (* skoXC1 (* skoXC1 (/ 63. 1408.))))))))))))))))) 0.) (<= (* skoXC1 (+ (- 1.) (* skoXC1 (* skoXC1 (+ (/ (- 1.) 6.) (* skoXC1 (* skoXC1 (/ (- 3.) 40.)))))))) 0.) (> (* skoXC1 (* skoXC1 (+ (/ 1. 6.) (* skoXC1 (* skoXC1 (/ 3. 40.)))))) (- 1.)) (<= (* skoXC1 (* skoXC1 (* skoXC1 (* skoXC1 (+ (/ 32. 15.) (* skoXC1 (* skoXC1 (+ (/ (- 296.) 15.) (* skoXC1 (* skoXC1 (+ (/ 391. 15.) (* skoXC1 (* skoXC1 (+ (/ (- 146.) 15.) (* skoXC1 (* skoXC1 (/ 3. 4.))))))))))))))))) 0.) (<= (* skoXC1 (* skoXC1 (+ (/ 1. 3.) (* skoXC1 (* skoXC1 (/ 3. 20.)))))) 1.) (<= (* skoXC1 (* skoXC1 (* skoXC1 (* skoXC1 (+ (/ (- 17.) 120.) (* skoXC1 (* skoXC1 (/ 3. 80.)))))))) 0.) (<= (* skoXC1 (* skoXC1 (* skoXC1 (* skoXC1 (+ (/ (- 13.) 60.) (* skoXC1 (* skoXC1 (/ (- 3.) 10.)))))))) 0.) (<= (* skoXC1 (* skoXC1 (+ (/ (- 1.) 2.) (* skoXC1 (* skoXC1 (+ (/ 7. 120.) (* skoXC1 (* skoXC1 (/ (- 3.) 40.))))))))) 0.) (<= (* skoXC1 (* skoXC1 (+ (/ (- 1.) 6.) (* skoXC1 (* skoXC1 (/ (- 3.) 40.)))))) 1.) (<= (* skoXC1 (+ (- 1.) (* skoXC1 (* skoXC1 (+ (/ 1. 3.) (* skoXC1 (* skoXC1 (/ 3. 20.)))))))) 0.) (> (* skoXC1 skoXC1) 0.) (<= (* skoXC1 (* skoXC1 (+ 80. (* skoXC1 (* skoXC1 (+ (- 40.) (* skoXC1 (* skoXC1 (+ 6. (* skoXC1 (* skoXC1 (/ (- 1.) 8.)))))))))))) 48.) (> (* skoXC1 (* skoXC1 (+ (- 80.) (* skoXC1 (* skoXC1 (+ 40. (* skoXC1 (* skoXC1 (+ (- 6.) (* skoXC1 (* skoXC1 (/ 1. 8.)))))))))))) (- 48.)) (<= (* skoXC1 (* skoXC1 (+ 24. (* skoXC1 (* skoXC1 (+ (- 10.) (* skoXC1 skoXC1))))))) 16.) (<= (* skoXC1 (* skoXC1 (/ 1. 2.))) 3.) (> (* skoXC1 (* skoXC1 (/ (- 1.) 2.))) (- 3.)) (> skoXC1 0.) (> (/ 7. 8.) skoXC1) (<= (* skoXC1 (+ (- 1.) (* skoXC1 (* skoXC1 (/ 1. 3.))))) 0.) (<= (* skoXC1 (* skoXC1 (/ (- 1.) 6.))) 1.) (<= (* skoXC1 (* skoXC1 (+ (/ (- 1.) 2.) (* skoXC1 (* skoXC1 (/ (- 1.) 6.)))))) 0.) (<= (* skoXC1 skoXC1) 2.) (<= (* skoXC1 (* skoXC1 (* skoXC1 (* skoXC1 (/ (- 2.) 3.))))) 0.) (<= (* skoXC1 (+ (- 1.) (* skoXC1 (* skoXC1 (/ (- 1.) 6.))))) 0.) (<= (* skoXC1 (* skoXC1 (/ 1. 3.))) 1.) (<= (* skoXC1 (* skoXC1 (+ 256. (* skoXC1 (* skoXC1 (+ (- 160.) (* skoXC1 (* skoXC1 (+ 32. (* skoXC1 (* skoXC1 (- 1.)))))))))))) 128.) (<= (* skoXC1 (* skoXC1 (* skoXC1 (* skoXC1 (+ (/ (- 80.) 3.) (* skoXC1 (* skoXC1 (+ (/ 128. 3.) (* skoXC1 (* skoXC1 (+ (/ (- 55.) 3.) (* skoXC1 (* skoXC1 (/ 5. 3.)))))))))))))) 0.) (<= (* skoXC1 (+ (- 1.) (* skoXC1 (* skoXC1 (+ (/ 1. 3.) (* skoXC1 (* skoXC1 (+ (/ 3. 20.) (* skoXC1 (* skoXC1 (/ 5. 56.))))))))))) 0.) (<= (* skoXC1 (* skoXC1 (+ (/ (- 1.) 6.) (* skoXC1 (* skoXC1 (+ (/ (- 3.) 40.) (* skoXC1 (* skoXC1 (/ (- 5.) 112.))))))))) 1.) (<= (* skoXC1 (* skoXC1 (+ (/ (- 1.) 2.) (* skoXC1 (* skoXC1 (+ (/ 7. 120.) (* skoXC1 (* skoXC1 (+ (/ 33. 560.) (* skoXC1 (* skoXC1 (/ (- 5.) 112.)))))))))))) 0.) (<= (* skoXC1 (* skoXC1 (* skoXC1 (* skoXC1 (+ (/ (- 13.) 60.) (* skoXC1 (* skoXC1 (+ (/ (- 9.) 280.) (* skoXC1 (* skoXC1 (/ (- 5.) 28.))))))))))) 0.) (<= (* skoXC1 (* skoXC1 (* skoXC1 (* skoXC1 (+ (/ (- 17.) 120.) (* skoXC1 (* skoXC1 (+ (/ (- 27.) 280.) (* skoXC1 (* skoXC1 (/ 5. 224.))))))))))) 0.) (<= (* skoXC1 (* skoXC1 (+ (/ 1. 3.) (* skoXC1 (* skoXC1 (+ (/ 3. 20.) (* skoXC1 (* skoXC1 (/ 5. 56.))))))))) 1.) (<= (* skoXC1 (* skoXC1 (* skoXC1 (* skoXC1 (+ (/ 32. 15.) (* skoXC1 (* skoXC1 (+ (/ (- 272.) 105.) (* skoXC1 (* skoXC1 (+ (/ (- 1163.) 105.) (* skoXC1 (* skoXC1 (+ (/ 1753. 105.) (* skoXC1 (* skoXC1 (+ (/ (- 169.) 28.) (* skoXC1 (* skoXC1 (/ 25. 56.)))))))))))))))))))) 0.) (> (* skoXC1 (* skoXC1 (+ (/ 1. 6.) (* skoXC1 (* skoXC1 (+ (/ 3. 40.) (* skoXC1 (* skoXC1 (/ 5. 112.))))))))) (- 1.))) (succedent (> (* skoXC1 (+ (- 1.) (* skoXC1 (* skoXC1 (+ (/ (- 1.) 6.) (* skoXC1 (* skoXC1 (+ (/ (- 3.) 40.) (* skoXC1 (* skoXC1 (/ (- 5.) 112.))))))))))) 0.)))
-----[end problem]-----

-----[begin problem]-----
% In Mathematica format:
Timing[Resolve[Exists[{skoXC1}, And[skoXC1*skoXC1<=2,skoXC1*skoXC1*((-1/2)+skoXC1*skoXC1*((7/120)+skoXC1*skoXC1*((33/560)+skoXC1*skoXC1*((125/2688)+skoXC1*skoXC1*((931/25344)+skoXC1*skoXC1*(-63/2816))))))<=0,skoXC1*skoXC1*((-1/6)+skoXC1*skoXC1*((-3/40)+skoXC1*skoXC1*((-5/112)+skoXC1*skoXC1*((-35/1152)+skoXC1*skoXC1*(-63/2816)))))<=1,skoXC1*(-1+skoXC1*skoXC1*((1/3)+skoXC1*skoXC1*((3/20)+skoXC1*skoXC1*((5/56)+skoXC1*skoXC1*((35/576)+skoXC1*skoXC1*(63/1408))))))<=0,skoXC1*(-1+skoXC1*skoXC1*((-1/6)+skoXC1*skoXC1*(-3/40)))<=0,skoXC1*skoXC1*((1/6)+skoXC1*skoXC1*(3/40))>-1,skoXC1*skoXC1*skoXC1*skoXC1*((32/15)+skoXC1*skoXC1*((-296/15)+skoXC1*skoXC1*((391/15)+skoXC1*skoXC1*((-146/15)+skoXC1*skoXC1*(3/4)))))<=0,skoXC1*skoXC1*((1/3)+skoXC1*skoXC1*(3/20))<=1,skoXC1*skoXC1*skoXC1*skoXC1*((-17/120)+skoXC1*skoXC1*(3/80))<=0,skoXC1*skoXC1*skoXC1*skoXC1*((-13/60)+skoXC1*skoXC1*(-3/10))<=0,skoXC1*skoXC1*((-1/2)+skoXC1*skoXC1*((7/120)+skoXC1*skoXC1*(-3/40)))<=0,skoXC1*skoXC1*((-1/6)+skoXC1*skoXC1*(-3/40))<=1,skoXC1*(-1+skoXC1*skoXC1*((1/3)+skoXC1*skoXC1*(3/20)))<=0,skoXC1*skoXC1>0,skoXC1*skoXC1*(80+skoXC1*skoXC1*(-40+skoXC1*skoXC1*(6+skoXC1*skoXC1*(-1/8))))<=48,skoXC1*skoXC1*(-80+skoXC1*skoXC1*(40+skoXC1*skoXC1*(-6+skoXC1*skoXC1*(1/8))))>-48,skoXC1*skoXC1*(24+skoXC1*skoXC1*(-10+skoXC1*skoXC1))<=16,skoXC1*skoXC1*(1/2)<=3,skoXC1*skoXC1*(-1/2)>-3,skoXC1>0,(7/8)>skoXC1,skoXC1*(-1+skoXC1*skoXC1*(1/3))<=0,skoXC1*skoXC1*(-1/6)<=1,skoXC1*skoXC1*((-1/2)+skoXC1*skoXC1*(-1/6))<=0,skoXC1*skoXC1<=2,skoXC1*skoXC1*skoXC1*skoXC1*(-2/3)<=0,skoXC1*(-1+skoXC1*skoXC1*(-1/6))<=0,skoXC1*skoXC1*(1/3)<=1,skoXC1*skoXC1*(256+skoXC1*skoXC1*(-160+skoXC1*skoXC1*(32+skoXC1*skoXC1*-1)))<=128,skoXC1*skoXC1*skoXC1*skoXC1*((-80/3)+skoXC1*skoXC1*((128/3)+skoXC1*skoXC1*((-55/3)+skoXC1*skoXC1*(5/3))))<=0,skoXC1*(-1+skoXC1*skoXC1*((1/3)+skoXC1*skoXC1*((3/20)+skoXC1*skoXC1*(5/56))))<=0,skoXC1*skoXC1*((-1/6)+skoXC1*skoXC1*((-3/40)+skoXC1*skoXC1*(-5/112)))<=1,skoXC1*skoXC1*((-1/2)+skoXC1*skoXC1*((7/120)+skoXC1*skoXC1*((33/560)+skoXC1*skoXC1*(-5/112))))<=0,skoXC1*skoXC1*skoXC1*skoXC1*((-13/60)+skoXC1*skoXC1*((-9/280)+skoXC1*skoXC1*(-5/28)))<=0,skoXC1*skoXC1*skoXC1*skoXC1*((-17/120)+skoXC1*skoXC1*((-27/280)+skoXC1*skoXC1*(5/224)))<=0,skoXC1*skoXC1*((1/3)+skoXC1*skoXC1*((3/20)+skoXC1*skoXC1*(5/56)))<=1,skoXC1*skoXC1*skoXC1*skoXC1*((32/15)+skoXC1*skoXC1*((-272/105)+skoXC1*skoXC1*((-1163/105)+skoXC1*skoXC1*((1753/105)+skoXC1*skoXC1*((-169/28)+skoXC1*skoXC1*(25/56))))))<=0,skoXC1*skoXC1*((1/6)+skoXC1*skoXC1*((3/40)+skoXC1*skoXC1*(5/112)))>-1,skoXC1*(-1+skoXC1*skoXC1*((-1/6)+skoXC1*skoXC1*((-3/40)+skoXC1*skoXC1*(-5/112))))<=0]], Reals]]

% In QepcadB format:
(E skoXC1) [[(skoXC1 skoXC1)<=2]/\[[(skoXC1 skoXC1 (-1/2+(skoXC1 skoXC1 (7/120+(skoXC1 skoXC1 (33/560+(skoXC1 skoXC1 (125/2688+(skoXC1 skoXC1 (931/25344+(skoXC1 skoXC1 (-63/2816))))))))))))<=0]/\[[(skoXC1 skoXC1 (-1/6+(skoXC1 skoXC1 (-3/40+(skoXC1 skoXC1 (-5/112+(skoXC1 skoXC1 (-35/1152+(skoXC1 skoXC1 (-63/2816))))))))))<=1]/\[[(skoXC1 (-1+(skoXC1 skoXC1 (1/3+(skoXC1 skoXC1 (3/20+(skoXC1 skoXC1 (5/56+(skoXC1 skoXC1 (35/576+(skoXC1 skoXC1 (63/1408))))))))))))<=0]/\[[(skoXC1 (-1+(skoXC1 skoXC1 (-1/6+(skoXC1 skoXC1 (-3/40))))))<=0]/\[[-1<(skoXC1 skoXC1 (1/6+(skoXC1 skoXC1 (3/40))))]/\[[(skoXC1 skoXC1 skoXC1 skoXC1 (32/15+(skoXC1 skoXC1 (-296/15+(skoXC1 skoXC1 (391/15+(skoXC1 skoXC1 (-146/15+(skoXC1 skoXC1 (3/4))))))))))<=0]/\[[(skoXC1 skoXC1 (1/3+(skoXC1 skoXC1 (3/20))))<=1]/\[[(skoXC1 skoXC1 skoXC1 skoXC1 (-17/120+(skoXC1 skoXC1 (3/80))))<=0]/\[[(skoXC1 skoXC1 skoXC1 skoXC1 (-13/60+(skoXC1 skoXC1 (-3/10))))<=0]/\[[(skoXC1 skoXC1 (-1/2+(skoXC1 skoXC1 (7/120+(skoXC1 skoXC1 (-3/40))))))<=0]/\[[(skoXC1 skoXC1 (-1/6+(skoXC1 skoXC1 (-3/40))))<=1]/\[[(skoXC1 (-1+(skoXC1 skoXC1 (1/3+(skoXC1 skoXC1 (3/20))))))<=0]/\[[0<(skoXC1 skoXC1)]/\[[(skoXC1 skoXC1 (80+(skoXC1 skoXC1 (-40+(skoXC1 skoXC1 (6+(skoXC1 skoXC1 (-1/8))))))))<=48]/\[[-48<(skoXC1 skoXC1 (-80+(skoXC1 skoXC1 (40+(skoXC1 skoXC1 (-6+(skoXC1 skoXC1 (1/8))))))))]/\[[(skoXC1 skoXC1 (24+(skoXC1 skoXC1 (-10+(skoXC1 skoXC1)))))<=16]/\[[(skoXC1 skoXC1 (1/2))<=3]/\[[-3<(skoXC1 skoXC1 (-1/2))]/\[[0<skoXC1]/\[[skoXC1<7/8]/\[[(skoXC1 (-1+(skoXC1 skoXC1 (1/3))))<=0]/\[[(skoXC1 skoXC1 (-1/6))<=1]/\[[(skoXC1 skoXC1 (-1/2+(skoXC1 skoXC1 (-1/6))))<=0]/\[[(skoXC1 skoXC1)<=2]/\[[(skoXC1 skoXC1 skoXC1 skoXC1 (-2/3))<=0]/\[[(skoXC1 (-1+(skoXC1 skoXC1 (-1/6))))<=0]/\[[(skoXC1 skoXC1 (1/3))<=1]/\[[(skoXC1 skoXC1 (256+(skoXC1 skoXC1 (-160+(skoXC1 skoXC1 (32+(skoXC1 skoXC1 (-1))))))))<=128]/\[[(skoXC1 skoXC1 skoXC1 skoXC1 (-80/3+(skoXC1 skoXC1 (128/3+(skoXC1 skoXC1 (-55/3+(skoXC1 skoXC1 (5/3))))))))<=0]/\[[(skoXC1 (-1+(skoXC1 skoXC1 (1/3+(skoXC1 skoXC1 (3/20+(skoXC1 skoXC1 (5/56))))))))<=0]/\[[(skoXC1 skoXC1 (-1/6+(skoXC1 skoXC1 (-3/40+(skoXC1 skoXC1 (-5/112))))))<=1]/\[[(skoXC1 skoXC1 (-1/2+(skoXC1 skoXC1 (7/120+(skoXC1 skoXC1 (33/560+(skoXC1 skoXC1 (-5/112))))))))<=0]/\[[(skoXC1 skoXC1 skoXC1 skoXC1 (-13/60+(skoXC1 skoXC1 (-9/280+(skoXC1 skoXC1 (-5/28))))))<=0]/\[[(skoXC1 skoXC1 skoXC1 skoXC1 (-17/120+(skoXC1 skoXC1 (-27/280+(skoXC1 skoXC1 (5/224))))))<=0]/\[[(skoXC1 skoXC1 (1/3+(skoXC1 skoXC1 (3/20+(skoXC1 skoXC1 (5/56))))))<=1]/\[[(skoXC1 skoXC1 skoXC1 skoXC1 (32/15+(skoXC1 skoXC1 (-272/105+(skoXC1 skoXC1 (-1163/105+(skoXC1 skoXC1 (1753/105+(skoXC1 skoXC1 (-169/28+(skoXC1 skoXC1 (25/56))))))))))))<=0]/\[[-1<(skoXC1 skoXC1 (1/6+(skoXC1 skoXC1 (3/40+(skoXC1 skoXC1 (5/112))))))]/\[(skoXC1 (-1+(skoXC1 skoXC1 (-1/6+(skoXC1 skoXC1 (-3/40+(skoXC1 skoXC1 (-5/112))))))))<=0]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]].

% In SMTLib2 format:
(declare-fun skoXC1 () Real) (assert (and (<= (* skoXC1 skoXC1) 2.) (and (<= (* skoXC1 (* skoXC1 (+ (/ (- 1.) 2.) (* skoXC1 (* skoXC1 (+ (/ 7. 120.) (* skoXC1 (* skoXC1 (+ (/ 33. 560.) (* skoXC1 (* skoXC1 (+ (/ 125. 2688.) (* skoXC1 (* skoXC1 (+ (/ 931. 25344.) (* skoXC1 (* skoXC1 (/ (- 63.) 2816.)))))))))))))))))) 0.) (and (<= (* skoXC1 (* skoXC1 (+ (/ (- 1.) 6.) (* skoXC1 (* skoXC1 (+ (/ (- 3.) 40.) (* skoXC1 (* skoXC1 (+ (/ (- 5.) 112.) (* skoXC1 (* skoXC1 (+ (/ (- 35.) 1152.) (* skoXC1 (* skoXC1 (/ (- 63.) 2816.))))))))))))))) 1.) (and (<= (* skoXC1 (+ (- 1.) (* skoXC1 (* skoXC1 (+ (/ 1. 3.) (* skoXC1 (* skoXC1 (+ (/ 3. 20.) (* skoXC1 (* skoXC1 (+ (/ 5. 56.) (* skoXC1 (* skoXC1 (+ (/ 35. 576.) (* skoXC1 (* skoXC1 (/ 63. 1408.))))))))))))))))) 0.) (and (<= (* skoXC1 (+ (- 1.) (* skoXC1 (* skoXC1 (+ (/ (- 1.) 6.) (* skoXC1 (* skoXC1 (/ (- 3.) 40.)))))))) 0.) (and (> (* skoXC1 (* skoXC1 (+ (/ 1. 6.) (* skoXC1 (* skoXC1 (/ 3. 40.)))))) (- 1.)) (and (<= (* skoXC1 (* skoXC1 (* skoXC1 (* skoXC1 (+ (/ 32. 15.) (* skoXC1 (* skoXC1 (+ (/ (- 296.) 15.) (* skoXC1 (* skoXC1 (+ (/ 391. 15.) (* skoXC1 (* skoXC1 (+ (/ (- 146.) 15.) (* skoXC1 (* skoXC1 (/ 3. 4.))))))))))))))))) 0.) (and (<= (* skoXC1 (* skoXC1 (+ (/ 1. 3.) (* skoXC1 (* skoXC1 (/ 3. 20.)))))) 1.) (and (<= (* skoXC1 (* skoXC1 (* skoXC1 (* skoXC1 (+ (/ (- 17.) 120.) (* skoXC1 (* skoXC1 (/ 3. 80.)))))))) 0.) (and (<= (* skoXC1 (* skoXC1 (* skoXC1 (* skoXC1 (+ (/ (- 13.) 60.) (* skoXC1 (* skoXC1 (/ (- 3.) 10.)))))))) 0.) (and (<= (* skoXC1 (* skoXC1 (+ (/ (- 1.) 2.) (* skoXC1 (* skoXC1 (+ (/ 7. 120.) (* skoXC1 (* skoXC1 (/ (- 3.) 40.))))))))) 0.) (and (<= (* skoXC1 (* skoXC1 (+ (/ (- 1.) 6.) (* skoXC1 (* skoXC1 (/ (- 3.) 40.)))))) 1.) (and (<= (* skoXC1 (+ (- 1.) (* skoXC1 (* skoXC1 (+ (/ 1. 3.) (* skoXC1 (* skoXC1 (/ 3. 20.)))))))) 0.) (and (> (* skoXC1 skoXC1) 0.) (and (<= (* skoXC1 (* skoXC1 (+ 80. (* skoXC1 (* skoXC1 (+ (- 40.) (* skoXC1 (* skoXC1 (+ 6. (* skoXC1 (* skoXC1 (/ (- 1.) 8.)))))))))))) 48.) (and (> (* skoXC1 (* skoXC1 (+ (- 80.) (* skoXC1 (* skoXC1 (+ 40. (* skoXC1 (* skoXC1 (+ (- 6.) (* skoXC1 (* skoXC1 (/ 1. 8.)))))))))))) (- 48.)) (and (<= (* skoXC1 (* skoXC1 (+ 24. (* skoXC1 (* skoXC1 (+ (- 10.) (* skoXC1 skoXC1))))))) 16.) (and (<= (* skoXC1 (* skoXC1 (/ 1. 2.))) 3.) (and (> (* skoXC1 (* skoXC1 (/ (- 1.) 2.))) (- 3.)) (and (> skoXC1 0.) (and (> (/ 7. 8.) skoXC1) (and (<= (* skoXC1 (+ (- 1.) (* skoXC1 (* skoXC1 (/ 1. 3.))))) 0.) (and (<= (* skoXC1 (* skoXC1 (/ (- 1.) 6.))) 1.) (and (<= (* skoXC1 (* skoXC1 (+ (/ (- 1.) 2.) (* skoXC1 (* skoXC1 (/ (- 1.) 6.)))))) 0.) (and (<= (* skoXC1 skoXC1) 2.) (and (<= (* skoXC1 (* skoXC1 (* skoXC1 (* skoXC1 (/ (- 2.) 3.))))) 0.) (and (<= (* skoXC1 (+ (- 1.) (* skoXC1 (* skoXC1 (/ (- 1.) 6.))))) 0.) (and (<= (* skoXC1 (* skoXC1 (/ 1. 3.))) 1.) (and (<= (* skoXC1 (* skoXC1 (+ 256. (* skoXC1 (* skoXC1 (+ (- 160.) (* skoXC1 (* skoXC1 (+ 32. (* skoXC1 (* skoXC1 (- 1.)))))))))))) 128.) (and (<= (* skoXC1 (* skoXC1 (* skoXC1 (* skoXC1 (+ (/ (- 80.) 3.) (* skoXC1 (* skoXC1 (+ (/ 128. 3.) (* skoXC1 (* skoXC1 (+ (/ (- 55.) 3.) (* skoXC1 (* skoXC1 (/ 5. 3.)))))))))))))) 0.) (and (<= (* skoXC1 (+ (- 1.) (* skoXC1 (* skoXC1 (+ (/ 1. 3.) (* skoXC1 (* skoXC1 (+ (/ 3. 20.) (* skoXC1 (* skoXC1 (/ 5. 56.))))))))))) 0.) (and (<= (* skoXC1 (* skoXC1 (+ (/ (- 1.) 6.) (* skoXC1 (* skoXC1 (+ (/ (- 3.) 40.) (* skoXC1 (* skoXC1 (/ (- 5.) 112.))))))))) 1.) (and (<= (* skoXC1 (* skoXC1 (+ (/ (- 1.) 2.) (* skoXC1 (* skoXC1 (+ (/ 7. 120.) (* skoXC1 (* skoXC1 (+ (/ 33. 560.) (* skoXC1 (* skoXC1 (/ (- 5.) 112.)))))))))))) 0.) (and (<= (* skoXC1 (* skoXC1 (* skoXC1 (* skoXC1 (+ (/ (- 13.) 60.) (* skoXC1 (* skoXC1 (+ (/ (- 9.) 280.) (* skoXC1 (* skoXC1 (/ (- 5.) 28.))))))))))) 0.) (and (<= (* skoXC1 (* skoXC1 (* skoXC1 (* skoXC1 (+ (/ (- 17.) 120.) (* skoXC1 (* skoXC1 (+ (/ (- 27.) 280.) (* skoXC1 (* skoXC1 (/ 5. 224.))))))))))) 0.) (and (<= (* skoXC1 (* skoXC1 (+ (/ 1. 3.) (* skoXC1 (* skoXC1 (+ (/ 3. 20.) (* skoXC1 (* skoXC1 (/ 5. 56.))))))))) 1.) (and (<= (* skoXC1 (* skoXC1 (* skoXC1 (* skoXC1 (+ (/ 32. 15.) (* skoXC1 (* skoXC1 (+ (/ (- 272.) 105.) (* skoXC1 (* skoXC1 (+ (/ (- 1163.) 105.) (* skoXC1 (* skoXC1 (+ (/ 1753. 105.) (* skoXC1 (* skoXC1 (+ (/ (- 169.) 28.) (* skoXC1 (* skoXC1 (/ 25. 56.)))))))))))))))))))) 0.) (and (> (* skoXC1 (* skoXC1 (+ (/ 1. 6.) (* skoXC1 (* skoXC1 (+ (/ 3. 40.) (* skoXC1 (* skoXC1 (/ 5. 112.))))))))) (- 1.)) (<= (* skoXC1 (+ (- 1.) (* skoXC1 (* skoXC1 (+ (/ (- 1.) 6.) (* skoXC1 (* skoXC1 (+ (/ (- 3.) 40.) (* skoXC1 (* skoXC1 (/ (- 5.) 112.))))))))))) 0.))))))))))))))))))))))))))))))))))))))))

% In GRF format:
(sequent " MetiTarski formula " (antecedent (<= (* skoXC1 skoXC1) 2.) (<= (* skoXC1 (* skoXC1 (+ (/ (- 1.) 2.) (* skoXC1 (* skoXC1 (+ (/ 7. 120.) (* skoXC1 (* skoXC1 (+ (/ 33. 560.) (* skoXC1 (* skoXC1 (+ (/ 125. 2688.) (* skoXC1 (* skoXC1 (+ (/ 931. 25344.) (* skoXC1 (* skoXC1 (/ (- 63.) 2816.)))))))))))))))))) 0.) (<= (* skoXC1 (* skoXC1 (+ (/ (- 1.) 6.) (* skoXC1 (* skoXC1 (+ (/ (- 3.) 40.) (* skoXC1 (* skoXC1 (+ (/ (- 5.) 112.) (* skoXC1 (* skoXC1 (+ (/ (- 35.) 1152.) (* skoXC1 (* skoXC1 (/ (- 63.) 2816.))))))))))))))) 1.) (<= (* skoXC1 (+ (- 1.) (* skoXC1 (* skoXC1 (+ (/ 1. 3.) (* skoXC1 (* skoXC1 (+ (/ 3. 20.) (* skoXC1 (* skoXC1 (+ (/ 5. 56.) (* skoXC1 (* skoXC1 (+ (/ 35. 576.) (* skoXC1 (* skoXC1 (/ 63. 1408.))))))))))))))))) 0.) (<= (* skoXC1 (+ (- 1.) (* skoXC1 (* skoXC1 (+ (/ (- 1.) 6.) (* skoXC1 (* skoXC1 (/ (- 3.) 40.)))))))) 0.) (> (* skoXC1 (* skoXC1 (+ (/ 1. 6.) (* skoXC1 (* skoXC1 (/ 3. 40.)))))) (- 1.)) (<= (* skoXC1 (* skoXC1 (* skoXC1 (* skoXC1 (+ (/ 32. 15.) (* skoXC1 (* skoXC1 (+ (/ (- 296.) 15.) (* skoXC1 (* skoXC1 (+ (/ 391. 15.) (* skoXC1 (* skoXC1 (+ (/ (- 146.) 15.) (* skoXC1 (* skoXC1 (/ 3. 4.))))))))))))))))) 0.) (<= (* skoXC1 (* skoXC1 (+ (/ 1. 3.) (* skoXC1 (* skoXC1 (/ 3. 20.)))))) 1.) (<= (* skoXC1 (* skoXC1 (* skoXC1 (* skoXC1 (+ (/ (- 17.) 120.) (* skoXC1 (* skoXC1 (/ 3. 80.)))))))) 0.) (<= (* skoXC1 (* skoXC1 (* skoXC1 (* skoXC1 (+ (/ (- 13.) 60.) (* skoXC1 (* skoXC1 (/ (- 3.) 10.)))))))) 0.) (<= (* skoXC1 (* skoXC1 (+ (/ (- 1.) 2.) (* skoXC1 (* skoXC1 (+ (/ 7. 120.) (* skoXC1 (* skoXC1 (/ (- 3.) 40.))))))))) 0.) (<= (* skoXC1 (* skoXC1 (+ (/ (- 1.) 6.) (* skoXC1 (* skoXC1 (/ (- 3.) 40.)))))) 1.) (<= (* skoXC1 (+ (- 1.) (* skoXC1 (* skoXC1 (+ (/ 1. 3.) (* skoXC1 (* skoXC1 (/ 3. 20.)))))))) 0.) (> (* skoXC1 skoXC1) 0.) (<= (* skoXC1 (* skoXC1 (+ 80. (* skoXC1 (* skoXC1 (+ (- 40.) (* skoXC1 (* skoXC1 (+ 6. (* skoXC1 (* skoXC1 (/ (- 1.) 8.)))))))))))) 48.) (> (* skoXC1 (* skoXC1 (+ (- 80.) (* skoXC1 (* skoXC1 (+ 40. (* skoXC1 (* skoXC1 (+ (- 6.) (* skoXC1 (* skoXC1 (/ 1. 8.)))))))))))) (- 48.)) (<= (* skoXC1 (* skoXC1 (+ 24. (* skoXC1 (* skoXC1 (+ (- 10.) (* skoXC1 skoXC1))))))) 16.) (<= (* skoXC1 (* skoXC1 (/ 1. 2.))) 3.) (> (* skoXC1 (* skoXC1 (/ (- 1.) 2.))) (- 3.)) (> skoXC1 0.) (> (/ 7. 8.) skoXC1) (<= (* skoXC1 (+ (- 1.) (* skoXC1 (* skoXC1 (/ 1. 3.))))) 0.) (<= (* skoXC1 (* skoXC1 (/ (- 1.) 6.))) 1.) (<= (* skoXC1 (* skoXC1 (+ (/ (- 1.) 2.) (* skoXC1 (* skoXC1 (/ (- 1.) 6.)))))) 0.) (<= (* skoXC1 skoXC1) 2.) (<= (* skoXC1 (* skoXC1 (* skoXC1 (* skoXC1 (/ (- 2.) 3.))))) 0.) (<= (* skoXC1 (+ (- 1.) (* skoXC1 (* skoXC1 (/ (- 1.) 6.))))) 0.) (<= (* skoXC1 (* skoXC1 (/ 1. 3.))) 1.) (<= (* skoXC1 (* skoXC1 (+ 256. (* skoXC1 (* skoXC1 (+ (- 160.) (* skoXC1 (* skoXC1 (+ 32. (* skoXC1 (* skoXC1 (- 1.)))))))))))) 128.) (<= (* skoXC1 (* skoXC1 (* skoXC1 (* skoXC1 (+ (/ (- 80.) 3.) (* skoXC1 (* skoXC1 (+ (/ 128. 3.) (* skoXC1 (* skoXC1 (+ (/ (- 55.) 3.) (* skoXC1 (* skoXC1 (/ 5. 3.)))))))))))))) 0.) (<= (* skoXC1 (+ (- 1.) (* skoXC1 (* skoXC1 (+ (/ 1. 3.) (* skoXC1 (* skoXC1 (+ (/ 3. 20.) (* skoXC1 (* skoXC1 (/ 5. 56.))))))))))) 0.) (<= (* skoXC1 (* skoXC1 (+ (/ (- 1.) 6.) (* skoXC1 (* skoXC1 (+ (/ (- 3.) 40.) (* skoXC1 (* skoXC1 (/ (- 5.) 112.))))))))) 1.) (<= (* skoXC1 (* skoXC1 (+ (/ (- 1.) 2.) (* skoXC1 (* skoXC1 (+ (/ 7. 120.) (* skoXC1 (* skoXC1 (+ (/ 33. 560.) (* skoXC1 (* skoXC1 (/ (- 5.) 112.)))))))))))) 0.) (<= (* skoXC1 (* skoXC1 (* skoXC1 (* skoXC1 (+ (/ (- 13.) 60.) (* skoXC1 (* skoXC1 (+ (/ (- 9.) 280.) (* skoXC1 (* skoXC1 (/ (- 5.) 28.))))))))))) 0.) (<= (* skoXC1 (* skoXC1 (* skoXC1 (* skoXC1 (+ (/ (- 17.) 120.) (* skoXC1 (* skoXC1 (+ (/ (- 27.) 280.) (* skoXC1 (* skoXC1 (/ 5. 224.))))))))))) 0.) (<= (* skoXC1 (* skoXC1 (+ (/ 1. 3.) (* skoXC1 (* skoXC1 (+ (/ 3. 20.) (* skoXC1 (* skoXC1 (/ 5. 56.))))))))) 1.) (<= (* skoXC1 (* skoXC1 (* skoXC1 (* skoXC1 (+ (/ 32. 15.) (* skoXC1 (* skoXC1 (+ (/ (- 272.) 105.) (* skoXC1 (* skoXC1 (+ (/ (- 1163.) 105.) (* skoXC1 (* skoXC1 (+ (/ 1753. 105.) (* skoXC1 (* skoXC1 (+ (/ (- 169.) 28.) (* skoXC1 (* skoXC1 (/ 25. 56.)))))))))))))))))))) 0.) (> (* skoXC1 (* skoXC1 (+ (/ 1. 6.) (* skoXC1 (* skoXC1 (+ (/ 3. 40.) (* skoXC1 (* skoXC1 (/ 5. 112.))))))))) (- 1.))) (succedent (> (* skoXC1 (+ (- 1.) (* skoXC1 (* skoXC1 (+ (/ (- 1.) 6.) (* skoXC1 (* skoXC1 (+ (/ (- 3.) 40.) (* skoXC1 (* skoXC1 (/ (- 5.) 112.))))))))))) 0.)))
-----[end problem]-----

-----[begin problem]-----
% In Mathematica format:
Timing[Resolve[Exists[{skoXC1}, And[skoXC1*skoXC1*skoXC1*skoXC1*((-13/60)+skoXC1*skoXC1*((-9/280)+skoXC1*skoXC1*((5/1344)+skoXC1*skoXC1*((161/12672)+skoXC1*skoXC1*(-63/704)))))<=0,skoXC1*skoXC1*((-1/2)+skoXC1*skoXC1*((7/120)+skoXC1*skoXC1*((33/560)+skoXC1*skoXC1*((125/2688)+skoXC1*skoXC1*((931/25344)+skoXC1*skoXC1*(-63/2816))))))<=0,skoXC1*skoXC1*((-1/6)+skoXC1*skoXC1*((-3/40)+skoXC1*skoXC1*((-5/112)+skoXC1*skoXC1*((-35/1152)+skoXC1*skoXC1*(-63/2816)))))<=1,skoXC1*(-1+skoXC1*skoXC1*((1/3)+skoXC1*skoXC1*((3/20)+skoXC1*skoXC1*((5/56)+skoXC1*skoXC1*((35/576)+skoXC1*skoXC1*(63/1408))))))<=0,skoXC1*(-1+skoXC1*skoXC1*((-1/6)+skoXC1*skoXC1*(-3/40)))<=0,skoXC1*skoXC1*((1/6)+skoXC1*skoXC1*(3/40))>-1,skoXC1*skoXC1*skoXC1*skoXC1*((32/15)+skoXC1*skoXC1*((-296/15)+skoXC1*skoXC1*((391/15)+skoXC1*skoXC1*((-146/15)+skoXC1*skoXC1*(3/4)))))<=0,skoXC1*skoXC1*((1/3)+skoXC1*skoXC1*(3/20))<=1,skoXC1*skoXC1*skoXC1*skoXC1*((-17/120)+skoXC1*skoXC1*(3/80))<=0,skoXC1*skoXC1*skoXC1*skoXC1*((-13/60)+skoXC1*skoXC1*(-3/10))<=0,skoXC1*skoXC1*((-1/2)+skoXC1*skoXC1*((7/120)+skoXC1*skoXC1*(-3/40)))<=0,skoXC1*skoXC1*((-1/6)+skoXC1*skoXC1*(-3/40))<=1,skoXC1*(-1+skoXC1*skoXC1*((1/3)+skoXC1*skoXC1*(3/20)))<=0,skoXC1*skoXC1>0,skoXC1*skoXC1*(80+skoXC1*skoXC1*(-40+skoXC1*skoXC1*(6+skoXC1*skoXC1*(-1/8))))<=48,skoXC1*skoXC1*(-80+skoXC1*skoXC1*(40+skoXC1*skoXC1*(-6+skoXC1*skoXC1*(1/8))))>-48,skoXC1*skoXC1*(24+skoXC1*skoXC1*(-10+skoXC1*skoXC1))<=16,skoXC1*skoXC1*(1/2)<=3,skoXC1*skoXC1*(-1/2)>-3,skoXC1>0,(7/8)>skoXC1,skoXC1*(-1+skoXC1*skoXC1*(1/3))<=0,skoXC1*skoXC1*(-1/6)<=1,skoXC1*skoXC1*((-1/2)+skoXC1*skoXC1*(-1/6))<=0,skoXC1*skoXC1<=2,skoXC1*skoXC1*skoXC1*skoXC1*(-2/3)<=0,skoXC1*(-1+skoXC1*skoXC1*(-1/6))<=0,skoXC1*skoXC1*(1/3)<=1,skoXC1*skoXC1*(256+skoXC1*skoXC1*(-160+skoXC1*skoXC1*(32+skoXC1*skoXC1*-1)))<=128,skoXC1*skoXC1*skoXC1*skoXC1*((-80/3)+skoXC1*skoXC1*((128/3)+skoXC1*skoXC1*((-55/3)+skoXC1*skoXC1*(5/3))))<=0,skoXC1*(-1+skoXC1*skoXC1*((1/3)+skoXC1*skoXC1*((3/20)+skoXC1*skoXC1*(5/56))))<=0,skoXC1*skoXC1*((-1/6)+skoXC1*skoXC1*((-3/40)+skoXC1*skoXC1*(-5/112)))<=1,skoXC1*skoXC1*((-1/2)+skoXC1*skoXC1*((7/120)+skoXC1*skoXC1*((33/560)+skoXC1*skoXC1*(-5/112))))<=0,skoXC1*skoXC1*skoXC1*skoXC1*((-13/60)+skoXC1*skoXC1*((-9/280)+skoXC1*skoXC1*(-5/28)))<=0,skoXC1*skoXC1*skoXC1*skoXC1*((-17/120)+skoXC1*skoXC1*((-27/280)+skoXC1*skoXC1*(5/224)))<=0,skoXC1*skoXC1*((1/3)+skoXC1*skoXC1*((3/20)+skoXC1*skoXC1*(5/56)))<=1,skoXC1*skoXC1*skoXC1*skoXC1*((32/15)+skoXC1*skoXC1*((-272/105)+skoXC1*skoXC1*((-1163/105)+skoXC1*skoXC1*((1753/105)+skoXC1*skoXC1*((-169/28)+skoXC1*skoXC1*(25/56))))))<=0,skoXC1*skoXC1*((1/6)+skoXC1*skoXC1*((3/40)+skoXC1*skoXC1*(5/112)))>-1,skoXC1*(-1+skoXC1*skoXC1*((-1/6)+skoXC1*skoXC1*((-3/40)+skoXC1*skoXC1*(-5/112))))<=0]], Reals]]

% In QepcadB format:
(E skoXC1) [[(skoXC1 skoXC1 skoXC1 skoXC1 (-13/60+(skoXC1 skoXC1 (-9/280+(skoXC1 skoXC1 (5/1344+(skoXC1 skoXC1 (161/12672+(skoXC1 skoXC1 (-63/704))))))))))<=0]/\[[(skoXC1 skoXC1 (-1/2+(skoXC1 skoXC1 (7/120+(skoXC1 skoXC1 (33/560+(skoXC1 skoXC1 (125/2688+(skoXC1 skoXC1 (931/25344+(skoXC1 skoXC1 (-63/2816))))))))))))<=0]/\[[(skoXC1 skoXC1 (-1/6+(skoXC1 skoXC1 (-3/40+(skoXC1 skoXC1 (-5/112+(skoXC1 skoXC1 (-35/1152+(skoXC1 skoXC1 (-63/2816))))))))))<=1]/\[[(skoXC1 (-1+(skoXC1 skoXC1 (1/3+(skoXC1 skoXC1 (3/20+(skoXC1 skoXC1 (5/56+(skoXC1 skoXC1 (35/576+(skoXC1 skoXC1 (63/1408))))))))))))<=0]/\[[(skoXC1 (-1+(skoXC1 skoXC1 (-1/6+(skoXC1 skoXC1 (-3/40))))))<=0]/\[[-1<(skoXC1 skoXC1 (1/6+(skoXC1 skoXC1 (3/40))))]/\[[(skoXC1 skoXC1 skoXC1 skoXC1 (32/15+(skoXC1 skoXC1 (-296/15+(skoXC1 skoXC1 (391/15+(skoXC1 skoXC1 (-146/15+(skoXC1 skoXC1 (3/4))))))))))<=0]/\[[(skoXC1 skoXC1 (1/3+(skoXC1 skoXC1 (3/20))))<=1]/\[[(skoXC1 skoXC1 skoXC1 skoXC1 (-17/120+(skoXC1 skoXC1 (3/80))))<=0]/\[[(skoXC1 skoXC1 skoXC1 skoXC1 (-13/60+(skoXC1 skoXC1 (-3/10))))<=0]/\[[(skoXC1 skoXC1 (-1/2+(skoXC1 skoXC1 (7/120+(skoXC1 skoXC1 (-3/40))))))<=0]/\[[(skoXC1 skoXC1 (-1/6+(skoXC1 skoXC1 (-3/40))))<=1]/\[[(skoXC1 (-1+(skoXC1 skoXC1 (1/3+(skoXC1 skoXC1 (3/20))))))<=0]/\[[0<(skoXC1 skoXC1)]/\[[(skoXC1 skoXC1 (80+(skoXC1 skoXC1 (-40+(skoXC1 skoXC1 (6+(skoXC1 skoXC1 (-1/8))))))))<=48]/\[[-48<(skoXC1 skoXC1 (-80+(skoXC1 skoXC1 (40+(skoXC1 skoXC1 (-6+(skoXC1 skoXC1 (1/8))))))))]/\[[(skoXC1 skoXC1 (24+(skoXC1 skoXC1 (-10+(skoXC1 skoXC1)))))<=16]/\[[(skoXC1 skoXC1 (1/2))<=3]/\[[-3<(skoXC1 skoXC1 (-1/2))]/\[[0<skoXC1]/\[[skoXC1<7/8]/\[[(skoXC1 (-1+(skoXC1 skoXC1 (1/3))))<=0]/\[[(skoXC1 skoXC1 (-1/6))<=1]/\[[(skoXC1 skoXC1 (-1/2+(skoXC1 skoXC1 (-1/6))))<=0]/\[[(skoXC1 skoXC1)<=2]/\[[(skoXC1 skoXC1 skoXC1 skoXC1 (-2/3))<=0]/\[[(skoXC1 (-1+(skoXC1 skoXC1 (-1/6))))<=0]/\[[(skoXC1 skoXC1 (1/3))<=1]/\[[(skoXC1 skoXC1 (256+(skoXC1 skoXC1 (-160+(skoXC1 skoXC1 (32+(skoXC1 skoXC1 (-1))))))))<=128]/\[[(skoXC1 skoXC1 skoXC1 skoXC1 (-80/3+(skoXC1 skoXC1 (128/3+(skoXC1 skoXC1 (-55/3+(skoXC1 skoXC1 (5/3))))))))<=0]/\[[(skoXC1 (-1+(skoXC1 skoXC1 (1/3+(skoXC1 skoXC1 (3/20+(skoXC1 skoXC1 (5/56))))))))<=0]/\[[(skoXC1 skoXC1 (-1/6+(skoXC1 skoXC1 (-3/40+(skoXC1 skoXC1 (-5/112))))))<=1]/\[[(skoXC1 skoXC1 (-1/2+(skoXC1 skoXC1 (7/120+(skoXC1 skoXC1 (33/560+(skoXC1 skoXC1 (-5/112))))))))<=0]/\[[(skoXC1 skoXC1 skoXC1 skoXC1 (-13/60+(skoXC1 skoXC1 (-9/280+(skoXC1 skoXC1 (-5/28))))))<=0]/\[[(skoXC1 skoXC1 skoXC1 skoXC1 (-17/120+(skoXC1 skoXC1 (-27/280+(skoXC1 skoXC1 (5/224))))))<=0]/\[[(skoXC1 skoXC1 (1/3+(skoXC1 skoXC1 (3/20+(skoXC1 skoXC1 (5/56))))))<=1]/\[[(skoXC1 skoXC1 skoXC1 skoXC1 (32/15+(skoXC1 skoXC1 (-272/105+(skoXC1 skoXC1 (-1163/105+(skoXC1 skoXC1 (1753/105+(skoXC1 skoXC1 (-169/28+(skoXC1 skoXC1 (25/56))))))))))))<=0]/\[[-1<(skoXC1 skoXC1 (1/6+(skoXC1 skoXC1 (3/40+(skoXC1 skoXC1 (5/112))))))]/\[(skoXC1 (-1+(skoXC1 skoXC1 (-1/6+(skoXC1 skoXC1 (-3/40+(skoXC1 skoXC1 (-5/112))))))))<=0]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]].

% In SMTLib2 format:
(declare-fun skoXC1 () Real) (assert (and (<= (* skoXC1 (* skoXC1 (* skoXC1 (* skoXC1 (+ (/ (- 13.) 60.) (* skoXC1 (* skoXC1 (+ (/ (- 9.) 280.) (* skoXC1 (* skoXC1 (+ (/ 5. 1344.) (* skoXC1 (* skoXC1 (+ (/ 161. 12672.) (* skoXC1 (* skoXC1 (/ (- 63.) 704.))))))))))))))))) 0.) (and (<= (* skoXC1 (* skoXC1 (+ (/ (- 1.) 2.) (* skoXC1 (* skoXC1 (+ (/ 7. 120.) (* skoXC1 (* skoXC1 (+ (/ 33. 560.) (* skoXC1 (* skoXC1 (+ (/ 125. 2688.) (* skoXC1 (* skoXC1 (+ (/ 931. 25344.) (* skoXC1 (* skoXC1 (/ (- 63.) 2816.)))))))))))))))))) 0.) (and (<= (* skoXC1 (* skoXC1 (+ (/ (- 1.) 6.) (* skoXC1 (* skoXC1 (+ (/ (- 3.) 40.) (* skoXC1 (* skoXC1 (+ (/ (- 5.) 112.) (* skoXC1 (* skoXC1 (+ (/ (- 35.) 1152.) (* skoXC1 (* skoXC1 (/ (- 63.) 2816.))))))))))))))) 1.) (and (<= (* skoXC1 (+ (- 1.) (* skoXC1 (* skoXC1 (+ (/ 1. 3.) (* skoXC1 (* skoXC1 (+ (/ 3. 20.) (* skoXC1 (* skoXC1 (+ (/ 5. 56.) (* skoXC1 (* skoXC1 (+ (/ 35. 576.) (* skoXC1 (* skoXC1 (/ 63. 1408.))))))))))))))))) 0.) (and (<= (* skoXC1 (+ (- 1.) (* skoXC1 (* skoXC1 (+ (/ (- 1.) 6.) (* skoXC1 (* skoXC1 (/ (- 3.) 40.)))))))) 0.) (and (> (* skoXC1 (* skoXC1 (+ (/ 1. 6.) (* skoXC1 (* skoXC1 (/ 3. 40.)))))) (- 1.)) (and (<= (* skoXC1 (* skoXC1 (* skoXC1 (* skoXC1 (+ (/ 32. 15.) (* skoXC1 (* skoXC1 (+ (/ (- 296.) 15.) (* skoXC1 (* skoXC1 (+ (/ 391. 15.) (* skoXC1 (* skoXC1 (+ (/ (- 146.) 15.) (* skoXC1 (* skoXC1 (/ 3. 4.))))))))))))))))) 0.) (and (<= (* skoXC1 (* skoXC1 (+ (/ 1. 3.) (* skoXC1 (* skoXC1 (/ 3. 20.)))))) 1.) (and (<= (* skoXC1 (* skoXC1 (* skoXC1 (* skoXC1 (+ (/ (- 17.) 120.) (* skoXC1 (* skoXC1 (/ 3. 80.)))))))) 0.) (and (<= (* skoXC1 (* skoXC1 (* skoXC1 (* skoXC1 (+ (/ (- 13.) 60.) (* skoXC1 (* skoXC1 (/ (- 3.) 10.)))))))) 0.) (and (<= (* skoXC1 (* skoXC1 (+ (/ (- 1.) 2.) (* skoXC1 (* skoXC1 (+ (/ 7. 120.) (* skoXC1 (* skoXC1 (/ (- 3.) 40.))))))))) 0.) (and (<= (* skoXC1 (* skoXC1 (+ (/ (- 1.) 6.) (* skoXC1 (* skoXC1 (/ (- 3.) 40.)))))) 1.) (and (<= (* skoXC1 (+ (- 1.) (* skoXC1 (* skoXC1 (+ (/ 1. 3.) (* skoXC1 (* skoXC1 (/ 3. 20.)))))))) 0.) (and (> (* skoXC1 skoXC1) 0.) (and (<= (* skoXC1 (* skoXC1 (+ 80. (* skoXC1 (* skoXC1 (+ (- 40.) (* skoXC1 (* skoXC1 (+ 6. (* skoXC1 (* skoXC1 (/ (- 1.) 8.)))))))))))) 48.) (and (> (* skoXC1 (* skoXC1 (+ (- 80.) (* skoXC1 (* skoXC1 (+ 40. (* skoXC1 (* skoXC1 (+ (- 6.) (* skoXC1 (* skoXC1 (/ 1. 8.)))))))))))) (- 48.)) (and (<= (* skoXC1 (* skoXC1 (+ 24. (* skoXC1 (* skoXC1 (+ (- 10.) (* skoXC1 skoXC1))))))) 16.) (and (<= (* skoXC1 (* skoXC1 (/ 1. 2.))) 3.) (and (> (* skoXC1 (* skoXC1 (/ (- 1.) 2.))) (- 3.)) (and (> skoXC1 0.) (and (> (/ 7. 8.) skoXC1) (and (<= (* skoXC1 (+ (- 1.) (* skoXC1 (* skoXC1 (/ 1. 3.))))) 0.) (and (<= (* skoXC1 (* skoXC1 (/ (- 1.) 6.))) 1.) (and (<= (* skoXC1 (* skoXC1 (+ (/ (- 1.) 2.) (* skoXC1 (* skoXC1 (/ (- 1.) 6.)))))) 0.) (and (<= (* skoXC1 skoXC1) 2.) (and (<= (* skoXC1 (* skoXC1 (* skoXC1 (* skoXC1 (/ (- 2.) 3.))))) 0.) (and (<= (* skoXC1 (+ (- 1.) (* skoXC1 (* skoXC1 (/ (- 1.) 6.))))) 0.) (and (<= (* skoXC1 (* skoXC1 (/ 1. 3.))) 1.) (and (<= (* skoXC1 (* skoXC1 (+ 256. (* skoXC1 (* skoXC1 (+ (- 160.) (* skoXC1 (* skoXC1 (+ 32. (* skoXC1 (* skoXC1 (- 1.)))))))))))) 128.) (and (<= (* skoXC1 (* skoXC1 (* skoXC1 (* skoXC1 (+ (/ (- 80.) 3.) (* skoXC1 (* skoXC1 (+ (/ 128. 3.) (* skoXC1 (* skoXC1 (+ (/ (- 55.) 3.) (* skoXC1 (* skoXC1 (/ 5. 3.)))))))))))))) 0.) (and (<= (* skoXC1 (+ (- 1.) (* skoXC1 (* skoXC1 (+ (/ 1. 3.) (* skoXC1 (* skoXC1 (+ (/ 3. 20.) (* skoXC1 (* skoXC1 (/ 5. 56.))))))))))) 0.) (and (<= (* skoXC1 (* skoXC1 (+ (/ (- 1.) 6.) (* skoXC1 (* skoXC1 (+ (/ (- 3.) 40.) (* skoXC1 (* skoXC1 (/ (- 5.) 112.))))))))) 1.) (and (<= (* skoXC1 (* skoXC1 (+ (/ (- 1.) 2.) (* skoXC1 (* skoXC1 (+ (/ 7. 120.) (* skoXC1 (* skoXC1 (+ (/ 33. 560.) (* skoXC1 (* skoXC1 (/ (- 5.) 112.)))))))))))) 0.) (and (<= (* skoXC1 (* skoXC1 (* skoXC1 (* skoXC1 (+ (/ (- 13.) 60.) (* skoXC1 (* skoXC1 (+ (/ (- 9.) 280.) (* skoXC1 (* skoXC1 (/ (- 5.) 28.))))))))))) 0.) (and (<= (* skoXC1 (* skoXC1 (* skoXC1 (* skoXC1 (+ (/ (- 17.) 120.) (* skoXC1 (* skoXC1 (+ (/ (- 27.) 280.) (* skoXC1 (* skoXC1 (/ 5. 224.))))))))))) 0.) (and (<= (* skoXC1 (* skoXC1 (+ (/ 1. 3.) (* skoXC1 (* skoXC1 (+ (/ 3. 20.) (* skoXC1 (* skoXC1 (/ 5. 56.))))))))) 1.) (and (<= (* skoXC1 (* skoXC1 (* skoXC1 (* skoXC1 (+ (/ 32. 15.) (* skoXC1 (* skoXC1 (+ (/ (- 272.) 105.) (* skoXC1 (* skoXC1 (+ (/ (- 1163.) 105.) (* skoXC1 (* skoXC1 (+ (/ 1753. 105.) (* skoXC1 (* skoXC1 (+ (/ (- 169.) 28.) (* skoXC1 (* skoXC1 (/ 25. 56.)))))))))))))))))))) 0.) (and (> (* skoXC1 (* skoXC1 (+ (/ 1. 6.) (* skoXC1 (* skoXC1 (+ (/ 3. 40.) (* skoXC1 (* skoXC1 (/ 5. 112.))))))))) (- 1.)) (<= (* skoXC1 (+ (- 1.) (* skoXC1 (* skoXC1 (+ (/ (- 1.) 6.) (* skoXC1 (* skoXC1 (+ (/ (- 3.) 40.) (* skoXC1 (* skoXC1 (/ (- 5.) 112.))))))))))) 0.))))))))))))))))))))))))))))))))))))))))

% In GRF format:
(sequent " MetiTarski formula " (antecedent (<= (* skoXC1 (* skoXC1 (* skoXC1 (* skoXC1 (+ (/ (- 13.) 60.) (* skoXC1 (* skoXC1 (+ (/ (- 9.) 280.) (* skoXC1 (* skoXC1 (+ (/ 5. 1344.) (* skoXC1 (* skoXC1 (+ (/ 161. 12672.) (* skoXC1 (* skoXC1 (/ (- 63.) 704.))))))))))))))))) 0.) (<= (* skoXC1 (* skoXC1 (+ (/ (- 1.) 2.) (* skoXC1 (* skoXC1 (+ (/ 7. 120.) (* skoXC1 (* skoXC1 (+ (/ 33. 560.) (* skoXC1 (* skoXC1 (+ (/ 125. 2688.) (* skoXC1 (* skoXC1 (+ (/ 931. 25344.) (* skoXC1 (* skoXC1 (/ (- 63.) 2816.)))))))))))))))))) 0.) (<= (* skoXC1 (* skoXC1 (+ (/ (- 1.) 6.) (* skoXC1 (* skoXC1 (+ (/ (- 3.) 40.) (* skoXC1 (* skoXC1 (+ (/ (- 5.) 112.) (* skoXC1 (* skoXC1 (+ (/ (- 35.) 1152.) (* skoXC1 (* skoXC1 (/ (- 63.) 2816.))))))))))))))) 1.) (<= (* skoXC1 (+ (- 1.) (* skoXC1 (* skoXC1 (+ (/ 1. 3.) (* skoXC1 (* skoXC1 (+ (/ 3. 20.) (* skoXC1 (* skoXC1 (+ (/ 5. 56.) (* skoXC1 (* skoXC1 (+ (/ 35. 576.) (* skoXC1 (* skoXC1 (/ 63. 1408.))))))))))))))))) 0.) (<= (* skoXC1 (+ (- 1.) (* skoXC1 (* skoXC1 (+ (/ (- 1.) 6.) (* skoXC1 (* skoXC1 (/ (- 3.) 40.)))))))) 0.) (> (* skoXC1 (* skoXC1 (+ (/ 1. 6.) (* skoXC1 (* skoXC1 (/ 3. 40.)))))) (- 1.)) (<= (* skoXC1 (* skoXC1 (* skoXC1 (* skoXC1 (+ (/ 32. 15.) (* skoXC1 (* skoXC1 (+ (/ (- 296.) 15.) (* skoXC1 (* skoXC1 (+ (/ 391. 15.) (* skoXC1 (* skoXC1 (+ (/ (- 146.) 15.) (* skoXC1 (* skoXC1 (/ 3. 4.))))))))))))))))) 0.) (<= (* skoXC1 (* skoXC1 (+ (/ 1. 3.) (* skoXC1 (* skoXC1 (/ 3. 20.)))))) 1.) (<= (* skoXC1 (* skoXC1 (* skoXC1 (* skoXC1 (+ (/ (- 17.) 120.) (* skoXC1 (* skoXC1 (/ 3. 80.)))))))) 0.) (<= (* skoXC1 (* skoXC1 (* skoXC1 (* skoXC1 (+ (/ (- 13.) 60.) (* skoXC1 (* skoXC1 (/ (- 3.) 10.)))))))) 0.) (<= (* skoXC1 (* skoXC1 (+ (/ (- 1.) 2.) (* skoXC1 (* skoXC1 (+ (/ 7. 120.) (* skoXC1 (* skoXC1 (/ (- 3.) 40.))))))))) 0.) (<= (* skoXC1 (* skoXC1 (+ (/ (- 1.) 6.) (* skoXC1 (* skoXC1 (/ (- 3.) 40.)))))) 1.) (<= (* skoXC1 (+ (- 1.) (* skoXC1 (* skoXC1 (+ (/ 1. 3.) (* skoXC1 (* skoXC1 (/ 3. 20.)))))))) 0.) (> (* skoXC1 skoXC1) 0.) (<= (* skoXC1 (* skoXC1 (+ 80. (* skoXC1 (* skoXC1 (+ (- 40.) (* skoXC1 (* skoXC1 (+ 6. (* skoXC1 (* skoXC1 (/ (- 1.) 8.)))))))))))) 48.) (> (* skoXC1 (* skoXC1 (+ (- 80.) (* skoXC1 (* skoXC1 (+ 40. (* skoXC1 (* skoXC1 (+ (- 6.) (* skoXC1 (* skoXC1 (/ 1. 8.)))))))))))) (- 48.)) (<= (* skoXC1 (* skoXC1 (+ 24. (* skoXC1 (* skoXC1 (+ (- 10.) (* skoXC1 skoXC1))))))) 16.) (<= (* skoXC1 (* skoXC1 (/ 1. 2.))) 3.) (> (* skoXC1 (* skoXC1 (/ (- 1.) 2.))) (- 3.)) (> skoXC1 0.) (> (/ 7. 8.) skoXC1) (<= (* skoXC1 (+ (- 1.) (* skoXC1 (* skoXC1 (/ 1. 3.))))) 0.) (<= (* skoXC1 (* skoXC1 (/ (- 1.) 6.))) 1.) (<= (* skoXC1 (* skoXC1 (+ (/ (- 1.) 2.) (* skoXC1 (* skoXC1 (/ (- 1.) 6.)))))) 0.) (<= (* skoXC1 skoXC1) 2.) (<= (* skoXC1 (* skoXC1 (* skoXC1 (* skoXC1 (/ (- 2.) 3.))))) 0.) (<= (* skoXC1 (+ (- 1.) (* skoXC1 (* skoXC1 (/ (- 1.) 6.))))) 0.) (<= (* skoXC1 (* skoXC1 (/ 1. 3.))) 1.) (<= (* skoXC1 (* skoXC1 (+ 256. (* skoXC1 (* skoXC1 (+ (- 160.) (* skoXC1 (* skoXC1 (+ 32. (* skoXC1 (* skoXC1 (- 1.)))))))))))) 128.) (<= (* skoXC1 (* skoXC1 (* skoXC1 (* skoXC1 (+ (/ (- 80.) 3.) (* skoXC1 (* skoXC1 (+ (/ 128. 3.) (* skoXC1 (* skoXC1 (+ (/ (- 55.) 3.) (* skoXC1 (* skoXC1 (/ 5. 3.)))))))))))))) 0.) (<= (* skoXC1 (+ (- 1.) (* skoXC1 (* skoXC1 (+ (/ 1. 3.) (* skoXC1 (* skoXC1 (+ (/ 3. 20.) (* skoXC1 (* skoXC1 (/ 5. 56.))))))))))) 0.) (<= (* skoXC1 (* skoXC1 (+ (/ (- 1.) 6.) (* skoXC1 (* skoXC1 (+ (/ (- 3.) 40.) (* skoXC1 (* skoXC1 (/ (- 5.) 112.))))))))) 1.) (<= (* skoXC1 (* skoXC1 (+ (/ (- 1.) 2.) (* skoXC1 (* skoXC1 (+ (/ 7. 120.) (* skoXC1 (* skoXC1 (+ (/ 33. 560.) (* skoXC1 (* skoXC1 (/ (- 5.) 112.)))))))))))) 0.) (<= (* skoXC1 (* skoXC1 (* skoXC1 (* skoXC1 (+ (/ (- 13.) 60.) (* skoXC1 (* skoXC1 (+ (/ (- 9.) 280.) (* skoXC1 (* skoXC1 (/ (- 5.) 28.))))))))))) 0.) (<= (* skoXC1 (* skoXC1 (* skoXC1 (* skoXC1 (+ (/ (- 17.) 120.) (* skoXC1 (* skoXC1 (+ (/ (- 27.) 280.) (* skoXC1 (* skoXC1 (/ 5. 224.))))))))))) 0.) (<= (* skoXC1 (* skoXC1 (+ (/ 1. 3.) (* skoXC1 (* skoXC1 (+ (/ 3. 20.) (* skoXC1 (* skoXC1 (/ 5. 56.))))))))) 1.) (<= (* skoXC1 (* skoXC1 (* skoXC1 (* skoXC1 (+ (/ 32. 15.) (* skoXC1 (* skoXC1 (+ (/ (- 272.) 105.) (* skoXC1 (* skoXC1 (+ (/ (- 1163.) 105.) (* skoXC1 (* skoXC1 (+ (/ 1753. 105.) (* skoXC1 (* skoXC1 (+ (/ (- 169.) 28.) (* skoXC1 (* skoXC1 (/ 25. 56.)))))))))))))))))))) 0.) (> (* skoXC1 (* skoXC1 (+ (/ 1. 6.) (* skoXC1 (* skoXC1 (+ (/ 3. 40.) (* skoXC1 (* skoXC1 (/ 5. 112.))))))))) (- 1.))) (succedent (> (* skoXC1 (+ (- 1.) (* skoXC1 (* skoXC1 (+ (/ (- 1.) 6.) (* skoXC1 (* skoXC1 (+ (/ (- 3.) 40.) (* skoXC1 (* skoXC1 (/ (- 5.) 112.))))))))))) 0.)))
-----[end problem]-----

-----[begin problem]-----
% In Mathematica format:
Timing[Resolve[Exists[{skoXC1}, And[skoXC1*skoXC1*((-1/6)+skoXC1*skoXC1*((-3/40)+skoXC1*skoXC1*((-5/112)+skoXC1*skoXC1*((-35/1152)+skoXC1*skoXC1*(-63/2816)))))<=1,skoXC1*skoXC1*skoXC1*skoXC1*((-13/60)+skoXC1*skoXC1*((-9/280)+skoXC1*skoXC1*((5/1344)+skoXC1*skoXC1*((161/12672)+skoXC1*skoXC1*(-63/704)))))<=0,skoXC1*skoXC1*((-1/2)+skoXC1*skoXC1*((7/120)+skoXC1*skoXC1*((33/560)+skoXC1*skoXC1*((125/2688)+skoXC1*skoXC1*((931/25344)+skoXC1*skoXC1*(-63/2816))))))<=0,skoXC1*skoXC1*((-1/6)+skoXC1*skoXC1*((-3/40)+skoXC1*skoXC1*((-5/112)+skoXC1*skoXC1*((-35/1152)+skoXC1*skoXC1*(-63/2816)))))<=1,skoXC1*(-1+skoXC1*skoXC1*((1/3)+skoXC1*skoXC1*((3/20)+skoXC1*skoXC1*((5/56)+skoXC1*skoXC1*((35/576)+skoXC1*skoXC1*(63/1408))))))<=0,skoXC1*(-1+skoXC1*skoXC1*((-1/6)+skoXC1*skoXC1*(-3/40)))<=0,skoXC1*skoXC1*((1/6)+skoXC1*skoXC1*(3/40))>-1,skoXC1*skoXC1*skoXC1*skoXC1*((32/15)+skoXC1*skoXC1*((-296/15)+skoXC1*skoXC1*((391/15)+skoXC1*skoXC1*((-146/15)+skoXC1*skoXC1*(3/4)))))<=0,skoXC1*skoXC1*((1/3)+skoXC1*skoXC1*(3/20))<=1,skoXC1*skoXC1*skoXC1*skoXC1*((-17/120)+skoXC1*skoXC1*(3/80))<=0,skoXC1*skoXC1*skoXC1*skoXC1*((-13/60)+skoXC1*skoXC1*(-3/10))<=0,skoXC1*skoXC1*((-1/2)+skoXC1*skoXC1*((7/120)+skoXC1*skoXC1*(-3/40)))<=0,skoXC1*skoXC1*((-1/6)+skoXC1*skoXC1*(-3/40))<=1,skoXC1*(-1+skoXC1*skoXC1*((1/3)+skoXC1*skoXC1*(3/20)))<=0,skoXC1*skoXC1>0,skoXC1*skoXC1*(80+skoXC1*skoXC1*(-40+skoXC1*skoXC1*(6+skoXC1*skoXC1*(-1/8))))<=48,skoXC1*skoXC1*(-80+skoXC1*skoXC1*(40+skoXC1*skoXC1*(-6+skoXC1*skoXC1*(1/8))))>-48,skoXC1*skoXC1*(24+skoXC1*skoXC1*(-10+skoXC1*skoXC1))<=16,skoXC1*skoXC1*(1/2)<=3,skoXC1*skoXC1*(-1/2)>-3,skoXC1>0,(7/8)>skoXC1,skoXC1*(-1+skoXC1*skoXC1*(1/3))<=0,skoXC1*skoXC1*(-1/6)<=1,skoXC1*skoXC1*((-1/2)+skoXC1*skoXC1*(-1/6))<=0,skoXC1*skoXC1<=2,skoXC1*skoXC1*skoXC1*skoXC1*(-2/3)<=0,skoXC1*(-1+skoXC1*skoXC1*(-1/6))<=0,skoXC1*skoXC1*(1/3)<=1,skoXC1*skoXC1*(256+skoXC1*skoXC1*(-160+skoXC1*skoXC1*(32+skoXC1*skoXC1*-1)))<=128,skoXC1*skoXC1*skoXC1*skoXC1*((-80/3)+skoXC1*skoXC1*((128/3)+skoXC1*skoXC1*((-55/3)+skoXC1*skoXC1*(5/3))))<=0,skoXC1*(-1+skoXC1*skoXC1*((1/3)+skoXC1*skoXC1*((3/20)+skoXC1*skoXC1*(5/56))))<=0,skoXC1*skoXC1*((-1/6)+skoXC1*skoXC1*((-3/40)+skoXC1*skoXC1*(-5/112)))<=1,skoXC1*skoXC1*((-1/2)+skoXC1*skoXC1*((7/120)+skoXC1*skoXC1*((33/560)+skoXC1*skoXC1*(-5/112))))<=0,skoXC1*skoXC1*skoXC1*skoXC1*((-13/60)+skoXC1*skoXC1*((-9/280)+skoXC1*skoXC1*(-5/28)))<=0,skoXC1*skoXC1*skoXC1*skoXC1*((-17/120)+skoXC1*skoXC1*((-27/280)+skoXC1*skoXC1*(5/224)))<=0,skoXC1*skoXC1*((1/3)+skoXC1*skoXC1*((3/20)+skoXC1*skoXC1*(5/56)))<=1,skoXC1*skoXC1*skoXC1*skoXC1*((32/15)+skoXC1*skoXC1*((-272/105)+skoXC1*skoXC1*((-1163/105)+skoXC1*skoXC1*((1753/105)+skoXC1*skoXC1*((-169/28)+skoXC1*skoXC1*(25/56))))))<=0,skoXC1*skoXC1*((1/6)+skoXC1*skoXC1*((3/40)+skoXC1*skoXC1*(5/112)))>-1,skoXC1*(-1+skoXC1*skoXC1*((-1/6)+skoXC1*skoXC1*((-3/40)+skoXC1*skoXC1*(-5/112))))<=0]], Reals]]

% In QepcadB format:
(E skoXC1) [[(skoXC1 skoXC1 (-1/6+(skoXC1 skoXC1 (-3/40+(skoXC1 skoXC1 (-5/112+(skoXC1 skoXC1 (-35/1152+(skoXC1 skoXC1 (-63/2816))))))))))<=1]/\[[(skoXC1 skoXC1 skoXC1 skoXC1 (-13/60+(skoXC1 skoXC1 (-9/280+(skoXC1 skoXC1 (5/1344+(skoXC1 skoXC1 (161/12672+(skoXC1 skoXC1 (-63/704))))))))))<=0]/\[[(skoXC1 skoXC1 (-1/2+(skoXC1 skoXC1 (7/120+(skoXC1 skoXC1 (33/560+(skoXC1 skoXC1 (125/2688+(skoXC1 skoXC1 (931/25344+(skoXC1 skoXC1 (-63/2816))))))))))))<=0]/\[[(skoXC1 skoXC1 (-1/6+(skoXC1 skoXC1 (-3/40+(skoXC1 skoXC1 (-5/112+(skoXC1 skoXC1 (-35/1152+(skoXC1 skoXC1 (-63/2816))))))))))<=1]/\[[(skoXC1 (-1+(skoXC1 skoXC1 (1/3+(skoXC1 skoXC1 (3/20+(skoXC1 skoXC1 (5/56+(skoXC1 skoXC1 (35/576+(skoXC1 skoXC1 (63/1408))))))))))))<=0]/\[[(skoXC1 (-1+(skoXC1 skoXC1 (-1/6+(skoXC1 skoXC1 (-3/40))))))<=0]/\[[-1<(skoXC1 skoXC1 (1/6+(skoXC1 skoXC1 (3/40))))]/\[[(skoXC1 skoXC1 skoXC1 skoXC1 (32/15+(skoXC1 skoXC1 (-296/15+(skoXC1 skoXC1 (391/15+(skoXC1 skoXC1 (-146/15+(skoXC1 skoXC1 (3/4))))))))))<=0]/\[[(skoXC1 skoXC1 (1/3+(skoXC1 skoXC1 (3/20))))<=1]/\[[(skoXC1 skoXC1 skoXC1 skoXC1 (-17/120+(skoXC1 skoXC1 (3/80))))<=0]/\[[(skoXC1 skoXC1 skoXC1 skoXC1 (-13/60+(skoXC1 skoXC1 (-3/10))))<=0]/\[[(skoXC1 skoXC1 (-1/2+(skoXC1 skoXC1 (7/120+(skoXC1 skoXC1 (-3/40))))))<=0]/\[[(skoXC1 skoXC1 (-1/6+(skoXC1 skoXC1 (-3/40))))<=1]/\[[(skoXC1 (-1+(skoXC1 skoXC1 (1/3+(skoXC1 skoXC1 (3/20))))))<=0]/\[[0<(skoXC1 skoXC1)]/\[[(skoXC1 skoXC1 (80+(skoXC1 skoXC1 (-40+(skoXC1 skoXC1 (6+(skoXC1 skoXC1 (-1/8))))))))<=48]/\[[-48<(skoXC1 skoXC1 (-80+(skoXC1 skoXC1 (40+(skoXC1 skoXC1 (-6+(skoXC1 skoXC1 (1/8))))))))]/\[[(skoXC1 skoXC1 (24+(skoXC1 skoXC1 (-10+(skoXC1 skoXC1)))))<=16]/\[[(skoXC1 skoXC1 (1/2))<=3]/\[[-3<(skoXC1 skoXC1 (-1/2))]/\[[0<skoXC1]/\[[skoXC1<7/8]/\[[(skoXC1 (-1+(skoXC1 skoXC1 (1/3))))<=0]/\[[(skoXC1 skoXC1 (-1/6))<=1]/\[[(skoXC1 skoXC1 (-1/2+(skoXC1 skoXC1 (-1/6))))<=0]/\[[(skoXC1 skoXC1)<=2]/\[[(skoXC1 skoXC1 skoXC1 skoXC1 (-2/3))<=0]/\[[(skoXC1 (-1+(skoXC1 skoXC1 (-1/6))))<=0]/\[[(skoXC1 skoXC1 (1/3))<=1]/\[[(skoXC1 skoXC1 (256+(skoXC1 skoXC1 (-160+(skoXC1 skoXC1 (32+(skoXC1 skoXC1 (-1))))))))<=128]/\[[(skoXC1 skoXC1 skoXC1 skoXC1 (-80/3+(skoXC1 skoXC1 (128/3+(skoXC1 skoXC1 (-55/3+(skoXC1 skoXC1 (5/3))))))))<=0]/\[[(skoXC1 (-1+(skoXC1 skoXC1 (1/3+(skoXC1 skoXC1 (3/20+(skoXC1 skoXC1 (5/56))))))))<=0]/\[[(skoXC1 skoXC1 (-1/6+(skoXC1 skoXC1 (-3/40+(skoXC1 skoXC1 (-5/112))))))<=1]/\[[(skoXC1 skoXC1 (-1/2+(skoXC1 skoXC1 (7/120+(skoXC1 skoXC1 (33/560+(skoXC1 skoXC1 (-5/112))))))))<=0]/\[[(skoXC1 skoXC1 skoXC1 skoXC1 (-13/60+(skoXC1 skoXC1 (-9/280+(skoXC1 skoXC1 (-5/28))))))<=0]/\[[(skoXC1 skoXC1 skoXC1 skoXC1 (-17/120+(skoXC1 skoXC1 (-27/280+(skoXC1 skoXC1 (5/224))))))<=0]/\[[(skoXC1 skoXC1 (1/3+(skoXC1 skoXC1 (3/20+(skoXC1 skoXC1 (5/56))))))<=1]/\[[(skoXC1 skoXC1 skoXC1 skoXC1 (32/15+(skoXC1 skoXC1 (-272/105+(skoXC1 skoXC1 (-1163/105+(skoXC1 skoXC1 (1753/105+(skoXC1 skoXC1 (-169/28+(skoXC1 skoXC1 (25/56))))))))))))<=0]/\[[-1<(skoXC1 skoXC1 (1/6+(skoXC1 skoXC1 (3/40+(skoXC1 skoXC1 (5/112))))))]/\[(skoXC1 (-1+(skoXC1 skoXC1 (-1/6+(skoXC1 skoXC1 (-3/40+(skoXC1 skoXC1 (-5/112))))))))<=0]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]].

% In SMTLib2 format:
(declare-fun skoXC1 () Real) (assert (and (<= (* skoXC1 (* skoXC1 (+ (/ (- 1.) 6.) (* skoXC1 (* skoXC1 (+ (/ (- 3.) 40.) (* skoXC1 (* skoXC1 (+ (/ (- 5.) 112.) (* skoXC1 (* skoXC1 (+ (/ (- 35.) 1152.) (* skoXC1 (* skoXC1 (/ (- 63.) 2816.))))))))))))))) 1.) (and (<= (* skoXC1 (* skoXC1 (* skoXC1 (* skoXC1 (+ (/ (- 13.) 60.) (* skoXC1 (* skoXC1 (+ (/ (- 9.) 280.) (* skoXC1 (* skoXC1 (+ (/ 5. 1344.) (* skoXC1 (* skoXC1 (+ (/ 161. 12672.) (* skoXC1 (* skoXC1 (/ (- 63.) 704.))))))))))))))))) 0.) (and (<= (* skoXC1 (* skoXC1 (+ (/ (- 1.) 2.) (* skoXC1 (* skoXC1 (+ (/ 7. 120.) (* skoXC1 (* skoXC1 (+ (/ 33. 560.) (* skoXC1 (* skoXC1 (+ (/ 125. 2688.) (* skoXC1 (* skoXC1 (+ (/ 931. 25344.) (* skoXC1 (* skoXC1 (/ (- 63.) 2816.)))))))))))))))))) 0.) (and (<= (* skoXC1 (* skoXC1 (+ (/ (- 1.) 6.) (* skoXC1 (* skoXC1 (+ (/ (- 3.) 40.) (* skoXC1 (* skoXC1 (+ (/ (- 5.) 112.) (* skoXC1 (* skoXC1 (+ (/ (- 35.) 1152.) (* skoXC1 (* skoXC1 (/ (- 63.) 2816.))))))))))))))) 1.) (and (<= (* skoXC1 (+ (- 1.) (* skoXC1 (* skoXC1 (+ (/ 1. 3.) (* skoXC1 (* skoXC1 (+ (/ 3. 20.) (* skoXC1 (* skoXC1 (+ (/ 5. 56.) (* skoXC1 (* skoXC1 (+ (/ 35. 576.) (* skoXC1 (* skoXC1 (/ 63. 1408.))))))))))))))))) 0.) (and (<= (* skoXC1 (+ (- 1.) (* skoXC1 (* skoXC1 (+ (/ (- 1.) 6.) (* skoXC1 (* skoXC1 (/ (- 3.) 40.)))))))) 0.) (and (> (* skoXC1 (* skoXC1 (+ (/ 1. 6.) (* skoXC1 (* skoXC1 (/ 3. 40.)))))) (- 1.)) (and (<= (* skoXC1 (* skoXC1 (* skoXC1 (* skoXC1 (+ (/ 32. 15.) (* skoXC1 (* skoXC1 (+ (/ (- 296.) 15.) (* skoXC1 (* skoXC1 (+ (/ 391. 15.) (* skoXC1 (* skoXC1 (+ (/ (- 146.) 15.) (* skoXC1 (* skoXC1 (/ 3. 4.))))))))))))))))) 0.) (and (<= (* skoXC1 (* skoXC1 (+ (/ 1. 3.) (* skoXC1 (* skoXC1 (/ 3. 20.)))))) 1.) (and (<= (* skoXC1 (* skoXC1 (* skoXC1 (* skoXC1 (+ (/ (- 17.) 120.) (* skoXC1 (* skoXC1 (/ 3. 80.)))))))) 0.) (and (<= (* skoXC1 (* skoXC1 (* skoXC1 (* skoXC1 (+ (/ (- 13.) 60.) (* skoXC1 (* skoXC1 (/ (- 3.) 10.)))))))) 0.) (and (<= (* skoXC1 (* skoXC1 (+ (/ (- 1.) 2.) (* skoXC1 (* skoXC1 (+ (/ 7. 120.) (* skoXC1 (* skoXC1 (/ (- 3.) 40.))))))))) 0.) (and (<= (* skoXC1 (* skoXC1 (+ (/ (- 1.) 6.) (* skoXC1 (* skoXC1 (/ (- 3.) 40.)))))) 1.) (and (<= (* skoXC1 (+ (- 1.) (* skoXC1 (* skoXC1 (+ (/ 1. 3.) (* skoXC1 (* skoXC1 (/ 3. 20.)))))))) 0.) (and (> (* skoXC1 skoXC1) 0.) (and (<= (* skoXC1 (* skoXC1 (+ 80. (* skoXC1 (* skoXC1 (+ (- 40.) (* skoXC1 (* skoXC1 (+ 6. (* skoXC1 (* skoXC1 (/ (- 1.) 8.)))))))))))) 48.) (and (> (* skoXC1 (* skoXC1 (+ (- 80.) (* skoXC1 (* skoXC1 (+ 40. (* skoXC1 (* skoXC1 (+ (- 6.) (* skoXC1 (* skoXC1 (/ 1. 8.)))))))))))) (- 48.)) (and (<= (* skoXC1 (* skoXC1 (+ 24. (* skoXC1 (* skoXC1 (+ (- 10.) (* skoXC1 skoXC1))))))) 16.) (and (<= (* skoXC1 (* skoXC1 (/ 1. 2.))) 3.) (and (> (* skoXC1 (* skoXC1 (/ (- 1.) 2.))) (- 3.)) (and (> skoXC1 0.) (and (> (/ 7. 8.) skoXC1) (and (<= (* skoXC1 (+ (- 1.) (* skoXC1 (* skoXC1 (/ 1. 3.))))) 0.) (and (<= (* skoXC1 (* skoXC1 (/ (- 1.) 6.))) 1.) (and (<= (* skoXC1 (* skoXC1 (+ (/ (- 1.) 2.) (* skoXC1 (* skoXC1 (/ (- 1.) 6.)))))) 0.) (and (<= (* skoXC1 skoXC1) 2.) (and (<= (* skoXC1 (* skoXC1 (* skoXC1 (* skoXC1 (/ (- 2.) 3.))))) 0.) (and (<= (* skoXC1 (+ (- 1.) (* skoXC1 (* skoXC1 (/ (- 1.) 6.))))) 0.) (and (<= (* skoXC1 (* skoXC1 (/ 1. 3.))) 1.) (and (<= (* skoXC1 (* skoXC1 (+ 256. (* skoXC1 (* skoXC1 (+ (- 160.) (* skoXC1 (* skoXC1 (+ 32. (* skoXC1 (* skoXC1 (- 1.)))))))))))) 128.) (and (<= (* skoXC1 (* skoXC1 (* skoXC1 (* skoXC1 (+ (/ (- 80.) 3.) (* skoXC1 (* skoXC1 (+ (/ 128. 3.) (* skoXC1 (* skoXC1 (+ (/ (- 55.) 3.) (* skoXC1 (* skoXC1 (/ 5. 3.)))))))))))))) 0.) (and (<= (* skoXC1 (+ (- 1.) (* skoXC1 (* skoXC1 (+ (/ 1. 3.) (* skoXC1 (* skoXC1 (+ (/ 3. 20.) (* skoXC1 (* skoXC1 (/ 5. 56.))))))))))) 0.) (and (<= (* skoXC1 (* skoXC1 (+ (/ (- 1.) 6.) (* skoXC1 (* skoXC1 (+ (/ (- 3.) 40.) (* skoXC1 (* skoXC1 (/ (- 5.) 112.))))))))) 1.) (and (<= (* skoXC1 (* skoXC1 (+ (/ (- 1.) 2.) (* skoXC1 (* skoXC1 (+ (/ 7. 120.) (* skoXC1 (* skoXC1 (+ (/ 33. 560.) (* skoXC1 (* skoXC1 (/ (- 5.) 112.)))))))))))) 0.) (and (<= (* skoXC1 (* skoXC1 (* skoXC1 (* skoXC1 (+ (/ (- 13.) 60.) (* skoXC1 (* skoXC1 (+ (/ (- 9.) 280.) (* skoXC1 (* skoXC1 (/ (- 5.) 28.))))))))))) 0.) (and (<= (* skoXC1 (* skoXC1 (* skoXC1 (* skoXC1 (+ (/ (- 17.) 120.) (* skoXC1 (* skoXC1 (+ (/ (- 27.) 280.) (* skoXC1 (* skoXC1 (/ 5. 224.))))))))))) 0.) (and (<= (* skoXC1 (* skoXC1 (+ (/ 1. 3.) (* skoXC1 (* skoXC1 (+ (/ 3. 20.) (* skoXC1 (* skoXC1 (/ 5. 56.))))))))) 1.) (and (<= (* skoXC1 (* skoXC1 (* skoXC1 (* skoXC1 (+ (/ 32. 15.) (* skoXC1 (* skoXC1 (+ (/ (- 272.) 105.) (* skoXC1 (* skoXC1 (+ (/ (- 1163.) 105.) (* skoXC1 (* skoXC1 (+ (/ 1753. 105.) (* skoXC1 (* skoXC1 (+ (/ (- 169.) 28.) (* skoXC1 (* skoXC1 (/ 25. 56.)))))))))))))))))))) 0.) (and (> (* skoXC1 (* skoXC1 (+ (/ 1. 6.) (* skoXC1 (* skoXC1 (+ (/ 3. 40.) (* skoXC1 (* skoXC1 (/ 5. 112.))))))))) (- 1.)) (<= (* skoXC1 (+ (- 1.) (* skoXC1 (* skoXC1 (+ (/ (- 1.) 6.) (* skoXC1 (* skoXC1 (+ (/ (- 3.) 40.) (* skoXC1 (* skoXC1 (/ (- 5.) 112.))))))))))) 0.)))))))))))))))))))))))))))))))))))))))))

% In GRF format:
(sequent " MetiTarski formula " (antecedent (<= (* skoXC1 (* skoXC1 (+ (/ (- 1.) 6.) (* skoXC1 (* skoXC1 (+ (/ (- 3.) 40.) (* skoXC1 (* skoXC1 (+ (/ (- 5.) 112.) (* skoXC1 (* skoXC1 (+ (/ (- 35.) 1152.) (* skoXC1 (* skoXC1 (/ (- 63.) 2816.))))))))))))))) 1.) (<= (* skoXC1 (* skoXC1 (* skoXC1 (* skoXC1 (+ (/ (- 13.) 60.) (* skoXC1 (* skoXC1 (+ (/ (- 9.) 280.) (* skoXC1 (* skoXC1 (+ (/ 5. 1344.) (* skoXC1 (* skoXC1 (+ (/ 161. 12672.) (* skoXC1 (* skoXC1 (/ (- 63.) 704.))))))))))))))))) 0.) (<= (* skoXC1 (* skoXC1 (+ (/ (- 1.) 2.) (* skoXC1 (* skoXC1 (+ (/ 7. 120.) (* skoXC1 (* skoXC1 (+ (/ 33. 560.) (* skoXC1 (* skoXC1 (+ (/ 125. 2688.) (* skoXC1 (* skoXC1 (+ (/ 931. 25344.) (* skoXC1 (* skoXC1 (/ (- 63.) 2816.)))))))))))))))))) 0.) (<= (* skoXC1 (* skoXC1 (+ (/ (- 1.) 6.) (* skoXC1 (* skoXC1 (+ (/ (- 3.) 40.) (* skoXC1 (* skoXC1 (+ (/ (- 5.) 112.) (* skoXC1 (* skoXC1 (+ (/ (- 35.) 1152.) (* skoXC1 (* skoXC1 (/ (- 63.) 2816.))))))))))))))) 1.) (<= (* skoXC1 (+ (- 1.) (* skoXC1 (* skoXC1 (+ (/ 1. 3.) (* skoXC1 (* skoXC1 (+ (/ 3. 20.) (* skoXC1 (* skoXC1 (+ (/ 5. 56.) (* skoXC1 (* skoXC1 (+ (/ 35. 576.) (* skoXC1 (* skoXC1 (/ 63. 1408.))))))))))))))))) 0.) (<= (* skoXC1 (+ (- 1.) (* skoXC1 (* skoXC1 (+ (/ (- 1.) 6.) (* skoXC1 (* skoXC1 (/ (- 3.) 40.)))))))) 0.) (> (* skoXC1 (* skoXC1 (+ (/ 1. 6.) (* skoXC1 (* skoXC1 (/ 3. 40.)))))) (- 1.)) (<= (* skoXC1 (* skoXC1 (* skoXC1 (* skoXC1 (+ (/ 32. 15.) (* skoXC1 (* skoXC1 (+ (/ (- 296.) 15.) (* skoXC1 (* skoXC1 (+ (/ 391. 15.) (* skoXC1 (* skoXC1 (+ (/ (- 146.) 15.) (* skoXC1 (* skoXC1 (/ 3. 4.))))))))))))))))) 0.) (<= (* skoXC1 (* skoXC1 (+ (/ 1. 3.) (* skoXC1 (* skoXC1 (/ 3. 20.)))))) 1.) (<= (* skoXC1 (* skoXC1 (* skoXC1 (* skoXC1 (+ (/ (- 17.) 120.) (* skoXC1 (* skoXC1 (/ 3. 80.)))))))) 0.) (<= (* skoXC1 (* skoXC1 (* skoXC1 (* skoXC1 (+ (/ (- 13.) 60.) (* skoXC1 (* skoXC1 (/ (- 3.) 10.)))))))) 0.) (<= (* skoXC1 (* skoXC1 (+ (/ (- 1.) 2.) (* skoXC1 (* skoXC1 (+ (/ 7. 120.) (* skoXC1 (* skoXC1 (/ (- 3.) 40.))))))))) 0.) (<= (* skoXC1 (* skoXC1 (+ (/ (- 1.) 6.) (* skoXC1 (* skoXC1 (/ (- 3.) 40.)))))) 1.) (<= (* skoXC1 (+ (- 1.) (* skoXC1 (* skoXC1 (+ (/ 1. 3.) (* skoXC1 (* skoXC1 (/ 3. 20.)))))))) 0.) (> (* skoXC1 skoXC1) 0.) (<= (* skoXC1 (* skoXC1 (+ 80. (* skoXC1 (* skoXC1 (+ (- 40.) (* skoXC1 (* skoXC1 (+ 6. (* skoXC1 (* skoXC1 (/ (- 1.) 8.)))))))))))) 48.) (> (* skoXC1 (* skoXC1 (+ (- 80.) (* skoXC1 (* skoXC1 (+ 40. (* skoXC1 (* skoXC1 (+ (- 6.) (* skoXC1 (* skoXC1 (/ 1. 8.)))))))))))) (- 48.)) (<= (* skoXC1 (* skoXC1 (+ 24. (* skoXC1 (* skoXC1 (+ (- 10.) (* skoXC1 skoXC1))))))) 16.) (<= (* skoXC1 (* skoXC1 (/ 1. 2.))) 3.) (> (* skoXC1 (* skoXC1 (/ (- 1.) 2.))) (- 3.)) (> skoXC1 0.) (> (/ 7. 8.) skoXC1) (<= (* skoXC1 (+ (- 1.) (* skoXC1 (* skoXC1 (/ 1. 3.))))) 0.) (<= (* skoXC1 (* skoXC1 (/ (- 1.) 6.))) 1.) (<= (* skoXC1 (* skoXC1 (+ (/ (- 1.) 2.) (* skoXC1 (* skoXC1 (/ (- 1.) 6.)))))) 0.) (<= (* skoXC1 skoXC1) 2.) (<= (* skoXC1 (* skoXC1 (* skoXC1 (* skoXC1 (/ (- 2.) 3.))))) 0.) (<= (* skoXC1 (+ (- 1.) (* skoXC1 (* skoXC1 (/ (- 1.) 6.))))) 0.) (<= (* skoXC1 (* skoXC1 (/ 1. 3.))) 1.) (<= (* skoXC1 (* skoXC1 (+ 256. (* skoXC1 (* skoXC1 (+ (- 160.) (* skoXC1 (* skoXC1 (+ 32. (* skoXC1 (* skoXC1 (- 1.)))))))))))) 128.) (<= (* skoXC1 (* skoXC1 (* skoXC1 (* skoXC1 (+ (/ (- 80.) 3.) (* skoXC1 (* skoXC1 (+ (/ 128. 3.) (* skoXC1 (* skoXC1 (+ (/ (- 55.) 3.) (* skoXC1 (* skoXC1 (/ 5. 3.)))))))))))))) 0.) (<= (* skoXC1 (+ (- 1.) (* skoXC1 (* skoXC1 (+ (/ 1. 3.) (* skoXC1 (* skoXC1 (+ (/ 3. 20.) (* skoXC1 (* skoXC1 (/ 5. 56.))))))))))) 0.) (<= (* skoXC1 (* skoXC1 (+ (/ (- 1.) 6.) (* skoXC1 (* skoXC1 (+ (/ (- 3.) 40.) (* skoXC1 (* skoXC1 (/ (- 5.) 112.))))))))) 1.) (<= (* skoXC1 (* skoXC1 (+ (/ (- 1.) 2.) (* skoXC1 (* skoXC1 (+ (/ 7. 120.) (* skoXC1 (* skoXC1 (+ (/ 33. 560.) (* skoXC1 (* skoXC1 (/ (- 5.) 112.)))))))))))) 0.) (<= (* skoXC1 (* skoXC1 (* skoXC1 (* skoXC1 (+ (/ (- 13.) 60.) (* skoXC1 (* skoXC1 (+ (/ (- 9.) 280.) (* skoXC1 (* skoXC1 (/ (- 5.) 28.))))))))))) 0.) (<= (* skoXC1 (* skoXC1 (* skoXC1 (* skoXC1 (+ (/ (- 17.) 120.) (* skoXC1 (* skoXC1 (+ (/ (- 27.) 280.) (* skoXC1 (* skoXC1 (/ 5. 224.))))))))))) 0.) (<= (* skoXC1 (* skoXC1 (+ (/ 1. 3.) (* skoXC1 (* skoXC1 (+ (/ 3. 20.) (* skoXC1 (* skoXC1 (/ 5. 56.))))))))) 1.) (<= (* skoXC1 (* skoXC1 (* skoXC1 (* skoXC1 (+ (/ 32. 15.) (* skoXC1 (* skoXC1 (+ (/ (- 272.) 105.) (* skoXC1 (* skoXC1 (+ (/ (- 1163.) 105.) (* skoXC1 (* skoXC1 (+ (/ 1753. 105.) (* skoXC1 (* skoXC1 (+ (/ (- 169.) 28.) (* skoXC1 (* skoXC1 (/ 25. 56.)))))))))))))))))))) 0.) (> (* skoXC1 (* skoXC1 (+ (/ 1. 6.) (* skoXC1 (* skoXC1 (+ (/ 3. 40.) (* skoXC1 (* skoXC1 (/ 5. 112.))))))))) (- 1.))) (succedent (> (* skoXC1 (+ (- 1.) (* skoXC1 (* skoXC1 (+ (/ (- 1.) 6.) (* skoXC1 (* skoXC1 (+ (/ (- 3.) 40.) (* skoXC1 (* skoXC1 (/ (- 5.) 112.))))))))))) 0.)))
-----[end problem]-----

-----[begin problem]-----
% In Mathematica format:
Timing[Resolve[Exists[{skoXC1}, And[skoXC1*skoXC1*skoXC1*skoXC1*((-13/60)+skoXC1*skoXC1*((-9/280)+skoXC1*skoXC1*((5/1344)+skoXC1*skoXC1*((161/12672)+skoXC1*skoXC1*(-63/704)))))<=0,skoXC1*skoXC1*((1/6)+skoXC1*skoXC1*((3/40)+skoXC1*skoXC1*((5/112)+skoXC1*skoXC1*((35/1152)+skoXC1*skoXC1*(63/2816)))))>-1,skoXC1*skoXC1*skoXC1*skoXC1*((-13/60)+skoXC1*skoXC1*((-9/280)+skoXC1*skoXC1*((5/1344)+skoXC1*skoXC1*((161/12672)+skoXC1*skoXC1*(-63/704)))))<=0,skoXC1*skoXC1*((-1/2)+skoXC1*skoXC1*((7/120)+skoXC1*skoXC1*((33/560)+skoXC1*skoXC1*((125/2688)+skoXC1*skoXC1*((931/25344)+skoXC1*skoXC1*(-63/2816))))))<=0,skoXC1*skoXC1*((-1/6)+skoXC1*skoXC1*((-3/40)+skoXC1*skoXC1*((-5/112)+skoXC1*skoXC1*((-35/1152)+skoXC1*skoXC1*(-63/2816)))))<=1,skoXC1*(-1+skoXC1*skoXC1*((1/3)+skoXC1*skoXC1*((3/20)+skoXC1*skoXC1*((5/56)+skoXC1*skoXC1*((35/576)+skoXC1*skoXC1*(63/1408))))))<=0,skoXC1*(-1+skoXC1*skoXC1*((-1/6)+skoXC1*skoXC1*(-3/40)))<=0,skoXC1*skoXC1*((1/6)+skoXC1*skoXC1*(3/40))>-1,skoXC1*skoXC1*skoXC1*skoXC1*((32/15)+skoXC1*skoXC1*((-296/15)+skoXC1*skoXC1*((391/15)+skoXC1*skoXC1*((-146/15)+skoXC1*skoXC1*(3/4)))))<=0,skoXC1*skoXC1*((1/3)+skoXC1*skoXC1*(3/20))<=1,skoXC1*skoXC1*skoXC1*skoXC1*((-17/120)+skoXC1*skoXC1*(3/80))<=0,skoXC1*skoXC1*skoXC1*skoXC1*((-13/60)+skoXC1*skoXC1*(-3/10))<=0,skoXC1*skoXC1*((-1/2)+skoXC1*skoXC1*((7/120)+skoXC1*skoXC1*(-3/40)))<=0,skoXC1*skoXC1*((-1/6)+skoXC1*skoXC1*(-3/40))<=1,skoXC1*(-1+skoXC1*skoXC1*((1/3)+skoXC1*skoXC1*(3/20)))<=0,skoXC1*skoXC1>0,skoXC1*skoXC1*(80+skoXC1*skoXC1*(-40+skoXC1*skoXC1*(6+skoXC1*skoXC1*(-1/8))))<=48,skoXC1*skoXC1*(-80+skoXC1*skoXC1*(40+skoXC1*skoXC1*(-6+skoXC1*skoXC1*(1/8))))>-48,skoXC1*skoXC1*(24+skoXC1*skoXC1*(-10+skoXC1*skoXC1))<=16,skoXC1*skoXC1*(1/2)<=3,skoXC1*skoXC1*(-1/2)>-3,skoXC1>0,(7/8)>skoXC1,skoXC1*(-1+skoXC1*skoXC1*(1/3))<=0,skoXC1*skoXC1*(-1/6)<=1,skoXC1*skoXC1*((-1/2)+skoXC1*skoXC1*(-1/6))<=0,skoXC1*skoXC1<=2,skoXC1*skoXC1*skoXC1*skoXC1*(-2/3)<=0,skoXC1*(-1+skoXC1*skoXC1*(-1/6))<=0,skoXC1*skoXC1*(1/3)<=1,skoXC1*skoXC1*(256+skoXC1*skoXC1*(-160+skoXC1*skoXC1*(32+skoXC1*skoXC1*-1)))<=128,skoXC1*skoXC1*skoXC1*skoXC1*((-80/3)+skoXC1*skoXC1*((128/3)+skoXC1*skoXC1*((-55/3)+skoXC1*skoXC1*(5/3))))<=0,skoXC1*(-1+skoXC1*skoXC1*((1/3)+skoXC1*skoXC1*((3/20)+skoXC1*skoXC1*(5/56))))<=0,skoXC1*skoXC1*((-1/6)+skoXC1*skoXC1*((-3/40)+skoXC1*skoXC1*(-5/112)))<=1,skoXC1*skoXC1*((-1/2)+skoXC1*skoXC1*((7/120)+skoXC1*skoXC1*((33/560)+skoXC1*skoXC1*(-5/112))))<=0,skoXC1*skoXC1*skoXC1*skoXC1*((-13/60)+skoXC1*skoXC1*((-9/280)+skoXC1*skoXC1*(-5/28)))<=0,skoXC1*skoXC1*skoXC1*skoXC1*((-17/120)+skoXC1*skoXC1*((-27/280)+skoXC1*skoXC1*(5/224)))<=0,skoXC1*skoXC1*((1/3)+skoXC1*skoXC1*((3/20)+skoXC1*skoXC1*(5/56)))<=1,skoXC1*skoXC1*skoXC1*skoXC1*((32/15)+skoXC1*skoXC1*((-272/105)+skoXC1*skoXC1*((-1163/105)+skoXC1*skoXC1*((1753/105)+skoXC1*skoXC1*((-169/28)+skoXC1*skoXC1*(25/56))))))<=0,skoXC1*skoXC1*((1/6)+skoXC1*skoXC1*((3/40)+skoXC1*skoXC1*(5/112)))>-1,skoXC1*(-1+skoXC1*skoXC1*((-1/6)+skoXC1*skoXC1*((-3/40)+skoXC1*skoXC1*(-5/112))))<=0]], Reals]]

% In QepcadB format:
(E skoXC1) [[(skoXC1 skoXC1 skoXC1 skoXC1 (-13/60+(skoXC1 skoXC1 (-9/280+(skoXC1 skoXC1 (5/1344+(skoXC1 skoXC1 (161/12672+(skoXC1 skoXC1 (-63/704))))))))))<=0]/\[[-1<(skoXC1 skoXC1 (1/6+(skoXC1 skoXC1 (3/40+(skoXC1 skoXC1 (5/112+(skoXC1 skoXC1 (35/1152+(skoXC1 skoXC1 (63/2816))))))))))]/\[[(skoXC1 skoXC1 skoXC1 skoXC1 (-13/60+(skoXC1 skoXC1 (-9/280+(skoXC1 skoXC1 (5/1344+(skoXC1 skoXC1 (161/12672+(skoXC1 skoXC1 (-63/704))))))))))<=0]/\[[(skoXC1 skoXC1 (-1/2+(skoXC1 skoXC1 (7/120+(skoXC1 skoXC1 (33/560+(skoXC1 skoXC1 (125/2688+(skoXC1 skoXC1 (931/25344+(skoXC1 skoXC1 (-63/2816))))))))))))<=0]/\[[(skoXC1 skoXC1 (-1/6+(skoXC1 skoXC1 (-3/40+(skoXC1 skoXC1 (-5/112+(skoXC1 skoXC1 (-35/1152+(skoXC1 skoXC1 (-63/2816))))))))))<=1]/\[[(skoXC1 (-1+(skoXC1 skoXC1 (1/3+(skoXC1 skoXC1 (3/20+(skoXC1 skoXC1 (5/56+(skoXC1 skoXC1 (35/576+(skoXC1 skoXC1 (63/1408))))))))))))<=0]/\[[(skoXC1 (-1+(skoXC1 skoXC1 (-1/6+(skoXC1 skoXC1 (-3/40))))))<=0]/\[[-1<(skoXC1 skoXC1 (1/6+(skoXC1 skoXC1 (3/40))))]/\[[(skoXC1 skoXC1 skoXC1 skoXC1 (32/15+(skoXC1 skoXC1 (-296/15+(skoXC1 skoXC1 (391/15+(skoXC1 skoXC1 (-146/15+(skoXC1 skoXC1 (3/4))))))))))<=0]/\[[(skoXC1 skoXC1 (1/3+(skoXC1 skoXC1 (3/20))))<=1]/\[[(skoXC1 skoXC1 skoXC1 skoXC1 (-17/120+(skoXC1 skoXC1 (3/80))))<=0]/\[[(skoXC1 skoXC1 skoXC1 skoXC1 (-13/60+(skoXC1 skoXC1 (-3/10))))<=0]/\[[(skoXC1 skoXC1 (-1/2+(skoXC1 skoXC1 (7/120+(skoXC1 skoXC1 (-3/40))))))<=0]/\[[(skoXC1 skoXC1 (-1/6+(skoXC1 skoXC1 (-3/40))))<=1]/\[[(skoXC1 (-1+(skoXC1 skoXC1 (1/3+(skoXC1 skoXC1 (3/20))))))<=0]/\[[0<(skoXC1 skoXC1)]/\[[(skoXC1 skoXC1 (80+(skoXC1 skoXC1 (-40+(skoXC1 skoXC1 (6+(skoXC1 skoXC1 (-1/8))))))))<=48]/\[[-48<(skoXC1 skoXC1 (-80+(skoXC1 skoXC1 (40+(skoXC1 skoXC1 (-6+(skoXC1 skoXC1 (1/8))))))))]/\[[(skoXC1 skoXC1 (24+(skoXC1 skoXC1 (-10+(skoXC1 skoXC1)))))<=16]/\[[(skoXC1 skoXC1 (1/2))<=3]/\[[-3<(skoXC1 skoXC1 (-1/2))]/\[[0<skoXC1]/\[[skoXC1<7/8]/\[[(skoXC1 (-1+(skoXC1 skoXC1 (1/3))))<=0]/\[[(skoXC1 skoXC1 (-1/6))<=1]/\[[(skoXC1 skoXC1 (-1/2+(skoXC1 skoXC1 (-1/6))))<=0]/\[[(skoXC1 skoXC1)<=2]/\[[(skoXC1 skoXC1 skoXC1 skoXC1 (-2/3))<=0]/\[[(skoXC1 (-1+(skoXC1 skoXC1 (-1/6))))<=0]/\[[(skoXC1 skoXC1 (1/3))<=1]/\[[(skoXC1 skoXC1 (256+(skoXC1 skoXC1 (-160+(skoXC1 skoXC1 (32+(skoXC1 skoXC1 (-1))))))))<=128]/\[[(skoXC1 skoXC1 skoXC1 skoXC1 (-80/3+(skoXC1 skoXC1 (128/3+(skoXC1 skoXC1 (-55/3+(skoXC1 skoXC1 (5/3))))))))<=0]/\[[(skoXC1 (-1+(skoXC1 skoXC1 (1/3+(skoXC1 skoXC1 (3/20+(skoXC1 skoXC1 (5/56))))))))<=0]/\[[(skoXC1 skoXC1 (-1/6+(skoXC1 skoXC1 (-3/40+(skoXC1 skoXC1 (-5/112))))))<=1]/\[[(skoXC1 skoXC1 (-1/2+(skoXC1 skoXC1 (7/120+(skoXC1 skoXC1 (33/560+(skoXC1 skoXC1 (-5/112))))))))<=0]/\[[(skoXC1 skoXC1 skoXC1 skoXC1 (-13/60+(skoXC1 skoXC1 (-9/280+(skoXC1 skoXC1 (-5/28))))))<=0]/\[[(skoXC1 skoXC1 skoXC1 skoXC1 (-17/120+(skoXC1 skoXC1 (-27/280+(skoXC1 skoXC1 (5/224))))))<=0]/\[[(skoXC1 skoXC1 (1/3+(skoXC1 skoXC1 (3/20+(skoXC1 skoXC1 (5/56))))))<=1]/\[[(skoXC1 skoXC1 skoXC1 skoXC1 (32/15+(skoXC1 skoXC1 (-272/105+(skoXC1 skoXC1 (-1163/105+(skoXC1 skoXC1 (1753/105+(skoXC1 skoXC1 (-169/28+(skoXC1 skoXC1 (25/56))))))))))))<=0]/\[[-1<(skoXC1 skoXC1 (1/6+(skoXC1 skoXC1 (3/40+(skoXC1 skoXC1 (5/112))))))]/\[(skoXC1 (-1+(skoXC1 skoXC1 (-1/6+(skoXC1 skoXC1 (-3/40+(skoXC1 skoXC1 (-5/112))))))))<=0]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]].

% In SMTLib2 format:
(declare-fun skoXC1 () Real) (assert (and (<= (* skoXC1 (* skoXC1 (* skoXC1 (* skoXC1 (+ (/ (- 13.) 60.) (* skoXC1 (* skoXC1 (+ (/ (- 9.) 280.) (* skoXC1 (* skoXC1 (+ (/ 5. 1344.) (* skoXC1 (* skoXC1 (+ (/ 161. 12672.) (* skoXC1 (* skoXC1 (/ (- 63.) 704.))))))))))))))))) 0.) (and (> (* skoXC1 (* skoXC1 (+ (/ 1. 6.) (* skoXC1 (* skoXC1 (+ (/ 3. 40.) (* skoXC1 (* skoXC1 (+ (/ 5. 112.) (* skoXC1 (* skoXC1 (+ (/ 35. 1152.) (* skoXC1 (* skoXC1 (/ 63. 2816.))))))))))))))) (- 1.)) (and (<= (* skoXC1 (* skoXC1 (* skoXC1 (* skoXC1 (+ (/ (- 13.) 60.) (* skoXC1 (* skoXC1 (+ (/ (- 9.) 280.) (* skoXC1 (* skoXC1 (+ (/ 5. 1344.) (* skoXC1 (* skoXC1 (+ (/ 161. 12672.) (* skoXC1 (* skoXC1 (/ (- 63.) 704.))))))))))))))))) 0.) (and (<= (* skoXC1 (* skoXC1 (+ (/ (- 1.) 2.) (* skoXC1 (* skoXC1 (+ (/ 7. 120.) (* skoXC1 (* skoXC1 (+ (/ 33. 560.) (* skoXC1 (* skoXC1 (+ (/ 125. 2688.) (* skoXC1 (* skoXC1 (+ (/ 931. 25344.) (* skoXC1 (* skoXC1 (/ (- 63.) 2816.)))))))))))))))))) 0.) (and (<= (* skoXC1 (* skoXC1 (+ (/ (- 1.) 6.) (* skoXC1 (* skoXC1 (+ (/ (- 3.) 40.) (* skoXC1 (* skoXC1 (+ (/ (- 5.) 112.) (* skoXC1 (* skoXC1 (+ (/ (- 35.) 1152.) (* skoXC1 (* skoXC1 (/ (- 63.) 2816.))))))))))))))) 1.) (and (<= (* skoXC1 (+ (- 1.) (* skoXC1 (* skoXC1 (+ (/ 1. 3.) (* skoXC1 (* skoXC1 (+ (/ 3. 20.) (* skoXC1 (* skoXC1 (+ (/ 5. 56.) (* skoXC1 (* skoXC1 (+ (/ 35. 576.) (* skoXC1 (* skoXC1 (/ 63. 1408.))))))))))))))))) 0.) (and (<= (* skoXC1 (+ (- 1.) (* skoXC1 (* skoXC1 (+ (/ (- 1.) 6.) (* skoXC1 (* skoXC1 (/ (- 3.) 40.)))))))) 0.) (and (> (* skoXC1 (* skoXC1 (+ (/ 1. 6.) (* skoXC1 (* skoXC1 (/ 3. 40.)))))) (- 1.)) (and (<= (* skoXC1 (* skoXC1 (* skoXC1 (* skoXC1 (+ (/ 32. 15.) (* skoXC1 (* skoXC1 (+ (/ (- 296.) 15.) (* skoXC1 (* skoXC1 (+ (/ 391. 15.) (* skoXC1 (* skoXC1 (+ (/ (- 146.) 15.) (* skoXC1 (* skoXC1 (/ 3. 4.))))))))))))))))) 0.) (and (<= (* skoXC1 (* skoXC1 (+ (/ 1. 3.) (* skoXC1 (* skoXC1 (/ 3. 20.)))))) 1.) (and (<= (* skoXC1 (* skoXC1 (* skoXC1 (* skoXC1 (+ (/ (- 17.) 120.) (* skoXC1 (* skoXC1 (/ 3. 80.)))))))) 0.) (and (<= (* skoXC1 (* skoXC1 (* skoXC1 (* skoXC1 (+ (/ (- 13.) 60.) (* skoXC1 (* skoXC1 (/ (- 3.) 10.)))))))) 0.) (and (<= (* skoXC1 (* skoXC1 (+ (/ (- 1.) 2.) (* skoXC1 (* skoXC1 (+ (/ 7. 120.) (* skoXC1 (* skoXC1 (/ (- 3.) 40.))))))))) 0.) (and (<= (* skoXC1 (* skoXC1 (+ (/ (- 1.) 6.) (* skoXC1 (* skoXC1 (/ (- 3.) 40.)))))) 1.) (and (<= (* skoXC1 (+ (- 1.) (* skoXC1 (* skoXC1 (+ (/ 1. 3.) (* skoXC1 (* skoXC1 (/ 3. 20.)))))))) 0.) (and (> (* skoXC1 skoXC1) 0.) (and (<= (* skoXC1 (* skoXC1 (+ 80. (* skoXC1 (* skoXC1 (+ (- 40.) (* skoXC1 (* skoXC1 (+ 6. (* skoXC1 (* skoXC1 (/ (- 1.) 8.)))))))))))) 48.) (and (> (* skoXC1 (* skoXC1 (+ (- 80.) (* skoXC1 (* skoXC1 (+ 40. (* skoXC1 (* skoXC1 (+ (- 6.) (* skoXC1 (* skoXC1 (/ 1. 8.)))))))))))) (- 48.)) (and (<= (* skoXC1 (* skoXC1 (+ 24. (* skoXC1 (* skoXC1 (+ (- 10.) (* skoXC1 skoXC1))))))) 16.) (and (<= (* skoXC1 (* skoXC1 (/ 1. 2.))) 3.) (and (> (* skoXC1 (* skoXC1 (/ (- 1.) 2.))) (- 3.)) (and (> skoXC1 0.) (and (> (/ 7. 8.) skoXC1) (and (<= (* skoXC1 (+ (- 1.) (* skoXC1 (* skoXC1 (/ 1. 3.))))) 0.) (and (<= (* skoXC1 (* skoXC1 (/ (- 1.) 6.))) 1.) (and (<= (* skoXC1 (* skoXC1 (+ (/ (- 1.) 2.) (* skoXC1 (* skoXC1 (/ (- 1.) 6.)))))) 0.) (and (<= (* skoXC1 skoXC1) 2.) (and (<= (* skoXC1 (* skoXC1 (* skoXC1 (* skoXC1 (/ (- 2.) 3.))))) 0.) (and (<= (* skoXC1 (+ (- 1.) (* skoXC1 (* skoXC1 (/ (- 1.) 6.))))) 0.) (and (<= (* skoXC1 (* skoXC1 (/ 1. 3.))) 1.) (and (<= (* skoXC1 (* skoXC1 (+ 256. (* skoXC1 (* skoXC1 (+ (- 160.) (* skoXC1 (* skoXC1 (+ 32. (* skoXC1 (* skoXC1 (- 1.)))))))))))) 128.) (and (<= (* skoXC1 (* skoXC1 (* skoXC1 (* skoXC1 (+ (/ (- 80.) 3.) (* skoXC1 (* skoXC1 (+ (/ 128. 3.) (* skoXC1 (* skoXC1 (+ (/ (- 55.) 3.) (* skoXC1 (* skoXC1 (/ 5. 3.)))))))))))))) 0.) (and (<= (* skoXC1 (+ (- 1.) (* skoXC1 (* skoXC1 (+ (/ 1. 3.) (* skoXC1 (* skoXC1 (+ (/ 3. 20.) (* skoXC1 (* skoXC1 (/ 5. 56.))))))))))) 0.) (and (<= (* skoXC1 (* skoXC1 (+ (/ (- 1.) 6.) (* skoXC1 (* skoXC1 (+ (/ (- 3.) 40.) (* skoXC1 (* skoXC1 (/ (- 5.) 112.))))))))) 1.) (and (<= (* skoXC1 (* skoXC1 (+ (/ (- 1.) 2.) (* skoXC1 (* skoXC1 (+ (/ 7. 120.) (* skoXC1 (* skoXC1 (+ (/ 33. 560.) (* skoXC1 (* skoXC1 (/ (- 5.) 112.)))))))))))) 0.) (and (<= (* skoXC1 (* skoXC1 (* skoXC1 (* skoXC1 (+ (/ (- 13.) 60.) (* skoXC1 (* skoXC1 (+ (/ (- 9.) 280.) (* skoXC1 (* skoXC1 (/ (- 5.) 28.))))))))))) 0.) (and (<= (* skoXC1 (* skoXC1 (* skoXC1 (* skoXC1 (+ (/ (- 17.) 120.) (* skoXC1 (* skoXC1 (+ (/ (- 27.) 280.) (* skoXC1 (* skoXC1 (/ 5. 224.))))))))))) 0.) (and (<= (* skoXC1 (* skoXC1 (+ (/ 1. 3.) (* skoXC1 (* skoXC1 (+ (/ 3. 20.) (* skoXC1 (* skoXC1 (/ 5. 56.))))))))) 1.) (and (<= (* skoXC1 (* skoXC1 (* skoXC1 (* skoXC1 (+ (/ 32. 15.) (* skoXC1 (* skoXC1 (+ (/ (- 272.) 105.) (* skoXC1 (* skoXC1 (+ (/ (- 1163.) 105.) (* skoXC1 (* skoXC1 (+ (/ 1753. 105.) (* skoXC1 (* skoXC1 (+ (/ (- 169.) 28.) (* skoXC1 (* skoXC1 (/ 25. 56.)))))))))))))))))))) 0.) (and (> (* skoXC1 (* skoXC1 (+ (/ 1. 6.) (* skoXC1 (* skoXC1 (+ (/ 3. 40.) (* skoXC1 (* skoXC1 (/ 5. 112.))))))))) (- 1.)) (<= (* skoXC1 (+ (- 1.) (* skoXC1 (* skoXC1 (+ (/ (- 1.) 6.) (* skoXC1 (* skoXC1 (+ (/ (- 3.) 40.) (* skoXC1 (* skoXC1 (/ (- 5.) 112.))))))))))) 0.))))))))))))))))))))))))))))))))))))))))))

% In GRF format:
(sequent " MetiTarski formula " (antecedent (<= (* skoXC1 (* skoXC1 (* skoXC1 (* skoXC1 (+ (/ (- 13.) 60.) (* skoXC1 (* skoXC1 (+ (/ (- 9.) 280.) (* skoXC1 (* skoXC1 (+ (/ 5. 1344.) (* skoXC1 (* skoXC1 (+ (/ 161. 12672.) (* skoXC1 (* skoXC1 (/ (- 63.) 704.))))))))))))))))) 0.) (> (* skoXC1 (* skoXC1 (+ (/ 1. 6.) (* skoXC1 (* skoXC1 (+ (/ 3. 40.) (* skoXC1 (* skoXC1 (+ (/ 5. 112.) (* skoXC1 (* skoXC1 (+ (/ 35. 1152.) (* skoXC1 (* skoXC1 (/ 63. 2816.))))))))))))))) (- 1.)) (<= (* skoXC1 (* skoXC1 (* skoXC1 (* skoXC1 (+ (/ (- 13.) 60.) (* skoXC1 (* skoXC1 (+ (/ (- 9.) 280.) (* skoXC1 (* skoXC1 (+ (/ 5. 1344.) (* skoXC1 (* skoXC1 (+ (/ 161. 12672.) (* skoXC1 (* skoXC1 (/ (- 63.) 704.))))))))))))))))) 0.) (<= (* skoXC1 (* skoXC1 (+ (/ (- 1.) 2.) (* skoXC1 (* skoXC1 (+ (/ 7. 120.) (* skoXC1 (* skoXC1 (+ (/ 33. 560.) (* skoXC1 (* skoXC1 (+ (/ 125. 2688.) (* skoXC1 (* skoXC1 (+ (/ 931. 25344.) (* skoXC1 (* skoXC1 (/ (- 63.) 2816.)))))))))))))))))) 0.) (<= (* skoXC1 (* skoXC1 (+ (/ (- 1.) 6.) (* skoXC1 (* skoXC1 (+ (/ (- 3.) 40.) (* skoXC1 (* skoXC1 (+ (/ (- 5.) 112.) (* skoXC1 (* skoXC1 (+ (/ (- 35.) 1152.) (* skoXC1 (* skoXC1 (/ (- 63.) 2816.))))))))))))))) 1.) (<= (* skoXC1 (+ (- 1.) (* skoXC1 (* skoXC1 (+ (/ 1. 3.) (* skoXC1 (* skoXC1 (+ (/ 3. 20.) (* skoXC1 (* skoXC1 (+ (/ 5. 56.) (* skoXC1 (* skoXC1 (+ (/ 35. 576.) (* skoXC1 (* skoXC1 (/ 63. 1408.))))))))))))))))) 0.) (<= (* skoXC1 (+ (- 1.) (* skoXC1 (* skoXC1 (+ (/ (- 1.) 6.) (* skoXC1 (* skoXC1 (/ (- 3.) 40.)))))))) 0.) (> (* skoXC1 (* skoXC1 (+ (/ 1. 6.) (* skoXC1 (* skoXC1 (/ 3. 40.)))))) (- 1.)) (<= (* skoXC1 (* skoXC1 (* skoXC1 (* skoXC1 (+ (/ 32. 15.) (* skoXC1 (* skoXC1 (+ (/ (- 296.) 15.) (* skoXC1 (* skoXC1 (+ (/ 391. 15.) (* skoXC1 (* skoXC1 (+ (/ (- 146.) 15.) (* skoXC1 (* skoXC1 (/ 3. 4.))))))))))))))))) 0.) (<= (* skoXC1 (* skoXC1 (+ (/ 1. 3.) (* skoXC1 (* skoXC1 (/ 3. 20.)))))) 1.) (<= (* skoXC1 (* skoXC1 (* skoXC1 (* skoXC1 (+ (/ (- 17.) 120.) (* skoXC1 (* skoXC1 (/ 3. 80.)))))))) 0.) (<= (* skoXC1 (* skoXC1 (* skoXC1 (* skoXC1 (+ (/ (- 13.) 60.) (* skoXC1 (* skoXC1 (/ (- 3.) 10.)))))))) 0.) (<= (* skoXC1 (* skoXC1 (+ (/ (- 1.) 2.) (* skoXC1 (* skoXC1 (+ (/ 7. 120.) (* skoXC1 (* skoXC1 (/ (- 3.) 40.))))))))) 0.) (<= (* skoXC1 (* skoXC1 (+ (/ (- 1.) 6.) (* skoXC1 (* skoXC1 (/ (- 3.) 40.)))))) 1.) (<= (* skoXC1 (+ (- 1.) (* skoXC1 (* skoXC1 (+ (/ 1. 3.) (* skoXC1 (* skoXC1 (/ 3. 20.)))))))) 0.) (> (* skoXC1 skoXC1) 0.) (<= (* skoXC1 (* skoXC1 (+ 80. (* skoXC1 (* skoXC1 (+ (- 40.) (* skoXC1 (* skoXC1 (+ 6. (* skoXC1 (* skoXC1 (/ (- 1.) 8.)))))))))))) 48.) (> (* skoXC1 (* skoXC1 (+ (- 80.) (* skoXC1 (* skoXC1 (+ 40. (* skoXC1 (* skoXC1 (+ (- 6.) (* skoXC1 (* skoXC1 (/ 1. 8.)))))))))))) (- 48.)) (<= (* skoXC1 (* skoXC1 (+ 24. (* skoXC1 (* skoXC1 (+ (- 10.) (* skoXC1 skoXC1))))))) 16.) (<= (* skoXC1 (* skoXC1 (/ 1. 2.))) 3.) (> (* skoXC1 (* skoXC1 (/ (- 1.) 2.))) (- 3.)) (> skoXC1 0.) (> (/ 7. 8.) skoXC1) (<= (* skoXC1 (+ (- 1.) (* skoXC1 (* skoXC1 (/ 1. 3.))))) 0.) (<= (* skoXC1 (* skoXC1 (/ (- 1.) 6.))) 1.) (<= (* skoXC1 (* skoXC1 (+ (/ (- 1.) 2.) (* skoXC1 (* skoXC1 (/ (- 1.) 6.)))))) 0.) (<= (* skoXC1 skoXC1) 2.) (<= (* skoXC1 (* skoXC1 (* skoXC1 (* skoXC1 (/ (- 2.) 3.))))) 0.) (<= (* skoXC1 (+ (- 1.) (* skoXC1 (* skoXC1 (/ (- 1.) 6.))))) 0.) (<= (* skoXC1 (* skoXC1 (/ 1. 3.))) 1.) (<= (* skoXC1 (* skoXC1 (+ 256. (* skoXC1 (* skoXC1 (+ (- 160.) (* skoXC1 (* skoXC1 (+ 32. (* skoXC1 (* skoXC1 (- 1.)))))))))))) 128.) (<= (* skoXC1 (* skoXC1 (* skoXC1 (* skoXC1 (+ (/ (- 80.) 3.) (* skoXC1 (* skoXC1 (+ (/ 128. 3.) (* skoXC1 (* skoXC1 (+ (/ (- 55.) 3.) (* skoXC1 (* skoXC1 (/ 5. 3.)))))))))))))) 0.) (<= (* skoXC1 (+ (- 1.) (* skoXC1 (* skoXC1 (+ (/ 1. 3.) (* skoXC1 (* skoXC1 (+ (/ 3. 20.) (* skoXC1 (* skoXC1 (/ 5. 56.))))))))))) 0.) (<= (* skoXC1 (* skoXC1 (+ (/ (- 1.) 6.) (* skoXC1 (* skoXC1 (+ (/ (- 3.) 40.) (* skoXC1 (* skoXC1 (/ (- 5.) 112.))))))))) 1.) (<= (* skoXC1 (* skoXC1 (+ (/ (- 1.) 2.) (* skoXC1 (* skoXC1 (+ (/ 7. 120.) (* skoXC1 (* skoXC1 (+ (/ 33. 560.) (* skoXC1 (* skoXC1 (/ (- 5.) 112.)))))))))))) 0.) (<= (* skoXC1 (* skoXC1 (* skoXC1 (* skoXC1 (+ (/ (- 13.) 60.) (* skoXC1 (* skoXC1 (+ (/ (- 9.) 280.) (* skoXC1 (* skoXC1 (/ (- 5.) 28.))))))))))) 0.) (<= (* skoXC1 (* skoXC1 (* skoXC1 (* skoXC1 (+ (/ (- 17.) 120.) (* skoXC1 (* skoXC1 (+ (/ (- 27.) 280.) (* skoXC1 (* skoXC1 (/ 5. 224.))))))))))) 0.) (<= (* skoXC1 (* skoXC1 (+ (/ 1. 3.) (* skoXC1 (* skoXC1 (+ (/ 3. 20.) (* skoXC1 (* skoXC1 (/ 5. 56.))))))))) 1.) (<= (* skoXC1 (* skoXC1 (* skoXC1 (* skoXC1 (+ (/ 32. 15.) (* skoXC1 (* skoXC1 (+ (/ (- 272.) 105.) (* skoXC1 (* skoXC1 (+ (/ (- 1163.) 105.) (* skoXC1 (* skoXC1 (+ (/ 1753. 105.) (* skoXC1 (* skoXC1 (+ (/ (- 169.) 28.) (* skoXC1 (* skoXC1 (/ 25. 56.)))))))))))))))))))) 0.) (> (* skoXC1 (* skoXC1 (+ (/ 1. 6.) (* skoXC1 (* skoXC1 (+ (/ 3. 40.) (* skoXC1 (* skoXC1 (/ 5. 112.))))))))) (- 1.))) (succedent (> (* skoXC1 (+ (- 1.) (* skoXC1 (* skoXC1 (+ (/ (- 1.) 6.) (* skoXC1 (* skoXC1 (+ (/ (- 3.) 40.) (* skoXC1 (* skoXC1 (/ (- 5.) 112.))))))))))) 0.)))
-----[end problem]-----

-----[begin problem]-----
% In Mathematica format:
Timing[Resolve[Exists[{skoXC1}, And[skoXC1*skoXC1*((-1/6)+skoXC1*skoXC1*((-3/40)+skoXC1*skoXC1*((-5/112)+skoXC1*skoXC1*((-35/1152)+skoXC1*skoXC1*(-63/2816)))))<=1,skoXC1*skoXC1*skoXC1*skoXC1*((-13/60)+skoXC1*skoXC1*((-9/280)+skoXC1*skoXC1*((5/1344)+skoXC1*skoXC1*((161/12672)+skoXC1*skoXC1*(-63/704)))))<=0,skoXC1*skoXC1*((-1/2)+skoXC1*skoXC1*((7/120)+skoXC1*skoXC1*((33/560)+skoXC1*skoXC1*((125/2688)+skoXC1*skoXC1*((931/25344)+skoXC1*skoXC1*(-63/2816))))))<=0,skoXC1*skoXC1*((-1/6)+skoXC1*skoXC1*((-3/40)+skoXC1*skoXC1*((-5/112)+skoXC1*skoXC1*((-35/1152)+skoXC1*skoXC1*(-63/2816)))))<=1,skoXC1*(-1+skoXC1*skoXC1*((1/3)+skoXC1*skoXC1*((3/20)+skoXC1*skoXC1*((5/56)+skoXC1*skoXC1*((35/576)+skoXC1*skoXC1*(63/1408))))))<=0,skoXC1*(-1+skoXC1*skoXC1*((-1/6)+skoXC1*skoXC1*(-3/40)))<=0,skoXC1*skoXC1*((1/6)+skoXC1*skoXC1*(3/40))>-1,skoXC1*skoXC1*skoXC1*skoXC1*((32/15)+skoXC1*skoXC1*((-296/15)+skoXC1*skoXC1*((391/15)+skoXC1*skoXC1*((-146/15)+skoXC1*skoXC1*(3/4)))))<=0,skoXC1*skoXC1*((1/3)+skoXC1*skoXC1*(3/20))<=1,skoXC1*skoXC1*skoXC1*skoXC1*((-17/120)+skoXC1*skoXC1*(3/80))<=0,skoXC1*skoXC1*skoXC1*skoXC1*((-13/60)+skoXC1*skoXC1*(-3/10))<=0,skoXC1*skoXC1*((-1/2)+skoXC1*skoXC1*((7/120)+skoXC1*skoXC1*(-3/40)))<=0,skoXC1*skoXC1*((-1/6)+skoXC1*skoXC1*(-3/40))<=1,skoXC1*(-1+skoXC1*skoXC1*((1/3)+skoXC1*skoXC1*(3/20)))<=0,skoXC1*skoXC1>0,skoXC1*skoXC1*(80+skoXC1*skoXC1*(-40+skoXC1*skoXC1*(6+skoXC1*skoXC1*(-1/8))))<=48,skoXC1*skoXC1*(-80+skoXC1*skoXC1*(40+skoXC1*skoXC1*(-6+skoXC1*skoXC1*(1/8))))>-48,skoXC1*skoXC1*(24+skoXC1*skoXC1*(-10+skoXC1*skoXC1))<=16,skoXC1*skoXC1*(1/2)<=3,skoXC1*skoXC1*(-1/2)>-3,skoXC1>0,(7/8)>skoXC1,skoXC1*(-1+skoXC1*skoXC1*(1/3))<=0,skoXC1*skoXC1*(-1/6)<=1,skoXC1*skoXC1*((-1/2)+skoXC1*skoXC1*(-1/6))<=0,skoXC1*skoXC1<=2,skoXC1*skoXC1*skoXC1*skoXC1*(-2/3)<=0,skoXC1*(-1+skoXC1*skoXC1*(-1/6))<=0,skoXC1*skoXC1*(1/3)<=1,skoXC1*skoXC1*(256+skoXC1*skoXC1*(-160+skoXC1*skoXC1*(32+skoXC1*skoXC1*-1)))<=128,skoXC1*skoXC1*skoXC1*skoXC1*((-80/3)+skoXC1*skoXC1*((128/3)+skoXC1*skoXC1*((-55/3)+skoXC1*skoXC1*(5/3))))<=0,skoXC1*(-1+skoXC1*skoXC1*((1/3)+skoXC1*skoXC1*((3/20)+skoXC1*skoXC1*(5/56))))<=0,skoXC1*skoXC1*((-1/6)+skoXC1*skoXC1*((-3/40)+skoXC1*skoXC1*(-5/112)))<=1,skoXC1*skoXC1*((-1/2)+skoXC1*skoXC1*((7/120)+skoXC1*skoXC1*((33/560)+skoXC1*skoXC1*(-5/112))))<=0,skoXC1*skoXC1*skoXC1*skoXC1*((-13/60)+skoXC1*skoXC1*((-9/280)+skoXC1*skoXC1*(-5/28)))<=0,skoXC1*skoXC1*skoXC1*skoXC1*((-17/120)+skoXC1*skoXC1*((-27/280)+skoXC1*skoXC1*(5/224)))<=0,skoXC1*skoXC1*((1/3)+skoXC1*skoXC1*((3/20)+skoXC1*skoXC1*(5/56)))<=1,skoXC1*skoXC1*skoXC1*skoXC1*((32/15)+skoXC1*skoXC1*((-272/105)+skoXC1*skoXC1*((-1163/105)+skoXC1*skoXC1*((1753/105)+skoXC1*skoXC1*((-169/28)+skoXC1*skoXC1*(25/56))))))<=0,skoXC1*skoXC1*((1/6)+skoXC1*skoXC1*((3/40)+skoXC1*skoXC1*(5/112)))>-1,skoXC1*(-1+skoXC1*skoXC1*((-1/6)+skoXC1*skoXC1*((-3/40)+skoXC1*skoXC1*(-5/112))))<=0]], Reals]]

% In QepcadB format:
(E skoXC1) [[(skoXC1 skoXC1 (-1/6+(skoXC1 skoXC1 (-3/40+(skoXC1 skoXC1 (-5/112+(skoXC1 skoXC1 (-35/1152+(skoXC1 skoXC1 (-63/2816))))))))))<=1]/\[[(skoXC1 skoXC1 skoXC1 skoXC1 (-13/60+(skoXC1 skoXC1 (-9/280+(skoXC1 skoXC1 (5/1344+(skoXC1 skoXC1 (161/12672+(skoXC1 skoXC1 (-63/704))))))))))<=0]/\[[(skoXC1 skoXC1 (-1/2+(skoXC1 skoXC1 (7/120+(skoXC1 skoXC1 (33/560+(skoXC1 skoXC1 (125/2688+(skoXC1 skoXC1 (931/25344+(skoXC1 skoXC1 (-63/2816))))))))))))<=0]/\[[(skoXC1 skoXC1 (-1/6+(skoXC1 skoXC1 (-3/40+(skoXC1 skoXC1 (-5/112+(skoXC1 skoXC1 (-35/1152+(skoXC1 skoXC1 (-63/2816))))))))))<=1]/\[[(skoXC1 (-1+(skoXC1 skoXC1 (1/3+(skoXC1 skoXC1 (3/20+(skoXC1 skoXC1 (5/56+(skoXC1 skoXC1 (35/576+(skoXC1 skoXC1 (63/1408))))))))))))<=0]/\[[(skoXC1 (-1+(skoXC1 skoXC1 (-1/6+(skoXC1 skoXC1 (-3/40))))))<=0]/\[[-1<(skoXC1 skoXC1 (1/6+(skoXC1 skoXC1 (3/40))))]/\[[(skoXC1 skoXC1 skoXC1 skoXC1 (32/15+(skoXC1 skoXC1 (-296/15+(skoXC1 skoXC1 (391/15+(skoXC1 skoXC1 (-146/15+(skoXC1 skoXC1 (3/4))))))))))<=0]/\[[(skoXC1 skoXC1 (1/3+(skoXC1 skoXC1 (3/20))))<=1]/\[[(skoXC1 skoXC1 skoXC1 skoXC1 (-17/120+(skoXC1 skoXC1 (3/80))))<=0]/\[[(skoXC1 skoXC1 skoXC1 skoXC1 (-13/60+(skoXC1 skoXC1 (-3/10))))<=0]/\[[(skoXC1 skoXC1 (-1/2+(skoXC1 skoXC1 (7/120+(skoXC1 skoXC1 (-3/40))))))<=0]/\[[(skoXC1 skoXC1 (-1/6+(skoXC1 skoXC1 (-3/40))))<=1]/\[[(skoXC1 (-1+(skoXC1 skoXC1 (1/3+(skoXC1 skoXC1 (3/20))))))<=0]/\[[0<(skoXC1 skoXC1)]/\[[(skoXC1 skoXC1 (80+(skoXC1 skoXC1 (-40+(skoXC1 skoXC1 (6+(skoXC1 skoXC1 (-1/8))))))))<=48]/\[[-48<(skoXC1 skoXC1 (-80+(skoXC1 skoXC1 (40+(skoXC1 skoXC1 (-6+(skoXC1 skoXC1 (1/8))))))))]/\[[(skoXC1 skoXC1 (24+(skoXC1 skoXC1 (-10+(skoXC1 skoXC1)))))<=16]/\[[(skoXC1 skoXC1 (1/2))<=3]/\[[-3<(skoXC1 skoXC1 (-1/2))]/\[[0<skoXC1]/\[[skoXC1<7/8]/\[[(skoXC1 (-1+(skoXC1 skoXC1 (1/3))))<=0]/\[[(skoXC1 skoXC1 (-1/6))<=1]/\[[(skoXC1 skoXC1 (-1/2+(skoXC1 skoXC1 (-1/6))))<=0]/\[[(skoXC1 skoXC1)<=2]/\[[(skoXC1 skoXC1 skoXC1 skoXC1 (-2/3))<=0]/\[[(skoXC1 (-1+(skoXC1 skoXC1 (-1/6))))<=0]/\[[(skoXC1 skoXC1 (1/3))<=1]/\[[(skoXC1 skoXC1 (256+(skoXC1 skoXC1 (-160+(skoXC1 skoXC1 (32+(skoXC1 skoXC1 (-1))))))))<=128]/\[[(skoXC1 skoXC1 skoXC1 skoXC1 (-80/3+(skoXC1 skoXC1 (128/3+(skoXC1 skoXC1 (-55/3+(skoXC1 skoXC1 (5/3))))))))<=0]/\[[(skoXC1 (-1+(skoXC1 skoXC1 (1/3+(skoXC1 skoXC1 (3/20+(skoXC1 skoXC1 (5/56))))))))<=0]/\[[(skoXC1 skoXC1 (-1/6+(skoXC1 skoXC1 (-3/40+(skoXC1 skoXC1 (-5/112))))))<=1]/\[[(skoXC1 skoXC1 (-1/2+(skoXC1 skoXC1 (7/120+(skoXC1 skoXC1 (33/560+(skoXC1 skoXC1 (-5/112))))))))<=0]/\[[(skoXC1 skoXC1 skoXC1 skoXC1 (-13/60+(skoXC1 skoXC1 (-9/280+(skoXC1 skoXC1 (-5/28))))))<=0]/\[[(skoXC1 skoXC1 skoXC1 skoXC1 (-17/120+(skoXC1 skoXC1 (-27/280+(skoXC1 skoXC1 (5/224))))))<=0]/\[[(skoXC1 skoXC1 (1/3+(skoXC1 skoXC1 (3/20+(skoXC1 skoXC1 (5/56))))))<=1]/\[[(skoXC1 skoXC1 skoXC1 skoXC1 (32/15+(skoXC1 skoXC1 (-272/105+(skoXC1 skoXC1 (-1163/105+(skoXC1 skoXC1 (1753/105+(skoXC1 skoXC1 (-169/28+(skoXC1 skoXC1 (25/56))))))))))))<=0]/\[[-1<(skoXC1 skoXC1 (1/6+(skoXC1 skoXC1 (3/40+(skoXC1 skoXC1 (5/112))))))]/\[(skoXC1 (-1+(skoXC1 skoXC1 (-1/6+(skoXC1 skoXC1 (-3/40+(skoXC1 skoXC1 (-5/112))))))))<=0]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]].

% In SMTLib2 format:
(declare-fun skoXC1 () Real) (assert (and (<= (* skoXC1 (* skoXC1 (+ (/ (- 1.) 6.) (* skoXC1 (* skoXC1 (+ (/ (- 3.) 40.) (* skoXC1 (* skoXC1 (+ (/ (- 5.) 112.) (* skoXC1 (* skoXC1 (+ (/ (- 35.) 1152.) (* skoXC1 (* skoXC1 (/ (- 63.) 2816.))))))))))))))) 1.) (and (<= (* skoXC1 (* skoXC1 (* skoXC1 (* skoXC1 (+ (/ (- 13.) 60.) (* skoXC1 (* skoXC1 (+ (/ (- 9.) 280.) (* skoXC1 (* skoXC1 (+ (/ 5. 1344.) (* skoXC1 (* skoXC1 (+ (/ 161. 12672.) (* skoXC1 (* skoXC1 (/ (- 63.) 704.))))))))))))))))) 0.) (and (<= (* skoXC1 (* skoXC1 (+ (/ (- 1.) 2.) (* skoXC1 (* skoXC1 (+ (/ 7. 120.) (* skoXC1 (* skoXC1 (+ (/ 33. 560.) (* skoXC1 (* skoXC1 (+ (/ 125. 2688.) (* skoXC1 (* skoXC1 (+ (/ 931. 25344.) (* skoXC1 (* skoXC1 (/ (- 63.) 2816.)))))))))))))))))) 0.) (and (<= (* skoXC1 (* skoXC1 (+ (/ (- 1.) 6.) (* skoXC1 (* skoXC1 (+ (/ (- 3.) 40.) (* skoXC1 (* skoXC1 (+ (/ (- 5.) 112.) (* skoXC1 (* skoXC1 (+ (/ (- 35.) 1152.) (* skoXC1 (* skoXC1 (/ (- 63.) 2816.))))))))))))))) 1.) (and (<= (* skoXC1 (+ (- 1.) (* skoXC1 (* skoXC1 (+ (/ 1. 3.) (* skoXC1 (* skoXC1 (+ (/ 3. 20.) (* skoXC1 (* skoXC1 (+ (/ 5. 56.) (* skoXC1 (* skoXC1 (+ (/ 35. 576.) (* skoXC1 (* skoXC1 (/ 63. 1408.))))))))))))))))) 0.) (and (<= (* skoXC1 (+ (- 1.) (* skoXC1 (* skoXC1 (+ (/ (- 1.) 6.) (* skoXC1 (* skoXC1 (/ (- 3.) 40.)))))))) 0.) (and (> (* skoXC1 (* skoXC1 (+ (/ 1. 6.) (* skoXC1 (* skoXC1 (/ 3. 40.)))))) (- 1.)) (and (<= (* skoXC1 (* skoXC1 (* skoXC1 (* skoXC1 (+ (/ 32. 15.) (* skoXC1 (* skoXC1 (+ (/ (- 296.) 15.) (* skoXC1 (* skoXC1 (+ (/ 391. 15.) (* skoXC1 (* skoXC1 (+ (/ (- 146.) 15.) (* skoXC1 (* skoXC1 (/ 3. 4.))))))))))))))))) 0.) (and (<= (* skoXC1 (* skoXC1 (+ (/ 1. 3.) (* skoXC1 (* skoXC1 (/ 3. 20.)))))) 1.) (and (<= (* skoXC1 (* skoXC1 (* skoXC1 (* skoXC1 (+ (/ (- 17.) 120.) (* skoXC1 (* skoXC1 (/ 3. 80.)))))))) 0.) (and (<= (* skoXC1 (* skoXC1 (* skoXC1 (* skoXC1 (+ (/ (- 13.) 60.) (* skoXC1 (* skoXC1 (/ (- 3.) 10.)))))))) 0.) (and (<= (* skoXC1 (* skoXC1 (+ (/ (- 1.) 2.) (* skoXC1 (* skoXC1 (+ (/ 7. 120.) (* skoXC1 (* skoXC1 (/ (- 3.) 40.))))))))) 0.) (and (<= (* skoXC1 (* skoXC1 (+ (/ (- 1.) 6.) (* skoXC1 (* skoXC1 (/ (- 3.) 40.)))))) 1.) (and (<= (* skoXC1 (+ (- 1.) (* skoXC1 (* skoXC1 (+ (/ 1. 3.) (* skoXC1 (* skoXC1 (/ 3. 20.)))))))) 0.) (and (> (* skoXC1 skoXC1) 0.) (and (<= (* skoXC1 (* skoXC1 (+ 80. (* skoXC1 (* skoXC1 (+ (- 40.) (* skoXC1 (* skoXC1 (+ 6. (* skoXC1 (* skoXC1 (/ (- 1.) 8.)))))))))))) 48.) (and (> (* skoXC1 (* skoXC1 (+ (- 80.) (* skoXC1 (* skoXC1 (+ 40. (* skoXC1 (* skoXC1 (+ (- 6.) (* skoXC1 (* skoXC1 (/ 1. 8.)))))))))))) (- 48.)) (and (<= (* skoXC1 (* skoXC1 (+ 24. (* skoXC1 (* skoXC1 (+ (- 10.) (* skoXC1 skoXC1))))))) 16.) (and (<= (* skoXC1 (* skoXC1 (/ 1. 2.))) 3.) (and (> (* skoXC1 (* skoXC1 (/ (- 1.) 2.))) (- 3.)) (and (> skoXC1 0.) (and (> (/ 7. 8.) skoXC1) (and (<= (* skoXC1 (+ (- 1.) (* skoXC1 (* skoXC1 (/ 1. 3.))))) 0.) (and (<= (* skoXC1 (* skoXC1 (/ (- 1.) 6.))) 1.) (and (<= (* skoXC1 (* skoXC1 (+ (/ (- 1.) 2.) (* skoXC1 (* skoXC1 (/ (- 1.) 6.)))))) 0.) (and (<= (* skoXC1 skoXC1) 2.) (and (<= (* skoXC1 (* skoXC1 (* skoXC1 (* skoXC1 (/ (- 2.) 3.))))) 0.) (and (<= (* skoXC1 (+ (- 1.) (* skoXC1 (* skoXC1 (/ (- 1.) 6.))))) 0.) (and (<= (* skoXC1 (* skoXC1 (/ 1. 3.))) 1.) (and (<= (* skoXC1 (* skoXC1 (+ 256. (* skoXC1 (* skoXC1 (+ (- 160.) (* skoXC1 (* skoXC1 (+ 32. (* skoXC1 (* skoXC1 (- 1.)))))))))))) 128.) (and (<= (* skoXC1 (* skoXC1 (* skoXC1 (* skoXC1 (+ (/ (- 80.) 3.) (* skoXC1 (* skoXC1 (+ (/ 128. 3.) (* skoXC1 (* skoXC1 (+ (/ (- 55.) 3.) (* skoXC1 (* skoXC1 (/ 5. 3.)))))))))))))) 0.) (and (<= (* skoXC1 (+ (- 1.) (* skoXC1 (* skoXC1 (+ (/ 1. 3.) (* skoXC1 (* skoXC1 (+ (/ 3. 20.) (* skoXC1 (* skoXC1 (/ 5. 56.))))))))))) 0.) (and (<= (* skoXC1 (* skoXC1 (+ (/ (- 1.) 6.) (* skoXC1 (* skoXC1 (+ (/ (- 3.) 40.) (* skoXC1 (* skoXC1 (/ (- 5.) 112.))))))))) 1.) (and (<= (* skoXC1 (* skoXC1 (+ (/ (- 1.) 2.) (* skoXC1 (* skoXC1 (+ (/ 7. 120.) (* skoXC1 (* skoXC1 (+ (/ 33. 560.) (* skoXC1 (* skoXC1 (/ (- 5.) 112.)))))))))))) 0.) (and (<= (* skoXC1 (* skoXC1 (* skoXC1 (* skoXC1 (+ (/ (- 13.) 60.) (* skoXC1 (* skoXC1 (+ (/ (- 9.) 280.) (* skoXC1 (* skoXC1 (/ (- 5.) 28.))))))))))) 0.) (and (<= (* skoXC1 (* skoXC1 (* skoXC1 (* skoXC1 (+ (/ (- 17.) 120.) (* skoXC1 (* skoXC1 (+ (/ (- 27.) 280.) (* skoXC1 (* skoXC1 (/ 5. 224.))))))))))) 0.) (and (<= (* skoXC1 (* skoXC1 (+ (/ 1. 3.) (* skoXC1 (* skoXC1 (+ (/ 3. 20.) (* skoXC1 (* skoXC1 (/ 5. 56.))))))))) 1.) (and (<= (* skoXC1 (* skoXC1 (* skoXC1 (* skoXC1 (+ (/ 32. 15.) (* skoXC1 (* skoXC1 (+ (/ (- 272.) 105.) (* skoXC1 (* skoXC1 (+ (/ (- 1163.) 105.) (* skoXC1 (* skoXC1 (+ (/ 1753. 105.) (* skoXC1 (* skoXC1 (+ (/ (- 169.) 28.) (* skoXC1 (* skoXC1 (/ 25. 56.)))))))))))))))))))) 0.) (and (> (* skoXC1 (* skoXC1 (+ (/ 1. 6.) (* skoXC1 (* skoXC1 (+ (/ 3. 40.) (* skoXC1 (* skoXC1 (/ 5. 112.))))))))) (- 1.)) (<= (* skoXC1 (+ (- 1.) (* skoXC1 (* skoXC1 (+ (/ (- 1.) 6.) (* skoXC1 (* skoXC1 (+ (/ (- 3.) 40.) (* skoXC1 (* skoXC1 (/ (- 5.) 112.))))))))))) 0.)))))))))))))))))))))))))))))))))))))))))

% In GRF format:
(sequent " MetiTarski formula " (antecedent (<= (* skoXC1 (* skoXC1 (+ (/ (- 1.) 6.) (* skoXC1 (* skoXC1 (+ (/ (- 3.) 40.) (* skoXC1 (* skoXC1 (+ (/ (- 5.) 112.) (* skoXC1 (* skoXC1 (+ (/ (- 35.) 1152.) (* skoXC1 (* skoXC1 (/ (- 63.) 2816.))))))))))))))) 1.) (<= (* skoXC1 (* skoXC1 (* skoXC1 (* skoXC1 (+ (/ (- 13.) 60.) (* skoXC1 (* skoXC1 (+ (/ (- 9.) 280.) (* skoXC1 (* skoXC1 (+ (/ 5. 1344.) (* skoXC1 (* skoXC1 (+ (/ 161. 12672.) (* skoXC1 (* skoXC1 (/ (- 63.) 704.))))))))))))))))) 0.) (<= (* skoXC1 (* skoXC1 (+ (/ (- 1.) 2.) (* skoXC1 (* skoXC1 (+ (/ 7. 120.) (* skoXC1 (* skoXC1 (+ (/ 33. 560.) (* skoXC1 (* skoXC1 (+ (/ 125. 2688.) (* skoXC1 (* skoXC1 (+ (/ 931. 25344.) (* skoXC1 (* skoXC1 (/ (- 63.) 2816.)))))))))))))))))) 0.) (<= (* skoXC1 (* skoXC1 (+ (/ (- 1.) 6.) (* skoXC1 (* skoXC1 (+ (/ (- 3.) 40.) (* skoXC1 (* skoXC1 (+ (/ (- 5.) 112.) (* skoXC1 (* skoXC1 (+ (/ (- 35.) 1152.) (* skoXC1 (* skoXC1 (/ (- 63.) 2816.))))))))))))))) 1.) (<= (* skoXC1 (+ (- 1.) (* skoXC1 (* skoXC1 (+ (/ 1. 3.) (* skoXC1 (* skoXC1 (+ (/ 3. 20.) (* skoXC1 (* skoXC1 (+ (/ 5. 56.) (* skoXC1 (* skoXC1 (+ (/ 35. 576.) (* skoXC1 (* skoXC1 (/ 63. 1408.))))))))))))))))) 0.) (<= (* skoXC1 (+ (- 1.) (* skoXC1 (* skoXC1 (+ (/ (- 1.) 6.) (* skoXC1 (* skoXC1 (/ (- 3.) 40.)))))))) 0.) (> (* skoXC1 (* skoXC1 (+ (/ 1. 6.) (* skoXC1 (* skoXC1 (/ 3. 40.)))))) (- 1.)) (<= (* skoXC1 (* skoXC1 (* skoXC1 (* skoXC1 (+ (/ 32. 15.) (* skoXC1 (* skoXC1 (+ (/ (- 296.) 15.) (* skoXC1 (* skoXC1 (+ (/ 391. 15.) (* skoXC1 (* skoXC1 (+ (/ (- 146.) 15.) (* skoXC1 (* skoXC1 (/ 3. 4.))))))))))))))))) 0.) (<= (* skoXC1 (* skoXC1 (+ (/ 1. 3.) (* skoXC1 (* skoXC1 (/ 3. 20.)))))) 1.) (<= (* skoXC1 (* skoXC1 (* skoXC1 (* skoXC1 (+ (/ (- 17.) 120.) (* skoXC1 (* skoXC1 (/ 3. 80.)))))))) 0.) (<= (* skoXC1 (* skoXC1 (* skoXC1 (* skoXC1 (+ (/ (- 13.) 60.) (* skoXC1 (* skoXC1 (/ (- 3.) 10.)))))))) 0.) (<= (* skoXC1 (* skoXC1 (+ (/ (- 1.) 2.) (* skoXC1 (* skoXC1 (+ (/ 7. 120.) (* skoXC1 (* skoXC1 (/ (- 3.) 40.))))))))) 0.) (<= (* skoXC1 (* skoXC1 (+ (/ (- 1.) 6.) (* skoXC1 (* skoXC1 (/ (- 3.) 40.)))))) 1.) (<= (* skoXC1 (+ (- 1.) (* skoXC1 (* skoXC1 (+ (/ 1. 3.) (* skoXC1 (* skoXC1 (/ 3. 20.)))))))) 0.) (> (* skoXC1 skoXC1) 0.) (<= (* skoXC1 (* skoXC1 (+ 80. (* skoXC1 (* skoXC1 (+ (- 40.) (* skoXC1 (* skoXC1 (+ 6. (* skoXC1 (* skoXC1 (/ (- 1.) 8.)))))))))))) 48.) (> (* skoXC1 (* skoXC1 (+ (- 80.) (* skoXC1 (* skoXC1 (+ 40. (* skoXC1 (* skoXC1 (+ (- 6.) (* skoXC1 (* skoXC1 (/ 1. 8.)))))))))))) (- 48.)) (<= (* skoXC1 (* skoXC1 (+ 24. (* skoXC1 (* skoXC1 (+ (- 10.) (* skoXC1 skoXC1))))))) 16.) (<= (* skoXC1 (* skoXC1 (/ 1. 2.))) 3.) (> (* skoXC1 (* skoXC1 (/ (- 1.) 2.))) (- 3.)) (> skoXC1 0.) (> (/ 7. 8.) skoXC1) (<= (* skoXC1 (+ (- 1.) (* skoXC1 (* skoXC1 (/ 1. 3.))))) 0.) (<= (* skoXC1 (* skoXC1 (/ (- 1.) 6.))) 1.) (<= (* skoXC1 (* skoXC1 (+ (/ (- 1.) 2.) (* skoXC1 (* skoXC1 (/ (- 1.) 6.)))))) 0.) (<= (* skoXC1 skoXC1) 2.) (<= (* skoXC1 (* skoXC1 (* skoXC1 (* skoXC1 (/ (- 2.) 3.))))) 0.) (<= (* skoXC1 (+ (- 1.) (* skoXC1 (* skoXC1 (/ (- 1.) 6.))))) 0.) (<= (* skoXC1 (* skoXC1 (/ 1. 3.))) 1.) (<= (* skoXC1 (* skoXC1 (+ 256. (* skoXC1 (* skoXC1 (+ (- 160.) (* skoXC1 (* skoXC1 (+ 32. (* skoXC1 (* skoXC1 (- 1.)))))))))))) 128.) (<= (* skoXC1 (* skoXC1 (* skoXC1 (* skoXC1 (+ (/ (- 80.) 3.) (* skoXC1 (* skoXC1 (+ (/ 128. 3.) (* skoXC1 (* skoXC1 (+ (/ (- 55.) 3.) (* skoXC1 (* skoXC1 (/ 5. 3.)))))))))))))) 0.) (<= (* skoXC1 (+ (- 1.) (* skoXC1 (* skoXC1 (+ (/ 1. 3.) (* skoXC1 (* skoXC1 (+ (/ 3. 20.) (* skoXC1 (* skoXC1 (/ 5. 56.))))))))))) 0.) (<= (* skoXC1 (* skoXC1 (+ (/ (- 1.) 6.) (* skoXC1 (* skoXC1 (+ (/ (- 3.) 40.) (* skoXC1 (* skoXC1 (/ (- 5.) 112.))))))))) 1.) (<= (* skoXC1 (* skoXC1 (+ (/ (- 1.) 2.) (* skoXC1 (* skoXC1 (+ (/ 7. 120.) (* skoXC1 (* skoXC1 (+ (/ 33. 560.) (* skoXC1 (* skoXC1 (/ (- 5.) 112.)))))))))))) 0.) (<= (* skoXC1 (* skoXC1 (* skoXC1 (* skoXC1 (+ (/ (- 13.) 60.) (* skoXC1 (* skoXC1 (+ (/ (- 9.) 280.) (* skoXC1 (* skoXC1 (/ (- 5.) 28.))))))))))) 0.) (<= (* skoXC1 (* skoXC1 (* skoXC1 (* skoXC1 (+ (/ (- 17.) 120.) (* skoXC1 (* skoXC1 (+ (/ (- 27.) 280.) (* skoXC1 (* skoXC1 (/ 5. 224.))))))))))) 0.) (<= (* skoXC1 (* skoXC1 (+ (/ 1. 3.) (* skoXC1 (* skoXC1 (+ (/ 3. 20.) (* skoXC1 (* skoXC1 (/ 5. 56.))))))))) 1.) (<= (* skoXC1 (* skoXC1 (* skoXC1 (* skoXC1 (+ (/ 32. 15.) (* skoXC1 (* skoXC1 (+ (/ (- 272.) 105.) (* skoXC1 (* skoXC1 (+ (/ (- 1163.) 105.) (* skoXC1 (* skoXC1 (+ (/ 1753. 105.) (* skoXC1 (* skoXC1 (+ (/ (- 169.) 28.) (* skoXC1 (* skoXC1 (/ 25. 56.)))))))))))))))))))) 0.) (> (* skoXC1 (* skoXC1 (+ (/ 1. 6.) (* skoXC1 (* skoXC1 (+ (/ 3. 40.) (* skoXC1 (* skoXC1 (/ 5. 112.))))))))) (- 1.))) (succedent (> (* skoXC1 (+ (- 1.) (* skoXC1 (* skoXC1 (+ (/ (- 1.) 6.) (* skoXC1 (* skoXC1 (+ (/ (- 3.) 40.) (* skoXC1 (* skoXC1 (/ (- 5.) 112.))))))))))) 0.)))
-----[end problem]-----

-----[begin problem]-----
% In Mathematica format:
Timing[Resolve[Exists[{skoXC1}, And[skoXC1*skoXC1*skoXC1*skoXC1*((-13/60)+skoXC1*skoXC1*((-9/280)+skoXC1*skoXC1*((5/1344)+skoXC1*skoXC1*((161/12672)+skoXC1*skoXC1*(-63/704)))))<=0,skoXC1*skoXC1*skoXC1*skoXC1*((-13/60)+skoXC1*skoXC1*((-9/280)+skoXC1*skoXC1*((5/1344)+skoXC1*skoXC1*((161/12672)+skoXC1*skoXC1*(-63/704)))))<=0,skoXC1*skoXC1*((-1/2)+skoXC1*skoXC1*((7/120)+skoXC1*skoXC1*((33/560)+skoXC1*skoXC1*((125/2688)+skoXC1*skoXC1*((931/25344)+skoXC1*skoXC1*(-63/2816))))))<=0,skoXC1*skoXC1*((-1/6)+skoXC1*skoXC1*((-3/40)+skoXC1*skoXC1*((-5/112)+skoXC1*skoXC1*((-35/1152)+skoXC1*skoXC1*(-63/2816)))))<=1,skoXC1*(-1+skoXC1*skoXC1*((1/3)+skoXC1*skoXC1*((3/20)+skoXC1*skoXC1*((5/56)+skoXC1*skoXC1*((35/576)+skoXC1*skoXC1*(63/1408))))))<=0,skoXC1*(-1+skoXC1*skoXC1*((-1/6)+skoXC1*skoXC1*(-3/40)))<=0,skoXC1*skoXC1*((1/6)+skoXC1*skoXC1*(3/40))>-1,skoXC1*skoXC1*skoXC1*skoXC1*((32/15)+skoXC1*skoXC1*((-296/15)+skoXC1*skoXC1*((391/15)+skoXC1*skoXC1*((-146/15)+skoXC1*skoXC1*(3/4)))))<=0,skoXC1*skoXC1*((1/3)+skoXC1*skoXC1*(3/20))<=1,skoXC1*skoXC1*skoXC1*skoXC1*((-17/120)+skoXC1*skoXC1*(3/80))<=0,skoXC1*skoXC1*skoXC1*skoXC1*((-13/60)+skoXC1*skoXC1*(-3/10))<=0,skoXC1*skoXC1*((-1/2)+skoXC1*skoXC1*((7/120)+skoXC1*skoXC1*(-3/40)))<=0,skoXC1*skoXC1*((-1/6)+skoXC1*skoXC1*(-3/40))<=1,skoXC1*(-1+skoXC1*skoXC1*((1/3)+skoXC1*skoXC1*(3/20)))<=0,skoXC1*skoXC1>0,skoXC1*skoXC1*(80+skoXC1*skoXC1*(-40+skoXC1*skoXC1*(6+skoXC1*skoXC1*(-1/8))))<=48,skoXC1*skoXC1*(-80+skoXC1*skoXC1*(40+skoXC1*skoXC1*(-6+skoXC1*skoXC1*(1/8))))>-48,skoXC1*skoXC1*(24+skoXC1*skoXC1*(-10+skoXC1*skoXC1))<=16,skoXC1*skoXC1*(1/2)<=3,skoXC1*skoXC1*(-1/2)>-3,skoXC1>0,(7/8)>skoXC1,skoXC1*(-1+skoXC1*skoXC1*(1/3))<=0,skoXC1*skoXC1*(-1/6)<=1,skoXC1*skoXC1*((-1/2)+skoXC1*skoXC1*(-1/6))<=0,skoXC1*skoXC1<=2,skoXC1*skoXC1*skoXC1*skoXC1*(-2/3)<=0,skoXC1*(-1+skoXC1*skoXC1*(-1/6))<=0,skoXC1*skoXC1*(1/3)<=1,skoXC1*skoXC1*(256+skoXC1*skoXC1*(-160+skoXC1*skoXC1*(32+skoXC1*skoXC1*-1)))<=128,skoXC1*skoXC1*skoXC1*skoXC1*((-80/3)+skoXC1*skoXC1*((128/3)+skoXC1*skoXC1*((-55/3)+skoXC1*skoXC1*(5/3))))<=0,skoXC1*(-1+skoXC1*skoXC1*((1/3)+skoXC1*skoXC1*((3/20)+skoXC1*skoXC1*(5/56))))<=0,skoXC1*skoXC1*((-1/6)+skoXC1*skoXC1*((-3/40)+skoXC1*skoXC1*(-5/112)))<=1,skoXC1*skoXC1*((-1/2)+skoXC1*skoXC1*((7/120)+skoXC1*skoXC1*((33/560)+skoXC1*skoXC1*(-5/112))))<=0,skoXC1*skoXC1*skoXC1*skoXC1*((-13/60)+skoXC1*skoXC1*((-9/280)+skoXC1*skoXC1*(-5/28)))<=0,skoXC1*skoXC1*skoXC1*skoXC1*((-17/120)+skoXC1*skoXC1*((-27/280)+skoXC1*skoXC1*(5/224)))<=0,skoXC1*skoXC1*((1/3)+skoXC1*skoXC1*((3/20)+skoXC1*skoXC1*(5/56)))<=1,skoXC1*skoXC1*skoXC1*skoXC1*((32/15)+skoXC1*skoXC1*((-272/105)+skoXC1*skoXC1*((-1163/105)+skoXC1*skoXC1*((1753/105)+skoXC1*skoXC1*((-169/28)+skoXC1*skoXC1*(25/56))))))<=0,skoXC1*skoXC1*((1/6)+skoXC1*skoXC1*((3/40)+skoXC1*skoXC1*(5/112)))>-1,skoXC1*(-1+skoXC1*skoXC1*((-1/6)+skoXC1*skoXC1*((-3/40)+skoXC1*skoXC1*(-5/112))))<=0]], Reals]]

% In QepcadB format:
(E skoXC1) [[(skoXC1 skoXC1 skoXC1 skoXC1 (-13/60+(skoXC1 skoXC1 (-9/280+(skoXC1 skoXC1 (5/1344+(skoXC1 skoXC1 (161/12672+(skoXC1 skoXC1 (-63/704))))))))))<=0]/\[[(skoXC1 skoXC1 skoXC1 skoXC1 (-13/60+(skoXC1 skoXC1 (-9/280+(skoXC1 skoXC1 (5/1344+(skoXC1 skoXC1 (161/12672+(skoXC1 skoXC1 (-63/704))))))))))<=0]/\[[(skoXC1 skoXC1 (-1/2+(skoXC1 skoXC1 (7/120+(skoXC1 skoXC1 (33/560+(skoXC1 skoXC1 (125/2688+(skoXC1 skoXC1 (931/25344+(skoXC1 skoXC1 (-63/2816))))))))))))<=0]/\[[(skoXC1 skoXC1 (-1/6+(skoXC1 skoXC1 (-3/40+(skoXC1 skoXC1 (-5/112+(skoXC1 skoXC1 (-35/1152+(skoXC1 skoXC1 (-63/2816))))))))))<=1]/\[[(skoXC1 (-1+(skoXC1 skoXC1 (1/3+(skoXC1 skoXC1 (3/20+(skoXC1 skoXC1 (5/56+(skoXC1 skoXC1 (35/576+(skoXC1 skoXC1 (63/1408))))))))))))<=0]/\[[(skoXC1 (-1+(skoXC1 skoXC1 (-1/6+(skoXC1 skoXC1 (-3/40))))))<=0]/\[[-1<(skoXC1 skoXC1 (1/6+(skoXC1 skoXC1 (3/40))))]/\[[(skoXC1 skoXC1 skoXC1 skoXC1 (32/15+(skoXC1 skoXC1 (-296/15+(skoXC1 skoXC1 (391/15+(skoXC1 skoXC1 (-146/15+(skoXC1 skoXC1 (3/4))))))))))<=0]/\[[(skoXC1 skoXC1 (1/3+(skoXC1 skoXC1 (3/20))))<=1]/\[[(skoXC1 skoXC1 skoXC1 skoXC1 (-17/120+(skoXC1 skoXC1 (3/80))))<=0]/\[[(skoXC1 skoXC1 skoXC1 skoXC1 (-13/60+(skoXC1 skoXC1 (-3/10))))<=0]/\[[(skoXC1 skoXC1 (-1/2+(skoXC1 skoXC1 (7/120+(skoXC1 skoXC1 (-3/40))))))<=0]/\[[(skoXC1 skoXC1 (-1/6+(skoXC1 skoXC1 (-3/40))))<=1]/\[[(skoXC1 (-1+(skoXC1 skoXC1 (1/3+(skoXC1 skoXC1 (3/20))))))<=0]/\[[0<(skoXC1 skoXC1)]/\[[(skoXC1 skoXC1 (80+(skoXC1 skoXC1 (-40+(skoXC1 skoXC1 (6+(skoXC1 skoXC1 (-1/8))))))))<=48]/\[[-48<(skoXC1 skoXC1 (-80+(skoXC1 skoXC1 (40+(skoXC1 skoXC1 (-6+(skoXC1 skoXC1 (1/8))))))))]/\[[(skoXC1 skoXC1 (24+(skoXC1 skoXC1 (-10+(skoXC1 skoXC1)))))<=16]/\[[(skoXC1 skoXC1 (1/2))<=3]/\[[-3<(skoXC1 skoXC1 (-1/2))]/\[[0<skoXC1]/\[[skoXC1<7/8]/\[[(skoXC1 (-1+(skoXC1 skoXC1 (1/3))))<=0]/\[[(skoXC1 skoXC1 (-1/6))<=1]/\[[(skoXC1 skoXC1 (-1/2+(skoXC1 skoXC1 (-1/6))))<=0]/\[[(skoXC1 skoXC1)<=2]/\[[(skoXC1 skoXC1 skoXC1 skoXC1 (-2/3))<=0]/\[[(skoXC1 (-1+(skoXC1 skoXC1 (-1/6))))<=0]/\[[(skoXC1 skoXC1 (1/3))<=1]/\[[(skoXC1 skoXC1 (256+(skoXC1 skoXC1 (-160+(skoXC1 skoXC1 (32+(skoXC1 skoXC1 (-1))))))))<=128]/\[[(skoXC1 skoXC1 skoXC1 skoXC1 (-80/3+(skoXC1 skoXC1 (128/3+(skoXC1 skoXC1 (-55/3+(skoXC1 skoXC1 (5/3))))))))<=0]/\[[(skoXC1 (-1+(skoXC1 skoXC1 (1/3+(skoXC1 skoXC1 (3/20+(skoXC1 skoXC1 (5/56))))))))<=0]/\[[(skoXC1 skoXC1 (-1/6+(skoXC1 skoXC1 (-3/40+(skoXC1 skoXC1 (-5/112))))))<=1]/\[[(skoXC1 skoXC1 (-1/2+(skoXC1 skoXC1 (7/120+(skoXC1 skoXC1 (33/560+(skoXC1 skoXC1 (-5/112))))))))<=0]/\[[(skoXC1 skoXC1 skoXC1 skoXC1 (-13/60+(skoXC1 skoXC1 (-9/280+(skoXC1 skoXC1 (-5/28))))))<=0]/\[[(skoXC1 skoXC1 skoXC1 skoXC1 (-17/120+(skoXC1 skoXC1 (-27/280+(skoXC1 skoXC1 (5/224))))))<=0]/\[[(skoXC1 skoXC1 (1/3+(skoXC1 skoXC1 (3/20+(skoXC1 skoXC1 (5/56))))))<=1]/\[[(skoXC1 skoXC1 skoXC1 skoXC1 (32/15+(skoXC1 skoXC1 (-272/105+(skoXC1 skoXC1 (-1163/105+(skoXC1 skoXC1 (1753/105+(skoXC1 skoXC1 (-169/28+(skoXC1 skoXC1 (25/56))))))))))))<=0]/\[[-1<(skoXC1 skoXC1 (1/6+(skoXC1 skoXC1 (3/40+(skoXC1 skoXC1 (5/112))))))]/\[(skoXC1 (-1+(skoXC1 skoXC1 (-1/6+(skoXC1 skoXC1 (-3/40+(skoXC1 skoXC1 (-5/112))))))))<=0]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]].

% In SMTLib2 format:
(declare-fun skoXC1 () Real) (assert (and (<= (* skoXC1 (* skoXC1 (* skoXC1 (* skoXC1 (+ (/ (- 13.) 60.) (* skoXC1 (* skoXC1 (+ (/ (- 9.) 280.) (* skoXC1 (* skoXC1 (+ (/ 5. 1344.) (* skoXC1 (* skoXC1 (+ (/ 161. 12672.) (* skoXC1 (* skoXC1 (/ (- 63.) 704.))))))))))))))))) 0.) (and (<= (* skoXC1 (* skoXC1 (* skoXC1 (* skoXC1 (+ (/ (- 13.) 60.) (* skoXC1 (* skoXC1 (+ (/ (- 9.) 280.) (* skoXC1 (* skoXC1 (+ (/ 5. 1344.) (* skoXC1 (* skoXC1 (+ (/ 161. 12672.) (* skoXC1 (* skoXC1 (/ (- 63.) 704.))))))))))))))))) 0.) (and (<= (* skoXC1 (* skoXC1 (+ (/ (- 1.) 2.) (* skoXC1 (* skoXC1 (+ (/ 7. 120.) (* skoXC1 (* skoXC1 (+ (/ 33. 560.) (* skoXC1 (* skoXC1 (+ (/ 125. 2688.) (* skoXC1 (* skoXC1 (+ (/ 931. 25344.) (* skoXC1 (* skoXC1 (/ (- 63.) 2816.)))))))))))))))))) 0.) (and (<= (* skoXC1 (* skoXC1 (+ (/ (- 1.) 6.) (* skoXC1 (* skoXC1 (+ (/ (- 3.) 40.) (* skoXC1 (* skoXC1 (+ (/ (- 5.) 112.) (* skoXC1 (* skoXC1 (+ (/ (- 35.) 1152.) (* skoXC1 (* skoXC1 (/ (- 63.) 2816.))))))))))))))) 1.) (and (<= (* skoXC1 (+ (- 1.) (* skoXC1 (* skoXC1 (+ (/ 1. 3.) (* skoXC1 (* skoXC1 (+ (/ 3. 20.) (* skoXC1 (* skoXC1 (+ (/ 5. 56.) (* skoXC1 (* skoXC1 (+ (/ 35. 576.) (* skoXC1 (* skoXC1 (/ 63. 1408.))))))))))))))))) 0.) (and (<= (* skoXC1 (+ (- 1.) (* skoXC1 (* skoXC1 (+ (/ (- 1.) 6.) (* skoXC1 (* skoXC1 (/ (- 3.) 40.)))))))) 0.) (and (> (* skoXC1 (* skoXC1 (+ (/ 1. 6.) (* skoXC1 (* skoXC1 (/ 3. 40.)))))) (- 1.)) (and (<= (* skoXC1 (* skoXC1 (* skoXC1 (* skoXC1 (+ (/ 32. 15.) (* skoXC1 (* skoXC1 (+ (/ (- 296.) 15.) (* skoXC1 (* skoXC1 (+ (/ 391. 15.) (* skoXC1 (* skoXC1 (+ (/ (- 146.) 15.) (* skoXC1 (* skoXC1 (/ 3. 4.))))))))))))))))) 0.) (and (<= (* skoXC1 (* skoXC1 (+ (/ 1. 3.) (* skoXC1 (* skoXC1 (/ 3. 20.)))))) 1.) (and (<= (* skoXC1 (* skoXC1 (* skoXC1 (* skoXC1 (+ (/ (- 17.) 120.) (* skoXC1 (* skoXC1 (/ 3. 80.)))))))) 0.) (and (<= (* skoXC1 (* skoXC1 (* skoXC1 (* skoXC1 (+ (/ (- 13.) 60.) (* skoXC1 (* skoXC1 (/ (- 3.) 10.)))))))) 0.) (and (<= (* skoXC1 (* skoXC1 (+ (/ (- 1.) 2.) (* skoXC1 (* skoXC1 (+ (/ 7. 120.) (* skoXC1 (* skoXC1 (/ (- 3.) 40.))))))))) 0.) (and (<= (* skoXC1 (* skoXC1 (+ (/ (- 1.) 6.) (* skoXC1 (* skoXC1 (/ (- 3.) 40.)))))) 1.) (and (<= (* skoXC1 (+ (- 1.) (* skoXC1 (* skoXC1 (+ (/ 1. 3.) (* skoXC1 (* skoXC1 (/ 3. 20.)))))))) 0.) (and (> (* skoXC1 skoXC1) 0.) (and (<= (* skoXC1 (* skoXC1 (+ 80. (* skoXC1 (* skoXC1 (+ (- 40.) (* skoXC1 (* skoXC1 (+ 6. (* skoXC1 (* skoXC1 (/ (- 1.) 8.)))))))))))) 48.) (and (> (* skoXC1 (* skoXC1 (+ (- 80.) (* skoXC1 (* skoXC1 (+ 40. (* skoXC1 (* skoXC1 (+ (- 6.) (* skoXC1 (* skoXC1 (/ 1. 8.)))))))))))) (- 48.)) (and (<= (* skoXC1 (* skoXC1 (+ 24. (* skoXC1 (* skoXC1 (+ (- 10.) (* skoXC1 skoXC1))))))) 16.) (and (<= (* skoXC1 (* skoXC1 (/ 1. 2.))) 3.) (and (> (* skoXC1 (* skoXC1 (/ (- 1.) 2.))) (- 3.)) (and (> skoXC1 0.) (and (> (/ 7. 8.) skoXC1) (and (<= (* skoXC1 (+ (- 1.) (* skoXC1 (* skoXC1 (/ 1. 3.))))) 0.) (and (<= (* skoXC1 (* skoXC1 (/ (- 1.) 6.))) 1.) (and (<= (* skoXC1 (* skoXC1 (+ (/ (- 1.) 2.) (* skoXC1 (* skoXC1 (/ (- 1.) 6.)))))) 0.) (and (<= (* skoXC1 skoXC1) 2.) (and (<= (* skoXC1 (* skoXC1 (* skoXC1 (* skoXC1 (/ (- 2.) 3.))))) 0.) (and (<= (* skoXC1 (+ (- 1.) (* skoXC1 (* skoXC1 (/ (- 1.) 6.))))) 0.) (and (<= (* skoXC1 (* skoXC1 (/ 1. 3.))) 1.) (and (<= (* skoXC1 (* skoXC1 (+ 256. (* skoXC1 (* skoXC1 (+ (- 160.) (* skoXC1 (* skoXC1 (+ 32. (* skoXC1 (* skoXC1 (- 1.)))))))))))) 128.) (and (<= (* skoXC1 (* skoXC1 (* skoXC1 (* skoXC1 (+ (/ (- 80.) 3.) (* skoXC1 (* skoXC1 (+ (/ 128. 3.) (* skoXC1 (* skoXC1 (+ (/ (- 55.) 3.) (* skoXC1 (* skoXC1 (/ 5. 3.)))))))))))))) 0.) (and (<= (* skoXC1 (+ (- 1.) (* skoXC1 (* skoXC1 (+ (/ 1. 3.) (* skoXC1 (* skoXC1 (+ (/ 3. 20.) (* skoXC1 (* skoXC1 (/ 5. 56.))))))))))) 0.) (and (<= (* skoXC1 (* skoXC1 (+ (/ (- 1.) 6.) (* skoXC1 (* skoXC1 (+ (/ (- 3.) 40.) (* skoXC1 (* skoXC1 (/ (- 5.) 112.))))))))) 1.) (and (<= (* skoXC1 (* skoXC1 (+ (/ (- 1.) 2.) (* skoXC1 (* skoXC1 (+ (/ 7. 120.) (* skoXC1 (* skoXC1 (+ (/ 33. 560.) (* skoXC1 (* skoXC1 (/ (- 5.) 112.)))))))))))) 0.) (and (<= (* skoXC1 (* skoXC1 (* skoXC1 (* skoXC1 (+ (/ (- 13.) 60.) (* skoXC1 (* skoXC1 (+ (/ (- 9.) 280.) (* skoXC1 (* skoXC1 (/ (- 5.) 28.))))))))))) 0.) (and (<= (* skoXC1 (* skoXC1 (* skoXC1 (* skoXC1 (+ (/ (- 17.) 120.) (* skoXC1 (* skoXC1 (+ (/ (- 27.) 280.) (* skoXC1 (* skoXC1 (/ 5. 224.))))))))))) 0.) (and (<= (* skoXC1 (* skoXC1 (+ (/ 1. 3.) (* skoXC1 (* skoXC1 (+ (/ 3. 20.) (* skoXC1 (* skoXC1 (/ 5. 56.))))))))) 1.) (and (<= (* skoXC1 (* skoXC1 (* skoXC1 (* skoXC1 (+ (/ 32. 15.) (* skoXC1 (* skoXC1 (+ (/ (- 272.) 105.) (* skoXC1 (* skoXC1 (+ (/ (- 1163.) 105.) (* skoXC1 (* skoXC1 (+ (/ 1753. 105.) (* skoXC1 (* skoXC1 (+ (/ (- 169.) 28.) (* skoXC1 (* skoXC1 (/ 25. 56.)))))))))))))))))))) 0.) (and (> (* skoXC1 (* skoXC1 (+ (/ 1. 6.) (* skoXC1 (* skoXC1 (+ (/ 3. 40.) (* skoXC1 (* skoXC1 (/ 5. 112.))))))))) (- 1.)) (<= (* skoXC1 (+ (- 1.) (* skoXC1 (* skoXC1 (+ (/ (- 1.) 6.) (* skoXC1 (* skoXC1 (+ (/ (- 3.) 40.) (* skoXC1 (* skoXC1 (/ (- 5.) 112.))))))))))) 0.)))))))))))))))))))))))))))))))))))))))))

% In GRF format:
(sequent " MetiTarski formula " (antecedent (<= (* skoXC1 (* skoXC1 (* skoXC1 (* skoXC1 (+ (/ (- 13.) 60.) (* skoXC1 (* skoXC1 (+ (/ (- 9.) 280.) (* skoXC1 (* skoXC1 (+ (/ 5. 1344.) (* skoXC1 (* skoXC1 (+ (/ 161. 12672.) (* skoXC1 (* skoXC1 (/ (- 63.) 704.))))))))))))))))) 0.) (<= (* skoXC1 (* skoXC1 (* skoXC1 (* skoXC1 (+ (/ (- 13.) 60.) (* skoXC1 (* skoXC1 (+ (/ (- 9.) 280.) (* skoXC1 (* skoXC1 (+ (/ 5. 1344.) (* skoXC1 (* skoXC1 (+ (/ 161. 12672.) (* skoXC1 (* skoXC1 (/ (- 63.) 704.))))))))))))))))) 0.) (<= (* skoXC1 (* skoXC1 (+ (/ (- 1.) 2.) (* skoXC1 (* skoXC1 (+ (/ 7. 120.) (* skoXC1 (* skoXC1 (+ (/ 33. 560.) (* skoXC1 (* skoXC1 (+ (/ 125. 2688.) (* skoXC1 (* skoXC1 (+ (/ 931. 25344.) (* skoXC1 (* skoXC1 (/ (- 63.) 2816.)))))))))))))))))) 0.) (<= (* skoXC1 (* skoXC1 (+ (/ (- 1.) 6.) (* skoXC1 (* skoXC1 (+ (/ (- 3.) 40.) (* skoXC1 (* skoXC1 (+ (/ (- 5.) 112.) (* skoXC1 (* skoXC1 (+ (/ (- 35.) 1152.) (* skoXC1 (* skoXC1 (/ (- 63.) 2816.))))))))))))))) 1.) (<= (* skoXC1 (+ (- 1.) (* skoXC1 (* skoXC1 (+ (/ 1. 3.) (* skoXC1 (* skoXC1 (+ (/ 3. 20.) (* skoXC1 (* skoXC1 (+ (/ 5. 56.) (* skoXC1 (* skoXC1 (+ (/ 35. 576.) (* skoXC1 (* skoXC1 (/ 63. 1408.))))))))))))))))) 0.) (<= (* skoXC1 (+ (- 1.) (* skoXC1 (* skoXC1 (+ (/ (- 1.) 6.) (* skoXC1 (* skoXC1 (/ (- 3.) 40.)))))))) 0.) (> (* skoXC1 (* skoXC1 (+ (/ 1. 6.) (* skoXC1 (* skoXC1 (/ 3. 40.)))))) (- 1.)) (<= (* skoXC1 (* skoXC1 (* skoXC1 (* skoXC1 (+ (/ 32. 15.) (* skoXC1 (* skoXC1 (+ (/ (- 296.) 15.) (* skoXC1 (* skoXC1 (+ (/ 391. 15.) (* skoXC1 (* skoXC1 (+ (/ (- 146.) 15.) (* skoXC1 (* skoXC1 (/ 3. 4.))))))))))))))))) 0.) (<= (* skoXC1 (* skoXC1 (+ (/ 1. 3.) (* skoXC1 (* skoXC1 (/ 3. 20.)))))) 1.) (<= (* skoXC1 (* skoXC1 (* skoXC1 (* skoXC1 (+ (/ (- 17.) 120.) (* skoXC1 (* skoXC1 (/ 3. 80.)))))))) 0.) (<= (* skoXC1 (* skoXC1 (* skoXC1 (* skoXC1 (+ (/ (- 13.) 60.) (* skoXC1 (* skoXC1 (/ (- 3.) 10.)))))))) 0.) (<= (* skoXC1 (* skoXC1 (+ (/ (- 1.) 2.) (* skoXC1 (* skoXC1 (+ (/ 7. 120.) (* skoXC1 (* skoXC1 (/ (- 3.) 40.))))))))) 0.) (<= (* skoXC1 (* skoXC1 (+ (/ (- 1.) 6.) (* skoXC1 (* skoXC1 (/ (- 3.) 40.)))))) 1.) (<= (* skoXC1 (+ (- 1.) (* skoXC1 (* skoXC1 (+ (/ 1. 3.) (* skoXC1 (* skoXC1 (/ 3. 20.)))))))) 0.) (> (* skoXC1 skoXC1) 0.) (<= (* skoXC1 (* skoXC1 (+ 80. (* skoXC1 (* skoXC1 (+ (- 40.) (* skoXC1 (* skoXC1 (+ 6. (* skoXC1 (* skoXC1 (/ (- 1.) 8.)))))))))))) 48.) (> (* skoXC1 (* skoXC1 (+ (- 80.) (* skoXC1 (* skoXC1 (+ 40. (* skoXC1 (* skoXC1 (+ (- 6.) (* skoXC1 (* skoXC1 (/ 1. 8.)))))))))))) (- 48.)) (<= (* skoXC1 (* skoXC1 (+ 24. (* skoXC1 (* skoXC1 (+ (- 10.) (* skoXC1 skoXC1))))))) 16.) (<= (* skoXC1 (* skoXC1 (/ 1. 2.))) 3.) (> (* skoXC1 (* skoXC1 (/ (- 1.) 2.))) (- 3.)) (> skoXC1 0.) (> (/ 7. 8.) skoXC1) (<= (* skoXC1 (+ (- 1.) (* skoXC1 (* skoXC1 (/ 1. 3.))))) 0.) (<= (* skoXC1 (* skoXC1 (/ (- 1.) 6.))) 1.) (<= (* skoXC1 (* skoXC1 (+ (/ (- 1.) 2.) (* skoXC1 (* skoXC1 (/ (- 1.) 6.)))))) 0.) (<= (* skoXC1 skoXC1) 2.) (<= (* skoXC1 (* skoXC1 (* skoXC1 (* skoXC1 (/ (- 2.) 3.))))) 0.) (<= (* skoXC1 (+ (- 1.) (* skoXC1 (* skoXC1 (/ (- 1.) 6.))))) 0.) (<= (* skoXC1 (* skoXC1 (/ 1. 3.))) 1.) (<= (* skoXC1 (* skoXC1 (+ 256. (* skoXC1 (* skoXC1 (+ (- 160.) (* skoXC1 (* skoXC1 (+ 32. (* skoXC1 (* skoXC1 (- 1.)))))))))))) 128.) (<= (* skoXC1 (* skoXC1 (* skoXC1 (* skoXC1 (+ (/ (- 80.) 3.) (* skoXC1 (* skoXC1 (+ (/ 128. 3.) (* skoXC1 (* skoXC1 (+ (/ (- 55.) 3.) (* skoXC1 (* skoXC1 (/ 5. 3.)))))))))))))) 0.) (<= (* skoXC1 (+ (- 1.) (* skoXC1 (* skoXC1 (+ (/ 1. 3.) (* skoXC1 (* skoXC1 (+ (/ 3. 20.) (* skoXC1 (* skoXC1 (/ 5. 56.))))))))))) 0.) (<= (* skoXC1 (* skoXC1 (+ (/ (- 1.) 6.) (* skoXC1 (* skoXC1 (+ (/ (- 3.) 40.) (* skoXC1 (* skoXC1 (/ (- 5.) 112.))))))))) 1.) (<= (* skoXC1 (* skoXC1 (+ (/ (- 1.) 2.) (* skoXC1 (* skoXC1 (+ (/ 7. 120.) (* skoXC1 (* skoXC1 (+ (/ 33. 560.) (* skoXC1 (* skoXC1 (/ (- 5.) 112.)))))))))))) 0.) (<= (* skoXC1 (* skoXC1 (* skoXC1 (* skoXC1 (+ (/ (- 13.) 60.) (* skoXC1 (* skoXC1 (+ (/ (- 9.) 280.) (* skoXC1 (* skoXC1 (/ (- 5.) 28.))))))))))) 0.) (<= (* skoXC1 (* skoXC1 (* skoXC1 (* skoXC1 (+ (/ (- 17.) 120.) (* skoXC1 (* skoXC1 (+ (/ (- 27.) 280.) (* skoXC1 (* skoXC1 (/ 5. 224.))))))))))) 0.) (<= (* skoXC1 (* skoXC1 (+ (/ 1. 3.) (* skoXC1 (* skoXC1 (+ (/ 3. 20.) (* skoXC1 (* skoXC1 (/ 5. 56.))))))))) 1.) (<= (* skoXC1 (* skoXC1 (* skoXC1 (* skoXC1 (+ (/ 32. 15.) (* skoXC1 (* skoXC1 (+ (/ (- 272.) 105.) (* skoXC1 (* skoXC1 (+ (/ (- 1163.) 105.) (* skoXC1 (* skoXC1 (+ (/ 1753. 105.) (* skoXC1 (* skoXC1 (+ (/ (- 169.) 28.) (* skoXC1 (* skoXC1 (/ 25. 56.)))))))))))))))))))) 0.) (> (* skoXC1 (* skoXC1 (+ (/ 1. 6.) (* skoXC1 (* skoXC1 (+ (/ 3. 40.) (* skoXC1 (* skoXC1 (/ 5. 112.))))))))) (- 1.))) (succedent (> (* skoXC1 (+ (- 1.) (* skoXC1 (* skoXC1 (+ (/ (- 1.) 6.) (* skoXC1 (* skoXC1 (+ (/ (- 3.) 40.) (* skoXC1 (* skoXC1 (/ (- 5.) 112.))))))))))) 0.)))
-----[end problem]-----

-----[begin problem]-----
% In Mathematica format:
Timing[Resolve[Exists[{skoXC1}, And[skoXC1*skoXC1*((1/3)+skoXC1*skoXC1*((3/20)+skoXC1*skoXC1*((5/56)+skoXC1*skoXC1*((35/576)+skoXC1*skoXC1*(63/1408)))))<=1,skoXC1*skoXC1*skoXC1*skoXC1*((-13/60)+skoXC1*skoXC1*((-9/280)+skoXC1*skoXC1*((5/1344)+skoXC1*skoXC1*((161/12672)+skoXC1*skoXC1*(-63/704)))))<=0,skoXC1*skoXC1*((-1/2)+skoXC1*skoXC1*((7/120)+skoXC1*skoXC1*((33/560)+skoXC1*skoXC1*((125/2688)+skoXC1*skoXC1*((931/25344)+skoXC1*skoXC1*(-63/2816))))))<=0,skoXC1*skoXC1*((-1/6)+skoXC1*skoXC1*((-3/40)+skoXC1*skoXC1*((-5/112)+skoXC1*skoXC1*((-35/1152)+skoXC1*skoXC1*(-63/2816)))))<=1,skoXC1*(-1+skoXC1*skoXC1*((1/3)+skoXC1*skoXC1*((3/20)+skoXC1*skoXC1*((5/56)+skoXC1*skoXC1*((35/576)+skoXC1*skoXC1*(63/1408))))))<=0,skoXC1*(-1+skoXC1*skoXC1*((-1/6)+skoXC1*skoXC1*(-3/40)))<=0,skoXC1*skoXC1*((1/6)+skoXC1*skoXC1*(3/40))>-1,skoXC1*skoXC1*skoXC1*skoXC1*((32/15)+skoXC1*skoXC1*((-296/15)+skoXC1*skoXC1*((391/15)+skoXC1*skoXC1*((-146/15)+skoXC1*skoXC1*(3/4)))))<=0,skoXC1*skoXC1*((1/3)+skoXC1*skoXC1*(3/20))<=1,skoXC1*skoXC1*skoXC1*skoXC1*((-17/120)+skoXC1*skoXC1*(3/80))<=0,skoXC1*skoXC1*skoXC1*skoXC1*((-13/60)+skoXC1*skoXC1*(-3/10))<=0,skoXC1*skoXC1*((-1/2)+skoXC1*skoXC1*((7/120)+skoXC1*skoXC1*(-3/40)))<=0,skoXC1*skoXC1*((-1/6)+skoXC1*skoXC1*(-3/40))<=1,skoXC1*(-1+skoXC1*skoXC1*((1/3)+skoXC1*skoXC1*(3/20)))<=0,skoXC1*skoXC1>0,skoXC1*skoXC1*(80+skoXC1*skoXC1*(-40+skoXC1*skoXC1*(6+skoXC1*skoXC1*(-1/8))))<=48,skoXC1*skoXC1*(-80+skoXC1*skoXC1*(40+skoXC1*skoXC1*(-6+skoXC1*skoXC1*(1/8))))>-48,skoXC1*skoXC1*(24+skoXC1*skoXC1*(-10+skoXC1*skoXC1))<=16,skoXC1*skoXC1*(1/2)<=3,skoXC1*skoXC1*(-1/2)>-3,skoXC1>0,(7/8)>skoXC1,skoXC1*(-1+skoXC1*skoXC1*(1/3))<=0,skoXC1*skoXC1*(-1/6)<=1,skoXC1*skoXC1*((-1/2)+skoXC1*skoXC1*(-1/6))<=0,skoXC1*skoXC1<=2,skoXC1*skoXC1*skoXC1*skoXC1*(-2/3)<=0,skoXC1*(-1+skoXC1*skoXC1*(-1/6))<=0,skoXC1*skoXC1*(1/3)<=1,skoXC1*skoXC1*(256+skoXC1*skoXC1*(-160+skoXC1*skoXC1*(32+skoXC1*skoXC1*-1)))<=128,skoXC1*skoXC1*skoXC1*skoXC1*((-80/3)+skoXC1*skoXC1*((128/3)+skoXC1*skoXC1*((-55/3)+skoXC1*skoXC1*(5/3))))<=0,skoXC1*(-1+skoXC1*skoXC1*((1/3)+skoXC1*skoXC1*((3/20)+skoXC1*skoXC1*(5/56))))<=0,skoXC1*skoXC1*((-1/6)+skoXC1*skoXC1*((-3/40)+skoXC1*skoXC1*(-5/112)))<=1,skoXC1*skoXC1*((-1/2)+skoXC1*skoXC1*((7/120)+skoXC1*skoXC1*((33/560)+skoXC1*skoXC1*(-5/112))))<=0,skoXC1*skoXC1*skoXC1*skoXC1*((-13/60)+skoXC1*skoXC1*((-9/280)+skoXC1*skoXC1*(-5/28)))<=0,skoXC1*skoXC1*skoXC1*skoXC1*((-17/120)+skoXC1*skoXC1*((-27/280)+skoXC1*skoXC1*(5/224)))<=0,skoXC1*skoXC1*((1/3)+skoXC1*skoXC1*((3/20)+skoXC1*skoXC1*(5/56)))<=1,skoXC1*skoXC1*skoXC1*skoXC1*((32/15)+skoXC1*skoXC1*((-272/105)+skoXC1*skoXC1*((-1163/105)+skoXC1*skoXC1*((1753/105)+skoXC1*skoXC1*((-169/28)+skoXC1*skoXC1*(25/56))))))<=0,skoXC1*skoXC1*((1/6)+skoXC1*skoXC1*((3/40)+skoXC1*skoXC1*(5/112)))>-1,skoXC1*(-1+skoXC1*skoXC1*((-1/6)+skoXC1*skoXC1*((-3/40)+skoXC1*skoXC1*(-5/112))))<=0]], Reals]]

% In QepcadB format:
(E skoXC1) [[(skoXC1 skoXC1 (1/3+(skoXC1 skoXC1 (3/20+(skoXC1 skoXC1 (5/56+(skoXC1 skoXC1 (35/576+(skoXC1 skoXC1 (63/1408))))))))))<=1]/\[[(skoXC1 skoXC1 skoXC1 skoXC1 (-13/60+(skoXC1 skoXC1 (-9/280+(skoXC1 skoXC1 (5/1344+(skoXC1 skoXC1 (161/12672+(skoXC1 skoXC1 (-63/704))))))))))<=0]/\[[(skoXC1 skoXC1 (-1/2+(skoXC1 skoXC1 (7/120+(skoXC1 skoXC1 (33/560+(skoXC1 skoXC1 (125/2688+(skoXC1 skoXC1 (931/25344+(skoXC1 skoXC1 (-63/2816))))))))))))<=0]/\[[(skoXC1 skoXC1 (-1/6+(skoXC1 skoXC1 (-3/40+(skoXC1 skoXC1 (-5/112+(skoXC1 skoXC1 (-35/1152+(skoXC1 skoXC1 (-63/2816))))))))))<=1]/\[[(skoXC1 (-1+(skoXC1 skoXC1 (1/3+(skoXC1 skoXC1 (3/20+(skoXC1 skoXC1 (5/56+(skoXC1 skoXC1 (35/576+(skoXC1 skoXC1 (63/1408))))))))))))<=0]/\[[(skoXC1 (-1+(skoXC1 skoXC1 (-1/6+(skoXC1 skoXC1 (-3/40))))))<=0]/\[[-1<(skoXC1 skoXC1 (1/6+(skoXC1 skoXC1 (3/40))))]/\[[(skoXC1 skoXC1 skoXC1 skoXC1 (32/15+(skoXC1 skoXC1 (-296/15+(skoXC1 skoXC1 (391/15+(skoXC1 skoXC1 (-146/15+(skoXC1 skoXC1 (3/4))))))))))<=0]/\[[(skoXC1 skoXC1 (1/3+(skoXC1 skoXC1 (3/20))))<=1]/\[[(skoXC1 skoXC1 skoXC1 skoXC1 (-17/120+(skoXC1 skoXC1 (3/80))))<=0]/\[[(skoXC1 skoXC1 skoXC1 skoXC1 (-13/60+(skoXC1 skoXC1 (-3/10))))<=0]/\[[(skoXC1 skoXC1 (-1/2+(skoXC1 skoXC1 (7/120+(skoXC1 skoXC1 (-3/40))))))<=0]/\[[(skoXC1 skoXC1 (-1/6+(skoXC1 skoXC1 (-3/40))))<=1]/\[[(skoXC1 (-1+(skoXC1 skoXC1 (1/3+(skoXC1 skoXC1 (3/20))))))<=0]/\[[0<(skoXC1 skoXC1)]/\[[(skoXC1 skoXC1 (80+(skoXC1 skoXC1 (-40+(skoXC1 skoXC1 (6+(skoXC1 skoXC1 (-1/8))))))))<=48]/\[[-48<(skoXC1 skoXC1 (-80+(skoXC1 skoXC1 (40+(skoXC1 skoXC1 (-6+(skoXC1 skoXC1 (1/8))))))))]/\[[(skoXC1 skoXC1 (24+(skoXC1 skoXC1 (-10+(skoXC1 skoXC1)))))<=16]/\[[(skoXC1 skoXC1 (1/2))<=3]/\[[-3<(skoXC1 skoXC1 (-1/2))]/\[[0<skoXC1]/\[[skoXC1<7/8]/\[[(skoXC1 (-1+(skoXC1 skoXC1 (1/3))))<=0]/\[[(skoXC1 skoXC1 (-1/6))<=1]/\[[(skoXC1 skoXC1 (-1/2+(skoXC1 skoXC1 (-1/6))))<=0]/\[[(skoXC1 skoXC1)<=2]/\[[(skoXC1 skoXC1 skoXC1 skoXC1 (-2/3))<=0]/\[[(skoXC1 (-1+(skoXC1 skoXC1 (-1/6))))<=0]/\[[(skoXC1 skoXC1 (1/3))<=1]/\[[(skoXC1 skoXC1 (256+(skoXC1 skoXC1 (-160+(skoXC1 skoXC1 (32+(skoXC1 skoXC1 (-1))))))))<=128]/\[[(skoXC1 skoXC1 skoXC1 skoXC1 (-80/3+(skoXC1 skoXC1 (128/3+(skoXC1 skoXC1 (-55/3+(skoXC1 skoXC1 (5/3))))))))<=0]/\[[(skoXC1 (-1+(skoXC1 skoXC1 (1/3+(skoXC1 skoXC1 (3/20+(skoXC1 skoXC1 (5/56))))))))<=0]/\[[(skoXC1 skoXC1 (-1/6+(skoXC1 skoXC1 (-3/40+(skoXC1 skoXC1 (-5/112))))))<=1]/\[[(skoXC1 skoXC1 (-1/2+(skoXC1 skoXC1 (7/120+(skoXC1 skoXC1 (33/560+(skoXC1 skoXC1 (-5/112))))))))<=0]/\[[(skoXC1 skoXC1 skoXC1 skoXC1 (-13/60+(skoXC1 skoXC1 (-9/280+(skoXC1 skoXC1 (-5/28))))))<=0]/\[[(skoXC1 skoXC1 skoXC1 skoXC1 (-17/120+(skoXC1 skoXC1 (-27/280+(skoXC1 skoXC1 (5/224))))))<=0]/\[[(skoXC1 skoXC1 (1/3+(skoXC1 skoXC1 (3/20+(skoXC1 skoXC1 (5/56))))))<=1]/\[[(skoXC1 skoXC1 skoXC1 skoXC1 (32/15+(skoXC1 skoXC1 (-272/105+(skoXC1 skoXC1 (-1163/105+(skoXC1 skoXC1 (1753/105+(skoXC1 skoXC1 (-169/28+(skoXC1 skoXC1 (25/56))))))))))))<=0]/\[[-1<(skoXC1 skoXC1 (1/6+(skoXC1 skoXC1 (3/40+(skoXC1 skoXC1 (5/112))))))]/\[(skoXC1 (-1+(skoXC1 skoXC1 (-1/6+(skoXC1 skoXC1 (-3/40+(skoXC1 skoXC1 (-5/112))))))))<=0]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]].

% In SMTLib2 format:
(declare-fun skoXC1 () Real) (assert (and (<= (* skoXC1 (* skoXC1 (+ (/ 1. 3.) (* skoXC1 (* skoXC1 (+ (/ 3. 20.) (* skoXC1 (* skoXC1 (+ (/ 5. 56.) (* skoXC1 (* skoXC1 (+ (/ 35. 576.) (* skoXC1 (* skoXC1 (/ 63. 1408.))))))))))))))) 1.) (and (<= (* skoXC1 (* skoXC1 (* skoXC1 (* skoXC1 (+ (/ (- 13.) 60.) (* skoXC1 (* skoXC1 (+ (/ (- 9.) 280.) (* skoXC1 (* skoXC1 (+ (/ 5. 1344.) (* skoXC1 (* skoXC1 (+ (/ 161. 12672.) (* skoXC1 (* skoXC1 (/ (- 63.) 704.))))))))))))))))) 0.) (and (<= (* skoXC1 (* skoXC1 (+ (/ (- 1.) 2.) (* skoXC1 (* skoXC1 (+ (/ 7. 120.) (* skoXC1 (* skoXC1 (+ (/ 33. 560.) (* skoXC1 (* skoXC1 (+ (/ 125. 2688.) (* skoXC1 (* skoXC1 (+ (/ 931. 25344.) (* skoXC1 (* skoXC1 (/ (- 63.) 2816.)))))))))))))))))) 0.) (and (<= (* skoXC1 (* skoXC1 (+ (/ (- 1.) 6.) (* skoXC1 (* skoXC1 (+ (/ (- 3.) 40.) (* skoXC1 (* skoXC1 (+ (/ (- 5.) 112.) (* skoXC1 (* skoXC1 (+ (/ (- 35.) 1152.) (* skoXC1 (* skoXC1 (/ (- 63.) 2816.))))))))))))))) 1.) (and (<= (* skoXC1 (+ (- 1.) (* skoXC1 (* skoXC1 (+ (/ 1. 3.) (* skoXC1 (* skoXC1 (+ (/ 3. 20.) (* skoXC1 (* skoXC1 (+ (/ 5. 56.) (* skoXC1 (* skoXC1 (+ (/ 35. 576.) (* skoXC1 (* skoXC1 (/ 63. 1408.))))))))))))))))) 0.) (and (<= (* skoXC1 (+ (- 1.) (* skoXC1 (* skoXC1 (+ (/ (- 1.) 6.) (* skoXC1 (* skoXC1 (/ (- 3.) 40.)))))))) 0.) (and (> (* skoXC1 (* skoXC1 (+ (/ 1. 6.) (* skoXC1 (* skoXC1 (/ 3. 40.)))))) (- 1.)) (and (<= (* skoXC1 (* skoXC1 (* skoXC1 (* skoXC1 (+ (/ 32. 15.) (* skoXC1 (* skoXC1 (+ (/ (- 296.) 15.) (* skoXC1 (* skoXC1 (+ (/ 391. 15.) (* skoXC1 (* skoXC1 (+ (/ (- 146.) 15.) (* skoXC1 (* skoXC1 (/ 3. 4.))))))))))))))))) 0.) (and (<= (* skoXC1 (* skoXC1 (+ (/ 1. 3.) (* skoXC1 (* skoXC1 (/ 3. 20.)))))) 1.) (and (<= (* skoXC1 (* skoXC1 (* skoXC1 (* skoXC1 (+ (/ (- 17.) 120.) (* skoXC1 (* skoXC1 (/ 3. 80.)))))))) 0.) (and (<= (* skoXC1 (* skoXC1 (* skoXC1 (* skoXC1 (+ (/ (- 13.) 60.) (* skoXC1 (* skoXC1 (/ (- 3.) 10.)))))))) 0.) (and (<= (* skoXC1 (* skoXC1 (+ (/ (- 1.) 2.) (* skoXC1 (* skoXC1 (+ (/ 7. 120.) (* skoXC1 (* skoXC1 (/ (- 3.) 40.))))))))) 0.) (and (<= (* skoXC1 (* skoXC1 (+ (/ (- 1.) 6.) (* skoXC1 (* skoXC1 (/ (- 3.) 40.)))))) 1.) (and (<= (* skoXC1 (+ (- 1.) (* skoXC1 (* skoXC1 (+ (/ 1. 3.) (* skoXC1 (* skoXC1 (/ 3. 20.)))))))) 0.) (and (> (* skoXC1 skoXC1) 0.) (and (<= (* skoXC1 (* skoXC1 (+ 80. (* skoXC1 (* skoXC1 (+ (- 40.) (* skoXC1 (* skoXC1 (+ 6. (* skoXC1 (* skoXC1 (/ (- 1.) 8.)))))))))))) 48.) (and (> (* skoXC1 (* skoXC1 (+ (- 80.) (* skoXC1 (* skoXC1 (+ 40. (* skoXC1 (* skoXC1 (+ (- 6.) (* skoXC1 (* skoXC1 (/ 1. 8.)))))))))))) (- 48.)) (and (<= (* skoXC1 (* skoXC1 (+ 24. (* skoXC1 (* skoXC1 (+ (- 10.) (* skoXC1 skoXC1))))))) 16.) (and (<= (* skoXC1 (* skoXC1 (/ 1. 2.))) 3.) (and (> (* skoXC1 (* skoXC1 (/ (- 1.) 2.))) (- 3.)) (and (> skoXC1 0.) (and (> (/ 7. 8.) skoXC1) (and (<= (* skoXC1 (+ (- 1.) (* skoXC1 (* skoXC1 (/ 1. 3.))))) 0.) (and (<= (* skoXC1 (* skoXC1 (/ (- 1.) 6.))) 1.) (and (<= (* skoXC1 (* skoXC1 (+ (/ (- 1.) 2.) (* skoXC1 (* skoXC1 (/ (- 1.) 6.)))))) 0.) (and (<= (* skoXC1 skoXC1) 2.) (and (<= (* skoXC1 (* skoXC1 (* skoXC1 (* skoXC1 (/ (- 2.) 3.))))) 0.) (and (<= (* skoXC1 (+ (- 1.) (* skoXC1 (* skoXC1 (/ (- 1.) 6.))))) 0.) (and (<= (* skoXC1 (* skoXC1 (/ 1. 3.))) 1.) (and (<= (* skoXC1 (* skoXC1 (+ 256. (* skoXC1 (* skoXC1 (+ (- 160.) (* skoXC1 (* skoXC1 (+ 32. (* skoXC1 (* skoXC1 (- 1.)))))))))))) 128.) (and (<= (* skoXC1 (* skoXC1 (* skoXC1 (* skoXC1 (+ (/ (- 80.) 3.) (* skoXC1 (* skoXC1 (+ (/ 128. 3.) (* skoXC1 (* skoXC1 (+ (/ (- 55.) 3.) (* skoXC1 (* skoXC1 (/ 5. 3.)))))))))))))) 0.) (and (<= (* skoXC1 (+ (- 1.) (* skoXC1 (* skoXC1 (+ (/ 1. 3.) (* skoXC1 (* skoXC1 (+ (/ 3. 20.) (* skoXC1 (* skoXC1 (/ 5. 56.))))))))))) 0.) (and (<= (* skoXC1 (* skoXC1 (+ (/ (- 1.) 6.) (* skoXC1 (* skoXC1 (+ (/ (- 3.) 40.) (* skoXC1 (* skoXC1 (/ (- 5.) 112.))))))))) 1.) (and (<= (* skoXC1 (* skoXC1 (+ (/ (- 1.) 2.) (* skoXC1 (* skoXC1 (+ (/ 7. 120.) (* skoXC1 (* skoXC1 (+ (/ 33. 560.) (* skoXC1 (* skoXC1 (/ (- 5.) 112.)))))))))))) 0.) (and (<= (* skoXC1 (* skoXC1 (* skoXC1 (* skoXC1 (+ (/ (- 13.) 60.) (* skoXC1 (* skoXC1 (+ (/ (- 9.) 280.) (* skoXC1 (* skoXC1 (/ (- 5.) 28.))))))))))) 0.) (and (<= (* skoXC1 (* skoXC1 (* skoXC1 (* skoXC1 (+ (/ (- 17.) 120.) (* skoXC1 (* skoXC1 (+ (/ (- 27.) 280.) (* skoXC1 (* skoXC1 (/ 5. 224.))))))))))) 0.) (and (<= (* skoXC1 (* skoXC1 (+ (/ 1. 3.) (* skoXC1 (* skoXC1 (+ (/ 3. 20.) (* skoXC1 (* skoXC1 (/ 5. 56.))))))))) 1.) (and (<= (* skoXC1 (* skoXC1 (* skoXC1 (* skoXC1 (+ (/ 32. 15.) (* skoXC1 (* skoXC1 (+ (/ (- 272.) 105.) (* skoXC1 (* skoXC1 (+ (/ (- 1163.) 105.) (* skoXC1 (* skoXC1 (+ (/ 1753. 105.) (* skoXC1 (* skoXC1 (+ (/ (- 169.) 28.) (* skoXC1 (* skoXC1 (/ 25. 56.)))))))))))))))))))) 0.) (and (> (* skoXC1 (* skoXC1 (+ (/ 1. 6.) (* skoXC1 (* skoXC1 (+ (/ 3. 40.) (* skoXC1 (* skoXC1 (/ 5. 112.))))))))) (- 1.)) (<= (* skoXC1 (+ (- 1.) (* skoXC1 (* skoXC1 (+ (/ (- 1.) 6.) (* skoXC1 (* skoXC1 (+ (/ (- 3.) 40.) (* skoXC1 (* skoXC1 (/ (- 5.) 112.))))))))))) 0.)))))))))))))))))))))))))))))))))))))))))

% In GRF format:
(sequent " MetiTarski formula " (antecedent (<= (* skoXC1 (* skoXC1 (+ (/ 1. 3.) (* skoXC1 (* skoXC1 (+ (/ 3. 20.) (* skoXC1 (* skoXC1 (+ (/ 5. 56.) (* skoXC1 (* skoXC1 (+ (/ 35. 576.) (* skoXC1 (* skoXC1 (/ 63. 1408.))))))))))))))) 1.) (<= (* skoXC1 (* skoXC1 (* skoXC1 (* skoXC1 (+ (/ (- 13.) 60.) (* skoXC1 (* skoXC1 (+ (/ (- 9.) 280.) (* skoXC1 (* skoXC1 (+ (/ 5. 1344.) (* skoXC1 (* skoXC1 (+ (/ 161. 12672.) (* skoXC1 (* skoXC1 (/ (- 63.) 704.))))))))))))))))) 0.) (<= (* skoXC1 (* skoXC1 (+ (/ (- 1.) 2.) (* skoXC1 (* skoXC1 (+ (/ 7. 120.) (* skoXC1 (* skoXC1 (+ (/ 33. 560.) (* skoXC1 (* skoXC1 (+ (/ 125. 2688.) (* skoXC1 (* skoXC1 (+ (/ 931. 25344.) (* skoXC1 (* skoXC1 (/ (- 63.) 2816.)))))))))))))))))) 0.) (<= (* skoXC1 (* skoXC1 (+ (/ (- 1.) 6.) (* skoXC1 (* skoXC1 (+ (/ (- 3.) 40.) (* skoXC1 (* skoXC1 (+ (/ (- 5.) 112.) (* skoXC1 (* skoXC1 (+ (/ (- 35.) 1152.) (* skoXC1 (* skoXC1 (/ (- 63.) 2816.))))))))))))))) 1.) (<= (* skoXC1 (+ (- 1.) (* skoXC1 (* skoXC1 (+ (/ 1. 3.) (* skoXC1 (* skoXC1 (+ (/ 3. 20.) (* skoXC1 (* skoXC1 (+ (/ 5. 56.) (* skoXC1 (* skoXC1 (+ (/ 35. 576.) (* skoXC1 (* skoXC1 (/ 63. 1408.))))))))))))))))) 0.) (<= (* skoXC1 (+ (- 1.) (* skoXC1 (* skoXC1 (+ (/ (- 1.) 6.) (* skoXC1 (* skoXC1 (/ (- 3.) 40.)))))))) 0.) (> (* skoXC1 (* skoXC1 (+ (/ 1. 6.) (* skoXC1 (* skoXC1 (/ 3. 40.)))))) (- 1.)) (<= (* skoXC1 (* skoXC1 (* skoXC1 (* skoXC1 (+ (/ 32. 15.) (* skoXC1 (* skoXC1 (+ (/ (- 296.) 15.) (* skoXC1 (* skoXC1 (+ (/ 391. 15.) (* skoXC1 (* skoXC1 (+ (/ (- 146.) 15.) (* skoXC1 (* skoXC1 (/ 3. 4.))))))))))))))))) 0.) (<= (* skoXC1 (* skoXC1 (+ (/ 1. 3.) (* skoXC1 (* skoXC1 (/ 3. 20.)))))) 1.) (<= (* skoXC1 (* skoXC1 (* skoXC1 (* skoXC1 (+ (/ (- 17.) 120.) (* skoXC1 (* skoXC1 (/ 3. 80.)))))))) 0.) (<= (* skoXC1 (* skoXC1 (* skoXC1 (* skoXC1 (+ (/ (- 13.) 60.) (* skoXC1 (* skoXC1 (/ (- 3.) 10.)))))))) 0.) (<= (* skoXC1 (* skoXC1 (+ (/ (- 1.) 2.) (* skoXC1 (* skoXC1 (+ (/ 7. 120.) (* skoXC1 (* skoXC1 (/ (- 3.) 40.))))))))) 0.) (<= (* skoXC1 (* skoXC1 (+ (/ (- 1.) 6.) (* skoXC1 (* skoXC1 (/ (- 3.) 40.)))))) 1.) (<= (* skoXC1 (+ (- 1.) (* skoXC1 (* skoXC1 (+ (/ 1. 3.) (* skoXC1 (* skoXC1 (/ 3. 20.)))))))) 0.) (> (* skoXC1 skoXC1) 0.) (<= (* skoXC1 (* skoXC1 (+ 80. (* skoXC1 (* skoXC1 (+ (- 40.) (* skoXC1 (* skoXC1 (+ 6. (* skoXC1 (* skoXC1 (/ (- 1.) 8.)))))))))))) 48.) (> (* skoXC1 (* skoXC1 (+ (- 80.) (* skoXC1 (* skoXC1 (+ 40. (* skoXC1 (* skoXC1 (+ (- 6.) (* skoXC1 (* skoXC1 (/ 1. 8.)))))))))))) (- 48.)) (<= (* skoXC1 (* skoXC1 (+ 24. (* skoXC1 (* skoXC1 (+ (- 10.) (* skoXC1 skoXC1))))))) 16.) (<= (* skoXC1 (* skoXC1 (/ 1. 2.))) 3.) (> (* skoXC1 (* skoXC1 (/ (- 1.) 2.))) (- 3.)) (> skoXC1 0.) (> (/ 7. 8.) skoXC1) (<= (* skoXC1 (+ (- 1.) (* skoXC1 (* skoXC1 (/ 1. 3.))))) 0.) (<= (* skoXC1 (* skoXC1 (/ (- 1.) 6.))) 1.) (<= (* skoXC1 (* skoXC1 (+ (/ (- 1.) 2.) (* skoXC1 (* skoXC1 (/ (- 1.) 6.)))))) 0.) (<= (* skoXC1 skoXC1) 2.) (<= (* skoXC1 (* skoXC1 (* skoXC1 (* skoXC1 (/ (- 2.) 3.))))) 0.) (<= (* skoXC1 (+ (- 1.) (* skoXC1 (* skoXC1 (/ (- 1.) 6.))))) 0.) (<= (* skoXC1 (* skoXC1 (/ 1. 3.))) 1.) (<= (* skoXC1 (* skoXC1 (+ 256. (* skoXC1 (* skoXC1 (+ (- 160.) (* skoXC1 (* skoXC1 (+ 32. (* skoXC1 (* skoXC1 (- 1.)))))))))))) 128.) (<= (* skoXC1 (* skoXC1 (* skoXC1 (* skoXC1 (+ (/ (- 80.) 3.) (* skoXC1 (* skoXC1 (+ (/ 128. 3.) (* skoXC1 (* skoXC1 (+ (/ (- 55.) 3.) (* skoXC1 (* skoXC1 (/ 5. 3.)))))))))))))) 0.) (<= (* skoXC1 (+ (- 1.) (* skoXC1 (* skoXC1 (+ (/ 1. 3.) (* skoXC1 (* skoXC1 (+ (/ 3. 20.) (* skoXC1 (* skoXC1 (/ 5. 56.))))))))))) 0.) (<= (* skoXC1 (* skoXC1 (+ (/ (- 1.) 6.) (* skoXC1 (* skoXC1 (+ (/ (- 3.) 40.) (* skoXC1 (* skoXC1 (/ (- 5.) 112.))))))))) 1.) (<= (* skoXC1 (* skoXC1 (+ (/ (- 1.) 2.) (* skoXC1 (* skoXC1 (+ (/ 7. 120.) (* skoXC1 (* skoXC1 (+ (/ 33. 560.) (* skoXC1 (* skoXC1 (/ (- 5.) 112.)))))))))))) 0.) (<= (* skoXC1 (* skoXC1 (* skoXC1 (* skoXC1 (+ (/ (- 13.) 60.) (* skoXC1 (* skoXC1 (+ (/ (- 9.) 280.) (* skoXC1 (* skoXC1 (/ (- 5.) 28.))))))))))) 0.) (<= (* skoXC1 (* skoXC1 (* skoXC1 (* skoXC1 (+ (/ (- 17.) 120.) (* skoXC1 (* skoXC1 (+ (/ (- 27.) 280.) (* skoXC1 (* skoXC1 (/ 5. 224.))))))))))) 0.) (<= (* skoXC1 (* skoXC1 (+ (/ 1. 3.) (* skoXC1 (* skoXC1 (+ (/ 3. 20.) (* skoXC1 (* skoXC1 (/ 5. 56.))))))))) 1.) (<= (* skoXC1 (* skoXC1 (* skoXC1 (* skoXC1 (+ (/ 32. 15.) (* skoXC1 (* skoXC1 (+ (/ (- 272.) 105.) (* skoXC1 (* skoXC1 (+ (/ (- 1163.) 105.) (* skoXC1 (* skoXC1 (+ (/ 1753. 105.) (* skoXC1 (* skoXC1 (+ (/ (- 169.) 28.) (* skoXC1 (* skoXC1 (/ 25. 56.)))))))))))))))))))) 0.) (> (* skoXC1 (* skoXC1 (+ (/ 1. 6.) (* skoXC1 (* skoXC1 (+ (/ 3. 40.) (* skoXC1 (* skoXC1 (/ 5. 112.))))))))) (- 1.))) (succedent (> (* skoXC1 (+ (- 1.) (* skoXC1 (* skoXC1 (+ (/ (- 1.) 6.) (* skoXC1 (* skoXC1 (+ (/ (- 3.) 40.) (* skoXC1 (* skoXC1 (/ (- 5.) 112.))))))))))) 0.)))
-----[end problem]-----

-----[begin problem]-----
% In Mathematica format:
Timing[Resolve[Exists[{skoXC1}, And[skoXC1*skoXC1*((1/3)+skoXC1*skoXC1*((3/20)+skoXC1*skoXC1*((5/56)+skoXC1*skoXC1*((35/576)+skoXC1*skoXC1*(63/1408)))))<=1,skoXC1*skoXC1*skoXC1*skoXC1*((-13/60)+skoXC1*skoXC1*((-9/280)+skoXC1*skoXC1*((5/1344)+skoXC1*skoXC1*((161/12672)+skoXC1*skoXC1*(-63/704)))))<=0,skoXC1*skoXC1*((-1/2)+skoXC1*skoXC1*((7/120)+skoXC1*skoXC1*((33/560)+skoXC1*skoXC1*((125/2688)+skoXC1*skoXC1*((931/25344)+skoXC1*skoXC1*(-63/2816))))))<=0,skoXC1*skoXC1*((-1/6)+skoXC1*skoXC1*((-3/40)+skoXC1*skoXC1*((-5/112)+skoXC1*skoXC1*((-35/1152)+skoXC1*skoXC1*(-63/2816)))))<=1,skoXC1*(-1+skoXC1*skoXC1*((1/3)+skoXC1*skoXC1*((3/20)+skoXC1*skoXC1*((5/56)+skoXC1*skoXC1*((35/576)+skoXC1*skoXC1*(63/1408))))))<=0,skoXC1*(-1+skoXC1*skoXC1*((-1/6)+skoXC1*skoXC1*(-3/40)))<=0,skoXC1*skoXC1*((1/6)+skoXC1*skoXC1*(3/40))>-1,skoXC1*skoXC1*skoXC1*skoXC1*((32/15)+skoXC1*skoXC1*((-296/15)+skoXC1*skoXC1*((391/15)+skoXC1*skoXC1*((-146/15)+skoXC1*skoXC1*(3/4)))))<=0,skoXC1*skoXC1*((1/3)+skoXC1*skoXC1*(3/20))<=1,skoXC1*skoXC1*skoXC1*skoXC1*((-17/120)+skoXC1*skoXC1*(3/80))<=0,skoXC1*skoXC1*skoXC1*skoXC1*((-13/60)+skoXC1*skoXC1*(-3/10))<=0,skoXC1*skoXC1*((-1/2)+skoXC1*skoXC1*((7/120)+skoXC1*skoXC1*(-3/40)))<=0,skoXC1*skoXC1*((-1/6)+skoXC1*skoXC1*(-3/40))<=1,skoXC1*(-1+skoXC1*skoXC1*((1/3)+skoXC1*skoXC1*(3/20)))<=0,skoXC1*skoXC1>0,skoXC1*skoXC1*(80+skoXC1*skoXC1*(-40+skoXC1*skoXC1*(6+skoXC1*skoXC1*(-1/8))))<=48,skoXC1*skoXC1*(-80+skoXC1*skoXC1*(40+skoXC1*skoXC1*(-6+skoXC1*skoXC1*(1/8))))>-48,skoXC1*skoXC1*(24+skoXC1*skoXC1*(-10+skoXC1*skoXC1))<=16,skoXC1*skoXC1*(1/2)<=3,skoXC1*skoXC1*(-1/2)>-3,skoXC1>0,(7/8)>skoXC1,skoXC1*(-1+skoXC1*skoXC1*(1/3))<=0,skoXC1*skoXC1*(-1/6)<=1,skoXC1*skoXC1*((-1/2)+skoXC1*skoXC1*(-1/6))<=0,skoXC1*skoXC1<=2,skoXC1*skoXC1*skoXC1*skoXC1*(-2/3)<=0,skoXC1*(-1+skoXC1*skoXC1*(-1/6))<=0,skoXC1*skoXC1*(1/3)<=1,skoXC1*skoXC1*(256+skoXC1*skoXC1*(-160+skoXC1*skoXC1*(32+skoXC1*skoXC1*-1)))<=128,skoXC1*skoXC1*skoXC1*skoXC1*((-80/3)+skoXC1*skoXC1*((128/3)+skoXC1*skoXC1*((-55/3)+skoXC1*skoXC1*(5/3))))<=0,skoXC1*(-1+skoXC1*skoXC1*((1/3)+skoXC1*skoXC1*((3/20)+skoXC1*skoXC1*(5/56))))<=0,skoXC1*skoXC1*((-1/6)+skoXC1*skoXC1*((-3/40)+skoXC1*skoXC1*(-5/112)))<=1,skoXC1*skoXC1*((-1/2)+skoXC1*skoXC1*((7/120)+skoXC1*skoXC1*((33/560)+skoXC1*skoXC1*(-5/112))))<=0,skoXC1*skoXC1*skoXC1*skoXC1*((-13/60)+skoXC1*skoXC1*((-9/280)+skoXC1*skoXC1*(-5/28)))<=0,skoXC1*skoXC1*skoXC1*skoXC1*((-17/120)+skoXC1*skoXC1*((-27/280)+skoXC1*skoXC1*(5/224)))<=0,skoXC1*skoXC1*((1/3)+skoXC1*skoXC1*((3/20)+skoXC1*skoXC1*(5/56)))<=1,skoXC1*skoXC1*skoXC1*skoXC1*((32/15)+skoXC1*skoXC1*((-272/105)+skoXC1*skoXC1*((-1163/105)+skoXC1*skoXC1*((1753/105)+skoXC1*skoXC1*((-169/28)+skoXC1*skoXC1*(25/56))))))<=0,skoXC1*skoXC1*((1/6)+skoXC1*skoXC1*((3/40)+skoXC1*skoXC1*(5/112)))>-1,skoXC1*(-1+skoXC1*skoXC1*((-1/6)+skoXC1*skoXC1*((-3/40)+skoXC1*skoXC1*(-5/112))))<=0]], Reals]]

% In QepcadB format:
(E skoXC1) [[(skoXC1 skoXC1 (1/3+(skoXC1 skoXC1 (3/20+(skoXC1 skoXC1 (5/56+(skoXC1 skoXC1 (35/576+(skoXC1 skoXC1 (63/1408))))))))))<=1]/\[[(skoXC1 skoXC1 skoXC1 skoXC1 (-13/60+(skoXC1 skoXC1 (-9/280+(skoXC1 skoXC1 (5/1344+(skoXC1 skoXC1 (161/12672+(skoXC1 skoXC1 (-63/704))))))))))<=0]/\[[(skoXC1 skoXC1 (-1/2+(skoXC1 skoXC1 (7/120+(skoXC1 skoXC1 (33/560+(skoXC1 skoXC1 (125/2688+(skoXC1 skoXC1 (931/25344+(skoXC1 skoXC1 (-63/2816))))))))))))<=0]/\[[(skoXC1 skoXC1 (-1/6+(skoXC1 skoXC1 (-3/40+(skoXC1 skoXC1 (-5/112+(skoXC1 skoXC1 (-35/1152+(skoXC1 skoXC1 (-63/2816))))))))))<=1]/\[[(skoXC1 (-1+(skoXC1 skoXC1 (1/3+(skoXC1 skoXC1 (3/20+(skoXC1 skoXC1 (5/56+(skoXC1 skoXC1 (35/576+(skoXC1 skoXC1 (63/1408))))))))))))<=0]/\[[(skoXC1 (-1+(skoXC1 skoXC1 (-1/6+(skoXC1 skoXC1 (-3/40))))))<=0]/\[[-1<(skoXC1 skoXC1 (1/6+(skoXC1 skoXC1 (3/40))))]/\[[(skoXC1 skoXC1 skoXC1 skoXC1 (32/15+(skoXC1 skoXC1 (-296/15+(skoXC1 skoXC1 (391/15+(skoXC1 skoXC1 (-146/15+(skoXC1 skoXC1 (3/4))))))))))<=0]/\[[(skoXC1 skoXC1 (1/3+(skoXC1 skoXC1 (3/20))))<=1]/\[[(skoXC1 skoXC1 skoXC1 skoXC1 (-17/120+(skoXC1 skoXC1 (3/80))))<=0]/\[[(skoXC1 skoXC1 skoXC1 skoXC1 (-13/60+(skoXC1 skoXC1 (-3/10))))<=0]/\[[(skoXC1 skoXC1 (-1/2+(skoXC1 skoXC1 (7/120+(skoXC1 skoXC1 (-3/40))))))<=0]/\[[(skoXC1 skoXC1 (-1/6+(skoXC1 skoXC1 (-3/40))))<=1]/\[[(skoXC1 (-1+(skoXC1 skoXC1 (1/3+(skoXC1 skoXC1 (3/20))))))<=0]/\[[0<(skoXC1 skoXC1)]/\[[(skoXC1 skoXC1 (80+(skoXC1 skoXC1 (-40+(skoXC1 skoXC1 (6+(skoXC1 skoXC1 (-1/8))))))))<=48]/\[[-48<(skoXC1 skoXC1 (-80+(skoXC1 skoXC1 (40+(skoXC1 skoXC1 (-6+(skoXC1 skoXC1 (1/8))))))))]/\[[(skoXC1 skoXC1 (24+(skoXC1 skoXC1 (-10+(skoXC1 skoXC1)))))<=16]/\[[(skoXC1 skoXC1 (1/2))<=3]/\[[-3<(skoXC1 skoXC1 (-1/2))]/\[[0<skoXC1]/\[[skoXC1<7/8]/\[[(skoXC1 (-1+(skoXC1 skoXC1 (1/3))))<=0]/\[[(skoXC1 skoXC1 (-1/6))<=1]/\[[(skoXC1 skoXC1 (-1/2+(skoXC1 skoXC1 (-1/6))))<=0]/\[[(skoXC1 skoXC1)<=2]/\[[(skoXC1 skoXC1 skoXC1 skoXC1 (-2/3))<=0]/\[[(skoXC1 (-1+(skoXC1 skoXC1 (-1/6))))<=0]/\[[(skoXC1 skoXC1 (1/3))<=1]/\[[(skoXC1 skoXC1 (256+(skoXC1 skoXC1 (-160+(skoXC1 skoXC1 (32+(skoXC1 skoXC1 (-1))))))))<=128]/\[[(skoXC1 skoXC1 skoXC1 skoXC1 (-80/3+(skoXC1 skoXC1 (128/3+(skoXC1 skoXC1 (-55/3+(skoXC1 skoXC1 (5/3))))))))<=0]/\[[(skoXC1 (-1+(skoXC1 skoXC1 (1/3+(skoXC1 skoXC1 (3/20+(skoXC1 skoXC1 (5/56))))))))<=0]/\[[(skoXC1 skoXC1 (-1/6+(skoXC1 skoXC1 (-3/40+(skoXC1 skoXC1 (-5/112))))))<=1]/\[[(skoXC1 skoXC1 (-1/2+(skoXC1 skoXC1 (7/120+(skoXC1 skoXC1 (33/560+(skoXC1 skoXC1 (-5/112))))))))<=0]/\[[(skoXC1 skoXC1 skoXC1 skoXC1 (-13/60+(skoXC1 skoXC1 (-9/280+(skoXC1 skoXC1 (-5/28))))))<=0]/\[[(skoXC1 skoXC1 skoXC1 skoXC1 (-17/120+(skoXC1 skoXC1 (-27/280+(skoXC1 skoXC1 (5/224))))))<=0]/\[[(skoXC1 skoXC1 (1/3+(skoXC1 skoXC1 (3/20+(skoXC1 skoXC1 (5/56))))))<=1]/\[[(skoXC1 skoXC1 skoXC1 skoXC1 (32/15+(skoXC1 skoXC1 (-272/105+(skoXC1 skoXC1 (-1163/105+(skoXC1 skoXC1 (1753/105+(skoXC1 skoXC1 (-169/28+(skoXC1 skoXC1 (25/56))))))))))))<=0]/\[[-1<(skoXC1 skoXC1 (1/6+(skoXC1 skoXC1 (3/40+(skoXC1 skoXC1 (5/112))))))]/\[(skoXC1 (-1+(skoXC1 skoXC1 (-1/6+(skoXC1 skoXC1 (-3/40+(skoXC1 skoXC1 (-5/112))))))))<=0]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]].

% In SMTLib2 format:
(declare-fun skoXC1 () Real) (assert (and (<= (* skoXC1 (* skoXC1 (+ (/ 1. 3.) (* skoXC1 (* skoXC1 (+ (/ 3. 20.) (* skoXC1 (* skoXC1 (+ (/ 5. 56.) (* skoXC1 (* skoXC1 (+ (/ 35. 576.) (* skoXC1 (* skoXC1 (/ 63. 1408.))))))))))))))) 1.) (and (<= (* skoXC1 (* skoXC1 (* skoXC1 (* skoXC1 (+ (/ (- 13.) 60.) (* skoXC1 (* skoXC1 (+ (/ (- 9.) 280.) (* skoXC1 (* skoXC1 (+ (/ 5. 1344.) (* skoXC1 (* skoXC1 (+ (/ 161. 12672.) (* skoXC1 (* skoXC1 (/ (- 63.) 704.))))))))))))))))) 0.) (and (<= (* skoXC1 (* skoXC1 (+ (/ (- 1.) 2.) (* skoXC1 (* skoXC1 (+ (/ 7. 120.) (* skoXC1 (* skoXC1 (+ (/ 33. 560.) (* skoXC1 (* skoXC1 (+ (/ 125. 2688.) (* skoXC1 (* skoXC1 (+ (/ 931. 25344.) (* skoXC1 (* skoXC1 (/ (- 63.) 2816.)))))))))))))))))) 0.) (and (<= (* skoXC1 (* skoXC1 (+ (/ (- 1.) 6.) (* skoXC1 (* skoXC1 (+ (/ (- 3.) 40.) (* skoXC1 (* skoXC1 (+ (/ (- 5.) 112.) (* skoXC1 (* skoXC1 (+ (/ (- 35.) 1152.) (* skoXC1 (* skoXC1 (/ (- 63.) 2816.))))))))))))))) 1.) (and (<= (* skoXC1 (+ (- 1.) (* skoXC1 (* skoXC1 (+ (/ 1. 3.) (* skoXC1 (* skoXC1 (+ (/ 3. 20.) (* skoXC1 (* skoXC1 (+ (/ 5. 56.) (* skoXC1 (* skoXC1 (+ (/ 35. 576.) (* skoXC1 (* skoXC1 (/ 63. 1408.))))))))))))))))) 0.) (and (<= (* skoXC1 (+ (- 1.) (* skoXC1 (* skoXC1 (+ (/ (- 1.) 6.) (* skoXC1 (* skoXC1 (/ (- 3.) 40.)))))))) 0.) (and (> (* skoXC1 (* skoXC1 (+ (/ 1. 6.) (* skoXC1 (* skoXC1 (/ 3. 40.)))))) (- 1.)) (and (<= (* skoXC1 (* skoXC1 (* skoXC1 (* skoXC1 (+ (/ 32. 15.) (* skoXC1 (* skoXC1 (+ (/ (- 296.) 15.) (* skoXC1 (* skoXC1 (+ (/ 391. 15.) (* skoXC1 (* skoXC1 (+ (/ (- 146.) 15.) (* skoXC1 (* skoXC1 (/ 3. 4.))))))))))))))))) 0.) (and (<= (* skoXC1 (* skoXC1 (+ (/ 1. 3.) (* skoXC1 (* skoXC1 (/ 3. 20.)))))) 1.) (and (<= (* skoXC1 (* skoXC1 (* skoXC1 (* skoXC1 (+ (/ (- 17.) 120.) (* skoXC1 (* skoXC1 (/ 3. 80.)))))))) 0.) (and (<= (* skoXC1 (* skoXC1 (* skoXC1 (* skoXC1 (+ (/ (- 13.) 60.) (* skoXC1 (* skoXC1 (/ (- 3.) 10.)))))))) 0.) (and (<= (* skoXC1 (* skoXC1 (+ (/ (- 1.) 2.) (* skoXC1 (* skoXC1 (+ (/ 7. 120.) (* skoXC1 (* skoXC1 (/ (- 3.) 40.))))))))) 0.) (and (<= (* skoXC1 (* skoXC1 (+ (/ (- 1.) 6.) (* skoXC1 (* skoXC1 (/ (- 3.) 40.)))))) 1.) (and (<= (* skoXC1 (+ (- 1.) (* skoXC1 (* skoXC1 (+ (/ 1. 3.) (* skoXC1 (* skoXC1 (/ 3. 20.)))))))) 0.) (and (> (* skoXC1 skoXC1) 0.) (and (<= (* skoXC1 (* skoXC1 (+ 80. (* skoXC1 (* skoXC1 (+ (- 40.) (* skoXC1 (* skoXC1 (+ 6. (* skoXC1 (* skoXC1 (/ (- 1.) 8.)))))))))))) 48.) (and (> (* skoXC1 (* skoXC1 (+ (- 80.) (* skoXC1 (* skoXC1 (+ 40. (* skoXC1 (* skoXC1 (+ (- 6.) (* skoXC1 (* skoXC1 (/ 1. 8.)))))))))))) (- 48.)) (and (<= (* skoXC1 (* skoXC1 (+ 24. (* skoXC1 (* skoXC1 (+ (- 10.) (* skoXC1 skoXC1))))))) 16.) (and (<= (* skoXC1 (* skoXC1 (/ 1. 2.))) 3.) (and (> (* skoXC1 (* skoXC1 (/ (- 1.) 2.))) (- 3.)) (and (> skoXC1 0.) (and (> (/ 7. 8.) skoXC1) (and (<= (* skoXC1 (+ (- 1.) (* skoXC1 (* skoXC1 (/ 1. 3.))))) 0.) (and (<= (* skoXC1 (* skoXC1 (/ (- 1.) 6.))) 1.) (and (<= (* skoXC1 (* skoXC1 (+ (/ (- 1.) 2.) (* skoXC1 (* skoXC1 (/ (- 1.) 6.)))))) 0.) (and (<= (* skoXC1 skoXC1) 2.) (and (<= (* skoXC1 (* skoXC1 (* skoXC1 (* skoXC1 (/ (- 2.) 3.))))) 0.) (and (<= (* skoXC1 (+ (- 1.) (* skoXC1 (* skoXC1 (/ (- 1.) 6.))))) 0.) (and (<= (* skoXC1 (* skoXC1 (/ 1. 3.))) 1.) (and (<= (* skoXC1 (* skoXC1 (+ 256. (* skoXC1 (* skoXC1 (+ (- 160.) (* skoXC1 (* skoXC1 (+ 32. (* skoXC1 (* skoXC1 (- 1.)))))))))))) 128.) (and (<= (* skoXC1 (* skoXC1 (* skoXC1 (* skoXC1 (+ (/ (- 80.) 3.) (* skoXC1 (* skoXC1 (+ (/ 128. 3.) (* skoXC1 (* skoXC1 (+ (/ (- 55.) 3.) (* skoXC1 (* skoXC1 (/ 5. 3.)))))))))))))) 0.) (and (<= (* skoXC1 (+ (- 1.) (* skoXC1 (* skoXC1 (+ (/ 1. 3.) (* skoXC1 (* skoXC1 (+ (/ 3. 20.) (* skoXC1 (* skoXC1 (/ 5. 56.))))))))))) 0.) (and (<= (* skoXC1 (* skoXC1 (+ (/ (- 1.) 6.) (* skoXC1 (* skoXC1 (+ (/ (- 3.) 40.) (* skoXC1 (* skoXC1 (/ (- 5.) 112.))))))))) 1.) (and (<= (* skoXC1 (* skoXC1 (+ (/ (- 1.) 2.) (* skoXC1 (* skoXC1 (+ (/ 7. 120.) (* skoXC1 (* skoXC1 (+ (/ 33. 560.) (* skoXC1 (* skoXC1 (/ (- 5.) 112.)))))))))))) 0.) (and (<= (* skoXC1 (* skoXC1 (* skoXC1 (* skoXC1 (+ (/ (- 13.) 60.) (* skoXC1 (* skoXC1 (+ (/ (- 9.) 280.) (* skoXC1 (* skoXC1 (/ (- 5.) 28.))))))))))) 0.) (and (<= (* skoXC1 (* skoXC1 (* skoXC1 (* skoXC1 (+ (/ (- 17.) 120.) (* skoXC1 (* skoXC1 (+ (/ (- 27.) 280.) (* skoXC1 (* skoXC1 (/ 5. 224.))))))))))) 0.) (and (<= (* skoXC1 (* skoXC1 (+ (/ 1. 3.) (* skoXC1 (* skoXC1 (+ (/ 3. 20.) (* skoXC1 (* skoXC1 (/ 5. 56.))))))))) 1.) (and (<= (* skoXC1 (* skoXC1 (* skoXC1 (* skoXC1 (+ (/ 32. 15.) (* skoXC1 (* skoXC1 (+ (/ (- 272.) 105.) (* skoXC1 (* skoXC1 (+ (/ (- 1163.) 105.) (* skoXC1 (* skoXC1 (+ (/ 1753. 105.) (* skoXC1 (* skoXC1 (+ (/ (- 169.) 28.) (* skoXC1 (* skoXC1 (/ 25. 56.)))))))))))))))))))) 0.) (and (> (* skoXC1 (* skoXC1 (+ (/ 1. 6.) (* skoXC1 (* skoXC1 (+ (/ 3. 40.) (* skoXC1 (* skoXC1 (/ 5. 112.))))))))) (- 1.)) (<= (* skoXC1 (+ (- 1.) (* skoXC1 (* skoXC1 (+ (/ (- 1.) 6.) (* skoXC1 (* skoXC1 (+ (/ (- 3.) 40.) (* skoXC1 (* skoXC1 (/ (- 5.) 112.))))))))))) 0.)))))))))))))))))))))))))))))))))))))))))

% In GRF format:
(sequent " MetiTarski formula " (antecedent (<= (* skoXC1 (* skoXC1 (+ (/ 1. 3.) (* skoXC1 (* skoXC1 (+ (/ 3. 20.) (* skoXC1 (* skoXC1 (+ (/ 5. 56.) (* skoXC1 (* skoXC1 (+ (/ 35. 576.) (* skoXC1 (* skoXC1 (/ 63. 1408.))))))))))))))) 1.) (<= (* skoXC1 (* skoXC1 (* skoXC1 (* skoXC1 (+ (/ (- 13.) 60.) (* skoXC1 (* skoXC1 (+ (/ (- 9.) 280.) (* skoXC1 (* skoXC1 (+ (/ 5. 1344.) (* skoXC1 (* skoXC1 (+ (/ 161. 12672.) (* skoXC1 (* skoXC1 (/ (- 63.) 704.))))))))))))))))) 0.) (<= (* skoXC1 (* skoXC1 (+ (/ (- 1.) 2.) (* skoXC1 (* skoXC1 (+ (/ 7. 120.) (* skoXC1 (* skoXC1 (+ (/ 33. 560.) (* skoXC1 (* skoXC1 (+ (/ 125. 2688.) (* skoXC1 (* skoXC1 (+ (/ 931. 25344.) (* skoXC1 (* skoXC1 (/ (- 63.) 2816.)))))))))))))))))) 0.) (<= (* skoXC1 (* skoXC1 (+ (/ (- 1.) 6.) (* skoXC1 (* skoXC1 (+ (/ (- 3.) 40.) (* skoXC1 (* skoXC1 (+ (/ (- 5.) 112.) (* skoXC1 (* skoXC1 (+ (/ (- 35.) 1152.) (* skoXC1 (* skoXC1 (/ (- 63.) 2816.))))))))))))))) 1.) (<= (* skoXC1 (+ (- 1.) (* skoXC1 (* skoXC1 (+ (/ 1. 3.) (* skoXC1 (* skoXC1 (+ (/ 3. 20.) (* skoXC1 (* skoXC1 (+ (/ 5. 56.) (* skoXC1 (* skoXC1 (+ (/ 35. 576.) (* skoXC1 (* skoXC1 (/ 63. 1408.))))))))))))))))) 0.) (<= (* skoXC1 (+ (- 1.) (* skoXC1 (* skoXC1 (+ (/ (- 1.) 6.) (* skoXC1 (* skoXC1 (/ (- 3.) 40.)))))))) 0.) (> (* skoXC1 (* skoXC1 (+ (/ 1. 6.) (* skoXC1 (* skoXC1 (/ 3. 40.)))))) (- 1.)) (<= (* skoXC1 (* skoXC1 (* skoXC1 (* skoXC1 (+ (/ 32. 15.) (* skoXC1 (* skoXC1 (+ (/ (- 296.) 15.) (* skoXC1 (* skoXC1 (+ (/ 391. 15.) (* skoXC1 (* skoXC1 (+ (/ (- 146.) 15.) (* skoXC1 (* skoXC1 (/ 3. 4.))))))))))))))))) 0.) (<= (* skoXC1 (* skoXC1 (+ (/ 1. 3.) (* skoXC1 (* skoXC1 (/ 3. 20.)))))) 1.) (<= (* skoXC1 (* skoXC1 (* skoXC1 (* skoXC1 (+ (/ (- 17.) 120.) (* skoXC1 (* skoXC1 (/ 3. 80.)))))))) 0.) (<= (* skoXC1 (* skoXC1 (* skoXC1 (* skoXC1 (+ (/ (- 13.) 60.) (* skoXC1 (* skoXC1 (/ (- 3.) 10.)))))))) 0.) (<= (* skoXC1 (* skoXC1 (+ (/ (- 1.) 2.) (* skoXC1 (* skoXC1 (+ (/ 7. 120.) (* skoXC1 (* skoXC1 (/ (- 3.) 40.))))))))) 0.) (<= (* skoXC1 (* skoXC1 (+ (/ (- 1.) 6.) (* skoXC1 (* skoXC1 (/ (- 3.) 40.)))))) 1.) (<= (* skoXC1 (+ (- 1.) (* skoXC1 (* skoXC1 (+ (/ 1. 3.) (* skoXC1 (* skoXC1 (/ 3. 20.)))))))) 0.) (> (* skoXC1 skoXC1) 0.) (<= (* skoXC1 (* skoXC1 (+ 80. (* skoXC1 (* skoXC1 (+ (- 40.) (* skoXC1 (* skoXC1 (+ 6. (* skoXC1 (* skoXC1 (/ (- 1.) 8.)))))))))))) 48.) (> (* skoXC1 (* skoXC1 (+ (- 80.) (* skoXC1 (* skoXC1 (+ 40. (* skoXC1 (* skoXC1 (+ (- 6.) (* skoXC1 (* skoXC1 (/ 1. 8.)))))))))))) (- 48.)) (<= (* skoXC1 (* skoXC1 (+ 24. (* skoXC1 (* skoXC1 (+ (- 10.) (* skoXC1 skoXC1))))))) 16.) (<= (* skoXC1 (* skoXC1 (/ 1. 2.))) 3.) (> (* skoXC1 (* skoXC1 (/ (- 1.) 2.))) (- 3.)) (> skoXC1 0.) (> (/ 7. 8.) skoXC1) (<= (* skoXC1 (+ (- 1.) (* skoXC1 (* skoXC1 (/ 1. 3.))))) 0.) (<= (* skoXC1 (* skoXC1 (/ (- 1.) 6.))) 1.) (<= (* skoXC1 (* skoXC1 (+ (/ (- 1.) 2.) (* skoXC1 (* skoXC1 (/ (- 1.) 6.)))))) 0.) (<= (* skoXC1 skoXC1) 2.) (<= (* skoXC1 (* skoXC1 (* skoXC1 (* skoXC1 (/ (- 2.) 3.))))) 0.) (<= (* skoXC1 (+ (- 1.) (* skoXC1 (* skoXC1 (/ (- 1.) 6.))))) 0.) (<= (* skoXC1 (* skoXC1 (/ 1. 3.))) 1.) (<= (* skoXC1 (* skoXC1 (+ 256. (* skoXC1 (* skoXC1 (+ (- 160.) (* skoXC1 (* skoXC1 (+ 32. (* skoXC1 (* skoXC1 (- 1.)))))))))))) 128.) (<= (* skoXC1 (* skoXC1 (* skoXC1 (* skoXC1 (+ (/ (- 80.) 3.) (* skoXC1 (* skoXC1 (+ (/ 128. 3.) (* skoXC1 (* skoXC1 (+ (/ (- 55.) 3.) (* skoXC1 (* skoXC1 (/ 5. 3.)))))))))))))) 0.) (<= (* skoXC1 (+ (- 1.) (* skoXC1 (* skoXC1 (+ (/ 1. 3.) (* skoXC1 (* skoXC1 (+ (/ 3. 20.) (* skoXC1 (* skoXC1 (/ 5. 56.))))))))))) 0.) (<= (* skoXC1 (* skoXC1 (+ (/ (- 1.) 6.) (* skoXC1 (* skoXC1 (+ (/ (- 3.) 40.) (* skoXC1 (* skoXC1 (/ (- 5.) 112.))))))))) 1.) (<= (* skoXC1 (* skoXC1 (+ (/ (- 1.) 2.) (* skoXC1 (* skoXC1 (+ (/ 7. 120.) (* skoXC1 (* skoXC1 (+ (/ 33. 560.) (* skoXC1 (* skoXC1 (/ (- 5.) 112.)))))))))))) 0.) (<= (* skoXC1 (* skoXC1 (* skoXC1 (* skoXC1 (+ (/ (- 13.) 60.) (* skoXC1 (* skoXC1 (+ (/ (- 9.) 280.) (* skoXC1 (* skoXC1 (/ (- 5.) 28.))))))))))) 0.) (<= (* skoXC1 (* skoXC1 (* skoXC1 (* skoXC1 (+ (/ (- 17.) 120.) (* skoXC1 (* skoXC1 (+ (/ (- 27.) 280.) (* skoXC1 (* skoXC1 (/ 5. 224.))))))))))) 0.) (<= (* skoXC1 (* skoXC1 (+ (/ 1. 3.) (* skoXC1 (* skoXC1 (+ (/ 3. 20.) (* skoXC1 (* skoXC1 (/ 5. 56.))))))))) 1.) (<= (* skoXC1 (* skoXC1 (* skoXC1 (* skoXC1 (+ (/ 32. 15.) (* skoXC1 (* skoXC1 (+ (/ (- 272.) 105.) (* skoXC1 (* skoXC1 (+ (/ (- 1163.) 105.) (* skoXC1 (* skoXC1 (+ (/ 1753. 105.) (* skoXC1 (* skoXC1 (+ (/ (- 169.) 28.) (* skoXC1 (* skoXC1 (/ 25. 56.)))))))))))))))))))) 0.) (> (* skoXC1 (* skoXC1 (+ (/ 1. 6.) (* skoXC1 (* skoXC1 (+ (/ 3. 40.) (* skoXC1 (* skoXC1 (/ 5. 112.))))))))) (- 1.))) (succedent (> (* skoXC1 (+ (- 1.) (* skoXC1 (* skoXC1 (+ (/ (- 1.) 6.) (* skoXC1 (* skoXC1 (+ (/ (- 3.) 40.) (* skoXC1 (* skoXC1 (/ (- 5.) 112.))))))))))) 0.)))
-----[end problem]-----

-----[begin problem]-----
% In Mathematica format:
Timing[Resolve[Exists[{skoXC1}, And[skoXC1*(-1+skoXC1*skoXC1*((-1/6)+skoXC1*skoXC1*((-3/40)+skoXC1*skoXC1*((-5/112)+skoXC1*skoXC1*((-35/1152)+skoXC1*skoXC1*(-63/2816))))))<=0,skoXC1*skoXC1<=0,skoXC1*skoXC1*((1/3)+skoXC1*skoXC1*((3/20)+skoXC1*skoXC1*((5/56)+skoXC1*skoXC1*((35/576)+skoXC1*skoXC1*(63/1408)))))<=1,skoXC1*skoXC1*skoXC1*skoXC1*((-13/60)+skoXC1*skoXC1*((-9/280)+skoXC1*skoXC1*((5/1344)+skoXC1*skoXC1*((161/12672)+skoXC1*skoXC1*(-63/704)))))<=0,skoXC1*skoXC1*((-1/2)+skoXC1*skoXC1*((7/120)+skoXC1*skoXC1*((33/560)+skoXC1*skoXC1*((125/2688)+skoXC1*skoXC1*((931/25344)+skoXC1*skoXC1*(-63/2816))))))<=0,skoXC1*skoXC1*((-1/6)+skoXC1*skoXC1*((-3/40)+skoXC1*skoXC1*((-5/112)+skoXC1*skoXC1*((-35/1152)+skoXC1*skoXC1*(-63/2816)))))<=1,skoXC1*(-1+skoXC1*skoXC1*((1/3)+skoXC1*skoXC1*((3/20)+skoXC1*skoXC1*((5/56)+skoXC1*skoXC1*((35/576)+skoXC1*skoXC1*(63/1408))))))<=0,skoXC1*(-1+skoXC1*skoXC1*((-1/6)+skoXC1*skoXC1*(-3/40)))<=0,skoXC1*skoXC1*((1/6)+skoXC1*skoXC1*(3/40))>-1,skoXC1*skoXC1*skoXC1*skoXC1*((32/15)+skoXC1*skoXC1*((-296/15)+skoXC1*skoXC1*((391/15)+skoXC1*skoXC1*((-146/15)+skoXC1*skoXC1*(3/4)))))<=0,skoXC1*skoXC1*((1/3)+skoXC1*skoXC1*(3/20))<=1,skoXC1*skoXC1*skoXC1*skoXC1*((-17/120)+skoXC1*skoXC1*(3/80))<=0,skoXC1*skoXC1*skoXC1*skoXC1*((-13/60)+skoXC1*skoXC1*(-3/10))<=0,skoXC1*skoXC1*((-1/2)+skoXC1*skoXC1*((7/120)+skoXC1*skoXC1*(-3/40)))<=0,skoXC1*skoXC1*((-1/6)+skoXC1*skoXC1*(-3/40))<=1,skoXC1*(-1+skoXC1*skoXC1*((1/3)+skoXC1*skoXC1*(3/20)))<=0,skoXC1*skoXC1>0,skoXC1*skoXC1*(80+skoXC1*skoXC1*(-40+skoXC1*skoXC1*(6+skoXC1*skoXC1*(-1/8))))<=48,skoXC1*skoXC1*(-80+skoXC1*skoXC1*(40+skoXC1*skoXC1*(-6+skoXC1*skoXC1*(1/8))))>-48,skoXC1*skoXC1*(24+skoXC1*skoXC1*(-10+skoXC1*skoXC1))<=16,skoXC1*skoXC1*(1/2)<=3,skoXC1*skoXC1*(-1/2)>-3,skoXC1>0,(7/8)>skoXC1,skoXC1*(-1+skoXC1*skoXC1*(1/3))<=0,skoXC1*skoXC1*(-1/6)<=1,skoXC1*skoXC1*((-1/2)+skoXC1*skoXC1*(-1/6))<=0,skoXC1*skoXC1<=2,skoXC1*skoXC1*skoXC1*skoXC1*(-2/3)<=0,skoXC1*(-1+skoXC1*skoXC1*(-1/6))<=0,skoXC1*skoXC1*(1/3)<=1,skoXC1*skoXC1*(256+skoXC1*skoXC1*(-160+skoXC1*skoXC1*(32+skoXC1*skoXC1*-1)))<=128,skoXC1*skoXC1*skoXC1*skoXC1*((-80/3)+skoXC1*skoXC1*((128/3)+skoXC1*skoXC1*((-55/3)+skoXC1*skoXC1*(5/3))))<=0,skoXC1*(-1+skoXC1*skoXC1*((1/3)+skoXC1*skoXC1*((3/20)+skoXC1*skoXC1*(5/56))))<=0,skoXC1*skoXC1*((-1/6)+skoXC1*skoXC1*((-3/40)+skoXC1*skoXC1*(-5/112)))<=1,skoXC1*skoXC1*((-1/2)+skoXC1*skoXC1*((7/120)+skoXC1*skoXC1*((33/560)+skoXC1*skoXC1*(-5/112))))<=0,skoXC1*skoXC1*skoXC1*skoXC1*((-13/60)+skoXC1*skoXC1*((-9/280)+skoXC1*skoXC1*(-5/28)))<=0,skoXC1*skoXC1*skoXC1*skoXC1*((-17/120)+skoXC1*skoXC1*((-27/280)+skoXC1*skoXC1*(5/224)))<=0,skoXC1*skoXC1*((1/3)+skoXC1*skoXC1*((3/20)+skoXC1*skoXC1*(5/56)))<=1,skoXC1*skoXC1*skoXC1*skoXC1*((32/15)+skoXC1*skoXC1*((-272/105)+skoXC1*skoXC1*((-1163/105)+skoXC1*skoXC1*((1753/105)+skoXC1*skoXC1*((-169/28)+skoXC1*skoXC1*(25/56))))))<=0,skoXC1*skoXC1*((1/6)+skoXC1*skoXC1*((3/40)+skoXC1*skoXC1*(5/112)))>-1,skoXC1*(-1+skoXC1*skoXC1*((-1/6)+skoXC1*skoXC1*((-3/40)+skoXC1*skoXC1*(-5/112))))<=0]], Reals]]

% In QepcadB format:
(E skoXC1) [[(skoXC1 (-1+(skoXC1 skoXC1 (-1/6+(skoXC1 skoXC1 (-3/40+(skoXC1 skoXC1 (-5/112+(skoXC1 skoXC1 (-35/1152+(skoXC1 skoXC1 (-63/2816))))))))))))<=0]/\[[(skoXC1 skoXC1)<=0]/\[[(skoXC1 skoXC1 (1/3+(skoXC1 skoXC1 (3/20+(skoXC1 skoXC1 (5/56+(skoXC1 skoXC1 (35/576+(skoXC1 skoXC1 (63/1408))))))))))<=1]/\[[(skoXC1 skoXC1 skoXC1 skoXC1 (-13/60+(skoXC1 skoXC1 (-9/280+(skoXC1 skoXC1 (5/1344+(skoXC1 skoXC1 (161/12672+(skoXC1 skoXC1 (-63/704))))))))))<=0]/\[[(skoXC1 skoXC1 (-1/2+(skoXC1 skoXC1 (7/120+(skoXC1 skoXC1 (33/560+(skoXC1 skoXC1 (125/2688+(skoXC1 skoXC1 (931/25344+(skoXC1 skoXC1 (-63/2816))))))))))))<=0]/\[[(skoXC1 skoXC1 (-1/6+(skoXC1 skoXC1 (-3/40+(skoXC1 skoXC1 (-5/112+(skoXC1 skoXC1 (-35/1152+(skoXC1 skoXC1 (-63/2816))))))))))<=1]/\[[(skoXC1 (-1+(skoXC1 skoXC1 (1/3+(skoXC1 skoXC1 (3/20+(skoXC1 skoXC1 (5/56+(skoXC1 skoXC1 (35/576+(skoXC1 skoXC1 (63/1408))))))))))))<=0]/\[[(skoXC1 (-1+(skoXC1 skoXC1 (-1/6+(skoXC1 skoXC1 (-3/40))))))<=0]/\[[-1<(skoXC1 skoXC1 (1/6+(skoXC1 skoXC1 (3/40))))]/\[[(skoXC1 skoXC1 skoXC1 skoXC1 (32/15+(skoXC1 skoXC1 (-296/15+(skoXC1 skoXC1 (391/15+(skoXC1 skoXC1 (-146/15+(skoXC1 skoXC1 (3/4))))))))))<=0]/\[[(skoXC1 skoXC1 (1/3+(skoXC1 skoXC1 (3/20))))<=1]/\[[(skoXC1 skoXC1 skoXC1 skoXC1 (-17/120+(skoXC1 skoXC1 (3/80))))<=0]/\[[(skoXC1 skoXC1 skoXC1 skoXC1 (-13/60+(skoXC1 skoXC1 (-3/10))))<=0]/\[[(skoXC1 skoXC1 (-1/2+(skoXC1 skoXC1 (7/120+(skoXC1 skoXC1 (-3/40))))))<=0]/\[[(skoXC1 skoXC1 (-1/6+(skoXC1 skoXC1 (-3/40))))<=1]/\[[(skoXC1 (-1+(skoXC1 skoXC1 (1/3+(skoXC1 skoXC1 (3/20))))))<=0]/\[[0<(skoXC1 skoXC1)]/\[[(skoXC1 skoXC1 (80+(skoXC1 skoXC1 (-40+(skoXC1 skoXC1 (6+(skoXC1 skoXC1 (-1/8))))))))<=48]/\[[-48<(skoXC1 skoXC1 (-80+(skoXC1 skoXC1 (40+(skoXC1 skoXC1 (-6+(skoXC1 skoXC1 (1/8))))))))]/\[[(skoXC1 skoXC1 (24+(skoXC1 skoXC1 (-10+(skoXC1 skoXC1)))))<=16]/\[[(skoXC1 skoXC1 (1/2))<=3]/\[[-3<(skoXC1 skoXC1 (-1/2))]/\[[0<skoXC1]/\[[skoXC1<7/8]/\[[(skoXC1 (-1+(skoXC1 skoXC1 (1/3))))<=0]/\[[(skoXC1 skoXC1 (-1/6))<=1]/\[[(skoXC1 skoXC1 (-1/2+(skoXC1 skoXC1 (-1/6))))<=0]/\[[(skoXC1 skoXC1)<=2]/\[[(skoXC1 skoXC1 skoXC1 skoXC1 (-2/3))<=0]/\[[(skoXC1 (-1+(skoXC1 skoXC1 (-1/6))))<=0]/\[[(skoXC1 skoXC1 (1/3))<=1]/\[[(skoXC1 skoXC1 (256+(skoXC1 skoXC1 (-160+(skoXC1 skoXC1 (32+(skoXC1 skoXC1 (-1))))))))<=128]/\[[(skoXC1 skoXC1 skoXC1 skoXC1 (-80/3+(skoXC1 skoXC1 (128/3+(skoXC1 skoXC1 (-55/3+(skoXC1 skoXC1 (5/3))))))))<=0]/\[[(skoXC1 (-1+(skoXC1 skoXC1 (1/3+(skoXC1 skoXC1 (3/20+(skoXC1 skoXC1 (5/56))))))))<=0]/\[[(skoXC1 skoXC1 (-1/6+(skoXC1 skoXC1 (-3/40+(skoXC1 skoXC1 (-5/112))))))<=1]/\[[(skoXC1 skoXC1 (-1/2+(skoXC1 skoXC1 (7/120+(skoXC1 skoXC1 (33/560+(skoXC1 skoXC1 (-5/112))))))))<=0]/\[[(skoXC1 skoXC1 skoXC1 skoXC1 (-13/60+(skoXC1 skoXC1 (-9/280+(skoXC1 skoXC1 (-5/28))))))<=0]/\[[(skoXC1 skoXC1 skoXC1 skoXC1 (-17/120+(skoXC1 skoXC1 (-27/280+(skoXC1 skoXC1 (5/224))))))<=0]/\[[(skoXC1 skoXC1 (1/3+(skoXC1 skoXC1 (3/20+(skoXC1 skoXC1 (5/56))))))<=1]/\[[(skoXC1 skoXC1 skoXC1 skoXC1 (32/15+(skoXC1 skoXC1 (-272/105+(skoXC1 skoXC1 (-1163/105+(skoXC1 skoXC1 (1753/105+(skoXC1 skoXC1 (-169/28+(skoXC1 skoXC1 (25/56))))))))))))<=0]/\[[-1<(skoXC1 skoXC1 (1/6+(skoXC1 skoXC1 (3/40+(skoXC1 skoXC1 (5/112))))))]/\[(skoXC1 (-1+(skoXC1 skoXC1 (-1/6+(skoXC1 skoXC1 (-3/40+(skoXC1 skoXC1 (-5/112))))))))<=0]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]].

% In SMTLib2 format:
(declare-fun skoXC1 () Real) (assert (and (<= (* skoXC1 (+ (- 1.) (* skoXC1 (* skoXC1 (+ (/ (- 1.) 6.) (* skoXC1 (* skoXC1 (+ (/ (- 3.) 40.) (* skoXC1 (* skoXC1 (+ (/ (- 5.) 112.) (* skoXC1 (* skoXC1 (+ (/ (- 35.) 1152.) (* skoXC1 (* skoXC1 (/ (- 63.) 2816.))))))))))))))))) 0.) (and (<= (* skoXC1 skoXC1) 0.) (and (<= (* skoXC1 (* skoXC1 (+ (/ 1. 3.) (* skoXC1 (* skoXC1 (+ (/ 3. 20.) (* skoXC1 (* skoXC1 (+ (/ 5. 56.) (* skoXC1 (* skoXC1 (+ (/ 35. 576.) (* skoXC1 (* skoXC1 (/ 63. 1408.))))))))))))))) 1.) (and (<= (* skoXC1 (* skoXC1 (* skoXC1 (* skoXC1 (+ (/ (- 13.) 60.) (* skoXC1 (* skoXC1 (+ (/ (- 9.) 280.) (* skoXC1 (* skoXC1 (+ (/ 5. 1344.) (* skoXC1 (* skoXC1 (+ (/ 161. 12672.) (* skoXC1 (* skoXC1 (/ (- 63.) 704.))))))))))))))))) 0.) (and (<= (* skoXC1 (* skoXC1 (+ (/ (- 1.) 2.) (* skoXC1 (* skoXC1 (+ (/ 7. 120.) (* skoXC1 (* skoXC1 (+ (/ 33. 560.) (* skoXC1 (* skoXC1 (+ (/ 125. 2688.) (* skoXC1 (* skoXC1 (+ (/ 931. 25344.) (* skoXC1 (* skoXC1 (/ (- 63.) 2816.)))))))))))))))))) 0.) (and (<= (* skoXC1 (* skoXC1 (+ (/ (- 1.) 6.) (* skoXC1 (* skoXC1 (+ (/ (- 3.) 40.) (* skoXC1 (* skoXC1 (+ (/ (- 5.) 112.) (* skoXC1 (* skoXC1 (+ (/ (- 35.) 1152.) (* skoXC1 (* skoXC1 (/ (- 63.) 2816.))))))))))))))) 1.) (and (<= (* skoXC1 (+ (- 1.) (* skoXC1 (* skoXC1 (+ (/ 1. 3.) (* skoXC1 (* skoXC1 (+ (/ 3. 20.) (* skoXC1 (* skoXC1 (+ (/ 5. 56.) (* skoXC1 (* skoXC1 (+ (/ 35. 576.) (* skoXC1 (* skoXC1 (/ 63. 1408.))))))))))))))))) 0.) (and (<= (* skoXC1 (+ (- 1.) (* skoXC1 (* skoXC1 (+ (/ (- 1.) 6.) (* skoXC1 (* skoXC1 (/ (- 3.) 40.)))))))) 0.) (and (> (* skoXC1 (* skoXC1 (+ (/ 1. 6.) (* skoXC1 (* skoXC1 (/ 3. 40.)))))) (- 1.)) (and (<= (* skoXC1 (* skoXC1 (* skoXC1 (* skoXC1 (+ (/ 32. 15.) (* skoXC1 (* skoXC1 (+ (/ (- 296.) 15.) (* skoXC1 (* skoXC1 (+ (/ 391. 15.) (* skoXC1 (* skoXC1 (+ (/ (- 146.) 15.) (* skoXC1 (* skoXC1 (/ 3. 4.))))))))))))))))) 0.) (and (<= (* skoXC1 (* skoXC1 (+ (/ 1. 3.) (* skoXC1 (* skoXC1 (/ 3. 20.)))))) 1.) (and (<= (* skoXC1 (* skoXC1 (* skoXC1 (* skoXC1 (+ (/ (- 17.) 120.) (* skoXC1 (* skoXC1 (/ 3. 80.)))))))) 0.) (and (<= (* skoXC1 (* skoXC1 (* skoXC1 (* skoXC1 (+ (/ (- 13.) 60.) (* skoXC1 (* skoXC1 (/ (- 3.) 10.)))))))) 0.) (and (<= (* skoXC1 (* skoXC1 (+ (/ (- 1.) 2.) (* skoXC1 (* skoXC1 (+ (/ 7. 120.) (* skoXC1 (* skoXC1 (/ (- 3.) 40.))))))))) 0.) (and (<= (* skoXC1 (* skoXC1 (+ (/ (- 1.) 6.) (* skoXC1 (* skoXC1 (/ (- 3.) 40.)))))) 1.) (and (<= (* skoXC1 (+ (- 1.) (* skoXC1 (* skoXC1 (+ (/ 1. 3.) (* skoXC1 (* skoXC1 (/ 3. 20.)))))))) 0.) (and (> (* skoXC1 skoXC1) 0.) (and (<= (* skoXC1 (* skoXC1 (+ 80. (* skoXC1 (* skoXC1 (+ (- 40.) (* skoXC1 (* skoXC1 (+ 6. (* skoXC1 (* skoXC1 (/ (- 1.) 8.)))))))))))) 48.) (and (> (* skoXC1 (* skoXC1 (+ (- 80.) (* skoXC1 (* skoXC1 (+ 40. (* skoXC1 (* skoXC1 (+ (- 6.) (* skoXC1 (* skoXC1 (/ 1. 8.)))))))))))) (- 48.)) (and (<= (* skoXC1 (* skoXC1 (+ 24. (* skoXC1 (* skoXC1 (+ (- 10.) (* skoXC1 skoXC1))))))) 16.) (and (<= (* skoXC1 (* skoXC1 (/ 1. 2.))) 3.) (and (> (* skoXC1 (* skoXC1 (/ (- 1.) 2.))) (- 3.)) (and (> skoXC1 0.) (and (> (/ 7. 8.) skoXC1) (and (<= (* skoXC1 (+ (- 1.) (* skoXC1 (* skoXC1 (/ 1. 3.))))) 0.) (and (<= (* skoXC1 (* skoXC1 (/ (- 1.) 6.))) 1.) (and (<= (* skoXC1 (* skoXC1 (+ (/ (- 1.) 2.) (* skoXC1 (* skoXC1 (/ (- 1.) 6.)))))) 0.) (and (<= (* skoXC1 skoXC1) 2.) (and (<= (* skoXC1 (* skoXC1 (* skoXC1 (* skoXC1 (/ (- 2.) 3.))))) 0.) (and (<= (* skoXC1 (+ (- 1.) (* skoXC1 (* skoXC1 (/ (- 1.) 6.))))) 0.) (and (<= (* skoXC1 (* skoXC1 (/ 1. 3.))) 1.) (and (<= (* skoXC1 (* skoXC1 (+ 256. (* skoXC1 (* skoXC1 (+ (- 160.) (* skoXC1 (* skoXC1 (+ 32. (* skoXC1 (* skoXC1 (- 1.)))))))))))) 128.) (and (<= (* skoXC1 (* skoXC1 (* skoXC1 (* skoXC1 (+ (/ (- 80.) 3.) (* skoXC1 (* skoXC1 (+ (/ 128. 3.) (* skoXC1 (* skoXC1 (+ (/ (- 55.) 3.) (* skoXC1 (* skoXC1 (/ 5. 3.)))))))))))))) 0.) (and (<= (* skoXC1 (+ (- 1.) (* skoXC1 (* skoXC1 (+ (/ 1. 3.) (* skoXC1 (* skoXC1 (+ (/ 3. 20.) (* skoXC1 (* skoXC1 (/ 5. 56.))))))))))) 0.) (and (<= (* skoXC1 (* skoXC1 (+ (/ (- 1.) 6.) (* skoXC1 (* skoXC1 (+ (/ (- 3.) 40.) (* skoXC1 (* skoXC1 (/ (- 5.) 112.))))))))) 1.) (and (<= (* skoXC1 (* skoXC1 (+ (/ (- 1.) 2.) (* skoXC1 (* skoXC1 (+ (/ 7. 120.) (* skoXC1 (* skoXC1 (+ (/ 33. 560.) (* skoXC1 (* skoXC1 (/ (- 5.) 112.)))))))))))) 0.) (and (<= (* skoXC1 (* skoXC1 (* skoXC1 (* skoXC1 (+ (/ (- 13.) 60.) (* skoXC1 (* skoXC1 (+ (/ (- 9.) 280.) (* skoXC1 (* skoXC1 (/ (- 5.) 28.))))))))))) 0.) (and (<= (* skoXC1 (* skoXC1 (* skoXC1 (* skoXC1 (+ (/ (- 17.) 120.) (* skoXC1 (* skoXC1 (+ (/ (- 27.) 280.) (* skoXC1 (* skoXC1 (/ 5. 224.))))))))))) 0.) (and (<= (* skoXC1 (* skoXC1 (+ (/ 1. 3.) (* skoXC1 (* skoXC1 (+ (/ 3. 20.) (* skoXC1 (* skoXC1 (/ 5. 56.))))))))) 1.) (and (<= (* skoXC1 (* skoXC1 (* skoXC1 (* skoXC1 (+ (/ 32. 15.) (* skoXC1 (* skoXC1 (+ (/ (- 272.) 105.) (* skoXC1 (* skoXC1 (+ (/ (- 1163.) 105.) (* skoXC1 (* skoXC1 (+ (/ 1753. 105.) (* skoXC1 (* skoXC1 (+ (/ (- 169.) 28.) (* skoXC1 (* skoXC1 (/ 25. 56.)))))))))))))))))))) 0.) (and (> (* skoXC1 (* skoXC1 (+ (/ 1. 6.) (* skoXC1 (* skoXC1 (+ (/ 3. 40.) (* skoXC1 (* skoXC1 (/ 5. 112.))))))))) (- 1.)) (<= (* skoXC1 (+ (- 1.) (* skoXC1 (* skoXC1 (+ (/ (- 1.) 6.) (* skoXC1 (* skoXC1 (+ (/ (- 3.) 40.) (* skoXC1 (* skoXC1 (/ (- 5.) 112.))))))))))) 0.)))))))))))))))))))))))))))))))))))))))))))

% In GRF format:
(sequent " MetiTarski formula " (antecedent (<= (* skoXC1 (+ (- 1.) (* skoXC1 (* skoXC1 (+ (/ (- 1.) 6.) (* skoXC1 (* skoXC1 (+ (/ (- 3.) 40.) (* skoXC1 (* skoXC1 (+ (/ (- 5.) 112.) (* skoXC1 (* skoXC1 (+ (/ (- 35.) 1152.) (* skoXC1 (* skoXC1 (/ (- 63.) 2816.))))))))))))))))) 0.) (<= (* skoXC1 skoXC1) 0.) (<= (* skoXC1 (* skoXC1 (+ (/ 1. 3.) (* skoXC1 (* skoXC1 (+ (/ 3. 20.) (* skoXC1 (* skoXC1 (+ (/ 5. 56.) (* skoXC1 (* skoXC1 (+ (/ 35. 576.) (* skoXC1 (* skoXC1 (/ 63. 1408.))))))))))))))) 1.) (<= (* skoXC1 (* skoXC1 (* skoXC1 (* skoXC1 (+ (/ (- 13.) 60.) (* skoXC1 (* skoXC1 (+ (/ (- 9.) 280.) (* skoXC1 (* skoXC1 (+ (/ 5. 1344.) (* skoXC1 (* skoXC1 (+ (/ 161. 12672.) (* skoXC1 (* skoXC1 (/ (- 63.) 704.))))))))))))))))) 0.) (<= (* skoXC1 (* skoXC1 (+ (/ (- 1.) 2.) (* skoXC1 (* skoXC1 (+ (/ 7. 120.) (* skoXC1 (* skoXC1 (+ (/ 33. 560.) (* skoXC1 (* skoXC1 (+ (/ 125. 2688.) (* skoXC1 (* skoXC1 (+ (/ 931. 25344.) (* skoXC1 (* skoXC1 (/ (- 63.) 2816.)))))))))))))))))) 0.) (<= (* skoXC1 (* skoXC1 (+ (/ (- 1.) 6.) (* skoXC1 (* skoXC1 (+ (/ (- 3.) 40.) (* skoXC1 (* skoXC1 (+ (/ (- 5.) 112.) (* skoXC1 (* skoXC1 (+ (/ (- 35.) 1152.) (* skoXC1 (* skoXC1 (/ (- 63.) 2816.))))))))))))))) 1.) (<= (* skoXC1 (+ (- 1.) (* skoXC1 (* skoXC1 (+ (/ 1. 3.) (* skoXC1 (* skoXC1 (+ (/ 3. 20.) (* skoXC1 (* skoXC1 (+ (/ 5. 56.) (* skoXC1 (* skoXC1 (+ (/ 35. 576.) (* skoXC1 (* skoXC1 (/ 63. 1408.))))))))))))))))) 0.) (<= (* skoXC1 (+ (- 1.) (* skoXC1 (* skoXC1 (+ (/ (- 1.) 6.) (* skoXC1 (* skoXC1 (/ (- 3.) 40.)))))))) 0.) (> (* skoXC1 (* skoXC1 (+ (/ 1. 6.) (* skoXC1 (* skoXC1 (/ 3. 40.)))))) (- 1.)) (<= (* skoXC1 (* skoXC1 (* skoXC1 (* skoXC1 (+ (/ 32. 15.) (* skoXC1 (* skoXC1 (+ (/ (- 296.) 15.) (* skoXC1 (* skoXC1 (+ (/ 391. 15.) (* skoXC1 (* skoXC1 (+ (/ (- 146.) 15.) (* skoXC1 (* skoXC1 (/ 3. 4.))))))))))))))))) 0.) (<= (* skoXC1 (* skoXC1 (+ (/ 1. 3.) (* skoXC1 (* skoXC1 (/ 3. 20.)))))) 1.) (<= (* skoXC1 (* skoXC1 (* skoXC1 (* skoXC1 (+ (/ (- 17.) 120.) (* skoXC1 (* skoXC1 (/ 3. 80.)))))))) 0.) (<= (* skoXC1 (* skoXC1 (* skoXC1 (* skoXC1 (+ (/ (- 13.) 60.) (* skoXC1 (* skoXC1 (/ (- 3.) 10.)))))))) 0.) (<= (* skoXC1 (* skoXC1 (+ (/ (- 1.) 2.) (* skoXC1 (* skoXC1 (+ (/ 7. 120.) (* skoXC1 (* skoXC1 (/ (- 3.) 40.))))))))) 0.) (<= (* skoXC1 (* skoXC1 (+ (/ (- 1.) 6.) (* skoXC1 (* skoXC1 (/ (- 3.) 40.)))))) 1.) (<= (* skoXC1 (+ (- 1.) (* skoXC1 (* skoXC1 (+ (/ 1. 3.) (* skoXC1 (* skoXC1 (/ 3. 20.)))))))) 0.) (> (* skoXC1 skoXC1) 0.) (<= (* skoXC1 (* skoXC1 (+ 80. (* skoXC1 (* skoXC1 (+ (- 40.) (* skoXC1 (* skoXC1 (+ 6. (* skoXC1 (* skoXC1 (/ (- 1.) 8.)))))))))))) 48.) (> (* skoXC1 (* skoXC1 (+ (- 80.) (* skoXC1 (* skoXC1 (+ 40. (* skoXC1 (* skoXC1 (+ (- 6.) (* skoXC1 (* skoXC1 (/ 1. 8.)))))))))))) (- 48.)) (<= (* skoXC1 (* skoXC1 (+ 24. (* skoXC1 (* skoXC1 (+ (- 10.) (* skoXC1 skoXC1))))))) 16.) (<= (* skoXC1 (* skoXC1 (/ 1. 2.))) 3.) (> (* skoXC1 (* skoXC1 (/ (- 1.) 2.))) (- 3.)) (> skoXC1 0.) (> (/ 7. 8.) skoXC1) (<= (* skoXC1 (+ (- 1.) (* skoXC1 (* skoXC1 (/ 1. 3.))))) 0.) (<= (* skoXC1 (* skoXC1 (/ (- 1.) 6.))) 1.) (<= (* skoXC1 (* skoXC1 (+ (/ (- 1.) 2.) (* skoXC1 (* skoXC1 (/ (- 1.) 6.)))))) 0.) (<= (* skoXC1 skoXC1) 2.) (<= (* skoXC1 (* skoXC1 (* skoXC1 (* skoXC1 (/ (- 2.) 3.))))) 0.) (<= (* skoXC1 (+ (- 1.) (* skoXC1 (* skoXC1 (/ (- 1.) 6.))))) 0.) (<= (* skoXC1 (* skoXC1 (/ 1. 3.))) 1.) (<= (* skoXC1 (* skoXC1 (+ 256. (* skoXC1 (* skoXC1 (+ (- 160.) (* skoXC1 (* skoXC1 (+ 32. (* skoXC1 (* skoXC1 (- 1.)))))))))))) 128.) (<= (* skoXC1 (* skoXC1 (* skoXC1 (* skoXC1 (+ (/ (- 80.) 3.) (* skoXC1 (* skoXC1 (+ (/ 128. 3.) (* skoXC1 (* skoXC1 (+ (/ (- 55.) 3.) (* skoXC1 (* skoXC1 (/ 5. 3.)))))))))))))) 0.) (<= (* skoXC1 (+ (- 1.) (* skoXC1 (* skoXC1 (+ (/ 1. 3.) (* skoXC1 (* skoXC1 (+ (/ 3. 20.) (* skoXC1 (* skoXC1 (/ 5. 56.))))))))))) 0.) (<= (* skoXC1 (* skoXC1 (+ (/ (- 1.) 6.) (* skoXC1 (* skoXC1 (+ (/ (- 3.) 40.) (* skoXC1 (* skoXC1 (/ (- 5.) 112.))))))))) 1.) (<= (* skoXC1 (* skoXC1 (+ (/ (- 1.) 2.) (* skoXC1 (* skoXC1 (+ (/ 7. 120.) (* skoXC1 (* skoXC1 (+ (/ 33. 560.) (* skoXC1 (* skoXC1 (/ (- 5.) 112.)))))))))))) 0.) (<= (* skoXC1 (* skoXC1 (* skoXC1 (* skoXC1 (+ (/ (- 13.) 60.) (* skoXC1 (* skoXC1 (+ (/ (- 9.) 280.) (* skoXC1 (* skoXC1 (/ (- 5.) 28.))))))))))) 0.) (<= (* skoXC1 (* skoXC1 (* skoXC1 (* skoXC1 (+ (/ (- 17.) 120.) (* skoXC1 (* skoXC1 (+ (/ (- 27.) 280.) (* skoXC1 (* skoXC1 (/ 5. 224.))))))))))) 0.) (<= (* skoXC1 (* skoXC1 (+ (/ 1. 3.) (* skoXC1 (* skoXC1 (+ (/ 3. 20.) (* skoXC1 (* skoXC1 (/ 5. 56.))))))))) 1.) (<= (* skoXC1 (* skoXC1 (* skoXC1 (* skoXC1 (+ (/ 32. 15.) (* skoXC1 (* skoXC1 (+ (/ (- 272.) 105.) (* skoXC1 (* skoXC1 (+ (/ (- 1163.) 105.) (* skoXC1 (* skoXC1 (+ (/ 1753. 105.) (* skoXC1 (* skoXC1 (+ (/ (- 169.) 28.) (* skoXC1 (* skoXC1 (/ 25. 56.)))))))))))))))))))) 0.) (> (* skoXC1 (* skoXC1 (+ (/ 1. 6.) (* skoXC1 (* skoXC1 (+ (/ 3. 40.) (* skoXC1 (* skoXC1 (/ 5. 112.))))))))) (- 1.))) (succedent (> (* skoXC1 (+ (- 1.) (* skoXC1 (* skoXC1 (+ (/ (- 1.) 6.) (* skoXC1 (* skoXC1 (+ (/ (- 3.) 40.) (* skoXC1 (* skoXC1 (/ (- 5.) 112.))))))))))) 0.)))
-----[end problem]-----

-----[begin problem]-----
% In Mathematica format:
Timing[Resolve[Exists[{skoXC1}, And[skoXC1*skoXC1>0,skoXC1*skoXC1*((1/3)+skoXC1*skoXC1*((3/20)+skoXC1*skoXC1*((5/56)+skoXC1*skoXC1*((35/576)+skoXC1*skoXC1*(63/1408)))))<=1,skoXC1*skoXC1*skoXC1*skoXC1*((-13/60)+skoXC1*skoXC1*((-9/280)+skoXC1*skoXC1*((5/1344)+skoXC1*skoXC1*((161/12672)+skoXC1*skoXC1*(-63/704)))))<=0,skoXC1*skoXC1*((-1/2)+skoXC1*skoXC1*((7/120)+skoXC1*skoXC1*((33/560)+skoXC1*skoXC1*((125/2688)+skoXC1*skoXC1*((931/25344)+skoXC1*skoXC1*(-63/2816))))))<=0,skoXC1*skoXC1*((-1/6)+skoXC1*skoXC1*((-3/40)+skoXC1*skoXC1*((-5/112)+skoXC1*skoXC1*((-35/1152)+skoXC1*skoXC1*(-63/2816)))))<=1,skoXC1*(-1+skoXC1*skoXC1*((1/3)+skoXC1*skoXC1*((3/20)+skoXC1*skoXC1*((5/56)+skoXC1*skoXC1*((35/576)+skoXC1*skoXC1*(63/1408))))))<=0,skoXC1*(-1+skoXC1*skoXC1*((-1/6)+skoXC1*skoXC1*(-3/40)))<=0,skoXC1*skoXC1*((1/6)+skoXC1*skoXC1*(3/40))>-1,skoXC1*skoXC1*skoXC1*skoXC1*((32/15)+skoXC1*skoXC1*((-296/15)+skoXC1*skoXC1*((391/15)+skoXC1*skoXC1*((-146/15)+skoXC1*skoXC1*(3/4)))))<=0,skoXC1*skoXC1*((1/3)+skoXC1*skoXC1*(3/20))<=1,skoXC1*skoXC1*skoXC1*skoXC1*((-17/120)+skoXC1*skoXC1*(3/80))<=0,skoXC1*skoXC1*skoXC1*skoXC1*((-13/60)+skoXC1*skoXC1*(-3/10))<=0,skoXC1*skoXC1*((-1/2)+skoXC1*skoXC1*((7/120)+skoXC1*skoXC1*(-3/40)))<=0,skoXC1*skoXC1*((-1/6)+skoXC1*skoXC1*(-3/40))<=1,skoXC1*(-1+skoXC1*skoXC1*((1/3)+skoXC1*skoXC1*(3/20)))<=0,skoXC1*skoXC1>0,skoXC1*skoXC1*(80+skoXC1*skoXC1*(-40+skoXC1*skoXC1*(6+skoXC1*skoXC1*(-1/8))))<=48,skoXC1*skoXC1*(-80+skoXC1*skoXC1*(40+skoXC1*skoXC1*(-6+skoXC1*skoXC1*(1/8))))>-48,skoXC1*skoXC1*(24+skoXC1*skoXC1*(-10+skoXC1*skoXC1))<=16,skoXC1*skoXC1*(1/2)<=3,skoXC1*skoXC1*(-1/2)>-3,skoXC1>0,(7/8)>skoXC1,skoXC1*(-1+skoXC1*skoXC1*(1/3))<=0,skoXC1*skoXC1*(-1/6)<=1,skoXC1*skoXC1*((-1/2)+skoXC1*skoXC1*(-1/6))<=0,skoXC1*skoXC1<=2,skoXC1*skoXC1*skoXC1*skoXC1*(-2/3)<=0,skoXC1*(-1+skoXC1*skoXC1*(-1/6))<=0,skoXC1*skoXC1*(1/3)<=1,skoXC1*skoXC1*(256+skoXC1*skoXC1*(-160+skoXC1*skoXC1*(32+skoXC1*skoXC1*-1)))<=128,skoXC1*skoXC1*skoXC1*skoXC1*((-80/3)+skoXC1*skoXC1*((128/3)+skoXC1*skoXC1*((-55/3)+skoXC1*skoXC1*(5/3))))<=0,skoXC1*(-1+skoXC1*skoXC1*((1/3)+skoXC1*skoXC1*((3/20)+skoXC1*skoXC1*(5/56))))<=0,skoXC1*skoXC1*((-1/6)+skoXC1*skoXC1*((-3/40)+skoXC1*skoXC1*(-5/112)))<=1,skoXC1*skoXC1*((-1/2)+skoXC1*skoXC1*((7/120)+skoXC1*skoXC1*((33/560)+skoXC1*skoXC1*(-5/112))))<=0,skoXC1*skoXC1*skoXC1*skoXC1*((-13/60)+skoXC1*skoXC1*((-9/280)+skoXC1*skoXC1*(-5/28)))<=0,skoXC1*skoXC1*skoXC1*skoXC1*((-17/120)+skoXC1*skoXC1*((-27/280)+skoXC1*skoXC1*(5/224)))<=0,skoXC1*skoXC1*((1/3)+skoXC1*skoXC1*((3/20)+skoXC1*skoXC1*(5/56)))<=1,skoXC1*skoXC1*skoXC1*skoXC1*((32/15)+skoXC1*skoXC1*((-272/105)+skoXC1*skoXC1*((-1163/105)+skoXC1*skoXC1*((1753/105)+skoXC1*skoXC1*((-169/28)+skoXC1*skoXC1*(25/56))))))<=0,skoXC1*skoXC1*((1/6)+skoXC1*skoXC1*((3/40)+skoXC1*skoXC1*(5/112)))>-1,skoXC1*(-1+skoXC1*skoXC1*((-1/6)+skoXC1*skoXC1*((-3/40)+skoXC1*skoXC1*(-5/112))))<=0]], Reals]]

% In QepcadB format:
(E skoXC1) [[0<(skoXC1 skoXC1)]/\[[(skoXC1 skoXC1 (1/3+(skoXC1 skoXC1 (3/20+(skoXC1 skoXC1 (5/56+(skoXC1 skoXC1 (35/576+(skoXC1 skoXC1 (63/1408))))))))))<=1]/\[[(skoXC1 skoXC1 skoXC1 skoXC1 (-13/60+(skoXC1 skoXC1 (-9/280+(skoXC1 skoXC1 (5/1344+(skoXC1 skoXC1 (161/12672+(skoXC1 skoXC1 (-63/704))))))))))<=0]/\[[(skoXC1 skoXC1 (-1/2+(skoXC1 skoXC1 (7/120+(skoXC1 skoXC1 (33/560+(skoXC1 skoXC1 (125/2688+(skoXC1 skoXC1 (931/25344+(skoXC1 skoXC1 (-63/2816))))))))))))<=0]/\[[(skoXC1 skoXC1 (-1/6+(skoXC1 skoXC1 (-3/40+(skoXC1 skoXC1 (-5/112+(skoXC1 skoXC1 (-35/1152+(skoXC1 skoXC1 (-63/2816))))))))))<=1]/\[[(skoXC1 (-1+(skoXC1 skoXC1 (1/3+(skoXC1 skoXC1 (3/20+(skoXC1 skoXC1 (5/56+(skoXC1 skoXC1 (35/576+(skoXC1 skoXC1 (63/1408))))))))))))<=0]/\[[(skoXC1 (-1+(skoXC1 skoXC1 (-1/6+(skoXC1 skoXC1 (-3/40))))))<=0]/\[[-1<(skoXC1 skoXC1 (1/6+(skoXC1 skoXC1 (3/40))))]/\[[(skoXC1 skoXC1 skoXC1 skoXC1 (32/15+(skoXC1 skoXC1 (-296/15+(skoXC1 skoXC1 (391/15+(skoXC1 skoXC1 (-146/15+(skoXC1 skoXC1 (3/4))))))))))<=0]/\[[(skoXC1 skoXC1 (1/3+(skoXC1 skoXC1 (3/20))))<=1]/\[[(skoXC1 skoXC1 skoXC1 skoXC1 (-17/120+(skoXC1 skoXC1 (3/80))))<=0]/\[[(skoXC1 skoXC1 skoXC1 skoXC1 (-13/60+(skoXC1 skoXC1 (-3/10))))<=0]/\[[(skoXC1 skoXC1 (-1/2+(skoXC1 skoXC1 (7/120+(skoXC1 skoXC1 (-3/40))))))<=0]/\[[(skoXC1 skoXC1 (-1/6+(skoXC1 skoXC1 (-3/40))))<=1]/\[[(skoXC1 (-1+(skoXC1 skoXC1 (1/3+(skoXC1 skoXC1 (3/20))))))<=0]/\[[0<(skoXC1 skoXC1)]/\[[(skoXC1 skoXC1 (80+(skoXC1 skoXC1 (-40+(skoXC1 skoXC1 (6+(skoXC1 skoXC1 (-1/8))))))))<=48]/\[[-48<(skoXC1 skoXC1 (-80+(skoXC1 skoXC1 (40+(skoXC1 skoXC1 (-6+(skoXC1 skoXC1 (1/8))))))))]/\[[(skoXC1 skoXC1 (24+(skoXC1 skoXC1 (-10+(skoXC1 skoXC1)))))<=16]/\[[(skoXC1 skoXC1 (1/2))<=3]/\[[-3<(skoXC1 skoXC1 (-1/2))]/\[[0<skoXC1]/\[[skoXC1<7/8]/\[[(skoXC1 (-1+(skoXC1 skoXC1 (1/3))))<=0]/\[[(skoXC1 skoXC1 (-1/6))<=1]/\[[(skoXC1 skoXC1 (-1/2+(skoXC1 skoXC1 (-1/6))))<=0]/\[[(skoXC1 skoXC1)<=2]/\[[(skoXC1 skoXC1 skoXC1 skoXC1 (-2/3))<=0]/\[[(skoXC1 (-1+(skoXC1 skoXC1 (-1/6))))<=0]/\[[(skoXC1 skoXC1 (1/3))<=1]/\[[(skoXC1 skoXC1 (256+(skoXC1 skoXC1 (-160+(skoXC1 skoXC1 (32+(skoXC1 skoXC1 (-1))))))))<=128]/\[[(skoXC1 skoXC1 skoXC1 skoXC1 (-80/3+(skoXC1 skoXC1 (128/3+(skoXC1 skoXC1 (-55/3+(skoXC1 skoXC1 (5/3))))))))<=0]/\[[(skoXC1 (-1+(skoXC1 skoXC1 (1/3+(skoXC1 skoXC1 (3/20+(skoXC1 skoXC1 (5/56))))))))<=0]/\[[(skoXC1 skoXC1 (-1/6+(skoXC1 skoXC1 (-3/40+(skoXC1 skoXC1 (-5/112))))))<=1]/\[[(skoXC1 skoXC1 (-1/2+(skoXC1 skoXC1 (7/120+(skoXC1 skoXC1 (33/560+(skoXC1 skoXC1 (-5/112))))))))<=0]/\[[(skoXC1 skoXC1 skoXC1 skoXC1 (-13/60+(skoXC1 skoXC1 (-9/280+(skoXC1 skoXC1 (-5/28))))))<=0]/\[[(skoXC1 skoXC1 skoXC1 skoXC1 (-17/120+(skoXC1 skoXC1 (-27/280+(skoXC1 skoXC1 (5/224))))))<=0]/\[[(skoXC1 skoXC1 (1/3+(skoXC1 skoXC1 (3/20+(skoXC1 skoXC1 (5/56))))))<=1]/\[[(skoXC1 skoXC1 skoXC1 skoXC1 (32/15+(skoXC1 skoXC1 (-272/105+(skoXC1 skoXC1 (-1163/105+(skoXC1 skoXC1 (1753/105+(skoXC1 skoXC1 (-169/28+(skoXC1 skoXC1 (25/56))))))))))))<=0]/\[[-1<(skoXC1 skoXC1 (1/6+(skoXC1 skoXC1 (3/40+(skoXC1 skoXC1 (5/112))))))]/\[(skoXC1 (-1+(skoXC1 skoXC1 (-1/6+(skoXC1 skoXC1 (-3/40+(skoXC1 skoXC1 (-5/112))))))))<=0]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]].

% In SMTLib2 format:
(declare-fun skoXC1 () Real) (assert (and (> (* skoXC1 skoXC1) 0.) (and (<= (* skoXC1 (* skoXC1 (+ (/ 1. 3.) (* skoXC1 (* skoXC1 (+ (/ 3. 20.) (* skoXC1 (* skoXC1 (+ (/ 5. 56.) (* skoXC1 (* skoXC1 (+ (/ 35. 576.) (* skoXC1 (* skoXC1 (/ 63. 1408.))))))))))))))) 1.) (and (<= (* skoXC1 (* skoXC1 (* skoXC1 (* skoXC1 (+ (/ (- 13.) 60.) (* skoXC1 (* skoXC1 (+ (/ (- 9.) 280.) (* skoXC1 (* skoXC1 (+ (/ 5. 1344.) (* skoXC1 (* skoXC1 (+ (/ 161. 12672.) (* skoXC1 (* skoXC1 (/ (- 63.) 704.))))))))))))))))) 0.) (and (<= (* skoXC1 (* skoXC1 (+ (/ (- 1.) 2.) (* skoXC1 (* skoXC1 (+ (/ 7. 120.) (* skoXC1 (* skoXC1 (+ (/ 33. 560.) (* skoXC1 (* skoXC1 (+ (/ 125. 2688.) (* skoXC1 (* skoXC1 (+ (/ 931. 25344.) (* skoXC1 (* skoXC1 (/ (- 63.) 2816.)))))))))))))))))) 0.) (and (<= (* skoXC1 (* skoXC1 (+ (/ (- 1.) 6.) (* skoXC1 (* skoXC1 (+ (/ (- 3.) 40.) (* skoXC1 (* skoXC1 (+ (/ (- 5.) 112.) (* skoXC1 (* skoXC1 (+ (/ (- 35.) 1152.) (* skoXC1 (* skoXC1 (/ (- 63.) 2816.))))))))))))))) 1.) (and (<= (* skoXC1 (+ (- 1.) (* skoXC1 (* skoXC1 (+ (/ 1. 3.) (* skoXC1 (* skoXC1 (+ (/ 3. 20.) (* skoXC1 (* skoXC1 (+ (/ 5. 56.) (* skoXC1 (* skoXC1 (+ (/ 35. 576.) (* skoXC1 (* skoXC1 (/ 63. 1408.))))))))))))))))) 0.) (and (<= (* skoXC1 (+ (- 1.) (* skoXC1 (* skoXC1 (+ (/ (- 1.) 6.) (* skoXC1 (* skoXC1 (/ (- 3.) 40.)))))))) 0.) (and (> (* skoXC1 (* skoXC1 (+ (/ 1. 6.) (* skoXC1 (* skoXC1 (/ 3. 40.)))))) (- 1.)) (and (<= (* skoXC1 (* skoXC1 (* skoXC1 (* skoXC1 (+ (/ 32. 15.) (* skoXC1 (* skoXC1 (+ (/ (- 296.) 15.) (* skoXC1 (* skoXC1 (+ (/ 391. 15.) (* skoXC1 (* skoXC1 (+ (/ (- 146.) 15.) (* skoXC1 (* skoXC1 (/ 3. 4.))))))))))))))))) 0.) (and (<= (* skoXC1 (* skoXC1 (+ (/ 1. 3.) (* skoXC1 (* skoXC1 (/ 3. 20.)))))) 1.) (and (<= (* skoXC1 (* skoXC1 (* skoXC1 (* skoXC1 (+ (/ (- 17.) 120.) (* skoXC1 (* skoXC1 (/ 3. 80.)))))))) 0.) (and (<= (* skoXC1 (* skoXC1 (* skoXC1 (* skoXC1 (+ (/ (- 13.) 60.) (* skoXC1 (* skoXC1 (/ (- 3.) 10.)))))))) 0.) (and (<= (* skoXC1 (* skoXC1 (+ (/ (- 1.) 2.) (* skoXC1 (* skoXC1 (+ (/ 7. 120.) (* skoXC1 (* skoXC1 (/ (- 3.) 40.))))))))) 0.) (and (<= (* skoXC1 (* skoXC1 (+ (/ (- 1.) 6.) (* skoXC1 (* skoXC1 (/ (- 3.) 40.)))))) 1.) (and (<= (* skoXC1 (+ (- 1.) (* skoXC1 (* skoXC1 (+ (/ 1. 3.) (* skoXC1 (* skoXC1 (/ 3. 20.)))))))) 0.) (and (> (* skoXC1 skoXC1) 0.) (and (<= (* skoXC1 (* skoXC1 (+ 80. (* skoXC1 (* skoXC1 (+ (- 40.) (* skoXC1 (* skoXC1 (+ 6. (* skoXC1 (* skoXC1 (/ (- 1.) 8.)))))))))))) 48.) (and (> (* skoXC1 (* skoXC1 (+ (- 80.) (* skoXC1 (* skoXC1 (+ 40. (* skoXC1 (* skoXC1 (+ (- 6.) (* skoXC1 (* skoXC1 (/ 1. 8.)))))))))))) (- 48.)) (and (<= (* skoXC1 (* skoXC1 (+ 24. (* skoXC1 (* skoXC1 (+ (- 10.) (* skoXC1 skoXC1))))))) 16.) (and (<= (* skoXC1 (* skoXC1 (/ 1. 2.))) 3.) (and (> (* skoXC1 (* skoXC1 (/ (- 1.) 2.))) (- 3.)) (and (> skoXC1 0.) (and (> (/ 7. 8.) skoXC1) (and (<= (* skoXC1 (+ (- 1.) (* skoXC1 (* skoXC1 (/ 1. 3.))))) 0.) (and (<= (* skoXC1 (* skoXC1 (/ (- 1.) 6.))) 1.) (and (<= (* skoXC1 (* skoXC1 (+ (/ (- 1.) 2.) (* skoXC1 (* skoXC1 (/ (- 1.) 6.)))))) 0.) (and (<= (* skoXC1 skoXC1) 2.) (and (<= (* skoXC1 (* skoXC1 (* skoXC1 (* skoXC1 (/ (- 2.) 3.))))) 0.) (and (<= (* skoXC1 (+ (- 1.) (* skoXC1 (* skoXC1 (/ (- 1.) 6.))))) 0.) (and (<= (* skoXC1 (* skoXC1 (/ 1. 3.))) 1.) (and (<= (* skoXC1 (* skoXC1 (+ 256. (* skoXC1 (* skoXC1 (+ (- 160.) (* skoXC1 (* skoXC1 (+ 32. (* skoXC1 (* skoXC1 (- 1.)))))))))))) 128.) (and (<= (* skoXC1 (* skoXC1 (* skoXC1 (* skoXC1 (+ (/ (- 80.) 3.) (* skoXC1 (* skoXC1 (+ (/ 128. 3.) (* skoXC1 (* skoXC1 (+ (/ (- 55.) 3.) (* skoXC1 (* skoXC1 (/ 5. 3.)))))))))))))) 0.) (and (<= (* skoXC1 (+ (- 1.) (* skoXC1 (* skoXC1 (+ (/ 1. 3.) (* skoXC1 (* skoXC1 (+ (/ 3. 20.) (* skoXC1 (* skoXC1 (/ 5. 56.))))))))))) 0.) (and (<= (* skoXC1 (* skoXC1 (+ (/ (- 1.) 6.) (* skoXC1 (* skoXC1 (+ (/ (- 3.) 40.) (* skoXC1 (* skoXC1 (/ (- 5.) 112.))))))))) 1.) (and (<= (* skoXC1 (* skoXC1 (+ (/ (- 1.) 2.) (* skoXC1 (* skoXC1 (+ (/ 7. 120.) (* skoXC1 (* skoXC1 (+ (/ 33. 560.) (* skoXC1 (* skoXC1 (/ (- 5.) 112.)))))))))))) 0.) (and (<= (* skoXC1 (* skoXC1 (* skoXC1 (* skoXC1 (+ (/ (- 13.) 60.) (* skoXC1 (* skoXC1 (+ (/ (- 9.) 280.) (* skoXC1 (* skoXC1 (/ (- 5.) 28.))))))))))) 0.) (and (<= (* skoXC1 (* skoXC1 (* skoXC1 (* skoXC1 (+ (/ (- 17.) 120.) (* skoXC1 (* skoXC1 (+ (/ (- 27.) 280.) (* skoXC1 (* skoXC1 (/ 5. 224.))))))))))) 0.) (and (<= (* skoXC1 (* skoXC1 (+ (/ 1. 3.) (* skoXC1 (* skoXC1 (+ (/ 3. 20.) (* skoXC1 (* skoXC1 (/ 5. 56.))))))))) 1.) (and (<= (* skoXC1 (* skoXC1 (* skoXC1 (* skoXC1 (+ (/ 32. 15.) (* skoXC1 (* skoXC1 (+ (/ (- 272.) 105.) (* skoXC1 (* skoXC1 (+ (/ (- 1163.) 105.) (* skoXC1 (* skoXC1 (+ (/ 1753. 105.) (* skoXC1 (* skoXC1 (+ (/ (- 169.) 28.) (* skoXC1 (* skoXC1 (/ 25. 56.)))))))))))))))))))) 0.) (and (> (* skoXC1 (* skoXC1 (+ (/ 1. 6.) (* skoXC1 (* skoXC1 (+ (/ 3. 40.) (* skoXC1 (* skoXC1 (/ 5. 112.))))))))) (- 1.)) (<= (* skoXC1 (+ (- 1.) (* skoXC1 (* skoXC1 (+ (/ (- 1.) 6.) (* skoXC1 (* skoXC1 (+ (/ (- 3.) 40.) (* skoXC1 (* skoXC1 (/ (- 5.) 112.))))))))))) 0.))))))))))))))))))))))))))))))))))))))))))

% In GRF format:
(sequent " MetiTarski formula " (antecedent (> (* skoXC1 skoXC1) 0.) (<= (* skoXC1 (* skoXC1 (+ (/ 1. 3.) (* skoXC1 (* skoXC1 (+ (/ 3. 20.) (* skoXC1 (* skoXC1 (+ (/ 5. 56.) (* skoXC1 (* skoXC1 (+ (/ 35. 576.) (* skoXC1 (* skoXC1 (/ 63. 1408.))))))))))))))) 1.) (<= (* skoXC1 (* skoXC1 (* skoXC1 (* skoXC1 (+ (/ (- 13.) 60.) (* skoXC1 (* skoXC1 (+ (/ (- 9.) 280.) (* skoXC1 (* skoXC1 (+ (/ 5. 1344.) (* skoXC1 (* skoXC1 (+ (/ 161. 12672.) (* skoXC1 (* skoXC1 (/ (- 63.) 704.))))))))))))))))) 0.) (<= (* skoXC1 (* skoXC1 (+ (/ (- 1.) 2.) (* skoXC1 (* skoXC1 (+ (/ 7. 120.) (* skoXC1 (* skoXC1 (+ (/ 33. 560.) (* skoXC1 (* skoXC1 (+ (/ 125. 2688.) (* skoXC1 (* skoXC1 (+ (/ 931. 25344.) (* skoXC1 (* skoXC1 (/ (- 63.) 2816.)))))))))))))))))) 0.) (<= (* skoXC1 (* skoXC1 (+ (/ (- 1.) 6.) (* skoXC1 (* skoXC1 (+ (/ (- 3.) 40.) (* skoXC1 (* skoXC1 (+ (/ (- 5.) 112.) (* skoXC1 (* skoXC1 (+ (/ (- 35.) 1152.) (* skoXC1 (* skoXC1 (/ (- 63.) 2816.))))))))))))))) 1.) (<= (* skoXC1 (+ (- 1.) (* skoXC1 (* skoXC1 (+ (/ 1. 3.) (* skoXC1 (* skoXC1 (+ (/ 3. 20.) (* skoXC1 (* skoXC1 (+ (/ 5. 56.) (* skoXC1 (* skoXC1 (+ (/ 35. 576.) (* skoXC1 (* skoXC1 (/ 63. 1408.))))))))))))))))) 0.) (<= (* skoXC1 (+ (- 1.) (* skoXC1 (* skoXC1 (+ (/ (- 1.) 6.) (* skoXC1 (* skoXC1 (/ (- 3.) 40.)))))))) 0.) (> (* skoXC1 (* skoXC1 (+ (/ 1. 6.) (* skoXC1 (* skoXC1 (/ 3. 40.)))))) (- 1.)) (<= (* skoXC1 (* skoXC1 (* skoXC1 (* skoXC1 (+ (/ 32. 15.) (* skoXC1 (* skoXC1 (+ (/ (- 296.) 15.) (* skoXC1 (* skoXC1 (+ (/ 391. 15.) (* skoXC1 (* skoXC1 (+ (/ (- 146.) 15.) (* skoXC1 (* skoXC1 (/ 3. 4.))))))))))))))))) 0.) (<= (* skoXC1 (* skoXC1 (+ (/ 1. 3.) (* skoXC1 (* skoXC1 (/ 3. 20.)))))) 1.) (<= (* skoXC1 (* skoXC1 (* skoXC1 (* skoXC1 (+ (/ (- 17.) 120.) (* skoXC1 (* skoXC1 (/ 3. 80.)))))))) 0.) (<= (* skoXC1 (* skoXC1 (* skoXC1 (* skoXC1 (+ (/ (- 13.) 60.) (* skoXC1 (* skoXC1 (/ (- 3.) 10.)))))))) 0.) (<= (* skoXC1 (* skoXC1 (+ (/ (- 1.) 2.) (* skoXC1 (* skoXC1 (+ (/ 7. 120.) (* skoXC1 (* skoXC1 (/ (- 3.) 40.))))))))) 0.) (<= (* skoXC1 (* skoXC1 (+ (/ (- 1.) 6.) (* skoXC1 (* skoXC1 (/ (- 3.) 40.)))))) 1.) (<= (* skoXC1 (+ (- 1.) (* skoXC1 (* skoXC1 (+ (/ 1. 3.) (* skoXC1 (* skoXC1 (/ 3. 20.)))))))) 0.) (> (* skoXC1 skoXC1) 0.) (<= (* skoXC1 (* skoXC1 (+ 80. (* skoXC1 (* skoXC1 (+ (- 40.) (* skoXC1 (* skoXC1 (+ 6. (* skoXC1 (* skoXC1 (/ (- 1.) 8.)))))))))))) 48.) (> (* skoXC1 (* skoXC1 (+ (- 80.) (* skoXC1 (* skoXC1 (+ 40. (* skoXC1 (* skoXC1 (+ (- 6.) (* skoXC1 (* skoXC1 (/ 1. 8.)))))))))))) (- 48.)) (<= (* skoXC1 (* skoXC1 (+ 24. (* skoXC1 (* skoXC1 (+ (- 10.) (* skoXC1 skoXC1))))))) 16.) (<= (* skoXC1 (* skoXC1 (/ 1. 2.))) 3.) (> (* skoXC1 (* skoXC1 (/ (- 1.) 2.))) (- 3.)) (> skoXC1 0.) (> (/ 7. 8.) skoXC1) (<= (* skoXC1 (+ (- 1.) (* skoXC1 (* skoXC1 (/ 1. 3.))))) 0.) (<= (* skoXC1 (* skoXC1 (/ (- 1.) 6.))) 1.) (<= (* skoXC1 (* skoXC1 (+ (/ (- 1.) 2.) (* skoXC1 (* skoXC1 (/ (- 1.) 6.)))))) 0.) (<= (* skoXC1 skoXC1) 2.) (<= (* skoXC1 (* skoXC1 (* skoXC1 (* skoXC1 (/ (- 2.) 3.))))) 0.) (<= (* skoXC1 (+ (- 1.) (* skoXC1 (* skoXC1 (/ (- 1.) 6.))))) 0.) (<= (* skoXC1 (* skoXC1 (/ 1. 3.))) 1.) (<= (* skoXC1 (* skoXC1 (+ 256. (* skoXC1 (* skoXC1 (+ (- 160.) (* skoXC1 (* skoXC1 (+ 32. (* skoXC1 (* skoXC1 (- 1.)))))))))))) 128.) (<= (* skoXC1 (* skoXC1 (* skoXC1 (* skoXC1 (+ (/ (- 80.) 3.) (* skoXC1 (* skoXC1 (+ (/ 128. 3.) (* skoXC1 (* skoXC1 (+ (/ (- 55.) 3.) (* skoXC1 (* skoXC1 (/ 5. 3.)))))))))))))) 0.) (<= (* skoXC1 (+ (- 1.) (* skoXC1 (* skoXC1 (+ (/ 1. 3.) (* skoXC1 (* skoXC1 (+ (/ 3. 20.) (* skoXC1 (* skoXC1 (/ 5. 56.))))))))))) 0.) (<= (* skoXC1 (* skoXC1 (+ (/ (- 1.) 6.) (* skoXC1 (* skoXC1 (+ (/ (- 3.) 40.) (* skoXC1 (* skoXC1 (/ (- 5.) 112.))))))))) 1.) (<= (* skoXC1 (* skoXC1 (+ (/ (- 1.) 2.) (* skoXC1 (* skoXC1 (+ (/ 7. 120.) (* skoXC1 (* skoXC1 (+ (/ 33. 560.) (* skoXC1 (* skoXC1 (/ (- 5.) 112.)))))))))))) 0.) (<= (* skoXC1 (* skoXC1 (* skoXC1 (* skoXC1 (+ (/ (- 13.) 60.) (* skoXC1 (* skoXC1 (+ (/ (- 9.) 280.) (* skoXC1 (* skoXC1 (/ (- 5.) 28.))))))))))) 0.) (<= (* skoXC1 (* skoXC1 (* skoXC1 (* skoXC1 (+ (/ (- 17.) 120.) (* skoXC1 (* skoXC1 (+ (/ (- 27.) 280.) (* skoXC1 (* skoXC1 (/ 5. 224.))))))))))) 0.) (<= (* skoXC1 (* skoXC1 (+ (/ 1. 3.) (* skoXC1 (* skoXC1 (+ (/ 3. 20.) (* skoXC1 (* skoXC1 (/ 5. 56.))))))))) 1.) (<= (* skoXC1 (* skoXC1 (* skoXC1 (* skoXC1 (+ (/ 32. 15.) (* skoXC1 (* skoXC1 (+ (/ (- 272.) 105.) (* skoXC1 (* skoXC1 (+ (/ (- 1163.) 105.) (* skoXC1 (* skoXC1 (+ (/ 1753. 105.) (* skoXC1 (* skoXC1 (+ (/ (- 169.) 28.) (* skoXC1 (* skoXC1 (/ 25. 56.)))))))))))))))))))) 0.) (> (* skoXC1 (* skoXC1 (+ (/ 1. 6.) (* skoXC1 (* skoXC1 (+ (/ 3. 40.) (* skoXC1 (* skoXC1 (/ 5. 112.))))))))) (- 1.))) (succedent (> (* skoXC1 (+ (- 1.) (* skoXC1 (* skoXC1 (+ (/ (- 1.) 6.) (* skoXC1 (* skoXC1 (+ (/ (- 3.) 40.) (* skoXC1 (* skoXC1 (/ (- 5.) 112.))))))))))) 0.)))
-----[end problem]-----

-----[begin problem]-----
% In Mathematica format:
Timing[Resolve[Exists[{skoXC1}, And[skoXC1*(-1+skoXC1*skoXC1*((-1/6)+skoXC1*skoXC1*((-3/40)+skoXC1*skoXC1*((-5/112)+skoXC1*skoXC1*((-35/1152)+skoXC1*skoXC1*(-63/2816))))))<=0,skoXC1*skoXC1<=1,skoXC1*skoXC1*((1/3)+skoXC1*skoXC1*((3/20)+skoXC1*skoXC1*((5/56)+skoXC1*skoXC1*((35/576)+skoXC1*skoXC1*(63/1408)))))<=1,skoXC1*skoXC1*skoXC1*skoXC1*((-13/60)+skoXC1*skoXC1*((-9/280)+skoXC1*skoXC1*((5/1344)+skoXC1*skoXC1*((161/12672)+skoXC1*skoXC1*(-63/704)))))<=0,skoXC1*skoXC1*((-1/2)+skoXC1*skoXC1*((7/120)+skoXC1*skoXC1*((33/560)+skoXC1*skoXC1*((125/2688)+skoXC1*skoXC1*((931/25344)+skoXC1*skoXC1*(-63/2816))))))<=0,skoXC1*skoXC1*((-1/6)+skoXC1*skoXC1*((-3/40)+skoXC1*skoXC1*((-5/112)+skoXC1*skoXC1*((-35/1152)+skoXC1*skoXC1*(-63/2816)))))<=1,skoXC1*(-1+skoXC1*skoXC1*((1/3)+skoXC1*skoXC1*((3/20)+skoXC1*skoXC1*((5/56)+skoXC1*skoXC1*((35/576)+skoXC1*skoXC1*(63/1408))))))<=0,skoXC1*(-1+skoXC1*skoXC1*((-1/6)+skoXC1*skoXC1*(-3/40)))<=0,skoXC1*skoXC1*((1/6)+skoXC1*skoXC1*(3/40))>-1,skoXC1*skoXC1*skoXC1*skoXC1*((32/15)+skoXC1*skoXC1*((-296/15)+skoXC1*skoXC1*((391/15)+skoXC1*skoXC1*((-146/15)+skoXC1*skoXC1*(3/4)))))<=0,skoXC1*skoXC1*((1/3)+skoXC1*skoXC1*(3/20))<=1,skoXC1*skoXC1*skoXC1*skoXC1*((-17/120)+skoXC1*skoXC1*(3/80))<=0,skoXC1*skoXC1*skoXC1*skoXC1*((-13/60)+skoXC1*skoXC1*(-3/10))<=0,skoXC1*skoXC1*((-1/2)+skoXC1*skoXC1*((7/120)+skoXC1*skoXC1*(-3/40)))<=0,skoXC1*skoXC1*((-1/6)+skoXC1*skoXC1*(-3/40))<=1,skoXC1*(-1+skoXC1*skoXC1*((1/3)+skoXC1*skoXC1*(3/20)))<=0,skoXC1*skoXC1>0,skoXC1*skoXC1*(80+skoXC1*skoXC1*(-40+skoXC1*skoXC1*(6+skoXC1*skoXC1*(-1/8))))<=48,skoXC1*skoXC1*(-80+skoXC1*skoXC1*(40+skoXC1*skoXC1*(-6+skoXC1*skoXC1*(1/8))))>-48,skoXC1*skoXC1*(24+skoXC1*skoXC1*(-10+skoXC1*skoXC1))<=16,skoXC1*skoXC1*(1/2)<=3,skoXC1*skoXC1*(-1/2)>-3,skoXC1>0,(7/8)>skoXC1,skoXC1*(-1+skoXC1*skoXC1*(1/3))<=0,skoXC1*skoXC1*(-1/6)<=1,skoXC1*skoXC1*((-1/2)+skoXC1*skoXC1*(-1/6))<=0,skoXC1*skoXC1<=2,skoXC1*skoXC1*skoXC1*skoXC1*(-2/3)<=0,skoXC1*(-1+skoXC1*skoXC1*(-1/6))<=0,skoXC1*skoXC1*(1/3)<=1,skoXC1*skoXC1*(256+skoXC1*skoXC1*(-160+skoXC1*skoXC1*(32+skoXC1*skoXC1*-1)))<=128,skoXC1*skoXC1*skoXC1*skoXC1*((-80/3)+skoXC1*skoXC1*((128/3)+skoXC1*skoXC1*((-55/3)+skoXC1*skoXC1*(5/3))))<=0,skoXC1*(-1+skoXC1*skoXC1*((1/3)+skoXC1*skoXC1*((3/20)+skoXC1*skoXC1*(5/56))))<=0,skoXC1*skoXC1*((-1/6)+skoXC1*skoXC1*((-3/40)+skoXC1*skoXC1*(-5/112)))<=1,skoXC1*skoXC1*((-1/2)+skoXC1*skoXC1*((7/120)+skoXC1*skoXC1*((33/560)+skoXC1*skoXC1*(-5/112))))<=0,skoXC1*skoXC1*skoXC1*skoXC1*((-13/60)+skoXC1*skoXC1*((-9/280)+skoXC1*skoXC1*(-5/28)))<=0,skoXC1*skoXC1*skoXC1*skoXC1*((-17/120)+skoXC1*skoXC1*((-27/280)+skoXC1*skoXC1*(5/224)))<=0,skoXC1*skoXC1*((1/3)+skoXC1*skoXC1*((3/20)+skoXC1*skoXC1*(5/56)))<=1,skoXC1*skoXC1*skoXC1*skoXC1*((32/15)+skoXC1*skoXC1*((-272/105)+skoXC1*skoXC1*((-1163/105)+skoXC1*skoXC1*((1753/105)+skoXC1*skoXC1*((-169/28)+skoXC1*skoXC1*(25/56))))))<=0,skoXC1*skoXC1*((1/6)+skoXC1*skoXC1*((3/40)+skoXC1*skoXC1*(5/112)))>-1,skoXC1*(-1+skoXC1*skoXC1*((-1/6)+skoXC1*skoXC1*((-3/40)+skoXC1*skoXC1*(-5/112))))<=0]], Reals]]

% In QepcadB format:
(E skoXC1) [[(skoXC1 (-1+(skoXC1 skoXC1 (-1/6+(skoXC1 skoXC1 (-3/40+(skoXC1 skoXC1 (-5/112+(skoXC1 skoXC1 (-35/1152+(skoXC1 skoXC1 (-63/2816))))))))))))<=0]/\[[(skoXC1 skoXC1)<=1]/\[[(skoXC1 skoXC1 (1/3+(skoXC1 skoXC1 (3/20+(skoXC1 skoXC1 (5/56+(skoXC1 skoXC1 (35/576+(skoXC1 skoXC1 (63/1408))))))))))<=1]/\[[(skoXC1 skoXC1 skoXC1 skoXC1 (-13/60+(skoXC1 skoXC1 (-9/280+(skoXC1 skoXC1 (5/1344+(skoXC1 skoXC1 (161/12672+(skoXC1 skoXC1 (-63/704))))))))))<=0]/\[[(skoXC1 skoXC1 (-1/2+(skoXC1 skoXC1 (7/120+(skoXC1 skoXC1 (33/560+(skoXC1 skoXC1 (125/2688+(skoXC1 skoXC1 (931/25344+(skoXC1 skoXC1 (-63/2816))))))))))))<=0]/\[[(skoXC1 skoXC1 (-1/6+(skoXC1 skoXC1 (-3/40+(skoXC1 skoXC1 (-5/112+(skoXC1 skoXC1 (-35/1152+(skoXC1 skoXC1 (-63/2816))))))))))<=1]/\[[(skoXC1 (-1+(skoXC1 skoXC1 (1/3+(skoXC1 skoXC1 (3/20+(skoXC1 skoXC1 (5/56+(skoXC1 skoXC1 (35/576+(skoXC1 skoXC1 (63/1408))))))))))))<=0]/\[[(skoXC1 (-1+(skoXC1 skoXC1 (-1/6+(skoXC1 skoXC1 (-3/40))))))<=0]/\[[-1<(skoXC1 skoXC1 (1/6+(skoXC1 skoXC1 (3/40))))]/\[[(skoXC1 skoXC1 skoXC1 skoXC1 (32/15+(skoXC1 skoXC1 (-296/15+(skoXC1 skoXC1 (391/15+(skoXC1 skoXC1 (-146/15+(skoXC1 skoXC1 (3/4))))))))))<=0]/\[[(skoXC1 skoXC1 (1/3+(skoXC1 skoXC1 (3/20))))<=1]/\[[(skoXC1 skoXC1 skoXC1 skoXC1 (-17/120+(skoXC1 skoXC1 (3/80))))<=0]/\[[(skoXC1 skoXC1 skoXC1 skoXC1 (-13/60+(skoXC1 skoXC1 (-3/10))))<=0]/\[[(skoXC1 skoXC1 (-1/2+(skoXC1 skoXC1 (7/120+(skoXC1 skoXC1 (-3/40))))))<=0]/\[[(skoXC1 skoXC1 (-1/6+(skoXC1 skoXC1 (-3/40))))<=1]/\[[(skoXC1 (-1+(skoXC1 skoXC1 (1/3+(skoXC1 skoXC1 (3/20))))))<=0]/\[[0<(skoXC1 skoXC1)]/\[[(skoXC1 skoXC1 (80+(skoXC1 skoXC1 (-40+(skoXC1 skoXC1 (6+(skoXC1 skoXC1 (-1/8))))))))<=48]/\[[-48<(skoXC1 skoXC1 (-80+(skoXC1 skoXC1 (40+(skoXC1 skoXC1 (-6+(skoXC1 skoXC1 (1/8))))))))]/\[[(skoXC1 skoXC1 (24+(skoXC1 skoXC1 (-10+(skoXC1 skoXC1)))))<=16]/\[[(skoXC1 skoXC1 (1/2))<=3]/\[[-3<(skoXC1 skoXC1 (-1/2))]/\[[0<skoXC1]/\[[skoXC1<7/8]/\[[(skoXC1 (-1+(skoXC1 skoXC1 (1/3))))<=0]/\[[(skoXC1 skoXC1 (-1/6))<=1]/\[[(skoXC1 skoXC1 (-1/2+(skoXC1 skoXC1 (-1/6))))<=0]/\[[(skoXC1 skoXC1)<=2]/\[[(skoXC1 skoXC1 skoXC1 skoXC1 (-2/3))<=0]/\[[(skoXC1 (-1+(skoXC1 skoXC1 (-1/6))))<=0]/\[[(skoXC1 skoXC1 (1/3))<=1]/\[[(skoXC1 skoXC1 (256+(skoXC1 skoXC1 (-160+(skoXC1 skoXC1 (32+(skoXC1 skoXC1 (-1))))))))<=128]/\[[(skoXC1 skoXC1 skoXC1 skoXC1 (-80/3+(skoXC1 skoXC1 (128/3+(skoXC1 skoXC1 (-55/3+(skoXC1 skoXC1 (5/3))))))))<=0]/\[[(skoXC1 (-1+(skoXC1 skoXC1 (1/3+(skoXC1 skoXC1 (3/20+(skoXC1 skoXC1 (5/56))))))))<=0]/\[[(skoXC1 skoXC1 (-1/6+(skoXC1 skoXC1 (-3/40+(skoXC1 skoXC1 (-5/112))))))<=1]/\[[(skoXC1 skoXC1 (-1/2+(skoXC1 skoXC1 (7/120+(skoXC1 skoXC1 (33/560+(skoXC1 skoXC1 (-5/112))))))))<=0]/\[[(skoXC1 skoXC1 skoXC1 skoXC1 (-13/60+(skoXC1 skoXC1 (-9/280+(skoXC1 skoXC1 (-5/28))))))<=0]/\[[(skoXC1 skoXC1 skoXC1 skoXC1 (-17/120+(skoXC1 skoXC1 (-27/280+(skoXC1 skoXC1 (5/224))))))<=0]/\[[(skoXC1 skoXC1 (1/3+(skoXC1 skoXC1 (3/20+(skoXC1 skoXC1 (5/56))))))<=1]/\[[(skoXC1 skoXC1 skoXC1 skoXC1 (32/15+(skoXC1 skoXC1 (-272/105+(skoXC1 skoXC1 (-1163/105+(skoXC1 skoXC1 (1753/105+(skoXC1 skoXC1 (-169/28+(skoXC1 skoXC1 (25/56))))))))))))<=0]/\[[-1<(skoXC1 skoXC1 (1/6+(skoXC1 skoXC1 (3/40+(skoXC1 skoXC1 (5/112))))))]/\[(skoXC1 (-1+(skoXC1 skoXC1 (-1/6+(skoXC1 skoXC1 (-3/40+(skoXC1 skoXC1 (-5/112))))))))<=0]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]].

% In SMTLib2 format:
(declare-fun skoXC1 () Real) (assert (and (<= (* skoXC1 (+ (- 1.) (* skoXC1 (* skoXC1 (+ (/ (- 1.) 6.) (* skoXC1 (* skoXC1 (+ (/ (- 3.) 40.) (* skoXC1 (* skoXC1 (+ (/ (- 5.) 112.) (* skoXC1 (* skoXC1 (+ (/ (- 35.) 1152.) (* skoXC1 (* skoXC1 (/ (- 63.) 2816.))))))))))))))))) 0.) (and (<= (* skoXC1 skoXC1) 1.) (and (<= (* skoXC1 (* skoXC1 (+ (/ 1. 3.) (* skoXC1 (* skoXC1 (+ (/ 3. 20.) (* skoXC1 (* skoXC1 (+ (/ 5. 56.) (* skoXC1 (* skoXC1 (+ (/ 35. 576.) (* skoXC1 (* skoXC1 (/ 63. 1408.))))))))))))))) 1.) (and (<= (* skoXC1 (* skoXC1 (* skoXC1 (* skoXC1 (+ (/ (- 13.) 60.) (* skoXC1 (* skoXC1 (+ (/ (- 9.) 280.) (* skoXC1 (* skoXC1 (+ (/ 5. 1344.) (* skoXC1 (* skoXC1 (+ (/ 161. 12672.) (* skoXC1 (* skoXC1 (/ (- 63.) 704.))))))))))))))))) 0.) (and (<= (* skoXC1 (* skoXC1 (+ (/ (- 1.) 2.) (* skoXC1 (* skoXC1 (+ (/ 7. 120.) (* skoXC1 (* skoXC1 (+ (/ 33. 560.) (* skoXC1 (* skoXC1 (+ (/ 125. 2688.) (* skoXC1 (* skoXC1 (+ (/ 931. 25344.) (* skoXC1 (* skoXC1 (/ (- 63.) 2816.)))))))))))))))))) 0.) (and (<= (* skoXC1 (* skoXC1 (+ (/ (- 1.) 6.) (* skoXC1 (* skoXC1 (+ (/ (- 3.) 40.) (* skoXC1 (* skoXC1 (+ (/ (- 5.) 112.) (* skoXC1 (* skoXC1 (+ (/ (- 35.) 1152.) (* skoXC1 (* skoXC1 (/ (- 63.) 2816.))))))))))))))) 1.) (and (<= (* skoXC1 (+ (- 1.) (* skoXC1 (* skoXC1 (+ (/ 1. 3.) (* skoXC1 (* skoXC1 (+ (/ 3. 20.) (* skoXC1 (* skoXC1 (+ (/ 5. 56.) (* skoXC1 (* skoXC1 (+ (/ 35. 576.) (* skoXC1 (* skoXC1 (/ 63. 1408.))))))))))))))))) 0.) (and (<= (* skoXC1 (+ (- 1.) (* skoXC1 (* skoXC1 (+ (/ (- 1.) 6.) (* skoXC1 (* skoXC1 (/ (- 3.) 40.)))))))) 0.) (and (> (* skoXC1 (* skoXC1 (+ (/ 1. 6.) (* skoXC1 (* skoXC1 (/ 3. 40.)))))) (- 1.)) (and (<= (* skoXC1 (* skoXC1 (* skoXC1 (* skoXC1 (+ (/ 32. 15.) (* skoXC1 (* skoXC1 (+ (/ (- 296.) 15.) (* skoXC1 (* skoXC1 (+ (/ 391. 15.) (* skoXC1 (* skoXC1 (+ (/ (- 146.) 15.) (* skoXC1 (* skoXC1 (/ 3. 4.))))))))))))))))) 0.) (and (<= (* skoXC1 (* skoXC1 (+ (/ 1. 3.) (* skoXC1 (* skoXC1 (/ 3. 20.)))))) 1.) (and (<= (* skoXC1 (* skoXC1 (* skoXC1 (* skoXC1 (+ (/ (- 17.) 120.) (* skoXC1 (* skoXC1 (/ 3. 80.)))))))) 0.) (and (<= (* skoXC1 (* skoXC1 (* skoXC1 (* skoXC1 (+ (/ (- 13.) 60.) (* skoXC1 (* skoXC1 (/ (- 3.) 10.)))))))) 0.) (and (<= (* skoXC1 (* skoXC1 (+ (/ (- 1.) 2.) (* skoXC1 (* skoXC1 (+ (/ 7. 120.) (* skoXC1 (* skoXC1 (/ (- 3.) 40.))))))))) 0.) (and (<= (* skoXC1 (* skoXC1 (+ (/ (- 1.) 6.) (* skoXC1 (* skoXC1 (/ (- 3.) 40.)))))) 1.) (and (<= (* skoXC1 (+ (- 1.) (* skoXC1 (* skoXC1 (+ (/ 1. 3.) (* skoXC1 (* skoXC1 (/ 3. 20.)))))))) 0.) (and (> (* skoXC1 skoXC1) 0.) (and (<= (* skoXC1 (* skoXC1 (+ 80. (* skoXC1 (* skoXC1 (+ (- 40.) (* skoXC1 (* skoXC1 (+ 6. (* skoXC1 (* skoXC1 (/ (- 1.) 8.)))))))))))) 48.) (and (> (* skoXC1 (* skoXC1 (+ (- 80.) (* skoXC1 (* skoXC1 (+ 40. (* skoXC1 (* skoXC1 (+ (- 6.) (* skoXC1 (* skoXC1 (/ 1. 8.)))))))))))) (- 48.)) (and (<= (* skoXC1 (* skoXC1 (+ 24. (* skoXC1 (* skoXC1 (+ (- 10.) (* skoXC1 skoXC1))))))) 16.) (and (<= (* skoXC1 (* skoXC1 (/ 1. 2.))) 3.) (and (> (* skoXC1 (* skoXC1 (/ (- 1.) 2.))) (- 3.)) (and (> skoXC1 0.) (and (> (/ 7. 8.) skoXC1) (and (<= (* skoXC1 (+ (- 1.) (* skoXC1 (* skoXC1 (/ 1. 3.))))) 0.) (and (<= (* skoXC1 (* skoXC1 (/ (- 1.) 6.))) 1.) (and (<= (* skoXC1 (* skoXC1 (+ (/ (- 1.) 2.) (* skoXC1 (* skoXC1 (/ (- 1.) 6.)))))) 0.) (and (<= (* skoXC1 skoXC1) 2.) (and (<= (* skoXC1 (* skoXC1 (* skoXC1 (* skoXC1 (/ (- 2.) 3.))))) 0.) (and (<= (* skoXC1 (+ (- 1.) (* skoXC1 (* skoXC1 (/ (- 1.) 6.))))) 0.) (and (<= (* skoXC1 (* skoXC1 (/ 1. 3.))) 1.) (and (<= (* skoXC1 (* skoXC1 (+ 256. (* skoXC1 (* skoXC1 (+ (- 160.) (* skoXC1 (* skoXC1 (+ 32. (* skoXC1 (* skoXC1 (- 1.)))))))))))) 128.) (and (<= (* skoXC1 (* skoXC1 (* skoXC1 (* skoXC1 (+ (/ (- 80.) 3.) (* skoXC1 (* skoXC1 (+ (/ 128. 3.) (* skoXC1 (* skoXC1 (+ (/ (- 55.) 3.) (* skoXC1 (* skoXC1 (/ 5. 3.)))))))))))))) 0.) (and (<= (* skoXC1 (+ (- 1.) (* skoXC1 (* skoXC1 (+ (/ 1. 3.) (* skoXC1 (* skoXC1 (+ (/ 3. 20.) (* skoXC1 (* skoXC1 (/ 5. 56.))))))))))) 0.) (and (<= (* skoXC1 (* skoXC1 (+ (/ (- 1.) 6.) (* skoXC1 (* skoXC1 (+ (/ (- 3.) 40.) (* skoXC1 (* skoXC1 (/ (- 5.) 112.))))))))) 1.) (and (<= (* skoXC1 (* skoXC1 (+ (/ (- 1.) 2.) (* skoXC1 (* skoXC1 (+ (/ 7. 120.) (* skoXC1 (* skoXC1 (+ (/ 33. 560.) (* skoXC1 (* skoXC1 (/ (- 5.) 112.)))))))))))) 0.) (and (<= (* skoXC1 (* skoXC1 (* skoXC1 (* skoXC1 (+ (/ (- 13.) 60.) (* skoXC1 (* skoXC1 (+ (/ (- 9.) 280.) (* skoXC1 (* skoXC1 (/ (- 5.) 28.))))))))))) 0.) (and (<= (* skoXC1 (* skoXC1 (* skoXC1 (* skoXC1 (+ (/ (- 17.) 120.) (* skoXC1 (* skoXC1 (+ (/ (- 27.) 280.) (* skoXC1 (* skoXC1 (/ 5. 224.))))))))))) 0.) (and (<= (* skoXC1 (* skoXC1 (+ (/ 1. 3.) (* skoXC1 (* skoXC1 (+ (/ 3. 20.) (* skoXC1 (* skoXC1 (/ 5. 56.))))))))) 1.) (and (<= (* skoXC1 (* skoXC1 (* skoXC1 (* skoXC1 (+ (/ 32. 15.) (* skoXC1 (* skoXC1 (+ (/ (- 272.) 105.) (* skoXC1 (* skoXC1 (+ (/ (- 1163.) 105.) (* skoXC1 (* skoXC1 (+ (/ 1753. 105.) (* skoXC1 (* skoXC1 (+ (/ (- 169.) 28.) (* skoXC1 (* skoXC1 (/ 25. 56.)))))))))))))))))))) 0.) (and (> (* skoXC1 (* skoXC1 (+ (/ 1. 6.) (* skoXC1 (* skoXC1 (+ (/ 3. 40.) (* skoXC1 (* skoXC1 (/ 5. 112.))))))))) (- 1.)) (<= (* skoXC1 (+ (- 1.) (* skoXC1 (* skoXC1 (+ (/ (- 1.) 6.) (* skoXC1 (* skoXC1 (+ (/ (- 3.) 40.) (* skoXC1 (* skoXC1 (/ (- 5.) 112.))))))))))) 0.)))))))))))))))))))))))))))))))))))))))))))

% In GRF format:
(sequent " MetiTarski formula " (antecedent (<= (* skoXC1 (+ (- 1.) (* skoXC1 (* skoXC1 (+ (/ (- 1.) 6.) (* skoXC1 (* skoXC1 (+ (/ (- 3.) 40.) (* skoXC1 (* skoXC1 (+ (/ (- 5.) 112.) (* skoXC1 (* skoXC1 (+ (/ (- 35.) 1152.) (* skoXC1 (* skoXC1 (/ (- 63.) 2816.))))))))))))))))) 0.) (<= (* skoXC1 skoXC1) 1.) (<= (* skoXC1 (* skoXC1 (+ (/ 1. 3.) (* skoXC1 (* skoXC1 (+ (/ 3. 20.) (* skoXC1 (* skoXC1 (+ (/ 5. 56.) (* skoXC1 (* skoXC1 (+ (/ 35. 576.) (* skoXC1 (* skoXC1 (/ 63. 1408.))))))))))))))) 1.) (<= (* skoXC1 (* skoXC1 (* skoXC1 (* skoXC1 (+ (/ (- 13.) 60.) (* skoXC1 (* skoXC1 (+ (/ (- 9.) 280.) (* skoXC1 (* skoXC1 (+ (/ 5. 1344.) (* skoXC1 (* skoXC1 (+ (/ 161. 12672.) (* skoXC1 (* skoXC1 (/ (- 63.) 704.))))))))))))))))) 0.) (<= (* skoXC1 (* skoXC1 (+ (/ (- 1.) 2.) (* skoXC1 (* skoXC1 (+ (/ 7. 120.) (* skoXC1 (* skoXC1 (+ (/ 33. 560.) (* skoXC1 (* skoXC1 (+ (/ 125. 2688.) (* skoXC1 (* skoXC1 (+ (/ 931. 25344.) (* skoXC1 (* skoXC1 (/ (- 63.) 2816.)))))))))))))))))) 0.) (<= (* skoXC1 (* skoXC1 (+ (/ (- 1.) 6.) (* skoXC1 (* skoXC1 (+ (/ (- 3.) 40.) (* skoXC1 (* skoXC1 (+ (/ (- 5.) 112.) (* skoXC1 (* skoXC1 (+ (/ (- 35.) 1152.) (* skoXC1 (* skoXC1 (/ (- 63.) 2816.))))))))))))))) 1.) (<= (* skoXC1 (+ (- 1.) (* skoXC1 (* skoXC1 (+ (/ 1. 3.) (* skoXC1 (* skoXC1 (+ (/ 3. 20.) (* skoXC1 (* skoXC1 (+ (/ 5. 56.) (* skoXC1 (* skoXC1 (+ (/ 35. 576.) (* skoXC1 (* skoXC1 (/ 63. 1408.))))))))))))))))) 0.) (<= (* skoXC1 (+ (- 1.) (* skoXC1 (* skoXC1 (+ (/ (- 1.) 6.) (* skoXC1 (* skoXC1 (/ (- 3.) 40.)))))))) 0.) (> (* skoXC1 (* skoXC1 (+ (/ 1. 6.) (* skoXC1 (* skoXC1 (/ 3. 40.)))))) (- 1.)) (<= (* skoXC1 (* skoXC1 (* skoXC1 (* skoXC1 (+ (/ 32. 15.) (* skoXC1 (* skoXC1 (+ (/ (- 296.) 15.) (* skoXC1 (* skoXC1 (+ (/ 391. 15.) (* skoXC1 (* skoXC1 (+ (/ (- 146.) 15.) (* skoXC1 (* skoXC1 (/ 3. 4.))))))))))))))))) 0.) (<= (* skoXC1 (* skoXC1 (+ (/ 1. 3.) (* skoXC1 (* skoXC1 (/ 3. 20.)))))) 1.) (<= (* skoXC1 (* skoXC1 (* skoXC1 (* skoXC1 (+ (/ (- 17.) 120.) (* skoXC1 (* skoXC1 (/ 3. 80.)))))))) 0.) (<= (* skoXC1 (* skoXC1 (* skoXC1 (* skoXC1 (+ (/ (- 13.) 60.) (* skoXC1 (* skoXC1 (/ (- 3.) 10.)))))))) 0.) (<= (* skoXC1 (* skoXC1 (+ (/ (- 1.) 2.) (* skoXC1 (* skoXC1 (+ (/ 7. 120.) (* skoXC1 (* skoXC1 (/ (- 3.) 40.))))))))) 0.) (<= (* skoXC1 (* skoXC1 (+ (/ (- 1.) 6.) (* skoXC1 (* skoXC1 (/ (- 3.) 40.)))))) 1.) (<= (* skoXC1 (+ (- 1.) (* skoXC1 (* skoXC1 (+ (/ 1. 3.) (* skoXC1 (* skoXC1 (/ 3. 20.)))))))) 0.) (> (* skoXC1 skoXC1) 0.) (<= (* skoXC1 (* skoXC1 (+ 80. (* skoXC1 (* skoXC1 (+ (- 40.) (* skoXC1 (* skoXC1 (+ 6. (* skoXC1 (* skoXC1 (/ (- 1.) 8.)))))))))))) 48.) (> (* skoXC1 (* skoXC1 (+ (- 80.) (* skoXC1 (* skoXC1 (+ 40. (* skoXC1 (* skoXC1 (+ (- 6.) (* skoXC1 (* skoXC1 (/ 1. 8.)))))))))))) (- 48.)) (<= (* skoXC1 (* skoXC1 (+ 24. (* skoXC1 (* skoXC1 (+ (- 10.) (* skoXC1 skoXC1))))))) 16.) (<= (* skoXC1 (* skoXC1 (/ 1. 2.))) 3.) (> (* skoXC1 (* skoXC1 (/ (- 1.) 2.))) (- 3.)) (> skoXC1 0.) (> (/ 7. 8.) skoXC1) (<= (* skoXC1 (+ (- 1.) (* skoXC1 (* skoXC1 (/ 1. 3.))))) 0.) (<= (* skoXC1 (* skoXC1 (/ (- 1.) 6.))) 1.) (<= (* skoXC1 (* skoXC1 (+ (/ (- 1.) 2.) (* skoXC1 (* skoXC1 (/ (- 1.) 6.)))))) 0.) (<= (* skoXC1 skoXC1) 2.) (<= (* skoXC1 (* skoXC1 (* skoXC1 (* skoXC1 (/ (- 2.) 3.))))) 0.) (<= (* skoXC1 (+ (- 1.) (* skoXC1 (* skoXC1 (/ (- 1.) 6.))))) 0.) (<= (* skoXC1 (* skoXC1 (/ 1. 3.))) 1.) (<= (* skoXC1 (* skoXC1 (+ 256. (* skoXC1 (* skoXC1 (+ (- 160.) (* skoXC1 (* skoXC1 (+ 32. (* skoXC1 (* skoXC1 (- 1.)))))))))))) 128.) (<= (* skoXC1 (* skoXC1 (* skoXC1 (* skoXC1 (+ (/ (- 80.) 3.) (* skoXC1 (* skoXC1 (+ (/ 128. 3.) (* skoXC1 (* skoXC1 (+ (/ (- 55.) 3.) (* skoXC1 (* skoXC1 (/ 5. 3.)))))))))))))) 0.) (<= (* skoXC1 (+ (- 1.) (* skoXC1 (* skoXC1 (+ (/ 1. 3.) (* skoXC1 (* skoXC1 (+ (/ 3. 20.) (* skoXC1 (* skoXC1 (/ 5. 56.))))))))))) 0.) (<= (* skoXC1 (* skoXC1 (+ (/ (- 1.) 6.) (* skoXC1 (* skoXC1 (+ (/ (- 3.) 40.) (* skoXC1 (* skoXC1 (/ (- 5.) 112.))))))))) 1.) (<= (* skoXC1 (* skoXC1 (+ (/ (- 1.) 2.) (* skoXC1 (* skoXC1 (+ (/ 7. 120.) (* skoXC1 (* skoXC1 (+ (/ 33. 560.) (* skoXC1 (* skoXC1 (/ (- 5.) 112.)))))))))))) 0.) (<= (* skoXC1 (* skoXC1 (* skoXC1 (* skoXC1 (+ (/ (- 13.) 60.) (* skoXC1 (* skoXC1 (+ (/ (- 9.) 280.) (* skoXC1 (* skoXC1 (/ (- 5.) 28.))))))))))) 0.) (<= (* skoXC1 (* skoXC1 (* skoXC1 (* skoXC1 (+ (/ (- 17.) 120.) (* skoXC1 (* skoXC1 (+ (/ (- 27.) 280.) (* skoXC1 (* skoXC1 (/ 5. 224.))))))))))) 0.) (<= (* skoXC1 (* skoXC1 (+ (/ 1. 3.) (* skoXC1 (* skoXC1 (+ (/ 3. 20.) (* skoXC1 (* skoXC1 (/ 5. 56.))))))))) 1.) (<= (* skoXC1 (* skoXC1 (* skoXC1 (* skoXC1 (+ (/ 32. 15.) (* skoXC1 (* skoXC1 (+ (/ (- 272.) 105.) (* skoXC1 (* skoXC1 (+ (/ (- 1163.) 105.) (* skoXC1 (* skoXC1 (+ (/ 1753. 105.) (* skoXC1 (* skoXC1 (+ (/ (- 169.) 28.) (* skoXC1 (* skoXC1 (/ 25. 56.)))))))))))))))))))) 0.) (> (* skoXC1 (* skoXC1 (+ (/ 1. 6.) (* skoXC1 (* skoXC1 (+ (/ 3. 40.) (* skoXC1 (* skoXC1 (/ 5. 112.))))))))) (- 1.))) (succedent (> (* skoXC1 (+ (- 1.) (* skoXC1 (* skoXC1 (+ (/ (- 1.) 6.) (* skoXC1 (* skoXC1 (+ (/ (- 3.) 40.) (* skoXC1 (* skoXC1 (/ (- 5.) 112.))))))))))) 0.)))
-----[end problem]-----

-----[begin problem]-----
% In Mathematica format:
Timing[Resolve[Exists[{skoXC1}, And[skoXC1*(-1+skoXC1*skoXC1*((-1/6)+skoXC1*skoXC1*((-3/40)+skoXC1*skoXC1*((-5/112)+skoXC1*skoXC1*((-35/1152)+skoXC1*skoXC1*(-63/2816))))))<=0,skoXC1*skoXC1*((1/6)+skoXC1*skoXC1*((3/40)+skoXC1*skoXC1*((5/112)+skoXC1*skoXC1*((35/1152)+skoXC1*skoXC1*(63/2816)))))>-1,skoXC1*skoXC1*((1/3)+skoXC1*skoXC1*((3/20)+skoXC1*skoXC1*((5/56)+skoXC1*skoXC1*((35/576)+skoXC1*skoXC1*(63/1408)))))<=1,skoXC1*skoXC1*skoXC1*skoXC1*((-13/60)+skoXC1*skoXC1*((-9/280)+skoXC1*skoXC1*((5/1344)+skoXC1*skoXC1*((161/12672)+skoXC1*skoXC1*(-63/704)))))<=0,skoXC1*skoXC1*((-1/2)+skoXC1*skoXC1*((7/120)+skoXC1*skoXC1*((33/560)+skoXC1*skoXC1*((125/2688)+skoXC1*skoXC1*((931/25344)+skoXC1*skoXC1*(-63/2816))))))<=0,skoXC1*skoXC1*((-1/6)+skoXC1*skoXC1*((-3/40)+skoXC1*skoXC1*((-5/112)+skoXC1*skoXC1*((-35/1152)+skoXC1*skoXC1*(-63/2816)))))<=1,skoXC1*(-1+skoXC1*skoXC1*((1/3)+skoXC1*skoXC1*((3/20)+skoXC1*skoXC1*((5/56)+skoXC1*skoXC1*((35/576)+skoXC1*skoXC1*(63/1408))))))<=0,skoXC1*(-1+skoXC1*skoXC1*((-1/6)+skoXC1*skoXC1*(-3/40)))<=0,skoXC1*skoXC1*((1/6)+skoXC1*skoXC1*(3/40))>-1,skoXC1*skoXC1*skoXC1*skoXC1*((32/15)+skoXC1*skoXC1*((-296/15)+skoXC1*skoXC1*((391/15)+skoXC1*skoXC1*((-146/15)+skoXC1*skoXC1*(3/4)))))<=0,skoXC1*skoXC1*((1/3)+skoXC1*skoXC1*(3/20))<=1,skoXC1*skoXC1*skoXC1*skoXC1*((-17/120)+skoXC1*skoXC1*(3/80))<=0,skoXC1*skoXC1*skoXC1*skoXC1*((-13/60)+skoXC1*skoXC1*(-3/10))<=0,skoXC1*skoXC1*((-1/2)+skoXC1*skoXC1*((7/120)+skoXC1*skoXC1*(-3/40)))<=0,skoXC1*skoXC1*((-1/6)+skoXC1*skoXC1*(-3/40))<=1,skoXC1*(-1+skoXC1*skoXC1*((1/3)+skoXC1*skoXC1*(3/20)))<=0,skoXC1*skoXC1>0,skoXC1*skoXC1*(80+skoXC1*skoXC1*(-40+skoXC1*skoXC1*(6+skoXC1*skoXC1*(-1/8))))<=48,skoXC1*skoXC1*(-80+skoXC1*skoXC1*(40+skoXC1*skoXC1*(-6+skoXC1*skoXC1*(1/8))))>-48,skoXC1*skoXC1*(24+skoXC1*skoXC1*(-10+skoXC1*skoXC1))<=16,skoXC1*skoXC1*(1/2)<=3,skoXC1*skoXC1*(-1/2)>-3,skoXC1>0,(7/8)>skoXC1,skoXC1*(-1+skoXC1*skoXC1*(1/3))<=0,skoXC1*skoXC1*(-1/6)<=1,skoXC1*skoXC1*((-1/2)+skoXC1*skoXC1*(-1/6))<=0,skoXC1*skoXC1<=2,skoXC1*skoXC1*skoXC1*skoXC1*(-2/3)<=0,skoXC1*(-1+skoXC1*skoXC1*(-1/6))<=0,skoXC1*skoXC1*(1/3)<=1,skoXC1*skoXC1*(256+skoXC1*skoXC1*(-160+skoXC1*skoXC1*(32+skoXC1*skoXC1*-1)))<=128,skoXC1*skoXC1*skoXC1*skoXC1*((-80/3)+skoXC1*skoXC1*((128/3)+skoXC1*skoXC1*((-55/3)+skoXC1*skoXC1*(5/3))))<=0,skoXC1*(-1+skoXC1*skoXC1*((1/3)+skoXC1*skoXC1*((3/20)+skoXC1*skoXC1*(5/56))))<=0,skoXC1*skoXC1*((-1/6)+skoXC1*skoXC1*((-3/40)+skoXC1*skoXC1*(-5/112)))<=1,skoXC1*skoXC1*((-1/2)+skoXC1*skoXC1*((7/120)+skoXC1*skoXC1*((33/560)+skoXC1*skoXC1*(-5/112))))<=0,skoXC1*skoXC1*skoXC1*skoXC1*((-13/60)+skoXC1*skoXC1*((-9/280)+skoXC1*skoXC1*(-5/28)))<=0,skoXC1*skoXC1*skoXC1*skoXC1*((-17/120)+skoXC1*skoXC1*((-27/280)+skoXC1*skoXC1*(5/224)))<=0,skoXC1*skoXC1*((1/3)+skoXC1*skoXC1*((3/20)+skoXC1*skoXC1*(5/56)))<=1,skoXC1*skoXC1*skoXC1*skoXC1*((32/15)+skoXC1*skoXC1*((-272/105)+skoXC1*skoXC1*((-1163/105)+skoXC1*skoXC1*((1753/105)+skoXC1*skoXC1*((-169/28)+skoXC1*skoXC1*(25/56))))))<=0,skoXC1*skoXC1*((1/6)+skoXC1*skoXC1*((3/40)+skoXC1*skoXC1*(5/112)))>-1,skoXC1*(-1+skoXC1*skoXC1*((-1/6)+skoXC1*skoXC1*((-3/40)+skoXC1*skoXC1*(-5/112))))<=0]], Reals]]

% In QepcadB format:
(E skoXC1) [[(skoXC1 (-1+(skoXC1 skoXC1 (-1/6+(skoXC1 skoXC1 (-3/40+(skoXC1 skoXC1 (-5/112+(skoXC1 skoXC1 (-35/1152+(skoXC1 skoXC1 (-63/2816))))))))))))<=0]/\[[-1<(skoXC1 skoXC1 (1/6+(skoXC1 skoXC1 (3/40+(skoXC1 skoXC1 (5/112+(skoXC1 skoXC1 (35/1152+(skoXC1 skoXC1 (63/2816))))))))))]/\[[(skoXC1 skoXC1 (1/3+(skoXC1 skoXC1 (3/20+(skoXC1 skoXC1 (5/56+(skoXC1 skoXC1 (35/576+(skoXC1 skoXC1 (63/1408))))))))))<=1]/\[[(skoXC1 skoXC1 skoXC1 skoXC1 (-13/60+(skoXC1 skoXC1 (-9/280+(skoXC1 skoXC1 (5/1344+(skoXC1 skoXC1 (161/12672+(skoXC1 skoXC1 (-63/704))))))))))<=0]/\[[(skoXC1 skoXC1 (-1/2+(skoXC1 skoXC1 (7/120+(skoXC1 skoXC1 (33/560+(skoXC1 skoXC1 (125/2688+(skoXC1 skoXC1 (931/25344+(skoXC1 skoXC1 (-63/2816))))))))))))<=0]/\[[(skoXC1 skoXC1 (-1/6+(skoXC1 skoXC1 (-3/40+(skoXC1 skoXC1 (-5/112+(skoXC1 skoXC1 (-35/1152+(skoXC1 skoXC1 (-63/2816))))))))))<=1]/\[[(skoXC1 (-1+(skoXC1 skoXC1 (1/3+(skoXC1 skoXC1 (3/20+(skoXC1 skoXC1 (5/56+(skoXC1 skoXC1 (35/576+(skoXC1 skoXC1 (63/1408))))))))))))<=0]/\[[(skoXC1 (-1+(skoXC1 skoXC1 (-1/6+(skoXC1 skoXC1 (-3/40))))))<=0]/\[[-1<(skoXC1 skoXC1 (1/6+(skoXC1 skoXC1 (3/40))))]/\[[(skoXC1 skoXC1 skoXC1 skoXC1 (32/15+(skoXC1 skoXC1 (-296/15+(skoXC1 skoXC1 (391/15+(skoXC1 skoXC1 (-146/15+(skoXC1 skoXC1 (3/4))))))))))<=0]/\[[(skoXC1 skoXC1 (1/3+(skoXC1 skoXC1 (3/20))))<=1]/\[[(skoXC1 skoXC1 skoXC1 skoXC1 (-17/120+(skoXC1 skoXC1 (3/80))))<=0]/\[[(skoXC1 skoXC1 skoXC1 skoXC1 (-13/60+(skoXC1 skoXC1 (-3/10))))<=0]/\[[(skoXC1 skoXC1 (-1/2+(skoXC1 skoXC1 (7/120+(skoXC1 skoXC1 (-3/40))))))<=0]/\[[(skoXC1 skoXC1 (-1/6+(skoXC1 skoXC1 (-3/40))))<=1]/\[[(skoXC1 (-1+(skoXC1 skoXC1 (1/3+(skoXC1 skoXC1 (3/20))))))<=0]/\[[0<(skoXC1 skoXC1)]/\[[(skoXC1 skoXC1 (80+(skoXC1 skoXC1 (-40+(skoXC1 skoXC1 (6+(skoXC1 skoXC1 (-1/8))))))))<=48]/\[[-48<(skoXC1 skoXC1 (-80+(skoXC1 skoXC1 (40+(skoXC1 skoXC1 (-6+(skoXC1 skoXC1 (1/8))))))))]/\[[(skoXC1 skoXC1 (24+(skoXC1 skoXC1 (-10+(skoXC1 skoXC1)))))<=16]/\[[(skoXC1 skoXC1 (1/2))<=3]/\[[-3<(skoXC1 skoXC1 (-1/2))]/\[[0<skoXC1]/\[[skoXC1<7/8]/\[[(skoXC1 (-1+(skoXC1 skoXC1 (1/3))))<=0]/\[[(skoXC1 skoXC1 (-1/6))<=1]/\[[(skoXC1 skoXC1 (-1/2+(skoXC1 skoXC1 (-1/6))))<=0]/\[[(skoXC1 skoXC1)<=2]/\[[(skoXC1 skoXC1 skoXC1 skoXC1 (-2/3))<=0]/\[[(skoXC1 (-1+(skoXC1 skoXC1 (-1/6))))<=0]/\[[(skoXC1 skoXC1 (1/3))<=1]/\[[(skoXC1 skoXC1 (256+(skoXC1 skoXC1 (-160+(skoXC1 skoXC1 (32+(skoXC1 skoXC1 (-1))))))))<=128]/\[[(skoXC1 skoXC1 skoXC1 skoXC1 (-80/3+(skoXC1 skoXC1 (128/3+(skoXC1 skoXC1 (-55/3+(skoXC1 skoXC1 (5/3))))))))<=0]/\[[(skoXC1 (-1+(skoXC1 skoXC1 (1/3+(skoXC1 skoXC1 (3/20+(skoXC1 skoXC1 (5/56))))))))<=0]/\[[(skoXC1 skoXC1 (-1/6+(skoXC1 skoXC1 (-3/40+(skoXC1 skoXC1 (-5/112))))))<=1]/\[[(skoXC1 skoXC1 (-1/2+(skoXC1 skoXC1 (7/120+(skoXC1 skoXC1 (33/560+(skoXC1 skoXC1 (-5/112))))))))<=0]/\[[(skoXC1 skoXC1 skoXC1 skoXC1 (-13/60+(skoXC1 skoXC1 (-9/280+(skoXC1 skoXC1 (-5/28))))))<=0]/\[[(skoXC1 skoXC1 skoXC1 skoXC1 (-17/120+(skoXC1 skoXC1 (-27/280+(skoXC1 skoXC1 (5/224))))))<=0]/\[[(skoXC1 skoXC1 (1/3+(skoXC1 skoXC1 (3/20+(skoXC1 skoXC1 (5/56))))))<=1]/\[[(skoXC1 skoXC1 skoXC1 skoXC1 (32/15+(skoXC1 skoXC1 (-272/105+(skoXC1 skoXC1 (-1163/105+(skoXC1 skoXC1 (1753/105+(skoXC1 skoXC1 (-169/28+(skoXC1 skoXC1 (25/56))))))))))))<=0]/\[[-1<(skoXC1 skoXC1 (1/6+(skoXC1 skoXC1 (3/40+(skoXC1 skoXC1 (5/112))))))]/\[(skoXC1 (-1+(skoXC1 skoXC1 (-1/6+(skoXC1 skoXC1 (-3/40+(skoXC1 skoXC1 (-5/112))))))))<=0]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]].

% In SMTLib2 format:
(declare-fun skoXC1 () Real) (assert (and (<= (* skoXC1 (+ (- 1.) (* skoXC1 (* skoXC1 (+ (/ (- 1.) 6.) (* skoXC1 (* skoXC1 (+ (/ (- 3.) 40.) (* skoXC1 (* skoXC1 (+ (/ (- 5.) 112.) (* skoXC1 (* skoXC1 (+ (/ (- 35.) 1152.) (* skoXC1 (* skoXC1 (/ (- 63.) 2816.))))))))))))))))) 0.) (and (> (* skoXC1 (* skoXC1 (+ (/ 1. 6.) (* skoXC1 (* skoXC1 (+ (/ 3. 40.) (* skoXC1 (* skoXC1 (+ (/ 5. 112.) (* skoXC1 (* skoXC1 (+ (/ 35. 1152.) (* skoXC1 (* skoXC1 (/ 63. 2816.))))))))))))))) (- 1.)) (and (<= (* skoXC1 (* skoXC1 (+ (/ 1. 3.) (* skoXC1 (* skoXC1 (+ (/ 3. 20.) (* skoXC1 (* skoXC1 (+ (/ 5. 56.) (* skoXC1 (* skoXC1 (+ (/ 35. 576.) (* skoXC1 (* skoXC1 (/ 63. 1408.))))))))))))))) 1.) (and (<= (* skoXC1 (* skoXC1 (* skoXC1 (* skoXC1 (+ (/ (- 13.) 60.) (* skoXC1 (* skoXC1 (+ (/ (- 9.) 280.) (* skoXC1 (* skoXC1 (+ (/ 5. 1344.) (* skoXC1 (* skoXC1 (+ (/ 161. 12672.) (* skoXC1 (* skoXC1 (/ (- 63.) 704.))))))))))))))))) 0.) (and (<= (* skoXC1 (* skoXC1 (+ (/ (- 1.) 2.) (* skoXC1 (* skoXC1 (+ (/ 7. 120.) (* skoXC1 (* skoXC1 (+ (/ 33. 560.) (* skoXC1 (* skoXC1 (+ (/ 125. 2688.) (* skoXC1 (* skoXC1 (+ (/ 931. 25344.) (* skoXC1 (* skoXC1 (/ (- 63.) 2816.)))))))))))))))))) 0.) (and (<= (* skoXC1 (* skoXC1 (+ (/ (- 1.) 6.) (* skoXC1 (* skoXC1 (+ (/ (- 3.) 40.) (* skoXC1 (* skoXC1 (+ (/ (- 5.) 112.) (* skoXC1 (* skoXC1 (+ (/ (- 35.) 1152.) (* skoXC1 (* skoXC1 (/ (- 63.) 2816.))))))))))))))) 1.) (and (<= (* skoXC1 (+ (- 1.) (* skoXC1 (* skoXC1 (+ (/ 1. 3.) (* skoXC1 (* skoXC1 (+ (/ 3. 20.) (* skoXC1 (* skoXC1 (+ (/ 5. 56.) (* skoXC1 (* skoXC1 (+ (/ 35. 576.) (* skoXC1 (* skoXC1 (/ 63. 1408.))))))))))))))))) 0.) (and (<= (* skoXC1 (+ (- 1.) (* skoXC1 (* skoXC1 (+ (/ (- 1.) 6.) (* skoXC1 (* skoXC1 (/ (- 3.) 40.)))))))) 0.) (and (> (* skoXC1 (* skoXC1 (+ (/ 1. 6.) (* skoXC1 (* skoXC1 (/ 3. 40.)))))) (- 1.)) (and (<= (* skoXC1 (* skoXC1 (* skoXC1 (* skoXC1 (+ (/ 32. 15.) (* skoXC1 (* skoXC1 (+ (/ (- 296.) 15.) (* skoXC1 (* skoXC1 (+ (/ 391. 15.) (* skoXC1 (* skoXC1 (+ (/ (- 146.) 15.) (* skoXC1 (* skoXC1 (/ 3. 4.))))))))))))))))) 0.) (and (<= (* skoXC1 (* skoXC1 (+ (/ 1. 3.) (* skoXC1 (* skoXC1 (/ 3. 20.)))))) 1.) (and (<= (* skoXC1 (* skoXC1 (* skoXC1 (* skoXC1 (+ (/ (- 17.) 120.) (* skoXC1 (* skoXC1 (/ 3. 80.)))))))) 0.) (and (<= (* skoXC1 (* skoXC1 (* skoXC1 (* skoXC1 (+ (/ (- 13.) 60.) (* skoXC1 (* skoXC1 (/ (- 3.) 10.)))))))) 0.) (and (<= (* skoXC1 (* skoXC1 (+ (/ (- 1.) 2.) (* skoXC1 (* skoXC1 (+ (/ 7. 120.) (* skoXC1 (* skoXC1 (/ (- 3.) 40.))))))))) 0.) (and (<= (* skoXC1 (* skoXC1 (+ (/ (- 1.) 6.) (* skoXC1 (* skoXC1 (/ (- 3.) 40.)))))) 1.) (and (<= (* skoXC1 (+ (- 1.) (* skoXC1 (* skoXC1 (+ (/ 1. 3.) (* skoXC1 (* skoXC1 (/ 3. 20.)))))))) 0.) (and (> (* skoXC1 skoXC1) 0.) (and (<= (* skoXC1 (* skoXC1 (+ 80. (* skoXC1 (* skoXC1 (+ (- 40.) (* skoXC1 (* skoXC1 (+ 6. (* skoXC1 (* skoXC1 (/ (- 1.) 8.)))))))))))) 48.) (and (> (* skoXC1 (* skoXC1 (+ (- 80.) (* skoXC1 (* skoXC1 (+ 40. (* skoXC1 (* skoXC1 (+ (- 6.) (* skoXC1 (* skoXC1 (/ 1. 8.)))))))))))) (- 48.)) (and (<= (* skoXC1 (* skoXC1 (+ 24. (* skoXC1 (* skoXC1 (+ (- 10.) (* skoXC1 skoXC1))))))) 16.) (and (<= (* skoXC1 (* skoXC1 (/ 1. 2.))) 3.) (and (> (* skoXC1 (* skoXC1 (/ (- 1.) 2.))) (- 3.)) (and (> skoXC1 0.) (and (> (/ 7. 8.) skoXC1) (and (<= (* skoXC1 (+ (- 1.) (* skoXC1 (* skoXC1 (/ 1. 3.))))) 0.) (and (<= (* skoXC1 (* skoXC1 (/ (- 1.) 6.))) 1.) (and (<= (* skoXC1 (* skoXC1 (+ (/ (- 1.) 2.) (* skoXC1 (* skoXC1 (/ (- 1.) 6.)))))) 0.) (and (<= (* skoXC1 skoXC1) 2.) (and (<= (* skoXC1 (* skoXC1 (* skoXC1 (* skoXC1 (/ (- 2.) 3.))))) 0.) (and (<= (* skoXC1 (+ (- 1.) (* skoXC1 (* skoXC1 (/ (- 1.) 6.))))) 0.) (and (<= (* skoXC1 (* skoXC1 (/ 1. 3.))) 1.) (and (<= (* skoXC1 (* skoXC1 (+ 256. (* skoXC1 (* skoXC1 (+ (- 160.) (* skoXC1 (* skoXC1 (+ 32. (* skoXC1 (* skoXC1 (- 1.)))))))))))) 128.) (and (<= (* skoXC1 (* skoXC1 (* skoXC1 (* skoXC1 (+ (/ (- 80.) 3.) (* skoXC1 (* skoXC1 (+ (/ 128. 3.) (* skoXC1 (* skoXC1 (+ (/ (- 55.) 3.) (* skoXC1 (* skoXC1 (/ 5. 3.)))))))))))))) 0.) (and (<= (* skoXC1 (+ (- 1.) (* skoXC1 (* skoXC1 (+ (/ 1. 3.) (* skoXC1 (* skoXC1 (+ (/ 3. 20.) (* skoXC1 (* skoXC1 (/ 5. 56.))))))))))) 0.) (and (<= (* skoXC1 (* skoXC1 (+ (/ (- 1.) 6.) (* skoXC1 (* skoXC1 (+ (/ (- 3.) 40.) (* skoXC1 (* skoXC1 (/ (- 5.) 112.))))))))) 1.) (and (<= (* skoXC1 (* skoXC1 (+ (/ (- 1.) 2.) (* skoXC1 (* skoXC1 (+ (/ 7. 120.) (* skoXC1 (* skoXC1 (+ (/ 33. 560.) (* skoXC1 (* skoXC1 (/ (- 5.) 112.)))))))))))) 0.) (and (<= (* skoXC1 (* skoXC1 (* skoXC1 (* skoXC1 (+ (/ (- 13.) 60.) (* skoXC1 (* skoXC1 (+ (/ (- 9.) 280.) (* skoXC1 (* skoXC1 (/ (- 5.) 28.))))))))))) 0.) (and (<= (* skoXC1 (* skoXC1 (* skoXC1 (* skoXC1 (+ (/ (- 17.) 120.) (* skoXC1 (* skoXC1 (+ (/ (- 27.) 280.) (* skoXC1 (* skoXC1 (/ 5. 224.))))))))))) 0.) (and (<= (* skoXC1 (* skoXC1 (+ (/ 1. 3.) (* skoXC1 (* skoXC1 (+ (/ 3. 20.) (* skoXC1 (* skoXC1 (/ 5. 56.))))))))) 1.) (and (<= (* skoXC1 (* skoXC1 (* skoXC1 (* skoXC1 (+ (/ 32. 15.) (* skoXC1 (* skoXC1 (+ (/ (- 272.) 105.) (* skoXC1 (* skoXC1 (+ (/ (- 1163.) 105.) (* skoXC1 (* skoXC1 (+ (/ 1753. 105.) (* skoXC1 (* skoXC1 (+ (/ (- 169.) 28.) (* skoXC1 (* skoXC1 (/ 25. 56.)))))))))))))))))))) 0.) (and (> (* skoXC1 (* skoXC1 (+ (/ 1. 6.) (* skoXC1 (* skoXC1 (+ (/ 3. 40.) (* skoXC1 (* skoXC1 (/ 5. 112.))))))))) (- 1.)) (<= (* skoXC1 (+ (- 1.) (* skoXC1 (* skoXC1 (+ (/ (- 1.) 6.) (* skoXC1 (* skoXC1 (+ (/ (- 3.) 40.) (* skoXC1 (* skoXC1 (/ (- 5.) 112.))))))))))) 0.)))))))))))))))))))))))))))))))))))))))))))

% In GRF format:
(sequent " MetiTarski formula " (antecedent (<= (* skoXC1 (+ (- 1.) (* skoXC1 (* skoXC1 (+ (/ (- 1.) 6.) (* skoXC1 (* skoXC1 (+ (/ (- 3.) 40.) (* skoXC1 (* skoXC1 (+ (/ (- 5.) 112.) (* skoXC1 (* skoXC1 (+ (/ (- 35.) 1152.) (* skoXC1 (* skoXC1 (/ (- 63.) 2816.))))))))))))))))) 0.) (> (* skoXC1 (* skoXC1 (+ (/ 1. 6.) (* skoXC1 (* skoXC1 (+ (/ 3. 40.) (* skoXC1 (* skoXC1 (+ (/ 5. 112.) (* skoXC1 (* skoXC1 (+ (/ 35. 1152.) (* skoXC1 (* skoXC1 (/ 63. 2816.))))))))))))))) (- 1.)) (<= (* skoXC1 (* skoXC1 (+ (/ 1. 3.) (* skoXC1 (* skoXC1 (+ (/ 3. 20.) (* skoXC1 (* skoXC1 (+ (/ 5. 56.) (* skoXC1 (* skoXC1 (+ (/ 35. 576.) (* skoXC1 (* skoXC1 (/ 63. 1408.))))))))))))))) 1.) (<= (* skoXC1 (* skoXC1 (* skoXC1 (* skoXC1 (+ (/ (- 13.) 60.) (* skoXC1 (* skoXC1 (+ (/ (- 9.) 280.) (* skoXC1 (* skoXC1 (+ (/ 5. 1344.) (* skoXC1 (* skoXC1 (+ (/ 161. 12672.) (* skoXC1 (* skoXC1 (/ (- 63.) 704.))))))))))))))))) 0.) (<= (* skoXC1 (* skoXC1 (+ (/ (- 1.) 2.) (* skoXC1 (* skoXC1 (+ (/ 7. 120.) (* skoXC1 (* skoXC1 (+ (/ 33. 560.) (* skoXC1 (* skoXC1 (+ (/ 125. 2688.) (* skoXC1 (* skoXC1 (+ (/ 931. 25344.) (* skoXC1 (* skoXC1 (/ (- 63.) 2816.)))))))))))))))))) 0.) (<= (* skoXC1 (* skoXC1 (+ (/ (- 1.) 6.) (* skoXC1 (* skoXC1 (+ (/ (- 3.) 40.) (* skoXC1 (* skoXC1 (+ (/ (- 5.) 112.) (* skoXC1 (* skoXC1 (+ (/ (- 35.) 1152.) (* skoXC1 (* skoXC1 (/ (- 63.) 2816.))))))))))))))) 1.) (<= (* skoXC1 (+ (- 1.) (* skoXC1 (* skoXC1 (+ (/ 1. 3.) (* skoXC1 (* skoXC1 (+ (/ 3. 20.) (* skoXC1 (* skoXC1 (+ (/ 5. 56.) (* skoXC1 (* skoXC1 (+ (/ 35. 576.) (* skoXC1 (* skoXC1 (/ 63. 1408.))))))))))))))))) 0.) (<= (* skoXC1 (+ (- 1.) (* skoXC1 (* skoXC1 (+ (/ (- 1.) 6.) (* skoXC1 (* skoXC1 (/ (- 3.) 40.)))))))) 0.) (> (* skoXC1 (* skoXC1 (+ (/ 1. 6.) (* skoXC1 (* skoXC1 (/ 3. 40.)))))) (- 1.)) (<= (* skoXC1 (* skoXC1 (* skoXC1 (* skoXC1 (+ (/ 32. 15.) (* skoXC1 (* skoXC1 (+ (/ (- 296.) 15.) (* skoXC1 (* skoXC1 (+ (/ 391. 15.) (* skoXC1 (* skoXC1 (+ (/ (- 146.) 15.) (* skoXC1 (* skoXC1 (/ 3. 4.))))))))))))))))) 0.) (<= (* skoXC1 (* skoXC1 (+ (/ 1. 3.) (* skoXC1 (* skoXC1 (/ 3. 20.)))))) 1.) (<= (* skoXC1 (* skoXC1 (* skoXC1 (* skoXC1 (+ (/ (- 17.) 120.) (* skoXC1 (* skoXC1 (/ 3. 80.)))))))) 0.) (<= (* skoXC1 (* skoXC1 (* skoXC1 (* skoXC1 (+ (/ (- 13.) 60.) (* skoXC1 (* skoXC1 (/ (- 3.) 10.)))))))) 0.) (<= (* skoXC1 (* skoXC1 (+ (/ (- 1.) 2.) (* skoXC1 (* skoXC1 (+ (/ 7. 120.) (* skoXC1 (* skoXC1 (/ (- 3.) 40.))))))))) 0.) (<= (* skoXC1 (* skoXC1 (+ (/ (- 1.) 6.) (* skoXC1 (* skoXC1 (/ (- 3.) 40.)))))) 1.) (<= (* skoXC1 (+ (- 1.) (* skoXC1 (* skoXC1 (+ (/ 1. 3.) (* skoXC1 (* skoXC1 (/ 3. 20.)))))))) 0.) (> (* skoXC1 skoXC1) 0.) (<= (* skoXC1 (* skoXC1 (+ 80. (* skoXC1 (* skoXC1 (+ (- 40.) (* skoXC1 (* skoXC1 (+ 6. (* skoXC1 (* skoXC1 (/ (- 1.) 8.)))))))))))) 48.) (> (* skoXC1 (* skoXC1 (+ (- 80.) (* skoXC1 (* skoXC1 (+ 40. (* skoXC1 (* skoXC1 (+ (- 6.) (* skoXC1 (* skoXC1 (/ 1. 8.)))))))))))) (- 48.)) (<= (* skoXC1 (* skoXC1 (+ 24. (* skoXC1 (* skoXC1 (+ (- 10.) (* skoXC1 skoXC1))))))) 16.) (<= (* skoXC1 (* skoXC1 (/ 1. 2.))) 3.) (> (* skoXC1 (* skoXC1 (/ (- 1.) 2.))) (- 3.)) (> skoXC1 0.) (> (/ 7. 8.) skoXC1) (<= (* skoXC1 (+ (- 1.) (* skoXC1 (* skoXC1 (/ 1. 3.))))) 0.) (<= (* skoXC1 (* skoXC1 (/ (- 1.) 6.))) 1.) (<= (* skoXC1 (* skoXC1 (+ (/ (- 1.) 2.) (* skoXC1 (* skoXC1 (/ (- 1.) 6.)))))) 0.) (<= (* skoXC1 skoXC1) 2.) (<= (* skoXC1 (* skoXC1 (* skoXC1 (* skoXC1 (/ (- 2.) 3.))))) 0.) (<= (* skoXC1 (+ (- 1.) (* skoXC1 (* skoXC1 (/ (- 1.) 6.))))) 0.) (<= (* skoXC1 (* skoXC1 (/ 1. 3.))) 1.) (<= (* skoXC1 (* skoXC1 (+ 256. (* skoXC1 (* skoXC1 (+ (- 160.) (* skoXC1 (* skoXC1 (+ 32. (* skoXC1 (* skoXC1 (- 1.)))))))))))) 128.) (<= (* skoXC1 (* skoXC1 (* skoXC1 (* skoXC1 (+ (/ (- 80.) 3.) (* skoXC1 (* skoXC1 (+ (/ 128. 3.) (* skoXC1 (* skoXC1 (+ (/ (- 55.) 3.) (* skoXC1 (* skoXC1 (/ 5. 3.)))))))))))))) 0.) (<= (* skoXC1 (+ (- 1.) (* skoXC1 (* skoXC1 (+ (/ 1. 3.) (* skoXC1 (* skoXC1 (+ (/ 3. 20.) (* skoXC1 (* skoXC1 (/ 5. 56.))))))))))) 0.) (<= (* skoXC1 (* skoXC1 (+ (/ (- 1.) 6.) (* skoXC1 (* skoXC1 (+ (/ (- 3.) 40.) (* skoXC1 (* skoXC1 (/ (- 5.) 112.))))))))) 1.) (<= (* skoXC1 (* skoXC1 (+ (/ (- 1.) 2.) (* skoXC1 (* skoXC1 (+ (/ 7. 120.) (* skoXC1 (* skoXC1 (+ (/ 33. 560.) (* skoXC1 (* skoXC1 (/ (- 5.) 112.)))))))))))) 0.) (<= (* skoXC1 (* skoXC1 (* skoXC1 (* skoXC1 (+ (/ (- 13.) 60.) (* skoXC1 (* skoXC1 (+ (/ (- 9.) 280.) (* skoXC1 (* skoXC1 (/ (- 5.) 28.))))))))))) 0.) (<= (* skoXC1 (* skoXC1 (* skoXC1 (* skoXC1 (+ (/ (- 17.) 120.) (* skoXC1 (* skoXC1 (+ (/ (- 27.) 280.) (* skoXC1 (* skoXC1 (/ 5. 224.))))))))))) 0.) (<= (* skoXC1 (* skoXC1 (+ (/ 1. 3.) (* skoXC1 (* skoXC1 (+ (/ 3. 20.) (* skoXC1 (* skoXC1 (/ 5. 56.))))))))) 1.) (<= (* skoXC1 (* skoXC1 (* skoXC1 (* skoXC1 (+ (/ 32. 15.) (* skoXC1 (* skoXC1 (+ (/ (- 272.) 105.) (* skoXC1 (* skoXC1 (+ (/ (- 1163.) 105.) (* skoXC1 (* skoXC1 (+ (/ 1753. 105.) (* skoXC1 (* skoXC1 (+ (/ (- 169.) 28.) (* skoXC1 (* skoXC1 (/ 25. 56.)))))))))))))))))))) 0.) (> (* skoXC1 (* skoXC1 (+ (/ 1. 6.) (* skoXC1 (* skoXC1 (+ (/ 3. 40.) (* skoXC1 (* skoXC1 (/ 5. 112.))))))))) (- 1.))) (succedent (> (* skoXC1 (+ (- 1.) (* skoXC1 (* skoXC1 (+ (/ (- 1.) 6.) (* skoXC1 (* skoXC1 (+ (/ (- 3.) 40.) (* skoXC1 (* skoXC1 (/ (- 5.) 112.))))))))))) 0.)))
-----[end problem]-----

-----[begin problem]-----
% In Mathematica format:
Timing[Resolve[Exists[{skoXC1}, And[skoXC1*skoXC1*((-1/6)+skoXC1*skoXC1*((-3/40)+skoXC1*skoXC1*((-5/112)+skoXC1*skoXC1*((-35/1152)+skoXC1*skoXC1*(-63/2816)))))<=1,skoXC1*skoXC1*((1/3)+skoXC1*skoXC1*((3/20)+skoXC1*skoXC1*((5/56)+skoXC1*skoXC1*((35/576)+skoXC1*skoXC1*(63/1408)))))<=1,skoXC1*skoXC1*skoXC1*skoXC1*((-13/60)+skoXC1*skoXC1*((-9/280)+skoXC1*skoXC1*((5/1344)+skoXC1*skoXC1*((161/12672)+skoXC1*skoXC1*(-63/704)))))<=0,skoXC1*skoXC1*((-1/2)+skoXC1*skoXC1*((7/120)+skoXC1*skoXC1*((33/560)+skoXC1*skoXC1*((125/2688)+skoXC1*skoXC1*((931/25344)+skoXC1*skoXC1*(-63/2816))))))<=0,skoXC1*skoXC1*((-1/6)+skoXC1*skoXC1*((-3/40)+skoXC1*skoXC1*((-5/112)+skoXC1*skoXC1*((-35/1152)+skoXC1*skoXC1*(-63/2816)))))<=1,skoXC1*(-1+skoXC1*skoXC1*((1/3)+skoXC1*skoXC1*((3/20)+skoXC1*skoXC1*((5/56)+skoXC1*skoXC1*((35/576)+skoXC1*skoXC1*(63/1408))))))<=0,skoXC1*(-1+skoXC1*skoXC1*((-1/6)+skoXC1*skoXC1*(-3/40)))<=0,skoXC1*skoXC1*((1/6)+skoXC1*skoXC1*(3/40))>-1,skoXC1*skoXC1*skoXC1*skoXC1*((32/15)+skoXC1*skoXC1*((-296/15)+skoXC1*skoXC1*((391/15)+skoXC1*skoXC1*((-146/15)+skoXC1*skoXC1*(3/4)))))<=0,skoXC1*skoXC1*((1/3)+skoXC1*skoXC1*(3/20))<=1,skoXC1*skoXC1*skoXC1*skoXC1*((-17/120)+skoXC1*skoXC1*(3/80))<=0,skoXC1*skoXC1*skoXC1*skoXC1*((-13/60)+skoXC1*skoXC1*(-3/10))<=0,skoXC1*skoXC1*((-1/2)+skoXC1*skoXC1*((7/120)+skoXC1*skoXC1*(-3/40)))<=0,skoXC1*skoXC1*((-1/6)+skoXC1*skoXC1*(-3/40))<=1,skoXC1*(-1+skoXC1*skoXC1*((1/3)+skoXC1*skoXC1*(3/20)))<=0,skoXC1*skoXC1>0,skoXC1*skoXC1*(80+skoXC1*skoXC1*(-40+skoXC1*skoXC1*(6+skoXC1*skoXC1*(-1/8))))<=48,skoXC1*skoXC1*(-80+skoXC1*skoXC1*(40+skoXC1*skoXC1*(-6+skoXC1*skoXC1*(1/8))))>-48,skoXC1*skoXC1*(24+skoXC1*skoXC1*(-10+skoXC1*skoXC1))<=16,skoXC1*skoXC1*(1/2)<=3,skoXC1*skoXC1*(-1/2)>-3,skoXC1>0,(7/8)>skoXC1,skoXC1*(-1+skoXC1*skoXC1*(1/3))<=0,skoXC1*skoXC1*(-1/6)<=1,skoXC1*skoXC1*((-1/2)+skoXC1*skoXC1*(-1/6))<=0,skoXC1*skoXC1<=2,skoXC1*skoXC1*skoXC1*skoXC1*(-2/3)<=0,skoXC1*(-1+skoXC1*skoXC1*(-1/6))<=0,skoXC1*skoXC1*(1/3)<=1,skoXC1*skoXC1*(256+skoXC1*skoXC1*(-160+skoXC1*skoXC1*(32+skoXC1*skoXC1*-1)))<=128,skoXC1*skoXC1*skoXC1*skoXC1*((-80/3)+skoXC1*skoXC1*((128/3)+skoXC1*skoXC1*((-55/3)+skoXC1*skoXC1*(5/3))))<=0,skoXC1*(-1+skoXC1*skoXC1*((1/3)+skoXC1*skoXC1*((3/20)+skoXC1*skoXC1*(5/56))))<=0,skoXC1*skoXC1*((-1/6)+skoXC1*skoXC1*((-3/40)+skoXC1*skoXC1*(-5/112)))<=1,skoXC1*skoXC1*((-1/2)+skoXC1*skoXC1*((7/120)+skoXC1*skoXC1*((33/560)+skoXC1*skoXC1*(-5/112))))<=0,skoXC1*skoXC1*skoXC1*skoXC1*((-13/60)+skoXC1*skoXC1*((-9/280)+skoXC1*skoXC1*(-5/28)))<=0,skoXC1*skoXC1*skoXC1*skoXC1*((-17/120)+skoXC1*skoXC1*((-27/280)+skoXC1*skoXC1*(5/224)))<=0,skoXC1*skoXC1*((1/3)+skoXC1*skoXC1*((3/20)+skoXC1*skoXC1*(5/56)))<=1,skoXC1*skoXC1*skoXC1*skoXC1*((32/15)+skoXC1*skoXC1*((-272/105)+skoXC1*skoXC1*((-1163/105)+skoXC1*skoXC1*((1753/105)+skoXC1*skoXC1*((-169/28)+skoXC1*skoXC1*(25/56))))))<=0,skoXC1*skoXC1*((1/6)+skoXC1*skoXC1*((3/40)+skoXC1*skoXC1*(5/112)))>-1,skoXC1*(-1+skoXC1*skoXC1*((-1/6)+skoXC1*skoXC1*((-3/40)+skoXC1*skoXC1*(-5/112))))<=0]], Reals]]

% In QepcadB format:
(E skoXC1) [[(skoXC1 skoXC1 (-1/6+(skoXC1 skoXC1 (-3/40+(skoXC1 skoXC1 (-5/112+(skoXC1 skoXC1 (-35/1152+(skoXC1 skoXC1 (-63/2816))))))))))<=1]/\[[(skoXC1 skoXC1 (1/3+(skoXC1 skoXC1 (3/20+(skoXC1 skoXC1 (5/56+(skoXC1 skoXC1 (35/576+(skoXC1 skoXC1 (63/1408))))))))))<=1]/\[[(skoXC1 skoXC1 skoXC1 skoXC1 (-13/60+(skoXC1 skoXC1 (-9/280+(skoXC1 skoXC1 (5/1344+(skoXC1 skoXC1 (161/12672+(skoXC1 skoXC1 (-63/704))))))))))<=0]/\[[(skoXC1 skoXC1 (-1/2+(skoXC1 skoXC1 (7/120+(skoXC1 skoXC1 (33/560+(skoXC1 skoXC1 (125/2688+(skoXC1 skoXC1 (931/25344+(skoXC1 skoXC1 (-63/2816))))))))))))<=0]/\[[(skoXC1 skoXC1 (-1/6+(skoXC1 skoXC1 (-3/40+(skoXC1 skoXC1 (-5/112+(skoXC1 skoXC1 (-35/1152+(skoXC1 skoXC1 (-63/2816))))))))))<=1]/\[[(skoXC1 (-1+(skoXC1 skoXC1 (1/3+(skoXC1 skoXC1 (3/20+(skoXC1 skoXC1 (5/56+(skoXC1 skoXC1 (35/576+(skoXC1 skoXC1 (63/1408))))))))))))<=0]/\[[(skoXC1 (-1+(skoXC1 skoXC1 (-1/6+(skoXC1 skoXC1 (-3/40))))))<=0]/\[[-1<(skoXC1 skoXC1 (1/6+(skoXC1 skoXC1 (3/40))))]/\[[(skoXC1 skoXC1 skoXC1 skoXC1 (32/15+(skoXC1 skoXC1 (-296/15+(skoXC1 skoXC1 (391/15+(skoXC1 skoXC1 (-146/15+(skoXC1 skoXC1 (3/4))))))))))<=0]/\[[(skoXC1 skoXC1 (1/3+(skoXC1 skoXC1 (3/20))))<=1]/\[[(skoXC1 skoXC1 skoXC1 skoXC1 (-17/120+(skoXC1 skoXC1 (3/80))))<=0]/\[[(skoXC1 skoXC1 skoXC1 skoXC1 (-13/60+(skoXC1 skoXC1 (-3/10))))<=0]/\[[(skoXC1 skoXC1 (-1/2+(skoXC1 skoXC1 (7/120+(skoXC1 skoXC1 (-3/40))))))<=0]/\[[(skoXC1 skoXC1 (-1/6+(skoXC1 skoXC1 (-3/40))))<=1]/\[[(skoXC1 (-1+(skoXC1 skoXC1 (1/3+(skoXC1 skoXC1 (3/20))))))<=0]/\[[0<(skoXC1 skoXC1)]/\[[(skoXC1 skoXC1 (80+(skoXC1 skoXC1 (-40+(skoXC1 skoXC1 (6+(skoXC1 skoXC1 (-1/8))))))))<=48]/\[[-48<(skoXC1 skoXC1 (-80+(skoXC1 skoXC1 (40+(skoXC1 skoXC1 (-6+(skoXC1 skoXC1 (1/8))))))))]/\[[(skoXC1 skoXC1 (24+(skoXC1 skoXC1 (-10+(skoXC1 skoXC1)))))<=16]/\[[(skoXC1 skoXC1 (1/2))<=3]/\[[-3<(skoXC1 skoXC1 (-1/2))]/\[[0<skoXC1]/\[[skoXC1<7/8]/\[[(skoXC1 (-1+(skoXC1 skoXC1 (1/3))))<=0]/\[[(skoXC1 skoXC1 (-1/6))<=1]/\[[(skoXC1 skoXC1 (-1/2+(skoXC1 skoXC1 (-1/6))))<=0]/\[[(skoXC1 skoXC1)<=2]/\[[(skoXC1 skoXC1 skoXC1 skoXC1 (-2/3))<=0]/\[[(skoXC1 (-1+(skoXC1 skoXC1 (-1/6))))<=0]/\[[(skoXC1 skoXC1 (1/3))<=1]/\[[(skoXC1 skoXC1 (256+(skoXC1 skoXC1 (-160+(skoXC1 skoXC1 (32+(skoXC1 skoXC1 (-1))))))))<=128]/\[[(skoXC1 skoXC1 skoXC1 skoXC1 (-80/3+(skoXC1 skoXC1 (128/3+(skoXC1 skoXC1 (-55/3+(skoXC1 skoXC1 (5/3))))))))<=0]/\[[(skoXC1 (-1+(skoXC1 skoXC1 (1/3+(skoXC1 skoXC1 (3/20+(skoXC1 skoXC1 (5/56))))))))<=0]/\[[(skoXC1 skoXC1 (-1/6+(skoXC1 skoXC1 (-3/40+(skoXC1 skoXC1 (-5/112))))))<=1]/\[[(skoXC1 skoXC1 (-1/2+(skoXC1 skoXC1 (7/120+(skoXC1 skoXC1 (33/560+(skoXC1 skoXC1 (-5/112))))))))<=0]/\[[(skoXC1 skoXC1 skoXC1 skoXC1 (-13/60+(skoXC1 skoXC1 (-9/280+(skoXC1 skoXC1 (-5/28))))))<=0]/\[[(skoXC1 skoXC1 skoXC1 skoXC1 (-17/120+(skoXC1 skoXC1 (-27/280+(skoXC1 skoXC1 (5/224))))))<=0]/\[[(skoXC1 skoXC1 (1/3+(skoXC1 skoXC1 (3/20+(skoXC1 skoXC1 (5/56))))))<=1]/\[[(skoXC1 skoXC1 skoXC1 skoXC1 (32/15+(skoXC1 skoXC1 (-272/105+(skoXC1 skoXC1 (-1163/105+(skoXC1 skoXC1 (1753/105+(skoXC1 skoXC1 (-169/28+(skoXC1 skoXC1 (25/56))))))))))))<=0]/\[[-1<(skoXC1 skoXC1 (1/6+(skoXC1 skoXC1 (3/40+(skoXC1 skoXC1 (5/112))))))]/\[(skoXC1 (-1+(skoXC1 skoXC1 (-1/6+(skoXC1 skoXC1 (-3/40+(skoXC1 skoXC1 (-5/112))))))))<=0]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]].

% In SMTLib2 format:
(declare-fun skoXC1 () Real) (assert (and (<= (* skoXC1 (* skoXC1 (+ (/ (- 1.) 6.) (* skoXC1 (* skoXC1 (+ (/ (- 3.) 40.) (* skoXC1 (* skoXC1 (+ (/ (- 5.) 112.) (* skoXC1 (* skoXC1 (+ (/ (- 35.) 1152.) (* skoXC1 (* skoXC1 (/ (- 63.) 2816.))))))))))))))) 1.) (and (<= (* skoXC1 (* skoXC1 (+ (/ 1. 3.) (* skoXC1 (* skoXC1 (+ (/ 3. 20.) (* skoXC1 (* skoXC1 (+ (/ 5. 56.) (* skoXC1 (* skoXC1 (+ (/ 35. 576.) (* skoXC1 (* skoXC1 (/ 63. 1408.))))))))))))))) 1.) (and (<= (* skoXC1 (* skoXC1 (* skoXC1 (* skoXC1 (+ (/ (- 13.) 60.) (* skoXC1 (* skoXC1 (+ (/ (- 9.) 280.) (* skoXC1 (* skoXC1 (+ (/ 5. 1344.) (* skoXC1 (* skoXC1 (+ (/ 161. 12672.) (* skoXC1 (* skoXC1 (/ (- 63.) 704.))))))))))))))))) 0.) (and (<= (* skoXC1 (* skoXC1 (+ (/ (- 1.) 2.) (* skoXC1 (* skoXC1 (+ (/ 7. 120.) (* skoXC1 (* skoXC1 (+ (/ 33. 560.) (* skoXC1 (* skoXC1 (+ (/ 125. 2688.) (* skoXC1 (* skoXC1 (+ (/ 931. 25344.) (* skoXC1 (* skoXC1 (/ (- 63.) 2816.)))))))))))))))))) 0.) (and (<= (* skoXC1 (* skoXC1 (+ (/ (- 1.) 6.) (* skoXC1 (* skoXC1 (+ (/ (- 3.) 40.) (* skoXC1 (* skoXC1 (+ (/ (- 5.) 112.) (* skoXC1 (* skoXC1 (+ (/ (- 35.) 1152.) (* skoXC1 (* skoXC1 (/ (- 63.) 2816.))))))))))))))) 1.) (and (<= (* skoXC1 (+ (- 1.) (* skoXC1 (* skoXC1 (+ (/ 1. 3.) (* skoXC1 (* skoXC1 (+ (/ 3. 20.) (* skoXC1 (* skoXC1 (+ (/ 5. 56.) (* skoXC1 (* skoXC1 (+ (/ 35. 576.) (* skoXC1 (* skoXC1 (/ 63. 1408.))))))))))))))))) 0.) (and (<= (* skoXC1 (+ (- 1.) (* skoXC1 (* skoXC1 (+ (/ (- 1.) 6.) (* skoXC1 (* skoXC1 (/ (- 3.) 40.)))))))) 0.) (and (> (* skoXC1 (* skoXC1 (+ (/ 1. 6.) (* skoXC1 (* skoXC1 (/ 3. 40.)))))) (- 1.)) (and (<= (* skoXC1 (* skoXC1 (* skoXC1 (* skoXC1 (+ (/ 32. 15.) (* skoXC1 (* skoXC1 (+ (/ (- 296.) 15.) (* skoXC1 (* skoXC1 (+ (/ 391. 15.) (* skoXC1 (* skoXC1 (+ (/ (- 146.) 15.) (* skoXC1 (* skoXC1 (/ 3. 4.))))))))))))))))) 0.) (and (<= (* skoXC1 (* skoXC1 (+ (/ 1. 3.) (* skoXC1 (* skoXC1 (/ 3. 20.)))))) 1.) (and (<= (* skoXC1 (* skoXC1 (* skoXC1 (* skoXC1 (+ (/ (- 17.) 120.) (* skoXC1 (* skoXC1 (/ 3. 80.)))))))) 0.) (and (<= (* skoXC1 (* skoXC1 (* skoXC1 (* skoXC1 (+ (/ (- 13.) 60.) (* skoXC1 (* skoXC1 (/ (- 3.) 10.)))))))) 0.) (and (<= (* skoXC1 (* skoXC1 (+ (/ (- 1.) 2.) (* skoXC1 (* skoXC1 (+ (/ 7. 120.) (* skoXC1 (* skoXC1 (/ (- 3.) 40.))))))))) 0.) (and (<= (* skoXC1 (* skoXC1 (+ (/ (- 1.) 6.) (* skoXC1 (* skoXC1 (/ (- 3.) 40.)))))) 1.) (and (<= (* skoXC1 (+ (- 1.) (* skoXC1 (* skoXC1 (+ (/ 1. 3.) (* skoXC1 (* skoXC1 (/ 3. 20.)))))))) 0.) (and (> (* skoXC1 skoXC1) 0.) (and (<= (* skoXC1 (* skoXC1 (+ 80. (* skoXC1 (* skoXC1 (+ (- 40.) (* skoXC1 (* skoXC1 (+ 6. (* skoXC1 (* skoXC1 (/ (- 1.) 8.)))))))))))) 48.) (and (> (* skoXC1 (* skoXC1 (+ (- 80.) (* skoXC1 (* skoXC1 (+ 40. (* skoXC1 (* skoXC1 (+ (- 6.) (* skoXC1 (* skoXC1 (/ 1. 8.)))))))))))) (- 48.)) (and (<= (* skoXC1 (* skoXC1 (+ 24. (* skoXC1 (* skoXC1 (+ (- 10.) (* skoXC1 skoXC1))))))) 16.) (and (<= (* skoXC1 (* skoXC1 (/ 1. 2.))) 3.) (and (> (* skoXC1 (* skoXC1 (/ (- 1.) 2.))) (- 3.)) (and (> skoXC1 0.) (and (> (/ 7. 8.) skoXC1) (and (<= (* skoXC1 (+ (- 1.) (* skoXC1 (* skoXC1 (/ 1. 3.))))) 0.) (and (<= (* skoXC1 (* skoXC1 (/ (- 1.) 6.))) 1.) (and (<= (* skoXC1 (* skoXC1 (+ (/ (- 1.) 2.) (* skoXC1 (* skoXC1 (/ (- 1.) 6.)))))) 0.) (and (<= (* skoXC1 skoXC1) 2.) (and (<= (* skoXC1 (* skoXC1 (* skoXC1 (* skoXC1 (/ (- 2.) 3.))))) 0.) (and (<= (* skoXC1 (+ (- 1.) (* skoXC1 (* skoXC1 (/ (- 1.) 6.))))) 0.) (and (<= (* skoXC1 (* skoXC1 (/ 1. 3.))) 1.) (and (<= (* skoXC1 (* skoXC1 (+ 256. (* skoXC1 (* skoXC1 (+ (- 160.) (* skoXC1 (* skoXC1 (+ 32. (* skoXC1 (* skoXC1 (- 1.)))))))))))) 128.) (and (<= (* skoXC1 (* skoXC1 (* skoXC1 (* skoXC1 (+ (/ (- 80.) 3.) (* skoXC1 (* skoXC1 (+ (/ 128. 3.) (* skoXC1 (* skoXC1 (+ (/ (- 55.) 3.) (* skoXC1 (* skoXC1 (/ 5. 3.)))))))))))))) 0.) (and (<= (* skoXC1 (+ (- 1.) (* skoXC1 (* skoXC1 (+ (/ 1. 3.) (* skoXC1 (* skoXC1 (+ (/ 3. 20.) (* skoXC1 (* skoXC1 (/ 5. 56.))))))))))) 0.) (and (<= (* skoXC1 (* skoXC1 (+ (/ (- 1.) 6.) (* skoXC1 (* skoXC1 (+ (/ (- 3.) 40.) (* skoXC1 (* skoXC1 (/ (- 5.) 112.))))))))) 1.) (and (<= (* skoXC1 (* skoXC1 (+ (/ (- 1.) 2.) (* skoXC1 (* skoXC1 (+ (/ 7. 120.) (* skoXC1 (* skoXC1 (+ (/ 33. 560.) (* skoXC1 (* skoXC1 (/ (- 5.) 112.)))))))))))) 0.) (and (<= (* skoXC1 (* skoXC1 (* skoXC1 (* skoXC1 (+ (/ (- 13.) 60.) (* skoXC1 (* skoXC1 (+ (/ (- 9.) 280.) (* skoXC1 (* skoXC1 (/ (- 5.) 28.))))))))))) 0.) (and (<= (* skoXC1 (* skoXC1 (* skoXC1 (* skoXC1 (+ (/ (- 17.) 120.) (* skoXC1 (* skoXC1 (+ (/ (- 27.) 280.) (* skoXC1 (* skoXC1 (/ 5. 224.))))))))))) 0.) (and (<= (* skoXC1 (* skoXC1 (+ (/ 1. 3.) (* skoXC1 (* skoXC1 (+ (/ 3. 20.) (* skoXC1 (* skoXC1 (/ 5. 56.))))))))) 1.) (and (<= (* skoXC1 (* skoXC1 (* skoXC1 (* skoXC1 (+ (/ 32. 15.) (* skoXC1 (* skoXC1 (+ (/ (- 272.) 105.) (* skoXC1 (* skoXC1 (+ (/ (- 1163.) 105.) (* skoXC1 (* skoXC1 (+ (/ 1753. 105.) (* skoXC1 (* skoXC1 (+ (/ (- 169.) 28.) (* skoXC1 (* skoXC1 (/ 25. 56.)))))))))))))))))))) 0.) (and (> (* skoXC1 (* skoXC1 (+ (/ 1. 6.) (* skoXC1 (* skoXC1 (+ (/ 3. 40.) (* skoXC1 (* skoXC1 (/ 5. 112.))))))))) (- 1.)) (<= (* skoXC1 (+ (- 1.) (* skoXC1 (* skoXC1 (+ (/ (- 1.) 6.) (* skoXC1 (* skoXC1 (+ (/ (- 3.) 40.) (* skoXC1 (* skoXC1 (/ (- 5.) 112.))))))))))) 0.))))))))))))))))))))))))))))))))))))))))))

% In GRF format:
(sequent " MetiTarski formula " (antecedent (<= (* skoXC1 (* skoXC1 (+ (/ (- 1.) 6.) (* skoXC1 (* skoXC1 (+ (/ (- 3.) 40.) (* skoXC1 (* skoXC1 (+ (/ (- 5.) 112.) (* skoXC1 (* skoXC1 (+ (/ (- 35.) 1152.) (* skoXC1 (* skoXC1 (/ (- 63.) 2816.))))))))))))))) 1.) (<= (* skoXC1 (* skoXC1 (+ (/ 1. 3.) (* skoXC1 (* skoXC1 (+ (/ 3. 20.) (* skoXC1 (* skoXC1 (+ (/ 5. 56.) (* skoXC1 (* skoXC1 (+ (/ 35. 576.) (* skoXC1 (* skoXC1 (/ 63. 1408.))))))))))))))) 1.) (<= (* skoXC1 (* skoXC1 (* skoXC1 (* skoXC1 (+ (/ (- 13.) 60.) (* skoXC1 (* skoXC1 (+ (/ (- 9.) 280.) (* skoXC1 (* skoXC1 (+ (/ 5. 1344.) (* skoXC1 (* skoXC1 (+ (/ 161. 12672.) (* skoXC1 (* skoXC1 (/ (- 63.) 704.))))))))))))))))) 0.) (<= (* skoXC1 (* skoXC1 (+ (/ (- 1.) 2.) (* skoXC1 (* skoXC1 (+ (/ 7. 120.) (* skoXC1 (* skoXC1 (+ (/ 33. 560.) (* skoXC1 (* skoXC1 (+ (/ 125. 2688.) (* skoXC1 (* skoXC1 (+ (/ 931. 25344.) (* skoXC1 (* skoXC1 (/ (- 63.) 2816.)))))))))))))))))) 0.) (<= (* skoXC1 (* skoXC1 (+ (/ (- 1.) 6.) (* skoXC1 (* skoXC1 (+ (/ (- 3.) 40.) (* skoXC1 (* skoXC1 (+ (/ (- 5.) 112.) (* skoXC1 (* skoXC1 (+ (/ (- 35.) 1152.) (* skoXC1 (* skoXC1 (/ (- 63.) 2816.))))))))))))))) 1.) (<= (* skoXC1 (+ (- 1.) (* skoXC1 (* skoXC1 (+ (/ 1. 3.) (* skoXC1 (* skoXC1 (+ (/ 3. 20.) (* skoXC1 (* skoXC1 (+ (/ 5. 56.) (* skoXC1 (* skoXC1 (+ (/ 35. 576.) (* skoXC1 (* skoXC1 (/ 63. 1408.))))))))))))))))) 0.) (<= (* skoXC1 (+ (- 1.) (* skoXC1 (* skoXC1 (+ (/ (- 1.) 6.) (* skoXC1 (* skoXC1 (/ (- 3.) 40.)))))))) 0.) (> (* skoXC1 (* skoXC1 (+ (/ 1. 6.) (* skoXC1 (* skoXC1 (/ 3. 40.)))))) (- 1.)) (<= (* skoXC1 (* skoXC1 (* skoXC1 (* skoXC1 (+ (/ 32. 15.) (* skoXC1 (* skoXC1 (+ (/ (- 296.) 15.) (* skoXC1 (* skoXC1 (+ (/ 391. 15.) (* skoXC1 (* skoXC1 (+ (/ (- 146.) 15.) (* skoXC1 (* skoXC1 (/ 3. 4.))))))))))))))))) 0.) (<= (* skoXC1 (* skoXC1 (+ (/ 1. 3.) (* skoXC1 (* skoXC1 (/ 3. 20.)))))) 1.) (<= (* skoXC1 (* skoXC1 (* skoXC1 (* skoXC1 (+ (/ (- 17.) 120.) (* skoXC1 (* skoXC1 (/ 3. 80.)))))))) 0.) (<= (* skoXC1 (* skoXC1 (* skoXC1 (* skoXC1 (+ (/ (- 13.) 60.) (* skoXC1 (* skoXC1 (/ (- 3.) 10.)))))))) 0.) (<= (* skoXC1 (* skoXC1 (+ (/ (- 1.) 2.) (* skoXC1 (* skoXC1 (+ (/ 7. 120.) (* skoXC1 (* skoXC1 (/ (- 3.) 40.))))))))) 0.) (<= (* skoXC1 (* skoXC1 (+ (/ (- 1.) 6.) (* skoXC1 (* skoXC1 (/ (- 3.) 40.)))))) 1.) (<= (* skoXC1 (+ (- 1.) (* skoXC1 (* skoXC1 (+ (/ 1. 3.) (* skoXC1 (* skoXC1 (/ 3. 20.)))))))) 0.) (> (* skoXC1 skoXC1) 0.) (<= (* skoXC1 (* skoXC1 (+ 80. (* skoXC1 (* skoXC1 (+ (- 40.) (* skoXC1 (* skoXC1 (+ 6. (* skoXC1 (* skoXC1 (/ (- 1.) 8.)))))))))))) 48.) (> (* skoXC1 (* skoXC1 (+ (- 80.) (* skoXC1 (* skoXC1 (+ 40. (* skoXC1 (* skoXC1 (+ (- 6.) (* skoXC1 (* skoXC1 (/ 1. 8.)))))))))))) (- 48.)) (<= (* skoXC1 (* skoXC1 (+ 24. (* skoXC1 (* skoXC1 (+ (- 10.) (* skoXC1 skoXC1))))))) 16.) (<= (* skoXC1 (* skoXC1 (/ 1. 2.))) 3.) (> (* skoXC1 (* skoXC1 (/ (- 1.) 2.))) (- 3.)) (> skoXC1 0.) (> (/ 7. 8.) skoXC1) (<= (* skoXC1 (+ (- 1.) (* skoXC1 (* skoXC1 (/ 1. 3.))))) 0.) (<= (* skoXC1 (* skoXC1 (/ (- 1.) 6.))) 1.) (<= (* skoXC1 (* skoXC1 (+ (/ (- 1.) 2.) (* skoXC1 (* skoXC1 (/ (- 1.) 6.)))))) 0.) (<= (* skoXC1 skoXC1) 2.) (<= (* skoXC1 (* skoXC1 (* skoXC1 (* skoXC1 (/ (- 2.) 3.))))) 0.) (<= (* skoXC1 (+ (- 1.) (* skoXC1 (* skoXC1 (/ (- 1.) 6.))))) 0.) (<= (* skoXC1 (* skoXC1 (/ 1. 3.))) 1.) (<= (* skoXC1 (* skoXC1 (+ 256. (* skoXC1 (* skoXC1 (+ (- 160.) (* skoXC1 (* skoXC1 (+ 32. (* skoXC1 (* skoXC1 (- 1.)))))))))))) 128.) (<= (* skoXC1 (* skoXC1 (* skoXC1 (* skoXC1 (+ (/ (- 80.) 3.) (* skoXC1 (* skoXC1 (+ (/ 128. 3.) (* skoXC1 (* skoXC1 (+ (/ (- 55.) 3.) (* skoXC1 (* skoXC1 (/ 5. 3.)))))))))))))) 0.) (<= (* skoXC1 (+ (- 1.) (* skoXC1 (* skoXC1 (+ (/ 1. 3.) (* skoXC1 (* skoXC1 (+ (/ 3. 20.) (* skoXC1 (* skoXC1 (/ 5. 56.))))))))))) 0.) (<= (* skoXC1 (* skoXC1 (+ (/ (- 1.) 6.) (* skoXC1 (* skoXC1 (+ (/ (- 3.) 40.) (* skoXC1 (* skoXC1 (/ (- 5.) 112.))))))))) 1.) (<= (* skoXC1 (* skoXC1 (+ (/ (- 1.) 2.) (* skoXC1 (* skoXC1 (+ (/ 7. 120.) (* skoXC1 (* skoXC1 (+ (/ 33. 560.) (* skoXC1 (* skoXC1 (/ (- 5.) 112.)))))))))))) 0.) (<= (* skoXC1 (* skoXC1 (* skoXC1 (* skoXC1 (+ (/ (- 13.) 60.) (* skoXC1 (* skoXC1 (+ (/ (- 9.) 280.) (* skoXC1 (* skoXC1 (/ (- 5.) 28.))))))))))) 0.) (<= (* skoXC1 (* skoXC1 (* skoXC1 (* skoXC1 (+ (/ (- 17.) 120.) (* skoXC1 (* skoXC1 (+ (/ (- 27.) 280.) (* skoXC1 (* skoXC1 (/ 5. 224.))))))))))) 0.) (<= (* skoXC1 (* skoXC1 (+ (/ 1. 3.) (* skoXC1 (* skoXC1 (+ (/ 3. 20.) (* skoXC1 (* skoXC1 (/ 5. 56.))))))))) 1.) (<= (* skoXC1 (* skoXC1 (* skoXC1 (* skoXC1 (+ (/ 32. 15.) (* skoXC1 (* skoXC1 (+ (/ (- 272.) 105.) (* skoXC1 (* skoXC1 (+ (/ (- 1163.) 105.) (* skoXC1 (* skoXC1 (+ (/ 1753. 105.) (* skoXC1 (* skoXC1 (+ (/ (- 169.) 28.) (* skoXC1 (* skoXC1 (/ 25. 56.)))))))))))))))))))) 0.) (> (* skoXC1 (* skoXC1 (+ (/ 1. 6.) (* skoXC1 (* skoXC1 (+ (/ 3. 40.) (* skoXC1 (* skoXC1 (/ 5. 112.))))))))) (- 1.))) (succedent (> (* skoXC1 (+ (- 1.) (* skoXC1 (* skoXC1 (+ (/ (- 1.) 6.) (* skoXC1 (* skoXC1 (+ (/ (- 3.) 40.) (* skoXC1 (* skoXC1 (/ (- 5.) 112.))))))))))) 0.)))
-----[end problem]-----

-----[begin problem]-----
% In Mathematica format:
Timing[Resolve[Exists[{skoXC1}, And[skoXC1*skoXC1*skoXC1*skoXC1*((-17/120)+skoXC1*skoXC1*((-27/280)+skoXC1*skoXC1*((-185/2688)+skoXC1*skoXC1*((-329/6336)+skoXC1*skoXC1*(63/5632)))))<=0,skoXC1*skoXC1*((1/6)+skoXC1*skoXC1*((3/40)+skoXC1*skoXC1*((5/112)+skoXC1*skoXC1*((35/1152)+skoXC1*skoXC1*(63/2816)))))>-1,skoXC1*skoXC1*((1/3)+skoXC1*skoXC1*((3/20)+skoXC1*skoXC1*((5/56)+skoXC1*skoXC1*((35/576)+skoXC1*skoXC1*(63/1408)))))<=1,skoXC1*skoXC1*skoXC1*skoXC1*((-13/60)+skoXC1*skoXC1*((-9/280)+skoXC1*skoXC1*((5/1344)+skoXC1*skoXC1*((161/12672)+skoXC1*skoXC1*(-63/704)))))<=0,skoXC1*skoXC1*((-1/2)+skoXC1*skoXC1*((7/120)+skoXC1*skoXC1*((33/560)+skoXC1*skoXC1*((125/2688)+skoXC1*skoXC1*((931/25344)+skoXC1*skoXC1*(-63/2816))))))<=0,skoXC1*skoXC1*((-1/6)+skoXC1*skoXC1*((-3/40)+skoXC1*skoXC1*((-5/112)+skoXC1*skoXC1*((-35/1152)+skoXC1*skoXC1*(-63/2816)))))<=1,skoXC1*(-1+skoXC1*skoXC1*((1/3)+skoXC1*skoXC1*((3/20)+skoXC1*skoXC1*((5/56)+skoXC1*skoXC1*((35/576)+skoXC1*skoXC1*(63/1408))))))<=0,skoXC1*(-1+skoXC1*skoXC1*((-1/6)+skoXC1*skoXC1*(-3/40)))<=0,skoXC1*skoXC1*((1/6)+skoXC1*skoXC1*(3/40))>-1,skoXC1*skoXC1*skoXC1*skoXC1*((32/15)+skoXC1*skoXC1*((-296/15)+skoXC1*skoXC1*((391/15)+skoXC1*skoXC1*((-146/15)+skoXC1*skoXC1*(3/4)))))<=0,skoXC1*skoXC1*((1/3)+skoXC1*skoXC1*(3/20))<=1,skoXC1*skoXC1*skoXC1*skoXC1*((-17/120)+skoXC1*skoXC1*(3/80))<=0,skoXC1*skoXC1*skoXC1*skoXC1*((-13/60)+skoXC1*skoXC1*(-3/10))<=0,skoXC1*skoXC1*((-1/2)+skoXC1*skoXC1*((7/120)+skoXC1*skoXC1*(-3/40)))<=0,skoXC1*skoXC1*((-1/6)+skoXC1*skoXC1*(-3/40))<=1,skoXC1*(-1+skoXC1*skoXC1*((1/3)+skoXC1*skoXC1*(3/20)))<=0,skoXC1*skoXC1>0,skoXC1*skoXC1*(80+skoXC1*skoXC1*(-40+skoXC1*skoXC1*(6+skoXC1*skoXC1*(-1/8))))<=48,skoXC1*skoXC1*(-80+skoXC1*skoXC1*(40+skoXC1*skoXC1*(-6+skoXC1*skoXC1*(1/8))))>-48,skoXC1*skoXC1*(24+skoXC1*skoXC1*(-10+skoXC1*skoXC1))<=16,skoXC1*skoXC1*(1/2)<=3,skoXC1*skoXC1*(-1/2)>-3,skoXC1>0,(7/8)>skoXC1,skoXC1*(-1+skoXC1*skoXC1*(1/3))<=0,skoXC1*skoXC1*(-1/6)<=1,skoXC1*skoXC1*((-1/2)+skoXC1*skoXC1*(-1/6))<=0,skoXC1*skoXC1<=2,skoXC1*skoXC1*skoXC1*skoXC1*(-2/3)<=0,skoXC1*(-1+skoXC1*skoXC1*(-1/6))<=0,skoXC1*skoXC1*(1/3)<=1,skoXC1*skoXC1*(256+skoXC1*skoXC1*(-160+skoXC1*skoXC1*(32+skoXC1*skoXC1*-1)))<=128,skoXC1*skoXC1*skoXC1*skoXC1*((-80/3)+skoXC1*skoXC1*((128/3)+skoXC1*skoXC1*((-55/3)+skoXC1*skoXC1*(5/3))))<=0,skoXC1*(-1+skoXC1*skoXC1*((1/3)+skoXC1*skoXC1*((3/20)+skoXC1*skoXC1*(5/56))))<=0,skoXC1*skoXC1*((-1/6)+skoXC1*skoXC1*((-3/40)+skoXC1*skoXC1*(-5/112)))<=1,skoXC1*skoXC1*((-1/2)+skoXC1*skoXC1*((7/120)+skoXC1*skoXC1*((33/560)+skoXC1*skoXC1*(-5/112))))<=0,skoXC1*skoXC1*skoXC1*skoXC1*((-13/60)+skoXC1*skoXC1*((-9/280)+skoXC1*skoXC1*(-5/28)))<=0,skoXC1*skoXC1*skoXC1*skoXC1*((-17/120)+skoXC1*skoXC1*((-27/280)+skoXC1*skoXC1*(5/224)))<=0,skoXC1*skoXC1*((1/3)+skoXC1*skoXC1*((3/20)+skoXC1*skoXC1*(5/56)))<=1,skoXC1*skoXC1*skoXC1*skoXC1*((32/15)+skoXC1*skoXC1*((-272/105)+skoXC1*skoXC1*((-1163/105)+skoXC1*skoXC1*((1753/105)+skoXC1*skoXC1*((-169/28)+skoXC1*skoXC1*(25/56))))))<=0,skoXC1*skoXC1*((1/6)+skoXC1*skoXC1*((3/40)+skoXC1*skoXC1*(5/112)))>-1,skoXC1*(-1+skoXC1*skoXC1*((-1/6)+skoXC1*skoXC1*((-3/40)+skoXC1*skoXC1*(-5/112))))<=0]], Reals]]

% In QepcadB format:
(E skoXC1) [[(skoXC1 skoXC1 skoXC1 skoXC1 (-17/120+(skoXC1 skoXC1 (-27/280+(skoXC1 skoXC1 (-185/2688+(skoXC1 skoXC1 (-329/6336+(skoXC1 skoXC1 (63/5632))))))))))<=0]/\[[-1<(skoXC1 skoXC1 (1/6+(skoXC1 skoXC1 (3/40+(skoXC1 skoXC1 (5/112+(skoXC1 skoXC1 (35/1152+(skoXC1 skoXC1 (63/2816))))))))))]/\[[(skoXC1 skoXC1 (1/3+(skoXC1 skoXC1 (3/20+(skoXC1 skoXC1 (5/56+(skoXC1 skoXC1 (35/576+(skoXC1 skoXC1 (63/1408))))))))))<=1]/\[[(skoXC1 skoXC1 skoXC1 skoXC1 (-13/60+(skoXC1 skoXC1 (-9/280+(skoXC1 skoXC1 (5/1344+(skoXC1 skoXC1 (161/12672+(skoXC1 skoXC1 (-63/704))))))))))<=0]/\[[(skoXC1 skoXC1 (-1/2+(skoXC1 skoXC1 (7/120+(skoXC1 skoXC1 (33/560+(skoXC1 skoXC1 (125/2688+(skoXC1 skoXC1 (931/25344+(skoXC1 skoXC1 (-63/2816))))))))))))<=0]/\[[(skoXC1 skoXC1 (-1/6+(skoXC1 skoXC1 (-3/40+(skoXC1 skoXC1 (-5/112+(skoXC1 skoXC1 (-35/1152+(skoXC1 skoXC1 (-63/2816))))))))))<=1]/\[[(skoXC1 (-1+(skoXC1 skoXC1 (1/3+(skoXC1 skoXC1 (3/20+(skoXC1 skoXC1 (5/56+(skoXC1 skoXC1 (35/576+(skoXC1 skoXC1 (63/1408))))))))))))<=0]/\[[(skoXC1 (-1+(skoXC1 skoXC1 (-1/6+(skoXC1 skoXC1 (-3/40))))))<=0]/\[[-1<(skoXC1 skoXC1 (1/6+(skoXC1 skoXC1 (3/40))))]/\[[(skoXC1 skoXC1 skoXC1 skoXC1 (32/15+(skoXC1 skoXC1 (-296/15+(skoXC1 skoXC1 (391/15+(skoXC1 skoXC1 (-146/15+(skoXC1 skoXC1 (3/4))))))))))<=0]/\[[(skoXC1 skoXC1 (1/3+(skoXC1 skoXC1 (3/20))))<=1]/\[[(skoXC1 skoXC1 skoXC1 skoXC1 (-17/120+(skoXC1 skoXC1 (3/80))))<=0]/\[[(skoXC1 skoXC1 skoXC1 skoXC1 (-13/60+(skoXC1 skoXC1 (-3/10))))<=0]/\[[(skoXC1 skoXC1 (-1/2+(skoXC1 skoXC1 (7/120+(skoXC1 skoXC1 (-3/40))))))<=0]/\[[(skoXC1 skoXC1 (-1/6+(skoXC1 skoXC1 (-3/40))))<=1]/\[[(skoXC1 (-1+(skoXC1 skoXC1 (1/3+(skoXC1 skoXC1 (3/20))))))<=0]/\[[0<(skoXC1 skoXC1)]/\[[(skoXC1 skoXC1 (80+(skoXC1 skoXC1 (-40+(skoXC1 skoXC1 (6+(skoXC1 skoXC1 (-1/8))))))))<=48]/\[[-48<(skoXC1 skoXC1 (-80+(skoXC1 skoXC1 (40+(skoXC1 skoXC1 (-6+(skoXC1 skoXC1 (1/8))))))))]/\[[(skoXC1 skoXC1 (24+(skoXC1 skoXC1 (-10+(skoXC1 skoXC1)))))<=16]/\[[(skoXC1 skoXC1 (1/2))<=3]/\[[-3<(skoXC1 skoXC1 (-1/2))]/\[[0<skoXC1]/\[[skoXC1<7/8]/\[[(skoXC1 (-1+(skoXC1 skoXC1 (1/3))))<=0]/\[[(skoXC1 skoXC1 (-1/6))<=1]/\[[(skoXC1 skoXC1 (-1/2+(skoXC1 skoXC1 (-1/6))))<=0]/\[[(skoXC1 skoXC1)<=2]/\[[(skoXC1 skoXC1 skoXC1 skoXC1 (-2/3))<=0]/\[[(skoXC1 (-1+(skoXC1 skoXC1 (-1/6))))<=0]/\[[(skoXC1 skoXC1 (1/3))<=1]/\[[(skoXC1 skoXC1 (256+(skoXC1 skoXC1 (-160+(skoXC1 skoXC1 (32+(skoXC1 skoXC1 (-1))))))))<=128]/\[[(skoXC1 skoXC1 skoXC1 skoXC1 (-80/3+(skoXC1 skoXC1 (128/3+(skoXC1 skoXC1 (-55/3+(skoXC1 skoXC1 (5/3))))))))<=0]/\[[(skoXC1 (-1+(skoXC1 skoXC1 (1/3+(skoXC1 skoXC1 (3/20+(skoXC1 skoXC1 (5/56))))))))<=0]/\[[(skoXC1 skoXC1 (-1/6+(skoXC1 skoXC1 (-3/40+(skoXC1 skoXC1 (-5/112))))))<=1]/\[[(skoXC1 skoXC1 (-1/2+(skoXC1 skoXC1 (7/120+(skoXC1 skoXC1 (33/560+(skoXC1 skoXC1 (-5/112))))))))<=0]/\[[(skoXC1 skoXC1 skoXC1 skoXC1 (-13/60+(skoXC1 skoXC1 (-9/280+(skoXC1 skoXC1 (-5/28))))))<=0]/\[[(skoXC1 skoXC1 skoXC1 skoXC1 (-17/120+(skoXC1 skoXC1 (-27/280+(skoXC1 skoXC1 (5/224))))))<=0]/\[[(skoXC1 skoXC1 (1/3+(skoXC1 skoXC1 (3/20+(skoXC1 skoXC1 (5/56))))))<=1]/\[[(skoXC1 skoXC1 skoXC1 skoXC1 (32/15+(skoXC1 skoXC1 (-272/105+(skoXC1 skoXC1 (-1163/105+(skoXC1 skoXC1 (1753/105+(skoXC1 skoXC1 (-169/28+(skoXC1 skoXC1 (25/56))))))))))))<=0]/\[[-1<(skoXC1 skoXC1 (1/6+(skoXC1 skoXC1 (3/40+(skoXC1 skoXC1 (5/112))))))]/\[(skoXC1 (-1+(skoXC1 skoXC1 (-1/6+(skoXC1 skoXC1 (-3/40+(skoXC1 skoXC1 (-5/112))))))))<=0]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]].

% In SMTLib2 format:
(declare-fun skoXC1 () Real) (assert (and (<= (* skoXC1 (* skoXC1 (* skoXC1 (* skoXC1 (+ (/ (- 17.) 120.) (* skoXC1 (* skoXC1 (+ (/ (- 27.) 280.) (* skoXC1 (* skoXC1 (+ (/ (- 185.) 2688.) (* skoXC1 (* skoXC1 (+ (/ (- 329.) 6336.) (* skoXC1 (* skoXC1 (/ 63. 5632.))))))))))))))))) 0.) (and (> (* skoXC1 (* skoXC1 (+ (/ 1. 6.) (* skoXC1 (* skoXC1 (+ (/ 3. 40.) (* skoXC1 (* skoXC1 (+ (/ 5. 112.) (* skoXC1 (* skoXC1 (+ (/ 35. 1152.) (* skoXC1 (* skoXC1 (/ 63. 2816.))))))))))))))) (- 1.)) (and (<= (* skoXC1 (* skoXC1 (+ (/ 1. 3.) (* skoXC1 (* skoXC1 (+ (/ 3. 20.) (* skoXC1 (* skoXC1 (+ (/ 5. 56.) (* skoXC1 (* skoXC1 (+ (/ 35. 576.) (* skoXC1 (* skoXC1 (/ 63. 1408.))))))))))))))) 1.) (and (<= (* skoXC1 (* skoXC1 (* skoXC1 (* skoXC1 (+ (/ (- 13.) 60.) (* skoXC1 (* skoXC1 (+ (/ (- 9.) 280.) (* skoXC1 (* skoXC1 (+ (/ 5. 1344.) (* skoXC1 (* skoXC1 (+ (/ 161. 12672.) (* skoXC1 (* skoXC1 (/ (- 63.) 704.))))))))))))))))) 0.) (and (<= (* skoXC1 (* skoXC1 (+ (/ (- 1.) 2.) (* skoXC1 (* skoXC1 (+ (/ 7. 120.) (* skoXC1 (* skoXC1 (+ (/ 33. 560.) (* skoXC1 (* skoXC1 (+ (/ 125. 2688.) (* skoXC1 (* skoXC1 (+ (/ 931. 25344.) (* skoXC1 (* skoXC1 (/ (- 63.) 2816.)))))))))))))))))) 0.) (and (<= (* skoXC1 (* skoXC1 (+ (/ (- 1.) 6.) (* skoXC1 (* skoXC1 (+ (/ (- 3.) 40.) (* skoXC1 (* skoXC1 (+ (/ (- 5.) 112.) (* skoXC1 (* skoXC1 (+ (/ (- 35.) 1152.) (* skoXC1 (* skoXC1 (/ (- 63.) 2816.))))))))))))))) 1.) (and (<= (* skoXC1 (+ (- 1.) (* skoXC1 (* skoXC1 (+ (/ 1. 3.) (* skoXC1 (* skoXC1 (+ (/ 3. 20.) (* skoXC1 (* skoXC1 (+ (/ 5. 56.) (* skoXC1 (* skoXC1 (+ (/ 35. 576.) (* skoXC1 (* skoXC1 (/ 63. 1408.))))))))))))))))) 0.) (and (<= (* skoXC1 (+ (- 1.) (* skoXC1 (* skoXC1 (+ (/ (- 1.) 6.) (* skoXC1 (* skoXC1 (/ (- 3.) 40.)))))))) 0.) (and (> (* skoXC1 (* skoXC1 (+ (/ 1. 6.) (* skoXC1 (* skoXC1 (/ 3. 40.)))))) (- 1.)) (and (<= (* skoXC1 (* skoXC1 (* skoXC1 (* skoXC1 (+ (/ 32. 15.) (* skoXC1 (* skoXC1 (+ (/ (- 296.) 15.) (* skoXC1 (* skoXC1 (+ (/ 391. 15.) (* skoXC1 (* skoXC1 (+ (/ (- 146.) 15.) (* skoXC1 (* skoXC1 (/ 3. 4.))))))))))))))))) 0.) (and (<= (* skoXC1 (* skoXC1 (+ (/ 1. 3.) (* skoXC1 (* skoXC1 (/ 3. 20.)))))) 1.) (and (<= (* skoXC1 (* skoXC1 (* skoXC1 (* skoXC1 (+ (/ (- 17.) 120.) (* skoXC1 (* skoXC1 (/ 3. 80.)))))))) 0.) (and (<= (* skoXC1 (* skoXC1 (* skoXC1 (* skoXC1 (+ (/ (- 13.) 60.) (* skoXC1 (* skoXC1 (/ (- 3.) 10.)))))))) 0.) (and (<= (* skoXC1 (* skoXC1 (+ (/ (- 1.) 2.) (* skoXC1 (* skoXC1 (+ (/ 7. 120.) (* skoXC1 (* skoXC1 (/ (- 3.) 40.))))))))) 0.) (and (<= (* skoXC1 (* skoXC1 (+ (/ (- 1.) 6.) (* skoXC1 (* skoXC1 (/ (- 3.) 40.)))))) 1.) (and (<= (* skoXC1 (+ (- 1.) (* skoXC1 (* skoXC1 (+ (/ 1. 3.) (* skoXC1 (* skoXC1 (/ 3. 20.)))))))) 0.) (and (> (* skoXC1 skoXC1) 0.) (and (<= (* skoXC1 (* skoXC1 (+ 80. (* skoXC1 (* skoXC1 (+ (- 40.) (* skoXC1 (* skoXC1 (+ 6. (* skoXC1 (* skoXC1 (/ (- 1.) 8.)))))))))))) 48.) (and (> (* skoXC1 (* skoXC1 (+ (- 80.) (* skoXC1 (* skoXC1 (+ 40. (* skoXC1 (* skoXC1 (+ (- 6.) (* skoXC1 (* skoXC1 (/ 1. 8.)))))))))))) (- 48.)) (and (<= (* skoXC1 (* skoXC1 (+ 24. (* skoXC1 (* skoXC1 (+ (- 10.) (* skoXC1 skoXC1))))))) 16.) (and (<= (* skoXC1 (* skoXC1 (/ 1. 2.))) 3.) (and (> (* skoXC1 (* skoXC1 (/ (- 1.) 2.))) (- 3.)) (and (> skoXC1 0.) (and (> (/ 7. 8.) skoXC1) (and (<= (* skoXC1 (+ (- 1.) (* skoXC1 (* skoXC1 (/ 1. 3.))))) 0.) (and (<= (* skoXC1 (* skoXC1 (/ (- 1.) 6.))) 1.) (and (<= (* skoXC1 (* skoXC1 (+ (/ (- 1.) 2.) (* skoXC1 (* skoXC1 (/ (- 1.) 6.)))))) 0.) (and (<= (* skoXC1 skoXC1) 2.) (and (<= (* skoXC1 (* skoXC1 (* skoXC1 (* skoXC1 (/ (- 2.) 3.))))) 0.) (and (<= (* skoXC1 (+ (- 1.) (* skoXC1 (* skoXC1 (/ (- 1.) 6.))))) 0.) (and (<= (* skoXC1 (* skoXC1 (/ 1. 3.))) 1.) (and (<= (* skoXC1 (* skoXC1 (+ 256. (* skoXC1 (* skoXC1 (+ (- 160.) (* skoXC1 (* skoXC1 (+ 32. (* skoXC1 (* skoXC1 (- 1.)))))))))))) 128.) (and (<= (* skoXC1 (* skoXC1 (* skoXC1 (* skoXC1 (+ (/ (- 80.) 3.) (* skoXC1 (* skoXC1 (+ (/ 128. 3.) (* skoXC1 (* skoXC1 (+ (/ (- 55.) 3.) (* skoXC1 (* skoXC1 (/ 5. 3.)))))))))))))) 0.) (and (<= (* skoXC1 (+ (- 1.) (* skoXC1 (* skoXC1 (+ (/ 1. 3.) (* skoXC1 (* skoXC1 (+ (/ 3. 20.) (* skoXC1 (* skoXC1 (/ 5. 56.))))))))))) 0.) (and (<= (* skoXC1 (* skoXC1 (+ (/ (- 1.) 6.) (* skoXC1 (* skoXC1 (+ (/ (- 3.) 40.) (* skoXC1 (* skoXC1 (/ (- 5.) 112.))))))))) 1.) (and (<= (* skoXC1 (* skoXC1 (+ (/ (- 1.) 2.) (* skoXC1 (* skoXC1 (+ (/ 7. 120.) (* skoXC1 (* skoXC1 (+ (/ 33. 560.) (* skoXC1 (* skoXC1 (/ (- 5.) 112.)))))))))))) 0.) (and (<= (* skoXC1 (* skoXC1 (* skoXC1 (* skoXC1 (+ (/ (- 13.) 60.) (* skoXC1 (* skoXC1 (+ (/ (- 9.) 280.) (* skoXC1 (* skoXC1 (/ (- 5.) 28.))))))))))) 0.) (and (<= (* skoXC1 (* skoXC1 (* skoXC1 (* skoXC1 (+ (/ (- 17.) 120.) (* skoXC1 (* skoXC1 (+ (/ (- 27.) 280.) (* skoXC1 (* skoXC1 (/ 5. 224.))))))))))) 0.) (and (<= (* skoXC1 (* skoXC1 (+ (/ 1. 3.) (* skoXC1 (* skoXC1 (+ (/ 3. 20.) (* skoXC1 (* skoXC1 (/ 5. 56.))))))))) 1.) (and (<= (* skoXC1 (* skoXC1 (* skoXC1 (* skoXC1 (+ (/ 32. 15.) (* skoXC1 (* skoXC1 (+ (/ (- 272.) 105.) (* skoXC1 (* skoXC1 (+ (/ (- 1163.) 105.) (* skoXC1 (* skoXC1 (+ (/ 1753. 105.) (* skoXC1 (* skoXC1 (+ (/ (- 169.) 28.) (* skoXC1 (* skoXC1 (/ 25. 56.)))))))))))))))))))) 0.) (and (> (* skoXC1 (* skoXC1 (+ (/ 1. 6.) (* skoXC1 (* skoXC1 (+ (/ 3. 40.) (* skoXC1 (* skoXC1 (/ 5. 112.))))))))) (- 1.)) (<= (* skoXC1 (+ (- 1.) (* skoXC1 (* skoXC1 (+ (/ (- 1.) 6.) (* skoXC1 (* skoXC1 (+ (/ (- 3.) 40.) (* skoXC1 (* skoXC1 (/ (- 5.) 112.))))))))))) 0.)))))))))))))))))))))))))))))))))))))))))))

% In GRF format:
(sequent " MetiTarski formula " (antecedent (<= (* skoXC1 (* skoXC1 (* skoXC1 (* skoXC1 (+ (/ (- 17.) 120.) (* skoXC1 (* skoXC1 (+ (/ (- 27.) 280.) (* skoXC1 (* skoXC1 (+ (/ (- 185.) 2688.) (* skoXC1 (* skoXC1 (+ (/ (- 329.) 6336.) (* skoXC1 (* skoXC1 (/ 63. 5632.))))))))))))))))) 0.) (> (* skoXC1 (* skoXC1 (+ (/ 1. 6.) (* skoXC1 (* skoXC1 (+ (/ 3. 40.) (* skoXC1 (* skoXC1 (+ (/ 5. 112.) (* skoXC1 (* skoXC1 (+ (/ 35. 1152.) (* skoXC1 (* skoXC1 (/ 63. 2816.))))))))))))))) (- 1.)) (<= (* skoXC1 (* skoXC1 (+ (/ 1. 3.) (* skoXC1 (* skoXC1 (+ (/ 3. 20.) (* skoXC1 (* skoXC1 (+ (/ 5. 56.) (* skoXC1 (* skoXC1 (+ (/ 35. 576.) (* skoXC1 (* skoXC1 (/ 63. 1408.))))))))))))))) 1.) (<= (* skoXC1 (* skoXC1 (* skoXC1 (* skoXC1 (+ (/ (- 13.) 60.) (* skoXC1 (* skoXC1 (+ (/ (- 9.) 280.) (* skoXC1 (* skoXC1 (+ (/ 5. 1344.) (* skoXC1 (* skoXC1 (+ (/ 161. 12672.) (* skoXC1 (* skoXC1 (/ (- 63.) 704.))))))))))))))))) 0.) (<= (* skoXC1 (* skoXC1 (+ (/ (- 1.) 2.) (* skoXC1 (* skoXC1 (+ (/ 7. 120.) (* skoXC1 (* skoXC1 (+ (/ 33. 560.) (* skoXC1 (* skoXC1 (+ (/ 125. 2688.) (* skoXC1 (* skoXC1 (+ (/ 931. 25344.) (* skoXC1 (* skoXC1 (/ (- 63.) 2816.)))))))))))))))))) 0.) (<= (* skoXC1 (* skoXC1 (+ (/ (- 1.) 6.) (* skoXC1 (* skoXC1 (+ (/ (- 3.) 40.) (* skoXC1 (* skoXC1 (+ (/ (- 5.) 112.) (* skoXC1 (* skoXC1 (+ (/ (- 35.) 1152.) (* skoXC1 (* skoXC1 (/ (- 63.) 2816.))))))))))))))) 1.) (<= (* skoXC1 (+ (- 1.) (* skoXC1 (* skoXC1 (+ (/ 1. 3.) (* skoXC1 (* skoXC1 (+ (/ 3. 20.) (* skoXC1 (* skoXC1 (+ (/ 5. 56.) (* skoXC1 (* skoXC1 (+ (/ 35. 576.) (* skoXC1 (* skoXC1 (/ 63. 1408.))))))))))))))))) 0.) (<= (* skoXC1 (+ (- 1.) (* skoXC1 (* skoXC1 (+ (/ (- 1.) 6.) (* skoXC1 (* skoXC1 (/ (- 3.) 40.)))))))) 0.) (> (* skoXC1 (* skoXC1 (+ (/ 1. 6.) (* skoXC1 (* skoXC1 (/ 3. 40.)))))) (- 1.)) (<= (* skoXC1 (* skoXC1 (* skoXC1 (* skoXC1 (+ (/ 32. 15.) (* skoXC1 (* skoXC1 (+ (/ (- 296.) 15.) (* skoXC1 (* skoXC1 (+ (/ 391. 15.) (* skoXC1 (* skoXC1 (+ (/ (- 146.) 15.) (* skoXC1 (* skoXC1 (/ 3. 4.))))))))))))))))) 0.) (<= (* skoXC1 (* skoXC1 (+ (/ 1. 3.) (* skoXC1 (* skoXC1 (/ 3. 20.)))))) 1.) (<= (* skoXC1 (* skoXC1 (* skoXC1 (* skoXC1 (+ (/ (- 17.) 120.) (* skoXC1 (* skoXC1 (/ 3. 80.)))))))) 0.) (<= (* skoXC1 (* skoXC1 (* skoXC1 (* skoXC1 (+ (/ (- 13.) 60.) (* skoXC1 (* skoXC1 (/ (- 3.) 10.)))))))) 0.) (<= (* skoXC1 (* skoXC1 (+ (/ (- 1.) 2.) (* skoXC1 (* skoXC1 (+ (/ 7. 120.) (* skoXC1 (* skoXC1 (/ (- 3.) 40.))))))))) 0.) (<= (* skoXC1 (* skoXC1 (+ (/ (- 1.) 6.) (* skoXC1 (* skoXC1 (/ (- 3.) 40.)))))) 1.) (<= (* skoXC1 (+ (- 1.) (* skoXC1 (* skoXC1 (+ (/ 1. 3.) (* skoXC1 (* skoXC1 (/ 3. 20.)))))))) 0.) (> (* skoXC1 skoXC1) 0.) (<= (* skoXC1 (* skoXC1 (+ 80. (* skoXC1 (* skoXC1 (+ (- 40.) (* skoXC1 (* skoXC1 (+ 6. (* skoXC1 (* skoXC1 (/ (- 1.) 8.)))))))))))) 48.) (> (* skoXC1 (* skoXC1 (+ (- 80.) (* skoXC1 (* skoXC1 (+ 40. (* skoXC1 (* skoXC1 (+ (- 6.) (* skoXC1 (* skoXC1 (/ 1. 8.)))))))))))) (- 48.)) (<= (* skoXC1 (* skoXC1 (+ 24. (* skoXC1 (* skoXC1 (+ (- 10.) (* skoXC1 skoXC1))))))) 16.) (<= (* skoXC1 (* skoXC1 (/ 1. 2.))) 3.) (> (* skoXC1 (* skoXC1 (/ (- 1.) 2.))) (- 3.)) (> skoXC1 0.) (> (/ 7. 8.) skoXC1) (<= (* skoXC1 (+ (- 1.) (* skoXC1 (* skoXC1 (/ 1. 3.))))) 0.) (<= (* skoXC1 (* skoXC1 (/ (- 1.) 6.))) 1.) (<= (* skoXC1 (* skoXC1 (+ (/ (- 1.) 2.) (* skoXC1 (* skoXC1 (/ (- 1.) 6.)))))) 0.) (<= (* skoXC1 skoXC1) 2.) (<= (* skoXC1 (* skoXC1 (* skoXC1 (* skoXC1 (/ (- 2.) 3.))))) 0.) (<= (* skoXC1 (+ (- 1.) (* skoXC1 (* skoXC1 (/ (- 1.) 6.))))) 0.) (<= (* skoXC1 (* skoXC1 (/ 1. 3.))) 1.) (<= (* skoXC1 (* skoXC1 (+ 256. (* skoXC1 (* skoXC1 (+ (- 160.) (* skoXC1 (* skoXC1 (+ 32. (* skoXC1 (* skoXC1 (- 1.)))))))))))) 128.) (<= (* skoXC1 (* skoXC1 (* skoXC1 (* skoXC1 (+ (/ (- 80.) 3.) (* skoXC1 (* skoXC1 (+ (/ 128. 3.) (* skoXC1 (* skoXC1 (+ (/ (- 55.) 3.) (* skoXC1 (* skoXC1 (/ 5. 3.)))))))))))))) 0.) (<= (* skoXC1 (+ (- 1.) (* skoXC1 (* skoXC1 (+ (/ 1. 3.) (* skoXC1 (* skoXC1 (+ (/ 3. 20.) (* skoXC1 (* skoXC1 (/ 5. 56.))))))))))) 0.) (<= (* skoXC1 (* skoXC1 (+ (/ (- 1.) 6.) (* skoXC1 (* skoXC1 (+ (/ (- 3.) 40.) (* skoXC1 (* skoXC1 (/ (- 5.) 112.))))))))) 1.) (<= (* skoXC1 (* skoXC1 (+ (/ (- 1.) 2.) (* skoXC1 (* skoXC1 (+ (/ 7. 120.) (* skoXC1 (* skoXC1 (+ (/ 33. 560.) (* skoXC1 (* skoXC1 (/ (- 5.) 112.)))))))))))) 0.) (<= (* skoXC1 (* skoXC1 (* skoXC1 (* skoXC1 (+ (/ (- 13.) 60.) (* skoXC1 (* skoXC1 (+ (/ (- 9.) 280.) (* skoXC1 (* skoXC1 (/ (- 5.) 28.))))))))))) 0.) (<= (* skoXC1 (* skoXC1 (* skoXC1 (* skoXC1 (+ (/ (- 17.) 120.) (* skoXC1 (* skoXC1 (+ (/ (- 27.) 280.) (* skoXC1 (* skoXC1 (/ 5. 224.))))))))))) 0.) (<= (* skoXC1 (* skoXC1 (+ (/ 1. 3.) (* skoXC1 (* skoXC1 (+ (/ 3. 20.) (* skoXC1 (* skoXC1 (/ 5. 56.))))))))) 1.) (<= (* skoXC1 (* skoXC1 (* skoXC1 (* skoXC1 (+ (/ 32. 15.) (* skoXC1 (* skoXC1 (+ (/ (- 272.) 105.) (* skoXC1 (* skoXC1 (+ (/ (- 1163.) 105.) (* skoXC1 (* skoXC1 (+ (/ 1753. 105.) (* skoXC1 (* skoXC1 (+ (/ (- 169.) 28.) (* skoXC1 (* skoXC1 (/ 25. 56.)))))))))))))))))))) 0.) (> (* skoXC1 (* skoXC1 (+ (/ 1. 6.) (* skoXC1 (* skoXC1 (+ (/ 3. 40.) (* skoXC1 (* skoXC1 (/ 5. 112.))))))))) (- 1.))) (succedent (> (* skoXC1 (+ (- 1.) (* skoXC1 (* skoXC1 (+ (/ (- 1.) 6.) (* skoXC1 (* skoXC1 (+ (/ (- 3.) 40.) (* skoXC1 (* skoXC1 (/ (- 5.) 112.))))))))))) 0.)))
-----[end problem]-----

-----[begin problem]-----
% In Mathematica format:
Timing[Resolve[Exists[{skoXC1}, And[skoXC1*skoXC1*((-1/6)+skoXC1*skoXC1*((-3/40)+skoXC1*skoXC1*((-5/112)+skoXC1*skoXC1*((-35/1152)+skoXC1*skoXC1*(-63/2816)))))<=1,skoXC1*skoXC1*((1/3)+skoXC1*skoXC1*((3/20)+skoXC1*skoXC1*((5/56)+skoXC1*skoXC1*((35/576)+skoXC1*skoXC1*(63/1408)))))<=1,skoXC1*skoXC1*skoXC1*skoXC1*((-13/60)+skoXC1*skoXC1*((-9/280)+skoXC1*skoXC1*((5/1344)+skoXC1*skoXC1*((161/12672)+skoXC1*skoXC1*(-63/704)))))<=0,skoXC1*skoXC1*((-1/2)+skoXC1*skoXC1*((7/120)+skoXC1*skoXC1*((33/560)+skoXC1*skoXC1*((125/2688)+skoXC1*skoXC1*((931/25344)+skoXC1*skoXC1*(-63/2816))))))<=0,skoXC1*skoXC1*((-1/6)+skoXC1*skoXC1*((-3/40)+skoXC1*skoXC1*((-5/112)+skoXC1*skoXC1*((-35/1152)+skoXC1*skoXC1*(-63/2816)))))<=1,skoXC1*(-1+skoXC1*skoXC1*((1/3)+skoXC1*skoXC1*((3/20)+skoXC1*skoXC1*((5/56)+skoXC1*skoXC1*((35/576)+skoXC1*skoXC1*(63/1408))))))<=0,skoXC1*(-1+skoXC1*skoXC1*((-1/6)+skoXC1*skoXC1*(-3/40)))<=0,skoXC1*skoXC1*((1/6)+skoXC1*skoXC1*(3/40))>-1,skoXC1*skoXC1*skoXC1*skoXC1*((32/15)+skoXC1*skoXC1*((-296/15)+skoXC1*skoXC1*((391/15)+skoXC1*skoXC1*((-146/15)+skoXC1*skoXC1*(3/4)))))<=0,skoXC1*skoXC1*((1/3)+skoXC1*skoXC1*(3/20))<=1,skoXC1*skoXC1*skoXC1*skoXC1*((-17/120)+skoXC1*skoXC1*(3/80))<=0,skoXC1*skoXC1*skoXC1*skoXC1*((-13/60)+skoXC1*skoXC1*(-3/10))<=0,skoXC1*skoXC1*((-1/2)+skoXC1*skoXC1*((7/120)+skoXC1*skoXC1*(-3/40)))<=0,skoXC1*skoXC1*((-1/6)+skoXC1*skoXC1*(-3/40))<=1,skoXC1*(-1+skoXC1*skoXC1*((1/3)+skoXC1*skoXC1*(3/20)))<=0,skoXC1*skoXC1>0,skoXC1*skoXC1*(80+skoXC1*skoXC1*(-40+skoXC1*skoXC1*(6+skoXC1*skoXC1*(-1/8))))<=48,skoXC1*skoXC1*(-80+skoXC1*skoXC1*(40+skoXC1*skoXC1*(-6+skoXC1*skoXC1*(1/8))))>-48,skoXC1*skoXC1*(24+skoXC1*skoXC1*(-10+skoXC1*skoXC1))<=16,skoXC1*skoXC1*(1/2)<=3,skoXC1*skoXC1*(-1/2)>-3,skoXC1>0,(7/8)>skoXC1,skoXC1*(-1+skoXC1*skoXC1*(1/3))<=0,skoXC1*skoXC1*(-1/6)<=1,skoXC1*skoXC1*((-1/2)+skoXC1*skoXC1*(-1/6))<=0,skoXC1*skoXC1<=2,skoXC1*skoXC1*skoXC1*skoXC1*(-2/3)<=0,skoXC1*(-1+skoXC1*skoXC1*(-1/6))<=0,skoXC1*skoXC1*(1/3)<=1,skoXC1*skoXC1*(256+skoXC1*skoXC1*(-160+skoXC1*skoXC1*(32+skoXC1*skoXC1*-1)))<=128,skoXC1*skoXC1*skoXC1*skoXC1*((-80/3)+skoXC1*skoXC1*((128/3)+skoXC1*skoXC1*((-55/3)+skoXC1*skoXC1*(5/3))))<=0,skoXC1*(-1+skoXC1*skoXC1*((1/3)+skoXC1*skoXC1*((3/20)+skoXC1*skoXC1*(5/56))))<=0,skoXC1*skoXC1*((-1/6)+skoXC1*skoXC1*((-3/40)+skoXC1*skoXC1*(-5/112)))<=1,skoXC1*skoXC1*((-1/2)+skoXC1*skoXC1*((7/120)+skoXC1*skoXC1*((33/560)+skoXC1*skoXC1*(-5/112))))<=0,skoXC1*skoXC1*skoXC1*skoXC1*((-13/60)+skoXC1*skoXC1*((-9/280)+skoXC1*skoXC1*(-5/28)))<=0,skoXC1*skoXC1*skoXC1*skoXC1*((-17/120)+skoXC1*skoXC1*((-27/280)+skoXC1*skoXC1*(5/224)))<=0,skoXC1*skoXC1*((1/3)+skoXC1*skoXC1*((3/20)+skoXC1*skoXC1*(5/56)))<=1,skoXC1*skoXC1*skoXC1*skoXC1*((32/15)+skoXC1*skoXC1*((-272/105)+skoXC1*skoXC1*((-1163/105)+skoXC1*skoXC1*((1753/105)+skoXC1*skoXC1*((-169/28)+skoXC1*skoXC1*(25/56))))))<=0,skoXC1*skoXC1*((1/6)+skoXC1*skoXC1*((3/40)+skoXC1*skoXC1*(5/112)))>-1,skoXC1*(-1+skoXC1*skoXC1*((-1/6)+skoXC1*skoXC1*((-3/40)+skoXC1*skoXC1*(-5/112))))<=0]], Reals]]

% In QepcadB format:
(E skoXC1) [[(skoXC1 skoXC1 (-1/6+(skoXC1 skoXC1 (-3/40+(skoXC1 skoXC1 (-5/112+(skoXC1 skoXC1 (-35/1152+(skoXC1 skoXC1 (-63/2816))))))))))<=1]/\[[(skoXC1 skoXC1 (1/3+(skoXC1 skoXC1 (3/20+(skoXC1 skoXC1 (5/56+(skoXC1 skoXC1 (35/576+(skoXC1 skoXC1 (63/1408))))))))))<=1]/\[[(skoXC1 skoXC1 skoXC1 skoXC1 (-13/60+(skoXC1 skoXC1 (-9/280+(skoXC1 skoXC1 (5/1344+(skoXC1 skoXC1 (161/12672+(skoXC1 skoXC1 (-63/704))))))))))<=0]/\[[(skoXC1 skoXC1 (-1/2+(skoXC1 skoXC1 (7/120+(skoXC1 skoXC1 (33/560+(skoXC1 skoXC1 (125/2688+(skoXC1 skoXC1 (931/25344+(skoXC1 skoXC1 (-63/2816))))))))))))<=0]/\[[(skoXC1 skoXC1 (-1/6+(skoXC1 skoXC1 (-3/40+(skoXC1 skoXC1 (-5/112+(skoXC1 skoXC1 (-35/1152+(skoXC1 skoXC1 (-63/2816))))))))))<=1]/\[[(skoXC1 (-1+(skoXC1 skoXC1 (1/3+(skoXC1 skoXC1 (3/20+(skoXC1 skoXC1 (5/56+(skoXC1 skoXC1 (35/576+(skoXC1 skoXC1 (63/1408))))))))))))<=0]/\[[(skoXC1 (-1+(skoXC1 skoXC1 (-1/6+(skoXC1 skoXC1 (-3/40))))))<=0]/\[[-1<(skoXC1 skoXC1 (1/6+(skoXC1 skoXC1 (3/40))))]/\[[(skoXC1 skoXC1 skoXC1 skoXC1 (32/15+(skoXC1 skoXC1 (-296/15+(skoXC1 skoXC1 (391/15+(skoXC1 skoXC1 (-146/15+(skoXC1 skoXC1 (3/4))))))))))<=0]/\[[(skoXC1 skoXC1 (1/3+(skoXC1 skoXC1 (3/20))))<=1]/\[[(skoXC1 skoXC1 skoXC1 skoXC1 (-17/120+(skoXC1 skoXC1 (3/80))))<=0]/\[[(skoXC1 skoXC1 skoXC1 skoXC1 (-13/60+(skoXC1 skoXC1 (-3/10))))<=0]/\[[(skoXC1 skoXC1 (-1/2+(skoXC1 skoXC1 (7/120+(skoXC1 skoXC1 (-3/40))))))<=0]/\[[(skoXC1 skoXC1 (-1/6+(skoXC1 skoXC1 (-3/40))))<=1]/\[[(skoXC1 (-1+(skoXC1 skoXC1 (1/3+(skoXC1 skoXC1 (3/20))))))<=0]/\[[0<(skoXC1 skoXC1)]/\[[(skoXC1 skoXC1 (80+(skoXC1 skoXC1 (-40+(skoXC1 skoXC1 (6+(skoXC1 skoXC1 (-1/8))))))))<=48]/\[[-48<(skoXC1 skoXC1 (-80+(skoXC1 skoXC1 (40+(skoXC1 skoXC1 (-6+(skoXC1 skoXC1 (1/8))))))))]/\[[(skoXC1 skoXC1 (24+(skoXC1 skoXC1 (-10+(skoXC1 skoXC1)))))<=16]/\[[(skoXC1 skoXC1 (1/2))<=3]/\[[-3<(skoXC1 skoXC1 (-1/2))]/\[[0<skoXC1]/\[[skoXC1<7/8]/\[[(skoXC1 (-1+(skoXC1 skoXC1 (1/3))))<=0]/\[[(skoXC1 skoXC1 (-1/6))<=1]/\[[(skoXC1 skoXC1 (-1/2+(skoXC1 skoXC1 (-1/6))))<=0]/\[[(skoXC1 skoXC1)<=2]/\[[(skoXC1 skoXC1 skoXC1 skoXC1 (-2/3))<=0]/\[[(skoXC1 (-1+(skoXC1 skoXC1 (-1/6))))<=0]/\[[(skoXC1 skoXC1 (1/3))<=1]/\[[(skoXC1 skoXC1 (256+(skoXC1 skoXC1 (-160+(skoXC1 skoXC1 (32+(skoXC1 skoXC1 (-1))))))))<=128]/\[[(skoXC1 skoXC1 skoXC1 skoXC1 (-80/3+(skoXC1 skoXC1 (128/3+(skoXC1 skoXC1 (-55/3+(skoXC1 skoXC1 (5/3))))))))<=0]/\[[(skoXC1 (-1+(skoXC1 skoXC1 (1/3+(skoXC1 skoXC1 (3/20+(skoXC1 skoXC1 (5/56))))))))<=0]/\[[(skoXC1 skoXC1 (-1/6+(skoXC1 skoXC1 (-3/40+(skoXC1 skoXC1 (-5/112))))))<=1]/\[[(skoXC1 skoXC1 (-1/2+(skoXC1 skoXC1 (7/120+(skoXC1 skoXC1 (33/560+(skoXC1 skoXC1 (-5/112))))))))<=0]/\[[(skoXC1 skoXC1 skoXC1 skoXC1 (-13/60+(skoXC1 skoXC1 (-9/280+(skoXC1 skoXC1 (-5/28))))))<=0]/\[[(skoXC1 skoXC1 skoXC1 skoXC1 (-17/120+(skoXC1 skoXC1 (-27/280+(skoXC1 skoXC1 (5/224))))))<=0]/\[[(skoXC1 skoXC1 (1/3+(skoXC1 skoXC1 (3/20+(skoXC1 skoXC1 (5/56))))))<=1]/\[[(skoXC1 skoXC1 skoXC1 skoXC1 (32/15+(skoXC1 skoXC1 (-272/105+(skoXC1 skoXC1 (-1163/105+(skoXC1 skoXC1 (1753/105+(skoXC1 skoXC1 (-169/28+(skoXC1 skoXC1 (25/56))))))))))))<=0]/\[[-1<(skoXC1 skoXC1 (1/6+(skoXC1 skoXC1 (3/40+(skoXC1 skoXC1 (5/112))))))]/\[(skoXC1 (-1+(skoXC1 skoXC1 (-1/6+(skoXC1 skoXC1 (-3/40+(skoXC1 skoXC1 (-5/112))))))))<=0]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]].

% In SMTLib2 format:
(declare-fun skoXC1 () Real) (assert (and (<= (* skoXC1 (* skoXC1 (+ (/ (- 1.) 6.) (* skoXC1 (* skoXC1 (+ (/ (- 3.) 40.) (* skoXC1 (* skoXC1 (+ (/ (- 5.) 112.) (* skoXC1 (* skoXC1 (+ (/ (- 35.) 1152.) (* skoXC1 (* skoXC1 (/ (- 63.) 2816.))))))))))))))) 1.) (and (<= (* skoXC1 (* skoXC1 (+ (/ 1. 3.) (* skoXC1 (* skoXC1 (+ (/ 3. 20.) (* skoXC1 (* skoXC1 (+ (/ 5. 56.) (* skoXC1 (* skoXC1 (+ (/ 35. 576.) (* skoXC1 (* skoXC1 (/ 63. 1408.))))))))))))))) 1.) (and (<= (* skoXC1 (* skoXC1 (* skoXC1 (* skoXC1 (+ (/ (- 13.) 60.) (* skoXC1 (* skoXC1 (+ (/ (- 9.) 280.) (* skoXC1 (* skoXC1 (+ (/ 5. 1344.) (* skoXC1 (* skoXC1 (+ (/ 161. 12672.) (* skoXC1 (* skoXC1 (/ (- 63.) 704.))))))))))))))))) 0.) (and (<= (* skoXC1 (* skoXC1 (+ (/ (- 1.) 2.) (* skoXC1 (* skoXC1 (+ (/ 7. 120.) (* skoXC1 (* skoXC1 (+ (/ 33. 560.) (* skoXC1 (* skoXC1 (+ (/ 125. 2688.) (* skoXC1 (* skoXC1 (+ (/ 931. 25344.) (* skoXC1 (* skoXC1 (/ (- 63.) 2816.)))))))))))))))))) 0.) (and (<= (* skoXC1 (* skoXC1 (+ (/ (- 1.) 6.) (* skoXC1 (* skoXC1 (+ (/ (- 3.) 40.) (* skoXC1 (* skoXC1 (+ (/ (- 5.) 112.) (* skoXC1 (* skoXC1 (+ (/ (- 35.) 1152.) (* skoXC1 (* skoXC1 (/ (- 63.) 2816.))))))))))))))) 1.) (and (<= (* skoXC1 (+ (- 1.) (* skoXC1 (* skoXC1 (+ (/ 1. 3.) (* skoXC1 (* skoXC1 (+ (/ 3. 20.) (* skoXC1 (* skoXC1 (+ (/ 5. 56.) (* skoXC1 (* skoXC1 (+ (/ 35. 576.) (* skoXC1 (* skoXC1 (/ 63. 1408.))))))))))))))))) 0.) (and (<= (* skoXC1 (+ (- 1.) (* skoXC1 (* skoXC1 (+ (/ (- 1.) 6.) (* skoXC1 (* skoXC1 (/ (- 3.) 40.)))))))) 0.) (and (> (* skoXC1 (* skoXC1 (+ (/ 1. 6.) (* skoXC1 (* skoXC1 (/ 3. 40.)))))) (- 1.)) (and (<= (* skoXC1 (* skoXC1 (* skoXC1 (* skoXC1 (+ (/ 32. 15.) (* skoXC1 (* skoXC1 (+ (/ (- 296.) 15.) (* skoXC1 (* skoXC1 (+ (/ 391. 15.) (* skoXC1 (* skoXC1 (+ (/ (- 146.) 15.) (* skoXC1 (* skoXC1 (/ 3. 4.))))))))))))))))) 0.) (and (<= (* skoXC1 (* skoXC1 (+ (/ 1. 3.) (* skoXC1 (* skoXC1 (/ 3. 20.)))))) 1.) (and (<= (* skoXC1 (* skoXC1 (* skoXC1 (* skoXC1 (+ (/ (- 17.) 120.) (* skoXC1 (* skoXC1 (/ 3. 80.)))))))) 0.) (and (<= (* skoXC1 (* skoXC1 (* skoXC1 (* skoXC1 (+ (/ (- 13.) 60.) (* skoXC1 (* skoXC1 (/ (- 3.) 10.)))))))) 0.) (and (<= (* skoXC1 (* skoXC1 (+ (/ (- 1.) 2.) (* skoXC1 (* skoXC1 (+ (/ 7. 120.) (* skoXC1 (* skoXC1 (/ (- 3.) 40.))))))))) 0.) (and (<= (* skoXC1 (* skoXC1 (+ (/ (- 1.) 6.) (* skoXC1 (* skoXC1 (/ (- 3.) 40.)))))) 1.) (and (<= (* skoXC1 (+ (- 1.) (* skoXC1 (* skoXC1 (+ (/ 1. 3.) (* skoXC1 (* skoXC1 (/ 3. 20.)))))))) 0.) (and (> (* skoXC1 skoXC1) 0.) (and (<= (* skoXC1 (* skoXC1 (+ 80. (* skoXC1 (* skoXC1 (+ (- 40.) (* skoXC1 (* skoXC1 (+ 6. (* skoXC1 (* skoXC1 (/ (- 1.) 8.)))))))))))) 48.) (and (> (* skoXC1 (* skoXC1 (+ (- 80.) (* skoXC1 (* skoXC1 (+ 40. (* skoXC1 (* skoXC1 (+ (- 6.) (* skoXC1 (* skoXC1 (/ 1. 8.)))))))))))) (- 48.)) (and (<= (* skoXC1 (* skoXC1 (+ 24. (* skoXC1 (* skoXC1 (+ (- 10.) (* skoXC1 skoXC1))))))) 16.) (and (<= (* skoXC1 (* skoXC1 (/ 1. 2.))) 3.) (and (> (* skoXC1 (* skoXC1 (/ (- 1.) 2.))) (- 3.)) (and (> skoXC1 0.) (and (> (/ 7. 8.) skoXC1) (and (<= (* skoXC1 (+ (- 1.) (* skoXC1 (* skoXC1 (/ 1. 3.))))) 0.) (and (<= (* skoXC1 (* skoXC1 (/ (- 1.) 6.))) 1.) (and (<= (* skoXC1 (* skoXC1 (+ (/ (- 1.) 2.) (* skoXC1 (* skoXC1 (/ (- 1.) 6.)))))) 0.) (and (<= (* skoXC1 skoXC1) 2.) (and (<= (* skoXC1 (* skoXC1 (* skoXC1 (* skoXC1 (/ (- 2.) 3.))))) 0.) (and (<= (* skoXC1 (+ (- 1.) (* skoXC1 (* skoXC1 (/ (- 1.) 6.))))) 0.) (and (<= (* skoXC1 (* skoXC1 (/ 1. 3.))) 1.) (and (<= (* skoXC1 (* skoXC1 (+ 256. (* skoXC1 (* skoXC1 (+ (- 160.) (* skoXC1 (* skoXC1 (+ 32. (* skoXC1 (* skoXC1 (- 1.)))))))))))) 128.) (and (<= (* skoXC1 (* skoXC1 (* skoXC1 (* skoXC1 (+ (/ (- 80.) 3.) (* skoXC1 (* skoXC1 (+ (/ 128. 3.) (* skoXC1 (* skoXC1 (+ (/ (- 55.) 3.) (* skoXC1 (* skoXC1 (/ 5. 3.)))))))))))))) 0.) (and (<= (* skoXC1 (+ (- 1.) (* skoXC1 (* skoXC1 (+ (/ 1. 3.) (* skoXC1 (* skoXC1 (+ (/ 3. 20.) (* skoXC1 (* skoXC1 (/ 5. 56.))))))))))) 0.) (and (<= (* skoXC1 (* skoXC1 (+ (/ (- 1.) 6.) (* skoXC1 (* skoXC1 (+ (/ (- 3.) 40.) (* skoXC1 (* skoXC1 (/ (- 5.) 112.))))))))) 1.) (and (<= (* skoXC1 (* skoXC1 (+ (/ (- 1.) 2.) (* skoXC1 (* skoXC1 (+ (/ 7. 120.) (* skoXC1 (* skoXC1 (+ (/ 33. 560.) (* skoXC1 (* skoXC1 (/ (- 5.) 112.)))))))))))) 0.) (and (<= (* skoXC1 (* skoXC1 (* skoXC1 (* skoXC1 (+ (/ (- 13.) 60.) (* skoXC1 (* skoXC1 (+ (/ (- 9.) 280.) (* skoXC1 (* skoXC1 (/ (- 5.) 28.))))))))))) 0.) (and (<= (* skoXC1 (* skoXC1 (* skoXC1 (* skoXC1 (+ (/ (- 17.) 120.) (* skoXC1 (* skoXC1 (+ (/ (- 27.) 280.) (* skoXC1 (* skoXC1 (/ 5. 224.))))))))))) 0.) (and (<= (* skoXC1 (* skoXC1 (+ (/ 1. 3.) (* skoXC1 (* skoXC1 (+ (/ 3. 20.) (* skoXC1 (* skoXC1 (/ 5. 56.))))))))) 1.) (and (<= (* skoXC1 (* skoXC1 (* skoXC1 (* skoXC1 (+ (/ 32. 15.) (* skoXC1 (* skoXC1 (+ (/ (- 272.) 105.) (* skoXC1 (* skoXC1 (+ (/ (- 1163.) 105.) (* skoXC1 (* skoXC1 (+ (/ 1753. 105.) (* skoXC1 (* skoXC1 (+ (/ (- 169.) 28.) (* skoXC1 (* skoXC1 (/ 25. 56.)))))))))))))))))))) 0.) (and (> (* skoXC1 (* skoXC1 (+ (/ 1. 6.) (* skoXC1 (* skoXC1 (+ (/ 3. 40.) (* skoXC1 (* skoXC1 (/ 5. 112.))))))))) (- 1.)) (<= (* skoXC1 (+ (- 1.) (* skoXC1 (* skoXC1 (+ (/ (- 1.) 6.) (* skoXC1 (* skoXC1 (+ (/ (- 3.) 40.) (* skoXC1 (* skoXC1 (/ (- 5.) 112.))))))))))) 0.))))))))))))))))))))))))))))))))))))))))))

% In GRF format:
(sequent " MetiTarski formula " (antecedent (<= (* skoXC1 (* skoXC1 (+ (/ (- 1.) 6.) (* skoXC1 (* skoXC1 (+ (/ (- 3.) 40.) (* skoXC1 (* skoXC1 (+ (/ (- 5.) 112.) (* skoXC1 (* skoXC1 (+ (/ (- 35.) 1152.) (* skoXC1 (* skoXC1 (/ (- 63.) 2816.))))))))))))))) 1.) (<= (* skoXC1 (* skoXC1 (+ (/ 1. 3.) (* skoXC1 (* skoXC1 (+ (/ 3. 20.) (* skoXC1 (* skoXC1 (+ (/ 5. 56.) (* skoXC1 (* skoXC1 (+ (/ 35. 576.) (* skoXC1 (* skoXC1 (/ 63. 1408.))))))))))))))) 1.) (<= (* skoXC1 (* skoXC1 (* skoXC1 (* skoXC1 (+ (/ (- 13.) 60.) (* skoXC1 (* skoXC1 (+ (/ (- 9.) 280.) (* skoXC1 (* skoXC1 (+ (/ 5. 1344.) (* skoXC1 (* skoXC1 (+ (/ 161. 12672.) (* skoXC1 (* skoXC1 (/ (- 63.) 704.))))))))))))))))) 0.) (<= (* skoXC1 (* skoXC1 (+ (/ (- 1.) 2.) (* skoXC1 (* skoXC1 (+ (/ 7. 120.) (* skoXC1 (* skoXC1 (+ (/ 33. 560.) (* skoXC1 (* skoXC1 (+ (/ 125. 2688.) (* skoXC1 (* skoXC1 (+ (/ 931. 25344.) (* skoXC1 (* skoXC1 (/ (- 63.) 2816.)))))))))))))))))) 0.) (<= (* skoXC1 (* skoXC1 (+ (/ (- 1.) 6.) (* skoXC1 (* skoXC1 (+ (/ (- 3.) 40.) (* skoXC1 (* skoXC1 (+ (/ (- 5.) 112.) (* skoXC1 (* skoXC1 (+ (/ (- 35.) 1152.) (* skoXC1 (* skoXC1 (/ (- 63.) 2816.))))))))))))))) 1.) (<= (* skoXC1 (+ (- 1.) (* skoXC1 (* skoXC1 (+ (/ 1. 3.) (* skoXC1 (* skoXC1 (+ (/ 3. 20.) (* skoXC1 (* skoXC1 (+ (/ 5. 56.) (* skoXC1 (* skoXC1 (+ (/ 35. 576.) (* skoXC1 (* skoXC1 (/ 63. 1408.))))))))))))))))) 0.) (<= (* skoXC1 (+ (- 1.) (* skoXC1 (* skoXC1 (+ (/ (- 1.) 6.) (* skoXC1 (* skoXC1 (/ (- 3.) 40.)))))))) 0.) (> (* skoXC1 (* skoXC1 (+ (/ 1. 6.) (* skoXC1 (* skoXC1 (/ 3. 40.)))))) (- 1.)) (<= (* skoXC1 (* skoXC1 (* skoXC1 (* skoXC1 (+ (/ 32. 15.) (* skoXC1 (* skoXC1 (+ (/ (- 296.) 15.) (* skoXC1 (* skoXC1 (+ (/ 391. 15.) (* skoXC1 (* skoXC1 (+ (/ (- 146.) 15.) (* skoXC1 (* skoXC1 (/ 3. 4.))))))))))))))))) 0.) (<= (* skoXC1 (* skoXC1 (+ (/ 1. 3.) (* skoXC1 (* skoXC1 (/ 3. 20.)))))) 1.) (<= (* skoXC1 (* skoXC1 (* skoXC1 (* skoXC1 (+ (/ (- 17.) 120.) (* skoXC1 (* skoXC1 (/ 3. 80.)))))))) 0.) (<= (* skoXC1 (* skoXC1 (* skoXC1 (* skoXC1 (+ (/ (- 13.) 60.) (* skoXC1 (* skoXC1 (/ (- 3.) 10.)))))))) 0.) (<= (* skoXC1 (* skoXC1 (+ (/ (- 1.) 2.) (* skoXC1 (* skoXC1 (+ (/ 7. 120.) (* skoXC1 (* skoXC1 (/ (- 3.) 40.))))))))) 0.) (<= (* skoXC1 (* skoXC1 (+ (/ (- 1.) 6.) (* skoXC1 (* skoXC1 (/ (- 3.) 40.)))))) 1.) (<= (* skoXC1 (+ (- 1.) (* skoXC1 (* skoXC1 (+ (/ 1. 3.) (* skoXC1 (* skoXC1 (/ 3. 20.)))))))) 0.) (> (* skoXC1 skoXC1) 0.) (<= (* skoXC1 (* skoXC1 (+ 80. (* skoXC1 (* skoXC1 (+ (- 40.) (* skoXC1 (* skoXC1 (+ 6. (* skoXC1 (* skoXC1 (/ (- 1.) 8.)))))))))))) 48.) (> (* skoXC1 (* skoXC1 (+ (- 80.) (* skoXC1 (* skoXC1 (+ 40. (* skoXC1 (* skoXC1 (+ (- 6.) (* skoXC1 (* skoXC1 (/ 1. 8.)))))))))))) (- 48.)) (<= (* skoXC1 (* skoXC1 (+ 24. (* skoXC1 (* skoXC1 (+ (- 10.) (* skoXC1 skoXC1))))))) 16.) (<= (* skoXC1 (* skoXC1 (/ 1. 2.))) 3.) (> (* skoXC1 (* skoXC1 (/ (- 1.) 2.))) (- 3.)) (> skoXC1 0.) (> (/ 7. 8.) skoXC1) (<= (* skoXC1 (+ (- 1.) (* skoXC1 (* skoXC1 (/ 1. 3.))))) 0.) (<= (* skoXC1 (* skoXC1 (/ (- 1.) 6.))) 1.) (<= (* skoXC1 (* skoXC1 (+ (/ (- 1.) 2.) (* skoXC1 (* skoXC1 (/ (- 1.) 6.)))))) 0.) (<= (* skoXC1 skoXC1) 2.) (<= (* skoXC1 (* skoXC1 (* skoXC1 (* skoXC1 (/ (- 2.) 3.))))) 0.) (<= (* skoXC1 (+ (- 1.) (* skoXC1 (* skoXC1 (/ (- 1.) 6.))))) 0.) (<= (* skoXC1 (* skoXC1 (/ 1. 3.))) 1.) (<= (* skoXC1 (* skoXC1 (+ 256. (* skoXC1 (* skoXC1 (+ (- 160.) (* skoXC1 (* skoXC1 (+ 32. (* skoXC1 (* skoXC1 (- 1.)))))))))))) 128.) (<= (* skoXC1 (* skoXC1 (* skoXC1 (* skoXC1 (+ (/ (- 80.) 3.) (* skoXC1 (* skoXC1 (+ (/ 128. 3.) (* skoXC1 (* skoXC1 (+ (/ (- 55.) 3.) (* skoXC1 (* skoXC1 (/ 5. 3.)))))))))))))) 0.) (<= (* skoXC1 (+ (- 1.) (* skoXC1 (* skoXC1 (+ (/ 1. 3.) (* skoXC1 (* skoXC1 (+ (/ 3. 20.) (* skoXC1 (* skoXC1 (/ 5. 56.))))))))))) 0.) (<= (* skoXC1 (* skoXC1 (+ (/ (- 1.) 6.) (* skoXC1 (* skoXC1 (+ (/ (- 3.) 40.) (* skoXC1 (* skoXC1 (/ (- 5.) 112.))))))))) 1.) (<= (* skoXC1 (* skoXC1 (+ (/ (- 1.) 2.) (* skoXC1 (* skoXC1 (+ (/ 7. 120.) (* skoXC1 (* skoXC1 (+ (/ 33. 560.) (* skoXC1 (* skoXC1 (/ (- 5.) 112.)))))))))))) 0.) (<= (* skoXC1 (* skoXC1 (* skoXC1 (* skoXC1 (+ (/ (- 13.) 60.) (* skoXC1 (* skoXC1 (+ (/ (- 9.) 280.) (* skoXC1 (* skoXC1 (/ (- 5.) 28.))))))))))) 0.) (<= (* skoXC1 (* skoXC1 (* skoXC1 (* skoXC1 (+ (/ (- 17.) 120.) (* skoXC1 (* skoXC1 (+ (/ (- 27.) 280.) (* skoXC1 (* skoXC1 (/ 5. 224.))))))))))) 0.) (<= (* skoXC1 (* skoXC1 (+ (/ 1. 3.) (* skoXC1 (* skoXC1 (+ (/ 3. 20.) (* skoXC1 (* skoXC1 (/ 5. 56.))))))))) 1.) (<= (* skoXC1 (* skoXC1 (* skoXC1 (* skoXC1 (+ (/ 32. 15.) (* skoXC1 (* skoXC1 (+ (/ (- 272.) 105.) (* skoXC1 (* skoXC1 (+ (/ (- 1163.) 105.) (* skoXC1 (* skoXC1 (+ (/ 1753. 105.) (* skoXC1 (* skoXC1 (+ (/ (- 169.) 28.) (* skoXC1 (* skoXC1 (/ 25. 56.)))))))))))))))))))) 0.) (> (* skoXC1 (* skoXC1 (+ (/ 1. 6.) (* skoXC1 (* skoXC1 (+ (/ 3. 40.) (* skoXC1 (* skoXC1 (/ 5. 112.))))))))) (- 1.))) (succedent (> (* skoXC1 (+ (- 1.) (* skoXC1 (* skoXC1 (+ (/ (- 1.) 6.) (* skoXC1 (* skoXC1 (+ (/ (- 3.) 40.) (* skoXC1 (* skoXC1 (/ (- 5.) 112.))))))))))) 0.)))
-----[end problem]-----

-----[begin problem]-----
% In Mathematica format:
Timing[Resolve[Exists[{skoXC1}, And[skoXC1*skoXC1*skoXC1*skoXC1*((-17/120)+skoXC1*skoXC1*((-27/280)+skoXC1*skoXC1*((-185/2688)+skoXC1*skoXC1*((-329/6336)+skoXC1*skoXC1*(63/5632)))))<=0,skoXC1*skoXC1*((1/3)+skoXC1*skoXC1*((3/20)+skoXC1*skoXC1*((5/56)+skoXC1*skoXC1*((35/576)+skoXC1*skoXC1*(63/1408)))))<=1,skoXC1*skoXC1*skoXC1*skoXC1*((-13/60)+skoXC1*skoXC1*((-9/280)+skoXC1*skoXC1*((5/1344)+skoXC1*skoXC1*((161/12672)+skoXC1*skoXC1*(-63/704)))))<=0,skoXC1*skoXC1*((-1/2)+skoXC1*skoXC1*((7/120)+skoXC1*skoXC1*((33/560)+skoXC1*skoXC1*((125/2688)+skoXC1*skoXC1*((931/25344)+skoXC1*skoXC1*(-63/2816))))))<=0,skoXC1*skoXC1*((-1/6)+skoXC1*skoXC1*((-3/40)+skoXC1*skoXC1*((-5/112)+skoXC1*skoXC1*((-35/1152)+skoXC1*skoXC1*(-63/2816)))))<=1,skoXC1*(-1+skoXC1*skoXC1*((1/3)+skoXC1*skoXC1*((3/20)+skoXC1*skoXC1*((5/56)+skoXC1*skoXC1*((35/576)+skoXC1*skoXC1*(63/1408))))))<=0,skoXC1*(-1+skoXC1*skoXC1*((-1/6)+skoXC1*skoXC1*(-3/40)))<=0,skoXC1*skoXC1*((1/6)+skoXC1*skoXC1*(3/40))>-1,skoXC1*skoXC1*skoXC1*skoXC1*((32/15)+skoXC1*skoXC1*((-296/15)+skoXC1*skoXC1*((391/15)+skoXC1*skoXC1*((-146/15)+skoXC1*skoXC1*(3/4)))))<=0,skoXC1*skoXC1*((1/3)+skoXC1*skoXC1*(3/20))<=1,skoXC1*skoXC1*skoXC1*skoXC1*((-17/120)+skoXC1*skoXC1*(3/80))<=0,skoXC1*skoXC1*skoXC1*skoXC1*((-13/60)+skoXC1*skoXC1*(-3/10))<=0,skoXC1*skoXC1*((-1/2)+skoXC1*skoXC1*((7/120)+skoXC1*skoXC1*(-3/40)))<=0,skoXC1*skoXC1*((-1/6)+skoXC1*skoXC1*(-3/40))<=1,skoXC1*(-1+skoXC1*skoXC1*((1/3)+skoXC1*skoXC1*(3/20)))<=0,skoXC1*skoXC1>0,skoXC1*skoXC1*(80+skoXC1*skoXC1*(-40+skoXC1*skoXC1*(6+skoXC1*skoXC1*(-1/8))))<=48,skoXC1*skoXC1*(-80+skoXC1*skoXC1*(40+skoXC1*skoXC1*(-6+skoXC1*skoXC1*(1/8))))>-48,skoXC1*skoXC1*(24+skoXC1*skoXC1*(-10+skoXC1*skoXC1))<=16,skoXC1*skoXC1*(1/2)<=3,skoXC1*skoXC1*(-1/2)>-3,skoXC1>0,(7/8)>skoXC1,skoXC1*(-1+skoXC1*skoXC1*(1/3))<=0,skoXC1*skoXC1*(-1/6)<=1,skoXC1*skoXC1*((-1/2)+skoXC1*skoXC1*(-1/6))<=0,skoXC1*skoXC1<=2,skoXC1*skoXC1*skoXC1*skoXC1*(-2/3)<=0,skoXC1*(-1+skoXC1*skoXC1*(-1/6))<=0,skoXC1*skoXC1*(1/3)<=1,skoXC1*skoXC1*(256+skoXC1*skoXC1*(-160+skoXC1*skoXC1*(32+skoXC1*skoXC1*-1)))<=128,skoXC1*skoXC1*skoXC1*skoXC1*((-80/3)+skoXC1*skoXC1*((128/3)+skoXC1*skoXC1*((-55/3)+skoXC1*skoXC1*(5/3))))<=0,skoXC1*(-1+skoXC1*skoXC1*((1/3)+skoXC1*skoXC1*((3/20)+skoXC1*skoXC1*(5/56))))<=0,skoXC1*skoXC1*((-1/6)+skoXC1*skoXC1*((-3/40)+skoXC1*skoXC1*(-5/112)))<=1,skoXC1*skoXC1*((-1/2)+skoXC1*skoXC1*((7/120)+skoXC1*skoXC1*((33/560)+skoXC1*skoXC1*(-5/112))))<=0,skoXC1*skoXC1*skoXC1*skoXC1*((-13/60)+skoXC1*skoXC1*((-9/280)+skoXC1*skoXC1*(-5/28)))<=0,skoXC1*skoXC1*skoXC1*skoXC1*((-17/120)+skoXC1*skoXC1*((-27/280)+skoXC1*skoXC1*(5/224)))<=0,skoXC1*skoXC1*((1/3)+skoXC1*skoXC1*((3/20)+skoXC1*skoXC1*(5/56)))<=1,skoXC1*skoXC1*skoXC1*skoXC1*((32/15)+skoXC1*skoXC1*((-272/105)+skoXC1*skoXC1*((-1163/105)+skoXC1*skoXC1*((1753/105)+skoXC1*skoXC1*((-169/28)+skoXC1*skoXC1*(25/56))))))<=0,skoXC1*skoXC1*((1/6)+skoXC1*skoXC1*((3/40)+skoXC1*skoXC1*(5/112)))>-1,skoXC1*(-1+skoXC1*skoXC1*((-1/6)+skoXC1*skoXC1*((-3/40)+skoXC1*skoXC1*(-5/112))))<=0]], Reals]]

% In QepcadB format:
(E skoXC1) [[(skoXC1 skoXC1 skoXC1 skoXC1 (-17/120+(skoXC1 skoXC1 (-27/280+(skoXC1 skoXC1 (-185/2688+(skoXC1 skoXC1 (-329/6336+(skoXC1 skoXC1 (63/5632))))))))))<=0]/\[[(skoXC1 skoXC1 (1/3+(skoXC1 skoXC1 (3/20+(skoXC1 skoXC1 (5/56+(skoXC1 skoXC1 (35/576+(skoXC1 skoXC1 (63/1408))))))))))<=1]/\[[(skoXC1 skoXC1 skoXC1 skoXC1 (-13/60+(skoXC1 skoXC1 (-9/280+(skoXC1 skoXC1 (5/1344+(skoXC1 skoXC1 (161/12672+(skoXC1 skoXC1 (-63/704))))))))))<=0]/\[[(skoXC1 skoXC1 (-1/2+(skoXC1 skoXC1 (7/120+(skoXC1 skoXC1 (33/560+(skoXC1 skoXC1 (125/2688+(skoXC1 skoXC1 (931/25344+(skoXC1 skoXC1 (-63/2816))))))))))))<=0]/\[[(skoXC1 skoXC1 (-1/6+(skoXC1 skoXC1 (-3/40+(skoXC1 skoXC1 (-5/112+(skoXC1 skoXC1 (-35/1152+(skoXC1 skoXC1 (-63/2816))))))))))<=1]/\[[(skoXC1 (-1+(skoXC1 skoXC1 (1/3+(skoXC1 skoXC1 (3/20+(skoXC1 skoXC1 (5/56+(skoXC1 skoXC1 (35/576+(skoXC1 skoXC1 (63/1408))))))))))))<=0]/\[[(skoXC1 (-1+(skoXC1 skoXC1 (-1/6+(skoXC1 skoXC1 (-3/40))))))<=0]/\[[-1<(skoXC1 skoXC1 (1/6+(skoXC1 skoXC1 (3/40))))]/\[[(skoXC1 skoXC1 skoXC1 skoXC1 (32/15+(skoXC1 skoXC1 (-296/15+(skoXC1 skoXC1 (391/15+(skoXC1 skoXC1 (-146/15+(skoXC1 skoXC1 (3/4))))))))))<=0]/\[[(skoXC1 skoXC1 (1/3+(skoXC1 skoXC1 (3/20))))<=1]/\[[(skoXC1 skoXC1 skoXC1 skoXC1 (-17/120+(skoXC1 skoXC1 (3/80))))<=0]/\[[(skoXC1 skoXC1 skoXC1 skoXC1 (-13/60+(skoXC1 skoXC1 (-3/10))))<=0]/\[[(skoXC1 skoXC1 (-1/2+(skoXC1 skoXC1 (7/120+(skoXC1 skoXC1 (-3/40))))))<=0]/\[[(skoXC1 skoXC1 (-1/6+(skoXC1 skoXC1 (-3/40))))<=1]/\[[(skoXC1 (-1+(skoXC1 skoXC1 (1/3+(skoXC1 skoXC1 (3/20))))))<=0]/\[[0<(skoXC1 skoXC1)]/\[[(skoXC1 skoXC1 (80+(skoXC1 skoXC1 (-40+(skoXC1 skoXC1 (6+(skoXC1 skoXC1 (-1/8))))))))<=48]/\[[-48<(skoXC1 skoXC1 (-80+(skoXC1 skoXC1 (40+(skoXC1 skoXC1 (-6+(skoXC1 skoXC1 (1/8))))))))]/\[[(skoXC1 skoXC1 (24+(skoXC1 skoXC1 (-10+(skoXC1 skoXC1)))))<=16]/\[[(skoXC1 skoXC1 (1/2))<=3]/\[[-3<(skoXC1 skoXC1 (-1/2))]/\[[0<skoXC1]/\[[skoXC1<7/8]/\[[(skoXC1 (-1+(skoXC1 skoXC1 (1/3))))<=0]/\[[(skoXC1 skoXC1 (-1/6))<=1]/\[[(skoXC1 skoXC1 (-1/2+(skoXC1 skoXC1 (-1/6))))<=0]/\[[(skoXC1 skoXC1)<=2]/\[[(skoXC1 skoXC1 skoXC1 skoXC1 (-2/3))<=0]/\[[(skoXC1 (-1+(skoXC1 skoXC1 (-1/6))))<=0]/\[[(skoXC1 skoXC1 (1/3))<=1]/\[[(skoXC1 skoXC1 (256+(skoXC1 skoXC1 (-160+(skoXC1 skoXC1 (32+(skoXC1 skoXC1 (-1))))))))<=128]/\[[(skoXC1 skoXC1 skoXC1 skoXC1 (-80/3+(skoXC1 skoXC1 (128/3+(skoXC1 skoXC1 (-55/3+(skoXC1 skoXC1 (5/3))))))))<=0]/\[[(skoXC1 (-1+(skoXC1 skoXC1 (1/3+(skoXC1 skoXC1 (3/20+(skoXC1 skoXC1 (5/56))))))))<=0]/\[[(skoXC1 skoXC1 (-1/6+(skoXC1 skoXC1 (-3/40+(skoXC1 skoXC1 (-5/112))))))<=1]/\[[(skoXC1 skoXC1 (-1/2+(skoXC1 skoXC1 (7/120+(skoXC1 skoXC1 (33/560+(skoXC1 skoXC1 (-5/112))))))))<=0]/\[[(skoXC1 skoXC1 skoXC1 skoXC1 (-13/60+(skoXC1 skoXC1 (-9/280+(skoXC1 skoXC1 (-5/28))))))<=0]/\[[(skoXC1 skoXC1 skoXC1 skoXC1 (-17/120+(skoXC1 skoXC1 (-27/280+(skoXC1 skoXC1 (5/224))))))<=0]/\[[(skoXC1 skoXC1 (1/3+(skoXC1 skoXC1 (3/20+(skoXC1 skoXC1 (5/56))))))<=1]/\[[(skoXC1 skoXC1 skoXC1 skoXC1 (32/15+(skoXC1 skoXC1 (-272/105+(skoXC1 skoXC1 (-1163/105+(skoXC1 skoXC1 (1753/105+(skoXC1 skoXC1 (-169/28+(skoXC1 skoXC1 (25/56))))))))))))<=0]/\[[-1<(skoXC1 skoXC1 (1/6+(skoXC1 skoXC1 (3/40+(skoXC1 skoXC1 (5/112))))))]/\[(skoXC1 (-1+(skoXC1 skoXC1 (-1/6+(skoXC1 skoXC1 (-3/40+(skoXC1 skoXC1 (-5/112))))))))<=0]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]].

% In SMTLib2 format:
(declare-fun skoXC1 () Real) (assert (and (<= (* skoXC1 (* skoXC1 (* skoXC1 (* skoXC1 (+ (/ (- 17.) 120.) (* skoXC1 (* skoXC1 (+ (/ (- 27.) 280.) (* skoXC1 (* skoXC1 (+ (/ (- 185.) 2688.) (* skoXC1 (* skoXC1 (+ (/ (- 329.) 6336.) (* skoXC1 (* skoXC1 (/ 63. 5632.))))))))))))))))) 0.) (and (<= (* skoXC1 (* skoXC1 (+ (/ 1. 3.) (* skoXC1 (* skoXC1 (+ (/ 3. 20.) (* skoXC1 (* skoXC1 (+ (/ 5. 56.) (* skoXC1 (* skoXC1 (+ (/ 35. 576.) (* skoXC1 (* skoXC1 (/ 63. 1408.))))))))))))))) 1.) (and (<= (* skoXC1 (* skoXC1 (* skoXC1 (* skoXC1 (+ (/ (- 13.) 60.) (* skoXC1 (* skoXC1 (+ (/ (- 9.) 280.) (* skoXC1 (* skoXC1 (+ (/ 5. 1344.) (* skoXC1 (* skoXC1 (+ (/ 161. 12672.) (* skoXC1 (* skoXC1 (/ (- 63.) 704.))))))))))))))))) 0.) (and (<= (* skoXC1 (* skoXC1 (+ (/ (- 1.) 2.) (* skoXC1 (* skoXC1 (+ (/ 7. 120.) (* skoXC1 (* skoXC1 (+ (/ 33. 560.) (* skoXC1 (* skoXC1 (+ (/ 125. 2688.) (* skoXC1 (* skoXC1 (+ (/ 931. 25344.) (* skoXC1 (* skoXC1 (/ (- 63.) 2816.)))))))))))))))))) 0.) (and (<= (* skoXC1 (* skoXC1 (+ (/ (- 1.) 6.) (* skoXC1 (* skoXC1 (+ (/ (- 3.) 40.) (* skoXC1 (* skoXC1 (+ (/ (- 5.) 112.) (* skoXC1 (* skoXC1 (+ (/ (- 35.) 1152.) (* skoXC1 (* skoXC1 (/ (- 63.) 2816.))))))))))))))) 1.) (and (<= (* skoXC1 (+ (- 1.) (* skoXC1 (* skoXC1 (+ (/ 1. 3.) (* skoXC1 (* skoXC1 (+ (/ 3. 20.) (* skoXC1 (* skoXC1 (+ (/ 5. 56.) (* skoXC1 (* skoXC1 (+ (/ 35. 576.) (* skoXC1 (* skoXC1 (/ 63. 1408.))))))))))))))))) 0.) (and (<= (* skoXC1 (+ (- 1.) (* skoXC1 (* skoXC1 (+ (/ (- 1.) 6.) (* skoXC1 (* skoXC1 (/ (- 3.) 40.)))))))) 0.) (and (> (* skoXC1 (* skoXC1 (+ (/ 1. 6.) (* skoXC1 (* skoXC1 (/ 3. 40.)))))) (- 1.)) (and (<= (* skoXC1 (* skoXC1 (* skoXC1 (* skoXC1 (+ (/ 32. 15.) (* skoXC1 (* skoXC1 (+ (/ (- 296.) 15.) (* skoXC1 (* skoXC1 (+ (/ 391. 15.) (* skoXC1 (* skoXC1 (+ (/ (- 146.) 15.) (* skoXC1 (* skoXC1 (/ 3. 4.))))))))))))))))) 0.) (and (<= (* skoXC1 (* skoXC1 (+ (/ 1. 3.) (* skoXC1 (* skoXC1 (/ 3. 20.)))))) 1.) (and (<= (* skoXC1 (* skoXC1 (* skoXC1 (* skoXC1 (+ (/ (- 17.) 120.) (* skoXC1 (* skoXC1 (/ 3. 80.)))))))) 0.) (and (<= (* skoXC1 (* skoXC1 (* skoXC1 (* skoXC1 (+ (/ (- 13.) 60.) (* skoXC1 (* skoXC1 (/ (- 3.) 10.)))))))) 0.) (and (<= (* skoXC1 (* skoXC1 (+ (/ (- 1.) 2.) (* skoXC1 (* skoXC1 (+ (/ 7. 120.) (* skoXC1 (* skoXC1 (/ (- 3.) 40.))))))))) 0.) (and (<= (* skoXC1 (* skoXC1 (+ (/ (- 1.) 6.) (* skoXC1 (* skoXC1 (/ (- 3.) 40.)))))) 1.) (and (<= (* skoXC1 (+ (- 1.) (* skoXC1 (* skoXC1 (+ (/ 1. 3.) (* skoXC1 (* skoXC1 (/ 3. 20.)))))))) 0.) (and (> (* skoXC1 skoXC1) 0.) (and (<= (* skoXC1 (* skoXC1 (+ 80. (* skoXC1 (* skoXC1 (+ (- 40.) (* skoXC1 (* skoXC1 (+ 6. (* skoXC1 (* skoXC1 (/ (- 1.) 8.)))))))))))) 48.) (and (> (* skoXC1 (* skoXC1 (+ (- 80.) (* skoXC1 (* skoXC1 (+ 40. (* skoXC1 (* skoXC1 (+ (- 6.) (* skoXC1 (* skoXC1 (/ 1. 8.)))))))))))) (- 48.)) (and (<= (* skoXC1 (* skoXC1 (+ 24. (* skoXC1 (* skoXC1 (+ (- 10.) (* skoXC1 skoXC1))))))) 16.) (and (<= (* skoXC1 (* skoXC1 (/ 1. 2.))) 3.) (and (> (* skoXC1 (* skoXC1 (/ (- 1.) 2.))) (- 3.)) (and (> skoXC1 0.) (and (> (/ 7. 8.) skoXC1) (and (<= (* skoXC1 (+ (- 1.) (* skoXC1 (* skoXC1 (/ 1. 3.))))) 0.) (and (<= (* skoXC1 (* skoXC1 (/ (- 1.) 6.))) 1.) (and (<= (* skoXC1 (* skoXC1 (+ (/ (- 1.) 2.) (* skoXC1 (* skoXC1 (/ (- 1.) 6.)))))) 0.) (and (<= (* skoXC1 skoXC1) 2.) (and (<= (* skoXC1 (* skoXC1 (* skoXC1 (* skoXC1 (/ (- 2.) 3.))))) 0.) (and (<= (* skoXC1 (+ (- 1.) (* skoXC1 (* skoXC1 (/ (- 1.) 6.))))) 0.) (and (<= (* skoXC1 (* skoXC1 (/ 1. 3.))) 1.) (and (<= (* skoXC1 (* skoXC1 (+ 256. (* skoXC1 (* skoXC1 (+ (- 160.) (* skoXC1 (* skoXC1 (+ 32. (* skoXC1 (* skoXC1 (- 1.)))))))))))) 128.) (and (<= (* skoXC1 (* skoXC1 (* skoXC1 (* skoXC1 (+ (/ (- 80.) 3.) (* skoXC1 (* skoXC1 (+ (/ 128. 3.) (* skoXC1 (* skoXC1 (+ (/ (- 55.) 3.) (* skoXC1 (* skoXC1 (/ 5. 3.)))))))))))))) 0.) (and (<= (* skoXC1 (+ (- 1.) (* skoXC1 (* skoXC1 (+ (/ 1. 3.) (* skoXC1 (* skoXC1 (+ (/ 3. 20.) (* skoXC1 (* skoXC1 (/ 5. 56.))))))))))) 0.) (and (<= (* skoXC1 (* skoXC1 (+ (/ (- 1.) 6.) (* skoXC1 (* skoXC1 (+ (/ (- 3.) 40.) (* skoXC1 (* skoXC1 (/ (- 5.) 112.))))))))) 1.) (and (<= (* skoXC1 (* skoXC1 (+ (/ (- 1.) 2.) (* skoXC1 (* skoXC1 (+ (/ 7. 120.) (* skoXC1 (* skoXC1 (+ (/ 33. 560.) (* skoXC1 (* skoXC1 (/ (- 5.) 112.)))))))))))) 0.) (and (<= (* skoXC1 (* skoXC1 (* skoXC1 (* skoXC1 (+ (/ (- 13.) 60.) (* skoXC1 (* skoXC1 (+ (/ (- 9.) 280.) (* skoXC1 (* skoXC1 (/ (- 5.) 28.))))))))))) 0.) (and (<= (* skoXC1 (* skoXC1 (* skoXC1 (* skoXC1 (+ (/ (- 17.) 120.) (* skoXC1 (* skoXC1 (+ (/ (- 27.) 280.) (* skoXC1 (* skoXC1 (/ 5. 224.))))))))))) 0.) (and (<= (* skoXC1 (* skoXC1 (+ (/ 1. 3.) (* skoXC1 (* skoXC1 (+ (/ 3. 20.) (* skoXC1 (* skoXC1 (/ 5. 56.))))))))) 1.) (and (<= (* skoXC1 (* skoXC1 (* skoXC1 (* skoXC1 (+ (/ 32. 15.) (* skoXC1 (* skoXC1 (+ (/ (- 272.) 105.) (* skoXC1 (* skoXC1 (+ (/ (- 1163.) 105.) (* skoXC1 (* skoXC1 (+ (/ 1753. 105.) (* skoXC1 (* skoXC1 (+ (/ (- 169.) 28.) (* skoXC1 (* skoXC1 (/ 25. 56.)))))))))))))))))))) 0.) (and (> (* skoXC1 (* skoXC1 (+ (/ 1. 6.) (* skoXC1 (* skoXC1 (+ (/ 3. 40.) (* skoXC1 (* skoXC1 (/ 5. 112.))))))))) (- 1.)) (<= (* skoXC1 (+ (- 1.) (* skoXC1 (* skoXC1 (+ (/ (- 1.) 6.) (* skoXC1 (* skoXC1 (+ (/ (- 3.) 40.) (* skoXC1 (* skoXC1 (/ (- 5.) 112.))))))))))) 0.))))))))))))))))))))))))))))))))))))))))))

% In GRF format:
(sequent " MetiTarski formula " (antecedent (<= (* skoXC1 (* skoXC1 (* skoXC1 (* skoXC1 (+ (/ (- 17.) 120.) (* skoXC1 (* skoXC1 (+ (/ (- 27.) 280.) (* skoXC1 (* skoXC1 (+ (/ (- 185.) 2688.) (* skoXC1 (* skoXC1 (+ (/ (- 329.) 6336.) (* skoXC1 (* skoXC1 (/ 63. 5632.))))))))))))))))) 0.) (<= (* skoXC1 (* skoXC1 (+ (/ 1. 3.) (* skoXC1 (* skoXC1 (+ (/ 3. 20.) (* skoXC1 (* skoXC1 (+ (/ 5. 56.) (* skoXC1 (* skoXC1 (+ (/ 35. 576.) (* skoXC1 (* skoXC1 (/ 63. 1408.))))))))))))))) 1.) (<= (* skoXC1 (* skoXC1 (* skoXC1 (* skoXC1 (+ (/ (- 13.) 60.) (* skoXC1 (* skoXC1 (+ (/ (- 9.) 280.) (* skoXC1 (* skoXC1 (+ (/ 5. 1344.) (* skoXC1 (* skoXC1 (+ (/ 161. 12672.) (* skoXC1 (* skoXC1 (/ (- 63.) 704.))))))))))))))))) 0.) (<= (* skoXC1 (* skoXC1 (+ (/ (- 1.) 2.) (* skoXC1 (* skoXC1 (+ (/ 7. 120.) (* skoXC1 (* skoXC1 (+ (/ 33. 560.) (* skoXC1 (* skoXC1 (+ (/ 125. 2688.) (* skoXC1 (* skoXC1 (+ (/ 931. 25344.) (* skoXC1 (* skoXC1 (/ (- 63.) 2816.)))))))))))))))))) 0.) (<= (* skoXC1 (* skoXC1 (+ (/ (- 1.) 6.) (* skoXC1 (* skoXC1 (+ (/ (- 3.) 40.) (* skoXC1 (* skoXC1 (+ (/ (- 5.) 112.) (* skoXC1 (* skoXC1 (+ (/ (- 35.) 1152.) (* skoXC1 (* skoXC1 (/ (- 63.) 2816.))))))))))))))) 1.) (<= (* skoXC1 (+ (- 1.) (* skoXC1 (* skoXC1 (+ (/ 1. 3.) (* skoXC1 (* skoXC1 (+ (/ 3. 20.) (* skoXC1 (* skoXC1 (+ (/ 5. 56.) (* skoXC1 (* skoXC1 (+ (/ 35. 576.) (* skoXC1 (* skoXC1 (/ 63. 1408.))))))))))))))))) 0.) (<= (* skoXC1 (+ (- 1.) (* skoXC1 (* skoXC1 (+ (/ (- 1.) 6.) (* skoXC1 (* skoXC1 (/ (- 3.) 40.)))))))) 0.) (> (* skoXC1 (* skoXC1 (+ (/ 1. 6.) (* skoXC1 (* skoXC1 (/ 3. 40.)))))) (- 1.)) (<= (* skoXC1 (* skoXC1 (* skoXC1 (* skoXC1 (+ (/ 32. 15.) (* skoXC1 (* skoXC1 (+ (/ (- 296.) 15.) (* skoXC1 (* skoXC1 (+ (/ 391. 15.) (* skoXC1 (* skoXC1 (+ (/ (- 146.) 15.) (* skoXC1 (* skoXC1 (/ 3. 4.))))))))))))))))) 0.) (<= (* skoXC1 (* skoXC1 (+ (/ 1. 3.) (* skoXC1 (* skoXC1 (/ 3. 20.)))))) 1.) (<= (* skoXC1 (* skoXC1 (* skoXC1 (* skoXC1 (+ (/ (- 17.) 120.) (* skoXC1 (* skoXC1 (/ 3. 80.)))))))) 0.) (<= (* skoXC1 (* skoXC1 (* skoXC1 (* skoXC1 (+ (/ (- 13.) 60.) (* skoXC1 (* skoXC1 (/ (- 3.) 10.)))))))) 0.) (<= (* skoXC1 (* skoXC1 (+ (/ (- 1.) 2.) (* skoXC1 (* skoXC1 (+ (/ 7. 120.) (* skoXC1 (* skoXC1 (/ (- 3.) 40.))))))))) 0.) (<= (* skoXC1 (* skoXC1 (+ (/ (- 1.) 6.) (* skoXC1 (* skoXC1 (/ (- 3.) 40.)))))) 1.) (<= (* skoXC1 (+ (- 1.) (* skoXC1 (* skoXC1 (+ (/ 1. 3.) (* skoXC1 (* skoXC1 (/ 3. 20.)))))))) 0.) (> (* skoXC1 skoXC1) 0.) (<= (* skoXC1 (* skoXC1 (+ 80. (* skoXC1 (* skoXC1 (+ (- 40.) (* skoXC1 (* skoXC1 (+ 6. (* skoXC1 (* skoXC1 (/ (- 1.) 8.)))))))))))) 48.) (> (* skoXC1 (* skoXC1 (+ (- 80.) (* skoXC1 (* skoXC1 (+ 40. (* skoXC1 (* skoXC1 (+ (- 6.) (* skoXC1 (* skoXC1 (/ 1. 8.)))))))))))) (- 48.)) (<= (* skoXC1 (* skoXC1 (+ 24. (* skoXC1 (* skoXC1 (+ (- 10.) (* skoXC1 skoXC1))))))) 16.) (<= (* skoXC1 (* skoXC1 (/ 1. 2.))) 3.) (> (* skoXC1 (* skoXC1 (/ (- 1.) 2.))) (- 3.)) (> skoXC1 0.) (> (/ 7. 8.) skoXC1) (<= (* skoXC1 (+ (- 1.) (* skoXC1 (* skoXC1 (/ 1. 3.))))) 0.) (<= (* skoXC1 (* skoXC1 (/ (- 1.) 6.))) 1.) (<= (* skoXC1 (* skoXC1 (+ (/ (- 1.) 2.) (* skoXC1 (* skoXC1 (/ (- 1.) 6.)))))) 0.) (<= (* skoXC1 skoXC1) 2.) (<= (* skoXC1 (* skoXC1 (* skoXC1 (* skoXC1 (/ (- 2.) 3.))))) 0.) (<= (* skoXC1 (+ (- 1.) (* skoXC1 (* skoXC1 (/ (- 1.) 6.))))) 0.) (<= (* skoXC1 (* skoXC1 (/ 1. 3.))) 1.) (<= (* skoXC1 (* skoXC1 (+ 256. (* skoXC1 (* skoXC1 (+ (- 160.) (* skoXC1 (* skoXC1 (+ 32. (* skoXC1 (* skoXC1 (- 1.)))))))))))) 128.) (<= (* skoXC1 (* skoXC1 (* skoXC1 (* skoXC1 (+ (/ (- 80.) 3.) (* skoXC1 (* skoXC1 (+ (/ 128. 3.) (* skoXC1 (* skoXC1 (+ (/ (- 55.) 3.) (* skoXC1 (* skoXC1 (/ 5. 3.)))))))))))))) 0.) (<= (* skoXC1 (+ (- 1.) (* skoXC1 (* skoXC1 (+ (/ 1. 3.) (* skoXC1 (* skoXC1 (+ (/ 3. 20.) (* skoXC1 (* skoXC1 (/ 5. 56.))))))))))) 0.) (<= (* skoXC1 (* skoXC1 (+ (/ (- 1.) 6.) (* skoXC1 (* skoXC1 (+ (/ (- 3.) 40.) (* skoXC1 (* skoXC1 (/ (- 5.) 112.))))))))) 1.) (<= (* skoXC1 (* skoXC1 (+ (/ (- 1.) 2.) (* skoXC1 (* skoXC1 (+ (/ 7. 120.) (* skoXC1 (* skoXC1 (+ (/ 33. 560.) (* skoXC1 (* skoXC1 (/ (- 5.) 112.)))))))))))) 0.) (<= (* skoXC1 (* skoXC1 (* skoXC1 (* skoXC1 (+ (/ (- 13.) 60.) (* skoXC1 (* skoXC1 (+ (/ (- 9.) 280.) (* skoXC1 (* skoXC1 (/ (- 5.) 28.))))))))))) 0.) (<= (* skoXC1 (* skoXC1 (* skoXC1 (* skoXC1 (+ (/ (- 17.) 120.) (* skoXC1 (* skoXC1 (+ (/ (- 27.) 280.) (* skoXC1 (* skoXC1 (/ 5. 224.))))))))))) 0.) (<= (* skoXC1 (* skoXC1 (+ (/ 1. 3.) (* skoXC1 (* skoXC1 (+ (/ 3. 20.) (* skoXC1 (* skoXC1 (/ 5. 56.))))))))) 1.) (<= (* skoXC1 (* skoXC1 (* skoXC1 (* skoXC1 (+ (/ 32. 15.) (* skoXC1 (* skoXC1 (+ (/ (- 272.) 105.) (* skoXC1 (* skoXC1 (+ (/ (- 1163.) 105.) (* skoXC1 (* skoXC1 (+ (/ 1753. 105.) (* skoXC1 (* skoXC1 (+ (/ (- 169.) 28.) (* skoXC1 (* skoXC1 (/ 25. 56.)))))))))))))))))))) 0.) (> (* skoXC1 (* skoXC1 (+ (/ 1. 6.) (* skoXC1 (* skoXC1 (+ (/ 3. 40.) (* skoXC1 (* skoXC1 (/ 5. 112.))))))))) (- 1.))) (succedent (> (* skoXC1 (+ (- 1.) (* skoXC1 (* skoXC1 (+ (/ (- 1.) 6.) (* skoXC1 (* skoXC1 (+ (/ (- 3.) 40.) (* skoXC1 (* skoXC1 (/ (- 5.) 112.))))))))))) 0.)))
-----[end problem]-----

-----[begin problem]-----
% In Mathematica format:
Timing[Resolve[Exists[{skoXC1}, And[skoXC1*skoXC1*((-1/6)+skoXC1*skoXC1*((-3/40)+skoXC1*skoXC1*((-5/112)+skoXC1*skoXC1*((-35/1152)+skoXC1*skoXC1*(-63/2816)))))<=1,skoXC1*skoXC1*skoXC1*skoXC1*((-17/120)+skoXC1*skoXC1*((-27/280)+skoXC1*skoXC1*((-185/2688)+skoXC1*skoXC1*((-329/6336)+skoXC1*skoXC1*(63/5632)))))<=0,skoXC1*skoXC1*((1/3)+skoXC1*skoXC1*((3/20)+skoXC1*skoXC1*((5/56)+skoXC1*skoXC1*((35/576)+skoXC1*skoXC1*(63/1408)))))<=1,skoXC1*skoXC1*skoXC1*skoXC1*((-13/60)+skoXC1*skoXC1*((-9/280)+skoXC1*skoXC1*((5/1344)+skoXC1*skoXC1*((161/12672)+skoXC1*skoXC1*(-63/704)))))<=0,skoXC1*skoXC1*((-1/2)+skoXC1*skoXC1*((7/120)+skoXC1*skoXC1*((33/560)+skoXC1*skoXC1*((125/2688)+skoXC1*skoXC1*((931/25344)+skoXC1*skoXC1*(-63/2816))))))<=0,skoXC1*skoXC1*((-1/6)+skoXC1*skoXC1*((-3/40)+skoXC1*skoXC1*((-5/112)+skoXC1*skoXC1*((-35/1152)+skoXC1*skoXC1*(-63/2816)))))<=1,skoXC1*(-1+skoXC1*skoXC1*((1/3)+skoXC1*skoXC1*((3/20)+skoXC1*skoXC1*((5/56)+skoXC1*skoXC1*((35/576)+skoXC1*skoXC1*(63/1408))))))<=0,skoXC1*(-1+skoXC1*skoXC1*((-1/6)+skoXC1*skoXC1*(-3/40)))<=0,skoXC1*skoXC1*((1/6)+skoXC1*skoXC1*(3/40))>-1,skoXC1*skoXC1*skoXC1*skoXC1*((32/15)+skoXC1*skoXC1*((-296/15)+skoXC1*skoXC1*((391/15)+skoXC1*skoXC1*((-146/15)+skoXC1*skoXC1*(3/4)))))<=0,skoXC1*skoXC1*((1/3)+skoXC1*skoXC1*(3/20))<=1,skoXC1*skoXC1*skoXC1*skoXC1*((-17/120)+skoXC1*skoXC1*(3/80))<=0,skoXC1*skoXC1*skoXC1*skoXC1*((-13/60)+skoXC1*skoXC1*(-3/10))<=0,skoXC1*skoXC1*((-1/2)+skoXC1*skoXC1*((7/120)+skoXC1*skoXC1*(-3/40)))<=0,skoXC1*skoXC1*((-1/6)+skoXC1*skoXC1*(-3/40))<=1,skoXC1*(-1+skoXC1*skoXC1*((1/3)+skoXC1*skoXC1*(3/20)))<=0,skoXC1*skoXC1>0,skoXC1*skoXC1*(80+skoXC1*skoXC1*(-40+skoXC1*skoXC1*(6+skoXC1*skoXC1*(-1/8))))<=48,skoXC1*skoXC1*(-80+skoXC1*skoXC1*(40+skoXC1*skoXC1*(-6+skoXC1*skoXC1*(1/8))))>-48,skoXC1*skoXC1*(24+skoXC1*skoXC1*(-10+skoXC1*skoXC1))<=16,skoXC1*skoXC1*(1/2)<=3,skoXC1*skoXC1*(-1/2)>-3,skoXC1>0,(7/8)>skoXC1,skoXC1*(-1+skoXC1*skoXC1*(1/3))<=0,skoXC1*skoXC1*(-1/6)<=1,skoXC1*skoXC1*((-1/2)+skoXC1*skoXC1*(-1/6))<=0,skoXC1*skoXC1<=2,skoXC1*skoXC1*skoXC1*skoXC1*(-2/3)<=0,skoXC1*(-1+skoXC1*skoXC1*(-1/6))<=0,skoXC1*skoXC1*(1/3)<=1,skoXC1*skoXC1*(256+skoXC1*skoXC1*(-160+skoXC1*skoXC1*(32+skoXC1*skoXC1*-1)))<=128,skoXC1*skoXC1*skoXC1*skoXC1*((-80/3)+skoXC1*skoXC1*((128/3)+skoXC1*skoXC1*((-55/3)+skoXC1*skoXC1*(5/3))))<=0,skoXC1*(-1+skoXC1*skoXC1*((1/3)+skoXC1*skoXC1*((3/20)+skoXC1*skoXC1*(5/56))))<=0,skoXC1*skoXC1*((-1/6)+skoXC1*skoXC1*((-3/40)+skoXC1*skoXC1*(-5/112)))<=1,skoXC1*skoXC1*((-1/2)+skoXC1*skoXC1*((7/120)+skoXC1*skoXC1*((33/560)+skoXC1*skoXC1*(-5/112))))<=0,skoXC1*skoXC1*skoXC1*skoXC1*((-13/60)+skoXC1*skoXC1*((-9/280)+skoXC1*skoXC1*(-5/28)))<=0,skoXC1*skoXC1*skoXC1*skoXC1*((-17/120)+skoXC1*skoXC1*((-27/280)+skoXC1*skoXC1*(5/224)))<=0,skoXC1*skoXC1*((1/3)+skoXC1*skoXC1*((3/20)+skoXC1*skoXC1*(5/56)))<=1,skoXC1*skoXC1*skoXC1*skoXC1*((32/15)+skoXC1*skoXC1*((-272/105)+skoXC1*skoXC1*((-1163/105)+skoXC1*skoXC1*((1753/105)+skoXC1*skoXC1*((-169/28)+skoXC1*skoXC1*(25/56))))))<=0,skoXC1*skoXC1*((1/6)+skoXC1*skoXC1*((3/40)+skoXC1*skoXC1*(5/112)))>-1,skoXC1*(-1+skoXC1*skoXC1*((-1/6)+skoXC1*skoXC1*((-3/40)+skoXC1*skoXC1*(-5/112))))<=0]], Reals]]

% In QepcadB format:
(E skoXC1) [[(skoXC1 skoXC1 (-1/6+(skoXC1 skoXC1 (-3/40+(skoXC1 skoXC1 (-5/112+(skoXC1 skoXC1 (-35/1152+(skoXC1 skoXC1 (-63/2816))))))))))<=1]/\[[(skoXC1 skoXC1 skoXC1 skoXC1 (-17/120+(skoXC1 skoXC1 (-27/280+(skoXC1 skoXC1 (-185/2688+(skoXC1 skoXC1 (-329/6336+(skoXC1 skoXC1 (63/5632))))))))))<=0]/\[[(skoXC1 skoXC1 (1/3+(skoXC1 skoXC1 (3/20+(skoXC1 skoXC1 (5/56+(skoXC1 skoXC1 (35/576+(skoXC1 skoXC1 (63/1408))))))))))<=1]/\[[(skoXC1 skoXC1 skoXC1 skoXC1 (-13/60+(skoXC1 skoXC1 (-9/280+(skoXC1 skoXC1 (5/1344+(skoXC1 skoXC1 (161/12672+(skoXC1 skoXC1 (-63/704))))))))))<=0]/\[[(skoXC1 skoXC1 (-1/2+(skoXC1 skoXC1 (7/120+(skoXC1 skoXC1 (33/560+(skoXC1 skoXC1 (125/2688+(skoXC1 skoXC1 (931/25344+(skoXC1 skoXC1 (-63/2816))))))))))))<=0]/\[[(skoXC1 skoXC1 (-1/6+(skoXC1 skoXC1 (-3/40+(skoXC1 skoXC1 (-5/112+(skoXC1 skoXC1 (-35/1152+(skoXC1 skoXC1 (-63/2816))))))))))<=1]/\[[(skoXC1 (-1+(skoXC1 skoXC1 (1/3+(skoXC1 skoXC1 (3/20+(skoXC1 skoXC1 (5/56+(skoXC1 skoXC1 (35/576+(skoXC1 skoXC1 (63/1408))))))))))))<=0]/\[[(skoXC1 (-1+(skoXC1 skoXC1 (-1/6+(skoXC1 skoXC1 (-3/40))))))<=0]/\[[-1<(skoXC1 skoXC1 (1/6+(skoXC1 skoXC1 (3/40))))]/\[[(skoXC1 skoXC1 skoXC1 skoXC1 (32/15+(skoXC1 skoXC1 (-296/15+(skoXC1 skoXC1 (391/15+(skoXC1 skoXC1 (-146/15+(skoXC1 skoXC1 (3/4))))))))))<=0]/\[[(skoXC1 skoXC1 (1/3+(skoXC1 skoXC1 (3/20))))<=1]/\[[(skoXC1 skoXC1 skoXC1 skoXC1 (-17/120+(skoXC1 skoXC1 (3/80))))<=0]/\[[(skoXC1 skoXC1 skoXC1 skoXC1 (-13/60+(skoXC1 skoXC1 (-3/10))))<=0]/\[[(skoXC1 skoXC1 (-1/2+(skoXC1 skoXC1 (7/120+(skoXC1 skoXC1 (-3/40))))))<=0]/\[[(skoXC1 skoXC1 (-1/6+(skoXC1 skoXC1 (-3/40))))<=1]/\[[(skoXC1 (-1+(skoXC1 skoXC1 (1/3+(skoXC1 skoXC1 (3/20))))))<=0]/\[[0<(skoXC1 skoXC1)]/\[[(skoXC1 skoXC1 (80+(skoXC1 skoXC1 (-40+(skoXC1 skoXC1 (6+(skoXC1 skoXC1 (-1/8))))))))<=48]/\[[-48<(skoXC1 skoXC1 (-80+(skoXC1 skoXC1 (40+(skoXC1 skoXC1 (-6+(skoXC1 skoXC1 (1/8))))))))]/\[[(skoXC1 skoXC1 (24+(skoXC1 skoXC1 (-10+(skoXC1 skoXC1)))))<=16]/\[[(skoXC1 skoXC1 (1/2))<=3]/\[[-3<(skoXC1 skoXC1 (-1/2))]/\[[0<skoXC1]/\[[skoXC1<7/8]/\[[(skoXC1 (-1+(skoXC1 skoXC1 (1/3))))<=0]/\[[(skoXC1 skoXC1 (-1/6))<=1]/\[[(skoXC1 skoXC1 (-1/2+(skoXC1 skoXC1 (-1/6))))<=0]/\[[(skoXC1 skoXC1)<=2]/\[[(skoXC1 skoXC1 skoXC1 skoXC1 (-2/3))<=0]/\[[(skoXC1 (-1+(skoXC1 skoXC1 (-1/6))))<=0]/\[[(skoXC1 skoXC1 (1/3))<=1]/\[[(skoXC1 skoXC1 (256+(skoXC1 skoXC1 (-160+(skoXC1 skoXC1 (32+(skoXC1 skoXC1 (-1))))))))<=128]/\[[(skoXC1 skoXC1 skoXC1 skoXC1 (-80/3+(skoXC1 skoXC1 (128/3+(skoXC1 skoXC1 (-55/3+(skoXC1 skoXC1 (5/3))))))))<=0]/\[[(skoXC1 (-1+(skoXC1 skoXC1 (1/3+(skoXC1 skoXC1 (3/20+(skoXC1 skoXC1 (5/56))))))))<=0]/\[[(skoXC1 skoXC1 (-1/6+(skoXC1 skoXC1 (-3/40+(skoXC1 skoXC1 (-5/112))))))<=1]/\[[(skoXC1 skoXC1 (-1/2+(skoXC1 skoXC1 (7/120+(skoXC1 skoXC1 (33/560+(skoXC1 skoXC1 (-5/112))))))))<=0]/\[[(skoXC1 skoXC1 skoXC1 skoXC1 (-13/60+(skoXC1 skoXC1 (-9/280+(skoXC1 skoXC1 (-5/28))))))<=0]/\[[(skoXC1 skoXC1 skoXC1 skoXC1 (-17/120+(skoXC1 skoXC1 (-27/280+(skoXC1 skoXC1 (5/224))))))<=0]/\[[(skoXC1 skoXC1 (1/3+(skoXC1 skoXC1 (3/20+(skoXC1 skoXC1 (5/56))))))<=1]/\[[(skoXC1 skoXC1 skoXC1 skoXC1 (32/15+(skoXC1 skoXC1 (-272/105+(skoXC1 skoXC1 (-1163/105+(skoXC1 skoXC1 (1753/105+(skoXC1 skoXC1 (-169/28+(skoXC1 skoXC1 (25/56))))))))))))<=0]/\[[-1<(skoXC1 skoXC1 (1/6+(skoXC1 skoXC1 (3/40+(skoXC1 skoXC1 (5/112))))))]/\[(skoXC1 (-1+(skoXC1 skoXC1 (-1/6+(skoXC1 skoXC1 (-3/40+(skoXC1 skoXC1 (-5/112))))))))<=0]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]].

% In SMTLib2 format:
(declare-fun skoXC1 () Real) (assert (and (<= (* skoXC1 (* skoXC1 (+ (/ (- 1.) 6.) (* skoXC1 (* skoXC1 (+ (/ (- 3.) 40.) (* skoXC1 (* skoXC1 (+ (/ (- 5.) 112.) (* skoXC1 (* skoXC1 (+ (/ (- 35.) 1152.) (* skoXC1 (* skoXC1 (/ (- 63.) 2816.))))))))))))))) 1.) (and (<= (* skoXC1 (* skoXC1 (* skoXC1 (* skoXC1 (+ (/ (- 17.) 120.) (* skoXC1 (* skoXC1 (+ (/ (- 27.) 280.) (* skoXC1 (* skoXC1 (+ (/ (- 185.) 2688.) (* skoXC1 (* skoXC1 (+ (/ (- 329.) 6336.) (* skoXC1 (* skoXC1 (/ 63. 5632.))))))))))))))))) 0.) (and (<= (* skoXC1 (* skoXC1 (+ (/ 1. 3.) (* skoXC1 (* skoXC1 (+ (/ 3. 20.) (* skoXC1 (* skoXC1 (+ (/ 5. 56.) (* skoXC1 (* skoXC1 (+ (/ 35. 576.) (* skoXC1 (* skoXC1 (/ 63. 1408.))))))))))))))) 1.) (and (<= (* skoXC1 (* skoXC1 (* skoXC1 (* skoXC1 (+ (/ (- 13.) 60.) (* skoXC1 (* skoXC1 (+ (/ (- 9.) 280.) (* skoXC1 (* skoXC1 (+ (/ 5. 1344.) (* skoXC1 (* skoXC1 (+ (/ 161. 12672.) (* skoXC1 (* skoXC1 (/ (- 63.) 704.))))))))))))))))) 0.) (and (<= (* skoXC1 (* skoXC1 (+ (/ (- 1.) 2.) (* skoXC1 (* skoXC1 (+ (/ 7. 120.) (* skoXC1 (* skoXC1 (+ (/ 33. 560.) (* skoXC1 (* skoXC1 (+ (/ 125. 2688.) (* skoXC1 (* skoXC1 (+ (/ 931. 25344.) (* skoXC1 (* skoXC1 (/ (- 63.) 2816.)))))))))))))))))) 0.) (and (<= (* skoXC1 (* skoXC1 (+ (/ (- 1.) 6.) (* skoXC1 (* skoXC1 (+ (/ (- 3.) 40.) (* skoXC1 (* skoXC1 (+ (/ (- 5.) 112.) (* skoXC1 (* skoXC1 (+ (/ (- 35.) 1152.) (* skoXC1 (* skoXC1 (/ (- 63.) 2816.))))))))))))))) 1.) (and (<= (* skoXC1 (+ (- 1.) (* skoXC1 (* skoXC1 (+ (/ 1. 3.) (* skoXC1 (* skoXC1 (+ (/ 3. 20.) (* skoXC1 (* skoXC1 (+ (/ 5. 56.) (* skoXC1 (* skoXC1 (+ (/ 35. 576.) (* skoXC1 (* skoXC1 (/ 63. 1408.))))))))))))))))) 0.) (and (<= (* skoXC1 (+ (- 1.) (* skoXC1 (* skoXC1 (+ (/ (- 1.) 6.) (* skoXC1 (* skoXC1 (/ (- 3.) 40.)))))))) 0.) (and (> (* skoXC1 (* skoXC1 (+ (/ 1. 6.) (* skoXC1 (* skoXC1 (/ 3. 40.)))))) (- 1.)) (and (<= (* skoXC1 (* skoXC1 (* skoXC1 (* skoXC1 (+ (/ 32. 15.) (* skoXC1 (* skoXC1 (+ (/ (- 296.) 15.) (* skoXC1 (* skoXC1 (+ (/ 391. 15.) (* skoXC1 (* skoXC1 (+ (/ (- 146.) 15.) (* skoXC1 (* skoXC1 (/ 3. 4.))))))))))))))))) 0.) (and (<= (* skoXC1 (* skoXC1 (+ (/ 1. 3.) (* skoXC1 (* skoXC1 (/ 3. 20.)))))) 1.) (and (<= (* skoXC1 (* skoXC1 (* skoXC1 (* skoXC1 (+ (/ (- 17.) 120.) (* skoXC1 (* skoXC1 (/ 3. 80.)))))))) 0.) (and (<= (* skoXC1 (* skoXC1 (* skoXC1 (* skoXC1 (+ (/ (- 13.) 60.) (* skoXC1 (* skoXC1 (/ (- 3.) 10.)))))))) 0.) (and (<= (* skoXC1 (* skoXC1 (+ (/ (- 1.) 2.) (* skoXC1 (* skoXC1 (+ (/ 7. 120.) (* skoXC1 (* skoXC1 (/ (- 3.) 40.))))))))) 0.) (and (<= (* skoXC1 (* skoXC1 (+ (/ (- 1.) 6.) (* skoXC1 (* skoXC1 (/ (- 3.) 40.)))))) 1.) (and (<= (* skoXC1 (+ (- 1.) (* skoXC1 (* skoXC1 (+ (/ 1. 3.) (* skoXC1 (* skoXC1 (/ 3. 20.)))))))) 0.) (and (> (* skoXC1 skoXC1) 0.) (and (<= (* skoXC1 (* skoXC1 (+ 80. (* skoXC1 (* skoXC1 (+ (- 40.) (* skoXC1 (* skoXC1 (+ 6. (* skoXC1 (* skoXC1 (/ (- 1.) 8.)))))))))))) 48.) (and (> (* skoXC1 (* skoXC1 (+ (- 80.) (* skoXC1 (* skoXC1 (+ 40. (* skoXC1 (* skoXC1 (+ (- 6.) (* skoXC1 (* skoXC1 (/ 1. 8.)))))))))))) (- 48.)) (and (<= (* skoXC1 (* skoXC1 (+ 24. (* skoXC1 (* skoXC1 (+ (- 10.) (* skoXC1 skoXC1))))))) 16.) (and (<= (* skoXC1 (* skoXC1 (/ 1. 2.))) 3.) (and (> (* skoXC1 (* skoXC1 (/ (- 1.) 2.))) (- 3.)) (and (> skoXC1 0.) (and (> (/ 7. 8.) skoXC1) (and (<= (* skoXC1 (+ (- 1.) (* skoXC1 (* skoXC1 (/ 1. 3.))))) 0.) (and (<= (* skoXC1 (* skoXC1 (/ (- 1.) 6.))) 1.) (and (<= (* skoXC1 (* skoXC1 (+ (/ (- 1.) 2.) (* skoXC1 (* skoXC1 (/ (- 1.) 6.)))))) 0.) (and (<= (* skoXC1 skoXC1) 2.) (and (<= (* skoXC1 (* skoXC1 (* skoXC1 (* skoXC1 (/ (- 2.) 3.))))) 0.) (and (<= (* skoXC1 (+ (- 1.) (* skoXC1 (* skoXC1 (/ (- 1.) 6.))))) 0.) (and (<= (* skoXC1 (* skoXC1 (/ 1. 3.))) 1.) (and (<= (* skoXC1 (* skoXC1 (+ 256. (* skoXC1 (* skoXC1 (+ (- 160.) (* skoXC1 (* skoXC1 (+ 32. (* skoXC1 (* skoXC1 (- 1.)))))))))))) 128.) (and (<= (* skoXC1 (* skoXC1 (* skoXC1 (* skoXC1 (+ (/ (- 80.) 3.) (* skoXC1 (* skoXC1 (+ (/ 128. 3.) (* skoXC1 (* skoXC1 (+ (/ (- 55.) 3.) (* skoXC1 (* skoXC1 (/ 5. 3.)))))))))))))) 0.) (and (<= (* skoXC1 (+ (- 1.) (* skoXC1 (* skoXC1 (+ (/ 1. 3.) (* skoXC1 (* skoXC1 (+ (/ 3. 20.) (* skoXC1 (* skoXC1 (/ 5. 56.))))))))))) 0.) (and (<= (* skoXC1 (* skoXC1 (+ (/ (- 1.) 6.) (* skoXC1 (* skoXC1 (+ (/ (- 3.) 40.) (* skoXC1 (* skoXC1 (/ (- 5.) 112.))))))))) 1.) (and (<= (* skoXC1 (* skoXC1 (+ (/ (- 1.) 2.) (* skoXC1 (* skoXC1 (+ (/ 7. 120.) (* skoXC1 (* skoXC1 (+ (/ 33. 560.) (* skoXC1 (* skoXC1 (/ (- 5.) 112.)))))))))))) 0.) (and (<= (* skoXC1 (* skoXC1 (* skoXC1 (* skoXC1 (+ (/ (- 13.) 60.) (* skoXC1 (* skoXC1 (+ (/ (- 9.) 280.) (* skoXC1 (* skoXC1 (/ (- 5.) 28.))))))))))) 0.) (and (<= (* skoXC1 (* skoXC1 (* skoXC1 (* skoXC1 (+ (/ (- 17.) 120.) (* skoXC1 (* skoXC1 (+ (/ (- 27.) 280.) (* skoXC1 (* skoXC1 (/ 5. 224.))))))))))) 0.) (and (<= (* skoXC1 (* skoXC1 (+ (/ 1. 3.) (* skoXC1 (* skoXC1 (+ (/ 3. 20.) (* skoXC1 (* skoXC1 (/ 5. 56.))))))))) 1.) (and (<= (* skoXC1 (* skoXC1 (* skoXC1 (* skoXC1 (+ (/ 32. 15.) (* skoXC1 (* skoXC1 (+ (/ (- 272.) 105.) (* skoXC1 (* skoXC1 (+ (/ (- 1163.) 105.) (* skoXC1 (* skoXC1 (+ (/ 1753. 105.) (* skoXC1 (* skoXC1 (+ (/ (- 169.) 28.) (* skoXC1 (* skoXC1 (/ 25. 56.)))))))))))))))))))) 0.) (and (> (* skoXC1 (* skoXC1 (+ (/ 1. 6.) (* skoXC1 (* skoXC1 (+ (/ 3. 40.) (* skoXC1 (* skoXC1 (/ 5. 112.))))))))) (- 1.)) (<= (* skoXC1 (+ (- 1.) (* skoXC1 (* skoXC1 (+ (/ (- 1.) 6.) (* skoXC1 (* skoXC1 (+ (/ (- 3.) 40.) (* skoXC1 (* skoXC1 (/ (- 5.) 112.))))))))))) 0.)))))))))))))))))))))))))))))))))))))))))))

% In GRF format:
(sequent " MetiTarski formula " (antecedent (<= (* skoXC1 (* skoXC1 (+ (/ (- 1.) 6.) (* skoXC1 (* skoXC1 (+ (/ (- 3.) 40.) (* skoXC1 (* skoXC1 (+ (/ (- 5.) 112.) (* skoXC1 (* skoXC1 (+ (/ (- 35.) 1152.) (* skoXC1 (* skoXC1 (/ (- 63.) 2816.))))))))))))))) 1.) (<= (* skoXC1 (* skoXC1 (* skoXC1 (* skoXC1 (+ (/ (- 17.) 120.) (* skoXC1 (* skoXC1 (+ (/ (- 27.) 280.) (* skoXC1 (* skoXC1 (+ (/ (- 185.) 2688.) (* skoXC1 (* skoXC1 (+ (/ (- 329.) 6336.) (* skoXC1 (* skoXC1 (/ 63. 5632.))))))))))))))))) 0.) (<= (* skoXC1 (* skoXC1 (+ (/ 1. 3.) (* skoXC1 (* skoXC1 (+ (/ 3. 20.) (* skoXC1 (* skoXC1 (+ (/ 5. 56.) (* skoXC1 (* skoXC1 (+ (/ 35. 576.) (* skoXC1 (* skoXC1 (/ 63. 1408.))))))))))))))) 1.) (<= (* skoXC1 (* skoXC1 (* skoXC1 (* skoXC1 (+ (/ (- 13.) 60.) (* skoXC1 (* skoXC1 (+ (/ (- 9.) 280.) (* skoXC1 (* skoXC1 (+ (/ 5. 1344.) (* skoXC1 (* skoXC1 (+ (/ 161. 12672.) (* skoXC1 (* skoXC1 (/ (- 63.) 704.))))))))))))))))) 0.) (<= (* skoXC1 (* skoXC1 (+ (/ (- 1.) 2.) (* skoXC1 (* skoXC1 (+ (/ 7. 120.) (* skoXC1 (* skoXC1 (+ (/ 33. 560.) (* skoXC1 (* skoXC1 (+ (/ 125. 2688.) (* skoXC1 (* skoXC1 (+ (/ 931. 25344.) (* skoXC1 (* skoXC1 (/ (- 63.) 2816.)))))))))))))))))) 0.) (<= (* skoXC1 (* skoXC1 (+ (/ (- 1.) 6.) (* skoXC1 (* skoXC1 (+ (/ (- 3.) 40.) (* skoXC1 (* skoXC1 (+ (/ (- 5.) 112.) (* skoXC1 (* skoXC1 (+ (/ (- 35.) 1152.) (* skoXC1 (* skoXC1 (/ (- 63.) 2816.))))))))))))))) 1.) (<= (* skoXC1 (+ (- 1.) (* skoXC1 (* skoXC1 (+ (/ 1. 3.) (* skoXC1 (* skoXC1 (+ (/ 3. 20.) (* skoXC1 (* skoXC1 (+ (/ 5. 56.) (* skoXC1 (* skoXC1 (+ (/ 35. 576.) (* skoXC1 (* skoXC1 (/ 63. 1408.))))))))))))))))) 0.) (<= (* skoXC1 (+ (- 1.) (* skoXC1 (* skoXC1 (+ (/ (- 1.) 6.) (* skoXC1 (* skoXC1 (/ (- 3.) 40.)))))))) 0.) (> (* skoXC1 (* skoXC1 (+ (/ 1. 6.) (* skoXC1 (* skoXC1 (/ 3. 40.)))))) (- 1.)) (<= (* skoXC1 (* skoXC1 (* skoXC1 (* skoXC1 (+ (/ 32. 15.) (* skoXC1 (* skoXC1 (+ (/ (- 296.) 15.) (* skoXC1 (* skoXC1 (+ (/ 391. 15.) (* skoXC1 (* skoXC1 (+ (/ (- 146.) 15.) (* skoXC1 (* skoXC1 (/ 3. 4.))))))))))))))))) 0.) (<= (* skoXC1 (* skoXC1 (+ (/ 1. 3.) (* skoXC1 (* skoXC1 (/ 3. 20.)))))) 1.) (<= (* skoXC1 (* skoXC1 (* skoXC1 (* skoXC1 (+ (/ (- 17.) 120.) (* skoXC1 (* skoXC1 (/ 3. 80.)))))))) 0.) (<= (* skoXC1 (* skoXC1 (* skoXC1 (* skoXC1 (+ (/ (- 13.) 60.) (* skoXC1 (* skoXC1 (/ (- 3.) 10.)))))))) 0.) (<= (* skoXC1 (* skoXC1 (+ (/ (- 1.) 2.) (* skoXC1 (* skoXC1 (+ (/ 7. 120.) (* skoXC1 (* skoXC1 (/ (- 3.) 40.))))))))) 0.) (<= (* skoXC1 (* skoXC1 (+ (/ (- 1.) 6.) (* skoXC1 (* skoXC1 (/ (- 3.) 40.)))))) 1.) (<= (* skoXC1 (+ (- 1.) (* skoXC1 (* skoXC1 (+ (/ 1. 3.) (* skoXC1 (* skoXC1 (/ 3. 20.)))))))) 0.) (> (* skoXC1 skoXC1) 0.) (<= (* skoXC1 (* skoXC1 (+ 80. (* skoXC1 (* skoXC1 (+ (- 40.) (* skoXC1 (* skoXC1 (+ 6. (* skoXC1 (* skoXC1 (/ (- 1.) 8.)))))))))))) 48.) (> (* skoXC1 (* skoXC1 (+ (- 80.) (* skoXC1 (* skoXC1 (+ 40. (* skoXC1 (* skoXC1 (+ (- 6.) (* skoXC1 (* skoXC1 (/ 1. 8.)))))))))))) (- 48.)) (<= (* skoXC1 (* skoXC1 (+ 24. (* skoXC1 (* skoXC1 (+ (- 10.) (* skoXC1 skoXC1))))))) 16.) (<= (* skoXC1 (* skoXC1 (/ 1. 2.))) 3.) (> (* skoXC1 (* skoXC1 (/ (- 1.) 2.))) (- 3.)) (> skoXC1 0.) (> (/ 7. 8.) skoXC1) (<= (* skoXC1 (+ (- 1.) (* skoXC1 (* skoXC1 (/ 1. 3.))))) 0.) (<= (* skoXC1 (* skoXC1 (/ (- 1.) 6.))) 1.) (<= (* skoXC1 (* skoXC1 (+ (/ (- 1.) 2.) (* skoXC1 (* skoXC1 (/ (- 1.) 6.)))))) 0.) (<= (* skoXC1 skoXC1) 2.) (<= (* skoXC1 (* skoXC1 (* skoXC1 (* skoXC1 (/ (- 2.) 3.))))) 0.) (<= (* skoXC1 (+ (- 1.) (* skoXC1 (* skoXC1 (/ (- 1.) 6.))))) 0.) (<= (* skoXC1 (* skoXC1 (/ 1. 3.))) 1.) (<= (* skoXC1 (* skoXC1 (+ 256. (* skoXC1 (* skoXC1 (+ (- 160.) (* skoXC1 (* skoXC1 (+ 32. (* skoXC1 (* skoXC1 (- 1.)))))))))))) 128.) (<= (* skoXC1 (* skoXC1 (* skoXC1 (* skoXC1 (+ (/ (- 80.) 3.) (* skoXC1 (* skoXC1 (+ (/ 128. 3.) (* skoXC1 (* skoXC1 (+ (/ (- 55.) 3.) (* skoXC1 (* skoXC1 (/ 5. 3.)))))))))))))) 0.) (<= (* skoXC1 (+ (- 1.) (* skoXC1 (* skoXC1 (+ (/ 1. 3.) (* skoXC1 (* skoXC1 (+ (/ 3. 20.) (* skoXC1 (* skoXC1 (/ 5. 56.))))))))))) 0.) (<= (* skoXC1 (* skoXC1 (+ (/ (- 1.) 6.) (* skoXC1 (* skoXC1 (+ (/ (- 3.) 40.) (* skoXC1 (* skoXC1 (/ (- 5.) 112.))))))))) 1.) (<= (* skoXC1 (* skoXC1 (+ (/ (- 1.) 2.) (* skoXC1 (* skoXC1 (+ (/ 7. 120.) (* skoXC1 (* skoXC1 (+ (/ 33. 560.) (* skoXC1 (* skoXC1 (/ (- 5.) 112.)))))))))))) 0.) (<= (* skoXC1 (* skoXC1 (* skoXC1 (* skoXC1 (+ (/ (- 13.) 60.) (* skoXC1 (* skoXC1 (+ (/ (- 9.) 280.) (* skoXC1 (* skoXC1 (/ (- 5.) 28.))))))))))) 0.) (<= (* skoXC1 (* skoXC1 (* skoXC1 (* skoXC1 (+ (/ (- 17.) 120.) (* skoXC1 (* skoXC1 (+ (/ (- 27.) 280.) (* skoXC1 (* skoXC1 (/ 5. 224.))))))))))) 0.) (<= (* skoXC1 (* skoXC1 (+ (/ 1. 3.) (* skoXC1 (* skoXC1 (+ (/ 3. 20.) (* skoXC1 (* skoXC1 (/ 5. 56.))))))))) 1.) (<= (* skoXC1 (* skoXC1 (* skoXC1 (* skoXC1 (+ (/ 32. 15.) (* skoXC1 (* skoXC1 (+ (/ (- 272.) 105.) (* skoXC1 (* skoXC1 (+ (/ (- 1163.) 105.) (* skoXC1 (* skoXC1 (+ (/ 1753. 105.) (* skoXC1 (* skoXC1 (+ (/ (- 169.) 28.) (* skoXC1 (* skoXC1 (/ 25. 56.)))))))))))))))))))) 0.) (> (* skoXC1 (* skoXC1 (+ (/ 1. 6.) (* skoXC1 (* skoXC1 (+ (/ 3. 40.) (* skoXC1 (* skoXC1 (/ 5. 112.))))))))) (- 1.))) (succedent (> (* skoXC1 (+ (- 1.) (* skoXC1 (* skoXC1 (+ (/ (- 1.) 6.) (* skoXC1 (* skoXC1 (+ (/ (- 3.) 40.) (* skoXC1 (* skoXC1 (/ (- 5.) 112.))))))))))) 0.)))
-----[end problem]-----

-----[begin problem]-----
% In Mathematica format:
Timing[Resolve[Exists[{skoXC1}, And[skoXC1*skoXC1*(256+skoXC1*skoXC1*(-160+skoXC1*skoXC1*(32+skoXC1*skoXC1*-1)))<=128,skoXC1*skoXC1*skoXC1*skoXC1*((-17/120)+skoXC1*skoXC1*((-27/280)+skoXC1*skoXC1*((-185/2688)+skoXC1*skoXC1*((-329/6336)+skoXC1*skoXC1*(63/5632)))))<=0,skoXC1*skoXC1*((1/3)+skoXC1*skoXC1*((3/20)+skoXC1*skoXC1*((5/56)+skoXC1*skoXC1*((35/576)+skoXC1*skoXC1*(63/1408)))))<=1,skoXC1*skoXC1*skoXC1*skoXC1*((-13/60)+skoXC1*skoXC1*((-9/280)+skoXC1*skoXC1*((5/1344)+skoXC1*skoXC1*((161/12672)+skoXC1*skoXC1*(-63/704)))))<=0,skoXC1*skoXC1*((-1/2)+skoXC1*skoXC1*((7/120)+skoXC1*skoXC1*((33/560)+skoXC1*skoXC1*((125/2688)+skoXC1*skoXC1*((931/25344)+skoXC1*skoXC1*(-63/2816))))))<=0,skoXC1*skoXC1*((-1/6)+skoXC1*skoXC1*((-3/40)+skoXC1*skoXC1*((-5/112)+skoXC1*skoXC1*((-35/1152)+skoXC1*skoXC1*(-63/2816)))))<=1,skoXC1*(-1+skoXC1*skoXC1*((1/3)+skoXC1*skoXC1*((3/20)+skoXC1*skoXC1*((5/56)+skoXC1*skoXC1*((35/576)+skoXC1*skoXC1*(63/1408))))))<=0,skoXC1*(-1+skoXC1*skoXC1*((-1/6)+skoXC1*skoXC1*(-3/40)))<=0,skoXC1*skoXC1*((1/6)+skoXC1*skoXC1*(3/40))>-1,skoXC1*skoXC1*skoXC1*skoXC1*((32/15)+skoXC1*skoXC1*((-296/15)+skoXC1*skoXC1*((391/15)+skoXC1*skoXC1*((-146/15)+skoXC1*skoXC1*(3/4)))))<=0,skoXC1*skoXC1*((1/3)+skoXC1*skoXC1*(3/20))<=1,skoXC1*skoXC1*skoXC1*skoXC1*((-17/120)+skoXC1*skoXC1*(3/80))<=0,skoXC1*skoXC1*skoXC1*skoXC1*((-13/60)+skoXC1*skoXC1*(-3/10))<=0,skoXC1*skoXC1*((-1/2)+skoXC1*skoXC1*((7/120)+skoXC1*skoXC1*(-3/40)))<=0,skoXC1*skoXC1*((-1/6)+skoXC1*skoXC1*(-3/40))<=1,skoXC1*(-1+skoXC1*skoXC1*((1/3)+skoXC1*skoXC1*(3/20)))<=0,skoXC1*skoXC1>0,skoXC1*skoXC1*(80+skoXC1*skoXC1*(-40+skoXC1*skoXC1*(6+skoXC1*skoXC1*(-1/8))))<=48,skoXC1*skoXC1*(-80+skoXC1*skoXC1*(40+skoXC1*skoXC1*(-6+skoXC1*skoXC1*(1/8))))>-48,skoXC1*skoXC1*(24+skoXC1*skoXC1*(-10+skoXC1*skoXC1))<=16,skoXC1*skoXC1*(1/2)<=3,skoXC1*skoXC1*(-1/2)>-3,skoXC1>0,(7/8)>skoXC1,skoXC1*(-1+skoXC1*skoXC1*(1/3))<=0,skoXC1*skoXC1*(-1/6)<=1,skoXC1*skoXC1*((-1/2)+skoXC1*skoXC1*(-1/6))<=0,skoXC1*skoXC1<=2,skoXC1*skoXC1*skoXC1*skoXC1*(-2/3)<=0,skoXC1*(-1+skoXC1*skoXC1*(-1/6))<=0,skoXC1*skoXC1*(1/3)<=1,skoXC1*skoXC1*(256+skoXC1*skoXC1*(-160+skoXC1*skoXC1*(32+skoXC1*skoXC1*-1)))<=128,skoXC1*skoXC1*skoXC1*skoXC1*((-80/3)+skoXC1*skoXC1*((128/3)+skoXC1*skoXC1*((-55/3)+skoXC1*skoXC1*(5/3))))<=0,skoXC1*(-1+skoXC1*skoXC1*((1/3)+skoXC1*skoXC1*((3/20)+skoXC1*skoXC1*(5/56))))<=0,skoXC1*skoXC1*((-1/6)+skoXC1*skoXC1*((-3/40)+skoXC1*skoXC1*(-5/112)))<=1,skoXC1*skoXC1*((-1/2)+skoXC1*skoXC1*((7/120)+skoXC1*skoXC1*((33/560)+skoXC1*skoXC1*(-5/112))))<=0,skoXC1*skoXC1*skoXC1*skoXC1*((-13/60)+skoXC1*skoXC1*((-9/280)+skoXC1*skoXC1*(-5/28)))<=0,skoXC1*skoXC1*skoXC1*skoXC1*((-17/120)+skoXC1*skoXC1*((-27/280)+skoXC1*skoXC1*(5/224)))<=0,skoXC1*skoXC1*((1/3)+skoXC1*skoXC1*((3/20)+skoXC1*skoXC1*(5/56)))<=1,skoXC1*skoXC1*skoXC1*skoXC1*((32/15)+skoXC1*skoXC1*((-272/105)+skoXC1*skoXC1*((-1163/105)+skoXC1*skoXC1*((1753/105)+skoXC1*skoXC1*((-169/28)+skoXC1*skoXC1*(25/56))))))<=0,skoXC1*skoXC1*((1/6)+skoXC1*skoXC1*((3/40)+skoXC1*skoXC1*(5/112)))>-1,skoXC1*(-1+skoXC1*skoXC1*((-1/6)+skoXC1*skoXC1*((-3/40)+skoXC1*skoXC1*(-5/112))))<=0]], Reals]]

% In QepcadB format:
(E skoXC1) [[(skoXC1 skoXC1 (256+(skoXC1 skoXC1 (-160+(skoXC1 skoXC1 (32+(skoXC1 skoXC1 (-1))))))))<=128]/\[[(skoXC1 skoXC1 skoXC1 skoXC1 (-17/120+(skoXC1 skoXC1 (-27/280+(skoXC1 skoXC1 (-185/2688+(skoXC1 skoXC1 (-329/6336+(skoXC1 skoXC1 (63/5632))))))))))<=0]/\[[(skoXC1 skoXC1 (1/3+(skoXC1 skoXC1 (3/20+(skoXC1 skoXC1 (5/56+(skoXC1 skoXC1 (35/576+(skoXC1 skoXC1 (63/1408))))))))))<=1]/\[[(skoXC1 skoXC1 skoXC1 skoXC1 (-13/60+(skoXC1 skoXC1 (-9/280+(skoXC1 skoXC1 (5/1344+(skoXC1 skoXC1 (161/12672+(skoXC1 skoXC1 (-63/704))))))))))<=0]/\[[(skoXC1 skoXC1 (-1/2+(skoXC1 skoXC1 (7/120+(skoXC1 skoXC1 (33/560+(skoXC1 skoXC1 (125/2688+(skoXC1 skoXC1 (931/25344+(skoXC1 skoXC1 (-63/2816))))))))))))<=0]/\[[(skoXC1 skoXC1 (-1/6+(skoXC1 skoXC1 (-3/40+(skoXC1 skoXC1 (-5/112+(skoXC1 skoXC1 (-35/1152+(skoXC1 skoXC1 (-63/2816))))))))))<=1]/\[[(skoXC1 (-1+(skoXC1 skoXC1 (1/3+(skoXC1 skoXC1 (3/20+(skoXC1 skoXC1 (5/56+(skoXC1 skoXC1 (35/576+(skoXC1 skoXC1 (63/1408))))))))))))<=0]/\[[(skoXC1 (-1+(skoXC1 skoXC1 (-1/6+(skoXC1 skoXC1 (-3/40))))))<=0]/\[[-1<(skoXC1 skoXC1 (1/6+(skoXC1 skoXC1 (3/40))))]/\[[(skoXC1 skoXC1 skoXC1 skoXC1 (32/15+(skoXC1 skoXC1 (-296/15+(skoXC1 skoXC1 (391/15+(skoXC1 skoXC1 (-146/15+(skoXC1 skoXC1 (3/4))))))))))<=0]/\[[(skoXC1 skoXC1 (1/3+(skoXC1 skoXC1 (3/20))))<=1]/\[[(skoXC1 skoXC1 skoXC1 skoXC1 (-17/120+(skoXC1 skoXC1 (3/80))))<=0]/\[[(skoXC1 skoXC1 skoXC1 skoXC1 (-13/60+(skoXC1 skoXC1 (-3/10))))<=0]/\[[(skoXC1 skoXC1 (-1/2+(skoXC1 skoXC1 (7/120+(skoXC1 skoXC1 (-3/40))))))<=0]/\[[(skoXC1 skoXC1 (-1/6+(skoXC1 skoXC1 (-3/40))))<=1]/\[[(skoXC1 (-1+(skoXC1 skoXC1 (1/3+(skoXC1 skoXC1 (3/20))))))<=0]/\[[0<(skoXC1 skoXC1)]/\[[(skoXC1 skoXC1 (80+(skoXC1 skoXC1 (-40+(skoXC1 skoXC1 (6+(skoXC1 skoXC1 (-1/8))))))))<=48]/\[[-48<(skoXC1 skoXC1 (-80+(skoXC1 skoXC1 (40+(skoXC1 skoXC1 (-6+(skoXC1 skoXC1 (1/8))))))))]/\[[(skoXC1 skoXC1 (24+(skoXC1 skoXC1 (-10+(skoXC1 skoXC1)))))<=16]/\[[(skoXC1 skoXC1 (1/2))<=3]/\[[-3<(skoXC1 skoXC1 (-1/2))]/\[[0<skoXC1]/\[[skoXC1<7/8]/\[[(skoXC1 (-1+(skoXC1 skoXC1 (1/3))))<=0]/\[[(skoXC1 skoXC1 (-1/6))<=1]/\[[(skoXC1 skoXC1 (-1/2+(skoXC1 skoXC1 (-1/6))))<=0]/\[[(skoXC1 skoXC1)<=2]/\[[(skoXC1 skoXC1 skoXC1 skoXC1 (-2/3))<=0]/\[[(skoXC1 (-1+(skoXC1 skoXC1 (-1/6))))<=0]/\[[(skoXC1 skoXC1 (1/3))<=1]/\[[(skoXC1 skoXC1 (256+(skoXC1 skoXC1 (-160+(skoXC1 skoXC1 (32+(skoXC1 skoXC1 (-1))))))))<=128]/\[[(skoXC1 skoXC1 skoXC1 skoXC1 (-80/3+(skoXC1 skoXC1 (128/3+(skoXC1 skoXC1 (-55/3+(skoXC1 skoXC1 (5/3))))))))<=0]/\[[(skoXC1 (-1+(skoXC1 skoXC1 (1/3+(skoXC1 skoXC1 (3/20+(skoXC1 skoXC1 (5/56))))))))<=0]/\[[(skoXC1 skoXC1 (-1/6+(skoXC1 skoXC1 (-3/40+(skoXC1 skoXC1 (-5/112))))))<=1]/\[[(skoXC1 skoXC1 (-1/2+(skoXC1 skoXC1 (7/120+(skoXC1 skoXC1 (33/560+(skoXC1 skoXC1 (-5/112))))))))<=0]/\[[(skoXC1 skoXC1 skoXC1 skoXC1 (-13/60+(skoXC1 skoXC1 (-9/280+(skoXC1 skoXC1 (-5/28))))))<=0]/\[[(skoXC1 skoXC1 skoXC1 skoXC1 (-17/120+(skoXC1 skoXC1 (-27/280+(skoXC1 skoXC1 (5/224))))))<=0]/\[[(skoXC1 skoXC1 (1/3+(skoXC1 skoXC1 (3/20+(skoXC1 skoXC1 (5/56))))))<=1]/\[[(skoXC1 skoXC1 skoXC1 skoXC1 (32/15+(skoXC1 skoXC1 (-272/105+(skoXC1 skoXC1 (-1163/105+(skoXC1 skoXC1 (1753/105+(skoXC1 skoXC1 (-169/28+(skoXC1 skoXC1 (25/56))))))))))))<=0]/\[[-1<(skoXC1 skoXC1 (1/6+(skoXC1 skoXC1 (3/40+(skoXC1 skoXC1 (5/112))))))]/\[(skoXC1 (-1+(skoXC1 skoXC1 (-1/6+(skoXC1 skoXC1 (-3/40+(skoXC1 skoXC1 (-5/112))))))))<=0]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]].

% In SMTLib2 format:
(declare-fun skoXC1 () Real) (assert (and (<= (* skoXC1 (* skoXC1 (+ 256. (* skoXC1 (* skoXC1 (+ (- 160.) (* skoXC1 (* skoXC1 (+ 32. (* skoXC1 (* skoXC1 (- 1.)))))))))))) 128.) (and (<= (* skoXC1 (* skoXC1 (* skoXC1 (* skoXC1 (+ (/ (- 17.) 120.) (* skoXC1 (* skoXC1 (+ (/ (- 27.) 280.) (* skoXC1 (* skoXC1 (+ (/ (- 185.) 2688.) (* skoXC1 (* skoXC1 (+ (/ (- 329.) 6336.) (* skoXC1 (* skoXC1 (/ 63. 5632.))))))))))))))))) 0.) (and (<= (* skoXC1 (* skoXC1 (+ (/ 1. 3.) (* skoXC1 (* skoXC1 (+ (/ 3. 20.) (* skoXC1 (* skoXC1 (+ (/ 5. 56.) (* skoXC1 (* skoXC1 (+ (/ 35. 576.) (* skoXC1 (* skoXC1 (/ 63. 1408.))))))))))))))) 1.) (and (<= (* skoXC1 (* skoXC1 (* skoXC1 (* skoXC1 (+ (/ (- 13.) 60.) (* skoXC1 (* skoXC1 (+ (/ (- 9.) 280.) (* skoXC1 (* skoXC1 (+ (/ 5. 1344.) (* skoXC1 (* skoXC1 (+ (/ 161. 12672.) (* skoXC1 (* skoXC1 (/ (- 63.) 704.))))))))))))))))) 0.) (and (<= (* skoXC1 (* skoXC1 (+ (/ (- 1.) 2.) (* skoXC1 (* skoXC1 (+ (/ 7. 120.) (* skoXC1 (* skoXC1 (+ (/ 33. 560.) (* skoXC1 (* skoXC1 (+ (/ 125. 2688.) (* skoXC1 (* skoXC1 (+ (/ 931. 25344.) (* skoXC1 (* skoXC1 (/ (- 63.) 2816.)))))))))))))))))) 0.) (and (<= (* skoXC1 (* skoXC1 (+ (/ (- 1.) 6.) (* skoXC1 (* skoXC1 (+ (/ (- 3.) 40.) (* skoXC1 (* skoXC1 (+ (/ (- 5.) 112.) (* skoXC1 (* skoXC1 (+ (/ (- 35.) 1152.) (* skoXC1 (* skoXC1 (/ (- 63.) 2816.))))))))))))))) 1.) (and (<= (* skoXC1 (+ (- 1.) (* skoXC1 (* skoXC1 (+ (/ 1. 3.) (* skoXC1 (* skoXC1 (+ (/ 3. 20.) (* skoXC1 (* skoXC1 (+ (/ 5. 56.) (* skoXC1 (* skoXC1 (+ (/ 35. 576.) (* skoXC1 (* skoXC1 (/ 63. 1408.))))))))))))))))) 0.) (and (<= (* skoXC1 (+ (- 1.) (* skoXC1 (* skoXC1 (+ (/ (- 1.) 6.) (* skoXC1 (* skoXC1 (/ (- 3.) 40.)))))))) 0.) (and (> (* skoXC1 (* skoXC1 (+ (/ 1. 6.) (* skoXC1 (* skoXC1 (/ 3. 40.)))))) (- 1.)) (and (<= (* skoXC1 (* skoXC1 (* skoXC1 (* skoXC1 (+ (/ 32. 15.) (* skoXC1 (* skoXC1 (+ (/ (- 296.) 15.) (* skoXC1 (* skoXC1 (+ (/ 391. 15.) (* skoXC1 (* skoXC1 (+ (/ (- 146.) 15.) (* skoXC1 (* skoXC1 (/ 3. 4.))))))))))))))))) 0.) (and (<= (* skoXC1 (* skoXC1 (+ (/ 1. 3.) (* skoXC1 (* skoXC1 (/ 3. 20.)))))) 1.) (and (<= (* skoXC1 (* skoXC1 (* skoXC1 (* skoXC1 (+ (/ (- 17.) 120.) (* skoXC1 (* skoXC1 (/ 3. 80.)))))))) 0.) (and (<= (* skoXC1 (* skoXC1 (* skoXC1 (* skoXC1 (+ (/ (- 13.) 60.) (* skoXC1 (* skoXC1 (/ (- 3.) 10.)))))))) 0.) (and (<= (* skoXC1 (* skoXC1 (+ (/ (- 1.) 2.) (* skoXC1 (* skoXC1 (+ (/ 7. 120.) (* skoXC1 (* skoXC1 (/ (- 3.) 40.))))))))) 0.) (and (<= (* skoXC1 (* skoXC1 (+ (/ (- 1.) 6.) (* skoXC1 (* skoXC1 (/ (- 3.) 40.)))))) 1.) (and (<= (* skoXC1 (+ (- 1.) (* skoXC1 (* skoXC1 (+ (/ 1. 3.) (* skoXC1 (* skoXC1 (/ 3. 20.)))))))) 0.) (and (> (* skoXC1 skoXC1) 0.) (and (<= (* skoXC1 (* skoXC1 (+ 80. (* skoXC1 (* skoXC1 (+ (- 40.) (* skoXC1 (* skoXC1 (+ 6. (* skoXC1 (* skoXC1 (/ (- 1.) 8.)))))))))))) 48.) (and (> (* skoXC1 (* skoXC1 (+ (- 80.) (* skoXC1 (* skoXC1 (+ 40. (* skoXC1 (* skoXC1 (+ (- 6.) (* skoXC1 (* skoXC1 (/ 1. 8.)))))))))))) (- 48.)) (and (<= (* skoXC1 (* skoXC1 (+ 24. (* skoXC1 (* skoXC1 (+ (- 10.) (* skoXC1 skoXC1))))))) 16.) (and (<= (* skoXC1 (* skoXC1 (/ 1. 2.))) 3.) (and (> (* skoXC1 (* skoXC1 (/ (- 1.) 2.))) (- 3.)) (and (> skoXC1 0.) (and (> (/ 7. 8.) skoXC1) (and (<= (* skoXC1 (+ (- 1.) (* skoXC1 (* skoXC1 (/ 1. 3.))))) 0.) (and (<= (* skoXC1 (* skoXC1 (/ (- 1.) 6.))) 1.) (and (<= (* skoXC1 (* skoXC1 (+ (/ (- 1.) 2.) (* skoXC1 (* skoXC1 (/ (- 1.) 6.)))))) 0.) (and (<= (* skoXC1 skoXC1) 2.) (and (<= (* skoXC1 (* skoXC1 (* skoXC1 (* skoXC1 (/ (- 2.) 3.))))) 0.) (and (<= (* skoXC1 (+ (- 1.) (* skoXC1 (* skoXC1 (/ (- 1.) 6.))))) 0.) (and (<= (* skoXC1 (* skoXC1 (/ 1. 3.))) 1.) (and (<= (* skoXC1 (* skoXC1 (+ 256. (* skoXC1 (* skoXC1 (+ (- 160.) (* skoXC1 (* skoXC1 (+ 32. (* skoXC1 (* skoXC1 (- 1.)))))))))))) 128.) (and (<= (* skoXC1 (* skoXC1 (* skoXC1 (* skoXC1 (+ (/ (- 80.) 3.) (* skoXC1 (* skoXC1 (+ (/ 128. 3.) (* skoXC1 (* skoXC1 (+ (/ (- 55.) 3.) (* skoXC1 (* skoXC1 (/ 5. 3.)))))))))))))) 0.) (and (<= (* skoXC1 (+ (- 1.) (* skoXC1 (* skoXC1 (+ (/ 1. 3.) (* skoXC1 (* skoXC1 (+ (/ 3. 20.) (* skoXC1 (* skoXC1 (/ 5. 56.))))))))))) 0.) (and (<= (* skoXC1 (* skoXC1 (+ (/ (- 1.) 6.) (* skoXC1 (* skoXC1 (+ (/ (- 3.) 40.) (* skoXC1 (* skoXC1 (/ (- 5.) 112.))))))))) 1.) (and (<= (* skoXC1 (* skoXC1 (+ (/ (- 1.) 2.) (* skoXC1 (* skoXC1 (+ (/ 7. 120.) (* skoXC1 (* skoXC1 (+ (/ 33. 560.) (* skoXC1 (* skoXC1 (/ (- 5.) 112.)))))))))))) 0.) (and (<= (* skoXC1 (* skoXC1 (* skoXC1 (* skoXC1 (+ (/ (- 13.) 60.) (* skoXC1 (* skoXC1 (+ (/ (- 9.) 280.) (* skoXC1 (* skoXC1 (/ (- 5.) 28.))))))))))) 0.) (and (<= (* skoXC1 (* skoXC1 (* skoXC1 (* skoXC1 (+ (/ (- 17.) 120.) (* skoXC1 (* skoXC1 (+ (/ (- 27.) 280.) (* skoXC1 (* skoXC1 (/ 5. 224.))))))))))) 0.) (and (<= (* skoXC1 (* skoXC1 (+ (/ 1. 3.) (* skoXC1 (* skoXC1 (+ (/ 3. 20.) (* skoXC1 (* skoXC1 (/ 5. 56.))))))))) 1.) (and (<= (* skoXC1 (* skoXC1 (* skoXC1 (* skoXC1 (+ (/ 32. 15.) (* skoXC1 (* skoXC1 (+ (/ (- 272.) 105.) (* skoXC1 (* skoXC1 (+ (/ (- 1163.) 105.) (* skoXC1 (* skoXC1 (+ (/ 1753. 105.) (* skoXC1 (* skoXC1 (+ (/ (- 169.) 28.) (* skoXC1 (* skoXC1 (/ 25. 56.)))))))))))))))))))) 0.) (and (> (* skoXC1 (* skoXC1 (+ (/ 1. 6.) (* skoXC1 (* skoXC1 (+ (/ 3. 40.) (* skoXC1 (* skoXC1 (/ 5. 112.))))))))) (- 1.)) (<= (* skoXC1 (+ (- 1.) (* skoXC1 (* skoXC1 (+ (/ (- 1.) 6.) (* skoXC1 (* skoXC1 (+ (/ (- 3.) 40.) (* skoXC1 (* skoXC1 (/ (- 5.) 112.))))))))))) 0.)))))))))))))))))))))))))))))))))))))))))))

% In GRF format:
(sequent " MetiTarski formula " (antecedent (<= (* skoXC1 (* skoXC1 (+ 256. (* skoXC1 (* skoXC1 (+ (- 160.) (* skoXC1 (* skoXC1 (+ 32. (* skoXC1 (* skoXC1 (- 1.)))))))))))) 128.) (<= (* skoXC1 (* skoXC1 (* skoXC1 (* skoXC1 (+ (/ (- 17.) 120.) (* skoXC1 (* skoXC1 (+ (/ (- 27.) 280.) (* skoXC1 (* skoXC1 (+ (/ (- 185.) 2688.) (* skoXC1 (* skoXC1 (+ (/ (- 329.) 6336.) (* skoXC1 (* skoXC1 (/ 63. 5632.))))))))))))))))) 0.) (<= (* skoXC1 (* skoXC1 (+ (/ 1. 3.) (* skoXC1 (* skoXC1 (+ (/ 3. 20.) (* skoXC1 (* skoXC1 (+ (/ 5. 56.) (* skoXC1 (* skoXC1 (+ (/ 35. 576.) (* skoXC1 (* skoXC1 (/ 63. 1408.))))))))))))))) 1.) (<= (* skoXC1 (* skoXC1 (* skoXC1 (* skoXC1 (+ (/ (- 13.) 60.) (* skoXC1 (* skoXC1 (+ (/ (- 9.) 280.) (* skoXC1 (* skoXC1 (+ (/ 5. 1344.) (* skoXC1 (* skoXC1 (+ (/ 161. 12672.) (* skoXC1 (* skoXC1 (/ (- 63.) 704.))))))))))))))))) 0.) (<= (* skoXC1 (* skoXC1 (+ (/ (- 1.) 2.) (* skoXC1 (* skoXC1 (+ (/ 7. 120.) (* skoXC1 (* skoXC1 (+ (/ 33. 560.) (* skoXC1 (* skoXC1 (+ (/ 125. 2688.) (* skoXC1 (* skoXC1 (+ (/ 931. 25344.) (* skoXC1 (* skoXC1 (/ (- 63.) 2816.)))))))))))))))))) 0.) (<= (* skoXC1 (* skoXC1 (+ (/ (- 1.) 6.) (* skoXC1 (* skoXC1 (+ (/ (- 3.) 40.) (* skoXC1 (* skoXC1 (+ (/ (- 5.) 112.) (* skoXC1 (* skoXC1 (+ (/ (- 35.) 1152.) (* skoXC1 (* skoXC1 (/ (- 63.) 2816.))))))))))))))) 1.) (<= (* skoXC1 (+ (- 1.) (* skoXC1 (* skoXC1 (+ (/ 1. 3.) (* skoXC1 (* skoXC1 (+ (/ 3. 20.) (* skoXC1 (* skoXC1 (+ (/ 5. 56.) (* skoXC1 (* skoXC1 (+ (/ 35. 576.) (* skoXC1 (* skoXC1 (/ 63. 1408.))))))))))))))))) 0.) (<= (* skoXC1 (+ (- 1.) (* skoXC1 (* skoXC1 (+ (/ (- 1.) 6.) (* skoXC1 (* skoXC1 (/ (- 3.) 40.)))))))) 0.) (> (* skoXC1 (* skoXC1 (+ (/ 1. 6.) (* skoXC1 (* skoXC1 (/ 3. 40.)))))) (- 1.)) (<= (* skoXC1 (* skoXC1 (* skoXC1 (* skoXC1 (+ (/ 32. 15.) (* skoXC1 (* skoXC1 (+ (/ (- 296.) 15.) (* skoXC1 (* skoXC1 (+ (/ 391. 15.) (* skoXC1 (* skoXC1 (+ (/ (- 146.) 15.) (* skoXC1 (* skoXC1 (/ 3. 4.))))))))))))))))) 0.) (<= (* skoXC1 (* skoXC1 (+ (/ 1. 3.) (* skoXC1 (* skoXC1 (/ 3. 20.)))))) 1.) (<= (* skoXC1 (* skoXC1 (* skoXC1 (* skoXC1 (+ (/ (- 17.) 120.) (* skoXC1 (* skoXC1 (/ 3. 80.)))))))) 0.) (<= (* skoXC1 (* skoXC1 (* skoXC1 (* skoXC1 (+ (/ (- 13.) 60.) (* skoXC1 (* skoXC1 (/ (- 3.) 10.)))))))) 0.) (<= (* skoXC1 (* skoXC1 (+ (/ (- 1.) 2.) (* skoXC1 (* skoXC1 (+ (/ 7. 120.) (* skoXC1 (* skoXC1 (/ (- 3.) 40.))))))))) 0.) (<= (* skoXC1 (* skoXC1 (+ (/ (- 1.) 6.) (* skoXC1 (* skoXC1 (/ (- 3.) 40.)))))) 1.) (<= (* skoXC1 (+ (- 1.) (* skoXC1 (* skoXC1 (+ (/ 1. 3.) (* skoXC1 (* skoXC1 (/ 3. 20.)))))))) 0.) (> (* skoXC1 skoXC1) 0.) (<= (* skoXC1 (* skoXC1 (+ 80. (* skoXC1 (* skoXC1 (+ (- 40.) (* skoXC1 (* skoXC1 (+ 6. (* skoXC1 (* skoXC1 (/ (- 1.) 8.)))))))))))) 48.) (> (* skoXC1 (* skoXC1 (+ (- 80.) (* skoXC1 (* skoXC1 (+ 40. (* skoXC1 (* skoXC1 (+ (- 6.) (* skoXC1 (* skoXC1 (/ 1. 8.)))))))))))) (- 48.)) (<= (* skoXC1 (* skoXC1 (+ 24. (* skoXC1 (* skoXC1 (+ (- 10.) (* skoXC1 skoXC1))))))) 16.) (<= (* skoXC1 (* skoXC1 (/ 1. 2.))) 3.) (> (* skoXC1 (* skoXC1 (/ (- 1.) 2.))) (- 3.)) (> skoXC1 0.) (> (/ 7. 8.) skoXC1) (<= (* skoXC1 (+ (- 1.) (* skoXC1 (* skoXC1 (/ 1. 3.))))) 0.) (<= (* skoXC1 (* skoXC1 (/ (- 1.) 6.))) 1.) (<= (* skoXC1 (* skoXC1 (+ (/ (- 1.) 2.) (* skoXC1 (* skoXC1 (/ (- 1.) 6.)))))) 0.) (<= (* skoXC1 skoXC1) 2.) (<= (* skoXC1 (* skoXC1 (* skoXC1 (* skoXC1 (/ (- 2.) 3.))))) 0.) (<= (* skoXC1 (+ (- 1.) (* skoXC1 (* skoXC1 (/ (- 1.) 6.))))) 0.) (<= (* skoXC1 (* skoXC1 (/ 1. 3.))) 1.) (<= (* skoXC1 (* skoXC1 (+ 256. (* skoXC1 (* skoXC1 (+ (- 160.) (* skoXC1 (* skoXC1 (+ 32. (* skoXC1 (* skoXC1 (- 1.)))))))))))) 128.) (<= (* skoXC1 (* skoXC1 (* skoXC1 (* skoXC1 (+ (/ (- 80.) 3.) (* skoXC1 (* skoXC1 (+ (/ 128. 3.) (* skoXC1 (* skoXC1 (+ (/ (- 55.) 3.) (* skoXC1 (* skoXC1 (/ 5. 3.)))))))))))))) 0.) (<= (* skoXC1 (+ (- 1.) (* skoXC1 (* skoXC1 (+ (/ 1. 3.) (* skoXC1 (* skoXC1 (+ (/ 3. 20.) (* skoXC1 (* skoXC1 (/ 5. 56.))))))))))) 0.) (<= (* skoXC1 (* skoXC1 (+ (/ (- 1.) 6.) (* skoXC1 (* skoXC1 (+ (/ (- 3.) 40.) (* skoXC1 (* skoXC1 (/ (- 5.) 112.))))))))) 1.) (<= (* skoXC1 (* skoXC1 (+ (/ (- 1.) 2.) (* skoXC1 (* skoXC1 (+ (/ 7. 120.) (* skoXC1 (* skoXC1 (+ (/ 33. 560.) (* skoXC1 (* skoXC1 (/ (- 5.) 112.)))))))))))) 0.) (<= (* skoXC1 (* skoXC1 (* skoXC1 (* skoXC1 (+ (/ (- 13.) 60.) (* skoXC1 (* skoXC1 (+ (/ (- 9.) 280.) (* skoXC1 (* skoXC1 (/ (- 5.) 28.))))))))))) 0.) (<= (* skoXC1 (* skoXC1 (* skoXC1 (* skoXC1 (+ (/ (- 17.) 120.) (* skoXC1 (* skoXC1 (+ (/ (- 27.) 280.) (* skoXC1 (* skoXC1 (/ 5. 224.))))))))))) 0.) (<= (* skoXC1 (* skoXC1 (+ (/ 1. 3.) (* skoXC1 (* skoXC1 (+ (/ 3. 20.) (* skoXC1 (* skoXC1 (/ 5. 56.))))))))) 1.) (<= (* skoXC1 (* skoXC1 (* skoXC1 (* skoXC1 (+ (/ 32. 15.) (* skoXC1 (* skoXC1 (+ (/ (- 272.) 105.) (* skoXC1 (* skoXC1 (+ (/ (- 1163.) 105.) (* skoXC1 (* skoXC1 (+ (/ 1753. 105.) (* skoXC1 (* skoXC1 (+ (/ (- 169.) 28.) (* skoXC1 (* skoXC1 (/ 25. 56.)))))))))))))))))))) 0.) (> (* skoXC1 (* skoXC1 (+ (/ 1. 6.) (* skoXC1 (* skoXC1 (+ (/ 3. 40.) (* skoXC1 (* skoXC1 (/ 5. 112.))))))))) (- 1.))) (succedent (> (* skoXC1 (+ (- 1.) (* skoXC1 (* skoXC1 (+ (/ (- 1.) 6.) (* skoXC1 (* skoXC1 (+ (/ (- 3.) 40.) (* skoXC1 (* skoXC1 (/ (- 5.) 112.))))))))))) 0.)))
-----[end problem]-----

-----[begin problem]-----
% In Mathematica format:
Timing[Resolve[Exists[{skoXC1}, And[skoXC1*skoXC1*skoXC1*skoXC1*((32/15)+skoXC1*skoXC1*((-272/105)+skoXC1*skoXC1*((62/105)+skoXC1*skoXC1*((29/3465)+skoXC1*skoXC1*((-36941/5544)+skoXC1*skoXC1*((50299/5544)+skoXC1*skoXC1*((-19621/6336)+skoXC1*skoXC1*(315/1408))))))))<=0,skoXC1*skoXC1*(-256+skoXC1*skoXC1*(160+skoXC1*skoXC1*(-32+skoXC1*skoXC1)))>-128,skoXC1*skoXC1*skoXC1*skoXC1*((-17/120)+skoXC1*skoXC1*((-27/280)+skoXC1*skoXC1*((-185/2688)+skoXC1*skoXC1*((-329/6336)+skoXC1*skoXC1*(63/5632)))))<=0,skoXC1*skoXC1*((1/3)+skoXC1*skoXC1*((3/20)+skoXC1*skoXC1*((5/56)+skoXC1*skoXC1*((35/576)+skoXC1*skoXC1*(63/1408)))))<=1,skoXC1*skoXC1*skoXC1*skoXC1*((-13/60)+skoXC1*skoXC1*((-9/280)+skoXC1*skoXC1*((5/1344)+skoXC1*skoXC1*((161/12672)+skoXC1*skoXC1*(-63/704)))))<=0,skoXC1*skoXC1*((-1/2)+skoXC1*skoXC1*((7/120)+skoXC1*skoXC1*((33/560)+skoXC1*skoXC1*((125/2688)+skoXC1*skoXC1*((931/25344)+skoXC1*skoXC1*(-63/2816))))))<=0,skoXC1*skoXC1*((-1/6)+skoXC1*skoXC1*((-3/40)+skoXC1*skoXC1*((-5/112)+skoXC1*skoXC1*((-35/1152)+skoXC1*skoXC1*(-63/2816)))))<=1,skoXC1*(-1+skoXC1*skoXC1*((1/3)+skoXC1*skoXC1*((3/20)+skoXC1*skoXC1*((5/56)+skoXC1*skoXC1*((35/576)+skoXC1*skoXC1*(63/1408))))))<=0,skoXC1*(-1+skoXC1*skoXC1*((-1/6)+skoXC1*skoXC1*(-3/40)))<=0,skoXC1*skoXC1*((1/6)+skoXC1*skoXC1*(3/40))>-1,skoXC1*skoXC1*skoXC1*skoXC1*((32/15)+skoXC1*skoXC1*((-296/15)+skoXC1*skoXC1*((391/15)+skoXC1*skoXC1*((-146/15)+skoXC1*skoXC1*(3/4)))))<=0,skoXC1*skoXC1*((1/3)+skoXC1*skoXC1*(3/20))<=1,skoXC1*skoXC1*skoXC1*skoXC1*((-17/120)+skoXC1*skoXC1*(3/80))<=0,skoXC1*skoXC1*skoXC1*skoXC1*((-13/60)+skoXC1*skoXC1*(-3/10))<=0,skoXC1*skoXC1*((-1/2)+skoXC1*skoXC1*((7/120)+skoXC1*skoXC1*(-3/40)))<=0,skoXC1*skoXC1*((-1/6)+skoXC1*skoXC1*(-3/40))<=1,skoXC1*(-1+skoXC1*skoXC1*((1/3)+skoXC1*skoXC1*(3/20)))<=0,skoXC1*skoXC1>0,skoXC1*skoXC1*(80+skoXC1*skoXC1*(-40+skoXC1*skoXC1*(6+skoXC1*skoXC1*(-1/8))))<=48,skoXC1*skoXC1*(-80+skoXC1*skoXC1*(40+skoXC1*skoXC1*(-6+skoXC1*skoXC1*(1/8))))>-48,skoXC1*skoXC1*(24+skoXC1*skoXC1*(-10+skoXC1*skoXC1))<=16,skoXC1*skoXC1*(1/2)<=3,skoXC1*skoXC1*(-1/2)>-3,skoXC1>0,(7/8)>skoXC1,skoXC1*(-1+skoXC1*skoXC1*(1/3))<=0,skoXC1*skoXC1*(-1/6)<=1,skoXC1*skoXC1*((-1/2)+skoXC1*skoXC1*(-1/6))<=0,skoXC1*skoXC1<=2,skoXC1*skoXC1*skoXC1*skoXC1*(-2/3)<=0,skoXC1*(-1+skoXC1*skoXC1*(-1/6))<=0,skoXC1*skoXC1*(1/3)<=1,skoXC1*skoXC1*(256+skoXC1*skoXC1*(-160+skoXC1*skoXC1*(32+skoXC1*skoXC1*-1)))<=128,skoXC1*skoXC1*skoXC1*skoXC1*((-80/3)+skoXC1*skoXC1*((128/3)+skoXC1*skoXC1*((-55/3)+skoXC1*skoXC1*(5/3))))<=0,skoXC1*(-1+skoXC1*skoXC1*((1/3)+skoXC1*skoXC1*((3/20)+skoXC1*skoXC1*(5/56))))<=0,skoXC1*skoXC1*((-1/6)+skoXC1*skoXC1*((-3/40)+skoXC1*skoXC1*(-5/112)))<=1,skoXC1*skoXC1*((-1/2)+skoXC1*skoXC1*((7/120)+skoXC1*skoXC1*((33/560)+skoXC1*skoXC1*(-5/112))))<=0,skoXC1*skoXC1*skoXC1*skoXC1*((-13/60)+skoXC1*skoXC1*((-9/280)+skoXC1*skoXC1*(-5/28)))<=0,skoXC1*skoXC1*skoXC1*skoXC1*((-17/120)+skoXC1*skoXC1*((-27/280)+skoXC1*skoXC1*(5/224)))<=0,skoXC1*skoXC1*((1/3)+skoXC1*skoXC1*((3/20)+skoXC1*skoXC1*(5/56)))<=1,skoXC1*skoXC1*skoXC1*skoXC1*((32/15)+skoXC1*skoXC1*((-272/105)+skoXC1*skoXC1*((-1163/105)+skoXC1*skoXC1*((1753/105)+skoXC1*skoXC1*((-169/28)+skoXC1*skoXC1*(25/56))))))<=0,skoXC1*skoXC1*((1/6)+skoXC1*skoXC1*((3/40)+skoXC1*skoXC1*(5/112)))>-1,skoXC1*(-1+skoXC1*skoXC1*((-1/6)+skoXC1*skoXC1*((-3/40)+skoXC1*skoXC1*(-5/112))))<=0]], Reals]]

% In QepcadB format:
(E skoXC1) [[(skoXC1 skoXC1 skoXC1 skoXC1 (32/15+(skoXC1 skoXC1 (-272/105+(skoXC1 skoXC1 (62/105+(skoXC1 skoXC1 (29/3465+(skoXC1 skoXC1 (-36941/5544+(skoXC1 skoXC1 (50299/5544+(skoXC1 skoXC1 (-19621/6336+(skoXC1 skoXC1 (315/1408))))))))))))))))<=0]/\[[-128<(skoXC1 skoXC1 (-256+(skoXC1 skoXC1 (160+(skoXC1 skoXC1 (-32+(skoXC1 skoXC1)))))))]/\[[(skoXC1 skoXC1 skoXC1 skoXC1 (-17/120+(skoXC1 skoXC1 (-27/280+(skoXC1 skoXC1 (-185/2688+(skoXC1 skoXC1 (-329/6336+(skoXC1 skoXC1 (63/5632))))))))))<=0]/\[[(skoXC1 skoXC1 (1/3+(skoXC1 skoXC1 (3/20+(skoXC1 skoXC1 (5/56+(skoXC1 skoXC1 (35/576+(skoXC1 skoXC1 (63/1408))))))))))<=1]/\[[(skoXC1 skoXC1 skoXC1 skoXC1 (-13/60+(skoXC1 skoXC1 (-9/280+(skoXC1 skoXC1 (5/1344+(skoXC1 skoXC1 (161/12672+(skoXC1 skoXC1 (-63/704))))))))))<=0]/\[[(skoXC1 skoXC1 (-1/2+(skoXC1 skoXC1 (7/120+(skoXC1 skoXC1 (33/560+(skoXC1 skoXC1 (125/2688+(skoXC1 skoXC1 (931/25344+(skoXC1 skoXC1 (-63/2816))))))))))))<=0]/\[[(skoXC1 skoXC1 (-1/6+(skoXC1 skoXC1 (-3/40+(skoXC1 skoXC1 (-5/112+(skoXC1 skoXC1 (-35/1152+(skoXC1 skoXC1 (-63/2816))))))))))<=1]/\[[(skoXC1 (-1+(skoXC1 skoXC1 (1/3+(skoXC1 skoXC1 (3/20+(skoXC1 skoXC1 (5/56+(skoXC1 skoXC1 (35/576+(skoXC1 skoXC1 (63/1408))))))))))))<=0]/\[[(skoXC1 (-1+(skoXC1 skoXC1 (-1/6+(skoXC1 skoXC1 (-3/40))))))<=0]/\[[-1<(skoXC1 skoXC1 (1/6+(skoXC1 skoXC1 (3/40))))]/\[[(skoXC1 skoXC1 skoXC1 skoXC1 (32/15+(skoXC1 skoXC1 (-296/15+(skoXC1 skoXC1 (391/15+(skoXC1 skoXC1 (-146/15+(skoXC1 skoXC1 (3/4))))))))))<=0]/\[[(skoXC1 skoXC1 (1/3+(skoXC1 skoXC1 (3/20))))<=1]/\[[(skoXC1 skoXC1 skoXC1 skoXC1 (-17/120+(skoXC1 skoXC1 (3/80))))<=0]/\[[(skoXC1 skoXC1 skoXC1 skoXC1 (-13/60+(skoXC1 skoXC1 (-3/10))))<=0]/\[[(skoXC1 skoXC1 (-1/2+(skoXC1 skoXC1 (7/120+(skoXC1 skoXC1 (-3/40))))))<=0]/\[[(skoXC1 skoXC1 (-1/6+(skoXC1 skoXC1 (-3/40))))<=1]/\[[(skoXC1 (-1+(skoXC1 skoXC1 (1/3+(skoXC1 skoXC1 (3/20))))))<=0]/\[[0<(skoXC1 skoXC1)]/\[[(skoXC1 skoXC1 (80+(skoXC1 skoXC1 (-40+(skoXC1 skoXC1 (6+(skoXC1 skoXC1 (-1/8))))))))<=48]/\[[-48<(skoXC1 skoXC1 (-80+(skoXC1 skoXC1 (40+(skoXC1 skoXC1 (-6+(skoXC1 skoXC1 (1/8))))))))]/\[[(skoXC1 skoXC1 (24+(skoXC1 skoXC1 (-10+(skoXC1 skoXC1)))))<=16]/\[[(skoXC1 skoXC1 (1/2))<=3]/\[[-3<(skoXC1 skoXC1 (-1/2))]/\[[0<skoXC1]/\[[skoXC1<7/8]/\[[(skoXC1 (-1+(skoXC1 skoXC1 (1/3))))<=0]/\[[(skoXC1 skoXC1 (-1/6))<=1]/\[[(skoXC1 skoXC1 (-1/2+(skoXC1 skoXC1 (-1/6))))<=0]/\[[(skoXC1 skoXC1)<=2]/\[[(skoXC1 skoXC1 skoXC1 skoXC1 (-2/3))<=0]/\[[(skoXC1 (-1+(skoXC1 skoXC1 (-1/6))))<=0]/\[[(skoXC1 skoXC1 (1/3))<=1]/\[[(skoXC1 skoXC1 (256+(skoXC1 skoXC1 (-160+(skoXC1 skoXC1 (32+(skoXC1 skoXC1 (-1))))))))<=128]/\[[(skoXC1 skoXC1 skoXC1 skoXC1 (-80/3+(skoXC1 skoXC1 (128/3+(skoXC1 skoXC1 (-55/3+(skoXC1 skoXC1 (5/3))))))))<=0]/\[[(skoXC1 (-1+(skoXC1 skoXC1 (1/3+(skoXC1 skoXC1 (3/20+(skoXC1 skoXC1 (5/56))))))))<=0]/\[[(skoXC1 skoXC1 (-1/6+(skoXC1 skoXC1 (-3/40+(skoXC1 skoXC1 (-5/112))))))<=1]/\[[(skoXC1 skoXC1 (-1/2+(skoXC1 skoXC1 (7/120+(skoXC1 skoXC1 (33/560+(skoXC1 skoXC1 (-5/112))))))))<=0]/\[[(skoXC1 skoXC1 skoXC1 skoXC1 (-13/60+(skoXC1 skoXC1 (-9/280+(skoXC1 skoXC1 (-5/28))))))<=0]/\[[(skoXC1 skoXC1 skoXC1 skoXC1 (-17/120+(skoXC1 skoXC1 (-27/280+(skoXC1 skoXC1 (5/224))))))<=0]/\[[(skoXC1 skoXC1 (1/3+(skoXC1 skoXC1 (3/20+(skoXC1 skoXC1 (5/56))))))<=1]/\[[(skoXC1 skoXC1 skoXC1 skoXC1 (32/15+(skoXC1 skoXC1 (-272/105+(skoXC1 skoXC1 (-1163/105+(skoXC1 skoXC1 (1753/105+(skoXC1 skoXC1 (-169/28+(skoXC1 skoXC1 (25/56))))))))))))<=0]/\[[-1<(skoXC1 skoXC1 (1/6+(skoXC1 skoXC1 (3/40+(skoXC1 skoXC1 (5/112))))))]/\[(skoXC1 (-1+(skoXC1 skoXC1 (-1/6+(skoXC1 skoXC1 (-3/40+(skoXC1 skoXC1 (-5/112))))))))<=0]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]].

% In SMTLib2 format:
(declare-fun skoXC1 () Real) (assert (and (<= (* skoXC1 (* skoXC1 (* skoXC1 (* skoXC1 (+ (/ 32. 15.) (* skoXC1 (* skoXC1 (+ (/ (- 272.) 105.) (* skoXC1 (* skoXC1 (+ (/ 62. 105.) (* skoXC1 (* skoXC1 (+ (/ 29. 3465.) (* skoXC1 (* skoXC1 (+ (/ (- 36941.) 5544.) (* skoXC1 (* skoXC1 (+ (/ 50299. 5544.) (* skoXC1 (* skoXC1 (+ (/ (- 19621.) 6336.) (* skoXC1 (* skoXC1 (/ 315. 1408.)))))))))))))))))))))))))) 0.) (and (> (* skoXC1 (* skoXC1 (+ (- 256.) (* skoXC1 (* skoXC1 (+ 160. (* skoXC1 (* skoXC1 (+ (- 32.) (* skoXC1 skoXC1)))))))))) (- 128.)) (and (<= (* skoXC1 (* skoXC1 (* skoXC1 (* skoXC1 (+ (/ (- 17.) 120.) (* skoXC1 (* skoXC1 (+ (/ (- 27.) 280.) (* skoXC1 (* skoXC1 (+ (/ (- 185.) 2688.) (* skoXC1 (* skoXC1 (+ (/ (- 329.) 6336.) (* skoXC1 (* skoXC1 (/ 63. 5632.))))))))))))))))) 0.) (and (<= (* skoXC1 (* skoXC1 (+ (/ 1. 3.) (* skoXC1 (* skoXC1 (+ (/ 3. 20.) (* skoXC1 (* skoXC1 (+ (/ 5. 56.) (* skoXC1 (* skoXC1 (+ (/ 35. 576.) (* skoXC1 (* skoXC1 (/ 63. 1408.))))))))))))))) 1.) (and (<= (* skoXC1 (* skoXC1 (* skoXC1 (* skoXC1 (+ (/ (- 13.) 60.) (* skoXC1 (* skoXC1 (+ (/ (- 9.) 280.) (* skoXC1 (* skoXC1 (+ (/ 5. 1344.) (* skoXC1 (* skoXC1 (+ (/ 161. 12672.) (* skoXC1 (* skoXC1 (/ (- 63.) 704.))))))))))))))))) 0.) (and (<= (* skoXC1 (* skoXC1 (+ (/ (- 1.) 2.) (* skoXC1 (* skoXC1 (+ (/ 7. 120.) (* skoXC1 (* skoXC1 (+ (/ 33. 560.) (* skoXC1 (* skoXC1 (+ (/ 125. 2688.) (* skoXC1 (* skoXC1 (+ (/ 931. 25344.) (* skoXC1 (* skoXC1 (/ (- 63.) 2816.)))))))))))))))))) 0.) (and (<= (* skoXC1 (* skoXC1 (+ (/ (- 1.) 6.) (* skoXC1 (* skoXC1 (+ (/ (- 3.) 40.) (* skoXC1 (* skoXC1 (+ (/ (- 5.) 112.) (* skoXC1 (* skoXC1 (+ (/ (- 35.) 1152.) (* skoXC1 (* skoXC1 (/ (- 63.) 2816.))))))))))))))) 1.) (and (<= (* skoXC1 (+ (- 1.) (* skoXC1 (* skoXC1 (+ (/ 1. 3.) (* skoXC1 (* skoXC1 (+ (/ 3. 20.) (* skoXC1 (* skoXC1 (+ (/ 5. 56.) (* skoXC1 (* skoXC1 (+ (/ 35. 576.) (* skoXC1 (* skoXC1 (/ 63. 1408.))))))))))))))))) 0.) (and (<= (* skoXC1 (+ (- 1.) (* skoXC1 (* skoXC1 (+ (/ (- 1.) 6.) (* skoXC1 (* skoXC1 (/ (- 3.) 40.)))))))) 0.) (and (> (* skoXC1 (* skoXC1 (+ (/ 1. 6.) (* skoXC1 (* skoXC1 (/ 3. 40.)))))) (- 1.)) (and (<= (* skoXC1 (* skoXC1 (* skoXC1 (* skoXC1 (+ (/ 32. 15.) (* skoXC1 (* skoXC1 (+ (/ (- 296.) 15.) (* skoXC1 (* skoXC1 (+ (/ 391. 15.) (* skoXC1 (* skoXC1 (+ (/ (- 146.) 15.) (* skoXC1 (* skoXC1 (/ 3. 4.))))))))))))))))) 0.) (and (<= (* skoXC1 (* skoXC1 (+ (/ 1. 3.) (* skoXC1 (* skoXC1 (/ 3. 20.)))))) 1.) (and (<= (* skoXC1 (* skoXC1 (* skoXC1 (* skoXC1 (+ (/ (- 17.) 120.) (* skoXC1 (* skoXC1 (/ 3. 80.)))))))) 0.) (and (<= (* skoXC1 (* skoXC1 (* skoXC1 (* skoXC1 (+ (/ (- 13.) 60.) (* skoXC1 (* skoXC1 (/ (- 3.) 10.)))))))) 0.) (and (<= (* skoXC1 (* skoXC1 (+ (/ (- 1.) 2.) (* skoXC1 (* skoXC1 (+ (/ 7. 120.) (* skoXC1 (* skoXC1 (/ (- 3.) 40.))))))))) 0.) (and (<= (* skoXC1 (* skoXC1 (+ (/ (- 1.) 6.) (* skoXC1 (* skoXC1 (/ (- 3.) 40.)))))) 1.) (and (<= (* skoXC1 (+ (- 1.) (* skoXC1 (* skoXC1 (+ (/ 1. 3.) (* skoXC1 (* skoXC1 (/ 3. 20.)))))))) 0.) (and (> (* skoXC1 skoXC1) 0.) (and (<= (* skoXC1 (* skoXC1 (+ 80. (* skoXC1 (* skoXC1 (+ (- 40.) (* skoXC1 (* skoXC1 (+ 6. (* skoXC1 (* skoXC1 (/ (- 1.) 8.)))))))))))) 48.) (and (> (* skoXC1 (* skoXC1 (+ (- 80.) (* skoXC1 (* skoXC1 (+ 40. (* skoXC1 (* skoXC1 (+ (- 6.) (* skoXC1 (* skoXC1 (/ 1. 8.)))))))))))) (- 48.)) (and (<= (* skoXC1 (* skoXC1 (+ 24. (* skoXC1 (* skoXC1 (+ (- 10.) (* skoXC1 skoXC1))))))) 16.) (and (<= (* skoXC1 (* skoXC1 (/ 1. 2.))) 3.) (and (> (* skoXC1 (* skoXC1 (/ (- 1.) 2.))) (- 3.)) (and (> skoXC1 0.) (and (> (/ 7. 8.) skoXC1) (and (<= (* skoXC1 (+ (- 1.) (* skoXC1 (* skoXC1 (/ 1. 3.))))) 0.) (and (<= (* skoXC1 (* skoXC1 (/ (- 1.) 6.))) 1.) (and (<= (* skoXC1 (* skoXC1 (+ (/ (- 1.) 2.) (* skoXC1 (* skoXC1 (/ (- 1.) 6.)))))) 0.) (and (<= (* skoXC1 skoXC1) 2.) (and (<= (* skoXC1 (* skoXC1 (* skoXC1 (* skoXC1 (/ (- 2.) 3.))))) 0.) (and (<= (* skoXC1 (+ (- 1.) (* skoXC1 (* skoXC1 (/ (- 1.) 6.))))) 0.) (and (<= (* skoXC1 (* skoXC1 (/ 1. 3.))) 1.) (and (<= (* skoXC1 (* skoXC1 (+ 256. (* skoXC1 (* skoXC1 (+ (- 160.) (* skoXC1 (* skoXC1 (+ 32. (* skoXC1 (* skoXC1 (- 1.)))))))))))) 128.) (and (<= (* skoXC1 (* skoXC1 (* skoXC1 (* skoXC1 (+ (/ (- 80.) 3.) (* skoXC1 (* skoXC1 (+ (/ 128. 3.) (* skoXC1 (* skoXC1 (+ (/ (- 55.) 3.) (* skoXC1 (* skoXC1 (/ 5. 3.)))))))))))))) 0.) (and (<= (* skoXC1 (+ (- 1.) (* skoXC1 (* skoXC1 (+ (/ 1. 3.) (* skoXC1 (* skoXC1 (+ (/ 3. 20.) (* skoXC1 (* skoXC1 (/ 5. 56.))))))))))) 0.) (and (<= (* skoXC1 (* skoXC1 (+ (/ (- 1.) 6.) (* skoXC1 (* skoXC1 (+ (/ (- 3.) 40.) (* skoXC1 (* skoXC1 (/ (- 5.) 112.))))))))) 1.) (and (<= (* skoXC1 (* skoXC1 (+ (/ (- 1.) 2.) (* skoXC1 (* skoXC1 (+ (/ 7. 120.) (* skoXC1 (* skoXC1 (+ (/ 33. 560.) (* skoXC1 (* skoXC1 (/ (- 5.) 112.)))))))))))) 0.) (and (<= (* skoXC1 (* skoXC1 (* skoXC1 (* skoXC1 (+ (/ (- 13.) 60.) (* skoXC1 (* skoXC1 (+ (/ (- 9.) 280.) (* skoXC1 (* skoXC1 (/ (- 5.) 28.))))))))))) 0.) (and (<= (* skoXC1 (* skoXC1 (* skoXC1 (* skoXC1 (+ (/ (- 17.) 120.) (* skoXC1 (* skoXC1 (+ (/ (- 27.) 280.) (* skoXC1 (* skoXC1 (/ 5. 224.))))))))))) 0.) (and (<= (* skoXC1 (* skoXC1 (+ (/ 1. 3.) (* skoXC1 (* skoXC1 (+ (/ 3. 20.) (* skoXC1 (* skoXC1 (/ 5. 56.))))))))) 1.) (and (<= (* skoXC1 (* skoXC1 (* skoXC1 (* skoXC1 (+ (/ 32. 15.) (* skoXC1 (* skoXC1 (+ (/ (- 272.) 105.) (* skoXC1 (* skoXC1 (+ (/ (- 1163.) 105.) (* skoXC1 (* skoXC1 (+ (/ 1753. 105.) (* skoXC1 (* skoXC1 (+ (/ (- 169.) 28.) (* skoXC1 (* skoXC1 (/ 25. 56.)))))))))))))))))))) 0.) (and (> (* skoXC1 (* skoXC1 (+ (/ 1. 6.) (* skoXC1 (* skoXC1 (+ (/ 3. 40.) (* skoXC1 (* skoXC1 (/ 5. 112.))))))))) (- 1.)) (<= (* skoXC1 (+ (- 1.) (* skoXC1 (* skoXC1 (+ (/ (- 1.) 6.) (* skoXC1 (* skoXC1 (+ (/ (- 3.) 40.) (* skoXC1 (* skoXC1 (/ (- 5.) 112.))))))))))) 0.))))))))))))))))))))))))))))))))))))))))))))

% In GRF format:
(sequent " MetiTarski formula " (antecedent (<= (* skoXC1 (* skoXC1 (* skoXC1 (* skoXC1 (+ (/ 32. 15.) (* skoXC1 (* skoXC1 (+ (/ (- 272.) 105.) (* skoXC1 (* skoXC1 (+ (/ 62. 105.) (* skoXC1 (* skoXC1 (+ (/ 29. 3465.) (* skoXC1 (* skoXC1 (+ (/ (- 36941.) 5544.) (* skoXC1 (* skoXC1 (+ (/ 50299. 5544.) (* skoXC1 (* skoXC1 (+ (/ (- 19621.) 6336.) (* skoXC1 (* skoXC1 (/ 315. 1408.)))))))))))))))))))))))))) 0.) (> (* skoXC1 (* skoXC1 (+ (- 256.) (* skoXC1 (* skoXC1 (+ 160. (* skoXC1 (* skoXC1 (+ (- 32.) (* skoXC1 skoXC1)))))))))) (- 128.)) (<= (* skoXC1 (* skoXC1 (* skoXC1 (* skoXC1 (+ (/ (- 17.) 120.) (* skoXC1 (* skoXC1 (+ (/ (- 27.) 280.) (* skoXC1 (* skoXC1 (+ (/ (- 185.) 2688.) (* skoXC1 (* skoXC1 (+ (/ (- 329.) 6336.) (* skoXC1 (* skoXC1 (/ 63. 5632.))))))))))))))))) 0.) (<= (* skoXC1 (* skoXC1 (+ (/ 1. 3.) (* skoXC1 (* skoXC1 (+ (/ 3. 20.) (* skoXC1 (* skoXC1 (+ (/ 5. 56.) (* skoXC1 (* skoXC1 (+ (/ 35. 576.) (* skoXC1 (* skoXC1 (/ 63. 1408.))))))))))))))) 1.) (<= (* skoXC1 (* skoXC1 (* skoXC1 (* skoXC1 (+ (/ (- 13.) 60.) (* skoXC1 (* skoXC1 (+ (/ (- 9.) 280.) (* skoXC1 (* skoXC1 (+ (/ 5. 1344.) (* skoXC1 (* skoXC1 (+ (/ 161. 12672.) (* skoXC1 (* skoXC1 (/ (- 63.) 704.))))))))))))))))) 0.) (<= (* skoXC1 (* skoXC1 (+ (/ (- 1.) 2.) (* skoXC1 (* skoXC1 (+ (/ 7. 120.) (* skoXC1 (* skoXC1 (+ (/ 33. 560.) (* skoXC1 (* skoXC1 (+ (/ 125. 2688.) (* skoXC1 (* skoXC1 (+ (/ 931. 25344.) (* skoXC1 (* skoXC1 (/ (- 63.) 2816.)))))))))))))))))) 0.) (<= (* skoXC1 (* skoXC1 (+ (/ (- 1.) 6.) (* skoXC1 (* skoXC1 (+ (/ (- 3.) 40.) (* skoXC1 (* skoXC1 (+ (/ (- 5.) 112.) (* skoXC1 (* skoXC1 (+ (/ (- 35.) 1152.) (* skoXC1 (* skoXC1 (/ (- 63.) 2816.))))))))))))))) 1.) (<= (* skoXC1 (+ (- 1.) (* skoXC1 (* skoXC1 (+ (/ 1. 3.) (* skoXC1 (* skoXC1 (+ (/ 3. 20.) (* skoXC1 (* skoXC1 (+ (/ 5. 56.) (* skoXC1 (* skoXC1 (+ (/ 35. 576.) (* skoXC1 (* skoXC1 (/ 63. 1408.))))))))))))))))) 0.) (<= (* skoXC1 (+ (- 1.) (* skoXC1 (* skoXC1 (+ (/ (- 1.) 6.) (* skoXC1 (* skoXC1 (/ (- 3.) 40.)))))))) 0.) (> (* skoXC1 (* skoXC1 (+ (/ 1. 6.) (* skoXC1 (* skoXC1 (/ 3. 40.)))))) (- 1.)) (<= (* skoXC1 (* skoXC1 (* skoXC1 (* skoXC1 (+ (/ 32. 15.) (* skoXC1 (* skoXC1 (+ (/ (- 296.) 15.) (* skoXC1 (* skoXC1 (+ (/ 391. 15.) (* skoXC1 (* skoXC1 (+ (/ (- 146.) 15.) (* skoXC1 (* skoXC1 (/ 3. 4.))))))))))))))))) 0.) (<= (* skoXC1 (* skoXC1 (+ (/ 1. 3.) (* skoXC1 (* skoXC1 (/ 3. 20.)))))) 1.) (<= (* skoXC1 (* skoXC1 (* skoXC1 (* skoXC1 (+ (/ (- 17.) 120.) (* skoXC1 (* skoXC1 (/ 3. 80.)))))))) 0.) (<= (* skoXC1 (* skoXC1 (* skoXC1 (* skoXC1 (+ (/ (- 13.) 60.) (* skoXC1 (* skoXC1 (/ (- 3.) 10.)))))))) 0.) (<= (* skoXC1 (* skoXC1 (+ (/ (- 1.) 2.) (* skoXC1 (* skoXC1 (+ (/ 7. 120.) (* skoXC1 (* skoXC1 (/ (- 3.) 40.))))))))) 0.) (<= (* skoXC1 (* skoXC1 (+ (/ (- 1.) 6.) (* skoXC1 (* skoXC1 (/ (- 3.) 40.)))))) 1.) (<= (* skoXC1 (+ (- 1.) (* skoXC1 (* skoXC1 (+ (/ 1. 3.) (* skoXC1 (* skoXC1 (/ 3. 20.)))))))) 0.) (> (* skoXC1 skoXC1) 0.) (<= (* skoXC1 (* skoXC1 (+ 80. (* skoXC1 (* skoXC1 (+ (- 40.) (* skoXC1 (* skoXC1 (+ 6. (* skoXC1 (* skoXC1 (/ (- 1.) 8.)))))))))))) 48.) (> (* skoXC1 (* skoXC1 (+ (- 80.) (* skoXC1 (* skoXC1 (+ 40. (* skoXC1 (* skoXC1 (+ (- 6.) (* skoXC1 (* skoXC1 (/ 1. 8.)))))))))))) (- 48.)) (<= (* skoXC1 (* skoXC1 (+ 24. (* skoXC1 (* skoXC1 (+ (- 10.) (* skoXC1 skoXC1))))))) 16.) (<= (* skoXC1 (* skoXC1 (/ 1. 2.))) 3.) (> (* skoXC1 (* skoXC1 (/ (- 1.) 2.))) (- 3.)) (> skoXC1 0.) (> (/ 7. 8.) skoXC1) (<= (* skoXC1 (+ (- 1.) (* skoXC1 (* skoXC1 (/ 1. 3.))))) 0.) (<= (* skoXC1 (* skoXC1 (/ (- 1.) 6.))) 1.) (<= (* skoXC1 (* skoXC1 (+ (/ (- 1.) 2.) (* skoXC1 (* skoXC1 (/ (- 1.) 6.)))))) 0.) (<= (* skoXC1 skoXC1) 2.) (<= (* skoXC1 (* skoXC1 (* skoXC1 (* skoXC1 (/ (- 2.) 3.))))) 0.) (<= (* skoXC1 (+ (- 1.) (* skoXC1 (* skoXC1 (/ (- 1.) 6.))))) 0.) (<= (* skoXC1 (* skoXC1 (/ 1. 3.))) 1.) (<= (* skoXC1 (* skoXC1 (+ 256. (* skoXC1 (* skoXC1 (+ (- 160.) (* skoXC1 (* skoXC1 (+ 32. (* skoXC1 (* skoXC1 (- 1.)))))))))))) 128.) (<= (* skoXC1 (* skoXC1 (* skoXC1 (* skoXC1 (+ (/ (- 80.) 3.) (* skoXC1 (* skoXC1 (+ (/ 128. 3.) (* skoXC1 (* skoXC1 (+ (/ (- 55.) 3.) (* skoXC1 (* skoXC1 (/ 5. 3.)))))))))))))) 0.) (<= (* skoXC1 (+ (- 1.) (* skoXC1 (* skoXC1 (+ (/ 1. 3.) (* skoXC1 (* skoXC1 (+ (/ 3. 20.) (* skoXC1 (* skoXC1 (/ 5. 56.))))))))))) 0.) (<= (* skoXC1 (* skoXC1 (+ (/ (- 1.) 6.) (* skoXC1 (* skoXC1 (+ (/ (- 3.) 40.) (* skoXC1 (* skoXC1 (/ (- 5.) 112.))))))))) 1.) (<= (* skoXC1 (* skoXC1 (+ (/ (- 1.) 2.) (* skoXC1 (* skoXC1 (+ (/ 7. 120.) (* skoXC1 (* skoXC1 (+ (/ 33. 560.) (* skoXC1 (* skoXC1 (/ (- 5.) 112.)))))))))))) 0.) (<= (* skoXC1 (* skoXC1 (* skoXC1 (* skoXC1 (+ (/ (- 13.) 60.) (* skoXC1 (* skoXC1 (+ (/ (- 9.) 280.) (* skoXC1 (* skoXC1 (/ (- 5.) 28.))))))))))) 0.) (<= (* skoXC1 (* skoXC1 (* skoXC1 (* skoXC1 (+ (/ (- 17.) 120.) (* skoXC1 (* skoXC1 (+ (/ (- 27.) 280.) (* skoXC1 (* skoXC1 (/ 5. 224.))))))))))) 0.) (<= (* skoXC1 (* skoXC1 (+ (/ 1. 3.) (* skoXC1 (* skoXC1 (+ (/ 3. 20.) (* skoXC1 (* skoXC1 (/ 5. 56.))))))))) 1.) (<= (* skoXC1 (* skoXC1 (* skoXC1 (* skoXC1 (+ (/ 32. 15.) (* skoXC1 (* skoXC1 (+ (/ (- 272.) 105.) (* skoXC1 (* skoXC1 (+ (/ (- 1163.) 105.) (* skoXC1 (* skoXC1 (+ (/ 1753. 105.) (* skoXC1 (* skoXC1 (+ (/ (- 169.) 28.) (* skoXC1 (* skoXC1 (/ 25. 56.)))))))))))))))))))) 0.) (> (* skoXC1 (* skoXC1 (+ (/ 1. 6.) (* skoXC1 (* skoXC1 (+ (/ 3. 40.) (* skoXC1 (* skoXC1 (/ 5. 112.))))))))) (- 1.))) (succedent (> (* skoXC1 (+ (- 1.) (* skoXC1 (* skoXC1 (+ (/ (- 1.) 6.) (* skoXC1 (* skoXC1 (+ (/ (- 3.) 40.) (* skoXC1 (* skoXC1 (/ (- 5.) 112.))))))))))) 0.)))
-----[end problem]-----

