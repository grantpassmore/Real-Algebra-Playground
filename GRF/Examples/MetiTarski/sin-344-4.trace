-----[begin problem]-----
% In Mathematica format:
Timing[Resolve[Exists[{skoZC1,skoYC1,skoXC1,skoWC1}, And[skoWC1*-1+skoXC1*-1+skoYC1*-1<=skoZC1,skoZC1*(-1+skoWC1*skoWC1*(1/2)+skoXC1*(skoWC1+skoXC1*(1/2))+skoYC1*(skoWC1+skoXC1+skoYC1*(1/2))+skoZC1*(skoWC1*(1/2)+skoXC1*(1/2)+skoYC1*(1/2)+skoZC1*(1/6)))>skoWC1*(1+skoWC1*skoWC1*(-1/6))+skoXC1*(1+skoWC1*skoWC1*(-1/2)+skoXC1*(skoWC1*(-1/2)+skoXC1*(-1/6)))+skoYC1*(1+skoWC1*skoWC1*(-1/2)+skoXC1*(skoWC1*-1+skoXC1*(-1/2))+skoYC1*(skoWC1*(-1/2)+skoXC1*(-1/2)+skoYC1*(-1/6))),skoZC1>skoWC1*-1+skoXC1*-1+skoYC1*-1,3>skoWC1,3>skoXC1,3>skoYC1,3>skoZC1,skoWC1>(1/10),skoXC1>(1/10),skoYC1>(1/10),skoZC1>(1/10)]], Reals]]

% In QepcadB format:
(E skoZC1) (E skoYC1) (E skoXC1) (E skoWC1) [[(((skoWC1 (-1))+(skoXC1 (-1)))+(skoYC1 (-1)))<=skoZC1]/\[[(((skoWC1 (1+(skoWC1 skoWC1 (-1/6))))+(skoXC1 ((1+(skoWC1 skoWC1 (-1/2)))+(skoXC1 ((skoWC1 (-1/2))+(skoXC1 (-1/6)))))))+(skoYC1 (((1+(skoWC1 skoWC1 (-1/2)))+(skoXC1 ((skoWC1 (-1))+(skoXC1 (-1/2)))))+(skoYC1 (((skoWC1 (-1/2))+(skoXC1 (-1/2)))+(skoYC1 (-1/6)))))))<(skoZC1 ((((-1+(skoWC1 skoWC1 (1/2)))+(skoXC1 (skoWC1+(skoXC1 (1/2)))))+(skoYC1 ((skoWC1+skoXC1)+(skoYC1 (1/2)))))+(skoZC1 ((((skoWC1 (1/2))+(skoXC1 (1/2)))+(skoYC1 (1/2)))+(skoZC1 (1/6))))))]/\[[(((skoWC1 (-1))+(skoXC1 (-1)))+(skoYC1 (-1)))<skoZC1]/\[[skoWC1<3]/\[[skoXC1<3]/\[[skoYC1<3]/\[[skoZC1<3]/\[[1/10<skoWC1]/\[[1/10<skoXC1]/\[[1/10<skoYC1]/\[1/10<skoZC1]]]]]]]]]]].

% In SMTLib2 format:
(declare-fun skoZC1 () Real) (declare-fun skoYC1 () Real) (declare-fun skoXC1 () Real) (declare-fun skoWC1 () Real) (assert (and (<= (+ (+ (* skoWC1 (- 1.)) (* skoXC1 (- 1.))) (* skoYC1 (- 1.))) skoZC1) (and (> (* skoZC1 (+ (+ (+ (+ (- 1.) (* skoWC1 (* skoWC1 (/ 1. 2.)))) (* skoXC1 (+ skoWC1 (* skoXC1 (/ 1. 2.))))) (* skoYC1 (+ (+ skoWC1 skoXC1) (* skoYC1 (/ 1. 2.))))) (* skoZC1 (+ (+ (+ (* skoWC1 (/ 1. 2.)) (* skoXC1 (/ 1. 2.))) (* skoYC1 (/ 1. 2.))) (* skoZC1 (/ 1. 6.)))))) (+ (+ (* skoWC1 (+ 1. (* skoWC1 (* skoWC1 (/ (- 1.) 6.))))) (* skoXC1 (+ (+ 1. (* skoWC1 (* skoWC1 (/ (- 1.) 2.)))) (* skoXC1 (+ (* skoWC1 (/ (- 1.) 2.)) (* skoXC1 (/ (- 1.) 6.))))))) (* skoYC1 (+ (+ (+ 1. (* skoWC1 (* skoWC1 (/ (- 1.) 2.)))) (* skoXC1 (+ (* skoWC1 (- 1.)) (* skoXC1 (/ (- 1.) 2.))))) (* skoYC1 (+ (+ (* skoWC1 (/ (- 1.) 2.)) (* skoXC1 (/ (- 1.) 2.))) (* skoYC1 (/ (- 1.) 6.)))))))) (and (> skoZC1 (+ (+ (* skoWC1 (- 1.)) (* skoXC1 (- 1.))) (* skoYC1 (- 1.)))) (and (> 3. skoWC1) (and (> 3. skoXC1) (and (> 3. skoYC1) (and (> 3. skoZC1) (and (> skoWC1 (/ 1. 10.)) (and (> skoXC1 (/ 1. 10.)) (and (> skoYC1 (/ 1. 10.)) (> skoZC1 (/ 1. 10.)))))))))))))

% In GRF format:
(sequent " MetiTarski formula " (antecedent (<= (+ (+ (* skoWC1 (- 1.)) (* skoXC1 (- 1.))) (* skoYC1 (- 1.))) skoZC1) (> (* skoZC1 (+ (+ (+ (+ (- 1.) (* skoWC1 (* skoWC1 (/ 1. 2.)))) (* skoXC1 (+ skoWC1 (* skoXC1 (/ 1. 2.))))) (* skoYC1 (+ (+ skoWC1 skoXC1) (* skoYC1 (/ 1. 2.))))) (* skoZC1 (+ (+ (+ (* skoWC1 (/ 1. 2.)) (* skoXC1 (/ 1. 2.))) (* skoYC1 (/ 1. 2.))) (* skoZC1 (/ 1. 6.)))))) (+ (+ (* skoWC1 (+ 1. (* skoWC1 (* skoWC1 (/ (- 1.) 6.))))) (* skoXC1 (+ (+ 1. (* skoWC1 (* skoWC1 (/ (- 1.) 2.)))) (* skoXC1 (+ (* skoWC1 (/ (- 1.) 2.)) (* skoXC1 (/ (- 1.) 6.))))))) (* skoYC1 (+ (+ (+ 1. (* skoWC1 (* skoWC1 (/ (- 1.) 2.)))) (* skoXC1 (+ (* skoWC1 (- 1.)) (* skoXC1 (/ (- 1.) 2.))))) (* skoYC1 (+ (+ (* skoWC1 (/ (- 1.) 2.)) (* skoXC1 (/ (- 1.) 2.))) (* skoYC1 (/ (- 1.) 6.)))))))) (> skoZC1 (+ (+ (* skoWC1 (- 1.)) (* skoXC1 (- 1.))) (* skoYC1 (- 1.)))) (> 3. skoWC1) (> 3. skoXC1) (> 3. skoYC1) (> 3. skoZC1) (> skoWC1 (/ 1. 10.)) (> skoXC1 (/ 1. 10.)) (> skoYC1 (/ 1. 10.))) (succedent (<= skoZC1 (/ 1. 10.))))
-----[end problem]-----

-----[begin problem]-----
% In Mathematica format:
Timing[Resolve[Exists[{skoWC1,skoYC1,skoXC1,skoZC1}, And[0<=skoWC1,skoZC1*(-2+skoWC1*skoWC1*(1/2)+skoXC1*(skoWC1+skoXC1*(1/2))+skoYC1*(skoWC1+skoXC1+skoYC1*(1/2))+skoZC1*(skoWC1*(1/2)+skoXC1*(1/2)+skoYC1*(1/2)+skoZC1*(1/3)))>skoWC1*(2+skoWC1*skoWC1*(-1/3))+skoXC1*(2+skoWC1*skoWC1*(-1/2)+skoXC1*(skoWC1*(-1/2)+skoXC1*(-1/3)))+skoYC1*(2+skoWC1*skoWC1*(-1/2)+skoXC1*(skoWC1*-1+skoXC1*(-1/2))+skoYC1*(skoWC1*(-1/2)+skoXC1*(-1/2)+skoYC1*(-1/3))),skoZC1>skoWC1*-1+skoXC1*-1+skoYC1*-1,3>skoWC1,3>skoXC1,3>skoYC1,3>skoZC1,skoWC1>(1/10),skoXC1>(1/10),skoYC1>(1/10),skoZC1>(1/10)]], Reals]]

% In QepcadB format:
(E skoWC1) (E skoYC1) (E skoXC1) (E skoZC1) [[0<=skoWC1]/\[[(((skoWC1 (2+(skoWC1 skoWC1 (-1/3))))+(skoXC1 ((2+(skoWC1 skoWC1 (-1/2)))+(skoXC1 ((skoWC1 (-1/2))+(skoXC1 (-1/3)))))))+(skoYC1 (((2+(skoWC1 skoWC1 (-1/2)))+(skoXC1 ((skoWC1 (-1))+(skoXC1 (-1/2)))))+(skoYC1 (((skoWC1 (-1/2))+(skoXC1 (-1/2)))+(skoYC1 (-1/3)))))))<(skoZC1 ((((-2+(skoWC1 skoWC1 (1/2)))+(skoXC1 (skoWC1+(skoXC1 (1/2)))))+(skoYC1 ((skoWC1+skoXC1)+(skoYC1 (1/2)))))+(skoZC1 ((((skoWC1 (1/2))+(skoXC1 (1/2)))+(skoYC1 (1/2)))+(skoZC1 (1/3))))))]/\[[(((skoWC1 (-1))+(skoXC1 (-1)))+(skoYC1 (-1)))<skoZC1]/\[[skoWC1<3]/\[[skoXC1<3]/\[[skoYC1<3]/\[[skoZC1<3]/\[[1/10<skoWC1]/\[[1/10<skoXC1]/\[[1/10<skoYC1]/\[1/10<skoZC1]]]]]]]]]]].

% In SMTLib2 format:
(declare-fun skoWC1 () Real) (declare-fun skoYC1 () Real) (declare-fun skoXC1 () Real) (declare-fun skoZC1 () Real) (assert (and (<= 0. skoWC1) (and (> (* skoZC1 (+ (+ (+ (+ (- 2.) (* skoWC1 (* skoWC1 (/ 1. 2.)))) (* skoXC1 (+ skoWC1 (* skoXC1 (/ 1. 2.))))) (* skoYC1 (+ (+ skoWC1 skoXC1) (* skoYC1 (/ 1. 2.))))) (* skoZC1 (+ (+ (+ (* skoWC1 (/ 1. 2.)) (* skoXC1 (/ 1. 2.))) (* skoYC1 (/ 1. 2.))) (* skoZC1 (/ 1. 3.)))))) (+ (+ (* skoWC1 (+ 2. (* skoWC1 (* skoWC1 (/ (- 1.) 3.))))) (* skoXC1 (+ (+ 2. (* skoWC1 (* skoWC1 (/ (- 1.) 2.)))) (* skoXC1 (+ (* skoWC1 (/ (- 1.) 2.)) (* skoXC1 (/ (- 1.) 3.))))))) (* skoYC1 (+ (+ (+ 2. (* skoWC1 (* skoWC1 (/ (- 1.) 2.)))) (* skoXC1 (+ (* skoWC1 (- 1.)) (* skoXC1 (/ (- 1.) 2.))))) (* skoYC1 (+ (+ (* skoWC1 (/ (- 1.) 2.)) (* skoXC1 (/ (- 1.) 2.))) (* skoYC1 (/ (- 1.) 3.)))))))) (and (> skoZC1 (+ (+ (* skoWC1 (- 1.)) (* skoXC1 (- 1.))) (* skoYC1 (- 1.)))) (and (> 3. skoWC1) (and (> 3. skoXC1) (and (> 3. skoYC1) (and (> 3. skoZC1) (and (> skoWC1 (/ 1. 10.)) (and (> skoXC1 (/ 1. 10.)) (and (> skoYC1 (/ 1. 10.)) (> skoZC1 (/ 1. 10.)))))))))))))

% In GRF format:
(sequent " MetiTarski formula " (antecedent (<= 0. skoWC1) (> (* skoZC1 (+ (+ (+ (+ (- 2.) (* skoWC1 (* skoWC1 (/ 1. 2.)))) (* skoXC1 (+ skoWC1 (* skoXC1 (/ 1. 2.))))) (* skoYC1 (+ (+ skoWC1 skoXC1) (* skoYC1 (/ 1. 2.))))) (* skoZC1 (+ (+ (+ (* skoWC1 (/ 1. 2.)) (* skoXC1 (/ 1. 2.))) (* skoYC1 (/ 1. 2.))) (* skoZC1 (/ 1. 3.)))))) (+ (+ (* skoWC1 (+ 2. (* skoWC1 (* skoWC1 (/ (- 1.) 3.))))) (* skoXC1 (+ (+ 2. (* skoWC1 (* skoWC1 (/ (- 1.) 2.)))) (* skoXC1 (+ (* skoWC1 (/ (- 1.) 2.)) (* skoXC1 (/ (- 1.) 3.))))))) (* skoYC1 (+ (+ (+ 2. (* skoWC1 (* skoWC1 (/ (- 1.) 2.)))) (* skoXC1 (+ (* skoWC1 (- 1.)) (* skoXC1 (/ (- 1.) 2.))))) (* skoYC1 (+ (+ (* skoWC1 (/ (- 1.) 2.)) (* skoXC1 (/ (- 1.) 2.))) (* skoYC1 (/ (- 1.) 3.)))))))) (> skoZC1 (+ (+ (* skoWC1 (- 1.)) (* skoXC1 (- 1.))) (* skoYC1 (- 1.)))) (> 3. skoWC1) (> 3. skoXC1) (> 3. skoYC1) (> 3. skoZC1) (> skoWC1 (/ 1. 10.)) (> skoXC1 (/ 1. 10.)) (> skoYC1 (/ 1. 10.))) (succedent (<= skoZC1 (/ 1. 10.))))
-----[end problem]-----

-----[begin problem]-----
% In Mathematica format:
Timing[Resolve[Exists[{skoWC1,skoYC1,skoXC1,skoZC1}, And[skoWC1<=0,skoZC1*(-2+skoWC1*skoWC1*(1/2)+skoXC1*(skoWC1+skoXC1*(1/2))+skoYC1*(skoWC1+skoXC1+skoYC1*(1/2))+skoZC1*(skoWC1*(1/2)+skoXC1*(1/2)+skoYC1*(1/2)+skoZC1*(1/3)))>skoWC1*(2+skoWC1*skoWC1*(-1/6))+skoXC1*(2+skoWC1*skoWC1*(-1/2)+skoXC1*(skoWC1*(-1/2)+skoXC1*(-1/3)))+skoYC1*(2+skoWC1*skoWC1*(-1/2)+skoXC1*(skoWC1*-1+skoXC1*(-1/2))+skoYC1*(skoWC1*(-1/2)+skoXC1*(-1/2)+skoYC1*(-1/3))),skoZC1>skoWC1*-1+skoXC1*-1+skoYC1*-1,3>skoWC1,3>skoXC1,3>skoYC1,3>skoZC1,skoWC1>(1/10),skoXC1>(1/10),skoYC1>(1/10),skoZC1>(1/10)]], Reals]]

% In QepcadB format:
(E skoWC1) (E skoYC1) (E skoXC1) (E skoZC1) [[skoWC1<=0]/\[[(((skoWC1 (2+(skoWC1 skoWC1 (-1/6))))+(skoXC1 ((2+(skoWC1 skoWC1 (-1/2)))+(skoXC1 ((skoWC1 (-1/2))+(skoXC1 (-1/3)))))))+(skoYC1 (((2+(skoWC1 skoWC1 (-1/2)))+(skoXC1 ((skoWC1 (-1))+(skoXC1 (-1/2)))))+(skoYC1 (((skoWC1 (-1/2))+(skoXC1 (-1/2)))+(skoYC1 (-1/3)))))))<(skoZC1 ((((-2+(skoWC1 skoWC1 (1/2)))+(skoXC1 (skoWC1+(skoXC1 (1/2)))))+(skoYC1 ((skoWC1+skoXC1)+(skoYC1 (1/2)))))+(skoZC1 ((((skoWC1 (1/2))+(skoXC1 (1/2)))+(skoYC1 (1/2)))+(skoZC1 (1/3))))))]/\[[(((skoWC1 (-1))+(skoXC1 (-1)))+(skoYC1 (-1)))<skoZC1]/\[[skoWC1<3]/\[[skoXC1<3]/\[[skoYC1<3]/\[[skoZC1<3]/\[[1/10<skoWC1]/\[[1/10<skoXC1]/\[[1/10<skoYC1]/\[1/10<skoZC1]]]]]]]]]]].

% In SMTLib2 format:
(declare-fun skoWC1 () Real) (declare-fun skoYC1 () Real) (declare-fun skoXC1 () Real) (declare-fun skoZC1 () Real) (assert (and (<= skoWC1 0.) (and (> (* skoZC1 (+ (+ (+ (+ (- 2.) (* skoWC1 (* skoWC1 (/ 1. 2.)))) (* skoXC1 (+ skoWC1 (* skoXC1 (/ 1. 2.))))) (* skoYC1 (+ (+ skoWC1 skoXC1) (* skoYC1 (/ 1. 2.))))) (* skoZC1 (+ (+ (+ (* skoWC1 (/ 1. 2.)) (* skoXC1 (/ 1. 2.))) (* skoYC1 (/ 1. 2.))) (* skoZC1 (/ 1. 3.)))))) (+ (+ (* skoWC1 (+ 2. (* skoWC1 (* skoWC1 (/ (- 1.) 6.))))) (* skoXC1 (+ (+ 2. (* skoWC1 (* skoWC1 (/ (- 1.) 2.)))) (* skoXC1 (+ (* skoWC1 (/ (- 1.) 2.)) (* skoXC1 (/ (- 1.) 3.))))))) (* skoYC1 (+ (+ (+ 2. (* skoWC1 (* skoWC1 (/ (- 1.) 2.)))) (* skoXC1 (+ (* skoWC1 (- 1.)) (* skoXC1 (/ (- 1.) 2.))))) (* skoYC1 (+ (+ (* skoWC1 (/ (- 1.) 2.)) (* skoXC1 (/ (- 1.) 2.))) (* skoYC1 (/ (- 1.) 3.)))))))) (and (> skoZC1 (+ (+ (* skoWC1 (- 1.)) (* skoXC1 (- 1.))) (* skoYC1 (- 1.)))) (and (> 3. skoWC1) (and (> 3. skoXC1) (and (> 3. skoYC1) (and (> 3. skoZC1) (and (> skoWC1 (/ 1. 10.)) (and (> skoXC1 (/ 1. 10.)) (and (> skoYC1 (/ 1. 10.)) (> skoZC1 (/ 1. 10.)))))))))))))

% In GRF format:
(sequent " MetiTarski formula " (antecedent (<= skoWC1 0.) (> (* skoZC1 (+ (+ (+ (+ (- 2.) (* skoWC1 (* skoWC1 (/ 1. 2.)))) (* skoXC1 (+ skoWC1 (* skoXC1 (/ 1. 2.))))) (* skoYC1 (+ (+ skoWC1 skoXC1) (* skoYC1 (/ 1. 2.))))) (* skoZC1 (+ (+ (+ (* skoWC1 (/ 1. 2.)) (* skoXC1 (/ 1. 2.))) (* skoYC1 (/ 1. 2.))) (* skoZC1 (/ 1. 3.)))))) (+ (+ (* skoWC1 (+ 2. (* skoWC1 (* skoWC1 (/ (- 1.) 6.))))) (* skoXC1 (+ (+ 2. (* skoWC1 (* skoWC1 (/ (- 1.) 2.)))) (* skoXC1 (+ (* skoWC1 (/ (- 1.) 2.)) (* skoXC1 (/ (- 1.) 3.))))))) (* skoYC1 (+ (+ (+ 2. (* skoWC1 (* skoWC1 (/ (- 1.) 2.)))) (* skoXC1 (+ (* skoWC1 (- 1.)) (* skoXC1 (/ (- 1.) 2.))))) (* skoYC1 (+ (+ (* skoWC1 (/ (- 1.) 2.)) (* skoXC1 (/ (- 1.) 2.))) (* skoYC1 (/ (- 1.) 3.)))))))) (> skoZC1 (+ (+ (* skoWC1 (- 1.)) (* skoXC1 (- 1.))) (* skoYC1 (- 1.)))) (> 3. skoWC1) (> 3. skoXC1) (> 3. skoYC1) (> 3. skoZC1) (> skoWC1 (/ 1. 10.)) (> skoXC1 (/ 1. 10.)) (> skoYC1 (/ 1. 10.))) (succedent (<= skoZC1 (/ 1. 10.))))
-----[end problem]-----

-----[begin problem]-----
% In Mathematica format:
Timing[Resolve[Exists[{skoWC1,skoYC1,skoXC1,skoZC1}, And[skoZC1*(-2+skoWC1*skoWC1*(1/2)+skoXC1*(skoWC1+skoXC1*(1/2))+skoYC1*(skoWC1+skoXC1+skoYC1*(1/2))+skoZC1*(skoWC1*(1/2)+skoXC1*(1/2)+skoYC1*(1/2)+skoZC1*(1/3)))>skoWC1*(2+skoWC1*skoWC1*(-1/3))+skoXC1*(2+skoWC1*skoWC1*(-1/2)+skoXC1*(skoWC1*(-1/2)+skoXC1*(-1/3)))+skoYC1*(2+skoWC1*skoWC1*(-1/2)+skoXC1*(skoWC1*-1+skoXC1*(-1/2))+skoYC1*(skoWC1*(-1/2)+skoXC1*(-1/2)+skoYC1*(-1/3))),skoWC1>0,skoZC1>skoWC1*-1+skoXC1*-1+skoYC1*-1,3>skoWC1,3>skoXC1,3>skoYC1,3>skoZC1,skoWC1>(1/10),skoXC1>(1/10),skoYC1>(1/10),skoZC1>(1/10)]], Reals]]

% In QepcadB format:
(E skoWC1) (E skoYC1) (E skoXC1) (E skoZC1) [[(((skoWC1 (2+(skoWC1 skoWC1 (-1/3))))+(skoXC1 ((2+(skoWC1 skoWC1 (-1/2)))+(skoXC1 ((skoWC1 (-1/2))+(skoXC1 (-1/3)))))))+(skoYC1 (((2+(skoWC1 skoWC1 (-1/2)))+(skoXC1 ((skoWC1 (-1))+(skoXC1 (-1/2)))))+(skoYC1 (((skoWC1 (-1/2))+(skoXC1 (-1/2)))+(skoYC1 (-1/3)))))))<(skoZC1 ((((-2+(skoWC1 skoWC1 (1/2)))+(skoXC1 (skoWC1+(skoXC1 (1/2)))))+(skoYC1 ((skoWC1+skoXC1)+(skoYC1 (1/2)))))+(skoZC1 ((((skoWC1 (1/2))+(skoXC1 (1/2)))+(skoYC1 (1/2)))+(skoZC1 (1/3))))))]/\[[0<skoWC1]/\[[(((skoWC1 (-1))+(skoXC1 (-1)))+(skoYC1 (-1)))<skoZC1]/\[[skoWC1<3]/\[[skoXC1<3]/\[[skoYC1<3]/\[[skoZC1<3]/\[[1/10<skoWC1]/\[[1/10<skoXC1]/\[[1/10<skoYC1]/\[1/10<skoZC1]]]]]]]]]]].

% In SMTLib2 format:
(declare-fun skoWC1 () Real) (declare-fun skoYC1 () Real) (declare-fun skoXC1 () Real) (declare-fun skoZC1 () Real) (assert (and (> (* skoZC1 (+ (+ (+ (+ (- 2.) (* skoWC1 (* skoWC1 (/ 1. 2.)))) (* skoXC1 (+ skoWC1 (* skoXC1 (/ 1. 2.))))) (* skoYC1 (+ (+ skoWC1 skoXC1) (* skoYC1 (/ 1. 2.))))) (* skoZC1 (+ (+ (+ (* skoWC1 (/ 1. 2.)) (* skoXC1 (/ 1. 2.))) (* skoYC1 (/ 1. 2.))) (* skoZC1 (/ 1. 3.)))))) (+ (+ (* skoWC1 (+ 2. (* skoWC1 (* skoWC1 (/ (- 1.) 3.))))) (* skoXC1 (+ (+ 2. (* skoWC1 (* skoWC1 (/ (- 1.) 2.)))) (* skoXC1 (+ (* skoWC1 (/ (- 1.) 2.)) (* skoXC1 (/ (- 1.) 3.))))))) (* skoYC1 (+ (+ (+ 2. (* skoWC1 (* skoWC1 (/ (- 1.) 2.)))) (* skoXC1 (+ (* skoWC1 (- 1.)) (* skoXC1 (/ (- 1.) 2.))))) (* skoYC1 (+ (+ (* skoWC1 (/ (- 1.) 2.)) (* skoXC1 (/ (- 1.) 2.))) (* skoYC1 (/ (- 1.) 3.)))))))) (and (> skoWC1 0.) (and (> skoZC1 (+ (+ (* skoWC1 (- 1.)) (* skoXC1 (- 1.))) (* skoYC1 (- 1.)))) (and (> 3. skoWC1) (and (> 3. skoXC1) (and (> 3. skoYC1) (and (> 3. skoZC1) (and (> skoWC1 (/ 1. 10.)) (and (> skoXC1 (/ 1. 10.)) (and (> skoYC1 (/ 1. 10.)) (> skoZC1 (/ 1. 10.)))))))))))))

% In GRF format:
(sequent " MetiTarski formula " (antecedent (> (* skoZC1 (+ (+ (+ (+ (- 2.) (* skoWC1 (* skoWC1 (/ 1. 2.)))) (* skoXC1 (+ skoWC1 (* skoXC1 (/ 1. 2.))))) (* skoYC1 (+ (+ skoWC1 skoXC1) (* skoYC1 (/ 1. 2.))))) (* skoZC1 (+ (+ (+ (* skoWC1 (/ 1. 2.)) (* skoXC1 (/ 1. 2.))) (* skoYC1 (/ 1. 2.))) (* skoZC1 (/ 1. 3.)))))) (+ (+ (* skoWC1 (+ 2. (* skoWC1 (* skoWC1 (/ (- 1.) 3.))))) (* skoXC1 (+ (+ 2. (* skoWC1 (* skoWC1 (/ (- 1.) 2.)))) (* skoXC1 (+ (* skoWC1 (/ (- 1.) 2.)) (* skoXC1 (/ (- 1.) 3.))))))) (* skoYC1 (+ (+ (+ 2. (* skoWC1 (* skoWC1 (/ (- 1.) 2.)))) (* skoXC1 (+ (* skoWC1 (- 1.)) (* skoXC1 (/ (- 1.) 2.))))) (* skoYC1 (+ (+ (* skoWC1 (/ (- 1.) 2.)) (* skoXC1 (/ (- 1.) 2.))) (* skoYC1 (/ (- 1.) 3.)))))))) (> skoWC1 0.) (> skoZC1 (+ (+ (* skoWC1 (- 1.)) (* skoXC1 (- 1.))) (* skoYC1 (- 1.)))) (> 3. skoWC1) (> 3. skoXC1) (> 3. skoYC1) (> 3. skoZC1) (> skoWC1 (/ 1. 10.)) (> skoXC1 (/ 1. 10.)) (> skoYC1 (/ 1. 10.))) (succedent (<= skoZC1 (/ 1. 10.))))
-----[end problem]-----

-----[begin problem]-----
% In Mathematica format:
Timing[Resolve[Exists[{skoWC1,skoYC1,skoXC1,skoZC1}, And[skoZC1*(-2+skoWC1*skoWC1*(1/2)+skoXC1*(skoWC1+skoXC1*(1/2))+skoYC1*(skoWC1+skoXC1+skoYC1*(1/2))+skoZC1*(skoWC1*(1/2)+skoXC1*(1/2)+skoYC1*(1/2)+skoZC1*(1/3)))>skoWC1*(2+skoWC1*skoWC1*(-1/3))+skoXC1*(2+skoWC1*skoWC1*(-1/2)+skoXC1*(skoWC1*(-1/2)+skoXC1*(-1/6)))+skoYC1*(2+skoWC1*skoWC1*(-1/2)+skoXC1*(skoWC1*-1+skoXC1*(-1/2))+skoYC1*(skoWC1*(-1/2)+skoXC1*(-1/2)+skoYC1*(-1/3))),skoWC1>0,skoZC1>skoWC1*-1+skoXC1*-1+skoYC1*-1,3>skoWC1,3>skoXC1,3>skoYC1,3>skoZC1,skoWC1>(1/10),skoXC1>(1/10),skoYC1>(1/10),skoZC1>(1/10)]], Reals]]

% In QepcadB format:
(E skoWC1) (E skoYC1) (E skoXC1) (E skoZC1) [[(((skoWC1 (2+(skoWC1 skoWC1 (-1/3))))+(skoXC1 ((2+(skoWC1 skoWC1 (-1/2)))+(skoXC1 ((skoWC1 (-1/2))+(skoXC1 (-1/6)))))))+(skoYC1 (((2+(skoWC1 skoWC1 (-1/2)))+(skoXC1 ((skoWC1 (-1))+(skoXC1 (-1/2)))))+(skoYC1 (((skoWC1 (-1/2))+(skoXC1 (-1/2)))+(skoYC1 (-1/3)))))))<(skoZC1 ((((-2+(skoWC1 skoWC1 (1/2)))+(skoXC1 (skoWC1+(skoXC1 (1/2)))))+(skoYC1 ((skoWC1+skoXC1)+(skoYC1 (1/2)))))+(skoZC1 ((((skoWC1 (1/2))+(skoXC1 (1/2)))+(skoYC1 (1/2)))+(skoZC1 (1/3))))))]/\[[0<skoWC1]/\[[(((skoWC1 (-1))+(skoXC1 (-1)))+(skoYC1 (-1)))<skoZC1]/\[[skoWC1<3]/\[[skoXC1<3]/\[[skoYC1<3]/\[[skoZC1<3]/\[[1/10<skoWC1]/\[[1/10<skoXC1]/\[[1/10<skoYC1]/\[1/10<skoZC1]]]]]]]]]]].

% In SMTLib2 format:
(declare-fun skoWC1 () Real) (declare-fun skoYC1 () Real) (declare-fun skoXC1 () Real) (declare-fun skoZC1 () Real) (assert (and (> (* skoZC1 (+ (+ (+ (+ (- 2.) (* skoWC1 (* skoWC1 (/ 1. 2.)))) (* skoXC1 (+ skoWC1 (* skoXC1 (/ 1. 2.))))) (* skoYC1 (+ (+ skoWC1 skoXC1) (* skoYC1 (/ 1. 2.))))) (* skoZC1 (+ (+ (+ (* skoWC1 (/ 1. 2.)) (* skoXC1 (/ 1. 2.))) (* skoYC1 (/ 1. 2.))) (* skoZC1 (/ 1. 3.)))))) (+ (+ (* skoWC1 (+ 2. (* skoWC1 (* skoWC1 (/ (- 1.) 3.))))) (* skoXC1 (+ (+ 2. (* skoWC1 (* skoWC1 (/ (- 1.) 2.)))) (* skoXC1 (+ (* skoWC1 (/ (- 1.) 2.)) (* skoXC1 (/ (- 1.) 6.))))))) (* skoYC1 (+ (+ (+ 2. (* skoWC1 (* skoWC1 (/ (- 1.) 2.)))) (* skoXC1 (+ (* skoWC1 (- 1.)) (* skoXC1 (/ (- 1.) 2.))))) (* skoYC1 (+ (+ (* skoWC1 (/ (- 1.) 2.)) (* skoXC1 (/ (- 1.) 2.))) (* skoYC1 (/ (- 1.) 3.)))))))) (and (> skoWC1 0.) (and (> skoZC1 (+ (+ (* skoWC1 (- 1.)) (* skoXC1 (- 1.))) (* skoYC1 (- 1.)))) (and (> 3. skoWC1) (and (> 3. skoXC1) (and (> 3. skoYC1) (and (> 3. skoZC1) (and (> skoWC1 (/ 1. 10.)) (and (> skoXC1 (/ 1. 10.)) (and (> skoYC1 (/ 1. 10.)) (> skoZC1 (/ 1. 10.)))))))))))))

% In GRF format:
(sequent " MetiTarski formula " (antecedent (> (* skoZC1 (+ (+ (+ (+ (- 2.) (* skoWC1 (* skoWC1 (/ 1. 2.)))) (* skoXC1 (+ skoWC1 (* skoXC1 (/ 1. 2.))))) (* skoYC1 (+ (+ skoWC1 skoXC1) (* skoYC1 (/ 1. 2.))))) (* skoZC1 (+ (+ (+ (* skoWC1 (/ 1. 2.)) (* skoXC1 (/ 1. 2.))) (* skoYC1 (/ 1. 2.))) (* skoZC1 (/ 1. 3.)))))) (+ (+ (* skoWC1 (+ 2. (* skoWC1 (* skoWC1 (/ (- 1.) 3.))))) (* skoXC1 (+ (+ 2. (* skoWC1 (* skoWC1 (/ (- 1.) 2.)))) (* skoXC1 (+ (* skoWC1 (/ (- 1.) 2.)) (* skoXC1 (/ (- 1.) 6.))))))) (* skoYC1 (+ (+ (+ 2. (* skoWC1 (* skoWC1 (/ (- 1.) 2.)))) (* skoXC1 (+ (* skoWC1 (- 1.)) (* skoXC1 (/ (- 1.) 2.))))) (* skoYC1 (+ (+ (* skoWC1 (/ (- 1.) 2.)) (* skoXC1 (/ (- 1.) 2.))) (* skoYC1 (/ (- 1.) 3.)))))))) (> skoWC1 0.) (> skoZC1 (+ (+ (* skoWC1 (- 1.)) (* skoXC1 (- 1.))) (* skoYC1 (- 1.)))) (> 3. skoWC1) (> 3. skoXC1) (> 3. skoYC1) (> 3. skoZC1) (> skoWC1 (/ 1. 10.)) (> skoXC1 (/ 1. 10.)) (> skoYC1 (/ 1. 10.))) (succedent (<= skoZC1 (/ 1. 10.))))
-----[end problem]-----

-----[begin problem]-----
% In Mathematica format:
Timing[Resolve[Exists[{skoWC1,skoXC1,skoYC1,skoZC1}, And[0<=skoWC1,skoXC1<=0,skoZC1*(-2+skoWC1*skoWC1*(1/2)+skoXC1*(skoWC1+skoXC1*(1/2))+skoYC1*(skoWC1+skoXC1+skoYC1*(1/2))+skoZC1*(skoWC1*(1/2)+skoXC1*(1/2)+skoYC1*(1/2)+skoZC1*(1/3)))>skoWC1*(2+skoWC1*skoWC1*(-1/3))+skoXC1*(2+skoWC1*skoWC1*(-1/2)+skoXC1*(skoWC1*(-1/2)+skoXC1*(-1/6)))+skoYC1*(2+skoWC1*skoWC1*(-1/2)+skoXC1*(skoWC1*-1+skoXC1*(-1/2))+skoYC1*(skoWC1*(-1/2)+skoXC1*(-1/2)+skoYC1*(-1/3))),skoWC1>0,skoZC1>skoWC1*-1+skoXC1*-1+skoYC1*-1,3>skoWC1,3>skoXC1,3>skoYC1,3>skoZC1,skoWC1>(1/10),skoXC1>(1/10),skoYC1>(1/10),skoZC1>(1/10)]], Reals]]

% In QepcadB format:
(E skoWC1) (E skoXC1) (E skoYC1) (E skoZC1) [[0<=skoWC1]/\[[skoXC1<=0]/\[[(((skoWC1 (2+(skoWC1 skoWC1 (-1/3))))+(skoXC1 ((2+(skoWC1 skoWC1 (-1/2)))+(skoXC1 ((skoWC1 (-1/2))+(skoXC1 (-1/6)))))))+(skoYC1 (((2+(skoWC1 skoWC1 (-1/2)))+(skoXC1 ((skoWC1 (-1))+(skoXC1 (-1/2)))))+(skoYC1 (((skoWC1 (-1/2))+(skoXC1 (-1/2)))+(skoYC1 (-1/3)))))))<(skoZC1 ((((-2+(skoWC1 skoWC1 (1/2)))+(skoXC1 (skoWC1+(skoXC1 (1/2)))))+(skoYC1 ((skoWC1+skoXC1)+(skoYC1 (1/2)))))+(skoZC1 ((((skoWC1 (1/2))+(skoXC1 (1/2)))+(skoYC1 (1/2)))+(skoZC1 (1/3))))))]/\[[0<skoWC1]/\[[(((skoWC1 (-1))+(skoXC1 (-1)))+(skoYC1 (-1)))<skoZC1]/\[[skoWC1<3]/\[[skoXC1<3]/\[[skoYC1<3]/\[[skoZC1<3]/\[[1/10<skoWC1]/\[[1/10<skoXC1]/\[[1/10<skoYC1]/\[1/10<skoZC1]]]]]]]]]]]]].

% In SMTLib2 format:
(declare-fun skoWC1 () Real) (declare-fun skoXC1 () Real) (declare-fun skoYC1 () Real) (declare-fun skoZC1 () Real) (assert (and (<= 0. skoWC1) (and (<= skoXC1 0.) (and (> (* skoZC1 (+ (+ (+ (+ (- 2.) (* skoWC1 (* skoWC1 (/ 1. 2.)))) (* skoXC1 (+ skoWC1 (* skoXC1 (/ 1. 2.))))) (* skoYC1 (+ (+ skoWC1 skoXC1) (* skoYC1 (/ 1. 2.))))) (* skoZC1 (+ (+ (+ (* skoWC1 (/ 1. 2.)) (* skoXC1 (/ 1. 2.))) (* skoYC1 (/ 1. 2.))) (* skoZC1 (/ 1. 3.)))))) (+ (+ (* skoWC1 (+ 2. (* skoWC1 (* skoWC1 (/ (- 1.) 3.))))) (* skoXC1 (+ (+ 2. (* skoWC1 (* skoWC1 (/ (- 1.) 2.)))) (* skoXC1 (+ (* skoWC1 (/ (- 1.) 2.)) (* skoXC1 (/ (- 1.) 6.))))))) (* skoYC1 (+ (+ (+ 2. (* skoWC1 (* skoWC1 (/ (- 1.) 2.)))) (* skoXC1 (+ (* skoWC1 (- 1.)) (* skoXC1 (/ (- 1.) 2.))))) (* skoYC1 (+ (+ (* skoWC1 (/ (- 1.) 2.)) (* skoXC1 (/ (- 1.) 2.))) (* skoYC1 (/ (- 1.) 3.)))))))) (and (> skoWC1 0.) (and (> skoZC1 (+ (+ (* skoWC1 (- 1.)) (* skoXC1 (- 1.))) (* skoYC1 (- 1.)))) (and (> 3. skoWC1) (and (> 3. skoXC1) (and (> 3. skoYC1) (and (> 3. skoZC1) (and (> skoWC1 (/ 1. 10.)) (and (> skoXC1 (/ 1. 10.)) (and (> skoYC1 (/ 1. 10.)) (> skoZC1 (/ 1. 10.)))))))))))))))

% In GRF format:
(sequent " MetiTarski formula " (antecedent (<= 0. skoWC1) (<= skoXC1 0.) (> (* skoZC1 (+ (+ (+ (+ (- 2.) (* skoWC1 (* skoWC1 (/ 1. 2.)))) (* skoXC1 (+ skoWC1 (* skoXC1 (/ 1. 2.))))) (* skoYC1 (+ (+ skoWC1 skoXC1) (* skoYC1 (/ 1. 2.))))) (* skoZC1 (+ (+ (+ (* skoWC1 (/ 1. 2.)) (* skoXC1 (/ 1. 2.))) (* skoYC1 (/ 1. 2.))) (* skoZC1 (/ 1. 3.)))))) (+ (+ (* skoWC1 (+ 2. (* skoWC1 (* skoWC1 (/ (- 1.) 3.))))) (* skoXC1 (+ (+ 2. (* skoWC1 (* skoWC1 (/ (- 1.) 2.)))) (* skoXC1 (+ (* skoWC1 (/ (- 1.) 2.)) (* skoXC1 (/ (- 1.) 6.))))))) (* skoYC1 (+ (+ (+ 2. (* skoWC1 (* skoWC1 (/ (- 1.) 2.)))) (* skoXC1 (+ (* skoWC1 (- 1.)) (* skoXC1 (/ (- 1.) 2.))))) (* skoYC1 (+ (+ (* skoWC1 (/ (- 1.) 2.)) (* skoXC1 (/ (- 1.) 2.))) (* skoYC1 (/ (- 1.) 3.)))))))) (> skoWC1 0.) (> skoZC1 (+ (+ (* skoWC1 (- 1.)) (* skoXC1 (- 1.))) (* skoYC1 (- 1.)))) (> 3. skoWC1) (> 3. skoXC1) (> 3. skoYC1) (> 3. skoZC1) (> skoWC1 (/ 1. 10.)) (> skoXC1 (/ 1. 10.)) (> skoYC1 (/ 1. 10.))) (succedent (<= skoZC1 (/ 1. 10.))))
-----[end problem]-----

-----[begin problem]-----
% In Mathematica format:
Timing[Resolve[Exists[{skoWC1,skoXC1,skoYC1,skoZC1}, And[skoXC1>0,skoWC1>0,skoZC1>skoWC1*-1+skoXC1*-1+skoYC1*-1,3>skoWC1,3>skoXC1,3>skoYC1,3>skoZC1,skoWC1>(1/10),skoXC1>(1/10),skoYC1>(1/10),skoZC1>(1/10)]], Reals]]

% In QepcadB format:
(E skoWC1) (E skoXC1) (E skoYC1) (E skoZC1) [[0<skoXC1]/\[[0<skoWC1]/\[[(((skoWC1 (-1))+(skoXC1 (-1)))+(skoYC1 (-1)))<skoZC1]/\[[skoWC1<3]/\[[skoXC1<3]/\[[skoYC1<3]/\[[skoZC1<3]/\[[1/10<skoWC1]/\[[1/10<skoXC1]/\[[1/10<skoYC1]/\[1/10<skoZC1]]]]]]]]]]].

% In SMTLib2 format:
(declare-fun skoWC1 () Real) (declare-fun skoXC1 () Real) (declare-fun skoYC1 () Real) (declare-fun skoZC1 () Real) (assert (and (> skoXC1 0.) (and (> skoWC1 0.) (and (> skoZC1 (+ (+ (* skoWC1 (- 1.)) (* skoXC1 (- 1.))) (* skoYC1 (- 1.)))) (and (> 3. skoWC1) (and (> 3. skoXC1) (and (> 3. skoYC1) (and (> 3. skoZC1) (and (> skoWC1 (/ 1. 10.)) (and (> skoXC1 (/ 1. 10.)) (and (> skoYC1 (/ 1. 10.)) (> skoZC1 (/ 1. 10.)))))))))))))

% In GRF format:
(sequent " MetiTarski formula " (antecedent (> skoXC1 0.) (> skoWC1 0.) (> skoZC1 (+ (+ (* skoWC1 (- 1.)) (* skoXC1 (- 1.))) (* skoYC1 (- 1.)))) (> 3. skoWC1) (> 3. skoXC1) (> 3. skoYC1) (> 3. skoZC1) (> skoWC1 (/ 1. 10.)) (> skoXC1 (/ 1. 10.)) (> skoYC1 (/ 1. 10.))) (succedent (<= skoZC1 (/ 1. 10.))))
-----[end problem]-----

-----[begin problem]-----
% In Mathematica format:
Timing[Resolve[Exists[{skoWC1,skoXC1,skoYC1,skoZC1}, And[skoXC1>0,skoWC1>0,skoZC1>skoWC1*-1+skoXC1*-1+skoYC1*-1,3>skoWC1,3>skoXC1,3>skoYC1,3>skoZC1,skoWC1>(1/10),skoXC1>(1/10),skoYC1>(1/10),skoZC1>(1/10)]], Reals]]

% In QepcadB format:
(E skoWC1) (E skoXC1) (E skoYC1) (E skoZC1) [[0<skoXC1]/\[[0<skoWC1]/\[[(((skoWC1 (-1))+(skoXC1 (-1)))+(skoYC1 (-1)))<skoZC1]/\[[skoWC1<3]/\[[skoXC1<3]/\[[skoYC1<3]/\[[skoZC1<3]/\[[1/10<skoWC1]/\[[1/10<skoXC1]/\[[1/10<skoYC1]/\[1/10<skoZC1]]]]]]]]]]].

% In SMTLib2 format:
(declare-fun skoWC1 () Real) (declare-fun skoXC1 () Real) (declare-fun skoYC1 () Real) (declare-fun skoZC1 () Real) (assert (and (> skoXC1 0.) (and (> skoWC1 0.) (and (> skoZC1 (+ (+ (* skoWC1 (- 1.)) (* skoXC1 (- 1.))) (* skoYC1 (- 1.)))) (and (> 3. skoWC1) (and (> 3. skoXC1) (and (> 3. skoYC1) (and (> 3. skoZC1) (and (> skoWC1 (/ 1. 10.)) (and (> skoXC1 (/ 1. 10.)) (and (> skoYC1 (/ 1. 10.)) (> skoZC1 (/ 1. 10.)))))))))))))

% In GRF format:
(sequent " MetiTarski formula " (antecedent (> skoXC1 0.) (> skoWC1 0.) (> skoZC1 (+ (+ (* skoWC1 (- 1.)) (* skoXC1 (- 1.))) (* skoYC1 (- 1.)))) (> 3. skoWC1) (> 3. skoXC1) (> 3. skoYC1) (> 3. skoZC1) (> skoWC1 (/ 1. 10.)) (> skoXC1 (/ 1. 10.)) (> skoYC1 (/ 1. 10.))) (succedent (<= skoZC1 (/ 1. 10.))))
-----[end problem]-----

-----[begin problem]-----
% In Mathematica format:
Timing[Resolve[Exists[{skoWC1,skoXC1,skoYC1,skoZC1}, And[skoYC1>0,skoXC1>0,skoWC1>0,skoZC1>skoWC1*-1+skoXC1*-1+skoYC1*-1,3>skoWC1,3>skoXC1,3>skoYC1,3>skoZC1,skoWC1>(1/10),skoXC1>(1/10),skoYC1>(1/10),skoZC1>(1/10)]], Reals]]

% In QepcadB format:
(E skoWC1) (E skoXC1) (E skoYC1) (E skoZC1) [[0<skoYC1]/\[[0<skoXC1]/\[[0<skoWC1]/\[[(((skoWC1 (-1))+(skoXC1 (-1)))+(skoYC1 (-1)))<skoZC1]/\[[skoWC1<3]/\[[skoXC1<3]/\[[skoYC1<3]/\[[skoZC1<3]/\[[1/10<skoWC1]/\[[1/10<skoXC1]/\[[1/10<skoYC1]/\[1/10<skoZC1]]]]]]]]]]]].

% In SMTLib2 format:
(declare-fun skoWC1 () Real) (declare-fun skoXC1 () Real) (declare-fun skoYC1 () Real) (declare-fun skoZC1 () Real) (assert (and (> skoYC1 0.) (and (> skoXC1 0.) (and (> skoWC1 0.) (and (> skoZC1 (+ (+ (* skoWC1 (- 1.)) (* skoXC1 (- 1.))) (* skoYC1 (- 1.)))) (and (> 3. skoWC1) (and (> 3. skoXC1) (and (> 3. skoYC1) (and (> 3. skoZC1) (and (> skoWC1 (/ 1. 10.)) (and (> skoXC1 (/ 1. 10.)) (and (> skoYC1 (/ 1. 10.)) (> skoZC1 (/ 1. 10.))))))))))))))

% In GRF format:
(sequent " MetiTarski formula " (antecedent (> skoYC1 0.) (> skoXC1 0.) (> skoWC1 0.) (> skoZC1 (+ (+ (* skoWC1 (- 1.)) (* skoXC1 (- 1.))) (* skoYC1 (- 1.)))) (> 3. skoWC1) (> 3. skoXC1) (> 3. skoYC1) (> 3. skoZC1) (> skoWC1 (/ 1. 10.)) (> skoXC1 (/ 1. 10.)) (> skoYC1 (/ 1. 10.))) (succedent (<= skoZC1 (/ 1. 10.))))
-----[end problem]-----

-----[begin problem]-----
% In Mathematica format:
Timing[Resolve[Exists[{skoXC1,skoWC1,skoYC1,skoZC1}, And[skoZC1*(-2+skoWC1*skoWC1*(1/2)+skoXC1*(skoWC1+skoXC1*(1/2))+skoYC1*(skoWC1+skoXC1+skoYC1*(1/2))+skoZC1*(skoWC1*(1/2)+skoXC1*(1/2)+skoYC1*(1/2)+skoZC1*(1/3)))>skoWC1*(2+skoWC1*skoWC1*(-1/3))+skoXC1*(2+skoWC1*skoWC1*(-1/2)+skoXC1*(skoWC1*(-1/2)+skoXC1*(-1/3)))+skoYC1*(2+skoWC1*skoWC1*(-1/2)+skoXC1*(skoWC1*-1+skoXC1*(-1/2))+skoYC1*(skoWC1*(-1/2)+skoXC1*(-1/2)+skoYC1*(-1/6))),skoXC1>0,skoWC1>0,skoZC1>skoWC1*-1+skoXC1*-1+skoYC1*-1,3>skoWC1,3>skoXC1,3>skoYC1,3>skoZC1,skoWC1>(1/10),skoXC1>(1/10),skoYC1>(1/10),skoZC1>(1/10)]], Reals]]

% In QepcadB format:
(E skoXC1) (E skoWC1) (E skoYC1) (E skoZC1) [[(((skoWC1 (2+(skoWC1 skoWC1 (-1/3))))+(skoXC1 ((2+(skoWC1 skoWC1 (-1/2)))+(skoXC1 ((skoWC1 (-1/2))+(skoXC1 (-1/3)))))))+(skoYC1 (((2+(skoWC1 skoWC1 (-1/2)))+(skoXC1 ((skoWC1 (-1))+(skoXC1 (-1/2)))))+(skoYC1 (((skoWC1 (-1/2))+(skoXC1 (-1/2)))+(skoYC1 (-1/6)))))))<(skoZC1 ((((-2+(skoWC1 skoWC1 (1/2)))+(skoXC1 (skoWC1+(skoXC1 (1/2)))))+(skoYC1 ((skoWC1+skoXC1)+(skoYC1 (1/2)))))+(skoZC1 ((((skoWC1 (1/2))+(skoXC1 (1/2)))+(skoYC1 (1/2)))+(skoZC1 (1/3))))))]/\[[0<skoXC1]/\[[0<skoWC1]/\[[(((skoWC1 (-1))+(skoXC1 (-1)))+(skoYC1 (-1)))<skoZC1]/\[[skoWC1<3]/\[[skoXC1<3]/\[[skoYC1<3]/\[[skoZC1<3]/\[[1/10<skoWC1]/\[[1/10<skoXC1]/\[[1/10<skoYC1]/\[1/10<skoZC1]]]]]]]]]]]].

% In SMTLib2 format:
(declare-fun skoXC1 () Real) (declare-fun skoWC1 () Real) (declare-fun skoYC1 () Real) (declare-fun skoZC1 () Real) (assert (and (> (* skoZC1 (+ (+ (+ (+ (- 2.) (* skoWC1 (* skoWC1 (/ 1. 2.)))) (* skoXC1 (+ skoWC1 (* skoXC1 (/ 1. 2.))))) (* skoYC1 (+ (+ skoWC1 skoXC1) (* skoYC1 (/ 1. 2.))))) (* skoZC1 (+ (+ (+ (* skoWC1 (/ 1. 2.)) (* skoXC1 (/ 1. 2.))) (* skoYC1 (/ 1. 2.))) (* skoZC1 (/ 1. 3.)))))) (+ (+ (* skoWC1 (+ 2. (* skoWC1 (* skoWC1 (/ (- 1.) 3.))))) (* skoXC1 (+ (+ 2. (* skoWC1 (* skoWC1 (/ (- 1.) 2.)))) (* skoXC1 (+ (* skoWC1 (/ (- 1.) 2.)) (* skoXC1 (/ (- 1.) 3.))))))) (* skoYC1 (+ (+ (+ 2. (* skoWC1 (* skoWC1 (/ (- 1.) 2.)))) (* skoXC1 (+ (* skoWC1 (- 1.)) (* skoXC1 (/ (- 1.) 2.))))) (* skoYC1 (+ (+ (* skoWC1 (/ (- 1.) 2.)) (* skoXC1 (/ (- 1.) 2.))) (* skoYC1 (/ (- 1.) 6.)))))))) (and (> skoXC1 0.) (and (> skoWC1 0.) (and (> skoZC1 (+ (+ (* skoWC1 (- 1.)) (* skoXC1 (- 1.))) (* skoYC1 (- 1.)))) (and (> 3. skoWC1) (and (> 3. skoXC1) (and (> 3. skoYC1) (and (> 3. skoZC1) (and (> skoWC1 (/ 1. 10.)) (and (> skoXC1 (/ 1. 10.)) (and (> skoYC1 (/ 1. 10.)) (> skoZC1 (/ 1. 10.))))))))))))))

% In GRF format:
(sequent " MetiTarski formula " (antecedent (> (* skoZC1 (+ (+ (+ (+ (- 2.) (* skoWC1 (* skoWC1 (/ 1. 2.)))) (* skoXC1 (+ skoWC1 (* skoXC1 (/ 1. 2.))))) (* skoYC1 (+ (+ skoWC1 skoXC1) (* skoYC1 (/ 1. 2.))))) (* skoZC1 (+ (+ (+ (* skoWC1 (/ 1. 2.)) (* skoXC1 (/ 1. 2.))) (* skoYC1 (/ 1. 2.))) (* skoZC1 (/ 1. 3.)))))) (+ (+ (* skoWC1 (+ 2. (* skoWC1 (* skoWC1 (/ (- 1.) 3.))))) (* skoXC1 (+ (+ 2. (* skoWC1 (* skoWC1 (/ (- 1.) 2.)))) (* skoXC1 (+ (* skoWC1 (/ (- 1.) 2.)) (* skoXC1 (/ (- 1.) 3.))))))) (* skoYC1 (+ (+ (+ 2. (* skoWC1 (* skoWC1 (/ (- 1.) 2.)))) (* skoXC1 (+ (* skoWC1 (- 1.)) (* skoXC1 (/ (- 1.) 2.))))) (* skoYC1 (+ (+ (* skoWC1 (/ (- 1.) 2.)) (* skoXC1 (/ (- 1.) 2.))) (* skoYC1 (/ (- 1.) 6.)))))))) (> skoXC1 0.) (> skoWC1 0.) (> skoZC1 (+ (+ (* skoWC1 (- 1.)) (* skoXC1 (- 1.))) (* skoYC1 (- 1.)))) (> 3. skoWC1) (> 3. skoXC1) (> 3. skoYC1) (> 3. skoZC1) (> skoWC1 (/ 1. 10.)) (> skoXC1 (/ 1. 10.)) (> skoYC1 (/ 1. 10.))) (succedent (<= skoZC1 (/ 1. 10.))))
-----[end problem]-----

