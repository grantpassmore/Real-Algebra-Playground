-----[begin problem]-----
% In Mathematica format:
Timing[Resolve[Exists[{skoTC1,skoBC1,skoAC1}, And[skoTC1*skoTC1*-1<=skoAC1*-1+skoBC1,skoTC1*skoTC1>skoAC1+skoBC1*-1,0<=skoBC1,skoBC1>skoAC1,2>skoBC1,skoAC1>0,skoTC1>(3/2),skoTC1>0,skoTC1*skoTC1>skoAC1,0<=skoTC1,skoTC1*skoTC1*(skoAC1*skoAC1+skoBC1*skoBC1+skoTC1*skoTC1)>skoBC1*skoBC1*skoAC1*skoAC1*-1]], Reals]]

% In QepcadB format:
(E skoTC1) (E skoBC1) (E skoAC1) [[(skoTC1 skoTC1 (-1))<=((skoAC1 (-1))+skoBC1)]/\[[(skoAC1+(skoBC1 (-1)))<(skoTC1 skoTC1)]/\[[0<=skoBC1]/\[[skoAC1<skoBC1]/\[[skoBC1<2]/\[[0<skoAC1]/\[[3/2<skoTC1]/\[[0<skoTC1]/\[[skoAC1<(skoTC1 skoTC1)]/\[[0<=skoTC1]/\[(skoBC1 skoBC1 skoAC1 skoAC1 (-1))<(skoTC1 skoTC1 (((skoAC1 skoAC1)+(skoBC1 skoBC1))+(skoTC1 skoTC1)))]]]]]]]]]]].

% In SMTLib2 format:
(declare-fun skoTC1 () Real) (declare-fun skoBC1 () Real) (declare-fun skoAC1 () Real) (assert (and (<= (* skoTC1 (* skoTC1 (- 1.))) (+ (* skoAC1 (- 1.)) skoBC1)) (and (> (* skoTC1 skoTC1) (+ skoAC1 (* skoBC1 (- 1.)))) (and (<= 0. skoBC1) (and (> skoBC1 skoAC1) (and (> 2. skoBC1) (and (> skoAC1 0.) (and (> skoTC1 (/ 3. 2.)) (and (> skoTC1 0.) (and (> (* skoTC1 skoTC1) skoAC1) (and (<= 0. skoTC1) (> (* skoTC1 (* skoTC1 (+ (+ (* skoAC1 skoAC1) (* skoBC1 skoBC1)) (* skoTC1 skoTC1)))) (* skoBC1 (* skoBC1 (* skoAC1 (* skoAC1 (- 1.)))))))))))))))))

% In GRF format:
(sequent " MetiTarski formula " (antecedent (<= (* skoTC1 (* skoTC1 (- 1.))) (+ (* skoAC1 (- 1.)) skoBC1)) (> (* skoTC1 skoTC1) (+ skoAC1 (* skoBC1 (- 1.)))) (<= 0. skoBC1) (> skoBC1 skoAC1) (> 2. skoBC1) (> skoAC1 0.) (> skoTC1 (/ 3. 2.)) (> skoTC1 0.) (> (* skoTC1 skoTC1) skoAC1) (<= 0. skoTC1)) (succedent (<= (* skoTC1 (* skoTC1 (+ (+ (* skoAC1 skoAC1) (* skoBC1 skoBC1)) (* skoTC1 skoTC1)))) (* skoBC1 (* skoBC1 (* skoAC1 (* skoAC1 (- 1.))))))))
-----[end problem]-----

-----[begin problem]-----
% In Mathematica format:
Timing[Resolve[Exists[{skoTC1,skoBC1,skoAC1}, And[skoTC1*skoTC1*(skoAC1*skoAC1+skoBC1*skoBC1+skoTC1*skoTC1)<=skoBC1*skoBC1*skoAC1*skoAC1*-1,skoBC1>0,skoBC1>0,0<=skoBC1,skoBC1>skoAC1,2>skoBC1,skoAC1>0,skoTC1>(3/2),skoTC1>0,skoTC1*skoTC1>skoAC1,0<=skoTC1,skoTC1*skoTC1*(skoAC1*skoAC1+skoBC1*skoBC1+skoTC1*skoTC1)>skoBC1*skoBC1*skoAC1*skoAC1*-1]], Reals]]

% In QepcadB format:
(E skoTC1) (E skoBC1) (E skoAC1) [[(skoTC1 skoTC1 (((skoAC1 skoAC1)+(skoBC1 skoBC1))+(skoTC1 skoTC1)))<=(skoBC1 skoBC1 skoAC1 skoAC1 (-1))]/\[[0<skoBC1]/\[[0<skoBC1]/\[[0<=skoBC1]/\[[skoAC1<skoBC1]/\[[skoBC1<2]/\[[0<skoAC1]/\[[3/2<skoTC1]/\[[0<skoTC1]/\[[skoAC1<(skoTC1 skoTC1)]/\[[0<=skoTC1]/\[(skoBC1 skoBC1 skoAC1 skoAC1 (-1))<(skoTC1 skoTC1 (((skoAC1 skoAC1)+(skoBC1 skoBC1))+(skoTC1 skoTC1)))]]]]]]]]]]]].

% In SMTLib2 format:
(declare-fun skoTC1 () Real) (declare-fun skoBC1 () Real) (declare-fun skoAC1 () Real) (assert (and (<= (* skoTC1 (* skoTC1 (+ (+ (* skoAC1 skoAC1) (* skoBC1 skoBC1)) (* skoTC1 skoTC1)))) (* skoBC1 (* skoBC1 (* skoAC1 (* skoAC1 (- 1.)))))) (and (> skoBC1 0.) (and (> skoBC1 0.) (and (<= 0. skoBC1) (and (> skoBC1 skoAC1) (and (> 2. skoBC1) (and (> skoAC1 0.) (and (> skoTC1 (/ 3. 2.)) (and (> skoTC1 0.) (and (> (* skoTC1 skoTC1) skoAC1) (and (<= 0. skoTC1) (> (* skoTC1 (* skoTC1 (+ (+ (* skoAC1 skoAC1) (* skoBC1 skoBC1)) (* skoTC1 skoTC1)))) (* skoBC1 (* skoBC1 (* skoAC1 (* skoAC1 (- 1.))))))))))))))))))

% In GRF format:
(sequent " MetiTarski formula " (antecedent (<= (* skoTC1 (* skoTC1 (+ (+ (* skoAC1 skoAC1) (* skoBC1 skoBC1)) (* skoTC1 skoTC1)))) (* skoBC1 (* skoBC1 (* skoAC1 (* skoAC1 (- 1.)))))) (> skoBC1 0.) (> skoBC1 0.) (<= 0. skoBC1) (> skoBC1 skoAC1) (> 2. skoBC1) (> skoAC1 0.) (> skoTC1 (/ 3. 2.)) (> skoTC1 0.) (> (* skoTC1 skoTC1) skoAC1) (<= 0. skoTC1)) (succedent (<= (* skoTC1 (* skoTC1 (+ (+ (* skoAC1 skoAC1) (* skoBC1 skoBC1)) (* skoTC1 skoTC1)))) (* skoBC1 (* skoBC1 (* skoAC1 (* skoAC1 (- 1.))))))))
-----[end problem]-----

-----[begin problem]-----
% In Mathematica format:
Timing[Resolve[Exists[{skoTC1,skoBC1,skoAC1}, And[skoTC1*(skoBC1*(157079/100000)+skoTC1*(-1+skoBC1))<=skoBC1*skoAC1,skoBC1>0,0<=skoBC1,skoBC1>skoAC1,2>skoBC1,skoAC1>0,skoTC1>(3/2),skoTC1>0,skoTC1*skoTC1>skoAC1,0<=skoTC1,skoTC1*skoTC1*(skoAC1*skoAC1+skoBC1*skoBC1+skoTC1*skoTC1)>skoBC1*skoBC1*skoAC1*skoAC1*-1]], Reals]]

% In QepcadB format:
(E skoTC1) (E skoBC1) (E skoAC1) [[(skoTC1 ((skoBC1 (157079/100000))+(skoTC1 (-1+skoBC1))))<=(skoBC1 skoAC1)]/\[[0<skoBC1]/\[[0<=skoBC1]/\[[skoAC1<skoBC1]/\[[skoBC1<2]/\[[0<skoAC1]/\[[3/2<skoTC1]/\[[0<skoTC1]/\[[skoAC1<(skoTC1 skoTC1)]/\[[0<=skoTC1]/\[(skoBC1 skoBC1 skoAC1 skoAC1 (-1))<(skoTC1 skoTC1 (((skoAC1 skoAC1)+(skoBC1 skoBC1))+(skoTC1 skoTC1)))]]]]]]]]]]].

% In SMTLib2 format:
(declare-fun skoTC1 () Real) (declare-fun skoBC1 () Real) (declare-fun skoAC1 () Real) (assert (and (<= (* skoTC1 (+ (* skoBC1 (/ 157079. 100000.)) (* skoTC1 (+ (- 1.) skoBC1)))) (* skoBC1 skoAC1)) (and (> skoBC1 0.) (and (<= 0. skoBC1) (and (> skoBC1 skoAC1) (and (> 2. skoBC1) (and (> skoAC1 0.) (and (> skoTC1 (/ 3. 2.)) (and (> skoTC1 0.) (and (> (* skoTC1 skoTC1) skoAC1) (and (<= 0. skoTC1) (> (* skoTC1 (* skoTC1 (+ (+ (* skoAC1 skoAC1) (* skoBC1 skoBC1)) (* skoTC1 skoTC1)))) (* skoBC1 (* skoBC1 (* skoAC1 (* skoAC1 (- 1.)))))))))))))))))

% In GRF format:
(sequent " MetiTarski formula " (antecedent (<= (* skoTC1 (+ (* skoBC1 (/ 157079. 100000.)) (* skoTC1 (+ (- 1.) skoBC1)))) (* skoBC1 skoAC1)) (> skoBC1 0.) (<= 0. skoBC1) (> skoBC1 skoAC1) (> 2. skoBC1) (> skoAC1 0.) (> skoTC1 (/ 3. 2.)) (> skoTC1 0.) (> (* skoTC1 skoTC1) skoAC1) (<= 0. skoTC1)) (succedent (<= (* skoTC1 (* skoTC1 (+ (+ (* skoAC1 skoAC1) (* skoBC1 skoBC1)) (* skoTC1 skoTC1)))) (* skoBC1 (* skoBC1 (* skoAC1 (* skoAC1 (- 1.))))))))
-----[end problem]-----

-----[begin problem]-----
% In Mathematica format:
Timing[Resolve[Exists[{skoTC1,skoBC1,skoAC1}, And[skoTC1*(skoBC1*(-157079/100000)+skoTC1*(1+skoBC1*-1))<=skoBC1*skoAC1*-1,skoBC1>0,0<=skoBC1,skoBC1>skoAC1,2>skoBC1,skoAC1>0,skoTC1>(3/2),skoTC1>0,skoTC1*skoTC1>skoAC1,0<=skoTC1,skoTC1*skoTC1*(skoAC1*skoAC1+skoBC1*skoBC1+skoTC1*skoTC1)>skoBC1*skoBC1*skoAC1*skoAC1*-1]], Reals]]

% In QepcadB format:
(E skoTC1) (E skoBC1) (E skoAC1) [[(skoTC1 ((skoBC1 (-157079/100000))+(skoTC1 (1+(skoBC1 (-1))))))<=(skoBC1 skoAC1 (-1))]/\[[0<skoBC1]/\[[0<=skoBC1]/\[[skoAC1<skoBC1]/\[[skoBC1<2]/\[[0<skoAC1]/\[[3/2<skoTC1]/\[[0<skoTC1]/\[[skoAC1<(skoTC1 skoTC1)]/\[[0<=skoTC1]/\[(skoBC1 skoBC1 skoAC1 skoAC1 (-1))<(skoTC1 skoTC1 (((skoAC1 skoAC1)+(skoBC1 skoBC1))+(skoTC1 skoTC1)))]]]]]]]]]]].

% In SMTLib2 format:
(declare-fun skoTC1 () Real) (declare-fun skoBC1 () Real) (declare-fun skoAC1 () Real) (assert (and (<= (* skoTC1 (+ (* skoBC1 (/ (- 157079.) 100000.)) (* skoTC1 (+ 1. (* skoBC1 (- 1.)))))) (* skoBC1 (* skoAC1 (- 1.)))) (and (> skoBC1 0.) (and (<= 0. skoBC1) (and (> skoBC1 skoAC1) (and (> 2. skoBC1) (and (> skoAC1 0.) (and (> skoTC1 (/ 3. 2.)) (and (> skoTC1 0.) (and (> (* skoTC1 skoTC1) skoAC1) (and (<= 0. skoTC1) (> (* skoTC1 (* skoTC1 (+ (+ (* skoAC1 skoAC1) (* skoBC1 skoBC1)) (* skoTC1 skoTC1)))) (* skoBC1 (* skoBC1 (* skoAC1 (* skoAC1 (- 1.)))))))))))))))))

% In GRF format:
(sequent " MetiTarski formula " (antecedent (<= (* skoTC1 (+ (* skoBC1 (/ (- 157079.) 100000.)) (* skoTC1 (+ 1. (* skoBC1 (- 1.)))))) (* skoBC1 (* skoAC1 (- 1.)))) (> skoBC1 0.) (<= 0. skoBC1) (> skoBC1 skoAC1) (> 2. skoBC1) (> skoAC1 0.) (> skoTC1 (/ 3. 2.)) (> skoTC1 0.) (> (* skoTC1 skoTC1) skoAC1) (<= 0. skoTC1)) (succedent (<= (* skoTC1 (* skoTC1 (+ (+ (* skoAC1 skoAC1) (* skoBC1 skoBC1)) (* skoTC1 skoTC1)))) (* skoBC1 (* skoBC1 (* skoAC1 (* skoAC1 (- 1.))))))))
-----[end problem]-----

-----[begin problem]-----
% In Mathematica format:
Timing[Resolve[Exists[{skoTC1,skoBC1,skoAC1}, And[skoTC1*skoTC1*skoBC1*(skoAC1*-1+skoBC1)<=0,skoTC1*(skoBC1*(157079/100000)+skoTC1*(-1+skoBC1))<=skoBC1*skoAC1,skoTC1*(skoBC1*(-157079/100000)+skoTC1*(1+skoBC1*-1))>skoBC1*skoAC1*-1,skoBC1>0,0<=skoBC1,skoBC1>skoAC1,2>skoBC1,skoAC1>0,skoTC1>(3/2),skoTC1>0,skoTC1*skoTC1>skoAC1,0<=skoTC1,skoTC1*skoTC1*(skoAC1*skoAC1+skoBC1*skoBC1+skoTC1*skoTC1)>skoBC1*skoBC1*skoAC1*skoAC1*-1]], Reals]]

% In QepcadB format:
(E skoTC1) (E skoBC1) (E skoAC1) [[(skoTC1 skoTC1 skoBC1 ((skoAC1 (-1))+skoBC1))<=0]/\[[(skoTC1 ((skoBC1 (157079/100000))+(skoTC1 (-1+skoBC1))))<=(skoBC1 skoAC1)]/\[[(skoBC1 skoAC1 (-1))<(skoTC1 ((skoBC1 (-157079/100000))+(skoTC1 (1+(skoBC1 (-1))))))]/\[[0<skoBC1]/\[[0<=skoBC1]/\[[skoAC1<skoBC1]/\[[skoBC1<2]/\[[0<skoAC1]/\[[3/2<skoTC1]/\[[0<skoTC1]/\[[skoAC1<(skoTC1 skoTC1)]/\[[0<=skoTC1]/\[(skoBC1 skoBC1 skoAC1 skoAC1 (-1))<(skoTC1 skoTC1 (((skoAC1 skoAC1)+(skoBC1 skoBC1))+(skoTC1 skoTC1)))]]]]]]]]]]]]].

% In SMTLib2 format:
(declare-fun skoTC1 () Real) (declare-fun skoBC1 () Real) (declare-fun skoAC1 () Real) (assert (and (<= (* skoTC1 (* skoTC1 (* skoBC1 (+ (* skoAC1 (- 1.)) skoBC1)))) 0.) (and (<= (* skoTC1 (+ (* skoBC1 (/ 157079. 100000.)) (* skoTC1 (+ (- 1.) skoBC1)))) (* skoBC1 skoAC1)) (and (> (* skoTC1 (+ (* skoBC1 (/ (- 157079.) 100000.)) (* skoTC1 (+ 1. (* skoBC1 (- 1.)))))) (* skoBC1 (* skoAC1 (- 1.)))) (and (> skoBC1 0.) (and (<= 0. skoBC1) (and (> skoBC1 skoAC1) (and (> 2. skoBC1) (and (> skoAC1 0.) (and (> skoTC1 (/ 3. 2.)) (and (> skoTC1 0.) (and (> (* skoTC1 skoTC1) skoAC1) (and (<= 0. skoTC1) (> (* skoTC1 (* skoTC1 (+ (+ (* skoAC1 skoAC1) (* skoBC1 skoBC1)) (* skoTC1 skoTC1)))) (* skoBC1 (* skoBC1 (* skoAC1 (* skoAC1 (- 1.)))))))))))))))))))

% In GRF format:
(sequent " MetiTarski formula " (antecedent (<= (* skoTC1 (* skoTC1 (* skoBC1 (+ (* skoAC1 (- 1.)) skoBC1)))) 0.) (<= (* skoTC1 (+ (* skoBC1 (/ 157079. 100000.)) (* skoTC1 (+ (- 1.) skoBC1)))) (* skoBC1 skoAC1)) (> (* skoTC1 (+ (* skoBC1 (/ (- 157079.) 100000.)) (* skoTC1 (+ 1. (* skoBC1 (- 1.)))))) (* skoBC1 (* skoAC1 (- 1.)))) (> skoBC1 0.) (<= 0. skoBC1) (> skoBC1 skoAC1) (> 2. skoBC1) (> skoAC1 0.) (> skoTC1 (/ 3. 2.)) (> skoTC1 0.) (> (* skoTC1 skoTC1) skoAC1) (<= 0. skoTC1)) (succedent (<= (* skoTC1 (* skoTC1 (+ (+ (* skoAC1 skoAC1) (* skoBC1 skoBC1)) (* skoTC1 skoTC1)))) (* skoBC1 (* skoBC1 (* skoAC1 (* skoAC1 (- 1.))))))))
-----[end problem]-----

-----[begin problem]-----
% In Mathematica format:
Timing[Resolve[Exists[{skoTC1,skoBC1,skoAC1}, And[skoTC1*skoTC1*skoBC1*(skoAC1*-1+skoBC1)<=0,skoTC1*(skoBC1*(157079/100000)+skoTC1*(-1+skoBC1))>skoBC1*skoAC1,skoBC1>0,0<=skoBC1,skoBC1>skoAC1,2>skoBC1,skoAC1>0,skoTC1>(3/2),skoTC1>0,skoTC1*skoTC1>skoAC1,0<=skoTC1,skoTC1*skoTC1*(skoAC1*skoAC1+skoBC1*skoBC1+skoTC1*skoTC1)>skoBC1*skoBC1*skoAC1*skoAC1*-1]], Reals]]

% In QepcadB format:
(E skoTC1) (E skoBC1) (E skoAC1) [[(skoTC1 skoTC1 skoBC1 ((skoAC1 (-1))+skoBC1))<=0]/\[[(skoBC1 skoAC1)<(skoTC1 ((skoBC1 (157079/100000))+(skoTC1 (-1+skoBC1))))]/\[[0<skoBC1]/\[[0<=skoBC1]/\[[skoAC1<skoBC1]/\[[skoBC1<2]/\[[0<skoAC1]/\[[3/2<skoTC1]/\[[0<skoTC1]/\[[skoAC1<(skoTC1 skoTC1)]/\[[0<=skoTC1]/\[(skoBC1 skoBC1 skoAC1 skoAC1 (-1))<(skoTC1 skoTC1 (((skoAC1 skoAC1)+(skoBC1 skoBC1))+(skoTC1 skoTC1)))]]]]]]]]]]]].

% In SMTLib2 format:
(declare-fun skoTC1 () Real) (declare-fun skoBC1 () Real) (declare-fun skoAC1 () Real) (assert (and (<= (* skoTC1 (* skoTC1 (* skoBC1 (+ (* skoAC1 (- 1.)) skoBC1)))) 0.) (and (> (* skoTC1 (+ (* skoBC1 (/ 157079. 100000.)) (* skoTC1 (+ (- 1.) skoBC1)))) (* skoBC1 skoAC1)) (and (> skoBC1 0.) (and (<= 0. skoBC1) (and (> skoBC1 skoAC1) (and (> 2. skoBC1) (and (> skoAC1 0.) (and (> skoTC1 (/ 3. 2.)) (and (> skoTC1 0.) (and (> (* skoTC1 skoTC1) skoAC1) (and (<= 0. skoTC1) (> (* skoTC1 (* skoTC1 (+ (+ (* skoAC1 skoAC1) (* skoBC1 skoBC1)) (* skoTC1 skoTC1)))) (* skoBC1 (* skoBC1 (* skoAC1 (* skoAC1 (- 1.))))))))))))))))))

% In GRF format:
(sequent " MetiTarski formula " (antecedent (<= (* skoTC1 (* skoTC1 (* skoBC1 (+ (* skoAC1 (- 1.)) skoBC1)))) 0.) (> (* skoTC1 (+ (* skoBC1 (/ 157079. 100000.)) (* skoTC1 (+ (- 1.) skoBC1)))) (* skoBC1 skoAC1)) (> skoBC1 0.) (<= 0. skoBC1) (> skoBC1 skoAC1) (> 2. skoBC1) (> skoAC1 0.) (> skoTC1 (/ 3. 2.)) (> skoTC1 0.) (> (* skoTC1 skoTC1) skoAC1) (<= 0. skoTC1)) (succedent (<= (* skoTC1 (* skoTC1 (+ (+ (* skoAC1 skoAC1) (* skoBC1 skoBC1)) (* skoTC1 skoTC1)))) (* skoBC1 (* skoBC1 (* skoAC1 (* skoAC1 (- 1.))))))))
-----[end problem]-----

-----[begin problem]-----
% In Mathematica format:
Timing[Resolve[Exists[{skoTC1,skoBC1,skoAC1}, And[skoTC1*skoTC1*skoBC1*(skoAC1*-1+skoBC1)>0,skoBC1>0,0<=skoBC1,skoBC1>skoAC1,2>skoBC1,skoAC1>0,skoTC1>(3/2),skoTC1>0,skoTC1*skoTC1>skoAC1,0<=skoTC1,skoTC1*skoTC1*(skoAC1*skoAC1+skoBC1*skoBC1+skoTC1*skoTC1)>skoBC1*skoBC1*skoAC1*skoAC1*-1]], Reals]]

% In QepcadB format:
(E skoTC1) (E skoBC1) (E skoAC1) [[0<(skoTC1 skoTC1 skoBC1 ((skoAC1 (-1))+skoBC1))]/\[[0<skoBC1]/\[[0<=skoBC1]/\[[skoAC1<skoBC1]/\[[skoBC1<2]/\[[0<skoAC1]/\[[3/2<skoTC1]/\[[0<skoTC1]/\[[skoAC1<(skoTC1 skoTC1)]/\[[0<=skoTC1]/\[(skoBC1 skoBC1 skoAC1 skoAC1 (-1))<(skoTC1 skoTC1 (((skoAC1 skoAC1)+(skoBC1 skoBC1))+(skoTC1 skoTC1)))]]]]]]]]]]].

% In SMTLib2 format:
(declare-fun skoTC1 () Real) (declare-fun skoBC1 () Real) (declare-fun skoAC1 () Real) (assert (and (> (* skoTC1 (* skoTC1 (* skoBC1 (+ (* skoAC1 (- 1.)) skoBC1)))) 0.) (and (> skoBC1 0.) (and (<= 0. skoBC1) (and (> skoBC1 skoAC1) (and (> 2. skoBC1) (and (> skoAC1 0.) (and (> skoTC1 (/ 3. 2.)) (and (> skoTC1 0.) (and (> (* skoTC1 skoTC1) skoAC1) (and (<= 0. skoTC1) (> (* skoTC1 (* skoTC1 (+ (+ (* skoAC1 skoAC1) (* skoBC1 skoBC1)) (* skoTC1 skoTC1)))) (* skoBC1 (* skoBC1 (* skoAC1 (* skoAC1 (- 1.)))))))))))))))))

% In GRF format:
(sequent " MetiTarski formula " (antecedent (> (* skoTC1 (* skoTC1 (* skoBC1 (+ (* skoAC1 (- 1.)) skoBC1)))) 0.) (> skoBC1 0.) (<= 0. skoBC1) (> skoBC1 skoAC1) (> 2. skoBC1) (> skoAC1 0.) (> skoTC1 (/ 3. 2.)) (> skoTC1 0.) (> (* skoTC1 skoTC1) skoAC1) (<= 0. skoTC1)) (succedent (<= (* skoTC1 (* skoTC1 (+ (+ (* skoAC1 skoAC1) (* skoBC1 skoBC1)) (* skoTC1 skoTC1)))) (* skoBC1 (* skoBC1 (* skoAC1 (* skoAC1 (- 1.))))))))
-----[end problem]-----

-----[begin problem]-----
% In Mathematica format:
Timing[Resolve[Exists[{skoTC1,skoBC1,skoAC1}, And[skoTC1*skoTC1*skoBC1*(skoAC1*-1+skoBC1)>0,skoBC1>skoTC1,skoTC1>0,skoBC1>0,skoBC1>skoAC1,2>skoBC1,skoAC1>0,skoTC1>(3/2),skoTC1>0,skoTC1*skoTC1>skoAC1,skoTC1*skoTC1*(skoAC1*skoAC1+skoBC1*skoBC1+skoTC1*skoTC1)>skoBC1*skoBC1*skoAC1*skoAC1*-1]], Reals]]

% In QepcadB format:
(E skoTC1) (E skoBC1) (E skoAC1) [[0<(skoTC1 skoTC1 skoBC1 ((skoAC1 (-1))+skoBC1))]/\[[skoTC1<skoBC1]/\[[0<skoTC1]/\[[0<skoBC1]/\[[skoAC1<skoBC1]/\[[skoBC1<2]/\[[0<skoAC1]/\[[3/2<skoTC1]/\[[0<skoTC1]/\[[skoAC1<(skoTC1 skoTC1)]/\[(skoBC1 skoBC1 skoAC1 skoAC1 (-1))<(skoTC1 skoTC1 (((skoAC1 skoAC1)+(skoBC1 skoBC1))+(skoTC1 skoTC1)))]]]]]]]]]]].

% In SMTLib2 format:
(declare-fun skoTC1 () Real) (declare-fun skoBC1 () Real) (declare-fun skoAC1 () Real) (assert (and (> (* skoTC1 (* skoTC1 (* skoBC1 (+ (* skoAC1 (- 1.)) skoBC1)))) 0.) (and (> skoBC1 skoTC1) (and (> skoTC1 0.) (and (> skoBC1 0.) (and (> skoBC1 skoAC1) (and (> 2. skoBC1) (and (> skoAC1 0.) (and (> skoTC1 (/ 3. 2.)) (and (> skoTC1 0.) (and (> (* skoTC1 skoTC1) skoAC1) (> (* skoTC1 (* skoTC1 (+ (+ (* skoAC1 skoAC1) (* skoBC1 skoBC1)) (* skoTC1 skoTC1)))) (* skoBC1 (* skoBC1 (* skoAC1 (* skoAC1 (- 1.)))))))))))))))))

% In GRF format:
(sequent " MetiTarski formula " (antecedent (> (* skoTC1 (* skoTC1 (* skoBC1 (+ (* skoAC1 (- 1.)) skoBC1)))) 0.) (> skoBC1 skoTC1) (> skoTC1 0.) (> skoBC1 0.) (> skoBC1 skoAC1) (> 2. skoBC1) (> skoAC1 0.) (> skoTC1 (/ 3. 2.)) (> skoTC1 0.) (> (* skoTC1 skoTC1) skoAC1)) (succedent (<= (* skoTC1 (* skoTC1 (+ (+ (* skoAC1 skoAC1) (* skoBC1 skoBC1)) (* skoTC1 skoTC1)))) (* skoBC1 (* skoBC1 (* skoAC1 (* skoAC1 (- 1.))))))))
-----[end problem]-----

-----[begin problem]-----
% In Mathematica format:
Timing[Resolve[Exists[{skoTC1,skoBC1,skoAC1}, And[skoTC1*skoTC1*skoBC1*(skoAC1*-1+skoBC1)>0,skoBC1>skoTC1,skoTC1>0,skoBC1>0,0<=skoBC1,skoBC1>skoAC1,2>skoBC1,skoAC1>0,skoTC1>(3/2),skoTC1>0,skoTC1*skoTC1>skoAC1,0<=skoTC1,skoTC1*skoTC1*(skoAC1*skoAC1+skoBC1*skoBC1+skoTC1*skoTC1)>skoBC1*skoBC1*skoAC1*skoAC1*-1]], Reals]]

% In QepcadB format:
(E skoTC1) (E skoBC1) (E skoAC1) [[0<(skoTC1 skoTC1 skoBC1 ((skoAC1 (-1))+skoBC1))]/\[[skoTC1<skoBC1]/\[[0<skoTC1]/\[[0<skoBC1]/\[[0<=skoBC1]/\[[skoAC1<skoBC1]/\[[skoBC1<2]/\[[0<skoAC1]/\[[3/2<skoTC1]/\[[0<skoTC1]/\[[skoAC1<(skoTC1 skoTC1)]/\[[0<=skoTC1]/\[(skoBC1 skoBC1 skoAC1 skoAC1 (-1))<(skoTC1 skoTC1 (((skoAC1 skoAC1)+(skoBC1 skoBC1))+(skoTC1 skoTC1)))]]]]]]]]]]]]].

% In SMTLib2 format:
(declare-fun skoTC1 () Real) (declare-fun skoBC1 () Real) (declare-fun skoAC1 () Real) (assert (and (> (* skoTC1 (* skoTC1 (* skoBC1 (+ (* skoAC1 (- 1.)) skoBC1)))) 0.) (and (> skoBC1 skoTC1) (and (> skoTC1 0.) (and (> skoBC1 0.) (and (<= 0. skoBC1) (and (> skoBC1 skoAC1) (and (> 2. skoBC1) (and (> skoAC1 0.) (and (> skoTC1 (/ 3. 2.)) (and (> skoTC1 0.) (and (> (* skoTC1 skoTC1) skoAC1) (and (<= 0. skoTC1) (> (* skoTC1 (* skoTC1 (+ (+ (* skoAC1 skoAC1) (* skoBC1 skoBC1)) (* skoTC1 skoTC1)))) (* skoBC1 (* skoBC1 (* skoAC1 (* skoAC1 (- 1.)))))))))))))))))))

% In GRF format:
(sequent " MetiTarski formula " (antecedent (> (* skoTC1 (* skoTC1 (* skoBC1 (+ (* skoAC1 (- 1.)) skoBC1)))) 0.) (> skoBC1 skoTC1) (> skoTC1 0.) (> skoBC1 0.) (<= 0. skoBC1) (> skoBC1 skoAC1) (> 2. skoBC1) (> skoAC1 0.) (> skoTC1 (/ 3. 2.)) (> skoTC1 0.) (> (* skoTC1 skoTC1) skoAC1) (<= 0. skoTC1)) (succedent (<= (* skoTC1 (* skoTC1 (+ (+ (* skoAC1 skoAC1) (* skoBC1 skoBC1)) (* skoTC1 skoTC1)))) (* skoBC1 (* skoBC1 (* skoAC1 (* skoAC1 (- 1.))))))))
-----[end problem]-----

-----[begin problem]-----
% In Mathematica format:
Timing[Resolve[Exists[{skoTC1,skoBC1,skoAC1}, And[skoTC1*skoTC1*skoBC1*(skoAC1*-1+skoBC1)<=0,skoTC1<=0,skoBC1>skoTC1,skoBC1>0,0<=skoBC1,skoBC1>skoAC1,2>skoBC1,skoAC1>0,skoTC1>(3/2),skoTC1>0,skoTC1*skoTC1>skoAC1,0<=skoTC1,skoTC1*skoTC1*(skoAC1*skoAC1+skoBC1*skoBC1+skoTC1*skoTC1)>skoBC1*skoBC1*skoAC1*skoAC1*-1]], Reals]]

% In QepcadB format:
(E skoTC1) (E skoBC1) (E skoAC1) [[(skoTC1 skoTC1 skoBC1 ((skoAC1 (-1))+skoBC1))<=0]/\[[skoTC1<=0]/\[[skoTC1<skoBC1]/\[[0<skoBC1]/\[[0<=skoBC1]/\[[skoAC1<skoBC1]/\[[skoBC1<2]/\[[0<skoAC1]/\[[3/2<skoTC1]/\[[0<skoTC1]/\[[skoAC1<(skoTC1 skoTC1)]/\[[0<=skoTC1]/\[(skoBC1 skoBC1 skoAC1 skoAC1 (-1))<(skoTC1 skoTC1 (((skoAC1 skoAC1)+(skoBC1 skoBC1))+(skoTC1 skoTC1)))]]]]]]]]]]]]].

% In SMTLib2 format:
(declare-fun skoTC1 () Real) (declare-fun skoBC1 () Real) (declare-fun skoAC1 () Real) (assert (and (<= (* skoTC1 (* skoTC1 (* skoBC1 (+ (* skoAC1 (- 1.)) skoBC1)))) 0.) (and (<= skoTC1 0.) (and (> skoBC1 skoTC1) (and (> skoBC1 0.) (and (<= 0. skoBC1) (and (> skoBC1 skoAC1) (and (> 2. skoBC1) (and (> skoAC1 0.) (and (> skoTC1 (/ 3. 2.)) (and (> skoTC1 0.) (and (> (* skoTC1 skoTC1) skoAC1) (and (<= 0. skoTC1) (> (* skoTC1 (* skoTC1 (+ (+ (* skoAC1 skoAC1) (* skoBC1 skoBC1)) (* skoTC1 skoTC1)))) (* skoBC1 (* skoBC1 (* skoAC1 (* skoAC1 (- 1.)))))))))))))))))))

% In GRF format:
(sequent " MetiTarski formula " (antecedent (<= (* skoTC1 (* skoTC1 (* skoBC1 (+ (* skoAC1 (- 1.)) skoBC1)))) 0.) (<= skoTC1 0.) (> skoBC1 skoTC1) (> skoBC1 0.) (<= 0. skoBC1) (> skoBC1 skoAC1) (> 2. skoBC1) (> skoAC1 0.) (> skoTC1 (/ 3. 2.)) (> skoTC1 0.) (> (* skoTC1 skoTC1) skoAC1) (<= 0. skoTC1)) (succedent (<= (* skoTC1 (* skoTC1 (+ (+ (* skoAC1 skoAC1) (* skoBC1 skoBC1)) (* skoTC1 skoTC1)))) (* skoBC1 (* skoBC1 (* skoAC1 (* skoAC1 (- 1.))))))))
-----[end problem]-----

-----[begin problem]-----
% In Mathematica format:
Timing[Resolve[Exists[{skoTC1,skoBC1,skoAC1}, And[skoTC1*skoTC1*skoBC1*(skoAC1*-1+skoBC1)<=0,skoBC1<=skoTC1,skoBC1>0,0<=skoBC1,skoBC1>skoAC1,2>skoBC1,skoAC1>0,skoTC1>(3/2),skoTC1>0,skoTC1*skoTC1>skoAC1,0<=skoTC1,skoTC1*skoTC1*(skoAC1*skoAC1+skoBC1*skoBC1+skoTC1*skoTC1)>skoBC1*skoBC1*skoAC1*skoAC1*-1]], Reals]]

% In QepcadB format:
(E skoTC1) (E skoBC1) (E skoAC1) [[(skoTC1 skoTC1 skoBC1 ((skoAC1 (-1))+skoBC1))<=0]/\[[skoBC1<=skoTC1]/\[[0<skoBC1]/\[[0<=skoBC1]/\[[skoAC1<skoBC1]/\[[skoBC1<2]/\[[0<skoAC1]/\[[3/2<skoTC1]/\[[0<skoTC1]/\[[skoAC1<(skoTC1 skoTC1)]/\[[0<=skoTC1]/\[(skoBC1 skoBC1 skoAC1 skoAC1 (-1))<(skoTC1 skoTC1 (((skoAC1 skoAC1)+(skoBC1 skoBC1))+(skoTC1 skoTC1)))]]]]]]]]]]]].

% In SMTLib2 format:
(declare-fun skoTC1 () Real) (declare-fun skoBC1 () Real) (declare-fun skoAC1 () Real) (assert (and (<= (* skoTC1 (* skoTC1 (* skoBC1 (+ (* skoAC1 (- 1.)) skoBC1)))) 0.) (and (<= skoBC1 skoTC1) (and (> skoBC1 0.) (and (<= 0. skoBC1) (and (> skoBC1 skoAC1) (and (> 2. skoBC1) (and (> skoAC1 0.) (and (> skoTC1 (/ 3. 2.)) (and (> skoTC1 0.) (and (> (* skoTC1 skoTC1) skoAC1) (and (<= 0. skoTC1) (> (* skoTC1 (* skoTC1 (+ (+ (* skoAC1 skoAC1) (* skoBC1 skoBC1)) (* skoTC1 skoTC1)))) (* skoBC1 (* skoBC1 (* skoAC1 (* skoAC1 (- 1.))))))))))))))))))

% In GRF format:
(sequent " MetiTarski formula " (antecedent (<= (* skoTC1 (* skoTC1 (* skoBC1 (+ (* skoAC1 (- 1.)) skoBC1)))) 0.) (<= skoBC1 skoTC1) (> skoBC1 0.) (<= 0. skoBC1) (> skoBC1 skoAC1) (> 2. skoBC1) (> skoAC1 0.) (> skoTC1 (/ 3. 2.)) (> skoTC1 0.) (> (* skoTC1 skoTC1) skoAC1) (<= 0. skoTC1)) (succedent (<= (* skoTC1 (* skoTC1 (+ (+ (* skoAC1 skoAC1) (* skoBC1 skoBC1)) (* skoTC1 skoTC1)))) (* skoBC1 (* skoBC1 (* skoAC1 (* skoAC1 (- 1.))))))))
-----[end problem]-----

-----[begin problem]-----
% In Mathematica format:
Timing[Resolve[Exists[{skoTC1,skoBC1,skoAC1}, And[0<=skoAC1,skoTC1*skoTC1*skoBC1*(skoAC1*-1+skoBC1)>0,skoTC1>0,skoBC1>0,0<=skoBC1,skoBC1>skoAC1,2>skoBC1,skoAC1>0,skoTC1>(3/2),skoTC1>0,skoTC1*skoTC1>skoAC1,0<=skoTC1,skoTC1*skoTC1*(skoAC1*skoAC1+skoBC1*skoBC1+skoTC1*skoTC1)>skoBC1*skoBC1*skoAC1*skoAC1*-1]], Reals]]

% In QepcadB format:
(E skoTC1) (E skoBC1) (E skoAC1) [[0<=skoAC1]/\[[0<(skoTC1 skoTC1 skoBC1 ((skoAC1 (-1))+skoBC1))]/\[[0<skoTC1]/\[[0<skoBC1]/\[[0<=skoBC1]/\[[skoAC1<skoBC1]/\[[skoBC1<2]/\[[0<skoAC1]/\[[3/2<skoTC1]/\[[0<skoTC1]/\[[skoAC1<(skoTC1 skoTC1)]/\[[0<=skoTC1]/\[(skoBC1 skoBC1 skoAC1 skoAC1 (-1))<(skoTC1 skoTC1 (((skoAC1 skoAC1)+(skoBC1 skoBC1))+(skoTC1 skoTC1)))]]]]]]]]]]]]].

% In SMTLib2 format:
(declare-fun skoTC1 () Real) (declare-fun skoBC1 () Real) (declare-fun skoAC1 () Real) (assert (and (<= 0. skoAC1) (and (> (* skoTC1 (* skoTC1 (* skoBC1 (+ (* skoAC1 (- 1.)) skoBC1)))) 0.) (and (> skoTC1 0.) (and (> skoBC1 0.) (and (<= 0. skoBC1) (and (> skoBC1 skoAC1) (and (> 2. skoBC1) (and (> skoAC1 0.) (and (> skoTC1 (/ 3. 2.)) (and (> skoTC1 0.) (and (> (* skoTC1 skoTC1) skoAC1) (and (<= 0. skoTC1) (> (* skoTC1 (* skoTC1 (+ (+ (* skoAC1 skoAC1) (* skoBC1 skoBC1)) (* skoTC1 skoTC1)))) (* skoBC1 (* skoBC1 (* skoAC1 (* skoAC1 (- 1.)))))))))))))))))))

% In GRF format:
(sequent " MetiTarski formula " (antecedent (<= 0. skoAC1) (> (* skoTC1 (* skoTC1 (* skoBC1 (+ (* skoAC1 (- 1.)) skoBC1)))) 0.) (> skoTC1 0.) (> skoBC1 0.) (<= 0. skoBC1) (> skoBC1 skoAC1) (> 2. skoBC1) (> skoAC1 0.) (> skoTC1 (/ 3. 2.)) (> skoTC1 0.) (> (* skoTC1 skoTC1) skoAC1) (<= 0. skoTC1)) (succedent (<= (* skoTC1 (* skoTC1 (+ (+ (* skoAC1 skoAC1) (* skoBC1 skoBC1)) (* skoTC1 skoTC1)))) (* skoBC1 (* skoBC1 (* skoAC1 (* skoAC1 (- 1.))))))))
-----[end problem]-----

-----[begin problem]-----
% In Mathematica format:
Timing[Resolve[Exists[{skoTC1,skoBC1,skoAC1}, And[skoTC1*skoTC1*skoBC1*(skoAC1*-1+skoBC1)<=0,skoTC1<=0,skoBC1>0,0<=skoBC1,skoBC1>skoAC1,2>skoBC1,skoAC1>0,skoTC1>(3/2),skoTC1>0,skoTC1*skoTC1>skoAC1,0<=skoTC1,skoTC1*skoTC1*(skoAC1*skoAC1+skoBC1*skoBC1+skoTC1*skoTC1)>skoBC1*skoBC1*skoAC1*skoAC1*-1]], Reals]]

% In QepcadB format:
(E skoTC1) (E skoBC1) (E skoAC1) [[(skoTC1 skoTC1 skoBC1 ((skoAC1 (-1))+skoBC1))<=0]/\[[skoTC1<=0]/\[[0<skoBC1]/\[[0<=skoBC1]/\[[skoAC1<skoBC1]/\[[skoBC1<2]/\[[0<skoAC1]/\[[3/2<skoTC1]/\[[0<skoTC1]/\[[skoAC1<(skoTC1 skoTC1)]/\[[0<=skoTC1]/\[(skoBC1 skoBC1 skoAC1 skoAC1 (-1))<(skoTC1 skoTC1 (((skoAC1 skoAC1)+(skoBC1 skoBC1))+(skoTC1 skoTC1)))]]]]]]]]]]]].

% In SMTLib2 format:
(declare-fun skoTC1 () Real) (declare-fun skoBC1 () Real) (declare-fun skoAC1 () Real) (assert (and (<= (* skoTC1 (* skoTC1 (* skoBC1 (+ (* skoAC1 (- 1.)) skoBC1)))) 0.) (and (<= skoTC1 0.) (and (> skoBC1 0.) (and (<= 0. skoBC1) (and (> skoBC1 skoAC1) (and (> 2. skoBC1) (and (> skoAC1 0.) (and (> skoTC1 (/ 3. 2.)) (and (> skoTC1 0.) (and (> (* skoTC1 skoTC1) skoAC1) (and (<= 0. skoTC1) (> (* skoTC1 (* skoTC1 (+ (+ (* skoAC1 skoAC1) (* skoBC1 skoBC1)) (* skoTC1 skoTC1)))) (* skoBC1 (* skoBC1 (* skoAC1 (* skoAC1 (- 1.))))))))))))))))))

% In GRF format:
(sequent " MetiTarski formula " (antecedent (<= (* skoTC1 (* skoTC1 (* skoBC1 (+ (* skoAC1 (- 1.)) skoBC1)))) 0.) (<= skoTC1 0.) (> skoBC1 0.) (<= 0. skoBC1) (> skoBC1 skoAC1) (> 2. skoBC1) (> skoAC1 0.) (> skoTC1 (/ 3. 2.)) (> skoTC1 0.) (> (* skoTC1 skoTC1) skoAC1) (<= 0. skoTC1)) (succedent (<= (* skoTC1 (* skoTC1 (+ (+ (* skoAC1 skoAC1) (* skoBC1 skoBC1)) (* skoTC1 skoTC1)))) (* skoBC1 (* skoBC1 (* skoAC1 (* skoAC1 (- 1.))))))))
-----[end problem]-----

-----[begin problem]-----
% In Mathematica format:
Timing[Resolve[Exists[{skoTC1,skoBC1,skoAC1}, And[skoTC1*skoTC1*skoBC1*(skoAC1*-1+skoBC1)>0,skoBC1>0,0<=skoBC1,skoBC1>skoAC1,2>skoBC1,skoAC1>0,skoTC1>(3/2),skoTC1>0,skoTC1*skoTC1>skoAC1,0<=skoTC1,skoTC1*skoTC1*(skoAC1*skoAC1+skoBC1*skoBC1+skoTC1*skoTC1)>skoBC1*skoBC1*skoAC1*skoAC1*-1]], Reals]]

% In QepcadB format:
(E skoTC1) (E skoBC1) (E skoAC1) [[0<(skoTC1 skoTC1 skoBC1 ((skoAC1 (-1))+skoBC1))]/\[[0<skoBC1]/\[[0<=skoBC1]/\[[skoAC1<skoBC1]/\[[skoBC1<2]/\[[0<skoAC1]/\[[3/2<skoTC1]/\[[0<skoTC1]/\[[skoAC1<(skoTC1 skoTC1)]/\[[0<=skoTC1]/\[(skoBC1 skoBC1 skoAC1 skoAC1 (-1))<(skoTC1 skoTC1 (((skoAC1 skoAC1)+(skoBC1 skoBC1))+(skoTC1 skoTC1)))]]]]]]]]]]].

% In SMTLib2 format:
(declare-fun skoTC1 () Real) (declare-fun skoBC1 () Real) (declare-fun skoAC1 () Real) (assert (and (> (* skoTC1 (* skoTC1 (* skoBC1 (+ (* skoAC1 (- 1.)) skoBC1)))) 0.) (and (> skoBC1 0.) (and (<= 0. skoBC1) (and (> skoBC1 skoAC1) (and (> 2. skoBC1) (and (> skoAC1 0.) (and (> skoTC1 (/ 3. 2.)) (and (> skoTC1 0.) (and (> (* skoTC1 skoTC1) skoAC1) (and (<= 0. skoTC1) (> (* skoTC1 (* skoTC1 (+ (+ (* skoAC1 skoAC1) (* skoBC1 skoBC1)) (* skoTC1 skoTC1)))) (* skoBC1 (* skoBC1 (* skoAC1 (* skoAC1 (- 1.)))))))))))))))))

% In GRF format:
(sequent " MetiTarski formula " (antecedent (> (* skoTC1 (* skoTC1 (* skoBC1 (+ (* skoAC1 (- 1.)) skoBC1)))) 0.) (> skoBC1 0.) (<= 0. skoBC1) (> skoBC1 skoAC1) (> 2. skoBC1) (> skoAC1 0.) (> skoTC1 (/ 3. 2.)) (> skoTC1 0.) (> (* skoTC1 skoTC1) skoAC1) (<= 0. skoTC1)) (succedent (<= (* skoTC1 (* skoTC1 (+ (+ (* skoAC1 skoAC1) (* skoBC1 skoBC1)) (* skoTC1 skoTC1)))) (* skoBC1 (* skoBC1 (* skoAC1 (* skoAC1 (- 1.))))))))
-----[end problem]-----

-----[begin problem]-----
% In Mathematica format:
Timing[Resolve[Exists[{skoTC1,skoBC1,skoAC1}, And[skoTC1*(skoBC1*(-157079/100000)+skoTC1*(1+skoBC1*-1))<=skoBC1*skoAC1*-1,skoTC1*(skoBC1*(157079/100000)+skoTC1*(-1+skoBC1))>skoBC1*skoAC1,skoTC1*skoTC1*skoBC1*(skoAC1*-1+skoBC1)>0,skoBC1>0,0<=skoBC1,skoBC1>skoAC1,2>skoBC1,skoAC1>0,skoTC1>(3/2),skoTC1>0,skoTC1*skoTC1>skoAC1,0<=skoTC1,skoTC1*skoTC1*(skoAC1*skoAC1+skoBC1*skoBC1+skoTC1*skoTC1)>skoBC1*skoBC1*skoAC1*skoAC1*-1]], Reals]]

% In QepcadB format:
(E skoTC1) (E skoBC1) (E skoAC1) [[(skoTC1 ((skoBC1 (-157079/100000))+(skoTC1 (1+(skoBC1 (-1))))))<=(skoBC1 skoAC1 (-1))]/\[[(skoBC1 skoAC1)<(skoTC1 ((skoBC1 (157079/100000))+(skoTC1 (-1+skoBC1))))]/\[[0<(skoTC1 skoTC1 skoBC1 ((skoAC1 (-1))+skoBC1))]/\[[0<skoBC1]/\[[0<=skoBC1]/\[[skoAC1<skoBC1]/\[[skoBC1<2]/\[[0<skoAC1]/\[[3/2<skoTC1]/\[[0<skoTC1]/\[[skoAC1<(skoTC1 skoTC1)]/\[[0<=skoTC1]/\[(skoBC1 skoBC1 skoAC1 skoAC1 (-1))<(skoTC1 skoTC1 (((skoAC1 skoAC1)+(skoBC1 skoBC1))+(skoTC1 skoTC1)))]]]]]]]]]]]]].

% In SMTLib2 format:
(declare-fun skoTC1 () Real) (declare-fun skoBC1 () Real) (declare-fun skoAC1 () Real) (assert (and (<= (* skoTC1 (+ (* skoBC1 (/ (- 157079.) 100000.)) (* skoTC1 (+ 1. (* skoBC1 (- 1.)))))) (* skoBC1 (* skoAC1 (- 1.)))) (and (> (* skoTC1 (+ (* skoBC1 (/ 157079. 100000.)) (* skoTC1 (+ (- 1.) skoBC1)))) (* skoBC1 skoAC1)) (and (> (* skoTC1 (* skoTC1 (* skoBC1 (+ (* skoAC1 (- 1.)) skoBC1)))) 0.) (and (> skoBC1 0.) (and (<= 0. skoBC1) (and (> skoBC1 skoAC1) (and (> 2. skoBC1) (and (> skoAC1 0.) (and (> skoTC1 (/ 3. 2.)) (and (> skoTC1 0.) (and (> (* skoTC1 skoTC1) skoAC1) (and (<= 0. skoTC1) (> (* skoTC1 (* skoTC1 (+ (+ (* skoAC1 skoAC1) (* skoBC1 skoBC1)) (* skoTC1 skoTC1)))) (* skoBC1 (* skoBC1 (* skoAC1 (* skoAC1 (- 1.)))))))))))))))))))

% In GRF format:
(sequent " MetiTarski formula " (antecedent (<= (* skoTC1 (+ (* skoBC1 (/ (- 157079.) 100000.)) (* skoTC1 (+ 1. (* skoBC1 (- 1.)))))) (* skoBC1 (* skoAC1 (- 1.)))) (> (* skoTC1 (+ (* skoBC1 (/ 157079. 100000.)) (* skoTC1 (+ (- 1.) skoBC1)))) (* skoBC1 skoAC1)) (> (* skoTC1 (* skoTC1 (* skoBC1 (+ (* skoAC1 (- 1.)) skoBC1)))) 0.) (> skoBC1 0.) (<= 0. skoBC1) (> skoBC1 skoAC1) (> 2. skoBC1) (> skoAC1 0.) (> skoTC1 (/ 3. 2.)) (> skoTC1 0.) (> (* skoTC1 skoTC1) skoAC1) (<= 0. skoTC1)) (succedent (<= (* skoTC1 (* skoTC1 (+ (+ (* skoAC1 skoAC1) (* skoBC1 skoBC1)) (* skoTC1 skoTC1)))) (* skoBC1 (* skoBC1 (* skoAC1 (* skoAC1 (- 1.))))))))
-----[end problem]-----

-----[begin problem]-----
% In Mathematica format:
Timing[Resolve[Exists[{skoTC1,skoBC1,skoAC1}, And[skoTC1*(skoBC1*(157079/100000)+skoTC1*(-1+skoBC1))<=skoBC1*skoAC1,skoTC1*(skoBC1*(-157079/100000)+skoTC1*(1+skoBC1*-1))>skoBC1*skoAC1*-1,skoTC1*skoTC1*skoBC1*(skoAC1*-1+skoBC1)>0,skoBC1>0,0<=skoBC1,skoBC1>skoAC1,2>skoBC1,skoAC1>0,skoTC1>(3/2),skoTC1>0,skoTC1*skoTC1>skoAC1,0<=skoTC1,skoTC1*skoTC1*(skoAC1*skoAC1+skoBC1*skoBC1+skoTC1*skoTC1)>skoBC1*skoBC1*skoAC1*skoAC1*-1]], Reals]]

% In QepcadB format:
(E skoTC1) (E skoBC1) (E skoAC1) [[(skoTC1 ((skoBC1 (157079/100000))+(skoTC1 (-1+skoBC1))))<=(skoBC1 skoAC1)]/\[[(skoBC1 skoAC1 (-1))<(skoTC1 ((skoBC1 (-157079/100000))+(skoTC1 (1+(skoBC1 (-1))))))]/\[[0<(skoTC1 skoTC1 skoBC1 ((skoAC1 (-1))+skoBC1))]/\[[0<skoBC1]/\[[0<=skoBC1]/\[[skoAC1<skoBC1]/\[[skoBC1<2]/\[[0<skoAC1]/\[[3/2<skoTC1]/\[[0<skoTC1]/\[[skoAC1<(skoTC1 skoTC1)]/\[[0<=skoTC1]/\[(skoBC1 skoBC1 skoAC1 skoAC1 (-1))<(skoTC1 skoTC1 (((skoAC1 skoAC1)+(skoBC1 skoBC1))+(skoTC1 skoTC1)))]]]]]]]]]]]]].

% In SMTLib2 format:
(declare-fun skoTC1 () Real) (declare-fun skoBC1 () Real) (declare-fun skoAC1 () Real) (assert (and (<= (* skoTC1 (+ (* skoBC1 (/ 157079. 100000.)) (* skoTC1 (+ (- 1.) skoBC1)))) (* skoBC1 skoAC1)) (and (> (* skoTC1 (+ (* skoBC1 (/ (- 157079.) 100000.)) (* skoTC1 (+ 1. (* skoBC1 (- 1.)))))) (* skoBC1 (* skoAC1 (- 1.)))) (and (> (* skoTC1 (* skoTC1 (* skoBC1 (+ (* skoAC1 (- 1.)) skoBC1)))) 0.) (and (> skoBC1 0.) (and (<= 0. skoBC1) (and (> skoBC1 skoAC1) (and (> 2. skoBC1) (and (> skoAC1 0.) (and (> skoTC1 (/ 3. 2.)) (and (> skoTC1 0.) (and (> (* skoTC1 skoTC1) skoAC1) (and (<= 0. skoTC1) (> (* skoTC1 (* skoTC1 (+ (+ (* skoAC1 skoAC1) (* skoBC1 skoBC1)) (* skoTC1 skoTC1)))) (* skoBC1 (* skoBC1 (* skoAC1 (* skoAC1 (- 1.)))))))))))))))))))

% In GRF format:
(sequent " MetiTarski formula " (antecedent (<= (* skoTC1 (+ (* skoBC1 (/ 157079. 100000.)) (* skoTC1 (+ (- 1.) skoBC1)))) (* skoBC1 skoAC1)) (> (* skoTC1 (+ (* skoBC1 (/ (- 157079.) 100000.)) (* skoTC1 (+ 1. (* skoBC1 (- 1.)))))) (* skoBC1 (* skoAC1 (- 1.)))) (> (* skoTC1 (* skoTC1 (* skoBC1 (+ (* skoAC1 (- 1.)) skoBC1)))) 0.) (> skoBC1 0.) (<= 0. skoBC1) (> skoBC1 skoAC1) (> 2. skoBC1) (> skoAC1 0.) (> skoTC1 (/ 3. 2.)) (> skoTC1 0.) (> (* skoTC1 skoTC1) skoAC1) (<= 0. skoTC1)) (succedent (<= (* skoTC1 (* skoTC1 (+ (+ (* skoAC1 skoAC1) (* skoBC1 skoBC1)) (* skoTC1 skoTC1)))) (* skoBC1 (* skoBC1 (* skoAC1 (* skoAC1 (- 1.))))))))
-----[end problem]-----

-----[begin problem]-----
% In Mathematica format:
Timing[Resolve[Exists[{skoTC1,skoBC1,skoAC1}, And[skoAC1==0,skoTC1*skoTC1*(skoAC1*skoAC1+skoBC1*skoBC1+skoTC1*skoTC1)>skoBC1*skoBC1*skoAC1*skoAC1*-1,0<=skoTC1,skoTC1*skoTC1>skoAC1,skoTC1>0,skoTC1>(3/2),skoAC1>0,2>skoBC1,skoBC1>skoAC1,0<=skoBC1,skoBC1>0,skoTC1*skoTC1*skoBC1*(skoAC1*-1+skoBC1)>0]], Reals]]

% In QepcadB format:
(E skoTC1) (E skoBC1) (E skoAC1) [[skoAC1=0]/\[[(skoBC1 skoBC1 skoAC1 skoAC1 (-1))<(skoTC1 skoTC1 (((skoAC1 skoAC1)+(skoBC1 skoBC1))+(skoTC1 skoTC1)))]/\[[0<=skoTC1]/\[[skoAC1<(skoTC1 skoTC1)]/\[[0<skoTC1]/\[[3/2<skoTC1]/\[[0<skoAC1]/\[[skoBC1<2]/\[[skoAC1<skoBC1]/\[[0<=skoBC1]/\[[0<skoBC1]/\[0<(skoTC1 skoTC1 skoBC1 ((skoAC1 (-1))+skoBC1))]]]]]]]]]]]].

% In SMTLib2 format:
(declare-fun skoTC1 () Real) (declare-fun skoBC1 () Real) (declare-fun skoAC1 () Real) (assert (and (= skoAC1 0.) (and (> (* skoTC1 (* skoTC1 (+ (+ (* skoAC1 skoAC1) (* skoBC1 skoBC1)) (* skoTC1 skoTC1)))) (* skoBC1 (* skoBC1 (* skoAC1 (* skoAC1 (- 1.)))))) (and (<= 0. skoTC1) (and (> (* skoTC1 skoTC1) skoAC1) (and (> skoTC1 0.) (and (> skoTC1 (/ 3. 2.)) (and (> skoAC1 0.) (and (> 2. skoBC1) (and (> skoBC1 skoAC1) (and (<= 0. skoBC1) (and (> skoBC1 0.) (> (* skoTC1 (* skoTC1 (* skoBC1 (+ (* skoAC1 (- 1.)) skoBC1)))) 0.)))))))))))))

% In GRF format:
(sequent " MetiTarski formula " (antecedent (= skoAC1 0.) (> (* skoTC1 (* skoTC1 (+ (+ (* skoAC1 skoAC1) (* skoBC1 skoBC1)) (* skoTC1 skoTC1)))) (* skoBC1 (* skoBC1 (* skoAC1 (* skoAC1 (- 1.)))))) (<= 0. skoTC1) (> (* skoTC1 skoTC1) skoAC1) (> skoTC1 0.) (> skoTC1 (/ 3. 2.)) (> skoAC1 0.) (> 2. skoBC1) (> skoBC1 skoAC1) (<= 0. skoBC1) (> skoBC1 0.)) (succedent (<= (* skoTC1 (* skoTC1 (* skoBC1 (+ (* skoAC1 (- 1.)) skoBC1)))) 0.)))
-----[end problem]-----

-----[begin problem]-----
% In Mathematica format:
Timing[Resolve[Exists[{skoTC1,skoBC1,skoAC1}, And[0<=skoAC1,skoTC1*skoTC1*(skoAC1*skoAC1+skoBC1*skoBC1+skoTC1*skoTC1)>skoBC1*skoBC1*skoAC1*skoAC1*-1,0<=skoTC1,skoTC1*skoTC1>skoAC1,skoTC1>0,skoTC1>(3/2),skoAC1>0,2>skoBC1,skoBC1>skoAC1,0<=skoBC1,skoBC1>0,skoTC1*skoTC1*skoBC1*(skoAC1*-1+skoBC1)>0]], Reals]]

% In QepcadB format:
(E skoTC1) (E skoBC1) (E skoAC1) [[0<=skoAC1]/\[[(skoBC1 skoBC1 skoAC1 skoAC1 (-1))<(skoTC1 skoTC1 (((skoAC1 skoAC1)+(skoBC1 skoBC1))+(skoTC1 skoTC1)))]/\[[0<=skoTC1]/\[[skoAC1<(skoTC1 skoTC1)]/\[[0<skoTC1]/\[[3/2<skoTC1]/\[[0<skoAC1]/\[[skoBC1<2]/\[[skoAC1<skoBC1]/\[[0<=skoBC1]/\[[0<skoBC1]/\[0<(skoTC1 skoTC1 skoBC1 ((skoAC1 (-1))+skoBC1))]]]]]]]]]]]].

% In SMTLib2 format:
(declare-fun skoTC1 () Real) (declare-fun skoBC1 () Real) (declare-fun skoAC1 () Real) (assert (and (<= 0. skoAC1) (and (> (* skoTC1 (* skoTC1 (+ (+ (* skoAC1 skoAC1) (* skoBC1 skoBC1)) (* skoTC1 skoTC1)))) (* skoBC1 (* skoBC1 (* skoAC1 (* skoAC1 (- 1.)))))) (and (<= 0. skoTC1) (and (> (* skoTC1 skoTC1) skoAC1) (and (> skoTC1 0.) (and (> skoTC1 (/ 3. 2.)) (and (> skoAC1 0.) (and (> 2. skoBC1) (and (> skoBC1 skoAC1) (and (<= 0. skoBC1) (and (> skoBC1 0.) (> (* skoTC1 (* skoTC1 (* skoBC1 (+ (* skoAC1 (- 1.)) skoBC1)))) 0.)))))))))))))

% In GRF format:
(sequent " MetiTarski formula " (antecedent (<= 0. skoAC1) (> (* skoTC1 (* skoTC1 (+ (+ (* skoAC1 skoAC1) (* skoBC1 skoBC1)) (* skoTC1 skoTC1)))) (* skoBC1 (* skoBC1 (* skoAC1 (* skoAC1 (- 1.)))))) (<= 0. skoTC1) (> (* skoTC1 skoTC1) skoAC1) (> skoTC1 0.) (> skoTC1 (/ 3. 2.)) (> skoAC1 0.) (> 2. skoBC1) (> skoBC1 skoAC1) (<= 0. skoBC1) (> skoBC1 0.)) (succedent (<= (* skoTC1 (* skoTC1 (* skoBC1 (+ (* skoAC1 (- 1.)) skoBC1)))) 0.)))
-----[end problem]-----

-----[begin problem]-----
% In Mathematica format:
Timing[Resolve[Exists[{skoTC1,skoBC1,skoAC1}, And[skoTC1*(skoAC1*-1+skoBC1*(1+skoAC1))<=skoBC1*skoAC1*(-157079/50000),skoTC1*skoTC1*skoBC1*(skoAC1*-1+skoBC1)>0,skoBC1>0,0<=skoBC1,skoBC1>skoAC1,2>skoBC1,skoAC1>0,skoTC1>(3/2),skoTC1>0,skoTC1*skoTC1>skoAC1,0<=skoTC1,skoTC1*skoTC1*(skoAC1*skoAC1+skoBC1*skoBC1+skoTC1*skoTC1)>skoBC1*skoBC1*skoAC1*skoAC1*-1]], Reals]]

% In QepcadB format:
(E skoTC1) (E skoBC1) (E skoAC1) [[(skoTC1 ((skoAC1 (-1))+(skoBC1 (1+skoAC1))))<=(skoBC1 skoAC1 (-157079/50000))]/\[[0<(skoTC1 skoTC1 skoBC1 ((skoAC1 (-1))+skoBC1))]/\[[0<skoBC1]/\[[0<=skoBC1]/\[[skoAC1<skoBC1]/\[[skoBC1<2]/\[[0<skoAC1]/\[[3/2<skoTC1]/\[[0<skoTC1]/\[[skoAC1<(skoTC1 skoTC1)]/\[[0<=skoTC1]/\[(skoBC1 skoBC1 skoAC1 skoAC1 (-1))<(skoTC1 skoTC1 (((skoAC1 skoAC1)+(skoBC1 skoBC1))+(skoTC1 skoTC1)))]]]]]]]]]]]].

% In SMTLib2 format:
(declare-fun skoTC1 () Real) (declare-fun skoBC1 () Real) (declare-fun skoAC1 () Real) (assert (and (<= (* skoTC1 (+ (* skoAC1 (- 1.)) (* skoBC1 (+ 1. skoAC1)))) (* skoBC1 (* skoAC1 (/ (- 157079.) 50000.)))) (and (> (* skoTC1 (* skoTC1 (* skoBC1 (+ (* skoAC1 (- 1.)) skoBC1)))) 0.) (and (> skoBC1 0.) (and (<= 0. skoBC1) (and (> skoBC1 skoAC1) (and (> 2. skoBC1) (and (> skoAC1 0.) (and (> skoTC1 (/ 3. 2.)) (and (> skoTC1 0.) (and (> (* skoTC1 skoTC1) skoAC1) (and (<= 0. skoTC1) (> (* skoTC1 (* skoTC1 (+ (+ (* skoAC1 skoAC1) (* skoBC1 skoBC1)) (* skoTC1 skoTC1)))) (* skoBC1 (* skoBC1 (* skoAC1 (* skoAC1 (- 1.))))))))))))))))))

% In GRF format:
(sequent " MetiTarski formula " (antecedent (<= (* skoTC1 (+ (* skoAC1 (- 1.)) (* skoBC1 (+ 1. skoAC1)))) (* skoBC1 (* skoAC1 (/ (- 157079.) 50000.)))) (> (* skoTC1 (* skoTC1 (* skoBC1 (+ (* skoAC1 (- 1.)) skoBC1)))) 0.) (> skoBC1 0.) (<= 0. skoBC1) (> skoBC1 skoAC1) (> 2. skoBC1) (> skoAC1 0.) (> skoTC1 (/ 3. 2.)) (> skoTC1 0.) (> (* skoTC1 skoTC1) skoAC1) (<= 0. skoTC1)) (succedent (<= (* skoTC1 (* skoTC1 (+ (+ (* skoAC1 skoAC1) (* skoBC1 skoBC1)) (* skoTC1 skoTC1)))) (* skoBC1 (* skoBC1 (* skoAC1 (* skoAC1 (- 1.))))))))
-----[end problem]-----

-----[begin problem]-----
% In Mathematica format:
Timing[Resolve[Exists[{skoTC1,skoBC1,skoAC1}, And[skoTC1*(skoAC1+skoBC1*(-1+skoAC1*-1))<=skoBC1*skoAC1*(157079/50000),skoTC1*skoTC1*skoBC1*(skoAC1*-1+skoBC1)>0,skoBC1>0,0<=skoBC1,skoBC1>skoAC1,2>skoBC1,skoAC1>0,skoTC1>(3/2),skoTC1>0,skoTC1*skoTC1>skoAC1,0<=skoTC1,skoTC1*skoTC1*(skoAC1*skoAC1+skoBC1*skoBC1+skoTC1*skoTC1)>skoBC1*skoBC1*skoAC1*skoAC1*-1]], Reals]]

% In QepcadB format:
(E skoTC1) (E skoBC1) (E skoAC1) [[(skoTC1 (skoAC1+(skoBC1 (-1+(skoAC1 (-1))))))<=(skoBC1 skoAC1 (157079/50000))]/\[[0<(skoTC1 skoTC1 skoBC1 ((skoAC1 (-1))+skoBC1))]/\[[0<skoBC1]/\[[0<=skoBC1]/\[[skoAC1<skoBC1]/\[[skoBC1<2]/\[[0<skoAC1]/\[[3/2<skoTC1]/\[[0<skoTC1]/\[[skoAC1<(skoTC1 skoTC1)]/\[[0<=skoTC1]/\[(skoBC1 skoBC1 skoAC1 skoAC1 (-1))<(skoTC1 skoTC1 (((skoAC1 skoAC1)+(skoBC1 skoBC1))+(skoTC1 skoTC1)))]]]]]]]]]]]].

% In SMTLib2 format:
(declare-fun skoTC1 () Real) (declare-fun skoBC1 () Real) (declare-fun skoAC1 () Real) (assert (and (<= (* skoTC1 (+ skoAC1 (* skoBC1 (+ (- 1.) (* skoAC1 (- 1.)))))) (* skoBC1 (* skoAC1 (/ 157079. 50000.)))) (and (> (* skoTC1 (* skoTC1 (* skoBC1 (+ (* skoAC1 (- 1.)) skoBC1)))) 0.) (and (> skoBC1 0.) (and (<= 0. skoBC1) (and (> skoBC1 skoAC1) (and (> 2. skoBC1) (and (> skoAC1 0.) (and (> skoTC1 (/ 3. 2.)) (and (> skoTC1 0.) (and (> (* skoTC1 skoTC1) skoAC1) (and (<= 0. skoTC1) (> (* skoTC1 (* skoTC1 (+ (+ (* skoAC1 skoAC1) (* skoBC1 skoBC1)) (* skoTC1 skoTC1)))) (* skoBC1 (* skoBC1 (* skoAC1 (* skoAC1 (- 1.))))))))))))))))))

% In GRF format:
(sequent " MetiTarski formula " (antecedent (<= (* skoTC1 (+ skoAC1 (* skoBC1 (+ (- 1.) (* skoAC1 (- 1.)))))) (* skoBC1 (* skoAC1 (/ 157079. 50000.)))) (> (* skoTC1 (* skoTC1 (* skoBC1 (+ (* skoAC1 (- 1.)) skoBC1)))) 0.) (> skoBC1 0.) (<= 0. skoBC1) (> skoBC1 skoAC1) (> 2. skoBC1) (> skoAC1 0.) (> skoTC1 (/ 3. 2.)) (> skoTC1 0.) (> (* skoTC1 skoTC1) skoAC1) (<= 0. skoTC1)) (succedent (<= (* skoTC1 (* skoTC1 (+ (+ (* skoAC1 skoAC1) (* skoBC1 skoBC1)) (* skoTC1 skoTC1)))) (* skoBC1 (* skoBC1 (* skoAC1 (* skoAC1 (- 1.))))))))
-----[end problem]-----

-----[begin problem]-----
% In Mathematica format:
Timing[Resolve[Exists[{skoTC1,skoBC1,skoAC1}, And[skoTC1*skoBC1*(skoAC1*skoAC1*-1+skoBC1*skoAC1)<=0,skoTC1*(skoAC1+skoBC1*(-1+skoAC1*-1))<=skoBC1*skoAC1*(157079/50000),skoTC1*(skoAC1*-1+skoBC1*(1+skoAC1))>skoBC1*skoAC1*(-157079/50000),skoTC1*skoTC1*skoBC1*(skoAC1*-1+skoBC1)>0,skoBC1>0,0<=skoBC1,skoBC1>skoAC1,2>skoBC1,skoAC1>0,skoTC1>(3/2),skoTC1>0,skoTC1*skoTC1>skoAC1,0<=skoTC1,skoTC1*skoTC1*(skoAC1*skoAC1+skoBC1*skoBC1+skoTC1*skoTC1)>skoBC1*skoBC1*skoAC1*skoAC1*-1]], Reals]]

% In QepcadB format:
(E skoTC1) (E skoBC1) (E skoAC1) [[(skoTC1 skoBC1 ((skoAC1 skoAC1 (-1))+(skoBC1 skoAC1)))<=0]/\[[(skoTC1 (skoAC1+(skoBC1 (-1+(skoAC1 (-1))))))<=(skoBC1 skoAC1 (157079/50000))]/\[[(skoBC1 skoAC1 (-157079/50000))<(skoTC1 ((skoAC1 (-1))+(skoBC1 (1+skoAC1))))]/\[[0<(skoTC1 skoTC1 skoBC1 ((skoAC1 (-1))+skoBC1))]/\[[0<skoBC1]/\[[0<=skoBC1]/\[[skoAC1<skoBC1]/\[[skoBC1<2]/\[[0<skoAC1]/\[[3/2<skoTC1]/\[[0<skoTC1]/\[[skoAC1<(skoTC1 skoTC1)]/\[[0<=skoTC1]/\[(skoBC1 skoBC1 skoAC1 skoAC1 (-1))<(skoTC1 skoTC1 (((skoAC1 skoAC1)+(skoBC1 skoBC1))+(skoTC1 skoTC1)))]]]]]]]]]]]]]].

% In SMTLib2 format:
(declare-fun skoTC1 () Real) (declare-fun skoBC1 () Real) (declare-fun skoAC1 () Real) (assert (and (<= (* skoTC1 (* skoBC1 (+ (* skoAC1 (* skoAC1 (- 1.))) (* skoBC1 skoAC1)))) 0.) (and (<= (* skoTC1 (+ skoAC1 (* skoBC1 (+ (- 1.) (* skoAC1 (- 1.)))))) (* skoBC1 (* skoAC1 (/ 157079. 50000.)))) (and (> (* skoTC1 (+ (* skoAC1 (- 1.)) (* skoBC1 (+ 1. skoAC1)))) (* skoBC1 (* skoAC1 (/ (- 157079.) 50000.)))) (and (> (* skoTC1 (* skoTC1 (* skoBC1 (+ (* skoAC1 (- 1.)) skoBC1)))) 0.) (and (> skoBC1 0.) (and (<= 0. skoBC1) (and (> skoBC1 skoAC1) (and (> 2. skoBC1) (and (> skoAC1 0.) (and (> skoTC1 (/ 3. 2.)) (and (> skoTC1 0.) (and (> (* skoTC1 skoTC1) skoAC1) (and (<= 0. skoTC1) (> (* skoTC1 (* skoTC1 (+ (+ (* skoAC1 skoAC1) (* skoBC1 skoBC1)) (* skoTC1 skoTC1)))) (* skoBC1 (* skoBC1 (* skoAC1 (* skoAC1 (- 1.))))))))))))))))))))

% In GRF format:
(sequent " MetiTarski formula " (antecedent (<= (* skoTC1 (* skoBC1 (+ (* skoAC1 (* skoAC1 (- 1.))) (* skoBC1 skoAC1)))) 0.) (<= (* skoTC1 (+ skoAC1 (* skoBC1 (+ (- 1.) (* skoAC1 (- 1.)))))) (* skoBC1 (* skoAC1 (/ 157079. 50000.)))) (> (* skoTC1 (+ (* skoAC1 (- 1.)) (* skoBC1 (+ 1. skoAC1)))) (* skoBC1 (* skoAC1 (/ (- 157079.) 50000.)))) (> (* skoTC1 (* skoTC1 (* skoBC1 (+ (* skoAC1 (- 1.)) skoBC1)))) 0.) (> skoBC1 0.) (<= 0. skoBC1) (> skoBC1 skoAC1) (> 2. skoBC1) (> skoAC1 0.) (> skoTC1 (/ 3. 2.)) (> skoTC1 0.) (> (* skoTC1 skoTC1) skoAC1) (<= 0. skoTC1)) (succedent (<= (* skoTC1 (* skoTC1 (+ (+ (* skoAC1 skoAC1) (* skoBC1 skoBC1)) (* skoTC1 skoTC1)))) (* skoBC1 (* skoBC1 (* skoAC1 (* skoAC1 (- 1.))))))))
-----[end problem]-----

-----[begin problem]-----
% In Mathematica format:
Timing[Resolve[Exists[{skoTC1,skoBC1,skoAC1}, And[skoTC1*skoBC1*(skoAC1*skoAC1*-1+skoBC1*skoAC1)>0,skoTC1*skoTC1*skoBC1*(skoAC1*-1+skoBC1)>0,skoBC1>0,0<=skoBC1,skoBC1>skoAC1,2>skoBC1,skoAC1>0,skoTC1>(3/2),skoTC1>0,skoTC1*skoTC1>skoAC1,0<=skoTC1,skoTC1*skoTC1*(skoAC1*skoAC1+skoBC1*skoBC1+skoTC1*skoTC1)>skoBC1*skoBC1*skoAC1*skoAC1*-1]], Reals]]

% In QepcadB format:
(E skoTC1) (E skoBC1) (E skoAC1) [[0<(skoTC1 skoBC1 ((skoAC1 skoAC1 (-1))+(skoBC1 skoAC1)))]/\[[0<(skoTC1 skoTC1 skoBC1 ((skoAC1 (-1))+skoBC1))]/\[[0<skoBC1]/\[[0<=skoBC1]/\[[skoAC1<skoBC1]/\[[skoBC1<2]/\[[0<skoAC1]/\[[3/2<skoTC1]/\[[0<skoTC1]/\[[skoAC1<(skoTC1 skoTC1)]/\[[0<=skoTC1]/\[(skoBC1 skoBC1 skoAC1 skoAC1 (-1))<(skoTC1 skoTC1 (((skoAC1 skoAC1)+(skoBC1 skoBC1))+(skoTC1 skoTC1)))]]]]]]]]]]]].

% In SMTLib2 format:
(declare-fun skoTC1 () Real) (declare-fun skoBC1 () Real) (declare-fun skoAC1 () Real) (assert (and (> (* skoTC1 (* skoBC1 (+ (* skoAC1 (* skoAC1 (- 1.))) (* skoBC1 skoAC1)))) 0.) (and (> (* skoTC1 (* skoTC1 (* skoBC1 (+ (* skoAC1 (- 1.)) skoBC1)))) 0.) (and (> skoBC1 0.) (and (<= 0. skoBC1) (and (> skoBC1 skoAC1) (and (> 2. skoBC1) (and (> skoAC1 0.) (and (> skoTC1 (/ 3. 2.)) (and (> skoTC1 0.) (and (> (* skoTC1 skoTC1) skoAC1) (and (<= 0. skoTC1) (> (* skoTC1 (* skoTC1 (+ (+ (* skoAC1 skoAC1) (* skoBC1 skoBC1)) (* skoTC1 skoTC1)))) (* skoBC1 (* skoBC1 (* skoAC1 (* skoAC1 (- 1.))))))))))))))))))

% In GRF format:
(sequent " MetiTarski formula " (antecedent (> (* skoTC1 (* skoBC1 (+ (* skoAC1 (* skoAC1 (- 1.))) (* skoBC1 skoAC1)))) 0.) (> (* skoTC1 (* skoTC1 (* skoBC1 (+ (* skoAC1 (- 1.)) skoBC1)))) 0.) (> skoBC1 0.) (<= 0. skoBC1) (> skoBC1 skoAC1) (> 2. skoBC1) (> skoAC1 0.) (> skoTC1 (/ 3. 2.)) (> skoTC1 0.) (> (* skoTC1 skoTC1) skoAC1) (<= 0. skoTC1)) (succedent (<= (* skoTC1 (* skoTC1 (+ (+ (* skoAC1 skoAC1) (* skoBC1 skoBC1)) (* skoTC1 skoTC1)))) (* skoBC1 (* skoBC1 (* skoAC1 (* skoAC1 (- 1.))))))))
-----[end problem]-----

-----[begin problem]-----
% In Mathematica format:
Timing[Resolve[Exists[{skoTC1,skoBC1,skoAC1}, And[skoTC1*skoBC1*(skoAC1*skoAC1*-1+skoBC1*skoAC1)>0,skoBC1>skoTC1,skoTC1>0,skoTC1*skoTC1*skoBC1*(skoAC1*-1+skoBC1)>0,skoBC1>0,skoBC1>skoAC1,2>skoBC1,skoAC1>0,skoTC1>(3/2),skoTC1>0,skoTC1*skoTC1>skoAC1,skoTC1*skoTC1*(skoAC1*skoAC1+skoBC1*skoBC1+skoTC1*skoTC1)>skoBC1*skoBC1*skoAC1*skoAC1*-1]], Reals]]

% In QepcadB format:
(E skoTC1) (E skoBC1) (E skoAC1) [[0<(skoTC1 skoBC1 ((skoAC1 skoAC1 (-1))+(skoBC1 skoAC1)))]/\[[skoTC1<skoBC1]/\[[0<skoTC1]/\[[0<(skoTC1 skoTC1 skoBC1 ((skoAC1 (-1))+skoBC1))]/\[[0<skoBC1]/\[[skoAC1<skoBC1]/\[[skoBC1<2]/\[[0<skoAC1]/\[[3/2<skoTC1]/\[[0<skoTC1]/\[[skoAC1<(skoTC1 skoTC1)]/\[(skoBC1 skoBC1 skoAC1 skoAC1 (-1))<(skoTC1 skoTC1 (((skoAC1 skoAC1)+(skoBC1 skoBC1))+(skoTC1 skoTC1)))]]]]]]]]]]]].

% In SMTLib2 format:
(declare-fun skoTC1 () Real) (declare-fun skoBC1 () Real) (declare-fun skoAC1 () Real) (assert (and (> (* skoTC1 (* skoBC1 (+ (* skoAC1 (* skoAC1 (- 1.))) (* skoBC1 skoAC1)))) 0.) (and (> skoBC1 skoTC1) (and (> skoTC1 0.) (and (> (* skoTC1 (* skoTC1 (* skoBC1 (+ (* skoAC1 (- 1.)) skoBC1)))) 0.) (and (> skoBC1 0.) (and (> skoBC1 skoAC1) (and (> 2. skoBC1) (and (> skoAC1 0.) (and (> skoTC1 (/ 3. 2.)) (and (> skoTC1 0.) (and (> (* skoTC1 skoTC1) skoAC1) (> (* skoTC1 (* skoTC1 (+ (+ (* skoAC1 skoAC1) (* skoBC1 skoBC1)) (* skoTC1 skoTC1)))) (* skoBC1 (* skoBC1 (* skoAC1 (* skoAC1 (- 1.))))))))))))))))))

% In GRF format:
(sequent " MetiTarski formula " (antecedent (> (* skoTC1 (* skoBC1 (+ (* skoAC1 (* skoAC1 (- 1.))) (* skoBC1 skoAC1)))) 0.) (> skoBC1 skoTC1) (> skoTC1 0.) (> (* skoTC1 (* skoTC1 (* skoBC1 (+ (* skoAC1 (- 1.)) skoBC1)))) 0.) (> skoBC1 0.) (> skoBC1 skoAC1) (> 2. skoBC1) (> skoAC1 0.) (> skoTC1 (/ 3. 2.)) (> skoTC1 0.) (> (* skoTC1 skoTC1) skoAC1)) (succedent (<= (* skoTC1 (* skoTC1 (+ (+ (* skoAC1 skoAC1) (* skoBC1 skoBC1)) (* skoTC1 skoTC1)))) (* skoBC1 (* skoBC1 (* skoAC1 (* skoAC1 (- 1.))))))))
-----[end problem]-----

-----[begin problem]-----
% In Mathematica format:
Timing[Resolve[Exists[{skoTC1,skoBC1,skoAC1}, And[skoTC1*skoBC1*(skoAC1*skoAC1*-1+skoBC1*skoAC1)>0,skoBC1>skoTC1,skoTC1>0,skoTC1*skoTC1*skoBC1*(skoAC1*-1+skoBC1)>0,skoBC1>0,0<=skoBC1,skoBC1>skoAC1,2>skoBC1,skoAC1>0,skoTC1>(3/2),skoTC1>0,skoTC1*skoTC1>skoAC1,0<=skoTC1,skoTC1*skoTC1*(skoAC1*skoAC1+skoBC1*skoBC1+skoTC1*skoTC1)>skoBC1*skoBC1*skoAC1*skoAC1*-1]], Reals]]

% In QepcadB format:
(E skoTC1) (E skoBC1) (E skoAC1) [[0<(skoTC1 skoBC1 ((skoAC1 skoAC1 (-1))+(skoBC1 skoAC1)))]/\[[skoTC1<skoBC1]/\[[0<skoTC1]/\[[0<(skoTC1 skoTC1 skoBC1 ((skoAC1 (-1))+skoBC1))]/\[[0<skoBC1]/\[[0<=skoBC1]/\[[skoAC1<skoBC1]/\[[skoBC1<2]/\[[0<skoAC1]/\[[3/2<skoTC1]/\[[0<skoTC1]/\[[skoAC1<(skoTC1 skoTC1)]/\[[0<=skoTC1]/\[(skoBC1 skoBC1 skoAC1 skoAC1 (-1))<(skoTC1 skoTC1 (((skoAC1 skoAC1)+(skoBC1 skoBC1))+(skoTC1 skoTC1)))]]]]]]]]]]]]]].

% In SMTLib2 format:
(declare-fun skoTC1 () Real) (declare-fun skoBC1 () Real) (declare-fun skoAC1 () Real) (assert (and (> (* skoTC1 (* skoBC1 (+ (* skoAC1 (* skoAC1 (- 1.))) (* skoBC1 skoAC1)))) 0.) (and (> skoBC1 skoTC1) (and (> skoTC1 0.) (and (> (* skoTC1 (* skoTC1 (* skoBC1 (+ (* skoAC1 (- 1.)) skoBC1)))) 0.) (and (> skoBC1 0.) (and (<= 0. skoBC1) (and (> skoBC1 skoAC1) (and (> 2. skoBC1) (and (> skoAC1 0.) (and (> skoTC1 (/ 3. 2.)) (and (> skoTC1 0.) (and (> (* skoTC1 skoTC1) skoAC1) (and (<= 0. skoTC1) (> (* skoTC1 (* skoTC1 (+ (+ (* skoAC1 skoAC1) (* skoBC1 skoBC1)) (* skoTC1 skoTC1)))) (* skoBC1 (* skoBC1 (* skoAC1 (* skoAC1 (- 1.))))))))))))))))))))

% In GRF format:
(sequent " MetiTarski formula " (antecedent (> (* skoTC1 (* skoBC1 (+ (* skoAC1 (* skoAC1 (- 1.))) (* skoBC1 skoAC1)))) 0.) (> skoBC1 skoTC1) (> skoTC1 0.) (> (* skoTC1 (* skoTC1 (* skoBC1 (+ (* skoAC1 (- 1.)) skoBC1)))) 0.) (> skoBC1 0.) (<= 0. skoBC1) (> skoBC1 skoAC1) (> 2. skoBC1) (> skoAC1 0.) (> skoTC1 (/ 3. 2.)) (> skoTC1 0.) (> (* skoTC1 skoTC1) skoAC1) (<= 0. skoTC1)) (succedent (<= (* skoTC1 (* skoTC1 (+ (+ (* skoAC1 skoAC1) (* skoBC1 skoBC1)) (* skoTC1 skoTC1)))) (* skoBC1 (* skoBC1 (* skoAC1 (* skoAC1 (- 1.))))))))
-----[end problem]-----

-----[begin problem]-----
% In Mathematica format:
Timing[Resolve[Exists[{skoTC1,skoBC1,skoAC1}, And[skoTC1*skoBC1*(skoAC1*skoAC1*-1+skoBC1*skoAC1)<=0,skoTC1<=0,skoBC1>skoTC1,skoTC1*skoTC1*skoBC1*(skoAC1*-1+skoBC1)>0,skoBC1>0,0<=skoBC1,skoBC1>skoAC1,2>skoBC1,skoAC1>0,skoTC1>(3/2),skoTC1>0,skoTC1*skoTC1>skoAC1,0<=skoTC1,skoTC1*skoTC1*(skoAC1*skoAC1+skoBC1*skoBC1+skoTC1*skoTC1)>skoBC1*skoBC1*skoAC1*skoAC1*-1]], Reals]]

% In QepcadB format:
(E skoTC1) (E skoBC1) (E skoAC1) [[(skoTC1 skoBC1 ((skoAC1 skoAC1 (-1))+(skoBC1 skoAC1)))<=0]/\[[skoTC1<=0]/\[[skoTC1<skoBC1]/\[[0<(skoTC1 skoTC1 skoBC1 ((skoAC1 (-1))+skoBC1))]/\[[0<skoBC1]/\[[0<=skoBC1]/\[[skoAC1<skoBC1]/\[[skoBC1<2]/\[[0<skoAC1]/\[[3/2<skoTC1]/\[[0<skoTC1]/\[[skoAC1<(skoTC1 skoTC1)]/\[[0<=skoTC1]/\[(skoBC1 skoBC1 skoAC1 skoAC1 (-1))<(skoTC1 skoTC1 (((skoAC1 skoAC1)+(skoBC1 skoBC1))+(skoTC1 skoTC1)))]]]]]]]]]]]]]].

% In SMTLib2 format:
(declare-fun skoTC1 () Real) (declare-fun skoBC1 () Real) (declare-fun skoAC1 () Real) (assert (and (<= (* skoTC1 (* skoBC1 (+ (* skoAC1 (* skoAC1 (- 1.))) (* skoBC1 skoAC1)))) 0.) (and (<= skoTC1 0.) (and (> skoBC1 skoTC1) (and (> (* skoTC1 (* skoTC1 (* skoBC1 (+ (* skoAC1 (- 1.)) skoBC1)))) 0.) (and (> skoBC1 0.) (and (<= 0. skoBC1) (and (> skoBC1 skoAC1) (and (> 2. skoBC1) (and (> skoAC1 0.) (and (> skoTC1 (/ 3. 2.)) (and (> skoTC1 0.) (and (> (* skoTC1 skoTC1) skoAC1) (and (<= 0. skoTC1) (> (* skoTC1 (* skoTC1 (+ (+ (* skoAC1 skoAC1) (* skoBC1 skoBC1)) (* skoTC1 skoTC1)))) (* skoBC1 (* skoBC1 (* skoAC1 (* skoAC1 (- 1.))))))))))))))))))))

% In GRF format:
(sequent " MetiTarski formula " (antecedent (<= (* skoTC1 (* skoBC1 (+ (* skoAC1 (* skoAC1 (- 1.))) (* skoBC1 skoAC1)))) 0.) (<= skoTC1 0.) (> skoBC1 skoTC1) (> (* skoTC1 (* skoTC1 (* skoBC1 (+ (* skoAC1 (- 1.)) skoBC1)))) 0.) (> skoBC1 0.) (<= 0. skoBC1) (> skoBC1 skoAC1) (> 2. skoBC1) (> skoAC1 0.) (> skoTC1 (/ 3. 2.)) (> skoTC1 0.) (> (* skoTC1 skoTC1) skoAC1) (<= 0. skoTC1)) (succedent (<= (* skoTC1 (* skoTC1 (+ (+ (* skoAC1 skoAC1) (* skoBC1 skoBC1)) (* skoTC1 skoTC1)))) (* skoBC1 (* skoBC1 (* skoAC1 (* skoAC1 (- 1.))))))))
-----[end problem]-----

-----[begin problem]-----
% In Mathematica format:
Timing[Resolve[Exists[{skoTC1,skoBC1,skoAC1}, And[skoTC1*skoBC1*(skoAC1*skoAC1*-1+skoBC1*skoAC1)<=0,skoBC1<=skoTC1,skoTC1*skoTC1*skoBC1*(skoAC1*-1+skoBC1)>0,skoBC1>0,0<=skoBC1,skoBC1>skoAC1,2>skoBC1,skoAC1>0,skoTC1>(3/2),skoTC1>0,skoTC1*skoTC1>skoAC1,0<=skoTC1,skoTC1*skoTC1*(skoAC1*skoAC1+skoBC1*skoBC1+skoTC1*skoTC1)>skoBC1*skoBC1*skoAC1*skoAC1*-1]], Reals]]

% In QepcadB format:
(E skoTC1) (E skoBC1) (E skoAC1) [[(skoTC1 skoBC1 ((skoAC1 skoAC1 (-1))+(skoBC1 skoAC1)))<=0]/\[[skoBC1<=skoTC1]/\[[0<(skoTC1 skoTC1 skoBC1 ((skoAC1 (-1))+skoBC1))]/\[[0<skoBC1]/\[[0<=skoBC1]/\[[skoAC1<skoBC1]/\[[skoBC1<2]/\[[0<skoAC1]/\[[3/2<skoTC1]/\[[0<skoTC1]/\[[skoAC1<(skoTC1 skoTC1)]/\[[0<=skoTC1]/\[(skoBC1 skoBC1 skoAC1 skoAC1 (-1))<(skoTC1 skoTC1 (((skoAC1 skoAC1)+(skoBC1 skoBC1))+(skoTC1 skoTC1)))]]]]]]]]]]]]].

% In SMTLib2 format:
(declare-fun skoTC1 () Real) (declare-fun skoBC1 () Real) (declare-fun skoAC1 () Real) (assert (and (<= (* skoTC1 (* skoBC1 (+ (* skoAC1 (* skoAC1 (- 1.))) (* skoBC1 skoAC1)))) 0.) (and (<= skoBC1 skoTC1) (and (> (* skoTC1 (* skoTC1 (* skoBC1 (+ (* skoAC1 (- 1.)) skoBC1)))) 0.) (and (> skoBC1 0.) (and (<= 0. skoBC1) (and (> skoBC1 skoAC1) (and (> 2. skoBC1) (and (> skoAC1 0.) (and (> skoTC1 (/ 3. 2.)) (and (> skoTC1 0.) (and (> (* skoTC1 skoTC1) skoAC1) (and (<= 0. skoTC1) (> (* skoTC1 (* skoTC1 (+ (+ (* skoAC1 skoAC1) (* skoBC1 skoBC1)) (* skoTC1 skoTC1)))) (* skoBC1 (* skoBC1 (* skoAC1 (* skoAC1 (- 1.)))))))))))))))))))

% In GRF format:
(sequent " MetiTarski formula " (antecedent (<= (* skoTC1 (* skoBC1 (+ (* skoAC1 (* skoAC1 (- 1.))) (* skoBC1 skoAC1)))) 0.) (<= skoBC1 skoTC1) (> (* skoTC1 (* skoTC1 (* skoBC1 (+ (* skoAC1 (- 1.)) skoBC1)))) 0.) (> skoBC1 0.) (<= 0. skoBC1) (> skoBC1 skoAC1) (> 2. skoBC1) (> skoAC1 0.) (> skoTC1 (/ 3. 2.)) (> skoTC1 0.) (> (* skoTC1 skoTC1) skoAC1) (<= 0. skoTC1)) (succedent (<= (* skoTC1 (* skoTC1 (+ (+ (* skoAC1 skoAC1) (* skoBC1 skoBC1)) (* skoTC1 skoTC1)))) (* skoBC1 (* skoBC1 (* skoAC1 (* skoAC1 (- 1.))))))))
-----[end problem]-----

-----[begin problem]-----
% In Mathematica format:
Timing[Resolve[Exists[{skoTC1,skoBC1,skoAC1}, And[skoAC1*-1>skoTC1,skoTC1*skoBC1*(skoAC1*skoAC1*-1+skoBC1*skoAC1)>0,skoTC1>0,skoTC1*skoTC1*skoBC1*(skoAC1*-1+skoBC1)>0,skoBC1>0,skoBC1>skoAC1,2>skoBC1,skoAC1>0,skoTC1>(3/2),skoTC1>0,skoTC1*skoTC1>skoAC1,skoTC1*skoTC1*(skoAC1*skoAC1+skoBC1*skoBC1+skoTC1*skoTC1)>skoBC1*skoBC1*skoAC1*skoAC1*-1]], Reals]]

% In QepcadB format:
(E skoTC1) (E skoBC1) (E skoAC1) [[skoTC1<(skoAC1 (-1))]/\[[0<(skoTC1 skoBC1 ((skoAC1 skoAC1 (-1))+(skoBC1 skoAC1)))]/\[[0<skoTC1]/\[[0<(skoTC1 skoTC1 skoBC1 ((skoAC1 (-1))+skoBC1))]/\[[0<skoBC1]/\[[skoAC1<skoBC1]/\[[skoBC1<2]/\[[0<skoAC1]/\[[3/2<skoTC1]/\[[0<skoTC1]/\[[skoAC1<(skoTC1 skoTC1)]/\[(skoBC1 skoBC1 skoAC1 skoAC1 (-1))<(skoTC1 skoTC1 (((skoAC1 skoAC1)+(skoBC1 skoBC1))+(skoTC1 skoTC1)))]]]]]]]]]]]].

% In SMTLib2 format:
(declare-fun skoTC1 () Real) (declare-fun skoBC1 () Real) (declare-fun skoAC1 () Real) (assert (and (> (* skoAC1 (- 1.)) skoTC1) (and (> (* skoTC1 (* skoBC1 (+ (* skoAC1 (* skoAC1 (- 1.))) (* skoBC1 skoAC1)))) 0.) (and (> skoTC1 0.) (and (> (* skoTC1 (* skoTC1 (* skoBC1 (+ (* skoAC1 (- 1.)) skoBC1)))) 0.) (and (> skoBC1 0.) (and (> skoBC1 skoAC1) (and (> 2. skoBC1) (and (> skoAC1 0.) (and (> skoTC1 (/ 3. 2.)) (and (> skoTC1 0.) (and (> (* skoTC1 skoTC1) skoAC1) (> (* skoTC1 (* skoTC1 (+ (+ (* skoAC1 skoAC1) (* skoBC1 skoBC1)) (* skoTC1 skoTC1)))) (* skoBC1 (* skoBC1 (* skoAC1 (* skoAC1 (- 1.))))))))))))))))))

% In GRF format:
(sequent " MetiTarski formula " (antecedent (> (* skoAC1 (- 1.)) skoTC1) (> (* skoTC1 (* skoBC1 (+ (* skoAC1 (* skoAC1 (- 1.))) (* skoBC1 skoAC1)))) 0.) (> skoTC1 0.) (> (* skoTC1 (* skoTC1 (* skoBC1 (+ (* skoAC1 (- 1.)) skoBC1)))) 0.) (> skoBC1 0.) (> skoBC1 skoAC1) (> 2. skoBC1) (> skoAC1 0.) (> skoTC1 (/ 3. 2.)) (> skoTC1 0.) (> (* skoTC1 skoTC1) skoAC1)) (succedent (<= (* skoTC1 (* skoTC1 (+ (+ (* skoAC1 skoAC1) (* skoBC1 skoBC1)) (* skoTC1 skoTC1)))) (* skoBC1 (* skoBC1 (* skoAC1 (* skoAC1 (- 1.))))))))
-----[end problem]-----

-----[begin problem]-----
% In Mathematica format:
Timing[Resolve[Exists[{skoTC1,skoBC1,skoAC1}, And[skoAC1*-1<=skoTC1,skoTC1>0,skoTC1*skoTC1*skoBC1*(skoAC1*-1+skoBC1)>0,skoBC1>0,0<=skoBC1,skoBC1>skoAC1,2>skoBC1,skoAC1>0,skoTC1>(3/2),skoTC1>0,skoTC1*skoTC1>skoAC1,0<=skoTC1,skoTC1*skoTC1*(skoAC1*skoAC1+skoBC1*skoBC1+skoTC1*skoTC1)>skoBC1*skoBC1*skoAC1*skoAC1*-1]], Reals]]

% In QepcadB format:
(E skoTC1) (E skoBC1) (E skoAC1) [[(skoAC1 (-1))<=skoTC1]/\[[0<skoTC1]/\[[0<(skoTC1 skoTC1 skoBC1 ((skoAC1 (-1))+skoBC1))]/\[[0<skoBC1]/\[[0<=skoBC1]/\[[skoAC1<skoBC1]/\[[skoBC1<2]/\[[0<skoAC1]/\[[3/2<skoTC1]/\[[0<skoTC1]/\[[skoAC1<(skoTC1 skoTC1)]/\[[0<=skoTC1]/\[(skoBC1 skoBC1 skoAC1 skoAC1 (-1))<(skoTC1 skoTC1 (((skoAC1 skoAC1)+(skoBC1 skoBC1))+(skoTC1 skoTC1)))]]]]]]]]]]]]].

% In SMTLib2 format:
(declare-fun skoTC1 () Real) (declare-fun skoBC1 () Real) (declare-fun skoAC1 () Real) (assert (and (<= (* skoAC1 (- 1.)) skoTC1) (and (> skoTC1 0.) (and (> (* skoTC1 (* skoTC1 (* skoBC1 (+ (* skoAC1 (- 1.)) skoBC1)))) 0.) (and (> skoBC1 0.) (and (<= 0. skoBC1) (and (> skoBC1 skoAC1) (and (> 2. skoBC1) (and (> skoAC1 0.) (and (> skoTC1 (/ 3. 2.)) (and (> skoTC1 0.) (and (> (* skoTC1 skoTC1) skoAC1) (and (<= 0. skoTC1) (> (* skoTC1 (* skoTC1 (+ (+ (* skoAC1 skoAC1) (* skoBC1 skoBC1)) (* skoTC1 skoTC1)))) (* skoBC1 (* skoBC1 (* skoAC1 (* skoAC1 (- 1.)))))))))))))))))))

% In GRF format:
(sequent " MetiTarski formula " (antecedent (<= (* skoAC1 (- 1.)) skoTC1) (> skoTC1 0.) (> (* skoTC1 (* skoTC1 (* skoBC1 (+ (* skoAC1 (- 1.)) skoBC1)))) 0.) (> skoBC1 0.) (<= 0. skoBC1) (> skoBC1 skoAC1) (> 2. skoBC1) (> skoAC1 0.) (> skoTC1 (/ 3. 2.)) (> skoTC1 0.) (> (* skoTC1 skoTC1) skoAC1) (<= 0. skoTC1)) (succedent (<= (* skoTC1 (* skoTC1 (+ (+ (* skoAC1 skoAC1) (* skoBC1 skoBC1)) (* skoTC1 skoTC1)))) (* skoBC1 (* skoBC1 (* skoAC1 (* skoAC1 (- 1.))))))))
-----[end problem]-----

-----[begin problem]-----
% In Mathematica format:
Timing[Resolve[Exists[{skoTC1,skoBC1,skoAC1}, And[skoAC1*-1<=skoTC1,skoTC1*skoTC1*skoBC1*(skoAC1*-1+skoBC1)>0,skoBC1>0,0<=skoBC1,skoBC1>skoAC1,2>skoBC1,skoAC1>0,skoTC1>(3/2),skoTC1>0,skoTC1*skoTC1>skoAC1,0<=skoTC1,skoTC1*skoTC1*(skoAC1*skoAC1+skoBC1*skoBC1+skoTC1*skoTC1)>skoBC1*skoBC1*skoAC1*skoAC1*-1]], Reals]]

% In QepcadB format:
(E skoTC1) (E skoBC1) (E skoAC1) [[(skoAC1 (-1))<=skoTC1]/\[[0<(skoTC1 skoTC1 skoBC1 ((skoAC1 (-1))+skoBC1))]/\[[0<skoBC1]/\[[0<=skoBC1]/\[[skoAC1<skoBC1]/\[[skoBC1<2]/\[[0<skoAC1]/\[[3/2<skoTC1]/\[[0<skoTC1]/\[[skoAC1<(skoTC1 skoTC1)]/\[[0<=skoTC1]/\[(skoBC1 skoBC1 skoAC1 skoAC1 (-1))<(skoTC1 skoTC1 (((skoAC1 skoAC1)+(skoBC1 skoBC1))+(skoTC1 skoTC1)))]]]]]]]]]]]].

% In SMTLib2 format:
(declare-fun skoTC1 () Real) (declare-fun skoBC1 () Real) (declare-fun skoAC1 () Real) (assert (and (<= (* skoAC1 (- 1.)) skoTC1) (and (> (* skoTC1 (* skoTC1 (* skoBC1 (+ (* skoAC1 (- 1.)) skoBC1)))) 0.) (and (> skoBC1 0.) (and (<= 0. skoBC1) (and (> skoBC1 skoAC1) (and (> 2. skoBC1) (and (> skoAC1 0.) (and (> skoTC1 (/ 3. 2.)) (and (> skoTC1 0.) (and (> (* skoTC1 skoTC1) skoAC1) (and (<= 0. skoTC1) (> (* skoTC1 (* skoTC1 (+ (+ (* skoAC1 skoAC1) (* skoBC1 skoBC1)) (* skoTC1 skoTC1)))) (* skoBC1 (* skoBC1 (* skoAC1 (* skoAC1 (- 1.))))))))))))))))))

% In GRF format:
(sequent " MetiTarski formula " (antecedent (<= (* skoAC1 (- 1.)) skoTC1) (> (* skoTC1 (* skoTC1 (* skoBC1 (+ (* skoAC1 (- 1.)) skoBC1)))) 0.) (> skoBC1 0.) (<= 0. skoBC1) (> skoBC1 skoAC1) (> 2. skoBC1) (> skoAC1 0.) (> skoTC1 (/ 3. 2.)) (> skoTC1 0.) (> (* skoTC1 skoTC1) skoAC1) (<= 0. skoTC1)) (succedent (<= (* skoTC1 (* skoTC1 (+ (+ (* skoAC1 skoAC1) (* skoBC1 skoBC1)) (* skoTC1 skoTC1)))) (* skoBC1 (* skoBC1 (* skoAC1 (* skoAC1 (- 1.))))))))
-----[end problem]-----

-----[begin problem]-----
% In Mathematica format:
Timing[Resolve[Exists[{skoTC1,skoBC1,skoAC1}, And[skoTC1*(skoAC1+skoBC1*(-1+skoAC1*-1))<=skoBC1*skoAC1*(157079/50000),skoAC1*-1<=skoTC1,skoTC1*skoTC1*skoBC1*(skoAC1*-1+skoBC1)>0,skoBC1>0,0<=skoBC1,skoBC1>skoAC1,2>skoBC1,skoAC1>0,skoTC1>(3/2),skoTC1>0,skoTC1*skoTC1>skoAC1,0<=skoTC1,skoTC1*skoTC1*(skoAC1*skoAC1+skoBC1*skoBC1+skoTC1*skoTC1)>skoBC1*skoBC1*skoAC1*skoAC1*-1]], Reals]]

% In QepcadB format:
(E skoTC1) (E skoBC1) (E skoAC1) [[(skoTC1 (skoAC1+(skoBC1 (-1+(skoAC1 (-1))))))<=(skoBC1 skoAC1 (157079/50000))]/\[[(skoAC1 (-1))<=skoTC1]/\[[0<(skoTC1 skoTC1 skoBC1 ((skoAC1 (-1))+skoBC1))]/\[[0<skoBC1]/\[[0<=skoBC1]/\[[skoAC1<skoBC1]/\[[skoBC1<2]/\[[0<skoAC1]/\[[3/2<skoTC1]/\[[0<skoTC1]/\[[skoAC1<(skoTC1 skoTC1)]/\[[0<=skoTC1]/\[(skoBC1 skoBC1 skoAC1 skoAC1 (-1))<(skoTC1 skoTC1 (((skoAC1 skoAC1)+(skoBC1 skoBC1))+(skoTC1 skoTC1)))]]]]]]]]]]]]].

% In SMTLib2 format:
(declare-fun skoTC1 () Real) (declare-fun skoBC1 () Real) (declare-fun skoAC1 () Real) (assert (and (<= (* skoTC1 (+ skoAC1 (* skoBC1 (+ (- 1.) (* skoAC1 (- 1.)))))) (* skoBC1 (* skoAC1 (/ 157079. 50000.)))) (and (<= (* skoAC1 (- 1.)) skoTC1) (and (> (* skoTC1 (* skoTC1 (* skoBC1 (+ (* skoAC1 (- 1.)) skoBC1)))) 0.) (and (> skoBC1 0.) (and (<= 0. skoBC1) (and (> skoBC1 skoAC1) (and (> 2. skoBC1) (and (> skoAC1 0.) (and (> skoTC1 (/ 3. 2.)) (and (> skoTC1 0.) (and (> (* skoTC1 skoTC1) skoAC1) (and (<= 0. skoTC1) (> (* skoTC1 (* skoTC1 (+ (+ (* skoAC1 skoAC1) (* skoBC1 skoBC1)) (* skoTC1 skoTC1)))) (* skoBC1 (* skoBC1 (* skoAC1 (* skoAC1 (- 1.)))))))))))))))))))

% In GRF format:
(sequent " MetiTarski formula " (antecedent (<= (* skoTC1 (+ skoAC1 (* skoBC1 (+ (- 1.) (* skoAC1 (- 1.)))))) (* skoBC1 (* skoAC1 (/ 157079. 50000.)))) (<= (* skoAC1 (- 1.)) skoTC1) (> (* skoTC1 (* skoTC1 (* skoBC1 (+ (* skoAC1 (- 1.)) skoBC1)))) 0.) (> skoBC1 0.) (<= 0. skoBC1) (> skoBC1 skoAC1) (> 2. skoBC1) (> skoAC1 0.) (> skoTC1 (/ 3. 2.)) (> skoTC1 0.) (> (* skoTC1 skoTC1) skoAC1) (<= 0. skoTC1)) (succedent (<= (* skoTC1 (* skoTC1 (+ (+ (* skoAC1 skoAC1) (* skoBC1 skoBC1)) (* skoTC1 skoTC1)))) (* skoBC1 (* skoBC1 (* skoAC1 (* skoAC1 (- 1.))))))))
-----[end problem]-----

-----[begin problem]-----
% In Mathematica format:
Timing[Resolve[Exists[{skoTC1,skoBC1,skoAC1}, And[0<=skoAC1,skoTC1*skoTC1*(skoAC1*skoAC1+skoBC1*skoBC1+skoTC1*skoTC1)>skoBC1*skoBC1*skoAC1*skoAC1*-1,0<=skoTC1,skoTC1*skoTC1>skoAC1,skoTC1>0,skoTC1>(3/2),skoAC1>0,2>skoBC1,skoBC1>skoAC1,0<=skoBC1,skoBC1>0,skoTC1*skoTC1*skoBC1*(skoAC1*-1+skoBC1)>0,skoAC1*-1<=skoTC1]], Reals]]

% In QepcadB format:
(E skoTC1) (E skoBC1) (E skoAC1) [[0<=skoAC1]/\[[(skoBC1 skoBC1 skoAC1 skoAC1 (-1))<(skoTC1 skoTC1 (((skoAC1 skoAC1)+(skoBC1 skoBC1))+(skoTC1 skoTC1)))]/\[[0<=skoTC1]/\[[skoAC1<(skoTC1 skoTC1)]/\[[0<skoTC1]/\[[3/2<skoTC1]/\[[0<skoAC1]/\[[skoBC1<2]/\[[skoAC1<skoBC1]/\[[0<=skoBC1]/\[[0<skoBC1]/\[[0<(skoTC1 skoTC1 skoBC1 ((skoAC1 (-1))+skoBC1))]/\[(skoAC1 (-1))<=skoTC1]]]]]]]]]]]]].

% In SMTLib2 format:
(declare-fun skoTC1 () Real) (declare-fun skoBC1 () Real) (declare-fun skoAC1 () Real) (assert (and (<= 0. skoAC1) (and (> (* skoTC1 (* skoTC1 (+ (+ (* skoAC1 skoAC1) (* skoBC1 skoBC1)) (* skoTC1 skoTC1)))) (* skoBC1 (* skoBC1 (* skoAC1 (* skoAC1 (- 1.)))))) (and (<= 0. skoTC1) (and (> (* skoTC1 skoTC1) skoAC1) (and (> skoTC1 0.) (and (> skoTC1 (/ 3. 2.)) (and (> skoAC1 0.) (and (> 2. skoBC1) (and (> skoBC1 skoAC1) (and (<= 0. skoBC1) (and (> skoBC1 0.) (and (> (* skoTC1 (* skoTC1 (* skoBC1 (+ (* skoAC1 (- 1.)) skoBC1)))) 0.) (<= (* skoAC1 (- 1.)) skoTC1))))))))))))))

% In GRF format:
(sequent " MetiTarski formula " (antecedent (<= 0. skoAC1) (> (* skoTC1 (* skoTC1 (+ (+ (* skoAC1 skoAC1) (* skoBC1 skoBC1)) (* skoTC1 skoTC1)))) (* skoBC1 (* skoBC1 (* skoAC1 (* skoAC1 (- 1.)))))) (<= 0. skoTC1) (> (* skoTC1 skoTC1) skoAC1) (> skoTC1 0.) (> skoTC1 (/ 3. 2.)) (> skoAC1 0.) (> 2. skoBC1) (> skoBC1 skoAC1) (<= 0. skoBC1) (> skoBC1 0.) (> (* skoTC1 (* skoTC1 (* skoBC1 (+ (* skoAC1 (- 1.)) skoBC1)))) 0.)) (succedent (> (* skoAC1 (- 1.)) skoTC1)))
-----[end problem]-----

-----[begin problem]-----
% In Mathematica format:
Timing[Resolve[Exists[{skoTC1,skoAC1,skoBC1}, And[0>skoAC1,skoTC1*(skoAC1*(-157079/100000)+skoTC1*(-1+skoAC1*-1))>skoBC1*skoAC1,skoTC1*skoTC1*(skoAC1*skoAC1+skoBC1*skoBC1+skoTC1*skoTC1)>skoBC1*skoBC1*skoAC1*skoAC1*-1,skoTC1*skoTC1>skoAC1,skoTC1>0,skoTC1>(3/2),skoAC1>0,2>skoBC1,skoBC1>skoAC1,skoBC1>0,skoTC1*skoTC1*skoBC1*(skoAC1*-1+skoBC1)>0]], Reals]]

% In QepcadB format:
(E skoTC1) (E skoAC1) (E skoBC1) [[skoAC1<0]/\[[(skoBC1 skoAC1)<(skoTC1 ((skoAC1 (-157079/100000))+(skoTC1 (-1+(skoAC1 (-1))))))]/\[[(skoBC1 skoBC1 skoAC1 skoAC1 (-1))<(skoTC1 skoTC1 (((skoAC1 skoAC1)+(skoBC1 skoBC1))+(skoTC1 skoTC1)))]/\[[skoAC1<(skoTC1 skoTC1)]/\[[0<skoTC1]/\[[3/2<skoTC1]/\[[0<skoAC1]/\[[skoBC1<2]/\[[skoAC1<skoBC1]/\[[0<skoBC1]/\[0<(skoTC1 skoTC1 skoBC1 ((skoAC1 (-1))+skoBC1))]]]]]]]]]]].

% In SMTLib2 format:
(declare-fun skoTC1 () Real) (declare-fun skoAC1 () Real) (declare-fun skoBC1 () Real) (assert (and (> 0. skoAC1) (and (> (* skoTC1 (+ (* skoAC1 (/ (- 157079.) 100000.)) (* skoTC1 (+ (- 1.) (* skoAC1 (- 1.)))))) (* skoBC1 skoAC1)) (and (> (* skoTC1 (* skoTC1 (+ (+ (* skoAC1 skoAC1) (* skoBC1 skoBC1)) (* skoTC1 skoTC1)))) (* skoBC1 (* skoBC1 (* skoAC1 (* skoAC1 (- 1.)))))) (and (> (* skoTC1 skoTC1) skoAC1) (and (> skoTC1 0.) (and (> skoTC1 (/ 3. 2.)) (and (> skoAC1 0.) (and (> 2. skoBC1) (and (> skoBC1 skoAC1) (and (> skoBC1 0.) (> (* skoTC1 (* skoTC1 (* skoBC1 (+ (* skoAC1 (- 1.)) skoBC1)))) 0.))))))))))))

% In GRF format:
(sequent " MetiTarski formula " (antecedent (> 0. skoAC1) (> (* skoTC1 (+ (* skoAC1 (/ (- 157079.) 100000.)) (* skoTC1 (+ (- 1.) (* skoAC1 (- 1.)))))) (* skoBC1 skoAC1)) (> (* skoTC1 (* skoTC1 (+ (+ (* skoAC1 skoAC1) (* skoBC1 skoBC1)) (* skoTC1 skoTC1)))) (* skoBC1 (* skoBC1 (* skoAC1 (* skoAC1 (- 1.)))))) (> (* skoTC1 skoTC1) skoAC1) (> skoTC1 0.) (> skoTC1 (/ 3. 2.)) (> skoAC1 0.) (> 2. skoBC1) (> skoBC1 skoAC1) (> skoBC1 0.)) (succedent (<= (* skoTC1 (* skoTC1 (* skoBC1 (+ (* skoAC1 (- 1.)) skoBC1)))) 0.)))
-----[end problem]-----

-----[begin problem]-----
% In Mathematica format:
Timing[Resolve[Exists[{skoTC1,skoAC1,skoBC1}, And[0>skoAC1,skoTC1*(skoAC1*(157079/100000)+skoTC1*(1+skoAC1))>skoBC1*skoAC1*-1,skoTC1*skoTC1*(skoAC1*skoAC1+skoBC1*skoBC1+skoTC1*skoTC1)>skoBC1*skoBC1*skoAC1*skoAC1*-1,skoTC1*skoTC1>skoAC1,skoTC1>0,skoTC1>(3/2),skoAC1>0,2>skoBC1,skoBC1>skoAC1,skoBC1>0,skoTC1*skoTC1*skoBC1*(skoAC1*-1+skoBC1)>0]], Reals]]

% In QepcadB format:
(E skoTC1) (E skoAC1) (E skoBC1) [[skoAC1<0]/\[[(skoBC1 skoAC1 (-1))<(skoTC1 ((skoAC1 (157079/100000))+(skoTC1 (1+skoAC1))))]/\[[(skoBC1 skoBC1 skoAC1 skoAC1 (-1))<(skoTC1 skoTC1 (((skoAC1 skoAC1)+(skoBC1 skoBC1))+(skoTC1 skoTC1)))]/\[[skoAC1<(skoTC1 skoTC1)]/\[[0<skoTC1]/\[[3/2<skoTC1]/\[[0<skoAC1]/\[[skoBC1<2]/\[[skoAC1<skoBC1]/\[[0<skoBC1]/\[0<(skoTC1 skoTC1 skoBC1 ((skoAC1 (-1))+skoBC1))]]]]]]]]]]].

% In SMTLib2 format:
(declare-fun skoTC1 () Real) (declare-fun skoAC1 () Real) (declare-fun skoBC1 () Real) (assert (and (> 0. skoAC1) (and (> (* skoTC1 (+ (* skoAC1 (/ 157079. 100000.)) (* skoTC1 (+ 1. skoAC1)))) (* skoBC1 (* skoAC1 (- 1.)))) (and (> (* skoTC1 (* skoTC1 (+ (+ (* skoAC1 skoAC1) (* skoBC1 skoBC1)) (* skoTC1 skoTC1)))) (* skoBC1 (* skoBC1 (* skoAC1 (* skoAC1 (- 1.)))))) (and (> (* skoTC1 skoTC1) skoAC1) (and (> skoTC1 0.) (and (> skoTC1 (/ 3. 2.)) (and (> skoAC1 0.) (and (> 2. skoBC1) (and (> skoBC1 skoAC1) (and (> skoBC1 0.) (> (* skoTC1 (* skoTC1 (* skoBC1 (+ (* skoAC1 (- 1.)) skoBC1)))) 0.))))))))))))

% In GRF format:
(sequent " MetiTarski formula " (antecedent (> 0. skoAC1) (> (* skoTC1 (+ (* skoAC1 (/ 157079. 100000.)) (* skoTC1 (+ 1. skoAC1)))) (* skoBC1 (* skoAC1 (- 1.)))) (> (* skoTC1 (* skoTC1 (+ (+ (* skoAC1 skoAC1) (* skoBC1 skoBC1)) (* skoTC1 skoTC1)))) (* skoBC1 (* skoBC1 (* skoAC1 (* skoAC1 (- 1.)))))) (> (* skoTC1 skoTC1) skoAC1) (> skoTC1 0.) (> skoTC1 (/ 3. 2.)) (> skoAC1 0.) (> 2. skoBC1) (> skoBC1 skoAC1) (> skoBC1 0.)) (succedent (<= (* skoTC1 (* skoTC1 (* skoBC1 (+ (* skoAC1 (- 1.)) skoBC1)))) 0.)))
-----[end problem]-----

-----[begin problem]-----
% In Mathematica format:
Timing[Resolve[Exists[{skoTC1,skoAC1,skoBC1}, And[0>skoAC1,skoTC1*skoTC1*(skoAC1*skoAC1+skoBC1*skoAC1*-1)>0,skoTC1*skoTC1*(skoAC1*skoAC1+skoBC1*skoBC1+skoTC1*skoTC1)>skoBC1*skoBC1*skoAC1*skoAC1*-1,skoTC1*skoTC1>skoAC1,skoTC1>0,skoTC1>(3/2),skoAC1>0,2>skoBC1,skoBC1>skoAC1,skoBC1>0,skoTC1*skoTC1*skoBC1*(skoAC1*-1+skoBC1)>0]], Reals]]

% In QepcadB format:
(E skoTC1) (E skoAC1) (E skoBC1) [[skoAC1<0]/\[[0<(skoTC1 skoTC1 ((skoAC1 skoAC1)+(skoBC1 skoAC1 (-1))))]/\[[(skoBC1 skoBC1 skoAC1 skoAC1 (-1))<(skoTC1 skoTC1 (((skoAC1 skoAC1)+(skoBC1 skoBC1))+(skoTC1 skoTC1)))]/\[[skoAC1<(skoTC1 skoTC1)]/\[[0<skoTC1]/\[[3/2<skoTC1]/\[[0<skoAC1]/\[[skoBC1<2]/\[[skoAC1<skoBC1]/\[[0<skoBC1]/\[0<(skoTC1 skoTC1 skoBC1 ((skoAC1 (-1))+skoBC1))]]]]]]]]]]].

% In SMTLib2 format:
(declare-fun skoTC1 () Real) (declare-fun skoAC1 () Real) (declare-fun skoBC1 () Real) (assert (and (> 0. skoAC1) (and (> (* skoTC1 (* skoTC1 (+ (* skoAC1 skoAC1) (* skoBC1 (* skoAC1 (- 1.)))))) 0.) (and (> (* skoTC1 (* skoTC1 (+ (+ (* skoAC1 skoAC1) (* skoBC1 skoBC1)) (* skoTC1 skoTC1)))) (* skoBC1 (* skoBC1 (* skoAC1 (* skoAC1 (- 1.)))))) (and (> (* skoTC1 skoTC1) skoAC1) (and (> skoTC1 0.) (and (> skoTC1 (/ 3. 2.)) (and (> skoAC1 0.) (and (> 2. skoBC1) (and (> skoBC1 skoAC1) (and (> skoBC1 0.) (> (* skoTC1 (* skoTC1 (* skoBC1 (+ (* skoAC1 (- 1.)) skoBC1)))) 0.))))))))))))

% In GRF format:
(sequent " MetiTarski formula " (antecedent (> 0. skoAC1) (> (* skoTC1 (* skoTC1 (+ (* skoAC1 skoAC1) (* skoBC1 (* skoAC1 (- 1.)))))) 0.) (> (* skoTC1 (* skoTC1 (+ (+ (* skoAC1 skoAC1) (* skoBC1 skoBC1)) (* skoTC1 skoTC1)))) (* skoBC1 (* skoBC1 (* skoAC1 (* skoAC1 (- 1.)))))) (> (* skoTC1 skoTC1) skoAC1) (> skoTC1 0.) (> skoTC1 (/ 3. 2.)) (> skoAC1 0.) (> 2. skoBC1) (> skoBC1 skoAC1) (> skoBC1 0.)) (succedent (<= (* skoTC1 (* skoTC1 (* skoBC1 (+ (* skoAC1 (- 1.)) skoBC1)))) 0.)))
-----[end problem]-----

-----[begin problem]-----
% In Mathematica format:
Timing[Resolve[Exists[{skoTC1,skoBC1,skoAC1}, And[0>skoBC1,skoTC1>0,skoTC1*skoTC1*(skoAC1*skoAC1+skoBC1*skoBC1+skoTC1*skoTC1)>skoBC1*skoBC1*skoAC1*skoAC1*-1,skoTC1*skoTC1>skoAC1,skoTC1>0,skoTC1>(3/2),skoAC1>0,2>skoBC1,skoBC1>skoAC1,skoBC1>0,skoTC1*skoTC1*skoBC1*(skoAC1*-1+skoBC1)>0]], Reals]]

% In QepcadB format:
(E skoTC1) (E skoBC1) (E skoAC1) [[skoBC1<0]/\[[0<skoTC1]/\[[(skoBC1 skoBC1 skoAC1 skoAC1 (-1))<(skoTC1 skoTC1 (((skoAC1 skoAC1)+(skoBC1 skoBC1))+(skoTC1 skoTC1)))]/\[[skoAC1<(skoTC1 skoTC1)]/\[[0<skoTC1]/\[[3/2<skoTC1]/\[[0<skoAC1]/\[[skoBC1<2]/\[[skoAC1<skoBC1]/\[[0<skoBC1]/\[0<(skoTC1 skoTC1 skoBC1 ((skoAC1 (-1))+skoBC1))]]]]]]]]]]].

% In SMTLib2 format:
(declare-fun skoTC1 () Real) (declare-fun skoBC1 () Real) (declare-fun skoAC1 () Real) (assert (and (> 0. skoBC1) (and (> skoTC1 0.) (and (> (* skoTC1 (* skoTC1 (+ (+ (* skoAC1 skoAC1) (* skoBC1 skoBC1)) (* skoTC1 skoTC1)))) (* skoBC1 (* skoBC1 (* skoAC1 (* skoAC1 (- 1.)))))) (and (> (* skoTC1 skoTC1) skoAC1) (and (> skoTC1 0.) (and (> skoTC1 (/ 3. 2.)) (and (> skoAC1 0.) (and (> 2. skoBC1) (and (> skoBC1 skoAC1) (and (> skoBC1 0.) (> (* skoTC1 (* skoTC1 (* skoBC1 (+ (* skoAC1 (- 1.)) skoBC1)))) 0.))))))))))))

% In GRF format:
(sequent " MetiTarski formula " (antecedent (> 0. skoBC1) (> skoTC1 0.) (> (* skoTC1 (* skoTC1 (+ (+ (* skoAC1 skoAC1) (* skoBC1 skoBC1)) (* skoTC1 skoTC1)))) (* skoBC1 (* skoBC1 (* skoAC1 (* skoAC1 (- 1.)))))) (> (* skoTC1 skoTC1) skoAC1) (> skoTC1 0.) (> skoTC1 (/ 3. 2.)) (> skoAC1 0.) (> 2. skoBC1) (> skoBC1 skoAC1) (> skoBC1 0.)) (succedent (<= (* skoTC1 (* skoTC1 (* skoBC1 (+ (* skoAC1 (- 1.)) skoBC1)))) 0.)))
-----[end problem]-----

-----[begin problem]-----
% In Mathematica format:
Timing[Resolve[Exists[{skoTC1,skoBC1,skoAC1}, And[0<=skoBC1,skoTC1>0,skoTC1*skoTC1*(skoAC1*skoAC1+skoBC1*skoBC1+skoTC1*skoTC1)>skoBC1*skoBC1*skoAC1*skoAC1*-1,0<=skoTC1,skoTC1*skoTC1>skoAC1,skoTC1>0,skoTC1>(3/2),skoAC1>0,2>skoBC1,skoBC1>skoAC1,0<=skoBC1,skoBC1>0,skoTC1*skoTC1*skoBC1*(skoAC1*-1+skoBC1)>0,skoAC1*-1<=skoTC1]], Reals]]

% In QepcadB format:
(E skoTC1) (E skoBC1) (E skoAC1) [[0<=skoBC1]/\[[0<skoTC1]/\[[(skoBC1 skoBC1 skoAC1 skoAC1 (-1))<(skoTC1 skoTC1 (((skoAC1 skoAC1)+(skoBC1 skoBC1))+(skoTC1 skoTC1)))]/\[[0<=skoTC1]/\[[skoAC1<(skoTC1 skoTC1)]/\[[0<skoTC1]/\[[3/2<skoTC1]/\[[0<skoAC1]/\[[skoBC1<2]/\[[skoAC1<skoBC1]/\[[0<=skoBC1]/\[[0<skoBC1]/\[[0<(skoTC1 skoTC1 skoBC1 ((skoAC1 (-1))+skoBC1))]/\[(skoAC1 (-1))<=skoTC1]]]]]]]]]]]]]].

% In SMTLib2 format:
(declare-fun skoTC1 () Real) (declare-fun skoBC1 () Real) (declare-fun skoAC1 () Real) (assert (and (<= 0. skoBC1) (and (> skoTC1 0.) (and (> (* skoTC1 (* skoTC1 (+ (+ (* skoAC1 skoAC1) (* skoBC1 skoBC1)) (* skoTC1 skoTC1)))) (* skoBC1 (* skoBC1 (* skoAC1 (* skoAC1 (- 1.)))))) (and (<= 0. skoTC1) (and (> (* skoTC1 skoTC1) skoAC1) (and (> skoTC1 0.) (and (> skoTC1 (/ 3. 2.)) (and (> skoAC1 0.) (and (> 2. skoBC1) (and (> skoBC1 skoAC1) (and (<= 0. skoBC1) (and (> skoBC1 0.) (and (> (* skoTC1 (* skoTC1 (* skoBC1 (+ (* skoAC1 (- 1.)) skoBC1)))) 0.) (<= (* skoAC1 (- 1.)) skoTC1)))))))))))))))

% In GRF format:
(sequent " MetiTarski formula " (antecedent (<= 0. skoBC1) (> skoTC1 0.) (> (* skoTC1 (* skoTC1 (+ (+ (* skoAC1 skoAC1) (* skoBC1 skoBC1)) (* skoTC1 skoTC1)))) (* skoBC1 (* skoBC1 (* skoAC1 (* skoAC1 (- 1.)))))) (<= 0. skoTC1) (> (* skoTC1 skoTC1) skoAC1) (> skoTC1 0.) (> skoTC1 (/ 3. 2.)) (> skoAC1 0.) (> 2. skoBC1) (> skoBC1 skoAC1) (<= 0. skoBC1) (> skoBC1 0.) (> (* skoTC1 (* skoTC1 (* skoBC1 (+ (* skoAC1 (- 1.)) skoBC1)))) 0.)) (succedent (> (* skoAC1 (- 1.)) skoTC1)))
-----[end problem]-----

-----[begin problem]-----
% In Mathematica format:
Timing[Resolve[Exists[{skoTC1,skoAC1,skoBC1}, And[skoTC1*(skoAC1*(157079/100000)+skoTC1*(1+skoAC1))<=skoBC1*skoAC1*-1,skoAC1*-1<=skoTC1,skoTC1*skoTC1*skoBC1*(skoAC1*-1+skoBC1)>0,skoBC1>0,0<=skoBC1,skoBC1>skoAC1,2>skoBC1,skoAC1>0,skoTC1>(3/2),skoTC1>0,skoTC1*skoTC1>skoAC1,0<=skoTC1,skoTC1*skoTC1*(skoAC1*skoAC1+skoBC1*skoBC1+skoTC1*skoTC1)>skoBC1*skoBC1*skoAC1*skoAC1*-1]], Reals]]

% In QepcadB format:
(E skoTC1) (E skoAC1) (E skoBC1) [[(skoTC1 ((skoAC1 (157079/100000))+(skoTC1 (1+skoAC1))))<=(skoBC1 skoAC1 (-1))]/\[[(skoAC1 (-1))<=skoTC1]/\[[0<(skoTC1 skoTC1 skoBC1 ((skoAC1 (-1))+skoBC1))]/\[[0<skoBC1]/\[[0<=skoBC1]/\[[skoAC1<skoBC1]/\[[skoBC1<2]/\[[0<skoAC1]/\[[3/2<skoTC1]/\[[0<skoTC1]/\[[skoAC1<(skoTC1 skoTC1)]/\[[0<=skoTC1]/\[(skoBC1 skoBC1 skoAC1 skoAC1 (-1))<(skoTC1 skoTC1 (((skoAC1 skoAC1)+(skoBC1 skoBC1))+(skoTC1 skoTC1)))]]]]]]]]]]]]].

% In SMTLib2 format:
(declare-fun skoTC1 () Real) (declare-fun skoAC1 () Real) (declare-fun skoBC1 () Real) (assert (and (<= (* skoTC1 (+ (* skoAC1 (/ 157079. 100000.)) (* skoTC1 (+ 1. skoAC1)))) (* skoBC1 (* skoAC1 (- 1.)))) (and (<= (* skoAC1 (- 1.)) skoTC1) (and (> (* skoTC1 (* skoTC1 (* skoBC1 (+ (* skoAC1 (- 1.)) skoBC1)))) 0.) (and (> skoBC1 0.) (and (<= 0. skoBC1) (and (> skoBC1 skoAC1) (and (> 2. skoBC1) (and (> skoAC1 0.) (and (> skoTC1 (/ 3. 2.)) (and (> skoTC1 0.) (and (> (* skoTC1 skoTC1) skoAC1) (and (<= 0. skoTC1) (> (* skoTC1 (* skoTC1 (+ (+ (* skoAC1 skoAC1) (* skoBC1 skoBC1)) (* skoTC1 skoTC1)))) (* skoBC1 (* skoBC1 (* skoAC1 (* skoAC1 (- 1.)))))))))))))))))))

% In GRF format:
(sequent " MetiTarski formula " (antecedent (<= (* skoTC1 (+ (* skoAC1 (/ 157079. 100000.)) (* skoTC1 (+ 1. skoAC1)))) (* skoBC1 (* skoAC1 (- 1.)))) (<= (* skoAC1 (- 1.)) skoTC1) (> (* skoTC1 (* skoTC1 (* skoBC1 (+ (* skoAC1 (- 1.)) skoBC1)))) 0.) (> skoBC1 0.) (<= 0. skoBC1) (> skoBC1 skoAC1) (> 2. skoBC1) (> skoAC1 0.) (> skoTC1 (/ 3. 2.)) (> skoTC1 0.) (> (* skoTC1 skoTC1) skoAC1) (<= 0. skoTC1)) (succedent (<= (* skoTC1 (* skoTC1 (+ (+ (* skoAC1 skoAC1) (* skoBC1 skoBC1)) (* skoTC1 skoTC1)))) (* skoBC1 (* skoBC1 (* skoAC1 (* skoAC1 (- 1.))))))))
-----[end problem]-----

-----[begin problem]-----
% In Mathematica format:
Timing[Resolve[Exists[{skoTC1,skoAC1,skoBC1}, And[skoTC1*(skoAC1*(-157079/100000)+skoTC1*(-1+skoAC1*-1))<=skoBC1*skoAC1,skoAC1*-1<=skoTC1,skoTC1*skoTC1*skoBC1*(skoAC1*-1+skoBC1)>0,skoBC1>0,0<=skoBC1,skoBC1>skoAC1,2>skoBC1,skoAC1>0,skoTC1>(3/2),skoTC1>0,skoTC1*skoTC1>skoAC1,0<=skoTC1,skoTC1*skoTC1*(skoAC1*skoAC1+skoBC1*skoBC1+skoTC1*skoTC1)>skoBC1*skoBC1*skoAC1*skoAC1*-1]], Reals]]

% In QepcadB format:
(E skoTC1) (E skoAC1) (E skoBC1) [[(skoTC1 ((skoAC1 (-157079/100000))+(skoTC1 (-1+(skoAC1 (-1))))))<=(skoBC1 skoAC1)]/\[[(skoAC1 (-1))<=skoTC1]/\[[0<(skoTC1 skoTC1 skoBC1 ((skoAC1 (-1))+skoBC1))]/\[[0<skoBC1]/\[[0<=skoBC1]/\[[skoAC1<skoBC1]/\[[skoBC1<2]/\[[0<skoAC1]/\[[3/2<skoTC1]/\[[0<skoTC1]/\[[skoAC1<(skoTC1 skoTC1)]/\[[0<=skoTC1]/\[(skoBC1 skoBC1 skoAC1 skoAC1 (-1))<(skoTC1 skoTC1 (((skoAC1 skoAC1)+(skoBC1 skoBC1))+(skoTC1 skoTC1)))]]]]]]]]]]]]].

% In SMTLib2 format:
(declare-fun skoTC1 () Real) (declare-fun skoAC1 () Real) (declare-fun skoBC1 () Real) (assert (and (<= (* skoTC1 (+ (* skoAC1 (/ (- 157079.) 100000.)) (* skoTC1 (+ (- 1.) (* skoAC1 (- 1.)))))) (* skoBC1 skoAC1)) (and (<= (* skoAC1 (- 1.)) skoTC1) (and (> (* skoTC1 (* skoTC1 (* skoBC1 (+ (* skoAC1 (- 1.)) skoBC1)))) 0.) (and (> skoBC1 0.) (and (<= 0. skoBC1) (and (> skoBC1 skoAC1) (and (> 2. skoBC1) (and (> skoAC1 0.) (and (> skoTC1 (/ 3. 2.)) (and (> skoTC1 0.) (and (> (* skoTC1 skoTC1) skoAC1) (and (<= 0. skoTC1) (> (* skoTC1 (* skoTC1 (+ (+ (* skoAC1 skoAC1) (* skoBC1 skoBC1)) (* skoTC1 skoTC1)))) (* skoBC1 (* skoBC1 (* skoAC1 (* skoAC1 (- 1.)))))))))))))))))))

% In GRF format:
(sequent " MetiTarski formula " (antecedent (<= (* skoTC1 (+ (* skoAC1 (/ (- 157079.) 100000.)) (* skoTC1 (+ (- 1.) (* skoAC1 (- 1.)))))) (* skoBC1 skoAC1)) (<= (* skoAC1 (- 1.)) skoTC1) (> (* skoTC1 (* skoTC1 (* skoBC1 (+ (* skoAC1 (- 1.)) skoBC1)))) 0.) (> skoBC1 0.) (<= 0. skoBC1) (> skoBC1 skoAC1) (> 2. skoBC1) (> skoAC1 0.) (> skoTC1 (/ 3. 2.)) (> skoTC1 0.) (> (* skoTC1 skoTC1) skoAC1) (<= 0. skoTC1)) (succedent (<= (* skoTC1 (* skoTC1 (+ (+ (* skoAC1 skoAC1) (* skoBC1 skoBC1)) (* skoTC1 skoTC1)))) (* skoBC1 (* skoBC1 (* skoAC1 (* skoAC1 (- 1.))))))))
-----[end problem]-----

-----[begin problem]-----
% In Mathematica format:
Timing[Resolve[Exists[{skoTC1,skoAC1,skoBC1}, And[skoTC1*skoTC1*(skoAC1*skoAC1*-1+skoBC1*skoAC1)<=0,skoTC1*(skoAC1*(157079/100000)+skoTC1*(1+skoAC1))>skoBC1*skoAC1*-1,skoAC1*-1<=skoTC1,skoTC1*skoTC1*skoBC1*(skoAC1*-1+skoBC1)>0,skoBC1>0,0<=skoBC1,skoBC1>skoAC1,2>skoBC1,skoAC1>0,skoTC1>(3/2),skoTC1>0,skoTC1*skoTC1>skoAC1,0<=skoTC1,skoTC1*skoTC1*(skoAC1*skoAC1+skoBC1*skoBC1+skoTC1*skoTC1)>skoBC1*skoBC1*skoAC1*skoAC1*-1]], Reals]]

% In QepcadB format:
(E skoTC1) (E skoAC1) (E skoBC1) [[(skoTC1 skoTC1 ((skoAC1 skoAC1 (-1))+(skoBC1 skoAC1)))<=0]/\[[(skoBC1 skoAC1 (-1))<(skoTC1 ((skoAC1 (157079/100000))+(skoTC1 (1+skoAC1))))]/\[[(skoAC1 (-1))<=skoTC1]/\[[0<(skoTC1 skoTC1 skoBC1 ((skoAC1 (-1))+skoBC1))]/\[[0<skoBC1]/\[[0<=skoBC1]/\[[skoAC1<skoBC1]/\[[skoBC1<2]/\[[0<skoAC1]/\[[3/2<skoTC1]/\[[0<skoTC1]/\[[skoAC1<(skoTC1 skoTC1)]/\[[0<=skoTC1]/\[(skoBC1 skoBC1 skoAC1 skoAC1 (-1))<(skoTC1 skoTC1 (((skoAC1 skoAC1)+(skoBC1 skoBC1))+(skoTC1 skoTC1)))]]]]]]]]]]]]]].

% In SMTLib2 format:
(declare-fun skoTC1 () Real) (declare-fun skoAC1 () Real) (declare-fun skoBC1 () Real) (assert (and (<= (* skoTC1 (* skoTC1 (+ (* skoAC1 (* skoAC1 (- 1.))) (* skoBC1 skoAC1)))) 0.) (and (> (* skoTC1 (+ (* skoAC1 (/ 157079. 100000.)) (* skoTC1 (+ 1. skoAC1)))) (* skoBC1 (* skoAC1 (- 1.)))) (and (<= (* skoAC1 (- 1.)) skoTC1) (and (> (* skoTC1 (* skoTC1 (* skoBC1 (+ (* skoAC1 (- 1.)) skoBC1)))) 0.) (and (> skoBC1 0.) (and (<= 0. skoBC1) (and (> skoBC1 skoAC1) (and (> 2. skoBC1) (and (> skoAC1 0.) (and (> skoTC1 (/ 3. 2.)) (and (> skoTC1 0.) (and (> (* skoTC1 skoTC1) skoAC1) (and (<= 0. skoTC1) (> (* skoTC1 (* skoTC1 (+ (+ (* skoAC1 skoAC1) (* skoBC1 skoBC1)) (* skoTC1 skoTC1)))) (* skoBC1 (* skoBC1 (* skoAC1 (* skoAC1 (- 1.))))))))))))))))))))

% In GRF format:
(sequent " MetiTarski formula " (antecedent (<= (* skoTC1 (* skoTC1 (+ (* skoAC1 (* skoAC1 (- 1.))) (* skoBC1 skoAC1)))) 0.) (> (* skoTC1 (+ (* skoAC1 (/ 157079. 100000.)) (* skoTC1 (+ 1. skoAC1)))) (* skoBC1 (* skoAC1 (- 1.)))) (<= (* skoAC1 (- 1.)) skoTC1) (> (* skoTC1 (* skoTC1 (* skoBC1 (+ (* skoAC1 (- 1.)) skoBC1)))) 0.) (> skoBC1 0.) (<= 0. skoBC1) (> skoBC1 skoAC1) (> 2. skoBC1) (> skoAC1 0.) (> skoTC1 (/ 3. 2.)) (> skoTC1 0.) (> (* skoTC1 skoTC1) skoAC1) (<= 0. skoTC1)) (succedent (<= (* skoTC1 (* skoTC1 (+ (+ (* skoAC1 skoAC1) (* skoBC1 skoBC1)) (* skoTC1 skoTC1)))) (* skoBC1 (* skoBC1 (* skoAC1 (* skoAC1 (- 1.))))))))
-----[end problem]-----

-----[begin problem]-----
% In Mathematica format:
Timing[Resolve[Exists[{skoTC1,skoBC1,skoAC1}, And[skoTC1*skoTC1*(skoAC1*skoAC1*-1+skoBC1*skoAC1)>0,skoAC1*-1<=skoTC1,skoTC1*skoTC1*skoBC1*(skoAC1*-1+skoBC1)>0,skoBC1>0,0<=skoBC1,skoBC1>skoAC1,2>skoBC1,skoAC1>0,skoTC1>(3/2),skoTC1>0,skoTC1*skoTC1>skoAC1,0<=skoTC1,skoTC1*skoTC1*(skoAC1*skoAC1+skoBC1*skoBC1+skoTC1*skoTC1)>skoBC1*skoBC1*skoAC1*skoAC1*-1]], Reals]]

% In QepcadB format:
(E skoTC1) (E skoBC1) (E skoAC1) [[0<(skoTC1 skoTC1 ((skoAC1 skoAC1 (-1))+(skoBC1 skoAC1)))]/\[[(skoAC1 (-1))<=skoTC1]/\[[0<(skoTC1 skoTC1 skoBC1 ((skoAC1 (-1))+skoBC1))]/\[[0<skoBC1]/\[[0<=skoBC1]/\[[skoAC1<skoBC1]/\[[skoBC1<2]/\[[0<skoAC1]/\[[3/2<skoTC1]/\[[0<skoTC1]/\[[skoAC1<(skoTC1 skoTC1)]/\[[0<=skoTC1]/\[(skoBC1 skoBC1 skoAC1 skoAC1 (-1))<(skoTC1 skoTC1 (((skoAC1 skoAC1)+(skoBC1 skoBC1))+(skoTC1 skoTC1)))]]]]]]]]]]]]].

% In SMTLib2 format:
(declare-fun skoTC1 () Real) (declare-fun skoBC1 () Real) (declare-fun skoAC1 () Real) (assert (and (> (* skoTC1 (* skoTC1 (+ (* skoAC1 (* skoAC1 (- 1.))) (* skoBC1 skoAC1)))) 0.) (and (<= (* skoAC1 (- 1.)) skoTC1) (and (> (* skoTC1 (* skoTC1 (* skoBC1 (+ (* skoAC1 (- 1.)) skoBC1)))) 0.) (and (> skoBC1 0.) (and (<= 0. skoBC1) (and (> skoBC1 skoAC1) (and (> 2. skoBC1) (and (> skoAC1 0.) (and (> skoTC1 (/ 3. 2.)) (and (> skoTC1 0.) (and (> (* skoTC1 skoTC1) skoAC1) (and (<= 0. skoTC1) (> (* skoTC1 (* skoTC1 (+ (+ (* skoAC1 skoAC1) (* skoBC1 skoBC1)) (* skoTC1 skoTC1)))) (* skoBC1 (* skoBC1 (* skoAC1 (* skoAC1 (- 1.)))))))))))))))))))

% In GRF format:
(sequent " MetiTarski formula " (antecedent (> (* skoTC1 (* skoTC1 (+ (* skoAC1 (* skoAC1 (- 1.))) (* skoBC1 skoAC1)))) 0.) (<= (* skoAC1 (- 1.)) skoTC1) (> (* skoTC1 (* skoTC1 (* skoBC1 (+ (* skoAC1 (- 1.)) skoBC1)))) 0.) (> skoBC1 0.) (<= 0. skoBC1) (> skoBC1 skoAC1) (> 2. skoBC1) (> skoAC1 0.) (> skoTC1 (/ 3. 2.)) (> skoTC1 0.) (> (* skoTC1 skoTC1) skoAC1) (<= 0. skoTC1)) (succedent (<= (* skoTC1 (* skoTC1 (+ (+ (* skoAC1 skoAC1) (* skoBC1 skoBC1)) (* skoTC1 skoTC1)))) (* skoBC1 (* skoBC1 (* skoAC1 (* skoAC1 (- 1.))))))))
-----[end problem]-----

-----[begin problem]-----
% In Mathematica format:
Timing[Resolve[Exists[{skoTC1,skoBC1,skoAC1}, And[0>skoBC1,skoTC1*skoTC1*(skoAC1*skoAC1*-1+skoBC1*skoAC1)>0,skoTC1>0,skoTC1*skoTC1*skoBC1*(skoAC1*-1+skoBC1)>0,skoBC1>0,skoBC1>skoAC1,2>skoBC1,skoAC1>0,skoTC1>(3/2),skoTC1>0,skoTC1*skoTC1>skoAC1,skoTC1*skoTC1*(skoAC1*skoAC1+skoBC1*skoBC1+skoTC1*skoTC1)>skoBC1*skoBC1*skoAC1*skoAC1*-1]], Reals]]

% In QepcadB format:
(E skoTC1) (E skoBC1) (E skoAC1) [[skoBC1<0]/\[[0<(skoTC1 skoTC1 ((skoAC1 skoAC1 (-1))+(skoBC1 skoAC1)))]/\[[0<skoTC1]/\[[0<(skoTC1 skoTC1 skoBC1 ((skoAC1 (-1))+skoBC1))]/\[[0<skoBC1]/\[[skoAC1<skoBC1]/\[[skoBC1<2]/\[[0<skoAC1]/\[[3/2<skoTC1]/\[[0<skoTC1]/\[[skoAC1<(skoTC1 skoTC1)]/\[(skoBC1 skoBC1 skoAC1 skoAC1 (-1))<(skoTC1 skoTC1 (((skoAC1 skoAC1)+(skoBC1 skoBC1))+(skoTC1 skoTC1)))]]]]]]]]]]]].

% In SMTLib2 format:
(declare-fun skoTC1 () Real) (declare-fun skoBC1 () Real) (declare-fun skoAC1 () Real) (assert (and (> 0. skoBC1) (and (> (* skoTC1 (* skoTC1 (+ (* skoAC1 (* skoAC1 (- 1.))) (* skoBC1 skoAC1)))) 0.) (and (> skoTC1 0.) (and (> (* skoTC1 (* skoTC1 (* skoBC1 (+ (* skoAC1 (- 1.)) skoBC1)))) 0.) (and (> skoBC1 0.) (and (> skoBC1 skoAC1) (and (> 2. skoBC1) (and (> skoAC1 0.) (and (> skoTC1 (/ 3. 2.)) (and (> skoTC1 0.) (and (> (* skoTC1 skoTC1) skoAC1) (> (* skoTC1 (* skoTC1 (+ (+ (* skoAC1 skoAC1) (* skoBC1 skoBC1)) (* skoTC1 skoTC1)))) (* skoBC1 (* skoBC1 (* skoAC1 (* skoAC1 (- 1.))))))))))))))))))

% In GRF format:
(sequent " MetiTarski formula " (antecedent (> 0. skoBC1) (> (* skoTC1 (* skoTC1 (+ (* skoAC1 (* skoAC1 (- 1.))) (* skoBC1 skoAC1)))) 0.) (> skoTC1 0.) (> (* skoTC1 (* skoTC1 (* skoBC1 (+ (* skoAC1 (- 1.)) skoBC1)))) 0.) (> skoBC1 0.) (> skoBC1 skoAC1) (> 2. skoBC1) (> skoAC1 0.) (> skoTC1 (/ 3. 2.)) (> skoTC1 0.) (> (* skoTC1 skoTC1) skoAC1)) (succedent (<= (* skoTC1 (* skoTC1 (+ (+ (* skoAC1 skoAC1) (* skoBC1 skoBC1)) (* skoTC1 skoTC1)))) (* skoBC1 (* skoBC1 (* skoAC1 (* skoAC1 (- 1.))))))))
-----[end problem]-----

-----[begin problem]-----
% In Mathematica format:
Timing[Resolve[Exists[{skoTC1,skoBC1,skoAC1}, And[0<=skoBC1,skoTC1>0,skoAC1*-1<=skoTC1,skoTC1*skoTC1*skoBC1*(skoAC1*-1+skoBC1)>0,skoBC1>0,0<=skoBC1,skoBC1>skoAC1,2>skoBC1,skoAC1>0,skoTC1>(3/2),skoTC1>0,skoTC1*skoTC1>skoAC1,0<=skoTC1,skoTC1*skoTC1*(skoAC1*skoAC1+skoBC1*skoBC1+skoTC1*skoTC1)>skoBC1*skoBC1*skoAC1*skoAC1*-1]], Reals]]

% In QepcadB format:
(E skoTC1) (E skoBC1) (E skoAC1) [[0<=skoBC1]/\[[0<skoTC1]/\[[(skoAC1 (-1))<=skoTC1]/\[[0<(skoTC1 skoTC1 skoBC1 ((skoAC1 (-1))+skoBC1))]/\[[0<skoBC1]/\[[0<=skoBC1]/\[[skoAC1<skoBC1]/\[[skoBC1<2]/\[[0<skoAC1]/\[[3/2<skoTC1]/\[[0<skoTC1]/\[[skoAC1<(skoTC1 skoTC1)]/\[[0<=skoTC1]/\[(skoBC1 skoBC1 skoAC1 skoAC1 (-1))<(skoTC1 skoTC1 (((skoAC1 skoAC1)+(skoBC1 skoBC1))+(skoTC1 skoTC1)))]]]]]]]]]]]]]].

% In SMTLib2 format:
(declare-fun skoTC1 () Real) (declare-fun skoBC1 () Real) (declare-fun skoAC1 () Real) (assert (and (<= 0. skoBC1) (and (> skoTC1 0.) (and (<= (* skoAC1 (- 1.)) skoTC1) (and (> (* skoTC1 (* skoTC1 (* skoBC1 (+ (* skoAC1 (- 1.)) skoBC1)))) 0.) (and (> skoBC1 0.) (and (<= 0. skoBC1) (and (> skoBC1 skoAC1) (and (> 2. skoBC1) (and (> skoAC1 0.) (and (> skoTC1 (/ 3. 2.)) (and (> skoTC1 0.) (and (> (* skoTC1 skoTC1) skoAC1) (and (<= 0. skoTC1) (> (* skoTC1 (* skoTC1 (+ (+ (* skoAC1 skoAC1) (* skoBC1 skoBC1)) (* skoTC1 skoTC1)))) (* skoBC1 (* skoBC1 (* skoAC1 (* skoAC1 (- 1.))))))))))))))))))))

% In GRF format:
(sequent " MetiTarski formula " (antecedent (<= 0. skoBC1) (> skoTC1 0.) (<= (* skoAC1 (- 1.)) skoTC1) (> (* skoTC1 (* skoTC1 (* skoBC1 (+ (* skoAC1 (- 1.)) skoBC1)))) 0.) (> skoBC1 0.) (<= 0. skoBC1) (> skoBC1 skoAC1) (> 2. skoBC1) (> skoAC1 0.) (> skoTC1 (/ 3. 2.)) (> skoTC1 0.) (> (* skoTC1 skoTC1) skoAC1) (<= 0. skoTC1)) (succedent (<= (* skoTC1 (* skoTC1 (+ (+ (* skoAC1 skoAC1) (* skoBC1 skoBC1)) (* skoTC1 skoTC1)))) (* skoBC1 (* skoBC1 (* skoAC1 (* skoAC1 (- 1.))))))))
-----[end problem]-----

-----[begin problem]-----
% In Mathematica format:
Timing[Resolve[Exists[{skoTC1,skoAC1,skoBC1}, And[skoTC1*(skoAC1*(-157079/100000)+skoTC1*(-1+skoAC1*-1))<=skoBC1*skoAC1,skoTC1*(skoAC1*(157079/100000)+skoTC1*(1+skoAC1))>skoBC1*skoAC1*-1,skoAC1*-1<=skoTC1,skoTC1*skoTC1*skoBC1*(skoAC1*-1+skoBC1)>0,skoBC1>0,0<=skoBC1,skoBC1>skoAC1,2>skoBC1,skoAC1>0,skoTC1>(3/2),skoTC1>0,skoTC1*skoTC1>skoAC1,0<=skoTC1,skoTC1*skoTC1*(skoAC1*skoAC1+skoBC1*skoBC1+skoTC1*skoTC1)>skoBC1*skoBC1*skoAC1*skoAC1*-1]], Reals]]

% In QepcadB format:
(E skoTC1) (E skoAC1) (E skoBC1) [[(skoTC1 ((skoAC1 (-157079/100000))+(skoTC1 (-1+(skoAC1 (-1))))))<=(skoBC1 skoAC1)]/\[[(skoBC1 skoAC1 (-1))<(skoTC1 ((skoAC1 (157079/100000))+(skoTC1 (1+skoAC1))))]/\[[(skoAC1 (-1))<=skoTC1]/\[[0<(skoTC1 skoTC1 skoBC1 ((skoAC1 (-1))+skoBC1))]/\[[0<skoBC1]/\[[0<=skoBC1]/\[[skoAC1<skoBC1]/\[[skoBC1<2]/\[[0<skoAC1]/\[[3/2<skoTC1]/\[[0<skoTC1]/\[[skoAC1<(skoTC1 skoTC1)]/\[[0<=skoTC1]/\[(skoBC1 skoBC1 skoAC1 skoAC1 (-1))<(skoTC1 skoTC1 (((skoAC1 skoAC1)+(skoBC1 skoBC1))+(skoTC1 skoTC1)))]]]]]]]]]]]]]].

% In SMTLib2 format:
(declare-fun skoTC1 () Real) (declare-fun skoAC1 () Real) (declare-fun skoBC1 () Real) (assert (and (<= (* skoTC1 (+ (* skoAC1 (/ (- 157079.) 100000.)) (* skoTC1 (+ (- 1.) (* skoAC1 (- 1.)))))) (* skoBC1 skoAC1)) (and (> (* skoTC1 (+ (* skoAC1 (/ 157079. 100000.)) (* skoTC1 (+ 1. skoAC1)))) (* skoBC1 (* skoAC1 (- 1.)))) (and (<= (* skoAC1 (- 1.)) skoTC1) (and (> (* skoTC1 (* skoTC1 (* skoBC1 (+ (* skoAC1 (- 1.)) skoBC1)))) 0.) (and (> skoBC1 0.) (and (<= 0. skoBC1) (and (> skoBC1 skoAC1) (and (> 2. skoBC1) (and (> skoAC1 0.) (and (> skoTC1 (/ 3. 2.)) (and (> skoTC1 0.) (and (> (* skoTC1 skoTC1) skoAC1) (and (<= 0. skoTC1) (> (* skoTC1 (* skoTC1 (+ (+ (* skoAC1 skoAC1) (* skoBC1 skoBC1)) (* skoTC1 skoTC1)))) (* skoBC1 (* skoBC1 (* skoAC1 (* skoAC1 (- 1.))))))))))))))))))))

% In GRF format:
(sequent " MetiTarski formula " (antecedent (<= (* skoTC1 (+ (* skoAC1 (/ (- 157079.) 100000.)) (* skoTC1 (+ (- 1.) (* skoAC1 (- 1.)))))) (* skoBC1 skoAC1)) (> (* skoTC1 (+ (* skoAC1 (/ 157079. 100000.)) (* skoTC1 (+ 1. skoAC1)))) (* skoBC1 (* skoAC1 (- 1.)))) (<= (* skoAC1 (- 1.)) skoTC1) (> (* skoTC1 (* skoTC1 (* skoBC1 (+ (* skoAC1 (- 1.)) skoBC1)))) 0.) (> skoBC1 0.) (<= 0. skoBC1) (> skoBC1 skoAC1) (> 2. skoBC1) (> skoAC1 0.) (> skoTC1 (/ 3. 2.)) (> skoTC1 0.) (> (* skoTC1 skoTC1) skoAC1) (<= 0. skoTC1)) (succedent (<= (* skoTC1 (* skoTC1 (+ (+ (* skoAC1 skoAC1) (* skoBC1 skoBC1)) (* skoTC1 skoTC1)))) (* skoBC1 (* skoBC1 (* skoAC1 (* skoAC1 (- 1.))))))))
-----[end problem]-----

-----[begin problem]-----
% In Mathematica format:
Timing[Resolve[Exists[{skoTC1,skoBC1,skoAC1}, And[0>skoAC1,skoTC1*(skoAC1*-1+skoBC1*(1+skoAC1))>skoBC1*skoAC1*(-157079/50000),skoTC1*skoTC1*(skoAC1*skoAC1+skoBC1*skoBC1+skoTC1*skoTC1)>skoBC1*skoBC1*skoAC1*skoAC1*-1,skoTC1*skoTC1>skoAC1,skoTC1>0,skoTC1>(3/2),skoAC1>0,2>skoBC1,skoBC1>skoAC1,skoBC1>0,skoTC1*skoTC1*skoBC1*(skoAC1*-1+skoBC1)>0]], Reals]]

% In QepcadB format:
(E skoTC1) (E skoBC1) (E skoAC1) [[skoAC1<0]/\[[(skoBC1 skoAC1 (-157079/50000))<(skoTC1 ((skoAC1 (-1))+(skoBC1 (1+skoAC1))))]/\[[(skoBC1 skoBC1 skoAC1 skoAC1 (-1))<(skoTC1 skoTC1 (((skoAC1 skoAC1)+(skoBC1 skoBC1))+(skoTC1 skoTC1)))]/\[[skoAC1<(skoTC1 skoTC1)]/\[[0<skoTC1]/\[[3/2<skoTC1]/\[[0<skoAC1]/\[[skoBC1<2]/\[[skoAC1<skoBC1]/\[[0<skoBC1]/\[0<(skoTC1 skoTC1 skoBC1 ((skoAC1 (-1))+skoBC1))]]]]]]]]]]].

% In SMTLib2 format:
(declare-fun skoTC1 () Real) (declare-fun skoBC1 () Real) (declare-fun skoAC1 () Real) (assert (and (> 0. skoAC1) (and (> (* skoTC1 (+ (* skoAC1 (- 1.)) (* skoBC1 (+ 1. skoAC1)))) (* skoBC1 (* skoAC1 (/ (- 157079.) 50000.)))) (and (> (* skoTC1 (* skoTC1 (+ (+ (* skoAC1 skoAC1) (* skoBC1 skoBC1)) (* skoTC1 skoTC1)))) (* skoBC1 (* skoBC1 (* skoAC1 (* skoAC1 (- 1.)))))) (and (> (* skoTC1 skoTC1) skoAC1) (and (> skoTC1 0.) (and (> skoTC1 (/ 3. 2.)) (and (> skoAC1 0.) (and (> 2. skoBC1) (and (> skoBC1 skoAC1) (and (> skoBC1 0.) (> (* skoTC1 (* skoTC1 (* skoBC1 (+ (* skoAC1 (- 1.)) skoBC1)))) 0.))))))))))))

% In GRF format:
(sequent " MetiTarski formula " (antecedent (> 0. skoAC1) (> (* skoTC1 (+ (* skoAC1 (- 1.)) (* skoBC1 (+ 1. skoAC1)))) (* skoBC1 (* skoAC1 (/ (- 157079.) 50000.)))) (> (* skoTC1 (* skoTC1 (+ (+ (* skoAC1 skoAC1) (* skoBC1 skoBC1)) (* skoTC1 skoTC1)))) (* skoBC1 (* skoBC1 (* skoAC1 (* skoAC1 (- 1.)))))) (> (* skoTC1 skoTC1) skoAC1) (> skoTC1 0.) (> skoTC1 (/ 3. 2.)) (> skoAC1 0.) (> 2. skoBC1) (> skoBC1 skoAC1) (> skoBC1 0.)) (succedent (<= (* skoTC1 (* skoTC1 (* skoBC1 (+ (* skoAC1 (- 1.)) skoBC1)))) 0.)))
-----[end problem]-----

-----[begin problem]-----
% In Mathematica format:
Timing[Resolve[Exists[{skoTC1,skoBC1,skoAC1}, And[0>skoAC1,skoTC1*(skoAC1+skoBC1*(-1+skoAC1*-1))>skoBC1*skoAC1*(157079/50000),skoTC1*skoTC1*(skoAC1*skoAC1+skoBC1*skoBC1+skoTC1*skoTC1)>skoBC1*skoBC1*skoAC1*skoAC1*-1,skoTC1*skoTC1>skoAC1,skoTC1>0,skoTC1>(3/2),skoAC1>0,2>skoBC1,skoBC1>skoAC1,skoBC1>0,skoTC1*skoTC1*skoBC1*(skoAC1*-1+skoBC1)>0]], Reals]]

% In QepcadB format:
(E skoTC1) (E skoBC1) (E skoAC1) [[skoAC1<0]/\[[(skoBC1 skoAC1 (157079/50000))<(skoTC1 (skoAC1+(skoBC1 (-1+(skoAC1 (-1))))))]/\[[(skoBC1 skoBC1 skoAC1 skoAC1 (-1))<(skoTC1 skoTC1 (((skoAC1 skoAC1)+(skoBC1 skoBC1))+(skoTC1 skoTC1)))]/\[[skoAC1<(skoTC1 skoTC1)]/\[[0<skoTC1]/\[[3/2<skoTC1]/\[[0<skoAC1]/\[[skoBC1<2]/\[[skoAC1<skoBC1]/\[[0<skoBC1]/\[0<(skoTC1 skoTC1 skoBC1 ((skoAC1 (-1))+skoBC1))]]]]]]]]]]].

% In SMTLib2 format:
(declare-fun skoTC1 () Real) (declare-fun skoBC1 () Real) (declare-fun skoAC1 () Real) (assert (and (> 0. skoAC1) (and (> (* skoTC1 (+ skoAC1 (* skoBC1 (+ (- 1.) (* skoAC1 (- 1.)))))) (* skoBC1 (* skoAC1 (/ 157079. 50000.)))) (and (> (* skoTC1 (* skoTC1 (+ (+ (* skoAC1 skoAC1) (* skoBC1 skoBC1)) (* skoTC1 skoTC1)))) (* skoBC1 (* skoBC1 (* skoAC1 (* skoAC1 (- 1.)))))) (and (> (* skoTC1 skoTC1) skoAC1) (and (> skoTC1 0.) (and (> skoTC1 (/ 3. 2.)) (and (> skoAC1 0.) (and (> 2. skoBC1) (and (> skoBC1 skoAC1) (and (> skoBC1 0.) (> (* skoTC1 (* skoTC1 (* skoBC1 (+ (* skoAC1 (- 1.)) skoBC1)))) 0.))))))))))))

% In GRF format:
(sequent " MetiTarski formula " (antecedent (> 0. skoAC1) (> (* skoTC1 (+ skoAC1 (* skoBC1 (+ (- 1.) (* skoAC1 (- 1.)))))) (* skoBC1 (* skoAC1 (/ 157079. 50000.)))) (> (* skoTC1 (* skoTC1 (+ (+ (* skoAC1 skoAC1) (* skoBC1 skoBC1)) (* skoTC1 skoTC1)))) (* skoBC1 (* skoBC1 (* skoAC1 (* skoAC1 (- 1.)))))) (> (* skoTC1 skoTC1) skoAC1) (> skoTC1 0.) (> skoTC1 (/ 3. 2.)) (> skoAC1 0.) (> 2. skoBC1) (> skoBC1 skoAC1) (> skoBC1 0.)) (succedent (<= (* skoTC1 (* skoTC1 (* skoBC1 (+ (* skoAC1 (- 1.)) skoBC1)))) 0.)))
-----[end problem]-----

-----[begin problem]-----
% In Mathematica format:
Timing[Resolve[Exists[{skoTC1,skoBC1,skoAC1}, And[0>skoAC1,skoTC1*skoBC1*(skoAC1*skoAC1+skoBC1*skoAC1*-1)>0,skoTC1*skoTC1*(skoAC1*skoAC1+skoBC1*skoBC1+skoTC1*skoTC1)>skoBC1*skoBC1*skoAC1*skoAC1*-1,skoTC1*skoTC1>skoAC1,skoTC1>0,skoTC1>(3/2),skoAC1>0,2>skoBC1,skoBC1>skoAC1,skoBC1>0,skoTC1*skoTC1*skoBC1*(skoAC1*-1+skoBC1)>0]], Reals]]

% In QepcadB format:
(E skoTC1) (E skoBC1) (E skoAC1) [[skoAC1<0]/\[[0<(skoTC1 skoBC1 ((skoAC1 skoAC1)+(skoBC1 skoAC1 (-1))))]/\[[(skoBC1 skoBC1 skoAC1 skoAC1 (-1))<(skoTC1 skoTC1 (((skoAC1 skoAC1)+(skoBC1 skoBC1))+(skoTC1 skoTC1)))]/\[[skoAC1<(skoTC1 skoTC1)]/\[[0<skoTC1]/\[[3/2<skoTC1]/\[[0<skoAC1]/\[[skoBC1<2]/\[[skoAC1<skoBC1]/\[[0<skoBC1]/\[0<(skoTC1 skoTC1 skoBC1 ((skoAC1 (-1))+skoBC1))]]]]]]]]]]].

% In SMTLib2 format:
(declare-fun skoTC1 () Real) (declare-fun skoBC1 () Real) (declare-fun skoAC1 () Real) (assert (and (> 0. skoAC1) (and (> (* skoTC1 (* skoBC1 (+ (* skoAC1 skoAC1) (* skoBC1 (* skoAC1 (- 1.)))))) 0.) (and (> (* skoTC1 (* skoTC1 (+ (+ (* skoAC1 skoAC1) (* skoBC1 skoBC1)) (* skoTC1 skoTC1)))) (* skoBC1 (* skoBC1 (* skoAC1 (* skoAC1 (- 1.)))))) (and (> (* skoTC1 skoTC1) skoAC1) (and (> skoTC1 0.) (and (> skoTC1 (/ 3. 2.)) (and (> skoAC1 0.) (and (> 2. skoBC1) (and (> skoBC1 skoAC1) (and (> skoBC1 0.) (> (* skoTC1 (* skoTC1 (* skoBC1 (+ (* skoAC1 (- 1.)) skoBC1)))) 0.))))))))))))

% In GRF format:
(sequent " MetiTarski formula " (antecedent (> 0. skoAC1) (> (* skoTC1 (* skoBC1 (+ (* skoAC1 skoAC1) (* skoBC1 (* skoAC1 (- 1.)))))) 0.) (> (* skoTC1 (* skoTC1 (+ (+ (* skoAC1 skoAC1) (* skoBC1 skoBC1)) (* skoTC1 skoTC1)))) (* skoBC1 (* skoBC1 (* skoAC1 (* skoAC1 (- 1.)))))) (> (* skoTC1 skoTC1) skoAC1) (> skoTC1 0.) (> skoTC1 (/ 3. 2.)) (> skoAC1 0.) (> 2. skoBC1) (> skoBC1 skoAC1) (> skoBC1 0.)) (succedent (<= (* skoTC1 (* skoTC1 (* skoBC1 (+ (* skoAC1 (- 1.)) skoBC1)))) 0.)))
-----[end problem]-----

-----[begin problem]-----
% In Mathematica format:
Timing[Resolve[Exists[{skoTC1,skoBC1,skoAC1}, And[skoBC1>skoTC1,skoTC1>0,skoTC1*skoTC1*(skoAC1*skoAC1+skoBC1*skoBC1+skoTC1*skoTC1)>skoBC1*skoBC1*skoAC1*skoAC1*-1,skoTC1*skoTC1>skoAC1,skoTC1>0,skoTC1>(3/2),skoAC1>0,2>skoBC1,skoBC1>skoAC1,skoBC1>0,skoTC1*skoTC1*skoBC1*(skoAC1*-1+skoBC1)>0]], Reals]]

% In QepcadB format:
(E skoTC1) (E skoBC1) (E skoAC1) [[skoTC1<skoBC1]/\[[0<skoTC1]/\[[(skoBC1 skoBC1 skoAC1 skoAC1 (-1))<(skoTC1 skoTC1 (((skoAC1 skoAC1)+(skoBC1 skoBC1))+(skoTC1 skoTC1)))]/\[[skoAC1<(skoTC1 skoTC1)]/\[[0<skoTC1]/\[[3/2<skoTC1]/\[[0<skoAC1]/\[[skoBC1<2]/\[[skoAC1<skoBC1]/\[[0<skoBC1]/\[0<(skoTC1 skoTC1 skoBC1 ((skoAC1 (-1))+skoBC1))]]]]]]]]]]].

% In SMTLib2 format:
(declare-fun skoTC1 () Real) (declare-fun skoBC1 () Real) (declare-fun skoAC1 () Real) (assert (and (> skoBC1 skoTC1) (and (> skoTC1 0.) (and (> (* skoTC1 (* skoTC1 (+ (+ (* skoAC1 skoAC1) (* skoBC1 skoBC1)) (* skoTC1 skoTC1)))) (* skoBC1 (* skoBC1 (* skoAC1 (* skoAC1 (- 1.)))))) (and (> (* skoTC1 skoTC1) skoAC1) (and (> skoTC1 0.) (and (> skoTC1 (/ 3. 2.)) (and (> skoAC1 0.) (and (> 2. skoBC1) (and (> skoBC1 skoAC1) (and (> skoBC1 0.) (> (* skoTC1 (* skoTC1 (* skoBC1 (+ (* skoAC1 (- 1.)) skoBC1)))) 0.))))))))))))

% In GRF format:
(sequent " MetiTarski formula " (antecedent (> skoBC1 skoTC1) (> skoTC1 0.) (> (* skoTC1 (* skoTC1 (+ (+ (* skoAC1 skoAC1) (* skoBC1 skoBC1)) (* skoTC1 skoTC1)))) (* skoBC1 (* skoBC1 (* skoAC1 (* skoAC1 (- 1.)))))) (> (* skoTC1 skoTC1) skoAC1) (> skoTC1 0.) (> skoTC1 (/ 3. 2.)) (> skoAC1 0.) (> 2. skoBC1) (> skoBC1 skoAC1) (> skoBC1 0.)) (succedent (<= (* skoTC1 (* skoTC1 (* skoBC1 (+ (* skoAC1 (- 1.)) skoBC1)))) 0.)))
-----[end problem]-----

-----[begin problem]-----
% In Mathematica format:
Timing[Resolve[Exists[{skoTC1,skoBC1,skoAC1}, And[0<=skoAC1,skoBC1>skoTC1,skoTC1>0,skoTC1*skoTC1*(skoAC1*skoAC1+skoBC1*skoBC1+skoTC1*skoTC1)>skoBC1*skoBC1*skoAC1*skoAC1*-1,0<=skoTC1,skoTC1*skoTC1>skoAC1,skoTC1>0,skoTC1>(3/2),skoAC1>0,2>skoBC1,skoBC1>skoAC1,0<=skoBC1,skoBC1>0,skoTC1*skoTC1*skoBC1*(skoAC1*-1+skoBC1)>0,skoAC1*-1<=skoTC1]], Reals]]

% In QepcadB format:
(E skoTC1) (E skoBC1) (E skoAC1) [[0<=skoAC1]/\[[skoTC1<skoBC1]/\[[0<skoTC1]/\[[(skoBC1 skoBC1 skoAC1 skoAC1 (-1))<(skoTC1 skoTC1 (((skoAC1 skoAC1)+(skoBC1 skoBC1))+(skoTC1 skoTC1)))]/\[[0<=skoTC1]/\[[skoAC1<(skoTC1 skoTC1)]/\[[0<skoTC1]/\[[3/2<skoTC1]/\[[0<skoAC1]/\[[skoBC1<2]/\[[skoAC1<skoBC1]/\[[0<=skoBC1]/\[[0<skoBC1]/\[[0<(skoTC1 skoTC1 skoBC1 ((skoAC1 (-1))+skoBC1))]/\[(skoAC1 (-1))<=skoTC1]]]]]]]]]]]]]]].

% In SMTLib2 format:
(declare-fun skoTC1 () Real) (declare-fun skoBC1 () Real) (declare-fun skoAC1 () Real) (assert (and (<= 0. skoAC1) (and (> skoBC1 skoTC1) (and (> skoTC1 0.) (and (> (* skoTC1 (* skoTC1 (+ (+ (* skoAC1 skoAC1) (* skoBC1 skoBC1)) (* skoTC1 skoTC1)))) (* skoBC1 (* skoBC1 (* skoAC1 (* skoAC1 (- 1.)))))) (and (<= 0. skoTC1) (and (> (* skoTC1 skoTC1) skoAC1) (and (> skoTC1 0.) (and (> skoTC1 (/ 3. 2.)) (and (> skoAC1 0.) (and (> 2. skoBC1) (and (> skoBC1 skoAC1) (and (<= 0. skoBC1) (and (> skoBC1 0.) (and (> (* skoTC1 (* skoTC1 (* skoBC1 (+ (* skoAC1 (- 1.)) skoBC1)))) 0.) (<= (* skoAC1 (- 1.)) skoTC1))))))))))))))))

% In GRF format:
(sequent " MetiTarski formula " (antecedent (<= 0. skoAC1) (> skoBC1 skoTC1) (> skoTC1 0.) (> (* skoTC1 (* skoTC1 (+ (+ (* skoAC1 skoAC1) (* skoBC1 skoBC1)) (* skoTC1 skoTC1)))) (* skoBC1 (* skoBC1 (* skoAC1 (* skoAC1 (- 1.)))))) (<= 0. skoTC1) (> (* skoTC1 skoTC1) skoAC1) (> skoTC1 0.) (> skoTC1 (/ 3. 2.)) (> skoAC1 0.) (> 2. skoBC1) (> skoBC1 skoAC1) (<= 0. skoBC1) (> skoBC1 0.) (> (* skoTC1 (* skoTC1 (* skoBC1 (+ (* skoAC1 (- 1.)) skoBC1)))) 0.)) (succedent (> (* skoAC1 (- 1.)) skoTC1)))
-----[end problem]-----

-----[begin problem]-----
% In Mathematica format:
Timing[Resolve[Exists[{skoTC1,skoBC1,skoAC1}, And[0>skoAC1,skoBC1>skoTC1,skoTC1*skoTC1*(skoAC1*skoAC1+skoBC1*skoBC1+skoTC1*skoTC1)>skoBC1*skoBC1*skoAC1*skoAC1*-1,skoTC1*skoTC1>skoAC1,skoTC1>0,skoTC1>(3/2),skoAC1>0,2>skoBC1,skoBC1>skoAC1,skoBC1>0,skoTC1*skoTC1*skoBC1*(skoAC1*-1+skoBC1)>0]], Reals]]

% In QepcadB format:
(E skoTC1) (E skoBC1) (E skoAC1) [[skoAC1<0]/\[[skoTC1<skoBC1]/\[[(skoBC1 skoBC1 skoAC1 skoAC1 (-1))<(skoTC1 skoTC1 (((skoAC1 skoAC1)+(skoBC1 skoBC1))+(skoTC1 skoTC1)))]/\[[skoAC1<(skoTC1 skoTC1)]/\[[0<skoTC1]/\[[3/2<skoTC1]/\[[0<skoAC1]/\[[skoBC1<2]/\[[skoAC1<skoBC1]/\[[0<skoBC1]/\[0<(skoTC1 skoTC1 skoBC1 ((skoAC1 (-1))+skoBC1))]]]]]]]]]]].

% In SMTLib2 format:
(declare-fun skoTC1 () Real) (declare-fun skoBC1 () Real) (declare-fun skoAC1 () Real) (assert (and (> 0. skoAC1) (and (> skoBC1 skoTC1) (and (> (* skoTC1 (* skoTC1 (+ (+ (* skoAC1 skoAC1) (* skoBC1 skoBC1)) (* skoTC1 skoTC1)))) (* skoBC1 (* skoBC1 (* skoAC1 (* skoAC1 (- 1.)))))) (and (> (* skoTC1 skoTC1) skoAC1) (and (> skoTC1 0.) (and (> skoTC1 (/ 3. 2.)) (and (> skoAC1 0.) (and (> 2. skoBC1) (and (> skoBC1 skoAC1) (and (> skoBC1 0.) (> (* skoTC1 (* skoTC1 (* skoBC1 (+ (* skoAC1 (- 1.)) skoBC1)))) 0.))))))))))))

% In GRF format:
(sequent " MetiTarski formula " (antecedent (> 0. skoAC1) (> skoBC1 skoTC1) (> (* skoTC1 (* skoTC1 (+ (+ (* skoAC1 skoAC1) (* skoBC1 skoBC1)) (* skoTC1 skoTC1)))) (* skoBC1 (* skoBC1 (* skoAC1 (* skoAC1 (- 1.)))))) (> (* skoTC1 skoTC1) skoAC1) (> skoTC1 0.) (> skoTC1 (/ 3. 2.)) (> skoAC1 0.) (> 2. skoBC1) (> skoBC1 skoAC1) (> skoBC1 0.)) (succedent (<= (* skoTC1 (* skoTC1 (* skoBC1 (+ (* skoAC1 (- 1.)) skoBC1)))) 0.)))
-----[end problem]-----

-----[begin problem]-----
% In Mathematica format:
Timing[Resolve[Exists[{skoTC1,skoBC1,skoAC1}, And[0<=skoAC1,skoTC1>0,skoTC1*skoTC1*(skoAC1*skoAC1+skoBC1*skoBC1+skoTC1*skoTC1)>skoBC1*skoBC1*skoAC1*skoAC1*-1,0<=skoTC1,skoTC1*skoTC1>skoAC1,skoTC1>0,skoTC1>(3/2),skoAC1>0,2>skoBC1,skoBC1>skoAC1,0<=skoBC1,skoBC1>0,skoTC1*skoTC1*skoBC1*(skoAC1*-1+skoBC1)>0,skoAC1*-1<=skoTC1]], Reals]]

% In QepcadB format:
(E skoTC1) (E skoBC1) (E skoAC1) [[0<=skoAC1]/\[[0<skoTC1]/\[[(skoBC1 skoBC1 skoAC1 skoAC1 (-1))<(skoTC1 skoTC1 (((skoAC1 skoAC1)+(skoBC1 skoBC1))+(skoTC1 skoTC1)))]/\[[0<=skoTC1]/\[[skoAC1<(skoTC1 skoTC1)]/\[[0<skoTC1]/\[[3/2<skoTC1]/\[[0<skoAC1]/\[[skoBC1<2]/\[[skoAC1<skoBC1]/\[[0<=skoBC1]/\[[0<skoBC1]/\[[0<(skoTC1 skoTC1 skoBC1 ((skoAC1 (-1))+skoBC1))]/\[(skoAC1 (-1))<=skoTC1]]]]]]]]]]]]]].

% In SMTLib2 format:
(declare-fun skoTC1 () Real) (declare-fun skoBC1 () Real) (declare-fun skoAC1 () Real) (assert (and (<= 0. skoAC1) (and (> skoTC1 0.) (and (> (* skoTC1 (* skoTC1 (+ (+ (* skoAC1 skoAC1) (* skoBC1 skoBC1)) (* skoTC1 skoTC1)))) (* skoBC1 (* skoBC1 (* skoAC1 (* skoAC1 (- 1.)))))) (and (<= 0. skoTC1) (and (> (* skoTC1 skoTC1) skoAC1) (and (> skoTC1 0.) (and (> skoTC1 (/ 3. 2.)) (and (> skoAC1 0.) (and (> 2. skoBC1) (and (> skoBC1 skoAC1) (and (<= 0. skoBC1) (and (> skoBC1 0.) (and (> (* skoTC1 (* skoTC1 (* skoBC1 (+ (* skoAC1 (- 1.)) skoBC1)))) 0.) (<= (* skoAC1 (- 1.)) skoTC1)))))))))))))))

% In GRF format:
(sequent " MetiTarski formula " (antecedent (<= 0. skoAC1) (> skoTC1 0.) (> (* skoTC1 (* skoTC1 (+ (+ (* skoAC1 skoAC1) (* skoBC1 skoBC1)) (* skoTC1 skoTC1)))) (* skoBC1 (* skoBC1 (* skoAC1 (* skoAC1 (- 1.)))))) (<= 0. skoTC1) (> (* skoTC1 skoTC1) skoAC1) (> skoTC1 0.) (> skoTC1 (/ 3. 2.)) (> skoAC1 0.) (> 2. skoBC1) (> skoBC1 skoAC1) (<= 0. skoBC1) (> skoBC1 0.) (> (* skoTC1 (* skoTC1 (* skoBC1 (+ (* skoAC1 (- 1.)) skoBC1)))) 0.)) (succedent (> (* skoAC1 (- 1.)) skoTC1)))
-----[end problem]-----

-----[begin problem]-----
% In Mathematica format:
Timing[Resolve[Exists[{skoTC1,skoBC1,skoAC1}, And[0<=skoAC1,skoTC1*skoTC1*(skoAC1*skoAC1+skoBC1*skoBC1+skoTC1*skoTC1)>skoBC1*skoBC1*skoAC1*skoAC1*-1,0<=skoTC1,skoTC1*skoTC1>skoAC1,skoTC1>0,skoTC1>(3/2),skoAC1>0,2>skoBC1,skoBC1>skoAC1,0<=skoBC1,skoBC1>0,skoTC1*skoTC1*skoBC1*(skoAC1*-1+skoBC1)>0,skoAC1*-1<=skoTC1]], Reals]]

% In QepcadB format:
(E skoTC1) (E skoBC1) (E skoAC1) [[0<=skoAC1]/\[[(skoBC1 skoBC1 skoAC1 skoAC1 (-1))<(skoTC1 skoTC1 (((skoAC1 skoAC1)+(skoBC1 skoBC1))+(skoTC1 skoTC1)))]/\[[0<=skoTC1]/\[[skoAC1<(skoTC1 skoTC1)]/\[[0<skoTC1]/\[[3/2<skoTC1]/\[[0<skoAC1]/\[[skoBC1<2]/\[[skoAC1<skoBC1]/\[[0<=skoBC1]/\[[0<skoBC1]/\[[0<(skoTC1 skoTC1 skoBC1 ((skoAC1 (-1))+skoBC1))]/\[(skoAC1 (-1))<=skoTC1]]]]]]]]]]]]].

% In SMTLib2 format:
(declare-fun skoTC1 () Real) (declare-fun skoBC1 () Real) (declare-fun skoAC1 () Real) (assert (and (<= 0. skoAC1) (and (> (* skoTC1 (* skoTC1 (+ (+ (* skoAC1 skoAC1) (* skoBC1 skoBC1)) (* skoTC1 skoTC1)))) (* skoBC1 (* skoBC1 (* skoAC1 (* skoAC1 (- 1.)))))) (and (<= 0. skoTC1) (and (> (* skoTC1 skoTC1) skoAC1) (and (> skoTC1 0.) (and (> skoTC1 (/ 3. 2.)) (and (> skoAC1 0.) (and (> 2. skoBC1) (and (> skoBC1 skoAC1) (and (<= 0. skoBC1) (and (> skoBC1 0.) (and (> (* skoTC1 (* skoTC1 (* skoBC1 (+ (* skoAC1 (- 1.)) skoBC1)))) 0.) (<= (* skoAC1 (- 1.)) skoTC1))))))))))))))

% In GRF format:
(sequent " MetiTarski formula " (antecedent (<= 0. skoAC1) (> (* skoTC1 (* skoTC1 (+ (+ (* skoAC1 skoAC1) (* skoBC1 skoBC1)) (* skoTC1 skoTC1)))) (* skoBC1 (* skoBC1 (* skoAC1 (* skoAC1 (- 1.)))))) (<= 0. skoTC1) (> (* skoTC1 skoTC1) skoAC1) (> skoTC1 0.) (> skoTC1 (/ 3. 2.)) (> skoAC1 0.) (> 2. skoBC1) (> skoBC1 skoAC1) (<= 0. skoBC1) (> skoBC1 0.) (> (* skoTC1 (* skoTC1 (* skoBC1 (+ (* skoAC1 (- 1.)) skoBC1)))) 0.)) (succedent (> (* skoAC1 (- 1.)) skoTC1)))
-----[end problem]-----

-----[begin problem]-----
% In Mathematica format:
Timing[Resolve[Exists[{skoTC1,skoBC1,skoAC1}, And[skoTC1*skoTC1*(skoAC1*skoAC1*-1+skoBC1*skoBC1*-1+skoTC1*skoTC1*-1)>skoBC1*skoBC1*skoAC1*skoAC1,skoTC1*(skoAC1+skoBC1*(-1+skoAC1*-1))>skoBC1*skoAC1*(157079/50000),skoTC1*skoTC1*(skoAC1*skoAC1+skoBC1*skoBC1+skoTC1*skoTC1)>skoBC1*skoBC1*skoAC1*skoAC1*-1,skoTC1*skoTC1>skoAC1,skoTC1>0,skoTC1>(3/2),skoAC1>0,2>skoBC1,skoBC1>skoAC1,skoBC1>0,skoTC1*skoTC1*skoBC1*(skoAC1*-1+skoBC1)>0]], Reals]]

% In QepcadB format:
(E skoTC1) (E skoBC1) (E skoAC1) [[(skoBC1 skoBC1 skoAC1 skoAC1)<(skoTC1 skoTC1 (((skoAC1 skoAC1 (-1))+(skoBC1 skoBC1 (-1)))+(skoTC1 skoTC1 (-1))))]/\[[(skoBC1 skoAC1 (157079/50000))<(skoTC1 (skoAC1+(skoBC1 (-1+(skoAC1 (-1))))))]/\[[(skoBC1 skoBC1 skoAC1 skoAC1 (-1))<(skoTC1 skoTC1 (((skoAC1 skoAC1)+(skoBC1 skoBC1))+(skoTC1 skoTC1)))]/\[[skoAC1<(skoTC1 skoTC1)]/\[[0<skoTC1]/\[[3/2<skoTC1]/\[[0<skoAC1]/\[[skoBC1<2]/\[[skoAC1<skoBC1]/\[[0<skoBC1]/\[0<(skoTC1 skoTC1 skoBC1 ((skoAC1 (-1))+skoBC1))]]]]]]]]]]].

% In SMTLib2 format:
(declare-fun skoTC1 () Real) (declare-fun skoBC1 () Real) (declare-fun skoAC1 () Real) (assert (and (> (* skoTC1 (* skoTC1 (+ (+ (* skoAC1 (* skoAC1 (- 1.))) (* skoBC1 (* skoBC1 (- 1.)))) (* skoTC1 (* skoTC1 (- 1.)))))) (* skoBC1 (* skoBC1 (* skoAC1 skoAC1)))) (and (> (* skoTC1 (+ skoAC1 (* skoBC1 (+ (- 1.) (* skoAC1 (- 1.)))))) (* skoBC1 (* skoAC1 (/ 157079. 50000.)))) (and (> (* skoTC1 (* skoTC1 (+ (+ (* skoAC1 skoAC1) (* skoBC1 skoBC1)) (* skoTC1 skoTC1)))) (* skoBC1 (* skoBC1 (* skoAC1 (* skoAC1 (- 1.)))))) (and (> (* skoTC1 skoTC1) skoAC1) (and (> skoTC1 0.) (and (> skoTC1 (/ 3. 2.)) (and (> skoAC1 0.) (and (> 2. skoBC1) (and (> skoBC1 skoAC1) (and (> skoBC1 0.) (> (* skoTC1 (* skoTC1 (* skoBC1 (+ (* skoAC1 (- 1.)) skoBC1)))) 0.))))))))))))

% In GRF format:
(sequent " MetiTarski formula " (antecedent (> (* skoTC1 (* skoTC1 (+ (+ (* skoAC1 (* skoAC1 (- 1.))) (* skoBC1 (* skoBC1 (- 1.)))) (* skoTC1 (* skoTC1 (- 1.)))))) (* skoBC1 (* skoBC1 (* skoAC1 skoAC1)))) (> (* skoTC1 (+ skoAC1 (* skoBC1 (+ (- 1.) (* skoAC1 (- 1.)))))) (* skoBC1 (* skoAC1 (/ 157079. 50000.)))) (> (* skoTC1 (* skoTC1 (+ (+ (* skoAC1 skoAC1) (* skoBC1 skoBC1)) (* skoTC1 skoTC1)))) (* skoBC1 (* skoBC1 (* skoAC1 (* skoAC1 (- 1.)))))) (> (* skoTC1 skoTC1) skoAC1) (> skoTC1 0.) (> skoTC1 (/ 3. 2.)) (> skoAC1 0.) (> 2. skoBC1) (> skoBC1 skoAC1) (> skoBC1 0.)) (succedent (<= (* skoTC1 (* skoTC1 (* skoBC1 (+ (* skoAC1 (- 1.)) skoBC1)))) 0.)))
-----[end problem]-----

-----[begin problem]-----
% In Mathematica format:
Timing[Resolve[Exists[{skoTC1,skoBC1,skoAC1}, And[skoTC1*(skoAC1+skoBC1*(-1+skoAC1*-1))<=skoBC1*skoAC1*(157079/50000),0<=skoAC1,skoTC1*skoTC1*(skoAC1*skoAC1+skoBC1*skoBC1+skoTC1*skoTC1)>skoBC1*skoBC1*skoAC1*skoAC1*-1,0<=skoTC1,skoTC1*skoTC1>skoAC1,skoTC1>0,skoTC1>(3/2),skoAC1>0,2>skoBC1,skoBC1>skoAC1,0<=skoBC1,skoBC1>0,skoTC1*skoTC1*skoBC1*(skoAC1*-1+skoBC1)>0,skoAC1*-1<=skoTC1]], Reals]]

% In QepcadB format:
(E skoTC1) (E skoBC1) (E skoAC1) [[(skoTC1 (skoAC1+(skoBC1 (-1+(skoAC1 (-1))))))<=(skoBC1 skoAC1 (157079/50000))]/\[[0<=skoAC1]/\[[(skoBC1 skoBC1 skoAC1 skoAC1 (-1))<(skoTC1 skoTC1 (((skoAC1 skoAC1)+(skoBC1 skoBC1))+(skoTC1 skoTC1)))]/\[[0<=skoTC1]/\[[skoAC1<(skoTC1 skoTC1)]/\[[0<skoTC1]/\[[3/2<skoTC1]/\[[0<skoAC1]/\[[skoBC1<2]/\[[skoAC1<skoBC1]/\[[0<=skoBC1]/\[[0<skoBC1]/\[[0<(skoTC1 skoTC1 skoBC1 ((skoAC1 (-1))+skoBC1))]/\[(skoAC1 (-1))<=skoTC1]]]]]]]]]]]]]].

% In SMTLib2 format:
(declare-fun skoTC1 () Real) (declare-fun skoBC1 () Real) (declare-fun skoAC1 () Real) (assert (and (<= (* skoTC1 (+ skoAC1 (* skoBC1 (+ (- 1.) (* skoAC1 (- 1.)))))) (* skoBC1 (* skoAC1 (/ 157079. 50000.)))) (and (<= 0. skoAC1) (and (> (* skoTC1 (* skoTC1 (+ (+ (* skoAC1 skoAC1) (* skoBC1 skoBC1)) (* skoTC1 skoTC1)))) (* skoBC1 (* skoBC1 (* skoAC1 (* skoAC1 (- 1.)))))) (and (<= 0. skoTC1) (and (> (* skoTC1 skoTC1) skoAC1) (and (> skoTC1 0.) (and (> skoTC1 (/ 3. 2.)) (and (> skoAC1 0.) (and (> 2. skoBC1) (and (> skoBC1 skoAC1) (and (<= 0. skoBC1) (and (> skoBC1 0.) (and (> (* skoTC1 (* skoTC1 (* skoBC1 (+ (* skoAC1 (- 1.)) skoBC1)))) 0.) (<= (* skoAC1 (- 1.)) skoTC1)))))))))))))))

% In GRF format:
(sequent " MetiTarski formula " (antecedent (<= (* skoTC1 (+ skoAC1 (* skoBC1 (+ (- 1.) (* skoAC1 (- 1.)))))) (* skoBC1 (* skoAC1 (/ 157079. 50000.)))) (<= 0. skoAC1) (> (* skoTC1 (* skoTC1 (+ (+ (* skoAC1 skoAC1) (* skoBC1 skoBC1)) (* skoTC1 skoTC1)))) (* skoBC1 (* skoBC1 (* skoAC1 (* skoAC1 (- 1.)))))) (<= 0. skoTC1) (> (* skoTC1 skoTC1) skoAC1) (> skoTC1 0.) (> skoTC1 (/ 3. 2.)) (> skoAC1 0.) (> 2. skoBC1) (> skoBC1 skoAC1) (<= 0. skoBC1) (> skoBC1 0.) (> (* skoTC1 (* skoTC1 (* skoBC1 (+ (* skoAC1 (- 1.)) skoBC1)))) 0.)) (succedent (> (* skoAC1 (- 1.)) skoTC1)))
-----[end problem]-----

-----[begin problem]-----
% In Mathematica format:
Timing[Resolve[Exists[{skoTC1,skoBC1,skoAC1}, And[skoTC1*skoTC1*(skoAC1*skoAC1*-1+skoBC1*skoBC1*-1+skoTC1*skoTC1*-1)>skoBC1*skoBC1*skoAC1*skoAC1,skoTC1*(skoBC1*(157079/100000)+skoTC1*(-1+skoBC1))>skoBC1*skoAC1,skoTC1*skoTC1*(skoAC1*skoAC1+skoBC1*skoBC1+skoTC1*skoTC1)>skoBC1*skoBC1*skoAC1*skoAC1*-1,skoTC1*skoTC1>skoAC1,skoTC1>0,skoTC1>(3/2),skoAC1>0,2>skoBC1,skoBC1>skoAC1,skoBC1>0,skoTC1*skoTC1*skoBC1*(skoAC1*-1+skoBC1)>0]], Reals]]

% In QepcadB format:
(E skoTC1) (E skoBC1) (E skoAC1) [[(skoBC1 skoBC1 skoAC1 skoAC1)<(skoTC1 skoTC1 (((skoAC1 skoAC1 (-1))+(skoBC1 skoBC1 (-1)))+(skoTC1 skoTC1 (-1))))]/\[[(skoBC1 skoAC1)<(skoTC1 ((skoBC1 (157079/100000))+(skoTC1 (-1+skoBC1))))]/\[[(skoBC1 skoBC1 skoAC1 skoAC1 (-1))<(skoTC1 skoTC1 (((skoAC1 skoAC1)+(skoBC1 skoBC1))+(skoTC1 skoTC1)))]/\[[skoAC1<(skoTC1 skoTC1)]/\[[0<skoTC1]/\[[3/2<skoTC1]/\[[0<skoAC1]/\[[skoBC1<2]/\[[skoAC1<skoBC1]/\[[0<skoBC1]/\[0<(skoTC1 skoTC1 skoBC1 ((skoAC1 (-1))+skoBC1))]]]]]]]]]]].

% In SMTLib2 format:
(declare-fun skoTC1 () Real) (declare-fun skoBC1 () Real) (declare-fun skoAC1 () Real) (assert (and (> (* skoTC1 (* skoTC1 (+ (+ (* skoAC1 (* skoAC1 (- 1.))) (* skoBC1 (* skoBC1 (- 1.)))) (* skoTC1 (* skoTC1 (- 1.)))))) (* skoBC1 (* skoBC1 (* skoAC1 skoAC1)))) (and (> (* skoTC1 (+ (* skoBC1 (/ 157079. 100000.)) (* skoTC1 (+ (- 1.) skoBC1)))) (* skoBC1 skoAC1)) (and (> (* skoTC1 (* skoTC1 (+ (+ (* skoAC1 skoAC1) (* skoBC1 skoBC1)) (* skoTC1 skoTC1)))) (* skoBC1 (* skoBC1 (* skoAC1 (* skoAC1 (- 1.)))))) (and (> (* skoTC1 skoTC1) skoAC1) (and (> skoTC1 0.) (and (> skoTC1 (/ 3. 2.)) (and (> skoAC1 0.) (and (> 2. skoBC1) (and (> skoBC1 skoAC1) (and (> skoBC1 0.) (> (* skoTC1 (* skoTC1 (* skoBC1 (+ (* skoAC1 (- 1.)) skoBC1)))) 0.))))))))))))

% In GRF format:
(sequent " MetiTarski formula " (antecedent (> (* skoTC1 (* skoTC1 (+ (+ (* skoAC1 (* skoAC1 (- 1.))) (* skoBC1 (* skoBC1 (- 1.)))) (* skoTC1 (* skoTC1 (- 1.)))))) (* skoBC1 (* skoBC1 (* skoAC1 skoAC1)))) (> (* skoTC1 (+ (* skoBC1 (/ 157079. 100000.)) (* skoTC1 (+ (- 1.) skoBC1)))) (* skoBC1 skoAC1)) (> (* skoTC1 (* skoTC1 (+ (+ (* skoAC1 skoAC1) (* skoBC1 skoBC1)) (* skoTC1 skoTC1)))) (* skoBC1 (* skoBC1 (* skoAC1 (* skoAC1 (- 1.)))))) (> (* skoTC1 skoTC1) skoAC1) (> skoTC1 0.) (> skoTC1 (/ 3. 2.)) (> skoAC1 0.) (> 2. skoBC1) (> skoBC1 skoAC1) (> skoBC1 0.)) (succedent (<= (* skoTC1 (* skoTC1 (* skoBC1 (+ (* skoAC1 (- 1.)) skoBC1)))) 0.)))
-----[end problem]-----

-----[begin problem]-----
% In Mathematica format:
Timing[Resolve[Exists[{skoTC1,skoBC1,skoAC1}, And[skoTC1*(skoBC1*(157079/100000)+skoTC1*(-1+skoBC1))<=skoBC1*skoAC1,0<=skoAC1,skoTC1*skoTC1*(skoAC1*skoAC1+skoBC1*skoBC1+skoTC1*skoTC1)>skoBC1*skoBC1*skoAC1*skoAC1*-1,0<=skoTC1,skoTC1*skoTC1>skoAC1,skoTC1>0,skoTC1>(3/2),skoAC1>0,2>skoBC1,skoBC1>skoAC1,0<=skoBC1,skoBC1>0,skoTC1*skoTC1*skoBC1*(skoAC1*-1+skoBC1)>0,skoAC1*-1<=skoTC1]], Reals]]

% In QepcadB format:
(E skoTC1) (E skoBC1) (E skoAC1) [[(skoTC1 ((skoBC1 (157079/100000))+(skoTC1 (-1+skoBC1))))<=(skoBC1 skoAC1)]/\[[0<=skoAC1]/\[[(skoBC1 skoBC1 skoAC1 skoAC1 (-1))<(skoTC1 skoTC1 (((skoAC1 skoAC1)+(skoBC1 skoBC1))+(skoTC1 skoTC1)))]/\[[0<=skoTC1]/\[[skoAC1<(skoTC1 skoTC1)]/\[[0<skoTC1]/\[[3/2<skoTC1]/\[[0<skoAC1]/\[[skoBC1<2]/\[[skoAC1<skoBC1]/\[[0<=skoBC1]/\[[0<skoBC1]/\[[0<(skoTC1 skoTC1 skoBC1 ((skoAC1 (-1))+skoBC1))]/\[(skoAC1 (-1))<=skoTC1]]]]]]]]]]]]]].

% In SMTLib2 format:
(declare-fun skoTC1 () Real) (declare-fun skoBC1 () Real) (declare-fun skoAC1 () Real) (assert (and (<= (* skoTC1 (+ (* skoBC1 (/ 157079. 100000.)) (* skoTC1 (+ (- 1.) skoBC1)))) (* skoBC1 skoAC1)) (and (<= 0. skoAC1) (and (> (* skoTC1 (* skoTC1 (+ (+ (* skoAC1 skoAC1) (* skoBC1 skoBC1)) (* skoTC1 skoTC1)))) (* skoBC1 (* skoBC1 (* skoAC1 (* skoAC1 (- 1.)))))) (and (<= 0. skoTC1) (and (> (* skoTC1 skoTC1) skoAC1) (and (> skoTC1 0.) (and (> skoTC1 (/ 3. 2.)) (and (> skoAC1 0.) (and (> 2. skoBC1) (and (> skoBC1 skoAC1) (and (<= 0. skoBC1) (and (> skoBC1 0.) (and (> (* skoTC1 (* skoTC1 (* skoBC1 (+ (* skoAC1 (- 1.)) skoBC1)))) 0.) (<= (* skoAC1 (- 1.)) skoTC1)))))))))))))))

% In GRF format:
(sequent " MetiTarski formula " (antecedent (<= (* skoTC1 (+ (* skoBC1 (/ 157079. 100000.)) (* skoTC1 (+ (- 1.) skoBC1)))) (* skoBC1 skoAC1)) (<= 0. skoAC1) (> (* skoTC1 (* skoTC1 (+ (+ (* skoAC1 skoAC1) (* skoBC1 skoBC1)) (* skoTC1 skoTC1)))) (* skoBC1 (* skoBC1 (* skoAC1 (* skoAC1 (- 1.)))))) (<= 0. skoTC1) (> (* skoTC1 skoTC1) skoAC1) (> skoTC1 0.) (> skoTC1 (/ 3. 2.)) (> skoAC1 0.) (> 2. skoBC1) (> skoBC1 skoAC1) (<= 0. skoBC1) (> skoBC1 0.) (> (* skoTC1 (* skoTC1 (* skoBC1 (+ (* skoAC1 (- 1.)) skoBC1)))) 0.)) (succedent (> (* skoAC1 (- 1.)) skoTC1)))
-----[end problem]-----

-----[begin problem]-----
% In Mathematica format:
Timing[Resolve[Exists[{skoTC1,skoAC1,skoBC1}, And[skoTC1*skoTC1*(skoAC1*skoAC1*-1+skoBC1*skoBC1*-1+skoTC1*skoTC1*-1)>skoBC1*skoBC1*skoAC1*skoAC1,skoTC1*(skoAC1*(-157079/100000)+skoTC1*(-1+skoAC1*-1))>skoBC1*skoAC1,skoTC1*skoTC1*(skoAC1*skoAC1+skoBC1*skoBC1+skoTC1*skoTC1)>skoBC1*skoBC1*skoAC1*skoAC1*-1,skoTC1*skoTC1>skoAC1,skoTC1>0,skoTC1>(3/2),skoAC1>0,2>skoBC1,skoBC1>skoAC1,skoBC1>0,skoTC1*skoTC1*skoBC1*(skoAC1*-1+skoBC1)>0]], Reals]]

% In QepcadB format:
(E skoTC1) (E skoAC1) (E skoBC1) [[(skoBC1 skoBC1 skoAC1 skoAC1)<(skoTC1 skoTC1 (((skoAC1 skoAC1 (-1))+(skoBC1 skoBC1 (-1)))+(skoTC1 skoTC1 (-1))))]/\[[(skoBC1 skoAC1)<(skoTC1 ((skoAC1 (-157079/100000))+(skoTC1 (-1+(skoAC1 (-1))))))]/\[[(skoBC1 skoBC1 skoAC1 skoAC1 (-1))<(skoTC1 skoTC1 (((skoAC1 skoAC1)+(skoBC1 skoBC1))+(skoTC1 skoTC1)))]/\[[skoAC1<(skoTC1 skoTC1)]/\[[0<skoTC1]/\[[3/2<skoTC1]/\[[0<skoAC1]/\[[skoBC1<2]/\[[skoAC1<skoBC1]/\[[0<skoBC1]/\[0<(skoTC1 skoTC1 skoBC1 ((skoAC1 (-1))+skoBC1))]]]]]]]]]]].

% In SMTLib2 format:
(declare-fun skoTC1 () Real) (declare-fun skoAC1 () Real) (declare-fun skoBC1 () Real) (assert (and (> (* skoTC1 (* skoTC1 (+ (+ (* skoAC1 (* skoAC1 (- 1.))) (* skoBC1 (* skoBC1 (- 1.)))) (* skoTC1 (* skoTC1 (- 1.)))))) (* skoBC1 (* skoBC1 (* skoAC1 skoAC1)))) (and (> (* skoTC1 (+ (* skoAC1 (/ (- 157079.) 100000.)) (* skoTC1 (+ (- 1.) (* skoAC1 (- 1.)))))) (* skoBC1 skoAC1)) (and (> (* skoTC1 (* skoTC1 (+ (+ (* skoAC1 skoAC1) (* skoBC1 skoBC1)) (* skoTC1 skoTC1)))) (* skoBC1 (* skoBC1 (* skoAC1 (* skoAC1 (- 1.)))))) (and (> (* skoTC1 skoTC1) skoAC1) (and (> skoTC1 0.) (and (> skoTC1 (/ 3. 2.)) (and (> skoAC1 0.) (and (> 2. skoBC1) (and (> skoBC1 skoAC1) (and (> skoBC1 0.) (> (* skoTC1 (* skoTC1 (* skoBC1 (+ (* skoAC1 (- 1.)) skoBC1)))) 0.))))))))))))

% In GRF format:
(sequent " MetiTarski formula " (antecedent (> (* skoTC1 (* skoTC1 (+ (+ (* skoAC1 (* skoAC1 (- 1.))) (* skoBC1 (* skoBC1 (- 1.)))) (* skoTC1 (* skoTC1 (- 1.)))))) (* skoBC1 (* skoBC1 (* skoAC1 skoAC1)))) (> (* skoTC1 (+ (* skoAC1 (/ (- 157079.) 100000.)) (* skoTC1 (+ (- 1.) (* skoAC1 (- 1.)))))) (* skoBC1 skoAC1)) (> (* skoTC1 (* skoTC1 (+ (+ (* skoAC1 skoAC1) (* skoBC1 skoBC1)) (* skoTC1 skoTC1)))) (* skoBC1 (* skoBC1 (* skoAC1 (* skoAC1 (- 1.)))))) (> (* skoTC1 skoTC1) skoAC1) (> skoTC1 0.) (> skoTC1 (/ 3. 2.)) (> skoAC1 0.) (> 2. skoBC1) (> skoBC1 skoAC1) (> skoBC1 0.)) (succedent (<= (* skoTC1 (* skoTC1 (* skoBC1 (+ (* skoAC1 (- 1.)) skoBC1)))) 0.)))
-----[end problem]-----

-----[begin problem]-----
% In Mathematica format:
Timing[Resolve[Exists[{skoTC1,skoAC1,skoBC1}, And[skoTC1*(skoAC1*(-157079/100000)+skoTC1*(-1+skoAC1*-1))<=skoBC1*skoAC1,0<=skoAC1,skoTC1*skoTC1*(skoAC1*skoAC1+skoBC1*skoBC1+skoTC1*skoTC1)>skoBC1*skoBC1*skoAC1*skoAC1*-1,0<=skoTC1,skoTC1*skoTC1>skoAC1,skoTC1>0,skoTC1>(3/2),skoAC1>0,2>skoBC1,skoBC1>skoAC1,0<=skoBC1,skoBC1>0,skoTC1*skoTC1*skoBC1*(skoAC1*-1+skoBC1)>0,skoAC1*-1<=skoTC1]], Reals]]

% In QepcadB format:
(E skoTC1) (E skoAC1) (E skoBC1) [[(skoTC1 ((skoAC1 (-157079/100000))+(skoTC1 (-1+(skoAC1 (-1))))))<=(skoBC1 skoAC1)]/\[[0<=skoAC1]/\[[(skoBC1 skoBC1 skoAC1 skoAC1 (-1))<(skoTC1 skoTC1 (((skoAC1 skoAC1)+(skoBC1 skoBC1))+(skoTC1 skoTC1)))]/\[[0<=skoTC1]/\[[skoAC1<(skoTC1 skoTC1)]/\[[0<skoTC1]/\[[3/2<skoTC1]/\[[0<skoAC1]/\[[skoBC1<2]/\[[skoAC1<skoBC1]/\[[0<=skoBC1]/\[[0<skoBC1]/\[[0<(skoTC1 skoTC1 skoBC1 ((skoAC1 (-1))+skoBC1))]/\[(skoAC1 (-1))<=skoTC1]]]]]]]]]]]]]].

% In SMTLib2 format:
(declare-fun skoTC1 () Real) (declare-fun skoAC1 () Real) (declare-fun skoBC1 () Real) (assert (and (<= (* skoTC1 (+ (* skoAC1 (/ (- 157079.) 100000.)) (* skoTC1 (+ (- 1.) (* skoAC1 (- 1.)))))) (* skoBC1 skoAC1)) (and (<= 0. skoAC1) (and (> (* skoTC1 (* skoTC1 (+ (+ (* skoAC1 skoAC1) (* skoBC1 skoBC1)) (* skoTC1 skoTC1)))) (* skoBC1 (* skoBC1 (* skoAC1 (* skoAC1 (- 1.)))))) (and (<= 0. skoTC1) (and (> (* skoTC1 skoTC1) skoAC1) (and (> skoTC1 0.) (and (> skoTC1 (/ 3. 2.)) (and (> skoAC1 0.) (and (> 2. skoBC1) (and (> skoBC1 skoAC1) (and (<= 0. skoBC1) (and (> skoBC1 0.) (and (> (* skoTC1 (* skoTC1 (* skoBC1 (+ (* skoAC1 (- 1.)) skoBC1)))) 0.) (<= (* skoAC1 (- 1.)) skoTC1)))))))))))))))

% In GRF format:
(sequent " MetiTarski formula " (antecedent (<= (* skoTC1 (+ (* skoAC1 (/ (- 157079.) 100000.)) (* skoTC1 (+ (- 1.) (* skoAC1 (- 1.)))))) (* skoBC1 skoAC1)) (<= 0. skoAC1) (> (* skoTC1 (* skoTC1 (+ (+ (* skoAC1 skoAC1) (* skoBC1 skoBC1)) (* skoTC1 skoTC1)))) (* skoBC1 (* skoBC1 (* skoAC1 (* skoAC1 (- 1.)))))) (<= 0. skoTC1) (> (* skoTC1 skoTC1) skoAC1) (> skoTC1 0.) (> skoTC1 (/ 3. 2.)) (> skoAC1 0.) (> 2. skoBC1) (> skoBC1 skoAC1) (<= 0. skoBC1) (> skoBC1 0.) (> (* skoTC1 (* skoTC1 (* skoBC1 (+ (* skoAC1 (- 1.)) skoBC1)))) 0.)) (succedent (> (* skoAC1 (- 1.)) skoTC1)))
-----[end problem]-----

-----[begin problem]-----
% In Mathematica format:
Timing[Resolve[Exists[{skoTC1,skoBC1,skoAC1}, And[skoTC1*skoTC1*-1>skoAC1*-1+skoBC1,skoTC1*skoTC1*(skoAC1*skoAC1*-1+skoBC1*skoBC1*-1+skoTC1*skoTC1*-1)>skoBC1*skoBC1*skoAC1*skoAC1,skoTC1*skoTC1*(skoAC1*skoAC1+skoBC1*skoBC1+skoTC1*skoTC1)>skoBC1*skoBC1*skoAC1*skoAC1*-1,skoTC1*skoTC1>skoAC1,skoTC1>0,skoTC1>(3/2),skoAC1>0,2>skoBC1,skoBC1>skoAC1,skoBC1>0,skoTC1*skoTC1*skoBC1*(skoAC1*-1+skoBC1)>0]], Reals]]

% In QepcadB format:
(E skoTC1) (E skoBC1) (E skoAC1) [[((skoAC1 (-1))+skoBC1)<(skoTC1 skoTC1 (-1))]/\[[(skoBC1 skoBC1 skoAC1 skoAC1)<(skoTC1 skoTC1 (((skoAC1 skoAC1 (-1))+(skoBC1 skoBC1 (-1)))+(skoTC1 skoTC1 (-1))))]/\[[(skoBC1 skoBC1 skoAC1 skoAC1 (-1))<(skoTC1 skoTC1 (((skoAC1 skoAC1)+(skoBC1 skoBC1))+(skoTC1 skoTC1)))]/\[[skoAC1<(skoTC1 skoTC1)]/\[[0<skoTC1]/\[[3/2<skoTC1]/\[[0<skoAC1]/\[[skoBC1<2]/\[[skoAC1<skoBC1]/\[[0<skoBC1]/\[0<(skoTC1 skoTC1 skoBC1 ((skoAC1 (-1))+skoBC1))]]]]]]]]]]].

% In SMTLib2 format:
(declare-fun skoTC1 () Real) (declare-fun skoBC1 () Real) (declare-fun skoAC1 () Real) (assert (and (> (* skoTC1 (* skoTC1 (- 1.))) (+ (* skoAC1 (- 1.)) skoBC1)) (and (> (* skoTC1 (* skoTC1 (+ (+ (* skoAC1 (* skoAC1 (- 1.))) (* skoBC1 (* skoBC1 (- 1.)))) (* skoTC1 (* skoTC1 (- 1.)))))) (* skoBC1 (* skoBC1 (* skoAC1 skoAC1)))) (and (> (* skoTC1 (* skoTC1 (+ (+ (* skoAC1 skoAC1) (* skoBC1 skoBC1)) (* skoTC1 skoTC1)))) (* skoBC1 (* skoBC1 (* skoAC1 (* skoAC1 (- 1.)))))) (and (> (* skoTC1 skoTC1) skoAC1) (and (> skoTC1 0.) (and (> skoTC1 (/ 3. 2.)) (and (> skoAC1 0.) (and (> 2. skoBC1) (and (> skoBC1 skoAC1) (and (> skoBC1 0.) (> (* skoTC1 (* skoTC1 (* skoBC1 (+ (* skoAC1 (- 1.)) skoBC1)))) 0.))))))))))))

% In GRF format:
(sequent " MetiTarski formula " (antecedent (> (* skoTC1 (* skoTC1 (- 1.))) (+ (* skoAC1 (- 1.)) skoBC1)) (> (* skoTC1 (* skoTC1 (+ (+ (* skoAC1 (* skoAC1 (- 1.))) (* skoBC1 (* skoBC1 (- 1.)))) (* skoTC1 (* skoTC1 (- 1.)))))) (* skoBC1 (* skoBC1 (* skoAC1 skoAC1)))) (> (* skoTC1 (* skoTC1 (+ (+ (* skoAC1 skoAC1) (* skoBC1 skoBC1)) (* skoTC1 skoTC1)))) (* skoBC1 (* skoBC1 (* skoAC1 (* skoAC1 (- 1.)))))) (> (* skoTC1 skoTC1) skoAC1) (> skoTC1 0.) (> skoTC1 (/ 3. 2.)) (> skoAC1 0.) (> 2. skoBC1) (> skoBC1 skoAC1) (> skoBC1 0.)) (succedent (<= (* skoTC1 (* skoTC1 (* skoBC1 (+ (* skoAC1 (- 1.)) skoBC1)))) 0.)))
-----[end problem]-----

-----[begin problem]-----
% In Mathematica format:
Timing[Resolve[Exists[{skoTC1,skoBC1,skoAC1}, And[skoTC1*skoTC1*-1<=skoAC1*-1+skoBC1,0<=skoAC1,skoTC1*skoTC1*(skoAC1*skoAC1+skoBC1*skoBC1+skoTC1*skoTC1)>skoBC1*skoBC1*skoAC1*skoAC1*-1,0<=skoTC1,skoTC1*skoTC1>skoAC1,skoTC1>0,skoTC1>(3/2),skoAC1>0,2>skoBC1,skoBC1>skoAC1,0<=skoBC1,skoBC1>0,skoTC1*skoTC1*skoBC1*(skoAC1*-1+skoBC1)>0,skoAC1*-1<=skoTC1]], Reals]]

% In QepcadB format:
(E skoTC1) (E skoBC1) (E skoAC1) [[(skoTC1 skoTC1 (-1))<=((skoAC1 (-1))+skoBC1)]/\[[0<=skoAC1]/\[[(skoBC1 skoBC1 skoAC1 skoAC1 (-1))<(skoTC1 skoTC1 (((skoAC1 skoAC1)+(skoBC1 skoBC1))+(skoTC1 skoTC1)))]/\[[0<=skoTC1]/\[[skoAC1<(skoTC1 skoTC1)]/\[[0<skoTC1]/\[[3/2<skoTC1]/\[[0<skoAC1]/\[[skoBC1<2]/\[[skoAC1<skoBC1]/\[[0<=skoBC1]/\[[0<skoBC1]/\[[0<(skoTC1 skoTC1 skoBC1 ((skoAC1 (-1))+skoBC1))]/\[(skoAC1 (-1))<=skoTC1]]]]]]]]]]]]]].

% In SMTLib2 format:
(declare-fun skoTC1 () Real) (declare-fun skoBC1 () Real) (declare-fun skoAC1 () Real) (assert (and (<= (* skoTC1 (* skoTC1 (- 1.))) (+ (* skoAC1 (- 1.)) skoBC1)) (and (<= 0. skoAC1) (and (> (* skoTC1 (* skoTC1 (+ (+ (* skoAC1 skoAC1) (* skoBC1 skoBC1)) (* skoTC1 skoTC1)))) (* skoBC1 (* skoBC1 (* skoAC1 (* skoAC1 (- 1.)))))) (and (<= 0. skoTC1) (and (> (* skoTC1 skoTC1) skoAC1) (and (> skoTC1 0.) (and (> skoTC1 (/ 3. 2.)) (and (> skoAC1 0.) (and (> 2. skoBC1) (and (> skoBC1 skoAC1) (and (<= 0. skoBC1) (and (> skoBC1 0.) (and (> (* skoTC1 (* skoTC1 (* skoBC1 (+ (* skoAC1 (- 1.)) skoBC1)))) 0.) (<= (* skoAC1 (- 1.)) skoTC1)))))))))))))))

% In GRF format:
(sequent " MetiTarski formula " (antecedent (<= (* skoTC1 (* skoTC1 (- 1.))) (+ (* skoAC1 (- 1.)) skoBC1)) (<= 0. skoAC1) (> (* skoTC1 (* skoTC1 (+ (+ (* skoAC1 skoAC1) (* skoBC1 skoBC1)) (* skoTC1 skoTC1)))) (* skoBC1 (* skoBC1 (* skoAC1 (* skoAC1 (- 1.)))))) (<= 0. skoTC1) (> (* skoTC1 skoTC1) skoAC1) (> skoTC1 0.) (> skoTC1 (/ 3. 2.)) (> skoAC1 0.) (> 2. skoBC1) (> skoBC1 skoAC1) (<= 0. skoBC1) (> skoBC1 0.) (> (* skoTC1 (* skoTC1 (* skoBC1 (+ (* skoAC1 (- 1.)) skoBC1)))) 0.)) (succedent (> (* skoAC1 (- 1.)) skoTC1)))
-----[end problem]-----

-----[begin problem]-----
% In Mathematica format:
Timing[Resolve[Exists[{skoTC1,skoBC1,skoAC1}, And[skoTC1*skoTC1*(skoAC1*skoAC1*-1+skoBC1*skoBC1*-1+skoTC1*skoTC1*-1)>skoBC1*skoBC1*skoAC1*skoAC1,skoTC1*(skoBC1*(-157079/100000)+skoTC1*(1+skoBC1*-1))>skoBC1*skoAC1*-1,skoTC1*(skoBC1*(157079/100000)+skoTC1*(-1+skoBC1))>skoBC1*skoAC1,skoTC1*skoTC1*(skoAC1*skoAC1+skoBC1*skoBC1+skoTC1*skoTC1)>skoBC1*skoBC1*skoAC1*skoAC1*-1,skoTC1*skoTC1>skoAC1,skoTC1>0,skoTC1>(3/2),skoAC1>0,2>skoBC1,skoBC1>skoAC1,skoBC1>0,skoTC1*skoTC1*skoBC1*(skoAC1*-1+skoBC1)>0]], Reals]]

% In QepcadB format:
(E skoTC1) (E skoBC1) (E skoAC1) [[(skoBC1 skoBC1 skoAC1 skoAC1)<(skoTC1 skoTC1 (((skoAC1 skoAC1 (-1))+(skoBC1 skoBC1 (-1)))+(skoTC1 skoTC1 (-1))))]/\[[(skoBC1 skoAC1 (-1))<(skoTC1 ((skoBC1 (-157079/100000))+(skoTC1 (1+(skoBC1 (-1))))))]/\[[(skoBC1 skoAC1)<(skoTC1 ((skoBC1 (157079/100000))+(skoTC1 (-1+skoBC1))))]/\[[(skoBC1 skoBC1 skoAC1 skoAC1 (-1))<(skoTC1 skoTC1 (((skoAC1 skoAC1)+(skoBC1 skoBC1))+(skoTC1 skoTC1)))]/\[[skoAC1<(skoTC1 skoTC1)]/\[[0<skoTC1]/\[[3/2<skoTC1]/\[[0<skoAC1]/\[[skoBC1<2]/\[[skoAC1<skoBC1]/\[[0<skoBC1]/\[0<(skoTC1 skoTC1 skoBC1 ((skoAC1 (-1))+skoBC1))]]]]]]]]]]]].

% In SMTLib2 format:
(declare-fun skoTC1 () Real) (declare-fun skoBC1 () Real) (declare-fun skoAC1 () Real) (assert (and (> (* skoTC1 (* skoTC1 (+ (+ (* skoAC1 (* skoAC1 (- 1.))) (* skoBC1 (* skoBC1 (- 1.)))) (* skoTC1 (* skoTC1 (- 1.)))))) (* skoBC1 (* skoBC1 (* skoAC1 skoAC1)))) (and (> (* skoTC1 (+ (* skoBC1 (/ (- 157079.) 100000.)) (* skoTC1 (+ 1. (* skoBC1 (- 1.)))))) (* skoBC1 (* skoAC1 (- 1.)))) (and (> (* skoTC1 (+ (* skoBC1 (/ 157079. 100000.)) (* skoTC1 (+ (- 1.) skoBC1)))) (* skoBC1 skoAC1)) (and (> (* skoTC1 (* skoTC1 (+ (+ (* skoAC1 skoAC1) (* skoBC1 skoBC1)) (* skoTC1 skoTC1)))) (* skoBC1 (* skoBC1 (* skoAC1 (* skoAC1 (- 1.)))))) (and (> (* skoTC1 skoTC1) skoAC1) (and (> skoTC1 0.) (and (> skoTC1 (/ 3. 2.)) (and (> skoAC1 0.) (and (> 2. skoBC1) (and (> skoBC1 skoAC1) (and (> skoBC1 0.) (> (* skoTC1 (* skoTC1 (* skoBC1 (+ (* skoAC1 (- 1.)) skoBC1)))) 0.)))))))))))))

% In GRF format:
(sequent " MetiTarski formula " (antecedent (> (* skoTC1 (* skoTC1 (+ (+ (* skoAC1 (* skoAC1 (- 1.))) (* skoBC1 (* skoBC1 (- 1.)))) (* skoTC1 (* skoTC1 (- 1.)))))) (* skoBC1 (* skoBC1 (* skoAC1 skoAC1)))) (> (* skoTC1 (+ (* skoBC1 (/ (- 157079.) 100000.)) (* skoTC1 (+ 1. (* skoBC1 (- 1.)))))) (* skoBC1 (* skoAC1 (- 1.)))) (> (* skoTC1 (+ (* skoBC1 (/ 157079. 100000.)) (* skoTC1 (+ (- 1.) skoBC1)))) (* skoBC1 skoAC1)) (> (* skoTC1 (* skoTC1 (+ (+ (* skoAC1 skoAC1) (* skoBC1 skoBC1)) (* skoTC1 skoTC1)))) (* skoBC1 (* skoBC1 (* skoAC1 (* skoAC1 (- 1.)))))) (> (* skoTC1 skoTC1) skoAC1) (> skoTC1 0.) (> skoTC1 (/ 3. 2.)) (> skoAC1 0.) (> 2. skoBC1) (> skoBC1 skoAC1) (> skoBC1 0.)) (succedent (<= (* skoTC1 (* skoTC1 (* skoBC1 (+ (* skoAC1 (- 1.)) skoBC1)))) 0.)))
-----[end problem]-----

-----[begin problem]-----
% In Mathematica format:
Timing[Resolve[Exists[{skoTC1,skoBC1,skoAC1}, And[skoTC1*(skoBC1*(-157079/100000)+skoTC1*(1+skoBC1*-1))<=skoBC1*skoAC1*-1,skoTC1*(skoBC1*(157079/100000)+skoTC1*(-1+skoBC1))>skoBC1*skoAC1,0<=skoAC1,skoTC1*skoTC1*(skoAC1*skoAC1+skoBC1*skoBC1+skoTC1*skoTC1)>skoBC1*skoBC1*skoAC1*skoAC1*-1,0<=skoTC1,skoTC1*skoTC1>skoAC1,skoTC1>0,skoTC1>(3/2),skoAC1>0,2>skoBC1,skoBC1>skoAC1,0<=skoBC1,skoBC1>0,skoTC1*skoTC1*skoBC1*(skoAC1*-1+skoBC1)>0,skoAC1*-1<=skoTC1]], Reals]]

% In QepcadB format:
(E skoTC1) (E skoBC1) (E skoAC1) [[(skoTC1 ((skoBC1 (-157079/100000))+(skoTC1 (1+(skoBC1 (-1))))))<=(skoBC1 skoAC1 (-1))]/\[[(skoBC1 skoAC1)<(skoTC1 ((skoBC1 (157079/100000))+(skoTC1 (-1+skoBC1))))]/\[[0<=skoAC1]/\[[(skoBC1 skoBC1 skoAC1 skoAC1 (-1))<(skoTC1 skoTC1 (((skoAC1 skoAC1)+(skoBC1 skoBC1))+(skoTC1 skoTC1)))]/\[[0<=skoTC1]/\[[skoAC1<(skoTC1 skoTC1)]/\[[0<skoTC1]/\[[3/2<skoTC1]/\[[0<skoAC1]/\[[skoBC1<2]/\[[skoAC1<skoBC1]/\[[0<=skoBC1]/\[[0<skoBC1]/\[[0<(skoTC1 skoTC1 skoBC1 ((skoAC1 (-1))+skoBC1))]/\[(skoAC1 (-1))<=skoTC1]]]]]]]]]]]]]]].

% In SMTLib2 format:
(declare-fun skoTC1 () Real) (declare-fun skoBC1 () Real) (declare-fun skoAC1 () Real) (assert (and (<= (* skoTC1 (+ (* skoBC1 (/ (- 157079.) 100000.)) (* skoTC1 (+ 1. (* skoBC1 (- 1.)))))) (* skoBC1 (* skoAC1 (- 1.)))) (and (> (* skoTC1 (+ (* skoBC1 (/ 157079. 100000.)) (* skoTC1 (+ (- 1.) skoBC1)))) (* skoBC1 skoAC1)) (and (<= 0. skoAC1) (and (> (* skoTC1 (* skoTC1 (+ (+ (* skoAC1 skoAC1) (* skoBC1 skoBC1)) (* skoTC1 skoTC1)))) (* skoBC1 (* skoBC1 (* skoAC1 (* skoAC1 (- 1.)))))) (and (<= 0. skoTC1) (and (> (* skoTC1 skoTC1) skoAC1) (and (> skoTC1 0.) (and (> skoTC1 (/ 3. 2.)) (and (> skoAC1 0.) (and (> 2. skoBC1) (and (> skoBC1 skoAC1) (and (<= 0. skoBC1) (and (> skoBC1 0.) (and (> (* skoTC1 (* skoTC1 (* skoBC1 (+ (* skoAC1 (- 1.)) skoBC1)))) 0.) (<= (* skoAC1 (- 1.)) skoTC1))))))))))))))))

% In GRF format:
(sequent " MetiTarski formula " (antecedent (<= (* skoTC1 (+ (* skoBC1 (/ (- 157079.) 100000.)) (* skoTC1 (+ 1. (* skoBC1 (- 1.)))))) (* skoBC1 (* skoAC1 (- 1.)))) (> (* skoTC1 (+ (* skoBC1 (/ 157079. 100000.)) (* skoTC1 (+ (- 1.) skoBC1)))) (* skoBC1 skoAC1)) (<= 0. skoAC1) (> (* skoTC1 (* skoTC1 (+ (+ (* skoAC1 skoAC1) (* skoBC1 skoBC1)) (* skoTC1 skoTC1)))) (* skoBC1 (* skoBC1 (* skoAC1 (* skoAC1 (- 1.)))))) (<= 0. skoTC1) (> (* skoTC1 skoTC1) skoAC1) (> skoTC1 0.) (> skoTC1 (/ 3. 2.)) (> skoAC1 0.) (> 2. skoBC1) (> skoBC1 skoAC1) (<= 0. skoBC1) (> skoBC1 0.) (> (* skoTC1 (* skoTC1 (* skoBC1 (+ (* skoAC1 (- 1.)) skoBC1)))) 0.)) (succedent (> (* skoAC1 (- 1.)) skoTC1)))
-----[end problem]-----

-----[begin problem]-----
% In Mathematica format:
Timing[Resolve[Exists[{skoTC1,skoBC1,skoAC1}, And[skoTC1*(skoBC1*(157079/100000)+skoTC1*(-1+skoBC1))<=skoBC1*skoAC1,skoTC1*(skoBC1*(-157079/100000)+skoTC1*(1+skoBC1*-1))>skoBC1*skoAC1*-1,0<=skoAC1,skoTC1*skoTC1*(skoAC1*skoAC1+skoBC1*skoBC1+skoTC1*skoTC1)>skoBC1*skoBC1*skoAC1*skoAC1*-1,0<=skoTC1,skoTC1*skoTC1>skoAC1,skoTC1>0,skoTC1>(3/2),skoAC1>0,2>skoBC1,skoBC1>skoAC1,0<=skoBC1,skoBC1>0,skoTC1*skoTC1*skoBC1*(skoAC1*-1+skoBC1)>0,skoAC1*-1<=skoTC1]], Reals]]

% In QepcadB format:
(E skoTC1) (E skoBC1) (E skoAC1) [[(skoTC1 ((skoBC1 (157079/100000))+(skoTC1 (-1+skoBC1))))<=(skoBC1 skoAC1)]/\[[(skoBC1 skoAC1 (-1))<(skoTC1 ((skoBC1 (-157079/100000))+(skoTC1 (1+(skoBC1 (-1))))))]/\[[0<=skoAC1]/\[[(skoBC1 skoBC1 skoAC1 skoAC1 (-1))<(skoTC1 skoTC1 (((skoAC1 skoAC1)+(skoBC1 skoBC1))+(skoTC1 skoTC1)))]/\[[0<=skoTC1]/\[[skoAC1<(skoTC1 skoTC1)]/\[[0<skoTC1]/\[[3/2<skoTC1]/\[[0<skoAC1]/\[[skoBC1<2]/\[[skoAC1<skoBC1]/\[[0<=skoBC1]/\[[0<skoBC1]/\[[0<(skoTC1 skoTC1 skoBC1 ((skoAC1 (-1))+skoBC1))]/\[(skoAC1 (-1))<=skoTC1]]]]]]]]]]]]]]].

% In SMTLib2 format:
(declare-fun skoTC1 () Real) (declare-fun skoBC1 () Real) (declare-fun skoAC1 () Real) (assert (and (<= (* skoTC1 (+ (* skoBC1 (/ 157079. 100000.)) (* skoTC1 (+ (- 1.) skoBC1)))) (* skoBC1 skoAC1)) (and (> (* skoTC1 (+ (* skoBC1 (/ (- 157079.) 100000.)) (* skoTC1 (+ 1. (* skoBC1 (- 1.)))))) (* skoBC1 (* skoAC1 (- 1.)))) (and (<= 0. skoAC1) (and (> (* skoTC1 (* skoTC1 (+ (+ (* skoAC1 skoAC1) (* skoBC1 skoBC1)) (* skoTC1 skoTC1)))) (* skoBC1 (* skoBC1 (* skoAC1 (* skoAC1 (- 1.)))))) (and (<= 0. skoTC1) (and (> (* skoTC1 skoTC1) skoAC1) (and (> skoTC1 0.) (and (> skoTC1 (/ 3. 2.)) (and (> skoAC1 0.) (and (> 2. skoBC1) (and (> skoBC1 skoAC1) (and (<= 0. skoBC1) (and (> skoBC1 0.) (and (> (* skoTC1 (* skoTC1 (* skoBC1 (+ (* skoAC1 (- 1.)) skoBC1)))) 0.) (<= (* skoAC1 (- 1.)) skoTC1))))))))))))))))

% In GRF format:
(sequent " MetiTarski formula " (antecedent (<= (* skoTC1 (+ (* skoBC1 (/ 157079. 100000.)) (* skoTC1 (+ (- 1.) skoBC1)))) (* skoBC1 skoAC1)) (> (* skoTC1 (+ (* skoBC1 (/ (- 157079.) 100000.)) (* skoTC1 (+ 1. (* skoBC1 (- 1.)))))) (* skoBC1 (* skoAC1 (- 1.)))) (<= 0. skoAC1) (> (* skoTC1 (* skoTC1 (+ (+ (* skoAC1 skoAC1) (* skoBC1 skoBC1)) (* skoTC1 skoTC1)))) (* skoBC1 (* skoBC1 (* skoAC1 (* skoAC1 (- 1.)))))) (<= 0. skoTC1) (> (* skoTC1 skoTC1) skoAC1) (> skoTC1 0.) (> skoTC1 (/ 3. 2.)) (> skoAC1 0.) (> 2. skoBC1) (> skoBC1 skoAC1) (<= 0. skoBC1) (> skoBC1 0.) (> (* skoTC1 (* skoTC1 (* skoBC1 (+ (* skoAC1 (- 1.)) skoBC1)))) 0.)) (succedent (> (* skoAC1 (- 1.)) skoTC1)))
-----[end problem]-----

-----[begin problem]-----
% In Mathematica format:
Timing[Resolve[Exists[{skoTC1,skoBC1,skoAC1}, And[skoTC1*skoTC1*(skoAC1*skoAC1*-1+skoBC1*skoBC1*-1+skoTC1*skoTC1*-1)<=1+skoBC1*skoBC1*skoAC1*skoAC1,0<=skoAC1,skoTC1*skoTC1*(skoAC1*skoAC1+skoBC1*skoBC1+skoTC1*skoTC1)>skoBC1*skoBC1*skoAC1*skoAC1*-1,0<=skoTC1,skoTC1*skoTC1>skoAC1,skoTC1>0,skoTC1>(3/2),skoAC1>0,2>skoBC1,skoBC1>skoAC1,0<=skoBC1,skoBC1>0,skoTC1*skoTC1*skoBC1*(skoAC1*-1+skoBC1)>0,skoAC1*-1<=skoTC1]], Reals]]

% In QepcadB format:
(E skoTC1) (E skoBC1) (E skoAC1) [[(skoTC1 skoTC1 (((skoAC1 skoAC1 (-1))+(skoBC1 skoBC1 (-1)))+(skoTC1 skoTC1 (-1))))<=(1+(skoBC1 skoBC1 skoAC1 skoAC1))]/\[[0<=skoAC1]/\[[(skoBC1 skoBC1 skoAC1 skoAC1 (-1))<(skoTC1 skoTC1 (((skoAC1 skoAC1)+(skoBC1 skoBC1))+(skoTC1 skoTC1)))]/\[[0<=skoTC1]/\[[skoAC1<(skoTC1 skoTC1)]/\[[0<skoTC1]/\[[3/2<skoTC1]/\[[0<skoAC1]/\[[skoBC1<2]/\[[skoAC1<skoBC1]/\[[0<=skoBC1]/\[[0<skoBC1]/\[[0<(skoTC1 skoTC1 skoBC1 ((skoAC1 (-1))+skoBC1))]/\[(skoAC1 (-1))<=skoTC1]]]]]]]]]]]]]].

% In SMTLib2 format:
(declare-fun skoTC1 () Real) (declare-fun skoBC1 () Real) (declare-fun skoAC1 () Real) (assert (and (<= (* skoTC1 (* skoTC1 (+ (+ (* skoAC1 (* skoAC1 (- 1.))) (* skoBC1 (* skoBC1 (- 1.)))) (* skoTC1 (* skoTC1 (- 1.)))))) (+ 1. (* skoBC1 (* skoBC1 (* skoAC1 skoAC1))))) (and (<= 0. skoAC1) (and (> (* skoTC1 (* skoTC1 (+ (+ (* skoAC1 skoAC1) (* skoBC1 skoBC1)) (* skoTC1 skoTC1)))) (* skoBC1 (* skoBC1 (* skoAC1 (* skoAC1 (- 1.)))))) (and (<= 0. skoTC1) (and (> (* skoTC1 skoTC1) skoAC1) (and (> skoTC1 0.) (and (> skoTC1 (/ 3. 2.)) (and (> skoAC1 0.) (and (> 2. skoBC1) (and (> skoBC1 skoAC1) (and (<= 0. skoBC1) (and (> skoBC1 0.) (and (> (* skoTC1 (* skoTC1 (* skoBC1 (+ (* skoAC1 (- 1.)) skoBC1)))) 0.) (<= (* skoAC1 (- 1.)) skoTC1)))))))))))))))

% In GRF format:
(sequent " MetiTarski formula " (antecedent (<= (* skoTC1 (* skoTC1 (+ (+ (* skoAC1 (* skoAC1 (- 1.))) (* skoBC1 (* skoBC1 (- 1.)))) (* skoTC1 (* skoTC1 (- 1.)))))) (+ 1. (* skoBC1 (* skoBC1 (* skoAC1 skoAC1))))) (<= 0. skoAC1) (> (* skoTC1 (* skoTC1 (+ (+ (* skoAC1 skoAC1) (* skoBC1 skoBC1)) (* skoTC1 skoTC1)))) (* skoBC1 (* skoBC1 (* skoAC1 (* skoAC1 (- 1.)))))) (<= 0. skoTC1) (> (* skoTC1 skoTC1) skoAC1) (> skoTC1 0.) (> skoTC1 (/ 3. 2.)) (> skoAC1 0.) (> 2. skoBC1) (> skoBC1 skoAC1) (<= 0. skoBC1) (> skoBC1 0.) (> (* skoTC1 (* skoTC1 (* skoBC1 (+ (* skoAC1 (- 1.)) skoBC1)))) 0.)) (succedent (> (* skoAC1 (- 1.)) skoTC1)))
-----[end problem]-----

-----[begin problem]-----
% In Mathematica format:
Timing[Resolve[Exists[{skoTC1,skoBC1,skoAC1}, And[skoTC1*skoTC1*(skoAC1*skoAC1+skoBC1*skoBC1+skoTC1*skoTC1)<=-1+skoBC1*skoBC1*skoAC1*skoAC1*-1,0<=skoAC1,skoTC1*skoTC1*(skoAC1*skoAC1+skoBC1*skoBC1+skoTC1*skoTC1)>skoBC1*skoBC1*skoAC1*skoAC1*-1,0<=skoTC1,skoTC1*skoTC1>skoAC1,skoTC1>0,skoTC1>(3/2),skoAC1>0,2>skoBC1,skoBC1>skoAC1,0<=skoBC1,skoBC1>0,skoTC1*skoTC1*skoBC1*(skoAC1*-1+skoBC1)>0,skoAC1*-1<=skoTC1]], Reals]]

% In QepcadB format:
(E skoTC1) (E skoBC1) (E skoAC1) [[(skoTC1 skoTC1 (((skoAC1 skoAC1)+(skoBC1 skoBC1))+(skoTC1 skoTC1)))<=(-1+(skoBC1 skoBC1 skoAC1 skoAC1 (-1)))]/\[[0<=skoAC1]/\[[(skoBC1 skoBC1 skoAC1 skoAC1 (-1))<(skoTC1 skoTC1 (((skoAC1 skoAC1)+(skoBC1 skoBC1))+(skoTC1 skoTC1)))]/\[[0<=skoTC1]/\[[skoAC1<(skoTC1 skoTC1)]/\[[0<skoTC1]/\[[3/2<skoTC1]/\[[0<skoAC1]/\[[skoBC1<2]/\[[skoAC1<skoBC1]/\[[0<=skoBC1]/\[[0<skoBC1]/\[[0<(skoTC1 skoTC1 skoBC1 ((skoAC1 (-1))+skoBC1))]/\[(skoAC1 (-1))<=skoTC1]]]]]]]]]]]]]].

% In SMTLib2 format:
(declare-fun skoTC1 () Real) (declare-fun skoBC1 () Real) (declare-fun skoAC1 () Real) (assert (and (<= (* skoTC1 (* skoTC1 (+ (+ (* skoAC1 skoAC1) (* skoBC1 skoBC1)) (* skoTC1 skoTC1)))) (+ (- 1.) (* skoBC1 (* skoBC1 (* skoAC1 (* skoAC1 (- 1.))))))) (and (<= 0. skoAC1) (and (> (* skoTC1 (* skoTC1 (+ (+ (* skoAC1 skoAC1) (* skoBC1 skoBC1)) (* skoTC1 skoTC1)))) (* skoBC1 (* skoBC1 (* skoAC1 (* skoAC1 (- 1.)))))) (and (<= 0. skoTC1) (and (> (* skoTC1 skoTC1) skoAC1) (and (> skoTC1 0.) (and (> skoTC1 (/ 3. 2.)) (and (> skoAC1 0.) (and (> 2. skoBC1) (and (> skoBC1 skoAC1) (and (<= 0. skoBC1) (and (> skoBC1 0.) (and (> (* skoTC1 (* skoTC1 (* skoBC1 (+ (* skoAC1 (- 1.)) skoBC1)))) 0.) (<= (* skoAC1 (- 1.)) skoTC1)))))))))))))))

% In GRF format:
(sequent " MetiTarski formula " (antecedent (<= (* skoTC1 (* skoTC1 (+ (+ (* skoAC1 skoAC1) (* skoBC1 skoBC1)) (* skoTC1 skoTC1)))) (+ (- 1.) (* skoBC1 (* skoBC1 (* skoAC1 (* skoAC1 (- 1.))))))) (<= 0. skoAC1) (> (* skoTC1 (* skoTC1 (+ (+ (* skoAC1 skoAC1) (* skoBC1 skoBC1)) (* skoTC1 skoTC1)))) (* skoBC1 (* skoBC1 (* skoAC1 (* skoAC1 (- 1.)))))) (<= 0. skoTC1) (> (* skoTC1 skoTC1) skoAC1) (> skoTC1 0.) (> skoTC1 (/ 3. 2.)) (> skoAC1 0.) (> 2. skoBC1) (> skoBC1 skoAC1) (<= 0. skoBC1) (> skoBC1 0.) (> (* skoTC1 (* skoTC1 (* skoBC1 (+ (* skoAC1 (- 1.)) skoBC1)))) 0.)) (succedent (> (* skoAC1 (- 1.)) skoTC1)))
-----[end problem]-----

-----[begin problem]-----
% In Mathematica format:
Timing[Resolve[Exists[{skoTC1,skoBC1,skoAC1}, And[skoTC1*skoTC1*-1<=skoAC1*-1+skoBC1,skoTC1*skoTC1>skoAC1+skoBC1*-1,0<=skoAC1,skoTC1*skoTC1*(skoAC1*skoAC1+skoBC1*skoBC1+skoTC1*skoTC1)>skoBC1*skoBC1*skoAC1*skoAC1*-1,0<=skoTC1,skoTC1*skoTC1>skoAC1,skoTC1>0,skoTC1>(3/2),skoAC1>0,2>skoBC1,skoBC1>skoAC1,0<=skoBC1,skoBC1>0,skoTC1*skoTC1*skoBC1*(skoAC1*-1+skoBC1)>0,skoAC1*-1<=skoTC1]], Reals]]

% In QepcadB format:
(E skoTC1) (E skoBC1) (E skoAC1) [[(skoTC1 skoTC1 (-1))<=((skoAC1 (-1))+skoBC1)]/\[[(skoAC1+(skoBC1 (-1)))<(skoTC1 skoTC1)]/\[[0<=skoAC1]/\[[(skoBC1 skoBC1 skoAC1 skoAC1 (-1))<(skoTC1 skoTC1 (((skoAC1 skoAC1)+(skoBC1 skoBC1))+(skoTC1 skoTC1)))]/\[[0<=skoTC1]/\[[skoAC1<(skoTC1 skoTC1)]/\[[0<skoTC1]/\[[3/2<skoTC1]/\[[0<skoAC1]/\[[skoBC1<2]/\[[skoAC1<skoBC1]/\[[0<=skoBC1]/\[[0<skoBC1]/\[[0<(skoTC1 skoTC1 skoBC1 ((skoAC1 (-1))+skoBC1))]/\[(skoAC1 (-1))<=skoTC1]]]]]]]]]]]]]]].

% In SMTLib2 format:
(declare-fun skoTC1 () Real) (declare-fun skoBC1 () Real) (declare-fun skoAC1 () Real) (assert (and (<= (* skoTC1 (* skoTC1 (- 1.))) (+ (* skoAC1 (- 1.)) skoBC1)) (and (> (* skoTC1 skoTC1) (+ skoAC1 (* skoBC1 (- 1.)))) (and (<= 0. skoAC1) (and (> (* skoTC1 (* skoTC1 (+ (+ (* skoAC1 skoAC1) (* skoBC1 skoBC1)) (* skoTC1 skoTC1)))) (* skoBC1 (* skoBC1 (* skoAC1 (* skoAC1 (- 1.)))))) (and (<= 0. skoTC1) (and (> (* skoTC1 skoTC1) skoAC1) (and (> skoTC1 0.) (and (> skoTC1 (/ 3. 2.)) (and (> skoAC1 0.) (and (> 2. skoBC1) (and (> skoBC1 skoAC1) (and (<= 0. skoBC1) (and (> skoBC1 0.) (and (> (* skoTC1 (* skoTC1 (* skoBC1 (+ (* skoAC1 (- 1.)) skoBC1)))) 0.) (<= (* skoAC1 (- 1.)) skoTC1))))))))))))))))

% In GRF format:
(sequent " MetiTarski formula " (antecedent (<= (* skoTC1 (* skoTC1 (- 1.))) (+ (* skoAC1 (- 1.)) skoBC1)) (> (* skoTC1 skoTC1) (+ skoAC1 (* skoBC1 (- 1.)))) (<= 0. skoAC1) (> (* skoTC1 (* skoTC1 (+ (+ (* skoAC1 skoAC1) (* skoBC1 skoBC1)) (* skoTC1 skoTC1)))) (* skoBC1 (* skoBC1 (* skoAC1 (* skoAC1 (- 1.)))))) (<= 0. skoTC1) (> (* skoTC1 skoTC1) skoAC1) (> skoTC1 0.) (> skoTC1 (/ 3. 2.)) (> skoAC1 0.) (> 2. skoBC1) (> skoBC1 skoAC1) (<= 0. skoBC1) (> skoBC1 0.) (> (* skoTC1 (* skoTC1 (* skoBC1 (+ (* skoAC1 (- 1.)) skoBC1)))) 0.)) (succedent (> (* skoAC1 (- 1.)) skoTC1)))
-----[end problem]-----

-----[begin problem]-----
% In Mathematica format:
Timing[Resolve[Exists[{skoTC1,skoBC1,skoAC1}, And[skoTC1*skoTC1*(skoAC1*skoAC1*-1+skoBC1*skoBC1*-1+skoTC1*skoTC1*-1)<=1+skoBC1*skoBC1*skoAC1*skoAC1,skoTC1*(skoBC1*(157079/100000)+skoTC1*(-1+skoBC1))>skoBC1*skoAC1,0<=skoAC1,skoTC1*skoTC1*(skoAC1*skoAC1+skoBC1*skoBC1+skoTC1*skoTC1)>skoBC1*skoBC1*skoAC1*skoAC1*-1,0<=skoTC1,skoTC1*skoTC1>skoAC1,skoTC1>0,skoTC1>(3/2),skoAC1>0,2>skoBC1,skoBC1>skoAC1,0<=skoBC1,skoBC1>0,skoTC1*skoTC1*skoBC1*(skoAC1*-1+skoBC1)>0,skoAC1*-1<=skoTC1]], Reals]]

% In QepcadB format:
(E skoTC1) (E skoBC1) (E skoAC1) [[(skoTC1 skoTC1 (((skoAC1 skoAC1 (-1))+(skoBC1 skoBC1 (-1)))+(skoTC1 skoTC1 (-1))))<=(1+(skoBC1 skoBC1 skoAC1 skoAC1))]/\[[(skoBC1 skoAC1)<(skoTC1 ((skoBC1 (157079/100000))+(skoTC1 (-1+skoBC1))))]/\[[0<=skoAC1]/\[[(skoBC1 skoBC1 skoAC1 skoAC1 (-1))<(skoTC1 skoTC1 (((skoAC1 skoAC1)+(skoBC1 skoBC1))+(skoTC1 skoTC1)))]/\[[0<=skoTC1]/\[[skoAC1<(skoTC1 skoTC1)]/\[[0<skoTC1]/\[[3/2<skoTC1]/\[[0<skoAC1]/\[[skoBC1<2]/\[[skoAC1<skoBC1]/\[[0<=skoBC1]/\[[0<skoBC1]/\[[0<(skoTC1 skoTC1 skoBC1 ((skoAC1 (-1))+skoBC1))]/\[(skoAC1 (-1))<=skoTC1]]]]]]]]]]]]]]].

% In SMTLib2 format:
(declare-fun skoTC1 () Real) (declare-fun skoBC1 () Real) (declare-fun skoAC1 () Real) (assert (and (<= (* skoTC1 (* skoTC1 (+ (+ (* skoAC1 (* skoAC1 (- 1.))) (* skoBC1 (* skoBC1 (- 1.)))) (* skoTC1 (* skoTC1 (- 1.)))))) (+ 1. (* skoBC1 (* skoBC1 (* skoAC1 skoAC1))))) (and (> (* skoTC1 (+ (* skoBC1 (/ 157079. 100000.)) (* skoTC1 (+ (- 1.) skoBC1)))) (* skoBC1 skoAC1)) (and (<= 0. skoAC1) (and (> (* skoTC1 (* skoTC1 (+ (+ (* skoAC1 skoAC1) (* skoBC1 skoBC1)) (* skoTC1 skoTC1)))) (* skoBC1 (* skoBC1 (* skoAC1 (* skoAC1 (- 1.)))))) (and (<= 0. skoTC1) (and (> (* skoTC1 skoTC1) skoAC1) (and (> skoTC1 0.) (and (> skoTC1 (/ 3. 2.)) (and (> skoAC1 0.) (and (> 2. skoBC1) (and (> skoBC1 skoAC1) (and (<= 0. skoBC1) (and (> skoBC1 0.) (and (> (* skoTC1 (* skoTC1 (* skoBC1 (+ (* skoAC1 (- 1.)) skoBC1)))) 0.) (<= (* skoAC1 (- 1.)) skoTC1))))))))))))))))

% In GRF format:
(sequent " MetiTarski formula " (antecedent (<= (* skoTC1 (* skoTC1 (+ (+ (* skoAC1 (* skoAC1 (- 1.))) (* skoBC1 (* skoBC1 (- 1.)))) (* skoTC1 (* skoTC1 (- 1.)))))) (+ 1. (* skoBC1 (* skoBC1 (* skoAC1 skoAC1))))) (> (* skoTC1 (+ (* skoBC1 (/ 157079. 100000.)) (* skoTC1 (+ (- 1.) skoBC1)))) (* skoBC1 skoAC1)) (<= 0. skoAC1) (> (* skoTC1 (* skoTC1 (+ (+ (* skoAC1 skoAC1) (* skoBC1 skoBC1)) (* skoTC1 skoTC1)))) (* skoBC1 (* skoBC1 (* skoAC1 (* skoAC1 (- 1.)))))) (<= 0. skoTC1) (> (* skoTC1 skoTC1) skoAC1) (> skoTC1 0.) (> skoTC1 (/ 3. 2.)) (> skoAC1 0.) (> 2. skoBC1) (> skoBC1 skoAC1) (<= 0. skoBC1) (> skoBC1 0.) (> (* skoTC1 (* skoTC1 (* skoBC1 (+ (* skoAC1 (- 1.)) skoBC1)))) 0.)) (succedent (> (* skoAC1 (- 1.)) skoTC1)))
-----[end problem]-----

-----[begin problem]-----
% In Mathematica format:
Timing[Resolve[Exists[{skoTC1,skoBC1,skoAC1}, And[skoTC1*skoTC1*(skoAC1*skoAC1+skoBC1*skoBC1+skoTC1*skoTC1)<=-1+skoBC1*skoBC1*skoAC1*skoAC1*-1,skoTC1*(skoBC1*(157079/100000)+skoTC1*(-1+skoBC1))>skoBC1*skoAC1,0<=skoAC1,skoTC1*skoTC1*(skoAC1*skoAC1+skoBC1*skoBC1+skoTC1*skoTC1)>skoBC1*skoBC1*skoAC1*skoAC1*-1,0<=skoTC1,skoTC1*skoTC1>skoAC1,skoTC1>0,skoTC1>(3/2),skoAC1>0,2>skoBC1,skoBC1>skoAC1,0<=skoBC1,skoBC1>0,skoTC1*skoTC1*skoBC1*(skoAC1*-1+skoBC1)>0,skoAC1*-1<=skoTC1]], Reals]]

% In QepcadB format:
(E skoTC1) (E skoBC1) (E skoAC1) [[(skoTC1 skoTC1 (((skoAC1 skoAC1)+(skoBC1 skoBC1))+(skoTC1 skoTC1)))<=(-1+(skoBC1 skoBC1 skoAC1 skoAC1 (-1)))]/\[[(skoBC1 skoAC1)<(skoTC1 ((skoBC1 (157079/100000))+(skoTC1 (-1+skoBC1))))]/\[[0<=skoAC1]/\[[(skoBC1 skoBC1 skoAC1 skoAC1 (-1))<(skoTC1 skoTC1 (((skoAC1 skoAC1)+(skoBC1 skoBC1))+(skoTC1 skoTC1)))]/\[[0<=skoTC1]/\[[skoAC1<(skoTC1 skoTC1)]/\[[0<skoTC1]/\[[3/2<skoTC1]/\[[0<skoAC1]/\[[skoBC1<2]/\[[skoAC1<skoBC1]/\[[0<=skoBC1]/\[[0<skoBC1]/\[[0<(skoTC1 skoTC1 skoBC1 ((skoAC1 (-1))+skoBC1))]/\[(skoAC1 (-1))<=skoTC1]]]]]]]]]]]]]]].

% In SMTLib2 format:
(declare-fun skoTC1 () Real) (declare-fun skoBC1 () Real) (declare-fun skoAC1 () Real) (assert (and (<= (* skoTC1 (* skoTC1 (+ (+ (* skoAC1 skoAC1) (* skoBC1 skoBC1)) (* skoTC1 skoTC1)))) (+ (- 1.) (* skoBC1 (* skoBC1 (* skoAC1 (* skoAC1 (- 1.))))))) (and (> (* skoTC1 (+ (* skoBC1 (/ 157079. 100000.)) (* skoTC1 (+ (- 1.) skoBC1)))) (* skoBC1 skoAC1)) (and (<= 0. skoAC1) (and (> (* skoTC1 (* skoTC1 (+ (+ (* skoAC1 skoAC1) (* skoBC1 skoBC1)) (* skoTC1 skoTC1)))) (* skoBC1 (* skoBC1 (* skoAC1 (* skoAC1 (- 1.)))))) (and (<= 0. skoTC1) (and (> (* skoTC1 skoTC1) skoAC1) (and (> skoTC1 0.) (and (> skoTC1 (/ 3. 2.)) (and (> skoAC1 0.) (and (> 2. skoBC1) (and (> skoBC1 skoAC1) (and (<= 0. skoBC1) (and (> skoBC1 0.) (and (> (* skoTC1 (* skoTC1 (* skoBC1 (+ (* skoAC1 (- 1.)) skoBC1)))) 0.) (<= (* skoAC1 (- 1.)) skoTC1))))))))))))))))

% In GRF format:
(sequent " MetiTarski formula " (antecedent (<= (* skoTC1 (* skoTC1 (+ (+ (* skoAC1 skoAC1) (* skoBC1 skoBC1)) (* skoTC1 skoTC1)))) (+ (- 1.) (* skoBC1 (* skoBC1 (* skoAC1 (* skoAC1 (- 1.))))))) (> (* skoTC1 (+ (* skoBC1 (/ 157079. 100000.)) (* skoTC1 (+ (- 1.) skoBC1)))) (* skoBC1 skoAC1)) (<= 0. skoAC1) (> (* skoTC1 (* skoTC1 (+ (+ (* skoAC1 skoAC1) (* skoBC1 skoBC1)) (* skoTC1 skoTC1)))) (* skoBC1 (* skoBC1 (* skoAC1 (* skoAC1 (- 1.)))))) (<= 0. skoTC1) (> (* skoTC1 skoTC1) skoAC1) (> skoTC1 0.) (> skoTC1 (/ 3. 2.)) (> skoAC1 0.) (> 2. skoBC1) (> skoBC1 skoAC1) (<= 0. skoBC1) (> skoBC1 0.) (> (* skoTC1 (* skoTC1 (* skoBC1 (+ (* skoAC1 (- 1.)) skoBC1)))) 0.)) (succedent (> (* skoAC1 (- 1.)) skoTC1)))
-----[end problem]-----

-----[begin problem]-----
% In Mathematica format:
Timing[Resolve[Exists[{skoTC1,skoAC1,skoBC1}, And[skoTC1*(skoAC1*(-157079/100000)+skoTC1*(-1+skoAC1*-1))<=skoBC1*skoAC1,skoTC1*(skoAC1*(157079/100000)+skoTC1*(1+skoAC1))>skoBC1*skoAC1*-1,0<=skoAC1,skoTC1*skoTC1*(skoAC1*skoAC1+skoBC1*skoBC1+skoTC1*skoTC1)>skoBC1*skoBC1*skoAC1*skoAC1*-1,0<=skoTC1,skoTC1*skoTC1>skoAC1,skoTC1>0,skoTC1>(3/2),skoAC1>0,2>skoBC1,skoBC1>skoAC1,0<=skoBC1,skoBC1>0,skoTC1*skoTC1*skoBC1*(skoAC1*-1+skoBC1)>0,skoAC1*-1<=skoTC1]], Reals]]

% In QepcadB format:
(E skoTC1) (E skoAC1) (E skoBC1) [[(skoTC1 ((skoAC1 (-157079/100000))+(skoTC1 (-1+(skoAC1 (-1))))))<=(skoBC1 skoAC1)]/\[[(skoBC1 skoAC1 (-1))<(skoTC1 ((skoAC1 (157079/100000))+(skoTC1 (1+skoAC1))))]/\[[0<=skoAC1]/\[[(skoBC1 skoBC1 skoAC1 skoAC1 (-1))<(skoTC1 skoTC1 (((skoAC1 skoAC1)+(skoBC1 skoBC1))+(skoTC1 skoTC1)))]/\[[0<=skoTC1]/\[[skoAC1<(skoTC1 skoTC1)]/\[[0<skoTC1]/\[[3/2<skoTC1]/\[[0<skoAC1]/\[[skoBC1<2]/\[[skoAC1<skoBC1]/\[[0<=skoBC1]/\[[0<skoBC1]/\[[0<(skoTC1 skoTC1 skoBC1 ((skoAC1 (-1))+skoBC1))]/\[(skoAC1 (-1))<=skoTC1]]]]]]]]]]]]]]].

% In SMTLib2 format:
(declare-fun skoTC1 () Real) (declare-fun skoAC1 () Real) (declare-fun skoBC1 () Real) (assert (and (<= (* skoTC1 (+ (* skoAC1 (/ (- 157079.) 100000.)) (* skoTC1 (+ (- 1.) (* skoAC1 (- 1.)))))) (* skoBC1 skoAC1)) (and (> (* skoTC1 (+ (* skoAC1 (/ 157079. 100000.)) (* skoTC1 (+ 1. skoAC1)))) (* skoBC1 (* skoAC1 (- 1.)))) (and (<= 0. skoAC1) (and (> (* skoTC1 (* skoTC1 (+ (+ (* skoAC1 skoAC1) (* skoBC1 skoBC1)) (* skoTC1 skoTC1)))) (* skoBC1 (* skoBC1 (* skoAC1 (* skoAC1 (- 1.)))))) (and (<= 0. skoTC1) (and (> (* skoTC1 skoTC1) skoAC1) (and (> skoTC1 0.) (and (> skoTC1 (/ 3. 2.)) (and (> skoAC1 0.) (and (> 2. skoBC1) (and (> skoBC1 skoAC1) (and (<= 0. skoBC1) (and (> skoBC1 0.) (and (> (* skoTC1 (* skoTC1 (* skoBC1 (+ (* skoAC1 (- 1.)) skoBC1)))) 0.) (<= (* skoAC1 (- 1.)) skoTC1))))))))))))))))

% In GRF format:
(sequent " MetiTarski formula " (antecedent (<= (* skoTC1 (+ (* skoAC1 (/ (- 157079.) 100000.)) (* skoTC1 (+ (- 1.) (* skoAC1 (- 1.)))))) (* skoBC1 skoAC1)) (> (* skoTC1 (+ (* skoAC1 (/ 157079. 100000.)) (* skoTC1 (+ 1. skoAC1)))) (* skoBC1 (* skoAC1 (- 1.)))) (<= 0. skoAC1) (> (* skoTC1 (* skoTC1 (+ (+ (* skoAC1 skoAC1) (* skoBC1 skoBC1)) (* skoTC1 skoTC1)))) (* skoBC1 (* skoBC1 (* skoAC1 (* skoAC1 (- 1.)))))) (<= 0. skoTC1) (> (* skoTC1 skoTC1) skoAC1) (> skoTC1 0.) (> skoTC1 (/ 3. 2.)) (> skoAC1 0.) (> 2. skoBC1) (> skoBC1 skoAC1) (<= 0. skoBC1) (> skoBC1 0.) (> (* skoTC1 (* skoTC1 (* skoBC1 (+ (* skoAC1 (- 1.)) skoBC1)))) 0.)) (succedent (> (* skoAC1 (- 1.)) skoTC1)))
-----[end problem]-----

-----[begin problem]-----
% In Mathematica format:
Timing[Resolve[Exists[{skoTC1,skoBC1,skoAC1}, And[skoTC1*(skoBC1*(-157079/100000)+skoTC1*(1+skoBC1*-1))>skoBC1*skoAC1*-1,skoTC1*(skoBC1*(157079/100000)+skoTC1*(-1+skoBC1))>skoBC1*skoAC1,skoTC1*skoTC1*(skoAC1*skoAC1+skoBC1*skoBC1+skoTC1*skoTC1)>skoBC1*skoBC1*skoAC1*skoAC1*-1,skoTC1*skoTC1>skoAC1,skoTC1>0,skoTC1>(3/2),skoAC1>0,2>skoBC1,skoBC1>skoAC1,skoBC1>0,skoTC1*skoTC1*skoBC1*(skoAC1*-1+skoBC1)>0]], Reals]]

% In QepcadB format:
(E skoTC1) (E skoBC1) (E skoAC1) [[(skoBC1 skoAC1 (-1))<(skoTC1 ((skoBC1 (-157079/100000))+(skoTC1 (1+(skoBC1 (-1))))))]/\[[(skoBC1 skoAC1)<(skoTC1 ((skoBC1 (157079/100000))+(skoTC1 (-1+skoBC1))))]/\[[(skoBC1 skoBC1 skoAC1 skoAC1 (-1))<(skoTC1 skoTC1 (((skoAC1 skoAC1)+(skoBC1 skoBC1))+(skoTC1 skoTC1)))]/\[[skoAC1<(skoTC1 skoTC1)]/\[[0<skoTC1]/\[[3/2<skoTC1]/\[[0<skoAC1]/\[[skoBC1<2]/\[[skoAC1<skoBC1]/\[[0<skoBC1]/\[0<(skoTC1 skoTC1 skoBC1 ((skoAC1 (-1))+skoBC1))]]]]]]]]]]].

% In SMTLib2 format:
(declare-fun skoTC1 () Real) (declare-fun skoBC1 () Real) (declare-fun skoAC1 () Real) (assert (and (> (* skoTC1 (+ (* skoBC1 (/ (- 157079.) 100000.)) (* skoTC1 (+ 1. (* skoBC1 (- 1.)))))) (* skoBC1 (* skoAC1 (- 1.)))) (and (> (* skoTC1 (+ (* skoBC1 (/ 157079. 100000.)) (* skoTC1 (+ (- 1.) skoBC1)))) (* skoBC1 skoAC1)) (and (> (* skoTC1 (* skoTC1 (+ (+ (* skoAC1 skoAC1) (* skoBC1 skoBC1)) (* skoTC1 skoTC1)))) (* skoBC1 (* skoBC1 (* skoAC1 (* skoAC1 (- 1.)))))) (and (> (* skoTC1 skoTC1) skoAC1) (and (> skoTC1 0.) (and (> skoTC1 (/ 3. 2.)) (and (> skoAC1 0.) (and (> 2. skoBC1) (and (> skoBC1 skoAC1) (and (> skoBC1 0.) (> (* skoTC1 (* skoTC1 (* skoBC1 (+ (* skoAC1 (- 1.)) skoBC1)))) 0.))))))))))))

% In GRF format:
(sequent " MetiTarski formula " (antecedent (> (* skoTC1 (+ (* skoBC1 (/ (- 157079.) 100000.)) (* skoTC1 (+ 1. (* skoBC1 (- 1.)))))) (* skoBC1 (* skoAC1 (- 1.)))) (> (* skoTC1 (+ (* skoBC1 (/ 157079. 100000.)) (* skoTC1 (+ (- 1.) skoBC1)))) (* skoBC1 skoAC1)) (> (* skoTC1 (* skoTC1 (+ (+ (* skoAC1 skoAC1) (* skoBC1 skoBC1)) (* skoTC1 skoTC1)))) (* skoBC1 (* skoBC1 (* skoAC1 (* skoAC1 (- 1.)))))) (> (* skoTC1 skoTC1) skoAC1) (> skoTC1 0.) (> skoTC1 (/ 3. 2.)) (> skoAC1 0.) (> 2. skoBC1) (> skoBC1 skoAC1) (> skoBC1 0.)) (succedent (<= (* skoTC1 (* skoTC1 (* skoBC1 (+ (* skoAC1 (- 1.)) skoBC1)))) 0.)))
-----[end problem]-----

-----[begin problem]-----
% In Mathematica format:
Timing[Resolve[Exists[{skoTC1,skoBC1,skoAC1}, And[skoTC1*skoTC1*(skoAC1*(-1+skoAC1*skoAC1*2)+skoBC1*(1+skoAC1*skoAC1*-2+skoBC1*(skoAC1*(2+skoAC1*(-2+skoAC1*-1))+skoBC1*(-2+skoAC1*skoAC1)))+skoTC1*skoTC1*(skoAC1*(2+skoAC1*(-2+skoAC1*-1))+skoBC1*(-2+skoAC1*skoAC1+skoBC1*(-2+skoAC1*-1+skoBC1))+skoTC1*skoTC1*(-2+skoAC1*-1+skoBC1)))>skoBC1*skoBC1*(skoAC1*skoAC1*skoAC1*-2+skoBC1*skoAC1*skoAC1*2),skoTC1*skoTC1>skoAC1+skoBC1*-1,skoTC1*skoTC1*(skoAC1*skoAC1+skoBC1*skoBC1+skoTC1*skoTC1)>skoBC1*skoBC1*skoAC1*skoAC1*-1,skoTC1*skoTC1>skoAC1,skoTC1>0,skoTC1>(3/2),skoAC1>0,2>skoBC1,skoBC1>skoAC1,skoBC1>0,skoTC1*skoTC1*skoBC1*(skoAC1*-1+skoBC1)>0]], Reals]]

% In QepcadB format:
(E skoTC1) (E skoBC1) (E skoAC1) [[(skoBC1 skoBC1 ((skoAC1 skoAC1 skoAC1 (-2))+(skoBC1 skoAC1 skoAC1 (2))))<(skoTC1 skoTC1 (((skoAC1 (-1+(skoAC1 skoAC1 (2))))+(skoBC1 ((1+(skoAC1 skoAC1 (-2)))+(skoBC1 ((skoAC1 (2+(skoAC1 (-2+(skoAC1 (-1))))))+(skoBC1 (-2+(skoAC1 skoAC1))))))))+(skoTC1 skoTC1 (((skoAC1 (2+(skoAC1 (-2+(skoAC1 (-1))))))+(skoBC1 ((-2+(skoAC1 skoAC1))+(skoBC1 ((-2+(skoAC1 (-1)))+skoBC1)))))+(skoTC1 skoTC1 ((-2+(skoAC1 (-1)))+skoBC1))))))]/\[[(skoAC1+(skoBC1 (-1)))<(skoTC1 skoTC1)]/\[[(skoBC1 skoBC1 skoAC1 skoAC1 (-1))<(skoTC1 skoTC1 (((skoAC1 skoAC1)+(skoBC1 skoBC1))+(skoTC1 skoTC1)))]/\[[skoAC1<(skoTC1 skoTC1)]/\[[0<skoTC1]/\[[3/2<skoTC1]/\[[0<skoAC1]/\[[skoBC1<2]/\[[skoAC1<skoBC1]/\[[0<skoBC1]/\[0<(skoTC1 skoTC1 skoBC1 ((skoAC1 (-1))+skoBC1))]]]]]]]]]]].

% In SMTLib2 format:
(declare-fun skoTC1 () Real) (declare-fun skoBC1 () Real) (declare-fun skoAC1 () Real) (assert (and (> (* skoTC1 (* skoTC1 (+ (+ (* skoAC1 (+ (- 1.) (* skoAC1 (* skoAC1 2.)))) (* skoBC1 (+ (+ 1. (* skoAC1 (* skoAC1 (- 2.)))) (* skoBC1 (+ (* skoAC1 (+ 2. (* skoAC1 (+ (- 2.) (* skoAC1 (- 1.)))))) (* skoBC1 (+ (- 2.) (* skoAC1 skoAC1)))))))) (* skoTC1 (* skoTC1 (+ (+ (* skoAC1 (+ 2. (* skoAC1 (+ (- 2.) (* skoAC1 (- 1.)))))) (* skoBC1 (+ (+ (- 2.) (* skoAC1 skoAC1)) (* skoBC1 (+ (+ (- 2.) (* skoAC1 (- 1.))) skoBC1))))) (* skoTC1 (* skoTC1 (+ (+ (- 2.) (* skoAC1 (- 1.))) skoBC1))))))))) (* skoBC1 (* skoBC1 (+ (* skoAC1 (* skoAC1 (* skoAC1 (- 2.)))) (* skoBC1 (* skoAC1 (* skoAC1 2.))))))) (and (> (* skoTC1 skoTC1) (+ skoAC1 (* skoBC1 (- 1.)))) (and (> (* skoTC1 (* skoTC1 (+ (+ (* skoAC1 skoAC1) (* skoBC1 skoBC1)) (* skoTC1 skoTC1)))) (* skoBC1 (* skoBC1 (* skoAC1 (* skoAC1 (- 1.)))))) (and (> (* skoTC1 skoTC1) skoAC1) (and (> skoTC1 0.) (and (> skoTC1 (/ 3. 2.)) (and (> skoAC1 0.) (and (> 2. skoBC1) (and (> skoBC1 skoAC1) (and (> skoBC1 0.) (> (* skoTC1 (* skoTC1 (* skoBC1 (+ (* skoAC1 (- 1.)) skoBC1)))) 0.))))))))))))

% In GRF format:
(sequent " MetiTarski formula " (antecedent (> (* skoTC1 (* skoTC1 (+ (+ (* skoAC1 (+ (- 1.) (* skoAC1 (* skoAC1 2.)))) (* skoBC1 (+ (+ 1. (* skoAC1 (* skoAC1 (- 2.)))) (* skoBC1 (+ (* skoAC1 (+ 2. (* skoAC1 (+ (- 2.) (* skoAC1 (- 1.)))))) (* skoBC1 (+ (- 2.) (* skoAC1 skoAC1)))))))) (* skoTC1 (* skoTC1 (+ (+ (* skoAC1 (+ 2. (* skoAC1 (+ (- 2.) (* skoAC1 (- 1.)))))) (* skoBC1 (+ (+ (- 2.) (* skoAC1 skoAC1)) (* skoBC1 (+ (+ (- 2.) (* skoAC1 (- 1.))) skoBC1))))) (* skoTC1 (* skoTC1 (+ (+ (- 2.) (* skoAC1 (- 1.))) skoBC1))))))))) (* skoBC1 (* skoBC1 (+ (* skoAC1 (* skoAC1 (* skoAC1 (- 2.)))) (* skoBC1 (* skoAC1 (* skoAC1 2.))))))) (> (* skoTC1 skoTC1) (+ skoAC1 (* skoBC1 (- 1.)))) (> (* skoTC1 (* skoTC1 (+ (+ (* skoAC1 skoAC1) (* skoBC1 skoBC1)) (* skoTC1 skoTC1)))) (* skoBC1 (* skoBC1 (* skoAC1 (* skoAC1 (- 1.)))))) (> (* skoTC1 skoTC1) skoAC1) (> skoTC1 0.) (> skoTC1 (/ 3. 2.)) (> skoAC1 0.) (> 2. skoBC1) (> skoBC1 skoAC1) (> skoBC1 0.)) (succedent (<= (* skoTC1 (* skoTC1 (* skoBC1 (+ (* skoAC1 (- 1.)) skoBC1)))) 0.)))
-----[end problem]-----

-----[begin problem]-----
% In Mathematica format:
Timing[Resolve[Exists[{skoTC1,skoBC1,skoAC1}, And[skoTC1*skoTC1*-1>skoAC1*-1+skoBC1,skoTC1*skoTC1*(skoAC1*(1+skoAC1*skoAC1*-2)+skoBC1*(-1+skoAC1*skoAC1*2+skoBC1*(skoAC1*(-2+skoAC1*(2+skoAC1))+skoBC1*(2+skoAC1*skoAC1*-1)))+skoTC1*skoTC1*(skoAC1*(-2+skoAC1*(2+skoAC1))+skoBC1*(2+skoAC1*skoAC1*-1+skoBC1*(2+skoAC1+skoBC1*-1))+skoTC1*skoTC1*(2+skoAC1+skoBC1*-1)))>skoBC1*skoBC1*(skoAC1*skoAC1*skoAC1*2+skoBC1*skoAC1*skoAC1*-2),skoTC1*skoTC1*(skoAC1*skoAC1+skoBC1*skoBC1+skoTC1*skoTC1)>skoBC1*skoBC1*skoAC1*skoAC1*-1,skoTC1*skoTC1>skoAC1,skoTC1>0,skoTC1>(3/2),skoAC1>0,2>skoBC1,skoBC1>skoAC1,skoBC1>0,skoTC1*skoTC1*skoBC1*(skoAC1*-1+skoBC1)>0]], Reals]]

% In QepcadB format:
(E skoTC1) (E skoBC1) (E skoAC1) [[((skoAC1 (-1))+skoBC1)<(skoTC1 skoTC1 (-1))]/\[[(skoBC1 skoBC1 ((skoAC1 skoAC1 skoAC1 (2))+(skoBC1 skoAC1 skoAC1 (-2))))<(skoTC1 skoTC1 (((skoAC1 (1+(skoAC1 skoAC1 (-2))))+(skoBC1 ((-1+(skoAC1 skoAC1 (2)))+(skoBC1 ((skoAC1 (-2+(skoAC1 (2+skoAC1))))+(skoBC1 (2+(skoAC1 skoAC1 (-1)))))))))+(skoTC1 skoTC1 (((skoAC1 (-2+(skoAC1 (2+skoAC1))))+(skoBC1 ((2+(skoAC1 skoAC1 (-1)))+(skoBC1 ((2+skoAC1)+(skoBC1 (-1)))))))+(skoTC1 skoTC1 ((2+skoAC1)+(skoBC1 (-1))))))))]/\[[(skoBC1 skoBC1 skoAC1 skoAC1 (-1))<(skoTC1 skoTC1 (((skoAC1 skoAC1)+(skoBC1 skoBC1))+(skoTC1 skoTC1)))]/\[[skoAC1<(skoTC1 skoTC1)]/\[[0<skoTC1]/\[[3/2<skoTC1]/\[[0<skoAC1]/\[[skoBC1<2]/\[[skoAC1<skoBC1]/\[[0<skoBC1]/\[0<(skoTC1 skoTC1 skoBC1 ((skoAC1 (-1))+skoBC1))]]]]]]]]]]].

% In SMTLib2 format:
(declare-fun skoTC1 () Real) (declare-fun skoBC1 () Real) (declare-fun skoAC1 () Real) (assert (and (> (* skoTC1 (* skoTC1 (- 1.))) (+ (* skoAC1 (- 1.)) skoBC1)) (and (> (* skoTC1 (* skoTC1 (+ (+ (* skoAC1 (+ 1. (* skoAC1 (* skoAC1 (- 2.))))) (* skoBC1 (+ (+ (- 1.) (* skoAC1 (* skoAC1 2.))) (* skoBC1 (+ (* skoAC1 (+ (- 2.) (* skoAC1 (+ 2. skoAC1)))) (* skoBC1 (+ 2. (* skoAC1 (* skoAC1 (- 1.)))))))))) (* skoTC1 (* skoTC1 (+ (+ (* skoAC1 (+ (- 2.) (* skoAC1 (+ 2. skoAC1)))) (* skoBC1 (+ (+ 2. (* skoAC1 (* skoAC1 (- 1.)))) (* skoBC1 (+ (+ 2. skoAC1) (* skoBC1 (- 1.))))))) (* skoTC1 (* skoTC1 (+ (+ 2. skoAC1) (* skoBC1 (- 1.))))))))))) (* skoBC1 (* skoBC1 (+ (* skoAC1 (* skoAC1 (* skoAC1 2.))) (* skoBC1 (* skoAC1 (* skoAC1 (- 2.)))))))) (and (> (* skoTC1 (* skoTC1 (+ (+ (* skoAC1 skoAC1) (* skoBC1 skoBC1)) (* skoTC1 skoTC1)))) (* skoBC1 (* skoBC1 (* skoAC1 (* skoAC1 (- 1.)))))) (and (> (* skoTC1 skoTC1) skoAC1) (and (> skoTC1 0.) (and (> skoTC1 (/ 3. 2.)) (and (> skoAC1 0.) (and (> 2. skoBC1) (and (> skoBC1 skoAC1) (and (> skoBC1 0.) (> (* skoTC1 (* skoTC1 (* skoBC1 (+ (* skoAC1 (- 1.)) skoBC1)))) 0.))))))))))))

% In GRF format:
(sequent " MetiTarski formula " (antecedent (> (* skoTC1 (* skoTC1 (- 1.))) (+ (* skoAC1 (- 1.)) skoBC1)) (> (* skoTC1 (* skoTC1 (+ (+ (* skoAC1 (+ 1. (* skoAC1 (* skoAC1 (- 2.))))) (* skoBC1 (+ (+ (- 1.) (* skoAC1 (* skoAC1 2.))) (* skoBC1 (+ (* skoAC1 (+ (- 2.) (* skoAC1 (+ 2. skoAC1)))) (* skoBC1 (+ 2. (* skoAC1 (* skoAC1 (- 1.)))))))))) (* skoTC1 (* skoTC1 (+ (+ (* skoAC1 (+ (- 2.) (* skoAC1 (+ 2. skoAC1)))) (* skoBC1 (+ (+ 2. (* skoAC1 (* skoAC1 (- 1.)))) (* skoBC1 (+ (+ 2. skoAC1) (* skoBC1 (- 1.))))))) (* skoTC1 (* skoTC1 (+ (+ 2. skoAC1) (* skoBC1 (- 1.))))))))))) (* skoBC1 (* skoBC1 (+ (* skoAC1 (* skoAC1 (* skoAC1 2.))) (* skoBC1 (* skoAC1 (* skoAC1 (- 2.)))))))) (> (* skoTC1 (* skoTC1 (+ (+ (* skoAC1 skoAC1) (* skoBC1 skoBC1)) (* skoTC1 skoTC1)))) (* skoBC1 (* skoBC1 (* skoAC1 (* skoAC1 (- 1.)))))) (> (* skoTC1 skoTC1) skoAC1) (> skoTC1 0.) (> skoTC1 (/ 3. 2.)) (> skoAC1 0.) (> 2. skoBC1) (> skoBC1 skoAC1) (> skoBC1 0.)) (succedent (<= (* skoTC1 (* skoTC1 (* skoBC1 (+ (* skoAC1 (- 1.)) skoBC1)))) 0.)))
-----[end problem]-----

-----[begin problem]-----
% In Mathematica format:
Timing[Resolve[Exists[{skoTC1,skoAC1,skoBC1}, And[0<=skoBC1,skoTC1>0,0<=skoAC1,skoTC1*skoTC1*(skoAC1*skoAC1+skoBC1*skoBC1+skoTC1*skoTC1)>skoBC1*skoBC1*skoAC1*skoAC1*-1,0<=skoTC1,skoTC1*skoTC1>skoAC1,skoTC1>0,skoTC1>(3/2),skoAC1>0,2>skoBC1,skoBC1>skoAC1,0<=skoBC1,skoBC1>0,skoTC1*skoTC1*skoBC1*(skoAC1*-1+skoBC1)>0,skoAC1*-1<=skoTC1]], Reals]]

% In QepcadB format:
(E skoTC1) (E skoAC1) (E skoBC1) [[0<=skoBC1]/\[[0<skoTC1]/\[[0<=skoAC1]/\[[(skoBC1 skoBC1 skoAC1 skoAC1 (-1))<(skoTC1 skoTC1 (((skoAC1 skoAC1)+(skoBC1 skoBC1))+(skoTC1 skoTC1)))]/\[[0<=skoTC1]/\[[skoAC1<(skoTC1 skoTC1)]/\[[0<skoTC1]/\[[3/2<skoTC1]/\[[0<skoAC1]/\[[skoBC1<2]/\[[skoAC1<skoBC1]/\[[0<=skoBC1]/\[[0<skoBC1]/\[[0<(skoTC1 skoTC1 skoBC1 ((skoAC1 (-1))+skoBC1))]/\[(skoAC1 (-1))<=skoTC1]]]]]]]]]]]]]]].

% In SMTLib2 format:
(declare-fun skoTC1 () Real) (declare-fun skoAC1 () Real) (declare-fun skoBC1 () Real) (assert (and (<= 0. skoBC1) (and (> skoTC1 0.) (and (<= 0. skoAC1) (and (> (* skoTC1 (* skoTC1 (+ (+ (* skoAC1 skoAC1) (* skoBC1 skoBC1)) (* skoTC1 skoTC1)))) (* skoBC1 (* skoBC1 (* skoAC1 (* skoAC1 (- 1.)))))) (and (<= 0. skoTC1) (and (> (* skoTC1 skoTC1) skoAC1) (and (> skoTC1 0.) (and (> skoTC1 (/ 3. 2.)) (and (> skoAC1 0.) (and (> 2. skoBC1) (and (> skoBC1 skoAC1) (and (<= 0. skoBC1) (and (> skoBC1 0.) (and (> (* skoTC1 (* skoTC1 (* skoBC1 (+ (* skoAC1 (- 1.)) skoBC1)))) 0.) (<= (* skoAC1 (- 1.)) skoTC1))))))))))))))))

% In GRF format:
(sequent " MetiTarski formula " (antecedent (<= 0. skoBC1) (> skoTC1 0.) (<= 0. skoAC1) (> (* skoTC1 (* skoTC1 (+ (+ (* skoAC1 skoAC1) (* skoBC1 skoBC1)) (* skoTC1 skoTC1)))) (* skoBC1 (* skoBC1 (* skoAC1 (* skoAC1 (- 1.)))))) (<= 0. skoTC1) (> (* skoTC1 skoTC1) skoAC1) (> skoTC1 0.) (> skoTC1 (/ 3. 2.)) (> skoAC1 0.) (> 2. skoBC1) (> skoBC1 skoAC1) (<= 0. skoBC1) (> skoBC1 0.) (> (* skoTC1 (* skoTC1 (* skoBC1 (+ (* skoAC1 (- 1.)) skoBC1)))) 0.)) (succedent (> (* skoAC1 (- 1.)) skoTC1)))
-----[end problem]-----

-----[begin problem]-----
% In Mathematica format:
Timing[Resolve[Exists[{skoTC1,skoBC1,skoAC1}, And[skoTC1*(skoBC1*(157079/100000)+skoTC1*(-1+skoBC1))>skoBC1*skoAC1,skoTC1*(skoBC1*skoBC1*skoBC1*skoAC1*skoAC1*(-157079/50000)+skoTC1*(skoBC1*(skoAC1*(-1+skoAC1*skoAC1*2)+skoBC1*(1+skoAC1*skoAC1*2+skoBC1*(skoAC1*(2+skoAC1*(-2+skoAC1*-1))+skoBC1*skoAC1*skoAC1)))+skoTC1*(skoBC1*(skoAC1*skoAC1*(-157079/50000)+skoBC1*skoBC1*(-157079/50000))+skoTC1*(skoAC1*skoAC1*2+skoBC1*(skoAC1*(2+skoAC1*(-2+skoAC1*-1))+skoBC1*(2+skoAC1*skoAC1+skoBC1*(-2+skoAC1*-1+skoBC1)))+skoTC1*(skoBC1*(-157079/50000)+skoTC1*(2+skoBC1*(-2+skoAC1*-1+skoBC1)))))))>skoBC1*skoBC1*skoBC1*skoAC1*skoAC1*skoAC1*-2,skoTC1*skoTC1*(skoAC1*skoAC1+skoBC1*skoBC1+skoTC1*skoTC1)>skoBC1*skoBC1*skoAC1*skoAC1*-1,skoTC1*skoTC1>skoAC1,skoTC1>0,skoTC1>(3/2),skoAC1>0,2>skoBC1,skoBC1>skoAC1,skoBC1>0,skoTC1*skoTC1*skoBC1*(skoAC1*-1+skoBC1)>0]], Reals]]

% In QepcadB format:
(E skoTC1) (E skoBC1) (E skoAC1) [[(skoBC1 skoAC1)<(skoTC1 ((skoBC1 (157079/100000))+(skoTC1 (-1+skoBC1))))]/\[[(skoBC1 skoBC1 skoBC1 skoAC1 skoAC1 skoAC1 (-2))<(skoTC1 ((skoBC1 skoBC1 skoBC1 skoAC1 skoAC1 (-157079/50000))+(skoTC1 ((skoBC1 ((skoAC1 (-1+(skoAC1 skoAC1 (2))))+(skoBC1 ((1+(skoAC1 skoAC1 (2)))+(skoBC1 ((skoAC1 (2+(skoAC1 (-2+(skoAC1 (-1))))))+(skoBC1 skoAC1 skoAC1)))))))+(skoTC1 ((skoBC1 ((skoAC1 skoAC1 (-157079/50000))+(skoBC1 skoBC1 (-157079/50000))))+(skoTC1 (((skoAC1 skoAC1 (2))+(skoBC1 ((skoAC1 (2+(skoAC1 (-2+(skoAC1 (-1))))))+(skoBC1 ((2+(skoAC1 skoAC1))+(skoBC1 ((-2+(skoAC1 (-1)))+skoBC1)))))))+(skoTC1 ((skoBC1 (-157079/50000))+(skoTC1 (2+(skoBC1 ((-2+(skoAC1 (-1)))+skoBC1))))))))))))))]/\[[(skoBC1 skoBC1 skoAC1 skoAC1 (-1))<(skoTC1 skoTC1 (((skoAC1 skoAC1)+(skoBC1 skoBC1))+(skoTC1 skoTC1)))]/\[[skoAC1<(skoTC1 skoTC1)]/\[[0<skoTC1]/\[[3/2<skoTC1]/\[[0<skoAC1]/\[[skoBC1<2]/\[[skoAC1<skoBC1]/\[[0<skoBC1]/\[0<(skoTC1 skoTC1 skoBC1 ((skoAC1 (-1))+skoBC1))]]]]]]]]]]].

% In SMTLib2 format:
(declare-fun skoTC1 () Real) (declare-fun skoBC1 () Real) (declare-fun skoAC1 () Real) (assert (and (> (* skoTC1 (+ (* skoBC1 (/ 157079. 100000.)) (* skoTC1 (+ (- 1.) skoBC1)))) (* skoBC1 skoAC1)) (and (> (* skoTC1 (+ (* skoBC1 (* skoBC1 (* skoBC1 (* skoAC1 (* skoAC1 (/ (- 157079.) 50000.)))))) (* skoTC1 (+ (* skoBC1 (+ (* skoAC1 (+ (- 1.) (* skoAC1 (* skoAC1 2.)))) (* skoBC1 (+ (+ 1. (* skoAC1 (* skoAC1 2.))) (* skoBC1 (+ (* skoAC1 (+ 2. (* skoAC1 (+ (- 2.) (* skoAC1 (- 1.)))))) (* skoBC1 (* skoAC1 skoAC1)))))))) (* skoTC1 (+ (* skoBC1 (+ (* skoAC1 (* skoAC1 (/ (- 157079.) 50000.))) (* skoBC1 (* skoBC1 (/ (- 157079.) 50000.))))) (* skoTC1 (+ (+ (* skoAC1 (* skoAC1 2.)) (* skoBC1 (+ (* skoAC1 (+ 2. (* skoAC1 (+ (- 2.) (* skoAC1 (- 1.)))))) (* skoBC1 (+ (+ 2. (* skoAC1 skoAC1)) (* skoBC1 (+ (+ (- 2.) (* skoAC1 (- 1.))) skoBC1))))))) (* skoTC1 (+ (* skoBC1 (/ (- 157079.) 50000.)) (* skoTC1 (+ 2. (* skoBC1 (+ (+ (- 2.) (* skoAC1 (- 1.))) skoBC1)))))))))))))) (* skoBC1 (* skoBC1 (* skoBC1 (* skoAC1 (* skoAC1 (* skoAC1 (- 2.)))))))) (and (> (* skoTC1 (* skoTC1 (+ (+ (* skoAC1 skoAC1) (* skoBC1 skoBC1)) (* skoTC1 skoTC1)))) (* skoBC1 (* skoBC1 (* skoAC1 (* skoAC1 (- 1.)))))) (and (> (* skoTC1 skoTC1) skoAC1) (and (> skoTC1 0.) (and (> skoTC1 (/ 3. 2.)) (and (> skoAC1 0.) (and (> 2. skoBC1) (and (> skoBC1 skoAC1) (and (> skoBC1 0.) (> (* skoTC1 (* skoTC1 (* skoBC1 (+ (* skoAC1 (- 1.)) skoBC1)))) 0.))))))))))))

% In GRF format:
(sequent " MetiTarski formula " (antecedent (> (* skoTC1 (+ (* skoBC1 (/ 157079. 100000.)) (* skoTC1 (+ (- 1.) skoBC1)))) (* skoBC1 skoAC1)) (> (* skoTC1 (+ (* skoBC1 (* skoBC1 (* skoBC1 (* skoAC1 (* skoAC1 (/ (- 157079.) 50000.)))))) (* skoTC1 (+ (* skoBC1 (+ (* skoAC1 (+ (- 1.) (* skoAC1 (* skoAC1 2.)))) (* skoBC1 (+ (+ 1. (* skoAC1 (* skoAC1 2.))) (* skoBC1 (+ (* skoAC1 (+ 2. (* skoAC1 (+ (- 2.) (* skoAC1 (- 1.)))))) (* skoBC1 (* skoAC1 skoAC1)))))))) (* skoTC1 (+ (* skoBC1 (+ (* skoAC1 (* skoAC1 (/ (- 157079.) 50000.))) (* skoBC1 (* skoBC1 (/ (- 157079.) 50000.))))) (* skoTC1 (+ (+ (* skoAC1 (* skoAC1 2.)) (* skoBC1 (+ (* skoAC1 (+ 2. (* skoAC1 (+ (- 2.) (* skoAC1 (- 1.)))))) (* skoBC1 (+ (+ 2. (* skoAC1 skoAC1)) (* skoBC1 (+ (+ (- 2.) (* skoAC1 (- 1.))) skoBC1))))))) (* skoTC1 (+ (* skoBC1 (/ (- 157079.) 50000.)) (* skoTC1 (+ 2. (* skoBC1 (+ (+ (- 2.) (* skoAC1 (- 1.))) skoBC1)))))))))))))) (* skoBC1 (* skoBC1 (* skoBC1 (* skoAC1 (* skoAC1 (* skoAC1 (- 2.)))))))) (> (* skoTC1 (* skoTC1 (+ (+ (* skoAC1 skoAC1) (* skoBC1 skoBC1)) (* skoTC1 skoTC1)))) (* skoBC1 (* skoBC1 (* skoAC1 (* skoAC1 (- 1.)))))) (> (* skoTC1 skoTC1) skoAC1) (> skoTC1 0.) (> skoTC1 (/ 3. 2.)) (> skoAC1 0.) (> 2. skoBC1) (> skoBC1 skoAC1) (> skoBC1 0.)) (succedent (<= (* skoTC1 (* skoTC1 (* skoBC1 (+ (* skoAC1 (- 1.)) skoBC1)))) 0.)))
-----[end problem]-----

-----[begin problem]-----
% In Mathematica format:
Timing[Resolve[Exists[{skoTC1,skoBC1,skoAC1}, And[skoTC1*(skoBC1*(157079/100000)+skoTC1*(-1+skoBC1))>skoBC1*skoAC1,skoTC1*(skoBC1*skoBC1*skoBC1*skoAC1*skoAC1*(-157079/50000)+skoTC1*(skoBC1*(skoAC1*(-1+skoAC1*skoAC1*2)+skoBC1*(1+skoAC1*skoAC1*2+skoBC1*(skoAC1*(2+skoAC1*(-2+skoAC1*-1))+skoBC1*skoAC1*skoAC1)))+skoTC1*(skoBC1*(skoAC1*skoAC1*(-157079/50000)+skoBC1*skoBC1*(-157079/50000))+skoTC1*(skoAC1*skoAC1*2+skoBC1*(skoAC1*(2+skoAC1*(-2+skoAC1*-1))+skoBC1*(2+skoAC1*skoAC1+skoBC1*(-2+skoAC1*-1+skoBC1)))+skoTC1*(skoBC1*(-157079/50000)+skoTC1*(2+skoBC1*(-2+skoAC1*-1+skoBC1)))))))>skoBC1*skoBC1*skoBC1*skoAC1*skoAC1*skoAC1*-2,0<=skoAC1,skoTC1*skoTC1*(skoAC1*skoAC1+skoBC1*skoBC1+skoTC1*skoTC1)>skoBC1*skoBC1*skoAC1*skoAC1*-1,0<=skoTC1,skoTC1*skoTC1>skoAC1,skoTC1>0,skoTC1>(3/2),skoAC1>0,2>skoBC1,skoBC1>skoAC1,0<=skoBC1,skoBC1>0,skoTC1*skoTC1*skoBC1*(skoAC1*-1+skoBC1)>0,skoAC1*-1<=skoTC1]], Reals]]

% In QepcadB format:
(E skoTC1) (E skoBC1) (E skoAC1) [[(skoBC1 skoAC1)<(skoTC1 ((skoBC1 (157079/100000))+(skoTC1 (-1+skoBC1))))]/\[[(skoBC1 skoBC1 skoBC1 skoAC1 skoAC1 skoAC1 (-2))<(skoTC1 ((skoBC1 skoBC1 skoBC1 skoAC1 skoAC1 (-157079/50000))+(skoTC1 ((skoBC1 ((skoAC1 (-1+(skoAC1 skoAC1 (2))))+(skoBC1 ((1+(skoAC1 skoAC1 (2)))+(skoBC1 ((skoAC1 (2+(skoAC1 (-2+(skoAC1 (-1))))))+(skoBC1 skoAC1 skoAC1)))))))+(skoTC1 ((skoBC1 ((skoAC1 skoAC1 (-157079/50000))+(skoBC1 skoBC1 (-157079/50000))))+(skoTC1 (((skoAC1 skoAC1 (2))+(skoBC1 ((skoAC1 (2+(skoAC1 (-2+(skoAC1 (-1))))))+(skoBC1 ((2+(skoAC1 skoAC1))+(skoBC1 ((-2+(skoAC1 (-1)))+skoBC1)))))))+(skoTC1 ((skoBC1 (-157079/50000))+(skoTC1 (2+(skoBC1 ((-2+(skoAC1 (-1)))+skoBC1))))))))))))))]/\[[0<=skoAC1]/\[[(skoBC1 skoBC1 skoAC1 skoAC1 (-1))<(skoTC1 skoTC1 (((skoAC1 skoAC1)+(skoBC1 skoBC1))+(skoTC1 skoTC1)))]/\[[0<=skoTC1]/\[[skoAC1<(skoTC1 skoTC1)]/\[[0<skoTC1]/\[[3/2<skoTC1]/\[[0<skoAC1]/\[[skoBC1<2]/\[[skoAC1<skoBC1]/\[[0<=skoBC1]/\[[0<skoBC1]/\[[0<(skoTC1 skoTC1 skoBC1 ((skoAC1 (-1))+skoBC1))]/\[(skoAC1 (-1))<=skoTC1]]]]]]]]]]]]]]].

% In SMTLib2 format:
(declare-fun skoTC1 () Real) (declare-fun skoBC1 () Real) (declare-fun skoAC1 () Real) (assert (and (> (* skoTC1 (+ (* skoBC1 (/ 157079. 100000.)) (* skoTC1 (+ (- 1.) skoBC1)))) (* skoBC1 skoAC1)) (and (> (* skoTC1 (+ (* skoBC1 (* skoBC1 (* skoBC1 (* skoAC1 (* skoAC1 (/ (- 157079.) 50000.)))))) (* skoTC1 (+ (* skoBC1 (+ (* skoAC1 (+ (- 1.) (* skoAC1 (* skoAC1 2.)))) (* skoBC1 (+ (+ 1. (* skoAC1 (* skoAC1 2.))) (* skoBC1 (+ (* skoAC1 (+ 2. (* skoAC1 (+ (- 2.) (* skoAC1 (- 1.)))))) (* skoBC1 (* skoAC1 skoAC1)))))))) (* skoTC1 (+ (* skoBC1 (+ (* skoAC1 (* skoAC1 (/ (- 157079.) 50000.))) (* skoBC1 (* skoBC1 (/ (- 157079.) 50000.))))) (* skoTC1 (+ (+ (* skoAC1 (* skoAC1 2.)) (* skoBC1 (+ (* skoAC1 (+ 2. (* skoAC1 (+ (- 2.) (* skoAC1 (- 1.)))))) (* skoBC1 (+ (+ 2. (* skoAC1 skoAC1)) (* skoBC1 (+ (+ (- 2.) (* skoAC1 (- 1.))) skoBC1))))))) (* skoTC1 (+ (* skoBC1 (/ (- 157079.) 50000.)) (* skoTC1 (+ 2. (* skoBC1 (+ (+ (- 2.) (* skoAC1 (- 1.))) skoBC1)))))))))))))) (* skoBC1 (* skoBC1 (* skoBC1 (* skoAC1 (* skoAC1 (* skoAC1 (- 2.)))))))) (and (<= 0. skoAC1) (and (> (* skoTC1 (* skoTC1 (+ (+ (* skoAC1 skoAC1) (* skoBC1 skoBC1)) (* skoTC1 skoTC1)))) (* skoBC1 (* skoBC1 (* skoAC1 (* skoAC1 (- 1.)))))) (and (<= 0. skoTC1) (and (> (* skoTC1 skoTC1) skoAC1) (and (> skoTC1 0.) (and (> skoTC1 (/ 3. 2.)) (and (> skoAC1 0.) (and (> 2. skoBC1) (and (> skoBC1 skoAC1) (and (<= 0. skoBC1) (and (> skoBC1 0.) (and (> (* skoTC1 (* skoTC1 (* skoBC1 (+ (* skoAC1 (- 1.)) skoBC1)))) 0.) (<= (* skoAC1 (- 1.)) skoTC1))))))))))))))))

% In GRF format:
(sequent " MetiTarski formula " (antecedent (> (* skoTC1 (+ (* skoBC1 (/ 157079. 100000.)) (* skoTC1 (+ (- 1.) skoBC1)))) (* skoBC1 skoAC1)) (> (* skoTC1 (+ (* skoBC1 (* skoBC1 (* skoBC1 (* skoAC1 (* skoAC1 (/ (- 157079.) 50000.)))))) (* skoTC1 (+ (* skoBC1 (+ (* skoAC1 (+ (- 1.) (* skoAC1 (* skoAC1 2.)))) (* skoBC1 (+ (+ 1. (* skoAC1 (* skoAC1 2.))) (* skoBC1 (+ (* skoAC1 (+ 2. (* skoAC1 (+ (- 2.) (* skoAC1 (- 1.)))))) (* skoBC1 (* skoAC1 skoAC1)))))))) (* skoTC1 (+ (* skoBC1 (+ (* skoAC1 (* skoAC1 (/ (- 157079.) 50000.))) (* skoBC1 (* skoBC1 (/ (- 157079.) 50000.))))) (* skoTC1 (+ (+ (* skoAC1 (* skoAC1 2.)) (* skoBC1 (+ (* skoAC1 (+ 2. (* skoAC1 (+ (- 2.) (* skoAC1 (- 1.)))))) (* skoBC1 (+ (+ 2. (* skoAC1 skoAC1)) (* skoBC1 (+ (+ (- 2.) (* skoAC1 (- 1.))) skoBC1))))))) (* skoTC1 (+ (* skoBC1 (/ (- 157079.) 50000.)) (* skoTC1 (+ 2. (* skoBC1 (+ (+ (- 2.) (* skoAC1 (- 1.))) skoBC1)))))))))))))) (* skoBC1 (* skoBC1 (* skoBC1 (* skoAC1 (* skoAC1 (* skoAC1 (- 2.)))))))) (<= 0. skoAC1) (> (* skoTC1 (* skoTC1 (+ (+ (* skoAC1 skoAC1) (* skoBC1 skoBC1)) (* skoTC1 skoTC1)))) (* skoBC1 (* skoBC1 (* skoAC1 (* skoAC1 (- 1.)))))) (<= 0. skoTC1) (> (* skoTC1 skoTC1) skoAC1) (> skoTC1 0.) (> skoTC1 (/ 3. 2.)) (> skoAC1 0.) (> 2. skoBC1) (> skoBC1 skoAC1) (<= 0. skoBC1) (> skoBC1 0.) (> (* skoTC1 (* skoTC1 (* skoBC1 (+ (* skoAC1 (- 1.)) skoBC1)))) 0.)) (succedent (> (* skoAC1 (- 1.)) skoTC1)))
-----[end problem]-----

