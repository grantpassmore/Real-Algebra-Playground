-----[begin problem]-----
% In Mathematica format:
Timing[Resolve[Exists[{skoSMC1,skoSPC1,skoS2C1,skoXC1}, And[skoSPC1<=-4+skoSMC1*-1,skoXC1==1+skoSMC1*skoSMC1*-1,-1+skoSPC1*skoSPC1==skoXC1,skoS2C1*skoS2C1==2,Pi>(15707963/5000000),(31415927/10000000)>Pi,0<=skoSPC1,0<=skoSMC1,0<=skoS2C1,skoXC1>0,1>skoXC1]], Reals]]

% In QepcadB format:
(E skoSMC1) (E skoSPC1) (E skoS2C1) (E skoXC1) (E pi) [[skoSPC1<=(-4+(skoSMC1 (-1)))]/\[[skoXC1=(1+(skoSMC1 skoSMC1 (-1)))]/\[[(-1+(skoSPC1 skoSPC1))=skoXC1]/\[[(skoS2C1 skoS2C1)=2]/\[[15707963/5000000<pi]/\[[pi<31415927/10000000]/\[[0<=skoSPC1]/\[[0<=skoSMC1]/\[[0<=skoS2C1]/\[[0<skoXC1]/\[skoXC1<1]]]]]]]]]]].

% In SMTLib2 format:
(declare-fun skoSMC1 () Real) (declare-fun skoSPC1 () Real) (declare-fun skoS2C1 () Real) (declare-fun skoXC1 () Real) (declare-fun metit_our_pi () Real) (assert (and (<= skoSPC1 (+ (- 4.) (* skoSMC1 (- 1.)))) (and (= skoXC1 (+ 1. (* skoSMC1 (* skoSMC1 (- 1.))))) (and (= (+ (- 1.) (* skoSPC1 skoSPC1)) skoXC1) (and (= (* skoS2C1 skoS2C1) 2.) (and (> metit_our_pi (/ 15707963. 5000000.)) (and (> (/ 31415927. 10000000.) metit_our_pi) (and (<= 0. skoSPC1) (and (<= 0. skoSMC1) (and (<= 0. skoS2C1) (and (> skoXC1 0.) (> 1. skoXC1))))))))))))

% In GRF format:
(sequent " MetiTarski formula " (antecedent (<= skoSPC1 (+ (- 4.) (* skoSMC1 (- 1.)))) (= skoXC1 (+ 1. (* skoSMC1 (* skoSMC1 (- 1.))))) (= (+ (- 1.) (* skoSPC1 skoSPC1)) skoXC1) (= (* skoS2C1 skoS2C1) 2.) (> metit_our_pi (/ 15707963. 5000000.)) (> (/ 31415927. 10000000.) metit_our_pi) (<= 0. skoSPC1) (<= 0. skoSMC1) (<= 0. skoS2C1) (> skoXC1 0.)) (succedent (<= 1. skoXC1)))
-----[end problem]-----

-----[begin problem]-----
% In Mathematica format:
Timing[Resolve[Exists[{skoSPC1,skoSMC1,skoS2C1,skoXC1}, And[-4+skoSMC1*-1<=skoSPC1,skoXC1==1+skoSMC1*skoSMC1*-1,-1+skoSPC1*skoSPC1==skoXC1,skoS2C1*skoS2C1==2,Pi>(15707963/5000000),(31415927/10000000)>Pi,0<=skoSPC1,0<=skoSMC1,0<=skoS2C1,skoXC1>0,1>skoXC1]], Reals]]

% In QepcadB format:
(E skoSPC1) (E skoSMC1) (E skoS2C1) (E skoXC1) (E pi) [[(-4+(skoSMC1 (-1)))<=skoSPC1]/\[[skoXC1=(1+(skoSMC1 skoSMC1 (-1)))]/\[[(-1+(skoSPC1 skoSPC1))=skoXC1]/\[[(skoS2C1 skoS2C1)=2]/\[[15707963/5000000<pi]/\[[pi<31415927/10000000]/\[[0<=skoSPC1]/\[[0<=skoSMC1]/\[[0<=skoS2C1]/\[[0<skoXC1]/\[skoXC1<1]]]]]]]]]]].

% In SMTLib2 format:
(declare-fun skoSPC1 () Real) (declare-fun skoSMC1 () Real) (declare-fun skoS2C1 () Real) (declare-fun skoXC1 () Real) (declare-fun metit_our_pi () Real) (assert (and (<= (+ (- 4.) (* skoSMC1 (- 1.))) skoSPC1) (and (= skoXC1 (+ 1. (* skoSMC1 (* skoSMC1 (- 1.))))) (and (= (+ (- 1.) (* skoSPC1 skoSPC1)) skoXC1) (and (= (* skoS2C1 skoS2C1) 2.) (and (> metit_our_pi (/ 15707963. 5000000.)) (and (> (/ 31415927. 10000000.) metit_our_pi) (and (<= 0. skoSPC1) (and (<= 0. skoSMC1) (and (<= 0. skoS2C1) (and (> skoXC1 0.) (> 1. skoXC1))))))))))))

% In GRF format:
(sequent " MetiTarski formula " (antecedent (<= (+ (- 4.) (* skoSMC1 (- 1.))) skoSPC1) (= skoXC1 (+ 1. (* skoSMC1 (* skoSMC1 (- 1.))))) (= (+ (- 1.) (* skoSPC1 skoSPC1)) skoXC1) (= (* skoS2C1 skoS2C1) 2.) (> metit_our_pi (/ 15707963. 5000000.)) (> (/ 31415927. 10000000.) metit_our_pi) (<= 0. skoSPC1) (<= 0. skoSMC1) (<= 0. skoS2C1) (> skoXC1 0.)) (succedent (<= 1. skoXC1)))
-----[end problem]-----

-----[begin problem]-----
% In Mathematica format:
Timing[Resolve[Exists[{skoSMC1,skoSPC1,skoS2C1,skoXC1}, And[skoSPC1*((1/20)+Pi*(1/2)+skoS2C1*Pi)<=(-1/5)+skoSMC1*((-1/20)+Pi*(1/2)+skoS2C1*Pi),-4+skoSMC1*-1<=skoSPC1,skoSPC1<=-4+skoSMC1*-1,skoXC1==1+skoSMC1*skoSMC1*-1,-1+skoSPC1*skoSPC1==skoXC1,skoS2C1*skoS2C1==2,Pi>(15707963/5000000),(31415927/10000000)>Pi,0<=skoSPC1,0<=skoSMC1,0<=skoS2C1,skoXC1>0,1>skoXC1]], Reals]]

% In QepcadB format:
(E skoSMC1) (E skoSPC1) (E skoS2C1) (E pi) (E skoXC1) [[(skoSPC1 ((1/20+(pi (1/2)))+(skoS2C1 pi)))<=(-1/5+(skoSMC1 ((-1/20+(pi (1/2)))+(skoS2C1 pi))))]/\[[(-4+(skoSMC1 (-1)))<=skoSPC1]/\[[skoSPC1<=(-4+(skoSMC1 (-1)))]/\[[skoXC1=(1+(skoSMC1 skoSMC1 (-1)))]/\[[(-1+(skoSPC1 skoSPC1))=skoXC1]/\[[(skoS2C1 skoS2C1)=2]/\[[15707963/5000000<pi]/\[[pi<31415927/10000000]/\[[0<=skoSPC1]/\[[0<=skoSMC1]/\[[0<=skoS2C1]/\[[0<skoXC1]/\[skoXC1<1]]]]]]]]]]]]].

% In SMTLib2 format:
(declare-fun skoSMC1 () Real) (declare-fun skoSPC1 () Real) (declare-fun skoS2C1 () Real) (declare-fun metit_our_pi () Real) (declare-fun skoXC1 () Real) (assert (and (<= (* skoSPC1 (+ (+ (/ 1. 20.) (* metit_our_pi (/ 1. 2.))) (* skoS2C1 metit_our_pi))) (+ (/ (- 1.) 5.) (* skoSMC1 (+ (+ (/ (- 1.) 20.) (* metit_our_pi (/ 1. 2.))) (* skoS2C1 metit_our_pi))))) (and (<= (+ (- 4.) (* skoSMC1 (- 1.))) skoSPC1) (and (<= skoSPC1 (+ (- 4.) (* skoSMC1 (- 1.)))) (and (= skoXC1 (+ 1. (* skoSMC1 (* skoSMC1 (- 1.))))) (and (= (+ (- 1.) (* skoSPC1 skoSPC1)) skoXC1) (and (= (* skoS2C1 skoS2C1) 2.) (and (> metit_our_pi (/ 15707963. 5000000.)) (and (> (/ 31415927. 10000000.) metit_our_pi) (and (<= 0. skoSPC1) (and (<= 0. skoSMC1) (and (<= 0. skoS2C1) (and (> skoXC1 0.) (> 1. skoXC1))))))))))))))

% In GRF format:
(sequent " MetiTarski formula " (antecedent (<= (* skoSPC1 (+ (+ (/ 1. 20.) (* metit_our_pi (/ 1. 2.))) (* skoS2C1 metit_our_pi))) (+ (/ (- 1.) 5.) (* skoSMC1 (+ (+ (/ (- 1.) 20.) (* metit_our_pi (/ 1. 2.))) (* skoS2C1 metit_our_pi))))) (<= (+ (- 4.) (* skoSMC1 (- 1.))) skoSPC1) (<= skoSPC1 (+ (- 4.) (* skoSMC1 (- 1.)))) (= skoXC1 (+ 1. (* skoSMC1 (* skoSMC1 (- 1.))))) (= (+ (- 1.) (* skoSPC1 skoSPC1)) skoXC1) (= (* skoS2C1 skoS2C1) 2.) (> metit_our_pi (/ 15707963. 5000000.)) (> (/ 31415927. 10000000.) metit_our_pi) (<= 0. skoSPC1) (<= 0. skoSMC1) (<= 0. skoS2C1) (> skoXC1 0.)) (succedent (<= 1. skoXC1)))
-----[end problem]-----

-----[begin problem]-----
% In Mathematica format:
Timing[Resolve[Exists[{skoSMC1,skoSPC1,skoS2C1,skoXC1}, And[skoSPC1<=-4+skoSMC1*-1,-4+skoSMC1*-1>skoSPC1,skoXC1==1+skoSMC1*skoSMC1*-1,-1+skoSPC1*skoSPC1==skoXC1,skoS2C1*skoS2C1==2,Pi>(15707963/5000000),(31415927/10000000)>Pi,0<=skoSPC1,0<=skoSMC1,0<=skoS2C1,skoXC1>0,1>skoXC1]], Reals]]

% In QepcadB format:
(E skoSMC1) (E skoSPC1) (E skoS2C1) (E skoXC1) (E pi) [[skoSPC1<=(-4+(skoSMC1 (-1)))]/\[[skoSPC1<(-4+(skoSMC1 (-1)))]/\[[skoXC1=(1+(skoSMC1 skoSMC1 (-1)))]/\[[(-1+(skoSPC1 skoSPC1))=skoXC1]/\[[(skoS2C1 skoS2C1)=2]/\[[15707963/5000000<pi]/\[[pi<31415927/10000000]/\[[0<=skoSPC1]/\[[0<=skoSMC1]/\[[0<=skoS2C1]/\[[0<skoXC1]/\[skoXC1<1]]]]]]]]]]]].

% In SMTLib2 format:
(declare-fun skoSMC1 () Real) (declare-fun skoSPC1 () Real) (declare-fun skoS2C1 () Real) (declare-fun skoXC1 () Real) (declare-fun metit_our_pi () Real) (assert (and (<= skoSPC1 (+ (- 4.) (* skoSMC1 (- 1.)))) (and (> (+ (- 4.) (* skoSMC1 (- 1.))) skoSPC1) (and (= skoXC1 (+ 1. (* skoSMC1 (* skoSMC1 (- 1.))))) (and (= (+ (- 1.) (* skoSPC1 skoSPC1)) skoXC1) (and (= (* skoS2C1 skoS2C1) 2.) (and (> metit_our_pi (/ 15707963. 5000000.)) (and (> (/ 31415927. 10000000.) metit_our_pi) (and (<= 0. skoSPC1) (and (<= 0. skoSMC1) (and (<= 0. skoS2C1) (and (> skoXC1 0.) (> 1. skoXC1)))))))))))))

% In GRF format:
(sequent " MetiTarski formula " (antecedent (<= skoSPC1 (+ (- 4.) (* skoSMC1 (- 1.)))) (> (+ (- 4.) (* skoSMC1 (- 1.))) skoSPC1) (= skoXC1 (+ 1. (* skoSMC1 (* skoSMC1 (- 1.))))) (= (+ (- 1.) (* skoSPC1 skoSPC1)) skoXC1) (= (* skoS2C1 skoS2C1) 2.) (> metit_our_pi (/ 15707963. 5000000.)) (> (/ 31415927. 10000000.) metit_our_pi) (<= 0. skoSPC1) (<= 0. skoSMC1) (<= 0. skoS2C1) (> skoXC1 0.)) (succedent (<= 1. skoXC1)))
-----[end problem]-----

-----[begin problem]-----
% In Mathematica format:
Timing[Resolve[Exists[{skoSMC1,skoSPC1,skoS2C1,skoXC1}, And[skoSPC1>-4+skoSMC1*-1,skoXC1==1+skoSMC1*skoSMC1*-1,-1+skoSPC1*skoSPC1==skoXC1,skoS2C1*skoS2C1==2,Pi>(15707963/5000000),(31415927/10000000)>Pi,0<=skoSPC1,0<=skoSMC1,0<=skoS2C1,skoXC1>0,1>skoXC1]], Reals]]

% In QepcadB format:
(E skoSMC1) (E skoSPC1) (E skoS2C1) (E skoXC1) (E pi) [[(-4+(skoSMC1 (-1)))<skoSPC1]/\[[skoXC1=(1+(skoSMC1 skoSMC1 (-1)))]/\[[(-1+(skoSPC1 skoSPC1))=skoXC1]/\[[(skoS2C1 skoS2C1)=2]/\[[15707963/5000000<pi]/\[[pi<31415927/10000000]/\[[0<=skoSPC1]/\[[0<=skoSMC1]/\[[0<=skoS2C1]/\[[0<skoXC1]/\[skoXC1<1]]]]]]]]]]].

% In SMTLib2 format:
(declare-fun skoSMC1 () Real) (declare-fun skoSPC1 () Real) (declare-fun skoS2C1 () Real) (declare-fun skoXC1 () Real) (declare-fun metit_our_pi () Real) (assert (and (> skoSPC1 (+ (- 4.) (* skoSMC1 (- 1.)))) (and (= skoXC1 (+ 1. (* skoSMC1 (* skoSMC1 (- 1.))))) (and (= (+ (- 1.) (* skoSPC1 skoSPC1)) skoXC1) (and (= (* skoS2C1 skoS2C1) 2.) (and (> metit_our_pi (/ 15707963. 5000000.)) (and (> (/ 31415927. 10000000.) metit_our_pi) (and (<= 0. skoSPC1) (and (<= 0. skoSMC1) (and (<= 0. skoS2C1) (and (> skoXC1 0.) (> 1. skoXC1))))))))))))

% In GRF format:
(sequent " MetiTarski formula " (antecedent (> skoSPC1 (+ (- 4.) (* skoSMC1 (- 1.)))) (= skoXC1 (+ 1. (* skoSMC1 (* skoSMC1 (- 1.))))) (= (+ (- 1.) (* skoSPC1 skoSPC1)) skoXC1) (= (* skoS2C1 skoS2C1) 2.) (> metit_our_pi (/ 15707963. 5000000.)) (> (/ 31415927. 10000000.) metit_our_pi) (<= 0. skoSPC1) (<= 0. skoSMC1) (<= 0. skoS2C1) (> skoXC1 0.)) (succedent (<= 1. skoXC1)))
-----[end problem]-----

-----[begin problem]-----
% In Mathematica format:
Timing[Resolve[Exists[{skoSMC1,skoSPC1,skoS2C1,skoXC1}, And[skoSPC1>-4+skoSMC1*-1,skoXC1==1+skoSMC1*skoSMC1*-1,-1+skoSPC1*skoSPC1==skoXC1,skoS2C1*skoS2C1==2,Pi>(15707963/5000000),(31415927/10000000)>Pi,0<=skoSPC1,0<=skoSMC1,0<=skoS2C1,skoXC1>0,1>skoXC1]], Reals]]

% In QepcadB format:
(E skoSMC1) (E skoSPC1) (E skoS2C1) (E skoXC1) (E pi) [[(-4+(skoSMC1 (-1)))<skoSPC1]/\[[skoXC1=(1+(skoSMC1 skoSMC1 (-1)))]/\[[(-1+(skoSPC1 skoSPC1))=skoXC1]/\[[(skoS2C1 skoS2C1)=2]/\[[15707963/5000000<pi]/\[[pi<31415927/10000000]/\[[0<=skoSPC1]/\[[0<=skoSMC1]/\[[0<=skoS2C1]/\[[0<skoXC1]/\[skoXC1<1]]]]]]]]]]].

% In SMTLib2 format:
(declare-fun skoSMC1 () Real) (declare-fun skoSPC1 () Real) (declare-fun skoS2C1 () Real) (declare-fun skoXC1 () Real) (declare-fun metit_our_pi () Real) (assert (and (> skoSPC1 (+ (- 4.) (* skoSMC1 (- 1.)))) (and (= skoXC1 (+ 1. (* skoSMC1 (* skoSMC1 (- 1.))))) (and (= (+ (- 1.) (* skoSPC1 skoSPC1)) skoXC1) (and (= (* skoS2C1 skoS2C1) 2.) (and (> metit_our_pi (/ 15707963. 5000000.)) (and (> (/ 31415927. 10000000.) metit_our_pi) (and (<= 0. skoSPC1) (and (<= 0. skoSMC1) (and (<= 0. skoS2C1) (and (> skoXC1 0.) (> 1. skoXC1))))))))))))

% In GRF format:
(sequent " MetiTarski formula " (antecedent (> skoSPC1 (+ (- 4.) (* skoSMC1 (- 1.)))) (= skoXC1 (+ 1. (* skoSMC1 (* skoSMC1 (- 1.))))) (= (+ (- 1.) (* skoSPC1 skoSPC1)) skoXC1) (= (* skoS2C1 skoS2C1) 2.) (> metit_our_pi (/ 15707963. 5000000.)) (> (/ 31415927. 10000000.) metit_our_pi) (<= 0. skoSPC1) (<= 0. skoSMC1) (<= 0. skoS2C1) (> skoXC1 0.)) (succedent (<= 1. skoXC1)))
-----[end problem]-----

-----[begin problem]-----
% In Mathematica format:
Timing[Resolve[Exists[{skoSPC1,skoSMC1,skoS2C1,skoXC1}, And[-4+skoSMC1*-1<=skoSPC1,skoSPC1>-4+skoSMC1*-1,skoXC1==1+skoSMC1*skoSMC1*-1,-1+skoSPC1*skoSPC1==skoXC1,skoS2C1*skoS2C1==2,Pi>(15707963/5000000),(31415927/10000000)>Pi,0<=skoSPC1,0<=skoSMC1,0<=skoS2C1,skoXC1>0,1>skoXC1]], Reals]]

% In QepcadB format:
(E skoSPC1) (E skoSMC1) (E skoS2C1) (E skoXC1) (E pi) [[(-4+(skoSMC1 (-1)))<=skoSPC1]/\[[(-4+(skoSMC1 (-1)))<skoSPC1]/\[[skoXC1=(1+(skoSMC1 skoSMC1 (-1)))]/\[[(-1+(skoSPC1 skoSPC1))=skoXC1]/\[[(skoS2C1 skoS2C1)=2]/\[[15707963/5000000<pi]/\[[pi<31415927/10000000]/\[[0<=skoSPC1]/\[[0<=skoSMC1]/\[[0<=skoS2C1]/\[[0<skoXC1]/\[skoXC1<1]]]]]]]]]]]].

% In SMTLib2 format:
(declare-fun skoSPC1 () Real) (declare-fun skoSMC1 () Real) (declare-fun skoS2C1 () Real) (declare-fun skoXC1 () Real) (declare-fun metit_our_pi () Real) (assert (and (<= (+ (- 4.) (* skoSMC1 (- 1.))) skoSPC1) (and (> skoSPC1 (+ (- 4.) (* skoSMC1 (- 1.)))) (and (= skoXC1 (+ 1. (* skoSMC1 (* skoSMC1 (- 1.))))) (and (= (+ (- 1.) (* skoSPC1 skoSPC1)) skoXC1) (and (= (* skoS2C1 skoS2C1) 2.) (and (> metit_our_pi (/ 15707963. 5000000.)) (and (> (/ 31415927. 10000000.) metit_our_pi) (and (<= 0. skoSPC1) (and (<= 0. skoSMC1) (and (<= 0. skoS2C1) (and (> skoXC1 0.) (> 1. skoXC1)))))))))))))

% In GRF format:
(sequent " MetiTarski formula " (antecedent (<= (+ (- 4.) (* skoSMC1 (- 1.))) skoSPC1) (> skoSPC1 (+ (- 4.) (* skoSMC1 (- 1.)))) (= skoXC1 (+ 1. (* skoSMC1 (* skoSMC1 (- 1.))))) (= (+ (- 1.) (* skoSPC1 skoSPC1)) skoXC1) (= (* skoS2C1 skoS2C1) 2.) (> metit_our_pi (/ 15707963. 5000000.)) (> (/ 31415927. 10000000.) metit_our_pi) (<= 0. skoSPC1) (<= 0. skoSMC1) (<= 0. skoS2C1) (> skoXC1 0.)) (succedent (<= 1. skoXC1)))
-----[end problem]-----

-----[begin problem]-----
% In Mathematica format:
Timing[Resolve[Exists[{skoSPC1,skoSMC1,skoS2C1,skoXC1}, And[-4+skoSMC1*-1<=skoSPC1,skoSPC1>-4+skoSMC1*-1,skoSPC1>-4+skoSMC1*-1,skoXC1==1+skoSMC1*skoSMC1*-1,-1+skoSPC1*skoSPC1==skoXC1,skoS2C1*skoS2C1==2,Pi>(15707963/5000000),(31415927/10000000)>Pi,0<=skoSPC1,0<=skoSMC1,0<=skoS2C1,skoXC1>0,1>skoXC1]], Reals]]

% In QepcadB format:
(E skoSPC1) (E skoSMC1) (E skoS2C1) (E skoXC1) (E pi) [[(-4+(skoSMC1 (-1)))<=skoSPC1]/\[[(-4+(skoSMC1 (-1)))<skoSPC1]/\[[(-4+(skoSMC1 (-1)))<skoSPC1]/\[[skoXC1=(1+(skoSMC1 skoSMC1 (-1)))]/\[[(-1+(skoSPC1 skoSPC1))=skoXC1]/\[[(skoS2C1 skoS2C1)=2]/\[[15707963/5000000<pi]/\[[pi<31415927/10000000]/\[[0<=skoSPC1]/\[[0<=skoSMC1]/\[[0<=skoS2C1]/\[[0<skoXC1]/\[skoXC1<1]]]]]]]]]]]]].

% In SMTLib2 format:
(declare-fun skoSPC1 () Real) (declare-fun skoSMC1 () Real) (declare-fun skoS2C1 () Real) (declare-fun skoXC1 () Real) (declare-fun metit_our_pi () Real) (assert (and (<= (+ (- 4.) (* skoSMC1 (- 1.))) skoSPC1) (and (> skoSPC1 (+ (- 4.) (* skoSMC1 (- 1.)))) (and (> skoSPC1 (+ (- 4.) (* skoSMC1 (- 1.)))) (and (= skoXC1 (+ 1. (* skoSMC1 (* skoSMC1 (- 1.))))) (and (= (+ (- 1.) (* skoSPC1 skoSPC1)) skoXC1) (and (= (* skoS2C1 skoS2C1) 2.) (and (> metit_our_pi (/ 15707963. 5000000.)) (and (> (/ 31415927. 10000000.) metit_our_pi) (and (<= 0. skoSPC1) (and (<= 0. skoSMC1) (and (<= 0. skoS2C1) (and (> skoXC1 0.) (> 1. skoXC1))))))))))))))

% In GRF format:
(sequent " MetiTarski formula " (antecedent (<= (+ (- 4.) (* skoSMC1 (- 1.))) skoSPC1) (> skoSPC1 (+ (- 4.) (* skoSMC1 (- 1.)))) (> skoSPC1 (+ (- 4.) (* skoSMC1 (- 1.)))) (= skoXC1 (+ 1. (* skoSMC1 (* skoSMC1 (- 1.))))) (= (+ (- 1.) (* skoSPC1 skoSPC1)) skoXC1) (= (* skoS2C1 skoS2C1) 2.) (> metit_our_pi (/ 15707963. 5000000.)) (> (/ 31415927. 10000000.) metit_our_pi) (<= 0. skoSPC1) (<= 0. skoSMC1) (<= 0. skoS2C1) (> skoXC1 0.)) (succedent (<= 1. skoXC1)))
-----[end problem]-----

-----[begin problem]-----
% In Mathematica format:
Timing[Resolve[Exists[{skoSPC1,skoSMC1,skoS2C1,skoXC1}, And[0<=skoXC1,-4+skoSMC1*-1<=skoSPC1,skoSPC1>-4+skoSMC1*-1,skoXC1==1+skoSMC1*skoSMC1*-1,-1+skoSPC1*skoSPC1==skoXC1,skoS2C1*skoS2C1==2,Pi>(15707963/5000000),(31415927/10000000)>Pi,0<=skoSPC1,0<=skoSMC1,0<=skoS2C1,skoXC1>0,1>skoXC1]], Reals]]

% In QepcadB format:
(E skoSPC1) (E skoSMC1) (E skoS2C1) (E skoXC1) (E pi) [[0<=skoXC1]/\[[(-4+(skoSMC1 (-1)))<=skoSPC1]/\[[(-4+(skoSMC1 (-1)))<skoSPC1]/\[[skoXC1=(1+(skoSMC1 skoSMC1 (-1)))]/\[[(-1+(skoSPC1 skoSPC1))=skoXC1]/\[[(skoS2C1 skoS2C1)=2]/\[[15707963/5000000<pi]/\[[pi<31415927/10000000]/\[[0<=skoSPC1]/\[[0<=skoSMC1]/\[[0<=skoS2C1]/\[[0<skoXC1]/\[skoXC1<1]]]]]]]]]]]]].

% In SMTLib2 format:
(declare-fun skoSPC1 () Real) (declare-fun skoSMC1 () Real) (declare-fun skoS2C1 () Real) (declare-fun skoXC1 () Real) (declare-fun metit_our_pi () Real) (assert (and (<= 0. skoXC1) (and (<= (+ (- 4.) (* skoSMC1 (- 1.))) skoSPC1) (and (> skoSPC1 (+ (- 4.) (* skoSMC1 (- 1.)))) (and (= skoXC1 (+ 1. (* skoSMC1 (* skoSMC1 (- 1.))))) (and (= (+ (- 1.) (* skoSPC1 skoSPC1)) skoXC1) (and (= (* skoS2C1 skoS2C1) 2.) (and (> metit_our_pi (/ 15707963. 5000000.)) (and (> (/ 31415927. 10000000.) metit_our_pi) (and (<= 0. skoSPC1) (and (<= 0. skoSMC1) (and (<= 0. skoS2C1) (and (> skoXC1 0.) (> 1. skoXC1))))))))))))))

% In GRF format:
(sequent " MetiTarski formula " (antecedent (<= 0. skoXC1) (<= (+ (- 4.) (* skoSMC1 (- 1.))) skoSPC1) (> skoSPC1 (+ (- 4.) (* skoSMC1 (- 1.)))) (= skoXC1 (+ 1. (* skoSMC1 (* skoSMC1 (- 1.))))) (= (+ (- 1.) (* skoSPC1 skoSPC1)) skoXC1) (= (* skoS2C1 skoS2C1) 2.) (> metit_our_pi (/ 15707963. 5000000.)) (> (/ 31415927. 10000000.) metit_our_pi) (<= 0. skoSPC1) (<= 0. skoSMC1) (<= 0. skoS2C1) (> skoXC1 0.)) (succedent (<= 1. skoXC1)))
-----[end problem]-----

-----[begin problem]-----
% In Mathematica format:
Timing[Resolve[Exists[{skoXC1,skoSMC1,skoSPC1,skoS2C1}, And[skoXC1*skoXC1*-1<=-1,skoSPC1>-4+skoSMC1*-1,skoXC1==1+skoSMC1*skoSMC1*-1,-1+skoSPC1*skoSPC1==skoXC1,skoS2C1*skoS2C1==2,Pi>(15707963/5000000),(31415927/10000000)>Pi,0<=skoSPC1,0<=skoSMC1,0<=skoS2C1,skoXC1>0,1>skoXC1]], Reals]]

% In QepcadB format:
(E skoXC1) (E skoSMC1) (E skoSPC1) (E skoS2C1) (E pi) [[(skoXC1 skoXC1 (-1))<=-1]/\[[(-4+(skoSMC1 (-1)))<skoSPC1]/\[[skoXC1=(1+(skoSMC1 skoSMC1 (-1)))]/\[[(-1+(skoSPC1 skoSPC1))=skoXC1]/\[[(skoS2C1 skoS2C1)=2]/\[[15707963/5000000<pi]/\[[pi<31415927/10000000]/\[[0<=skoSPC1]/\[[0<=skoSMC1]/\[[0<=skoS2C1]/\[[0<skoXC1]/\[skoXC1<1]]]]]]]]]]]].

% In SMTLib2 format:
(declare-fun skoXC1 () Real) (declare-fun skoSMC1 () Real) (declare-fun skoSPC1 () Real) (declare-fun skoS2C1 () Real) (declare-fun metit_our_pi () Real) (assert (and (<= (* skoXC1 (* skoXC1 (- 1.))) (- 1.)) (and (> skoSPC1 (+ (- 4.) (* skoSMC1 (- 1.)))) (and (= skoXC1 (+ 1. (* skoSMC1 (* skoSMC1 (- 1.))))) (and (= (+ (- 1.) (* skoSPC1 skoSPC1)) skoXC1) (and (= (* skoS2C1 skoS2C1) 2.) (and (> metit_our_pi (/ 15707963. 5000000.)) (and (> (/ 31415927. 10000000.) metit_our_pi) (and (<= 0. skoSPC1) (and (<= 0. skoSMC1) (and (<= 0. skoS2C1) (and (> skoXC1 0.) (> 1. skoXC1)))))))))))))

% In GRF format:
(sequent " MetiTarski formula " (antecedent (<= (* skoXC1 (* skoXC1 (- 1.))) (- 1.)) (> skoSPC1 (+ (- 4.) (* skoSMC1 (- 1.)))) (= skoXC1 (+ 1. (* skoSMC1 (* skoSMC1 (- 1.))))) (= (+ (- 1.) (* skoSPC1 skoSPC1)) skoXC1) (= (* skoS2C1 skoS2C1) 2.) (> metit_our_pi (/ 15707963. 5000000.)) (> (/ 31415927. 10000000.) metit_our_pi) (<= 0. skoSPC1) (<= 0. skoSMC1) (<= 0. skoS2C1) (> skoXC1 0.)) (succedent (<= 1. skoXC1)))
-----[end problem]-----

-----[begin problem]-----
% In Mathematica format:
Timing[Resolve[Exists[{skoSMC1,skoSPC1,skoS2C1,skoXC1}, And[skoSPC1*((-1/20)+Pi*(-1/2)+skoS2C1*Pi*-1)<=(1/5)+skoSMC1*((1/20)+Pi*(-1/2)+skoS2C1*Pi*-1),skoSPC1>-4+skoSMC1*-1,skoXC1==1+skoSMC1*skoSMC1*-1,-1+skoSPC1*skoSPC1==skoXC1,skoS2C1*skoS2C1==2,Pi>(15707963/5000000),(31415927/10000000)>Pi,0<=skoSPC1,0<=skoSMC1,0<=skoS2C1,skoXC1>0,1>skoXC1]], Reals]]

% In QepcadB format:
(E skoSMC1) (E skoSPC1) (E skoS2C1) (E pi) (E skoXC1) [[(skoSPC1 ((-1/20+(pi (-1/2)))+(skoS2C1 pi (-1))))<=(1/5+(skoSMC1 ((1/20+(pi (-1/2)))+(skoS2C1 pi (-1)))))]/\[[(-4+(skoSMC1 (-1)))<skoSPC1]/\[[skoXC1=(1+(skoSMC1 skoSMC1 (-1)))]/\[[(-1+(skoSPC1 skoSPC1))=skoXC1]/\[[(skoS2C1 skoS2C1)=2]/\[[15707963/5000000<pi]/\[[pi<31415927/10000000]/\[[0<=skoSPC1]/\[[0<=skoSMC1]/\[[0<=skoS2C1]/\[[0<skoXC1]/\[skoXC1<1]]]]]]]]]]]].

% In SMTLib2 format:
(declare-fun skoSMC1 () Real) (declare-fun skoSPC1 () Real) (declare-fun skoS2C1 () Real) (declare-fun metit_our_pi () Real) (declare-fun skoXC1 () Real) (assert (and (<= (* skoSPC1 (+ (+ (/ (- 1.) 20.) (* metit_our_pi (/ (- 1.) 2.))) (* skoS2C1 (* metit_our_pi (- 1.))))) (+ (/ 1. 5.) (* skoSMC1 (+ (+ (/ 1. 20.) (* metit_our_pi (/ (- 1.) 2.))) (* skoS2C1 (* metit_our_pi (- 1.))))))) (and (> skoSPC1 (+ (- 4.) (* skoSMC1 (- 1.)))) (and (= skoXC1 (+ 1. (* skoSMC1 (* skoSMC1 (- 1.))))) (and (= (+ (- 1.) (* skoSPC1 skoSPC1)) skoXC1) (and (= (* skoS2C1 skoS2C1) 2.) (and (> metit_our_pi (/ 15707963. 5000000.)) (and (> (/ 31415927. 10000000.) metit_our_pi) (and (<= 0. skoSPC1) (and (<= 0. skoSMC1) (and (<= 0. skoS2C1) (and (> skoXC1 0.) (> 1. skoXC1)))))))))))))

% In GRF format:
(sequent " MetiTarski formula " (antecedent (<= (* skoSPC1 (+ (+ (/ (- 1.) 20.) (* metit_our_pi (/ (- 1.) 2.))) (* skoS2C1 (* metit_our_pi (- 1.))))) (+ (/ 1. 5.) (* skoSMC1 (+ (+ (/ 1. 20.) (* metit_our_pi (/ (- 1.) 2.))) (* skoS2C1 (* metit_our_pi (- 1.))))))) (> skoSPC1 (+ (- 4.) (* skoSMC1 (- 1.)))) (= skoXC1 (+ 1. (* skoSMC1 (* skoSMC1 (- 1.))))) (= (+ (- 1.) (* skoSPC1 skoSPC1)) skoXC1) (= (* skoS2C1 skoS2C1) 2.) (> metit_our_pi (/ 15707963. 5000000.)) (> (/ 31415927. 10000000.) metit_our_pi) (<= 0. skoSPC1) (<= 0. skoSMC1) (<= 0. skoS2C1) (> skoXC1 0.)) (succedent (<= 1. skoXC1)))
-----[end problem]-----

-----[begin problem]-----
% In Mathematica format:
Timing[Resolve[Exists[{skoSMC1,skoSPC1,skoS2C1,skoXC1}, And[skoSPC1*((1/20)+Pi*(1/2)+skoS2C1*Pi)<=(-1/5)+skoSMC1*((-1/20)+Pi*(1/2)+skoS2C1*Pi),skoSPC1>-4+skoSMC1*-1,skoXC1==1+skoSMC1*skoSMC1*-1,-1+skoSPC1*skoSPC1==skoXC1,skoS2C1*skoS2C1==2,Pi>(15707963/5000000),(31415927/10000000)>Pi,0<=skoSPC1,0<=skoSMC1,0<=skoS2C1,skoXC1>0,1>skoXC1]], Reals]]

% In QepcadB format:
(E skoSMC1) (E skoSPC1) (E skoS2C1) (E pi) (E skoXC1) [[(skoSPC1 ((1/20+(pi (1/2)))+(skoS2C1 pi)))<=(-1/5+(skoSMC1 ((-1/20+(pi (1/2)))+(skoS2C1 pi))))]/\[[(-4+(skoSMC1 (-1)))<skoSPC1]/\[[skoXC1=(1+(skoSMC1 skoSMC1 (-1)))]/\[[(-1+(skoSPC1 skoSPC1))=skoXC1]/\[[(skoS2C1 skoS2C1)=2]/\[[15707963/5000000<pi]/\[[pi<31415927/10000000]/\[[0<=skoSPC1]/\[[0<=skoSMC1]/\[[0<=skoS2C1]/\[[0<skoXC1]/\[skoXC1<1]]]]]]]]]]]].

% In SMTLib2 format:
(declare-fun skoSMC1 () Real) (declare-fun skoSPC1 () Real) (declare-fun skoS2C1 () Real) (declare-fun metit_our_pi () Real) (declare-fun skoXC1 () Real) (assert (and (<= (* skoSPC1 (+ (+ (/ 1. 20.) (* metit_our_pi (/ 1. 2.))) (* skoS2C1 metit_our_pi))) (+ (/ (- 1.) 5.) (* skoSMC1 (+ (+ (/ (- 1.) 20.) (* metit_our_pi (/ 1. 2.))) (* skoS2C1 metit_our_pi))))) (and (> skoSPC1 (+ (- 4.) (* skoSMC1 (- 1.)))) (and (= skoXC1 (+ 1. (* skoSMC1 (* skoSMC1 (- 1.))))) (and (= (+ (- 1.) (* skoSPC1 skoSPC1)) skoXC1) (and (= (* skoS2C1 skoS2C1) 2.) (and (> metit_our_pi (/ 15707963. 5000000.)) (and (> (/ 31415927. 10000000.) metit_our_pi) (and (<= 0. skoSPC1) (and (<= 0. skoSMC1) (and (<= 0. skoS2C1) (and (> skoXC1 0.) (> 1. skoXC1)))))))))))))

% In GRF format:
(sequent " MetiTarski formula " (antecedent (<= (* skoSPC1 (+ (+ (/ 1. 20.) (* metit_our_pi (/ 1. 2.))) (* skoS2C1 metit_our_pi))) (+ (/ (- 1.) 5.) (* skoSMC1 (+ (+ (/ (- 1.) 20.) (* metit_our_pi (/ 1. 2.))) (* skoS2C1 metit_our_pi))))) (> skoSPC1 (+ (- 4.) (* skoSMC1 (- 1.)))) (= skoXC1 (+ 1. (* skoSMC1 (* skoSMC1 (- 1.))))) (= (+ (- 1.) (* skoSPC1 skoSPC1)) skoXC1) (= (* skoS2C1 skoS2C1) 2.) (> metit_our_pi (/ 15707963. 5000000.)) (> (/ 31415927. 10000000.) metit_our_pi) (<= 0. skoSPC1) (<= 0. skoSMC1) (<= 0. skoS2C1) (> skoXC1 0.)) (succedent (<= 1. skoXC1)))
-----[end problem]-----

-----[begin problem]-----
% In Mathematica format:
Timing[Resolve[Exists[{skoSPC1,skoSMC1,skoS2C1,skoXC1}, And[skoXC1*(-4+skoSMC1*-1+skoSPC1*-1)<=0,skoSPC1>-4+skoSMC1*-1,skoXC1==1+skoSMC1*skoSMC1*-1,-1+skoSPC1*skoSPC1==skoXC1,skoS2C1*skoS2C1==2,Pi>(15707963/5000000),(31415927/10000000)>Pi,0<=skoSPC1,0<=skoSMC1,0<=skoS2C1,skoXC1>0,1>skoXC1]], Reals]]

% In QepcadB format:
(E skoSPC1) (E skoSMC1) (E skoS2C1) (E skoXC1) (E pi) [[(skoXC1 ((-4+(skoSMC1 (-1)))+(skoSPC1 (-1))))<=0]/\[[(-4+(skoSMC1 (-1)))<skoSPC1]/\[[skoXC1=(1+(skoSMC1 skoSMC1 (-1)))]/\[[(-1+(skoSPC1 skoSPC1))=skoXC1]/\[[(skoS2C1 skoS2C1)=2]/\[[15707963/5000000<pi]/\[[pi<31415927/10000000]/\[[0<=skoSPC1]/\[[0<=skoSMC1]/\[[0<=skoS2C1]/\[[0<skoXC1]/\[skoXC1<1]]]]]]]]]]]].

% In SMTLib2 format:
(declare-fun skoSPC1 () Real) (declare-fun skoSMC1 () Real) (declare-fun skoS2C1 () Real) (declare-fun skoXC1 () Real) (declare-fun metit_our_pi () Real) (assert (and (<= (* skoXC1 (+ (+ (- 4.) (* skoSMC1 (- 1.))) (* skoSPC1 (- 1.)))) 0.) (and (> skoSPC1 (+ (- 4.) (* skoSMC1 (- 1.)))) (and (= skoXC1 (+ 1. (* skoSMC1 (* skoSMC1 (- 1.))))) (and (= (+ (- 1.) (* skoSPC1 skoSPC1)) skoXC1) (and (= (* skoS2C1 skoS2C1) 2.) (and (> metit_our_pi (/ 15707963. 5000000.)) (and (> (/ 31415927. 10000000.) metit_our_pi) (and (<= 0. skoSPC1) (and (<= 0. skoSMC1) (and (<= 0. skoS2C1) (and (> skoXC1 0.) (> 1. skoXC1)))))))))))))

% In GRF format:
(sequent " MetiTarski formula " (antecedent (<= (* skoXC1 (+ (+ (- 4.) (* skoSMC1 (- 1.))) (* skoSPC1 (- 1.)))) 0.) (> skoSPC1 (+ (- 4.) (* skoSMC1 (- 1.)))) (= skoXC1 (+ 1. (* skoSMC1 (* skoSMC1 (- 1.))))) (= (+ (- 1.) (* skoSPC1 skoSPC1)) skoXC1) (= (* skoS2C1 skoS2C1) 2.) (> metit_our_pi (/ 15707963. 5000000.)) (> (/ 31415927. 10000000.) metit_our_pi) (<= 0. skoSPC1) (<= 0. skoSMC1) (<= 0. skoS2C1) (> skoXC1 0.)) (succedent (<= 1. skoXC1)))
-----[end problem]-----

-----[begin problem]-----
% In Mathematica format:
Timing[Resolve[Exists[{skoSPC1,skoSMC1,skoS2C1,skoXC1}, And[skoXC1*(-4+skoSMC1*-1+skoSPC1*-1)<=0,skoSPC1>-4+skoSMC1*-1,skoXC1==1+skoSMC1*skoSMC1*-1,-1+skoSPC1*skoSPC1==skoXC1,skoS2C1*skoS2C1==2,Pi>(15707963/5000000),(31415927/10000000)>Pi,0<=skoSPC1,0<=skoSMC1,0<=skoS2C1,skoXC1>0,1>skoXC1]], Reals]]

% In QepcadB format:
(E skoSPC1) (E skoSMC1) (E skoS2C1) (E skoXC1) (E pi) [[(skoXC1 ((-4+(skoSMC1 (-1)))+(skoSPC1 (-1))))<=0]/\[[(-4+(skoSMC1 (-1)))<skoSPC1]/\[[skoXC1=(1+(skoSMC1 skoSMC1 (-1)))]/\[[(-1+(skoSPC1 skoSPC1))=skoXC1]/\[[(skoS2C1 skoS2C1)=2]/\[[15707963/5000000<pi]/\[[pi<31415927/10000000]/\[[0<=skoSPC1]/\[[0<=skoSMC1]/\[[0<=skoS2C1]/\[[0<skoXC1]/\[skoXC1<1]]]]]]]]]]]].

% In SMTLib2 format:
(declare-fun skoSPC1 () Real) (declare-fun skoSMC1 () Real) (declare-fun skoS2C1 () Real) (declare-fun skoXC1 () Real) (declare-fun metit_our_pi () Real) (assert (and (<= (* skoXC1 (+ (+ (- 4.) (* skoSMC1 (- 1.))) (* skoSPC1 (- 1.)))) 0.) (and (> skoSPC1 (+ (- 4.) (* skoSMC1 (- 1.)))) (and (= skoXC1 (+ 1. (* skoSMC1 (* skoSMC1 (- 1.))))) (and (= (+ (- 1.) (* skoSPC1 skoSPC1)) skoXC1) (and (= (* skoS2C1 skoS2C1) 2.) (and (> metit_our_pi (/ 15707963. 5000000.)) (and (> (/ 31415927. 10000000.) metit_our_pi) (and (<= 0. skoSPC1) (and (<= 0. skoSMC1) (and (<= 0. skoS2C1) (and (> skoXC1 0.) (> 1. skoXC1)))))))))))))

% In GRF format:
(sequent " MetiTarski formula " (antecedent (<= (* skoXC1 (+ (+ (- 4.) (* skoSMC1 (- 1.))) (* skoSPC1 (- 1.)))) 0.) (> skoSPC1 (+ (- 4.) (* skoSMC1 (- 1.)))) (= skoXC1 (+ 1. (* skoSMC1 (* skoSMC1 (- 1.))))) (= (+ (- 1.) (* skoSPC1 skoSPC1)) skoXC1) (= (* skoS2C1 skoS2C1) 2.) (> metit_our_pi (/ 15707963. 5000000.)) (> (/ 31415927. 10000000.) metit_our_pi) (<= 0. skoSPC1) (<= 0. skoSMC1) (<= 0. skoS2C1) (> skoXC1 0.)) (succedent (<= 1. skoXC1)))
-----[end problem]-----

-----[begin problem]-----
% In Mathematica format:
Timing[Resolve[Exists[{skoSMC1,skoSPC1,skoS2C1,skoXC1}, And[skoSPC1*((-1/20)+Pi*(-1/2)+skoS2C1*Pi*-1)<=(1/5)+skoSMC1*((1/20)+Pi*(-1/2)+skoS2C1*Pi*-1),skoXC1*(-4+skoSMC1*-1+skoSPC1*-1)<=0,skoSPC1>-4+skoSMC1*-1,skoXC1==1+skoSMC1*skoSMC1*-1,-1+skoSPC1*skoSPC1==skoXC1,skoS2C1*skoS2C1==2,Pi>(15707963/5000000),(31415927/10000000)>Pi,0<=skoSPC1,0<=skoSMC1,0<=skoS2C1,skoXC1>0,1>skoXC1]], Reals]]

% In QepcadB format:
(E skoSMC1) (E skoSPC1) (E skoS2C1) (E pi) (E skoXC1) [[(skoSPC1 ((-1/20+(pi (-1/2)))+(skoS2C1 pi (-1))))<=(1/5+(skoSMC1 ((1/20+(pi (-1/2)))+(skoS2C1 pi (-1)))))]/\[[(skoXC1 ((-4+(skoSMC1 (-1)))+(skoSPC1 (-1))))<=0]/\[[(-4+(skoSMC1 (-1)))<skoSPC1]/\[[skoXC1=(1+(skoSMC1 skoSMC1 (-1)))]/\[[(-1+(skoSPC1 skoSPC1))=skoXC1]/\[[(skoS2C1 skoS2C1)=2]/\[[15707963/5000000<pi]/\[[pi<31415927/10000000]/\[[0<=skoSPC1]/\[[0<=skoSMC1]/\[[0<=skoS2C1]/\[[0<skoXC1]/\[skoXC1<1]]]]]]]]]]]]].

% In SMTLib2 format:
(declare-fun skoSMC1 () Real) (declare-fun skoSPC1 () Real) (declare-fun skoS2C1 () Real) (declare-fun metit_our_pi () Real) (declare-fun skoXC1 () Real) (assert (and (<= (* skoSPC1 (+ (+ (/ (- 1.) 20.) (* metit_our_pi (/ (- 1.) 2.))) (* skoS2C1 (* metit_our_pi (- 1.))))) (+ (/ 1. 5.) (* skoSMC1 (+ (+ (/ 1. 20.) (* metit_our_pi (/ (- 1.) 2.))) (* skoS2C1 (* metit_our_pi (- 1.))))))) (and (<= (* skoXC1 (+ (+ (- 4.) (* skoSMC1 (- 1.))) (* skoSPC1 (- 1.)))) 0.) (and (> skoSPC1 (+ (- 4.) (* skoSMC1 (- 1.)))) (and (= skoXC1 (+ 1. (* skoSMC1 (* skoSMC1 (- 1.))))) (and (= (+ (- 1.) (* skoSPC1 skoSPC1)) skoXC1) (and (= (* skoS2C1 skoS2C1) 2.) (and (> metit_our_pi (/ 15707963. 5000000.)) (and (> (/ 31415927. 10000000.) metit_our_pi) (and (<= 0. skoSPC1) (and (<= 0. skoSMC1) (and (<= 0. skoS2C1) (and (> skoXC1 0.) (> 1. skoXC1))))))))))))))

% In GRF format:
(sequent " MetiTarski formula " (antecedent (<= (* skoSPC1 (+ (+ (/ (- 1.) 20.) (* metit_our_pi (/ (- 1.) 2.))) (* skoS2C1 (* metit_our_pi (- 1.))))) (+ (/ 1. 5.) (* skoSMC1 (+ (+ (/ 1. 20.) (* metit_our_pi (/ (- 1.) 2.))) (* skoS2C1 (* metit_our_pi (- 1.))))))) (<= (* skoXC1 (+ (+ (- 4.) (* skoSMC1 (- 1.))) (* skoSPC1 (- 1.)))) 0.) (> skoSPC1 (+ (- 4.) (* skoSMC1 (- 1.)))) (= skoXC1 (+ 1. (* skoSMC1 (* skoSMC1 (- 1.))))) (= (+ (- 1.) (* skoSPC1 skoSPC1)) skoXC1) (= (* skoS2C1 skoS2C1) 2.) (> metit_our_pi (/ 15707963. 5000000.)) (> (/ 31415927. 10000000.) metit_our_pi) (<= 0. skoSPC1) (<= 0. skoSMC1) (<= 0. skoS2C1) (> skoXC1 0.)) (succedent (<= 1. skoXC1)))
-----[end problem]-----

-----[begin problem]-----
% In Mathematica format:
Timing[Resolve[Exists[{skoXC1,skoSPC1,skoSMC1,skoS2C1}, And[skoXC1*skoXC1>0,skoXC1*(-4+skoSMC1*-1+skoSPC1*-1)<=0,skoSPC1>-4+skoSMC1*-1,skoXC1==1+skoSMC1*skoSMC1*-1,-1+skoSPC1*skoSPC1==skoXC1,skoS2C1*skoS2C1==2,Pi>(15707963/5000000),(31415927/10000000)>Pi,0<=skoSPC1,0<=skoSMC1,0<=skoS2C1,skoXC1>0,1>skoXC1]], Reals]]

% In QepcadB format:
(E skoXC1) (E skoSPC1) (E skoSMC1) (E skoS2C1) (E pi) [[0<(skoXC1 skoXC1)]/\[[(skoXC1 ((-4+(skoSMC1 (-1)))+(skoSPC1 (-1))))<=0]/\[[(-4+(skoSMC1 (-1)))<skoSPC1]/\[[skoXC1=(1+(skoSMC1 skoSMC1 (-1)))]/\[[(-1+(skoSPC1 skoSPC1))=skoXC1]/\[[(skoS2C1 skoS2C1)=2]/\[[15707963/5000000<pi]/\[[pi<31415927/10000000]/\[[0<=skoSPC1]/\[[0<=skoSMC1]/\[[0<=skoS2C1]/\[[0<skoXC1]/\[skoXC1<1]]]]]]]]]]]]].

% In SMTLib2 format:
(declare-fun skoXC1 () Real) (declare-fun skoSPC1 () Real) (declare-fun skoSMC1 () Real) (declare-fun skoS2C1 () Real) (declare-fun metit_our_pi () Real) (assert (and (> (* skoXC1 skoXC1) 0.) (and (<= (* skoXC1 (+ (+ (- 4.) (* skoSMC1 (- 1.))) (* skoSPC1 (- 1.)))) 0.) (and (> skoSPC1 (+ (- 4.) (* skoSMC1 (- 1.)))) (and (= skoXC1 (+ 1. (* skoSMC1 (* skoSMC1 (- 1.))))) (and (= (+ (- 1.) (* skoSPC1 skoSPC1)) skoXC1) (and (= (* skoS2C1 skoS2C1) 2.) (and (> metit_our_pi (/ 15707963. 5000000.)) (and (> (/ 31415927. 10000000.) metit_our_pi) (and (<= 0. skoSPC1) (and (<= 0. skoSMC1) (and (<= 0. skoS2C1) (and (> skoXC1 0.) (> 1. skoXC1))))))))))))))

% In GRF format:
(sequent " MetiTarski formula " (antecedent (> (* skoXC1 skoXC1) 0.) (<= (* skoXC1 (+ (+ (- 4.) (* skoSMC1 (- 1.))) (* skoSPC1 (- 1.)))) 0.) (> skoSPC1 (+ (- 4.) (* skoSMC1 (- 1.)))) (= skoXC1 (+ 1. (* skoSMC1 (* skoSMC1 (- 1.))))) (= (+ (- 1.) (* skoSPC1 skoSPC1)) skoXC1) (= (* skoS2C1 skoS2C1) 2.) (> metit_our_pi (/ 15707963. 5000000.)) (> (/ 31415927. 10000000.) metit_our_pi) (<= 0. skoSPC1) (<= 0. skoSMC1) (<= 0. skoS2C1) (> skoXC1 0.)) (succedent (<= 1. skoXC1)))
-----[end problem]-----

