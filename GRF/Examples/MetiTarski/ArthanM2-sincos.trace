-----[begin problem]-----
% In Mathematica format:
Timing[Resolve[Exists[{skoMC1,skoSC1}, And[skoMC1*skoMC1*skoMC1*-2<=0,skoMC1*skoMC1*skoMC1*2<=0,skoSC1*skoMC1*skoMC1*skoMC1<=skoMC1*skoMC1*skoMC1*-1,skoSC1*(skoMC1*skoMC1*skoMC1*skoMC1*-3+skoSC1*(skoMC1*skoMC1*skoMC1*skoMC1*3+skoSC1*skoMC1*skoMC1*skoMC1*skoMC1))>skoMC1*skoMC1*skoMC1*skoMC1*5,skoSC1*skoMC1>skoMC1*-1,skoSC1*skoMC1*-1<=skoMC1,0<=skoSC1,2<=skoMC1,skoSC1<=(5/4),skoMC1>0,0<=skoMC1]], Reals]]

% In QepcadB format:
(E skoMC1) (E skoSC1) [[(skoMC1 skoMC1 skoMC1 (-2))<=0]/\[[(skoMC1 skoMC1 skoMC1 (2))<=0]/\[[(skoSC1 skoMC1 skoMC1 skoMC1)<=(skoMC1 skoMC1 skoMC1 (-1))]/\[[(skoMC1 skoMC1 skoMC1 skoMC1 (5))<(skoSC1 ((skoMC1 skoMC1 skoMC1 skoMC1 (-3))+(skoSC1 ((skoMC1 skoMC1 skoMC1 skoMC1 (3))+(skoSC1 skoMC1 skoMC1 skoMC1 skoMC1)))))]/\[[(skoMC1 (-1))<(skoSC1 skoMC1)]/\[[(skoSC1 skoMC1 (-1))<=skoMC1]/\[[0<=skoSC1]/\[[2<=skoMC1]/\[[skoSC1<=5/4]/\[[0<skoMC1]/\[0<=skoMC1]]]]]]]]]]].

% In SMTLib2 format:
(declare-fun skoMC1 () Real) (declare-fun skoSC1 () Real) (assert (and (<= (* skoMC1 (* skoMC1 (* skoMC1 (- 2.)))) 0.) (and (<= (* skoMC1 (* skoMC1 (* skoMC1 2.))) 0.) (and (<= (* skoSC1 (* skoMC1 (* skoMC1 skoMC1))) (* skoMC1 (* skoMC1 (* skoMC1 (- 1.))))) (and (> (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (* skoMC1 (- 3.))))) (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (* skoMC1 3.)))) (* skoSC1 (* skoMC1 (* skoMC1 (* skoMC1 skoMC1)))))))) (* skoMC1 (* skoMC1 (* skoMC1 (* skoMC1 5.))))) (and (> (* skoSC1 skoMC1) (* skoMC1 (- 1.))) (and (<= (* skoSC1 (* skoMC1 (- 1.))) skoMC1) (and (<= 0. skoSC1) (and (<= 2. skoMC1) (and (<= skoSC1 (/ 5. 4.)) (and (> skoMC1 0.) (<= 0. skoMC1))))))))))))

% In GRF format:
(sequent " MetiTarski formula " (antecedent (<= (* skoMC1 (* skoMC1 (* skoMC1 (- 2.)))) 0.) (<= (* skoMC1 (* skoMC1 (* skoMC1 2.))) 0.) (<= (* skoSC1 (* skoMC1 (* skoMC1 skoMC1))) (* skoMC1 (* skoMC1 (* skoMC1 (- 1.))))) (> (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (* skoMC1 (- 3.))))) (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (* skoMC1 3.)))) (* skoSC1 (* skoMC1 (* skoMC1 (* skoMC1 skoMC1)))))))) (* skoMC1 (* skoMC1 (* skoMC1 (* skoMC1 5.))))) (> (* skoSC1 skoMC1) (* skoMC1 (- 1.))) (<= (* skoSC1 (* skoMC1 (- 1.))) skoMC1) (<= 0. skoSC1) (<= 2. skoMC1) (<= skoSC1 (/ 5. 4.)) (> skoMC1 0.)) (succedent (> 0. skoMC1)))
-----[end problem]-----

-----[begin problem]-----
% In Mathematica format:
Timing[Resolve[Exists[{skoMC1,skoSC1}, And[skoSC1*skoMC1*skoMC1*skoMC1*-1<=skoMC1*skoMC1*skoMC1,skoSC1*skoMC1*skoMC1*skoMC1>skoMC1*skoMC1*skoMC1*-1,skoMC1*skoMC1*skoMC1*-2<=0,skoMC1*skoMC1*skoMC1*2>0,skoSC1*skoMC1>skoMC1*-1,skoSC1*skoMC1*-1<=skoMC1,0<=skoSC1,2<=skoMC1,skoSC1<=(5/4),skoMC1>0,0<=skoMC1]], Reals]]

% In QepcadB format:
(E skoMC1) (E skoSC1) [[(skoSC1 skoMC1 skoMC1 skoMC1 (-1))<=(skoMC1 skoMC1 skoMC1)]/\[[(skoMC1 skoMC1 skoMC1 (-1))<(skoSC1 skoMC1 skoMC1 skoMC1)]/\[[(skoMC1 skoMC1 skoMC1 (-2))<=0]/\[[0<(skoMC1 skoMC1 skoMC1 (2))]/\[[(skoMC1 (-1))<(skoSC1 skoMC1)]/\[[(skoSC1 skoMC1 (-1))<=skoMC1]/\[[0<=skoSC1]/\[[2<=skoMC1]/\[[skoSC1<=5/4]/\[[0<skoMC1]/\[0<=skoMC1]]]]]]]]]]].

% In SMTLib2 format:
(declare-fun skoMC1 () Real) (declare-fun skoSC1 () Real) (assert (and (<= (* skoSC1 (* skoMC1 (* skoMC1 (* skoMC1 (- 1.))))) (* skoMC1 (* skoMC1 skoMC1))) (and (> (* skoSC1 (* skoMC1 (* skoMC1 skoMC1))) (* skoMC1 (* skoMC1 (* skoMC1 (- 1.))))) (and (<= (* skoMC1 (* skoMC1 (* skoMC1 (- 2.)))) 0.) (and (> (* skoMC1 (* skoMC1 (* skoMC1 2.))) 0.) (and (> (* skoSC1 skoMC1) (* skoMC1 (- 1.))) (and (<= (* skoSC1 (* skoMC1 (- 1.))) skoMC1) (and (<= 0. skoSC1) (and (<= 2. skoMC1) (and (<= skoSC1 (/ 5. 4.)) (and (> skoMC1 0.) (<= 0. skoMC1))))))))))))

% In GRF format:
(sequent " MetiTarski formula " (antecedent (<= (* skoSC1 (* skoMC1 (* skoMC1 (* skoMC1 (- 1.))))) (* skoMC1 (* skoMC1 skoMC1))) (> (* skoSC1 (* skoMC1 (* skoMC1 skoMC1))) (* skoMC1 (* skoMC1 (* skoMC1 (- 1.))))) (<= (* skoMC1 (* skoMC1 (* skoMC1 (- 2.)))) 0.) (> (* skoMC1 (* skoMC1 (* skoMC1 2.))) 0.) (> (* skoSC1 skoMC1) (* skoMC1 (- 1.))) (<= (* skoSC1 (* skoMC1 (- 1.))) skoMC1) (<= 0. skoSC1) (<= 2. skoMC1) (<= skoSC1 (/ 5. 4.)) (> skoMC1 0.)) (succedent (> 0. skoMC1)))
-----[end problem]-----

-----[begin problem]-----
% In Mathematica format:
Timing[Resolve[Exists[{skoMC1,skoSC1}, And[skoMC1*skoMC1*skoMC1*2>0,skoSC1*skoMC1*skoMC1*skoMC1>skoMC1*skoMC1*skoMC1*-1,skoSC1*skoMC1*skoMC1*skoMC1*-1<=skoMC1*skoMC1*skoMC1,skoMC1*skoMC1*skoMC1*-2<=0,skoMC1*skoMC1*skoMC1*2>0,skoSC1*skoMC1>skoMC1*-1,skoSC1*skoMC1*-1<=skoMC1,0<=skoSC1,2<=skoMC1,skoSC1<=(5/4),skoMC1>0,0<=skoMC1]], Reals]]

% In QepcadB format:
(E skoMC1) (E skoSC1) [[0<(skoMC1 skoMC1 skoMC1 (2))]/\[[(skoMC1 skoMC1 skoMC1 (-1))<(skoSC1 skoMC1 skoMC1 skoMC1)]/\[[(skoSC1 skoMC1 skoMC1 skoMC1 (-1))<=(skoMC1 skoMC1 skoMC1)]/\[[(skoMC1 skoMC1 skoMC1 (-2))<=0]/\[[0<(skoMC1 skoMC1 skoMC1 (2))]/\[[(skoMC1 (-1))<(skoSC1 skoMC1)]/\[[(skoSC1 skoMC1 (-1))<=skoMC1]/\[[0<=skoSC1]/\[[2<=skoMC1]/\[[skoSC1<=5/4]/\[[0<skoMC1]/\[0<=skoMC1]]]]]]]]]]]].

% In SMTLib2 format:
(declare-fun skoMC1 () Real) (declare-fun skoSC1 () Real) (assert (and (> (* skoMC1 (* skoMC1 (* skoMC1 2.))) 0.) (and (> (* skoSC1 (* skoMC1 (* skoMC1 skoMC1))) (* skoMC1 (* skoMC1 (* skoMC1 (- 1.))))) (and (<= (* skoSC1 (* skoMC1 (* skoMC1 (* skoMC1 (- 1.))))) (* skoMC1 (* skoMC1 skoMC1))) (and (<= (* skoMC1 (* skoMC1 (* skoMC1 (- 2.)))) 0.) (and (> (* skoMC1 (* skoMC1 (* skoMC1 2.))) 0.) (and (> (* skoSC1 skoMC1) (* skoMC1 (- 1.))) (and (<= (* skoSC1 (* skoMC1 (- 1.))) skoMC1) (and (<= 0. skoSC1) (and (<= 2. skoMC1) (and (<= skoSC1 (/ 5. 4.)) (and (> skoMC1 0.) (<= 0. skoMC1)))))))))))))

% In GRF format:
(sequent " MetiTarski formula " (antecedent (> (* skoMC1 (* skoMC1 (* skoMC1 2.))) 0.) (> (* skoSC1 (* skoMC1 (* skoMC1 skoMC1))) (* skoMC1 (* skoMC1 (* skoMC1 (- 1.))))) (<= (* skoSC1 (* skoMC1 (* skoMC1 (* skoMC1 (- 1.))))) (* skoMC1 (* skoMC1 skoMC1))) (<= (* skoMC1 (* skoMC1 (* skoMC1 (- 2.)))) 0.) (> (* skoMC1 (* skoMC1 (* skoMC1 2.))) 0.) (> (* skoSC1 skoMC1) (* skoMC1 (- 1.))) (<= (* skoSC1 (* skoMC1 (- 1.))) skoMC1) (<= 0. skoSC1) (<= 2. skoMC1) (<= skoSC1 (/ 5. 4.)) (> skoMC1 0.)) (succedent (> 0. skoMC1)))
-----[end problem]-----

-----[begin problem]-----
% In Mathematica format:
Timing[Resolve[Exists[{skoMC1,skoSC1}, And[skoSC1*skoMC1*skoMC1*skoMC1>skoMC1*skoMC1*skoMC1*-1,skoSC1*skoMC1*skoMC1*skoMC1*-1<=skoMC1*skoMC1*skoMC1,skoMC1*skoMC1*skoMC1*-2<=0,skoMC1*skoMC1*skoMC1*2>0,skoSC1*skoMC1>skoMC1*-1,skoSC1*skoMC1*-1<=skoMC1,0<=skoSC1,2<=skoMC1,skoSC1<=(5/4),skoMC1>0,0<=skoMC1]], Reals]]

% In QepcadB format:
(E skoMC1) (E skoSC1) [[(skoMC1 skoMC1 skoMC1 (-1))<(skoSC1 skoMC1 skoMC1 skoMC1)]/\[[(skoSC1 skoMC1 skoMC1 skoMC1 (-1))<=(skoMC1 skoMC1 skoMC1)]/\[[(skoMC1 skoMC1 skoMC1 (-2))<=0]/\[[0<(skoMC1 skoMC1 skoMC1 (2))]/\[[(skoMC1 (-1))<(skoSC1 skoMC1)]/\[[(skoSC1 skoMC1 (-1))<=skoMC1]/\[[0<=skoSC1]/\[[2<=skoMC1]/\[[skoSC1<=5/4]/\[[0<skoMC1]/\[0<=skoMC1]]]]]]]]]]].

% In SMTLib2 format:
(declare-fun skoMC1 () Real) (declare-fun skoSC1 () Real) (assert (and (> (* skoSC1 (* skoMC1 (* skoMC1 skoMC1))) (* skoMC1 (* skoMC1 (* skoMC1 (- 1.))))) (and (<= (* skoSC1 (* skoMC1 (* skoMC1 (* skoMC1 (- 1.))))) (* skoMC1 (* skoMC1 skoMC1))) (and (<= (* skoMC1 (* skoMC1 (* skoMC1 (- 2.)))) 0.) (and (> (* skoMC1 (* skoMC1 (* skoMC1 2.))) 0.) (and (> (* skoSC1 skoMC1) (* skoMC1 (- 1.))) (and (<= (* skoSC1 (* skoMC1 (- 1.))) skoMC1) (and (<= 0. skoSC1) (and (<= 2. skoMC1) (and (<= skoSC1 (/ 5. 4.)) (and (> skoMC1 0.) (<= 0. skoMC1))))))))))))

% In GRF format:
(sequent " MetiTarski formula " (antecedent (> (* skoSC1 (* skoMC1 (* skoMC1 skoMC1))) (* skoMC1 (* skoMC1 (* skoMC1 (- 1.))))) (<= (* skoSC1 (* skoMC1 (* skoMC1 (* skoMC1 (- 1.))))) (* skoMC1 (* skoMC1 skoMC1))) (<= (* skoMC1 (* skoMC1 (* skoMC1 (- 2.)))) 0.) (> (* skoMC1 (* skoMC1 (* skoMC1 2.))) 0.) (> (* skoSC1 skoMC1) (* skoMC1 (- 1.))) (<= (* skoSC1 (* skoMC1 (- 1.))) skoMC1) (<= 0. skoSC1) (<= 2. skoMC1) (<= skoSC1 (/ 5. 4.)) (> skoMC1 0.)) (succedent (> 0. skoMC1)))
-----[end problem]-----

-----[begin problem]-----
% In Mathematica format:
Timing[Resolve[Exists[{skoMC1,skoSC1}, And[skoSC1*skoMC1*skoMC1*skoMC1<=skoMC1*skoMC1*skoMC1*-1,skoSC1*(skoMC1*skoMC1*skoMC1*skoMC1*3+skoSC1*(skoMC1*skoMC1*skoMC1*(-1+skoMC1*-3)+skoSC1*skoMC1*skoMC1*skoMC1*skoMC1*-1))<=skoMC1*skoMC1*skoMC1*(-2+skoMC1*-5),skoMC1*skoMC1*skoMC1*2>0,skoSC1*skoMC1*skoMC1*skoMC1*-1<=skoMC1*skoMC1*skoMC1,skoMC1*skoMC1*skoMC1*-2<=0,skoMC1*skoMC1*skoMC1*2>0,skoSC1*skoMC1>skoMC1*-1,skoSC1*skoMC1*-1<=skoMC1,0<=skoSC1,2<=skoMC1,skoSC1<=(5/4),skoMC1>0,0<=skoMC1]], Reals]]

% In QepcadB format:
(E skoMC1) (E skoSC1) [[(skoSC1 skoMC1 skoMC1 skoMC1)<=(skoMC1 skoMC1 skoMC1 (-1))]/\[[(skoSC1 ((skoMC1 skoMC1 skoMC1 skoMC1 (3))+(skoSC1 ((skoMC1 skoMC1 skoMC1 (-1+(skoMC1 (-3))))+(skoSC1 skoMC1 skoMC1 skoMC1 skoMC1 (-1))))))<=(skoMC1 skoMC1 skoMC1 (-2+(skoMC1 (-5))))]/\[[0<(skoMC1 skoMC1 skoMC1 (2))]/\[[(skoSC1 skoMC1 skoMC1 skoMC1 (-1))<=(skoMC1 skoMC1 skoMC1)]/\[[(skoMC1 skoMC1 skoMC1 (-2))<=0]/\[[0<(skoMC1 skoMC1 skoMC1 (2))]/\[[(skoMC1 (-1))<(skoSC1 skoMC1)]/\[[(skoSC1 skoMC1 (-1))<=skoMC1]/\[[0<=skoSC1]/\[[2<=skoMC1]/\[[skoSC1<=5/4]/\[[0<skoMC1]/\[0<=skoMC1]]]]]]]]]]]]].

% In SMTLib2 format:
(declare-fun skoMC1 () Real) (declare-fun skoSC1 () Real) (assert (and (<= (* skoSC1 (* skoMC1 (* skoMC1 skoMC1))) (* skoMC1 (* skoMC1 (* skoMC1 (- 1.))))) (and (<= (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (* skoMC1 3.)))) (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (+ (- 1.) (* skoMC1 (- 3.)))))) (* skoSC1 (* skoMC1 (* skoMC1 (* skoMC1 (* skoMC1 (- 1.)))))))))) (* skoMC1 (* skoMC1 (* skoMC1 (+ (- 2.) (* skoMC1 (- 5.))))))) (and (> (* skoMC1 (* skoMC1 (* skoMC1 2.))) 0.) (and (<= (* skoSC1 (* skoMC1 (* skoMC1 (* skoMC1 (- 1.))))) (* skoMC1 (* skoMC1 skoMC1))) (and (<= (* skoMC1 (* skoMC1 (* skoMC1 (- 2.)))) 0.) (and (> (* skoMC1 (* skoMC1 (* skoMC1 2.))) 0.) (and (> (* skoSC1 skoMC1) (* skoMC1 (- 1.))) (and (<= (* skoSC1 (* skoMC1 (- 1.))) skoMC1) (and (<= 0. skoSC1) (and (<= 2. skoMC1) (and (<= skoSC1 (/ 5. 4.)) (and (> skoMC1 0.) (<= 0. skoMC1))))))))))))))

% In GRF format:
(sequent " MetiTarski formula " (antecedent (<= (* skoSC1 (* skoMC1 (* skoMC1 skoMC1))) (* skoMC1 (* skoMC1 (* skoMC1 (- 1.))))) (<= (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (* skoMC1 3.)))) (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (+ (- 1.) (* skoMC1 (- 3.)))))) (* skoSC1 (* skoMC1 (* skoMC1 (* skoMC1 (* skoMC1 (- 1.)))))))))) (* skoMC1 (* skoMC1 (* skoMC1 (+ (- 2.) (* skoMC1 (- 5.))))))) (> (* skoMC1 (* skoMC1 (* skoMC1 2.))) 0.) (<= (* skoSC1 (* skoMC1 (* skoMC1 (* skoMC1 (- 1.))))) (* skoMC1 (* skoMC1 skoMC1))) (<= (* skoMC1 (* skoMC1 (* skoMC1 (- 2.)))) 0.) (> (* skoMC1 (* skoMC1 (* skoMC1 2.))) 0.) (> (* skoSC1 skoMC1) (* skoMC1 (- 1.))) (<= (* skoSC1 (* skoMC1 (- 1.))) skoMC1) (<= 0. skoSC1) (<= 2. skoMC1) (<= skoSC1 (/ 5. 4.)) (> skoMC1 0.)) (succedent (> 0. skoMC1)))
-----[end problem]-----

-----[begin problem]-----
% In Mathematica format:
Timing[Resolve[Exists[{skoMC1,skoSC1}, And[skoSC1*skoMC1*skoMC1*skoMC1>skoMC1*skoMC1*skoMC1*-1,skoSC1*skoMC1*skoMC1*skoMC1*-1<=skoMC1*skoMC1*skoMC1,skoMC1*skoMC1*skoMC1*-2<=0,skoMC1*skoMC1*skoMC1*2>0,skoSC1*skoMC1>skoMC1*-1,skoSC1*skoMC1*-1<=skoMC1,0<=skoSC1,2<=skoMC1,skoSC1<=(5/4),skoMC1>0,0<=skoMC1]], Reals]]

% In QepcadB format:
(E skoMC1) (E skoSC1) [[(skoMC1 skoMC1 skoMC1 (-1))<(skoSC1 skoMC1 skoMC1 skoMC1)]/\[[(skoSC1 skoMC1 skoMC1 skoMC1 (-1))<=(skoMC1 skoMC1 skoMC1)]/\[[(skoMC1 skoMC1 skoMC1 (-2))<=0]/\[[0<(skoMC1 skoMC1 skoMC1 (2))]/\[[(skoMC1 (-1))<(skoSC1 skoMC1)]/\[[(skoSC1 skoMC1 (-1))<=skoMC1]/\[[0<=skoSC1]/\[[2<=skoMC1]/\[[skoSC1<=5/4]/\[[0<skoMC1]/\[0<=skoMC1]]]]]]]]]]].

% In SMTLib2 format:
(declare-fun skoMC1 () Real) (declare-fun skoSC1 () Real) (assert (and (> (* skoSC1 (* skoMC1 (* skoMC1 skoMC1))) (* skoMC1 (* skoMC1 (* skoMC1 (- 1.))))) (and (<= (* skoSC1 (* skoMC1 (* skoMC1 (* skoMC1 (- 1.))))) (* skoMC1 (* skoMC1 skoMC1))) (and (<= (* skoMC1 (* skoMC1 (* skoMC1 (- 2.)))) 0.) (and (> (* skoMC1 (* skoMC1 (* skoMC1 2.))) 0.) (and (> (* skoSC1 skoMC1) (* skoMC1 (- 1.))) (and (<= (* skoSC1 (* skoMC1 (- 1.))) skoMC1) (and (<= 0. skoSC1) (and (<= 2. skoMC1) (and (<= skoSC1 (/ 5. 4.)) (and (> skoMC1 0.) (<= 0. skoMC1))))))))))))

% In GRF format:
(sequent " MetiTarski formula " (antecedent (> (* skoSC1 (* skoMC1 (* skoMC1 skoMC1))) (* skoMC1 (* skoMC1 (* skoMC1 (- 1.))))) (<= (* skoSC1 (* skoMC1 (* skoMC1 (* skoMC1 (- 1.))))) (* skoMC1 (* skoMC1 skoMC1))) (<= (* skoMC1 (* skoMC1 (* skoMC1 (- 2.)))) 0.) (> (* skoMC1 (* skoMC1 (* skoMC1 2.))) 0.) (> (* skoSC1 skoMC1) (* skoMC1 (- 1.))) (<= (* skoSC1 (* skoMC1 (- 1.))) skoMC1) (<= 0. skoSC1) (<= 2. skoMC1) (<= skoSC1 (/ 5. 4.)) (> skoMC1 0.)) (succedent (> 0. skoMC1)))
-----[end problem]-----

-----[begin problem]-----
% In Mathematica format:
Timing[Resolve[Exists[{skoMC1,skoSC1}, And[skoSC1*skoMC1*skoMC1*skoMC1*-1<=skoMC1*skoMC1*skoMC1,skoSC1*skoMC1*skoMC1*skoMC1>skoMC1*skoMC1*skoMC1*-1,skoSC1*skoMC1*skoMC1*skoMC1*-1<=skoMC1*skoMC1*skoMC1,skoMC1*skoMC1*skoMC1*-2<=0,skoMC1*skoMC1*skoMC1*2>0,skoSC1*skoMC1>skoMC1*-1,skoSC1*skoMC1*-1<=skoMC1,0<=skoSC1,2<=skoMC1,skoSC1<=(5/4),skoMC1>0,0<=skoMC1]], Reals]]

% In QepcadB format:
(E skoMC1) (E skoSC1) [[(skoSC1 skoMC1 skoMC1 skoMC1 (-1))<=(skoMC1 skoMC1 skoMC1)]/\[[(skoMC1 skoMC1 skoMC1 (-1))<(skoSC1 skoMC1 skoMC1 skoMC1)]/\[[(skoSC1 skoMC1 skoMC1 skoMC1 (-1))<=(skoMC1 skoMC1 skoMC1)]/\[[(skoMC1 skoMC1 skoMC1 (-2))<=0]/\[[0<(skoMC1 skoMC1 skoMC1 (2))]/\[[(skoMC1 (-1))<(skoSC1 skoMC1)]/\[[(skoSC1 skoMC1 (-1))<=skoMC1]/\[[0<=skoSC1]/\[[2<=skoMC1]/\[[skoSC1<=5/4]/\[[0<skoMC1]/\[0<=skoMC1]]]]]]]]]]]].

% In SMTLib2 format:
(declare-fun skoMC1 () Real) (declare-fun skoSC1 () Real) (assert (and (<= (* skoSC1 (* skoMC1 (* skoMC1 (* skoMC1 (- 1.))))) (* skoMC1 (* skoMC1 skoMC1))) (and (> (* skoSC1 (* skoMC1 (* skoMC1 skoMC1))) (* skoMC1 (* skoMC1 (* skoMC1 (- 1.))))) (and (<= (* skoSC1 (* skoMC1 (* skoMC1 (* skoMC1 (- 1.))))) (* skoMC1 (* skoMC1 skoMC1))) (and (<= (* skoMC1 (* skoMC1 (* skoMC1 (- 2.)))) 0.) (and (> (* skoMC1 (* skoMC1 (* skoMC1 2.))) 0.) (and (> (* skoSC1 skoMC1) (* skoMC1 (- 1.))) (and (<= (* skoSC1 (* skoMC1 (- 1.))) skoMC1) (and (<= 0. skoSC1) (and (<= 2. skoMC1) (and (<= skoSC1 (/ 5. 4.)) (and (> skoMC1 0.) (<= 0. skoMC1)))))))))))))

% In GRF format:
(sequent " MetiTarski formula " (antecedent (<= (* skoSC1 (* skoMC1 (* skoMC1 (* skoMC1 (- 1.))))) (* skoMC1 (* skoMC1 skoMC1))) (> (* skoSC1 (* skoMC1 (* skoMC1 skoMC1))) (* skoMC1 (* skoMC1 (* skoMC1 (- 1.))))) (<= (* skoSC1 (* skoMC1 (* skoMC1 (* skoMC1 (- 1.))))) (* skoMC1 (* skoMC1 skoMC1))) (<= (* skoMC1 (* skoMC1 (* skoMC1 (- 2.)))) 0.) (> (* skoMC1 (* skoMC1 (* skoMC1 2.))) 0.) (> (* skoSC1 skoMC1) (* skoMC1 (- 1.))) (<= (* skoSC1 (* skoMC1 (- 1.))) skoMC1) (<= 0. skoSC1) (<= 2. skoMC1) (<= skoSC1 (/ 5. 4.)) (> skoMC1 0.)) (succedent (> 0. skoMC1)))
-----[end problem]-----

-----[begin problem]-----
% In Mathematica format:
Timing[Resolve[Exists[{skoMC1,skoSC1}, And[skoSC1*skoMC1*-1<=skoMC1,skoSC1*skoMC1*skoMC1*skoMC1>skoMC1*skoMC1*skoMC1*-1,skoSC1*skoMC1*skoMC1*skoMC1*-1<=skoMC1*skoMC1*skoMC1,skoMC1*skoMC1*skoMC1*-2<=0,skoMC1*skoMC1*skoMC1*2>0,skoSC1*skoMC1>skoMC1*-1,skoSC1*skoMC1*-1<=skoMC1,0<=skoSC1,2<=skoMC1,skoSC1<=(5/4),skoMC1>0,0<=skoMC1]], Reals]]

% In QepcadB format:
(E skoMC1) (E skoSC1) [[(skoSC1 skoMC1 (-1))<=skoMC1]/\[[(skoMC1 skoMC1 skoMC1 (-1))<(skoSC1 skoMC1 skoMC1 skoMC1)]/\[[(skoSC1 skoMC1 skoMC1 skoMC1 (-1))<=(skoMC1 skoMC1 skoMC1)]/\[[(skoMC1 skoMC1 skoMC1 (-2))<=0]/\[[0<(skoMC1 skoMC1 skoMC1 (2))]/\[[(skoMC1 (-1))<(skoSC1 skoMC1)]/\[[(skoSC1 skoMC1 (-1))<=skoMC1]/\[[0<=skoSC1]/\[[2<=skoMC1]/\[[skoSC1<=5/4]/\[[0<skoMC1]/\[0<=skoMC1]]]]]]]]]]]].

% In SMTLib2 format:
(declare-fun skoMC1 () Real) (declare-fun skoSC1 () Real) (assert (and (<= (* skoSC1 (* skoMC1 (- 1.))) skoMC1) (and (> (* skoSC1 (* skoMC1 (* skoMC1 skoMC1))) (* skoMC1 (* skoMC1 (* skoMC1 (- 1.))))) (and (<= (* skoSC1 (* skoMC1 (* skoMC1 (* skoMC1 (- 1.))))) (* skoMC1 (* skoMC1 skoMC1))) (and (<= (* skoMC1 (* skoMC1 (* skoMC1 (- 2.)))) 0.) (and (> (* skoMC1 (* skoMC1 (* skoMC1 2.))) 0.) (and (> (* skoSC1 skoMC1) (* skoMC1 (- 1.))) (and (<= (* skoSC1 (* skoMC1 (- 1.))) skoMC1) (and (<= 0. skoSC1) (and (<= 2. skoMC1) (and (<= skoSC1 (/ 5. 4.)) (and (> skoMC1 0.) (<= 0. skoMC1)))))))))))))

% In GRF format:
(sequent " MetiTarski formula " (antecedent (<= (* skoSC1 (* skoMC1 (- 1.))) skoMC1) (> (* skoSC1 (* skoMC1 (* skoMC1 skoMC1))) (* skoMC1 (* skoMC1 (* skoMC1 (- 1.))))) (<= (* skoSC1 (* skoMC1 (* skoMC1 (* skoMC1 (- 1.))))) (* skoMC1 (* skoMC1 skoMC1))) (<= (* skoMC1 (* skoMC1 (* skoMC1 (- 2.)))) 0.) (> (* skoMC1 (* skoMC1 (* skoMC1 2.))) 0.) (> (* skoSC1 skoMC1) (* skoMC1 (- 1.))) (<= (* skoSC1 (* skoMC1 (- 1.))) skoMC1) (<= 0. skoSC1) (<= 2. skoMC1) (<= skoSC1 (/ 5. 4.)) (> skoMC1 0.)) (succedent (> 0. skoMC1)))
-----[end problem]-----

-----[begin problem]-----
% In Mathematica format:
Timing[Resolve[Exists[{skoMC1,skoSC1}, And[skoMC1*skoMC1*skoMC1*-1<=0,skoMC1*skoMC1!=0,skoMC1!=0,skoSC1*skoMC1*skoMC1*skoMC1>skoMC1*skoMC1*skoMC1*-1,skoSC1*skoMC1*skoMC1*skoMC1*-1<=skoMC1*skoMC1*skoMC1,skoMC1*skoMC1*skoMC1*-2<=0,skoMC1*skoMC1*skoMC1*2>0,skoSC1*skoMC1>skoMC1*-1,skoSC1*skoMC1*-1<=skoMC1,0<=skoSC1,2<=skoMC1,skoSC1<=(5/4),skoMC1>0,0<=skoMC1]], Reals]]

% In QepcadB format:
(E skoMC1) (E skoSC1) [[(skoMC1 skoMC1 skoMC1 (-1))<=0]/\[[(skoMC1 skoMC1) /=0]/\[[skoMC1 /=0]/\[[(skoMC1 skoMC1 skoMC1 (-1))<(skoSC1 skoMC1 skoMC1 skoMC1)]/\[[(skoSC1 skoMC1 skoMC1 skoMC1 (-1))<=(skoMC1 skoMC1 skoMC1)]/\[[(skoMC1 skoMC1 skoMC1 (-2))<=0]/\[[0<(skoMC1 skoMC1 skoMC1 (2))]/\[[(skoMC1 (-1))<(skoSC1 skoMC1)]/\[[(skoSC1 skoMC1 (-1))<=skoMC1]/\[[0<=skoSC1]/\[[2<=skoMC1]/\[[skoSC1<=5/4]/\[[0<skoMC1]/\[0<=skoMC1]]]]]]]]]]]]]].

% In SMTLib2 format:
(declare-fun skoMC1 () Real) (declare-fun skoSC1 () Real) (assert (and (<= (* skoMC1 (* skoMC1 (* skoMC1 (- 1.)))) 0.) (and (!= (* skoMC1 skoMC1) 0.) (and (!= skoMC1 0.) (and (> (* skoSC1 (* skoMC1 (* skoMC1 skoMC1))) (* skoMC1 (* skoMC1 (* skoMC1 (- 1.))))) (and (<= (* skoSC1 (* skoMC1 (* skoMC1 (* skoMC1 (- 1.))))) (* skoMC1 (* skoMC1 skoMC1))) (and (<= (* skoMC1 (* skoMC1 (* skoMC1 (- 2.)))) 0.) (and (> (* skoMC1 (* skoMC1 (* skoMC1 2.))) 0.) (and (> (* skoSC1 skoMC1) (* skoMC1 (- 1.))) (and (<= (* skoSC1 (* skoMC1 (- 1.))) skoMC1) (and (<= 0. skoSC1) (and (<= 2. skoMC1) (and (<= skoSC1 (/ 5. 4.)) (and (> skoMC1 0.) (<= 0. skoMC1)))))))))))))))

% In GRF format:
(sequent " MetiTarski formula " (antecedent (<= (* skoMC1 (* skoMC1 (* skoMC1 (- 1.)))) 0.) (!= (* skoMC1 skoMC1) 0.) (!= skoMC1 0.) (> (* skoSC1 (* skoMC1 (* skoMC1 skoMC1))) (* skoMC1 (* skoMC1 (* skoMC1 (- 1.))))) (<= (* skoSC1 (* skoMC1 (* skoMC1 (* skoMC1 (- 1.))))) (* skoMC1 (* skoMC1 skoMC1))) (<= (* skoMC1 (* skoMC1 (* skoMC1 (- 2.)))) 0.) (> (* skoMC1 (* skoMC1 (* skoMC1 2.))) 0.) (> (* skoSC1 skoMC1) (* skoMC1 (- 1.))) (<= (* skoSC1 (* skoMC1 (- 1.))) skoMC1) (<= 0. skoSC1) (<= 2. skoMC1) (<= skoSC1 (/ 5. 4.)) (> skoMC1 0.)) (succedent (> 0. skoMC1)))
-----[end problem]-----

-----[begin problem]-----
% In Mathematica format:
Timing[Resolve[Exists[{skoMC1,skoSC1}, And[skoMC1*skoMC1*skoMC1*-1<=0,skoMC1*skoMC1>0,skoSC1*skoMC1*skoMC1*skoMC1>skoMC1*skoMC1*skoMC1*-1,skoSC1*skoMC1*skoMC1*skoMC1*-1<=skoMC1*skoMC1*skoMC1,skoMC1*skoMC1*skoMC1*-2<=0,skoMC1*skoMC1*skoMC1*2>0,skoSC1*skoMC1>skoMC1*-1,skoSC1*skoMC1*-1<=skoMC1,0<=skoSC1,2<=skoMC1,skoSC1<=(5/4),skoMC1>0,0<=skoMC1]], Reals]]

% In QepcadB format:
(E skoMC1) (E skoSC1) [[(skoMC1 skoMC1 skoMC1 (-1))<=0]/\[[0<(skoMC1 skoMC1)]/\[[(skoMC1 skoMC1 skoMC1 (-1))<(skoSC1 skoMC1 skoMC1 skoMC1)]/\[[(skoSC1 skoMC1 skoMC1 skoMC1 (-1))<=(skoMC1 skoMC1 skoMC1)]/\[[(skoMC1 skoMC1 skoMC1 (-2))<=0]/\[[0<(skoMC1 skoMC1 skoMC1 (2))]/\[[(skoMC1 (-1))<(skoSC1 skoMC1)]/\[[(skoSC1 skoMC1 (-1))<=skoMC1]/\[[0<=skoSC1]/\[[2<=skoMC1]/\[[skoSC1<=5/4]/\[[0<skoMC1]/\[0<=skoMC1]]]]]]]]]]]]].

% In SMTLib2 format:
(declare-fun skoMC1 () Real) (declare-fun skoSC1 () Real) (assert (and (<= (* skoMC1 (* skoMC1 (* skoMC1 (- 1.)))) 0.) (and (> (* skoMC1 skoMC1) 0.) (and (> (* skoSC1 (* skoMC1 (* skoMC1 skoMC1))) (* skoMC1 (* skoMC1 (* skoMC1 (- 1.))))) (and (<= (* skoSC1 (* skoMC1 (* skoMC1 (* skoMC1 (- 1.))))) (* skoMC1 (* skoMC1 skoMC1))) (and (<= (* skoMC1 (* skoMC1 (* skoMC1 (- 2.)))) 0.) (and (> (* skoMC1 (* skoMC1 (* skoMC1 2.))) 0.) (and (> (* skoSC1 skoMC1) (* skoMC1 (- 1.))) (and (<= (* skoSC1 (* skoMC1 (- 1.))) skoMC1) (and (<= 0. skoSC1) (and (<= 2. skoMC1) (and (<= skoSC1 (/ 5. 4.)) (and (> skoMC1 0.) (<= 0. skoMC1))))))))))))))

% In GRF format:
(sequent " MetiTarski formula " (antecedent (<= (* skoMC1 (* skoMC1 (* skoMC1 (- 1.)))) 0.) (> (* skoMC1 skoMC1) 0.) (> (* skoSC1 (* skoMC1 (* skoMC1 skoMC1))) (* skoMC1 (* skoMC1 (* skoMC1 (- 1.))))) (<= (* skoSC1 (* skoMC1 (* skoMC1 (* skoMC1 (- 1.))))) (* skoMC1 (* skoMC1 skoMC1))) (<= (* skoMC1 (* skoMC1 (* skoMC1 (- 2.)))) 0.) (> (* skoMC1 (* skoMC1 (* skoMC1 2.))) 0.) (> (* skoSC1 skoMC1) (* skoMC1 (- 1.))) (<= (* skoSC1 (* skoMC1 (- 1.))) skoMC1) (<= 0. skoSC1) (<= 2. skoMC1) (<= skoSC1 (/ 5. 4.)) (> skoMC1 0.)) (succedent (> 0. skoMC1)))
-----[end problem]-----

-----[begin problem]-----
% In Mathematica format:
Timing[Resolve[Exists[{skoMC1,skoSC1}, And[skoMC1*skoMC1*skoMC1*-1<=0,skoSC1*skoMC1*skoMC1*skoMC1>skoMC1*skoMC1*skoMC1*-1,skoSC1*skoMC1*skoMC1*skoMC1*-1<=skoMC1*skoMC1*skoMC1,skoMC1*skoMC1*skoMC1*-2<=0,skoMC1*skoMC1*skoMC1*2>0,skoSC1*skoMC1>skoMC1*-1,skoSC1*skoMC1*-1<=skoMC1,0<=skoSC1,2<=skoMC1,skoSC1<=(5/4),skoMC1>0,0<=skoMC1]], Reals]]

% In QepcadB format:
(E skoMC1) (E skoSC1) [[(skoMC1 skoMC1 skoMC1 (-1))<=0]/\[[(skoMC1 skoMC1 skoMC1 (-1))<(skoSC1 skoMC1 skoMC1 skoMC1)]/\[[(skoSC1 skoMC1 skoMC1 skoMC1 (-1))<=(skoMC1 skoMC1 skoMC1)]/\[[(skoMC1 skoMC1 skoMC1 (-2))<=0]/\[[0<(skoMC1 skoMC1 skoMC1 (2))]/\[[(skoMC1 (-1))<(skoSC1 skoMC1)]/\[[(skoSC1 skoMC1 (-1))<=skoMC1]/\[[0<=skoSC1]/\[[2<=skoMC1]/\[[skoSC1<=5/4]/\[[0<skoMC1]/\[0<=skoMC1]]]]]]]]]]]].

% In SMTLib2 format:
(declare-fun skoMC1 () Real) (declare-fun skoSC1 () Real) (assert (and (<= (* skoMC1 (* skoMC1 (* skoMC1 (- 1.)))) 0.) (and (> (* skoSC1 (* skoMC1 (* skoMC1 skoMC1))) (* skoMC1 (* skoMC1 (* skoMC1 (- 1.))))) (and (<= (* skoSC1 (* skoMC1 (* skoMC1 (* skoMC1 (- 1.))))) (* skoMC1 (* skoMC1 skoMC1))) (and (<= (* skoMC1 (* skoMC1 (* skoMC1 (- 2.)))) 0.) (and (> (* skoMC1 (* skoMC1 (* skoMC1 2.))) 0.) (and (> (* skoSC1 skoMC1) (* skoMC1 (- 1.))) (and (<= (* skoSC1 (* skoMC1 (- 1.))) skoMC1) (and (<= 0. skoSC1) (and (<= 2. skoMC1) (and (<= skoSC1 (/ 5. 4.)) (and (> skoMC1 0.) (<= 0. skoMC1)))))))))))))

% In GRF format:
(sequent " MetiTarski formula " (antecedent (<= (* skoMC1 (* skoMC1 (* skoMC1 (- 1.)))) 0.) (> (* skoSC1 (* skoMC1 (* skoMC1 skoMC1))) (* skoMC1 (* skoMC1 (* skoMC1 (- 1.))))) (<= (* skoSC1 (* skoMC1 (* skoMC1 (* skoMC1 (- 1.))))) (* skoMC1 (* skoMC1 skoMC1))) (<= (* skoMC1 (* skoMC1 (* skoMC1 (- 2.)))) 0.) (> (* skoMC1 (* skoMC1 (* skoMC1 2.))) 0.) (> (* skoSC1 skoMC1) (* skoMC1 (- 1.))) (<= (* skoSC1 (* skoMC1 (- 1.))) skoMC1) (<= 0. skoSC1) (<= 2. skoMC1) (<= skoSC1 (/ 5. 4.)) (> skoMC1 0.)) (succedent (> 0. skoMC1)))
-----[end problem]-----

-----[begin problem]-----
% In Mathematica format:
Timing[Resolve[Exists[{skoMC1,skoSC1}, And[skoMC1*skoMC1*skoMC1*-1<=0,0<=skoMC1,skoMC1>0,skoSC1<=(5/4),2<=skoMC1,0<=skoSC1,skoSC1*skoMC1*-1<=skoMC1,skoSC1*skoMC1>skoMC1*-1,skoMC1*skoMC1*skoMC1*2>0,skoMC1*skoMC1*skoMC1*-2<=0,skoSC1*skoMC1*skoMC1*skoMC1*-1<=skoMC1*skoMC1*skoMC1,skoSC1*skoMC1*skoMC1*skoMC1>skoMC1*skoMC1*skoMC1*-1]], Reals]]

% In QepcadB format:
(E skoMC1) (E skoSC1) [[(skoMC1 skoMC1 skoMC1 (-1))<=0]/\[[0<=skoMC1]/\[[0<skoMC1]/\[[skoSC1<=5/4]/\[[2<=skoMC1]/\[[0<=skoSC1]/\[[(skoSC1 skoMC1 (-1))<=skoMC1]/\[[(skoMC1 (-1))<(skoSC1 skoMC1)]/\[[0<(skoMC1 skoMC1 skoMC1 (2))]/\[[(skoMC1 skoMC1 skoMC1 (-2))<=0]/\[[(skoSC1 skoMC1 skoMC1 skoMC1 (-1))<=(skoMC1 skoMC1 skoMC1)]/\[(skoMC1 skoMC1 skoMC1 (-1))<(skoSC1 skoMC1 skoMC1 skoMC1)]]]]]]]]]]]].

% In SMTLib2 format:
(declare-fun skoMC1 () Real) (declare-fun skoSC1 () Real) (assert (and (<= (* skoMC1 (* skoMC1 (* skoMC1 (- 1.)))) 0.) (and (<= 0. skoMC1) (and (> skoMC1 0.) (and (<= skoSC1 (/ 5. 4.)) (and (<= 2. skoMC1) (and (<= 0. skoSC1) (and (<= (* skoSC1 (* skoMC1 (- 1.))) skoMC1) (and (> (* skoSC1 skoMC1) (* skoMC1 (- 1.))) (and (> (* skoMC1 (* skoMC1 (* skoMC1 2.))) 0.) (and (<= (* skoMC1 (* skoMC1 (* skoMC1 (- 2.)))) 0.) (and (<= (* skoSC1 (* skoMC1 (* skoMC1 (* skoMC1 (- 1.))))) (* skoMC1 (* skoMC1 skoMC1))) (> (* skoSC1 (* skoMC1 (* skoMC1 skoMC1))) (* skoMC1 (* skoMC1 (* skoMC1 (- 1.)))))))))))))))))

% In GRF format:
(sequent " MetiTarski formula " (antecedent (<= (* skoMC1 (* skoMC1 (* skoMC1 (- 1.)))) 0.) (<= 0. skoMC1) (> skoMC1 0.) (<= skoSC1 (/ 5. 4.)) (<= 2. skoMC1) (<= 0. skoSC1) (<= (* skoSC1 (* skoMC1 (- 1.))) skoMC1) (> (* skoSC1 skoMC1) (* skoMC1 (- 1.))) (> (* skoMC1 (* skoMC1 (* skoMC1 2.))) 0.) (<= (* skoMC1 (* skoMC1 (* skoMC1 (- 2.)))) 0.) (<= (* skoSC1 (* skoMC1 (* skoMC1 (* skoMC1 (- 1.))))) (* skoMC1 (* skoMC1 skoMC1)))) (succedent (<= (* skoSC1 (* skoMC1 (* skoMC1 skoMC1))) (* skoMC1 (* skoMC1 (* skoMC1 (- 1.)))))))
-----[end problem]-----

-----[begin problem]-----
% In Mathematica format:
Timing[Resolve[Exists[{skoMC1,skoSC1}, And[skoMC1*skoMC1*-1<=0,0<=skoMC1,skoMC1>0,skoSC1<=(5/4),2<=skoMC1,0<=skoSC1,skoSC1*skoMC1*-1<=skoMC1,skoSC1*skoMC1>skoMC1*-1,skoMC1*skoMC1*skoMC1*2>0,skoMC1*skoMC1*skoMC1*-2<=0,skoSC1*skoMC1*skoMC1*skoMC1*-1<=skoMC1*skoMC1*skoMC1,skoSC1*skoMC1*skoMC1*skoMC1>skoMC1*skoMC1*skoMC1*-1]], Reals]]

% In QepcadB format:
(E skoMC1) (E skoSC1) [[(skoMC1 skoMC1 (-1))<=0]/\[[0<=skoMC1]/\[[0<skoMC1]/\[[skoSC1<=5/4]/\[[2<=skoMC1]/\[[0<=skoSC1]/\[[(skoSC1 skoMC1 (-1))<=skoMC1]/\[[(skoMC1 (-1))<(skoSC1 skoMC1)]/\[[0<(skoMC1 skoMC1 skoMC1 (2))]/\[[(skoMC1 skoMC1 skoMC1 (-2))<=0]/\[[(skoSC1 skoMC1 skoMC1 skoMC1 (-1))<=(skoMC1 skoMC1 skoMC1)]/\[(skoMC1 skoMC1 skoMC1 (-1))<(skoSC1 skoMC1 skoMC1 skoMC1)]]]]]]]]]]]].

% In SMTLib2 format:
(declare-fun skoMC1 () Real) (declare-fun skoSC1 () Real) (assert (and (<= (* skoMC1 (* skoMC1 (- 1.))) 0.) (and (<= 0. skoMC1) (and (> skoMC1 0.) (and (<= skoSC1 (/ 5. 4.)) (and (<= 2. skoMC1) (and (<= 0. skoSC1) (and (<= (* skoSC1 (* skoMC1 (- 1.))) skoMC1) (and (> (* skoSC1 skoMC1) (* skoMC1 (- 1.))) (and (> (* skoMC1 (* skoMC1 (* skoMC1 2.))) 0.) (and (<= (* skoMC1 (* skoMC1 (* skoMC1 (- 2.)))) 0.) (and (<= (* skoSC1 (* skoMC1 (* skoMC1 (* skoMC1 (- 1.))))) (* skoMC1 (* skoMC1 skoMC1))) (> (* skoSC1 (* skoMC1 (* skoMC1 skoMC1))) (* skoMC1 (* skoMC1 (* skoMC1 (- 1.)))))))))))))))))

% In GRF format:
(sequent " MetiTarski formula " (antecedent (<= (* skoMC1 (* skoMC1 (- 1.))) 0.) (<= 0. skoMC1) (> skoMC1 0.) (<= skoSC1 (/ 5. 4.)) (<= 2. skoMC1) (<= 0. skoSC1) (<= (* skoSC1 (* skoMC1 (- 1.))) skoMC1) (> (* skoSC1 skoMC1) (* skoMC1 (- 1.))) (> (* skoMC1 (* skoMC1 (* skoMC1 2.))) 0.) (<= (* skoMC1 (* skoMC1 (* skoMC1 (- 2.)))) 0.) (<= (* skoSC1 (* skoMC1 (* skoMC1 (* skoMC1 (- 1.))))) (* skoMC1 (* skoMC1 skoMC1)))) (succedent (<= (* skoSC1 (* skoMC1 (* skoMC1 skoMC1))) (* skoMC1 (* skoMC1 (* skoMC1 (- 1.)))))))
-----[end problem]-----

-----[begin problem]-----
% In Mathematica format:
Timing[Resolve[Exists[{skoMC1,skoSC1}, And[skoMC1*skoMC1*skoMC1*-1<=0,skoMC1*skoMC1!=0,skoMC1!=0,0<=skoMC1,skoMC1>0,skoSC1<=(5/4),2<=skoMC1,0<=skoSC1,skoSC1*skoMC1*-1<=skoMC1,skoSC1*skoMC1>skoMC1*-1,skoMC1*skoMC1*skoMC1*2>0,skoMC1*skoMC1*skoMC1*-2<=0,skoSC1*skoMC1*skoMC1*skoMC1*-1<=skoMC1*skoMC1*skoMC1,skoSC1*skoMC1*skoMC1*skoMC1>skoMC1*skoMC1*skoMC1*-1]], Reals]]

% In QepcadB format:
(E skoMC1) (E skoSC1) [[(skoMC1 skoMC1 skoMC1 (-1))<=0]/\[[(skoMC1 skoMC1) /=0]/\[[skoMC1 /=0]/\[[0<=skoMC1]/\[[0<skoMC1]/\[[skoSC1<=5/4]/\[[2<=skoMC1]/\[[0<=skoSC1]/\[[(skoSC1 skoMC1 (-1))<=skoMC1]/\[[(skoMC1 (-1))<(skoSC1 skoMC1)]/\[[0<(skoMC1 skoMC1 skoMC1 (2))]/\[[(skoMC1 skoMC1 skoMC1 (-2))<=0]/\[[(skoSC1 skoMC1 skoMC1 skoMC1 (-1))<=(skoMC1 skoMC1 skoMC1)]/\[(skoMC1 skoMC1 skoMC1 (-1))<(skoSC1 skoMC1 skoMC1 skoMC1)]]]]]]]]]]]]]].

% In SMTLib2 format:
(declare-fun skoMC1 () Real) (declare-fun skoSC1 () Real) (assert (and (<= (* skoMC1 (* skoMC1 (* skoMC1 (- 1.)))) 0.) (and (!= (* skoMC1 skoMC1) 0.) (and (!= skoMC1 0.) (and (<= 0. skoMC1) (and (> skoMC1 0.) (and (<= skoSC1 (/ 5. 4.)) (and (<= 2. skoMC1) (and (<= 0. skoSC1) (and (<= (* skoSC1 (* skoMC1 (- 1.))) skoMC1) (and (> (* skoSC1 skoMC1) (* skoMC1 (- 1.))) (and (> (* skoMC1 (* skoMC1 (* skoMC1 2.))) 0.) (and (<= (* skoMC1 (* skoMC1 (* skoMC1 (- 2.)))) 0.) (and (<= (* skoSC1 (* skoMC1 (* skoMC1 (* skoMC1 (- 1.))))) (* skoMC1 (* skoMC1 skoMC1))) (> (* skoSC1 (* skoMC1 (* skoMC1 skoMC1))) (* skoMC1 (* skoMC1 (* skoMC1 (- 1.)))))))))))))))))))

% In GRF format:
(sequent " MetiTarski formula " (antecedent (<= (* skoMC1 (* skoMC1 (* skoMC1 (- 1.)))) 0.) (!= (* skoMC1 skoMC1) 0.) (!= skoMC1 0.) (<= 0. skoMC1) (> skoMC1 0.) (<= skoSC1 (/ 5. 4.)) (<= 2. skoMC1) (<= 0. skoSC1) (<= (* skoSC1 (* skoMC1 (- 1.))) skoMC1) (> (* skoSC1 skoMC1) (* skoMC1 (- 1.))) (> (* skoMC1 (* skoMC1 (* skoMC1 2.))) 0.) (<= (* skoMC1 (* skoMC1 (* skoMC1 (- 2.)))) 0.) (<= (* skoSC1 (* skoMC1 (* skoMC1 (* skoMC1 (- 1.))))) (* skoMC1 (* skoMC1 skoMC1)))) (succedent (<= (* skoSC1 (* skoMC1 (* skoMC1 skoMC1))) (* skoMC1 (* skoMC1 (* skoMC1 (- 1.)))))))
-----[end problem]-----

-----[begin problem]-----
% In Mathematica format:
Timing[Resolve[Exists[{skoMC1,skoSC1}, And[skoMC1*skoMC1*skoMC1*-1<=0,skoMC1*skoMC1>0,0<=skoMC1,skoMC1>0,skoSC1<=(5/4),2<=skoMC1,0<=skoSC1,skoSC1*skoMC1*-1<=skoMC1,skoSC1*skoMC1>skoMC1*-1,skoMC1*skoMC1*skoMC1*2>0,skoMC1*skoMC1*skoMC1*-2<=0,skoSC1*skoMC1*skoMC1*skoMC1*-1<=skoMC1*skoMC1*skoMC1,skoSC1*skoMC1*skoMC1*skoMC1>skoMC1*skoMC1*skoMC1*-1]], Reals]]

% In QepcadB format:
(E skoMC1) (E skoSC1) [[(skoMC1 skoMC1 skoMC1 (-1))<=0]/\[[0<(skoMC1 skoMC1)]/\[[0<=skoMC1]/\[[0<skoMC1]/\[[skoSC1<=5/4]/\[[2<=skoMC1]/\[[0<=skoSC1]/\[[(skoSC1 skoMC1 (-1))<=skoMC1]/\[[(skoMC1 (-1))<(skoSC1 skoMC1)]/\[[0<(skoMC1 skoMC1 skoMC1 (2))]/\[[(skoMC1 skoMC1 skoMC1 (-2))<=0]/\[[(skoSC1 skoMC1 skoMC1 skoMC1 (-1))<=(skoMC1 skoMC1 skoMC1)]/\[(skoMC1 skoMC1 skoMC1 (-1))<(skoSC1 skoMC1 skoMC1 skoMC1)]]]]]]]]]]]]].

% In SMTLib2 format:
(declare-fun skoMC1 () Real) (declare-fun skoSC1 () Real) (assert (and (<= (* skoMC1 (* skoMC1 (* skoMC1 (- 1.)))) 0.) (and (> (* skoMC1 skoMC1) 0.) (and (<= 0. skoMC1) (and (> skoMC1 0.) (and (<= skoSC1 (/ 5. 4.)) (and (<= 2. skoMC1) (and (<= 0. skoSC1) (and (<= (* skoSC1 (* skoMC1 (- 1.))) skoMC1) (and (> (* skoSC1 skoMC1) (* skoMC1 (- 1.))) (and (> (* skoMC1 (* skoMC1 (* skoMC1 2.))) 0.) (and (<= (* skoMC1 (* skoMC1 (* skoMC1 (- 2.)))) 0.) (and (<= (* skoSC1 (* skoMC1 (* skoMC1 (* skoMC1 (- 1.))))) (* skoMC1 (* skoMC1 skoMC1))) (> (* skoSC1 (* skoMC1 (* skoMC1 skoMC1))) (* skoMC1 (* skoMC1 (* skoMC1 (- 1.))))))))))))))))))

% In GRF format:
(sequent " MetiTarski formula " (antecedent (<= (* skoMC1 (* skoMC1 (* skoMC1 (- 1.)))) 0.) (> (* skoMC1 skoMC1) 0.) (<= 0. skoMC1) (> skoMC1 0.) (<= skoSC1 (/ 5. 4.)) (<= 2. skoMC1) (<= 0. skoSC1) (<= (* skoSC1 (* skoMC1 (- 1.))) skoMC1) (> (* skoSC1 skoMC1) (* skoMC1 (- 1.))) (> (* skoMC1 (* skoMC1 (* skoMC1 2.))) 0.) (<= (* skoMC1 (* skoMC1 (* skoMC1 (- 2.)))) 0.) (<= (* skoSC1 (* skoMC1 (* skoMC1 (* skoMC1 (- 1.))))) (* skoMC1 (* skoMC1 skoMC1)))) (succedent (<= (* skoSC1 (* skoMC1 (* skoMC1 skoMC1))) (* skoMC1 (* skoMC1 (* skoMC1 (- 1.)))))))
-----[end problem]-----

-----[begin problem]-----
% In Mathematica format:
Timing[Resolve[Exists[{skoMC1,skoSC1}, And[skoMC1*skoMC1*-1<=0,skoSC1*skoMC1*skoMC1*skoMC1>skoMC1*skoMC1*skoMC1*-1,skoSC1*skoMC1*skoMC1*skoMC1*-1<=skoMC1*skoMC1*skoMC1,skoMC1*skoMC1*skoMC1*-2<=0,skoMC1*skoMC1*skoMC1*2>0,skoSC1*skoMC1>skoMC1*-1,skoSC1*skoMC1*-1<=skoMC1,0<=skoSC1,2<=skoMC1,skoSC1<=(5/4),skoMC1>0,0<=skoMC1]], Reals]]

% In QepcadB format:
(E skoMC1) (E skoSC1) [[(skoMC1 skoMC1 (-1))<=0]/\[[(skoMC1 skoMC1 skoMC1 (-1))<(skoSC1 skoMC1 skoMC1 skoMC1)]/\[[(skoSC1 skoMC1 skoMC1 skoMC1 (-1))<=(skoMC1 skoMC1 skoMC1)]/\[[(skoMC1 skoMC1 skoMC1 (-2))<=0]/\[[0<(skoMC1 skoMC1 skoMC1 (2))]/\[[(skoMC1 (-1))<(skoSC1 skoMC1)]/\[[(skoSC1 skoMC1 (-1))<=skoMC1]/\[[0<=skoSC1]/\[[2<=skoMC1]/\[[skoSC1<=5/4]/\[[0<skoMC1]/\[0<=skoMC1]]]]]]]]]]]].

% In SMTLib2 format:
(declare-fun skoMC1 () Real) (declare-fun skoSC1 () Real) (assert (and (<= (* skoMC1 (* skoMC1 (- 1.))) 0.) (and (> (* skoSC1 (* skoMC1 (* skoMC1 skoMC1))) (* skoMC1 (* skoMC1 (* skoMC1 (- 1.))))) (and (<= (* skoSC1 (* skoMC1 (* skoMC1 (* skoMC1 (- 1.))))) (* skoMC1 (* skoMC1 skoMC1))) (and (<= (* skoMC1 (* skoMC1 (* skoMC1 (- 2.)))) 0.) (and (> (* skoMC1 (* skoMC1 (* skoMC1 2.))) 0.) (and (> (* skoSC1 skoMC1) (* skoMC1 (- 1.))) (and (<= (* skoSC1 (* skoMC1 (- 1.))) skoMC1) (and (<= 0. skoSC1) (and (<= 2. skoMC1) (and (<= skoSC1 (/ 5. 4.)) (and (> skoMC1 0.) (<= 0. skoMC1)))))))))))))

% In GRF format:
(sequent " MetiTarski formula " (antecedent (<= (* skoMC1 (* skoMC1 (- 1.))) 0.) (> (* skoSC1 (* skoMC1 (* skoMC1 skoMC1))) (* skoMC1 (* skoMC1 (* skoMC1 (- 1.))))) (<= (* skoSC1 (* skoMC1 (* skoMC1 (* skoMC1 (- 1.))))) (* skoMC1 (* skoMC1 skoMC1))) (<= (* skoMC1 (* skoMC1 (* skoMC1 (- 2.)))) 0.) (> (* skoMC1 (* skoMC1 (* skoMC1 2.))) 0.) (> (* skoSC1 skoMC1) (* skoMC1 (- 1.))) (<= (* skoSC1 (* skoMC1 (- 1.))) skoMC1) (<= 0. skoSC1) (<= 2. skoMC1) (<= skoSC1 (/ 5. 4.)) (> skoMC1 0.)) (succedent (> 0. skoMC1)))
-----[end problem]-----

-----[begin problem]-----
% In Mathematica format:
Timing[Resolve[Exists[{skoMC1,skoSC1}, And[skoMC1<=0,skoSC1*skoMC1*skoMC1*skoMC1>skoMC1*skoMC1*skoMC1*-1,skoSC1*skoMC1*skoMC1*skoMC1*-1<=skoMC1*skoMC1*skoMC1,skoMC1*skoMC1*skoMC1*-2<=0,skoMC1*skoMC1*skoMC1*2>0,skoSC1*skoMC1>skoMC1*-1,skoSC1*skoMC1*-1<=skoMC1,0<=skoSC1,2<=skoMC1,skoSC1<=(5/4),skoMC1>0,0<=skoMC1]], Reals]]

% In QepcadB format:
(E skoMC1) (E skoSC1) [[skoMC1<=0]/\[[(skoMC1 skoMC1 skoMC1 (-1))<(skoSC1 skoMC1 skoMC1 skoMC1)]/\[[(skoSC1 skoMC1 skoMC1 skoMC1 (-1))<=(skoMC1 skoMC1 skoMC1)]/\[[(skoMC1 skoMC1 skoMC1 (-2))<=0]/\[[0<(skoMC1 skoMC1 skoMC1 (2))]/\[[(skoMC1 (-1))<(skoSC1 skoMC1)]/\[[(skoSC1 skoMC1 (-1))<=skoMC1]/\[[0<=skoSC1]/\[[2<=skoMC1]/\[[skoSC1<=5/4]/\[[0<skoMC1]/\[0<=skoMC1]]]]]]]]]]]].

% In SMTLib2 format:
(declare-fun skoMC1 () Real) (declare-fun skoSC1 () Real) (assert (and (<= skoMC1 0.) (and (> (* skoSC1 (* skoMC1 (* skoMC1 skoMC1))) (* skoMC1 (* skoMC1 (* skoMC1 (- 1.))))) (and (<= (* skoSC1 (* skoMC1 (* skoMC1 (* skoMC1 (- 1.))))) (* skoMC1 (* skoMC1 skoMC1))) (and (<= (* skoMC1 (* skoMC1 (* skoMC1 (- 2.)))) 0.) (and (> (* skoMC1 (* skoMC1 (* skoMC1 2.))) 0.) (and (> (* skoSC1 skoMC1) (* skoMC1 (- 1.))) (and (<= (* skoSC1 (* skoMC1 (- 1.))) skoMC1) (and (<= 0. skoSC1) (and (<= 2. skoMC1) (and (<= skoSC1 (/ 5. 4.)) (and (> skoMC1 0.) (<= 0. skoMC1)))))))))))))

% In GRF format:
(sequent " MetiTarski formula " (antecedent (<= skoMC1 0.) (> (* skoSC1 (* skoMC1 (* skoMC1 skoMC1))) (* skoMC1 (* skoMC1 (* skoMC1 (- 1.))))) (<= (* skoSC1 (* skoMC1 (* skoMC1 (* skoMC1 (- 1.))))) (* skoMC1 (* skoMC1 skoMC1))) (<= (* skoMC1 (* skoMC1 (* skoMC1 (- 2.)))) 0.) (> (* skoMC1 (* skoMC1 (* skoMC1 2.))) 0.) (> (* skoSC1 skoMC1) (* skoMC1 (- 1.))) (<= (* skoSC1 (* skoMC1 (- 1.))) skoMC1) (<= 0. skoSC1) (<= 2. skoMC1) (<= skoSC1 (/ 5. 4.)) (> skoMC1 0.)) (succedent (> 0. skoMC1)))
-----[end problem]-----

-----[begin problem]-----
% In Mathematica format:
Timing[Resolve[Exists[{skoMC1,skoSC1}, And[0<=skoMC1,skoSC1*skoMC1*skoMC1*skoMC1>skoMC1*skoMC1*skoMC1*-1,skoSC1*skoMC1*skoMC1*skoMC1*-1<=skoMC1*skoMC1*skoMC1,skoMC1*skoMC1*skoMC1*-2<=0,skoMC1*skoMC1*skoMC1*2>0,skoSC1*skoMC1>skoMC1*-1,skoSC1*skoMC1*-1<=skoMC1,0<=skoSC1,2<=skoMC1,skoSC1<=(5/4),skoMC1>0,0<=skoMC1]], Reals]]

% In QepcadB format:
(E skoMC1) (E skoSC1) [[0<=skoMC1]/\[[(skoMC1 skoMC1 skoMC1 (-1))<(skoSC1 skoMC1 skoMC1 skoMC1)]/\[[(skoSC1 skoMC1 skoMC1 skoMC1 (-1))<=(skoMC1 skoMC1 skoMC1)]/\[[(skoMC1 skoMC1 skoMC1 (-2))<=0]/\[[0<(skoMC1 skoMC1 skoMC1 (2))]/\[[(skoMC1 (-1))<(skoSC1 skoMC1)]/\[[(skoSC1 skoMC1 (-1))<=skoMC1]/\[[0<=skoSC1]/\[[2<=skoMC1]/\[[skoSC1<=5/4]/\[[0<skoMC1]/\[0<=skoMC1]]]]]]]]]]]].

% In SMTLib2 format:
(declare-fun skoMC1 () Real) (declare-fun skoSC1 () Real) (assert (and (<= 0. skoMC1) (and (> (* skoSC1 (* skoMC1 (* skoMC1 skoMC1))) (* skoMC1 (* skoMC1 (* skoMC1 (- 1.))))) (and (<= (* skoSC1 (* skoMC1 (* skoMC1 (* skoMC1 (- 1.))))) (* skoMC1 (* skoMC1 skoMC1))) (and (<= (* skoMC1 (* skoMC1 (* skoMC1 (- 2.)))) 0.) (and (> (* skoMC1 (* skoMC1 (* skoMC1 2.))) 0.) (and (> (* skoSC1 skoMC1) (* skoMC1 (- 1.))) (and (<= (* skoSC1 (* skoMC1 (- 1.))) skoMC1) (and (<= 0. skoSC1) (and (<= 2. skoMC1) (and (<= skoSC1 (/ 5. 4.)) (and (> skoMC1 0.) (<= 0. skoMC1)))))))))))))

% In GRF format:
(sequent " MetiTarski formula " (antecedent (<= 0. skoMC1) (> (* skoSC1 (* skoMC1 (* skoMC1 skoMC1))) (* skoMC1 (* skoMC1 (* skoMC1 (- 1.))))) (<= (* skoSC1 (* skoMC1 (* skoMC1 (* skoMC1 (- 1.))))) (* skoMC1 (* skoMC1 skoMC1))) (<= (* skoMC1 (* skoMC1 (* skoMC1 (- 2.)))) 0.) (> (* skoMC1 (* skoMC1 (* skoMC1 2.))) 0.) (> (* skoSC1 skoMC1) (* skoMC1 (- 1.))) (<= (* skoSC1 (* skoMC1 (- 1.))) skoMC1) (<= 0. skoSC1) (<= 2. skoMC1) (<= skoSC1 (/ 5. 4.)) (> skoMC1 0.)) (succedent (> 0. skoMC1)))
-----[end problem]-----

-----[begin problem]-----
% In Mathematica format:
Timing[Resolve[Exists[{skoMC1,skoSC1}, And[skoSC1*(skoMC1*(1+skoMC1*-3)+skoSC1*(skoMC1*(2+skoMC1*3)+skoSC1*skoMC1*skoMC1))>skoMC1*(2+skoMC1*5),skoMC1>0,skoSC1*skoMC1*skoMC1*skoMC1>skoMC1*skoMC1*skoMC1*-1,skoSC1*skoMC1*skoMC1*skoMC1*-1<=skoMC1*skoMC1*skoMC1,skoMC1*skoMC1*skoMC1*-2<=0,skoMC1*skoMC1*skoMC1*2>0,skoSC1*skoMC1>skoMC1*-1,skoSC1*skoMC1*-1<=skoMC1,0<=skoSC1,2<=skoMC1,skoSC1<=(5/4),skoMC1>0,0<=skoMC1]], Reals]]

% In QepcadB format:
(E skoMC1) (E skoSC1) [[(skoMC1 (2+(skoMC1 (5))))<(skoSC1 ((skoMC1 (1+(skoMC1 (-3))))+(skoSC1 ((skoMC1 (2+(skoMC1 (3))))+(skoSC1 skoMC1 skoMC1)))))]/\[[0<skoMC1]/\[[(skoMC1 skoMC1 skoMC1 (-1))<(skoSC1 skoMC1 skoMC1 skoMC1)]/\[[(skoSC1 skoMC1 skoMC1 skoMC1 (-1))<=(skoMC1 skoMC1 skoMC1)]/\[[(skoMC1 skoMC1 skoMC1 (-2))<=0]/\[[0<(skoMC1 skoMC1 skoMC1 (2))]/\[[(skoMC1 (-1))<(skoSC1 skoMC1)]/\[[(skoSC1 skoMC1 (-1))<=skoMC1]/\[[0<=skoSC1]/\[[2<=skoMC1]/\[[skoSC1<=5/4]/\[[0<skoMC1]/\[0<=skoMC1]]]]]]]]]]]]].

% In SMTLib2 format:
(declare-fun skoMC1 () Real) (declare-fun skoSC1 () Real) (assert (and (> (* skoSC1 (+ (* skoMC1 (+ 1. (* skoMC1 (- 3.)))) (* skoSC1 (+ (* skoMC1 (+ 2. (* skoMC1 3.))) (* skoSC1 (* skoMC1 skoMC1)))))) (* skoMC1 (+ 2. (* skoMC1 5.)))) (and (> skoMC1 0.) (and (> (* skoSC1 (* skoMC1 (* skoMC1 skoMC1))) (* skoMC1 (* skoMC1 (* skoMC1 (- 1.))))) (and (<= (* skoSC1 (* skoMC1 (* skoMC1 (* skoMC1 (- 1.))))) (* skoMC1 (* skoMC1 skoMC1))) (and (<= (* skoMC1 (* skoMC1 (* skoMC1 (- 2.)))) 0.) (and (> (* skoMC1 (* skoMC1 (* skoMC1 2.))) 0.) (and (> (* skoSC1 skoMC1) (* skoMC1 (- 1.))) (and (<= (* skoSC1 (* skoMC1 (- 1.))) skoMC1) (and (<= 0. skoSC1) (and (<= 2. skoMC1) (and (<= skoSC1 (/ 5. 4.)) (and (> skoMC1 0.) (<= 0. skoMC1))))))))))))))

% In GRF format:
(sequent " MetiTarski formula " (antecedent (> (* skoSC1 (+ (* skoMC1 (+ 1. (* skoMC1 (- 3.)))) (* skoSC1 (+ (* skoMC1 (+ 2. (* skoMC1 3.))) (* skoSC1 (* skoMC1 skoMC1)))))) (* skoMC1 (+ 2. (* skoMC1 5.)))) (> skoMC1 0.) (> (* skoSC1 (* skoMC1 (* skoMC1 skoMC1))) (* skoMC1 (* skoMC1 (* skoMC1 (- 1.))))) (<= (* skoSC1 (* skoMC1 (* skoMC1 (* skoMC1 (- 1.))))) (* skoMC1 (* skoMC1 skoMC1))) (<= (* skoMC1 (* skoMC1 (* skoMC1 (- 2.)))) 0.) (> (* skoMC1 (* skoMC1 (* skoMC1 2.))) 0.) (> (* skoSC1 skoMC1) (* skoMC1 (- 1.))) (<= (* skoSC1 (* skoMC1 (- 1.))) skoMC1) (<= 0. skoSC1) (<= 2. skoMC1) (<= skoSC1 (/ 5. 4.)) (> skoMC1 0.)) (succedent (> 0. skoMC1)))
-----[end problem]-----

-----[begin problem]-----
% In Mathematica format:
Timing[Resolve[Exists[{skoMC1,skoSC1}, And[skoSC1*skoMC1<=skoMC1*-1,skoMC1>0,0<=skoMC1,skoMC1>0,skoSC1<=(5/4),2<=skoMC1,0<=skoSC1,skoSC1*skoMC1*-1<=skoMC1,skoSC1*skoMC1>skoMC1*-1,skoMC1*skoMC1*skoMC1*2>0,skoMC1*skoMC1*skoMC1*-2<=0]], Reals]]

% In QepcadB format:
(E skoMC1) (E skoSC1) [[(skoSC1 skoMC1)<=(skoMC1 (-1))]/\[[0<skoMC1]/\[[0<=skoMC1]/\[[0<skoMC1]/\[[skoSC1<=5/4]/\[[2<=skoMC1]/\[[0<=skoSC1]/\[[(skoSC1 skoMC1 (-1))<=skoMC1]/\[[(skoMC1 (-1))<(skoSC1 skoMC1)]/\[[0<(skoMC1 skoMC1 skoMC1 (2))]/\[(skoMC1 skoMC1 skoMC1 (-2))<=0]]]]]]]]]]].

% In SMTLib2 format:
(declare-fun skoMC1 () Real) (declare-fun skoSC1 () Real) (assert (and (<= (* skoSC1 skoMC1) (* skoMC1 (- 1.))) (and (> skoMC1 0.) (and (<= 0. skoMC1) (and (> skoMC1 0.) (and (<= skoSC1 (/ 5. 4.)) (and (<= 2. skoMC1) (and (<= 0. skoSC1) (and (<= (* skoSC1 (* skoMC1 (- 1.))) skoMC1) (and (> (* skoSC1 skoMC1) (* skoMC1 (- 1.))) (and (> (* skoMC1 (* skoMC1 (* skoMC1 2.))) 0.) (<= (* skoMC1 (* skoMC1 (* skoMC1 (- 2.)))) 0.))))))))))))

% In GRF format:
(sequent " MetiTarski formula " (antecedent (<= (* skoSC1 skoMC1) (* skoMC1 (- 1.))) (> skoMC1 0.) (<= 0. skoMC1) (> skoMC1 0.) (<= skoSC1 (/ 5. 4.)) (<= 2. skoMC1) (<= 0. skoSC1) (<= (* skoSC1 (* skoMC1 (- 1.))) skoMC1) (> (* skoSC1 skoMC1) (* skoMC1 (- 1.))) (> (* skoMC1 (* skoMC1 (* skoMC1 2.))) 0.)) (succedent (> (* skoMC1 (* skoMC1 (* skoMC1 (- 2.)))) 0.)))
-----[end problem]-----

-----[begin problem]-----
% In Mathematica format:
Timing[Resolve[Exists[{skoMC1,skoSC1}, And[skoSC1*(skoMC1*(1+skoMC1*-3)+skoSC1*(skoMC1*(2+skoMC1*3)+skoSC1*skoMC1*skoMC1))>skoMC1*(2+skoMC1*5),skoMC1>0,0<=skoMC1,skoMC1>0,skoSC1<=(5/4),2<=skoMC1,0<=skoSC1,skoSC1*skoMC1*-1<=skoMC1,skoSC1*skoMC1>skoMC1*-1,skoMC1*skoMC1*skoMC1*2>0,skoMC1*skoMC1*skoMC1*-2<=0]], Reals]]

% In QepcadB format:
(E skoMC1) (E skoSC1) [[(skoMC1 (2+(skoMC1 (5))))<(skoSC1 ((skoMC1 (1+(skoMC1 (-3))))+(skoSC1 ((skoMC1 (2+(skoMC1 (3))))+(skoSC1 skoMC1 skoMC1)))))]/\[[0<skoMC1]/\[[0<=skoMC1]/\[[0<skoMC1]/\[[skoSC1<=5/4]/\[[2<=skoMC1]/\[[0<=skoSC1]/\[[(skoSC1 skoMC1 (-1))<=skoMC1]/\[[(skoMC1 (-1))<(skoSC1 skoMC1)]/\[[0<(skoMC1 skoMC1 skoMC1 (2))]/\[(skoMC1 skoMC1 skoMC1 (-2))<=0]]]]]]]]]]].

% In SMTLib2 format:
(declare-fun skoMC1 () Real) (declare-fun skoSC1 () Real) (assert (and (> (* skoSC1 (+ (* skoMC1 (+ 1. (* skoMC1 (- 3.)))) (* skoSC1 (+ (* skoMC1 (+ 2. (* skoMC1 3.))) (* skoSC1 (* skoMC1 skoMC1)))))) (* skoMC1 (+ 2. (* skoMC1 5.)))) (and (> skoMC1 0.) (and (<= 0. skoMC1) (and (> skoMC1 0.) (and (<= skoSC1 (/ 5. 4.)) (and (<= 2. skoMC1) (and (<= 0. skoSC1) (and (<= (* skoSC1 (* skoMC1 (- 1.))) skoMC1) (and (> (* skoSC1 skoMC1) (* skoMC1 (- 1.))) (and (> (* skoMC1 (* skoMC1 (* skoMC1 2.))) 0.) (<= (* skoMC1 (* skoMC1 (* skoMC1 (- 2.)))) 0.))))))))))))

% In GRF format:
(sequent " MetiTarski formula " (antecedent (> (* skoSC1 (+ (* skoMC1 (+ 1. (* skoMC1 (- 3.)))) (* skoSC1 (+ (* skoMC1 (+ 2. (* skoMC1 3.))) (* skoSC1 (* skoMC1 skoMC1)))))) (* skoMC1 (+ 2. (* skoMC1 5.)))) (> skoMC1 0.) (<= 0. skoMC1) (> skoMC1 0.) (<= skoSC1 (/ 5. 4.)) (<= 2. skoMC1) (<= 0. skoSC1) (<= (* skoSC1 (* skoMC1 (- 1.))) skoMC1) (> (* skoSC1 skoMC1) (* skoMC1 (- 1.))) (> (* skoMC1 (* skoMC1 (* skoMC1 2.))) 0.)) (succedent (> (* skoMC1 (* skoMC1 (* skoMC1 (- 2.)))) 0.)))
-----[end problem]-----

-----[begin problem]-----
% In Mathematica format:
Timing[Resolve[Exists[{skoMC1,skoSC1}, And[skoMC1*skoMC1*skoMC1*-1<=0,skoMC1*skoMC1>0,skoMC1*skoMC1!=0,skoMC1!=0,skoSC1*skoMC1*-1<=skoMC1,skoSC1*skoMC1>skoMC1*-1,0<=skoMC1,skoMC1>0,0<=skoSC1,2<=skoMC1,skoSC1<=(5/4)]], Reals]]

% In QepcadB format:
(E skoMC1) (E skoSC1) [[(skoMC1 skoMC1 skoMC1 (-1))<=0]/\[[0<(skoMC1 skoMC1)]/\[[(skoMC1 skoMC1) /=0]/\[[skoMC1 /=0]/\[[(skoSC1 skoMC1 (-1))<=skoMC1]/\[[(skoMC1 (-1))<(skoSC1 skoMC1)]/\[[0<=skoMC1]/\[[0<skoMC1]/\[[0<=skoSC1]/\[[2<=skoMC1]/\[skoSC1<=5/4]]]]]]]]]]].

% In SMTLib2 format:
(declare-fun skoMC1 () Real) (declare-fun skoSC1 () Real) (assert (and (<= (* skoMC1 (* skoMC1 (* skoMC1 (- 1.)))) 0.) (and (> (* skoMC1 skoMC1) 0.) (and (!= (* skoMC1 skoMC1) 0.) (and (!= skoMC1 0.) (and (<= (* skoSC1 (* skoMC1 (- 1.))) skoMC1) (and (> (* skoSC1 skoMC1) (* skoMC1 (- 1.))) (and (<= 0. skoMC1) (and (> skoMC1 0.) (and (<= 0. skoSC1) (and (<= 2. skoMC1) (<= skoSC1 (/ 5. 4.)))))))))))))

% In GRF format:
(sequent " MetiTarski formula " (antecedent (<= (* skoMC1 (* skoMC1 (* skoMC1 (- 1.)))) 0.) (> (* skoMC1 skoMC1) 0.) (!= (* skoMC1 skoMC1) 0.) (!= skoMC1 0.) (<= (* skoSC1 (* skoMC1 (- 1.))) skoMC1) (> (* skoSC1 skoMC1) (* skoMC1 (- 1.))) (<= 0. skoMC1) (> skoMC1 0.) (<= 0. skoSC1) (<= 2. skoMC1)) (succedent (> skoSC1 (/ 5. 4.))))
-----[end problem]-----

-----[begin problem]-----
% In Mathematica format:
Timing[Resolve[Exists[{skoMC1,skoSC1}, And[skoSC1*skoMC1*skoMC1*skoMC1<=skoMC1*skoMC1*skoMC1*-1,skoMC1*skoMC1*skoMC1*2>0,skoSC1*(skoMC1*skoMC1*skoMC1*skoMC1*-3+skoSC1*(skoMC1*skoMC1*skoMC1*(1+skoMC1*3)+skoSC1*skoMC1*skoMC1*skoMC1*skoMC1))>skoMC1*skoMC1*skoMC1*(2+skoMC1*5),skoMC1*skoMC1*skoMC1*-2<=0,skoMC1*skoMC1*skoMC1*2>0,skoSC1<=(5/4),2<=skoMC1,0<=skoSC1,skoMC1>0,0<=skoMC1,skoSC1*skoMC1>skoMC1*-1,skoSC1*skoMC1*-1<=skoMC1]], Reals]]

% In QepcadB format:
(E skoMC1) (E skoSC1) [[(skoSC1 skoMC1 skoMC1 skoMC1)<=(skoMC1 skoMC1 skoMC1 (-1))]/\[[0<(skoMC1 skoMC1 skoMC1 (2))]/\[[(skoMC1 skoMC1 skoMC1 (2+(skoMC1 (5))))<(skoSC1 ((skoMC1 skoMC1 skoMC1 skoMC1 (-3))+(skoSC1 ((skoMC1 skoMC1 skoMC1 (1+(skoMC1 (3))))+(skoSC1 skoMC1 skoMC1 skoMC1 skoMC1)))))]/\[[(skoMC1 skoMC1 skoMC1 (-2))<=0]/\[[0<(skoMC1 skoMC1 skoMC1 (2))]/\[[skoSC1<=5/4]/\[[2<=skoMC1]/\[[0<=skoSC1]/\[[0<skoMC1]/\[[0<=skoMC1]/\[[(skoMC1 (-1))<(skoSC1 skoMC1)]/\[(skoSC1 skoMC1 (-1))<=skoMC1]]]]]]]]]]]].

% In SMTLib2 format:
(declare-fun skoMC1 () Real) (declare-fun skoSC1 () Real) (assert (and (<= (* skoSC1 (* skoMC1 (* skoMC1 skoMC1))) (* skoMC1 (* skoMC1 (* skoMC1 (- 1.))))) (and (> (* skoMC1 (* skoMC1 (* skoMC1 2.))) 0.) (and (> (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (* skoMC1 (- 3.))))) (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (+ 1. (* skoMC1 3.))))) (* skoSC1 (* skoMC1 (* skoMC1 (* skoMC1 skoMC1)))))))) (* skoMC1 (* skoMC1 (* skoMC1 (+ 2. (* skoMC1 5.)))))) (and (<= (* skoMC1 (* skoMC1 (* skoMC1 (- 2.)))) 0.) (and (> (* skoMC1 (* skoMC1 (* skoMC1 2.))) 0.) (and (<= skoSC1 (/ 5. 4.)) (and (<= 2. skoMC1) (and (<= 0. skoSC1) (and (> skoMC1 0.) (and (<= 0. skoMC1) (and (> (* skoSC1 skoMC1) (* skoMC1 (- 1.))) (<= (* skoSC1 (* skoMC1 (- 1.))) skoMC1)))))))))))))

% In GRF format:
(sequent " MetiTarski formula " (antecedent (<= (* skoSC1 (* skoMC1 (* skoMC1 skoMC1))) (* skoMC1 (* skoMC1 (* skoMC1 (- 1.))))) (> (* skoMC1 (* skoMC1 (* skoMC1 2.))) 0.) (> (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (* skoMC1 (- 3.))))) (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (+ 1. (* skoMC1 3.))))) (* skoSC1 (* skoMC1 (* skoMC1 (* skoMC1 skoMC1)))))))) (* skoMC1 (* skoMC1 (* skoMC1 (+ 2. (* skoMC1 5.)))))) (<= (* skoMC1 (* skoMC1 (* skoMC1 (- 2.)))) 0.) (> (* skoMC1 (* skoMC1 (* skoMC1 2.))) 0.) (<= skoSC1 (/ 5. 4.)) (<= 2. skoMC1) (<= 0. skoSC1) (> skoMC1 0.) (<= 0. skoMC1) (> (* skoSC1 skoMC1) (* skoMC1 (- 1.)))) (succedent (> (* skoSC1 (* skoMC1 (- 1.))) skoMC1)))
-----[end problem]-----

-----[begin problem]-----
% In Mathematica format:
Timing[Resolve[Exists[{skoMC1,skoSC1}, And[skoMC1*skoMC1*skoMC1*2>0,skoSC1*skoMC1*skoMC1*skoMC1>skoMC1*skoMC1*skoMC1*-1,skoMC1*skoMC1*skoMC1*-2<=0,skoMC1*skoMC1*skoMC1*2>0,skoSC1<=(5/4),2<=skoMC1,0<=skoSC1,skoMC1>0,0<=skoMC1,skoSC1*skoMC1>skoMC1*-1,skoSC1*skoMC1*-1<=skoMC1]], Reals]]

% In QepcadB format:
(E skoMC1) (E skoSC1) [[0<(skoMC1 skoMC1 skoMC1 (2))]/\[[(skoMC1 skoMC1 skoMC1 (-1))<(skoSC1 skoMC1 skoMC1 skoMC1)]/\[[(skoMC1 skoMC1 skoMC1 (-2))<=0]/\[[0<(skoMC1 skoMC1 skoMC1 (2))]/\[[skoSC1<=5/4]/\[[2<=skoMC1]/\[[0<=skoSC1]/\[[0<skoMC1]/\[[0<=skoMC1]/\[[(skoMC1 (-1))<(skoSC1 skoMC1)]/\[(skoSC1 skoMC1 (-1))<=skoMC1]]]]]]]]]]].

% In SMTLib2 format:
(declare-fun skoMC1 () Real) (declare-fun skoSC1 () Real) (assert (and (> (* skoMC1 (* skoMC1 (* skoMC1 2.))) 0.) (and (> (* skoSC1 (* skoMC1 (* skoMC1 skoMC1))) (* skoMC1 (* skoMC1 (* skoMC1 (- 1.))))) (and (<= (* skoMC1 (* skoMC1 (* skoMC1 (- 2.)))) 0.) (and (> (* skoMC1 (* skoMC1 (* skoMC1 2.))) 0.) (and (<= skoSC1 (/ 5. 4.)) (and (<= 2. skoMC1) (and (<= 0. skoSC1) (and (> skoMC1 0.) (and (<= 0. skoMC1) (and (> (* skoSC1 skoMC1) (* skoMC1 (- 1.))) (<= (* skoSC1 (* skoMC1 (- 1.))) skoMC1))))))))))))

% In GRF format:
(sequent " MetiTarski formula " (antecedent (> (* skoMC1 (* skoMC1 (* skoMC1 2.))) 0.) (> (* skoSC1 (* skoMC1 (* skoMC1 skoMC1))) (* skoMC1 (* skoMC1 (* skoMC1 (- 1.))))) (<= (* skoMC1 (* skoMC1 (* skoMC1 (- 2.)))) 0.) (> (* skoMC1 (* skoMC1 (* skoMC1 2.))) 0.) (<= skoSC1 (/ 5. 4.)) (<= 2. skoMC1) (<= 0. skoSC1) (> skoMC1 0.) (<= 0. skoMC1) (> (* skoSC1 skoMC1) (* skoMC1 (- 1.)))) (succedent (> (* skoSC1 (* skoMC1 (- 1.))) skoMC1)))
-----[end problem]-----

-----[begin problem]-----
% In Mathematica format:
Timing[Resolve[Exists[{skoMC1,skoSC1}, And[skoSC1*skoMC1*skoMC1*skoMC1*-1<=skoMC1*skoMC1*skoMC1,skoSC1*skoMC1*skoMC1*skoMC1>skoMC1*skoMC1*skoMC1*-1,skoMC1*skoMC1*skoMC1*-2<=0,skoMC1*skoMC1*skoMC1*2>0,skoSC1<=(5/4),2<=skoMC1,0<=skoSC1,skoMC1>0,0<=skoMC1,skoSC1*skoMC1>skoMC1*-1,skoSC1*skoMC1*-1<=skoMC1]], Reals]]

% In QepcadB format:
(E skoMC1) (E skoSC1) [[(skoSC1 skoMC1 skoMC1 skoMC1 (-1))<=(skoMC1 skoMC1 skoMC1)]/\[[(skoMC1 skoMC1 skoMC1 (-1))<(skoSC1 skoMC1 skoMC1 skoMC1)]/\[[(skoMC1 skoMC1 skoMC1 (-2))<=0]/\[[0<(skoMC1 skoMC1 skoMC1 (2))]/\[[skoSC1<=5/4]/\[[2<=skoMC1]/\[[0<=skoSC1]/\[[0<skoMC1]/\[[0<=skoMC1]/\[[(skoMC1 (-1))<(skoSC1 skoMC1)]/\[(skoSC1 skoMC1 (-1))<=skoMC1]]]]]]]]]]].

% In SMTLib2 format:
(declare-fun skoMC1 () Real) (declare-fun skoSC1 () Real) (assert (and (<= (* skoSC1 (* skoMC1 (* skoMC1 (* skoMC1 (- 1.))))) (* skoMC1 (* skoMC1 skoMC1))) (and (> (* skoSC1 (* skoMC1 (* skoMC1 skoMC1))) (* skoMC1 (* skoMC1 (* skoMC1 (- 1.))))) (and (<= (* skoMC1 (* skoMC1 (* skoMC1 (- 2.)))) 0.) (and (> (* skoMC1 (* skoMC1 (* skoMC1 2.))) 0.) (and (<= skoSC1 (/ 5. 4.)) (and (<= 2. skoMC1) (and (<= 0. skoSC1) (and (> skoMC1 0.) (and (<= 0. skoMC1) (and (> (* skoSC1 skoMC1) (* skoMC1 (- 1.))) (<= (* skoSC1 (* skoMC1 (- 1.))) skoMC1))))))))))))

% In GRF format:
(sequent " MetiTarski formula " (antecedent (<= (* skoSC1 (* skoMC1 (* skoMC1 (* skoMC1 (- 1.))))) (* skoMC1 (* skoMC1 skoMC1))) (> (* skoSC1 (* skoMC1 (* skoMC1 skoMC1))) (* skoMC1 (* skoMC1 (* skoMC1 (- 1.))))) (<= (* skoMC1 (* skoMC1 (* skoMC1 (- 2.)))) 0.) (> (* skoMC1 (* skoMC1 (* skoMC1 2.))) 0.) (<= skoSC1 (/ 5. 4.)) (<= 2. skoMC1) (<= 0. skoSC1) (> skoMC1 0.) (<= 0. skoMC1) (> (* skoSC1 skoMC1) (* skoMC1 (- 1.)))) (succedent (> (* skoSC1 (* skoMC1 (- 1.))) skoMC1)))
-----[end problem]-----

-----[begin problem]-----
% In Mathematica format:
Timing[Resolve[Exists[{skoMC1,skoSC1}, And[skoMC1*skoMC1*skoMC1*2<=0,skoSC1*skoMC1*skoMC1*skoMC1>skoMC1*skoMC1*skoMC1*-1,skoMC1*skoMC1*skoMC1*-2<=0,skoMC1*skoMC1*skoMC1*2>0,skoSC1<=(5/4),2<=skoMC1,0<=skoSC1,skoMC1>0,0<=skoMC1,skoSC1*skoMC1>skoMC1*-1,skoSC1*skoMC1*-1<=skoMC1]], Reals]]

% In QepcadB format:
(E skoMC1) (E skoSC1) [[(skoMC1 skoMC1 skoMC1 (2))<=0]/\[[(skoMC1 skoMC1 skoMC1 (-1))<(skoSC1 skoMC1 skoMC1 skoMC1)]/\[[(skoMC1 skoMC1 skoMC1 (-2))<=0]/\[[0<(skoMC1 skoMC1 skoMC1 (2))]/\[[skoSC1<=5/4]/\[[2<=skoMC1]/\[[0<=skoSC1]/\[[0<skoMC1]/\[[0<=skoMC1]/\[[(skoMC1 (-1))<(skoSC1 skoMC1)]/\[(skoSC1 skoMC1 (-1))<=skoMC1]]]]]]]]]]].

% In SMTLib2 format:
(declare-fun skoMC1 () Real) (declare-fun skoSC1 () Real) (assert (and (<= (* skoMC1 (* skoMC1 (* skoMC1 2.))) 0.) (and (> (* skoSC1 (* skoMC1 (* skoMC1 skoMC1))) (* skoMC1 (* skoMC1 (* skoMC1 (- 1.))))) (and (<= (* skoMC1 (* skoMC1 (* skoMC1 (- 2.)))) 0.) (and (> (* skoMC1 (* skoMC1 (* skoMC1 2.))) 0.) (and (<= skoSC1 (/ 5. 4.)) (and (<= 2. skoMC1) (and (<= 0. skoSC1) (and (> skoMC1 0.) (and (<= 0. skoMC1) (and (> (* skoSC1 skoMC1) (* skoMC1 (- 1.))) (<= (* skoSC1 (* skoMC1 (- 1.))) skoMC1))))))))))))

% In GRF format:
(sequent " MetiTarski formula " (antecedent (<= (* skoMC1 (* skoMC1 (* skoMC1 2.))) 0.) (> (* skoSC1 (* skoMC1 (* skoMC1 skoMC1))) (* skoMC1 (* skoMC1 (* skoMC1 (- 1.))))) (<= (* skoMC1 (* skoMC1 (* skoMC1 (- 2.)))) 0.) (> (* skoMC1 (* skoMC1 (* skoMC1 2.))) 0.) (<= skoSC1 (/ 5. 4.)) (<= 2. skoMC1) (<= 0. skoSC1) (> skoMC1 0.) (<= 0. skoMC1) (> (* skoSC1 skoMC1) (* skoMC1 (- 1.)))) (succedent (> (* skoSC1 (* skoMC1 (- 1.))) skoMC1)))
-----[end problem]-----

-----[begin problem]-----
% In Mathematica format:
Timing[Resolve[Exists[{skoMC1,skoSC1}, And[skoMC1*skoMC1*skoMC1*2>0,skoSC1*(skoMC1*skoMC1*skoMC1*(1+skoMC1*-3)+skoSC1*(skoMC1*skoMC1*skoMC1*(2+skoMC1*3)+skoSC1*skoMC1*skoMC1*skoMC1*skoMC1))>skoMC1*skoMC1*skoMC1*(2+skoMC1*5),skoSC1*skoMC1*skoMC1*skoMC1>skoMC1*skoMC1*skoMC1*-1,skoMC1*skoMC1*skoMC1*-2<=0,skoMC1*skoMC1*skoMC1*2>0,skoSC1<=(5/4),2<=skoMC1,0<=skoSC1,skoMC1>0,0<=skoMC1,skoSC1*skoMC1>skoMC1*-1,skoSC1*skoMC1*-1<=skoMC1]], Reals]]

% In QepcadB format:
(E skoMC1) (E skoSC1) [[0<(skoMC1 skoMC1 skoMC1 (2))]/\[[(skoMC1 skoMC1 skoMC1 (2+(skoMC1 (5))))<(skoSC1 ((skoMC1 skoMC1 skoMC1 (1+(skoMC1 (-3))))+(skoSC1 ((skoMC1 skoMC1 skoMC1 (2+(skoMC1 (3))))+(skoSC1 skoMC1 skoMC1 skoMC1 skoMC1)))))]/\[[(skoMC1 skoMC1 skoMC1 (-1))<(skoSC1 skoMC1 skoMC1 skoMC1)]/\[[(skoMC1 skoMC1 skoMC1 (-2))<=0]/\[[0<(skoMC1 skoMC1 skoMC1 (2))]/\[[skoSC1<=5/4]/\[[2<=skoMC1]/\[[0<=skoSC1]/\[[0<skoMC1]/\[[0<=skoMC1]/\[[(skoMC1 (-1))<(skoSC1 skoMC1)]/\[(skoSC1 skoMC1 (-1))<=skoMC1]]]]]]]]]]]].

% In SMTLib2 format:
(declare-fun skoMC1 () Real) (declare-fun skoSC1 () Real) (assert (and (> (* skoMC1 (* skoMC1 (* skoMC1 2.))) 0.) (and (> (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (+ 1. (* skoMC1 (- 3.)))))) (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (+ 2. (* skoMC1 3.))))) (* skoSC1 (* skoMC1 (* skoMC1 (* skoMC1 skoMC1)))))))) (* skoMC1 (* skoMC1 (* skoMC1 (+ 2. (* skoMC1 5.)))))) (and (> (* skoSC1 (* skoMC1 (* skoMC1 skoMC1))) (* skoMC1 (* skoMC1 (* skoMC1 (- 1.))))) (and (<= (* skoMC1 (* skoMC1 (* skoMC1 (- 2.)))) 0.) (and (> (* skoMC1 (* skoMC1 (* skoMC1 2.))) 0.) (and (<= skoSC1 (/ 5. 4.)) (and (<= 2. skoMC1) (and (<= 0. skoSC1) (and (> skoMC1 0.) (and (<= 0. skoMC1) (and (> (* skoSC1 skoMC1) (* skoMC1 (- 1.))) (<= (* skoSC1 (* skoMC1 (- 1.))) skoMC1)))))))))))))

% In GRF format:
(sequent " MetiTarski formula " (antecedent (> (* skoMC1 (* skoMC1 (* skoMC1 2.))) 0.) (> (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (+ 1. (* skoMC1 (- 3.)))))) (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (+ 2. (* skoMC1 3.))))) (* skoSC1 (* skoMC1 (* skoMC1 (* skoMC1 skoMC1)))))))) (* skoMC1 (* skoMC1 (* skoMC1 (+ 2. (* skoMC1 5.)))))) (> (* skoSC1 (* skoMC1 (* skoMC1 skoMC1))) (* skoMC1 (* skoMC1 (* skoMC1 (- 1.))))) (<= (* skoMC1 (* skoMC1 (* skoMC1 (- 2.)))) 0.) (> (* skoMC1 (* skoMC1 (* skoMC1 2.))) 0.) (<= skoSC1 (/ 5. 4.)) (<= 2. skoMC1) (<= 0. skoSC1) (> skoMC1 0.) (<= 0. skoMC1) (> (* skoSC1 skoMC1) (* skoMC1 (- 1.)))) (succedent (> (* skoSC1 (* skoMC1 (- 1.))) skoMC1)))
-----[end problem]-----

-----[begin problem]-----
% In Mathematica format:
Timing[Resolve[Exists[{skoMC1,skoSC1}, And[skoMC1*skoMC1*skoMC1*-2<=0,skoMC1*skoMC1*skoMC1*2<=0,skoSC1*skoMC1*skoMC1*skoMC1<=skoMC1*skoMC1*skoMC1*-1,skoSC1*(skoMC1*skoMC1*skoMC1*skoMC1*3+skoSC1*(skoMC1*skoMC1*skoMC1*skoMC1*-3+skoSC1*skoMC1*skoMC1*skoMC1*skoMC1*-1))>skoMC1*skoMC1*skoMC1*skoMC1*-5,skoSC1*skoMC1*-1<=skoMC1,skoSC1*skoMC1>skoMC1*-1,0<=skoMC1,skoMC1>0,0<=skoSC1,2<=skoMC1,skoSC1<=(5/4)]], Reals]]

% In QepcadB format:
(E skoMC1) (E skoSC1) [[(skoMC1 skoMC1 skoMC1 (-2))<=0]/\[[(skoMC1 skoMC1 skoMC1 (2))<=0]/\[[(skoSC1 skoMC1 skoMC1 skoMC1)<=(skoMC1 skoMC1 skoMC1 (-1))]/\[[(skoMC1 skoMC1 skoMC1 skoMC1 (-5))<(skoSC1 ((skoMC1 skoMC1 skoMC1 skoMC1 (3))+(skoSC1 ((skoMC1 skoMC1 skoMC1 skoMC1 (-3))+(skoSC1 skoMC1 skoMC1 skoMC1 skoMC1 (-1))))))]/\[[(skoSC1 skoMC1 (-1))<=skoMC1]/\[[(skoMC1 (-1))<(skoSC1 skoMC1)]/\[[0<=skoMC1]/\[[0<skoMC1]/\[[0<=skoSC1]/\[[2<=skoMC1]/\[skoSC1<=5/4]]]]]]]]]]].

% In SMTLib2 format:
(declare-fun skoMC1 () Real) (declare-fun skoSC1 () Real) (assert (and (<= (* skoMC1 (* skoMC1 (* skoMC1 (- 2.)))) 0.) (and (<= (* skoMC1 (* skoMC1 (* skoMC1 2.))) 0.) (and (<= (* skoSC1 (* skoMC1 (* skoMC1 skoMC1))) (* skoMC1 (* skoMC1 (* skoMC1 (- 1.))))) (and (> (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (* skoMC1 3.)))) (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (* skoMC1 (- 3.))))) (* skoSC1 (* skoMC1 (* skoMC1 (* skoMC1 (* skoMC1 (- 1.)))))))))) (* skoMC1 (* skoMC1 (* skoMC1 (* skoMC1 (- 5.)))))) (and (<= (* skoSC1 (* skoMC1 (- 1.))) skoMC1) (and (> (* skoSC1 skoMC1) (* skoMC1 (- 1.))) (and (<= 0. skoMC1) (and (> skoMC1 0.) (and (<= 0. skoSC1) (and (<= 2. skoMC1) (<= skoSC1 (/ 5. 4.)))))))))))))

% In GRF format:
(sequent " MetiTarski formula " (antecedent (<= (* skoMC1 (* skoMC1 (* skoMC1 (- 2.)))) 0.) (<= (* skoMC1 (* skoMC1 (* skoMC1 2.))) 0.) (<= (* skoSC1 (* skoMC1 (* skoMC1 skoMC1))) (* skoMC1 (* skoMC1 (* skoMC1 (- 1.))))) (> (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (* skoMC1 3.)))) (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (* skoMC1 (- 3.))))) (* skoSC1 (* skoMC1 (* skoMC1 (* skoMC1 (* skoMC1 (- 1.)))))))))) (* skoMC1 (* skoMC1 (* skoMC1 (* skoMC1 (- 5.)))))) (<= (* skoSC1 (* skoMC1 (- 1.))) skoMC1) (> (* skoSC1 skoMC1) (* skoMC1 (- 1.))) (<= 0. skoMC1) (> skoMC1 0.) (<= 0. skoSC1) (<= 2. skoMC1)) (succedent (> skoSC1 (/ 5. 4.))))
-----[end problem]-----

-----[begin problem]-----
% In Mathematica format:
Timing[Resolve[Exists[{skoMC1,skoSC1}, And[skoSC1*skoMC1*skoMC1*skoMC1<=skoMC1*skoMC1*skoMC1*-1,skoMC1*skoMC1*skoMC1*2>0,skoSC1*(skoMC1*skoMC1*skoMC1*skoMC1*3+skoSC1*(skoMC1*skoMC1*skoMC1*(-1+skoMC1*-3)+skoSC1*(skoMC1*skoMC1*skoMC1*skoMC1*-1+skoSC1*skoMC1*skoMC1*skoMC1*(1/12))))>skoMC1*skoMC1*skoMC1*(-2+skoMC1*-5),skoMC1*skoMC1*skoMC1*-2<=0,skoMC1*skoMC1*skoMC1*2>0,skoSC1*skoMC1*-1<=skoMC1,skoSC1*skoMC1>skoMC1*-1,0<=skoMC1,skoMC1>0,0<=skoSC1,2<=skoMC1,skoSC1<=(5/4)]], Reals]]

% In QepcadB format:
(E skoMC1) (E skoSC1) [[(skoSC1 skoMC1 skoMC1 skoMC1)<=(skoMC1 skoMC1 skoMC1 (-1))]/\[[0<(skoMC1 skoMC1 skoMC1 (2))]/\[[(skoMC1 skoMC1 skoMC1 (-2+(skoMC1 (-5))))<(skoSC1 ((skoMC1 skoMC1 skoMC1 skoMC1 (3))+(skoSC1 ((skoMC1 skoMC1 skoMC1 (-1+(skoMC1 (-3))))+(skoSC1 ((skoMC1 skoMC1 skoMC1 skoMC1 (-1))+(skoSC1 skoMC1 skoMC1 skoMC1 (1/12))))))))]/\[[(skoMC1 skoMC1 skoMC1 (-2))<=0]/\[[0<(skoMC1 skoMC1 skoMC1 (2))]/\[[(skoSC1 skoMC1 (-1))<=skoMC1]/\[[(skoMC1 (-1))<(skoSC1 skoMC1)]/\[[0<=skoMC1]/\[[0<skoMC1]/\[[0<=skoSC1]/\[[2<=skoMC1]/\[skoSC1<=5/4]]]]]]]]]]]].

% In SMTLib2 format:
(declare-fun skoMC1 () Real) (declare-fun skoSC1 () Real) (assert (and (<= (* skoSC1 (* skoMC1 (* skoMC1 skoMC1))) (* skoMC1 (* skoMC1 (* skoMC1 (- 1.))))) (and (> (* skoMC1 (* skoMC1 (* skoMC1 2.))) 0.) (and (> (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (* skoMC1 3.)))) (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (+ (- 1.) (* skoMC1 (- 3.)))))) (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (* skoMC1 (- 1.))))) (* skoSC1 (* skoMC1 (* skoMC1 (* skoMC1 (/ 1. 12.))))))))))) (* skoMC1 (* skoMC1 (* skoMC1 (+ (- 2.) (* skoMC1 (- 5.))))))) (and (<= (* skoMC1 (* skoMC1 (* skoMC1 (- 2.)))) 0.) (and (> (* skoMC1 (* skoMC1 (* skoMC1 2.))) 0.) (and (<= (* skoSC1 (* skoMC1 (- 1.))) skoMC1) (and (> (* skoSC1 skoMC1) (* skoMC1 (- 1.))) (and (<= 0. skoMC1) (and (> skoMC1 0.) (and (<= 0. skoSC1) (and (<= 2. skoMC1) (<= skoSC1 (/ 5. 4.))))))))))))))

% In GRF format:
(sequent " MetiTarski formula " (antecedent (<= (* skoSC1 (* skoMC1 (* skoMC1 skoMC1))) (* skoMC1 (* skoMC1 (* skoMC1 (- 1.))))) (> (* skoMC1 (* skoMC1 (* skoMC1 2.))) 0.) (> (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (* skoMC1 3.)))) (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (+ (- 1.) (* skoMC1 (- 3.)))))) (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (* skoMC1 (- 1.))))) (* skoSC1 (* skoMC1 (* skoMC1 (* skoMC1 (/ 1. 12.))))))))))) (* skoMC1 (* skoMC1 (* skoMC1 (+ (- 2.) (* skoMC1 (- 5.))))))) (<= (* skoMC1 (* skoMC1 (* skoMC1 (- 2.)))) 0.) (> (* skoMC1 (* skoMC1 (* skoMC1 2.))) 0.) (<= (* skoSC1 (* skoMC1 (- 1.))) skoMC1) (> (* skoSC1 skoMC1) (* skoMC1 (- 1.))) (<= 0. skoMC1) (> skoMC1 0.) (<= 0. skoSC1) (<= 2. skoMC1)) (succedent (> skoSC1 (/ 5. 4.))))
-----[end problem]-----

-----[begin problem]-----
% In Mathematica format:
Timing[Resolve[Exists[{skoMC1,skoSC1}, And[skoMC1*skoMC1*skoMC1*2>0,skoSC1*skoMC1*skoMC1*skoMC1>skoMC1*skoMC1*skoMC1*-1,skoMC1*skoMC1*skoMC1*-2<=0,skoMC1*skoMC1*skoMC1*2>0,skoSC1*skoMC1*-1<=skoMC1,skoSC1*skoMC1>skoMC1*-1,0<=skoMC1,skoMC1>0,0<=skoSC1,2<=skoMC1,skoSC1<=(5/4)]], Reals]]

% In QepcadB format:
(E skoMC1) (E skoSC1) [[0<(skoMC1 skoMC1 skoMC1 (2))]/\[[(skoMC1 skoMC1 skoMC1 (-1))<(skoSC1 skoMC1 skoMC1 skoMC1)]/\[[(skoMC1 skoMC1 skoMC1 (-2))<=0]/\[[0<(skoMC1 skoMC1 skoMC1 (2))]/\[[(skoSC1 skoMC1 (-1))<=skoMC1]/\[[(skoMC1 (-1))<(skoSC1 skoMC1)]/\[[0<=skoMC1]/\[[0<skoMC1]/\[[0<=skoSC1]/\[[2<=skoMC1]/\[skoSC1<=5/4]]]]]]]]]]].

% In SMTLib2 format:
(declare-fun skoMC1 () Real) (declare-fun skoSC1 () Real) (assert (and (> (* skoMC1 (* skoMC1 (* skoMC1 2.))) 0.) (and (> (* skoSC1 (* skoMC1 (* skoMC1 skoMC1))) (* skoMC1 (* skoMC1 (* skoMC1 (- 1.))))) (and (<= (* skoMC1 (* skoMC1 (* skoMC1 (- 2.)))) 0.) (and (> (* skoMC1 (* skoMC1 (* skoMC1 2.))) 0.) (and (<= (* skoSC1 (* skoMC1 (- 1.))) skoMC1) (and (> (* skoSC1 skoMC1) (* skoMC1 (- 1.))) (and (<= 0. skoMC1) (and (> skoMC1 0.) (and (<= 0. skoSC1) (and (<= 2. skoMC1) (<= skoSC1 (/ 5. 4.)))))))))))))

% In GRF format:
(sequent " MetiTarski formula " (antecedent (> (* skoMC1 (* skoMC1 (* skoMC1 2.))) 0.) (> (* skoSC1 (* skoMC1 (* skoMC1 skoMC1))) (* skoMC1 (* skoMC1 (* skoMC1 (- 1.))))) (<= (* skoMC1 (* skoMC1 (* skoMC1 (- 2.)))) 0.) (> (* skoMC1 (* skoMC1 (* skoMC1 2.))) 0.) (<= (* skoSC1 (* skoMC1 (- 1.))) skoMC1) (> (* skoSC1 skoMC1) (* skoMC1 (- 1.))) (<= 0. skoMC1) (> skoMC1 0.) (<= 0. skoSC1) (<= 2. skoMC1)) (succedent (> skoSC1 (/ 5. 4.))))
-----[end problem]-----

-----[begin problem]-----
% In Mathematica format:
Timing[Resolve[Exists[{skoMC1,skoSC1}, And[skoSC1*skoMC1*skoMC1*skoMC1*-1<=skoMC1*skoMC1*skoMC1,skoSC1*skoMC1*skoMC1*skoMC1>skoMC1*skoMC1*skoMC1*-1,skoSC1*skoMC1*skoMC1*skoMC1>skoMC1*skoMC1*skoMC1*-1,skoMC1*skoMC1*skoMC1*-2<=0,skoMC1*skoMC1*skoMC1*2>0,skoSC1*skoMC1*-1<=skoMC1,skoSC1*skoMC1>skoMC1*-1,0<=skoMC1,skoMC1>0,0<=skoSC1,2<=skoMC1,skoSC1<=(5/4)]], Reals]]

% In QepcadB format:
(E skoMC1) (E skoSC1) [[(skoSC1 skoMC1 skoMC1 skoMC1 (-1))<=(skoMC1 skoMC1 skoMC1)]/\[[(skoMC1 skoMC1 skoMC1 (-1))<(skoSC1 skoMC1 skoMC1 skoMC1)]/\[[(skoMC1 skoMC1 skoMC1 (-1))<(skoSC1 skoMC1 skoMC1 skoMC1)]/\[[(skoMC1 skoMC1 skoMC1 (-2))<=0]/\[[0<(skoMC1 skoMC1 skoMC1 (2))]/\[[(skoSC1 skoMC1 (-1))<=skoMC1]/\[[(skoMC1 (-1))<(skoSC1 skoMC1)]/\[[0<=skoMC1]/\[[0<skoMC1]/\[[0<=skoSC1]/\[[2<=skoMC1]/\[skoSC1<=5/4]]]]]]]]]]]].

% In SMTLib2 format:
(declare-fun skoMC1 () Real) (declare-fun skoSC1 () Real) (assert (and (<= (* skoSC1 (* skoMC1 (* skoMC1 (* skoMC1 (- 1.))))) (* skoMC1 (* skoMC1 skoMC1))) (and (> (* skoSC1 (* skoMC1 (* skoMC1 skoMC1))) (* skoMC1 (* skoMC1 (* skoMC1 (- 1.))))) (and (> (* skoSC1 (* skoMC1 (* skoMC1 skoMC1))) (* skoMC1 (* skoMC1 (* skoMC1 (- 1.))))) (and (<= (* skoMC1 (* skoMC1 (* skoMC1 (- 2.)))) 0.) (and (> (* skoMC1 (* skoMC1 (* skoMC1 2.))) 0.) (and (<= (* skoSC1 (* skoMC1 (- 1.))) skoMC1) (and (> (* skoSC1 skoMC1) (* skoMC1 (- 1.))) (and (<= 0. skoMC1) (and (> skoMC1 0.) (and (<= 0. skoSC1) (and (<= 2. skoMC1) (<= skoSC1 (/ 5. 4.))))))))))))))

% In GRF format:
(sequent " MetiTarski formula " (antecedent (<= (* skoSC1 (* skoMC1 (* skoMC1 (* skoMC1 (- 1.))))) (* skoMC1 (* skoMC1 skoMC1))) (> (* skoSC1 (* skoMC1 (* skoMC1 skoMC1))) (* skoMC1 (* skoMC1 (* skoMC1 (- 1.))))) (> (* skoSC1 (* skoMC1 (* skoMC1 skoMC1))) (* skoMC1 (* skoMC1 (* skoMC1 (- 1.))))) (<= (* skoMC1 (* skoMC1 (* skoMC1 (- 2.)))) 0.) (> (* skoMC1 (* skoMC1 (* skoMC1 2.))) 0.) (<= (* skoSC1 (* skoMC1 (- 1.))) skoMC1) (> (* skoSC1 skoMC1) (* skoMC1 (- 1.))) (<= 0. skoMC1) (> skoMC1 0.) (<= 0. skoSC1) (<= 2. skoMC1)) (succedent (> skoSC1 (/ 5. 4.))))
-----[end problem]-----

-----[begin problem]-----
% In Mathematica format:
Timing[Resolve[Exists[{skoMC1,skoSC1}, And[skoSC1*skoMC1*skoMC1*skoMC1*-1<=skoMC1*skoMC1*skoMC1,skoSC1*skoMC1*skoMC1*skoMC1>skoMC1*skoMC1*skoMC1*-1,skoMC1*skoMC1*skoMC1*-2<=0,skoMC1*skoMC1*skoMC1*2>0,skoSC1*skoMC1*-1<=skoMC1,skoSC1*skoMC1>skoMC1*-1,0<=skoMC1,skoMC1>0,0<=skoSC1,2<=skoMC1,skoSC1<=(5/4)]], Reals]]

% In QepcadB format:
(E skoMC1) (E skoSC1) [[(skoSC1 skoMC1 skoMC1 skoMC1 (-1))<=(skoMC1 skoMC1 skoMC1)]/\[[(skoMC1 skoMC1 skoMC1 (-1))<(skoSC1 skoMC1 skoMC1 skoMC1)]/\[[(skoMC1 skoMC1 skoMC1 (-2))<=0]/\[[0<(skoMC1 skoMC1 skoMC1 (2))]/\[[(skoSC1 skoMC1 (-1))<=skoMC1]/\[[(skoMC1 (-1))<(skoSC1 skoMC1)]/\[[0<=skoMC1]/\[[0<skoMC1]/\[[0<=skoSC1]/\[[2<=skoMC1]/\[skoSC1<=5/4]]]]]]]]]]].

% In SMTLib2 format:
(declare-fun skoMC1 () Real) (declare-fun skoSC1 () Real) (assert (and (<= (* skoSC1 (* skoMC1 (* skoMC1 (* skoMC1 (- 1.))))) (* skoMC1 (* skoMC1 skoMC1))) (and (> (* skoSC1 (* skoMC1 (* skoMC1 skoMC1))) (* skoMC1 (* skoMC1 (* skoMC1 (- 1.))))) (and (<= (* skoMC1 (* skoMC1 (* skoMC1 (- 2.)))) 0.) (and (> (* skoMC1 (* skoMC1 (* skoMC1 2.))) 0.) (and (<= (* skoSC1 (* skoMC1 (- 1.))) skoMC1) (and (> (* skoSC1 skoMC1) (* skoMC1 (- 1.))) (and (<= 0. skoMC1) (and (> skoMC1 0.) (and (<= 0. skoSC1) (and (<= 2. skoMC1) (<= skoSC1 (/ 5. 4.)))))))))))))

% In GRF format:
(sequent " MetiTarski formula " (antecedent (<= (* skoSC1 (* skoMC1 (* skoMC1 (* skoMC1 (- 1.))))) (* skoMC1 (* skoMC1 skoMC1))) (> (* skoSC1 (* skoMC1 (* skoMC1 skoMC1))) (* skoMC1 (* skoMC1 (* skoMC1 (- 1.))))) (<= (* skoMC1 (* skoMC1 (* skoMC1 (- 2.)))) 0.) (> (* skoMC1 (* skoMC1 (* skoMC1 2.))) 0.) (<= (* skoSC1 (* skoMC1 (- 1.))) skoMC1) (> (* skoSC1 skoMC1) (* skoMC1 (- 1.))) (<= 0. skoMC1) (> skoMC1 0.) (<= 0. skoSC1) (<= 2. skoMC1)) (succedent (> skoSC1 (/ 5. 4.))))
-----[end problem]-----

-----[begin problem]-----
% In Mathematica format:
Timing[Resolve[Exists[{skoMC1,skoSC1}, And[skoSC1*skoMC1*skoMC1*skoMC1*-1<=skoMC1*skoMC1*skoMC1,skoMC1*skoMC1*skoMC1*2>0,skoSC1*skoMC1*skoMC1*skoMC1>skoMC1*skoMC1*skoMC1*-1,skoMC1*skoMC1*skoMC1*-2<=0,skoMC1*skoMC1*skoMC1*2>0,skoSC1*skoMC1*-1<=skoMC1,skoSC1*skoMC1>skoMC1*-1,0<=skoMC1,skoMC1>0,0<=skoSC1,2<=skoMC1,skoSC1<=(5/4)]], Reals]]

% In QepcadB format:
(E skoMC1) (E skoSC1) [[(skoSC1 skoMC1 skoMC1 skoMC1 (-1))<=(skoMC1 skoMC1 skoMC1)]/\[[0<(skoMC1 skoMC1 skoMC1 (2))]/\[[(skoMC1 skoMC1 skoMC1 (-1))<(skoSC1 skoMC1 skoMC1 skoMC1)]/\[[(skoMC1 skoMC1 skoMC1 (-2))<=0]/\[[0<(skoMC1 skoMC1 skoMC1 (2))]/\[[(skoSC1 skoMC1 (-1))<=skoMC1]/\[[(skoMC1 (-1))<(skoSC1 skoMC1)]/\[[0<=skoMC1]/\[[0<skoMC1]/\[[0<=skoSC1]/\[[2<=skoMC1]/\[skoSC1<=5/4]]]]]]]]]]]].

% In SMTLib2 format:
(declare-fun skoMC1 () Real) (declare-fun skoSC1 () Real) (assert (and (<= (* skoSC1 (* skoMC1 (* skoMC1 (* skoMC1 (- 1.))))) (* skoMC1 (* skoMC1 skoMC1))) (and (> (* skoMC1 (* skoMC1 (* skoMC1 2.))) 0.) (and (> (* skoSC1 (* skoMC1 (* skoMC1 skoMC1))) (* skoMC1 (* skoMC1 (* skoMC1 (- 1.))))) (and (<= (* skoMC1 (* skoMC1 (* skoMC1 (- 2.)))) 0.) (and (> (* skoMC1 (* skoMC1 (* skoMC1 2.))) 0.) (and (<= (* skoSC1 (* skoMC1 (- 1.))) skoMC1) (and (> (* skoSC1 skoMC1) (* skoMC1 (- 1.))) (and (<= 0. skoMC1) (and (> skoMC1 0.) (and (<= 0. skoSC1) (and (<= 2. skoMC1) (<= skoSC1 (/ 5. 4.))))))))))))))

% In GRF format:
(sequent " MetiTarski formula " (antecedent (<= (* skoSC1 (* skoMC1 (* skoMC1 (* skoMC1 (- 1.))))) (* skoMC1 (* skoMC1 skoMC1))) (> (* skoMC1 (* skoMC1 (* skoMC1 2.))) 0.) (> (* skoSC1 (* skoMC1 (* skoMC1 skoMC1))) (* skoMC1 (* skoMC1 (* skoMC1 (- 1.))))) (<= (* skoMC1 (* skoMC1 (* skoMC1 (- 2.)))) 0.) (> (* skoMC1 (* skoMC1 (* skoMC1 2.))) 0.) (<= (* skoSC1 (* skoMC1 (- 1.))) skoMC1) (> (* skoSC1 skoMC1) (* skoMC1 (- 1.))) (<= 0. skoMC1) (> skoMC1 0.) (<= 0. skoSC1) (<= 2. skoMC1)) (succedent (> skoSC1 (/ 5. 4.))))
-----[end problem]-----

-----[begin problem]-----
% In Mathematica format:
Timing[Resolve[Exists[{skoMC1,skoSC1}, And[skoMC1*skoMC1*skoMC1*-2<=0,skoSC1*skoMC1*skoMC1*skoMC1>skoMC1*skoMC1*skoMC1*-1,skoMC1*skoMC1*skoMC1*-2<=0,skoMC1*skoMC1*skoMC1*2>0,skoSC1*skoMC1*-1<=skoMC1,skoSC1*skoMC1>skoMC1*-1,0<=skoMC1,skoMC1>0,0<=skoSC1,2<=skoMC1,skoSC1<=(5/4)]], Reals]]

% In QepcadB format:
(E skoMC1) (E skoSC1) [[(skoMC1 skoMC1 skoMC1 (-2))<=0]/\[[(skoMC1 skoMC1 skoMC1 (-1))<(skoSC1 skoMC1 skoMC1 skoMC1)]/\[[(skoMC1 skoMC1 skoMC1 (-2))<=0]/\[[0<(skoMC1 skoMC1 skoMC1 (2))]/\[[(skoSC1 skoMC1 (-1))<=skoMC1]/\[[(skoMC1 (-1))<(skoSC1 skoMC1)]/\[[0<=skoMC1]/\[[0<skoMC1]/\[[0<=skoSC1]/\[[2<=skoMC1]/\[skoSC1<=5/4]]]]]]]]]]].

% In SMTLib2 format:
(declare-fun skoMC1 () Real) (declare-fun skoSC1 () Real) (assert (and (<= (* skoMC1 (* skoMC1 (* skoMC1 (- 2.)))) 0.) (and (> (* skoSC1 (* skoMC1 (* skoMC1 skoMC1))) (* skoMC1 (* skoMC1 (* skoMC1 (- 1.))))) (and (<= (* skoMC1 (* skoMC1 (* skoMC1 (- 2.)))) 0.) (and (> (* skoMC1 (* skoMC1 (* skoMC1 2.))) 0.) (and (<= (* skoSC1 (* skoMC1 (- 1.))) skoMC1) (and (> (* skoSC1 skoMC1) (* skoMC1 (- 1.))) (and (<= 0. skoMC1) (and (> skoMC1 0.) (and (<= 0. skoSC1) (and (<= 2. skoMC1) (<= skoSC1 (/ 5. 4.)))))))))))))

% In GRF format:
(sequent " MetiTarski formula " (antecedent (<= (* skoMC1 (* skoMC1 (* skoMC1 (- 2.)))) 0.) (> (* skoSC1 (* skoMC1 (* skoMC1 skoMC1))) (* skoMC1 (* skoMC1 (* skoMC1 (- 1.))))) (<= (* skoMC1 (* skoMC1 (* skoMC1 (- 2.)))) 0.) (> (* skoMC1 (* skoMC1 (* skoMC1 2.))) 0.) (<= (* skoSC1 (* skoMC1 (- 1.))) skoMC1) (> (* skoSC1 skoMC1) (* skoMC1 (- 1.))) (<= 0. skoMC1) (> skoMC1 0.) (<= 0. skoSC1) (<= 2. skoMC1)) (succedent (> skoSC1 (/ 5. 4.))))
-----[end problem]-----

-----[begin problem]-----
% In Mathematica format:
Timing[Resolve[Exists[{skoMC1,skoSC1}, And[skoSC1*skoMC1*skoMC1*skoMC1*-1<=skoMC1*skoMC1*skoMC1,skoSC1*skoMC1*skoMC1*skoMC1>skoMC1*skoMC1*skoMC1*-1,skoMC1*skoMC1*skoMC1*-2<=0,skoMC1*skoMC1*skoMC1*2>0,skoSC1*skoMC1*-1<=skoMC1,skoSC1*skoMC1>skoMC1*-1,0<=skoMC1,skoMC1>0,0<=skoSC1,2<=skoMC1,skoSC1<=(5/4)]], Reals]]

% In QepcadB format:
(E skoMC1) (E skoSC1) [[(skoSC1 skoMC1 skoMC1 skoMC1 (-1))<=(skoMC1 skoMC1 skoMC1)]/\[[(skoMC1 skoMC1 skoMC1 (-1))<(skoSC1 skoMC1 skoMC1 skoMC1)]/\[[(skoMC1 skoMC1 skoMC1 (-2))<=0]/\[[0<(skoMC1 skoMC1 skoMC1 (2))]/\[[(skoSC1 skoMC1 (-1))<=skoMC1]/\[[(skoMC1 (-1))<(skoSC1 skoMC1)]/\[[0<=skoMC1]/\[[0<skoMC1]/\[[0<=skoSC1]/\[[2<=skoMC1]/\[skoSC1<=5/4]]]]]]]]]]].

% In SMTLib2 format:
(declare-fun skoMC1 () Real) (declare-fun skoSC1 () Real) (assert (and (<= (* skoSC1 (* skoMC1 (* skoMC1 (* skoMC1 (- 1.))))) (* skoMC1 (* skoMC1 skoMC1))) (and (> (* skoSC1 (* skoMC1 (* skoMC1 skoMC1))) (* skoMC1 (* skoMC1 (* skoMC1 (- 1.))))) (and (<= (* skoMC1 (* skoMC1 (* skoMC1 (- 2.)))) 0.) (and (> (* skoMC1 (* skoMC1 (* skoMC1 2.))) 0.) (and (<= (* skoSC1 (* skoMC1 (- 1.))) skoMC1) (and (> (* skoSC1 skoMC1) (* skoMC1 (- 1.))) (and (<= 0. skoMC1) (and (> skoMC1 0.) (and (<= 0. skoSC1) (and (<= 2. skoMC1) (<= skoSC1 (/ 5. 4.)))))))))))))

% In GRF format:
(sequent " MetiTarski formula " (antecedent (<= (* skoSC1 (* skoMC1 (* skoMC1 (* skoMC1 (- 1.))))) (* skoMC1 (* skoMC1 skoMC1))) (> (* skoSC1 (* skoMC1 (* skoMC1 skoMC1))) (* skoMC1 (* skoMC1 (* skoMC1 (- 1.))))) (<= (* skoMC1 (* skoMC1 (* skoMC1 (- 2.)))) 0.) (> (* skoMC1 (* skoMC1 (* skoMC1 2.))) 0.) (<= (* skoSC1 (* skoMC1 (- 1.))) skoMC1) (> (* skoSC1 skoMC1) (* skoMC1 (- 1.))) (<= 0. skoMC1) (> skoMC1 0.) (<= 0. skoSC1) (<= 2. skoMC1)) (succedent (> skoSC1 (/ 5. 4.))))
-----[end problem]-----

-----[begin problem]-----
% In Mathematica format:
Timing[Resolve[Exists[{skoMC1,skoSC1}, And[skoSC1*skoMC1*skoMC1*skoMC1*-1<=skoMC1*skoMC1*skoMC1,skoSC1*skoMC1*skoMC1*skoMC1*-1<=skoMC1*skoMC1*skoMC1,skoSC1*skoMC1*skoMC1*skoMC1>skoMC1*skoMC1*skoMC1*-1,skoMC1*skoMC1*skoMC1*-2<=0,skoMC1*skoMC1*skoMC1*2>0,skoSC1*skoMC1*-1<=skoMC1,skoSC1*skoMC1>skoMC1*-1,0<=skoMC1,skoMC1>0,0<=skoSC1,2<=skoMC1,skoSC1<=(5/4)]], Reals]]

% In QepcadB format:
(E skoMC1) (E skoSC1) [[(skoSC1 skoMC1 skoMC1 skoMC1 (-1))<=(skoMC1 skoMC1 skoMC1)]/\[[(skoSC1 skoMC1 skoMC1 skoMC1 (-1))<=(skoMC1 skoMC1 skoMC1)]/\[[(skoMC1 skoMC1 skoMC1 (-1))<(skoSC1 skoMC1 skoMC1 skoMC1)]/\[[(skoMC1 skoMC1 skoMC1 (-2))<=0]/\[[0<(skoMC1 skoMC1 skoMC1 (2))]/\[[(skoSC1 skoMC1 (-1))<=skoMC1]/\[[(skoMC1 (-1))<(skoSC1 skoMC1)]/\[[0<=skoMC1]/\[[0<skoMC1]/\[[0<=skoSC1]/\[[2<=skoMC1]/\[skoSC1<=5/4]]]]]]]]]]]].

% In SMTLib2 format:
(declare-fun skoMC1 () Real) (declare-fun skoSC1 () Real) (assert (and (<= (* skoSC1 (* skoMC1 (* skoMC1 (* skoMC1 (- 1.))))) (* skoMC1 (* skoMC1 skoMC1))) (and (<= (* skoSC1 (* skoMC1 (* skoMC1 (* skoMC1 (- 1.))))) (* skoMC1 (* skoMC1 skoMC1))) (and (> (* skoSC1 (* skoMC1 (* skoMC1 skoMC1))) (* skoMC1 (* skoMC1 (* skoMC1 (- 1.))))) (and (<= (* skoMC1 (* skoMC1 (* skoMC1 (- 2.)))) 0.) (and (> (* skoMC1 (* skoMC1 (* skoMC1 2.))) 0.) (and (<= (* skoSC1 (* skoMC1 (- 1.))) skoMC1) (and (> (* skoSC1 skoMC1) (* skoMC1 (- 1.))) (and (<= 0. skoMC1) (and (> skoMC1 0.) (and (<= 0. skoSC1) (and (<= 2. skoMC1) (<= skoSC1 (/ 5. 4.))))))))))))))

% In GRF format:
(sequent " MetiTarski formula " (antecedent (<= (* skoSC1 (* skoMC1 (* skoMC1 (* skoMC1 (- 1.))))) (* skoMC1 (* skoMC1 skoMC1))) (<= (* skoSC1 (* skoMC1 (* skoMC1 (* skoMC1 (- 1.))))) (* skoMC1 (* skoMC1 skoMC1))) (> (* skoSC1 (* skoMC1 (* skoMC1 skoMC1))) (* skoMC1 (* skoMC1 (* skoMC1 (- 1.))))) (<= (* skoMC1 (* skoMC1 (* skoMC1 (- 2.)))) 0.) (> (* skoMC1 (* skoMC1 (* skoMC1 2.))) 0.) (<= (* skoSC1 (* skoMC1 (- 1.))) skoMC1) (> (* skoSC1 skoMC1) (* skoMC1 (- 1.))) (<= 0. skoMC1) (> skoMC1 0.) (<= 0. skoSC1) (<= 2. skoMC1)) (succedent (> skoSC1 (/ 5. 4.))))
-----[end problem]-----

-----[begin problem]-----
% In Mathematica format:
Timing[Resolve[Exists[{skoMC1,skoSC1}, And[skoMC1*skoMC1*skoMC1*-2<=0,skoMC1*skoMC1*skoMC1*2<=0,skoSC1*skoMC1*skoMC1*skoMC1*-1<=skoMC1*skoMC1*skoMC1,skoSC1*skoMC1*skoMC1*skoMC1<=skoMC1*skoMC1*skoMC1*-1,skoSC1*(skoMC1*skoMC1*skoMC1*skoMC1*-3+skoSC1*(skoMC1*skoMC1*skoMC1*skoMC1*3+skoSC1*skoMC1*skoMC1*skoMC1*skoMC1))<=skoMC1*skoMC1*skoMC1*skoMC1*5,skoSC1<=(5/4),2<=skoMC1,0<=skoSC1,skoMC1>0,0<=skoMC1,skoSC1*skoMC1>skoMC1*-1,skoSC1*skoMC1*-1<=skoMC1]], Reals]]

% In QepcadB format:
(E skoMC1) (E skoSC1) [[(skoMC1 skoMC1 skoMC1 (-2))<=0]/\[[(skoMC1 skoMC1 skoMC1 (2))<=0]/\[[(skoSC1 skoMC1 skoMC1 skoMC1 (-1))<=(skoMC1 skoMC1 skoMC1)]/\[[(skoSC1 skoMC1 skoMC1 skoMC1)<=(skoMC1 skoMC1 skoMC1 (-1))]/\[[(skoSC1 ((skoMC1 skoMC1 skoMC1 skoMC1 (-3))+(skoSC1 ((skoMC1 skoMC1 skoMC1 skoMC1 (3))+(skoSC1 skoMC1 skoMC1 skoMC1 skoMC1)))))<=(skoMC1 skoMC1 skoMC1 skoMC1 (5))]/\[[skoSC1<=5/4]/\[[2<=skoMC1]/\[[0<=skoSC1]/\[[0<skoMC1]/\[[0<=skoMC1]/\[[(skoMC1 (-1))<(skoSC1 skoMC1)]/\[(skoSC1 skoMC1 (-1))<=skoMC1]]]]]]]]]]]].

% In SMTLib2 format:
(declare-fun skoMC1 () Real) (declare-fun skoSC1 () Real) (assert (and (<= (* skoMC1 (* skoMC1 (* skoMC1 (- 2.)))) 0.) (and (<= (* skoMC1 (* skoMC1 (* skoMC1 2.))) 0.) (and (<= (* skoSC1 (* skoMC1 (* skoMC1 (* skoMC1 (- 1.))))) (* skoMC1 (* skoMC1 skoMC1))) (and (<= (* skoSC1 (* skoMC1 (* skoMC1 skoMC1))) (* skoMC1 (* skoMC1 (* skoMC1 (- 1.))))) (and (<= (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (* skoMC1 (- 3.))))) (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (* skoMC1 3.)))) (* skoSC1 (* skoMC1 (* skoMC1 (* skoMC1 skoMC1)))))))) (* skoMC1 (* skoMC1 (* skoMC1 (* skoMC1 5.))))) (and (<= skoSC1 (/ 5. 4.)) (and (<= 2. skoMC1) (and (<= 0. skoSC1) (and (> skoMC1 0.) (and (<= 0. skoMC1) (and (> (* skoSC1 skoMC1) (* skoMC1 (- 1.))) (<= (* skoSC1 (* skoMC1 (- 1.))) skoMC1)))))))))))))

% In GRF format:
(sequent " MetiTarski formula " (antecedent (<= (* skoMC1 (* skoMC1 (* skoMC1 (- 2.)))) 0.) (<= (* skoMC1 (* skoMC1 (* skoMC1 2.))) 0.) (<= (* skoSC1 (* skoMC1 (* skoMC1 (* skoMC1 (- 1.))))) (* skoMC1 (* skoMC1 skoMC1))) (<= (* skoSC1 (* skoMC1 (* skoMC1 skoMC1))) (* skoMC1 (* skoMC1 (* skoMC1 (- 1.))))) (<= (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (* skoMC1 (- 3.))))) (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (* skoMC1 3.)))) (* skoSC1 (* skoMC1 (* skoMC1 (* skoMC1 skoMC1)))))))) (* skoMC1 (* skoMC1 (* skoMC1 (* skoMC1 5.))))) (<= skoSC1 (/ 5. 4.)) (<= 2. skoMC1) (<= 0. skoSC1) (> skoMC1 0.) (<= 0. skoMC1) (> (* skoSC1 skoMC1) (* skoMC1 (- 1.)))) (succedent (> (* skoSC1 (* skoMC1 (- 1.))) skoMC1)))
-----[end problem]-----

-----[begin problem]-----
% In Mathematica format:
Timing[Resolve[Exists[{skoMC1,skoSC1}, And[skoSC1*skoMC1*skoMC1*skoMC1<=skoMC1*skoMC1*skoMC1*-1,skoSC1*(skoMC1*skoMC1*skoMC1*skoMC1*-3+skoSC1*(skoMC1*skoMC1*skoMC1*(1+skoMC1*3)+skoSC1*(skoMC1*skoMC1*skoMC1*skoMC1+skoSC1*skoMC1*skoMC1*skoMC1*(-1/12))))<=skoMC1*skoMC1*skoMC1*(2+skoMC1*5),skoMC1*skoMC1*skoMC1*2>0,skoMC1*skoMC1*skoMC1*-2<=0,skoMC1*skoMC1*skoMC1*2>0,skoSC1<=(5/4),2<=skoMC1,0<=skoSC1,skoMC1>0,0<=skoMC1,skoSC1*skoMC1>skoMC1*-1,skoSC1*skoMC1*-1<=skoMC1]], Reals]]

% In QepcadB format:
(E skoMC1) (E skoSC1) [[(skoSC1 skoMC1 skoMC1 skoMC1)<=(skoMC1 skoMC1 skoMC1 (-1))]/\[[(skoSC1 ((skoMC1 skoMC1 skoMC1 skoMC1 (-3))+(skoSC1 ((skoMC1 skoMC1 skoMC1 (1+(skoMC1 (3))))+(skoSC1 ((skoMC1 skoMC1 skoMC1 skoMC1)+(skoSC1 skoMC1 skoMC1 skoMC1 (-1/12))))))))<=(skoMC1 skoMC1 skoMC1 (2+(skoMC1 (5))))]/\[[0<(skoMC1 skoMC1 skoMC1 (2))]/\[[(skoMC1 skoMC1 skoMC1 (-2))<=0]/\[[0<(skoMC1 skoMC1 skoMC1 (2))]/\[[skoSC1<=5/4]/\[[2<=skoMC1]/\[[0<=skoSC1]/\[[0<skoMC1]/\[[0<=skoMC1]/\[[(skoMC1 (-1))<(skoSC1 skoMC1)]/\[(skoSC1 skoMC1 (-1))<=skoMC1]]]]]]]]]]]].

% In SMTLib2 format:
(declare-fun skoMC1 () Real) (declare-fun skoSC1 () Real) (assert (and (<= (* skoSC1 (* skoMC1 (* skoMC1 skoMC1))) (* skoMC1 (* skoMC1 (* skoMC1 (- 1.))))) (and (<= (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (* skoMC1 (- 3.))))) (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (+ 1. (* skoMC1 3.))))) (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 skoMC1))) (* skoSC1 (* skoMC1 (* skoMC1 (* skoMC1 (/ (- 1.) 12.))))))))))) (* skoMC1 (* skoMC1 (* skoMC1 (+ 2. (* skoMC1 5.)))))) (and (> (* skoMC1 (* skoMC1 (* skoMC1 2.))) 0.) (and (<= (* skoMC1 (* skoMC1 (* skoMC1 (- 2.)))) 0.) (and (> (* skoMC1 (* skoMC1 (* skoMC1 2.))) 0.) (and (<= skoSC1 (/ 5. 4.)) (and (<= 2. skoMC1) (and (<= 0. skoSC1) (and (> skoMC1 0.) (and (<= 0. skoMC1) (and (> (* skoSC1 skoMC1) (* skoMC1 (- 1.))) (<= (* skoSC1 (* skoMC1 (- 1.))) skoMC1)))))))))))))

% In GRF format:
(sequent " MetiTarski formula " (antecedent (<= (* skoSC1 (* skoMC1 (* skoMC1 skoMC1))) (* skoMC1 (* skoMC1 (* skoMC1 (- 1.))))) (<= (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (* skoMC1 (- 3.))))) (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (+ 1. (* skoMC1 3.))))) (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 skoMC1))) (* skoSC1 (* skoMC1 (* skoMC1 (* skoMC1 (/ (- 1.) 12.))))))))))) (* skoMC1 (* skoMC1 (* skoMC1 (+ 2. (* skoMC1 5.)))))) (> (* skoMC1 (* skoMC1 (* skoMC1 2.))) 0.) (<= (* skoMC1 (* skoMC1 (* skoMC1 (- 2.)))) 0.) (> (* skoMC1 (* skoMC1 (* skoMC1 2.))) 0.) (<= skoSC1 (/ 5. 4.)) (<= 2. skoMC1) (<= 0. skoSC1) (> skoMC1 0.) (<= 0. skoMC1) (> (* skoSC1 skoMC1) (* skoMC1 (- 1.)))) (succedent (> (* skoSC1 (* skoMC1 (- 1.))) skoMC1)))
-----[end problem]-----

-----[begin problem]-----
% In Mathematica format:
Timing[Resolve[Exists[{skoMC1,skoSC1}, And[skoSC1*skoMC1*skoMC1*skoMC1*-1<=skoMC1*skoMC1*skoMC1,skoSC1*skoMC1*skoMC1*skoMC1>skoMC1*skoMC1*skoMC1*-1,skoSC1*skoMC1*skoMC1*skoMC1>skoMC1*skoMC1*skoMC1*-1,skoMC1*skoMC1*skoMC1*-2<=0,skoMC1*skoMC1*skoMC1*2>0,skoSC1<=(5/4),2<=skoMC1,0<=skoSC1,skoMC1>0,0<=skoMC1,skoSC1*skoMC1>skoMC1*-1,skoSC1*skoMC1*-1<=skoMC1]], Reals]]

% In QepcadB format:
(E skoMC1) (E skoSC1) [[(skoSC1 skoMC1 skoMC1 skoMC1 (-1))<=(skoMC1 skoMC1 skoMC1)]/\[[(skoMC1 skoMC1 skoMC1 (-1))<(skoSC1 skoMC1 skoMC1 skoMC1)]/\[[(skoMC1 skoMC1 skoMC1 (-1))<(skoSC1 skoMC1 skoMC1 skoMC1)]/\[[(skoMC1 skoMC1 skoMC1 (-2))<=0]/\[[0<(skoMC1 skoMC1 skoMC1 (2))]/\[[skoSC1<=5/4]/\[[2<=skoMC1]/\[[0<=skoSC1]/\[[0<skoMC1]/\[[0<=skoMC1]/\[[(skoMC1 (-1))<(skoSC1 skoMC1)]/\[(skoSC1 skoMC1 (-1))<=skoMC1]]]]]]]]]]]].

% In SMTLib2 format:
(declare-fun skoMC1 () Real) (declare-fun skoSC1 () Real) (assert (and (<= (* skoSC1 (* skoMC1 (* skoMC1 (* skoMC1 (- 1.))))) (* skoMC1 (* skoMC1 skoMC1))) (and (> (* skoSC1 (* skoMC1 (* skoMC1 skoMC1))) (* skoMC1 (* skoMC1 (* skoMC1 (- 1.))))) (and (> (* skoSC1 (* skoMC1 (* skoMC1 skoMC1))) (* skoMC1 (* skoMC1 (* skoMC1 (- 1.))))) (and (<= (* skoMC1 (* skoMC1 (* skoMC1 (- 2.)))) 0.) (and (> (* skoMC1 (* skoMC1 (* skoMC1 2.))) 0.) (and (<= skoSC1 (/ 5. 4.)) (and (<= 2. skoMC1) (and (<= 0. skoSC1) (and (> skoMC1 0.) (and (<= 0. skoMC1) (and (> (* skoSC1 skoMC1) (* skoMC1 (- 1.))) (<= (* skoSC1 (* skoMC1 (- 1.))) skoMC1)))))))))))))

% In GRF format:
(sequent " MetiTarski formula " (antecedent (<= (* skoSC1 (* skoMC1 (* skoMC1 (* skoMC1 (- 1.))))) (* skoMC1 (* skoMC1 skoMC1))) (> (* skoSC1 (* skoMC1 (* skoMC1 skoMC1))) (* skoMC1 (* skoMC1 (* skoMC1 (- 1.))))) (> (* skoSC1 (* skoMC1 (* skoMC1 skoMC1))) (* skoMC1 (* skoMC1 (* skoMC1 (- 1.))))) (<= (* skoMC1 (* skoMC1 (* skoMC1 (- 2.)))) 0.) (> (* skoMC1 (* skoMC1 (* skoMC1 2.))) 0.) (<= skoSC1 (/ 5. 4.)) (<= 2. skoMC1) (<= 0. skoSC1) (> skoMC1 0.) (<= 0. skoMC1) (> (* skoSC1 skoMC1) (* skoMC1 (- 1.)))) (succedent (> (* skoSC1 (* skoMC1 (- 1.))) skoMC1)))
-----[end problem]-----

-----[begin problem]-----
% In Mathematica format:
Timing[Resolve[Exists[{skoMC1,skoSC1}, And[skoSC1*skoMC1*skoMC1*skoMC1*-1<=skoMC1*skoMC1*skoMC1,skoMC1*skoMC1*skoMC1*2>0,skoSC1*skoMC1*skoMC1*skoMC1>skoMC1*skoMC1*skoMC1*-1,skoMC1*skoMC1*skoMC1*-2<=0,skoMC1*skoMC1*skoMC1*2>0,skoSC1<=(5/4),2<=skoMC1,0<=skoSC1,skoMC1>0,0<=skoMC1,skoSC1*skoMC1>skoMC1*-1,skoSC1*skoMC1*-1<=skoMC1]], Reals]]

% In QepcadB format:
(E skoMC1) (E skoSC1) [[(skoSC1 skoMC1 skoMC1 skoMC1 (-1))<=(skoMC1 skoMC1 skoMC1)]/\[[0<(skoMC1 skoMC1 skoMC1 (2))]/\[[(skoMC1 skoMC1 skoMC1 (-1))<(skoSC1 skoMC1 skoMC1 skoMC1)]/\[[(skoMC1 skoMC1 skoMC1 (-2))<=0]/\[[0<(skoMC1 skoMC1 skoMC1 (2))]/\[[skoSC1<=5/4]/\[[2<=skoMC1]/\[[0<=skoSC1]/\[[0<skoMC1]/\[[0<=skoMC1]/\[[(skoMC1 (-1))<(skoSC1 skoMC1)]/\[(skoSC1 skoMC1 (-1))<=skoMC1]]]]]]]]]]]].

% In SMTLib2 format:
(declare-fun skoMC1 () Real) (declare-fun skoSC1 () Real) (assert (and (<= (* skoSC1 (* skoMC1 (* skoMC1 (* skoMC1 (- 1.))))) (* skoMC1 (* skoMC1 skoMC1))) (and (> (* skoMC1 (* skoMC1 (* skoMC1 2.))) 0.) (and (> (* skoSC1 (* skoMC1 (* skoMC1 skoMC1))) (* skoMC1 (* skoMC1 (* skoMC1 (- 1.))))) (and (<= (* skoMC1 (* skoMC1 (* skoMC1 (- 2.)))) 0.) (and (> (* skoMC1 (* skoMC1 (* skoMC1 2.))) 0.) (and (<= skoSC1 (/ 5. 4.)) (and (<= 2. skoMC1) (and (<= 0. skoSC1) (and (> skoMC1 0.) (and (<= 0. skoMC1) (and (> (* skoSC1 skoMC1) (* skoMC1 (- 1.))) (<= (* skoSC1 (* skoMC1 (- 1.))) skoMC1)))))))))))))

% In GRF format:
(sequent " MetiTarski formula " (antecedent (<= (* skoSC1 (* skoMC1 (* skoMC1 (* skoMC1 (- 1.))))) (* skoMC1 (* skoMC1 skoMC1))) (> (* skoMC1 (* skoMC1 (* skoMC1 2.))) 0.) (> (* skoSC1 (* skoMC1 (* skoMC1 skoMC1))) (* skoMC1 (* skoMC1 (* skoMC1 (- 1.))))) (<= (* skoMC1 (* skoMC1 (* skoMC1 (- 2.)))) 0.) (> (* skoMC1 (* skoMC1 (* skoMC1 2.))) 0.) (<= skoSC1 (/ 5. 4.)) (<= 2. skoMC1) (<= 0. skoSC1) (> skoMC1 0.) (<= 0. skoMC1) (> (* skoSC1 skoMC1) (* skoMC1 (- 1.)))) (succedent (> (* skoSC1 (* skoMC1 (- 1.))) skoMC1)))
-----[end problem]-----

-----[begin problem]-----
% In Mathematica format:
Timing[Resolve[Exists[{skoMC1,skoSC1}, And[skoMC1*skoMC1*skoMC1*-2<=0,skoSC1*skoMC1*skoMC1*skoMC1>skoMC1*skoMC1*skoMC1*-1,skoMC1*skoMC1*skoMC1*-2<=0,skoMC1*skoMC1*skoMC1*2>0,skoSC1<=(5/4),2<=skoMC1,0<=skoSC1,skoMC1>0,0<=skoMC1,skoSC1*skoMC1>skoMC1*-1,skoSC1*skoMC1*-1<=skoMC1]], Reals]]

% In QepcadB format:
(E skoMC1) (E skoSC1) [[(skoMC1 skoMC1 skoMC1 (-2))<=0]/\[[(skoMC1 skoMC1 skoMC1 (-1))<(skoSC1 skoMC1 skoMC1 skoMC1)]/\[[(skoMC1 skoMC1 skoMC1 (-2))<=0]/\[[0<(skoMC1 skoMC1 skoMC1 (2))]/\[[skoSC1<=5/4]/\[[2<=skoMC1]/\[[0<=skoSC1]/\[[0<skoMC1]/\[[0<=skoMC1]/\[[(skoMC1 (-1))<(skoSC1 skoMC1)]/\[(skoSC1 skoMC1 (-1))<=skoMC1]]]]]]]]]]].

% In SMTLib2 format:
(declare-fun skoMC1 () Real) (declare-fun skoSC1 () Real) (assert (and (<= (* skoMC1 (* skoMC1 (* skoMC1 (- 2.)))) 0.) (and (> (* skoSC1 (* skoMC1 (* skoMC1 skoMC1))) (* skoMC1 (* skoMC1 (* skoMC1 (- 1.))))) (and (<= (* skoMC1 (* skoMC1 (* skoMC1 (- 2.)))) 0.) (and (> (* skoMC1 (* skoMC1 (* skoMC1 2.))) 0.) (and (<= skoSC1 (/ 5. 4.)) (and (<= 2. skoMC1) (and (<= 0. skoSC1) (and (> skoMC1 0.) (and (<= 0. skoMC1) (and (> (* skoSC1 skoMC1) (* skoMC1 (- 1.))) (<= (* skoSC1 (* skoMC1 (- 1.))) skoMC1))))))))))))

% In GRF format:
(sequent " MetiTarski formula " (antecedent (<= (* skoMC1 (* skoMC1 (* skoMC1 (- 2.)))) 0.) (> (* skoSC1 (* skoMC1 (* skoMC1 skoMC1))) (* skoMC1 (* skoMC1 (* skoMC1 (- 1.))))) (<= (* skoMC1 (* skoMC1 (* skoMC1 (- 2.)))) 0.) (> (* skoMC1 (* skoMC1 (* skoMC1 2.))) 0.) (<= skoSC1 (/ 5. 4.)) (<= 2. skoMC1) (<= 0. skoSC1) (> skoMC1 0.) (<= 0. skoMC1) (> (* skoSC1 skoMC1) (* skoMC1 (- 1.)))) (succedent (> (* skoSC1 (* skoMC1 (- 1.))) skoMC1)))
-----[end problem]-----

-----[begin problem]-----
% In Mathematica format:
Timing[Resolve[Exists[{skoMC1,skoSC1}, And[skoSC1*skoMC1*skoMC1*skoMC1*-1<=skoMC1*skoMC1*skoMC1,skoSC1*skoMC1*skoMC1*skoMC1>skoMC1*skoMC1*skoMC1*-1,skoMC1*skoMC1*skoMC1*-2<=0,skoMC1*skoMC1*skoMC1*2>0,skoSC1<=(5/4),2<=skoMC1,0<=skoSC1,skoMC1>0,0<=skoMC1,skoSC1*skoMC1>skoMC1*-1,skoSC1*skoMC1*-1<=skoMC1]], Reals]]

% In QepcadB format:
(E skoMC1) (E skoSC1) [[(skoSC1 skoMC1 skoMC1 skoMC1 (-1))<=(skoMC1 skoMC1 skoMC1)]/\[[(skoMC1 skoMC1 skoMC1 (-1))<(skoSC1 skoMC1 skoMC1 skoMC1)]/\[[(skoMC1 skoMC1 skoMC1 (-2))<=0]/\[[0<(skoMC1 skoMC1 skoMC1 (2))]/\[[skoSC1<=5/4]/\[[2<=skoMC1]/\[[0<=skoSC1]/\[[0<skoMC1]/\[[0<=skoMC1]/\[[(skoMC1 (-1))<(skoSC1 skoMC1)]/\[(skoSC1 skoMC1 (-1))<=skoMC1]]]]]]]]]]].

% In SMTLib2 format:
(declare-fun skoMC1 () Real) (declare-fun skoSC1 () Real) (assert (and (<= (* skoSC1 (* skoMC1 (* skoMC1 (* skoMC1 (- 1.))))) (* skoMC1 (* skoMC1 skoMC1))) (and (> (* skoSC1 (* skoMC1 (* skoMC1 skoMC1))) (* skoMC1 (* skoMC1 (* skoMC1 (- 1.))))) (and (<= (* skoMC1 (* skoMC1 (* skoMC1 (- 2.)))) 0.) (and (> (* skoMC1 (* skoMC1 (* skoMC1 2.))) 0.) (and (<= skoSC1 (/ 5. 4.)) (and (<= 2. skoMC1) (and (<= 0. skoSC1) (and (> skoMC1 0.) (and (<= 0. skoMC1) (and (> (* skoSC1 skoMC1) (* skoMC1 (- 1.))) (<= (* skoSC1 (* skoMC1 (- 1.))) skoMC1))))))))))))

% In GRF format:
(sequent " MetiTarski formula " (antecedent (<= (* skoSC1 (* skoMC1 (* skoMC1 (* skoMC1 (- 1.))))) (* skoMC1 (* skoMC1 skoMC1))) (> (* skoSC1 (* skoMC1 (* skoMC1 skoMC1))) (* skoMC1 (* skoMC1 (* skoMC1 (- 1.))))) (<= (* skoMC1 (* skoMC1 (* skoMC1 (- 2.)))) 0.) (> (* skoMC1 (* skoMC1 (* skoMC1 2.))) 0.) (<= skoSC1 (/ 5. 4.)) (<= 2. skoMC1) (<= 0. skoSC1) (> skoMC1 0.) (<= 0. skoMC1) (> (* skoSC1 skoMC1) (* skoMC1 (- 1.)))) (succedent (> (* skoSC1 (* skoMC1 (- 1.))) skoMC1)))
-----[end problem]-----

-----[begin problem]-----
% In Mathematica format:
Timing[Resolve[Exists[{skoMC1,skoSC1}, And[skoMC1*skoMC1*-1<=0,skoSC1*skoMC1*-1<=skoMC1,skoSC1*skoMC1>skoMC1*-1,0<=skoMC1,skoMC1>0,0<=skoSC1,2<=skoMC1,skoSC1<=(5/4),skoMC1*skoMC1*skoMC1*2>0,skoMC1*skoMC1*skoMC1*-2<=0,skoSC1*skoMC1*skoMC1*skoMC1>skoMC1*skoMC1*skoMC1*-1,skoSC1*skoMC1*skoMC1*skoMC1*-1<=skoMC1*skoMC1*skoMC1]], Reals]]

% In QepcadB format:
(E skoMC1) (E skoSC1) [[(skoMC1 skoMC1 (-1))<=0]/\[[(skoSC1 skoMC1 (-1))<=skoMC1]/\[[(skoMC1 (-1))<(skoSC1 skoMC1)]/\[[0<=skoMC1]/\[[0<skoMC1]/\[[0<=skoSC1]/\[[2<=skoMC1]/\[[skoSC1<=5/4]/\[[0<(skoMC1 skoMC1 skoMC1 (2))]/\[[(skoMC1 skoMC1 skoMC1 (-2))<=0]/\[[(skoMC1 skoMC1 skoMC1 (-1))<(skoSC1 skoMC1 skoMC1 skoMC1)]/\[(skoSC1 skoMC1 skoMC1 skoMC1 (-1))<=(skoMC1 skoMC1 skoMC1)]]]]]]]]]]]].

% In SMTLib2 format:
(declare-fun skoMC1 () Real) (declare-fun skoSC1 () Real) (assert (and (<= (* skoMC1 (* skoMC1 (- 1.))) 0.) (and (<= (* skoSC1 (* skoMC1 (- 1.))) skoMC1) (and (> (* skoSC1 skoMC1) (* skoMC1 (- 1.))) (and (<= 0. skoMC1) (and (> skoMC1 0.) (and (<= 0. skoSC1) (and (<= 2. skoMC1) (and (<= skoSC1 (/ 5. 4.)) (and (> (* skoMC1 (* skoMC1 (* skoMC1 2.))) 0.) (and (<= (* skoMC1 (* skoMC1 (* skoMC1 (- 2.)))) 0.) (and (> (* skoSC1 (* skoMC1 (* skoMC1 skoMC1))) (* skoMC1 (* skoMC1 (* skoMC1 (- 1.))))) (<= (* skoSC1 (* skoMC1 (* skoMC1 (* skoMC1 (- 1.))))) (* skoMC1 (* skoMC1 skoMC1)))))))))))))))

% In GRF format:
(sequent " MetiTarski formula " (antecedent (<= (* skoMC1 (* skoMC1 (- 1.))) 0.) (<= (* skoSC1 (* skoMC1 (- 1.))) skoMC1) (> (* skoSC1 skoMC1) (* skoMC1 (- 1.))) (<= 0. skoMC1) (> skoMC1 0.) (<= 0. skoSC1) (<= 2. skoMC1) (<= skoSC1 (/ 5. 4.)) (> (* skoMC1 (* skoMC1 (* skoMC1 2.))) 0.) (<= (* skoMC1 (* skoMC1 (* skoMC1 (- 2.)))) 0.) (> (* skoSC1 (* skoMC1 (* skoMC1 skoMC1))) (* skoMC1 (* skoMC1 (* skoMC1 (- 1.)))))) (succedent (> (* skoSC1 (* skoMC1 (* skoMC1 (* skoMC1 (- 1.))))) (* skoMC1 (* skoMC1 skoMC1)))))
-----[end problem]-----

-----[begin problem]-----
% In Mathematica format:
Timing[Resolve[Exists[{skoMC1,skoSC1}, And[skoSC1*(skoMC1*skoMC1*skoMC1*-1+skoSC1*skoMC1*skoMC1*skoMC1*-1)<=0,skoSC1*skoMC1*skoMC1*skoMC1*-1<=skoMC1*skoMC1*skoMC1,skoSC1*skoMC1*skoMC1*skoMC1>skoMC1*skoMC1*skoMC1*-1,skoMC1*skoMC1*skoMC1*-2<=0,skoMC1*skoMC1*skoMC1*2>0,skoSC1<=(5/4),2<=skoMC1,0<=skoSC1,skoMC1>0,0<=skoMC1,skoSC1*skoMC1>skoMC1*-1,skoSC1*skoMC1*-1<=skoMC1]], Reals]]

% In QepcadB format:
(E skoMC1) (E skoSC1) [[(skoSC1 ((skoMC1 skoMC1 skoMC1 (-1))+(skoSC1 skoMC1 skoMC1 skoMC1 (-1))))<=0]/\[[(skoSC1 skoMC1 skoMC1 skoMC1 (-1))<=(skoMC1 skoMC1 skoMC1)]/\[[(skoMC1 skoMC1 skoMC1 (-1))<(skoSC1 skoMC1 skoMC1 skoMC1)]/\[[(skoMC1 skoMC1 skoMC1 (-2))<=0]/\[[0<(skoMC1 skoMC1 skoMC1 (2))]/\[[skoSC1<=5/4]/\[[2<=skoMC1]/\[[0<=skoSC1]/\[[0<skoMC1]/\[[0<=skoMC1]/\[[(skoMC1 (-1))<(skoSC1 skoMC1)]/\[(skoSC1 skoMC1 (-1))<=skoMC1]]]]]]]]]]]].

% In SMTLib2 format:
(declare-fun skoMC1 () Real) (declare-fun skoSC1 () Real) (assert (and (<= (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (- 1.)))) (* skoSC1 (* skoMC1 (* skoMC1 (* skoMC1 (- 1.))))))) 0.) (and (<= (* skoSC1 (* skoMC1 (* skoMC1 (* skoMC1 (- 1.))))) (* skoMC1 (* skoMC1 skoMC1))) (and (> (* skoSC1 (* skoMC1 (* skoMC1 skoMC1))) (* skoMC1 (* skoMC1 (* skoMC1 (- 1.))))) (and (<= (* skoMC1 (* skoMC1 (* skoMC1 (- 2.)))) 0.) (and (> (* skoMC1 (* skoMC1 (* skoMC1 2.))) 0.) (and (<= skoSC1 (/ 5. 4.)) (and (<= 2. skoMC1) (and (<= 0. skoSC1) (and (> skoMC1 0.) (and (<= 0. skoMC1) (and (> (* skoSC1 skoMC1) (* skoMC1 (- 1.))) (<= (* skoSC1 (* skoMC1 (- 1.))) skoMC1)))))))))))))

% In GRF format:
(sequent " MetiTarski formula " (antecedent (<= (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (- 1.)))) (* skoSC1 (* skoMC1 (* skoMC1 (* skoMC1 (- 1.))))))) 0.) (<= (* skoSC1 (* skoMC1 (* skoMC1 (* skoMC1 (- 1.))))) (* skoMC1 (* skoMC1 skoMC1))) (> (* skoSC1 (* skoMC1 (* skoMC1 skoMC1))) (* skoMC1 (* skoMC1 (* skoMC1 (- 1.))))) (<= (* skoMC1 (* skoMC1 (* skoMC1 (- 2.)))) 0.) (> (* skoMC1 (* skoMC1 (* skoMC1 2.))) 0.) (<= skoSC1 (/ 5. 4.)) (<= 2. skoMC1) (<= 0. skoSC1) (> skoMC1 0.) (<= 0. skoMC1) (> (* skoSC1 skoMC1) (* skoMC1 (- 1.)))) (succedent (> (* skoSC1 (* skoMC1 (- 1.))) skoMC1)))
-----[end problem]-----

-----[begin problem]-----
% In Mathematica format:
Timing[Resolve[Exists[{skoMC1,skoSC1}, And[skoSC1*(skoMC1*skoMC1*skoMC1+skoSC1*skoMC1*skoMC1*skoMC1)<=0,skoSC1*skoMC1*skoMC1*skoMC1*-1<=skoMC1*skoMC1*skoMC1,skoSC1*skoMC1*skoMC1*skoMC1>skoMC1*skoMC1*skoMC1*-1,skoMC1*skoMC1*skoMC1*-2<=0,skoMC1*skoMC1*skoMC1*2>0,skoSC1<=(5/4),2<=skoMC1,0<=skoSC1,skoMC1>0,0<=skoMC1,skoSC1*skoMC1>skoMC1*-1,skoSC1*skoMC1*-1<=skoMC1]], Reals]]

% In QepcadB format:
(E skoMC1) (E skoSC1) [[(skoSC1 ((skoMC1 skoMC1 skoMC1)+(skoSC1 skoMC1 skoMC1 skoMC1)))<=0]/\[[(skoSC1 skoMC1 skoMC1 skoMC1 (-1))<=(skoMC1 skoMC1 skoMC1)]/\[[(skoMC1 skoMC1 skoMC1 (-1))<(skoSC1 skoMC1 skoMC1 skoMC1)]/\[[(skoMC1 skoMC1 skoMC1 (-2))<=0]/\[[0<(skoMC1 skoMC1 skoMC1 (2))]/\[[skoSC1<=5/4]/\[[2<=skoMC1]/\[[0<=skoSC1]/\[[0<skoMC1]/\[[0<=skoMC1]/\[[(skoMC1 (-1))<(skoSC1 skoMC1)]/\[(skoSC1 skoMC1 (-1))<=skoMC1]]]]]]]]]]]].

% In SMTLib2 format:
(declare-fun skoMC1 () Real) (declare-fun skoSC1 () Real) (assert (and (<= (* skoSC1 (+ (* skoMC1 (* skoMC1 skoMC1)) (* skoSC1 (* skoMC1 (* skoMC1 skoMC1))))) 0.) (and (<= (* skoSC1 (* skoMC1 (* skoMC1 (* skoMC1 (- 1.))))) (* skoMC1 (* skoMC1 skoMC1))) (and (> (* skoSC1 (* skoMC1 (* skoMC1 skoMC1))) (* skoMC1 (* skoMC1 (* skoMC1 (- 1.))))) (and (<= (* skoMC1 (* skoMC1 (* skoMC1 (- 2.)))) 0.) (and (> (* skoMC1 (* skoMC1 (* skoMC1 2.))) 0.) (and (<= skoSC1 (/ 5. 4.)) (and (<= 2. skoMC1) (and (<= 0. skoSC1) (and (> skoMC1 0.) (and (<= 0. skoMC1) (and (> (* skoSC1 skoMC1) (* skoMC1 (- 1.))) (<= (* skoSC1 (* skoMC1 (- 1.))) skoMC1)))))))))))))

% In GRF format:
(sequent " MetiTarski formula " (antecedent (<= (* skoSC1 (+ (* skoMC1 (* skoMC1 skoMC1)) (* skoSC1 (* skoMC1 (* skoMC1 skoMC1))))) 0.) (<= (* skoSC1 (* skoMC1 (* skoMC1 (* skoMC1 (- 1.))))) (* skoMC1 (* skoMC1 skoMC1))) (> (* skoSC1 (* skoMC1 (* skoMC1 skoMC1))) (* skoMC1 (* skoMC1 (* skoMC1 (- 1.))))) (<= (* skoMC1 (* skoMC1 (* skoMC1 (- 2.)))) 0.) (> (* skoMC1 (* skoMC1 (* skoMC1 2.))) 0.) (<= skoSC1 (/ 5. 4.)) (<= 2. skoMC1) (<= 0. skoSC1) (> skoMC1 0.) (<= 0. skoMC1) (> (* skoSC1 skoMC1) (* skoMC1 (- 1.)))) (succedent (> (* skoSC1 (* skoMC1 (- 1.))) skoMC1)))
-----[end problem]-----

-----[begin problem]-----
% In Mathematica format:
Timing[Resolve[Exists[{skoMC1,skoSC1}, And[skoSC1*(skoMC1*skoMC1*skoMC1+skoSC1*skoMC1*skoMC1*skoMC1)<=0,skoSC1*(skoMC1*skoMC1*skoMC1*-1+skoSC1*skoMC1*skoMC1*skoMC1*-1)>0,skoSC1*skoMC1*skoMC1*skoMC1*-1<=skoMC1*skoMC1*skoMC1,skoSC1*skoMC1*skoMC1*skoMC1>skoMC1*skoMC1*skoMC1*-1,skoMC1*skoMC1*skoMC1*-2<=0,skoMC1*skoMC1*skoMC1*2>0,skoSC1<=(5/4),2<=skoMC1,0<=skoSC1,skoMC1>0,0<=skoMC1,skoSC1*skoMC1>skoMC1*-1,skoSC1*skoMC1*-1<=skoMC1]], Reals]]

% In QepcadB format:
(E skoMC1) (E skoSC1) [[(skoSC1 ((skoMC1 skoMC1 skoMC1)+(skoSC1 skoMC1 skoMC1 skoMC1)))<=0]/\[[0<(skoSC1 ((skoMC1 skoMC1 skoMC1 (-1))+(skoSC1 skoMC1 skoMC1 skoMC1 (-1))))]/\[[(skoSC1 skoMC1 skoMC1 skoMC1 (-1))<=(skoMC1 skoMC1 skoMC1)]/\[[(skoMC1 skoMC1 skoMC1 (-1))<(skoSC1 skoMC1 skoMC1 skoMC1)]/\[[(skoMC1 skoMC1 skoMC1 (-2))<=0]/\[[0<(skoMC1 skoMC1 skoMC1 (2))]/\[[skoSC1<=5/4]/\[[2<=skoMC1]/\[[0<=skoSC1]/\[[0<skoMC1]/\[[0<=skoMC1]/\[[(skoMC1 (-1))<(skoSC1 skoMC1)]/\[(skoSC1 skoMC1 (-1))<=skoMC1]]]]]]]]]]]]].

% In SMTLib2 format:
(declare-fun skoMC1 () Real) (declare-fun skoSC1 () Real) (assert (and (<= (* skoSC1 (+ (* skoMC1 (* skoMC1 skoMC1)) (* skoSC1 (* skoMC1 (* skoMC1 skoMC1))))) 0.) (and (> (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (- 1.)))) (* skoSC1 (* skoMC1 (* skoMC1 (* skoMC1 (- 1.))))))) 0.) (and (<= (* skoSC1 (* skoMC1 (* skoMC1 (* skoMC1 (- 1.))))) (* skoMC1 (* skoMC1 skoMC1))) (and (> (* skoSC1 (* skoMC1 (* skoMC1 skoMC1))) (* skoMC1 (* skoMC1 (* skoMC1 (- 1.))))) (and (<= (* skoMC1 (* skoMC1 (* skoMC1 (- 2.)))) 0.) (and (> (* skoMC1 (* skoMC1 (* skoMC1 2.))) 0.) (and (<= skoSC1 (/ 5. 4.)) (and (<= 2. skoMC1) (and (<= 0. skoSC1) (and (> skoMC1 0.) (and (<= 0. skoMC1) (and (> (* skoSC1 skoMC1) (* skoMC1 (- 1.))) (<= (* skoSC1 (* skoMC1 (- 1.))) skoMC1))))))))))))))

% In GRF format:
(sequent " MetiTarski formula " (antecedent (<= (* skoSC1 (+ (* skoMC1 (* skoMC1 skoMC1)) (* skoSC1 (* skoMC1 (* skoMC1 skoMC1))))) 0.) (> (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (- 1.)))) (* skoSC1 (* skoMC1 (* skoMC1 (* skoMC1 (- 1.))))))) 0.) (<= (* skoSC1 (* skoMC1 (* skoMC1 (* skoMC1 (- 1.))))) (* skoMC1 (* skoMC1 skoMC1))) (> (* skoSC1 (* skoMC1 (* skoMC1 skoMC1))) (* skoMC1 (* skoMC1 (* skoMC1 (- 1.))))) (<= (* skoMC1 (* skoMC1 (* skoMC1 (- 2.)))) 0.) (> (* skoMC1 (* skoMC1 (* skoMC1 2.))) 0.) (<= skoSC1 (/ 5. 4.)) (<= 2. skoMC1) (<= 0. skoSC1) (> skoMC1 0.) (<= 0. skoMC1) (> (* skoSC1 skoMC1) (* skoMC1 (- 1.)))) (succedent (> (* skoSC1 (* skoMC1 (- 1.))) skoMC1)))
-----[end problem]-----

-----[begin problem]-----
% In Mathematica format:
Timing[Resolve[Exists[{skoMC1,skoSC1}, And[skoSC1*(skoMC1*skoMC1*skoMC1+skoSC1*skoMC1*skoMC1*skoMC1)>0,skoSC1*skoMC1*skoMC1*skoMC1*-1<=skoMC1*skoMC1*skoMC1,skoSC1*skoMC1*skoMC1*skoMC1>skoMC1*skoMC1*skoMC1*-1,skoMC1*skoMC1*skoMC1*-2<=0,skoMC1*skoMC1*skoMC1*2>0,skoSC1<=(5/4),2<=skoMC1,0<=skoSC1,skoMC1>0,0<=skoMC1,skoSC1*skoMC1>skoMC1*-1,skoSC1*skoMC1*-1<=skoMC1]], Reals]]

% In QepcadB format:
(E skoMC1) (E skoSC1) [[0<(skoSC1 ((skoMC1 skoMC1 skoMC1)+(skoSC1 skoMC1 skoMC1 skoMC1)))]/\[[(skoSC1 skoMC1 skoMC1 skoMC1 (-1))<=(skoMC1 skoMC1 skoMC1)]/\[[(skoMC1 skoMC1 skoMC1 (-1))<(skoSC1 skoMC1 skoMC1 skoMC1)]/\[[(skoMC1 skoMC1 skoMC1 (-2))<=0]/\[[0<(skoMC1 skoMC1 skoMC1 (2))]/\[[skoSC1<=5/4]/\[[2<=skoMC1]/\[[0<=skoSC1]/\[[0<skoMC1]/\[[0<=skoMC1]/\[[(skoMC1 (-1))<(skoSC1 skoMC1)]/\[(skoSC1 skoMC1 (-1))<=skoMC1]]]]]]]]]]]].

% In SMTLib2 format:
(declare-fun skoMC1 () Real) (declare-fun skoSC1 () Real) (assert (and (> (* skoSC1 (+ (* skoMC1 (* skoMC1 skoMC1)) (* skoSC1 (* skoMC1 (* skoMC1 skoMC1))))) 0.) (and (<= (* skoSC1 (* skoMC1 (* skoMC1 (* skoMC1 (- 1.))))) (* skoMC1 (* skoMC1 skoMC1))) (and (> (* skoSC1 (* skoMC1 (* skoMC1 skoMC1))) (* skoMC1 (* skoMC1 (* skoMC1 (- 1.))))) (and (<= (* skoMC1 (* skoMC1 (* skoMC1 (- 2.)))) 0.) (and (> (* skoMC1 (* skoMC1 (* skoMC1 2.))) 0.) (and (<= skoSC1 (/ 5. 4.)) (and (<= 2. skoMC1) (and (<= 0. skoSC1) (and (> skoMC1 0.) (and (<= 0. skoMC1) (and (> (* skoSC1 skoMC1) (* skoMC1 (- 1.))) (<= (* skoSC1 (* skoMC1 (- 1.))) skoMC1)))))))))))))

% In GRF format:
(sequent " MetiTarski formula " (antecedent (> (* skoSC1 (+ (* skoMC1 (* skoMC1 skoMC1)) (* skoSC1 (* skoMC1 (* skoMC1 skoMC1))))) 0.) (<= (* skoSC1 (* skoMC1 (* skoMC1 (* skoMC1 (- 1.))))) (* skoMC1 (* skoMC1 skoMC1))) (> (* skoSC1 (* skoMC1 (* skoMC1 skoMC1))) (* skoMC1 (* skoMC1 (* skoMC1 (- 1.))))) (<= (* skoMC1 (* skoMC1 (* skoMC1 (- 2.)))) 0.) (> (* skoMC1 (* skoMC1 (* skoMC1 2.))) 0.) (<= skoSC1 (/ 5. 4.)) (<= 2. skoMC1) (<= 0. skoSC1) (> skoMC1 0.) (<= 0. skoMC1) (> (* skoSC1 skoMC1) (* skoMC1 (- 1.)))) (succedent (> (* skoSC1 (* skoMC1 (- 1.))) skoMC1)))
-----[end problem]-----

-----[begin problem]-----
% In Mathematica format:
Timing[Resolve[Exists[{skoMC1,skoSC1}, And[skoSC1*(skoMC1*skoMC1*skoMC1*skoMC1*(-5+skoMC1*6)+skoSC1*(skoMC1*skoMC1*skoMC1*skoMC1*(-3+skoMC1*6)+skoSC1*(skoMC1*skoMC1*skoMC1*skoMC1*(3+skoMC1*2)+skoSC1*skoMC1*skoMC1*skoMC1*skoMC1)))<=skoMC1*skoMC1*skoMC1*skoMC1*skoMC1*-2,skoSC1*(skoMC1*skoMC1*skoMC1+skoSC1*skoMC1*skoMC1*skoMC1)<=0,skoSC1*skoMC1*skoMC1*skoMC1*-1<=skoMC1*skoMC1*skoMC1,skoSC1*skoMC1*skoMC1*skoMC1>skoMC1*skoMC1*skoMC1*-1,skoMC1*skoMC1*skoMC1*-2<=0,skoMC1*skoMC1*skoMC1*2>0,skoSC1<=(5/4),2<=skoMC1,0<=skoSC1,skoMC1>0,0<=skoMC1,skoSC1*skoMC1>skoMC1*-1,skoSC1*skoMC1*-1<=skoMC1]], Reals]]

% In QepcadB format:
(E skoMC1) (E skoSC1) [[(skoSC1 ((skoMC1 skoMC1 skoMC1 skoMC1 (-5+(skoMC1 (6))))+(skoSC1 ((skoMC1 skoMC1 skoMC1 skoMC1 (-3+(skoMC1 (6))))+(skoSC1 ((skoMC1 skoMC1 skoMC1 skoMC1 (3+(skoMC1 (2))))+(skoSC1 skoMC1 skoMC1 skoMC1 skoMC1)))))))<=(skoMC1 skoMC1 skoMC1 skoMC1 skoMC1 (-2))]/\[[(skoSC1 ((skoMC1 skoMC1 skoMC1)+(skoSC1 skoMC1 skoMC1 skoMC1)))<=0]/\[[(skoSC1 skoMC1 skoMC1 skoMC1 (-1))<=(skoMC1 skoMC1 skoMC1)]/\[[(skoMC1 skoMC1 skoMC1 (-1))<(skoSC1 skoMC1 skoMC1 skoMC1)]/\[[(skoMC1 skoMC1 skoMC1 (-2))<=0]/\[[0<(skoMC1 skoMC1 skoMC1 (2))]/\[[skoSC1<=5/4]/\[[2<=skoMC1]/\[[0<=skoSC1]/\[[0<skoMC1]/\[[0<=skoMC1]/\[[(skoMC1 (-1))<(skoSC1 skoMC1)]/\[(skoSC1 skoMC1 (-1))<=skoMC1]]]]]]]]]]]]].

% In SMTLib2 format:
(declare-fun skoMC1 () Real) (declare-fun skoSC1 () Real) (assert (and (<= (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (* skoMC1 (+ (- 5.) (* skoMC1 6.)))))) (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (* skoMC1 (+ (- 3.) (* skoMC1 6.)))))) (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (* skoMC1 (+ 3. (* skoMC1 2.)))))) (* skoSC1 (* skoMC1 (* skoMC1 (* skoMC1 skoMC1)))))))))) (* skoMC1 (* skoMC1 (* skoMC1 (* skoMC1 (* skoMC1 (- 2.))))))) (and (<= (* skoSC1 (+ (* skoMC1 (* skoMC1 skoMC1)) (* skoSC1 (* skoMC1 (* skoMC1 skoMC1))))) 0.) (and (<= (* skoSC1 (* skoMC1 (* skoMC1 (* skoMC1 (- 1.))))) (* skoMC1 (* skoMC1 skoMC1))) (and (> (* skoSC1 (* skoMC1 (* skoMC1 skoMC1))) (* skoMC1 (* skoMC1 (* skoMC1 (- 1.))))) (and (<= (* skoMC1 (* skoMC1 (* skoMC1 (- 2.)))) 0.) (and (> (* skoMC1 (* skoMC1 (* skoMC1 2.))) 0.) (and (<= skoSC1 (/ 5. 4.)) (and (<= 2. skoMC1) (and (<= 0. skoSC1) (and (> skoMC1 0.) (and (<= 0. skoMC1) (and (> (* skoSC1 skoMC1) (* skoMC1 (- 1.))) (<= (* skoSC1 (* skoMC1 (- 1.))) skoMC1))))))))))))))

% In GRF format:
(sequent " MetiTarski formula " (antecedent (<= (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (* skoMC1 (+ (- 5.) (* skoMC1 6.)))))) (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (* skoMC1 (+ (- 3.) (* skoMC1 6.)))))) (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (* skoMC1 (+ 3. (* skoMC1 2.)))))) (* skoSC1 (* skoMC1 (* skoMC1 (* skoMC1 skoMC1)))))))))) (* skoMC1 (* skoMC1 (* skoMC1 (* skoMC1 (* skoMC1 (- 2.))))))) (<= (* skoSC1 (+ (* skoMC1 (* skoMC1 skoMC1)) (* skoSC1 (* skoMC1 (* skoMC1 skoMC1))))) 0.) (<= (* skoSC1 (* skoMC1 (* skoMC1 (* skoMC1 (- 1.))))) (* skoMC1 (* skoMC1 skoMC1))) (> (* skoSC1 (* skoMC1 (* skoMC1 skoMC1))) (* skoMC1 (* skoMC1 (* skoMC1 (- 1.))))) (<= (* skoMC1 (* skoMC1 (* skoMC1 (- 2.)))) 0.) (> (* skoMC1 (* skoMC1 (* skoMC1 2.))) 0.) (<= skoSC1 (/ 5. 4.)) (<= 2. skoMC1) (<= 0. skoSC1) (> skoMC1 0.) (<= 0. skoMC1) (> (* skoSC1 skoMC1) (* skoMC1 (- 1.)))) (succedent (> (* skoSC1 (* skoMC1 (- 1.))) skoMC1)))
-----[end problem]-----

-----[begin problem]-----
% In Mathematica format:
Timing[Resolve[Exists[{skoMC1,skoSC1}, And[skoSC1*skoMC1*skoMC1*skoMC1*2<=skoMC1*skoMC1*skoMC1*-2,skoSC1*skoMC1*skoMC1*skoMC1*-1<=skoMC1*skoMC1*skoMC1,skoSC1*skoMC1*skoMC1*skoMC1>skoMC1*skoMC1*skoMC1*-1,skoMC1*skoMC1*skoMC1*-2<=0,skoMC1*skoMC1*skoMC1*2>0,skoSC1<=(5/4),2<=skoMC1,0<=skoSC1,skoMC1>0,0<=skoMC1,skoSC1*skoMC1>skoMC1*-1,skoSC1*skoMC1*-1<=skoMC1]], Reals]]

% In QepcadB format:
(E skoMC1) (E skoSC1) [[(skoSC1 skoMC1 skoMC1 skoMC1 (2))<=(skoMC1 skoMC1 skoMC1 (-2))]/\[[(skoSC1 skoMC1 skoMC1 skoMC1 (-1))<=(skoMC1 skoMC1 skoMC1)]/\[[(skoMC1 skoMC1 skoMC1 (-1))<(skoSC1 skoMC1 skoMC1 skoMC1)]/\[[(skoMC1 skoMC1 skoMC1 (-2))<=0]/\[[0<(skoMC1 skoMC1 skoMC1 (2))]/\[[skoSC1<=5/4]/\[[2<=skoMC1]/\[[0<=skoSC1]/\[[0<skoMC1]/\[[0<=skoMC1]/\[[(skoMC1 (-1))<(skoSC1 skoMC1)]/\[(skoSC1 skoMC1 (-1))<=skoMC1]]]]]]]]]]]].

% In SMTLib2 format:
(declare-fun skoMC1 () Real) (declare-fun skoSC1 () Real) (assert (and (<= (* skoSC1 (* skoMC1 (* skoMC1 (* skoMC1 2.)))) (* skoMC1 (* skoMC1 (* skoMC1 (- 2.))))) (and (<= (* skoSC1 (* skoMC1 (* skoMC1 (* skoMC1 (- 1.))))) (* skoMC1 (* skoMC1 skoMC1))) (and (> (* skoSC1 (* skoMC1 (* skoMC1 skoMC1))) (* skoMC1 (* skoMC1 (* skoMC1 (- 1.))))) (and (<= (* skoMC1 (* skoMC1 (* skoMC1 (- 2.)))) 0.) (and (> (* skoMC1 (* skoMC1 (* skoMC1 2.))) 0.) (and (<= skoSC1 (/ 5. 4.)) (and (<= 2. skoMC1) (and (<= 0. skoSC1) (and (> skoMC1 0.) (and (<= 0. skoMC1) (and (> (* skoSC1 skoMC1) (* skoMC1 (- 1.))) (<= (* skoSC1 (* skoMC1 (- 1.))) skoMC1)))))))))))))

% In GRF format:
(sequent " MetiTarski formula " (antecedent (<= (* skoSC1 (* skoMC1 (* skoMC1 (* skoMC1 2.)))) (* skoMC1 (* skoMC1 (* skoMC1 (- 2.))))) (<= (* skoSC1 (* skoMC1 (* skoMC1 (* skoMC1 (- 1.))))) (* skoMC1 (* skoMC1 skoMC1))) (> (* skoSC1 (* skoMC1 (* skoMC1 skoMC1))) (* skoMC1 (* skoMC1 (* skoMC1 (- 1.))))) (<= (* skoMC1 (* skoMC1 (* skoMC1 (- 2.)))) 0.) (> (* skoMC1 (* skoMC1 (* skoMC1 2.))) 0.) (<= skoSC1 (/ 5. 4.)) (<= 2. skoMC1) (<= 0. skoSC1) (> skoMC1 0.) (<= 0. skoMC1) (> (* skoSC1 skoMC1) (* skoMC1 (- 1.)))) (succedent (> (* skoSC1 (* skoMC1 (- 1.))) skoMC1)))
-----[end problem]-----

-----[begin problem]-----
% In Mathematica format:
Timing[Resolve[Exists[{skoMC1,skoSC1}, And[skoSC1*skoMC1*skoMC1*skoMC1*-2<=skoMC1*skoMC1*skoMC1*2,skoSC1*skoMC1*skoMC1*skoMC1*-1<=skoMC1*skoMC1*skoMC1,skoSC1*skoMC1*skoMC1*skoMC1>skoMC1*skoMC1*skoMC1*-1,skoMC1*skoMC1*skoMC1*-2<=0,skoMC1*skoMC1*skoMC1*2>0,skoSC1<=(5/4),2<=skoMC1,0<=skoSC1,skoMC1>0,0<=skoMC1,skoSC1*skoMC1>skoMC1*-1,skoSC1*skoMC1*-1<=skoMC1]], Reals]]

% In QepcadB format:
(E skoMC1) (E skoSC1) [[(skoSC1 skoMC1 skoMC1 skoMC1 (-2))<=(skoMC1 skoMC1 skoMC1 (2))]/\[[(skoSC1 skoMC1 skoMC1 skoMC1 (-1))<=(skoMC1 skoMC1 skoMC1)]/\[[(skoMC1 skoMC1 skoMC1 (-1))<(skoSC1 skoMC1 skoMC1 skoMC1)]/\[[(skoMC1 skoMC1 skoMC1 (-2))<=0]/\[[0<(skoMC1 skoMC1 skoMC1 (2))]/\[[skoSC1<=5/4]/\[[2<=skoMC1]/\[[0<=skoSC1]/\[[0<skoMC1]/\[[0<=skoMC1]/\[[(skoMC1 (-1))<(skoSC1 skoMC1)]/\[(skoSC1 skoMC1 (-1))<=skoMC1]]]]]]]]]]]].

% In SMTLib2 format:
(declare-fun skoMC1 () Real) (declare-fun skoSC1 () Real) (assert (and (<= (* skoSC1 (* skoMC1 (* skoMC1 (* skoMC1 (- 2.))))) (* skoMC1 (* skoMC1 (* skoMC1 2.)))) (and (<= (* skoSC1 (* skoMC1 (* skoMC1 (* skoMC1 (- 1.))))) (* skoMC1 (* skoMC1 skoMC1))) (and (> (* skoSC1 (* skoMC1 (* skoMC1 skoMC1))) (* skoMC1 (* skoMC1 (* skoMC1 (- 1.))))) (and (<= (* skoMC1 (* skoMC1 (* skoMC1 (- 2.)))) 0.) (and (> (* skoMC1 (* skoMC1 (* skoMC1 2.))) 0.) (and (<= skoSC1 (/ 5. 4.)) (and (<= 2. skoMC1) (and (<= 0. skoSC1) (and (> skoMC1 0.) (and (<= 0. skoMC1) (and (> (* skoSC1 skoMC1) (* skoMC1 (- 1.))) (<= (* skoSC1 (* skoMC1 (- 1.))) skoMC1)))))))))))))

% In GRF format:
(sequent " MetiTarski formula " (antecedent (<= (* skoSC1 (* skoMC1 (* skoMC1 (* skoMC1 (- 2.))))) (* skoMC1 (* skoMC1 (* skoMC1 2.)))) (<= (* skoSC1 (* skoMC1 (* skoMC1 (* skoMC1 (- 1.))))) (* skoMC1 (* skoMC1 skoMC1))) (> (* skoSC1 (* skoMC1 (* skoMC1 skoMC1))) (* skoMC1 (* skoMC1 (* skoMC1 (- 1.))))) (<= (* skoMC1 (* skoMC1 (* skoMC1 (- 2.)))) 0.) (> (* skoMC1 (* skoMC1 (* skoMC1 2.))) 0.) (<= skoSC1 (/ 5. 4.)) (<= 2. skoMC1) (<= 0. skoSC1) (> skoMC1 0.) (<= 0. skoMC1) (> (* skoSC1 skoMC1) (* skoMC1 (- 1.)))) (succedent (> (* skoSC1 (* skoMC1 (- 1.))) skoMC1)))
-----[end problem]-----

-----[begin problem]-----
% In Mathematica format:
Timing[Resolve[Exists[{skoMC1,skoSC1}, And[skoSC1*skoMC1*skoMC1*skoMC1*-2<=skoMC1*skoMC1*skoMC1*2,skoSC1*skoMC1*skoMC1*skoMC1*2<=skoMC1*skoMC1*skoMC1*-2,skoSC1*(skoMC1*skoMC1*skoMC1*(2+skoMC1*-12)+skoSC1*skoMC1*skoMC1*skoMC1*skoMC1*-6)>skoMC1*skoMC1*skoMC1*skoMC1*6,skoSC1*skoMC1*skoMC1*skoMC1*-1<=skoMC1*skoMC1*skoMC1,skoSC1*skoMC1*skoMC1*skoMC1>skoMC1*skoMC1*skoMC1*-1,skoMC1*skoMC1*skoMC1*-2<=0,skoMC1*skoMC1*skoMC1*2>0,skoSC1<=(5/4),2<=skoMC1,0<=skoSC1,skoMC1>0,0<=skoMC1,skoSC1*skoMC1>skoMC1*-1,skoSC1*skoMC1*-1<=skoMC1]], Reals]]

% In QepcadB format:
(E skoMC1) (E skoSC1) [[(skoSC1 skoMC1 skoMC1 skoMC1 (-2))<=(skoMC1 skoMC1 skoMC1 (2))]/\[[(skoSC1 skoMC1 skoMC1 skoMC1 (2))<=(skoMC1 skoMC1 skoMC1 (-2))]/\[[(skoMC1 skoMC1 skoMC1 skoMC1 (6))<(skoSC1 ((skoMC1 skoMC1 skoMC1 (2+(skoMC1 (-12))))+(skoSC1 skoMC1 skoMC1 skoMC1 skoMC1 (-6))))]/\[[(skoSC1 skoMC1 skoMC1 skoMC1 (-1))<=(skoMC1 skoMC1 skoMC1)]/\[[(skoMC1 skoMC1 skoMC1 (-1))<(skoSC1 skoMC1 skoMC1 skoMC1)]/\[[(skoMC1 skoMC1 skoMC1 (-2))<=0]/\[[0<(skoMC1 skoMC1 skoMC1 (2))]/\[[skoSC1<=5/4]/\[[2<=skoMC1]/\[[0<=skoSC1]/\[[0<skoMC1]/\[[0<=skoMC1]/\[[(skoMC1 (-1))<(skoSC1 skoMC1)]/\[(skoSC1 skoMC1 (-1))<=skoMC1]]]]]]]]]]]]]].

% In SMTLib2 format:
(declare-fun skoMC1 () Real) (declare-fun skoSC1 () Real) (assert (and (<= (* skoSC1 (* skoMC1 (* skoMC1 (* skoMC1 (- 2.))))) (* skoMC1 (* skoMC1 (* skoMC1 2.)))) (and (<= (* skoSC1 (* skoMC1 (* skoMC1 (* skoMC1 2.)))) (* skoMC1 (* skoMC1 (* skoMC1 (- 2.))))) (and (> (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (+ 2. (* skoMC1 (- 12.)))))) (* skoSC1 (* skoMC1 (* skoMC1 (* skoMC1 (* skoMC1 (- 6.)))))))) (* skoMC1 (* skoMC1 (* skoMC1 (* skoMC1 6.))))) (and (<= (* skoSC1 (* skoMC1 (* skoMC1 (* skoMC1 (- 1.))))) (* skoMC1 (* skoMC1 skoMC1))) (and (> (* skoSC1 (* skoMC1 (* skoMC1 skoMC1))) (* skoMC1 (* skoMC1 (* skoMC1 (- 1.))))) (and (<= (* skoMC1 (* skoMC1 (* skoMC1 (- 2.)))) 0.) (and (> (* skoMC1 (* skoMC1 (* skoMC1 2.))) 0.) (and (<= skoSC1 (/ 5. 4.)) (and (<= 2. skoMC1) (and (<= 0. skoSC1) (and (> skoMC1 0.) (and (<= 0. skoMC1) (and (> (* skoSC1 skoMC1) (* skoMC1 (- 1.))) (<= (* skoSC1 (* skoMC1 (- 1.))) skoMC1)))))))))))))))

% In GRF format:
(sequent " MetiTarski formula " (antecedent (<= (* skoSC1 (* skoMC1 (* skoMC1 (* skoMC1 (- 2.))))) (* skoMC1 (* skoMC1 (* skoMC1 2.)))) (<= (* skoSC1 (* skoMC1 (* skoMC1 (* skoMC1 2.)))) (* skoMC1 (* skoMC1 (* skoMC1 (- 2.))))) (> (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (+ 2. (* skoMC1 (- 12.)))))) (* skoSC1 (* skoMC1 (* skoMC1 (* skoMC1 (* skoMC1 (- 6.)))))))) (* skoMC1 (* skoMC1 (* skoMC1 (* skoMC1 6.))))) (<= (* skoSC1 (* skoMC1 (* skoMC1 (* skoMC1 (- 1.))))) (* skoMC1 (* skoMC1 skoMC1))) (> (* skoSC1 (* skoMC1 (* skoMC1 skoMC1))) (* skoMC1 (* skoMC1 (* skoMC1 (- 1.))))) (<= (* skoMC1 (* skoMC1 (* skoMC1 (- 2.)))) 0.) (> (* skoMC1 (* skoMC1 (* skoMC1 2.))) 0.) (<= skoSC1 (/ 5. 4.)) (<= 2. skoMC1) (<= 0. skoSC1) (> skoMC1 0.) (<= 0. skoMC1) (> (* skoSC1 skoMC1) (* skoMC1 (- 1.)))) (succedent (> (* skoSC1 (* skoMC1 (- 1.))) skoMC1)))
-----[end problem]-----

-----[begin problem]-----
% In Mathematica format:
Timing[Resolve[Exists[{skoMC1,skoSC1}, And[skoSC1*skoMC1*skoMC1*skoMC1*2>skoMC1*skoMC1*skoMC1*-2,skoSC1*skoMC1*skoMC1*skoMC1*-1<=skoMC1*skoMC1*skoMC1,skoSC1*skoMC1*skoMC1*skoMC1>skoMC1*skoMC1*skoMC1*-1,skoMC1*skoMC1*skoMC1*-2<=0,skoMC1*skoMC1*skoMC1*2>0,skoSC1<=(5/4),2<=skoMC1,0<=skoSC1,skoMC1>0,0<=skoMC1,skoSC1*skoMC1>skoMC1*-1,skoSC1*skoMC1*-1<=skoMC1]], Reals]]

% In QepcadB format:
(E skoMC1) (E skoSC1) [[(skoMC1 skoMC1 skoMC1 (-2))<(skoSC1 skoMC1 skoMC1 skoMC1 (2))]/\[[(skoSC1 skoMC1 skoMC1 skoMC1 (-1))<=(skoMC1 skoMC1 skoMC1)]/\[[(skoMC1 skoMC1 skoMC1 (-1))<(skoSC1 skoMC1 skoMC1 skoMC1)]/\[[(skoMC1 skoMC1 skoMC1 (-2))<=0]/\[[0<(skoMC1 skoMC1 skoMC1 (2))]/\[[skoSC1<=5/4]/\[[2<=skoMC1]/\[[0<=skoSC1]/\[[0<skoMC1]/\[[0<=skoMC1]/\[[(skoMC1 (-1))<(skoSC1 skoMC1)]/\[(skoSC1 skoMC1 (-1))<=skoMC1]]]]]]]]]]]].

% In SMTLib2 format:
(declare-fun skoMC1 () Real) (declare-fun skoSC1 () Real) (assert (and (> (* skoSC1 (* skoMC1 (* skoMC1 (* skoMC1 2.)))) (* skoMC1 (* skoMC1 (* skoMC1 (- 2.))))) (and (<= (* skoSC1 (* skoMC1 (* skoMC1 (* skoMC1 (- 1.))))) (* skoMC1 (* skoMC1 skoMC1))) (and (> (* skoSC1 (* skoMC1 (* skoMC1 skoMC1))) (* skoMC1 (* skoMC1 (* skoMC1 (- 1.))))) (and (<= (* skoMC1 (* skoMC1 (* skoMC1 (- 2.)))) 0.) (and (> (* skoMC1 (* skoMC1 (* skoMC1 2.))) 0.) (and (<= skoSC1 (/ 5. 4.)) (and (<= 2. skoMC1) (and (<= 0. skoSC1) (and (> skoMC1 0.) (and (<= 0. skoMC1) (and (> (* skoSC1 skoMC1) (* skoMC1 (- 1.))) (<= (* skoSC1 (* skoMC1 (- 1.))) skoMC1)))))))))))))

% In GRF format:
(sequent " MetiTarski formula " (antecedent (> (* skoSC1 (* skoMC1 (* skoMC1 (* skoMC1 2.)))) (* skoMC1 (* skoMC1 (* skoMC1 (- 2.))))) (<= (* skoSC1 (* skoMC1 (* skoMC1 (* skoMC1 (- 1.))))) (* skoMC1 (* skoMC1 skoMC1))) (> (* skoSC1 (* skoMC1 (* skoMC1 skoMC1))) (* skoMC1 (* skoMC1 (* skoMC1 (- 1.))))) (<= (* skoMC1 (* skoMC1 (* skoMC1 (- 2.)))) 0.) (> (* skoMC1 (* skoMC1 (* skoMC1 2.))) 0.) (<= skoSC1 (/ 5. 4.)) (<= 2. skoMC1) (<= 0. skoSC1) (> skoMC1 0.) (<= 0. skoMC1) (> (* skoSC1 skoMC1) (* skoMC1 (- 1.)))) (succedent (> (* skoSC1 (* skoMC1 (- 1.))) skoMC1)))
-----[end problem]-----

-----[begin problem]-----
% In Mathematica format:
Timing[Resolve[Exists[{skoMC1,skoSC1}, And[skoSC1*skoMC1*skoMC1*skoMC1*2>skoMC1*skoMC1*skoMC1*-2,skoSC1*skoMC1*skoMC1*skoMC1*-1<=skoMC1*skoMC1*skoMC1,skoSC1*skoMC1*skoMC1*skoMC1>skoMC1*skoMC1*skoMC1*-1,skoMC1*skoMC1*skoMC1*-2<=0,skoMC1*skoMC1*skoMC1*2>0,skoSC1<=(5/4),2<=skoMC1,0<=skoSC1,skoMC1>0,0<=skoMC1,skoSC1*skoMC1>skoMC1*-1,skoSC1*skoMC1*-1<=skoMC1]], Reals]]

% In QepcadB format:
(E skoMC1) (E skoSC1) [[(skoMC1 skoMC1 skoMC1 (-2))<(skoSC1 skoMC1 skoMC1 skoMC1 (2))]/\[[(skoSC1 skoMC1 skoMC1 skoMC1 (-1))<=(skoMC1 skoMC1 skoMC1)]/\[[(skoMC1 skoMC1 skoMC1 (-1))<(skoSC1 skoMC1 skoMC1 skoMC1)]/\[[(skoMC1 skoMC1 skoMC1 (-2))<=0]/\[[0<(skoMC1 skoMC1 skoMC1 (2))]/\[[skoSC1<=5/4]/\[[2<=skoMC1]/\[[0<=skoSC1]/\[[0<skoMC1]/\[[0<=skoMC1]/\[[(skoMC1 (-1))<(skoSC1 skoMC1)]/\[(skoSC1 skoMC1 (-1))<=skoMC1]]]]]]]]]]]].

% In SMTLib2 format:
(declare-fun skoMC1 () Real) (declare-fun skoSC1 () Real) (assert (and (> (* skoSC1 (* skoMC1 (* skoMC1 (* skoMC1 2.)))) (* skoMC1 (* skoMC1 (* skoMC1 (- 2.))))) (and (<= (* skoSC1 (* skoMC1 (* skoMC1 (* skoMC1 (- 1.))))) (* skoMC1 (* skoMC1 skoMC1))) (and (> (* skoSC1 (* skoMC1 (* skoMC1 skoMC1))) (* skoMC1 (* skoMC1 (* skoMC1 (- 1.))))) (and (<= (* skoMC1 (* skoMC1 (* skoMC1 (- 2.)))) 0.) (and (> (* skoMC1 (* skoMC1 (* skoMC1 2.))) 0.) (and (<= skoSC1 (/ 5. 4.)) (and (<= 2. skoMC1) (and (<= 0. skoSC1) (and (> skoMC1 0.) (and (<= 0. skoMC1) (and (> (* skoSC1 skoMC1) (* skoMC1 (- 1.))) (<= (* skoSC1 (* skoMC1 (- 1.))) skoMC1)))))))))))))

% In GRF format:
(sequent " MetiTarski formula " (antecedent (> (* skoSC1 (* skoMC1 (* skoMC1 (* skoMC1 2.)))) (* skoMC1 (* skoMC1 (* skoMC1 (- 2.))))) (<= (* skoSC1 (* skoMC1 (* skoMC1 (* skoMC1 (- 1.))))) (* skoMC1 (* skoMC1 skoMC1))) (> (* skoSC1 (* skoMC1 (* skoMC1 skoMC1))) (* skoMC1 (* skoMC1 (* skoMC1 (- 1.))))) (<= (* skoMC1 (* skoMC1 (* skoMC1 (- 2.)))) 0.) (> (* skoMC1 (* skoMC1 (* skoMC1 2.))) 0.) (<= skoSC1 (/ 5. 4.)) (<= 2. skoMC1) (<= 0. skoSC1) (> skoMC1 0.) (<= 0. skoMC1) (> (* skoSC1 skoMC1) (* skoMC1 (- 1.)))) (succedent (> (* skoSC1 (* skoMC1 (- 1.))) skoMC1)))
-----[end problem]-----

-----[begin problem]-----
% In Mathematica format:
Timing[Resolve[Exists[{skoMC1,skoSC1}, And[skoSC1*skoMC1*skoMC1*skoMC1*-2<=skoMC1*skoMC1*skoMC1*2,skoSC1*skoMC1*skoMC1*skoMC1*2>skoMC1*skoMC1*skoMC1*-2,skoSC1*skoMC1*skoMC1*skoMC1*-1<=skoMC1*skoMC1*skoMC1,skoSC1*skoMC1*skoMC1*skoMC1>skoMC1*skoMC1*skoMC1*-1,skoMC1*skoMC1*skoMC1*-2<=0,skoMC1*skoMC1*skoMC1*2>0,skoSC1<=(5/4),2<=skoMC1,0<=skoSC1,skoMC1>0,0<=skoMC1,skoSC1*skoMC1>skoMC1*-1,skoSC1*skoMC1*-1<=skoMC1]], Reals]]

% In QepcadB format:
(E skoMC1) (E skoSC1) [[(skoSC1 skoMC1 skoMC1 skoMC1 (-2))<=(skoMC1 skoMC1 skoMC1 (2))]/\[[(skoMC1 skoMC1 skoMC1 (-2))<(skoSC1 skoMC1 skoMC1 skoMC1 (2))]/\[[(skoSC1 skoMC1 skoMC1 skoMC1 (-1))<=(skoMC1 skoMC1 skoMC1)]/\[[(skoMC1 skoMC1 skoMC1 (-1))<(skoSC1 skoMC1 skoMC1 skoMC1)]/\[[(skoMC1 skoMC1 skoMC1 (-2))<=0]/\[[0<(skoMC1 skoMC1 skoMC1 (2))]/\[[skoSC1<=5/4]/\[[2<=skoMC1]/\[[0<=skoSC1]/\[[0<skoMC1]/\[[0<=skoMC1]/\[[(skoMC1 (-1))<(skoSC1 skoMC1)]/\[(skoSC1 skoMC1 (-1))<=skoMC1]]]]]]]]]]]]].

% In SMTLib2 format:
(declare-fun skoMC1 () Real) (declare-fun skoSC1 () Real) (assert (and (<= (* skoSC1 (* skoMC1 (* skoMC1 (* skoMC1 (- 2.))))) (* skoMC1 (* skoMC1 (* skoMC1 2.)))) (and (> (* skoSC1 (* skoMC1 (* skoMC1 (* skoMC1 2.)))) (* skoMC1 (* skoMC1 (* skoMC1 (- 2.))))) (and (<= (* skoSC1 (* skoMC1 (* skoMC1 (* skoMC1 (- 1.))))) (* skoMC1 (* skoMC1 skoMC1))) (and (> (* skoSC1 (* skoMC1 (* skoMC1 skoMC1))) (* skoMC1 (* skoMC1 (* skoMC1 (- 1.))))) (and (<= (* skoMC1 (* skoMC1 (* skoMC1 (- 2.)))) 0.) (and (> (* skoMC1 (* skoMC1 (* skoMC1 2.))) 0.) (and (<= skoSC1 (/ 5. 4.)) (and (<= 2. skoMC1) (and (<= 0. skoSC1) (and (> skoMC1 0.) (and (<= 0. skoMC1) (and (> (* skoSC1 skoMC1) (* skoMC1 (- 1.))) (<= (* skoSC1 (* skoMC1 (- 1.))) skoMC1))))))))))))))

% In GRF format:
(sequent " MetiTarski formula " (antecedent (<= (* skoSC1 (* skoMC1 (* skoMC1 (* skoMC1 (- 2.))))) (* skoMC1 (* skoMC1 (* skoMC1 2.)))) (> (* skoSC1 (* skoMC1 (* skoMC1 (* skoMC1 2.)))) (* skoMC1 (* skoMC1 (* skoMC1 (- 2.))))) (<= (* skoSC1 (* skoMC1 (* skoMC1 (* skoMC1 (- 1.))))) (* skoMC1 (* skoMC1 skoMC1))) (> (* skoSC1 (* skoMC1 (* skoMC1 skoMC1))) (* skoMC1 (* skoMC1 (* skoMC1 (- 1.))))) (<= (* skoMC1 (* skoMC1 (* skoMC1 (- 2.)))) 0.) (> (* skoMC1 (* skoMC1 (* skoMC1 2.))) 0.) (<= skoSC1 (/ 5. 4.)) (<= 2. skoMC1) (<= 0. skoSC1) (> skoMC1 0.) (<= 0. skoMC1) (> (* skoSC1 skoMC1) (* skoMC1 (- 1.)))) (succedent (> (* skoSC1 (* skoMC1 (- 1.))) skoMC1)))
-----[end problem]-----

-----[begin problem]-----
% In Mathematica format:
Timing[Resolve[Exists[{skoMC1,skoSC1}, And[skoSC1*skoMC1*skoMC1*skoMC1*2>skoMC1*skoMC1*skoMC1*-2,skoSC1*(skoMC1*skoMC1*skoMC1*skoMC1*-12+skoSC1*(skoMC1*skoMC1*skoMC1*(1+skoMC1*-6)+skoSC1*skoMC1*skoMC1*skoMC1))>skoMC1*skoMC1*skoMC1*(2+skoMC1*6),skoSC1*skoMC1*skoMC1*skoMC1*2>skoMC1*skoMC1*skoMC1*-2,skoSC1*skoMC1*skoMC1*skoMC1*-1<=skoMC1*skoMC1*skoMC1,skoSC1*skoMC1*skoMC1*skoMC1>skoMC1*skoMC1*skoMC1*-1,skoMC1*skoMC1*skoMC1*-2<=0,skoMC1*skoMC1*skoMC1*2>0,skoSC1<=(5/4),2<=skoMC1,0<=skoSC1,skoMC1>0,0<=skoMC1,skoSC1*skoMC1>skoMC1*-1,skoSC1*skoMC1*-1<=skoMC1]], Reals]]

% In QepcadB format:
(E skoMC1) (E skoSC1) [[(skoMC1 skoMC1 skoMC1 (-2))<(skoSC1 skoMC1 skoMC1 skoMC1 (2))]/\[[(skoMC1 skoMC1 skoMC1 (2+(skoMC1 (6))))<(skoSC1 ((skoMC1 skoMC1 skoMC1 skoMC1 (-12))+(skoSC1 ((skoMC1 skoMC1 skoMC1 (1+(skoMC1 (-6))))+(skoSC1 skoMC1 skoMC1 skoMC1)))))]/\[[(skoMC1 skoMC1 skoMC1 (-2))<(skoSC1 skoMC1 skoMC1 skoMC1 (2))]/\[[(skoSC1 skoMC1 skoMC1 skoMC1 (-1))<=(skoMC1 skoMC1 skoMC1)]/\[[(skoMC1 skoMC1 skoMC1 (-1))<(skoSC1 skoMC1 skoMC1 skoMC1)]/\[[(skoMC1 skoMC1 skoMC1 (-2))<=0]/\[[0<(skoMC1 skoMC1 skoMC1 (2))]/\[[skoSC1<=5/4]/\[[2<=skoMC1]/\[[0<=skoSC1]/\[[0<skoMC1]/\[[0<=skoMC1]/\[[(skoMC1 (-1))<(skoSC1 skoMC1)]/\[(skoSC1 skoMC1 (-1))<=skoMC1]]]]]]]]]]]]]].

% In SMTLib2 format:
(declare-fun skoMC1 () Real) (declare-fun skoSC1 () Real) (assert (and (> (* skoSC1 (* skoMC1 (* skoMC1 (* skoMC1 2.)))) (* skoMC1 (* skoMC1 (* skoMC1 (- 2.))))) (and (> (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (* skoMC1 (- 12.))))) (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (+ 1. (* skoMC1 (- 6.)))))) (* skoSC1 (* skoMC1 (* skoMC1 skoMC1))))))) (* skoMC1 (* skoMC1 (* skoMC1 (+ 2. (* skoMC1 6.)))))) (and (> (* skoSC1 (* skoMC1 (* skoMC1 (* skoMC1 2.)))) (* skoMC1 (* skoMC1 (* skoMC1 (- 2.))))) (and (<= (* skoSC1 (* skoMC1 (* skoMC1 (* skoMC1 (- 1.))))) (* skoMC1 (* skoMC1 skoMC1))) (and (> (* skoSC1 (* skoMC1 (* skoMC1 skoMC1))) (* skoMC1 (* skoMC1 (* skoMC1 (- 1.))))) (and (<= (* skoMC1 (* skoMC1 (* skoMC1 (- 2.)))) 0.) (and (> (* skoMC1 (* skoMC1 (* skoMC1 2.))) 0.) (and (<= skoSC1 (/ 5. 4.)) (and (<= 2. skoMC1) (and (<= 0. skoSC1) (and (> skoMC1 0.) (and (<= 0. skoMC1) (and (> (* skoSC1 skoMC1) (* skoMC1 (- 1.))) (<= (* skoSC1 (* skoMC1 (- 1.))) skoMC1)))))))))))))))

% In GRF format:
(sequent " MetiTarski formula " (antecedent (> (* skoSC1 (* skoMC1 (* skoMC1 (* skoMC1 2.)))) (* skoMC1 (* skoMC1 (* skoMC1 (- 2.))))) (> (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (* skoMC1 (- 12.))))) (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (+ 1. (* skoMC1 (- 6.)))))) (* skoSC1 (* skoMC1 (* skoMC1 skoMC1))))))) (* skoMC1 (* skoMC1 (* skoMC1 (+ 2. (* skoMC1 6.)))))) (> (* skoSC1 (* skoMC1 (* skoMC1 (* skoMC1 2.)))) (* skoMC1 (* skoMC1 (* skoMC1 (- 2.))))) (<= (* skoSC1 (* skoMC1 (* skoMC1 (* skoMC1 (- 1.))))) (* skoMC1 (* skoMC1 skoMC1))) (> (* skoSC1 (* skoMC1 (* skoMC1 skoMC1))) (* skoMC1 (* skoMC1 (* skoMC1 (- 1.))))) (<= (* skoMC1 (* skoMC1 (* skoMC1 (- 2.)))) 0.) (> (* skoMC1 (* skoMC1 (* skoMC1 2.))) 0.) (<= skoSC1 (/ 5. 4.)) (<= 2. skoMC1) (<= 0. skoSC1) (> skoMC1 0.) (<= 0. skoMC1) (> (* skoSC1 skoMC1) (* skoMC1 (- 1.)))) (succedent (> (* skoSC1 (* skoMC1 (- 1.))) skoMC1)))
-----[end problem]-----

-----[begin problem]-----
% In Mathematica format:
Timing[Resolve[Exists[{skoMC1,skoSC1}, And[skoSC1*skoMC1*skoMC1*skoMC1*-2<=skoMC1*skoMC1*skoMC1*2,skoSC1*(skoMC1*skoMC1*skoMC1+skoSC1*skoMC1*skoMC1*skoMC1)<=0,skoSC1*skoMC1*-1<=skoMC1,skoSC1*skoMC1>skoMC1*-1,0<=skoMC1,skoMC1>0,0<=skoSC1,2<=skoMC1,skoSC1<=(5/4),skoMC1*skoMC1*skoMC1*2>0,skoMC1*skoMC1*skoMC1*-2<=0,skoSC1*skoMC1*skoMC1*skoMC1>skoMC1*skoMC1*skoMC1*-1,skoSC1*skoMC1*skoMC1*skoMC1*-1<=skoMC1*skoMC1*skoMC1]], Reals]]

% In QepcadB format:
(E skoMC1) (E skoSC1) [[(skoSC1 skoMC1 skoMC1 skoMC1 (-2))<=(skoMC1 skoMC1 skoMC1 (2))]/\[[(skoSC1 ((skoMC1 skoMC1 skoMC1)+(skoSC1 skoMC1 skoMC1 skoMC1)))<=0]/\[[(skoSC1 skoMC1 (-1))<=skoMC1]/\[[(skoMC1 (-1))<(skoSC1 skoMC1)]/\[[0<=skoMC1]/\[[0<skoMC1]/\[[0<=skoSC1]/\[[2<=skoMC1]/\[[skoSC1<=5/4]/\[[0<(skoMC1 skoMC1 skoMC1 (2))]/\[[(skoMC1 skoMC1 skoMC1 (-2))<=0]/\[[(skoMC1 skoMC1 skoMC1 (-1))<(skoSC1 skoMC1 skoMC1 skoMC1)]/\[(skoSC1 skoMC1 skoMC1 skoMC1 (-1))<=(skoMC1 skoMC1 skoMC1)]]]]]]]]]]]]].

% In SMTLib2 format:
(declare-fun skoMC1 () Real) (declare-fun skoSC1 () Real) (assert (and (<= (* skoSC1 (* skoMC1 (* skoMC1 (* skoMC1 (- 2.))))) (* skoMC1 (* skoMC1 (* skoMC1 2.)))) (and (<= (* skoSC1 (+ (* skoMC1 (* skoMC1 skoMC1)) (* skoSC1 (* skoMC1 (* skoMC1 skoMC1))))) 0.) (and (<= (* skoSC1 (* skoMC1 (- 1.))) skoMC1) (and (> (* skoSC1 skoMC1) (* skoMC1 (- 1.))) (and (<= 0. skoMC1) (and (> skoMC1 0.) (and (<= 0. skoSC1) (and (<= 2. skoMC1) (and (<= skoSC1 (/ 5. 4.)) (and (> (* skoMC1 (* skoMC1 (* skoMC1 2.))) 0.) (and (<= (* skoMC1 (* skoMC1 (* skoMC1 (- 2.)))) 0.) (and (> (* skoSC1 (* skoMC1 (* skoMC1 skoMC1))) (* skoMC1 (* skoMC1 (* skoMC1 (- 1.))))) (<= (* skoSC1 (* skoMC1 (* skoMC1 (* skoMC1 (- 1.))))) (* skoMC1 (* skoMC1 skoMC1))))))))))))))))

% In GRF format:
(sequent " MetiTarski formula " (antecedent (<= (* skoSC1 (* skoMC1 (* skoMC1 (* skoMC1 (- 2.))))) (* skoMC1 (* skoMC1 (* skoMC1 2.)))) (<= (* skoSC1 (+ (* skoMC1 (* skoMC1 skoMC1)) (* skoSC1 (* skoMC1 (* skoMC1 skoMC1))))) 0.) (<= (* skoSC1 (* skoMC1 (- 1.))) skoMC1) (> (* skoSC1 skoMC1) (* skoMC1 (- 1.))) (<= 0. skoMC1) (> skoMC1 0.) (<= 0. skoSC1) (<= 2. skoMC1) (<= skoSC1 (/ 5. 4.)) (> (* skoMC1 (* skoMC1 (* skoMC1 2.))) 0.) (<= (* skoMC1 (* skoMC1 (* skoMC1 (- 2.)))) 0.) (> (* skoSC1 (* skoMC1 (* skoMC1 skoMC1))) (* skoMC1 (* skoMC1 (* skoMC1 (- 1.)))))) (succedent (> (* skoSC1 (* skoMC1 (* skoMC1 (* skoMC1 (- 1.))))) (* skoMC1 (* skoMC1 skoMC1)))))
-----[end problem]-----

-----[begin problem]-----
% In Mathematica format:
Timing[Resolve[Exists[{skoMC1,skoSC1}, And[skoSC1*skoMC1*skoMC1*skoMC1*2<=skoMC1*skoMC1*skoMC1*-2,skoSC1*(skoMC1*skoMC1*skoMC1+skoSC1*skoMC1*skoMC1*skoMC1)<=0,skoSC1*skoMC1*-1<=skoMC1,skoSC1*skoMC1>skoMC1*-1,0<=skoMC1,skoMC1>0,0<=skoSC1,2<=skoMC1,skoSC1<=(5/4),skoMC1*skoMC1*skoMC1*2>0,skoMC1*skoMC1*skoMC1*-2<=0,skoSC1*skoMC1*skoMC1*skoMC1>skoMC1*skoMC1*skoMC1*-1,skoSC1*skoMC1*skoMC1*skoMC1*-1<=skoMC1*skoMC1*skoMC1]], Reals]]

% In QepcadB format:
(E skoMC1) (E skoSC1) [[(skoSC1 skoMC1 skoMC1 skoMC1 (2))<=(skoMC1 skoMC1 skoMC1 (-2))]/\[[(skoSC1 ((skoMC1 skoMC1 skoMC1)+(skoSC1 skoMC1 skoMC1 skoMC1)))<=0]/\[[(skoSC1 skoMC1 (-1))<=skoMC1]/\[[(skoMC1 (-1))<(skoSC1 skoMC1)]/\[[0<=skoMC1]/\[[0<skoMC1]/\[[0<=skoSC1]/\[[2<=skoMC1]/\[[skoSC1<=5/4]/\[[0<(skoMC1 skoMC1 skoMC1 (2))]/\[[(skoMC1 skoMC1 skoMC1 (-2))<=0]/\[[(skoMC1 skoMC1 skoMC1 (-1))<(skoSC1 skoMC1 skoMC1 skoMC1)]/\[(skoSC1 skoMC1 skoMC1 skoMC1 (-1))<=(skoMC1 skoMC1 skoMC1)]]]]]]]]]]]]].

% In SMTLib2 format:
(declare-fun skoMC1 () Real) (declare-fun skoSC1 () Real) (assert (and (<= (* skoSC1 (* skoMC1 (* skoMC1 (* skoMC1 2.)))) (* skoMC1 (* skoMC1 (* skoMC1 (- 2.))))) (and (<= (* skoSC1 (+ (* skoMC1 (* skoMC1 skoMC1)) (* skoSC1 (* skoMC1 (* skoMC1 skoMC1))))) 0.) (and (<= (* skoSC1 (* skoMC1 (- 1.))) skoMC1) (and (> (* skoSC1 skoMC1) (* skoMC1 (- 1.))) (and (<= 0. skoMC1) (and (> skoMC1 0.) (and (<= 0. skoSC1) (and (<= 2. skoMC1) (and (<= skoSC1 (/ 5. 4.)) (and (> (* skoMC1 (* skoMC1 (* skoMC1 2.))) 0.) (and (<= (* skoMC1 (* skoMC1 (* skoMC1 (- 2.)))) 0.) (and (> (* skoSC1 (* skoMC1 (* skoMC1 skoMC1))) (* skoMC1 (* skoMC1 (* skoMC1 (- 1.))))) (<= (* skoSC1 (* skoMC1 (* skoMC1 (* skoMC1 (- 1.))))) (* skoMC1 (* skoMC1 skoMC1))))))))))))))))

% In GRF format:
(sequent " MetiTarski formula " (antecedent (<= (* skoSC1 (* skoMC1 (* skoMC1 (* skoMC1 2.)))) (* skoMC1 (* skoMC1 (* skoMC1 (- 2.))))) (<= (* skoSC1 (+ (* skoMC1 (* skoMC1 skoMC1)) (* skoSC1 (* skoMC1 (* skoMC1 skoMC1))))) 0.) (<= (* skoSC1 (* skoMC1 (- 1.))) skoMC1) (> (* skoSC1 skoMC1) (* skoMC1 (- 1.))) (<= 0. skoMC1) (> skoMC1 0.) (<= 0. skoSC1) (<= 2. skoMC1) (<= skoSC1 (/ 5. 4.)) (> (* skoMC1 (* skoMC1 (* skoMC1 2.))) 0.) (<= (* skoMC1 (* skoMC1 (* skoMC1 (- 2.)))) 0.) (> (* skoSC1 (* skoMC1 (* skoMC1 skoMC1))) (* skoMC1 (* skoMC1 (* skoMC1 (- 1.)))))) (succedent (> (* skoSC1 (* skoMC1 (* skoMC1 (* skoMC1 (- 1.))))) (* skoMC1 (* skoMC1 skoMC1)))))
-----[end problem]-----

-----[begin problem]-----
% In Mathematica format:
Timing[Resolve[Exists[{skoMC1,skoSC1}, And[skoSC1*(skoMC1*skoMC1*skoMC1+skoSC1*skoMC1*skoMC1*skoMC1)>0,skoSC1*skoMC1*-1<=skoMC1,skoSC1*skoMC1>skoMC1*-1,0<=skoMC1,skoMC1>0,0<=skoSC1,2<=skoMC1,skoSC1<=(5/4),skoMC1*skoMC1*skoMC1*2>0,skoMC1*skoMC1*skoMC1*-2<=0,skoSC1*skoMC1*skoMC1*skoMC1>skoMC1*skoMC1*skoMC1*-1,skoSC1*skoMC1*skoMC1*skoMC1*-1<=skoMC1*skoMC1*skoMC1]], Reals]]

% In QepcadB format:
(E skoMC1) (E skoSC1) [[0<(skoSC1 ((skoMC1 skoMC1 skoMC1)+(skoSC1 skoMC1 skoMC1 skoMC1)))]/\[[(skoSC1 skoMC1 (-1))<=skoMC1]/\[[(skoMC1 (-1))<(skoSC1 skoMC1)]/\[[0<=skoMC1]/\[[0<skoMC1]/\[[0<=skoSC1]/\[[2<=skoMC1]/\[[skoSC1<=5/4]/\[[0<(skoMC1 skoMC1 skoMC1 (2))]/\[[(skoMC1 skoMC1 skoMC1 (-2))<=0]/\[[(skoMC1 skoMC1 skoMC1 (-1))<(skoSC1 skoMC1 skoMC1 skoMC1)]/\[(skoSC1 skoMC1 skoMC1 skoMC1 (-1))<=(skoMC1 skoMC1 skoMC1)]]]]]]]]]]]].

% In SMTLib2 format:
(declare-fun skoMC1 () Real) (declare-fun skoSC1 () Real) (assert (and (> (* skoSC1 (+ (* skoMC1 (* skoMC1 skoMC1)) (* skoSC1 (* skoMC1 (* skoMC1 skoMC1))))) 0.) (and (<= (* skoSC1 (* skoMC1 (- 1.))) skoMC1) (and (> (* skoSC1 skoMC1) (* skoMC1 (- 1.))) (and (<= 0. skoMC1) (and (> skoMC1 0.) (and (<= 0. skoSC1) (and (<= 2. skoMC1) (and (<= skoSC1 (/ 5. 4.)) (and (> (* skoMC1 (* skoMC1 (* skoMC1 2.))) 0.) (and (<= (* skoMC1 (* skoMC1 (* skoMC1 (- 2.)))) 0.) (and (> (* skoSC1 (* skoMC1 (* skoMC1 skoMC1))) (* skoMC1 (* skoMC1 (* skoMC1 (- 1.))))) (<= (* skoSC1 (* skoMC1 (* skoMC1 (* skoMC1 (- 1.))))) (* skoMC1 (* skoMC1 skoMC1)))))))))))))))

% In GRF format:
(sequent " MetiTarski formula " (antecedent (> (* skoSC1 (+ (* skoMC1 (* skoMC1 skoMC1)) (* skoSC1 (* skoMC1 (* skoMC1 skoMC1))))) 0.) (<= (* skoSC1 (* skoMC1 (- 1.))) skoMC1) (> (* skoSC1 skoMC1) (* skoMC1 (- 1.))) (<= 0. skoMC1) (> skoMC1 0.) (<= 0. skoSC1) (<= 2. skoMC1) (<= skoSC1 (/ 5. 4.)) (> (* skoMC1 (* skoMC1 (* skoMC1 2.))) 0.) (<= (* skoMC1 (* skoMC1 (* skoMC1 (- 2.)))) 0.) (> (* skoSC1 (* skoMC1 (* skoMC1 skoMC1))) (* skoMC1 (* skoMC1 (* skoMC1 (- 1.)))))) (succedent (> (* skoSC1 (* skoMC1 (* skoMC1 (* skoMC1 (- 1.))))) (* skoMC1 (* skoMC1 skoMC1)))))
-----[end problem]-----

-----[begin problem]-----
% In Mathematica format:
Timing[Resolve[Exists[{skoMC1,skoSC1}, And[skoSC1*skoMC1*skoMC1*skoMC1*-2<=skoMC1*skoMC1*skoMC1*2,skoSC1*skoMC1*skoMC1*skoMC1*2<=skoMC1*skoMC1*skoMC1*-2,skoSC1*(skoMC1*skoMC1*skoMC1+skoSC1*skoMC1*skoMC1*skoMC1)<=0,skoSC1*(skoMC1*skoMC1*skoMC1*(-2+skoMC1*12)+skoSC1*skoMC1*skoMC1*skoMC1*skoMC1*6)>skoMC1*skoMC1*skoMC1*skoMC1*-6,skoSC1*skoMC1*-1<=skoMC1,skoSC1*skoMC1>skoMC1*-1,0<=skoMC1,skoMC1>0,0<=skoSC1,2<=skoMC1,skoSC1<=(5/4),skoMC1*skoMC1*skoMC1*2>0,skoMC1*skoMC1*skoMC1*-2<=0,skoSC1*skoMC1*skoMC1*skoMC1>skoMC1*skoMC1*skoMC1*-1,skoSC1*skoMC1*skoMC1*skoMC1*-1<=skoMC1*skoMC1*skoMC1]], Reals]]

% In QepcadB format:
(E skoMC1) (E skoSC1) [[(skoSC1 skoMC1 skoMC1 skoMC1 (-2))<=(skoMC1 skoMC1 skoMC1 (2))]/\[[(skoSC1 skoMC1 skoMC1 skoMC1 (2))<=(skoMC1 skoMC1 skoMC1 (-2))]/\[[(skoSC1 ((skoMC1 skoMC1 skoMC1)+(skoSC1 skoMC1 skoMC1 skoMC1)))<=0]/\[[(skoMC1 skoMC1 skoMC1 skoMC1 (-6))<(skoSC1 ((skoMC1 skoMC1 skoMC1 (-2+(skoMC1 (12))))+(skoSC1 skoMC1 skoMC1 skoMC1 skoMC1 (6))))]/\[[(skoSC1 skoMC1 (-1))<=skoMC1]/\[[(skoMC1 (-1))<(skoSC1 skoMC1)]/\[[0<=skoMC1]/\[[0<skoMC1]/\[[0<=skoSC1]/\[[2<=skoMC1]/\[[skoSC1<=5/4]/\[[0<(skoMC1 skoMC1 skoMC1 (2))]/\[[(skoMC1 skoMC1 skoMC1 (-2))<=0]/\[[(skoMC1 skoMC1 skoMC1 (-1))<(skoSC1 skoMC1 skoMC1 skoMC1)]/\[(skoSC1 skoMC1 skoMC1 skoMC1 (-1))<=(skoMC1 skoMC1 skoMC1)]]]]]]]]]]]]]]].

% In SMTLib2 format:
(declare-fun skoMC1 () Real) (declare-fun skoSC1 () Real) (assert (and (<= (* skoSC1 (* skoMC1 (* skoMC1 (* skoMC1 (- 2.))))) (* skoMC1 (* skoMC1 (* skoMC1 2.)))) (and (<= (* skoSC1 (* skoMC1 (* skoMC1 (* skoMC1 2.)))) (* skoMC1 (* skoMC1 (* skoMC1 (- 2.))))) (and (<= (* skoSC1 (+ (* skoMC1 (* skoMC1 skoMC1)) (* skoSC1 (* skoMC1 (* skoMC1 skoMC1))))) 0.) (and (> (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (+ (- 2.) (* skoMC1 12.))))) (* skoSC1 (* skoMC1 (* skoMC1 (* skoMC1 (* skoMC1 6.))))))) (* skoMC1 (* skoMC1 (* skoMC1 (* skoMC1 (- 6.)))))) (and (<= (* skoSC1 (* skoMC1 (- 1.))) skoMC1) (and (> (* skoSC1 skoMC1) (* skoMC1 (- 1.))) (and (<= 0. skoMC1) (and (> skoMC1 0.) (and (<= 0. skoSC1) (and (<= 2. skoMC1) (and (<= skoSC1 (/ 5. 4.)) (and (> (* skoMC1 (* skoMC1 (* skoMC1 2.))) 0.) (and (<= (* skoMC1 (* skoMC1 (* skoMC1 (- 2.)))) 0.) (and (> (* skoSC1 (* skoMC1 (* skoMC1 skoMC1))) (* skoMC1 (* skoMC1 (* skoMC1 (- 1.))))) (<= (* skoSC1 (* skoMC1 (* skoMC1 (* skoMC1 (- 1.))))) (* skoMC1 (* skoMC1 skoMC1))))))))))))))))))

% In GRF format:
(sequent " MetiTarski formula " (antecedent (<= (* skoSC1 (* skoMC1 (* skoMC1 (* skoMC1 (- 2.))))) (* skoMC1 (* skoMC1 (* skoMC1 2.)))) (<= (* skoSC1 (* skoMC1 (* skoMC1 (* skoMC1 2.)))) (* skoMC1 (* skoMC1 (* skoMC1 (- 2.))))) (<= (* skoSC1 (+ (* skoMC1 (* skoMC1 skoMC1)) (* skoSC1 (* skoMC1 (* skoMC1 skoMC1))))) 0.) (> (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (+ (- 2.) (* skoMC1 12.))))) (* skoSC1 (* skoMC1 (* skoMC1 (* skoMC1 (* skoMC1 6.))))))) (* skoMC1 (* skoMC1 (* skoMC1 (* skoMC1 (- 6.)))))) (<= (* skoSC1 (* skoMC1 (- 1.))) skoMC1) (> (* skoSC1 skoMC1) (* skoMC1 (- 1.))) (<= 0. skoMC1) (> skoMC1 0.) (<= 0. skoSC1) (<= 2. skoMC1) (<= skoSC1 (/ 5. 4.)) (> (* skoMC1 (* skoMC1 (* skoMC1 2.))) 0.) (<= (* skoMC1 (* skoMC1 (* skoMC1 (- 2.)))) 0.) (> (* skoSC1 (* skoMC1 (* skoMC1 skoMC1))) (* skoMC1 (* skoMC1 (* skoMC1 (- 1.)))))) (succedent (> (* skoSC1 (* skoMC1 (* skoMC1 (* skoMC1 (- 1.))))) (* skoMC1 (* skoMC1 skoMC1)))))
-----[end problem]-----

-----[begin problem]-----
% In Mathematica format:
Timing[Resolve[Exists[{skoMC1,skoSC1}, And[skoSC1*(skoMC1*skoMC1*skoMC1+skoSC1*skoMC1*skoMC1*skoMC1)<=0,skoSC1*skoMC1*skoMC1*skoMC1*2>skoMC1*skoMC1*skoMC1*-2,skoSC1*skoMC1*-1<=skoMC1,skoSC1*skoMC1>skoMC1*-1,0<=skoMC1,skoMC1>0,0<=skoSC1,2<=skoMC1,skoSC1<=(5/4),skoMC1*skoMC1*skoMC1*2>0,skoMC1*skoMC1*skoMC1*-2<=0,skoSC1*skoMC1*skoMC1*skoMC1>skoMC1*skoMC1*skoMC1*-1,skoSC1*skoMC1*skoMC1*skoMC1*-1<=skoMC1*skoMC1*skoMC1]], Reals]]

% In QepcadB format:
(E skoMC1) (E skoSC1) [[(skoSC1 ((skoMC1 skoMC1 skoMC1)+(skoSC1 skoMC1 skoMC1 skoMC1)))<=0]/\[[(skoMC1 skoMC1 skoMC1 (-2))<(skoSC1 skoMC1 skoMC1 skoMC1 (2))]/\[[(skoSC1 skoMC1 (-1))<=skoMC1]/\[[(skoMC1 (-1))<(skoSC1 skoMC1)]/\[[0<=skoMC1]/\[[0<skoMC1]/\[[0<=skoSC1]/\[[2<=skoMC1]/\[[skoSC1<=5/4]/\[[0<(skoMC1 skoMC1 skoMC1 (2))]/\[[(skoMC1 skoMC1 skoMC1 (-2))<=0]/\[[(skoMC1 skoMC1 skoMC1 (-1))<(skoSC1 skoMC1 skoMC1 skoMC1)]/\[(skoSC1 skoMC1 skoMC1 skoMC1 (-1))<=(skoMC1 skoMC1 skoMC1)]]]]]]]]]]]]].

% In SMTLib2 format:
(declare-fun skoMC1 () Real) (declare-fun skoSC1 () Real) (assert (and (<= (* skoSC1 (+ (* skoMC1 (* skoMC1 skoMC1)) (* skoSC1 (* skoMC1 (* skoMC1 skoMC1))))) 0.) (and (> (* skoSC1 (* skoMC1 (* skoMC1 (* skoMC1 2.)))) (* skoMC1 (* skoMC1 (* skoMC1 (- 2.))))) (and (<= (* skoSC1 (* skoMC1 (- 1.))) skoMC1) (and (> (* skoSC1 skoMC1) (* skoMC1 (- 1.))) (and (<= 0. skoMC1) (and (> skoMC1 0.) (and (<= 0. skoSC1) (and (<= 2. skoMC1) (and (<= skoSC1 (/ 5. 4.)) (and (> (* skoMC1 (* skoMC1 (* skoMC1 2.))) 0.) (and (<= (* skoMC1 (* skoMC1 (* skoMC1 (- 2.)))) 0.) (and (> (* skoSC1 (* skoMC1 (* skoMC1 skoMC1))) (* skoMC1 (* skoMC1 (* skoMC1 (- 1.))))) (<= (* skoSC1 (* skoMC1 (* skoMC1 (* skoMC1 (- 1.))))) (* skoMC1 (* skoMC1 skoMC1))))))))))))))))

% In GRF format:
(sequent " MetiTarski formula " (antecedent (<= (* skoSC1 (+ (* skoMC1 (* skoMC1 skoMC1)) (* skoSC1 (* skoMC1 (* skoMC1 skoMC1))))) 0.) (> (* skoSC1 (* skoMC1 (* skoMC1 (* skoMC1 2.)))) (* skoMC1 (* skoMC1 (* skoMC1 (- 2.))))) (<= (* skoSC1 (* skoMC1 (- 1.))) skoMC1) (> (* skoSC1 skoMC1) (* skoMC1 (- 1.))) (<= 0. skoMC1) (> skoMC1 0.) (<= 0. skoSC1) (<= 2. skoMC1) (<= skoSC1 (/ 5. 4.)) (> (* skoMC1 (* skoMC1 (* skoMC1 2.))) 0.) (<= (* skoMC1 (* skoMC1 (* skoMC1 (- 2.)))) 0.) (> (* skoSC1 (* skoMC1 (* skoMC1 skoMC1))) (* skoMC1 (* skoMC1 (* skoMC1 (- 1.)))))) (succedent (> (* skoSC1 (* skoMC1 (* skoMC1 (* skoMC1 (- 1.))))) (* skoMC1 (* skoMC1 skoMC1)))))
-----[end problem]-----

-----[begin problem]-----
% In Mathematica format:
Timing[Resolve[Exists[{skoMC1,skoSC1}, And[skoSC1*skoMC1*skoMC1*skoMC1*2<=skoMC1*skoMC1*skoMC1*-2,skoSC1*(skoMC1*skoMC1*skoMC1+skoSC1*skoMC1*skoMC1*skoMC1)>0,skoSC1*skoMC1*-1<=skoMC1,skoSC1*skoMC1>skoMC1*-1,0<=skoMC1,skoMC1>0,0<=skoSC1,2<=skoMC1,skoSC1<=(5/4),skoMC1*skoMC1*skoMC1*2>0,skoMC1*skoMC1*skoMC1*-2<=0,skoSC1*skoMC1*skoMC1*skoMC1>skoMC1*skoMC1*skoMC1*-1,skoSC1*skoMC1*skoMC1*skoMC1*-1<=skoMC1*skoMC1*skoMC1]], Reals]]

% In QepcadB format:
(E skoMC1) (E skoSC1) [[(skoSC1 skoMC1 skoMC1 skoMC1 (2))<=(skoMC1 skoMC1 skoMC1 (-2))]/\[[0<(skoSC1 ((skoMC1 skoMC1 skoMC1)+(skoSC1 skoMC1 skoMC1 skoMC1)))]/\[[(skoSC1 skoMC1 (-1))<=skoMC1]/\[[(skoMC1 (-1))<(skoSC1 skoMC1)]/\[[0<=skoMC1]/\[[0<skoMC1]/\[[0<=skoSC1]/\[[2<=skoMC1]/\[[skoSC1<=5/4]/\[[0<(skoMC1 skoMC1 skoMC1 (2))]/\[[(skoMC1 skoMC1 skoMC1 (-2))<=0]/\[[(skoMC1 skoMC1 skoMC1 (-1))<(skoSC1 skoMC1 skoMC1 skoMC1)]/\[(skoSC1 skoMC1 skoMC1 skoMC1 (-1))<=(skoMC1 skoMC1 skoMC1)]]]]]]]]]]]]].

% In SMTLib2 format:
(declare-fun skoMC1 () Real) (declare-fun skoSC1 () Real) (assert (and (<= (* skoSC1 (* skoMC1 (* skoMC1 (* skoMC1 2.)))) (* skoMC1 (* skoMC1 (* skoMC1 (- 2.))))) (and (> (* skoSC1 (+ (* skoMC1 (* skoMC1 skoMC1)) (* skoSC1 (* skoMC1 (* skoMC1 skoMC1))))) 0.) (and (<= (* skoSC1 (* skoMC1 (- 1.))) skoMC1) (and (> (* skoSC1 skoMC1) (* skoMC1 (- 1.))) (and (<= 0. skoMC1) (and (> skoMC1 0.) (and (<= 0. skoSC1) (and (<= 2. skoMC1) (and (<= skoSC1 (/ 5. 4.)) (and (> (* skoMC1 (* skoMC1 (* skoMC1 2.))) 0.) (and (<= (* skoMC1 (* skoMC1 (* skoMC1 (- 2.)))) 0.) (and (> (* skoSC1 (* skoMC1 (* skoMC1 skoMC1))) (* skoMC1 (* skoMC1 (* skoMC1 (- 1.))))) (<= (* skoSC1 (* skoMC1 (* skoMC1 (* skoMC1 (- 1.))))) (* skoMC1 (* skoMC1 skoMC1))))))))))))))))

% In GRF format:
(sequent " MetiTarski formula " (antecedent (<= (* skoSC1 (* skoMC1 (* skoMC1 (* skoMC1 2.)))) (* skoMC1 (* skoMC1 (* skoMC1 (- 2.))))) (> (* skoSC1 (+ (* skoMC1 (* skoMC1 skoMC1)) (* skoSC1 (* skoMC1 (* skoMC1 skoMC1))))) 0.) (<= (* skoSC1 (* skoMC1 (- 1.))) skoMC1) (> (* skoSC1 skoMC1) (* skoMC1 (- 1.))) (<= 0. skoMC1) (> skoMC1 0.) (<= 0. skoSC1) (<= 2. skoMC1) (<= skoSC1 (/ 5. 4.)) (> (* skoMC1 (* skoMC1 (* skoMC1 2.))) 0.) (<= (* skoMC1 (* skoMC1 (* skoMC1 (- 2.)))) 0.) (> (* skoSC1 (* skoMC1 (* skoMC1 skoMC1))) (* skoMC1 (* skoMC1 (* skoMC1 (- 1.)))))) (succedent (> (* skoSC1 (* skoMC1 (* skoMC1 (* skoMC1 (- 1.))))) (* skoMC1 (* skoMC1 skoMC1)))))
-----[end problem]-----

-----[begin problem]-----
% In Mathematica format:
Timing[Resolve[Exists[{skoMC1,skoSC1}, And[skoSC1*skoMC1*skoMC1*skoMC1*2>skoMC1*skoMC1*skoMC1*-2,skoSC1*skoMC1*-1<=skoMC1,skoSC1*skoMC1>skoMC1*-1,0<=skoMC1,skoMC1>0,0<=skoSC1,2<=skoMC1,skoSC1<=(5/4),skoMC1*skoMC1*skoMC1*2>0,skoMC1*skoMC1*skoMC1*-2<=0,skoSC1*skoMC1*skoMC1*skoMC1>skoMC1*skoMC1*skoMC1*-1,skoSC1*skoMC1*skoMC1*skoMC1*-1<=skoMC1*skoMC1*skoMC1]], Reals]]

% In QepcadB format:
(E skoMC1) (E skoSC1) [[(skoMC1 skoMC1 skoMC1 (-2))<(skoSC1 skoMC1 skoMC1 skoMC1 (2))]/\[[(skoSC1 skoMC1 (-1))<=skoMC1]/\[[(skoMC1 (-1))<(skoSC1 skoMC1)]/\[[0<=skoMC1]/\[[0<skoMC1]/\[[0<=skoSC1]/\[[2<=skoMC1]/\[[skoSC1<=5/4]/\[[0<(skoMC1 skoMC1 skoMC1 (2))]/\[[(skoMC1 skoMC1 skoMC1 (-2))<=0]/\[[(skoMC1 skoMC1 skoMC1 (-1))<(skoSC1 skoMC1 skoMC1 skoMC1)]/\[(skoSC1 skoMC1 skoMC1 skoMC1 (-1))<=(skoMC1 skoMC1 skoMC1)]]]]]]]]]]]].

% In SMTLib2 format:
(declare-fun skoMC1 () Real) (declare-fun skoSC1 () Real) (assert (and (> (* skoSC1 (* skoMC1 (* skoMC1 (* skoMC1 2.)))) (* skoMC1 (* skoMC1 (* skoMC1 (- 2.))))) (and (<= (* skoSC1 (* skoMC1 (- 1.))) skoMC1) (and (> (* skoSC1 skoMC1) (* skoMC1 (- 1.))) (and (<= 0. skoMC1) (and (> skoMC1 0.) (and (<= 0. skoSC1) (and (<= 2. skoMC1) (and (<= skoSC1 (/ 5. 4.)) (and (> (* skoMC1 (* skoMC1 (* skoMC1 2.))) 0.) (and (<= (* skoMC1 (* skoMC1 (* skoMC1 (- 2.)))) 0.) (and (> (* skoSC1 (* skoMC1 (* skoMC1 skoMC1))) (* skoMC1 (* skoMC1 (* skoMC1 (- 1.))))) (<= (* skoSC1 (* skoMC1 (* skoMC1 (* skoMC1 (- 1.))))) (* skoMC1 (* skoMC1 skoMC1)))))))))))))))

% In GRF format:
(sequent " MetiTarski formula " (antecedent (> (* skoSC1 (* skoMC1 (* skoMC1 (* skoMC1 2.)))) (* skoMC1 (* skoMC1 (* skoMC1 (- 2.))))) (<= (* skoSC1 (* skoMC1 (- 1.))) skoMC1) (> (* skoSC1 skoMC1) (* skoMC1 (- 1.))) (<= 0. skoMC1) (> skoMC1 0.) (<= 0. skoSC1) (<= 2. skoMC1) (<= skoSC1 (/ 5. 4.)) (> (* skoMC1 (* skoMC1 (* skoMC1 2.))) 0.) (<= (* skoMC1 (* skoMC1 (* skoMC1 (- 2.)))) 0.) (> (* skoSC1 (* skoMC1 (* skoMC1 skoMC1))) (* skoMC1 (* skoMC1 (* skoMC1 (- 1.)))))) (succedent (> (* skoSC1 (* skoMC1 (* skoMC1 (* skoMC1 (- 1.))))) (* skoMC1 (* skoMC1 skoMC1)))))
-----[end problem]-----

-----[begin problem]-----
% In Mathematica format:
Timing[Resolve[Exists[{skoMC1,skoSC1}, And[skoSC1*(skoMC1*skoMC1*skoMC1+skoSC1*skoMC1*skoMC1*skoMC1)>0,skoSC1*skoMC1*skoMC1*skoMC1*2>skoMC1*skoMC1*skoMC1*-2,skoSC1*skoMC1*-1<=skoMC1,skoSC1*skoMC1>skoMC1*-1,0<=skoMC1,skoMC1>0,0<=skoSC1,2<=skoMC1,skoSC1<=(5/4),skoMC1*skoMC1*skoMC1*2>0,skoMC1*skoMC1*skoMC1*-2<=0,skoSC1*skoMC1*skoMC1*skoMC1>skoMC1*skoMC1*skoMC1*-1,skoSC1*skoMC1*skoMC1*skoMC1*-1<=skoMC1*skoMC1*skoMC1]], Reals]]

% In QepcadB format:
(E skoMC1) (E skoSC1) [[0<(skoSC1 ((skoMC1 skoMC1 skoMC1)+(skoSC1 skoMC1 skoMC1 skoMC1)))]/\[[(skoMC1 skoMC1 skoMC1 (-2))<(skoSC1 skoMC1 skoMC1 skoMC1 (2))]/\[[(skoSC1 skoMC1 (-1))<=skoMC1]/\[[(skoMC1 (-1))<(skoSC1 skoMC1)]/\[[0<=skoMC1]/\[[0<skoMC1]/\[[0<=skoSC1]/\[[2<=skoMC1]/\[[skoSC1<=5/4]/\[[0<(skoMC1 skoMC1 skoMC1 (2))]/\[[(skoMC1 skoMC1 skoMC1 (-2))<=0]/\[[(skoMC1 skoMC1 skoMC1 (-1))<(skoSC1 skoMC1 skoMC1 skoMC1)]/\[(skoSC1 skoMC1 skoMC1 skoMC1 (-1))<=(skoMC1 skoMC1 skoMC1)]]]]]]]]]]]]].

% In SMTLib2 format:
(declare-fun skoMC1 () Real) (declare-fun skoSC1 () Real) (assert (and (> (* skoSC1 (+ (* skoMC1 (* skoMC1 skoMC1)) (* skoSC1 (* skoMC1 (* skoMC1 skoMC1))))) 0.) (and (> (* skoSC1 (* skoMC1 (* skoMC1 (* skoMC1 2.)))) (* skoMC1 (* skoMC1 (* skoMC1 (- 2.))))) (and (<= (* skoSC1 (* skoMC1 (- 1.))) skoMC1) (and (> (* skoSC1 skoMC1) (* skoMC1 (- 1.))) (and (<= 0. skoMC1) (and (> skoMC1 0.) (and (<= 0. skoSC1) (and (<= 2. skoMC1) (and (<= skoSC1 (/ 5. 4.)) (and (> (* skoMC1 (* skoMC1 (* skoMC1 2.))) 0.) (and (<= (* skoMC1 (* skoMC1 (* skoMC1 (- 2.)))) 0.) (and (> (* skoSC1 (* skoMC1 (* skoMC1 skoMC1))) (* skoMC1 (* skoMC1 (* skoMC1 (- 1.))))) (<= (* skoSC1 (* skoMC1 (* skoMC1 (* skoMC1 (- 1.))))) (* skoMC1 (* skoMC1 skoMC1))))))))))))))))

% In GRF format:
(sequent " MetiTarski formula " (antecedent (> (* skoSC1 (+ (* skoMC1 (* skoMC1 skoMC1)) (* skoSC1 (* skoMC1 (* skoMC1 skoMC1))))) 0.) (> (* skoSC1 (* skoMC1 (* skoMC1 (* skoMC1 2.)))) (* skoMC1 (* skoMC1 (* skoMC1 (- 2.))))) (<= (* skoSC1 (* skoMC1 (- 1.))) skoMC1) (> (* skoSC1 skoMC1) (* skoMC1 (- 1.))) (<= 0. skoMC1) (> skoMC1 0.) (<= 0. skoSC1) (<= 2. skoMC1) (<= skoSC1 (/ 5. 4.)) (> (* skoMC1 (* skoMC1 (* skoMC1 2.))) 0.) (<= (* skoMC1 (* skoMC1 (* skoMC1 (- 2.)))) 0.) (> (* skoSC1 (* skoMC1 (* skoMC1 skoMC1))) (* skoMC1 (* skoMC1 (* skoMC1 (- 1.)))))) (succedent (> (* skoSC1 (* skoMC1 (* skoMC1 (* skoMC1 (- 1.))))) (* skoMC1 (* skoMC1 skoMC1)))))
-----[end problem]-----

-----[begin problem]-----
% In Mathematica format:
Timing[Resolve[Exists[{skoMC1,skoSC1}, And[skoSC1*skoMC1*skoMC1*skoMC1*-2<=skoMC1*skoMC1*skoMC1*2,skoSC1*(skoMC1*skoMC1*skoMC1+skoSC1*skoMC1*skoMC1*skoMC1)<=0,skoSC1*skoMC1*skoMC1*skoMC1*2>skoMC1*skoMC1*skoMC1*-2,skoSC1*skoMC1*-1<=skoMC1,skoSC1*skoMC1>skoMC1*-1,0<=skoMC1,skoMC1>0,0<=skoSC1,2<=skoMC1,skoSC1<=(5/4),skoMC1*skoMC1*skoMC1*2>0,skoMC1*skoMC1*skoMC1*-2<=0,skoSC1*skoMC1*skoMC1*skoMC1>skoMC1*skoMC1*skoMC1*-1,skoSC1*skoMC1*skoMC1*skoMC1*-1<=skoMC1*skoMC1*skoMC1]], Reals]]

% In QepcadB format:
(E skoMC1) (E skoSC1) [[(skoSC1 skoMC1 skoMC1 skoMC1 (-2))<=(skoMC1 skoMC1 skoMC1 (2))]/\[[(skoSC1 ((skoMC1 skoMC1 skoMC1)+(skoSC1 skoMC1 skoMC1 skoMC1)))<=0]/\[[(skoMC1 skoMC1 skoMC1 (-2))<(skoSC1 skoMC1 skoMC1 skoMC1 (2))]/\[[(skoSC1 skoMC1 (-1))<=skoMC1]/\[[(skoMC1 (-1))<(skoSC1 skoMC1)]/\[[0<=skoMC1]/\[[0<skoMC1]/\[[0<=skoSC1]/\[[2<=skoMC1]/\[[skoSC1<=5/4]/\[[0<(skoMC1 skoMC1 skoMC1 (2))]/\[[(skoMC1 skoMC1 skoMC1 (-2))<=0]/\[[(skoMC1 skoMC1 skoMC1 (-1))<(skoSC1 skoMC1 skoMC1 skoMC1)]/\[(skoSC1 skoMC1 skoMC1 skoMC1 (-1))<=(skoMC1 skoMC1 skoMC1)]]]]]]]]]]]]]].

% In SMTLib2 format:
(declare-fun skoMC1 () Real) (declare-fun skoSC1 () Real) (assert (and (<= (* skoSC1 (* skoMC1 (* skoMC1 (* skoMC1 (- 2.))))) (* skoMC1 (* skoMC1 (* skoMC1 2.)))) (and (<= (* skoSC1 (+ (* skoMC1 (* skoMC1 skoMC1)) (* skoSC1 (* skoMC1 (* skoMC1 skoMC1))))) 0.) (and (> (* skoSC1 (* skoMC1 (* skoMC1 (* skoMC1 2.)))) (* skoMC1 (* skoMC1 (* skoMC1 (- 2.))))) (and (<= (* skoSC1 (* skoMC1 (- 1.))) skoMC1) (and (> (* skoSC1 skoMC1) (* skoMC1 (- 1.))) (and (<= 0. skoMC1) (and (> skoMC1 0.) (and (<= 0. skoSC1) (and (<= 2. skoMC1) (and (<= skoSC1 (/ 5. 4.)) (and (> (* skoMC1 (* skoMC1 (* skoMC1 2.))) 0.) (and (<= (* skoMC1 (* skoMC1 (* skoMC1 (- 2.)))) 0.) (and (> (* skoSC1 (* skoMC1 (* skoMC1 skoMC1))) (* skoMC1 (* skoMC1 (* skoMC1 (- 1.))))) (<= (* skoSC1 (* skoMC1 (* skoMC1 (* skoMC1 (- 1.))))) (* skoMC1 (* skoMC1 skoMC1)))))))))))))))))

% In GRF format:
(sequent " MetiTarski formula " (antecedent (<= (* skoSC1 (* skoMC1 (* skoMC1 (* skoMC1 (- 2.))))) (* skoMC1 (* skoMC1 (* skoMC1 2.)))) (<= (* skoSC1 (+ (* skoMC1 (* skoMC1 skoMC1)) (* skoSC1 (* skoMC1 (* skoMC1 skoMC1))))) 0.) (> (* skoSC1 (* skoMC1 (* skoMC1 (* skoMC1 2.)))) (* skoMC1 (* skoMC1 (* skoMC1 (- 2.))))) (<= (* skoSC1 (* skoMC1 (- 1.))) skoMC1) (> (* skoSC1 skoMC1) (* skoMC1 (- 1.))) (<= 0. skoMC1) (> skoMC1 0.) (<= 0. skoSC1) (<= 2. skoMC1) (<= skoSC1 (/ 5. 4.)) (> (* skoMC1 (* skoMC1 (* skoMC1 2.))) 0.) (<= (* skoMC1 (* skoMC1 (* skoMC1 (- 2.)))) 0.) (> (* skoSC1 (* skoMC1 (* skoMC1 skoMC1))) (* skoMC1 (* skoMC1 (* skoMC1 (- 1.)))))) (succedent (> (* skoSC1 (* skoMC1 (* skoMC1 (* skoMC1 (- 1.))))) (* skoMC1 (* skoMC1 skoMC1)))))
-----[end problem]-----

-----[begin problem]-----
% In Mathematica format:
Timing[Resolve[Exists[{skoMC1,skoSC1}, And[skoSC1*skoMC1*skoMC1*skoMC1*-2<=skoMC1*skoMC1*skoMC1*2,skoSC1*skoMC1*skoMC1*skoMC1*2>skoMC1*skoMC1*skoMC1*-2,skoSC1*skoMC1*-1<=skoMC1,skoSC1*skoMC1>skoMC1*-1,0<=skoMC1,skoMC1>0,0<=skoSC1,2<=skoMC1,skoSC1<=(5/4),skoMC1*skoMC1*skoMC1*2>0,skoMC1*skoMC1*skoMC1*-2<=0,skoSC1*skoMC1*skoMC1*skoMC1>skoMC1*skoMC1*skoMC1*-1,skoSC1*skoMC1*skoMC1*skoMC1*-1<=skoMC1*skoMC1*skoMC1]], Reals]]

% In QepcadB format:
(E skoMC1) (E skoSC1) [[(skoSC1 skoMC1 skoMC1 skoMC1 (-2))<=(skoMC1 skoMC1 skoMC1 (2))]/\[[(skoMC1 skoMC1 skoMC1 (-2))<(skoSC1 skoMC1 skoMC1 skoMC1 (2))]/\[[(skoSC1 skoMC1 (-1))<=skoMC1]/\[[(skoMC1 (-1))<(skoSC1 skoMC1)]/\[[0<=skoMC1]/\[[0<skoMC1]/\[[0<=skoSC1]/\[[2<=skoMC1]/\[[skoSC1<=5/4]/\[[0<(skoMC1 skoMC1 skoMC1 (2))]/\[[(skoMC1 skoMC1 skoMC1 (-2))<=0]/\[[(skoMC1 skoMC1 skoMC1 (-1))<(skoSC1 skoMC1 skoMC1 skoMC1)]/\[(skoSC1 skoMC1 skoMC1 skoMC1 (-1))<=(skoMC1 skoMC1 skoMC1)]]]]]]]]]]]]].

% In SMTLib2 format:
(declare-fun skoMC1 () Real) (declare-fun skoSC1 () Real) (assert (and (<= (* skoSC1 (* skoMC1 (* skoMC1 (* skoMC1 (- 2.))))) (* skoMC1 (* skoMC1 (* skoMC1 2.)))) (and (> (* skoSC1 (* skoMC1 (* skoMC1 (* skoMC1 2.)))) (* skoMC1 (* skoMC1 (* skoMC1 (- 2.))))) (and (<= (* skoSC1 (* skoMC1 (- 1.))) skoMC1) (and (> (* skoSC1 skoMC1) (* skoMC1 (- 1.))) (and (<= 0. skoMC1) (and (> skoMC1 0.) (and (<= 0. skoSC1) (and (<= 2. skoMC1) (and (<= skoSC1 (/ 5. 4.)) (and (> (* skoMC1 (* skoMC1 (* skoMC1 2.))) 0.) (and (<= (* skoMC1 (* skoMC1 (* skoMC1 (- 2.)))) 0.) (and (> (* skoSC1 (* skoMC1 (* skoMC1 skoMC1))) (* skoMC1 (* skoMC1 (* skoMC1 (- 1.))))) (<= (* skoSC1 (* skoMC1 (* skoMC1 (* skoMC1 (- 1.))))) (* skoMC1 (* skoMC1 skoMC1))))))))))))))))

% In GRF format:
(sequent " MetiTarski formula " (antecedent (<= (* skoSC1 (* skoMC1 (* skoMC1 (* skoMC1 (- 2.))))) (* skoMC1 (* skoMC1 (* skoMC1 2.)))) (> (* skoSC1 (* skoMC1 (* skoMC1 (* skoMC1 2.)))) (* skoMC1 (* skoMC1 (* skoMC1 (- 2.))))) (<= (* skoSC1 (* skoMC1 (- 1.))) skoMC1) (> (* skoSC1 skoMC1) (* skoMC1 (- 1.))) (<= 0. skoMC1) (> skoMC1 0.) (<= 0. skoSC1) (<= 2. skoMC1) (<= skoSC1 (/ 5. 4.)) (> (* skoMC1 (* skoMC1 (* skoMC1 2.))) 0.) (<= (* skoMC1 (* skoMC1 (* skoMC1 (- 2.)))) 0.) (> (* skoSC1 (* skoMC1 (* skoMC1 skoMC1))) (* skoMC1 (* skoMC1 (* skoMC1 (- 1.)))))) (succedent (> (* skoSC1 (* skoMC1 (* skoMC1 (* skoMC1 (- 1.))))) (* skoMC1 (* skoMC1 skoMC1)))))
-----[end problem]-----

-----[begin problem]-----
% In Mathematica format:
Timing[Resolve[Exists[{skoMC1,skoSC1}, And[skoSC1*skoMC1*skoMC1*skoMC1*-2<=skoMC1*skoMC1*skoMC1*2,skoSC1*skoMC1*skoMC1*skoMC1*2>skoMC1*skoMC1*skoMC1*-2,skoSC1*skoMC1*skoMC1*skoMC1*2>skoMC1*skoMC1*skoMC1*-2,skoSC1*skoMC1*-1<=skoMC1,skoSC1*skoMC1>skoMC1*-1,0<=skoMC1,skoMC1>0,0<=skoSC1,2<=skoMC1,skoSC1<=(5/4),skoMC1*skoMC1*skoMC1*2>0,skoMC1*skoMC1*skoMC1*-2<=0,skoSC1*skoMC1*skoMC1*skoMC1>skoMC1*skoMC1*skoMC1*-1,skoSC1*skoMC1*skoMC1*skoMC1*-1<=skoMC1*skoMC1*skoMC1]], Reals]]

% In QepcadB format:
(E skoMC1) (E skoSC1) [[(skoSC1 skoMC1 skoMC1 skoMC1 (-2))<=(skoMC1 skoMC1 skoMC1 (2))]/\[[(skoMC1 skoMC1 skoMC1 (-2))<(skoSC1 skoMC1 skoMC1 skoMC1 (2))]/\[[(skoMC1 skoMC1 skoMC1 (-2))<(skoSC1 skoMC1 skoMC1 skoMC1 (2))]/\[[(skoSC1 skoMC1 (-1))<=skoMC1]/\[[(skoMC1 (-1))<(skoSC1 skoMC1)]/\[[0<=skoMC1]/\[[0<skoMC1]/\[[0<=skoSC1]/\[[2<=skoMC1]/\[[skoSC1<=5/4]/\[[0<(skoMC1 skoMC1 skoMC1 (2))]/\[[(skoMC1 skoMC1 skoMC1 (-2))<=0]/\[[(skoMC1 skoMC1 skoMC1 (-1))<(skoSC1 skoMC1 skoMC1 skoMC1)]/\[(skoSC1 skoMC1 skoMC1 skoMC1 (-1))<=(skoMC1 skoMC1 skoMC1)]]]]]]]]]]]]]].

% In SMTLib2 format:
(declare-fun skoMC1 () Real) (declare-fun skoSC1 () Real) (assert (and (<= (* skoSC1 (* skoMC1 (* skoMC1 (* skoMC1 (- 2.))))) (* skoMC1 (* skoMC1 (* skoMC1 2.)))) (and (> (* skoSC1 (* skoMC1 (* skoMC1 (* skoMC1 2.)))) (* skoMC1 (* skoMC1 (* skoMC1 (- 2.))))) (and (> (* skoSC1 (* skoMC1 (* skoMC1 (* skoMC1 2.)))) (* skoMC1 (* skoMC1 (* skoMC1 (- 2.))))) (and (<= (* skoSC1 (* skoMC1 (- 1.))) skoMC1) (and (> (* skoSC1 skoMC1) (* skoMC1 (- 1.))) (and (<= 0. skoMC1) (and (> skoMC1 0.) (and (<= 0. skoSC1) (and (<= 2. skoMC1) (and (<= skoSC1 (/ 5. 4.)) (and (> (* skoMC1 (* skoMC1 (* skoMC1 2.))) 0.) (and (<= (* skoMC1 (* skoMC1 (* skoMC1 (- 2.)))) 0.) (and (> (* skoSC1 (* skoMC1 (* skoMC1 skoMC1))) (* skoMC1 (* skoMC1 (* skoMC1 (- 1.))))) (<= (* skoSC1 (* skoMC1 (* skoMC1 (* skoMC1 (- 1.))))) (* skoMC1 (* skoMC1 skoMC1)))))))))))))))))

% In GRF format:
(sequent " MetiTarski formula " (antecedent (<= (* skoSC1 (* skoMC1 (* skoMC1 (* skoMC1 (- 2.))))) (* skoMC1 (* skoMC1 (* skoMC1 2.)))) (> (* skoSC1 (* skoMC1 (* skoMC1 (* skoMC1 2.)))) (* skoMC1 (* skoMC1 (* skoMC1 (- 2.))))) (> (* skoSC1 (* skoMC1 (* skoMC1 (* skoMC1 2.)))) (* skoMC1 (* skoMC1 (* skoMC1 (- 2.))))) (<= (* skoSC1 (* skoMC1 (- 1.))) skoMC1) (> (* skoSC1 skoMC1) (* skoMC1 (- 1.))) (<= 0. skoMC1) (> skoMC1 0.) (<= 0. skoSC1) (<= 2. skoMC1) (<= skoSC1 (/ 5. 4.)) (> (* skoMC1 (* skoMC1 (* skoMC1 2.))) 0.) (<= (* skoMC1 (* skoMC1 (* skoMC1 (- 2.)))) 0.) (> (* skoSC1 (* skoMC1 (* skoMC1 skoMC1))) (* skoMC1 (* skoMC1 (* skoMC1 (- 1.)))))) (succedent (> (* skoSC1 (* skoMC1 (* skoMC1 (* skoMC1 (- 1.))))) (* skoMC1 (* skoMC1 skoMC1)))))
-----[end problem]-----

-----[begin problem]-----
% In Mathematica format:
Timing[Resolve[Exists[{skoMC1,skoSC1}, And[skoSC1*skoMC1*skoMC1*skoMC1*-2<=skoMC1*skoMC1*skoMC1*2,skoSC1*skoMC1*skoMC1*skoMC1*2>skoMC1*skoMC1*skoMC1*-2,skoSC1*skoMC1*-1<=skoMC1,skoSC1*skoMC1>skoMC1*-1,0<=skoMC1,skoMC1>0,0<=skoSC1,2<=skoMC1,skoSC1<=(5/4),skoMC1*skoMC1*skoMC1*2>0,skoMC1*skoMC1*skoMC1*-2<=0,skoSC1*skoMC1*skoMC1*skoMC1>skoMC1*skoMC1*skoMC1*-1,skoSC1*skoMC1*skoMC1*skoMC1*-1<=skoMC1*skoMC1*skoMC1]], Reals]]

% In QepcadB format:
(E skoMC1) (E skoSC1) [[(skoSC1 skoMC1 skoMC1 skoMC1 (-2))<=(skoMC1 skoMC1 skoMC1 (2))]/\[[(skoMC1 skoMC1 skoMC1 (-2))<(skoSC1 skoMC1 skoMC1 skoMC1 (2))]/\[[(skoSC1 skoMC1 (-1))<=skoMC1]/\[[(skoMC1 (-1))<(skoSC1 skoMC1)]/\[[0<=skoMC1]/\[[0<skoMC1]/\[[0<=skoSC1]/\[[2<=skoMC1]/\[[skoSC1<=5/4]/\[[0<(skoMC1 skoMC1 skoMC1 (2))]/\[[(skoMC1 skoMC1 skoMC1 (-2))<=0]/\[[(skoMC1 skoMC1 skoMC1 (-1))<(skoSC1 skoMC1 skoMC1 skoMC1)]/\[(skoSC1 skoMC1 skoMC1 skoMC1 (-1))<=(skoMC1 skoMC1 skoMC1)]]]]]]]]]]]]].

% In SMTLib2 format:
(declare-fun skoMC1 () Real) (declare-fun skoSC1 () Real) (assert (and (<= (* skoSC1 (* skoMC1 (* skoMC1 (* skoMC1 (- 2.))))) (* skoMC1 (* skoMC1 (* skoMC1 2.)))) (and (> (* skoSC1 (* skoMC1 (* skoMC1 (* skoMC1 2.)))) (* skoMC1 (* skoMC1 (* skoMC1 (- 2.))))) (and (<= (* skoSC1 (* skoMC1 (- 1.))) skoMC1) (and (> (* skoSC1 skoMC1) (* skoMC1 (- 1.))) (and (<= 0. skoMC1) (and (> skoMC1 0.) (and (<= 0. skoSC1) (and (<= 2. skoMC1) (and (<= skoSC1 (/ 5. 4.)) (and (> (* skoMC1 (* skoMC1 (* skoMC1 2.))) 0.) (and (<= (* skoMC1 (* skoMC1 (* skoMC1 (- 2.)))) 0.) (and (> (* skoSC1 (* skoMC1 (* skoMC1 skoMC1))) (* skoMC1 (* skoMC1 (* skoMC1 (- 1.))))) (<= (* skoSC1 (* skoMC1 (* skoMC1 (* skoMC1 (- 1.))))) (* skoMC1 (* skoMC1 skoMC1))))))))))))))))

% In GRF format:
(sequent " MetiTarski formula " (antecedent (<= (* skoSC1 (* skoMC1 (* skoMC1 (* skoMC1 (- 2.))))) (* skoMC1 (* skoMC1 (* skoMC1 2.)))) (> (* skoSC1 (* skoMC1 (* skoMC1 (* skoMC1 2.)))) (* skoMC1 (* skoMC1 (* skoMC1 (- 2.))))) (<= (* skoSC1 (* skoMC1 (- 1.))) skoMC1) (> (* skoSC1 skoMC1) (* skoMC1 (- 1.))) (<= 0. skoMC1) (> skoMC1 0.) (<= 0. skoSC1) (<= 2. skoMC1) (<= skoSC1 (/ 5. 4.)) (> (* skoMC1 (* skoMC1 (* skoMC1 2.))) 0.) (<= (* skoMC1 (* skoMC1 (* skoMC1 (- 2.)))) 0.) (> (* skoSC1 (* skoMC1 (* skoMC1 skoMC1))) (* skoMC1 (* skoMC1 (* skoMC1 (- 1.)))))) (succedent (> (* skoSC1 (* skoMC1 (* skoMC1 (* skoMC1 (- 1.))))) (* skoMC1 (* skoMC1 skoMC1)))))
-----[end problem]-----

-----[begin problem]-----
% In Mathematica format:
Timing[Resolve[Exists[{skoMC1,skoSC1}, And[skoSC1*skoMC1*skoMC1*skoMC1*-2<=skoMC1*skoMC1*skoMC1*2,skoSC1*skoMC1*skoMC1*skoMC1*-2<=skoMC1*skoMC1*skoMC1*2,skoSC1*skoMC1*skoMC1*skoMC1*2>skoMC1*skoMC1*skoMC1*-2,skoSC1*skoMC1*-1<=skoMC1,skoSC1*skoMC1>skoMC1*-1,0<=skoMC1,skoMC1>0,0<=skoSC1,2<=skoMC1,skoSC1<=(5/4),skoMC1*skoMC1*skoMC1*2>0,skoMC1*skoMC1*skoMC1*-2<=0,skoSC1*skoMC1*skoMC1*skoMC1>skoMC1*skoMC1*skoMC1*-1,skoSC1*skoMC1*skoMC1*skoMC1*-1<=skoMC1*skoMC1*skoMC1]], Reals]]

% In QepcadB format:
(E skoMC1) (E skoSC1) [[(skoSC1 skoMC1 skoMC1 skoMC1 (-2))<=(skoMC1 skoMC1 skoMC1 (2))]/\[[(skoSC1 skoMC1 skoMC1 skoMC1 (-2))<=(skoMC1 skoMC1 skoMC1 (2))]/\[[(skoMC1 skoMC1 skoMC1 (-2))<(skoSC1 skoMC1 skoMC1 skoMC1 (2))]/\[[(skoSC1 skoMC1 (-1))<=skoMC1]/\[[(skoMC1 (-1))<(skoSC1 skoMC1)]/\[[0<=skoMC1]/\[[0<skoMC1]/\[[0<=skoSC1]/\[[2<=skoMC1]/\[[skoSC1<=5/4]/\[[0<(skoMC1 skoMC1 skoMC1 (2))]/\[[(skoMC1 skoMC1 skoMC1 (-2))<=0]/\[[(skoMC1 skoMC1 skoMC1 (-1))<(skoSC1 skoMC1 skoMC1 skoMC1)]/\[(skoSC1 skoMC1 skoMC1 skoMC1 (-1))<=(skoMC1 skoMC1 skoMC1)]]]]]]]]]]]]]].

% In SMTLib2 format:
(declare-fun skoMC1 () Real) (declare-fun skoSC1 () Real) (assert (and (<= (* skoSC1 (* skoMC1 (* skoMC1 (* skoMC1 (- 2.))))) (* skoMC1 (* skoMC1 (* skoMC1 2.)))) (and (<= (* skoSC1 (* skoMC1 (* skoMC1 (* skoMC1 (- 2.))))) (* skoMC1 (* skoMC1 (* skoMC1 2.)))) (and (> (* skoSC1 (* skoMC1 (* skoMC1 (* skoMC1 2.)))) (* skoMC1 (* skoMC1 (* skoMC1 (- 2.))))) (and (<= (* skoSC1 (* skoMC1 (- 1.))) skoMC1) (and (> (* skoSC1 skoMC1) (* skoMC1 (- 1.))) (and (<= 0. skoMC1) (and (> skoMC1 0.) (and (<= 0. skoSC1) (and (<= 2. skoMC1) (and (<= skoSC1 (/ 5. 4.)) (and (> (* skoMC1 (* skoMC1 (* skoMC1 2.))) 0.) (and (<= (* skoMC1 (* skoMC1 (* skoMC1 (- 2.)))) 0.) (and (> (* skoSC1 (* skoMC1 (* skoMC1 skoMC1))) (* skoMC1 (* skoMC1 (* skoMC1 (- 1.))))) (<= (* skoSC1 (* skoMC1 (* skoMC1 (* skoMC1 (- 1.))))) (* skoMC1 (* skoMC1 skoMC1)))))))))))))))))

% In GRF format:
(sequent " MetiTarski formula " (antecedent (<= (* skoSC1 (* skoMC1 (* skoMC1 (* skoMC1 (- 2.))))) (* skoMC1 (* skoMC1 (* skoMC1 2.)))) (<= (* skoSC1 (* skoMC1 (* skoMC1 (* skoMC1 (- 2.))))) (* skoMC1 (* skoMC1 (* skoMC1 2.)))) (> (* skoSC1 (* skoMC1 (* skoMC1 (* skoMC1 2.)))) (* skoMC1 (* skoMC1 (* skoMC1 (- 2.))))) (<= (* skoSC1 (* skoMC1 (- 1.))) skoMC1) (> (* skoSC1 skoMC1) (* skoMC1 (- 1.))) (<= 0. skoMC1) (> skoMC1 0.) (<= 0. skoSC1) (<= 2. skoMC1) (<= skoSC1 (/ 5. 4.)) (> (* skoMC1 (* skoMC1 (* skoMC1 2.))) 0.) (<= (* skoMC1 (* skoMC1 (* skoMC1 (- 2.)))) 0.) (> (* skoSC1 (* skoMC1 (* skoMC1 skoMC1))) (* skoMC1 (* skoMC1 (* skoMC1 (- 1.)))))) (succedent (> (* skoSC1 (* skoMC1 (* skoMC1 (* skoMC1 (- 1.))))) (* skoMC1 (* skoMC1 skoMC1)))))
-----[end problem]-----

-----[begin problem]-----
% In Mathematica format:
Timing[Resolve[Exists[{skoMC1,skoSC1}, And[skoSC1*skoMC1*skoMC1*skoMC1*-2<=skoMC1*skoMC1*skoMC1*2,skoSC1*(skoMC1*skoMC1*skoMC1+skoSC1*skoMC1*skoMC1*skoMC1)<=0,skoSC1*skoMC1*skoMC1*skoMC1*-2<=skoMC1*skoMC1*skoMC1*2,skoSC1*skoMC1*skoMC1*skoMC1*2>skoMC1*skoMC1*skoMC1*-2,skoSC1*skoMC1*-1<=skoMC1,skoSC1*skoMC1>skoMC1*-1,0<=skoMC1,skoMC1>0,0<=skoSC1,2<=skoMC1,skoSC1<=(5/4),skoMC1*skoMC1*skoMC1*2>0,skoMC1*skoMC1*skoMC1*-2<=0,skoSC1*skoMC1*skoMC1*skoMC1>skoMC1*skoMC1*skoMC1*-1,skoSC1*skoMC1*skoMC1*skoMC1*-1<=skoMC1*skoMC1*skoMC1]], Reals]]

% In QepcadB format:
(E skoMC1) (E skoSC1) [[(skoSC1 skoMC1 skoMC1 skoMC1 (-2))<=(skoMC1 skoMC1 skoMC1 (2))]/\[[(skoSC1 ((skoMC1 skoMC1 skoMC1)+(skoSC1 skoMC1 skoMC1 skoMC1)))<=0]/\[[(skoSC1 skoMC1 skoMC1 skoMC1 (-2))<=(skoMC1 skoMC1 skoMC1 (2))]/\[[(skoMC1 skoMC1 skoMC1 (-2))<(skoSC1 skoMC1 skoMC1 skoMC1 (2))]/\[[(skoSC1 skoMC1 (-1))<=skoMC1]/\[[(skoMC1 (-1))<(skoSC1 skoMC1)]/\[[0<=skoMC1]/\[[0<skoMC1]/\[[0<=skoSC1]/\[[2<=skoMC1]/\[[skoSC1<=5/4]/\[[0<(skoMC1 skoMC1 skoMC1 (2))]/\[[(skoMC1 skoMC1 skoMC1 (-2))<=0]/\[[(skoMC1 skoMC1 skoMC1 (-1))<(skoSC1 skoMC1 skoMC1 skoMC1)]/\[(skoSC1 skoMC1 skoMC1 skoMC1 (-1))<=(skoMC1 skoMC1 skoMC1)]]]]]]]]]]]]]]].

% In SMTLib2 format:
(declare-fun skoMC1 () Real) (declare-fun skoSC1 () Real) (assert (and (<= (* skoSC1 (* skoMC1 (* skoMC1 (* skoMC1 (- 2.))))) (* skoMC1 (* skoMC1 (* skoMC1 2.)))) (and (<= (* skoSC1 (+ (* skoMC1 (* skoMC1 skoMC1)) (* skoSC1 (* skoMC1 (* skoMC1 skoMC1))))) 0.) (and (<= (* skoSC1 (* skoMC1 (* skoMC1 (* skoMC1 (- 2.))))) (* skoMC1 (* skoMC1 (* skoMC1 2.)))) (and (> (* skoSC1 (* skoMC1 (* skoMC1 (* skoMC1 2.)))) (* skoMC1 (* skoMC1 (* skoMC1 (- 2.))))) (and (<= (* skoSC1 (* skoMC1 (- 1.))) skoMC1) (and (> (* skoSC1 skoMC1) (* skoMC1 (- 1.))) (and (<= 0. skoMC1) (and (> skoMC1 0.) (and (<= 0. skoSC1) (and (<= 2. skoMC1) (and (<= skoSC1 (/ 5. 4.)) (and (> (* skoMC1 (* skoMC1 (* skoMC1 2.))) 0.) (and (<= (* skoMC1 (* skoMC1 (* skoMC1 (- 2.)))) 0.) (and (> (* skoSC1 (* skoMC1 (* skoMC1 skoMC1))) (* skoMC1 (* skoMC1 (* skoMC1 (- 1.))))) (<= (* skoSC1 (* skoMC1 (* skoMC1 (* skoMC1 (- 1.))))) (* skoMC1 (* skoMC1 skoMC1))))))))))))))))))

% In GRF format:
(sequent " MetiTarski formula " (antecedent (<= (* skoSC1 (* skoMC1 (* skoMC1 (* skoMC1 (- 2.))))) (* skoMC1 (* skoMC1 (* skoMC1 2.)))) (<= (* skoSC1 (+ (* skoMC1 (* skoMC1 skoMC1)) (* skoSC1 (* skoMC1 (* skoMC1 skoMC1))))) 0.) (<= (* skoSC1 (* skoMC1 (* skoMC1 (* skoMC1 (- 2.))))) (* skoMC1 (* skoMC1 (* skoMC1 2.)))) (> (* skoSC1 (* skoMC1 (* skoMC1 (* skoMC1 2.)))) (* skoMC1 (* skoMC1 (* skoMC1 (- 2.))))) (<= (* skoSC1 (* skoMC1 (- 1.))) skoMC1) (> (* skoSC1 skoMC1) (* skoMC1 (- 1.))) (<= 0. skoMC1) (> skoMC1 0.) (<= 0. skoSC1) (<= 2. skoMC1) (<= skoSC1 (/ 5. 4.)) (> (* skoMC1 (* skoMC1 (* skoMC1 2.))) 0.) (<= (* skoMC1 (* skoMC1 (* skoMC1 (- 2.)))) 0.) (> (* skoSC1 (* skoMC1 (* skoMC1 skoMC1))) (* skoMC1 (* skoMC1 (* skoMC1 (- 1.)))))) (succedent (> (* skoSC1 (* skoMC1 (* skoMC1 (* skoMC1 (- 1.))))) (* skoMC1 (* skoMC1 skoMC1)))))
-----[end problem]-----

-----[begin problem]-----
% In Mathematica format:
Timing[Resolve[Exists[{skoSC1,skoMC1}, And[skoSC1*(skoMC1*skoMC1*skoMC1+skoSC1*skoMC1*skoMC1*skoMC1)<=0,skoSC1*skoMC1*skoMC1*skoMC1*2>skoMC1*skoMC1*skoMC1*-2,skoSC1*(skoMC1*skoMC1*skoMC1*skoMC1*12+skoSC1*(skoMC1*skoMC1*skoMC1*(-1+skoMC1*6)+skoSC1*(skoMC1*skoMC1*skoMC1*-1+skoSC1*(skoMC1*skoMC1*skoMC1*(1/12)+skoSC1*skoMC1*skoMC1*skoMC1*(1/12)))))>skoMC1*skoMC1*skoMC1*(-2+skoMC1*-6),skoSC1*skoMC1*skoMC1*skoMC1*-2<=skoMC1*skoMC1*skoMC1*2,skoSC1*skoMC1*skoMC1*skoMC1*2>skoMC1*skoMC1*skoMC1*-2,skoSC1*skoMC1*-1<=skoMC1,skoSC1*skoMC1>skoMC1*-1,0<=skoMC1,skoMC1>0,0<=skoSC1,2<=skoMC1,skoSC1<=(5/4),skoMC1*skoMC1*skoMC1*2>0,skoMC1*skoMC1*skoMC1*-2<=0,skoSC1*skoMC1*skoMC1*skoMC1>skoMC1*skoMC1*skoMC1*-1,skoSC1*skoMC1*skoMC1*skoMC1*-1<=skoMC1*skoMC1*skoMC1]], Reals]]

% In QepcadB format:
(E skoSC1) (E skoMC1) [[(skoSC1 ((skoMC1 skoMC1 skoMC1)+(skoSC1 skoMC1 skoMC1 skoMC1)))<=0]/\[[(skoMC1 skoMC1 skoMC1 (-2))<(skoSC1 skoMC1 skoMC1 skoMC1 (2))]/\[[(skoMC1 skoMC1 skoMC1 (-2+(skoMC1 (-6))))<(skoSC1 ((skoMC1 skoMC1 skoMC1 skoMC1 (12))+(skoSC1 ((skoMC1 skoMC1 skoMC1 (-1+(skoMC1 (6))))+(skoSC1 ((skoMC1 skoMC1 skoMC1 (-1))+(skoSC1 ((skoMC1 skoMC1 skoMC1 (1/12))+(skoSC1 skoMC1 skoMC1 skoMC1 (1/12))))))))))]/\[[(skoSC1 skoMC1 skoMC1 skoMC1 (-2))<=(skoMC1 skoMC1 skoMC1 (2))]/\[[(skoMC1 skoMC1 skoMC1 (-2))<(skoSC1 skoMC1 skoMC1 skoMC1 (2))]/\[[(skoSC1 skoMC1 (-1))<=skoMC1]/\[[(skoMC1 (-1))<(skoSC1 skoMC1)]/\[[0<=skoMC1]/\[[0<skoMC1]/\[[0<=skoSC1]/\[[2<=skoMC1]/\[[skoSC1<=5/4]/\[[0<(skoMC1 skoMC1 skoMC1 (2))]/\[[(skoMC1 skoMC1 skoMC1 (-2))<=0]/\[[(skoMC1 skoMC1 skoMC1 (-1))<(skoSC1 skoMC1 skoMC1 skoMC1)]/\[(skoSC1 skoMC1 skoMC1 skoMC1 (-1))<=(skoMC1 skoMC1 skoMC1)]]]]]]]]]]]]]]]].

% In SMTLib2 format:
(declare-fun skoSC1 () Real) (declare-fun skoMC1 () Real) (assert (and (<= (* skoSC1 (+ (* skoMC1 (* skoMC1 skoMC1)) (* skoSC1 (* skoMC1 (* skoMC1 skoMC1))))) 0.) (and (> (* skoSC1 (* skoMC1 (* skoMC1 (* skoMC1 2.)))) (* skoMC1 (* skoMC1 (* skoMC1 (- 2.))))) (and (> (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (* skoMC1 12.)))) (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (+ (- 1.) (* skoMC1 6.))))) (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (- 1.)))) (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (/ 1. 12.)))) (* skoSC1 (* skoMC1 (* skoMC1 (* skoMC1 (/ 1. 12.))))))))))))) (* skoMC1 (* skoMC1 (* skoMC1 (+ (- 2.) (* skoMC1 (- 6.))))))) (and (<= (* skoSC1 (* skoMC1 (* skoMC1 (* skoMC1 (- 2.))))) (* skoMC1 (* skoMC1 (* skoMC1 2.)))) (and (> (* skoSC1 (* skoMC1 (* skoMC1 (* skoMC1 2.)))) (* skoMC1 (* skoMC1 (* skoMC1 (- 2.))))) (and (<= (* skoSC1 (* skoMC1 (- 1.))) skoMC1) (and (> (* skoSC1 skoMC1) (* skoMC1 (- 1.))) (and (<= 0. skoMC1) (and (> skoMC1 0.) (and (<= 0. skoSC1) (and (<= 2. skoMC1) (and (<= skoSC1 (/ 5. 4.)) (and (> (* skoMC1 (* skoMC1 (* skoMC1 2.))) 0.) (and (<= (* skoMC1 (* skoMC1 (* skoMC1 (- 2.)))) 0.) (and (> (* skoSC1 (* skoMC1 (* skoMC1 skoMC1))) (* skoMC1 (* skoMC1 (* skoMC1 (- 1.))))) (<= (* skoSC1 (* skoMC1 (* skoMC1 (* skoMC1 (- 1.))))) (* skoMC1 (* skoMC1 skoMC1)))))))))))))))))))

% In GRF format:
(sequent " MetiTarski formula " (antecedent (<= (* skoSC1 (+ (* skoMC1 (* skoMC1 skoMC1)) (* skoSC1 (* skoMC1 (* skoMC1 skoMC1))))) 0.) (> (* skoSC1 (* skoMC1 (* skoMC1 (* skoMC1 2.)))) (* skoMC1 (* skoMC1 (* skoMC1 (- 2.))))) (> (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (* skoMC1 12.)))) (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (+ (- 1.) (* skoMC1 6.))))) (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (- 1.)))) (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (/ 1. 12.)))) (* skoSC1 (* skoMC1 (* skoMC1 (* skoMC1 (/ 1. 12.))))))))))))) (* skoMC1 (* skoMC1 (* skoMC1 (+ (- 2.) (* skoMC1 (- 6.))))))) (<= (* skoSC1 (* skoMC1 (* skoMC1 (* skoMC1 (- 2.))))) (* skoMC1 (* skoMC1 (* skoMC1 2.)))) (> (* skoSC1 (* skoMC1 (* skoMC1 (* skoMC1 2.)))) (* skoMC1 (* skoMC1 (* skoMC1 (- 2.))))) (<= (* skoSC1 (* skoMC1 (- 1.))) skoMC1) (> (* skoSC1 skoMC1) (* skoMC1 (- 1.))) (<= 0. skoMC1) (> skoMC1 0.) (<= 0. skoSC1) (<= 2. skoMC1) (<= skoSC1 (/ 5. 4.)) (> (* skoMC1 (* skoMC1 (* skoMC1 2.))) 0.) (<= (* skoMC1 (* skoMC1 (* skoMC1 (- 2.)))) 0.) (> (* skoSC1 (* skoMC1 (* skoMC1 skoMC1))) (* skoMC1 (* skoMC1 (* skoMC1 (- 1.)))))) (succedent (> (* skoSC1 (* skoMC1 (* skoMC1 (* skoMC1 (- 1.))))) (* skoMC1 (* skoMC1 skoMC1)))))
-----[end problem]-----

-----[begin problem]-----
% In Mathematica format:
Timing[Resolve[Exists[{skoSC1,skoMC1}, And[skoSC1*skoMC1*skoMC1*skoMC1*2<=skoMC1*skoMC1*skoMC1*-2,skoSC1*(skoMC1*skoMC1*skoMC1*skoMC1*12+skoSC1*(skoMC1*skoMC1*skoMC1*(-1+skoMC1*6)+skoSC1*(skoMC1*skoMC1*skoMC1*-1+skoSC1*(skoMC1*skoMC1*skoMC1*(1/12)+skoSC1*skoMC1*skoMC1*skoMC1*(1/12)))))<=skoMC1*skoMC1*skoMC1*(-2+skoMC1*-6),skoSC1*(skoMC1*skoMC1*skoMC1+skoSC1*skoMC1*skoMC1*skoMC1)<=0,skoSC1*skoMC1*skoMC1*skoMC1*-2<=skoMC1*skoMC1*skoMC1*2,skoSC1*skoMC1*skoMC1*skoMC1*2>skoMC1*skoMC1*skoMC1*-2,skoSC1*skoMC1*-1<=skoMC1,skoSC1*skoMC1>skoMC1*-1,0<=skoMC1,skoMC1>0,0<=skoSC1,2<=skoMC1,skoSC1<=(5/4),skoMC1*skoMC1*skoMC1*2>0,skoMC1*skoMC1*skoMC1*-2<=0,skoSC1*skoMC1*skoMC1*skoMC1>skoMC1*skoMC1*skoMC1*-1,skoSC1*skoMC1*skoMC1*skoMC1*-1<=skoMC1*skoMC1*skoMC1]], Reals]]

% In QepcadB format:
(E skoSC1) (E skoMC1) [[(skoSC1 skoMC1 skoMC1 skoMC1 (2))<=(skoMC1 skoMC1 skoMC1 (-2))]/\[[(skoSC1 ((skoMC1 skoMC1 skoMC1 skoMC1 (12))+(skoSC1 ((skoMC1 skoMC1 skoMC1 (-1+(skoMC1 (6))))+(skoSC1 ((skoMC1 skoMC1 skoMC1 (-1))+(skoSC1 ((skoMC1 skoMC1 skoMC1 (1/12))+(skoSC1 skoMC1 skoMC1 skoMC1 (1/12))))))))))<=(skoMC1 skoMC1 skoMC1 (-2+(skoMC1 (-6))))]/\[[(skoSC1 ((skoMC1 skoMC1 skoMC1)+(skoSC1 skoMC1 skoMC1 skoMC1)))<=0]/\[[(skoSC1 skoMC1 skoMC1 skoMC1 (-2))<=(skoMC1 skoMC1 skoMC1 (2))]/\[[(skoMC1 skoMC1 skoMC1 (-2))<(skoSC1 skoMC1 skoMC1 skoMC1 (2))]/\[[(skoSC1 skoMC1 (-1))<=skoMC1]/\[[(skoMC1 (-1))<(skoSC1 skoMC1)]/\[[0<=skoMC1]/\[[0<skoMC1]/\[[0<=skoSC1]/\[[2<=skoMC1]/\[[skoSC1<=5/4]/\[[0<(skoMC1 skoMC1 skoMC1 (2))]/\[[(skoMC1 skoMC1 skoMC1 (-2))<=0]/\[[(skoMC1 skoMC1 skoMC1 (-1))<(skoSC1 skoMC1 skoMC1 skoMC1)]/\[(skoSC1 skoMC1 skoMC1 skoMC1 (-1))<=(skoMC1 skoMC1 skoMC1)]]]]]]]]]]]]]]]].

% In SMTLib2 format:
(declare-fun skoSC1 () Real) (declare-fun skoMC1 () Real) (assert (and (<= (* skoSC1 (* skoMC1 (* skoMC1 (* skoMC1 2.)))) (* skoMC1 (* skoMC1 (* skoMC1 (- 2.))))) (and (<= (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (* skoMC1 12.)))) (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (+ (- 1.) (* skoMC1 6.))))) (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (- 1.)))) (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (/ 1. 12.)))) (* skoSC1 (* skoMC1 (* skoMC1 (* skoMC1 (/ 1. 12.))))))))))))) (* skoMC1 (* skoMC1 (* skoMC1 (+ (- 2.) (* skoMC1 (- 6.))))))) (and (<= (* skoSC1 (+ (* skoMC1 (* skoMC1 skoMC1)) (* skoSC1 (* skoMC1 (* skoMC1 skoMC1))))) 0.) (and (<= (* skoSC1 (* skoMC1 (* skoMC1 (* skoMC1 (- 2.))))) (* skoMC1 (* skoMC1 (* skoMC1 2.)))) (and (> (* skoSC1 (* skoMC1 (* skoMC1 (* skoMC1 2.)))) (* skoMC1 (* skoMC1 (* skoMC1 (- 2.))))) (and (<= (* skoSC1 (* skoMC1 (- 1.))) skoMC1) (and (> (* skoSC1 skoMC1) (* skoMC1 (- 1.))) (and (<= 0. skoMC1) (and (> skoMC1 0.) (and (<= 0. skoSC1) (and (<= 2. skoMC1) (and (<= skoSC1 (/ 5. 4.)) (and (> (* skoMC1 (* skoMC1 (* skoMC1 2.))) 0.) (and (<= (* skoMC1 (* skoMC1 (* skoMC1 (- 2.)))) 0.) (and (> (* skoSC1 (* skoMC1 (* skoMC1 skoMC1))) (* skoMC1 (* skoMC1 (* skoMC1 (- 1.))))) (<= (* skoSC1 (* skoMC1 (* skoMC1 (* skoMC1 (- 1.))))) (* skoMC1 (* skoMC1 skoMC1)))))))))))))))))))

% In GRF format:
(sequent " MetiTarski formula " (antecedent (<= (* skoSC1 (* skoMC1 (* skoMC1 (* skoMC1 2.)))) (* skoMC1 (* skoMC1 (* skoMC1 (- 2.))))) (<= (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (* skoMC1 12.)))) (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (+ (- 1.) (* skoMC1 6.))))) (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (- 1.)))) (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (/ 1. 12.)))) (* skoSC1 (* skoMC1 (* skoMC1 (* skoMC1 (/ 1. 12.))))))))))))) (* skoMC1 (* skoMC1 (* skoMC1 (+ (- 2.) (* skoMC1 (- 6.))))))) (<= (* skoSC1 (+ (* skoMC1 (* skoMC1 skoMC1)) (* skoSC1 (* skoMC1 (* skoMC1 skoMC1))))) 0.) (<= (* skoSC1 (* skoMC1 (* skoMC1 (* skoMC1 (- 2.))))) (* skoMC1 (* skoMC1 (* skoMC1 2.)))) (> (* skoSC1 (* skoMC1 (* skoMC1 (* skoMC1 2.)))) (* skoMC1 (* skoMC1 (* skoMC1 (- 2.))))) (<= (* skoSC1 (* skoMC1 (- 1.))) skoMC1) (> (* skoSC1 skoMC1) (* skoMC1 (- 1.))) (<= 0. skoMC1) (> skoMC1 0.) (<= 0. skoSC1) (<= 2. skoMC1) (<= skoSC1 (/ 5. 4.)) (> (* skoMC1 (* skoMC1 (* skoMC1 2.))) 0.) (<= (* skoMC1 (* skoMC1 (* skoMC1 (- 2.)))) 0.) (> (* skoSC1 (* skoMC1 (* skoMC1 skoMC1))) (* skoMC1 (* skoMC1 (* skoMC1 (- 1.)))))) (succedent (> (* skoSC1 (* skoMC1 (* skoMC1 (* skoMC1 (- 1.))))) (* skoMC1 (* skoMC1 skoMC1)))))
-----[end problem]-----

-----[begin problem]-----
% In Mathematica format:
Timing[Resolve[Exists[{skoSC1,skoMC1}, And[skoSC1*(skoMC1*skoMC1*skoMC1*skoMC1*12+skoSC1*(skoMC1*skoMC1*skoMC1*(-1+skoMC1*6)+skoSC1*(skoMC1*skoMC1*skoMC1*-1+skoSC1*(skoMC1*skoMC1*skoMC1*(1/12)+skoSC1*skoMC1*skoMC1*skoMC1*(1/12)))))<=skoMC1*skoMC1*skoMC1*(-2+skoMC1*-6),skoSC1*(skoMC1*skoMC1*skoMC1+skoSC1*skoMC1*skoMC1*skoMC1)>0,skoSC1*skoMC1*skoMC1*skoMC1*-2<=skoMC1*skoMC1*skoMC1*2,skoSC1*skoMC1*skoMC1*skoMC1*2>skoMC1*skoMC1*skoMC1*-2,skoSC1*skoMC1*-1<=skoMC1,skoSC1*skoMC1>skoMC1*-1,0<=skoMC1,skoMC1>0,0<=skoSC1,2<=skoMC1,skoSC1<=(5/4),skoMC1*skoMC1*skoMC1*2>0,skoMC1*skoMC1*skoMC1*-2<=0,skoSC1*skoMC1*skoMC1*skoMC1>skoMC1*skoMC1*skoMC1*-1,skoSC1*skoMC1*skoMC1*skoMC1*-1<=skoMC1*skoMC1*skoMC1]], Reals]]

% In QepcadB format:
(E skoSC1) (E skoMC1) [[(skoSC1 ((skoMC1 skoMC1 skoMC1 skoMC1 (12))+(skoSC1 ((skoMC1 skoMC1 skoMC1 (-1+(skoMC1 (6))))+(skoSC1 ((skoMC1 skoMC1 skoMC1 (-1))+(skoSC1 ((skoMC1 skoMC1 skoMC1 (1/12))+(skoSC1 skoMC1 skoMC1 skoMC1 (1/12))))))))))<=(skoMC1 skoMC1 skoMC1 (-2+(skoMC1 (-6))))]/\[[0<(skoSC1 ((skoMC1 skoMC1 skoMC1)+(skoSC1 skoMC1 skoMC1 skoMC1)))]/\[[(skoSC1 skoMC1 skoMC1 skoMC1 (-2))<=(skoMC1 skoMC1 skoMC1 (2))]/\[[(skoMC1 skoMC1 skoMC1 (-2))<(skoSC1 skoMC1 skoMC1 skoMC1 (2))]/\[[(skoSC1 skoMC1 (-1))<=skoMC1]/\[[(skoMC1 (-1))<(skoSC1 skoMC1)]/\[[0<=skoMC1]/\[[0<skoMC1]/\[[0<=skoSC1]/\[[2<=skoMC1]/\[[skoSC1<=5/4]/\[[0<(skoMC1 skoMC1 skoMC1 (2))]/\[[(skoMC1 skoMC1 skoMC1 (-2))<=0]/\[[(skoMC1 skoMC1 skoMC1 (-1))<(skoSC1 skoMC1 skoMC1 skoMC1)]/\[(skoSC1 skoMC1 skoMC1 skoMC1 (-1))<=(skoMC1 skoMC1 skoMC1)]]]]]]]]]]]]]]].

% In SMTLib2 format:
(declare-fun skoSC1 () Real) (declare-fun skoMC1 () Real) (assert (and (<= (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (* skoMC1 12.)))) (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (+ (- 1.) (* skoMC1 6.))))) (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (- 1.)))) (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (/ 1. 12.)))) (* skoSC1 (* skoMC1 (* skoMC1 (* skoMC1 (/ 1. 12.))))))))))))) (* skoMC1 (* skoMC1 (* skoMC1 (+ (- 2.) (* skoMC1 (- 6.))))))) (and (> (* skoSC1 (+ (* skoMC1 (* skoMC1 skoMC1)) (* skoSC1 (* skoMC1 (* skoMC1 skoMC1))))) 0.) (and (<= (* skoSC1 (* skoMC1 (* skoMC1 (* skoMC1 (- 2.))))) (* skoMC1 (* skoMC1 (* skoMC1 2.)))) (and (> (* skoSC1 (* skoMC1 (* skoMC1 (* skoMC1 2.)))) (* skoMC1 (* skoMC1 (* skoMC1 (- 2.))))) (and (<= (* skoSC1 (* skoMC1 (- 1.))) skoMC1) (and (> (* skoSC1 skoMC1) (* skoMC1 (- 1.))) (and (<= 0. skoMC1) (and (> skoMC1 0.) (and (<= 0. skoSC1) (and (<= 2. skoMC1) (and (<= skoSC1 (/ 5. 4.)) (and (> (* skoMC1 (* skoMC1 (* skoMC1 2.))) 0.) (and (<= (* skoMC1 (* skoMC1 (* skoMC1 (- 2.)))) 0.) (and (> (* skoSC1 (* skoMC1 (* skoMC1 skoMC1))) (* skoMC1 (* skoMC1 (* skoMC1 (- 1.))))) (<= (* skoSC1 (* skoMC1 (* skoMC1 (* skoMC1 (- 1.))))) (* skoMC1 (* skoMC1 skoMC1))))))))))))))))))

% In GRF format:
(sequent " MetiTarski formula " (antecedent (<= (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (* skoMC1 12.)))) (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (+ (- 1.) (* skoMC1 6.))))) (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (- 1.)))) (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (/ 1. 12.)))) (* skoSC1 (* skoMC1 (* skoMC1 (* skoMC1 (/ 1. 12.))))))))))))) (* skoMC1 (* skoMC1 (* skoMC1 (+ (- 2.) (* skoMC1 (- 6.))))))) (> (* skoSC1 (+ (* skoMC1 (* skoMC1 skoMC1)) (* skoSC1 (* skoMC1 (* skoMC1 skoMC1))))) 0.) (<= (* skoSC1 (* skoMC1 (* skoMC1 (* skoMC1 (- 2.))))) (* skoMC1 (* skoMC1 (* skoMC1 2.)))) (> (* skoSC1 (* skoMC1 (* skoMC1 (* skoMC1 2.)))) (* skoMC1 (* skoMC1 (* skoMC1 (- 2.))))) (<= (* skoSC1 (* skoMC1 (- 1.))) skoMC1) (> (* skoSC1 skoMC1) (* skoMC1 (- 1.))) (<= 0. skoMC1) (> skoMC1 0.) (<= 0. skoSC1) (<= 2. skoMC1) (<= skoSC1 (/ 5. 4.)) (> (* skoMC1 (* skoMC1 (* skoMC1 2.))) 0.) (<= (* skoMC1 (* skoMC1 (* skoMC1 (- 2.)))) 0.) (> (* skoSC1 (* skoMC1 (* skoMC1 skoMC1))) (* skoMC1 (* skoMC1 (* skoMC1 (- 1.)))))) (succedent (> (* skoSC1 (* skoMC1 (* skoMC1 (* skoMC1 (- 1.))))) (* skoMC1 (* skoMC1 skoMC1)))))
-----[end problem]-----

-----[begin problem]-----
% In Mathematica format:
Timing[Resolve[Exists[{skoSC1,skoMC1}, And[skoSC1*(skoMC1*skoMC1*skoMC1*skoMC1*12+skoSC1*(skoMC1*skoMC1*skoMC1*(-1+skoMC1*6)+skoSC1*(skoMC1*skoMC1*skoMC1*-1+skoSC1*(skoMC1*skoMC1*skoMC1*(1/12)+skoSC1*skoMC1*skoMC1*skoMC1*(1/12)))))>skoMC1*skoMC1*skoMC1*(-2+skoMC1*-6),skoSC1*skoMC1*skoMC1*skoMC1*-2<=skoMC1*skoMC1*skoMC1*2,skoSC1*skoMC1*skoMC1*skoMC1*2>skoMC1*skoMC1*skoMC1*-2,skoSC1*skoMC1*-1<=skoMC1,skoSC1*skoMC1>skoMC1*-1,0<=skoMC1,skoMC1>0,0<=skoSC1,2<=skoMC1,skoSC1<=(5/4),skoMC1*skoMC1*skoMC1*2>0,skoMC1*skoMC1*skoMC1*-2<=0,skoSC1*skoMC1*skoMC1*skoMC1>skoMC1*skoMC1*skoMC1*-1,skoSC1*skoMC1*skoMC1*skoMC1*-1<=skoMC1*skoMC1*skoMC1]], Reals]]

% In QepcadB format:
(E skoSC1) (E skoMC1) [[(skoMC1 skoMC1 skoMC1 (-2+(skoMC1 (-6))))<(skoSC1 ((skoMC1 skoMC1 skoMC1 skoMC1 (12))+(skoSC1 ((skoMC1 skoMC1 skoMC1 (-1+(skoMC1 (6))))+(skoSC1 ((skoMC1 skoMC1 skoMC1 (-1))+(skoSC1 ((skoMC1 skoMC1 skoMC1 (1/12))+(skoSC1 skoMC1 skoMC1 skoMC1 (1/12))))))))))]/\[[(skoSC1 skoMC1 skoMC1 skoMC1 (-2))<=(skoMC1 skoMC1 skoMC1 (2))]/\[[(skoMC1 skoMC1 skoMC1 (-2))<(skoSC1 skoMC1 skoMC1 skoMC1 (2))]/\[[(skoSC1 skoMC1 (-1))<=skoMC1]/\[[(skoMC1 (-1))<(skoSC1 skoMC1)]/\[[0<=skoMC1]/\[[0<skoMC1]/\[[0<=skoSC1]/\[[2<=skoMC1]/\[[skoSC1<=5/4]/\[[0<(skoMC1 skoMC1 skoMC1 (2))]/\[[(skoMC1 skoMC1 skoMC1 (-2))<=0]/\[[(skoMC1 skoMC1 skoMC1 (-1))<(skoSC1 skoMC1 skoMC1 skoMC1)]/\[(skoSC1 skoMC1 skoMC1 skoMC1 (-1))<=(skoMC1 skoMC1 skoMC1)]]]]]]]]]]]]]].

% In SMTLib2 format:
(declare-fun skoSC1 () Real) (declare-fun skoMC1 () Real) (assert (and (> (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (* skoMC1 12.)))) (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (+ (- 1.) (* skoMC1 6.))))) (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (- 1.)))) (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (/ 1. 12.)))) (* skoSC1 (* skoMC1 (* skoMC1 (* skoMC1 (/ 1. 12.))))))))))))) (* skoMC1 (* skoMC1 (* skoMC1 (+ (- 2.) (* skoMC1 (- 6.))))))) (and (<= (* skoSC1 (* skoMC1 (* skoMC1 (* skoMC1 (- 2.))))) (* skoMC1 (* skoMC1 (* skoMC1 2.)))) (and (> (* skoSC1 (* skoMC1 (* skoMC1 (* skoMC1 2.)))) (* skoMC1 (* skoMC1 (* skoMC1 (- 2.))))) (and (<= (* skoSC1 (* skoMC1 (- 1.))) skoMC1) (and (> (* skoSC1 skoMC1) (* skoMC1 (- 1.))) (and (<= 0. skoMC1) (and (> skoMC1 0.) (and (<= 0. skoSC1) (and (<= 2. skoMC1) (and (<= skoSC1 (/ 5. 4.)) (and (> (* skoMC1 (* skoMC1 (* skoMC1 2.))) 0.) (and (<= (* skoMC1 (* skoMC1 (* skoMC1 (- 2.)))) 0.) (and (> (* skoSC1 (* skoMC1 (* skoMC1 skoMC1))) (* skoMC1 (* skoMC1 (* skoMC1 (- 1.))))) (<= (* skoSC1 (* skoMC1 (* skoMC1 (* skoMC1 (- 1.))))) (* skoMC1 (* skoMC1 skoMC1)))))))))))))))))

% In GRF format:
(sequent " MetiTarski formula " (antecedent (> (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (* skoMC1 12.)))) (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (+ (- 1.) (* skoMC1 6.))))) (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (- 1.)))) (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (/ 1. 12.)))) (* skoSC1 (* skoMC1 (* skoMC1 (* skoMC1 (/ 1. 12.))))))))))))) (* skoMC1 (* skoMC1 (* skoMC1 (+ (- 2.) (* skoMC1 (- 6.))))))) (<= (* skoSC1 (* skoMC1 (* skoMC1 (* skoMC1 (- 2.))))) (* skoMC1 (* skoMC1 (* skoMC1 2.)))) (> (* skoSC1 (* skoMC1 (* skoMC1 (* skoMC1 2.)))) (* skoMC1 (* skoMC1 (* skoMC1 (- 2.))))) (<= (* skoSC1 (* skoMC1 (- 1.))) skoMC1) (> (* skoSC1 skoMC1) (* skoMC1 (- 1.))) (<= 0. skoMC1) (> skoMC1 0.) (<= 0. skoSC1) (<= 2. skoMC1) (<= skoSC1 (/ 5. 4.)) (> (* skoMC1 (* skoMC1 (* skoMC1 2.))) 0.) (<= (* skoMC1 (* skoMC1 (* skoMC1 (- 2.)))) 0.) (> (* skoSC1 (* skoMC1 (* skoMC1 skoMC1))) (* skoMC1 (* skoMC1 (* skoMC1 (- 1.)))))) (succedent (> (* skoSC1 (* skoMC1 (* skoMC1 (* skoMC1 (- 1.))))) (* skoMC1 (* skoMC1 skoMC1)))))
-----[end problem]-----

-----[begin problem]-----
% In Mathematica format:
Timing[Resolve[Exists[{skoSC1,skoMC1}, And[skoSC1*skoMC1*skoMC1*skoMC1*-2<=skoMC1*skoMC1*skoMC1*2,skoSC1*(skoMC1*skoMC1*skoMC1*skoMC1*12+skoSC1*(skoMC1*skoMC1*skoMC1*(-1+skoMC1*6)+skoSC1*(skoMC1*skoMC1*skoMC1*-1+skoSC1*(skoMC1*skoMC1*skoMC1*(1/12)+skoSC1*skoMC1*skoMC1*skoMC1*(1/12)))))>skoMC1*skoMC1*skoMC1*(-2+skoMC1*-6),skoSC1*skoMC1*skoMC1*skoMC1*-2<=skoMC1*skoMC1*skoMC1*2,skoSC1*skoMC1*skoMC1*skoMC1*2>skoMC1*skoMC1*skoMC1*-2,skoSC1*skoMC1*-1<=skoMC1,skoSC1*skoMC1>skoMC1*-1,0<=skoMC1,skoMC1>0,0<=skoSC1,2<=skoMC1,skoSC1<=(5/4),skoMC1*skoMC1*skoMC1*2>0,skoMC1*skoMC1*skoMC1*-2<=0,skoSC1*skoMC1*skoMC1*skoMC1>skoMC1*skoMC1*skoMC1*-1,skoSC1*skoMC1*skoMC1*skoMC1*-1<=skoMC1*skoMC1*skoMC1]], Reals]]

% In QepcadB format:
(E skoSC1) (E skoMC1) [[(skoSC1 skoMC1 skoMC1 skoMC1 (-2))<=(skoMC1 skoMC1 skoMC1 (2))]/\[[(skoMC1 skoMC1 skoMC1 (-2+(skoMC1 (-6))))<(skoSC1 ((skoMC1 skoMC1 skoMC1 skoMC1 (12))+(skoSC1 ((skoMC1 skoMC1 skoMC1 (-1+(skoMC1 (6))))+(skoSC1 ((skoMC1 skoMC1 skoMC1 (-1))+(skoSC1 ((skoMC1 skoMC1 skoMC1 (1/12))+(skoSC1 skoMC1 skoMC1 skoMC1 (1/12))))))))))]/\[[(skoSC1 skoMC1 skoMC1 skoMC1 (-2))<=(skoMC1 skoMC1 skoMC1 (2))]/\[[(skoMC1 skoMC1 skoMC1 (-2))<(skoSC1 skoMC1 skoMC1 skoMC1 (2))]/\[[(skoSC1 skoMC1 (-1))<=skoMC1]/\[[(skoMC1 (-1))<(skoSC1 skoMC1)]/\[[0<=skoMC1]/\[[0<skoMC1]/\[[0<=skoSC1]/\[[2<=skoMC1]/\[[skoSC1<=5/4]/\[[0<(skoMC1 skoMC1 skoMC1 (2))]/\[[(skoMC1 skoMC1 skoMC1 (-2))<=0]/\[[(skoMC1 skoMC1 skoMC1 (-1))<(skoSC1 skoMC1 skoMC1 skoMC1)]/\[(skoSC1 skoMC1 skoMC1 skoMC1 (-1))<=(skoMC1 skoMC1 skoMC1)]]]]]]]]]]]]]]].

% In SMTLib2 format:
(declare-fun skoSC1 () Real) (declare-fun skoMC1 () Real) (assert (and (<= (* skoSC1 (* skoMC1 (* skoMC1 (* skoMC1 (- 2.))))) (* skoMC1 (* skoMC1 (* skoMC1 2.)))) (and (> (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (* skoMC1 12.)))) (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (+ (- 1.) (* skoMC1 6.))))) (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (- 1.)))) (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (/ 1. 12.)))) (* skoSC1 (* skoMC1 (* skoMC1 (* skoMC1 (/ 1. 12.))))))))))))) (* skoMC1 (* skoMC1 (* skoMC1 (+ (- 2.) (* skoMC1 (- 6.))))))) (and (<= (* skoSC1 (* skoMC1 (* skoMC1 (* skoMC1 (- 2.))))) (* skoMC1 (* skoMC1 (* skoMC1 2.)))) (and (> (* skoSC1 (* skoMC1 (* skoMC1 (* skoMC1 2.)))) (* skoMC1 (* skoMC1 (* skoMC1 (- 2.))))) (and (<= (* skoSC1 (* skoMC1 (- 1.))) skoMC1) (and (> (* skoSC1 skoMC1) (* skoMC1 (- 1.))) (and (<= 0. skoMC1) (and (> skoMC1 0.) (and (<= 0. skoSC1) (and (<= 2. skoMC1) (and (<= skoSC1 (/ 5. 4.)) (and (> (* skoMC1 (* skoMC1 (* skoMC1 2.))) 0.) (and (<= (* skoMC1 (* skoMC1 (* skoMC1 (- 2.)))) 0.) (and (> (* skoSC1 (* skoMC1 (* skoMC1 skoMC1))) (* skoMC1 (* skoMC1 (* skoMC1 (- 1.))))) (<= (* skoSC1 (* skoMC1 (* skoMC1 (* skoMC1 (- 1.))))) (* skoMC1 (* skoMC1 skoMC1))))))))))))))))))

% In GRF format:
(sequent " MetiTarski formula " (antecedent (<= (* skoSC1 (* skoMC1 (* skoMC1 (* skoMC1 (- 2.))))) (* skoMC1 (* skoMC1 (* skoMC1 2.)))) (> (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (* skoMC1 12.)))) (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (+ (- 1.) (* skoMC1 6.))))) (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (- 1.)))) (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (/ 1. 12.)))) (* skoSC1 (* skoMC1 (* skoMC1 (* skoMC1 (/ 1. 12.))))))))))))) (* skoMC1 (* skoMC1 (* skoMC1 (+ (- 2.) (* skoMC1 (- 6.))))))) (<= (* skoSC1 (* skoMC1 (* skoMC1 (* skoMC1 (- 2.))))) (* skoMC1 (* skoMC1 (* skoMC1 2.)))) (> (* skoSC1 (* skoMC1 (* skoMC1 (* skoMC1 2.)))) (* skoMC1 (* skoMC1 (* skoMC1 (- 2.))))) (<= (* skoSC1 (* skoMC1 (- 1.))) skoMC1) (> (* skoSC1 skoMC1) (* skoMC1 (- 1.))) (<= 0. skoMC1) (> skoMC1 0.) (<= 0. skoSC1) (<= 2. skoMC1) (<= skoSC1 (/ 5. 4.)) (> (* skoMC1 (* skoMC1 (* skoMC1 2.))) 0.) (<= (* skoMC1 (* skoMC1 (* skoMC1 (- 2.)))) 0.) (> (* skoSC1 (* skoMC1 (* skoMC1 skoMC1))) (* skoMC1 (* skoMC1 (* skoMC1 (- 1.)))))) (succedent (> (* skoSC1 (* skoMC1 (* skoMC1 (* skoMC1 (- 1.))))) (* skoMC1 (* skoMC1 skoMC1)))))
-----[end problem]-----

-----[begin problem]-----
% In Mathematica format:
Timing[Resolve[Exists[{skoSC1,skoMC1}, And[skoSC1*(skoMC1*skoMC1*skoMC1*skoMC1*-12+skoSC1*(skoMC1*skoMC1*skoMC1*(1+skoMC1*-6)+skoSC1*(skoMC1*skoMC1*skoMC1+skoSC1*(skoMC1*skoMC1*skoMC1*(-1/12)+skoSC1*skoMC1*skoMC1*skoMC1*(-1/12)))))<=skoMC1*skoMC1*skoMC1*(2+skoMC1*6),skoSC1*skoMC1*skoMC1*skoMC1*2>skoMC1*skoMC1*skoMC1*-2,skoSC1*(skoMC1*skoMC1*skoMC1*skoMC1*12+skoSC1*(skoMC1*skoMC1*skoMC1*(-1+skoMC1*6)+skoSC1*(skoMC1*skoMC1*skoMC1*-1+skoSC1*(skoMC1*skoMC1*skoMC1*(1/12)+skoSC1*skoMC1*skoMC1*skoMC1*(1/12)))))>skoMC1*skoMC1*skoMC1*(-2+skoMC1*-6),skoSC1*skoMC1*skoMC1*skoMC1*-2<=skoMC1*skoMC1*skoMC1*2,skoSC1*skoMC1*skoMC1*skoMC1*2>skoMC1*skoMC1*skoMC1*-2,skoSC1*skoMC1*-1<=skoMC1,skoSC1*skoMC1>skoMC1*-1,0<=skoMC1,skoMC1>0,0<=skoSC1,2<=skoMC1,skoSC1<=(5/4),skoMC1*skoMC1*skoMC1*2>0,skoMC1*skoMC1*skoMC1*-2<=0,skoSC1*skoMC1*skoMC1*skoMC1>skoMC1*skoMC1*skoMC1*-1,skoSC1*skoMC1*skoMC1*skoMC1*-1<=skoMC1*skoMC1*skoMC1]], Reals]]

% In QepcadB format:
(E skoSC1) (E skoMC1) [[(skoSC1 ((skoMC1 skoMC1 skoMC1 skoMC1 (-12))+(skoSC1 ((skoMC1 skoMC1 skoMC1 (1+(skoMC1 (-6))))+(skoSC1 ((skoMC1 skoMC1 skoMC1)+(skoSC1 ((skoMC1 skoMC1 skoMC1 (-1/12))+(skoSC1 skoMC1 skoMC1 skoMC1 (-1/12))))))))))<=(skoMC1 skoMC1 skoMC1 (2+(skoMC1 (6))))]/\[[(skoMC1 skoMC1 skoMC1 (-2))<(skoSC1 skoMC1 skoMC1 skoMC1 (2))]/\[[(skoMC1 skoMC1 skoMC1 (-2+(skoMC1 (-6))))<(skoSC1 ((skoMC1 skoMC1 skoMC1 skoMC1 (12))+(skoSC1 ((skoMC1 skoMC1 skoMC1 (-1+(skoMC1 (6))))+(skoSC1 ((skoMC1 skoMC1 skoMC1 (-1))+(skoSC1 ((skoMC1 skoMC1 skoMC1 (1/12))+(skoSC1 skoMC1 skoMC1 skoMC1 (1/12))))))))))]/\[[(skoSC1 skoMC1 skoMC1 skoMC1 (-2))<=(skoMC1 skoMC1 skoMC1 (2))]/\[[(skoMC1 skoMC1 skoMC1 (-2))<(skoSC1 skoMC1 skoMC1 skoMC1 (2))]/\[[(skoSC1 skoMC1 (-1))<=skoMC1]/\[[(skoMC1 (-1))<(skoSC1 skoMC1)]/\[[0<=skoMC1]/\[[0<skoMC1]/\[[0<=skoSC1]/\[[2<=skoMC1]/\[[skoSC1<=5/4]/\[[0<(skoMC1 skoMC1 skoMC1 (2))]/\[[(skoMC1 skoMC1 skoMC1 (-2))<=0]/\[[(skoMC1 skoMC1 skoMC1 (-1))<(skoSC1 skoMC1 skoMC1 skoMC1)]/\[(skoSC1 skoMC1 skoMC1 skoMC1 (-1))<=(skoMC1 skoMC1 skoMC1)]]]]]]]]]]]]]]]].

% In SMTLib2 format:
(declare-fun skoSC1 () Real) (declare-fun skoMC1 () Real) (assert (and (<= (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (* skoMC1 (- 12.))))) (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (+ 1. (* skoMC1 (- 6.)))))) (* skoSC1 (+ (* skoMC1 (* skoMC1 skoMC1)) (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (/ (- 1.) 12.)))) (* skoSC1 (* skoMC1 (* skoMC1 (* skoMC1 (/ (- 1.) 12.))))))))))))) (* skoMC1 (* skoMC1 (* skoMC1 (+ 2. (* skoMC1 6.)))))) (and (> (* skoSC1 (* skoMC1 (* skoMC1 (* skoMC1 2.)))) (* skoMC1 (* skoMC1 (* skoMC1 (- 2.))))) (and (> (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (* skoMC1 12.)))) (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (+ (- 1.) (* skoMC1 6.))))) (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (- 1.)))) (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (/ 1. 12.)))) (* skoSC1 (* skoMC1 (* skoMC1 (* skoMC1 (/ 1. 12.))))))))))))) (* skoMC1 (* skoMC1 (* skoMC1 (+ (- 2.) (* skoMC1 (- 6.))))))) (and (<= (* skoSC1 (* skoMC1 (* skoMC1 (* skoMC1 (- 2.))))) (* skoMC1 (* skoMC1 (* skoMC1 2.)))) (and (> (* skoSC1 (* skoMC1 (* skoMC1 (* skoMC1 2.)))) (* skoMC1 (* skoMC1 (* skoMC1 (- 2.))))) (and (<= (* skoSC1 (* skoMC1 (- 1.))) skoMC1) (and (> (* skoSC1 skoMC1) (* skoMC1 (- 1.))) (and (<= 0. skoMC1) (and (> skoMC1 0.) (and (<= 0. skoSC1) (and (<= 2. skoMC1) (and (<= skoSC1 (/ 5. 4.)) (and (> (* skoMC1 (* skoMC1 (* skoMC1 2.))) 0.) (and (<= (* skoMC1 (* skoMC1 (* skoMC1 (- 2.)))) 0.) (and (> (* skoSC1 (* skoMC1 (* skoMC1 skoMC1))) (* skoMC1 (* skoMC1 (* skoMC1 (- 1.))))) (<= (* skoSC1 (* skoMC1 (* skoMC1 (* skoMC1 (- 1.))))) (* skoMC1 (* skoMC1 skoMC1)))))))))))))))))))

% In GRF format:
(sequent " MetiTarski formula " (antecedent (<= (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (* skoMC1 (- 12.))))) (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (+ 1. (* skoMC1 (- 6.)))))) (* skoSC1 (+ (* skoMC1 (* skoMC1 skoMC1)) (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (/ (- 1.) 12.)))) (* skoSC1 (* skoMC1 (* skoMC1 (* skoMC1 (/ (- 1.) 12.))))))))))))) (* skoMC1 (* skoMC1 (* skoMC1 (+ 2. (* skoMC1 6.)))))) (> (* skoSC1 (* skoMC1 (* skoMC1 (* skoMC1 2.)))) (* skoMC1 (* skoMC1 (* skoMC1 (- 2.))))) (> (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (* skoMC1 12.)))) (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (+ (- 1.) (* skoMC1 6.))))) (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (- 1.)))) (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (/ 1. 12.)))) (* skoSC1 (* skoMC1 (* skoMC1 (* skoMC1 (/ 1. 12.))))))))))))) (* skoMC1 (* skoMC1 (* skoMC1 (+ (- 2.) (* skoMC1 (- 6.))))))) (<= (* skoSC1 (* skoMC1 (* skoMC1 (* skoMC1 (- 2.))))) (* skoMC1 (* skoMC1 (* skoMC1 2.)))) (> (* skoSC1 (* skoMC1 (* skoMC1 (* skoMC1 2.)))) (* skoMC1 (* skoMC1 (* skoMC1 (- 2.))))) (<= (* skoSC1 (* skoMC1 (- 1.))) skoMC1) (> (* skoSC1 skoMC1) (* skoMC1 (- 1.))) (<= 0. skoMC1) (> skoMC1 0.) (<= 0. skoSC1) (<= 2. skoMC1) (<= skoSC1 (/ 5. 4.)) (> (* skoMC1 (* skoMC1 (* skoMC1 2.))) 0.) (<= (* skoMC1 (* skoMC1 (* skoMC1 (- 2.)))) 0.) (> (* skoSC1 (* skoMC1 (* skoMC1 skoMC1))) (* skoMC1 (* skoMC1 (* skoMC1 (- 1.)))))) (succedent (> (* skoSC1 (* skoMC1 (* skoMC1 (* skoMC1 (- 1.))))) (* skoMC1 (* skoMC1 skoMC1)))))
-----[end problem]-----

-----[begin problem]-----
% In Mathematica format:
Timing[Resolve[Exists[{skoSC1,skoMC1}, And[skoSC1*skoMC1*skoMC1*skoMC1*-2<=skoMC1*skoMC1*skoMC1*2,skoSC1*(skoMC1*skoMC1*skoMC1*skoMC1*12+skoSC1*(skoMC1*skoMC1*skoMC1*(-1+skoMC1*6)+skoSC1*(skoMC1*skoMC1*skoMC1*-1+skoSC1*(skoMC1*skoMC1*skoMC1*(1/12)+skoSC1*skoMC1*skoMC1*skoMC1*(1/12)))))>skoMC1*skoMC1*skoMC1*(-2+skoMC1*-6),skoSC1*skoMC1*skoMC1*skoMC1*-2<=skoMC1*skoMC1*skoMC1*2,skoSC1*skoMC1*skoMC1*skoMC1*2>skoMC1*skoMC1*skoMC1*-2,skoSC1*skoMC1*-1<=skoMC1,skoSC1*skoMC1>skoMC1*-1,0<=skoMC1,skoMC1>0,0<=skoSC1,2<=skoMC1,skoSC1<=(5/4),skoMC1*skoMC1*skoMC1*2>0,skoMC1*skoMC1*skoMC1*-2<=0,skoSC1*skoMC1*skoMC1*skoMC1>skoMC1*skoMC1*skoMC1*-1,skoSC1*skoMC1*skoMC1*skoMC1*-1<=skoMC1*skoMC1*skoMC1]], Reals]]

% In QepcadB format:
(E skoSC1) (E skoMC1) [[(skoSC1 skoMC1 skoMC1 skoMC1 (-2))<=(skoMC1 skoMC1 skoMC1 (2))]/\[[(skoMC1 skoMC1 skoMC1 (-2+(skoMC1 (-6))))<(skoSC1 ((skoMC1 skoMC1 skoMC1 skoMC1 (12))+(skoSC1 ((skoMC1 skoMC1 skoMC1 (-1+(skoMC1 (6))))+(skoSC1 ((skoMC1 skoMC1 skoMC1 (-1))+(skoSC1 ((skoMC1 skoMC1 skoMC1 (1/12))+(skoSC1 skoMC1 skoMC1 skoMC1 (1/12))))))))))]/\[[(skoSC1 skoMC1 skoMC1 skoMC1 (-2))<=(skoMC1 skoMC1 skoMC1 (2))]/\[[(skoMC1 skoMC1 skoMC1 (-2))<(skoSC1 skoMC1 skoMC1 skoMC1 (2))]/\[[(skoSC1 skoMC1 (-1))<=skoMC1]/\[[(skoMC1 (-1))<(skoSC1 skoMC1)]/\[[0<=skoMC1]/\[[0<skoMC1]/\[[0<=skoSC1]/\[[2<=skoMC1]/\[[skoSC1<=5/4]/\[[0<(skoMC1 skoMC1 skoMC1 (2))]/\[[(skoMC1 skoMC1 skoMC1 (-2))<=0]/\[[(skoMC1 skoMC1 skoMC1 (-1))<(skoSC1 skoMC1 skoMC1 skoMC1)]/\[(skoSC1 skoMC1 skoMC1 skoMC1 (-1))<=(skoMC1 skoMC1 skoMC1)]]]]]]]]]]]]]]].

% In SMTLib2 format:
(declare-fun skoSC1 () Real) (declare-fun skoMC1 () Real) (assert (and (<= (* skoSC1 (* skoMC1 (* skoMC1 (* skoMC1 (- 2.))))) (* skoMC1 (* skoMC1 (* skoMC1 2.)))) (and (> (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (* skoMC1 12.)))) (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (+ (- 1.) (* skoMC1 6.))))) (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (- 1.)))) (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (/ 1. 12.)))) (* skoSC1 (* skoMC1 (* skoMC1 (* skoMC1 (/ 1. 12.))))))))))))) (* skoMC1 (* skoMC1 (* skoMC1 (+ (- 2.) (* skoMC1 (- 6.))))))) (and (<= (* skoSC1 (* skoMC1 (* skoMC1 (* skoMC1 (- 2.))))) (* skoMC1 (* skoMC1 (* skoMC1 2.)))) (and (> (* skoSC1 (* skoMC1 (* skoMC1 (* skoMC1 2.)))) (* skoMC1 (* skoMC1 (* skoMC1 (- 2.))))) (and (<= (* skoSC1 (* skoMC1 (- 1.))) skoMC1) (and (> (* skoSC1 skoMC1) (* skoMC1 (- 1.))) (and (<= 0. skoMC1) (and (> skoMC1 0.) (and (<= 0. skoSC1) (and (<= 2. skoMC1) (and (<= skoSC1 (/ 5. 4.)) (and (> (* skoMC1 (* skoMC1 (* skoMC1 2.))) 0.) (and (<= (* skoMC1 (* skoMC1 (* skoMC1 (- 2.)))) 0.) (and (> (* skoSC1 (* skoMC1 (* skoMC1 skoMC1))) (* skoMC1 (* skoMC1 (* skoMC1 (- 1.))))) (<= (* skoSC1 (* skoMC1 (* skoMC1 (* skoMC1 (- 1.))))) (* skoMC1 (* skoMC1 skoMC1))))))))))))))))))

% In GRF format:
(sequent " MetiTarski formula " (antecedent (<= (* skoSC1 (* skoMC1 (* skoMC1 (* skoMC1 (- 2.))))) (* skoMC1 (* skoMC1 (* skoMC1 2.)))) (> (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (* skoMC1 12.)))) (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (+ (- 1.) (* skoMC1 6.))))) (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (- 1.)))) (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (/ 1. 12.)))) (* skoSC1 (* skoMC1 (* skoMC1 (* skoMC1 (/ 1. 12.))))))))))))) (* skoMC1 (* skoMC1 (* skoMC1 (+ (- 2.) (* skoMC1 (- 6.))))))) (<= (* skoSC1 (* skoMC1 (* skoMC1 (* skoMC1 (- 2.))))) (* skoMC1 (* skoMC1 (* skoMC1 2.)))) (> (* skoSC1 (* skoMC1 (* skoMC1 (* skoMC1 2.)))) (* skoMC1 (* skoMC1 (* skoMC1 (- 2.))))) (<= (* skoSC1 (* skoMC1 (- 1.))) skoMC1) (> (* skoSC1 skoMC1) (* skoMC1 (- 1.))) (<= 0. skoMC1) (> skoMC1 0.) (<= 0. skoSC1) (<= 2. skoMC1) (<= skoSC1 (/ 5. 4.)) (> (* skoMC1 (* skoMC1 (* skoMC1 2.))) 0.) (<= (* skoMC1 (* skoMC1 (* skoMC1 (- 2.)))) 0.) (> (* skoSC1 (* skoMC1 (* skoMC1 skoMC1))) (* skoMC1 (* skoMC1 (* skoMC1 (- 1.)))))) (succedent (> (* skoSC1 (* skoMC1 (* skoMC1 (* skoMC1 (- 1.))))) (* skoMC1 (* skoMC1 skoMC1)))))
-----[end problem]-----

-----[begin problem]-----
% In Mathematica format:
Timing[Resolve[Exists[{skoSC1,skoMC1}, And[skoSC1*(skoMC1*skoMC1*skoMC1*skoMC1*-12+skoSC1*(skoMC1*skoMC1*skoMC1*(1+skoMC1*-6)+skoSC1*(skoMC1*skoMC1*skoMC1+skoSC1*(skoMC1*skoMC1*skoMC1*(-1/12)+skoSC1*skoMC1*skoMC1*skoMC1*(-1/12)))))<=skoMC1*skoMC1*skoMC1*(2+skoMC1*6),skoSC1*(skoMC1*skoMC1*skoMC1*skoMC1*12+skoSC1*(skoMC1*skoMC1*skoMC1*(-1+skoMC1*6)+skoSC1*(skoMC1*skoMC1*skoMC1*-1+skoSC1*(skoMC1*skoMC1*skoMC1*(1/12)+skoSC1*skoMC1*skoMC1*skoMC1*(1/12)))))>skoMC1*skoMC1*skoMC1*(-2+skoMC1*-6),skoSC1*skoMC1*skoMC1*skoMC1*-2<=skoMC1*skoMC1*skoMC1*2,skoSC1*skoMC1*skoMC1*skoMC1*2>skoMC1*skoMC1*skoMC1*-2,skoSC1*skoMC1*-1<=skoMC1,skoSC1*skoMC1>skoMC1*-1,0<=skoMC1,skoMC1>0,0<=skoSC1,2<=skoMC1,skoSC1<=(5/4),skoMC1*skoMC1*skoMC1*2>0,skoMC1*skoMC1*skoMC1*-2<=0,skoSC1*skoMC1*skoMC1*skoMC1>skoMC1*skoMC1*skoMC1*-1,skoSC1*skoMC1*skoMC1*skoMC1*-1<=skoMC1*skoMC1*skoMC1]], Reals]]

% In QepcadB format:
(E skoSC1) (E skoMC1) [[(skoSC1 ((skoMC1 skoMC1 skoMC1 skoMC1 (-12))+(skoSC1 ((skoMC1 skoMC1 skoMC1 (1+(skoMC1 (-6))))+(skoSC1 ((skoMC1 skoMC1 skoMC1)+(skoSC1 ((skoMC1 skoMC1 skoMC1 (-1/12))+(skoSC1 skoMC1 skoMC1 skoMC1 (-1/12))))))))))<=(skoMC1 skoMC1 skoMC1 (2+(skoMC1 (6))))]/\[[(skoMC1 skoMC1 skoMC1 (-2+(skoMC1 (-6))))<(skoSC1 ((skoMC1 skoMC1 skoMC1 skoMC1 (12))+(skoSC1 ((skoMC1 skoMC1 skoMC1 (-1+(skoMC1 (6))))+(skoSC1 ((skoMC1 skoMC1 skoMC1 (-1))+(skoSC1 ((skoMC1 skoMC1 skoMC1 (1/12))+(skoSC1 skoMC1 skoMC1 skoMC1 (1/12))))))))))]/\[[(skoSC1 skoMC1 skoMC1 skoMC1 (-2))<=(skoMC1 skoMC1 skoMC1 (2))]/\[[(skoMC1 skoMC1 skoMC1 (-2))<(skoSC1 skoMC1 skoMC1 skoMC1 (2))]/\[[(skoSC1 skoMC1 (-1))<=skoMC1]/\[[(skoMC1 (-1))<(skoSC1 skoMC1)]/\[[0<=skoMC1]/\[[0<skoMC1]/\[[0<=skoSC1]/\[[2<=skoMC1]/\[[skoSC1<=5/4]/\[[0<(skoMC1 skoMC1 skoMC1 (2))]/\[[(skoMC1 skoMC1 skoMC1 (-2))<=0]/\[[(skoMC1 skoMC1 skoMC1 (-1))<(skoSC1 skoMC1 skoMC1 skoMC1)]/\[(skoSC1 skoMC1 skoMC1 skoMC1 (-1))<=(skoMC1 skoMC1 skoMC1)]]]]]]]]]]]]]]].

% In SMTLib2 format:
(declare-fun skoSC1 () Real) (declare-fun skoMC1 () Real) (assert (and (<= (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (* skoMC1 (- 12.))))) (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (+ 1. (* skoMC1 (- 6.)))))) (* skoSC1 (+ (* skoMC1 (* skoMC1 skoMC1)) (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (/ (- 1.) 12.)))) (* skoSC1 (* skoMC1 (* skoMC1 (* skoMC1 (/ (- 1.) 12.))))))))))))) (* skoMC1 (* skoMC1 (* skoMC1 (+ 2. (* skoMC1 6.)))))) (and (> (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (* skoMC1 12.)))) (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (+ (- 1.) (* skoMC1 6.))))) (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (- 1.)))) (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (/ 1. 12.)))) (* skoSC1 (* skoMC1 (* skoMC1 (* skoMC1 (/ 1. 12.))))))))))))) (* skoMC1 (* skoMC1 (* skoMC1 (+ (- 2.) (* skoMC1 (- 6.))))))) (and (<= (* skoSC1 (* skoMC1 (* skoMC1 (* skoMC1 (- 2.))))) (* skoMC1 (* skoMC1 (* skoMC1 2.)))) (and (> (* skoSC1 (* skoMC1 (* skoMC1 (* skoMC1 2.)))) (* skoMC1 (* skoMC1 (* skoMC1 (- 2.))))) (and (<= (* skoSC1 (* skoMC1 (- 1.))) skoMC1) (and (> (* skoSC1 skoMC1) (* skoMC1 (- 1.))) (and (<= 0. skoMC1) (and (> skoMC1 0.) (and (<= 0. skoSC1) (and (<= 2. skoMC1) (and (<= skoSC1 (/ 5. 4.)) (and (> (* skoMC1 (* skoMC1 (* skoMC1 2.))) 0.) (and (<= (* skoMC1 (* skoMC1 (* skoMC1 (- 2.)))) 0.) (and (> (* skoSC1 (* skoMC1 (* skoMC1 skoMC1))) (* skoMC1 (* skoMC1 (* skoMC1 (- 1.))))) (<= (* skoSC1 (* skoMC1 (* skoMC1 (* skoMC1 (- 1.))))) (* skoMC1 (* skoMC1 skoMC1))))))))))))))))))

% In GRF format:
(sequent " MetiTarski formula " (antecedent (<= (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (* skoMC1 (- 12.))))) (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (+ 1. (* skoMC1 (- 6.)))))) (* skoSC1 (+ (* skoMC1 (* skoMC1 skoMC1)) (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (/ (- 1.) 12.)))) (* skoSC1 (* skoMC1 (* skoMC1 (* skoMC1 (/ (- 1.) 12.))))))))))))) (* skoMC1 (* skoMC1 (* skoMC1 (+ 2. (* skoMC1 6.)))))) (> (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (* skoMC1 12.)))) (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (+ (- 1.) (* skoMC1 6.))))) (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (- 1.)))) (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (/ 1. 12.)))) (* skoSC1 (* skoMC1 (* skoMC1 (* skoMC1 (/ 1. 12.))))))))))))) (* skoMC1 (* skoMC1 (* skoMC1 (+ (- 2.) (* skoMC1 (- 6.))))))) (<= (* skoSC1 (* skoMC1 (* skoMC1 (* skoMC1 (- 2.))))) (* skoMC1 (* skoMC1 (* skoMC1 2.)))) (> (* skoSC1 (* skoMC1 (* skoMC1 (* skoMC1 2.)))) (* skoMC1 (* skoMC1 (* skoMC1 (- 2.))))) (<= (* skoSC1 (* skoMC1 (- 1.))) skoMC1) (> (* skoSC1 skoMC1) (* skoMC1 (- 1.))) (<= 0. skoMC1) (> skoMC1 0.) (<= 0. skoSC1) (<= 2. skoMC1) (<= skoSC1 (/ 5. 4.)) (> (* skoMC1 (* skoMC1 (* skoMC1 2.))) 0.) (<= (* skoMC1 (* skoMC1 (* skoMC1 (- 2.)))) 0.) (> (* skoSC1 (* skoMC1 (* skoMC1 skoMC1))) (* skoMC1 (* skoMC1 (* skoMC1 (- 1.)))))) (succedent (> (* skoSC1 (* skoMC1 (* skoMC1 (* skoMC1 (- 1.))))) (* skoMC1 (* skoMC1 skoMC1)))))
-----[end problem]-----

-----[begin problem]-----
% In Mathematica format:
Timing[Resolve[Exists[{skoSC1,skoMC1}, And[skoSC1*skoMC1*skoMC1*skoMC1*-2<=skoMC1*skoMC1*skoMC1*2,skoSC1*(skoMC1*skoMC1*skoMC1+skoSC1*skoMC1*skoMC1*skoMC1)<=0,skoSC1*(skoMC1*skoMC1*skoMC1*skoMC1*-12+skoSC1*(skoMC1*skoMC1*skoMC1*(1+skoMC1*-6)+skoSC1*(skoMC1*skoMC1*skoMC1+skoSC1*(skoMC1*skoMC1*skoMC1*(-1/12)+skoSC1*skoMC1*skoMC1*skoMC1*(-1/12)))))<=skoMC1*skoMC1*skoMC1*(2+skoMC1*6),skoSC1*(skoMC1*skoMC1*skoMC1*skoMC1*12+skoSC1*(skoMC1*skoMC1*skoMC1*(-1+skoMC1*6)+skoSC1*(skoMC1*skoMC1*skoMC1*-1+skoSC1*(skoMC1*skoMC1*skoMC1*(1/12)+skoSC1*skoMC1*skoMC1*skoMC1*(1/12)))))>skoMC1*skoMC1*skoMC1*(-2+skoMC1*-6),skoSC1*skoMC1*skoMC1*skoMC1*-2<=skoMC1*skoMC1*skoMC1*2,skoSC1*skoMC1*skoMC1*skoMC1*2>skoMC1*skoMC1*skoMC1*-2,skoSC1*skoMC1*-1<=skoMC1,skoSC1*skoMC1>skoMC1*-1,0<=skoMC1,skoMC1>0,0<=skoSC1,2<=skoMC1,skoSC1<=(5/4),skoMC1*skoMC1*skoMC1*2>0,skoMC1*skoMC1*skoMC1*-2<=0,skoSC1*skoMC1*skoMC1*skoMC1>skoMC1*skoMC1*skoMC1*-1,skoSC1*skoMC1*skoMC1*skoMC1*-1<=skoMC1*skoMC1*skoMC1]], Reals]]

% In QepcadB format:
(E skoSC1) (E skoMC1) [[(skoSC1 skoMC1 skoMC1 skoMC1 (-2))<=(skoMC1 skoMC1 skoMC1 (2))]/\[[(skoSC1 ((skoMC1 skoMC1 skoMC1)+(skoSC1 skoMC1 skoMC1 skoMC1)))<=0]/\[[(skoSC1 ((skoMC1 skoMC1 skoMC1 skoMC1 (-12))+(skoSC1 ((skoMC1 skoMC1 skoMC1 (1+(skoMC1 (-6))))+(skoSC1 ((skoMC1 skoMC1 skoMC1)+(skoSC1 ((skoMC1 skoMC1 skoMC1 (-1/12))+(skoSC1 skoMC1 skoMC1 skoMC1 (-1/12))))))))))<=(skoMC1 skoMC1 skoMC1 (2+(skoMC1 (6))))]/\[[(skoMC1 skoMC1 skoMC1 (-2+(skoMC1 (-6))))<(skoSC1 ((skoMC1 skoMC1 skoMC1 skoMC1 (12))+(skoSC1 ((skoMC1 skoMC1 skoMC1 (-1+(skoMC1 (6))))+(skoSC1 ((skoMC1 skoMC1 skoMC1 (-1))+(skoSC1 ((skoMC1 skoMC1 skoMC1 (1/12))+(skoSC1 skoMC1 skoMC1 skoMC1 (1/12))))))))))]/\[[(skoSC1 skoMC1 skoMC1 skoMC1 (-2))<=(skoMC1 skoMC1 skoMC1 (2))]/\[[(skoMC1 skoMC1 skoMC1 (-2))<(skoSC1 skoMC1 skoMC1 skoMC1 (2))]/\[[(skoSC1 skoMC1 (-1))<=skoMC1]/\[[(skoMC1 (-1))<(skoSC1 skoMC1)]/\[[0<=skoMC1]/\[[0<skoMC1]/\[[0<=skoSC1]/\[[2<=skoMC1]/\[[skoSC1<=5/4]/\[[0<(skoMC1 skoMC1 skoMC1 (2))]/\[[(skoMC1 skoMC1 skoMC1 (-2))<=0]/\[[(skoMC1 skoMC1 skoMC1 (-1))<(skoSC1 skoMC1 skoMC1 skoMC1)]/\[(skoSC1 skoMC1 skoMC1 skoMC1 (-1))<=(skoMC1 skoMC1 skoMC1)]]]]]]]]]]]]]]]]].

% In SMTLib2 format:
(declare-fun skoSC1 () Real) (declare-fun skoMC1 () Real) (assert (and (<= (* skoSC1 (* skoMC1 (* skoMC1 (* skoMC1 (- 2.))))) (* skoMC1 (* skoMC1 (* skoMC1 2.)))) (and (<= (* skoSC1 (+ (* skoMC1 (* skoMC1 skoMC1)) (* skoSC1 (* skoMC1 (* skoMC1 skoMC1))))) 0.) (and (<= (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (* skoMC1 (- 12.))))) (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (+ 1. (* skoMC1 (- 6.)))))) (* skoSC1 (+ (* skoMC1 (* skoMC1 skoMC1)) (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (/ (- 1.) 12.)))) (* skoSC1 (* skoMC1 (* skoMC1 (* skoMC1 (/ (- 1.) 12.))))))))))))) (* skoMC1 (* skoMC1 (* skoMC1 (+ 2. (* skoMC1 6.)))))) (and (> (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (* skoMC1 12.)))) (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (+ (- 1.) (* skoMC1 6.))))) (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (- 1.)))) (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (/ 1. 12.)))) (* skoSC1 (* skoMC1 (* skoMC1 (* skoMC1 (/ 1. 12.))))))))))))) (* skoMC1 (* skoMC1 (* skoMC1 (+ (- 2.) (* skoMC1 (- 6.))))))) (and (<= (* skoSC1 (* skoMC1 (* skoMC1 (* skoMC1 (- 2.))))) (* skoMC1 (* skoMC1 (* skoMC1 2.)))) (and (> (* skoSC1 (* skoMC1 (* skoMC1 (* skoMC1 2.)))) (* skoMC1 (* skoMC1 (* skoMC1 (- 2.))))) (and (<= (* skoSC1 (* skoMC1 (- 1.))) skoMC1) (and (> (* skoSC1 skoMC1) (* skoMC1 (- 1.))) (and (<= 0. skoMC1) (and (> skoMC1 0.) (and (<= 0. skoSC1) (and (<= 2. skoMC1) (and (<= skoSC1 (/ 5. 4.)) (and (> (* skoMC1 (* skoMC1 (* skoMC1 2.))) 0.) (and (<= (* skoMC1 (* skoMC1 (* skoMC1 (- 2.)))) 0.) (and (> (* skoSC1 (* skoMC1 (* skoMC1 skoMC1))) (* skoMC1 (* skoMC1 (* skoMC1 (- 1.))))) (<= (* skoSC1 (* skoMC1 (* skoMC1 (* skoMC1 (- 1.))))) (* skoMC1 (* skoMC1 skoMC1))))))))))))))))))))

% In GRF format:
(sequent " MetiTarski formula " (antecedent (<= (* skoSC1 (* skoMC1 (* skoMC1 (* skoMC1 (- 2.))))) (* skoMC1 (* skoMC1 (* skoMC1 2.)))) (<= (* skoSC1 (+ (* skoMC1 (* skoMC1 skoMC1)) (* skoSC1 (* skoMC1 (* skoMC1 skoMC1))))) 0.) (<= (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (* skoMC1 (- 12.))))) (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (+ 1. (* skoMC1 (- 6.)))))) (* skoSC1 (+ (* skoMC1 (* skoMC1 skoMC1)) (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (/ (- 1.) 12.)))) (* skoSC1 (* skoMC1 (* skoMC1 (* skoMC1 (/ (- 1.) 12.))))))))))))) (* skoMC1 (* skoMC1 (* skoMC1 (+ 2. (* skoMC1 6.)))))) (> (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (* skoMC1 12.)))) (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (+ (- 1.) (* skoMC1 6.))))) (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (- 1.)))) (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (/ 1. 12.)))) (* skoSC1 (* skoMC1 (* skoMC1 (* skoMC1 (/ 1. 12.))))))))))))) (* skoMC1 (* skoMC1 (* skoMC1 (+ (- 2.) (* skoMC1 (- 6.))))))) (<= (* skoSC1 (* skoMC1 (* skoMC1 (* skoMC1 (- 2.))))) (* skoMC1 (* skoMC1 (* skoMC1 2.)))) (> (* skoSC1 (* skoMC1 (* skoMC1 (* skoMC1 2.)))) (* skoMC1 (* skoMC1 (* skoMC1 (- 2.))))) (<= (* skoSC1 (* skoMC1 (- 1.))) skoMC1) (> (* skoSC1 skoMC1) (* skoMC1 (- 1.))) (<= 0. skoMC1) (> skoMC1 0.) (<= 0. skoSC1) (<= 2. skoMC1) (<= skoSC1 (/ 5. 4.)) (> (* skoMC1 (* skoMC1 (* skoMC1 2.))) 0.) (<= (* skoMC1 (* skoMC1 (* skoMC1 (- 2.)))) 0.) (> (* skoSC1 (* skoMC1 (* skoMC1 skoMC1))) (* skoMC1 (* skoMC1 (* skoMC1 (- 1.)))))) (succedent (> (* skoSC1 (* skoMC1 (* skoMC1 (* skoMC1 (- 1.))))) (* skoMC1 (* skoMC1 skoMC1)))))
-----[end problem]-----

-----[begin problem]-----
% In Mathematica format:
Timing[Resolve[Exists[{skoSC1,skoMC1}, And[skoSC1*(skoMC1*skoMC1*skoMC1+skoSC1*skoMC1*skoMC1*skoMC1)<=0,skoSC1*skoMC1*skoMC1*skoMC1*2>skoMC1*skoMC1*skoMC1*-2,skoSC1*(skoMC1*skoMC1*skoMC1*skoMC1*12+skoSC1*(skoMC1*skoMC1*skoMC1*(-1+skoMC1*6)+skoSC1*(skoMC1*skoMC1*skoMC1*-1+skoSC1*(skoMC1*skoMC1*skoMC1*(1/12)+skoSC1*(skoMC1*skoMC1*skoMC1*(1/12)+skoSC1*(skoMC1*skoMC1*skoMC1*(-1/360)+skoSC1*(skoMC1*skoMC1*skoMC1*(-1/360)+skoSC1*(skoMC1*skoMC1*skoMC1*(1/20160)+skoSC1*(skoMC1*skoMC1*skoMC1*(1/20160)+skoSC1*(skoMC1*skoMC1*skoMC1*(-1/1814400)+skoSC1*(skoMC1*skoMC1*skoMC1*(-1/1814400)+skoSC1*(skoMC1*skoMC1*skoMC1*(1/239500800)+skoSC1*skoMC1*skoMC1*skoMC1*(1/239500800)))))))))))))>skoMC1*skoMC1*skoMC1*(-2+skoMC1*-6),skoSC1*(skoMC1*skoMC1*skoMC1*skoMC1*-12+skoSC1*(skoMC1*skoMC1*skoMC1*(1+skoMC1*-6)+skoSC1*(skoMC1*skoMC1*skoMC1+skoSC1*(skoMC1*skoMC1*skoMC1*(-1/12)+skoSC1*skoMC1*skoMC1*skoMC1*(-1/12)))))<=skoMC1*skoMC1*skoMC1*(2+skoMC1*6),skoSC1*(skoMC1*skoMC1*skoMC1*skoMC1*12+skoSC1*(skoMC1*skoMC1*skoMC1*(-1+skoMC1*6)+skoSC1*(skoMC1*skoMC1*skoMC1*-1+skoSC1*(skoMC1*skoMC1*skoMC1*(1/12)+skoSC1*skoMC1*skoMC1*skoMC1*(1/12)))))>skoMC1*skoMC1*skoMC1*(-2+skoMC1*-6),skoSC1*skoMC1*skoMC1*skoMC1*-2<=skoMC1*skoMC1*skoMC1*2,skoSC1*skoMC1*skoMC1*skoMC1*2>skoMC1*skoMC1*skoMC1*-2,skoSC1*skoMC1*-1<=skoMC1,skoSC1*skoMC1>skoMC1*-1,0<=skoMC1,skoMC1>0,0<=skoSC1,2<=skoMC1,skoSC1<=(5/4),skoMC1*skoMC1*skoMC1*2>0,skoMC1*skoMC1*skoMC1*-2<=0,skoSC1*skoMC1*skoMC1*skoMC1>skoMC1*skoMC1*skoMC1*-1,skoSC1*skoMC1*skoMC1*skoMC1*-1<=skoMC1*skoMC1*skoMC1]], Reals]]

% In QepcadB format:
(E skoSC1) (E skoMC1) [[(skoSC1 ((skoMC1 skoMC1 skoMC1)+(skoSC1 skoMC1 skoMC1 skoMC1)))<=0]/\[[(skoMC1 skoMC1 skoMC1 (-2))<(skoSC1 skoMC1 skoMC1 skoMC1 (2))]/\[[(skoMC1 skoMC1 skoMC1 (-2+(skoMC1 (-6))))<(skoSC1 ((skoMC1 skoMC1 skoMC1 skoMC1 (12))+(skoSC1 ((skoMC1 skoMC1 skoMC1 (-1+(skoMC1 (6))))+(skoSC1 ((skoMC1 skoMC1 skoMC1 (-1))+(skoSC1 ((skoMC1 skoMC1 skoMC1 (1/12))+(skoSC1 ((skoMC1 skoMC1 skoMC1 (1/12))+(skoSC1 ((skoMC1 skoMC1 skoMC1 (-1/360))+(skoSC1 ((skoMC1 skoMC1 skoMC1 (-1/360))+(skoSC1 ((skoMC1 skoMC1 skoMC1 (1/20160))+(skoSC1 ((skoMC1 skoMC1 skoMC1 (1/20160))+(skoSC1 ((skoMC1 skoMC1 skoMC1 (-1/1814400))+(skoSC1 ((skoMC1 skoMC1 skoMC1 (-1/1814400))+(skoSC1 ((skoMC1 skoMC1 skoMC1 (1/239500800))+(skoSC1 skoMC1 skoMC1 skoMC1 (1/239500800))))))))))))))))))))))))))]/\[[(skoSC1 ((skoMC1 skoMC1 skoMC1 skoMC1 (-12))+(skoSC1 ((skoMC1 skoMC1 skoMC1 (1+(skoMC1 (-6))))+(skoSC1 ((skoMC1 skoMC1 skoMC1)+(skoSC1 ((skoMC1 skoMC1 skoMC1 (-1/12))+(skoSC1 skoMC1 skoMC1 skoMC1 (-1/12))))))))))<=(skoMC1 skoMC1 skoMC1 (2+(skoMC1 (6))))]/\[[(skoMC1 skoMC1 skoMC1 (-2+(skoMC1 (-6))))<(skoSC1 ((skoMC1 skoMC1 skoMC1 skoMC1 (12))+(skoSC1 ((skoMC1 skoMC1 skoMC1 (-1+(skoMC1 (6))))+(skoSC1 ((skoMC1 skoMC1 skoMC1 (-1))+(skoSC1 ((skoMC1 skoMC1 skoMC1 (1/12))+(skoSC1 skoMC1 skoMC1 skoMC1 (1/12))))))))))]/\[[(skoSC1 skoMC1 skoMC1 skoMC1 (-2))<=(skoMC1 skoMC1 skoMC1 (2))]/\[[(skoMC1 skoMC1 skoMC1 (-2))<(skoSC1 skoMC1 skoMC1 skoMC1 (2))]/\[[(skoSC1 skoMC1 (-1))<=skoMC1]/\[[(skoMC1 (-1))<(skoSC1 skoMC1)]/\[[0<=skoMC1]/\[[0<skoMC1]/\[[0<=skoSC1]/\[[2<=skoMC1]/\[[skoSC1<=5/4]/\[[0<(skoMC1 skoMC1 skoMC1 (2))]/\[[(skoMC1 skoMC1 skoMC1 (-2))<=0]/\[[(skoMC1 skoMC1 skoMC1 (-1))<(skoSC1 skoMC1 skoMC1 skoMC1)]/\[(skoSC1 skoMC1 skoMC1 skoMC1 (-1))<=(skoMC1 skoMC1 skoMC1)]]]]]]]]]]]]]]]]]].

% In SMTLib2 format:
(declare-fun skoSC1 () Real) (declare-fun skoMC1 () Real) (assert (and (<= (* skoSC1 (+ (* skoMC1 (* skoMC1 skoMC1)) (* skoSC1 (* skoMC1 (* skoMC1 skoMC1))))) 0.) (and (> (* skoSC1 (* skoMC1 (* skoMC1 (* skoMC1 2.)))) (* skoMC1 (* skoMC1 (* skoMC1 (- 2.))))) (and (> (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (* skoMC1 12.)))) (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (+ (- 1.) (* skoMC1 6.))))) (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (- 1.)))) (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (/ 1. 12.)))) (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (/ 1. 12.)))) (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (/ (- 1.) 360.)))) (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (/ (- 1.) 360.)))) (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (/ 1. 20160.)))) (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (/ 1. 20160.)))) (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (/ (- 1.) 1814400.)))) (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (/ (- 1.) 1814400.)))) (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (/ 1. 239500800.)))) (* skoSC1 (* skoMC1 (* skoMC1 (* skoMC1 (/ 1. 239500800.))))))))))))))))))))))))))))) (* skoMC1 (* skoMC1 (* skoMC1 (+ (- 2.) (* skoMC1 (- 6.))))))) (and (<= (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (* skoMC1 (- 12.))))) (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (+ 1. (* skoMC1 (- 6.)))))) (* skoSC1 (+ (* skoMC1 (* skoMC1 skoMC1)) (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (/ (- 1.) 12.)))) (* skoSC1 (* skoMC1 (* skoMC1 (* skoMC1 (/ (- 1.) 12.))))))))))))) (* skoMC1 (* skoMC1 (* skoMC1 (+ 2. (* skoMC1 6.)))))) (and (> (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (* skoMC1 12.)))) (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (+ (- 1.) (* skoMC1 6.))))) (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (- 1.)))) (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (/ 1. 12.)))) (* skoSC1 (* skoMC1 (* skoMC1 (* skoMC1 (/ 1. 12.))))))))))))) (* skoMC1 (* skoMC1 (* skoMC1 (+ (- 2.) (* skoMC1 (- 6.))))))) (and (<= (* skoSC1 (* skoMC1 (* skoMC1 (* skoMC1 (- 2.))))) (* skoMC1 (* skoMC1 (* skoMC1 2.)))) (and (> (* skoSC1 (* skoMC1 (* skoMC1 (* skoMC1 2.)))) (* skoMC1 (* skoMC1 (* skoMC1 (- 2.))))) (and (<= (* skoSC1 (* skoMC1 (- 1.))) skoMC1) (and (> (* skoSC1 skoMC1) (* skoMC1 (- 1.))) (and (<= 0. skoMC1) (and (> skoMC1 0.) (and (<= 0. skoSC1) (and (<= 2. skoMC1) (and (<= skoSC1 (/ 5. 4.)) (and (> (* skoMC1 (* skoMC1 (* skoMC1 2.))) 0.) (and (<= (* skoMC1 (* skoMC1 (* skoMC1 (- 2.)))) 0.) (and (> (* skoSC1 (* skoMC1 (* skoMC1 skoMC1))) (* skoMC1 (* skoMC1 (* skoMC1 (- 1.))))) (<= (* skoSC1 (* skoMC1 (* skoMC1 (* skoMC1 (- 1.))))) (* skoMC1 (* skoMC1 skoMC1)))))))))))))))))))))

% In GRF format:
(sequent " MetiTarski formula " (antecedent (<= (* skoSC1 (+ (* skoMC1 (* skoMC1 skoMC1)) (* skoSC1 (* skoMC1 (* skoMC1 skoMC1))))) 0.) (> (* skoSC1 (* skoMC1 (* skoMC1 (* skoMC1 2.)))) (* skoMC1 (* skoMC1 (* skoMC1 (- 2.))))) (> (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (* skoMC1 12.)))) (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (+ (- 1.) (* skoMC1 6.))))) (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (- 1.)))) (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (/ 1. 12.)))) (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (/ 1. 12.)))) (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (/ (- 1.) 360.)))) (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (/ (- 1.) 360.)))) (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (/ 1. 20160.)))) (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (/ 1. 20160.)))) (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (/ (- 1.) 1814400.)))) (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (/ (- 1.) 1814400.)))) (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (/ 1. 239500800.)))) (* skoSC1 (* skoMC1 (* skoMC1 (* skoMC1 (/ 1. 239500800.))))))))))))))))))))))))))))) (* skoMC1 (* skoMC1 (* skoMC1 (+ (- 2.) (* skoMC1 (- 6.))))))) (<= (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (* skoMC1 (- 12.))))) (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (+ 1. (* skoMC1 (- 6.)))))) (* skoSC1 (+ (* skoMC1 (* skoMC1 skoMC1)) (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (/ (- 1.) 12.)))) (* skoSC1 (* skoMC1 (* skoMC1 (* skoMC1 (/ (- 1.) 12.))))))))))))) (* skoMC1 (* skoMC1 (* skoMC1 (+ 2. (* skoMC1 6.)))))) (> (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (* skoMC1 12.)))) (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (+ (- 1.) (* skoMC1 6.))))) (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (- 1.)))) (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (/ 1. 12.)))) (* skoSC1 (* skoMC1 (* skoMC1 (* skoMC1 (/ 1. 12.))))))))))))) (* skoMC1 (* skoMC1 (* skoMC1 (+ (- 2.) (* skoMC1 (- 6.))))))) (<= (* skoSC1 (* skoMC1 (* skoMC1 (* skoMC1 (- 2.))))) (* skoMC1 (* skoMC1 (* skoMC1 2.)))) (> (* skoSC1 (* skoMC1 (* skoMC1 (* skoMC1 2.)))) (* skoMC1 (* skoMC1 (* skoMC1 (- 2.))))) (<= (* skoSC1 (* skoMC1 (- 1.))) skoMC1) (> (* skoSC1 skoMC1) (* skoMC1 (- 1.))) (<= 0. skoMC1) (> skoMC1 0.) (<= 0. skoSC1) (<= 2. skoMC1) (<= skoSC1 (/ 5. 4.)) (> (* skoMC1 (* skoMC1 (* skoMC1 2.))) 0.) (<= (* skoMC1 (* skoMC1 (* skoMC1 (- 2.)))) 0.) (> (* skoSC1 (* skoMC1 (* skoMC1 skoMC1))) (* skoMC1 (* skoMC1 (* skoMC1 (- 1.)))))) (succedent (> (* skoSC1 (* skoMC1 (* skoMC1 (* skoMC1 (- 1.))))) (* skoMC1 (* skoMC1 skoMC1)))))
-----[end problem]-----

-----[begin problem]-----
% In Mathematica format:
Timing[Resolve[Exists[{skoSC1,skoMC1}, And[skoSC1*skoMC1*skoMC1*skoMC1*2<=skoMC1*skoMC1*skoMC1*-2,skoSC1*(skoMC1*skoMC1*skoMC1*skoMC1*12+skoSC1*(skoMC1*skoMC1*skoMC1*(-1+skoMC1*6)+skoSC1*(skoMC1*skoMC1*skoMC1*-1+skoSC1*(skoMC1*skoMC1*skoMC1*(1/12)+skoSC1*(skoMC1*skoMC1*skoMC1*(1/12)+skoSC1*(skoMC1*skoMC1*skoMC1*(-1/360)+skoSC1*(skoMC1*skoMC1*skoMC1*(-1/360)+skoSC1*(skoMC1*skoMC1*skoMC1*(1/20160)+skoSC1*(skoMC1*skoMC1*skoMC1*(1/20160)+skoSC1*(skoMC1*skoMC1*skoMC1*(-1/1814400)+skoSC1*(skoMC1*skoMC1*skoMC1*(-1/1814400)+skoSC1*(skoMC1*skoMC1*skoMC1*(1/239500800)+skoSC1*skoMC1*skoMC1*skoMC1*(1/239500800)))))))))))))<=skoMC1*skoMC1*skoMC1*(-2+skoMC1*-6),skoSC1*(skoMC1*skoMC1*skoMC1+skoSC1*skoMC1*skoMC1*skoMC1)<=0,skoSC1*(skoMC1*skoMC1*skoMC1*skoMC1*-12+skoSC1*(skoMC1*skoMC1*skoMC1*(1+skoMC1*-6)+skoSC1*(skoMC1*skoMC1*skoMC1+skoSC1*(skoMC1*skoMC1*skoMC1*(-1/12)+skoSC1*skoMC1*skoMC1*skoMC1*(-1/12)))))<=skoMC1*skoMC1*skoMC1*(2+skoMC1*6),skoSC1*(skoMC1*skoMC1*skoMC1*skoMC1*12+skoSC1*(skoMC1*skoMC1*skoMC1*(-1+skoMC1*6)+skoSC1*(skoMC1*skoMC1*skoMC1*-1+skoSC1*(skoMC1*skoMC1*skoMC1*(1/12)+skoSC1*skoMC1*skoMC1*skoMC1*(1/12)))))>skoMC1*skoMC1*skoMC1*(-2+skoMC1*-6),skoSC1*skoMC1*skoMC1*skoMC1*-2<=skoMC1*skoMC1*skoMC1*2,skoSC1*skoMC1*skoMC1*skoMC1*2>skoMC1*skoMC1*skoMC1*-2,skoSC1*skoMC1*-1<=skoMC1,skoSC1*skoMC1>skoMC1*-1,0<=skoMC1,skoMC1>0,0<=skoSC1,2<=skoMC1,skoSC1<=(5/4),skoMC1*skoMC1*skoMC1*2>0,skoMC1*skoMC1*skoMC1*-2<=0,skoSC1*skoMC1*skoMC1*skoMC1>skoMC1*skoMC1*skoMC1*-1,skoSC1*skoMC1*skoMC1*skoMC1*-1<=skoMC1*skoMC1*skoMC1]], Reals]]

% In QepcadB format:
(E skoSC1) (E skoMC1) [[(skoSC1 skoMC1 skoMC1 skoMC1 (2))<=(skoMC1 skoMC1 skoMC1 (-2))]/\[[(skoSC1 ((skoMC1 skoMC1 skoMC1 skoMC1 (12))+(skoSC1 ((skoMC1 skoMC1 skoMC1 (-1+(skoMC1 (6))))+(skoSC1 ((skoMC1 skoMC1 skoMC1 (-1))+(skoSC1 ((skoMC1 skoMC1 skoMC1 (1/12))+(skoSC1 ((skoMC1 skoMC1 skoMC1 (1/12))+(skoSC1 ((skoMC1 skoMC1 skoMC1 (-1/360))+(skoSC1 ((skoMC1 skoMC1 skoMC1 (-1/360))+(skoSC1 ((skoMC1 skoMC1 skoMC1 (1/20160))+(skoSC1 ((skoMC1 skoMC1 skoMC1 (1/20160))+(skoSC1 ((skoMC1 skoMC1 skoMC1 (-1/1814400))+(skoSC1 ((skoMC1 skoMC1 skoMC1 (-1/1814400))+(skoSC1 ((skoMC1 skoMC1 skoMC1 (1/239500800))+(skoSC1 skoMC1 skoMC1 skoMC1 (1/239500800))))))))))))))))))))))))))<=(skoMC1 skoMC1 skoMC1 (-2+(skoMC1 (-6))))]/\[[(skoSC1 ((skoMC1 skoMC1 skoMC1)+(skoSC1 skoMC1 skoMC1 skoMC1)))<=0]/\[[(skoSC1 ((skoMC1 skoMC1 skoMC1 skoMC1 (-12))+(skoSC1 ((skoMC1 skoMC1 skoMC1 (1+(skoMC1 (-6))))+(skoSC1 ((skoMC1 skoMC1 skoMC1)+(skoSC1 ((skoMC1 skoMC1 skoMC1 (-1/12))+(skoSC1 skoMC1 skoMC1 skoMC1 (-1/12))))))))))<=(skoMC1 skoMC1 skoMC1 (2+(skoMC1 (6))))]/\[[(skoMC1 skoMC1 skoMC1 (-2+(skoMC1 (-6))))<(skoSC1 ((skoMC1 skoMC1 skoMC1 skoMC1 (12))+(skoSC1 ((skoMC1 skoMC1 skoMC1 (-1+(skoMC1 (6))))+(skoSC1 ((skoMC1 skoMC1 skoMC1 (-1))+(skoSC1 ((skoMC1 skoMC1 skoMC1 (1/12))+(skoSC1 skoMC1 skoMC1 skoMC1 (1/12))))))))))]/\[[(skoSC1 skoMC1 skoMC1 skoMC1 (-2))<=(skoMC1 skoMC1 skoMC1 (2))]/\[[(skoMC1 skoMC1 skoMC1 (-2))<(skoSC1 skoMC1 skoMC1 skoMC1 (2))]/\[[(skoSC1 skoMC1 (-1))<=skoMC1]/\[[(skoMC1 (-1))<(skoSC1 skoMC1)]/\[[0<=skoMC1]/\[[0<skoMC1]/\[[0<=skoSC1]/\[[2<=skoMC1]/\[[skoSC1<=5/4]/\[[0<(skoMC1 skoMC1 skoMC1 (2))]/\[[(skoMC1 skoMC1 skoMC1 (-2))<=0]/\[[(skoMC1 skoMC1 skoMC1 (-1))<(skoSC1 skoMC1 skoMC1 skoMC1)]/\[(skoSC1 skoMC1 skoMC1 skoMC1 (-1))<=(skoMC1 skoMC1 skoMC1)]]]]]]]]]]]]]]]]]].

% In SMTLib2 format:
(declare-fun skoSC1 () Real) (declare-fun skoMC1 () Real) (assert (and (<= (* skoSC1 (* skoMC1 (* skoMC1 (* skoMC1 2.)))) (* skoMC1 (* skoMC1 (* skoMC1 (- 2.))))) (and (<= (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (* skoMC1 12.)))) (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (+ (- 1.) (* skoMC1 6.))))) (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (- 1.)))) (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (/ 1. 12.)))) (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (/ 1. 12.)))) (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (/ (- 1.) 360.)))) (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (/ (- 1.) 360.)))) (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (/ 1. 20160.)))) (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (/ 1. 20160.)))) (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (/ (- 1.) 1814400.)))) (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (/ (- 1.) 1814400.)))) (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (/ 1. 239500800.)))) (* skoSC1 (* skoMC1 (* skoMC1 (* skoMC1 (/ 1. 239500800.))))))))))))))))))))))))))))) (* skoMC1 (* skoMC1 (* skoMC1 (+ (- 2.) (* skoMC1 (- 6.))))))) (and (<= (* skoSC1 (+ (* skoMC1 (* skoMC1 skoMC1)) (* skoSC1 (* skoMC1 (* skoMC1 skoMC1))))) 0.) (and (<= (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (* skoMC1 (- 12.))))) (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (+ 1. (* skoMC1 (- 6.)))))) (* skoSC1 (+ (* skoMC1 (* skoMC1 skoMC1)) (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (/ (- 1.) 12.)))) (* skoSC1 (* skoMC1 (* skoMC1 (* skoMC1 (/ (- 1.) 12.))))))))))))) (* skoMC1 (* skoMC1 (* skoMC1 (+ 2. (* skoMC1 6.)))))) (and (> (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (* skoMC1 12.)))) (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (+ (- 1.) (* skoMC1 6.))))) (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (- 1.)))) (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (/ 1. 12.)))) (* skoSC1 (* skoMC1 (* skoMC1 (* skoMC1 (/ 1. 12.))))))))))))) (* skoMC1 (* skoMC1 (* skoMC1 (+ (- 2.) (* skoMC1 (- 6.))))))) (and (<= (* skoSC1 (* skoMC1 (* skoMC1 (* skoMC1 (- 2.))))) (* skoMC1 (* skoMC1 (* skoMC1 2.)))) (and (> (* skoSC1 (* skoMC1 (* skoMC1 (* skoMC1 2.)))) (* skoMC1 (* skoMC1 (* skoMC1 (- 2.))))) (and (<= (* skoSC1 (* skoMC1 (- 1.))) skoMC1) (and (> (* skoSC1 skoMC1) (* skoMC1 (- 1.))) (and (<= 0. skoMC1) (and (> skoMC1 0.) (and (<= 0. skoSC1) (and (<= 2. skoMC1) (and (<= skoSC1 (/ 5. 4.)) (and (> (* skoMC1 (* skoMC1 (* skoMC1 2.))) 0.) (and (<= (* skoMC1 (* skoMC1 (* skoMC1 (- 2.)))) 0.) (and (> (* skoSC1 (* skoMC1 (* skoMC1 skoMC1))) (* skoMC1 (* skoMC1 (* skoMC1 (- 1.))))) (<= (* skoSC1 (* skoMC1 (* skoMC1 (* skoMC1 (- 1.))))) (* skoMC1 (* skoMC1 skoMC1)))))))))))))))))))))

% In GRF format:
(sequent " MetiTarski formula " (antecedent (<= (* skoSC1 (* skoMC1 (* skoMC1 (* skoMC1 2.)))) (* skoMC1 (* skoMC1 (* skoMC1 (- 2.))))) (<= (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (* skoMC1 12.)))) (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (+ (- 1.) (* skoMC1 6.))))) (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (- 1.)))) (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (/ 1. 12.)))) (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (/ 1. 12.)))) (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (/ (- 1.) 360.)))) (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (/ (- 1.) 360.)))) (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (/ 1. 20160.)))) (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (/ 1. 20160.)))) (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (/ (- 1.) 1814400.)))) (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (/ (- 1.) 1814400.)))) (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (/ 1. 239500800.)))) (* skoSC1 (* skoMC1 (* skoMC1 (* skoMC1 (/ 1. 239500800.))))))))))))))))))))))))))))) (* skoMC1 (* skoMC1 (* skoMC1 (+ (- 2.) (* skoMC1 (- 6.))))))) (<= (* skoSC1 (+ (* skoMC1 (* skoMC1 skoMC1)) (* skoSC1 (* skoMC1 (* skoMC1 skoMC1))))) 0.) (<= (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (* skoMC1 (- 12.))))) (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (+ 1. (* skoMC1 (- 6.)))))) (* skoSC1 (+ (* skoMC1 (* skoMC1 skoMC1)) (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (/ (- 1.) 12.)))) (* skoSC1 (* skoMC1 (* skoMC1 (* skoMC1 (/ (- 1.) 12.))))))))))))) (* skoMC1 (* skoMC1 (* skoMC1 (+ 2. (* skoMC1 6.)))))) (> (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (* skoMC1 12.)))) (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (+ (- 1.) (* skoMC1 6.))))) (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (- 1.)))) (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (/ 1. 12.)))) (* skoSC1 (* skoMC1 (* skoMC1 (* skoMC1 (/ 1. 12.))))))))))))) (* skoMC1 (* skoMC1 (* skoMC1 (+ (- 2.) (* skoMC1 (- 6.))))))) (<= (* skoSC1 (* skoMC1 (* skoMC1 (* skoMC1 (- 2.))))) (* skoMC1 (* skoMC1 (* skoMC1 2.)))) (> (* skoSC1 (* skoMC1 (* skoMC1 (* skoMC1 2.)))) (* skoMC1 (* skoMC1 (* skoMC1 (- 2.))))) (<= (* skoSC1 (* skoMC1 (- 1.))) skoMC1) (> (* skoSC1 skoMC1) (* skoMC1 (- 1.))) (<= 0. skoMC1) (> skoMC1 0.) (<= 0. skoSC1) (<= 2. skoMC1) (<= skoSC1 (/ 5. 4.)) (> (* skoMC1 (* skoMC1 (* skoMC1 2.))) 0.) (<= (* skoMC1 (* skoMC1 (* skoMC1 (- 2.)))) 0.) (> (* skoSC1 (* skoMC1 (* skoMC1 skoMC1))) (* skoMC1 (* skoMC1 (* skoMC1 (- 1.)))))) (succedent (> (* skoSC1 (* skoMC1 (* skoMC1 (* skoMC1 (- 1.))))) (* skoMC1 (* skoMC1 skoMC1)))))
-----[end problem]-----

-----[begin problem]-----
% In Mathematica format:
Timing[Resolve[Exists[{skoSC1,skoMC1}, And[skoSC1*(skoMC1*skoMC1*skoMC1*skoMC1*12+skoSC1*(skoMC1*skoMC1*skoMC1*(-1+skoMC1*6)+skoSC1*(skoMC1*skoMC1*skoMC1*-1+skoSC1*(skoMC1*skoMC1*skoMC1*(1/12)+skoSC1*(skoMC1*skoMC1*skoMC1*(1/12)+skoSC1*(skoMC1*skoMC1*skoMC1*(-1/360)+skoSC1*(skoMC1*skoMC1*skoMC1*(-1/360)+skoSC1*(skoMC1*skoMC1*skoMC1*(1/20160)+skoSC1*(skoMC1*skoMC1*skoMC1*(1/20160)+skoSC1*(skoMC1*skoMC1*skoMC1*(-1/1814400)+skoSC1*(skoMC1*skoMC1*skoMC1*(-1/1814400)+skoSC1*(skoMC1*skoMC1*skoMC1*(1/239500800)+skoSC1*skoMC1*skoMC1*skoMC1*(1/239500800)))))))))))))<=skoMC1*skoMC1*skoMC1*(-2+skoMC1*-6),skoSC1*(skoMC1*skoMC1*skoMC1+skoSC1*skoMC1*skoMC1*skoMC1)>0,skoSC1*(skoMC1*skoMC1*skoMC1*skoMC1*-12+skoSC1*(skoMC1*skoMC1*skoMC1*(1+skoMC1*-6)+skoSC1*(skoMC1*skoMC1*skoMC1+skoSC1*(skoMC1*skoMC1*skoMC1*(-1/12)+skoSC1*skoMC1*skoMC1*skoMC1*(-1/12)))))<=skoMC1*skoMC1*skoMC1*(2+skoMC1*6),skoSC1*(skoMC1*skoMC1*skoMC1*skoMC1*12+skoSC1*(skoMC1*skoMC1*skoMC1*(-1+skoMC1*6)+skoSC1*(skoMC1*skoMC1*skoMC1*-1+skoSC1*(skoMC1*skoMC1*skoMC1*(1/12)+skoSC1*skoMC1*skoMC1*skoMC1*(1/12)))))>skoMC1*skoMC1*skoMC1*(-2+skoMC1*-6),skoSC1*skoMC1*skoMC1*skoMC1*-2<=skoMC1*skoMC1*skoMC1*2,skoSC1*skoMC1*skoMC1*skoMC1*2>skoMC1*skoMC1*skoMC1*-2,skoSC1*skoMC1*-1<=skoMC1,skoSC1*skoMC1>skoMC1*-1,0<=skoMC1,skoMC1>0,0<=skoSC1,2<=skoMC1,skoSC1<=(5/4),skoMC1*skoMC1*skoMC1*2>0,skoMC1*skoMC1*skoMC1*-2<=0,skoSC1*skoMC1*skoMC1*skoMC1>skoMC1*skoMC1*skoMC1*-1,skoSC1*skoMC1*skoMC1*skoMC1*-1<=skoMC1*skoMC1*skoMC1]], Reals]]

% In QepcadB format:
(E skoSC1) (E skoMC1) [[(skoSC1 ((skoMC1 skoMC1 skoMC1 skoMC1 (12))+(skoSC1 ((skoMC1 skoMC1 skoMC1 (-1+(skoMC1 (6))))+(skoSC1 ((skoMC1 skoMC1 skoMC1 (-1))+(skoSC1 ((skoMC1 skoMC1 skoMC1 (1/12))+(skoSC1 ((skoMC1 skoMC1 skoMC1 (1/12))+(skoSC1 ((skoMC1 skoMC1 skoMC1 (-1/360))+(skoSC1 ((skoMC1 skoMC1 skoMC1 (-1/360))+(skoSC1 ((skoMC1 skoMC1 skoMC1 (1/20160))+(skoSC1 ((skoMC1 skoMC1 skoMC1 (1/20160))+(skoSC1 ((skoMC1 skoMC1 skoMC1 (-1/1814400))+(skoSC1 ((skoMC1 skoMC1 skoMC1 (-1/1814400))+(skoSC1 ((skoMC1 skoMC1 skoMC1 (1/239500800))+(skoSC1 skoMC1 skoMC1 skoMC1 (1/239500800))))))))))))))))))))))))))<=(skoMC1 skoMC1 skoMC1 (-2+(skoMC1 (-6))))]/\[[0<(skoSC1 ((skoMC1 skoMC1 skoMC1)+(skoSC1 skoMC1 skoMC1 skoMC1)))]/\[[(skoSC1 ((skoMC1 skoMC1 skoMC1 skoMC1 (-12))+(skoSC1 ((skoMC1 skoMC1 skoMC1 (1+(skoMC1 (-6))))+(skoSC1 ((skoMC1 skoMC1 skoMC1)+(skoSC1 ((skoMC1 skoMC1 skoMC1 (-1/12))+(skoSC1 skoMC1 skoMC1 skoMC1 (-1/12))))))))))<=(skoMC1 skoMC1 skoMC1 (2+(skoMC1 (6))))]/\[[(skoMC1 skoMC1 skoMC1 (-2+(skoMC1 (-6))))<(skoSC1 ((skoMC1 skoMC1 skoMC1 skoMC1 (12))+(skoSC1 ((skoMC1 skoMC1 skoMC1 (-1+(skoMC1 (6))))+(skoSC1 ((skoMC1 skoMC1 skoMC1 (-1))+(skoSC1 ((skoMC1 skoMC1 skoMC1 (1/12))+(skoSC1 skoMC1 skoMC1 skoMC1 (1/12))))))))))]/\[[(skoSC1 skoMC1 skoMC1 skoMC1 (-2))<=(skoMC1 skoMC1 skoMC1 (2))]/\[[(skoMC1 skoMC1 skoMC1 (-2))<(skoSC1 skoMC1 skoMC1 skoMC1 (2))]/\[[(skoSC1 skoMC1 (-1))<=skoMC1]/\[[(skoMC1 (-1))<(skoSC1 skoMC1)]/\[[0<=skoMC1]/\[[0<skoMC1]/\[[0<=skoSC1]/\[[2<=skoMC1]/\[[skoSC1<=5/4]/\[[0<(skoMC1 skoMC1 skoMC1 (2))]/\[[(skoMC1 skoMC1 skoMC1 (-2))<=0]/\[[(skoMC1 skoMC1 skoMC1 (-1))<(skoSC1 skoMC1 skoMC1 skoMC1)]/\[(skoSC1 skoMC1 skoMC1 skoMC1 (-1))<=(skoMC1 skoMC1 skoMC1)]]]]]]]]]]]]]]]]].

% In SMTLib2 format:
(declare-fun skoSC1 () Real) (declare-fun skoMC1 () Real) (assert (and (<= (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (* skoMC1 12.)))) (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (+ (- 1.) (* skoMC1 6.))))) (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (- 1.)))) (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (/ 1. 12.)))) (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (/ 1. 12.)))) (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (/ (- 1.) 360.)))) (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (/ (- 1.) 360.)))) (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (/ 1. 20160.)))) (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (/ 1. 20160.)))) (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (/ (- 1.) 1814400.)))) (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (/ (- 1.) 1814400.)))) (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (/ 1. 239500800.)))) (* skoSC1 (* skoMC1 (* skoMC1 (* skoMC1 (/ 1. 239500800.))))))))))))))))))))))))))))) (* skoMC1 (* skoMC1 (* skoMC1 (+ (- 2.) (* skoMC1 (- 6.))))))) (and (> (* skoSC1 (+ (* skoMC1 (* skoMC1 skoMC1)) (* skoSC1 (* skoMC1 (* skoMC1 skoMC1))))) 0.) (and (<= (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (* skoMC1 (- 12.))))) (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (+ 1. (* skoMC1 (- 6.)))))) (* skoSC1 (+ (* skoMC1 (* skoMC1 skoMC1)) (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (/ (- 1.) 12.)))) (* skoSC1 (* skoMC1 (* skoMC1 (* skoMC1 (/ (- 1.) 12.))))))))))))) (* skoMC1 (* skoMC1 (* skoMC1 (+ 2. (* skoMC1 6.)))))) (and (> (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (* skoMC1 12.)))) (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (+ (- 1.) (* skoMC1 6.))))) (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (- 1.)))) (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (/ 1. 12.)))) (* skoSC1 (* skoMC1 (* skoMC1 (* skoMC1 (/ 1. 12.))))))))))))) (* skoMC1 (* skoMC1 (* skoMC1 (+ (- 2.) (* skoMC1 (- 6.))))))) (and (<= (* skoSC1 (* skoMC1 (* skoMC1 (* skoMC1 (- 2.))))) (* skoMC1 (* skoMC1 (* skoMC1 2.)))) (and (> (* skoSC1 (* skoMC1 (* skoMC1 (* skoMC1 2.)))) (* skoMC1 (* skoMC1 (* skoMC1 (- 2.))))) (and (<= (* skoSC1 (* skoMC1 (- 1.))) skoMC1) (and (> (* skoSC1 skoMC1) (* skoMC1 (- 1.))) (and (<= 0. skoMC1) (and (> skoMC1 0.) (and (<= 0. skoSC1) (and (<= 2. skoMC1) (and (<= skoSC1 (/ 5. 4.)) (and (> (* skoMC1 (* skoMC1 (* skoMC1 2.))) 0.) (and (<= (* skoMC1 (* skoMC1 (* skoMC1 (- 2.)))) 0.) (and (> (* skoSC1 (* skoMC1 (* skoMC1 skoMC1))) (* skoMC1 (* skoMC1 (* skoMC1 (- 1.))))) (<= (* skoSC1 (* skoMC1 (* skoMC1 (* skoMC1 (- 1.))))) (* skoMC1 (* skoMC1 skoMC1))))))))))))))))))))

% In GRF format:
(sequent " MetiTarski formula " (antecedent (<= (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (* skoMC1 12.)))) (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (+ (- 1.) (* skoMC1 6.))))) (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (- 1.)))) (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (/ 1. 12.)))) (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (/ 1. 12.)))) (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (/ (- 1.) 360.)))) (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (/ (- 1.) 360.)))) (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (/ 1. 20160.)))) (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (/ 1. 20160.)))) (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (/ (- 1.) 1814400.)))) (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (/ (- 1.) 1814400.)))) (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (/ 1. 239500800.)))) (* skoSC1 (* skoMC1 (* skoMC1 (* skoMC1 (/ 1. 239500800.))))))))))))))))))))))))))))) (* skoMC1 (* skoMC1 (* skoMC1 (+ (- 2.) (* skoMC1 (- 6.))))))) (> (* skoSC1 (+ (* skoMC1 (* skoMC1 skoMC1)) (* skoSC1 (* skoMC1 (* skoMC1 skoMC1))))) 0.) (<= (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (* skoMC1 (- 12.))))) (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (+ 1. (* skoMC1 (- 6.)))))) (* skoSC1 (+ (* skoMC1 (* skoMC1 skoMC1)) (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (/ (- 1.) 12.)))) (* skoSC1 (* skoMC1 (* skoMC1 (* skoMC1 (/ (- 1.) 12.))))))))))))) (* skoMC1 (* skoMC1 (* skoMC1 (+ 2. (* skoMC1 6.)))))) (> (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (* skoMC1 12.)))) (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (+ (- 1.) (* skoMC1 6.))))) (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (- 1.)))) (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (/ 1. 12.)))) (* skoSC1 (* skoMC1 (* skoMC1 (* skoMC1 (/ 1. 12.))))))))))))) (* skoMC1 (* skoMC1 (* skoMC1 (+ (- 2.) (* skoMC1 (- 6.))))))) (<= (* skoSC1 (* skoMC1 (* skoMC1 (* skoMC1 (- 2.))))) (* skoMC1 (* skoMC1 (* skoMC1 2.)))) (> (* skoSC1 (* skoMC1 (* skoMC1 (* skoMC1 2.)))) (* skoMC1 (* skoMC1 (* skoMC1 (- 2.))))) (<= (* skoSC1 (* skoMC1 (- 1.))) skoMC1) (> (* skoSC1 skoMC1) (* skoMC1 (- 1.))) (<= 0. skoMC1) (> skoMC1 0.) (<= 0. skoSC1) (<= 2. skoMC1) (<= skoSC1 (/ 5. 4.)) (> (* skoMC1 (* skoMC1 (* skoMC1 2.))) 0.) (<= (* skoMC1 (* skoMC1 (* skoMC1 (- 2.)))) 0.) (> (* skoSC1 (* skoMC1 (* skoMC1 skoMC1))) (* skoMC1 (* skoMC1 (* skoMC1 (- 1.)))))) (succedent (> (* skoSC1 (* skoMC1 (* skoMC1 (* skoMC1 (- 1.))))) (* skoMC1 (* skoMC1 skoMC1)))))
-----[end problem]-----

-----[begin problem]-----
% In Mathematica format:
Timing[Resolve[Exists[{skoSC1,skoMC1}, And[skoSC1*skoMC1*skoMC1*skoMC1*-2<=skoMC1*skoMC1*skoMC1*2,skoSC1*(skoMC1*skoMC1*skoMC1*skoMC1*-12+skoSC1*(skoMC1*skoMC1*skoMC1*(1+skoMC1*-6)+skoSC1*(skoMC1*skoMC1*skoMC1+skoSC1*(skoMC1*skoMC1*skoMC1*(-1/12)+skoSC1*skoMC1*skoMC1*skoMC1*(-1/12)))))<=skoMC1*skoMC1*skoMC1*(2+skoMC1*6),skoSC1*(skoMC1*skoMC1*skoMC1*skoMC1*12+skoSC1*(skoMC1*skoMC1*skoMC1*(-1+skoMC1*6)+skoSC1*(skoMC1*skoMC1*skoMC1*-1+skoSC1*(skoMC1*skoMC1*skoMC1*(1/12)+skoSC1*skoMC1*skoMC1*skoMC1*(1/12)))))>skoMC1*skoMC1*skoMC1*(-2+skoMC1*-6),skoSC1*skoMC1*skoMC1*skoMC1*-2<=skoMC1*skoMC1*skoMC1*2,skoSC1*skoMC1*skoMC1*skoMC1*2>skoMC1*skoMC1*skoMC1*-2,skoSC1*skoMC1*-1<=skoMC1,skoSC1*skoMC1>skoMC1*-1,0<=skoMC1,skoMC1>0,0<=skoSC1,2<=skoMC1,skoSC1<=(5/4),skoMC1*skoMC1*skoMC1*2>0,skoMC1*skoMC1*skoMC1*-2<=0,skoSC1*skoMC1*skoMC1*skoMC1>skoMC1*skoMC1*skoMC1*-1,skoSC1*skoMC1*skoMC1*skoMC1*-1<=skoMC1*skoMC1*skoMC1]], Reals]]

% In QepcadB format:
(E skoSC1) (E skoMC1) [[(skoSC1 skoMC1 skoMC1 skoMC1 (-2))<=(skoMC1 skoMC1 skoMC1 (2))]/\[[(skoSC1 ((skoMC1 skoMC1 skoMC1 skoMC1 (-12))+(skoSC1 ((skoMC1 skoMC1 skoMC1 (1+(skoMC1 (-6))))+(skoSC1 ((skoMC1 skoMC1 skoMC1)+(skoSC1 ((skoMC1 skoMC1 skoMC1 (-1/12))+(skoSC1 skoMC1 skoMC1 skoMC1 (-1/12))))))))))<=(skoMC1 skoMC1 skoMC1 (2+(skoMC1 (6))))]/\[[(skoMC1 skoMC1 skoMC1 (-2+(skoMC1 (-6))))<(skoSC1 ((skoMC1 skoMC1 skoMC1 skoMC1 (12))+(skoSC1 ((skoMC1 skoMC1 skoMC1 (-1+(skoMC1 (6))))+(skoSC1 ((skoMC1 skoMC1 skoMC1 (-1))+(skoSC1 ((skoMC1 skoMC1 skoMC1 (1/12))+(skoSC1 skoMC1 skoMC1 skoMC1 (1/12))))))))))]/\[[(skoSC1 skoMC1 skoMC1 skoMC1 (-2))<=(skoMC1 skoMC1 skoMC1 (2))]/\[[(skoMC1 skoMC1 skoMC1 (-2))<(skoSC1 skoMC1 skoMC1 skoMC1 (2))]/\[[(skoSC1 skoMC1 (-1))<=skoMC1]/\[[(skoMC1 (-1))<(skoSC1 skoMC1)]/\[[0<=skoMC1]/\[[0<skoMC1]/\[[0<=skoSC1]/\[[2<=skoMC1]/\[[skoSC1<=5/4]/\[[0<(skoMC1 skoMC1 skoMC1 (2))]/\[[(skoMC1 skoMC1 skoMC1 (-2))<=0]/\[[(skoMC1 skoMC1 skoMC1 (-1))<(skoSC1 skoMC1 skoMC1 skoMC1)]/\[(skoSC1 skoMC1 skoMC1 skoMC1 (-1))<=(skoMC1 skoMC1 skoMC1)]]]]]]]]]]]]]]]].

% In SMTLib2 format:
(declare-fun skoSC1 () Real) (declare-fun skoMC1 () Real) (assert (and (<= (* skoSC1 (* skoMC1 (* skoMC1 (* skoMC1 (- 2.))))) (* skoMC1 (* skoMC1 (* skoMC1 2.)))) (and (<= (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (* skoMC1 (- 12.))))) (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (+ 1. (* skoMC1 (- 6.)))))) (* skoSC1 (+ (* skoMC1 (* skoMC1 skoMC1)) (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (/ (- 1.) 12.)))) (* skoSC1 (* skoMC1 (* skoMC1 (* skoMC1 (/ (- 1.) 12.))))))))))))) (* skoMC1 (* skoMC1 (* skoMC1 (+ 2. (* skoMC1 6.)))))) (and (> (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (* skoMC1 12.)))) (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (+ (- 1.) (* skoMC1 6.))))) (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (- 1.)))) (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (/ 1. 12.)))) (* skoSC1 (* skoMC1 (* skoMC1 (* skoMC1 (/ 1. 12.))))))))))))) (* skoMC1 (* skoMC1 (* skoMC1 (+ (- 2.) (* skoMC1 (- 6.))))))) (and (<= (* skoSC1 (* skoMC1 (* skoMC1 (* skoMC1 (- 2.))))) (* skoMC1 (* skoMC1 (* skoMC1 2.)))) (and (> (* skoSC1 (* skoMC1 (* skoMC1 (* skoMC1 2.)))) (* skoMC1 (* skoMC1 (* skoMC1 (- 2.))))) (and (<= (* skoSC1 (* skoMC1 (- 1.))) skoMC1) (and (> (* skoSC1 skoMC1) (* skoMC1 (- 1.))) (and (<= 0. skoMC1) (and (> skoMC1 0.) (and (<= 0. skoSC1) (and (<= 2. skoMC1) (and (<= skoSC1 (/ 5. 4.)) (and (> (* skoMC1 (* skoMC1 (* skoMC1 2.))) 0.) (and (<= (* skoMC1 (* skoMC1 (* skoMC1 (- 2.)))) 0.) (and (> (* skoSC1 (* skoMC1 (* skoMC1 skoMC1))) (* skoMC1 (* skoMC1 (* skoMC1 (- 1.))))) (<= (* skoSC1 (* skoMC1 (* skoMC1 (* skoMC1 (- 1.))))) (* skoMC1 (* skoMC1 skoMC1)))))))))))))))))))

% In GRF format:
(sequent " MetiTarski formula " (antecedent (<= (* skoSC1 (* skoMC1 (* skoMC1 (* skoMC1 (- 2.))))) (* skoMC1 (* skoMC1 (* skoMC1 2.)))) (<= (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (* skoMC1 (- 12.))))) (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (+ 1. (* skoMC1 (- 6.)))))) (* skoSC1 (+ (* skoMC1 (* skoMC1 skoMC1)) (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (/ (- 1.) 12.)))) (* skoSC1 (* skoMC1 (* skoMC1 (* skoMC1 (/ (- 1.) 12.))))))))))))) (* skoMC1 (* skoMC1 (* skoMC1 (+ 2. (* skoMC1 6.)))))) (> (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (* skoMC1 12.)))) (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (+ (- 1.) (* skoMC1 6.))))) (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (- 1.)))) (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (/ 1. 12.)))) (* skoSC1 (* skoMC1 (* skoMC1 (* skoMC1 (/ 1. 12.))))))))))))) (* skoMC1 (* skoMC1 (* skoMC1 (+ (- 2.) (* skoMC1 (- 6.))))))) (<= (* skoSC1 (* skoMC1 (* skoMC1 (* skoMC1 (- 2.))))) (* skoMC1 (* skoMC1 (* skoMC1 2.)))) (> (* skoSC1 (* skoMC1 (* skoMC1 (* skoMC1 2.)))) (* skoMC1 (* skoMC1 (* skoMC1 (- 2.))))) (<= (* skoSC1 (* skoMC1 (- 1.))) skoMC1) (> (* skoSC1 skoMC1) (* skoMC1 (- 1.))) (<= 0. skoMC1) (> skoMC1 0.) (<= 0. skoSC1) (<= 2. skoMC1) (<= skoSC1 (/ 5. 4.)) (> (* skoMC1 (* skoMC1 (* skoMC1 2.))) 0.) (<= (* skoMC1 (* skoMC1 (* skoMC1 (- 2.)))) 0.) (> (* skoSC1 (* skoMC1 (* skoMC1 skoMC1))) (* skoMC1 (* skoMC1 (* skoMC1 (- 1.)))))) (succedent (> (* skoSC1 (* skoMC1 (* skoMC1 (* skoMC1 (- 1.))))) (* skoMC1 (* skoMC1 skoMC1)))))
-----[end problem]-----

-----[begin problem]-----
% In Mathematica format:
Timing[Resolve[Exists[{skoSC1,skoMC1}, And[skoSC1*(skoMC1*skoMC1*skoMC1*skoMC1*-12+skoSC1*(skoMC1*skoMC1*skoMC1*(1+skoMC1*-6)+skoSC1*(skoMC1*skoMC1*skoMC1+skoSC1*(skoMC1*skoMC1*skoMC1*(-1/12)+skoSC1*(skoMC1*skoMC1*skoMC1*(-1/12)+skoSC1*(skoMC1*skoMC1*skoMC1*(1/360)+skoSC1*(skoMC1*skoMC1*skoMC1*(1/360)+skoSC1*(skoMC1*skoMC1*skoMC1*(-1/20160)+skoSC1*(skoMC1*skoMC1*skoMC1*(-1/20160)+skoSC1*(skoMC1*skoMC1*skoMC1*(1/1814400)+skoSC1*(skoMC1*skoMC1*skoMC1*(1/1814400)+skoSC1*(skoMC1*skoMC1*skoMC1*(-1/239500800)+skoSC1*skoMC1*skoMC1*skoMC1*(-1/239500800)))))))))))))<=skoMC1*skoMC1*skoMC1*(2+skoMC1*6),skoSC1*skoMC1*skoMC1*skoMC1*2>skoMC1*skoMC1*skoMC1*-2,skoSC1*(skoMC1*skoMC1*skoMC1*skoMC1*-12+skoSC1*(skoMC1*skoMC1*skoMC1*(1+skoMC1*-6)+skoSC1*(skoMC1*skoMC1*skoMC1+skoSC1*(skoMC1*skoMC1*skoMC1*(-1/12)+skoSC1*skoMC1*skoMC1*skoMC1*(-1/12)))))<=skoMC1*skoMC1*skoMC1*(2+skoMC1*6),skoSC1*(skoMC1*skoMC1*skoMC1*skoMC1*12+skoSC1*(skoMC1*skoMC1*skoMC1*(-1+skoMC1*6)+skoSC1*(skoMC1*skoMC1*skoMC1*-1+skoSC1*(skoMC1*skoMC1*skoMC1*(1/12)+skoSC1*skoMC1*skoMC1*skoMC1*(1/12)))))>skoMC1*skoMC1*skoMC1*(-2+skoMC1*-6),skoSC1*skoMC1*skoMC1*skoMC1*-2<=skoMC1*skoMC1*skoMC1*2,skoSC1*skoMC1*skoMC1*skoMC1*2>skoMC1*skoMC1*skoMC1*-2,skoSC1*skoMC1*-1<=skoMC1,skoSC1*skoMC1>skoMC1*-1,0<=skoMC1,skoMC1>0,0<=skoSC1,2<=skoMC1,skoSC1<=(5/4),skoMC1*skoMC1*skoMC1*2>0,skoMC1*skoMC1*skoMC1*-2<=0,skoSC1*skoMC1*skoMC1*skoMC1>skoMC1*skoMC1*skoMC1*-1,skoSC1*skoMC1*skoMC1*skoMC1*-1<=skoMC1*skoMC1*skoMC1]], Reals]]

% In QepcadB format:
(E skoSC1) (E skoMC1) [[(skoSC1 ((skoMC1 skoMC1 skoMC1 skoMC1 (-12))+(skoSC1 ((skoMC1 skoMC1 skoMC1 (1+(skoMC1 (-6))))+(skoSC1 ((skoMC1 skoMC1 skoMC1)+(skoSC1 ((skoMC1 skoMC1 skoMC1 (-1/12))+(skoSC1 ((skoMC1 skoMC1 skoMC1 (-1/12))+(skoSC1 ((skoMC1 skoMC1 skoMC1 (1/360))+(skoSC1 ((skoMC1 skoMC1 skoMC1 (1/360))+(skoSC1 ((skoMC1 skoMC1 skoMC1 (-1/20160))+(skoSC1 ((skoMC1 skoMC1 skoMC1 (-1/20160))+(skoSC1 ((skoMC1 skoMC1 skoMC1 (1/1814400))+(skoSC1 ((skoMC1 skoMC1 skoMC1 (1/1814400))+(skoSC1 ((skoMC1 skoMC1 skoMC1 (-1/239500800))+(skoSC1 skoMC1 skoMC1 skoMC1 (-1/239500800))))))))))))))))))))))))))<=(skoMC1 skoMC1 skoMC1 (2+(skoMC1 (6))))]/\[[(skoMC1 skoMC1 skoMC1 (-2))<(skoSC1 skoMC1 skoMC1 skoMC1 (2))]/\[[(skoSC1 ((skoMC1 skoMC1 skoMC1 skoMC1 (-12))+(skoSC1 ((skoMC1 skoMC1 skoMC1 (1+(skoMC1 (-6))))+(skoSC1 ((skoMC1 skoMC1 skoMC1)+(skoSC1 ((skoMC1 skoMC1 skoMC1 (-1/12))+(skoSC1 skoMC1 skoMC1 skoMC1 (-1/12))))))))))<=(skoMC1 skoMC1 skoMC1 (2+(skoMC1 (6))))]/\[[(skoMC1 skoMC1 skoMC1 (-2+(skoMC1 (-6))))<(skoSC1 ((skoMC1 skoMC1 skoMC1 skoMC1 (12))+(skoSC1 ((skoMC1 skoMC1 skoMC1 (-1+(skoMC1 (6))))+(skoSC1 ((skoMC1 skoMC1 skoMC1 (-1))+(skoSC1 ((skoMC1 skoMC1 skoMC1 (1/12))+(skoSC1 skoMC1 skoMC1 skoMC1 (1/12))))))))))]/\[[(skoSC1 skoMC1 skoMC1 skoMC1 (-2))<=(skoMC1 skoMC1 skoMC1 (2))]/\[[(skoMC1 skoMC1 skoMC1 (-2))<(skoSC1 skoMC1 skoMC1 skoMC1 (2))]/\[[(skoSC1 skoMC1 (-1))<=skoMC1]/\[[(skoMC1 (-1))<(skoSC1 skoMC1)]/\[[0<=skoMC1]/\[[0<skoMC1]/\[[0<=skoSC1]/\[[2<=skoMC1]/\[[skoSC1<=5/4]/\[[0<(skoMC1 skoMC1 skoMC1 (2))]/\[[(skoMC1 skoMC1 skoMC1 (-2))<=0]/\[[(skoMC1 skoMC1 skoMC1 (-1))<(skoSC1 skoMC1 skoMC1 skoMC1)]/\[(skoSC1 skoMC1 skoMC1 skoMC1 (-1))<=(skoMC1 skoMC1 skoMC1)]]]]]]]]]]]]]]]]].

% In SMTLib2 format:
(declare-fun skoSC1 () Real) (declare-fun skoMC1 () Real) (assert (and (<= (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (* skoMC1 (- 12.))))) (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (+ 1. (* skoMC1 (- 6.)))))) (* skoSC1 (+ (* skoMC1 (* skoMC1 skoMC1)) (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (/ (- 1.) 12.)))) (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (/ (- 1.) 12.)))) (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (/ 1. 360.)))) (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (/ 1. 360.)))) (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (/ (- 1.) 20160.)))) (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (/ (- 1.) 20160.)))) (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (/ 1. 1814400.)))) (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (/ 1. 1814400.)))) (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (/ (- 1.) 239500800.)))) (* skoSC1 (* skoMC1 (* skoMC1 (* skoMC1 (/ (- 1.) 239500800.))))))))))))))))))))))))))))) (* skoMC1 (* skoMC1 (* skoMC1 (+ 2. (* skoMC1 6.)))))) (and (> (* skoSC1 (* skoMC1 (* skoMC1 (* skoMC1 2.)))) (* skoMC1 (* skoMC1 (* skoMC1 (- 2.))))) (and (<= (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (* skoMC1 (- 12.))))) (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (+ 1. (* skoMC1 (- 6.)))))) (* skoSC1 (+ (* skoMC1 (* skoMC1 skoMC1)) (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (/ (- 1.) 12.)))) (* skoSC1 (* skoMC1 (* skoMC1 (* skoMC1 (/ (- 1.) 12.))))))))))))) (* skoMC1 (* skoMC1 (* skoMC1 (+ 2. (* skoMC1 6.)))))) (and (> (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (* skoMC1 12.)))) (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (+ (- 1.) (* skoMC1 6.))))) (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (- 1.)))) (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (/ 1. 12.)))) (* skoSC1 (* skoMC1 (* skoMC1 (* skoMC1 (/ 1. 12.))))))))))))) (* skoMC1 (* skoMC1 (* skoMC1 (+ (- 2.) (* skoMC1 (- 6.))))))) (and (<= (* skoSC1 (* skoMC1 (* skoMC1 (* skoMC1 (- 2.))))) (* skoMC1 (* skoMC1 (* skoMC1 2.)))) (and (> (* skoSC1 (* skoMC1 (* skoMC1 (* skoMC1 2.)))) (* skoMC1 (* skoMC1 (* skoMC1 (- 2.))))) (and (<= (* skoSC1 (* skoMC1 (- 1.))) skoMC1) (and (> (* skoSC1 skoMC1) (* skoMC1 (- 1.))) (and (<= 0. skoMC1) (and (> skoMC1 0.) (and (<= 0. skoSC1) (and (<= 2. skoMC1) (and (<= skoSC1 (/ 5. 4.)) (and (> (* skoMC1 (* skoMC1 (* skoMC1 2.))) 0.) (and (<= (* skoMC1 (* skoMC1 (* skoMC1 (- 2.)))) 0.) (and (> (* skoSC1 (* skoMC1 (* skoMC1 skoMC1))) (* skoMC1 (* skoMC1 (* skoMC1 (- 1.))))) (<= (* skoSC1 (* skoMC1 (* skoMC1 (* skoMC1 (- 1.))))) (* skoMC1 (* skoMC1 skoMC1))))))))))))))))))))

% In GRF format:
(sequent " MetiTarski formula " (antecedent (<= (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (* skoMC1 (- 12.))))) (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (+ 1. (* skoMC1 (- 6.)))))) (* skoSC1 (+ (* skoMC1 (* skoMC1 skoMC1)) (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (/ (- 1.) 12.)))) (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (/ (- 1.) 12.)))) (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (/ 1. 360.)))) (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (/ 1. 360.)))) (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (/ (- 1.) 20160.)))) (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (/ (- 1.) 20160.)))) (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (/ 1. 1814400.)))) (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (/ 1. 1814400.)))) (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (/ (- 1.) 239500800.)))) (* skoSC1 (* skoMC1 (* skoMC1 (* skoMC1 (/ (- 1.) 239500800.))))))))))))))))))))))))))))) (* skoMC1 (* skoMC1 (* skoMC1 (+ 2. (* skoMC1 6.)))))) (> (* skoSC1 (* skoMC1 (* skoMC1 (* skoMC1 2.)))) (* skoMC1 (* skoMC1 (* skoMC1 (- 2.))))) (<= (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (* skoMC1 (- 12.))))) (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (+ 1. (* skoMC1 (- 6.)))))) (* skoSC1 (+ (* skoMC1 (* skoMC1 skoMC1)) (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (/ (- 1.) 12.)))) (* skoSC1 (* skoMC1 (* skoMC1 (* skoMC1 (/ (- 1.) 12.))))))))))))) (* skoMC1 (* skoMC1 (* skoMC1 (+ 2. (* skoMC1 6.)))))) (> (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (* skoMC1 12.)))) (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (+ (- 1.) (* skoMC1 6.))))) (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (- 1.)))) (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (/ 1. 12.)))) (* skoSC1 (* skoMC1 (* skoMC1 (* skoMC1 (/ 1. 12.))))))))))))) (* skoMC1 (* skoMC1 (* skoMC1 (+ (- 2.) (* skoMC1 (- 6.))))))) (<= (* skoSC1 (* skoMC1 (* skoMC1 (* skoMC1 (- 2.))))) (* skoMC1 (* skoMC1 (* skoMC1 2.)))) (> (* skoSC1 (* skoMC1 (* skoMC1 (* skoMC1 2.)))) (* skoMC1 (* skoMC1 (* skoMC1 (- 2.))))) (<= (* skoSC1 (* skoMC1 (- 1.))) skoMC1) (> (* skoSC1 skoMC1) (* skoMC1 (- 1.))) (<= 0. skoMC1) (> skoMC1 0.) (<= 0. skoSC1) (<= 2. skoMC1) (<= skoSC1 (/ 5. 4.)) (> (* skoMC1 (* skoMC1 (* skoMC1 2.))) 0.) (<= (* skoMC1 (* skoMC1 (* skoMC1 (- 2.)))) 0.) (> (* skoSC1 (* skoMC1 (* skoMC1 skoMC1))) (* skoMC1 (* skoMC1 (* skoMC1 (- 1.)))))) (succedent (> (* skoSC1 (* skoMC1 (* skoMC1 (* skoMC1 (- 1.))))) (* skoMC1 (* skoMC1 skoMC1)))))
-----[end problem]-----

-----[begin problem]-----
% In Mathematica format:
Timing[Resolve[Exists[{skoSC1,skoMC1}, And[skoSC1*skoMC1*skoMC1*skoMC1*2<=skoMC1*skoMC1*skoMC1*-2,skoSC1*(skoMC1*skoMC1*skoMC1*skoMC1*-12+skoSC1*(skoMC1*skoMC1*skoMC1*(1+skoMC1*-6)+skoSC1*(skoMC1*skoMC1*skoMC1+skoSC1*(skoMC1*skoMC1*skoMC1*(-1/12)+skoSC1*(skoMC1*skoMC1*skoMC1*(-1/12)+skoSC1*(skoMC1*skoMC1*skoMC1*(1/360)+skoSC1*(skoMC1*skoMC1*skoMC1*(1/360)+skoSC1*(skoMC1*skoMC1*skoMC1*(-1/20160)+skoSC1*(skoMC1*skoMC1*skoMC1*(-1/20160)+skoSC1*(skoMC1*skoMC1*skoMC1*(1/1814400)+skoSC1*(skoMC1*skoMC1*skoMC1*(1/1814400)+skoSC1*(skoMC1*skoMC1*skoMC1*(-1/239500800)+skoSC1*skoMC1*skoMC1*skoMC1*(-1/239500800)))))))))))))>skoMC1*skoMC1*skoMC1*(2+skoMC1*6),skoSC1*(skoMC1*skoMC1*skoMC1*skoMC1*-12+skoSC1*(skoMC1*skoMC1*skoMC1*(1+skoMC1*-6)+skoSC1*(skoMC1*skoMC1*skoMC1+skoSC1*(skoMC1*skoMC1*skoMC1*(-1/12)+skoSC1*skoMC1*skoMC1*skoMC1*(-1/12)))))<=skoMC1*skoMC1*skoMC1*(2+skoMC1*6),skoSC1*(skoMC1*skoMC1*skoMC1*skoMC1*12+skoSC1*(skoMC1*skoMC1*skoMC1*(-1+skoMC1*6)+skoSC1*(skoMC1*skoMC1*skoMC1*-1+skoSC1*(skoMC1*skoMC1*skoMC1*(1/12)+skoSC1*skoMC1*skoMC1*skoMC1*(1/12)))))>skoMC1*skoMC1*skoMC1*(-2+skoMC1*-6),skoSC1*skoMC1*skoMC1*skoMC1*-2<=skoMC1*skoMC1*skoMC1*2,skoSC1*skoMC1*skoMC1*skoMC1*2>skoMC1*skoMC1*skoMC1*-2,skoSC1*skoMC1*-1<=skoMC1,skoSC1*skoMC1>skoMC1*-1,0<=skoMC1,skoMC1>0,0<=skoSC1,2<=skoMC1,skoSC1<=(5/4),skoMC1*skoMC1*skoMC1*2>0,skoMC1*skoMC1*skoMC1*-2<=0,skoSC1*skoMC1*skoMC1*skoMC1>skoMC1*skoMC1*skoMC1*-1,skoSC1*skoMC1*skoMC1*skoMC1*-1<=skoMC1*skoMC1*skoMC1]], Reals]]

% In QepcadB format:
(E skoSC1) (E skoMC1) [[(skoSC1 skoMC1 skoMC1 skoMC1 (2))<=(skoMC1 skoMC1 skoMC1 (-2))]/\[[(skoMC1 skoMC1 skoMC1 (2+(skoMC1 (6))))<(skoSC1 ((skoMC1 skoMC1 skoMC1 skoMC1 (-12))+(skoSC1 ((skoMC1 skoMC1 skoMC1 (1+(skoMC1 (-6))))+(skoSC1 ((skoMC1 skoMC1 skoMC1)+(skoSC1 ((skoMC1 skoMC1 skoMC1 (-1/12))+(skoSC1 ((skoMC1 skoMC1 skoMC1 (-1/12))+(skoSC1 ((skoMC1 skoMC1 skoMC1 (1/360))+(skoSC1 ((skoMC1 skoMC1 skoMC1 (1/360))+(skoSC1 ((skoMC1 skoMC1 skoMC1 (-1/20160))+(skoSC1 ((skoMC1 skoMC1 skoMC1 (-1/20160))+(skoSC1 ((skoMC1 skoMC1 skoMC1 (1/1814400))+(skoSC1 ((skoMC1 skoMC1 skoMC1 (1/1814400))+(skoSC1 ((skoMC1 skoMC1 skoMC1 (-1/239500800))+(skoSC1 skoMC1 skoMC1 skoMC1 (-1/239500800))))))))))))))))))))))))))]/\[[(skoSC1 ((skoMC1 skoMC1 skoMC1 skoMC1 (-12))+(skoSC1 ((skoMC1 skoMC1 skoMC1 (1+(skoMC1 (-6))))+(skoSC1 ((skoMC1 skoMC1 skoMC1)+(skoSC1 ((skoMC1 skoMC1 skoMC1 (-1/12))+(skoSC1 skoMC1 skoMC1 skoMC1 (-1/12))))))))))<=(skoMC1 skoMC1 skoMC1 (2+(skoMC1 (6))))]/\[[(skoMC1 skoMC1 skoMC1 (-2+(skoMC1 (-6))))<(skoSC1 ((skoMC1 skoMC1 skoMC1 skoMC1 (12))+(skoSC1 ((skoMC1 skoMC1 skoMC1 (-1+(skoMC1 (6))))+(skoSC1 ((skoMC1 skoMC1 skoMC1 (-1))+(skoSC1 ((skoMC1 skoMC1 skoMC1 (1/12))+(skoSC1 skoMC1 skoMC1 skoMC1 (1/12))))))))))]/\[[(skoSC1 skoMC1 skoMC1 skoMC1 (-2))<=(skoMC1 skoMC1 skoMC1 (2))]/\[[(skoMC1 skoMC1 skoMC1 (-2))<(skoSC1 skoMC1 skoMC1 skoMC1 (2))]/\[[(skoSC1 skoMC1 (-1))<=skoMC1]/\[[(skoMC1 (-1))<(skoSC1 skoMC1)]/\[[0<=skoMC1]/\[[0<skoMC1]/\[[0<=skoSC1]/\[[2<=skoMC1]/\[[skoSC1<=5/4]/\[[0<(skoMC1 skoMC1 skoMC1 (2))]/\[[(skoMC1 skoMC1 skoMC1 (-2))<=0]/\[[(skoMC1 skoMC1 skoMC1 (-1))<(skoSC1 skoMC1 skoMC1 skoMC1)]/\[(skoSC1 skoMC1 skoMC1 skoMC1 (-1))<=(skoMC1 skoMC1 skoMC1)]]]]]]]]]]]]]]]]].

% In SMTLib2 format:
(declare-fun skoSC1 () Real) (declare-fun skoMC1 () Real) (assert (and (<= (* skoSC1 (* skoMC1 (* skoMC1 (* skoMC1 2.)))) (* skoMC1 (* skoMC1 (* skoMC1 (- 2.))))) (and (> (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (* skoMC1 (- 12.))))) (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (+ 1. (* skoMC1 (- 6.)))))) (* skoSC1 (+ (* skoMC1 (* skoMC1 skoMC1)) (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (/ (- 1.) 12.)))) (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (/ (- 1.) 12.)))) (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (/ 1. 360.)))) (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (/ 1. 360.)))) (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (/ (- 1.) 20160.)))) (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (/ (- 1.) 20160.)))) (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (/ 1. 1814400.)))) (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (/ 1. 1814400.)))) (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (/ (- 1.) 239500800.)))) (* skoSC1 (* skoMC1 (* skoMC1 (* skoMC1 (/ (- 1.) 239500800.))))))))))))))))))))))))))))) (* skoMC1 (* skoMC1 (* skoMC1 (+ 2. (* skoMC1 6.)))))) (and (<= (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (* skoMC1 (- 12.))))) (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (+ 1. (* skoMC1 (- 6.)))))) (* skoSC1 (+ (* skoMC1 (* skoMC1 skoMC1)) (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (/ (- 1.) 12.)))) (* skoSC1 (* skoMC1 (* skoMC1 (* skoMC1 (/ (- 1.) 12.))))))))))))) (* skoMC1 (* skoMC1 (* skoMC1 (+ 2. (* skoMC1 6.)))))) (and (> (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (* skoMC1 12.)))) (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (+ (- 1.) (* skoMC1 6.))))) (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (- 1.)))) (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (/ 1. 12.)))) (* skoSC1 (* skoMC1 (* skoMC1 (* skoMC1 (/ 1. 12.))))))))))))) (* skoMC1 (* skoMC1 (* skoMC1 (+ (- 2.) (* skoMC1 (- 6.))))))) (and (<= (* skoSC1 (* skoMC1 (* skoMC1 (* skoMC1 (- 2.))))) (* skoMC1 (* skoMC1 (* skoMC1 2.)))) (and (> (* skoSC1 (* skoMC1 (* skoMC1 (* skoMC1 2.)))) (* skoMC1 (* skoMC1 (* skoMC1 (- 2.))))) (and (<= (* skoSC1 (* skoMC1 (- 1.))) skoMC1) (and (> (* skoSC1 skoMC1) (* skoMC1 (- 1.))) (and (<= 0. skoMC1) (and (> skoMC1 0.) (and (<= 0. skoSC1) (and (<= 2. skoMC1) (and (<= skoSC1 (/ 5. 4.)) (and (> (* skoMC1 (* skoMC1 (* skoMC1 2.))) 0.) (and (<= (* skoMC1 (* skoMC1 (* skoMC1 (- 2.)))) 0.) (and (> (* skoSC1 (* skoMC1 (* skoMC1 skoMC1))) (* skoMC1 (* skoMC1 (* skoMC1 (- 1.))))) (<= (* skoSC1 (* skoMC1 (* skoMC1 (* skoMC1 (- 1.))))) (* skoMC1 (* skoMC1 skoMC1))))))))))))))))))))

% In GRF format:
(sequent " MetiTarski formula " (antecedent (<= (* skoSC1 (* skoMC1 (* skoMC1 (* skoMC1 2.)))) (* skoMC1 (* skoMC1 (* skoMC1 (- 2.))))) (> (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (* skoMC1 (- 12.))))) (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (+ 1. (* skoMC1 (- 6.)))))) (* skoSC1 (+ (* skoMC1 (* skoMC1 skoMC1)) (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (/ (- 1.) 12.)))) (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (/ (- 1.) 12.)))) (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (/ 1. 360.)))) (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (/ 1. 360.)))) (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (/ (- 1.) 20160.)))) (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (/ (- 1.) 20160.)))) (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (/ 1. 1814400.)))) (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (/ 1. 1814400.)))) (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (/ (- 1.) 239500800.)))) (* skoSC1 (* skoMC1 (* skoMC1 (* skoMC1 (/ (- 1.) 239500800.))))))))))))))))))))))))))))) (* skoMC1 (* skoMC1 (* skoMC1 (+ 2. (* skoMC1 6.)))))) (<= (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (* skoMC1 (- 12.))))) (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (+ 1. (* skoMC1 (- 6.)))))) (* skoSC1 (+ (* skoMC1 (* skoMC1 skoMC1)) (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (/ (- 1.) 12.)))) (* skoSC1 (* skoMC1 (* skoMC1 (* skoMC1 (/ (- 1.) 12.))))))))))))) (* skoMC1 (* skoMC1 (* skoMC1 (+ 2. (* skoMC1 6.)))))) (> (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (* skoMC1 12.)))) (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (+ (- 1.) (* skoMC1 6.))))) (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (- 1.)))) (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (/ 1. 12.)))) (* skoSC1 (* skoMC1 (* skoMC1 (* skoMC1 (/ 1. 12.))))))))))))) (* skoMC1 (* skoMC1 (* skoMC1 (+ (- 2.) (* skoMC1 (- 6.))))))) (<= (* skoSC1 (* skoMC1 (* skoMC1 (* skoMC1 (- 2.))))) (* skoMC1 (* skoMC1 (* skoMC1 2.)))) (> (* skoSC1 (* skoMC1 (* skoMC1 (* skoMC1 2.)))) (* skoMC1 (* skoMC1 (* skoMC1 (- 2.))))) (<= (* skoSC1 (* skoMC1 (- 1.))) skoMC1) (> (* skoSC1 skoMC1) (* skoMC1 (- 1.))) (<= 0. skoMC1) (> skoMC1 0.) (<= 0. skoSC1) (<= 2. skoMC1) (<= skoSC1 (/ 5. 4.)) (> (* skoMC1 (* skoMC1 (* skoMC1 2.))) 0.) (<= (* skoMC1 (* skoMC1 (* skoMC1 (- 2.)))) 0.) (> (* skoSC1 (* skoMC1 (* skoMC1 skoMC1))) (* skoMC1 (* skoMC1 (* skoMC1 (- 1.)))))) (succedent (> (* skoSC1 (* skoMC1 (* skoMC1 (* skoMC1 (- 1.))))) (* skoMC1 (* skoMC1 skoMC1)))))
-----[end problem]-----

-----[begin problem]-----
% In Mathematica format:
Timing[Resolve[Exists[{skoSC1,skoMC1}, And[skoSC1*skoMC1*skoMC1*skoMC1*-2<=skoMC1*skoMC1*skoMC1*2,skoSC1*(skoMC1*skoMC1*skoMC1*skoMC1*-12+skoSC1*(skoMC1*skoMC1*skoMC1*(1+skoMC1*-6)+skoSC1*(skoMC1*skoMC1*skoMC1+skoSC1*(skoMC1*skoMC1*skoMC1*(-1/12)+skoSC1*skoMC1*skoMC1*skoMC1*(-1/12)))))<=skoMC1*skoMC1*skoMC1*(2+skoMC1*6),skoSC1*(skoMC1*skoMC1*skoMC1*skoMC1*12+skoSC1*(skoMC1*skoMC1*skoMC1*(-1+skoMC1*6)+skoSC1*(skoMC1*skoMC1*skoMC1*-1+skoSC1*(skoMC1*skoMC1*skoMC1*(1/12)+skoSC1*skoMC1*skoMC1*skoMC1*(1/12)))))>skoMC1*skoMC1*skoMC1*(-2+skoMC1*-6),skoSC1*skoMC1*skoMC1*skoMC1*-2<=skoMC1*skoMC1*skoMC1*2,skoSC1*skoMC1*skoMC1*skoMC1*2>skoMC1*skoMC1*skoMC1*-2,skoSC1*skoMC1*-1<=skoMC1,skoSC1*skoMC1>skoMC1*-1,0<=skoMC1,skoMC1>0,0<=skoSC1,2<=skoMC1,skoSC1<=(5/4),skoMC1*skoMC1*skoMC1*2>0,skoMC1*skoMC1*skoMC1*-2<=0,skoSC1*skoMC1*skoMC1*skoMC1>skoMC1*skoMC1*skoMC1*-1,skoSC1*skoMC1*skoMC1*skoMC1*-1<=skoMC1*skoMC1*skoMC1]], Reals]]

% In QepcadB format:
(E skoSC1) (E skoMC1) [[(skoSC1 skoMC1 skoMC1 skoMC1 (-2))<=(skoMC1 skoMC1 skoMC1 (2))]/\[[(skoSC1 ((skoMC1 skoMC1 skoMC1 skoMC1 (-12))+(skoSC1 ((skoMC1 skoMC1 skoMC1 (1+(skoMC1 (-6))))+(skoSC1 ((skoMC1 skoMC1 skoMC1)+(skoSC1 ((skoMC1 skoMC1 skoMC1 (-1/12))+(skoSC1 skoMC1 skoMC1 skoMC1 (-1/12))))))))))<=(skoMC1 skoMC1 skoMC1 (2+(skoMC1 (6))))]/\[[(skoMC1 skoMC1 skoMC1 (-2+(skoMC1 (-6))))<(skoSC1 ((skoMC1 skoMC1 skoMC1 skoMC1 (12))+(skoSC1 ((skoMC1 skoMC1 skoMC1 (-1+(skoMC1 (6))))+(skoSC1 ((skoMC1 skoMC1 skoMC1 (-1))+(skoSC1 ((skoMC1 skoMC1 skoMC1 (1/12))+(skoSC1 skoMC1 skoMC1 skoMC1 (1/12))))))))))]/\[[(skoSC1 skoMC1 skoMC1 skoMC1 (-2))<=(skoMC1 skoMC1 skoMC1 (2))]/\[[(skoMC1 skoMC1 skoMC1 (-2))<(skoSC1 skoMC1 skoMC1 skoMC1 (2))]/\[[(skoSC1 skoMC1 (-1))<=skoMC1]/\[[(skoMC1 (-1))<(skoSC1 skoMC1)]/\[[0<=skoMC1]/\[[0<skoMC1]/\[[0<=skoSC1]/\[[2<=skoMC1]/\[[skoSC1<=5/4]/\[[0<(skoMC1 skoMC1 skoMC1 (2))]/\[[(skoMC1 skoMC1 skoMC1 (-2))<=0]/\[[(skoMC1 skoMC1 skoMC1 (-1))<(skoSC1 skoMC1 skoMC1 skoMC1)]/\[(skoSC1 skoMC1 skoMC1 skoMC1 (-1))<=(skoMC1 skoMC1 skoMC1)]]]]]]]]]]]]]]]].

% In SMTLib2 format:
(declare-fun skoSC1 () Real) (declare-fun skoMC1 () Real) (assert (and (<= (* skoSC1 (* skoMC1 (* skoMC1 (* skoMC1 (- 2.))))) (* skoMC1 (* skoMC1 (* skoMC1 2.)))) (and (<= (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (* skoMC1 (- 12.))))) (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (+ 1. (* skoMC1 (- 6.)))))) (* skoSC1 (+ (* skoMC1 (* skoMC1 skoMC1)) (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (/ (- 1.) 12.)))) (* skoSC1 (* skoMC1 (* skoMC1 (* skoMC1 (/ (- 1.) 12.))))))))))))) (* skoMC1 (* skoMC1 (* skoMC1 (+ 2. (* skoMC1 6.)))))) (and (> (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (* skoMC1 12.)))) (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (+ (- 1.) (* skoMC1 6.))))) (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (- 1.)))) (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (/ 1. 12.)))) (* skoSC1 (* skoMC1 (* skoMC1 (* skoMC1 (/ 1. 12.))))))))))))) (* skoMC1 (* skoMC1 (* skoMC1 (+ (- 2.) (* skoMC1 (- 6.))))))) (and (<= (* skoSC1 (* skoMC1 (* skoMC1 (* skoMC1 (- 2.))))) (* skoMC1 (* skoMC1 (* skoMC1 2.)))) (and (> (* skoSC1 (* skoMC1 (* skoMC1 (* skoMC1 2.)))) (* skoMC1 (* skoMC1 (* skoMC1 (- 2.))))) (and (<= (* skoSC1 (* skoMC1 (- 1.))) skoMC1) (and (> (* skoSC1 skoMC1) (* skoMC1 (- 1.))) (and (<= 0. skoMC1) (and (> skoMC1 0.) (and (<= 0. skoSC1) (and (<= 2. skoMC1) (and (<= skoSC1 (/ 5. 4.)) (and (> (* skoMC1 (* skoMC1 (* skoMC1 2.))) 0.) (and (<= (* skoMC1 (* skoMC1 (* skoMC1 (- 2.)))) 0.) (and (> (* skoSC1 (* skoMC1 (* skoMC1 skoMC1))) (* skoMC1 (* skoMC1 (* skoMC1 (- 1.))))) (<= (* skoSC1 (* skoMC1 (* skoMC1 (* skoMC1 (- 1.))))) (* skoMC1 (* skoMC1 skoMC1)))))))))))))))))))

% In GRF format:
(sequent " MetiTarski formula " (antecedent (<= (* skoSC1 (* skoMC1 (* skoMC1 (* skoMC1 (- 2.))))) (* skoMC1 (* skoMC1 (* skoMC1 2.)))) (<= (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (* skoMC1 (- 12.))))) (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (+ 1. (* skoMC1 (- 6.)))))) (* skoSC1 (+ (* skoMC1 (* skoMC1 skoMC1)) (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (/ (- 1.) 12.)))) (* skoSC1 (* skoMC1 (* skoMC1 (* skoMC1 (/ (- 1.) 12.))))))))))))) (* skoMC1 (* skoMC1 (* skoMC1 (+ 2. (* skoMC1 6.)))))) (> (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (* skoMC1 12.)))) (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (+ (- 1.) (* skoMC1 6.))))) (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (- 1.)))) (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (/ 1. 12.)))) (* skoSC1 (* skoMC1 (* skoMC1 (* skoMC1 (/ 1. 12.))))))))))))) (* skoMC1 (* skoMC1 (* skoMC1 (+ (- 2.) (* skoMC1 (- 6.))))))) (<= (* skoSC1 (* skoMC1 (* skoMC1 (* skoMC1 (- 2.))))) (* skoMC1 (* skoMC1 (* skoMC1 2.)))) (> (* skoSC1 (* skoMC1 (* skoMC1 (* skoMC1 2.)))) (* skoMC1 (* skoMC1 (* skoMC1 (- 2.))))) (<= (* skoSC1 (* skoMC1 (- 1.))) skoMC1) (> (* skoSC1 skoMC1) (* skoMC1 (- 1.))) (<= 0. skoMC1) (> skoMC1 0.) (<= 0. skoSC1) (<= 2. skoMC1) (<= skoSC1 (/ 5. 4.)) (> (* skoMC1 (* skoMC1 (* skoMC1 2.))) 0.) (<= (* skoMC1 (* skoMC1 (* skoMC1 (- 2.)))) 0.) (> (* skoSC1 (* skoMC1 (* skoMC1 skoMC1))) (* skoMC1 (* skoMC1 (* skoMC1 (- 1.)))))) (succedent (> (* skoSC1 (* skoMC1 (* skoMC1 (* skoMC1 (- 1.))))) (* skoMC1 (* skoMC1 skoMC1)))))
-----[end problem]-----

-----[begin problem]-----
% In Mathematica format:
Timing[Resolve[Exists[{skoSC1,skoMC1}, And[skoSC1*(skoMC1*skoMC1*skoMC1*skoMC1*12+skoSC1*(skoMC1*skoMC1*skoMC1*(-1+skoMC1*6)+skoSC1*(skoMC1*skoMC1*skoMC1*-1+skoSC1*(skoMC1*skoMC1*skoMC1*(1/12)+skoSC1*(skoMC1*skoMC1*skoMC1*(1/12)+skoSC1*(skoMC1*skoMC1*skoMC1*(-1/360)+skoSC1*(skoMC1*skoMC1*skoMC1*(-1/360)+skoSC1*(skoMC1*skoMC1*skoMC1*(1/20160)+skoSC1*(skoMC1*skoMC1*skoMC1*(1/20160)+skoSC1*(skoMC1*skoMC1*skoMC1*(-1/1814400)+skoSC1*(skoMC1*skoMC1*skoMC1*(-1/1814400)+skoSC1*(skoMC1*skoMC1*skoMC1*(1/239500800)+skoSC1*skoMC1*skoMC1*skoMC1*(1/239500800)))))))))))))>skoMC1*skoMC1*skoMC1*(-2+skoMC1*-6),skoSC1*(skoMC1*skoMC1*skoMC1*skoMC1*-12+skoSC1*(skoMC1*skoMC1*skoMC1*(1+skoMC1*-6)+skoSC1*(skoMC1*skoMC1*skoMC1+skoSC1*(skoMC1*skoMC1*skoMC1*(-1/12)+skoSC1*skoMC1*skoMC1*skoMC1*(-1/12)))))<=skoMC1*skoMC1*skoMC1*(2+skoMC1*6),skoSC1*(skoMC1*skoMC1*skoMC1*skoMC1*12+skoSC1*(skoMC1*skoMC1*skoMC1*(-1+skoMC1*6)+skoSC1*(skoMC1*skoMC1*skoMC1*-1+skoSC1*(skoMC1*skoMC1*skoMC1*(1/12)+skoSC1*skoMC1*skoMC1*skoMC1*(1/12)))))>skoMC1*skoMC1*skoMC1*(-2+skoMC1*-6),skoSC1*skoMC1*skoMC1*skoMC1*-2<=skoMC1*skoMC1*skoMC1*2,skoSC1*skoMC1*skoMC1*skoMC1*2>skoMC1*skoMC1*skoMC1*-2,skoSC1*skoMC1*-1<=skoMC1,skoSC1*skoMC1>skoMC1*-1,0<=skoMC1,skoMC1>0,0<=skoSC1,2<=skoMC1,skoSC1<=(5/4),skoMC1*skoMC1*skoMC1*2>0,skoMC1*skoMC1*skoMC1*-2<=0,skoSC1*skoMC1*skoMC1*skoMC1>skoMC1*skoMC1*skoMC1*-1,skoSC1*skoMC1*skoMC1*skoMC1*-1<=skoMC1*skoMC1*skoMC1]], Reals]]

% In QepcadB format:
(E skoSC1) (E skoMC1) [[(skoMC1 skoMC1 skoMC1 (-2+(skoMC1 (-6))))<(skoSC1 ((skoMC1 skoMC1 skoMC1 skoMC1 (12))+(skoSC1 ((skoMC1 skoMC1 skoMC1 (-1+(skoMC1 (6))))+(skoSC1 ((skoMC1 skoMC1 skoMC1 (-1))+(skoSC1 ((skoMC1 skoMC1 skoMC1 (1/12))+(skoSC1 ((skoMC1 skoMC1 skoMC1 (1/12))+(skoSC1 ((skoMC1 skoMC1 skoMC1 (-1/360))+(skoSC1 ((skoMC1 skoMC1 skoMC1 (-1/360))+(skoSC1 ((skoMC1 skoMC1 skoMC1 (1/20160))+(skoSC1 ((skoMC1 skoMC1 skoMC1 (1/20160))+(skoSC1 ((skoMC1 skoMC1 skoMC1 (-1/1814400))+(skoSC1 ((skoMC1 skoMC1 skoMC1 (-1/1814400))+(skoSC1 ((skoMC1 skoMC1 skoMC1 (1/239500800))+(skoSC1 skoMC1 skoMC1 skoMC1 (1/239500800))))))))))))))))))))))))))]/\[[(skoSC1 ((skoMC1 skoMC1 skoMC1 skoMC1 (-12))+(skoSC1 ((skoMC1 skoMC1 skoMC1 (1+(skoMC1 (-6))))+(skoSC1 ((skoMC1 skoMC1 skoMC1)+(skoSC1 ((skoMC1 skoMC1 skoMC1 (-1/12))+(skoSC1 skoMC1 skoMC1 skoMC1 (-1/12))))))))))<=(skoMC1 skoMC1 skoMC1 (2+(skoMC1 (6))))]/\[[(skoMC1 skoMC1 skoMC1 (-2+(skoMC1 (-6))))<(skoSC1 ((skoMC1 skoMC1 skoMC1 skoMC1 (12))+(skoSC1 ((skoMC1 skoMC1 skoMC1 (-1+(skoMC1 (6))))+(skoSC1 ((skoMC1 skoMC1 skoMC1 (-1))+(skoSC1 ((skoMC1 skoMC1 skoMC1 (1/12))+(skoSC1 skoMC1 skoMC1 skoMC1 (1/12))))))))))]/\[[(skoSC1 skoMC1 skoMC1 skoMC1 (-2))<=(skoMC1 skoMC1 skoMC1 (2))]/\[[(skoMC1 skoMC1 skoMC1 (-2))<(skoSC1 skoMC1 skoMC1 skoMC1 (2))]/\[[(skoSC1 skoMC1 (-1))<=skoMC1]/\[[(skoMC1 (-1))<(skoSC1 skoMC1)]/\[[0<=skoMC1]/\[[0<skoMC1]/\[[0<=skoSC1]/\[[2<=skoMC1]/\[[skoSC1<=5/4]/\[[0<(skoMC1 skoMC1 skoMC1 (2))]/\[[(skoMC1 skoMC1 skoMC1 (-2))<=0]/\[[(skoMC1 skoMC1 skoMC1 (-1))<(skoSC1 skoMC1 skoMC1 skoMC1)]/\[(skoSC1 skoMC1 skoMC1 skoMC1 (-1))<=(skoMC1 skoMC1 skoMC1)]]]]]]]]]]]]]]]].

% In SMTLib2 format:
(declare-fun skoSC1 () Real) (declare-fun skoMC1 () Real) (assert (and (> (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (* skoMC1 12.)))) (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (+ (- 1.) (* skoMC1 6.))))) (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (- 1.)))) (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (/ 1. 12.)))) (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (/ 1. 12.)))) (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (/ (- 1.) 360.)))) (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (/ (- 1.) 360.)))) (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (/ 1. 20160.)))) (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (/ 1. 20160.)))) (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (/ (- 1.) 1814400.)))) (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (/ (- 1.) 1814400.)))) (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (/ 1. 239500800.)))) (* skoSC1 (* skoMC1 (* skoMC1 (* skoMC1 (/ 1. 239500800.))))))))))))))))))))))))))))) (* skoMC1 (* skoMC1 (* skoMC1 (+ (- 2.) (* skoMC1 (- 6.))))))) (and (<= (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (* skoMC1 (- 12.))))) (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (+ 1. (* skoMC1 (- 6.)))))) (* skoSC1 (+ (* skoMC1 (* skoMC1 skoMC1)) (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (/ (- 1.) 12.)))) (* skoSC1 (* skoMC1 (* skoMC1 (* skoMC1 (/ (- 1.) 12.))))))))))))) (* skoMC1 (* skoMC1 (* skoMC1 (+ 2. (* skoMC1 6.)))))) (and (> (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (* skoMC1 12.)))) (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (+ (- 1.) (* skoMC1 6.))))) (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (- 1.)))) (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (/ 1. 12.)))) (* skoSC1 (* skoMC1 (* skoMC1 (* skoMC1 (/ 1. 12.))))))))))))) (* skoMC1 (* skoMC1 (* skoMC1 (+ (- 2.) (* skoMC1 (- 6.))))))) (and (<= (* skoSC1 (* skoMC1 (* skoMC1 (* skoMC1 (- 2.))))) (* skoMC1 (* skoMC1 (* skoMC1 2.)))) (and (> (* skoSC1 (* skoMC1 (* skoMC1 (* skoMC1 2.)))) (* skoMC1 (* skoMC1 (* skoMC1 (- 2.))))) (and (<= (* skoSC1 (* skoMC1 (- 1.))) skoMC1) (and (> (* skoSC1 skoMC1) (* skoMC1 (- 1.))) (and (<= 0. skoMC1) (and (> skoMC1 0.) (and (<= 0. skoSC1) (and (<= 2. skoMC1) (and (<= skoSC1 (/ 5. 4.)) (and (> (* skoMC1 (* skoMC1 (* skoMC1 2.))) 0.) (and (<= (* skoMC1 (* skoMC1 (* skoMC1 (- 2.)))) 0.) (and (> (* skoSC1 (* skoMC1 (* skoMC1 skoMC1))) (* skoMC1 (* skoMC1 (* skoMC1 (- 1.))))) (<= (* skoSC1 (* skoMC1 (* skoMC1 (* skoMC1 (- 1.))))) (* skoMC1 (* skoMC1 skoMC1)))))))))))))))))))

% In GRF format:
(sequent " MetiTarski formula " (antecedent (> (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (* skoMC1 12.)))) (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (+ (- 1.) (* skoMC1 6.))))) (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (- 1.)))) (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (/ 1. 12.)))) (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (/ 1. 12.)))) (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (/ (- 1.) 360.)))) (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (/ (- 1.) 360.)))) (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (/ 1. 20160.)))) (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (/ 1. 20160.)))) (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (/ (- 1.) 1814400.)))) (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (/ (- 1.) 1814400.)))) (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (/ 1. 239500800.)))) (* skoSC1 (* skoMC1 (* skoMC1 (* skoMC1 (/ 1. 239500800.))))))))))))))))))))))))))))) (* skoMC1 (* skoMC1 (* skoMC1 (+ (- 2.) (* skoMC1 (- 6.))))))) (<= (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (* skoMC1 (- 12.))))) (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (+ 1. (* skoMC1 (- 6.)))))) (* skoSC1 (+ (* skoMC1 (* skoMC1 skoMC1)) (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (/ (- 1.) 12.)))) (* skoSC1 (* skoMC1 (* skoMC1 (* skoMC1 (/ (- 1.) 12.))))))))))))) (* skoMC1 (* skoMC1 (* skoMC1 (+ 2. (* skoMC1 6.)))))) (> (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (* skoMC1 12.)))) (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (+ (- 1.) (* skoMC1 6.))))) (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (- 1.)))) (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (/ 1. 12.)))) (* skoSC1 (* skoMC1 (* skoMC1 (* skoMC1 (/ 1. 12.))))))))))))) (* skoMC1 (* skoMC1 (* skoMC1 (+ (- 2.) (* skoMC1 (- 6.))))))) (<= (* skoSC1 (* skoMC1 (* skoMC1 (* skoMC1 (- 2.))))) (* skoMC1 (* skoMC1 (* skoMC1 2.)))) (> (* skoSC1 (* skoMC1 (* skoMC1 (* skoMC1 2.)))) (* skoMC1 (* skoMC1 (* skoMC1 (- 2.))))) (<= (* skoSC1 (* skoMC1 (- 1.))) skoMC1) (> (* skoSC1 skoMC1) (* skoMC1 (- 1.))) (<= 0. skoMC1) (> skoMC1 0.) (<= 0. skoSC1) (<= 2. skoMC1) (<= skoSC1 (/ 5. 4.)) (> (* skoMC1 (* skoMC1 (* skoMC1 2.))) 0.) (<= (* skoMC1 (* skoMC1 (* skoMC1 (- 2.)))) 0.) (> (* skoSC1 (* skoMC1 (* skoMC1 skoMC1))) (* skoMC1 (* skoMC1 (* skoMC1 (- 1.)))))) (succedent (> (* skoSC1 (* skoMC1 (* skoMC1 (* skoMC1 (- 1.))))) (* skoMC1 (* skoMC1 skoMC1)))))
-----[end problem]-----

-----[begin problem]-----
% In Mathematica format:
Timing[Resolve[Exists[{skoSC1,skoMC1}, And[skoSC1*(skoMC1*skoMC1*skoMC1*-1+skoSC1*skoMC1*skoMC1*skoMC1*-1)<=0,skoSC1*(skoMC1*skoMC1*skoMC1*skoMC1*-12+skoSC1*(skoMC1*skoMC1*skoMC1*(1+skoMC1*-6)+skoSC1*(skoMC1*skoMC1*skoMC1+skoSC1*(skoMC1*skoMC1*skoMC1*(-1/12)+skoSC1*skoMC1*skoMC1*skoMC1*(-1/12)))))<=skoMC1*skoMC1*skoMC1*(2+skoMC1*6),skoSC1*(skoMC1*skoMC1*skoMC1*skoMC1*12+skoSC1*(skoMC1*skoMC1*skoMC1*(-1+skoMC1*6)+skoSC1*(skoMC1*skoMC1*skoMC1*-1+skoSC1*(skoMC1*skoMC1*skoMC1*(1/12)+skoSC1*skoMC1*skoMC1*skoMC1*(1/12)))))>skoMC1*skoMC1*skoMC1*(-2+skoMC1*-6),skoSC1*skoMC1*skoMC1*skoMC1*-2<=skoMC1*skoMC1*skoMC1*2,skoSC1*skoMC1*skoMC1*skoMC1*2>skoMC1*skoMC1*skoMC1*-2,skoSC1*skoMC1*-1<=skoMC1,skoSC1*skoMC1>skoMC1*-1,0<=skoMC1,skoMC1>0,0<=skoSC1,2<=skoMC1,skoSC1<=(5/4),skoMC1*skoMC1*skoMC1*2>0,skoMC1*skoMC1*skoMC1*-2<=0,skoSC1*skoMC1*skoMC1*skoMC1>skoMC1*skoMC1*skoMC1*-1,skoSC1*skoMC1*skoMC1*skoMC1*-1<=skoMC1*skoMC1*skoMC1]], Reals]]

% In QepcadB format:
(E skoSC1) (E skoMC1) [[(skoSC1 ((skoMC1 skoMC1 skoMC1 (-1))+(skoSC1 skoMC1 skoMC1 skoMC1 (-1))))<=0]/\[[(skoSC1 ((skoMC1 skoMC1 skoMC1 skoMC1 (-12))+(skoSC1 ((skoMC1 skoMC1 skoMC1 (1+(skoMC1 (-6))))+(skoSC1 ((skoMC1 skoMC1 skoMC1)+(skoSC1 ((skoMC1 skoMC1 skoMC1 (-1/12))+(skoSC1 skoMC1 skoMC1 skoMC1 (-1/12))))))))))<=(skoMC1 skoMC1 skoMC1 (2+(skoMC1 (6))))]/\[[(skoMC1 skoMC1 skoMC1 (-2+(skoMC1 (-6))))<(skoSC1 ((skoMC1 skoMC1 skoMC1 skoMC1 (12))+(skoSC1 ((skoMC1 skoMC1 skoMC1 (-1+(skoMC1 (6))))+(skoSC1 ((skoMC1 skoMC1 skoMC1 (-1))+(skoSC1 ((skoMC1 skoMC1 skoMC1 (1/12))+(skoSC1 skoMC1 skoMC1 skoMC1 (1/12))))))))))]/\[[(skoSC1 skoMC1 skoMC1 skoMC1 (-2))<=(skoMC1 skoMC1 skoMC1 (2))]/\[[(skoMC1 skoMC1 skoMC1 (-2))<(skoSC1 skoMC1 skoMC1 skoMC1 (2))]/\[[(skoSC1 skoMC1 (-1))<=skoMC1]/\[[(skoMC1 (-1))<(skoSC1 skoMC1)]/\[[0<=skoMC1]/\[[0<skoMC1]/\[[0<=skoSC1]/\[[2<=skoMC1]/\[[skoSC1<=5/4]/\[[0<(skoMC1 skoMC1 skoMC1 (2))]/\[[(skoMC1 skoMC1 skoMC1 (-2))<=0]/\[[(skoMC1 skoMC1 skoMC1 (-1))<(skoSC1 skoMC1 skoMC1 skoMC1)]/\[(skoSC1 skoMC1 skoMC1 skoMC1 (-1))<=(skoMC1 skoMC1 skoMC1)]]]]]]]]]]]]]]]].

% In SMTLib2 format:
(declare-fun skoSC1 () Real) (declare-fun skoMC1 () Real) (assert (and (<= (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (- 1.)))) (* skoSC1 (* skoMC1 (* skoMC1 (* skoMC1 (- 1.))))))) 0.) (and (<= (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (* skoMC1 (- 12.))))) (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (+ 1. (* skoMC1 (- 6.)))))) (* skoSC1 (+ (* skoMC1 (* skoMC1 skoMC1)) (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (/ (- 1.) 12.)))) (* skoSC1 (* skoMC1 (* skoMC1 (* skoMC1 (/ (- 1.) 12.))))))))))))) (* skoMC1 (* skoMC1 (* skoMC1 (+ 2. (* skoMC1 6.)))))) (and (> (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (* skoMC1 12.)))) (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (+ (- 1.) (* skoMC1 6.))))) (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (- 1.)))) (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (/ 1. 12.)))) (* skoSC1 (* skoMC1 (* skoMC1 (* skoMC1 (/ 1. 12.))))))))))))) (* skoMC1 (* skoMC1 (* skoMC1 (+ (- 2.) (* skoMC1 (- 6.))))))) (and (<= (* skoSC1 (* skoMC1 (* skoMC1 (* skoMC1 (- 2.))))) (* skoMC1 (* skoMC1 (* skoMC1 2.)))) (and (> (* skoSC1 (* skoMC1 (* skoMC1 (* skoMC1 2.)))) (* skoMC1 (* skoMC1 (* skoMC1 (- 2.))))) (and (<= (* skoSC1 (* skoMC1 (- 1.))) skoMC1) (and (> (* skoSC1 skoMC1) (* skoMC1 (- 1.))) (and (<= 0. skoMC1) (and (> skoMC1 0.) (and (<= 0. skoSC1) (and (<= 2. skoMC1) (and (<= skoSC1 (/ 5. 4.)) (and (> (* skoMC1 (* skoMC1 (* skoMC1 2.))) 0.) (and (<= (* skoMC1 (* skoMC1 (* skoMC1 (- 2.)))) 0.) (and (> (* skoSC1 (* skoMC1 (* skoMC1 skoMC1))) (* skoMC1 (* skoMC1 (* skoMC1 (- 1.))))) (<= (* skoSC1 (* skoMC1 (* skoMC1 (* skoMC1 (- 1.))))) (* skoMC1 (* skoMC1 skoMC1)))))))))))))))))))

% In GRF format:
(sequent " MetiTarski formula " (antecedent (<= (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (- 1.)))) (* skoSC1 (* skoMC1 (* skoMC1 (* skoMC1 (- 1.))))))) 0.) (<= (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (* skoMC1 (- 12.))))) (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (+ 1. (* skoMC1 (- 6.)))))) (* skoSC1 (+ (* skoMC1 (* skoMC1 skoMC1)) (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (/ (- 1.) 12.)))) (* skoSC1 (* skoMC1 (* skoMC1 (* skoMC1 (/ (- 1.) 12.))))))))))))) (* skoMC1 (* skoMC1 (* skoMC1 (+ 2. (* skoMC1 6.)))))) (> (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (* skoMC1 12.)))) (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (+ (- 1.) (* skoMC1 6.))))) (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (- 1.)))) (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (/ 1. 12.)))) (* skoSC1 (* skoMC1 (* skoMC1 (* skoMC1 (/ 1. 12.))))))))))))) (* skoMC1 (* skoMC1 (* skoMC1 (+ (- 2.) (* skoMC1 (- 6.))))))) (<= (* skoSC1 (* skoMC1 (* skoMC1 (* skoMC1 (- 2.))))) (* skoMC1 (* skoMC1 (* skoMC1 2.)))) (> (* skoSC1 (* skoMC1 (* skoMC1 (* skoMC1 2.)))) (* skoMC1 (* skoMC1 (* skoMC1 (- 2.))))) (<= (* skoSC1 (* skoMC1 (- 1.))) skoMC1) (> (* skoSC1 skoMC1) (* skoMC1 (- 1.))) (<= 0. skoMC1) (> skoMC1 0.) (<= 0. skoSC1) (<= 2. skoMC1) (<= skoSC1 (/ 5. 4.)) (> (* skoMC1 (* skoMC1 (* skoMC1 2.))) 0.) (<= (* skoMC1 (* skoMC1 (* skoMC1 (- 2.)))) 0.) (> (* skoSC1 (* skoMC1 (* skoMC1 skoMC1))) (* skoMC1 (* skoMC1 (* skoMC1 (- 1.)))))) (succedent (> (* skoSC1 (* skoMC1 (* skoMC1 (* skoMC1 (- 1.))))) (* skoMC1 (* skoMC1 skoMC1)))))
-----[end problem]-----

-----[begin problem]-----
% In Mathematica format:
Timing[Resolve[Exists[{skoSC1,skoMC1}, And[skoSC1*(skoMC1*skoMC1*skoMC1*-1+skoSC1*skoMC1*skoMC1*skoMC1*-1)<=0,skoSC1*(skoMC1*skoMC1*skoMC1+skoSC1*skoMC1*skoMC1*skoMC1)>0,skoSC1*(skoMC1*skoMC1*skoMC1*skoMC1*-12+skoSC1*(skoMC1*skoMC1*skoMC1*(1+skoMC1*-6)+skoSC1*(skoMC1*skoMC1*skoMC1+skoSC1*(skoMC1*skoMC1*skoMC1*(-1/12)+skoSC1*skoMC1*skoMC1*skoMC1*(-1/12)))))<=skoMC1*skoMC1*skoMC1*(2+skoMC1*6),skoSC1*(skoMC1*skoMC1*skoMC1*skoMC1*12+skoSC1*(skoMC1*skoMC1*skoMC1*(-1+skoMC1*6)+skoSC1*(skoMC1*skoMC1*skoMC1*-1+skoSC1*(skoMC1*skoMC1*skoMC1*(1/12)+skoSC1*skoMC1*skoMC1*skoMC1*(1/12)))))>skoMC1*skoMC1*skoMC1*(-2+skoMC1*-6),skoSC1*skoMC1*skoMC1*skoMC1*-2<=skoMC1*skoMC1*skoMC1*2,skoSC1*skoMC1*skoMC1*skoMC1*2>skoMC1*skoMC1*skoMC1*-2,skoSC1*skoMC1*-1<=skoMC1,skoSC1*skoMC1>skoMC1*-1,0<=skoMC1,skoMC1>0,0<=skoSC1,2<=skoMC1,skoSC1<=(5/4),skoMC1*skoMC1*skoMC1*2>0,skoMC1*skoMC1*skoMC1*-2<=0,skoSC1*skoMC1*skoMC1*skoMC1>skoMC1*skoMC1*skoMC1*-1,skoSC1*skoMC1*skoMC1*skoMC1*-1<=skoMC1*skoMC1*skoMC1]], Reals]]

% In QepcadB format:
(E skoSC1) (E skoMC1) [[(skoSC1 ((skoMC1 skoMC1 skoMC1 (-1))+(skoSC1 skoMC1 skoMC1 skoMC1 (-1))))<=0]/\[[0<(skoSC1 ((skoMC1 skoMC1 skoMC1)+(skoSC1 skoMC1 skoMC1 skoMC1)))]/\[[(skoSC1 ((skoMC1 skoMC1 skoMC1 skoMC1 (-12))+(skoSC1 ((skoMC1 skoMC1 skoMC1 (1+(skoMC1 (-6))))+(skoSC1 ((skoMC1 skoMC1 skoMC1)+(skoSC1 ((skoMC1 skoMC1 skoMC1 (-1/12))+(skoSC1 skoMC1 skoMC1 skoMC1 (-1/12))))))))))<=(skoMC1 skoMC1 skoMC1 (2+(skoMC1 (6))))]/\[[(skoMC1 skoMC1 skoMC1 (-2+(skoMC1 (-6))))<(skoSC1 ((skoMC1 skoMC1 skoMC1 skoMC1 (12))+(skoSC1 ((skoMC1 skoMC1 skoMC1 (-1+(skoMC1 (6))))+(skoSC1 ((skoMC1 skoMC1 skoMC1 (-1))+(skoSC1 ((skoMC1 skoMC1 skoMC1 (1/12))+(skoSC1 skoMC1 skoMC1 skoMC1 (1/12))))))))))]/\[[(skoSC1 skoMC1 skoMC1 skoMC1 (-2))<=(skoMC1 skoMC1 skoMC1 (2))]/\[[(skoMC1 skoMC1 skoMC1 (-2))<(skoSC1 skoMC1 skoMC1 skoMC1 (2))]/\[[(skoSC1 skoMC1 (-1))<=skoMC1]/\[[(skoMC1 (-1))<(skoSC1 skoMC1)]/\[[0<=skoMC1]/\[[0<skoMC1]/\[[0<=skoSC1]/\[[2<=skoMC1]/\[[skoSC1<=5/4]/\[[0<(skoMC1 skoMC1 skoMC1 (2))]/\[[(skoMC1 skoMC1 skoMC1 (-2))<=0]/\[[(skoMC1 skoMC1 skoMC1 (-1))<(skoSC1 skoMC1 skoMC1 skoMC1)]/\[(skoSC1 skoMC1 skoMC1 skoMC1 (-1))<=(skoMC1 skoMC1 skoMC1)]]]]]]]]]]]]]]]]].

% In SMTLib2 format:
(declare-fun skoSC1 () Real) (declare-fun skoMC1 () Real) (assert (and (<= (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (- 1.)))) (* skoSC1 (* skoMC1 (* skoMC1 (* skoMC1 (- 1.))))))) 0.) (and (> (* skoSC1 (+ (* skoMC1 (* skoMC1 skoMC1)) (* skoSC1 (* skoMC1 (* skoMC1 skoMC1))))) 0.) (and (<= (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (* skoMC1 (- 12.))))) (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (+ 1. (* skoMC1 (- 6.)))))) (* skoSC1 (+ (* skoMC1 (* skoMC1 skoMC1)) (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (/ (- 1.) 12.)))) (* skoSC1 (* skoMC1 (* skoMC1 (* skoMC1 (/ (- 1.) 12.))))))))))))) (* skoMC1 (* skoMC1 (* skoMC1 (+ 2. (* skoMC1 6.)))))) (and (> (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (* skoMC1 12.)))) (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (+ (- 1.) (* skoMC1 6.))))) (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (- 1.)))) (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (/ 1. 12.)))) (* skoSC1 (* skoMC1 (* skoMC1 (* skoMC1 (/ 1. 12.))))))))))))) (* skoMC1 (* skoMC1 (* skoMC1 (+ (- 2.) (* skoMC1 (- 6.))))))) (and (<= (* skoSC1 (* skoMC1 (* skoMC1 (* skoMC1 (- 2.))))) (* skoMC1 (* skoMC1 (* skoMC1 2.)))) (and (> (* skoSC1 (* skoMC1 (* skoMC1 (* skoMC1 2.)))) (* skoMC1 (* skoMC1 (* skoMC1 (- 2.))))) (and (<= (* skoSC1 (* skoMC1 (- 1.))) skoMC1) (and (> (* skoSC1 skoMC1) (* skoMC1 (- 1.))) (and (<= 0. skoMC1) (and (> skoMC1 0.) (and (<= 0. skoSC1) (and (<= 2. skoMC1) (and (<= skoSC1 (/ 5. 4.)) (and (> (* skoMC1 (* skoMC1 (* skoMC1 2.))) 0.) (and (<= (* skoMC1 (* skoMC1 (* skoMC1 (- 2.)))) 0.) (and (> (* skoSC1 (* skoMC1 (* skoMC1 skoMC1))) (* skoMC1 (* skoMC1 (* skoMC1 (- 1.))))) (<= (* skoSC1 (* skoMC1 (* skoMC1 (* skoMC1 (- 1.))))) (* skoMC1 (* skoMC1 skoMC1))))))))))))))))))))

% In GRF format:
(sequent " MetiTarski formula " (antecedent (<= (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (- 1.)))) (* skoSC1 (* skoMC1 (* skoMC1 (* skoMC1 (- 1.))))))) 0.) (> (* skoSC1 (+ (* skoMC1 (* skoMC1 skoMC1)) (* skoSC1 (* skoMC1 (* skoMC1 skoMC1))))) 0.) (<= (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (* skoMC1 (- 12.))))) (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (+ 1. (* skoMC1 (- 6.)))))) (* skoSC1 (+ (* skoMC1 (* skoMC1 skoMC1)) (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (/ (- 1.) 12.)))) (* skoSC1 (* skoMC1 (* skoMC1 (* skoMC1 (/ (- 1.) 12.))))))))))))) (* skoMC1 (* skoMC1 (* skoMC1 (+ 2. (* skoMC1 6.)))))) (> (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (* skoMC1 12.)))) (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (+ (- 1.) (* skoMC1 6.))))) (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (- 1.)))) (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (/ 1. 12.)))) (* skoSC1 (* skoMC1 (* skoMC1 (* skoMC1 (/ 1. 12.))))))))))))) (* skoMC1 (* skoMC1 (* skoMC1 (+ (- 2.) (* skoMC1 (- 6.))))))) (<= (* skoSC1 (* skoMC1 (* skoMC1 (* skoMC1 (- 2.))))) (* skoMC1 (* skoMC1 (* skoMC1 2.)))) (> (* skoSC1 (* skoMC1 (* skoMC1 (* skoMC1 2.)))) (* skoMC1 (* skoMC1 (* skoMC1 (- 2.))))) (<= (* skoSC1 (* skoMC1 (- 1.))) skoMC1) (> (* skoSC1 skoMC1) (* skoMC1 (- 1.))) (<= 0. skoMC1) (> skoMC1 0.) (<= 0. skoSC1) (<= 2. skoMC1) (<= skoSC1 (/ 5. 4.)) (> (* skoMC1 (* skoMC1 (* skoMC1 2.))) 0.) (<= (* skoMC1 (* skoMC1 (* skoMC1 (- 2.)))) 0.) (> (* skoSC1 (* skoMC1 (* skoMC1 skoMC1))) (* skoMC1 (* skoMC1 (* skoMC1 (- 1.)))))) (succedent (> (* skoSC1 (* skoMC1 (* skoMC1 (* skoMC1 (- 1.))))) (* skoMC1 (* skoMC1 skoMC1)))))
-----[end problem]-----

-----[begin problem]-----
% In Mathematica format:
Timing[Resolve[Exists[{skoMC1,skoSC1}, And[skoSC1*(skoMC1*skoMC1*skoMC1*skoMC1*(5+skoMC1*-6)+skoSC1*(skoMC1*skoMC1*skoMC1*(-1+skoMC1*(3+skoMC1*-6))+skoSC1*(skoMC1*skoMC1*skoMC1*(-1+skoMC1*(-3+skoMC1*-2))+skoSC1*skoMC1*skoMC1*skoMC1*skoMC1*-1)))<=skoMC1*skoMC1*skoMC1*skoMC1*skoMC1*2,skoSC1*(skoMC1*skoMC1*skoMC1*-1+skoSC1*skoMC1*skoMC1*skoMC1*-1)>0,skoSC1*(skoMC1*skoMC1*skoMC1*skoMC1*-12+skoSC1*(skoMC1*skoMC1*skoMC1*(1+skoMC1*-6)+skoSC1*(skoMC1*skoMC1*skoMC1+skoSC1*(skoMC1*skoMC1*skoMC1*(-1/12)+skoSC1*skoMC1*skoMC1*skoMC1*(-1/12)))))<=skoMC1*skoMC1*skoMC1*(2+skoMC1*6),skoSC1*(skoMC1*skoMC1*skoMC1*skoMC1*12+skoSC1*(skoMC1*skoMC1*skoMC1*(-1+skoMC1*6)+skoSC1*(skoMC1*skoMC1*skoMC1*-1+skoSC1*(skoMC1*skoMC1*skoMC1*(1/12)+skoSC1*skoMC1*skoMC1*skoMC1*(1/12)))))>skoMC1*skoMC1*skoMC1*(-2+skoMC1*-6),skoSC1*skoMC1*skoMC1*skoMC1*-2<=skoMC1*skoMC1*skoMC1*2,skoSC1*skoMC1*skoMC1*skoMC1*2>skoMC1*skoMC1*skoMC1*-2,skoSC1*skoMC1*-1<=skoMC1,skoSC1*skoMC1>skoMC1*-1,0<=skoMC1,skoMC1>0,0<=skoSC1,2<=skoMC1,skoSC1<=(5/4),skoMC1*skoMC1*skoMC1*2>0,skoMC1*skoMC1*skoMC1*-2<=0,skoSC1*skoMC1*skoMC1*skoMC1>skoMC1*skoMC1*skoMC1*-1,skoSC1*skoMC1*skoMC1*skoMC1*-1<=skoMC1*skoMC1*skoMC1]], Reals]]

% In QepcadB format:
(E skoMC1) (E skoSC1) [[(skoSC1 ((skoMC1 skoMC1 skoMC1 skoMC1 (5+(skoMC1 (-6))))+(skoSC1 ((skoMC1 skoMC1 skoMC1 (-1+(skoMC1 (3+(skoMC1 (-6))))))+(skoSC1 ((skoMC1 skoMC1 skoMC1 (-1+(skoMC1 (-3+(skoMC1 (-2))))))+(skoSC1 skoMC1 skoMC1 skoMC1 skoMC1 (-1))))))))<=(skoMC1 skoMC1 skoMC1 skoMC1 skoMC1 (2))]/\[[0<(skoSC1 ((skoMC1 skoMC1 skoMC1 (-1))+(skoSC1 skoMC1 skoMC1 skoMC1 (-1))))]/\[[(skoSC1 ((skoMC1 skoMC1 skoMC1 skoMC1 (-12))+(skoSC1 ((skoMC1 skoMC1 skoMC1 (1+(skoMC1 (-6))))+(skoSC1 ((skoMC1 skoMC1 skoMC1)+(skoSC1 ((skoMC1 skoMC1 skoMC1 (-1/12))+(skoSC1 skoMC1 skoMC1 skoMC1 (-1/12))))))))))<=(skoMC1 skoMC1 skoMC1 (2+(skoMC1 (6))))]/\[[(skoMC1 skoMC1 skoMC1 (-2+(skoMC1 (-6))))<(skoSC1 ((skoMC1 skoMC1 skoMC1 skoMC1 (12))+(skoSC1 ((skoMC1 skoMC1 skoMC1 (-1+(skoMC1 (6))))+(skoSC1 ((skoMC1 skoMC1 skoMC1 (-1))+(skoSC1 ((skoMC1 skoMC1 skoMC1 (1/12))+(skoSC1 skoMC1 skoMC1 skoMC1 (1/12))))))))))]/\[[(skoSC1 skoMC1 skoMC1 skoMC1 (-2))<=(skoMC1 skoMC1 skoMC1 (2))]/\[[(skoMC1 skoMC1 skoMC1 (-2))<(skoSC1 skoMC1 skoMC1 skoMC1 (2))]/\[[(skoSC1 skoMC1 (-1))<=skoMC1]/\[[(skoMC1 (-1))<(skoSC1 skoMC1)]/\[[0<=skoMC1]/\[[0<skoMC1]/\[[0<=skoSC1]/\[[2<=skoMC1]/\[[skoSC1<=5/4]/\[[0<(skoMC1 skoMC1 skoMC1 (2))]/\[[(skoMC1 skoMC1 skoMC1 (-2))<=0]/\[[(skoMC1 skoMC1 skoMC1 (-1))<(skoSC1 skoMC1 skoMC1 skoMC1)]/\[(skoSC1 skoMC1 skoMC1 skoMC1 (-1))<=(skoMC1 skoMC1 skoMC1)]]]]]]]]]]]]]]]]].

% In SMTLib2 format:
(declare-fun skoMC1 () Real) (declare-fun skoSC1 () Real) (assert (and (<= (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (* skoMC1 (+ 5. (* skoMC1 (- 6.))))))) (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (+ (- 1.) (* skoMC1 (+ 3. (* skoMC1 (- 6.)))))))) (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (+ (- 1.) (* skoMC1 (+ (- 3.) (* skoMC1 (- 2.)))))))) (* skoSC1 (* skoMC1 (* skoMC1 (* skoMC1 (* skoMC1 (- 1.)))))))))))) (* skoMC1 (* skoMC1 (* skoMC1 (* skoMC1 (* skoMC1 2.)))))) (and (> (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (- 1.)))) (* skoSC1 (* skoMC1 (* skoMC1 (* skoMC1 (- 1.))))))) 0.) (and (<= (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (* skoMC1 (- 12.))))) (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (+ 1. (* skoMC1 (- 6.)))))) (* skoSC1 (+ (* skoMC1 (* skoMC1 skoMC1)) (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (/ (- 1.) 12.)))) (* skoSC1 (* skoMC1 (* skoMC1 (* skoMC1 (/ (- 1.) 12.))))))))))))) (* skoMC1 (* skoMC1 (* skoMC1 (+ 2. (* skoMC1 6.)))))) (and (> (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (* skoMC1 12.)))) (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (+ (- 1.) (* skoMC1 6.))))) (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (- 1.)))) (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (/ 1. 12.)))) (* skoSC1 (* skoMC1 (* skoMC1 (* skoMC1 (/ 1. 12.))))))))))))) (* skoMC1 (* skoMC1 (* skoMC1 (+ (- 2.) (* skoMC1 (- 6.))))))) (and (<= (* skoSC1 (* skoMC1 (* skoMC1 (* skoMC1 (- 2.))))) (* skoMC1 (* skoMC1 (* skoMC1 2.)))) (and (> (* skoSC1 (* skoMC1 (* skoMC1 (* skoMC1 2.)))) (* skoMC1 (* skoMC1 (* skoMC1 (- 2.))))) (and (<= (* skoSC1 (* skoMC1 (- 1.))) skoMC1) (and (> (* skoSC1 skoMC1) (* skoMC1 (- 1.))) (and (<= 0. skoMC1) (and (> skoMC1 0.) (and (<= 0. skoSC1) (and (<= 2. skoMC1) (and (<= skoSC1 (/ 5. 4.)) (and (> (* skoMC1 (* skoMC1 (* skoMC1 2.))) 0.) (and (<= (* skoMC1 (* skoMC1 (* skoMC1 (- 2.)))) 0.) (and (> (* skoSC1 (* skoMC1 (* skoMC1 skoMC1))) (* skoMC1 (* skoMC1 (* skoMC1 (- 1.))))) (<= (* skoSC1 (* skoMC1 (* skoMC1 (* skoMC1 (- 1.))))) (* skoMC1 (* skoMC1 skoMC1))))))))))))))))))))

% In GRF format:
(sequent " MetiTarski formula " (antecedent (<= (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (* skoMC1 (+ 5. (* skoMC1 (- 6.))))))) (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (+ (- 1.) (* skoMC1 (+ 3. (* skoMC1 (- 6.)))))))) (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (+ (- 1.) (* skoMC1 (+ (- 3.) (* skoMC1 (- 2.)))))))) (* skoSC1 (* skoMC1 (* skoMC1 (* skoMC1 (* skoMC1 (- 1.)))))))))))) (* skoMC1 (* skoMC1 (* skoMC1 (* skoMC1 (* skoMC1 2.)))))) (> (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (- 1.)))) (* skoSC1 (* skoMC1 (* skoMC1 (* skoMC1 (- 1.))))))) 0.) (<= (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (* skoMC1 (- 12.))))) (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (+ 1. (* skoMC1 (- 6.)))))) (* skoSC1 (+ (* skoMC1 (* skoMC1 skoMC1)) (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (/ (- 1.) 12.)))) (* skoSC1 (* skoMC1 (* skoMC1 (* skoMC1 (/ (- 1.) 12.))))))))))))) (* skoMC1 (* skoMC1 (* skoMC1 (+ 2. (* skoMC1 6.)))))) (> (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (* skoMC1 12.)))) (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (+ (- 1.) (* skoMC1 6.))))) (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (- 1.)))) (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (/ 1. 12.)))) (* skoSC1 (* skoMC1 (* skoMC1 (* skoMC1 (/ 1. 12.))))))))))))) (* skoMC1 (* skoMC1 (* skoMC1 (+ (- 2.) (* skoMC1 (- 6.))))))) (<= (* skoSC1 (* skoMC1 (* skoMC1 (* skoMC1 (- 2.))))) (* skoMC1 (* skoMC1 (* skoMC1 2.)))) (> (* skoSC1 (* skoMC1 (* skoMC1 (* skoMC1 2.)))) (* skoMC1 (* skoMC1 (* skoMC1 (- 2.))))) (<= (* skoSC1 (* skoMC1 (- 1.))) skoMC1) (> (* skoSC1 skoMC1) (* skoMC1 (- 1.))) (<= 0. skoMC1) (> skoMC1 0.) (<= 0. skoSC1) (<= 2. skoMC1) (<= skoSC1 (/ 5. 4.)) (> (* skoMC1 (* skoMC1 (* skoMC1 2.))) 0.) (<= (* skoMC1 (* skoMC1 (* skoMC1 (- 2.)))) 0.) (> (* skoSC1 (* skoMC1 (* skoMC1 skoMC1))) (* skoMC1 (* skoMC1 (* skoMC1 (- 1.)))))) (succedent (> (* skoSC1 (* skoMC1 (* skoMC1 (* skoMC1 (- 1.))))) (* skoMC1 (* skoMC1 skoMC1)))))
-----[end problem]-----

-----[begin problem]-----
% In Mathematica format:
Timing[Resolve[Exists[{skoSC1,skoMC1}, And[skoSC1*(skoMC1*skoMC1*skoMC1*-1+skoSC1*skoMC1*skoMC1*skoMC1*-1)<=0,skoSC1*skoMC1*skoMC1*skoMC1*2>skoMC1*skoMC1*skoMC1*-2,skoSC1*skoMC1*skoMC1*skoMC1*-1<=skoMC1*skoMC1*skoMC1,skoSC1*skoMC1*skoMC1*skoMC1>skoMC1*skoMC1*skoMC1*-1,skoMC1*skoMC1*skoMC1*-2<=0,skoMC1*skoMC1*skoMC1*2>0,skoSC1<=(5/4),2<=skoMC1,0<=skoSC1,skoMC1>0,0<=skoMC1,skoSC1*skoMC1>skoMC1*-1,skoSC1*skoMC1*-1<=skoMC1,skoSC1*skoMC1*skoMC1*skoMC1*2>skoMC1*skoMC1*skoMC1*-2,skoSC1*skoMC1*skoMC1*skoMC1*-2<=skoMC1*skoMC1*skoMC1*2,skoSC1*(skoMC1*skoMC1*skoMC1*skoMC1*12+skoSC1*(skoMC1*skoMC1*skoMC1*(-1+skoMC1*6)+skoSC1*(skoMC1*skoMC1*skoMC1*-1+skoSC1*(skoMC1*skoMC1*skoMC1*(1/12)+skoSC1*skoMC1*skoMC1*skoMC1*(1/12)))))>skoMC1*skoMC1*skoMC1*(-2+skoMC1*-6),skoSC1*(skoMC1*skoMC1*skoMC1*skoMC1*-12+skoSC1*(skoMC1*skoMC1*skoMC1*(1+skoMC1*-6)+skoSC1*(skoMC1*skoMC1*skoMC1+skoSC1*(skoMC1*skoMC1*skoMC1*(-1/12)+skoSC1*skoMC1*skoMC1*skoMC1*(-1/12)))))<=skoMC1*skoMC1*skoMC1*(2+skoMC1*6)]], Reals]]

% In QepcadB format:
(E skoSC1) (E skoMC1) [[(skoSC1 ((skoMC1 skoMC1 skoMC1 (-1))+(skoSC1 skoMC1 skoMC1 skoMC1 (-1))))<=0]/\[[(skoMC1 skoMC1 skoMC1 (-2))<(skoSC1 skoMC1 skoMC1 skoMC1 (2))]/\[[(skoSC1 skoMC1 skoMC1 skoMC1 (-1))<=(skoMC1 skoMC1 skoMC1)]/\[[(skoMC1 skoMC1 skoMC1 (-1))<(skoSC1 skoMC1 skoMC1 skoMC1)]/\[[(skoMC1 skoMC1 skoMC1 (-2))<=0]/\[[0<(skoMC1 skoMC1 skoMC1 (2))]/\[[skoSC1<=5/4]/\[[2<=skoMC1]/\[[0<=skoSC1]/\[[0<skoMC1]/\[[0<=skoMC1]/\[[(skoMC1 (-1))<(skoSC1 skoMC1)]/\[[(skoSC1 skoMC1 (-1))<=skoMC1]/\[[(skoMC1 skoMC1 skoMC1 (-2))<(skoSC1 skoMC1 skoMC1 skoMC1 (2))]/\[[(skoSC1 skoMC1 skoMC1 skoMC1 (-2))<=(skoMC1 skoMC1 skoMC1 (2))]/\[[(skoMC1 skoMC1 skoMC1 (-2+(skoMC1 (-6))))<(skoSC1 ((skoMC1 skoMC1 skoMC1 skoMC1 (12))+(skoSC1 ((skoMC1 skoMC1 skoMC1 (-1+(skoMC1 (6))))+(skoSC1 ((skoMC1 skoMC1 skoMC1 (-1))+(skoSC1 ((skoMC1 skoMC1 skoMC1 (1/12))+(skoSC1 skoMC1 skoMC1 skoMC1 (1/12))))))))))]/\[(skoSC1 ((skoMC1 skoMC1 skoMC1 skoMC1 (-12))+(skoSC1 ((skoMC1 skoMC1 skoMC1 (1+(skoMC1 (-6))))+(skoSC1 ((skoMC1 skoMC1 skoMC1)+(skoSC1 ((skoMC1 skoMC1 skoMC1 (-1/12))+(skoSC1 skoMC1 skoMC1 skoMC1 (-1/12))))))))))<=(skoMC1 skoMC1 skoMC1 (2+(skoMC1 (6))))]]]]]]]]]]]]]]]]].

% In SMTLib2 format:
(declare-fun skoSC1 () Real) (declare-fun skoMC1 () Real) (assert (and (<= (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (- 1.)))) (* skoSC1 (* skoMC1 (* skoMC1 (* skoMC1 (- 1.))))))) 0.) (and (> (* skoSC1 (* skoMC1 (* skoMC1 (* skoMC1 2.)))) (* skoMC1 (* skoMC1 (* skoMC1 (- 2.))))) (and (<= (* skoSC1 (* skoMC1 (* skoMC1 (* skoMC1 (- 1.))))) (* skoMC1 (* skoMC1 skoMC1))) (and (> (* skoSC1 (* skoMC1 (* skoMC1 skoMC1))) (* skoMC1 (* skoMC1 (* skoMC1 (- 1.))))) (and (<= (* skoMC1 (* skoMC1 (* skoMC1 (- 2.)))) 0.) (and (> (* skoMC1 (* skoMC1 (* skoMC1 2.))) 0.) (and (<= skoSC1 (/ 5. 4.)) (and (<= 2. skoMC1) (and (<= 0. skoSC1) (and (> skoMC1 0.) (and (<= 0. skoMC1) (and (> (* skoSC1 skoMC1) (* skoMC1 (- 1.))) (and (<= (* skoSC1 (* skoMC1 (- 1.))) skoMC1) (and (> (* skoSC1 (* skoMC1 (* skoMC1 (* skoMC1 2.)))) (* skoMC1 (* skoMC1 (* skoMC1 (- 2.))))) (and (<= (* skoSC1 (* skoMC1 (* skoMC1 (* skoMC1 (- 2.))))) (* skoMC1 (* skoMC1 (* skoMC1 2.)))) (and (> (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (* skoMC1 12.)))) (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (+ (- 1.) (* skoMC1 6.))))) (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (- 1.)))) (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (/ 1. 12.)))) (* skoSC1 (* skoMC1 (* skoMC1 (* skoMC1 (/ 1. 12.))))))))))))) (* skoMC1 (* skoMC1 (* skoMC1 (+ (- 2.) (* skoMC1 (- 6.))))))) (<= (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (* skoMC1 (- 12.))))) (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (+ 1. (* skoMC1 (- 6.)))))) (* skoSC1 (+ (* skoMC1 (* skoMC1 skoMC1)) (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (/ (- 1.) 12.)))) (* skoSC1 (* skoMC1 (* skoMC1 (* skoMC1 (/ (- 1.) 12.))))))))))))) (* skoMC1 (* skoMC1 (* skoMC1 (+ 2. (* skoMC1 6.)))))))))))))))))))))))

% In GRF format:
(sequent " MetiTarski formula " (antecedent (<= (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (- 1.)))) (* skoSC1 (* skoMC1 (* skoMC1 (* skoMC1 (- 1.))))))) 0.) (> (* skoSC1 (* skoMC1 (* skoMC1 (* skoMC1 2.)))) (* skoMC1 (* skoMC1 (* skoMC1 (- 2.))))) (<= (* skoSC1 (* skoMC1 (* skoMC1 (* skoMC1 (- 1.))))) (* skoMC1 (* skoMC1 skoMC1))) (> (* skoSC1 (* skoMC1 (* skoMC1 skoMC1))) (* skoMC1 (* skoMC1 (* skoMC1 (- 1.))))) (<= (* skoMC1 (* skoMC1 (* skoMC1 (- 2.)))) 0.) (> (* skoMC1 (* skoMC1 (* skoMC1 2.))) 0.) (<= skoSC1 (/ 5. 4.)) (<= 2. skoMC1) (<= 0. skoSC1) (> skoMC1 0.) (<= 0. skoMC1) (> (* skoSC1 skoMC1) (* skoMC1 (- 1.))) (<= (* skoSC1 (* skoMC1 (- 1.))) skoMC1) (> (* skoSC1 (* skoMC1 (* skoMC1 (* skoMC1 2.)))) (* skoMC1 (* skoMC1 (* skoMC1 (- 2.))))) (<= (* skoSC1 (* skoMC1 (* skoMC1 (* skoMC1 (- 2.))))) (* skoMC1 (* skoMC1 (* skoMC1 2.)))) (> (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (* skoMC1 12.)))) (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (+ (- 1.) (* skoMC1 6.))))) (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (- 1.)))) (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (/ 1. 12.)))) (* skoSC1 (* skoMC1 (* skoMC1 (* skoMC1 (/ 1. 12.))))))))))))) (* skoMC1 (* skoMC1 (* skoMC1 (+ (- 2.) (* skoMC1 (- 6.)))))))) (succedent (> (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (* skoMC1 (- 12.))))) (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (+ 1. (* skoMC1 (- 6.)))))) (* skoSC1 (+ (* skoMC1 (* skoMC1 skoMC1)) (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (/ (- 1.) 12.)))) (* skoSC1 (* skoMC1 (* skoMC1 (* skoMC1 (/ (- 1.) 12.))))))))))))) (* skoMC1 (* skoMC1 (* skoMC1 (+ 2. (* skoMC1 6.))))))))
-----[end problem]-----

-----[begin problem]-----
% In Mathematica format:
Timing[Resolve[Exists[{skoSC1,skoMC1}, And[skoSC1*skoMC1*skoMC1*skoMC1*2<=skoMC1*skoMC1*skoMC1*-2,skoSC1*(skoMC1*skoMC1*skoMC1*-1+skoSC1*skoMC1*skoMC1*skoMC1*-1)>0,skoSC1*skoMC1*skoMC1*skoMC1*-1<=skoMC1*skoMC1*skoMC1,skoSC1*skoMC1*skoMC1*skoMC1>skoMC1*skoMC1*skoMC1*-1,skoMC1*skoMC1*skoMC1*-2<=0,skoMC1*skoMC1*skoMC1*2>0,skoSC1<=(5/4),2<=skoMC1,0<=skoSC1,skoMC1>0,0<=skoMC1,skoSC1*skoMC1>skoMC1*-1,skoSC1*skoMC1*-1<=skoMC1,skoSC1*skoMC1*skoMC1*skoMC1*2>skoMC1*skoMC1*skoMC1*-2,skoSC1*skoMC1*skoMC1*skoMC1*-2<=skoMC1*skoMC1*skoMC1*2,skoSC1*(skoMC1*skoMC1*skoMC1*skoMC1*12+skoSC1*(skoMC1*skoMC1*skoMC1*(-1+skoMC1*6)+skoSC1*(skoMC1*skoMC1*skoMC1*-1+skoSC1*(skoMC1*skoMC1*skoMC1*(1/12)+skoSC1*skoMC1*skoMC1*skoMC1*(1/12)))))>skoMC1*skoMC1*skoMC1*(-2+skoMC1*-6),skoSC1*(skoMC1*skoMC1*skoMC1*skoMC1*-12+skoSC1*(skoMC1*skoMC1*skoMC1*(1+skoMC1*-6)+skoSC1*(skoMC1*skoMC1*skoMC1+skoSC1*(skoMC1*skoMC1*skoMC1*(-1/12)+skoSC1*skoMC1*skoMC1*skoMC1*(-1/12)))))<=skoMC1*skoMC1*skoMC1*(2+skoMC1*6)]], Reals]]

% In QepcadB format:
(E skoSC1) (E skoMC1) [[(skoSC1 skoMC1 skoMC1 skoMC1 (2))<=(skoMC1 skoMC1 skoMC1 (-2))]/\[[0<(skoSC1 ((skoMC1 skoMC1 skoMC1 (-1))+(skoSC1 skoMC1 skoMC1 skoMC1 (-1))))]/\[[(skoSC1 skoMC1 skoMC1 skoMC1 (-1))<=(skoMC1 skoMC1 skoMC1)]/\[[(skoMC1 skoMC1 skoMC1 (-1))<(skoSC1 skoMC1 skoMC1 skoMC1)]/\[[(skoMC1 skoMC1 skoMC1 (-2))<=0]/\[[0<(skoMC1 skoMC1 skoMC1 (2))]/\[[skoSC1<=5/4]/\[[2<=skoMC1]/\[[0<=skoSC1]/\[[0<skoMC1]/\[[0<=skoMC1]/\[[(skoMC1 (-1))<(skoSC1 skoMC1)]/\[[(skoSC1 skoMC1 (-1))<=skoMC1]/\[[(skoMC1 skoMC1 skoMC1 (-2))<(skoSC1 skoMC1 skoMC1 skoMC1 (2))]/\[[(skoSC1 skoMC1 skoMC1 skoMC1 (-2))<=(skoMC1 skoMC1 skoMC1 (2))]/\[[(skoMC1 skoMC1 skoMC1 (-2+(skoMC1 (-6))))<(skoSC1 ((skoMC1 skoMC1 skoMC1 skoMC1 (12))+(skoSC1 ((skoMC1 skoMC1 skoMC1 (-1+(skoMC1 (6))))+(skoSC1 ((skoMC1 skoMC1 skoMC1 (-1))+(skoSC1 ((skoMC1 skoMC1 skoMC1 (1/12))+(skoSC1 skoMC1 skoMC1 skoMC1 (1/12))))))))))]/\[(skoSC1 ((skoMC1 skoMC1 skoMC1 skoMC1 (-12))+(skoSC1 ((skoMC1 skoMC1 skoMC1 (1+(skoMC1 (-6))))+(skoSC1 ((skoMC1 skoMC1 skoMC1)+(skoSC1 ((skoMC1 skoMC1 skoMC1 (-1/12))+(skoSC1 skoMC1 skoMC1 skoMC1 (-1/12))))))))))<=(skoMC1 skoMC1 skoMC1 (2+(skoMC1 (6))))]]]]]]]]]]]]]]]]].

% In SMTLib2 format:
(declare-fun skoSC1 () Real) (declare-fun skoMC1 () Real) (assert (and (<= (* skoSC1 (* skoMC1 (* skoMC1 (* skoMC1 2.)))) (* skoMC1 (* skoMC1 (* skoMC1 (- 2.))))) (and (> (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (- 1.)))) (* skoSC1 (* skoMC1 (* skoMC1 (* skoMC1 (- 1.))))))) 0.) (and (<= (* skoSC1 (* skoMC1 (* skoMC1 (* skoMC1 (- 1.))))) (* skoMC1 (* skoMC1 skoMC1))) (and (> (* skoSC1 (* skoMC1 (* skoMC1 skoMC1))) (* skoMC1 (* skoMC1 (* skoMC1 (- 1.))))) (and (<= (* skoMC1 (* skoMC1 (* skoMC1 (- 2.)))) 0.) (and (> (* skoMC1 (* skoMC1 (* skoMC1 2.))) 0.) (and (<= skoSC1 (/ 5. 4.)) (and (<= 2. skoMC1) (and (<= 0. skoSC1) (and (> skoMC1 0.) (and (<= 0. skoMC1) (and (> (* skoSC1 skoMC1) (* skoMC1 (- 1.))) (and (<= (* skoSC1 (* skoMC1 (- 1.))) skoMC1) (and (> (* skoSC1 (* skoMC1 (* skoMC1 (* skoMC1 2.)))) (* skoMC1 (* skoMC1 (* skoMC1 (- 2.))))) (and (<= (* skoSC1 (* skoMC1 (* skoMC1 (* skoMC1 (- 2.))))) (* skoMC1 (* skoMC1 (* skoMC1 2.)))) (and (> (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (* skoMC1 12.)))) (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (+ (- 1.) (* skoMC1 6.))))) (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (- 1.)))) (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (/ 1. 12.)))) (* skoSC1 (* skoMC1 (* skoMC1 (* skoMC1 (/ 1. 12.))))))))))))) (* skoMC1 (* skoMC1 (* skoMC1 (+ (- 2.) (* skoMC1 (- 6.))))))) (<= (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (* skoMC1 (- 12.))))) (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (+ 1. (* skoMC1 (- 6.)))))) (* skoSC1 (+ (* skoMC1 (* skoMC1 skoMC1)) (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (/ (- 1.) 12.)))) (* skoSC1 (* skoMC1 (* skoMC1 (* skoMC1 (/ (- 1.) 12.))))))))))))) (* skoMC1 (* skoMC1 (* skoMC1 (+ 2. (* skoMC1 6.)))))))))))))))))))))))

% In GRF format:
(sequent " MetiTarski formula " (antecedent (<= (* skoSC1 (* skoMC1 (* skoMC1 (* skoMC1 2.)))) (* skoMC1 (* skoMC1 (* skoMC1 (- 2.))))) (> (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (- 1.)))) (* skoSC1 (* skoMC1 (* skoMC1 (* skoMC1 (- 1.))))))) 0.) (<= (* skoSC1 (* skoMC1 (* skoMC1 (* skoMC1 (- 1.))))) (* skoMC1 (* skoMC1 skoMC1))) (> (* skoSC1 (* skoMC1 (* skoMC1 skoMC1))) (* skoMC1 (* skoMC1 (* skoMC1 (- 1.))))) (<= (* skoMC1 (* skoMC1 (* skoMC1 (- 2.)))) 0.) (> (* skoMC1 (* skoMC1 (* skoMC1 2.))) 0.) (<= skoSC1 (/ 5. 4.)) (<= 2. skoMC1) (<= 0. skoSC1) (> skoMC1 0.) (<= 0. skoMC1) (> (* skoSC1 skoMC1) (* skoMC1 (- 1.))) (<= (* skoSC1 (* skoMC1 (- 1.))) skoMC1) (> (* skoSC1 (* skoMC1 (* skoMC1 (* skoMC1 2.)))) (* skoMC1 (* skoMC1 (* skoMC1 (- 2.))))) (<= (* skoSC1 (* skoMC1 (* skoMC1 (* skoMC1 (- 2.))))) (* skoMC1 (* skoMC1 (* skoMC1 2.)))) (> (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (* skoMC1 12.)))) (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (+ (- 1.) (* skoMC1 6.))))) (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (- 1.)))) (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (/ 1. 12.)))) (* skoSC1 (* skoMC1 (* skoMC1 (* skoMC1 (/ 1. 12.))))))))))))) (* skoMC1 (* skoMC1 (* skoMC1 (+ (- 2.) (* skoMC1 (- 6.)))))))) (succedent (> (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (* skoMC1 (- 12.))))) (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (+ 1. (* skoMC1 (- 6.)))))) (* skoSC1 (+ (* skoMC1 (* skoMC1 skoMC1)) (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (/ (- 1.) 12.)))) (* skoSC1 (* skoMC1 (* skoMC1 (* skoMC1 (/ (- 1.) 12.))))))))))))) (* skoMC1 (* skoMC1 (* skoMC1 (+ 2. (* skoMC1 6.))))))))
-----[end problem]-----

-----[begin problem]-----
% In Mathematica format:
Timing[Resolve[Exists[{skoSC1,skoMC1}, And[skoSC1*(skoMC1*skoMC1*skoMC1*-1+skoSC1*skoMC1*skoMC1*skoMC1*-1)<=0,skoSC1*skoMC1*skoMC1*skoMC1*-1<=skoMC1*skoMC1*skoMC1,skoSC1*skoMC1*skoMC1*skoMC1>skoMC1*skoMC1*skoMC1*-1,skoMC1*skoMC1*skoMC1*-2<=0,skoMC1*skoMC1*skoMC1*2>0,skoSC1<=(5/4),2<=skoMC1,0<=skoSC1,skoMC1>0,0<=skoMC1,skoSC1*skoMC1>skoMC1*-1,skoSC1*skoMC1*-1<=skoMC1,skoSC1*skoMC1*skoMC1*skoMC1*2>skoMC1*skoMC1*skoMC1*-2,skoSC1*skoMC1*skoMC1*skoMC1*-2<=skoMC1*skoMC1*skoMC1*2,skoSC1*(skoMC1*skoMC1*skoMC1*skoMC1*12+skoSC1*(skoMC1*skoMC1*skoMC1*(-1+skoMC1*6)+skoSC1*(skoMC1*skoMC1*skoMC1*-1+skoSC1*(skoMC1*skoMC1*skoMC1*(1/12)+skoSC1*skoMC1*skoMC1*skoMC1*(1/12)))))>skoMC1*skoMC1*skoMC1*(-2+skoMC1*-6),skoSC1*(skoMC1*skoMC1*skoMC1*skoMC1*-12+skoSC1*(skoMC1*skoMC1*skoMC1*(1+skoMC1*-6)+skoSC1*(skoMC1*skoMC1*skoMC1+skoSC1*(skoMC1*skoMC1*skoMC1*(-1/12)+skoSC1*skoMC1*skoMC1*skoMC1*(-1/12)))))<=skoMC1*skoMC1*skoMC1*(2+skoMC1*6)]], Reals]]

% In QepcadB format:
(E skoSC1) (E skoMC1) [[(skoSC1 ((skoMC1 skoMC1 skoMC1 (-1))+(skoSC1 skoMC1 skoMC1 skoMC1 (-1))))<=0]/\[[(skoSC1 skoMC1 skoMC1 skoMC1 (-1))<=(skoMC1 skoMC1 skoMC1)]/\[[(skoMC1 skoMC1 skoMC1 (-1))<(skoSC1 skoMC1 skoMC1 skoMC1)]/\[[(skoMC1 skoMC1 skoMC1 (-2))<=0]/\[[0<(skoMC1 skoMC1 skoMC1 (2))]/\[[skoSC1<=5/4]/\[[2<=skoMC1]/\[[0<=skoSC1]/\[[0<skoMC1]/\[[0<=skoMC1]/\[[(skoMC1 (-1))<(skoSC1 skoMC1)]/\[[(skoSC1 skoMC1 (-1))<=skoMC1]/\[[(skoMC1 skoMC1 skoMC1 (-2))<(skoSC1 skoMC1 skoMC1 skoMC1 (2))]/\[[(skoSC1 skoMC1 skoMC1 skoMC1 (-2))<=(skoMC1 skoMC1 skoMC1 (2))]/\[[(skoMC1 skoMC1 skoMC1 (-2+(skoMC1 (-6))))<(skoSC1 ((skoMC1 skoMC1 skoMC1 skoMC1 (12))+(skoSC1 ((skoMC1 skoMC1 skoMC1 (-1+(skoMC1 (6))))+(skoSC1 ((skoMC1 skoMC1 skoMC1 (-1))+(skoSC1 ((skoMC1 skoMC1 skoMC1 (1/12))+(skoSC1 skoMC1 skoMC1 skoMC1 (1/12))))))))))]/\[(skoSC1 ((skoMC1 skoMC1 skoMC1 skoMC1 (-12))+(skoSC1 ((skoMC1 skoMC1 skoMC1 (1+(skoMC1 (-6))))+(skoSC1 ((skoMC1 skoMC1 skoMC1)+(skoSC1 ((skoMC1 skoMC1 skoMC1 (-1/12))+(skoSC1 skoMC1 skoMC1 skoMC1 (-1/12))))))))))<=(skoMC1 skoMC1 skoMC1 (2+(skoMC1 (6))))]]]]]]]]]]]]]]]].

% In SMTLib2 format:
(declare-fun skoSC1 () Real) (declare-fun skoMC1 () Real) (assert (and (<= (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (- 1.)))) (* skoSC1 (* skoMC1 (* skoMC1 (* skoMC1 (- 1.))))))) 0.) (and (<= (* skoSC1 (* skoMC1 (* skoMC1 (* skoMC1 (- 1.))))) (* skoMC1 (* skoMC1 skoMC1))) (and (> (* skoSC1 (* skoMC1 (* skoMC1 skoMC1))) (* skoMC1 (* skoMC1 (* skoMC1 (- 1.))))) (and (<= (* skoMC1 (* skoMC1 (* skoMC1 (- 2.)))) 0.) (and (> (* skoMC1 (* skoMC1 (* skoMC1 2.))) 0.) (and (<= skoSC1 (/ 5. 4.)) (and (<= 2. skoMC1) (and (<= 0. skoSC1) (and (> skoMC1 0.) (and (<= 0. skoMC1) (and (> (* skoSC1 skoMC1) (* skoMC1 (- 1.))) (and (<= (* skoSC1 (* skoMC1 (- 1.))) skoMC1) (and (> (* skoSC1 (* skoMC1 (* skoMC1 (* skoMC1 2.)))) (* skoMC1 (* skoMC1 (* skoMC1 (- 2.))))) (and (<= (* skoSC1 (* skoMC1 (* skoMC1 (* skoMC1 (- 2.))))) (* skoMC1 (* skoMC1 (* skoMC1 2.)))) (and (> (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (* skoMC1 12.)))) (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (+ (- 1.) (* skoMC1 6.))))) (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (- 1.)))) (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (/ 1. 12.)))) (* skoSC1 (* skoMC1 (* skoMC1 (* skoMC1 (/ 1. 12.))))))))))))) (* skoMC1 (* skoMC1 (* skoMC1 (+ (- 2.) (* skoMC1 (- 6.))))))) (<= (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (* skoMC1 (- 12.))))) (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (+ 1. (* skoMC1 (- 6.)))))) (* skoSC1 (+ (* skoMC1 (* skoMC1 skoMC1)) (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (/ (- 1.) 12.)))) (* skoSC1 (* skoMC1 (* skoMC1 (* skoMC1 (/ (- 1.) 12.))))))))))))) (* skoMC1 (* skoMC1 (* skoMC1 (+ 2. (* skoMC1 6.))))))))))))))))))))))

% In GRF format:
(sequent " MetiTarski formula " (antecedent (<= (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (- 1.)))) (* skoSC1 (* skoMC1 (* skoMC1 (* skoMC1 (- 1.))))))) 0.) (<= (* skoSC1 (* skoMC1 (* skoMC1 (* skoMC1 (- 1.))))) (* skoMC1 (* skoMC1 skoMC1))) (> (* skoSC1 (* skoMC1 (* skoMC1 skoMC1))) (* skoMC1 (* skoMC1 (* skoMC1 (- 1.))))) (<= (* skoMC1 (* skoMC1 (* skoMC1 (- 2.)))) 0.) (> (* skoMC1 (* skoMC1 (* skoMC1 2.))) 0.) (<= skoSC1 (/ 5. 4.)) (<= 2. skoMC1) (<= 0. skoSC1) (> skoMC1 0.) (<= 0. skoMC1) (> (* skoSC1 skoMC1) (* skoMC1 (- 1.))) (<= (* skoSC1 (* skoMC1 (- 1.))) skoMC1) (> (* skoSC1 (* skoMC1 (* skoMC1 (* skoMC1 2.)))) (* skoMC1 (* skoMC1 (* skoMC1 (- 2.))))) (<= (* skoSC1 (* skoMC1 (* skoMC1 (* skoMC1 (- 2.))))) (* skoMC1 (* skoMC1 (* skoMC1 2.)))) (> (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (* skoMC1 12.)))) (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (+ (- 1.) (* skoMC1 6.))))) (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (- 1.)))) (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (/ 1. 12.)))) (* skoSC1 (* skoMC1 (* skoMC1 (* skoMC1 (/ 1. 12.))))))))))))) (* skoMC1 (* skoMC1 (* skoMC1 (+ (- 2.) (* skoMC1 (- 6.)))))))) (succedent (> (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (* skoMC1 (- 12.))))) (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (+ 1. (* skoMC1 (- 6.)))))) (* skoSC1 (+ (* skoMC1 (* skoMC1 skoMC1)) (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (/ (- 1.) 12.)))) (* skoSC1 (* skoMC1 (* skoMC1 (* skoMC1 (/ (- 1.) 12.))))))))))))) (* skoMC1 (* skoMC1 (* skoMC1 (+ 2. (* skoMC1 6.))))))))
-----[end problem]-----

-----[begin problem]-----
% In Mathematica format:
Timing[Resolve[Exists[{skoSC1,skoMC1}, And[skoSC1*skoMC1*skoMC1*skoMC1*-2<=skoMC1*skoMC1*skoMC1*2,skoSC1*skoMC1*skoMC1*skoMC1*-1<=skoMC1*skoMC1*skoMC1,skoSC1*skoMC1*skoMC1*skoMC1>skoMC1*skoMC1*skoMC1*-1,skoMC1*skoMC1*skoMC1*-2<=0,skoMC1*skoMC1*skoMC1*2>0,skoSC1<=(5/4),2<=skoMC1,0<=skoSC1,skoMC1>0,0<=skoMC1,skoSC1*skoMC1>skoMC1*-1,skoSC1*skoMC1*-1<=skoMC1,skoSC1*skoMC1*skoMC1*skoMC1*2>skoMC1*skoMC1*skoMC1*-2,skoSC1*skoMC1*skoMC1*skoMC1*-2<=skoMC1*skoMC1*skoMC1*2,skoSC1*(skoMC1*skoMC1*skoMC1*skoMC1*12+skoSC1*(skoMC1*skoMC1*skoMC1*(-1+skoMC1*6)+skoSC1*(skoMC1*skoMC1*skoMC1*-1+skoSC1*(skoMC1*skoMC1*skoMC1*(1/12)+skoSC1*skoMC1*skoMC1*skoMC1*(1/12)))))>skoMC1*skoMC1*skoMC1*(-2+skoMC1*-6),skoSC1*(skoMC1*skoMC1*skoMC1*skoMC1*-12+skoSC1*(skoMC1*skoMC1*skoMC1*(1+skoMC1*-6)+skoSC1*(skoMC1*skoMC1*skoMC1+skoSC1*(skoMC1*skoMC1*skoMC1*(-1/12)+skoSC1*skoMC1*skoMC1*skoMC1*(-1/12)))))<=skoMC1*skoMC1*skoMC1*(2+skoMC1*6)]], Reals]]

% In QepcadB format:
(E skoSC1) (E skoMC1) [[(skoSC1 skoMC1 skoMC1 skoMC1 (-2))<=(skoMC1 skoMC1 skoMC1 (2))]/\[[(skoSC1 skoMC1 skoMC1 skoMC1 (-1))<=(skoMC1 skoMC1 skoMC1)]/\[[(skoMC1 skoMC1 skoMC1 (-1))<(skoSC1 skoMC1 skoMC1 skoMC1)]/\[[(skoMC1 skoMC1 skoMC1 (-2))<=0]/\[[0<(skoMC1 skoMC1 skoMC1 (2))]/\[[skoSC1<=5/4]/\[[2<=skoMC1]/\[[0<=skoSC1]/\[[0<skoMC1]/\[[0<=skoMC1]/\[[(skoMC1 (-1))<(skoSC1 skoMC1)]/\[[(skoSC1 skoMC1 (-1))<=skoMC1]/\[[(skoMC1 skoMC1 skoMC1 (-2))<(skoSC1 skoMC1 skoMC1 skoMC1 (2))]/\[[(skoSC1 skoMC1 skoMC1 skoMC1 (-2))<=(skoMC1 skoMC1 skoMC1 (2))]/\[[(skoMC1 skoMC1 skoMC1 (-2+(skoMC1 (-6))))<(skoSC1 ((skoMC1 skoMC1 skoMC1 skoMC1 (12))+(skoSC1 ((skoMC1 skoMC1 skoMC1 (-1+(skoMC1 (6))))+(skoSC1 ((skoMC1 skoMC1 skoMC1 (-1))+(skoSC1 ((skoMC1 skoMC1 skoMC1 (1/12))+(skoSC1 skoMC1 skoMC1 skoMC1 (1/12))))))))))]/\[(skoSC1 ((skoMC1 skoMC1 skoMC1 skoMC1 (-12))+(skoSC1 ((skoMC1 skoMC1 skoMC1 (1+(skoMC1 (-6))))+(skoSC1 ((skoMC1 skoMC1 skoMC1)+(skoSC1 ((skoMC1 skoMC1 skoMC1 (-1/12))+(skoSC1 skoMC1 skoMC1 skoMC1 (-1/12))))))))))<=(skoMC1 skoMC1 skoMC1 (2+(skoMC1 (6))))]]]]]]]]]]]]]]]].

% In SMTLib2 format:
(declare-fun skoSC1 () Real) (declare-fun skoMC1 () Real) (assert (and (<= (* skoSC1 (* skoMC1 (* skoMC1 (* skoMC1 (- 2.))))) (* skoMC1 (* skoMC1 (* skoMC1 2.)))) (and (<= (* skoSC1 (* skoMC1 (* skoMC1 (* skoMC1 (- 1.))))) (* skoMC1 (* skoMC1 skoMC1))) (and (> (* skoSC1 (* skoMC1 (* skoMC1 skoMC1))) (* skoMC1 (* skoMC1 (* skoMC1 (- 1.))))) (and (<= (* skoMC1 (* skoMC1 (* skoMC1 (- 2.)))) 0.) (and (> (* skoMC1 (* skoMC1 (* skoMC1 2.))) 0.) (and (<= skoSC1 (/ 5. 4.)) (and (<= 2. skoMC1) (and (<= 0. skoSC1) (and (> skoMC1 0.) (and (<= 0. skoMC1) (and (> (* skoSC1 skoMC1) (* skoMC1 (- 1.))) (and (<= (* skoSC1 (* skoMC1 (- 1.))) skoMC1) (and (> (* skoSC1 (* skoMC1 (* skoMC1 (* skoMC1 2.)))) (* skoMC1 (* skoMC1 (* skoMC1 (- 2.))))) (and (<= (* skoSC1 (* skoMC1 (* skoMC1 (* skoMC1 (- 2.))))) (* skoMC1 (* skoMC1 (* skoMC1 2.)))) (and (> (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (* skoMC1 12.)))) (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (+ (- 1.) (* skoMC1 6.))))) (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (- 1.)))) (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (/ 1. 12.)))) (* skoSC1 (* skoMC1 (* skoMC1 (* skoMC1 (/ 1. 12.))))))))))))) (* skoMC1 (* skoMC1 (* skoMC1 (+ (- 2.) (* skoMC1 (- 6.))))))) (<= (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (* skoMC1 (- 12.))))) (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (+ 1. (* skoMC1 (- 6.)))))) (* skoSC1 (+ (* skoMC1 (* skoMC1 skoMC1)) (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (/ (- 1.) 12.)))) (* skoSC1 (* skoMC1 (* skoMC1 (* skoMC1 (/ (- 1.) 12.))))))))))))) (* skoMC1 (* skoMC1 (* skoMC1 (+ 2. (* skoMC1 6.))))))))))))))))))))))

% In GRF format:
(sequent " MetiTarski formula " (antecedent (<= (* skoSC1 (* skoMC1 (* skoMC1 (* skoMC1 (- 2.))))) (* skoMC1 (* skoMC1 (* skoMC1 2.)))) (<= (* skoSC1 (* skoMC1 (* skoMC1 (* skoMC1 (- 1.))))) (* skoMC1 (* skoMC1 skoMC1))) (> (* skoSC1 (* skoMC1 (* skoMC1 skoMC1))) (* skoMC1 (* skoMC1 (* skoMC1 (- 1.))))) (<= (* skoMC1 (* skoMC1 (* skoMC1 (- 2.)))) 0.) (> (* skoMC1 (* skoMC1 (* skoMC1 2.))) 0.) (<= skoSC1 (/ 5. 4.)) (<= 2. skoMC1) (<= 0. skoSC1) (> skoMC1 0.) (<= 0. skoMC1) (> (* skoSC1 skoMC1) (* skoMC1 (- 1.))) (<= (* skoSC1 (* skoMC1 (- 1.))) skoMC1) (> (* skoSC1 (* skoMC1 (* skoMC1 (* skoMC1 2.)))) (* skoMC1 (* skoMC1 (* skoMC1 (- 2.))))) (<= (* skoSC1 (* skoMC1 (* skoMC1 (* skoMC1 (- 2.))))) (* skoMC1 (* skoMC1 (* skoMC1 2.)))) (> (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (* skoMC1 12.)))) (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (+ (- 1.) (* skoMC1 6.))))) (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (- 1.)))) (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (/ 1. 12.)))) (* skoSC1 (* skoMC1 (* skoMC1 (* skoMC1 (/ 1. 12.))))))))))))) (* skoMC1 (* skoMC1 (* skoMC1 (+ (- 2.) (* skoMC1 (- 6.)))))))) (succedent (> (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (* skoMC1 (- 12.))))) (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (+ 1. (* skoMC1 (- 6.)))))) (* skoSC1 (+ (* skoMC1 (* skoMC1 skoMC1)) (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (/ (- 1.) 12.)))) (* skoSC1 (* skoMC1 (* skoMC1 (* skoMC1 (/ (- 1.) 12.))))))))))))) (* skoMC1 (* skoMC1 (* skoMC1 (+ 2. (* skoMC1 6.))))))))
-----[end problem]-----

-----[begin problem]-----
% In Mathematica format:
Timing[Resolve[Exists[{skoSC1,skoMC1}, And[skoSC1*skoMC1*skoMC1*skoMC1*2>skoMC1*skoMC1*skoMC1*-2,skoSC1*(skoMC1*skoMC1*skoMC1*-1+skoSC1*skoMC1*skoMC1*skoMC1*-1)>0,skoSC1*(skoMC1*skoMC1*skoMC1*skoMC1*12+skoSC1*(skoMC1*skoMC1*skoMC1*(-1+skoMC1*6)+skoSC1*(skoMC1*skoMC1*skoMC1*-1+skoSC1*(skoMC1*skoMC1*skoMC1*(1/12)+skoSC1*skoMC1*skoMC1*skoMC1*(1/12)))))>skoMC1*skoMC1*skoMC1*(-2+skoMC1*-6),skoSC1*skoMC1*skoMC1*skoMC1*-1<=skoMC1*skoMC1*skoMC1,skoSC1*skoMC1*skoMC1*skoMC1>skoMC1*skoMC1*skoMC1*-1,skoMC1*skoMC1*skoMC1*-2<=0,skoMC1*skoMC1*skoMC1*2>0,skoSC1<=(5/4),2<=skoMC1,0<=skoSC1,skoMC1>0,0<=skoMC1,skoSC1*skoMC1>skoMC1*-1,skoSC1*skoMC1*-1<=skoMC1,skoSC1*skoMC1*skoMC1*skoMC1*2>skoMC1*skoMC1*skoMC1*-2,skoSC1*skoMC1*skoMC1*skoMC1*-2<=skoMC1*skoMC1*skoMC1*2,skoSC1*(skoMC1*skoMC1*skoMC1*skoMC1*12+skoSC1*(skoMC1*skoMC1*skoMC1*(-1+skoMC1*6)+skoSC1*(skoMC1*skoMC1*skoMC1*-1+skoSC1*(skoMC1*skoMC1*skoMC1*(1/12)+skoSC1*skoMC1*skoMC1*skoMC1*(1/12)))))>skoMC1*skoMC1*skoMC1*(-2+skoMC1*-6),skoSC1*(skoMC1*skoMC1*skoMC1*skoMC1*-12+skoSC1*(skoMC1*skoMC1*skoMC1*(1+skoMC1*-6)+skoSC1*(skoMC1*skoMC1*skoMC1+skoSC1*(skoMC1*skoMC1*skoMC1*(-1/12)+skoSC1*skoMC1*skoMC1*skoMC1*(-1/12)))))<=skoMC1*skoMC1*skoMC1*(2+skoMC1*6)]], Reals]]

% In QepcadB format:
(E skoSC1) (E skoMC1) [[(skoMC1 skoMC1 skoMC1 (-2))<(skoSC1 skoMC1 skoMC1 skoMC1 (2))]/\[[0<(skoSC1 ((skoMC1 skoMC1 skoMC1 (-1))+(skoSC1 skoMC1 skoMC1 skoMC1 (-1))))]/\[[(skoMC1 skoMC1 skoMC1 (-2+(skoMC1 (-6))))<(skoSC1 ((skoMC1 skoMC1 skoMC1 skoMC1 (12))+(skoSC1 ((skoMC1 skoMC1 skoMC1 (-1+(skoMC1 (6))))+(skoSC1 ((skoMC1 skoMC1 skoMC1 (-1))+(skoSC1 ((skoMC1 skoMC1 skoMC1 (1/12))+(skoSC1 skoMC1 skoMC1 skoMC1 (1/12))))))))))]/\[[(skoSC1 skoMC1 skoMC1 skoMC1 (-1))<=(skoMC1 skoMC1 skoMC1)]/\[[(skoMC1 skoMC1 skoMC1 (-1))<(skoSC1 skoMC1 skoMC1 skoMC1)]/\[[(skoMC1 skoMC1 skoMC1 (-2))<=0]/\[[0<(skoMC1 skoMC1 skoMC1 (2))]/\[[skoSC1<=5/4]/\[[2<=skoMC1]/\[[0<=skoSC1]/\[[0<skoMC1]/\[[0<=skoMC1]/\[[(skoMC1 (-1))<(skoSC1 skoMC1)]/\[[(skoSC1 skoMC1 (-1))<=skoMC1]/\[[(skoMC1 skoMC1 skoMC1 (-2))<(skoSC1 skoMC1 skoMC1 skoMC1 (2))]/\[[(skoSC1 skoMC1 skoMC1 skoMC1 (-2))<=(skoMC1 skoMC1 skoMC1 (2))]/\[[(skoMC1 skoMC1 skoMC1 (-2+(skoMC1 (-6))))<(skoSC1 ((skoMC1 skoMC1 skoMC1 skoMC1 (12))+(skoSC1 ((skoMC1 skoMC1 skoMC1 (-1+(skoMC1 (6))))+(skoSC1 ((skoMC1 skoMC1 skoMC1 (-1))+(skoSC1 ((skoMC1 skoMC1 skoMC1 (1/12))+(skoSC1 skoMC1 skoMC1 skoMC1 (1/12))))))))))]/\[(skoSC1 ((skoMC1 skoMC1 skoMC1 skoMC1 (-12))+(skoSC1 ((skoMC1 skoMC1 skoMC1 (1+(skoMC1 (-6))))+(skoSC1 ((skoMC1 skoMC1 skoMC1)+(skoSC1 ((skoMC1 skoMC1 skoMC1 (-1/12))+(skoSC1 skoMC1 skoMC1 skoMC1 (-1/12))))))))))<=(skoMC1 skoMC1 skoMC1 (2+(skoMC1 (6))))]]]]]]]]]]]]]]]]]].

% In SMTLib2 format:
(declare-fun skoSC1 () Real) (declare-fun skoMC1 () Real) (assert (and (> (* skoSC1 (* skoMC1 (* skoMC1 (* skoMC1 2.)))) (* skoMC1 (* skoMC1 (* skoMC1 (- 2.))))) (and (> (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (- 1.)))) (* skoSC1 (* skoMC1 (* skoMC1 (* skoMC1 (- 1.))))))) 0.) (and (> (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (* skoMC1 12.)))) (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (+ (- 1.) (* skoMC1 6.))))) (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (- 1.)))) (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (/ 1. 12.)))) (* skoSC1 (* skoMC1 (* skoMC1 (* skoMC1 (/ 1. 12.))))))))))))) (* skoMC1 (* skoMC1 (* skoMC1 (+ (- 2.) (* skoMC1 (- 6.))))))) (and (<= (* skoSC1 (* skoMC1 (* skoMC1 (* skoMC1 (- 1.))))) (* skoMC1 (* skoMC1 skoMC1))) (and (> (* skoSC1 (* skoMC1 (* skoMC1 skoMC1))) (* skoMC1 (* skoMC1 (* skoMC1 (- 1.))))) (and (<= (* skoMC1 (* skoMC1 (* skoMC1 (- 2.)))) 0.) (and (> (* skoMC1 (* skoMC1 (* skoMC1 2.))) 0.) (and (<= skoSC1 (/ 5. 4.)) (and (<= 2. skoMC1) (and (<= 0. skoSC1) (and (> skoMC1 0.) (and (<= 0. skoMC1) (and (> (* skoSC1 skoMC1) (* skoMC1 (- 1.))) (and (<= (* skoSC1 (* skoMC1 (- 1.))) skoMC1) (and (> (* skoSC1 (* skoMC1 (* skoMC1 (* skoMC1 2.)))) (* skoMC1 (* skoMC1 (* skoMC1 (- 2.))))) (and (<= (* skoSC1 (* skoMC1 (* skoMC1 (* skoMC1 (- 2.))))) (* skoMC1 (* skoMC1 (* skoMC1 2.)))) (and (> (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (* skoMC1 12.)))) (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (+ (- 1.) (* skoMC1 6.))))) (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (- 1.)))) (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (/ 1. 12.)))) (* skoSC1 (* skoMC1 (* skoMC1 (* skoMC1 (/ 1. 12.))))))))))))) (* skoMC1 (* skoMC1 (* skoMC1 (+ (- 2.) (* skoMC1 (- 6.))))))) (<= (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (* skoMC1 (- 12.))))) (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (+ 1. (* skoMC1 (- 6.)))))) (* skoSC1 (+ (* skoMC1 (* skoMC1 skoMC1)) (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (/ (- 1.) 12.)))) (* skoSC1 (* skoMC1 (* skoMC1 (* skoMC1 (/ (- 1.) 12.))))))))))))) (* skoMC1 (* skoMC1 (* skoMC1 (+ 2. (* skoMC1 6.))))))))))))))))))))))))

% In GRF format:
(sequent " MetiTarski formula " (antecedent (> (* skoSC1 (* skoMC1 (* skoMC1 (* skoMC1 2.)))) (* skoMC1 (* skoMC1 (* skoMC1 (- 2.))))) (> (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (- 1.)))) (* skoSC1 (* skoMC1 (* skoMC1 (* skoMC1 (- 1.))))))) 0.) (> (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (* skoMC1 12.)))) (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (+ (- 1.) (* skoMC1 6.))))) (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (- 1.)))) (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (/ 1. 12.)))) (* skoSC1 (* skoMC1 (* skoMC1 (* skoMC1 (/ 1. 12.))))))))))))) (* skoMC1 (* skoMC1 (* skoMC1 (+ (- 2.) (* skoMC1 (- 6.))))))) (<= (* skoSC1 (* skoMC1 (* skoMC1 (* skoMC1 (- 1.))))) (* skoMC1 (* skoMC1 skoMC1))) (> (* skoSC1 (* skoMC1 (* skoMC1 skoMC1))) (* skoMC1 (* skoMC1 (* skoMC1 (- 1.))))) (<= (* skoMC1 (* skoMC1 (* skoMC1 (- 2.)))) 0.) (> (* skoMC1 (* skoMC1 (* skoMC1 2.))) 0.) (<= skoSC1 (/ 5. 4.)) (<= 2. skoMC1) (<= 0. skoSC1) (> skoMC1 0.) (<= 0. skoMC1) (> (* skoSC1 skoMC1) (* skoMC1 (- 1.))) (<= (* skoSC1 (* skoMC1 (- 1.))) skoMC1) (> (* skoSC1 (* skoMC1 (* skoMC1 (* skoMC1 2.)))) (* skoMC1 (* skoMC1 (* skoMC1 (- 2.))))) (<= (* skoSC1 (* skoMC1 (* skoMC1 (* skoMC1 (- 2.))))) (* skoMC1 (* skoMC1 (* skoMC1 2.)))) (> (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (* skoMC1 12.)))) (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (+ (- 1.) (* skoMC1 6.))))) (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (- 1.)))) (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (/ 1. 12.)))) (* skoSC1 (* skoMC1 (* skoMC1 (* skoMC1 (/ 1. 12.))))))))))))) (* skoMC1 (* skoMC1 (* skoMC1 (+ (- 2.) (* skoMC1 (- 6.)))))))) (succedent (> (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (* skoMC1 (- 12.))))) (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (+ 1. (* skoMC1 (- 6.)))))) (* skoSC1 (+ (* skoMC1 (* skoMC1 skoMC1)) (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (/ (- 1.) 12.)))) (* skoSC1 (* skoMC1 (* skoMC1 (* skoMC1 (/ (- 1.) 12.))))))))))))) (* skoMC1 (* skoMC1 (* skoMC1 (+ 2. (* skoMC1 6.))))))))
-----[end problem]-----

-----[begin problem]-----
% In Mathematica format:
Timing[Resolve[Exists[{skoSC1,skoMC1}, And[skoSC1*skoMC1*skoMC1*skoMC1*-2<=skoMC1*skoMC1*skoMC1*2,skoSC1*skoMC1*skoMC1*skoMC1*-1<=skoMC1*skoMC1*skoMC1,skoSC1*skoMC1*skoMC1*skoMC1>skoMC1*skoMC1*skoMC1*-1,skoMC1*skoMC1*skoMC1*-2<=0,skoMC1*skoMC1*skoMC1*2>0,skoSC1<=(5/4),2<=skoMC1,0<=skoSC1,skoMC1>0,0<=skoMC1,skoSC1*skoMC1>skoMC1*-1,skoSC1*skoMC1*-1<=skoMC1,skoSC1*skoMC1*skoMC1*skoMC1*2>skoMC1*skoMC1*skoMC1*-2,skoSC1*skoMC1*skoMC1*skoMC1*-2<=skoMC1*skoMC1*skoMC1*2,skoSC1*(skoMC1*skoMC1*skoMC1*skoMC1*12+skoSC1*(skoMC1*skoMC1*skoMC1*(-1+skoMC1*6)+skoSC1*(skoMC1*skoMC1*skoMC1*-1+skoSC1*(skoMC1*skoMC1*skoMC1*(1/12)+skoSC1*skoMC1*skoMC1*skoMC1*(1/12)))))>skoMC1*skoMC1*skoMC1*(-2+skoMC1*-6),skoSC1*(skoMC1*skoMC1*skoMC1*skoMC1*-12+skoSC1*(skoMC1*skoMC1*skoMC1*(1+skoMC1*-6)+skoSC1*(skoMC1*skoMC1*skoMC1+skoSC1*(skoMC1*skoMC1*skoMC1*(-1/12)+skoSC1*skoMC1*skoMC1*skoMC1*(-1/12)))))<=skoMC1*skoMC1*skoMC1*(2+skoMC1*6)]], Reals]]

% In QepcadB format:
(E skoSC1) (E skoMC1) [[(skoSC1 skoMC1 skoMC1 skoMC1 (-2))<=(skoMC1 skoMC1 skoMC1 (2))]/\[[(skoSC1 skoMC1 skoMC1 skoMC1 (-1))<=(skoMC1 skoMC1 skoMC1)]/\[[(skoMC1 skoMC1 skoMC1 (-1))<(skoSC1 skoMC1 skoMC1 skoMC1)]/\[[(skoMC1 skoMC1 skoMC1 (-2))<=0]/\[[0<(skoMC1 skoMC1 skoMC1 (2))]/\[[skoSC1<=5/4]/\[[2<=skoMC1]/\[[0<=skoSC1]/\[[0<skoMC1]/\[[0<=skoMC1]/\[[(skoMC1 (-1))<(skoSC1 skoMC1)]/\[[(skoSC1 skoMC1 (-1))<=skoMC1]/\[[(skoMC1 skoMC1 skoMC1 (-2))<(skoSC1 skoMC1 skoMC1 skoMC1 (2))]/\[[(skoSC1 skoMC1 skoMC1 skoMC1 (-2))<=(skoMC1 skoMC1 skoMC1 (2))]/\[[(skoMC1 skoMC1 skoMC1 (-2+(skoMC1 (-6))))<(skoSC1 ((skoMC1 skoMC1 skoMC1 skoMC1 (12))+(skoSC1 ((skoMC1 skoMC1 skoMC1 (-1+(skoMC1 (6))))+(skoSC1 ((skoMC1 skoMC1 skoMC1 (-1))+(skoSC1 ((skoMC1 skoMC1 skoMC1 (1/12))+(skoSC1 skoMC1 skoMC1 skoMC1 (1/12))))))))))]/\[(skoSC1 ((skoMC1 skoMC1 skoMC1 skoMC1 (-12))+(skoSC1 ((skoMC1 skoMC1 skoMC1 (1+(skoMC1 (-6))))+(skoSC1 ((skoMC1 skoMC1 skoMC1)+(skoSC1 ((skoMC1 skoMC1 skoMC1 (-1/12))+(skoSC1 skoMC1 skoMC1 skoMC1 (-1/12))))))))))<=(skoMC1 skoMC1 skoMC1 (2+(skoMC1 (6))))]]]]]]]]]]]]]]]].

% In SMTLib2 format:
(declare-fun skoSC1 () Real) (declare-fun skoMC1 () Real) (assert (and (<= (* skoSC1 (* skoMC1 (* skoMC1 (* skoMC1 (- 2.))))) (* skoMC1 (* skoMC1 (* skoMC1 2.)))) (and (<= (* skoSC1 (* skoMC1 (* skoMC1 (* skoMC1 (- 1.))))) (* skoMC1 (* skoMC1 skoMC1))) (and (> (* skoSC1 (* skoMC1 (* skoMC1 skoMC1))) (* skoMC1 (* skoMC1 (* skoMC1 (- 1.))))) (and (<= (* skoMC1 (* skoMC1 (* skoMC1 (- 2.)))) 0.) (and (> (* skoMC1 (* skoMC1 (* skoMC1 2.))) 0.) (and (<= skoSC1 (/ 5. 4.)) (and (<= 2. skoMC1) (and (<= 0. skoSC1) (and (> skoMC1 0.) (and (<= 0. skoMC1) (and (> (* skoSC1 skoMC1) (* skoMC1 (- 1.))) (and (<= (* skoSC1 (* skoMC1 (- 1.))) skoMC1) (and (> (* skoSC1 (* skoMC1 (* skoMC1 (* skoMC1 2.)))) (* skoMC1 (* skoMC1 (* skoMC1 (- 2.))))) (and (<= (* skoSC1 (* skoMC1 (* skoMC1 (* skoMC1 (- 2.))))) (* skoMC1 (* skoMC1 (* skoMC1 2.)))) (and (> (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (* skoMC1 12.)))) (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (+ (- 1.) (* skoMC1 6.))))) (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (- 1.)))) (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (/ 1. 12.)))) (* skoSC1 (* skoMC1 (* skoMC1 (* skoMC1 (/ 1. 12.))))))))))))) (* skoMC1 (* skoMC1 (* skoMC1 (+ (- 2.) (* skoMC1 (- 6.))))))) (<= (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (* skoMC1 (- 12.))))) (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (+ 1. (* skoMC1 (- 6.)))))) (* skoSC1 (+ (* skoMC1 (* skoMC1 skoMC1)) (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (/ (- 1.) 12.)))) (* skoSC1 (* skoMC1 (* skoMC1 (* skoMC1 (/ (- 1.) 12.))))))))))))) (* skoMC1 (* skoMC1 (* skoMC1 (+ 2. (* skoMC1 6.))))))))))))))))))))))

% In GRF format:
(sequent " MetiTarski formula " (antecedent (<= (* skoSC1 (* skoMC1 (* skoMC1 (* skoMC1 (- 2.))))) (* skoMC1 (* skoMC1 (* skoMC1 2.)))) (<= (* skoSC1 (* skoMC1 (* skoMC1 (* skoMC1 (- 1.))))) (* skoMC1 (* skoMC1 skoMC1))) (> (* skoSC1 (* skoMC1 (* skoMC1 skoMC1))) (* skoMC1 (* skoMC1 (* skoMC1 (- 1.))))) (<= (* skoMC1 (* skoMC1 (* skoMC1 (- 2.)))) 0.) (> (* skoMC1 (* skoMC1 (* skoMC1 2.))) 0.) (<= skoSC1 (/ 5. 4.)) (<= 2. skoMC1) (<= 0. skoSC1) (> skoMC1 0.) (<= 0. skoMC1) (> (* skoSC1 skoMC1) (* skoMC1 (- 1.))) (<= (* skoSC1 (* skoMC1 (- 1.))) skoMC1) (> (* skoSC1 (* skoMC1 (* skoMC1 (* skoMC1 2.)))) (* skoMC1 (* skoMC1 (* skoMC1 (- 2.))))) (<= (* skoSC1 (* skoMC1 (* skoMC1 (* skoMC1 (- 2.))))) (* skoMC1 (* skoMC1 (* skoMC1 2.)))) (> (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (* skoMC1 12.)))) (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (+ (- 1.) (* skoMC1 6.))))) (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (- 1.)))) (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (/ 1. 12.)))) (* skoSC1 (* skoMC1 (* skoMC1 (* skoMC1 (/ 1. 12.))))))))))))) (* skoMC1 (* skoMC1 (* skoMC1 (+ (- 2.) (* skoMC1 (- 6.)))))))) (succedent (> (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (* skoMC1 (- 12.))))) (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (+ 1. (* skoMC1 (- 6.)))))) (* skoSC1 (+ (* skoMC1 (* skoMC1 skoMC1)) (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (/ (- 1.) 12.)))) (* skoSC1 (* skoMC1 (* skoMC1 (* skoMC1 (/ (- 1.) 12.))))))))))))) (* skoMC1 (* skoMC1 (* skoMC1 (+ 2. (* skoMC1 6.))))))))
-----[end problem]-----

-----[begin problem]-----
% In Mathematica format:
Timing[Resolve[Exists[{skoSC1,skoMC1}, And[skoSC1*(skoMC1*skoMC1*skoMC1*-1+skoSC1*skoMC1*skoMC1*skoMC1*-1)<=0,skoSC1*skoMC1*skoMC1*skoMC1*-1<=skoMC1*skoMC1*skoMC1,skoSC1*skoMC1*skoMC1*skoMC1>skoMC1*skoMC1*skoMC1*-1,skoMC1*skoMC1*skoMC1*-2<=0,skoMC1*skoMC1*skoMC1*2>0,skoSC1<=(5/4),2<=skoMC1,0<=skoSC1,skoMC1>0,0<=skoMC1,skoSC1*skoMC1>skoMC1*-1,skoSC1*skoMC1*-1<=skoMC1,skoSC1*skoMC1*skoMC1*skoMC1*2>skoMC1*skoMC1*skoMC1*-2,skoSC1*skoMC1*skoMC1*skoMC1*-2<=skoMC1*skoMC1*skoMC1*2,skoSC1*(skoMC1*skoMC1*skoMC1*skoMC1*12+skoSC1*(skoMC1*skoMC1*skoMC1*(-1+skoMC1*6)+skoSC1*(skoMC1*skoMC1*skoMC1*-1+skoSC1*(skoMC1*skoMC1*skoMC1*(1/12)+skoSC1*skoMC1*skoMC1*skoMC1*(1/12)))))>skoMC1*skoMC1*skoMC1*(-2+skoMC1*-6),skoSC1*(skoMC1*skoMC1*skoMC1*skoMC1*-12+skoSC1*(skoMC1*skoMC1*skoMC1*(1+skoMC1*-6)+skoSC1*(skoMC1*skoMC1*skoMC1+skoSC1*(skoMC1*skoMC1*skoMC1*(-1/12)+skoSC1*skoMC1*skoMC1*skoMC1*(-1/12)))))<=skoMC1*skoMC1*skoMC1*(2+skoMC1*6)]], Reals]]

% In QepcadB format:
(E skoSC1) (E skoMC1) [[(skoSC1 ((skoMC1 skoMC1 skoMC1 (-1))+(skoSC1 skoMC1 skoMC1 skoMC1 (-1))))<=0]/\[[(skoSC1 skoMC1 skoMC1 skoMC1 (-1))<=(skoMC1 skoMC1 skoMC1)]/\[[(skoMC1 skoMC1 skoMC1 (-1))<(skoSC1 skoMC1 skoMC1 skoMC1)]/\[[(skoMC1 skoMC1 skoMC1 (-2))<=0]/\[[0<(skoMC1 skoMC1 skoMC1 (2))]/\[[skoSC1<=5/4]/\[[2<=skoMC1]/\[[0<=skoSC1]/\[[0<skoMC1]/\[[0<=skoMC1]/\[[(skoMC1 (-1))<(skoSC1 skoMC1)]/\[[(skoSC1 skoMC1 (-1))<=skoMC1]/\[[(skoMC1 skoMC1 skoMC1 (-2))<(skoSC1 skoMC1 skoMC1 skoMC1 (2))]/\[[(skoSC1 skoMC1 skoMC1 skoMC1 (-2))<=(skoMC1 skoMC1 skoMC1 (2))]/\[[(skoMC1 skoMC1 skoMC1 (-2+(skoMC1 (-6))))<(skoSC1 ((skoMC1 skoMC1 skoMC1 skoMC1 (12))+(skoSC1 ((skoMC1 skoMC1 skoMC1 (-1+(skoMC1 (6))))+(skoSC1 ((skoMC1 skoMC1 skoMC1 (-1))+(skoSC1 ((skoMC1 skoMC1 skoMC1 (1/12))+(skoSC1 skoMC1 skoMC1 skoMC1 (1/12))))))))))]/\[(skoSC1 ((skoMC1 skoMC1 skoMC1 skoMC1 (-12))+(skoSC1 ((skoMC1 skoMC1 skoMC1 (1+(skoMC1 (-6))))+(skoSC1 ((skoMC1 skoMC1 skoMC1)+(skoSC1 ((skoMC1 skoMC1 skoMC1 (-1/12))+(skoSC1 skoMC1 skoMC1 skoMC1 (-1/12))))))))))<=(skoMC1 skoMC1 skoMC1 (2+(skoMC1 (6))))]]]]]]]]]]]]]]]].

% In SMTLib2 format:
(declare-fun skoSC1 () Real) (declare-fun skoMC1 () Real) (assert (and (<= (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (- 1.)))) (* skoSC1 (* skoMC1 (* skoMC1 (* skoMC1 (- 1.))))))) 0.) (and (<= (* skoSC1 (* skoMC1 (* skoMC1 (* skoMC1 (- 1.))))) (* skoMC1 (* skoMC1 skoMC1))) (and (> (* skoSC1 (* skoMC1 (* skoMC1 skoMC1))) (* skoMC1 (* skoMC1 (* skoMC1 (- 1.))))) (and (<= (* skoMC1 (* skoMC1 (* skoMC1 (- 2.)))) 0.) (and (> (* skoMC1 (* skoMC1 (* skoMC1 2.))) 0.) (and (<= skoSC1 (/ 5. 4.)) (and (<= 2. skoMC1) (and (<= 0. skoSC1) (and (> skoMC1 0.) (and (<= 0. skoMC1) (and (> (* skoSC1 skoMC1) (* skoMC1 (- 1.))) (and (<= (* skoSC1 (* skoMC1 (- 1.))) skoMC1) (and (> (* skoSC1 (* skoMC1 (* skoMC1 (* skoMC1 2.)))) (* skoMC1 (* skoMC1 (* skoMC1 (- 2.))))) (and (<= (* skoSC1 (* skoMC1 (* skoMC1 (* skoMC1 (- 2.))))) (* skoMC1 (* skoMC1 (* skoMC1 2.)))) (and (> (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (* skoMC1 12.)))) (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (+ (- 1.) (* skoMC1 6.))))) (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (- 1.)))) (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (/ 1. 12.)))) (* skoSC1 (* skoMC1 (* skoMC1 (* skoMC1 (/ 1. 12.))))))))))))) (* skoMC1 (* skoMC1 (* skoMC1 (+ (- 2.) (* skoMC1 (- 6.))))))) (<= (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (* skoMC1 (- 12.))))) (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (+ 1. (* skoMC1 (- 6.)))))) (* skoSC1 (+ (* skoMC1 (* skoMC1 skoMC1)) (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (/ (- 1.) 12.)))) (* skoSC1 (* skoMC1 (* skoMC1 (* skoMC1 (/ (- 1.) 12.))))))))))))) (* skoMC1 (* skoMC1 (* skoMC1 (+ 2. (* skoMC1 6.))))))))))))))))))))))

% In GRF format:
(sequent " MetiTarski formula " (antecedent (<= (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (- 1.)))) (* skoSC1 (* skoMC1 (* skoMC1 (* skoMC1 (- 1.))))))) 0.) (<= (* skoSC1 (* skoMC1 (* skoMC1 (* skoMC1 (- 1.))))) (* skoMC1 (* skoMC1 skoMC1))) (> (* skoSC1 (* skoMC1 (* skoMC1 skoMC1))) (* skoMC1 (* skoMC1 (* skoMC1 (- 1.))))) (<= (* skoMC1 (* skoMC1 (* skoMC1 (- 2.)))) 0.) (> (* skoMC1 (* skoMC1 (* skoMC1 2.))) 0.) (<= skoSC1 (/ 5. 4.)) (<= 2. skoMC1) (<= 0. skoSC1) (> skoMC1 0.) (<= 0. skoMC1) (> (* skoSC1 skoMC1) (* skoMC1 (- 1.))) (<= (* skoSC1 (* skoMC1 (- 1.))) skoMC1) (> (* skoSC1 (* skoMC1 (* skoMC1 (* skoMC1 2.)))) (* skoMC1 (* skoMC1 (* skoMC1 (- 2.))))) (<= (* skoSC1 (* skoMC1 (* skoMC1 (* skoMC1 (- 2.))))) (* skoMC1 (* skoMC1 (* skoMC1 2.)))) (> (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (* skoMC1 12.)))) (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (+ (- 1.) (* skoMC1 6.))))) (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (- 1.)))) (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (/ 1. 12.)))) (* skoSC1 (* skoMC1 (* skoMC1 (* skoMC1 (/ 1. 12.))))))))))))) (* skoMC1 (* skoMC1 (* skoMC1 (+ (- 2.) (* skoMC1 (- 6.)))))))) (succedent (> (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (* skoMC1 (- 12.))))) (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (+ 1. (* skoMC1 (- 6.)))))) (* skoSC1 (+ (* skoMC1 (* skoMC1 skoMC1)) (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (/ (- 1.) 12.)))) (* skoSC1 (* skoMC1 (* skoMC1 (* skoMC1 (/ (- 1.) 12.))))))))))))) (* skoMC1 (* skoMC1 (* skoMC1 (+ 2. (* skoMC1 6.))))))))
-----[end problem]-----

-----[begin problem]-----
% In Mathematica format:
Timing[Resolve[Exists[{skoSC1,skoMC1}, And[skoSC1*(skoMC1*skoMC1*skoMC1*skoMC1*-12+skoSC1*(skoMC1*skoMC1*skoMC1*(1+skoMC1*-6)+skoSC1*(skoMC1*skoMC1*skoMC1+skoSC1*(skoMC1*skoMC1*skoMC1*(-1/12)+skoSC1*(skoMC1*skoMC1*skoMC1*(-1/12)+skoSC1*(skoMC1*skoMC1*skoMC1*(1/360)+skoSC1*(skoMC1*skoMC1*skoMC1*(1/360)+skoSC1*(skoMC1*skoMC1*skoMC1*(-1/20160)+skoSC1*(skoMC1*skoMC1*skoMC1*(-1/20160)+skoSC1*(skoMC1*skoMC1*skoMC1*(1/1814400)+skoSC1*(skoMC1*skoMC1*skoMC1*(1/1814400)+skoSC1*(skoMC1*skoMC1*skoMC1*(-1/239500800)+skoSC1*skoMC1*skoMC1*skoMC1*(-1/239500800)))))))))))))<=skoMC1*skoMC1*skoMC1*(2+skoMC1*6),skoSC1*(skoMC1*skoMC1*skoMC1*-1+skoSC1*skoMC1*skoMC1*skoMC1*-1)<=0,skoSC1*skoMC1*skoMC1*skoMC1*-1<=skoMC1*skoMC1*skoMC1,skoSC1*skoMC1*skoMC1*skoMC1>skoMC1*skoMC1*skoMC1*-1,skoMC1*skoMC1*skoMC1*-2<=0,skoMC1*skoMC1*skoMC1*2>0,skoSC1<=(5/4),2<=skoMC1,0<=skoSC1,skoMC1>0,0<=skoMC1,skoSC1*skoMC1>skoMC1*-1,skoSC1*skoMC1*-1<=skoMC1,skoSC1*skoMC1*skoMC1*skoMC1*2>skoMC1*skoMC1*skoMC1*-2,skoSC1*skoMC1*skoMC1*skoMC1*-2<=skoMC1*skoMC1*skoMC1*2,skoSC1*(skoMC1*skoMC1*skoMC1*skoMC1*12+skoSC1*(skoMC1*skoMC1*skoMC1*(-1+skoMC1*6)+skoSC1*(skoMC1*skoMC1*skoMC1*-1+skoSC1*(skoMC1*skoMC1*skoMC1*(1/12)+skoSC1*skoMC1*skoMC1*skoMC1*(1/12)))))>skoMC1*skoMC1*skoMC1*(-2+skoMC1*-6),skoSC1*(skoMC1*skoMC1*skoMC1*skoMC1*-12+skoSC1*(skoMC1*skoMC1*skoMC1*(1+skoMC1*-6)+skoSC1*(skoMC1*skoMC1*skoMC1+skoSC1*(skoMC1*skoMC1*skoMC1*(-1/12)+skoSC1*skoMC1*skoMC1*skoMC1*(-1/12)))))<=skoMC1*skoMC1*skoMC1*(2+skoMC1*6)]], Reals]]

% In QepcadB format:
(E skoSC1) (E skoMC1) [[(skoSC1 ((skoMC1 skoMC1 skoMC1 skoMC1 (-12))+(skoSC1 ((skoMC1 skoMC1 skoMC1 (1+(skoMC1 (-6))))+(skoSC1 ((skoMC1 skoMC1 skoMC1)+(skoSC1 ((skoMC1 skoMC1 skoMC1 (-1/12))+(skoSC1 ((skoMC1 skoMC1 skoMC1 (-1/12))+(skoSC1 ((skoMC1 skoMC1 skoMC1 (1/360))+(skoSC1 ((skoMC1 skoMC1 skoMC1 (1/360))+(skoSC1 ((skoMC1 skoMC1 skoMC1 (-1/20160))+(skoSC1 ((skoMC1 skoMC1 skoMC1 (-1/20160))+(skoSC1 ((skoMC1 skoMC1 skoMC1 (1/1814400))+(skoSC1 ((skoMC1 skoMC1 skoMC1 (1/1814400))+(skoSC1 ((skoMC1 skoMC1 skoMC1 (-1/239500800))+(skoSC1 skoMC1 skoMC1 skoMC1 (-1/239500800))))))))))))))))))))))))))<=(skoMC1 skoMC1 skoMC1 (2+(skoMC1 (6))))]/\[[(skoSC1 ((skoMC1 skoMC1 skoMC1 (-1))+(skoSC1 skoMC1 skoMC1 skoMC1 (-1))))<=0]/\[[(skoSC1 skoMC1 skoMC1 skoMC1 (-1))<=(skoMC1 skoMC1 skoMC1)]/\[[(skoMC1 skoMC1 skoMC1 (-1))<(skoSC1 skoMC1 skoMC1 skoMC1)]/\[[(skoMC1 skoMC1 skoMC1 (-2))<=0]/\[[0<(skoMC1 skoMC1 skoMC1 (2))]/\[[skoSC1<=5/4]/\[[2<=skoMC1]/\[[0<=skoSC1]/\[[0<skoMC1]/\[[0<=skoMC1]/\[[(skoMC1 (-1))<(skoSC1 skoMC1)]/\[[(skoSC1 skoMC1 (-1))<=skoMC1]/\[[(skoMC1 skoMC1 skoMC1 (-2))<(skoSC1 skoMC1 skoMC1 skoMC1 (2))]/\[[(skoSC1 skoMC1 skoMC1 skoMC1 (-2))<=(skoMC1 skoMC1 skoMC1 (2))]/\[[(skoMC1 skoMC1 skoMC1 (-2+(skoMC1 (-6))))<(skoSC1 ((skoMC1 skoMC1 skoMC1 skoMC1 (12))+(skoSC1 ((skoMC1 skoMC1 skoMC1 (-1+(skoMC1 (6))))+(skoSC1 ((skoMC1 skoMC1 skoMC1 (-1))+(skoSC1 ((skoMC1 skoMC1 skoMC1 (1/12))+(skoSC1 skoMC1 skoMC1 skoMC1 (1/12))))))))))]/\[(skoSC1 ((skoMC1 skoMC1 skoMC1 skoMC1 (-12))+(skoSC1 ((skoMC1 skoMC1 skoMC1 (1+(skoMC1 (-6))))+(skoSC1 ((skoMC1 skoMC1 skoMC1)+(skoSC1 ((skoMC1 skoMC1 skoMC1 (-1/12))+(skoSC1 skoMC1 skoMC1 skoMC1 (-1/12))))))))))<=(skoMC1 skoMC1 skoMC1 (2+(skoMC1 (6))))]]]]]]]]]]]]]]]]].

% In SMTLib2 format:
(declare-fun skoSC1 () Real) (declare-fun skoMC1 () Real) (assert (and (<= (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (* skoMC1 (- 12.))))) (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (+ 1. (* skoMC1 (- 6.)))))) (* skoSC1 (+ (* skoMC1 (* skoMC1 skoMC1)) (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (/ (- 1.) 12.)))) (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (/ (- 1.) 12.)))) (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (/ 1. 360.)))) (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (/ 1. 360.)))) (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (/ (- 1.) 20160.)))) (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (/ (- 1.) 20160.)))) (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (/ 1. 1814400.)))) (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (/ 1. 1814400.)))) (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (/ (- 1.) 239500800.)))) (* skoSC1 (* skoMC1 (* skoMC1 (* skoMC1 (/ (- 1.) 239500800.))))))))))))))))))))))))))))) (* skoMC1 (* skoMC1 (* skoMC1 (+ 2. (* skoMC1 6.)))))) (and (<= (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (- 1.)))) (* skoSC1 (* skoMC1 (* skoMC1 (* skoMC1 (- 1.))))))) 0.) (and (<= (* skoSC1 (* skoMC1 (* skoMC1 (* skoMC1 (- 1.))))) (* skoMC1 (* skoMC1 skoMC1))) (and (> (* skoSC1 (* skoMC1 (* skoMC1 skoMC1))) (* skoMC1 (* skoMC1 (* skoMC1 (- 1.))))) (and (<= (* skoMC1 (* skoMC1 (* skoMC1 (- 2.)))) 0.) (and (> (* skoMC1 (* skoMC1 (* skoMC1 2.))) 0.) (and (<= skoSC1 (/ 5. 4.)) (and (<= 2. skoMC1) (and (<= 0. skoSC1) (and (> skoMC1 0.) (and (<= 0. skoMC1) (and (> (* skoSC1 skoMC1) (* skoMC1 (- 1.))) (and (<= (* skoSC1 (* skoMC1 (- 1.))) skoMC1) (and (> (* skoSC1 (* skoMC1 (* skoMC1 (* skoMC1 2.)))) (* skoMC1 (* skoMC1 (* skoMC1 (- 2.))))) (and (<= (* skoSC1 (* skoMC1 (* skoMC1 (* skoMC1 (- 2.))))) (* skoMC1 (* skoMC1 (* skoMC1 2.)))) (and (> (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (* skoMC1 12.)))) (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (+ (- 1.) (* skoMC1 6.))))) (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (- 1.)))) (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (/ 1. 12.)))) (* skoSC1 (* skoMC1 (* skoMC1 (* skoMC1 (/ 1. 12.))))))))))))) (* skoMC1 (* skoMC1 (* skoMC1 (+ (- 2.) (* skoMC1 (- 6.))))))) (<= (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (* skoMC1 (- 12.))))) (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (+ 1. (* skoMC1 (- 6.)))))) (* skoSC1 (+ (* skoMC1 (* skoMC1 skoMC1)) (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (/ (- 1.) 12.)))) (* skoSC1 (* skoMC1 (* skoMC1 (* skoMC1 (/ (- 1.) 12.))))))))))))) (* skoMC1 (* skoMC1 (* skoMC1 (+ 2. (* skoMC1 6.)))))))))))))))))))))))

% In GRF format:
(sequent " MetiTarski formula " (antecedent (<= (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (* skoMC1 (- 12.))))) (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (+ 1. (* skoMC1 (- 6.)))))) (* skoSC1 (+ (* skoMC1 (* skoMC1 skoMC1)) (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (/ (- 1.) 12.)))) (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (/ (- 1.) 12.)))) (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (/ 1. 360.)))) (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (/ 1. 360.)))) (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (/ (- 1.) 20160.)))) (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (/ (- 1.) 20160.)))) (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (/ 1. 1814400.)))) (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (/ 1. 1814400.)))) (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (/ (- 1.) 239500800.)))) (* skoSC1 (* skoMC1 (* skoMC1 (* skoMC1 (/ (- 1.) 239500800.))))))))))))))))))))))))))))) (* skoMC1 (* skoMC1 (* skoMC1 (+ 2. (* skoMC1 6.)))))) (<= (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (- 1.)))) (* skoSC1 (* skoMC1 (* skoMC1 (* skoMC1 (- 1.))))))) 0.) (<= (* skoSC1 (* skoMC1 (* skoMC1 (* skoMC1 (- 1.))))) (* skoMC1 (* skoMC1 skoMC1))) (> (* skoSC1 (* skoMC1 (* skoMC1 skoMC1))) (* skoMC1 (* skoMC1 (* skoMC1 (- 1.))))) (<= (* skoMC1 (* skoMC1 (* skoMC1 (- 2.)))) 0.) (> (* skoMC1 (* skoMC1 (* skoMC1 2.))) 0.) (<= skoSC1 (/ 5. 4.)) (<= 2. skoMC1) (<= 0. skoSC1) (> skoMC1 0.) (<= 0. skoMC1) (> (* skoSC1 skoMC1) (* skoMC1 (- 1.))) (<= (* skoSC1 (* skoMC1 (- 1.))) skoMC1) (> (* skoSC1 (* skoMC1 (* skoMC1 (* skoMC1 2.)))) (* skoMC1 (* skoMC1 (* skoMC1 (- 2.))))) (<= (* skoSC1 (* skoMC1 (* skoMC1 (* skoMC1 (- 2.))))) (* skoMC1 (* skoMC1 (* skoMC1 2.)))) (> (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (* skoMC1 12.)))) (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (+ (- 1.) (* skoMC1 6.))))) (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (- 1.)))) (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (/ 1. 12.)))) (* skoSC1 (* skoMC1 (* skoMC1 (* skoMC1 (/ 1. 12.))))))))))))) (* skoMC1 (* skoMC1 (* skoMC1 (+ (- 2.) (* skoMC1 (- 6.)))))))) (succedent (> (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (* skoMC1 (- 12.))))) (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (+ 1. (* skoMC1 (- 6.)))))) (* skoSC1 (+ (* skoMC1 (* skoMC1 skoMC1)) (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (/ (- 1.) 12.)))) (* skoSC1 (* skoMC1 (* skoMC1 (* skoMC1 (/ (- 1.) 12.))))))))))))) (* skoMC1 (* skoMC1 (* skoMC1 (+ 2. (* skoMC1 6.))))))))
-----[end problem]-----

-----[begin problem]-----
% In Mathematica format:
Timing[Resolve[Exists[{skoSC1,skoMC1}, And[skoSC1*(skoMC1*skoMC1*skoMC1+skoSC1*skoMC1*skoMC1*skoMC1)>0,skoSC1*(skoMC1*skoMC1*skoMC1*-1+skoSC1*skoMC1*skoMC1*skoMC1*-1)<=0,skoSC1*skoMC1*skoMC1*skoMC1*-1<=skoMC1*skoMC1*skoMC1,skoSC1*skoMC1*skoMC1*skoMC1>skoMC1*skoMC1*skoMC1*-1,skoMC1*skoMC1*skoMC1*-2<=0,skoMC1*skoMC1*skoMC1*2>0,skoSC1<=(5/4),2<=skoMC1,0<=skoSC1,skoMC1>0,0<=skoMC1,skoSC1*skoMC1>skoMC1*-1,skoSC1*skoMC1*-1<=skoMC1,skoSC1*skoMC1*skoMC1*skoMC1*2>skoMC1*skoMC1*skoMC1*-2,skoSC1*skoMC1*skoMC1*skoMC1*-2<=skoMC1*skoMC1*skoMC1*2,skoSC1*(skoMC1*skoMC1*skoMC1*skoMC1*12+skoSC1*(skoMC1*skoMC1*skoMC1*(-1+skoMC1*6)+skoSC1*(skoMC1*skoMC1*skoMC1*-1+skoSC1*(skoMC1*skoMC1*skoMC1*(1/12)+skoSC1*skoMC1*skoMC1*skoMC1*(1/12)))))>skoMC1*skoMC1*skoMC1*(-2+skoMC1*-6),skoSC1*(skoMC1*skoMC1*skoMC1*skoMC1*-12+skoSC1*(skoMC1*skoMC1*skoMC1*(1+skoMC1*-6)+skoSC1*(skoMC1*skoMC1*skoMC1+skoSC1*(skoMC1*skoMC1*skoMC1*(-1/12)+skoSC1*skoMC1*skoMC1*skoMC1*(-1/12)))))<=skoMC1*skoMC1*skoMC1*(2+skoMC1*6)]], Reals]]

% In QepcadB format:
(E skoSC1) (E skoMC1) [[0<(skoSC1 ((skoMC1 skoMC1 skoMC1)+(skoSC1 skoMC1 skoMC1 skoMC1)))]/\[[(skoSC1 ((skoMC1 skoMC1 skoMC1 (-1))+(skoSC1 skoMC1 skoMC1 skoMC1 (-1))))<=0]/\[[(skoSC1 skoMC1 skoMC1 skoMC1 (-1))<=(skoMC1 skoMC1 skoMC1)]/\[[(skoMC1 skoMC1 skoMC1 (-1))<(skoSC1 skoMC1 skoMC1 skoMC1)]/\[[(skoMC1 skoMC1 skoMC1 (-2))<=0]/\[[0<(skoMC1 skoMC1 skoMC1 (2))]/\[[skoSC1<=5/4]/\[[2<=skoMC1]/\[[0<=skoSC1]/\[[0<skoMC1]/\[[0<=skoMC1]/\[[(skoMC1 (-1))<(skoSC1 skoMC1)]/\[[(skoSC1 skoMC1 (-1))<=skoMC1]/\[[(skoMC1 skoMC1 skoMC1 (-2))<(skoSC1 skoMC1 skoMC1 skoMC1 (2))]/\[[(skoSC1 skoMC1 skoMC1 skoMC1 (-2))<=(skoMC1 skoMC1 skoMC1 (2))]/\[[(skoMC1 skoMC1 skoMC1 (-2+(skoMC1 (-6))))<(skoSC1 ((skoMC1 skoMC1 skoMC1 skoMC1 (12))+(skoSC1 ((skoMC1 skoMC1 skoMC1 (-1+(skoMC1 (6))))+(skoSC1 ((skoMC1 skoMC1 skoMC1 (-1))+(skoSC1 ((skoMC1 skoMC1 skoMC1 (1/12))+(skoSC1 skoMC1 skoMC1 skoMC1 (1/12))))))))))]/\[(skoSC1 ((skoMC1 skoMC1 skoMC1 skoMC1 (-12))+(skoSC1 ((skoMC1 skoMC1 skoMC1 (1+(skoMC1 (-6))))+(skoSC1 ((skoMC1 skoMC1 skoMC1)+(skoSC1 ((skoMC1 skoMC1 skoMC1 (-1/12))+(skoSC1 skoMC1 skoMC1 skoMC1 (-1/12))))))))))<=(skoMC1 skoMC1 skoMC1 (2+(skoMC1 (6))))]]]]]]]]]]]]]]]]].

% In SMTLib2 format:
(declare-fun skoSC1 () Real) (declare-fun skoMC1 () Real) (assert (and (> (* skoSC1 (+ (* skoMC1 (* skoMC1 skoMC1)) (* skoSC1 (* skoMC1 (* skoMC1 skoMC1))))) 0.) (and (<= (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (- 1.)))) (* skoSC1 (* skoMC1 (* skoMC1 (* skoMC1 (- 1.))))))) 0.) (and (<= (* skoSC1 (* skoMC1 (* skoMC1 (* skoMC1 (- 1.))))) (* skoMC1 (* skoMC1 skoMC1))) (and (> (* skoSC1 (* skoMC1 (* skoMC1 skoMC1))) (* skoMC1 (* skoMC1 (* skoMC1 (- 1.))))) (and (<= (* skoMC1 (* skoMC1 (* skoMC1 (- 2.)))) 0.) (and (> (* skoMC1 (* skoMC1 (* skoMC1 2.))) 0.) (and (<= skoSC1 (/ 5. 4.)) (and (<= 2. skoMC1) (and (<= 0. skoSC1) (and (> skoMC1 0.) (and (<= 0. skoMC1) (and (> (* skoSC1 skoMC1) (* skoMC1 (- 1.))) (and (<= (* skoSC1 (* skoMC1 (- 1.))) skoMC1) (and (> (* skoSC1 (* skoMC1 (* skoMC1 (* skoMC1 2.)))) (* skoMC1 (* skoMC1 (* skoMC1 (- 2.))))) (and (<= (* skoSC1 (* skoMC1 (* skoMC1 (* skoMC1 (- 2.))))) (* skoMC1 (* skoMC1 (* skoMC1 2.)))) (and (> (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (* skoMC1 12.)))) (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (+ (- 1.) (* skoMC1 6.))))) (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (- 1.)))) (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (/ 1. 12.)))) (* skoSC1 (* skoMC1 (* skoMC1 (* skoMC1 (/ 1. 12.))))))))))))) (* skoMC1 (* skoMC1 (* skoMC1 (+ (- 2.) (* skoMC1 (- 6.))))))) (<= (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (* skoMC1 (- 12.))))) (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (+ 1. (* skoMC1 (- 6.)))))) (* skoSC1 (+ (* skoMC1 (* skoMC1 skoMC1)) (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (/ (- 1.) 12.)))) (* skoSC1 (* skoMC1 (* skoMC1 (* skoMC1 (/ (- 1.) 12.))))))))))))) (* skoMC1 (* skoMC1 (* skoMC1 (+ 2. (* skoMC1 6.)))))))))))))))))))))))

% In GRF format:
(sequent " MetiTarski formula " (antecedent (> (* skoSC1 (+ (* skoMC1 (* skoMC1 skoMC1)) (* skoSC1 (* skoMC1 (* skoMC1 skoMC1))))) 0.) (<= (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (- 1.)))) (* skoSC1 (* skoMC1 (* skoMC1 (* skoMC1 (- 1.))))))) 0.) (<= (* skoSC1 (* skoMC1 (* skoMC1 (* skoMC1 (- 1.))))) (* skoMC1 (* skoMC1 skoMC1))) (> (* skoSC1 (* skoMC1 (* skoMC1 skoMC1))) (* skoMC1 (* skoMC1 (* skoMC1 (- 1.))))) (<= (* skoMC1 (* skoMC1 (* skoMC1 (- 2.)))) 0.) (> (* skoMC1 (* skoMC1 (* skoMC1 2.))) 0.) (<= skoSC1 (/ 5. 4.)) (<= 2. skoMC1) (<= 0. skoSC1) (> skoMC1 0.) (<= 0. skoMC1) (> (* skoSC1 skoMC1) (* skoMC1 (- 1.))) (<= (* skoSC1 (* skoMC1 (- 1.))) skoMC1) (> (* skoSC1 (* skoMC1 (* skoMC1 (* skoMC1 2.)))) (* skoMC1 (* skoMC1 (* skoMC1 (- 2.))))) (<= (* skoSC1 (* skoMC1 (* skoMC1 (* skoMC1 (- 2.))))) (* skoMC1 (* skoMC1 (* skoMC1 2.)))) (> (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (* skoMC1 12.)))) (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (+ (- 1.) (* skoMC1 6.))))) (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (- 1.)))) (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (/ 1. 12.)))) (* skoSC1 (* skoMC1 (* skoMC1 (* skoMC1 (/ 1. 12.))))))))))))) (* skoMC1 (* skoMC1 (* skoMC1 (+ (- 2.) (* skoMC1 (- 6.)))))))) (succedent (> (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (* skoMC1 (- 12.))))) (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (+ 1. (* skoMC1 (- 6.)))))) (* skoSC1 (+ (* skoMC1 (* skoMC1 skoMC1)) (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (/ (- 1.) 12.)))) (* skoSC1 (* skoMC1 (* skoMC1 (* skoMC1 (/ (- 1.) 12.))))))))))))) (* skoMC1 (* skoMC1 (* skoMC1 (+ 2. (* skoMC1 6.))))))))
-----[end problem]-----

-----[begin problem]-----
% In Mathematica format:
Timing[Resolve[Exists[{skoSC1,skoMC1}, And[skoSC1*(skoMC1*skoMC1*skoMC1+skoSC1*skoMC1*skoMC1*skoMC1)>0,skoSC1*(skoMC1*skoMC1*skoMC1*-1+skoSC1*skoMC1*skoMC1*skoMC1*-1)<=0,skoSC1*skoMC1*skoMC1*skoMC1*-1<=skoMC1*skoMC1*skoMC1,skoSC1*skoMC1*skoMC1*skoMC1>skoMC1*skoMC1*skoMC1*-1,skoMC1*skoMC1*skoMC1*-2<=0,skoMC1*skoMC1*skoMC1*2>0,skoSC1<=(5/4),2<=skoMC1,0<=skoSC1,skoMC1>0,0<=skoMC1,skoSC1*skoMC1>skoMC1*-1,skoSC1*skoMC1*-1<=skoMC1,skoSC1*skoMC1*skoMC1*skoMC1*2>skoMC1*skoMC1*skoMC1*-2,skoSC1*skoMC1*skoMC1*skoMC1*-2<=skoMC1*skoMC1*skoMC1*2,skoSC1*(skoMC1*skoMC1*skoMC1*skoMC1*12+skoSC1*(skoMC1*skoMC1*skoMC1*(-1+skoMC1*6)+skoSC1*(skoMC1*skoMC1*skoMC1*-1+skoSC1*(skoMC1*skoMC1*skoMC1*(1/12)+skoSC1*skoMC1*skoMC1*skoMC1*(1/12)))))>skoMC1*skoMC1*skoMC1*(-2+skoMC1*-6),skoSC1*(skoMC1*skoMC1*skoMC1*skoMC1*-12+skoSC1*(skoMC1*skoMC1*skoMC1*(1+skoMC1*-6)+skoSC1*(skoMC1*skoMC1*skoMC1+skoSC1*(skoMC1*skoMC1*skoMC1*(-1/12)+skoSC1*skoMC1*skoMC1*skoMC1*(-1/12)))))<=skoMC1*skoMC1*skoMC1*(2+skoMC1*6)]], Reals]]

% In QepcadB format:
(E skoSC1) (E skoMC1) [[0<(skoSC1 ((skoMC1 skoMC1 skoMC1)+(skoSC1 skoMC1 skoMC1 skoMC1)))]/\[[(skoSC1 ((skoMC1 skoMC1 skoMC1 (-1))+(skoSC1 skoMC1 skoMC1 skoMC1 (-1))))<=0]/\[[(skoSC1 skoMC1 skoMC1 skoMC1 (-1))<=(skoMC1 skoMC1 skoMC1)]/\[[(skoMC1 skoMC1 skoMC1 (-1))<(skoSC1 skoMC1 skoMC1 skoMC1)]/\[[(skoMC1 skoMC1 skoMC1 (-2))<=0]/\[[0<(skoMC1 skoMC1 skoMC1 (2))]/\[[skoSC1<=5/4]/\[[2<=skoMC1]/\[[0<=skoSC1]/\[[0<skoMC1]/\[[0<=skoMC1]/\[[(skoMC1 (-1))<(skoSC1 skoMC1)]/\[[(skoSC1 skoMC1 (-1))<=skoMC1]/\[[(skoMC1 skoMC1 skoMC1 (-2))<(skoSC1 skoMC1 skoMC1 skoMC1 (2))]/\[[(skoSC1 skoMC1 skoMC1 skoMC1 (-2))<=(skoMC1 skoMC1 skoMC1 (2))]/\[[(skoMC1 skoMC1 skoMC1 (-2+(skoMC1 (-6))))<(skoSC1 ((skoMC1 skoMC1 skoMC1 skoMC1 (12))+(skoSC1 ((skoMC1 skoMC1 skoMC1 (-1+(skoMC1 (6))))+(skoSC1 ((skoMC1 skoMC1 skoMC1 (-1))+(skoSC1 ((skoMC1 skoMC1 skoMC1 (1/12))+(skoSC1 skoMC1 skoMC1 skoMC1 (1/12))))))))))]/\[(skoSC1 ((skoMC1 skoMC1 skoMC1 skoMC1 (-12))+(skoSC1 ((skoMC1 skoMC1 skoMC1 (1+(skoMC1 (-6))))+(skoSC1 ((skoMC1 skoMC1 skoMC1)+(skoSC1 ((skoMC1 skoMC1 skoMC1 (-1/12))+(skoSC1 skoMC1 skoMC1 skoMC1 (-1/12))))))))))<=(skoMC1 skoMC1 skoMC1 (2+(skoMC1 (6))))]]]]]]]]]]]]]]]]].

% In SMTLib2 format:
(declare-fun skoSC1 () Real) (declare-fun skoMC1 () Real) (assert (and (> (* skoSC1 (+ (* skoMC1 (* skoMC1 skoMC1)) (* skoSC1 (* skoMC1 (* skoMC1 skoMC1))))) 0.) (and (<= (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (- 1.)))) (* skoSC1 (* skoMC1 (* skoMC1 (* skoMC1 (- 1.))))))) 0.) (and (<= (* skoSC1 (* skoMC1 (* skoMC1 (* skoMC1 (- 1.))))) (* skoMC1 (* skoMC1 skoMC1))) (and (> (* skoSC1 (* skoMC1 (* skoMC1 skoMC1))) (* skoMC1 (* skoMC1 (* skoMC1 (- 1.))))) (and (<= (* skoMC1 (* skoMC1 (* skoMC1 (- 2.)))) 0.) (and (> (* skoMC1 (* skoMC1 (* skoMC1 2.))) 0.) (and (<= skoSC1 (/ 5. 4.)) (and (<= 2. skoMC1) (and (<= 0. skoSC1) (and (> skoMC1 0.) (and (<= 0. skoMC1) (and (> (* skoSC1 skoMC1) (* skoMC1 (- 1.))) (and (<= (* skoSC1 (* skoMC1 (- 1.))) skoMC1) (and (> (* skoSC1 (* skoMC1 (* skoMC1 (* skoMC1 2.)))) (* skoMC1 (* skoMC1 (* skoMC1 (- 2.))))) (and (<= (* skoSC1 (* skoMC1 (* skoMC1 (* skoMC1 (- 2.))))) (* skoMC1 (* skoMC1 (* skoMC1 2.)))) (and (> (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (* skoMC1 12.)))) (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (+ (- 1.) (* skoMC1 6.))))) (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (- 1.)))) (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (/ 1. 12.)))) (* skoSC1 (* skoMC1 (* skoMC1 (* skoMC1 (/ 1. 12.))))))))))))) (* skoMC1 (* skoMC1 (* skoMC1 (+ (- 2.) (* skoMC1 (- 6.))))))) (<= (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (* skoMC1 (- 12.))))) (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (+ 1. (* skoMC1 (- 6.)))))) (* skoSC1 (+ (* skoMC1 (* skoMC1 skoMC1)) (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (/ (- 1.) 12.)))) (* skoSC1 (* skoMC1 (* skoMC1 (* skoMC1 (/ (- 1.) 12.))))))))))))) (* skoMC1 (* skoMC1 (* skoMC1 (+ 2. (* skoMC1 6.)))))))))))))))))))))))

% In GRF format:
(sequent " MetiTarski formula " (antecedent (> (* skoSC1 (+ (* skoMC1 (* skoMC1 skoMC1)) (* skoSC1 (* skoMC1 (* skoMC1 skoMC1))))) 0.) (<= (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (- 1.)))) (* skoSC1 (* skoMC1 (* skoMC1 (* skoMC1 (- 1.))))))) 0.) (<= (* skoSC1 (* skoMC1 (* skoMC1 (* skoMC1 (- 1.))))) (* skoMC1 (* skoMC1 skoMC1))) (> (* skoSC1 (* skoMC1 (* skoMC1 skoMC1))) (* skoMC1 (* skoMC1 (* skoMC1 (- 1.))))) (<= (* skoMC1 (* skoMC1 (* skoMC1 (- 2.)))) 0.) (> (* skoMC1 (* skoMC1 (* skoMC1 2.))) 0.) (<= skoSC1 (/ 5. 4.)) (<= 2. skoMC1) (<= 0. skoSC1) (> skoMC1 0.) (<= 0. skoMC1) (> (* skoSC1 skoMC1) (* skoMC1 (- 1.))) (<= (* skoSC1 (* skoMC1 (- 1.))) skoMC1) (> (* skoSC1 (* skoMC1 (* skoMC1 (* skoMC1 2.)))) (* skoMC1 (* skoMC1 (* skoMC1 (- 2.))))) (<= (* skoSC1 (* skoMC1 (* skoMC1 (* skoMC1 (- 2.))))) (* skoMC1 (* skoMC1 (* skoMC1 2.)))) (> (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (* skoMC1 12.)))) (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (+ (- 1.) (* skoMC1 6.))))) (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (- 1.)))) (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (/ 1. 12.)))) (* skoSC1 (* skoMC1 (* skoMC1 (* skoMC1 (/ 1. 12.))))))))))))) (* skoMC1 (* skoMC1 (* skoMC1 (+ (- 2.) (* skoMC1 (- 6.)))))))) (succedent (> (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (* skoMC1 (- 12.))))) (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (+ 1. (* skoMC1 (- 6.)))))) (* skoSC1 (+ (* skoMC1 (* skoMC1 skoMC1)) (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (/ (- 1.) 12.)))) (* skoSC1 (* skoMC1 (* skoMC1 (* skoMC1 (/ (- 1.) 12.))))))))))))) (* skoMC1 (* skoMC1 (* skoMC1 (+ 2. (* skoMC1 6.))))))))
-----[end problem]-----

-----[begin problem]-----
% In Mathematica format:
Timing[Resolve[Exists[{skoSC1,skoMC1}, And[skoSC1*skoMC1*skoMC1*skoMC1*-2<=skoMC1*skoMC1*skoMC1*2,skoSC1*(skoMC1*skoMC1*skoMC1+skoSC1*skoMC1*skoMC1*skoMC1)>0,skoSC1*(skoMC1*skoMC1*skoMC1*-1+skoSC1*skoMC1*skoMC1*skoMC1*-1)<=0,skoSC1*skoMC1*skoMC1*skoMC1*-1<=skoMC1*skoMC1*skoMC1,skoSC1*skoMC1*skoMC1*skoMC1>skoMC1*skoMC1*skoMC1*-1,skoMC1*skoMC1*skoMC1*-2<=0,skoMC1*skoMC1*skoMC1*2>0,skoSC1<=(5/4),2<=skoMC1,0<=skoSC1,skoMC1>0,0<=skoMC1,skoSC1*skoMC1>skoMC1*-1,skoSC1*skoMC1*-1<=skoMC1,skoSC1*skoMC1*skoMC1*skoMC1*2>skoMC1*skoMC1*skoMC1*-2,skoSC1*skoMC1*skoMC1*skoMC1*-2<=skoMC1*skoMC1*skoMC1*2,skoSC1*(skoMC1*skoMC1*skoMC1*skoMC1*12+skoSC1*(skoMC1*skoMC1*skoMC1*(-1+skoMC1*6)+skoSC1*(skoMC1*skoMC1*skoMC1*-1+skoSC1*(skoMC1*skoMC1*skoMC1*(1/12)+skoSC1*skoMC1*skoMC1*skoMC1*(1/12)))))>skoMC1*skoMC1*skoMC1*(-2+skoMC1*-6),skoSC1*(skoMC1*skoMC1*skoMC1*skoMC1*-12+skoSC1*(skoMC1*skoMC1*skoMC1*(1+skoMC1*-6)+skoSC1*(skoMC1*skoMC1*skoMC1+skoSC1*(skoMC1*skoMC1*skoMC1*(-1/12)+skoSC1*skoMC1*skoMC1*skoMC1*(-1/12)))))<=skoMC1*skoMC1*skoMC1*(2+skoMC1*6)]], Reals]]

% In QepcadB format:
(E skoSC1) (E skoMC1) [[(skoSC1 skoMC1 skoMC1 skoMC1 (-2))<=(skoMC1 skoMC1 skoMC1 (2))]/\[[0<(skoSC1 ((skoMC1 skoMC1 skoMC1)+(skoSC1 skoMC1 skoMC1 skoMC1)))]/\[[(skoSC1 ((skoMC1 skoMC1 skoMC1 (-1))+(skoSC1 skoMC1 skoMC1 skoMC1 (-1))))<=0]/\[[(skoSC1 skoMC1 skoMC1 skoMC1 (-1))<=(skoMC1 skoMC1 skoMC1)]/\[[(skoMC1 skoMC1 skoMC1 (-1))<(skoSC1 skoMC1 skoMC1 skoMC1)]/\[[(skoMC1 skoMC1 skoMC1 (-2))<=0]/\[[0<(skoMC1 skoMC1 skoMC1 (2))]/\[[skoSC1<=5/4]/\[[2<=skoMC1]/\[[0<=skoSC1]/\[[0<skoMC1]/\[[0<=skoMC1]/\[[(skoMC1 (-1))<(skoSC1 skoMC1)]/\[[(skoSC1 skoMC1 (-1))<=skoMC1]/\[[(skoMC1 skoMC1 skoMC1 (-2))<(skoSC1 skoMC1 skoMC1 skoMC1 (2))]/\[[(skoSC1 skoMC1 skoMC1 skoMC1 (-2))<=(skoMC1 skoMC1 skoMC1 (2))]/\[[(skoMC1 skoMC1 skoMC1 (-2+(skoMC1 (-6))))<(skoSC1 ((skoMC1 skoMC1 skoMC1 skoMC1 (12))+(skoSC1 ((skoMC1 skoMC1 skoMC1 (-1+(skoMC1 (6))))+(skoSC1 ((skoMC1 skoMC1 skoMC1 (-1))+(skoSC1 ((skoMC1 skoMC1 skoMC1 (1/12))+(skoSC1 skoMC1 skoMC1 skoMC1 (1/12))))))))))]/\[(skoSC1 ((skoMC1 skoMC1 skoMC1 skoMC1 (-12))+(skoSC1 ((skoMC1 skoMC1 skoMC1 (1+(skoMC1 (-6))))+(skoSC1 ((skoMC1 skoMC1 skoMC1)+(skoSC1 ((skoMC1 skoMC1 skoMC1 (-1/12))+(skoSC1 skoMC1 skoMC1 skoMC1 (-1/12))))))))))<=(skoMC1 skoMC1 skoMC1 (2+(skoMC1 (6))))]]]]]]]]]]]]]]]]]].

% In SMTLib2 format:
(declare-fun skoSC1 () Real) (declare-fun skoMC1 () Real) (assert (and (<= (* skoSC1 (* skoMC1 (* skoMC1 (* skoMC1 (- 2.))))) (* skoMC1 (* skoMC1 (* skoMC1 2.)))) (and (> (* skoSC1 (+ (* skoMC1 (* skoMC1 skoMC1)) (* skoSC1 (* skoMC1 (* skoMC1 skoMC1))))) 0.) (and (<= (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (- 1.)))) (* skoSC1 (* skoMC1 (* skoMC1 (* skoMC1 (- 1.))))))) 0.) (and (<= (* skoSC1 (* skoMC1 (* skoMC1 (* skoMC1 (- 1.))))) (* skoMC1 (* skoMC1 skoMC1))) (and (> (* skoSC1 (* skoMC1 (* skoMC1 skoMC1))) (* skoMC1 (* skoMC1 (* skoMC1 (- 1.))))) (and (<= (* skoMC1 (* skoMC1 (* skoMC1 (- 2.)))) 0.) (and (> (* skoMC1 (* skoMC1 (* skoMC1 2.))) 0.) (and (<= skoSC1 (/ 5. 4.)) (and (<= 2. skoMC1) (and (<= 0. skoSC1) (and (> skoMC1 0.) (and (<= 0. skoMC1) (and (> (* skoSC1 skoMC1) (* skoMC1 (- 1.))) (and (<= (* skoSC1 (* skoMC1 (- 1.))) skoMC1) (and (> (* skoSC1 (* skoMC1 (* skoMC1 (* skoMC1 2.)))) (* skoMC1 (* skoMC1 (* skoMC1 (- 2.))))) (and (<= (* skoSC1 (* skoMC1 (* skoMC1 (* skoMC1 (- 2.))))) (* skoMC1 (* skoMC1 (* skoMC1 2.)))) (and (> (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (* skoMC1 12.)))) (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (+ (- 1.) (* skoMC1 6.))))) (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (- 1.)))) (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (/ 1. 12.)))) (* skoSC1 (* skoMC1 (* skoMC1 (* skoMC1 (/ 1. 12.))))))))))))) (* skoMC1 (* skoMC1 (* skoMC1 (+ (- 2.) (* skoMC1 (- 6.))))))) (<= (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (* skoMC1 (- 12.))))) (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (+ 1. (* skoMC1 (- 6.)))))) (* skoSC1 (+ (* skoMC1 (* skoMC1 skoMC1)) (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (/ (- 1.) 12.)))) (* skoSC1 (* skoMC1 (* skoMC1 (* skoMC1 (/ (- 1.) 12.))))))))))))) (* skoMC1 (* skoMC1 (* skoMC1 (+ 2. (* skoMC1 6.))))))))))))))))))))))))

% In GRF format:
(sequent " MetiTarski formula " (antecedent (<= (* skoSC1 (* skoMC1 (* skoMC1 (* skoMC1 (- 2.))))) (* skoMC1 (* skoMC1 (* skoMC1 2.)))) (> (* skoSC1 (+ (* skoMC1 (* skoMC1 skoMC1)) (* skoSC1 (* skoMC1 (* skoMC1 skoMC1))))) 0.) (<= (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (- 1.)))) (* skoSC1 (* skoMC1 (* skoMC1 (* skoMC1 (- 1.))))))) 0.) (<= (* skoSC1 (* skoMC1 (* skoMC1 (* skoMC1 (- 1.))))) (* skoMC1 (* skoMC1 skoMC1))) (> (* skoSC1 (* skoMC1 (* skoMC1 skoMC1))) (* skoMC1 (* skoMC1 (* skoMC1 (- 1.))))) (<= (* skoMC1 (* skoMC1 (* skoMC1 (- 2.)))) 0.) (> (* skoMC1 (* skoMC1 (* skoMC1 2.))) 0.) (<= skoSC1 (/ 5. 4.)) (<= 2. skoMC1) (<= 0. skoSC1) (> skoMC1 0.) (<= 0. skoMC1) (> (* skoSC1 skoMC1) (* skoMC1 (- 1.))) (<= (* skoSC1 (* skoMC1 (- 1.))) skoMC1) (> (* skoSC1 (* skoMC1 (* skoMC1 (* skoMC1 2.)))) (* skoMC1 (* skoMC1 (* skoMC1 (- 2.))))) (<= (* skoSC1 (* skoMC1 (* skoMC1 (* skoMC1 (- 2.))))) (* skoMC1 (* skoMC1 (* skoMC1 2.)))) (> (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (* skoMC1 12.)))) (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (+ (- 1.) (* skoMC1 6.))))) (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (- 1.)))) (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (/ 1. 12.)))) (* skoSC1 (* skoMC1 (* skoMC1 (* skoMC1 (/ 1. 12.))))))))))))) (* skoMC1 (* skoMC1 (* skoMC1 (+ (- 2.) (* skoMC1 (- 6.)))))))) (succedent (> (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (* skoMC1 (- 12.))))) (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (+ 1. (* skoMC1 (- 6.)))))) (* skoSC1 (+ (* skoMC1 (* skoMC1 skoMC1)) (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (/ (- 1.) 12.)))) (* skoSC1 (* skoMC1 (* skoMC1 (* skoMC1 (/ (- 1.) 12.))))))))))))) (* skoMC1 (* skoMC1 (* skoMC1 (+ 2. (* skoMC1 6.))))))))
-----[end problem]-----

-----[begin problem]-----
% In Mathematica format:
Timing[Resolve[Exists[{skoSC1,skoMC1}, And[skoSC1*(skoMC1*skoMC1*skoMC1*skoMC1*12+skoSC1*(skoMC1*skoMC1*skoMC1*(-1+skoMC1*6)+skoSC1*skoMC1*skoMC1*skoMC1*-1))<=skoMC1*skoMC1*skoMC1*(-2+skoMC1*-6),skoSC1*skoMC1*skoMC1*skoMC1*2>skoMC1*skoMC1*skoMC1*-2,skoSC1*(skoMC1*skoMC1*skoMC1+skoSC1*skoMC1*skoMC1*skoMC1)>0,skoSC1*(skoMC1*skoMC1*skoMC1*-1+skoSC1*skoMC1*skoMC1*skoMC1*-1)<=0,skoSC1*skoMC1*skoMC1*skoMC1*-1<=skoMC1*skoMC1*skoMC1,skoSC1*skoMC1*skoMC1*skoMC1>skoMC1*skoMC1*skoMC1*-1,skoMC1*skoMC1*skoMC1*-2<=0,skoMC1*skoMC1*skoMC1*2>0,skoSC1<=(5/4),2<=skoMC1,0<=skoSC1,skoMC1>0,0<=skoMC1,skoSC1*skoMC1>skoMC1*-1,skoSC1*skoMC1*-1<=skoMC1,skoSC1*skoMC1*skoMC1*skoMC1*2>skoMC1*skoMC1*skoMC1*-2,skoSC1*skoMC1*skoMC1*skoMC1*-2<=skoMC1*skoMC1*skoMC1*2,skoSC1*(skoMC1*skoMC1*skoMC1*skoMC1*12+skoSC1*(skoMC1*skoMC1*skoMC1*(-1+skoMC1*6)+skoSC1*(skoMC1*skoMC1*skoMC1*-1+skoSC1*(skoMC1*skoMC1*skoMC1*(1/12)+skoSC1*skoMC1*skoMC1*skoMC1*(1/12)))))>skoMC1*skoMC1*skoMC1*(-2+skoMC1*-6),skoSC1*(skoMC1*skoMC1*skoMC1*skoMC1*-12+skoSC1*(skoMC1*skoMC1*skoMC1*(1+skoMC1*-6)+skoSC1*(skoMC1*skoMC1*skoMC1+skoSC1*(skoMC1*skoMC1*skoMC1*(-1/12)+skoSC1*skoMC1*skoMC1*skoMC1*(-1/12)))))<=skoMC1*skoMC1*skoMC1*(2+skoMC1*6)]], Reals]]

% In QepcadB format:
(E skoSC1) (E skoMC1) [[(skoSC1 ((skoMC1 skoMC1 skoMC1 skoMC1 (12))+(skoSC1 ((skoMC1 skoMC1 skoMC1 (-1+(skoMC1 (6))))+(skoSC1 skoMC1 skoMC1 skoMC1 (-1))))))<=(skoMC1 skoMC1 skoMC1 (-2+(skoMC1 (-6))))]/\[[(skoMC1 skoMC1 skoMC1 (-2))<(skoSC1 skoMC1 skoMC1 skoMC1 (2))]/\[[0<(skoSC1 ((skoMC1 skoMC1 skoMC1)+(skoSC1 skoMC1 skoMC1 skoMC1)))]/\[[(skoSC1 ((skoMC1 skoMC1 skoMC1 (-1))+(skoSC1 skoMC1 skoMC1 skoMC1 (-1))))<=0]/\[[(skoSC1 skoMC1 skoMC1 skoMC1 (-1))<=(skoMC1 skoMC1 skoMC1)]/\[[(skoMC1 skoMC1 skoMC1 (-1))<(skoSC1 skoMC1 skoMC1 skoMC1)]/\[[(skoMC1 skoMC1 skoMC1 (-2))<=0]/\[[0<(skoMC1 skoMC1 skoMC1 (2))]/\[[skoSC1<=5/4]/\[[2<=skoMC1]/\[[0<=skoSC1]/\[[0<skoMC1]/\[[0<=skoMC1]/\[[(skoMC1 (-1))<(skoSC1 skoMC1)]/\[[(skoSC1 skoMC1 (-1))<=skoMC1]/\[[(skoMC1 skoMC1 skoMC1 (-2))<(skoSC1 skoMC1 skoMC1 skoMC1 (2))]/\[[(skoSC1 skoMC1 skoMC1 skoMC1 (-2))<=(skoMC1 skoMC1 skoMC1 (2))]/\[[(skoMC1 skoMC1 skoMC1 (-2+(skoMC1 (-6))))<(skoSC1 ((skoMC1 skoMC1 skoMC1 skoMC1 (12))+(skoSC1 ((skoMC1 skoMC1 skoMC1 (-1+(skoMC1 (6))))+(skoSC1 ((skoMC1 skoMC1 skoMC1 (-1))+(skoSC1 ((skoMC1 skoMC1 skoMC1 (1/12))+(skoSC1 skoMC1 skoMC1 skoMC1 (1/12))))))))))]/\[(skoSC1 ((skoMC1 skoMC1 skoMC1 skoMC1 (-12))+(skoSC1 ((skoMC1 skoMC1 skoMC1 (1+(skoMC1 (-6))))+(skoSC1 ((skoMC1 skoMC1 skoMC1)+(skoSC1 ((skoMC1 skoMC1 skoMC1 (-1/12))+(skoSC1 skoMC1 skoMC1 skoMC1 (-1/12))))))))))<=(skoMC1 skoMC1 skoMC1 (2+(skoMC1 (6))))]]]]]]]]]]]]]]]]]]].

% In SMTLib2 format:
(declare-fun skoSC1 () Real) (declare-fun skoMC1 () Real) (assert (and (<= (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (* skoMC1 12.)))) (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (+ (- 1.) (* skoMC1 6.))))) (* skoSC1 (* skoMC1 (* skoMC1 (* skoMC1 (- 1.))))))))) (* skoMC1 (* skoMC1 (* skoMC1 (+ (- 2.) (* skoMC1 (- 6.))))))) (and (> (* skoSC1 (* skoMC1 (* skoMC1 (* skoMC1 2.)))) (* skoMC1 (* skoMC1 (* skoMC1 (- 2.))))) (and (> (* skoSC1 (+ (* skoMC1 (* skoMC1 skoMC1)) (* skoSC1 (* skoMC1 (* skoMC1 skoMC1))))) 0.) (and (<= (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (- 1.)))) (* skoSC1 (* skoMC1 (* skoMC1 (* skoMC1 (- 1.))))))) 0.) (and (<= (* skoSC1 (* skoMC1 (* skoMC1 (* skoMC1 (- 1.))))) (* skoMC1 (* skoMC1 skoMC1))) (and (> (* skoSC1 (* skoMC1 (* skoMC1 skoMC1))) (* skoMC1 (* skoMC1 (* skoMC1 (- 1.))))) (and (<= (* skoMC1 (* skoMC1 (* skoMC1 (- 2.)))) 0.) (and (> (* skoMC1 (* skoMC1 (* skoMC1 2.))) 0.) (and (<= skoSC1 (/ 5. 4.)) (and (<= 2. skoMC1) (and (<= 0. skoSC1) (and (> skoMC1 0.) (and (<= 0. skoMC1) (and (> (* skoSC1 skoMC1) (* skoMC1 (- 1.))) (and (<= (* skoSC1 (* skoMC1 (- 1.))) skoMC1) (and (> (* skoSC1 (* skoMC1 (* skoMC1 (* skoMC1 2.)))) (* skoMC1 (* skoMC1 (* skoMC1 (- 2.))))) (and (<= (* skoSC1 (* skoMC1 (* skoMC1 (* skoMC1 (- 2.))))) (* skoMC1 (* skoMC1 (* skoMC1 2.)))) (and (> (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (* skoMC1 12.)))) (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (+ (- 1.) (* skoMC1 6.))))) (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (- 1.)))) (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (/ 1. 12.)))) (* skoSC1 (* skoMC1 (* skoMC1 (* skoMC1 (/ 1. 12.))))))))))))) (* skoMC1 (* skoMC1 (* skoMC1 (+ (- 2.) (* skoMC1 (- 6.))))))) (<= (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (* skoMC1 (- 12.))))) (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (+ 1. (* skoMC1 (- 6.)))))) (* skoSC1 (+ (* skoMC1 (* skoMC1 skoMC1)) (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (/ (- 1.) 12.)))) (* skoSC1 (* skoMC1 (* skoMC1 (* skoMC1 (/ (- 1.) 12.))))))))))))) (* skoMC1 (* skoMC1 (* skoMC1 (+ 2. (* skoMC1 6.)))))))))))))))))))))))))

% In GRF format:
(sequent " MetiTarski formula " (antecedent (<= (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (* skoMC1 12.)))) (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (+ (- 1.) (* skoMC1 6.))))) (* skoSC1 (* skoMC1 (* skoMC1 (* skoMC1 (- 1.))))))))) (* skoMC1 (* skoMC1 (* skoMC1 (+ (- 2.) (* skoMC1 (- 6.))))))) (> (* skoSC1 (* skoMC1 (* skoMC1 (* skoMC1 2.)))) (* skoMC1 (* skoMC1 (* skoMC1 (- 2.))))) (> (* skoSC1 (+ (* skoMC1 (* skoMC1 skoMC1)) (* skoSC1 (* skoMC1 (* skoMC1 skoMC1))))) 0.) (<= (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (- 1.)))) (* skoSC1 (* skoMC1 (* skoMC1 (* skoMC1 (- 1.))))))) 0.) (<= (* skoSC1 (* skoMC1 (* skoMC1 (* skoMC1 (- 1.))))) (* skoMC1 (* skoMC1 skoMC1))) (> (* skoSC1 (* skoMC1 (* skoMC1 skoMC1))) (* skoMC1 (* skoMC1 (* skoMC1 (- 1.))))) (<= (* skoMC1 (* skoMC1 (* skoMC1 (- 2.)))) 0.) (> (* skoMC1 (* skoMC1 (* skoMC1 2.))) 0.) (<= skoSC1 (/ 5. 4.)) (<= 2. skoMC1) (<= 0. skoSC1) (> skoMC1 0.) (<= 0. skoMC1) (> (* skoSC1 skoMC1) (* skoMC1 (- 1.))) (<= (* skoSC1 (* skoMC1 (- 1.))) skoMC1) (> (* skoSC1 (* skoMC1 (* skoMC1 (* skoMC1 2.)))) (* skoMC1 (* skoMC1 (* skoMC1 (- 2.))))) (<= (* skoSC1 (* skoMC1 (* skoMC1 (* skoMC1 (- 2.))))) (* skoMC1 (* skoMC1 (* skoMC1 2.)))) (> (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (* skoMC1 12.)))) (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (+ (- 1.) (* skoMC1 6.))))) (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (- 1.)))) (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (/ 1. 12.)))) (* skoSC1 (* skoMC1 (* skoMC1 (* skoMC1 (/ 1. 12.))))))))))))) (* skoMC1 (* skoMC1 (* skoMC1 (+ (- 2.) (* skoMC1 (- 6.)))))))) (succedent (> (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (* skoMC1 (- 12.))))) (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (+ 1. (* skoMC1 (- 6.)))))) (* skoSC1 (+ (* skoMC1 (* skoMC1 skoMC1)) (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (/ (- 1.) 12.)))) (* skoSC1 (* skoMC1 (* skoMC1 (* skoMC1 (/ (- 1.) 12.))))))))))))) (* skoMC1 (* skoMC1 (* skoMC1 (+ 2. (* skoMC1 6.))))))))
-----[end problem]-----

-----[begin problem]-----
% In Mathematica format:
Timing[Resolve[Exists[{skoSC1,skoMC1}, And[skoSC1*(skoMC1*skoMC1*skoMC1+skoSC1*skoMC1*skoMC1*skoMC1)>0,skoSC1*(skoMC1*skoMC1*skoMC1*skoMC1*-12+skoSC1*(skoMC1*skoMC1*skoMC1*(1+skoMC1*-6)+skoSC1*(skoMC1*skoMC1*skoMC1+skoSC1*(skoMC1*skoMC1*skoMC1*(-1/12)+skoSC1*skoMC1*skoMC1*skoMC1*(-1/12)))))<=skoMC1*skoMC1*skoMC1*(2+skoMC1*6),skoSC1*(skoMC1*skoMC1*skoMC1*skoMC1*12+skoSC1*(skoMC1*skoMC1*skoMC1*(-1+skoMC1*6)+skoSC1*(skoMC1*skoMC1*skoMC1*-1+skoSC1*(skoMC1*skoMC1*skoMC1*(1/12)+skoSC1*skoMC1*skoMC1*skoMC1*(1/12)))))>skoMC1*skoMC1*skoMC1*(-2+skoMC1*-6),skoSC1*skoMC1*skoMC1*skoMC1*-2<=skoMC1*skoMC1*skoMC1*2,skoSC1*skoMC1*skoMC1*skoMC1*2>skoMC1*skoMC1*skoMC1*-2,skoSC1*skoMC1*-1<=skoMC1,skoSC1*skoMC1>skoMC1*-1,0<=skoMC1,skoMC1>0,0<=skoSC1,2<=skoMC1,skoSC1<=(5/4),skoMC1*skoMC1*skoMC1*2>0,skoMC1*skoMC1*skoMC1*-2<=0,skoSC1*skoMC1*skoMC1*skoMC1>skoMC1*skoMC1*skoMC1*-1,skoSC1*skoMC1*skoMC1*skoMC1*-1<=skoMC1*skoMC1*skoMC1,skoSC1*(skoMC1*skoMC1*skoMC1*-1+skoSC1*skoMC1*skoMC1*skoMC1*-1)<=0]], Reals]]

% In QepcadB format:
(E skoSC1) (E skoMC1) [[0<(skoSC1 ((skoMC1 skoMC1 skoMC1)+(skoSC1 skoMC1 skoMC1 skoMC1)))]/\[[(skoSC1 ((skoMC1 skoMC1 skoMC1 skoMC1 (-12))+(skoSC1 ((skoMC1 skoMC1 skoMC1 (1+(skoMC1 (-6))))+(skoSC1 ((skoMC1 skoMC1 skoMC1)+(skoSC1 ((skoMC1 skoMC1 skoMC1 (-1/12))+(skoSC1 skoMC1 skoMC1 skoMC1 (-1/12))))))))))<=(skoMC1 skoMC1 skoMC1 (2+(skoMC1 (6))))]/\[[(skoMC1 skoMC1 skoMC1 (-2+(skoMC1 (-6))))<(skoSC1 ((skoMC1 skoMC1 skoMC1 skoMC1 (12))+(skoSC1 ((skoMC1 skoMC1 skoMC1 (-1+(skoMC1 (6))))+(skoSC1 ((skoMC1 skoMC1 skoMC1 (-1))+(skoSC1 ((skoMC1 skoMC1 skoMC1 (1/12))+(skoSC1 skoMC1 skoMC1 skoMC1 (1/12))))))))))]/\[[(skoSC1 skoMC1 skoMC1 skoMC1 (-2))<=(skoMC1 skoMC1 skoMC1 (2))]/\[[(skoMC1 skoMC1 skoMC1 (-2))<(skoSC1 skoMC1 skoMC1 skoMC1 (2))]/\[[(skoSC1 skoMC1 (-1))<=skoMC1]/\[[(skoMC1 (-1))<(skoSC1 skoMC1)]/\[[0<=skoMC1]/\[[0<skoMC1]/\[[0<=skoSC1]/\[[2<=skoMC1]/\[[skoSC1<=5/4]/\[[0<(skoMC1 skoMC1 skoMC1 (2))]/\[[(skoMC1 skoMC1 skoMC1 (-2))<=0]/\[[(skoMC1 skoMC1 skoMC1 (-1))<(skoSC1 skoMC1 skoMC1 skoMC1)]/\[[(skoSC1 skoMC1 skoMC1 skoMC1 (-1))<=(skoMC1 skoMC1 skoMC1)]/\[(skoSC1 ((skoMC1 skoMC1 skoMC1 (-1))+(skoSC1 skoMC1 skoMC1 skoMC1 (-1))))<=0]]]]]]]]]]]]]]]]].

% In SMTLib2 format:
(declare-fun skoSC1 () Real) (declare-fun skoMC1 () Real) (assert (and (> (* skoSC1 (+ (* skoMC1 (* skoMC1 skoMC1)) (* skoSC1 (* skoMC1 (* skoMC1 skoMC1))))) 0.) (and (<= (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (* skoMC1 (- 12.))))) (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (+ 1. (* skoMC1 (- 6.)))))) (* skoSC1 (+ (* skoMC1 (* skoMC1 skoMC1)) (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (/ (- 1.) 12.)))) (* skoSC1 (* skoMC1 (* skoMC1 (* skoMC1 (/ (- 1.) 12.))))))))))))) (* skoMC1 (* skoMC1 (* skoMC1 (+ 2. (* skoMC1 6.)))))) (and (> (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (* skoMC1 12.)))) (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (+ (- 1.) (* skoMC1 6.))))) (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (- 1.)))) (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (/ 1. 12.)))) (* skoSC1 (* skoMC1 (* skoMC1 (* skoMC1 (/ 1. 12.))))))))))))) (* skoMC1 (* skoMC1 (* skoMC1 (+ (- 2.) (* skoMC1 (- 6.))))))) (and (<= (* skoSC1 (* skoMC1 (* skoMC1 (* skoMC1 (- 2.))))) (* skoMC1 (* skoMC1 (* skoMC1 2.)))) (and (> (* skoSC1 (* skoMC1 (* skoMC1 (* skoMC1 2.)))) (* skoMC1 (* skoMC1 (* skoMC1 (- 2.))))) (and (<= (* skoSC1 (* skoMC1 (- 1.))) skoMC1) (and (> (* skoSC1 skoMC1) (* skoMC1 (- 1.))) (and (<= 0. skoMC1) (and (> skoMC1 0.) (and (<= 0. skoSC1) (and (<= 2. skoMC1) (and (<= skoSC1 (/ 5. 4.)) (and (> (* skoMC1 (* skoMC1 (* skoMC1 2.))) 0.) (and (<= (* skoMC1 (* skoMC1 (* skoMC1 (- 2.)))) 0.) (and (> (* skoSC1 (* skoMC1 (* skoMC1 skoMC1))) (* skoMC1 (* skoMC1 (* skoMC1 (- 1.))))) (and (<= (* skoSC1 (* skoMC1 (* skoMC1 (* skoMC1 (- 1.))))) (* skoMC1 (* skoMC1 skoMC1))) (<= (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (- 1.)))) (* skoSC1 (* skoMC1 (* skoMC1 (* skoMC1 (- 1.))))))) 0.))))))))))))))))))

% In GRF format:
(sequent " MetiTarski formula " (antecedent (> (* skoSC1 (+ (* skoMC1 (* skoMC1 skoMC1)) (* skoSC1 (* skoMC1 (* skoMC1 skoMC1))))) 0.) (<= (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (* skoMC1 (- 12.))))) (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (+ 1. (* skoMC1 (- 6.)))))) (* skoSC1 (+ (* skoMC1 (* skoMC1 skoMC1)) (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (/ (- 1.) 12.)))) (* skoSC1 (* skoMC1 (* skoMC1 (* skoMC1 (/ (- 1.) 12.))))))))))))) (* skoMC1 (* skoMC1 (* skoMC1 (+ 2. (* skoMC1 6.)))))) (> (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (* skoMC1 12.)))) (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (+ (- 1.) (* skoMC1 6.))))) (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (- 1.)))) (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (/ 1. 12.)))) (* skoSC1 (* skoMC1 (* skoMC1 (* skoMC1 (/ 1. 12.))))))))))))) (* skoMC1 (* skoMC1 (* skoMC1 (+ (- 2.) (* skoMC1 (- 6.))))))) (<= (* skoSC1 (* skoMC1 (* skoMC1 (* skoMC1 (- 2.))))) (* skoMC1 (* skoMC1 (* skoMC1 2.)))) (> (* skoSC1 (* skoMC1 (* skoMC1 (* skoMC1 2.)))) (* skoMC1 (* skoMC1 (* skoMC1 (- 2.))))) (<= (* skoSC1 (* skoMC1 (- 1.))) skoMC1) (> (* skoSC1 skoMC1) (* skoMC1 (- 1.))) (<= 0. skoMC1) (> skoMC1 0.) (<= 0. skoSC1) (<= 2. skoMC1) (<= skoSC1 (/ 5. 4.)) (> (* skoMC1 (* skoMC1 (* skoMC1 2.))) 0.) (<= (* skoMC1 (* skoMC1 (* skoMC1 (- 2.)))) 0.) (> (* skoSC1 (* skoMC1 (* skoMC1 skoMC1))) (* skoMC1 (* skoMC1 (* skoMC1 (- 1.))))) (<= (* skoSC1 (* skoMC1 (* skoMC1 (* skoMC1 (- 1.))))) (* skoMC1 (* skoMC1 skoMC1)))) (succedent (> (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (- 1.)))) (* skoSC1 (* skoMC1 (* skoMC1 (* skoMC1 (- 1.))))))) 0.)))
-----[end problem]-----

-----[begin problem]-----
% In Mathematica format:
Timing[Resolve[Exists[{skoSC1,skoMC1}, And[skoSC1*skoMC1*skoMC1*skoMC1*-2<=skoMC1*skoMC1*skoMC1*2,skoSC1*(skoMC1*skoMC1*skoMC1*skoMC1*-12+skoSC1*(skoMC1*skoMC1*skoMC1*(1+skoMC1*-6)+skoSC1*(skoMC1*skoMC1*skoMC1+skoSC1*(skoMC1*skoMC1*skoMC1*(-1/12)+skoSC1*skoMC1*skoMC1*skoMC1*(-1/12)))))<=skoMC1*skoMC1*skoMC1*(2+skoMC1*6),skoSC1*(skoMC1*skoMC1*skoMC1*skoMC1*12+skoSC1*(skoMC1*skoMC1*skoMC1*(-1+skoMC1*6)+skoSC1*(skoMC1*skoMC1*skoMC1*-1+skoSC1*(skoMC1*skoMC1*skoMC1*(1/12)+skoSC1*skoMC1*skoMC1*skoMC1*(1/12)))))>skoMC1*skoMC1*skoMC1*(-2+skoMC1*-6),skoSC1*skoMC1*skoMC1*skoMC1*-2<=skoMC1*skoMC1*skoMC1*2,skoSC1*skoMC1*skoMC1*skoMC1*2>skoMC1*skoMC1*skoMC1*-2,skoSC1*skoMC1*-1<=skoMC1,skoSC1*skoMC1>skoMC1*-1,0<=skoMC1,skoMC1>0,0<=skoSC1,2<=skoMC1,skoSC1<=(5/4),skoMC1*skoMC1*skoMC1*2>0,skoMC1*skoMC1*skoMC1*-2<=0,skoSC1*skoMC1*skoMC1*skoMC1>skoMC1*skoMC1*skoMC1*-1,skoSC1*skoMC1*skoMC1*skoMC1*-1<=skoMC1*skoMC1*skoMC1,skoSC1*(skoMC1*skoMC1*skoMC1*-1+skoSC1*skoMC1*skoMC1*skoMC1*-1)<=0]], Reals]]

% In QepcadB format:
(E skoSC1) (E skoMC1) [[(skoSC1 skoMC1 skoMC1 skoMC1 (-2))<=(skoMC1 skoMC1 skoMC1 (2))]/\[[(skoSC1 ((skoMC1 skoMC1 skoMC1 skoMC1 (-12))+(skoSC1 ((skoMC1 skoMC1 skoMC1 (1+(skoMC1 (-6))))+(skoSC1 ((skoMC1 skoMC1 skoMC1)+(skoSC1 ((skoMC1 skoMC1 skoMC1 (-1/12))+(skoSC1 skoMC1 skoMC1 skoMC1 (-1/12))))))))))<=(skoMC1 skoMC1 skoMC1 (2+(skoMC1 (6))))]/\[[(skoMC1 skoMC1 skoMC1 (-2+(skoMC1 (-6))))<(skoSC1 ((skoMC1 skoMC1 skoMC1 skoMC1 (12))+(skoSC1 ((skoMC1 skoMC1 skoMC1 (-1+(skoMC1 (6))))+(skoSC1 ((skoMC1 skoMC1 skoMC1 (-1))+(skoSC1 ((skoMC1 skoMC1 skoMC1 (1/12))+(skoSC1 skoMC1 skoMC1 skoMC1 (1/12))))))))))]/\[[(skoSC1 skoMC1 skoMC1 skoMC1 (-2))<=(skoMC1 skoMC1 skoMC1 (2))]/\[[(skoMC1 skoMC1 skoMC1 (-2))<(skoSC1 skoMC1 skoMC1 skoMC1 (2))]/\[[(skoSC1 skoMC1 (-1))<=skoMC1]/\[[(skoMC1 (-1))<(skoSC1 skoMC1)]/\[[0<=skoMC1]/\[[0<skoMC1]/\[[0<=skoSC1]/\[[2<=skoMC1]/\[[skoSC1<=5/4]/\[[0<(skoMC1 skoMC1 skoMC1 (2))]/\[[(skoMC1 skoMC1 skoMC1 (-2))<=0]/\[[(skoMC1 skoMC1 skoMC1 (-1))<(skoSC1 skoMC1 skoMC1 skoMC1)]/\[[(skoSC1 skoMC1 skoMC1 skoMC1 (-1))<=(skoMC1 skoMC1 skoMC1)]/\[(skoSC1 ((skoMC1 skoMC1 skoMC1 (-1))+(skoSC1 skoMC1 skoMC1 skoMC1 (-1))))<=0]]]]]]]]]]]]]]]]].

% In SMTLib2 format:
(declare-fun skoSC1 () Real) (declare-fun skoMC1 () Real) (assert (and (<= (* skoSC1 (* skoMC1 (* skoMC1 (* skoMC1 (- 2.))))) (* skoMC1 (* skoMC1 (* skoMC1 2.)))) (and (<= (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (* skoMC1 (- 12.))))) (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (+ 1. (* skoMC1 (- 6.)))))) (* skoSC1 (+ (* skoMC1 (* skoMC1 skoMC1)) (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (/ (- 1.) 12.)))) (* skoSC1 (* skoMC1 (* skoMC1 (* skoMC1 (/ (- 1.) 12.))))))))))))) (* skoMC1 (* skoMC1 (* skoMC1 (+ 2. (* skoMC1 6.)))))) (and (> (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (* skoMC1 12.)))) (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (+ (- 1.) (* skoMC1 6.))))) (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (- 1.)))) (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (/ 1. 12.)))) (* skoSC1 (* skoMC1 (* skoMC1 (* skoMC1 (/ 1. 12.))))))))))))) (* skoMC1 (* skoMC1 (* skoMC1 (+ (- 2.) (* skoMC1 (- 6.))))))) (and (<= (* skoSC1 (* skoMC1 (* skoMC1 (* skoMC1 (- 2.))))) (* skoMC1 (* skoMC1 (* skoMC1 2.)))) (and (> (* skoSC1 (* skoMC1 (* skoMC1 (* skoMC1 2.)))) (* skoMC1 (* skoMC1 (* skoMC1 (- 2.))))) (and (<= (* skoSC1 (* skoMC1 (- 1.))) skoMC1) (and (> (* skoSC1 skoMC1) (* skoMC1 (- 1.))) (and (<= 0. skoMC1) (and (> skoMC1 0.) (and (<= 0. skoSC1) (and (<= 2. skoMC1) (and (<= skoSC1 (/ 5. 4.)) (and (> (* skoMC1 (* skoMC1 (* skoMC1 2.))) 0.) (and (<= (* skoMC1 (* skoMC1 (* skoMC1 (- 2.)))) 0.) (and (> (* skoSC1 (* skoMC1 (* skoMC1 skoMC1))) (* skoMC1 (* skoMC1 (* skoMC1 (- 1.))))) (and (<= (* skoSC1 (* skoMC1 (* skoMC1 (* skoMC1 (- 1.))))) (* skoMC1 (* skoMC1 skoMC1))) (<= (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (- 1.)))) (* skoSC1 (* skoMC1 (* skoMC1 (* skoMC1 (- 1.))))))) 0.))))))))))))))))))

% In GRF format:
(sequent " MetiTarski formula " (antecedent (<= (* skoSC1 (* skoMC1 (* skoMC1 (* skoMC1 (- 2.))))) (* skoMC1 (* skoMC1 (* skoMC1 2.)))) (<= (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (* skoMC1 (- 12.))))) (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (+ 1. (* skoMC1 (- 6.)))))) (* skoSC1 (+ (* skoMC1 (* skoMC1 skoMC1)) (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (/ (- 1.) 12.)))) (* skoSC1 (* skoMC1 (* skoMC1 (* skoMC1 (/ (- 1.) 12.))))))))))))) (* skoMC1 (* skoMC1 (* skoMC1 (+ 2. (* skoMC1 6.)))))) (> (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (* skoMC1 12.)))) (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (+ (- 1.) (* skoMC1 6.))))) (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (- 1.)))) (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (/ 1. 12.)))) (* skoSC1 (* skoMC1 (* skoMC1 (* skoMC1 (/ 1. 12.))))))))))))) (* skoMC1 (* skoMC1 (* skoMC1 (+ (- 2.) (* skoMC1 (- 6.))))))) (<= (* skoSC1 (* skoMC1 (* skoMC1 (* skoMC1 (- 2.))))) (* skoMC1 (* skoMC1 (* skoMC1 2.)))) (> (* skoSC1 (* skoMC1 (* skoMC1 (* skoMC1 2.)))) (* skoMC1 (* skoMC1 (* skoMC1 (- 2.))))) (<= (* skoSC1 (* skoMC1 (- 1.))) skoMC1) (> (* skoSC1 skoMC1) (* skoMC1 (- 1.))) (<= 0. skoMC1) (> skoMC1 0.) (<= 0. skoSC1) (<= 2. skoMC1) (<= skoSC1 (/ 5. 4.)) (> (* skoMC1 (* skoMC1 (* skoMC1 2.))) 0.) (<= (* skoMC1 (* skoMC1 (* skoMC1 (- 2.)))) 0.) (> (* skoSC1 (* skoMC1 (* skoMC1 skoMC1))) (* skoMC1 (* skoMC1 (* skoMC1 (- 1.))))) (<= (* skoSC1 (* skoMC1 (* skoMC1 (* skoMC1 (- 1.))))) (* skoMC1 (* skoMC1 skoMC1)))) (succedent (> (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (- 1.)))) (* skoSC1 (* skoMC1 (* skoMC1 (* skoMC1 (- 1.))))))) 0.)))
-----[end problem]-----

-----[begin problem]-----
% In Mathematica format:
Timing[Resolve[Exists[{skoSC1,skoMC1}, And[skoSC1*skoMC1*skoMC1*skoMC1*2>skoMC1*skoMC1*skoMC1*-2,skoSC1*(skoMC1*skoMC1*skoMC1*skoMC1*12+skoSC1*(skoMC1*skoMC1*skoMC1*(-1+skoMC1*6)+skoSC1*(skoMC1*skoMC1*skoMC1*-1+skoSC1*(skoMC1*skoMC1*skoMC1*(1/12)+skoSC1*skoMC1*skoMC1*skoMC1*(1/12)))))>skoMC1*skoMC1*skoMC1*(-2+skoMC1*-6),skoSC1*(skoMC1*skoMC1*skoMC1*skoMC1*-12+skoSC1*(skoMC1*skoMC1*skoMC1*(1+skoMC1*-6)+skoSC1*(skoMC1*skoMC1*skoMC1+skoSC1*(skoMC1*skoMC1*skoMC1*(-1/12)+skoSC1*skoMC1*skoMC1*skoMC1*(-1/12)))))<=skoMC1*skoMC1*skoMC1*(2+skoMC1*6),skoSC1*(skoMC1*skoMC1*skoMC1*skoMC1*12+skoSC1*(skoMC1*skoMC1*skoMC1*(-1+skoMC1*6)+skoSC1*(skoMC1*skoMC1*skoMC1*-1+skoSC1*(skoMC1*skoMC1*skoMC1*(1/12)+skoSC1*skoMC1*skoMC1*skoMC1*(1/12)))))>skoMC1*skoMC1*skoMC1*(-2+skoMC1*-6),skoSC1*skoMC1*skoMC1*skoMC1*-2<=skoMC1*skoMC1*skoMC1*2,skoSC1*skoMC1*skoMC1*skoMC1*2>skoMC1*skoMC1*skoMC1*-2,skoSC1*skoMC1*-1<=skoMC1,skoSC1*skoMC1>skoMC1*-1,0<=skoMC1,skoMC1>0,0<=skoSC1,2<=skoMC1,skoSC1<=(5/4),skoMC1*skoMC1*skoMC1*2>0,skoMC1*skoMC1*skoMC1*-2<=0,skoSC1*skoMC1*skoMC1*skoMC1>skoMC1*skoMC1*skoMC1*-1,skoSC1*skoMC1*skoMC1*skoMC1*-1<=skoMC1*skoMC1*skoMC1,skoSC1*(skoMC1*skoMC1*skoMC1*-1+skoSC1*skoMC1*skoMC1*skoMC1*-1)<=0]], Reals]]

% In QepcadB format:
(E skoSC1) (E skoMC1) [[(skoMC1 skoMC1 skoMC1 (-2))<(skoSC1 skoMC1 skoMC1 skoMC1 (2))]/\[[(skoMC1 skoMC1 skoMC1 (-2+(skoMC1 (-6))))<(skoSC1 ((skoMC1 skoMC1 skoMC1 skoMC1 (12))+(skoSC1 ((skoMC1 skoMC1 skoMC1 (-1+(skoMC1 (6))))+(skoSC1 ((skoMC1 skoMC1 skoMC1 (-1))+(skoSC1 ((skoMC1 skoMC1 skoMC1 (1/12))+(skoSC1 skoMC1 skoMC1 skoMC1 (1/12))))))))))]/\[[(skoSC1 ((skoMC1 skoMC1 skoMC1 skoMC1 (-12))+(skoSC1 ((skoMC1 skoMC1 skoMC1 (1+(skoMC1 (-6))))+(skoSC1 ((skoMC1 skoMC1 skoMC1)+(skoSC1 ((skoMC1 skoMC1 skoMC1 (-1/12))+(skoSC1 skoMC1 skoMC1 skoMC1 (-1/12))))))))))<=(skoMC1 skoMC1 skoMC1 (2+(skoMC1 (6))))]/\[[(skoMC1 skoMC1 skoMC1 (-2+(skoMC1 (-6))))<(skoSC1 ((skoMC1 skoMC1 skoMC1 skoMC1 (12))+(skoSC1 ((skoMC1 skoMC1 skoMC1 (-1+(skoMC1 (6))))+(skoSC1 ((skoMC1 skoMC1 skoMC1 (-1))+(skoSC1 ((skoMC1 skoMC1 skoMC1 (1/12))+(skoSC1 skoMC1 skoMC1 skoMC1 (1/12))))))))))]/\[[(skoSC1 skoMC1 skoMC1 skoMC1 (-2))<=(skoMC1 skoMC1 skoMC1 (2))]/\[[(skoMC1 skoMC1 skoMC1 (-2))<(skoSC1 skoMC1 skoMC1 skoMC1 (2))]/\[[(skoSC1 skoMC1 (-1))<=skoMC1]/\[[(skoMC1 (-1))<(skoSC1 skoMC1)]/\[[0<=skoMC1]/\[[0<skoMC1]/\[[0<=skoSC1]/\[[2<=skoMC1]/\[[skoSC1<=5/4]/\[[0<(skoMC1 skoMC1 skoMC1 (2))]/\[[(skoMC1 skoMC1 skoMC1 (-2))<=0]/\[[(skoMC1 skoMC1 skoMC1 (-1))<(skoSC1 skoMC1 skoMC1 skoMC1)]/\[[(skoSC1 skoMC1 skoMC1 skoMC1 (-1))<=(skoMC1 skoMC1 skoMC1)]/\[(skoSC1 ((skoMC1 skoMC1 skoMC1 (-1))+(skoSC1 skoMC1 skoMC1 skoMC1 (-1))))<=0]]]]]]]]]]]]]]]]]].

% In SMTLib2 format:
(declare-fun skoSC1 () Real) (declare-fun skoMC1 () Real) (assert (and (> (* skoSC1 (* skoMC1 (* skoMC1 (* skoMC1 2.)))) (* skoMC1 (* skoMC1 (* skoMC1 (- 2.))))) (and (> (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (* skoMC1 12.)))) (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (+ (- 1.) (* skoMC1 6.))))) (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (- 1.)))) (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (/ 1. 12.)))) (* skoSC1 (* skoMC1 (* skoMC1 (* skoMC1 (/ 1. 12.))))))))))))) (* skoMC1 (* skoMC1 (* skoMC1 (+ (- 2.) (* skoMC1 (- 6.))))))) (and (<= (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (* skoMC1 (- 12.))))) (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (+ 1. (* skoMC1 (- 6.)))))) (* skoSC1 (+ (* skoMC1 (* skoMC1 skoMC1)) (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (/ (- 1.) 12.)))) (* skoSC1 (* skoMC1 (* skoMC1 (* skoMC1 (/ (- 1.) 12.))))))))))))) (* skoMC1 (* skoMC1 (* skoMC1 (+ 2. (* skoMC1 6.)))))) (and (> (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (* skoMC1 12.)))) (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (+ (- 1.) (* skoMC1 6.))))) (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (- 1.)))) (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (/ 1. 12.)))) (* skoSC1 (* skoMC1 (* skoMC1 (* skoMC1 (/ 1. 12.))))))))))))) (* skoMC1 (* skoMC1 (* skoMC1 (+ (- 2.) (* skoMC1 (- 6.))))))) (and (<= (* skoSC1 (* skoMC1 (* skoMC1 (* skoMC1 (- 2.))))) (* skoMC1 (* skoMC1 (* skoMC1 2.)))) (and (> (* skoSC1 (* skoMC1 (* skoMC1 (* skoMC1 2.)))) (* skoMC1 (* skoMC1 (* skoMC1 (- 2.))))) (and (<= (* skoSC1 (* skoMC1 (- 1.))) skoMC1) (and (> (* skoSC1 skoMC1) (* skoMC1 (- 1.))) (and (<= 0. skoMC1) (and (> skoMC1 0.) (and (<= 0. skoSC1) (and (<= 2. skoMC1) (and (<= skoSC1 (/ 5. 4.)) (and (> (* skoMC1 (* skoMC1 (* skoMC1 2.))) 0.) (and (<= (* skoMC1 (* skoMC1 (* skoMC1 (- 2.)))) 0.) (and (> (* skoSC1 (* skoMC1 (* skoMC1 skoMC1))) (* skoMC1 (* skoMC1 (* skoMC1 (- 1.))))) (and (<= (* skoSC1 (* skoMC1 (* skoMC1 (* skoMC1 (- 1.))))) (* skoMC1 (* skoMC1 skoMC1))) (<= (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (- 1.)))) (* skoSC1 (* skoMC1 (* skoMC1 (* skoMC1 (- 1.))))))) 0.)))))))))))))))))))

% In GRF format:
(sequent " MetiTarski formula " (antecedent (> (* skoSC1 (* skoMC1 (* skoMC1 (* skoMC1 2.)))) (* skoMC1 (* skoMC1 (* skoMC1 (- 2.))))) (> (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (* skoMC1 12.)))) (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (+ (- 1.) (* skoMC1 6.))))) (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (- 1.)))) (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (/ 1. 12.)))) (* skoSC1 (* skoMC1 (* skoMC1 (* skoMC1 (/ 1. 12.))))))))))))) (* skoMC1 (* skoMC1 (* skoMC1 (+ (- 2.) (* skoMC1 (- 6.))))))) (<= (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (* skoMC1 (- 12.))))) (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (+ 1. (* skoMC1 (- 6.)))))) (* skoSC1 (+ (* skoMC1 (* skoMC1 skoMC1)) (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (/ (- 1.) 12.)))) (* skoSC1 (* skoMC1 (* skoMC1 (* skoMC1 (/ (- 1.) 12.))))))))))))) (* skoMC1 (* skoMC1 (* skoMC1 (+ 2. (* skoMC1 6.)))))) (> (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (* skoMC1 12.)))) (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (+ (- 1.) (* skoMC1 6.))))) (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (- 1.)))) (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (/ 1. 12.)))) (* skoSC1 (* skoMC1 (* skoMC1 (* skoMC1 (/ 1. 12.))))))))))))) (* skoMC1 (* skoMC1 (* skoMC1 (+ (- 2.) (* skoMC1 (- 6.))))))) (<= (* skoSC1 (* skoMC1 (* skoMC1 (* skoMC1 (- 2.))))) (* skoMC1 (* skoMC1 (* skoMC1 2.)))) (> (* skoSC1 (* skoMC1 (* skoMC1 (* skoMC1 2.)))) (* skoMC1 (* skoMC1 (* skoMC1 (- 2.))))) (<= (* skoSC1 (* skoMC1 (- 1.))) skoMC1) (> (* skoSC1 skoMC1) (* skoMC1 (- 1.))) (<= 0. skoMC1) (> skoMC1 0.) (<= 0. skoSC1) (<= 2. skoMC1) (<= skoSC1 (/ 5. 4.)) (> (* skoMC1 (* skoMC1 (* skoMC1 2.))) 0.) (<= (* skoMC1 (* skoMC1 (* skoMC1 (- 2.)))) 0.) (> (* skoSC1 (* skoMC1 (* skoMC1 skoMC1))) (* skoMC1 (* skoMC1 (* skoMC1 (- 1.))))) (<= (* skoSC1 (* skoMC1 (* skoMC1 (* skoMC1 (- 1.))))) (* skoMC1 (* skoMC1 skoMC1)))) (succedent (> (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (- 1.)))) (* skoSC1 (* skoMC1 (* skoMC1 (* skoMC1 (- 1.))))))) 0.)))
-----[end problem]-----

-----[begin problem]-----
% In Mathematica format:
Timing[Resolve[Exists[{skoSC1,skoMC1}, And[skoSC1*skoMC1*skoMC1*skoMC1*2<=skoMC1*skoMC1*skoMC1*-2,skoSC1*(skoMC1*skoMC1*skoMC1*skoMC1*12+skoSC1*(skoMC1*skoMC1*skoMC1*(-1+skoMC1*6)+skoSC1*(skoMC1*skoMC1*skoMC1*-1+skoSC1*(skoMC1*skoMC1*skoMC1*(1/12)+skoSC1*skoMC1*skoMC1*skoMC1*(1/12)))))<=skoMC1*skoMC1*skoMC1*(-2+skoMC1*-6),skoSC1*(skoMC1*skoMC1*skoMC1*skoMC1*-12+skoSC1*(skoMC1*skoMC1*skoMC1*(1+skoMC1*-6)+skoSC1*(skoMC1*skoMC1*skoMC1+skoSC1*(skoMC1*skoMC1*skoMC1*(-1/12)+skoSC1*skoMC1*skoMC1*skoMC1*(-1/12)))))<=skoMC1*skoMC1*skoMC1*(2+skoMC1*6),skoSC1*(skoMC1*skoMC1*skoMC1*skoMC1*12+skoSC1*(skoMC1*skoMC1*skoMC1*(-1+skoMC1*6)+skoSC1*(skoMC1*skoMC1*skoMC1*-1+skoSC1*(skoMC1*skoMC1*skoMC1*(1/12)+skoSC1*skoMC1*skoMC1*skoMC1*(1/12)))))>skoMC1*skoMC1*skoMC1*(-2+skoMC1*-6),skoSC1*skoMC1*skoMC1*skoMC1*-2<=skoMC1*skoMC1*skoMC1*2,skoSC1*skoMC1*skoMC1*skoMC1*2>skoMC1*skoMC1*skoMC1*-2,skoSC1*skoMC1*-1<=skoMC1,skoSC1*skoMC1>skoMC1*-1,0<=skoMC1,skoMC1>0,0<=skoSC1,2<=skoMC1,skoSC1<=(5/4),skoMC1*skoMC1*skoMC1*2>0,skoMC1*skoMC1*skoMC1*-2<=0,skoSC1*skoMC1*skoMC1*skoMC1>skoMC1*skoMC1*skoMC1*-1,skoSC1*skoMC1*skoMC1*skoMC1*-1<=skoMC1*skoMC1*skoMC1,skoSC1*(skoMC1*skoMC1*skoMC1*-1+skoSC1*skoMC1*skoMC1*skoMC1*-1)<=0]], Reals]]

% In QepcadB format:
(E skoSC1) (E skoMC1) [[(skoSC1 skoMC1 skoMC1 skoMC1 (2))<=(skoMC1 skoMC1 skoMC1 (-2))]/\[[(skoSC1 ((skoMC1 skoMC1 skoMC1 skoMC1 (12))+(skoSC1 ((skoMC1 skoMC1 skoMC1 (-1+(skoMC1 (6))))+(skoSC1 ((skoMC1 skoMC1 skoMC1 (-1))+(skoSC1 ((skoMC1 skoMC1 skoMC1 (1/12))+(skoSC1 skoMC1 skoMC1 skoMC1 (1/12))))))))))<=(skoMC1 skoMC1 skoMC1 (-2+(skoMC1 (-6))))]/\[[(skoSC1 ((skoMC1 skoMC1 skoMC1 skoMC1 (-12))+(skoSC1 ((skoMC1 skoMC1 skoMC1 (1+(skoMC1 (-6))))+(skoSC1 ((skoMC1 skoMC1 skoMC1)+(skoSC1 ((skoMC1 skoMC1 skoMC1 (-1/12))+(skoSC1 skoMC1 skoMC1 skoMC1 (-1/12))))))))))<=(skoMC1 skoMC1 skoMC1 (2+(skoMC1 (6))))]/\[[(skoMC1 skoMC1 skoMC1 (-2+(skoMC1 (-6))))<(skoSC1 ((skoMC1 skoMC1 skoMC1 skoMC1 (12))+(skoSC1 ((skoMC1 skoMC1 skoMC1 (-1+(skoMC1 (6))))+(skoSC1 ((skoMC1 skoMC1 skoMC1 (-1))+(skoSC1 ((skoMC1 skoMC1 skoMC1 (1/12))+(skoSC1 skoMC1 skoMC1 skoMC1 (1/12))))))))))]/\[[(skoSC1 skoMC1 skoMC1 skoMC1 (-2))<=(skoMC1 skoMC1 skoMC1 (2))]/\[[(skoMC1 skoMC1 skoMC1 (-2))<(skoSC1 skoMC1 skoMC1 skoMC1 (2))]/\[[(skoSC1 skoMC1 (-1))<=skoMC1]/\[[(skoMC1 (-1))<(skoSC1 skoMC1)]/\[[0<=skoMC1]/\[[0<skoMC1]/\[[0<=skoSC1]/\[[2<=skoMC1]/\[[skoSC1<=5/4]/\[[0<(skoMC1 skoMC1 skoMC1 (2))]/\[[(skoMC1 skoMC1 skoMC1 (-2))<=0]/\[[(skoMC1 skoMC1 skoMC1 (-1))<(skoSC1 skoMC1 skoMC1 skoMC1)]/\[[(skoSC1 skoMC1 skoMC1 skoMC1 (-1))<=(skoMC1 skoMC1 skoMC1)]/\[(skoSC1 ((skoMC1 skoMC1 skoMC1 (-1))+(skoSC1 skoMC1 skoMC1 skoMC1 (-1))))<=0]]]]]]]]]]]]]]]]]].

% In SMTLib2 format:
(declare-fun skoSC1 () Real) (declare-fun skoMC1 () Real) (assert (and (<= (* skoSC1 (* skoMC1 (* skoMC1 (* skoMC1 2.)))) (* skoMC1 (* skoMC1 (* skoMC1 (- 2.))))) (and (<= (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (* skoMC1 12.)))) (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (+ (- 1.) (* skoMC1 6.))))) (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (- 1.)))) (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (/ 1. 12.)))) (* skoSC1 (* skoMC1 (* skoMC1 (* skoMC1 (/ 1. 12.))))))))))))) (* skoMC1 (* skoMC1 (* skoMC1 (+ (- 2.) (* skoMC1 (- 6.))))))) (and (<= (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (* skoMC1 (- 12.))))) (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (+ 1. (* skoMC1 (- 6.)))))) (* skoSC1 (+ (* skoMC1 (* skoMC1 skoMC1)) (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (/ (- 1.) 12.)))) (* skoSC1 (* skoMC1 (* skoMC1 (* skoMC1 (/ (- 1.) 12.))))))))))))) (* skoMC1 (* skoMC1 (* skoMC1 (+ 2. (* skoMC1 6.)))))) (and (> (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (* skoMC1 12.)))) (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (+ (- 1.) (* skoMC1 6.))))) (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (- 1.)))) (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (/ 1. 12.)))) (* skoSC1 (* skoMC1 (* skoMC1 (* skoMC1 (/ 1. 12.))))))))))))) (* skoMC1 (* skoMC1 (* skoMC1 (+ (- 2.) (* skoMC1 (- 6.))))))) (and (<= (* skoSC1 (* skoMC1 (* skoMC1 (* skoMC1 (- 2.))))) (* skoMC1 (* skoMC1 (* skoMC1 2.)))) (and (> (* skoSC1 (* skoMC1 (* skoMC1 (* skoMC1 2.)))) (* skoMC1 (* skoMC1 (* skoMC1 (- 2.))))) (and (<= (* skoSC1 (* skoMC1 (- 1.))) skoMC1) (and (> (* skoSC1 skoMC1) (* skoMC1 (- 1.))) (and (<= 0. skoMC1) (and (> skoMC1 0.) (and (<= 0. skoSC1) (and (<= 2. skoMC1) (and (<= skoSC1 (/ 5. 4.)) (and (> (* skoMC1 (* skoMC1 (* skoMC1 2.))) 0.) (and (<= (* skoMC1 (* skoMC1 (* skoMC1 (- 2.)))) 0.) (and (> (* skoSC1 (* skoMC1 (* skoMC1 skoMC1))) (* skoMC1 (* skoMC1 (* skoMC1 (- 1.))))) (and (<= (* skoSC1 (* skoMC1 (* skoMC1 (* skoMC1 (- 1.))))) (* skoMC1 (* skoMC1 skoMC1))) (<= (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (- 1.)))) (* skoSC1 (* skoMC1 (* skoMC1 (* skoMC1 (- 1.))))))) 0.)))))))))))))))))))

% In GRF format:
(sequent " MetiTarski formula " (antecedent (<= (* skoSC1 (* skoMC1 (* skoMC1 (* skoMC1 2.)))) (* skoMC1 (* skoMC1 (* skoMC1 (- 2.))))) (<= (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (* skoMC1 12.)))) (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (+ (- 1.) (* skoMC1 6.))))) (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (- 1.)))) (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (/ 1. 12.)))) (* skoSC1 (* skoMC1 (* skoMC1 (* skoMC1 (/ 1. 12.))))))))))))) (* skoMC1 (* skoMC1 (* skoMC1 (+ (- 2.) (* skoMC1 (- 6.))))))) (<= (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (* skoMC1 (- 12.))))) (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (+ 1. (* skoMC1 (- 6.)))))) (* skoSC1 (+ (* skoMC1 (* skoMC1 skoMC1)) (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (/ (- 1.) 12.)))) (* skoSC1 (* skoMC1 (* skoMC1 (* skoMC1 (/ (- 1.) 12.))))))))))))) (* skoMC1 (* skoMC1 (* skoMC1 (+ 2. (* skoMC1 6.)))))) (> (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (* skoMC1 12.)))) (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (+ (- 1.) (* skoMC1 6.))))) (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (- 1.)))) (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (/ 1. 12.)))) (* skoSC1 (* skoMC1 (* skoMC1 (* skoMC1 (/ 1. 12.))))))))))))) (* skoMC1 (* skoMC1 (* skoMC1 (+ (- 2.) (* skoMC1 (- 6.))))))) (<= (* skoSC1 (* skoMC1 (* skoMC1 (* skoMC1 (- 2.))))) (* skoMC1 (* skoMC1 (* skoMC1 2.)))) (> (* skoSC1 (* skoMC1 (* skoMC1 (* skoMC1 2.)))) (* skoMC1 (* skoMC1 (* skoMC1 (- 2.))))) (<= (* skoSC1 (* skoMC1 (- 1.))) skoMC1) (> (* skoSC1 skoMC1) (* skoMC1 (- 1.))) (<= 0. skoMC1) (> skoMC1 0.) (<= 0. skoSC1) (<= 2. skoMC1) (<= skoSC1 (/ 5. 4.)) (> (* skoMC1 (* skoMC1 (* skoMC1 2.))) 0.) (<= (* skoMC1 (* skoMC1 (* skoMC1 (- 2.)))) 0.) (> (* skoSC1 (* skoMC1 (* skoMC1 skoMC1))) (* skoMC1 (* skoMC1 (* skoMC1 (- 1.))))) (<= (* skoSC1 (* skoMC1 (* skoMC1 (* skoMC1 (- 1.))))) (* skoMC1 (* skoMC1 skoMC1)))) (succedent (> (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (- 1.)))) (* skoSC1 (* skoMC1 (* skoMC1 (* skoMC1 (- 1.))))))) 0.)))
-----[end problem]-----

-----[begin problem]-----
% In Mathematica format:
Timing[Resolve[Exists[{skoSC1,skoMC1}, And[skoSC1*skoMC1*skoMC1*skoMC1*-2<=skoMC1*skoMC1*skoMC1*2,skoSC1*(skoMC1*skoMC1*skoMC1*skoMC1*-12+skoSC1*(skoMC1*skoMC1*skoMC1*(1+skoMC1*-6)+skoSC1*(skoMC1*skoMC1*skoMC1+skoSC1*(skoMC1*skoMC1*skoMC1*(-1/12)+skoSC1*skoMC1*skoMC1*skoMC1*(-1/12)))))<=skoMC1*skoMC1*skoMC1*(2+skoMC1*6),skoSC1*(skoMC1*skoMC1*skoMC1*skoMC1*12+skoSC1*(skoMC1*skoMC1*skoMC1*(-1+skoMC1*6)+skoSC1*(skoMC1*skoMC1*skoMC1*-1+skoSC1*(skoMC1*skoMC1*skoMC1*(1/12)+skoSC1*skoMC1*skoMC1*skoMC1*(1/12)))))>skoMC1*skoMC1*skoMC1*(-2+skoMC1*-6),skoSC1*skoMC1*skoMC1*skoMC1*-2<=skoMC1*skoMC1*skoMC1*2,skoSC1*skoMC1*skoMC1*skoMC1*2>skoMC1*skoMC1*skoMC1*-2,skoSC1*skoMC1*-1<=skoMC1,skoSC1*skoMC1>skoMC1*-1,0<=skoMC1,skoMC1>0,0<=skoSC1,2<=skoMC1,skoSC1<=(5/4),skoMC1*skoMC1*skoMC1*2>0,skoMC1*skoMC1*skoMC1*-2<=0,skoSC1*skoMC1*skoMC1*skoMC1>skoMC1*skoMC1*skoMC1*-1,skoSC1*skoMC1*skoMC1*skoMC1*-1<=skoMC1*skoMC1*skoMC1,skoSC1*(skoMC1*skoMC1*skoMC1*-1+skoSC1*skoMC1*skoMC1*skoMC1*-1)<=0]], Reals]]

% In QepcadB format:
(E skoSC1) (E skoMC1) [[(skoSC1 skoMC1 skoMC1 skoMC1 (-2))<=(skoMC1 skoMC1 skoMC1 (2))]/\[[(skoSC1 ((skoMC1 skoMC1 skoMC1 skoMC1 (-12))+(skoSC1 ((skoMC1 skoMC1 skoMC1 (1+(skoMC1 (-6))))+(skoSC1 ((skoMC1 skoMC1 skoMC1)+(skoSC1 ((skoMC1 skoMC1 skoMC1 (-1/12))+(skoSC1 skoMC1 skoMC1 skoMC1 (-1/12))))))))))<=(skoMC1 skoMC1 skoMC1 (2+(skoMC1 (6))))]/\[[(skoMC1 skoMC1 skoMC1 (-2+(skoMC1 (-6))))<(skoSC1 ((skoMC1 skoMC1 skoMC1 skoMC1 (12))+(skoSC1 ((skoMC1 skoMC1 skoMC1 (-1+(skoMC1 (6))))+(skoSC1 ((skoMC1 skoMC1 skoMC1 (-1))+(skoSC1 ((skoMC1 skoMC1 skoMC1 (1/12))+(skoSC1 skoMC1 skoMC1 skoMC1 (1/12))))))))))]/\[[(skoSC1 skoMC1 skoMC1 skoMC1 (-2))<=(skoMC1 skoMC1 skoMC1 (2))]/\[[(skoMC1 skoMC1 skoMC1 (-2))<(skoSC1 skoMC1 skoMC1 skoMC1 (2))]/\[[(skoSC1 skoMC1 (-1))<=skoMC1]/\[[(skoMC1 (-1))<(skoSC1 skoMC1)]/\[[0<=skoMC1]/\[[0<skoMC1]/\[[0<=skoSC1]/\[[2<=skoMC1]/\[[skoSC1<=5/4]/\[[0<(skoMC1 skoMC1 skoMC1 (2))]/\[[(skoMC1 skoMC1 skoMC1 (-2))<=0]/\[[(skoMC1 skoMC1 skoMC1 (-1))<(skoSC1 skoMC1 skoMC1 skoMC1)]/\[[(skoSC1 skoMC1 skoMC1 skoMC1 (-1))<=(skoMC1 skoMC1 skoMC1)]/\[(skoSC1 ((skoMC1 skoMC1 skoMC1 (-1))+(skoSC1 skoMC1 skoMC1 skoMC1 (-1))))<=0]]]]]]]]]]]]]]]]].

% In SMTLib2 format:
(declare-fun skoSC1 () Real) (declare-fun skoMC1 () Real) (assert (and (<= (* skoSC1 (* skoMC1 (* skoMC1 (* skoMC1 (- 2.))))) (* skoMC1 (* skoMC1 (* skoMC1 2.)))) (and (<= (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (* skoMC1 (- 12.))))) (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (+ 1. (* skoMC1 (- 6.)))))) (* skoSC1 (+ (* skoMC1 (* skoMC1 skoMC1)) (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (/ (- 1.) 12.)))) (* skoSC1 (* skoMC1 (* skoMC1 (* skoMC1 (/ (- 1.) 12.))))))))))))) (* skoMC1 (* skoMC1 (* skoMC1 (+ 2. (* skoMC1 6.)))))) (and (> (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (* skoMC1 12.)))) (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (+ (- 1.) (* skoMC1 6.))))) (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (- 1.)))) (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (/ 1. 12.)))) (* skoSC1 (* skoMC1 (* skoMC1 (* skoMC1 (/ 1. 12.))))))))))))) (* skoMC1 (* skoMC1 (* skoMC1 (+ (- 2.) (* skoMC1 (- 6.))))))) (and (<= (* skoSC1 (* skoMC1 (* skoMC1 (* skoMC1 (- 2.))))) (* skoMC1 (* skoMC1 (* skoMC1 2.)))) (and (> (* skoSC1 (* skoMC1 (* skoMC1 (* skoMC1 2.)))) (* skoMC1 (* skoMC1 (* skoMC1 (- 2.))))) (and (<= (* skoSC1 (* skoMC1 (- 1.))) skoMC1) (and (> (* skoSC1 skoMC1) (* skoMC1 (- 1.))) (and (<= 0. skoMC1) (and (> skoMC1 0.) (and (<= 0. skoSC1) (and (<= 2. skoMC1) (and (<= skoSC1 (/ 5. 4.)) (and (> (* skoMC1 (* skoMC1 (* skoMC1 2.))) 0.) (and (<= (* skoMC1 (* skoMC1 (* skoMC1 (- 2.)))) 0.) (and (> (* skoSC1 (* skoMC1 (* skoMC1 skoMC1))) (* skoMC1 (* skoMC1 (* skoMC1 (- 1.))))) (and (<= (* skoSC1 (* skoMC1 (* skoMC1 (* skoMC1 (- 1.))))) (* skoMC1 (* skoMC1 skoMC1))) (<= (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (- 1.)))) (* skoSC1 (* skoMC1 (* skoMC1 (* skoMC1 (- 1.))))))) 0.))))))))))))))))))

% In GRF format:
(sequent " MetiTarski formula " (antecedent (<= (* skoSC1 (* skoMC1 (* skoMC1 (* skoMC1 (- 2.))))) (* skoMC1 (* skoMC1 (* skoMC1 2.)))) (<= (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (* skoMC1 (- 12.))))) (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (+ 1. (* skoMC1 (- 6.)))))) (* skoSC1 (+ (* skoMC1 (* skoMC1 skoMC1)) (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (/ (- 1.) 12.)))) (* skoSC1 (* skoMC1 (* skoMC1 (* skoMC1 (/ (- 1.) 12.))))))))))))) (* skoMC1 (* skoMC1 (* skoMC1 (+ 2. (* skoMC1 6.)))))) (> (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (* skoMC1 12.)))) (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (+ (- 1.) (* skoMC1 6.))))) (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (- 1.)))) (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (/ 1. 12.)))) (* skoSC1 (* skoMC1 (* skoMC1 (* skoMC1 (/ 1. 12.))))))))))))) (* skoMC1 (* skoMC1 (* skoMC1 (+ (- 2.) (* skoMC1 (- 6.))))))) (<= (* skoSC1 (* skoMC1 (* skoMC1 (* skoMC1 (- 2.))))) (* skoMC1 (* skoMC1 (* skoMC1 2.)))) (> (* skoSC1 (* skoMC1 (* skoMC1 (* skoMC1 2.)))) (* skoMC1 (* skoMC1 (* skoMC1 (- 2.))))) (<= (* skoSC1 (* skoMC1 (- 1.))) skoMC1) (> (* skoSC1 skoMC1) (* skoMC1 (- 1.))) (<= 0. skoMC1) (> skoMC1 0.) (<= 0. skoSC1) (<= 2. skoMC1) (<= skoSC1 (/ 5. 4.)) (> (* skoMC1 (* skoMC1 (* skoMC1 2.))) 0.) (<= (* skoMC1 (* skoMC1 (* skoMC1 (- 2.)))) 0.) (> (* skoSC1 (* skoMC1 (* skoMC1 skoMC1))) (* skoMC1 (* skoMC1 (* skoMC1 (- 1.))))) (<= (* skoSC1 (* skoMC1 (* skoMC1 (* skoMC1 (- 1.))))) (* skoMC1 (* skoMC1 skoMC1)))) (succedent (> (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (- 1.)))) (* skoSC1 (* skoMC1 (* skoMC1 (* skoMC1 (- 1.))))))) 0.)))
-----[end problem]-----

-----[begin problem]-----
% In Mathematica format:
Timing[Resolve[Exists[{skoSC1,skoMC1}, And[skoSC1*(skoMC1*skoMC1*skoMC1*skoMC1*12+skoSC1*(skoMC1*skoMC1*skoMC1*(-1+skoMC1*6)+skoSC1*(skoMC1*skoMC1*skoMC1*-1+skoSC1*(skoMC1*skoMC1*skoMC1*(1/12)+skoSC1*skoMC1*skoMC1*skoMC1*(1/12)))))>skoMC1*skoMC1*skoMC1*(-2+skoMC1*-6),skoSC1*(skoMC1*skoMC1*skoMC1*skoMC1*-12+skoSC1*(skoMC1*skoMC1*skoMC1*(1+skoMC1*-6)+skoSC1*(skoMC1*skoMC1*skoMC1+skoSC1*(skoMC1*skoMC1*skoMC1*(-1/12)+skoSC1*skoMC1*skoMC1*skoMC1*(-1/12)))))<=skoMC1*skoMC1*skoMC1*(2+skoMC1*6),skoSC1*(skoMC1*skoMC1*skoMC1*skoMC1*12+skoSC1*(skoMC1*skoMC1*skoMC1*(-1+skoMC1*6)+skoSC1*(skoMC1*skoMC1*skoMC1*-1+skoSC1*(skoMC1*skoMC1*skoMC1*(1/12)+skoSC1*skoMC1*skoMC1*skoMC1*(1/12)))))>skoMC1*skoMC1*skoMC1*(-2+skoMC1*-6),skoSC1*skoMC1*skoMC1*skoMC1*-2<=skoMC1*skoMC1*skoMC1*2,skoSC1*skoMC1*skoMC1*skoMC1*2>skoMC1*skoMC1*skoMC1*-2,skoSC1*skoMC1*-1<=skoMC1,skoSC1*skoMC1>skoMC1*-1,0<=skoMC1,skoMC1>0,0<=skoSC1,2<=skoMC1,skoSC1<=(5/4),skoMC1*skoMC1*skoMC1*2>0,skoMC1*skoMC1*skoMC1*-2<=0,skoSC1*skoMC1*skoMC1*skoMC1>skoMC1*skoMC1*skoMC1*-1,skoSC1*skoMC1*skoMC1*skoMC1*-1<=skoMC1*skoMC1*skoMC1,skoSC1*(skoMC1*skoMC1*skoMC1*-1+skoSC1*skoMC1*skoMC1*skoMC1*-1)<=0]], Reals]]

% In QepcadB format:
(E skoSC1) (E skoMC1) [[(skoMC1 skoMC1 skoMC1 (-2+(skoMC1 (-6))))<(skoSC1 ((skoMC1 skoMC1 skoMC1 skoMC1 (12))+(skoSC1 ((skoMC1 skoMC1 skoMC1 (-1+(skoMC1 (6))))+(skoSC1 ((skoMC1 skoMC1 skoMC1 (-1))+(skoSC1 ((skoMC1 skoMC1 skoMC1 (1/12))+(skoSC1 skoMC1 skoMC1 skoMC1 (1/12))))))))))]/\[[(skoSC1 ((skoMC1 skoMC1 skoMC1 skoMC1 (-12))+(skoSC1 ((skoMC1 skoMC1 skoMC1 (1+(skoMC1 (-6))))+(skoSC1 ((skoMC1 skoMC1 skoMC1)+(skoSC1 ((skoMC1 skoMC1 skoMC1 (-1/12))+(skoSC1 skoMC1 skoMC1 skoMC1 (-1/12))))))))))<=(skoMC1 skoMC1 skoMC1 (2+(skoMC1 (6))))]/\[[(skoMC1 skoMC1 skoMC1 (-2+(skoMC1 (-6))))<(skoSC1 ((skoMC1 skoMC1 skoMC1 skoMC1 (12))+(skoSC1 ((skoMC1 skoMC1 skoMC1 (-1+(skoMC1 (6))))+(skoSC1 ((skoMC1 skoMC1 skoMC1 (-1))+(skoSC1 ((skoMC1 skoMC1 skoMC1 (1/12))+(skoSC1 skoMC1 skoMC1 skoMC1 (1/12))))))))))]/\[[(skoSC1 skoMC1 skoMC1 skoMC1 (-2))<=(skoMC1 skoMC1 skoMC1 (2))]/\[[(skoMC1 skoMC1 skoMC1 (-2))<(skoSC1 skoMC1 skoMC1 skoMC1 (2))]/\[[(skoSC1 skoMC1 (-1))<=skoMC1]/\[[(skoMC1 (-1))<(skoSC1 skoMC1)]/\[[0<=skoMC1]/\[[0<skoMC1]/\[[0<=skoSC1]/\[[2<=skoMC1]/\[[skoSC1<=5/4]/\[[0<(skoMC1 skoMC1 skoMC1 (2))]/\[[(skoMC1 skoMC1 skoMC1 (-2))<=0]/\[[(skoMC1 skoMC1 skoMC1 (-1))<(skoSC1 skoMC1 skoMC1 skoMC1)]/\[[(skoSC1 skoMC1 skoMC1 skoMC1 (-1))<=(skoMC1 skoMC1 skoMC1)]/\[(skoSC1 ((skoMC1 skoMC1 skoMC1 (-1))+(skoSC1 skoMC1 skoMC1 skoMC1 (-1))))<=0]]]]]]]]]]]]]]]]].

% In SMTLib2 format:
(declare-fun skoSC1 () Real) (declare-fun skoMC1 () Real) (assert (and (> (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (* skoMC1 12.)))) (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (+ (- 1.) (* skoMC1 6.))))) (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (- 1.)))) (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (/ 1. 12.)))) (* skoSC1 (* skoMC1 (* skoMC1 (* skoMC1 (/ 1. 12.))))))))))))) (* skoMC1 (* skoMC1 (* skoMC1 (+ (- 2.) (* skoMC1 (- 6.))))))) (and (<= (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (* skoMC1 (- 12.))))) (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (+ 1. (* skoMC1 (- 6.)))))) (* skoSC1 (+ (* skoMC1 (* skoMC1 skoMC1)) (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (/ (- 1.) 12.)))) (* skoSC1 (* skoMC1 (* skoMC1 (* skoMC1 (/ (- 1.) 12.))))))))))))) (* skoMC1 (* skoMC1 (* skoMC1 (+ 2. (* skoMC1 6.)))))) (and (> (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (* skoMC1 12.)))) (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (+ (- 1.) (* skoMC1 6.))))) (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (- 1.)))) (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (/ 1. 12.)))) (* skoSC1 (* skoMC1 (* skoMC1 (* skoMC1 (/ 1. 12.))))))))))))) (* skoMC1 (* skoMC1 (* skoMC1 (+ (- 2.) (* skoMC1 (- 6.))))))) (and (<= (* skoSC1 (* skoMC1 (* skoMC1 (* skoMC1 (- 2.))))) (* skoMC1 (* skoMC1 (* skoMC1 2.)))) (and (> (* skoSC1 (* skoMC1 (* skoMC1 (* skoMC1 2.)))) (* skoMC1 (* skoMC1 (* skoMC1 (- 2.))))) (and (<= (* skoSC1 (* skoMC1 (- 1.))) skoMC1) (and (> (* skoSC1 skoMC1) (* skoMC1 (- 1.))) (and (<= 0. skoMC1) (and (> skoMC1 0.) (and (<= 0. skoSC1) (and (<= 2. skoMC1) (and (<= skoSC1 (/ 5. 4.)) (and (> (* skoMC1 (* skoMC1 (* skoMC1 2.))) 0.) (and (<= (* skoMC1 (* skoMC1 (* skoMC1 (- 2.)))) 0.) (and (> (* skoSC1 (* skoMC1 (* skoMC1 skoMC1))) (* skoMC1 (* skoMC1 (* skoMC1 (- 1.))))) (and (<= (* skoSC1 (* skoMC1 (* skoMC1 (* skoMC1 (- 1.))))) (* skoMC1 (* skoMC1 skoMC1))) (<= (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (- 1.)))) (* skoSC1 (* skoMC1 (* skoMC1 (* skoMC1 (- 1.))))))) 0.))))))))))))))))))

% In GRF format:
(sequent " MetiTarski formula " (antecedent (> (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (* skoMC1 12.)))) (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (+ (- 1.) (* skoMC1 6.))))) (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (- 1.)))) (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (/ 1. 12.)))) (* skoSC1 (* skoMC1 (* skoMC1 (* skoMC1 (/ 1. 12.))))))))))))) (* skoMC1 (* skoMC1 (* skoMC1 (+ (- 2.) (* skoMC1 (- 6.))))))) (<= (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (* skoMC1 (- 12.))))) (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (+ 1. (* skoMC1 (- 6.)))))) (* skoSC1 (+ (* skoMC1 (* skoMC1 skoMC1)) (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (/ (- 1.) 12.)))) (* skoSC1 (* skoMC1 (* skoMC1 (* skoMC1 (/ (- 1.) 12.))))))))))))) (* skoMC1 (* skoMC1 (* skoMC1 (+ 2. (* skoMC1 6.)))))) (> (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (* skoMC1 12.)))) (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (+ (- 1.) (* skoMC1 6.))))) (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (- 1.)))) (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (/ 1. 12.)))) (* skoSC1 (* skoMC1 (* skoMC1 (* skoMC1 (/ 1. 12.))))))))))))) (* skoMC1 (* skoMC1 (* skoMC1 (+ (- 2.) (* skoMC1 (- 6.))))))) (<= (* skoSC1 (* skoMC1 (* skoMC1 (* skoMC1 (- 2.))))) (* skoMC1 (* skoMC1 (* skoMC1 2.)))) (> (* skoSC1 (* skoMC1 (* skoMC1 (* skoMC1 2.)))) (* skoMC1 (* skoMC1 (* skoMC1 (- 2.))))) (<= (* skoSC1 (* skoMC1 (- 1.))) skoMC1) (> (* skoSC1 skoMC1) (* skoMC1 (- 1.))) (<= 0. skoMC1) (> skoMC1 0.) (<= 0. skoSC1) (<= 2. skoMC1) (<= skoSC1 (/ 5. 4.)) (> (* skoMC1 (* skoMC1 (* skoMC1 2.))) 0.) (<= (* skoMC1 (* skoMC1 (* skoMC1 (- 2.)))) 0.) (> (* skoSC1 (* skoMC1 (* skoMC1 skoMC1))) (* skoMC1 (* skoMC1 (* skoMC1 (- 1.))))) (<= (* skoSC1 (* skoMC1 (* skoMC1 (* skoMC1 (- 1.))))) (* skoMC1 (* skoMC1 skoMC1)))) (succedent (> (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (- 1.)))) (* skoSC1 (* skoMC1 (* skoMC1 (* skoMC1 (- 1.))))))) 0.)))
-----[end problem]-----

-----[begin problem]-----
% In Mathematica format:
Timing[Resolve[Exists[{skoSC1,skoMC1}, And[skoSC1*skoMC1*skoMC1*skoMC1*2>skoMC1*skoMC1*skoMC1*-2,skoSC1*(skoMC1*skoMC1*skoMC1*skoMC1*12+skoSC1*(skoMC1*skoMC1*skoMC1*(-1+skoMC1*6)+skoSC1*(skoMC1*skoMC1*skoMC1*-1+skoSC1*(skoMC1*skoMC1*skoMC1*(1/12)+skoSC1*(skoMC1*skoMC1*skoMC1*(1/12)+skoSC1*(skoMC1*skoMC1*skoMC1*(-1/360)+skoSC1*(skoMC1*skoMC1*skoMC1*(-1/360)+skoSC1*(skoMC1*skoMC1*skoMC1*(1/20160)+skoSC1*(skoMC1*skoMC1*skoMC1*(1/20160)+skoSC1*(skoMC1*skoMC1*skoMC1*(-1/1814400)+skoSC1*(skoMC1*skoMC1*skoMC1*(-1/1814400)+skoSC1*(skoMC1*skoMC1*skoMC1*(1/239500800)+skoSC1*skoMC1*skoMC1*skoMC1*(1/239500800)))))))))))))>skoMC1*skoMC1*skoMC1*(-2+skoMC1*-6),skoSC1*(skoMC1*skoMC1*skoMC1*skoMC1*-12+skoSC1*(skoMC1*skoMC1*skoMC1*(1+skoMC1*-6)+skoSC1*(skoMC1*skoMC1*skoMC1+skoSC1*(skoMC1*skoMC1*skoMC1*(-1/12)+skoSC1*skoMC1*skoMC1*skoMC1*(-1/12)))))<=skoMC1*skoMC1*skoMC1*(2+skoMC1*6),skoSC1*(skoMC1*skoMC1*skoMC1*skoMC1*12+skoSC1*(skoMC1*skoMC1*skoMC1*(-1+skoMC1*6)+skoSC1*(skoMC1*skoMC1*skoMC1*-1+skoSC1*(skoMC1*skoMC1*skoMC1*(1/12)+skoSC1*skoMC1*skoMC1*skoMC1*(1/12)))))>skoMC1*skoMC1*skoMC1*(-2+skoMC1*-6),skoSC1*skoMC1*skoMC1*skoMC1*-2<=skoMC1*skoMC1*skoMC1*2,skoSC1*skoMC1*skoMC1*skoMC1*2>skoMC1*skoMC1*skoMC1*-2,skoSC1*skoMC1*-1<=skoMC1,skoSC1*skoMC1>skoMC1*-1,0<=skoMC1,skoMC1>0,0<=skoSC1,2<=skoMC1,skoSC1<=(5/4),skoMC1*skoMC1*skoMC1*2>0,skoMC1*skoMC1*skoMC1*-2<=0,skoSC1*skoMC1*skoMC1*skoMC1>skoMC1*skoMC1*skoMC1*-1,skoSC1*skoMC1*skoMC1*skoMC1*-1<=skoMC1*skoMC1*skoMC1,skoSC1*(skoMC1*skoMC1*skoMC1*-1+skoSC1*skoMC1*skoMC1*skoMC1*-1)<=0]], Reals]]

% In QepcadB format:
(E skoSC1) (E skoMC1) [[(skoMC1 skoMC1 skoMC1 (-2))<(skoSC1 skoMC1 skoMC1 skoMC1 (2))]/\[[(skoMC1 skoMC1 skoMC1 (-2+(skoMC1 (-6))))<(skoSC1 ((skoMC1 skoMC1 skoMC1 skoMC1 (12))+(skoSC1 ((skoMC1 skoMC1 skoMC1 (-1+(skoMC1 (6))))+(skoSC1 ((skoMC1 skoMC1 skoMC1 (-1))+(skoSC1 ((skoMC1 skoMC1 skoMC1 (1/12))+(skoSC1 ((skoMC1 skoMC1 skoMC1 (1/12))+(skoSC1 ((skoMC1 skoMC1 skoMC1 (-1/360))+(skoSC1 ((skoMC1 skoMC1 skoMC1 (-1/360))+(skoSC1 ((skoMC1 skoMC1 skoMC1 (1/20160))+(skoSC1 ((skoMC1 skoMC1 skoMC1 (1/20160))+(skoSC1 ((skoMC1 skoMC1 skoMC1 (-1/1814400))+(skoSC1 ((skoMC1 skoMC1 skoMC1 (-1/1814400))+(skoSC1 ((skoMC1 skoMC1 skoMC1 (1/239500800))+(skoSC1 skoMC1 skoMC1 skoMC1 (1/239500800))))))))))))))))))))))))))]/\[[(skoSC1 ((skoMC1 skoMC1 skoMC1 skoMC1 (-12))+(skoSC1 ((skoMC1 skoMC1 skoMC1 (1+(skoMC1 (-6))))+(skoSC1 ((skoMC1 skoMC1 skoMC1)+(skoSC1 ((skoMC1 skoMC1 skoMC1 (-1/12))+(skoSC1 skoMC1 skoMC1 skoMC1 (-1/12))))))))))<=(skoMC1 skoMC1 skoMC1 (2+(skoMC1 (6))))]/\[[(skoMC1 skoMC1 skoMC1 (-2+(skoMC1 (-6))))<(skoSC1 ((skoMC1 skoMC1 skoMC1 skoMC1 (12))+(skoSC1 ((skoMC1 skoMC1 skoMC1 (-1+(skoMC1 (6))))+(skoSC1 ((skoMC1 skoMC1 skoMC1 (-1))+(skoSC1 ((skoMC1 skoMC1 skoMC1 (1/12))+(skoSC1 skoMC1 skoMC1 skoMC1 (1/12))))))))))]/\[[(skoSC1 skoMC1 skoMC1 skoMC1 (-2))<=(skoMC1 skoMC1 skoMC1 (2))]/\[[(skoMC1 skoMC1 skoMC1 (-2))<(skoSC1 skoMC1 skoMC1 skoMC1 (2))]/\[[(skoSC1 skoMC1 (-1))<=skoMC1]/\[[(skoMC1 (-1))<(skoSC1 skoMC1)]/\[[0<=skoMC1]/\[[0<skoMC1]/\[[0<=skoSC1]/\[[2<=skoMC1]/\[[skoSC1<=5/4]/\[[0<(skoMC1 skoMC1 skoMC1 (2))]/\[[(skoMC1 skoMC1 skoMC1 (-2))<=0]/\[[(skoMC1 skoMC1 skoMC1 (-1))<(skoSC1 skoMC1 skoMC1 skoMC1)]/\[[(skoSC1 skoMC1 skoMC1 skoMC1 (-1))<=(skoMC1 skoMC1 skoMC1)]/\[(skoSC1 ((skoMC1 skoMC1 skoMC1 (-1))+(skoSC1 skoMC1 skoMC1 skoMC1 (-1))))<=0]]]]]]]]]]]]]]]]]].

% In SMTLib2 format:
(declare-fun skoSC1 () Real) (declare-fun skoMC1 () Real) (assert (and (> (* skoSC1 (* skoMC1 (* skoMC1 (* skoMC1 2.)))) (* skoMC1 (* skoMC1 (* skoMC1 (- 2.))))) (and (> (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (* skoMC1 12.)))) (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (+ (- 1.) (* skoMC1 6.))))) (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (- 1.)))) (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (/ 1. 12.)))) (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (/ 1. 12.)))) (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (/ (- 1.) 360.)))) (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (/ (- 1.) 360.)))) (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (/ 1. 20160.)))) (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (/ 1. 20160.)))) (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (/ (- 1.) 1814400.)))) (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (/ (- 1.) 1814400.)))) (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (/ 1. 239500800.)))) (* skoSC1 (* skoMC1 (* skoMC1 (* skoMC1 (/ 1. 239500800.))))))))))))))))))))))))))))) (* skoMC1 (* skoMC1 (* skoMC1 (+ (- 2.) (* skoMC1 (- 6.))))))) (and (<= (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (* skoMC1 (- 12.))))) (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (+ 1. (* skoMC1 (- 6.)))))) (* skoSC1 (+ (* skoMC1 (* skoMC1 skoMC1)) (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (/ (- 1.) 12.)))) (* skoSC1 (* skoMC1 (* skoMC1 (* skoMC1 (/ (- 1.) 12.))))))))))))) (* skoMC1 (* skoMC1 (* skoMC1 (+ 2. (* skoMC1 6.)))))) (and (> (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (* skoMC1 12.)))) (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (+ (- 1.) (* skoMC1 6.))))) (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (- 1.)))) (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (/ 1. 12.)))) (* skoSC1 (* skoMC1 (* skoMC1 (* skoMC1 (/ 1. 12.))))))))))))) (* skoMC1 (* skoMC1 (* skoMC1 (+ (- 2.) (* skoMC1 (- 6.))))))) (and (<= (* skoSC1 (* skoMC1 (* skoMC1 (* skoMC1 (- 2.))))) (* skoMC1 (* skoMC1 (* skoMC1 2.)))) (and (> (* skoSC1 (* skoMC1 (* skoMC1 (* skoMC1 2.)))) (* skoMC1 (* skoMC1 (* skoMC1 (- 2.))))) (and (<= (* skoSC1 (* skoMC1 (- 1.))) skoMC1) (and (> (* skoSC1 skoMC1) (* skoMC1 (- 1.))) (and (<= 0. skoMC1) (and (> skoMC1 0.) (and (<= 0. skoSC1) (and (<= 2. skoMC1) (and (<= skoSC1 (/ 5. 4.)) (and (> (* skoMC1 (* skoMC1 (* skoMC1 2.))) 0.) (and (<= (* skoMC1 (* skoMC1 (* skoMC1 (- 2.)))) 0.) (and (> (* skoSC1 (* skoMC1 (* skoMC1 skoMC1))) (* skoMC1 (* skoMC1 (* skoMC1 (- 1.))))) (and (<= (* skoSC1 (* skoMC1 (* skoMC1 (* skoMC1 (- 1.))))) (* skoMC1 (* skoMC1 skoMC1))) (<= (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (- 1.)))) (* skoSC1 (* skoMC1 (* skoMC1 (* skoMC1 (- 1.))))))) 0.)))))))))))))))))))

% In GRF format:
(sequent " MetiTarski formula " (antecedent (> (* skoSC1 (* skoMC1 (* skoMC1 (* skoMC1 2.)))) (* skoMC1 (* skoMC1 (* skoMC1 (- 2.))))) (> (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (* skoMC1 12.)))) (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (+ (- 1.) (* skoMC1 6.))))) (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (- 1.)))) (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (/ 1. 12.)))) (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (/ 1. 12.)))) (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (/ (- 1.) 360.)))) (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (/ (- 1.) 360.)))) (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (/ 1. 20160.)))) (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (/ 1. 20160.)))) (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (/ (- 1.) 1814400.)))) (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (/ (- 1.) 1814400.)))) (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (/ 1. 239500800.)))) (* skoSC1 (* skoMC1 (* skoMC1 (* skoMC1 (/ 1. 239500800.))))))))))))))))))))))))))))) (* skoMC1 (* skoMC1 (* skoMC1 (+ (- 2.) (* skoMC1 (- 6.))))))) (<= (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (* skoMC1 (- 12.))))) (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (+ 1. (* skoMC1 (- 6.)))))) (* skoSC1 (+ (* skoMC1 (* skoMC1 skoMC1)) (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (/ (- 1.) 12.)))) (* skoSC1 (* skoMC1 (* skoMC1 (* skoMC1 (/ (- 1.) 12.))))))))))))) (* skoMC1 (* skoMC1 (* skoMC1 (+ 2. (* skoMC1 6.)))))) (> (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (* skoMC1 12.)))) (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (+ (- 1.) (* skoMC1 6.))))) (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (- 1.)))) (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (/ 1. 12.)))) (* skoSC1 (* skoMC1 (* skoMC1 (* skoMC1 (/ 1. 12.))))))))))))) (* skoMC1 (* skoMC1 (* skoMC1 (+ (- 2.) (* skoMC1 (- 6.))))))) (<= (* skoSC1 (* skoMC1 (* skoMC1 (* skoMC1 (- 2.))))) (* skoMC1 (* skoMC1 (* skoMC1 2.)))) (> (* skoSC1 (* skoMC1 (* skoMC1 (* skoMC1 2.)))) (* skoMC1 (* skoMC1 (* skoMC1 (- 2.))))) (<= (* skoSC1 (* skoMC1 (- 1.))) skoMC1) (> (* skoSC1 skoMC1) (* skoMC1 (- 1.))) (<= 0. skoMC1) (> skoMC1 0.) (<= 0. skoSC1) (<= 2. skoMC1) (<= skoSC1 (/ 5. 4.)) (> (* skoMC1 (* skoMC1 (* skoMC1 2.))) 0.) (<= (* skoMC1 (* skoMC1 (* skoMC1 (- 2.)))) 0.) (> (* skoSC1 (* skoMC1 (* skoMC1 skoMC1))) (* skoMC1 (* skoMC1 (* skoMC1 (- 1.))))) (<= (* skoSC1 (* skoMC1 (* skoMC1 (* skoMC1 (- 1.))))) (* skoMC1 (* skoMC1 skoMC1)))) (succedent (> (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (- 1.)))) (* skoSC1 (* skoMC1 (* skoMC1 (* skoMC1 (- 1.))))))) 0.)))
-----[end problem]-----

-----[begin problem]-----
% In Mathematica format:
Timing[Resolve[Exists[{skoSC1,skoMC1}, And[skoSC1*skoMC1*skoMC1*skoMC1*2<=skoMC1*skoMC1*skoMC1*-2,skoSC1*(skoMC1*skoMC1*skoMC1*skoMC1*12+skoSC1*(skoMC1*skoMC1*skoMC1*(-1+skoMC1*6)+skoSC1*(skoMC1*skoMC1*skoMC1*-1+skoSC1*(skoMC1*skoMC1*skoMC1*(1/12)+skoSC1*(skoMC1*skoMC1*skoMC1*(1/12)+skoSC1*(skoMC1*skoMC1*skoMC1*(-1/360)+skoSC1*(skoMC1*skoMC1*skoMC1*(-1/360)+skoSC1*(skoMC1*skoMC1*skoMC1*(1/20160)+skoSC1*(skoMC1*skoMC1*skoMC1*(1/20160)+skoSC1*(skoMC1*skoMC1*skoMC1*(-1/1814400)+skoSC1*(skoMC1*skoMC1*skoMC1*(-1/1814400)+skoSC1*(skoMC1*skoMC1*skoMC1*(1/239500800)+skoSC1*skoMC1*skoMC1*skoMC1*(1/239500800)))))))))))))<=skoMC1*skoMC1*skoMC1*(-2+skoMC1*-6),skoSC1*(skoMC1*skoMC1*skoMC1*skoMC1*-12+skoSC1*(skoMC1*skoMC1*skoMC1*(1+skoMC1*-6)+skoSC1*(skoMC1*skoMC1*skoMC1+skoSC1*(skoMC1*skoMC1*skoMC1*(-1/12)+skoSC1*skoMC1*skoMC1*skoMC1*(-1/12)))))<=skoMC1*skoMC1*skoMC1*(2+skoMC1*6),skoSC1*(skoMC1*skoMC1*skoMC1*skoMC1*12+skoSC1*(skoMC1*skoMC1*skoMC1*(-1+skoMC1*6)+skoSC1*(skoMC1*skoMC1*skoMC1*-1+skoSC1*(skoMC1*skoMC1*skoMC1*(1/12)+skoSC1*skoMC1*skoMC1*skoMC1*(1/12)))))>skoMC1*skoMC1*skoMC1*(-2+skoMC1*-6),skoSC1*skoMC1*skoMC1*skoMC1*-2<=skoMC1*skoMC1*skoMC1*2,skoSC1*skoMC1*skoMC1*skoMC1*2>skoMC1*skoMC1*skoMC1*-2,skoSC1*skoMC1*-1<=skoMC1,skoSC1*skoMC1>skoMC1*-1,0<=skoMC1,skoMC1>0,0<=skoSC1,2<=skoMC1,skoSC1<=(5/4),skoMC1*skoMC1*skoMC1*2>0,skoMC1*skoMC1*skoMC1*-2<=0,skoSC1*skoMC1*skoMC1*skoMC1>skoMC1*skoMC1*skoMC1*-1,skoSC1*skoMC1*skoMC1*skoMC1*-1<=skoMC1*skoMC1*skoMC1,skoSC1*(skoMC1*skoMC1*skoMC1*-1+skoSC1*skoMC1*skoMC1*skoMC1*-1)<=0]], Reals]]

% In QepcadB format:
(E skoSC1) (E skoMC1) [[(skoSC1 skoMC1 skoMC1 skoMC1 (2))<=(skoMC1 skoMC1 skoMC1 (-2))]/\[[(skoSC1 ((skoMC1 skoMC1 skoMC1 skoMC1 (12))+(skoSC1 ((skoMC1 skoMC1 skoMC1 (-1+(skoMC1 (6))))+(skoSC1 ((skoMC1 skoMC1 skoMC1 (-1))+(skoSC1 ((skoMC1 skoMC1 skoMC1 (1/12))+(skoSC1 ((skoMC1 skoMC1 skoMC1 (1/12))+(skoSC1 ((skoMC1 skoMC1 skoMC1 (-1/360))+(skoSC1 ((skoMC1 skoMC1 skoMC1 (-1/360))+(skoSC1 ((skoMC1 skoMC1 skoMC1 (1/20160))+(skoSC1 ((skoMC1 skoMC1 skoMC1 (1/20160))+(skoSC1 ((skoMC1 skoMC1 skoMC1 (-1/1814400))+(skoSC1 ((skoMC1 skoMC1 skoMC1 (-1/1814400))+(skoSC1 ((skoMC1 skoMC1 skoMC1 (1/239500800))+(skoSC1 skoMC1 skoMC1 skoMC1 (1/239500800))))))))))))))))))))))))))<=(skoMC1 skoMC1 skoMC1 (-2+(skoMC1 (-6))))]/\[[(skoSC1 ((skoMC1 skoMC1 skoMC1 skoMC1 (-12))+(skoSC1 ((skoMC1 skoMC1 skoMC1 (1+(skoMC1 (-6))))+(skoSC1 ((skoMC1 skoMC1 skoMC1)+(skoSC1 ((skoMC1 skoMC1 skoMC1 (-1/12))+(skoSC1 skoMC1 skoMC1 skoMC1 (-1/12))))))))))<=(skoMC1 skoMC1 skoMC1 (2+(skoMC1 (6))))]/\[[(skoMC1 skoMC1 skoMC1 (-2+(skoMC1 (-6))))<(skoSC1 ((skoMC1 skoMC1 skoMC1 skoMC1 (12))+(skoSC1 ((skoMC1 skoMC1 skoMC1 (-1+(skoMC1 (6))))+(skoSC1 ((skoMC1 skoMC1 skoMC1 (-1))+(skoSC1 ((skoMC1 skoMC1 skoMC1 (1/12))+(skoSC1 skoMC1 skoMC1 skoMC1 (1/12))))))))))]/\[[(skoSC1 skoMC1 skoMC1 skoMC1 (-2))<=(skoMC1 skoMC1 skoMC1 (2))]/\[[(skoMC1 skoMC1 skoMC1 (-2))<(skoSC1 skoMC1 skoMC1 skoMC1 (2))]/\[[(skoSC1 skoMC1 (-1))<=skoMC1]/\[[(skoMC1 (-1))<(skoSC1 skoMC1)]/\[[0<=skoMC1]/\[[0<skoMC1]/\[[0<=skoSC1]/\[[2<=skoMC1]/\[[skoSC1<=5/4]/\[[0<(skoMC1 skoMC1 skoMC1 (2))]/\[[(skoMC1 skoMC1 skoMC1 (-2))<=0]/\[[(skoMC1 skoMC1 skoMC1 (-1))<(skoSC1 skoMC1 skoMC1 skoMC1)]/\[[(skoSC1 skoMC1 skoMC1 skoMC1 (-1))<=(skoMC1 skoMC1 skoMC1)]/\[(skoSC1 ((skoMC1 skoMC1 skoMC1 (-1))+(skoSC1 skoMC1 skoMC1 skoMC1 (-1))))<=0]]]]]]]]]]]]]]]]]].

% In SMTLib2 format:
(declare-fun skoSC1 () Real) (declare-fun skoMC1 () Real) (assert (and (<= (* skoSC1 (* skoMC1 (* skoMC1 (* skoMC1 2.)))) (* skoMC1 (* skoMC1 (* skoMC1 (- 2.))))) (and (<= (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (* skoMC1 12.)))) (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (+ (- 1.) (* skoMC1 6.))))) (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (- 1.)))) (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (/ 1. 12.)))) (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (/ 1. 12.)))) (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (/ (- 1.) 360.)))) (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (/ (- 1.) 360.)))) (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (/ 1. 20160.)))) (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (/ 1. 20160.)))) (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (/ (- 1.) 1814400.)))) (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (/ (- 1.) 1814400.)))) (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (/ 1. 239500800.)))) (* skoSC1 (* skoMC1 (* skoMC1 (* skoMC1 (/ 1. 239500800.))))))))))))))))))))))))))))) (* skoMC1 (* skoMC1 (* skoMC1 (+ (- 2.) (* skoMC1 (- 6.))))))) (and (<= (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (* skoMC1 (- 12.))))) (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (+ 1. (* skoMC1 (- 6.)))))) (* skoSC1 (+ (* skoMC1 (* skoMC1 skoMC1)) (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (/ (- 1.) 12.)))) (* skoSC1 (* skoMC1 (* skoMC1 (* skoMC1 (/ (- 1.) 12.))))))))))))) (* skoMC1 (* skoMC1 (* skoMC1 (+ 2. (* skoMC1 6.)))))) (and (> (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (* skoMC1 12.)))) (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (+ (- 1.) (* skoMC1 6.))))) (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (- 1.)))) (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (/ 1. 12.)))) (* skoSC1 (* skoMC1 (* skoMC1 (* skoMC1 (/ 1. 12.))))))))))))) (* skoMC1 (* skoMC1 (* skoMC1 (+ (- 2.) (* skoMC1 (- 6.))))))) (and (<= (* skoSC1 (* skoMC1 (* skoMC1 (* skoMC1 (- 2.))))) (* skoMC1 (* skoMC1 (* skoMC1 2.)))) (and (> (* skoSC1 (* skoMC1 (* skoMC1 (* skoMC1 2.)))) (* skoMC1 (* skoMC1 (* skoMC1 (- 2.))))) (and (<= (* skoSC1 (* skoMC1 (- 1.))) skoMC1) (and (> (* skoSC1 skoMC1) (* skoMC1 (- 1.))) (and (<= 0. skoMC1) (and (> skoMC1 0.) (and (<= 0. skoSC1) (and (<= 2. skoMC1) (and (<= skoSC1 (/ 5. 4.)) (and (> (* skoMC1 (* skoMC1 (* skoMC1 2.))) 0.) (and (<= (* skoMC1 (* skoMC1 (* skoMC1 (- 2.)))) 0.) (and (> (* skoSC1 (* skoMC1 (* skoMC1 skoMC1))) (* skoMC1 (* skoMC1 (* skoMC1 (- 1.))))) (and (<= (* skoSC1 (* skoMC1 (* skoMC1 (* skoMC1 (- 1.))))) (* skoMC1 (* skoMC1 skoMC1))) (<= (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (- 1.)))) (* skoSC1 (* skoMC1 (* skoMC1 (* skoMC1 (- 1.))))))) 0.)))))))))))))))))))

% In GRF format:
(sequent " MetiTarski formula " (antecedent (<= (* skoSC1 (* skoMC1 (* skoMC1 (* skoMC1 2.)))) (* skoMC1 (* skoMC1 (* skoMC1 (- 2.))))) (<= (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (* skoMC1 12.)))) (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (+ (- 1.) (* skoMC1 6.))))) (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (- 1.)))) (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (/ 1. 12.)))) (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (/ 1. 12.)))) (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (/ (- 1.) 360.)))) (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (/ (- 1.) 360.)))) (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (/ 1. 20160.)))) (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (/ 1. 20160.)))) (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (/ (- 1.) 1814400.)))) (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (/ (- 1.) 1814400.)))) (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (/ 1. 239500800.)))) (* skoSC1 (* skoMC1 (* skoMC1 (* skoMC1 (/ 1. 239500800.))))))))))))))))))))))))))))) (* skoMC1 (* skoMC1 (* skoMC1 (+ (- 2.) (* skoMC1 (- 6.))))))) (<= (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (* skoMC1 (- 12.))))) (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (+ 1. (* skoMC1 (- 6.)))))) (* skoSC1 (+ (* skoMC1 (* skoMC1 skoMC1)) (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (/ (- 1.) 12.)))) (* skoSC1 (* skoMC1 (* skoMC1 (* skoMC1 (/ (- 1.) 12.))))))))))))) (* skoMC1 (* skoMC1 (* skoMC1 (+ 2. (* skoMC1 6.)))))) (> (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (* skoMC1 12.)))) (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (+ (- 1.) (* skoMC1 6.))))) (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (- 1.)))) (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (/ 1. 12.)))) (* skoSC1 (* skoMC1 (* skoMC1 (* skoMC1 (/ 1. 12.))))))))))))) (* skoMC1 (* skoMC1 (* skoMC1 (+ (- 2.) (* skoMC1 (- 6.))))))) (<= (* skoSC1 (* skoMC1 (* skoMC1 (* skoMC1 (- 2.))))) (* skoMC1 (* skoMC1 (* skoMC1 2.)))) (> (* skoSC1 (* skoMC1 (* skoMC1 (* skoMC1 2.)))) (* skoMC1 (* skoMC1 (* skoMC1 (- 2.))))) (<= (* skoSC1 (* skoMC1 (- 1.))) skoMC1) (> (* skoSC1 skoMC1) (* skoMC1 (- 1.))) (<= 0. skoMC1) (> skoMC1 0.) (<= 0. skoSC1) (<= 2. skoMC1) (<= skoSC1 (/ 5. 4.)) (> (* skoMC1 (* skoMC1 (* skoMC1 2.))) 0.) (<= (* skoMC1 (* skoMC1 (* skoMC1 (- 2.)))) 0.) (> (* skoSC1 (* skoMC1 (* skoMC1 skoMC1))) (* skoMC1 (* skoMC1 (* skoMC1 (- 1.))))) (<= (* skoSC1 (* skoMC1 (* skoMC1 (* skoMC1 (- 1.))))) (* skoMC1 (* skoMC1 skoMC1)))) (succedent (> (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (- 1.)))) (* skoSC1 (* skoMC1 (* skoMC1 (* skoMC1 (- 1.))))))) 0.)))
-----[end problem]-----

-----[begin problem]-----
% In Mathematica format:
Timing[Resolve[Exists[{skoSC1,skoMC1}, And[skoSC1*(skoMC1*skoMC1*skoMC1*skoMC1*12+skoSC1*(skoMC1*skoMC1*skoMC1*(-1+skoMC1*6)+skoSC1*(skoMC1*skoMC1*skoMC1*-1+skoSC1*(skoMC1*skoMC1*skoMC1*(1/12)+skoSC1*(skoMC1*skoMC1*skoMC1*(1/12)+skoSC1*(skoMC1*skoMC1*skoMC1*(-1/360)+skoSC1*(skoMC1*skoMC1*skoMC1*(-1/360)+skoSC1*(skoMC1*skoMC1*skoMC1*(1/20160)+skoSC1*(skoMC1*skoMC1*skoMC1*(1/20160)+skoSC1*(skoMC1*skoMC1*skoMC1*(-1/1814400)+skoSC1*(skoMC1*skoMC1*skoMC1*(-1/1814400)+skoSC1*(skoMC1*skoMC1*skoMC1*(1/239500800)+skoSC1*skoMC1*skoMC1*skoMC1*(1/239500800)))))))))))))>skoMC1*skoMC1*skoMC1*(-2+skoMC1*-6),skoSC1*(skoMC1*skoMC1*skoMC1*skoMC1*-12+skoSC1*(skoMC1*skoMC1*skoMC1*(1+skoMC1*-6)+skoSC1*(skoMC1*skoMC1*skoMC1+skoSC1*(skoMC1*skoMC1*skoMC1*(-1/12)+skoSC1*skoMC1*skoMC1*skoMC1*(-1/12)))))<=skoMC1*skoMC1*skoMC1*(2+skoMC1*6),skoSC1*(skoMC1*skoMC1*skoMC1*skoMC1*12+skoSC1*(skoMC1*skoMC1*skoMC1*(-1+skoMC1*6)+skoSC1*(skoMC1*skoMC1*skoMC1*-1+skoSC1*(skoMC1*skoMC1*skoMC1*(1/12)+skoSC1*skoMC1*skoMC1*skoMC1*(1/12)))))>skoMC1*skoMC1*skoMC1*(-2+skoMC1*-6),skoSC1*skoMC1*skoMC1*skoMC1*-2<=skoMC1*skoMC1*skoMC1*2,skoSC1*skoMC1*skoMC1*skoMC1*2>skoMC1*skoMC1*skoMC1*-2,skoSC1*skoMC1*-1<=skoMC1,skoSC1*skoMC1>skoMC1*-1,0<=skoMC1,skoMC1>0,0<=skoSC1,2<=skoMC1,skoSC1<=(5/4),skoMC1*skoMC1*skoMC1*2>0,skoMC1*skoMC1*skoMC1*-2<=0,skoSC1*skoMC1*skoMC1*skoMC1>skoMC1*skoMC1*skoMC1*-1,skoSC1*skoMC1*skoMC1*skoMC1*-1<=skoMC1*skoMC1*skoMC1,skoSC1*(skoMC1*skoMC1*skoMC1*-1+skoSC1*skoMC1*skoMC1*skoMC1*-1)<=0]], Reals]]

% In QepcadB format:
(E skoSC1) (E skoMC1) [[(skoMC1 skoMC1 skoMC1 (-2+(skoMC1 (-6))))<(skoSC1 ((skoMC1 skoMC1 skoMC1 skoMC1 (12))+(skoSC1 ((skoMC1 skoMC1 skoMC1 (-1+(skoMC1 (6))))+(skoSC1 ((skoMC1 skoMC1 skoMC1 (-1))+(skoSC1 ((skoMC1 skoMC1 skoMC1 (1/12))+(skoSC1 ((skoMC1 skoMC1 skoMC1 (1/12))+(skoSC1 ((skoMC1 skoMC1 skoMC1 (-1/360))+(skoSC1 ((skoMC1 skoMC1 skoMC1 (-1/360))+(skoSC1 ((skoMC1 skoMC1 skoMC1 (1/20160))+(skoSC1 ((skoMC1 skoMC1 skoMC1 (1/20160))+(skoSC1 ((skoMC1 skoMC1 skoMC1 (-1/1814400))+(skoSC1 ((skoMC1 skoMC1 skoMC1 (-1/1814400))+(skoSC1 ((skoMC1 skoMC1 skoMC1 (1/239500800))+(skoSC1 skoMC1 skoMC1 skoMC1 (1/239500800))))))))))))))))))))))))))]/\[[(skoSC1 ((skoMC1 skoMC1 skoMC1 skoMC1 (-12))+(skoSC1 ((skoMC1 skoMC1 skoMC1 (1+(skoMC1 (-6))))+(skoSC1 ((skoMC1 skoMC1 skoMC1)+(skoSC1 ((skoMC1 skoMC1 skoMC1 (-1/12))+(skoSC1 skoMC1 skoMC1 skoMC1 (-1/12))))))))))<=(skoMC1 skoMC1 skoMC1 (2+(skoMC1 (6))))]/\[[(skoMC1 skoMC1 skoMC1 (-2+(skoMC1 (-6))))<(skoSC1 ((skoMC1 skoMC1 skoMC1 skoMC1 (12))+(skoSC1 ((skoMC1 skoMC1 skoMC1 (-1+(skoMC1 (6))))+(skoSC1 ((skoMC1 skoMC1 skoMC1 (-1))+(skoSC1 ((skoMC1 skoMC1 skoMC1 (1/12))+(skoSC1 skoMC1 skoMC1 skoMC1 (1/12))))))))))]/\[[(skoSC1 skoMC1 skoMC1 skoMC1 (-2))<=(skoMC1 skoMC1 skoMC1 (2))]/\[[(skoMC1 skoMC1 skoMC1 (-2))<(skoSC1 skoMC1 skoMC1 skoMC1 (2))]/\[[(skoSC1 skoMC1 (-1))<=skoMC1]/\[[(skoMC1 (-1))<(skoSC1 skoMC1)]/\[[0<=skoMC1]/\[[0<skoMC1]/\[[0<=skoSC1]/\[[2<=skoMC1]/\[[skoSC1<=5/4]/\[[0<(skoMC1 skoMC1 skoMC1 (2))]/\[[(skoMC1 skoMC1 skoMC1 (-2))<=0]/\[[(skoMC1 skoMC1 skoMC1 (-1))<(skoSC1 skoMC1 skoMC1 skoMC1)]/\[[(skoSC1 skoMC1 skoMC1 skoMC1 (-1))<=(skoMC1 skoMC1 skoMC1)]/\[(skoSC1 ((skoMC1 skoMC1 skoMC1 (-1))+(skoSC1 skoMC1 skoMC1 skoMC1 (-1))))<=0]]]]]]]]]]]]]]]]].

% In SMTLib2 format:
(declare-fun skoSC1 () Real) (declare-fun skoMC1 () Real) (assert (and (> (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (* skoMC1 12.)))) (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (+ (- 1.) (* skoMC1 6.))))) (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (- 1.)))) (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (/ 1. 12.)))) (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (/ 1. 12.)))) (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (/ (- 1.) 360.)))) (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (/ (- 1.) 360.)))) (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (/ 1. 20160.)))) (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (/ 1. 20160.)))) (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (/ (- 1.) 1814400.)))) (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (/ (- 1.) 1814400.)))) (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (/ 1. 239500800.)))) (* skoSC1 (* skoMC1 (* skoMC1 (* skoMC1 (/ 1. 239500800.))))))))))))))))))))))))))))) (* skoMC1 (* skoMC1 (* skoMC1 (+ (- 2.) (* skoMC1 (- 6.))))))) (and (<= (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (* skoMC1 (- 12.))))) (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (+ 1. (* skoMC1 (- 6.)))))) (* skoSC1 (+ (* skoMC1 (* skoMC1 skoMC1)) (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (/ (- 1.) 12.)))) (* skoSC1 (* skoMC1 (* skoMC1 (* skoMC1 (/ (- 1.) 12.))))))))))))) (* skoMC1 (* skoMC1 (* skoMC1 (+ 2. (* skoMC1 6.)))))) (and (> (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (* skoMC1 12.)))) (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (+ (- 1.) (* skoMC1 6.))))) (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (- 1.)))) (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (/ 1. 12.)))) (* skoSC1 (* skoMC1 (* skoMC1 (* skoMC1 (/ 1. 12.))))))))))))) (* skoMC1 (* skoMC1 (* skoMC1 (+ (- 2.) (* skoMC1 (- 6.))))))) (and (<= (* skoSC1 (* skoMC1 (* skoMC1 (* skoMC1 (- 2.))))) (* skoMC1 (* skoMC1 (* skoMC1 2.)))) (and (> (* skoSC1 (* skoMC1 (* skoMC1 (* skoMC1 2.)))) (* skoMC1 (* skoMC1 (* skoMC1 (- 2.))))) (and (<= (* skoSC1 (* skoMC1 (- 1.))) skoMC1) (and (> (* skoSC1 skoMC1) (* skoMC1 (- 1.))) (and (<= 0. skoMC1) (and (> skoMC1 0.) (and (<= 0. skoSC1) (and (<= 2. skoMC1) (and (<= skoSC1 (/ 5. 4.)) (and (> (* skoMC1 (* skoMC1 (* skoMC1 2.))) 0.) (and (<= (* skoMC1 (* skoMC1 (* skoMC1 (- 2.)))) 0.) (and (> (* skoSC1 (* skoMC1 (* skoMC1 skoMC1))) (* skoMC1 (* skoMC1 (* skoMC1 (- 1.))))) (and (<= (* skoSC1 (* skoMC1 (* skoMC1 (* skoMC1 (- 1.))))) (* skoMC1 (* skoMC1 skoMC1))) (<= (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (- 1.)))) (* skoSC1 (* skoMC1 (* skoMC1 (* skoMC1 (- 1.))))))) 0.))))))))))))))))))

% In GRF format:
(sequent " MetiTarski formula " (antecedent (> (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (* skoMC1 12.)))) (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (+ (- 1.) (* skoMC1 6.))))) (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (- 1.)))) (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (/ 1. 12.)))) (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (/ 1. 12.)))) (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (/ (- 1.) 360.)))) (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (/ (- 1.) 360.)))) (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (/ 1. 20160.)))) (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (/ 1. 20160.)))) (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (/ (- 1.) 1814400.)))) (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (/ (- 1.) 1814400.)))) (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (/ 1. 239500800.)))) (* skoSC1 (* skoMC1 (* skoMC1 (* skoMC1 (/ 1. 239500800.))))))))))))))))))))))))))))) (* skoMC1 (* skoMC1 (* skoMC1 (+ (- 2.) (* skoMC1 (- 6.))))))) (<= (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (* skoMC1 (- 12.))))) (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (+ 1. (* skoMC1 (- 6.)))))) (* skoSC1 (+ (* skoMC1 (* skoMC1 skoMC1)) (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (/ (- 1.) 12.)))) (* skoSC1 (* skoMC1 (* skoMC1 (* skoMC1 (/ (- 1.) 12.))))))))))))) (* skoMC1 (* skoMC1 (* skoMC1 (+ 2. (* skoMC1 6.)))))) (> (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (* skoMC1 12.)))) (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (+ (- 1.) (* skoMC1 6.))))) (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (- 1.)))) (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (/ 1. 12.)))) (* skoSC1 (* skoMC1 (* skoMC1 (* skoMC1 (/ 1. 12.))))))))))))) (* skoMC1 (* skoMC1 (* skoMC1 (+ (- 2.) (* skoMC1 (- 6.))))))) (<= (* skoSC1 (* skoMC1 (* skoMC1 (* skoMC1 (- 2.))))) (* skoMC1 (* skoMC1 (* skoMC1 2.)))) (> (* skoSC1 (* skoMC1 (* skoMC1 (* skoMC1 2.)))) (* skoMC1 (* skoMC1 (* skoMC1 (- 2.))))) (<= (* skoSC1 (* skoMC1 (- 1.))) skoMC1) (> (* skoSC1 skoMC1) (* skoMC1 (- 1.))) (<= 0. skoMC1) (> skoMC1 0.) (<= 0. skoSC1) (<= 2. skoMC1) (<= skoSC1 (/ 5. 4.)) (> (* skoMC1 (* skoMC1 (* skoMC1 2.))) 0.) (<= (* skoMC1 (* skoMC1 (* skoMC1 (- 2.)))) 0.) (> (* skoSC1 (* skoMC1 (* skoMC1 skoMC1))) (* skoMC1 (* skoMC1 (* skoMC1 (- 1.))))) (<= (* skoSC1 (* skoMC1 (* skoMC1 (* skoMC1 (- 1.))))) (* skoMC1 (* skoMC1 skoMC1)))) (succedent (> (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (- 1.)))) (* skoSC1 (* skoMC1 (* skoMC1 (* skoMC1 (- 1.))))))) 0.)))
-----[end problem]-----

-----[begin problem]-----
% In Mathematica format:
Timing[Resolve[Exists[{skoSC1,skoMC1}, And[skoSC1*(skoMC1*skoMC1*skoMC1*-2+skoSC1*(skoMC1*skoMC1*skoMC1+skoSC1*skoMC1*skoMC1*skoMC1))<=skoMC1*skoMC1*skoMC1*2,skoSC1*(skoMC1*skoMC1*skoMC1+skoSC1*skoMC1*skoMC1*skoMC1)<=0,skoSC1*(skoMC1*skoMC1*skoMC1*-1+skoSC1*skoMC1*skoMC1*skoMC1*-1)<=0,skoSC1*skoMC1*skoMC1*skoMC1*-1<=skoMC1*skoMC1*skoMC1,skoSC1*skoMC1*skoMC1*skoMC1>skoMC1*skoMC1*skoMC1*-1,skoMC1*skoMC1*skoMC1*-2<=0,skoMC1*skoMC1*skoMC1*2>0,skoSC1<=(5/4),2<=skoMC1,0<=skoSC1,skoMC1>0,0<=skoMC1,skoSC1*skoMC1>skoMC1*-1,skoSC1*skoMC1*-1<=skoMC1,skoSC1*skoMC1*skoMC1*skoMC1*2>skoMC1*skoMC1*skoMC1*-2,skoSC1*skoMC1*skoMC1*skoMC1*-2<=skoMC1*skoMC1*skoMC1*2,skoSC1*(skoMC1*skoMC1*skoMC1*skoMC1*12+skoSC1*(skoMC1*skoMC1*skoMC1*(-1+skoMC1*6)+skoSC1*(skoMC1*skoMC1*skoMC1*-1+skoSC1*(skoMC1*skoMC1*skoMC1*(1/12)+skoSC1*skoMC1*skoMC1*skoMC1*(1/12)))))>skoMC1*skoMC1*skoMC1*(-2+skoMC1*-6),skoSC1*(skoMC1*skoMC1*skoMC1*skoMC1*-12+skoSC1*(skoMC1*skoMC1*skoMC1*(1+skoMC1*-6)+skoSC1*(skoMC1*skoMC1*skoMC1+skoSC1*(skoMC1*skoMC1*skoMC1*(-1/12)+skoSC1*skoMC1*skoMC1*skoMC1*(-1/12)))))<=skoMC1*skoMC1*skoMC1*(2+skoMC1*6)]], Reals]]

% In QepcadB format:
(E skoSC1) (E skoMC1) [[(skoSC1 ((skoMC1 skoMC1 skoMC1 (-2))+(skoSC1 ((skoMC1 skoMC1 skoMC1)+(skoSC1 skoMC1 skoMC1 skoMC1)))))<=(skoMC1 skoMC1 skoMC1 (2))]/\[[(skoSC1 ((skoMC1 skoMC1 skoMC1)+(skoSC1 skoMC1 skoMC1 skoMC1)))<=0]/\[[(skoSC1 ((skoMC1 skoMC1 skoMC1 (-1))+(skoSC1 skoMC1 skoMC1 skoMC1 (-1))))<=0]/\[[(skoSC1 skoMC1 skoMC1 skoMC1 (-1))<=(skoMC1 skoMC1 skoMC1)]/\[[(skoMC1 skoMC1 skoMC1 (-1))<(skoSC1 skoMC1 skoMC1 skoMC1)]/\[[(skoMC1 skoMC1 skoMC1 (-2))<=0]/\[[0<(skoMC1 skoMC1 skoMC1 (2))]/\[[skoSC1<=5/4]/\[[2<=skoMC1]/\[[0<=skoSC1]/\[[0<skoMC1]/\[[0<=skoMC1]/\[[(skoMC1 (-1))<(skoSC1 skoMC1)]/\[[(skoSC1 skoMC1 (-1))<=skoMC1]/\[[(skoMC1 skoMC1 skoMC1 (-2))<(skoSC1 skoMC1 skoMC1 skoMC1 (2))]/\[[(skoSC1 skoMC1 skoMC1 skoMC1 (-2))<=(skoMC1 skoMC1 skoMC1 (2))]/\[[(skoMC1 skoMC1 skoMC1 (-2+(skoMC1 (-6))))<(skoSC1 ((skoMC1 skoMC1 skoMC1 skoMC1 (12))+(skoSC1 ((skoMC1 skoMC1 skoMC1 (-1+(skoMC1 (6))))+(skoSC1 ((skoMC1 skoMC1 skoMC1 (-1))+(skoSC1 ((skoMC1 skoMC1 skoMC1 (1/12))+(skoSC1 skoMC1 skoMC1 skoMC1 (1/12))))))))))]/\[(skoSC1 ((skoMC1 skoMC1 skoMC1 skoMC1 (-12))+(skoSC1 ((skoMC1 skoMC1 skoMC1 (1+(skoMC1 (-6))))+(skoSC1 ((skoMC1 skoMC1 skoMC1)+(skoSC1 ((skoMC1 skoMC1 skoMC1 (-1/12))+(skoSC1 skoMC1 skoMC1 skoMC1 (-1/12))))))))))<=(skoMC1 skoMC1 skoMC1 (2+(skoMC1 (6))))]]]]]]]]]]]]]]]]]].

% In SMTLib2 format:
(declare-fun skoSC1 () Real) (declare-fun skoMC1 () Real) (assert (and (<= (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (- 2.)))) (* skoSC1 (+ (* skoMC1 (* skoMC1 skoMC1)) (* skoSC1 (* skoMC1 (* skoMC1 skoMC1))))))) (* skoMC1 (* skoMC1 (* skoMC1 2.)))) (and (<= (* skoSC1 (+ (* skoMC1 (* skoMC1 skoMC1)) (* skoSC1 (* skoMC1 (* skoMC1 skoMC1))))) 0.) (and (<= (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (- 1.)))) (* skoSC1 (* skoMC1 (* skoMC1 (* skoMC1 (- 1.))))))) 0.) (and (<= (* skoSC1 (* skoMC1 (* skoMC1 (* skoMC1 (- 1.))))) (* skoMC1 (* skoMC1 skoMC1))) (and (> (* skoSC1 (* skoMC1 (* skoMC1 skoMC1))) (* skoMC1 (* skoMC1 (* skoMC1 (- 1.))))) (and (<= (* skoMC1 (* skoMC1 (* skoMC1 (- 2.)))) 0.) (and (> (* skoMC1 (* skoMC1 (* skoMC1 2.))) 0.) (and (<= skoSC1 (/ 5. 4.)) (and (<= 2. skoMC1) (and (<= 0. skoSC1) (and (> skoMC1 0.) (and (<= 0. skoMC1) (and (> (* skoSC1 skoMC1) (* skoMC1 (- 1.))) (and (<= (* skoSC1 (* skoMC1 (- 1.))) skoMC1) (and (> (* skoSC1 (* skoMC1 (* skoMC1 (* skoMC1 2.)))) (* skoMC1 (* skoMC1 (* skoMC1 (- 2.))))) (and (<= (* skoSC1 (* skoMC1 (* skoMC1 (* skoMC1 (- 2.))))) (* skoMC1 (* skoMC1 (* skoMC1 2.)))) (and (> (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (* skoMC1 12.)))) (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (+ (- 1.) (* skoMC1 6.))))) (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (- 1.)))) (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (/ 1. 12.)))) (* skoSC1 (* skoMC1 (* skoMC1 (* skoMC1 (/ 1. 12.))))))))))))) (* skoMC1 (* skoMC1 (* skoMC1 (+ (- 2.) (* skoMC1 (- 6.))))))) (<= (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (* skoMC1 (- 12.))))) (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (+ 1. (* skoMC1 (- 6.)))))) (* skoSC1 (+ (* skoMC1 (* skoMC1 skoMC1)) (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (/ (- 1.) 12.)))) (* skoSC1 (* skoMC1 (* skoMC1 (* skoMC1 (/ (- 1.) 12.))))))))))))) (* skoMC1 (* skoMC1 (* skoMC1 (+ 2. (* skoMC1 6.))))))))))))))))))))))))

% In GRF format:
(sequent " MetiTarski formula " (antecedent (<= (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (- 2.)))) (* skoSC1 (+ (* skoMC1 (* skoMC1 skoMC1)) (* skoSC1 (* skoMC1 (* skoMC1 skoMC1))))))) (* skoMC1 (* skoMC1 (* skoMC1 2.)))) (<= (* skoSC1 (+ (* skoMC1 (* skoMC1 skoMC1)) (* skoSC1 (* skoMC1 (* skoMC1 skoMC1))))) 0.) (<= (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (- 1.)))) (* skoSC1 (* skoMC1 (* skoMC1 (* skoMC1 (- 1.))))))) 0.) (<= (* skoSC1 (* skoMC1 (* skoMC1 (* skoMC1 (- 1.))))) (* skoMC1 (* skoMC1 skoMC1))) (> (* skoSC1 (* skoMC1 (* skoMC1 skoMC1))) (* skoMC1 (* skoMC1 (* skoMC1 (- 1.))))) (<= (* skoMC1 (* skoMC1 (* skoMC1 (- 2.)))) 0.) (> (* skoMC1 (* skoMC1 (* skoMC1 2.))) 0.) (<= skoSC1 (/ 5. 4.)) (<= 2. skoMC1) (<= 0. skoSC1) (> skoMC1 0.) (<= 0. skoMC1) (> (* skoSC1 skoMC1) (* skoMC1 (- 1.))) (<= (* skoSC1 (* skoMC1 (- 1.))) skoMC1) (> (* skoSC1 (* skoMC1 (* skoMC1 (* skoMC1 2.)))) (* skoMC1 (* skoMC1 (* skoMC1 (- 2.))))) (<= (* skoSC1 (* skoMC1 (* skoMC1 (* skoMC1 (- 2.))))) (* skoMC1 (* skoMC1 (* skoMC1 2.)))) (> (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (* skoMC1 12.)))) (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (+ (- 1.) (* skoMC1 6.))))) (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (- 1.)))) (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (/ 1. 12.)))) (* skoSC1 (* skoMC1 (* skoMC1 (* skoMC1 (/ 1. 12.))))))))))))) (* skoMC1 (* skoMC1 (* skoMC1 (+ (- 2.) (* skoMC1 (- 6.)))))))) (succedent (> (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (* skoMC1 (- 12.))))) (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (+ 1. (* skoMC1 (- 6.)))))) (* skoSC1 (+ (* skoMC1 (* skoMC1 skoMC1)) (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (/ (- 1.) 12.)))) (* skoSC1 (* skoMC1 (* skoMC1 (* skoMC1 (/ (- 1.) 12.))))))))))))) (* skoMC1 (* skoMC1 (* skoMC1 (+ 2. (* skoMC1 6.))))))))
-----[end problem]-----

-----[begin problem]-----
% In Mathematica format:
Timing[Resolve[Exists[{skoSC1,skoMC1}, And[skoSC1*(skoMC1*skoMC1*skoMC1*-2+skoSC1*(skoMC1*skoMC1*skoMC1+skoSC1*skoMC1*skoMC1*skoMC1))>skoMC1*skoMC1*skoMC1*2,skoSC1*(skoMC1*skoMC1*skoMC1+skoSC1*skoMC1*skoMC1*skoMC1)>0,skoSC1*(skoMC1*skoMC1*skoMC1*-1+skoSC1*skoMC1*skoMC1*skoMC1*-1)<=0,skoSC1*skoMC1*skoMC1*skoMC1*-1<=skoMC1*skoMC1*skoMC1,skoSC1*skoMC1*skoMC1*skoMC1>skoMC1*skoMC1*skoMC1*-1,skoMC1*skoMC1*skoMC1*-2<=0,skoMC1*skoMC1*skoMC1*2>0,skoSC1<=(5/4),2<=skoMC1,0<=skoSC1,skoMC1>0,0<=skoMC1,skoSC1*skoMC1>skoMC1*-1,skoSC1*skoMC1*-1<=skoMC1,skoSC1*skoMC1*skoMC1*skoMC1*2>skoMC1*skoMC1*skoMC1*-2,skoSC1*skoMC1*skoMC1*skoMC1*-2<=skoMC1*skoMC1*skoMC1*2,skoSC1*(skoMC1*skoMC1*skoMC1*skoMC1*12+skoSC1*(skoMC1*skoMC1*skoMC1*(-1+skoMC1*6)+skoSC1*(skoMC1*skoMC1*skoMC1*-1+skoSC1*(skoMC1*skoMC1*skoMC1*(1/12)+skoSC1*skoMC1*skoMC1*skoMC1*(1/12)))))>skoMC1*skoMC1*skoMC1*(-2+skoMC1*-6),skoSC1*(skoMC1*skoMC1*skoMC1*skoMC1*-12+skoSC1*(skoMC1*skoMC1*skoMC1*(1+skoMC1*-6)+skoSC1*(skoMC1*skoMC1*skoMC1+skoSC1*(skoMC1*skoMC1*skoMC1*(-1/12)+skoSC1*skoMC1*skoMC1*skoMC1*(-1/12)))))<=skoMC1*skoMC1*skoMC1*(2+skoMC1*6)]], Reals]]

% In QepcadB format:
(E skoSC1) (E skoMC1) [[(skoMC1 skoMC1 skoMC1 (2))<(skoSC1 ((skoMC1 skoMC1 skoMC1 (-2))+(skoSC1 ((skoMC1 skoMC1 skoMC1)+(skoSC1 skoMC1 skoMC1 skoMC1)))))]/\[[0<(skoSC1 ((skoMC1 skoMC1 skoMC1)+(skoSC1 skoMC1 skoMC1 skoMC1)))]/\[[(skoSC1 ((skoMC1 skoMC1 skoMC1 (-1))+(skoSC1 skoMC1 skoMC1 skoMC1 (-1))))<=0]/\[[(skoSC1 skoMC1 skoMC1 skoMC1 (-1))<=(skoMC1 skoMC1 skoMC1)]/\[[(skoMC1 skoMC1 skoMC1 (-1))<(skoSC1 skoMC1 skoMC1 skoMC1)]/\[[(skoMC1 skoMC1 skoMC1 (-2))<=0]/\[[0<(skoMC1 skoMC1 skoMC1 (2))]/\[[skoSC1<=5/4]/\[[2<=skoMC1]/\[[0<=skoSC1]/\[[0<skoMC1]/\[[0<=skoMC1]/\[[(skoMC1 (-1))<(skoSC1 skoMC1)]/\[[(skoSC1 skoMC1 (-1))<=skoMC1]/\[[(skoMC1 skoMC1 skoMC1 (-2))<(skoSC1 skoMC1 skoMC1 skoMC1 (2))]/\[[(skoSC1 skoMC1 skoMC1 skoMC1 (-2))<=(skoMC1 skoMC1 skoMC1 (2))]/\[[(skoMC1 skoMC1 skoMC1 (-2+(skoMC1 (-6))))<(skoSC1 ((skoMC1 skoMC1 skoMC1 skoMC1 (12))+(skoSC1 ((skoMC1 skoMC1 skoMC1 (-1+(skoMC1 (6))))+(skoSC1 ((skoMC1 skoMC1 skoMC1 (-1))+(skoSC1 ((skoMC1 skoMC1 skoMC1 (1/12))+(skoSC1 skoMC1 skoMC1 skoMC1 (1/12))))))))))]/\[(skoSC1 ((skoMC1 skoMC1 skoMC1 skoMC1 (-12))+(skoSC1 ((skoMC1 skoMC1 skoMC1 (1+(skoMC1 (-6))))+(skoSC1 ((skoMC1 skoMC1 skoMC1)+(skoSC1 ((skoMC1 skoMC1 skoMC1 (-1/12))+(skoSC1 skoMC1 skoMC1 skoMC1 (-1/12))))))))))<=(skoMC1 skoMC1 skoMC1 (2+(skoMC1 (6))))]]]]]]]]]]]]]]]]]].

% In SMTLib2 format:
(declare-fun skoSC1 () Real) (declare-fun skoMC1 () Real) (assert (and (> (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (- 2.)))) (* skoSC1 (+ (* skoMC1 (* skoMC1 skoMC1)) (* skoSC1 (* skoMC1 (* skoMC1 skoMC1))))))) (* skoMC1 (* skoMC1 (* skoMC1 2.)))) (and (> (* skoSC1 (+ (* skoMC1 (* skoMC1 skoMC1)) (* skoSC1 (* skoMC1 (* skoMC1 skoMC1))))) 0.) (and (<= (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (- 1.)))) (* skoSC1 (* skoMC1 (* skoMC1 (* skoMC1 (- 1.))))))) 0.) (and (<= (* skoSC1 (* skoMC1 (* skoMC1 (* skoMC1 (- 1.))))) (* skoMC1 (* skoMC1 skoMC1))) (and (> (* skoSC1 (* skoMC1 (* skoMC1 skoMC1))) (* skoMC1 (* skoMC1 (* skoMC1 (- 1.))))) (and (<= (* skoMC1 (* skoMC1 (* skoMC1 (- 2.)))) 0.) (and (> (* skoMC1 (* skoMC1 (* skoMC1 2.))) 0.) (and (<= skoSC1 (/ 5. 4.)) (and (<= 2. skoMC1) (and (<= 0. skoSC1) (and (> skoMC1 0.) (and (<= 0. skoMC1) (and (> (* skoSC1 skoMC1) (* skoMC1 (- 1.))) (and (<= (* skoSC1 (* skoMC1 (- 1.))) skoMC1) (and (> (* skoSC1 (* skoMC1 (* skoMC1 (* skoMC1 2.)))) (* skoMC1 (* skoMC1 (* skoMC1 (- 2.))))) (and (<= (* skoSC1 (* skoMC1 (* skoMC1 (* skoMC1 (- 2.))))) (* skoMC1 (* skoMC1 (* skoMC1 2.)))) (and (> (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (* skoMC1 12.)))) (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (+ (- 1.) (* skoMC1 6.))))) (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (- 1.)))) (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (/ 1. 12.)))) (* skoSC1 (* skoMC1 (* skoMC1 (* skoMC1 (/ 1. 12.))))))))))))) (* skoMC1 (* skoMC1 (* skoMC1 (+ (- 2.) (* skoMC1 (- 6.))))))) (<= (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (* skoMC1 (- 12.))))) (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (+ 1. (* skoMC1 (- 6.)))))) (* skoSC1 (+ (* skoMC1 (* skoMC1 skoMC1)) (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (/ (- 1.) 12.)))) (* skoSC1 (* skoMC1 (* skoMC1 (* skoMC1 (/ (- 1.) 12.))))))))))))) (* skoMC1 (* skoMC1 (* skoMC1 (+ 2. (* skoMC1 6.))))))))))))))))))))))))

% In GRF format:
(sequent " MetiTarski formula " (antecedent (> (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (- 2.)))) (* skoSC1 (+ (* skoMC1 (* skoMC1 skoMC1)) (* skoSC1 (* skoMC1 (* skoMC1 skoMC1))))))) (* skoMC1 (* skoMC1 (* skoMC1 2.)))) (> (* skoSC1 (+ (* skoMC1 (* skoMC1 skoMC1)) (* skoSC1 (* skoMC1 (* skoMC1 skoMC1))))) 0.) (<= (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (- 1.)))) (* skoSC1 (* skoMC1 (* skoMC1 (* skoMC1 (- 1.))))))) 0.) (<= (* skoSC1 (* skoMC1 (* skoMC1 (* skoMC1 (- 1.))))) (* skoMC1 (* skoMC1 skoMC1))) (> (* skoSC1 (* skoMC1 (* skoMC1 skoMC1))) (* skoMC1 (* skoMC1 (* skoMC1 (- 1.))))) (<= (* skoMC1 (* skoMC1 (* skoMC1 (- 2.)))) 0.) (> (* skoMC1 (* skoMC1 (* skoMC1 2.))) 0.) (<= skoSC1 (/ 5. 4.)) (<= 2. skoMC1) (<= 0. skoSC1) (> skoMC1 0.) (<= 0. skoMC1) (> (* skoSC1 skoMC1) (* skoMC1 (- 1.))) (<= (* skoSC1 (* skoMC1 (- 1.))) skoMC1) (> (* skoSC1 (* skoMC1 (* skoMC1 (* skoMC1 2.)))) (* skoMC1 (* skoMC1 (* skoMC1 (- 2.))))) (<= (* skoSC1 (* skoMC1 (* skoMC1 (* skoMC1 (- 2.))))) (* skoMC1 (* skoMC1 (* skoMC1 2.)))) (> (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (* skoMC1 12.)))) (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (+ (- 1.) (* skoMC1 6.))))) (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (- 1.)))) (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (/ 1. 12.)))) (* skoSC1 (* skoMC1 (* skoMC1 (* skoMC1 (/ 1. 12.))))))))))))) (* skoMC1 (* skoMC1 (* skoMC1 (+ (- 2.) (* skoMC1 (- 6.)))))))) (succedent (> (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (* skoMC1 (- 12.))))) (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (+ 1. (* skoMC1 (- 6.)))))) (* skoSC1 (+ (* skoMC1 (* skoMC1 skoMC1)) (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (/ (- 1.) 12.)))) (* skoSC1 (* skoMC1 (* skoMC1 (* skoMC1 (/ (- 1.) 12.))))))))))))) (* skoMC1 (* skoMC1 (* skoMC1 (+ 2. (* skoMC1 6.))))))))
-----[end problem]-----

-----[begin problem]-----
% In Mathematica format:
Timing[Resolve[Exists[{skoSC1,skoMC1}, And[skoSC1*(skoMC1*skoMC1*skoMC1*2+skoSC1*(skoMC1*skoMC1*skoMC1*-1+skoSC1*skoMC1*skoMC1*skoMC1*-1))<=skoMC1*skoMC1*skoMC1*-2,skoSC1*(skoMC1*skoMC1*skoMC1+skoSC1*skoMC1*skoMC1*skoMC1)<=0,skoSC1*(skoMC1*skoMC1*skoMC1*-1+skoSC1*skoMC1*skoMC1*skoMC1*-1)<=0,skoSC1*skoMC1*skoMC1*skoMC1*-1<=skoMC1*skoMC1*skoMC1,skoSC1*skoMC1*skoMC1*skoMC1>skoMC1*skoMC1*skoMC1*-1,skoMC1*skoMC1*skoMC1*-2<=0,skoMC1*skoMC1*skoMC1*2>0,skoSC1<=(5/4),2<=skoMC1,0<=skoSC1,skoMC1>0,0<=skoMC1,skoSC1*skoMC1>skoMC1*-1,skoSC1*skoMC1*-1<=skoMC1,skoSC1*skoMC1*skoMC1*skoMC1*2>skoMC1*skoMC1*skoMC1*-2,skoSC1*skoMC1*skoMC1*skoMC1*-2<=skoMC1*skoMC1*skoMC1*2,skoSC1*(skoMC1*skoMC1*skoMC1*skoMC1*12+skoSC1*(skoMC1*skoMC1*skoMC1*(-1+skoMC1*6)+skoSC1*(skoMC1*skoMC1*skoMC1*-1+skoSC1*(skoMC1*skoMC1*skoMC1*(1/12)+skoSC1*skoMC1*skoMC1*skoMC1*(1/12)))))>skoMC1*skoMC1*skoMC1*(-2+skoMC1*-6),skoSC1*(skoMC1*skoMC1*skoMC1*skoMC1*-12+skoSC1*(skoMC1*skoMC1*skoMC1*(1+skoMC1*-6)+skoSC1*(skoMC1*skoMC1*skoMC1+skoSC1*(skoMC1*skoMC1*skoMC1*(-1/12)+skoSC1*skoMC1*skoMC1*skoMC1*(-1/12)))))<=skoMC1*skoMC1*skoMC1*(2+skoMC1*6)]], Reals]]

% In QepcadB format:
(E skoSC1) (E skoMC1) [[(skoSC1 ((skoMC1 skoMC1 skoMC1 (2))+(skoSC1 ((skoMC1 skoMC1 skoMC1 (-1))+(skoSC1 skoMC1 skoMC1 skoMC1 (-1))))))<=(skoMC1 skoMC1 skoMC1 (-2))]/\[[(skoSC1 ((skoMC1 skoMC1 skoMC1)+(skoSC1 skoMC1 skoMC1 skoMC1)))<=0]/\[[(skoSC1 ((skoMC1 skoMC1 skoMC1 (-1))+(skoSC1 skoMC1 skoMC1 skoMC1 (-1))))<=0]/\[[(skoSC1 skoMC1 skoMC1 skoMC1 (-1))<=(skoMC1 skoMC1 skoMC1)]/\[[(skoMC1 skoMC1 skoMC1 (-1))<(skoSC1 skoMC1 skoMC1 skoMC1)]/\[[(skoMC1 skoMC1 skoMC1 (-2))<=0]/\[[0<(skoMC1 skoMC1 skoMC1 (2))]/\[[skoSC1<=5/4]/\[[2<=skoMC1]/\[[0<=skoSC1]/\[[0<skoMC1]/\[[0<=skoMC1]/\[[(skoMC1 (-1))<(skoSC1 skoMC1)]/\[[(skoSC1 skoMC1 (-1))<=skoMC1]/\[[(skoMC1 skoMC1 skoMC1 (-2))<(skoSC1 skoMC1 skoMC1 skoMC1 (2))]/\[[(skoSC1 skoMC1 skoMC1 skoMC1 (-2))<=(skoMC1 skoMC1 skoMC1 (2))]/\[[(skoMC1 skoMC1 skoMC1 (-2+(skoMC1 (-6))))<(skoSC1 ((skoMC1 skoMC1 skoMC1 skoMC1 (12))+(skoSC1 ((skoMC1 skoMC1 skoMC1 (-1+(skoMC1 (6))))+(skoSC1 ((skoMC1 skoMC1 skoMC1 (-1))+(skoSC1 ((skoMC1 skoMC1 skoMC1 (1/12))+(skoSC1 skoMC1 skoMC1 skoMC1 (1/12))))))))))]/\[(skoSC1 ((skoMC1 skoMC1 skoMC1 skoMC1 (-12))+(skoSC1 ((skoMC1 skoMC1 skoMC1 (1+(skoMC1 (-6))))+(skoSC1 ((skoMC1 skoMC1 skoMC1)+(skoSC1 ((skoMC1 skoMC1 skoMC1 (-1/12))+(skoSC1 skoMC1 skoMC1 skoMC1 (-1/12))))))))))<=(skoMC1 skoMC1 skoMC1 (2+(skoMC1 (6))))]]]]]]]]]]]]]]]]]].

% In SMTLib2 format:
(declare-fun skoSC1 () Real) (declare-fun skoMC1 () Real) (assert (and (<= (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 2.))) (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (- 1.)))) (* skoSC1 (* skoMC1 (* skoMC1 (* skoMC1 (- 1.))))))))) (* skoMC1 (* skoMC1 (* skoMC1 (- 2.))))) (and (<= (* skoSC1 (+ (* skoMC1 (* skoMC1 skoMC1)) (* skoSC1 (* skoMC1 (* skoMC1 skoMC1))))) 0.) (and (<= (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (- 1.)))) (* skoSC1 (* skoMC1 (* skoMC1 (* skoMC1 (- 1.))))))) 0.) (and (<= (* skoSC1 (* skoMC1 (* skoMC1 (* skoMC1 (- 1.))))) (* skoMC1 (* skoMC1 skoMC1))) (and (> (* skoSC1 (* skoMC1 (* skoMC1 skoMC1))) (* skoMC1 (* skoMC1 (* skoMC1 (- 1.))))) (and (<= (* skoMC1 (* skoMC1 (* skoMC1 (- 2.)))) 0.) (and (> (* skoMC1 (* skoMC1 (* skoMC1 2.))) 0.) (and (<= skoSC1 (/ 5. 4.)) (and (<= 2. skoMC1) (and (<= 0. skoSC1) (and (> skoMC1 0.) (and (<= 0. skoMC1) (and (> (* skoSC1 skoMC1) (* skoMC1 (- 1.))) (and (<= (* skoSC1 (* skoMC1 (- 1.))) skoMC1) (and (> (* skoSC1 (* skoMC1 (* skoMC1 (* skoMC1 2.)))) (* skoMC1 (* skoMC1 (* skoMC1 (- 2.))))) (and (<= (* skoSC1 (* skoMC1 (* skoMC1 (* skoMC1 (- 2.))))) (* skoMC1 (* skoMC1 (* skoMC1 2.)))) (and (> (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (* skoMC1 12.)))) (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (+ (- 1.) (* skoMC1 6.))))) (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (- 1.)))) (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (/ 1. 12.)))) (* skoSC1 (* skoMC1 (* skoMC1 (* skoMC1 (/ 1. 12.))))))))))))) (* skoMC1 (* skoMC1 (* skoMC1 (+ (- 2.) (* skoMC1 (- 6.))))))) (<= (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (* skoMC1 (- 12.))))) (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (+ 1. (* skoMC1 (- 6.)))))) (* skoSC1 (+ (* skoMC1 (* skoMC1 skoMC1)) (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (/ (- 1.) 12.)))) (* skoSC1 (* skoMC1 (* skoMC1 (* skoMC1 (/ (- 1.) 12.))))))))))))) (* skoMC1 (* skoMC1 (* skoMC1 (+ 2. (* skoMC1 6.))))))))))))))))))))))))

% In GRF format:
(sequent " MetiTarski formula " (antecedent (<= (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 2.))) (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (- 1.)))) (* skoSC1 (* skoMC1 (* skoMC1 (* skoMC1 (- 1.))))))))) (* skoMC1 (* skoMC1 (* skoMC1 (- 2.))))) (<= (* skoSC1 (+ (* skoMC1 (* skoMC1 skoMC1)) (* skoSC1 (* skoMC1 (* skoMC1 skoMC1))))) 0.) (<= (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (- 1.)))) (* skoSC1 (* skoMC1 (* skoMC1 (* skoMC1 (- 1.))))))) 0.) (<= (* skoSC1 (* skoMC1 (* skoMC1 (* skoMC1 (- 1.))))) (* skoMC1 (* skoMC1 skoMC1))) (> (* skoSC1 (* skoMC1 (* skoMC1 skoMC1))) (* skoMC1 (* skoMC1 (* skoMC1 (- 1.))))) (<= (* skoMC1 (* skoMC1 (* skoMC1 (- 2.)))) 0.) (> (* skoMC1 (* skoMC1 (* skoMC1 2.))) 0.) (<= skoSC1 (/ 5. 4.)) (<= 2. skoMC1) (<= 0. skoSC1) (> skoMC1 0.) (<= 0. skoMC1) (> (* skoSC1 skoMC1) (* skoMC1 (- 1.))) (<= (* skoSC1 (* skoMC1 (- 1.))) skoMC1) (> (* skoSC1 (* skoMC1 (* skoMC1 (* skoMC1 2.)))) (* skoMC1 (* skoMC1 (* skoMC1 (- 2.))))) (<= (* skoSC1 (* skoMC1 (* skoMC1 (* skoMC1 (- 2.))))) (* skoMC1 (* skoMC1 (* skoMC1 2.)))) (> (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (* skoMC1 12.)))) (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (+ (- 1.) (* skoMC1 6.))))) (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (- 1.)))) (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (/ 1. 12.)))) (* skoSC1 (* skoMC1 (* skoMC1 (* skoMC1 (/ 1. 12.))))))))))))) (* skoMC1 (* skoMC1 (* skoMC1 (+ (- 2.) (* skoMC1 (- 6.)))))))) (succedent (> (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (* skoMC1 (- 12.))))) (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (+ 1. (* skoMC1 (- 6.)))))) (* skoSC1 (+ (* skoMC1 (* skoMC1 skoMC1)) (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (/ (- 1.) 12.)))) (* skoSC1 (* skoMC1 (* skoMC1 (* skoMC1 (/ (- 1.) 12.))))))))))))) (* skoMC1 (* skoMC1 (* skoMC1 (+ 2. (* skoMC1 6.))))))))
-----[end problem]-----

-----[begin problem]-----
% In Mathematica format:
Timing[Resolve[Exists[{skoMC1,skoSC1}, And[skoSC1*(skoMC1*skoMC1*skoMC1*-2+skoSC1*(skoMC1*skoMC1*skoMC1+skoSC1*skoMC1*skoMC1*skoMC1))<=skoMC1*skoMC1*skoMC1*2,skoSC1*(skoMC1*skoMC1*skoMC1*2+skoSC1*(skoMC1*skoMC1*skoMC1*-1+skoSC1*skoMC1*skoMC1*skoMC1*-1))<=skoMC1*skoMC1*skoMC1*-2,skoSC1*(skoMC1*skoMC1*skoMC1*(-2+skoMC1*(7+skoMC1*6))+skoSC1*(skoMC1*skoMC1*skoMC1*skoMC1*skoMC1*6+skoSC1*(skoMC1*skoMC1*skoMC1*(1+skoMC1*(-3+skoMC1*2))+skoSC1*skoMC1*skoMC1*skoMC1*skoMC1*-2)))<=skoMC1*skoMC1*skoMC1*skoMC1*(-6+skoMC1*-2),skoSC1*(skoMC1*skoMC1*skoMC1+skoSC1*skoMC1*skoMC1*skoMC1)<=0,skoSC1*(skoMC1*skoMC1*skoMC1*-1+skoSC1*skoMC1*skoMC1*skoMC1*-1)<=0,skoSC1*skoMC1*skoMC1*skoMC1*-1<=skoMC1*skoMC1*skoMC1,skoSC1*skoMC1*skoMC1*skoMC1>skoMC1*skoMC1*skoMC1*-1,skoMC1*skoMC1*skoMC1*-2<=0,skoMC1*skoMC1*skoMC1*2>0,skoSC1<=(5/4),2<=skoMC1,0<=skoSC1,skoMC1>0,0<=skoMC1,skoSC1*skoMC1>skoMC1*-1,skoSC1*skoMC1*-1<=skoMC1,skoSC1*skoMC1*skoMC1*skoMC1*2>skoMC1*skoMC1*skoMC1*-2,skoSC1*skoMC1*skoMC1*skoMC1*-2<=skoMC1*skoMC1*skoMC1*2,skoSC1*(skoMC1*skoMC1*skoMC1*skoMC1*12+skoSC1*(skoMC1*skoMC1*skoMC1*(-1+skoMC1*6)+skoSC1*(skoMC1*skoMC1*skoMC1*-1+skoSC1*(skoMC1*skoMC1*skoMC1*(1/12)+skoSC1*skoMC1*skoMC1*skoMC1*(1/12)))))>skoMC1*skoMC1*skoMC1*(-2+skoMC1*-6),skoSC1*(skoMC1*skoMC1*skoMC1*skoMC1*-12+skoSC1*(skoMC1*skoMC1*skoMC1*(1+skoMC1*-6)+skoSC1*(skoMC1*skoMC1*skoMC1+skoSC1*(skoMC1*skoMC1*skoMC1*(-1/12)+skoSC1*skoMC1*skoMC1*skoMC1*(-1/12)))))<=skoMC1*skoMC1*skoMC1*(2+skoMC1*6)]], Reals]]

% In QepcadB format:
(E skoMC1) (E skoSC1) [[(skoSC1 ((skoMC1 skoMC1 skoMC1 (-2))+(skoSC1 ((skoMC1 skoMC1 skoMC1)+(skoSC1 skoMC1 skoMC1 skoMC1)))))<=(skoMC1 skoMC1 skoMC1 (2))]/\[[(skoSC1 ((skoMC1 skoMC1 skoMC1 (2))+(skoSC1 ((skoMC1 skoMC1 skoMC1 (-1))+(skoSC1 skoMC1 skoMC1 skoMC1 (-1))))))<=(skoMC1 skoMC1 skoMC1 (-2))]/\[[(skoSC1 ((skoMC1 skoMC1 skoMC1 (-2+(skoMC1 (7+(skoMC1 (6))))))+(skoSC1 ((skoMC1 skoMC1 skoMC1 skoMC1 skoMC1 (6))+(skoSC1 ((skoMC1 skoMC1 skoMC1 (1+(skoMC1 (-3+(skoMC1 (2))))))+(skoSC1 skoMC1 skoMC1 skoMC1 skoMC1 (-2))))))))<=(skoMC1 skoMC1 skoMC1 skoMC1 (-6+(skoMC1 (-2))))]/\[[(skoSC1 ((skoMC1 skoMC1 skoMC1)+(skoSC1 skoMC1 skoMC1 skoMC1)))<=0]/\[[(skoSC1 ((skoMC1 skoMC1 skoMC1 (-1))+(skoSC1 skoMC1 skoMC1 skoMC1 (-1))))<=0]/\[[(skoSC1 skoMC1 skoMC1 skoMC1 (-1))<=(skoMC1 skoMC1 skoMC1)]/\[[(skoMC1 skoMC1 skoMC1 (-1))<(skoSC1 skoMC1 skoMC1 skoMC1)]/\[[(skoMC1 skoMC1 skoMC1 (-2))<=0]/\[[0<(skoMC1 skoMC1 skoMC1 (2))]/\[[skoSC1<=5/4]/\[[2<=skoMC1]/\[[0<=skoSC1]/\[[0<skoMC1]/\[[0<=skoMC1]/\[[(skoMC1 (-1))<(skoSC1 skoMC1)]/\[[(skoSC1 skoMC1 (-1))<=skoMC1]/\[[(skoMC1 skoMC1 skoMC1 (-2))<(skoSC1 skoMC1 skoMC1 skoMC1 (2))]/\[[(skoSC1 skoMC1 skoMC1 skoMC1 (-2))<=(skoMC1 skoMC1 skoMC1 (2))]/\[[(skoMC1 skoMC1 skoMC1 (-2+(skoMC1 (-6))))<(skoSC1 ((skoMC1 skoMC1 skoMC1 skoMC1 (12))+(skoSC1 ((skoMC1 skoMC1 skoMC1 (-1+(skoMC1 (6))))+(skoSC1 ((skoMC1 skoMC1 skoMC1 (-1))+(skoSC1 ((skoMC1 skoMC1 skoMC1 (1/12))+(skoSC1 skoMC1 skoMC1 skoMC1 (1/12))))))))))]/\[(skoSC1 ((skoMC1 skoMC1 skoMC1 skoMC1 (-12))+(skoSC1 ((skoMC1 skoMC1 skoMC1 (1+(skoMC1 (-6))))+(skoSC1 ((skoMC1 skoMC1 skoMC1)+(skoSC1 ((skoMC1 skoMC1 skoMC1 (-1/12))+(skoSC1 skoMC1 skoMC1 skoMC1 (-1/12))))))))))<=(skoMC1 skoMC1 skoMC1 (2+(skoMC1 (6))))]]]]]]]]]]]]]]]]]]]].

% In SMTLib2 format:
(declare-fun skoMC1 () Real) (declare-fun skoSC1 () Real) (assert (and (<= (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (- 2.)))) (* skoSC1 (+ (* skoMC1 (* skoMC1 skoMC1)) (* skoSC1 (* skoMC1 (* skoMC1 skoMC1))))))) (* skoMC1 (* skoMC1 (* skoMC1 2.)))) (and (<= (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 2.))) (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (- 1.)))) (* skoSC1 (* skoMC1 (* skoMC1 (* skoMC1 (- 1.))))))))) (* skoMC1 (* skoMC1 (* skoMC1 (- 2.))))) (and (<= (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (+ (- 2.) (* skoMC1 (+ 7. (* skoMC1 6.))))))) (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (* skoMC1 (* skoMC1 6.))))) (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (+ 1. (* skoMC1 (+ (- 3.) (* skoMC1 2.))))))) (* skoSC1 (* skoMC1 (* skoMC1 (* skoMC1 (* skoMC1 (- 2.)))))))))))) (* skoMC1 (* skoMC1 (* skoMC1 (* skoMC1 (+ (- 6.) (* skoMC1 (- 2.)))))))) (and (<= (* skoSC1 (+ (* skoMC1 (* skoMC1 skoMC1)) (* skoSC1 (* skoMC1 (* skoMC1 skoMC1))))) 0.) (and (<= (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (- 1.)))) (* skoSC1 (* skoMC1 (* skoMC1 (* skoMC1 (- 1.))))))) 0.) (and (<= (* skoSC1 (* skoMC1 (* skoMC1 (* skoMC1 (- 1.))))) (* skoMC1 (* skoMC1 skoMC1))) (and (> (* skoSC1 (* skoMC1 (* skoMC1 skoMC1))) (* skoMC1 (* skoMC1 (* skoMC1 (- 1.))))) (and (<= (* skoMC1 (* skoMC1 (* skoMC1 (- 2.)))) 0.) (and (> (* skoMC1 (* skoMC1 (* skoMC1 2.))) 0.) (and (<= skoSC1 (/ 5. 4.)) (and (<= 2. skoMC1) (and (<= 0. skoSC1) (and (> skoMC1 0.) (and (<= 0. skoMC1) (and (> (* skoSC1 skoMC1) (* skoMC1 (- 1.))) (and (<= (* skoSC1 (* skoMC1 (- 1.))) skoMC1) (and (> (* skoSC1 (* skoMC1 (* skoMC1 (* skoMC1 2.)))) (* skoMC1 (* skoMC1 (* skoMC1 (- 2.))))) (and (<= (* skoSC1 (* skoMC1 (* skoMC1 (* skoMC1 (- 2.))))) (* skoMC1 (* skoMC1 (* skoMC1 2.)))) (and (> (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (* skoMC1 12.)))) (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (+ (- 1.) (* skoMC1 6.))))) (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (- 1.)))) (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (/ 1. 12.)))) (* skoSC1 (* skoMC1 (* skoMC1 (* skoMC1 (/ 1. 12.))))))))))))) (* skoMC1 (* skoMC1 (* skoMC1 (+ (- 2.) (* skoMC1 (- 6.))))))) (<= (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (* skoMC1 (- 12.))))) (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (+ 1. (* skoMC1 (- 6.)))))) (* skoSC1 (+ (* skoMC1 (* skoMC1 skoMC1)) (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (/ (- 1.) 12.)))) (* skoSC1 (* skoMC1 (* skoMC1 (* skoMC1 (/ (- 1.) 12.))))))))))))) (* skoMC1 (* skoMC1 (* skoMC1 (+ 2. (* skoMC1 6.))))))))))))))))))))))))))

% In GRF format:
(sequent " MetiTarski formula " (antecedent (<= (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (- 2.)))) (* skoSC1 (+ (* skoMC1 (* skoMC1 skoMC1)) (* skoSC1 (* skoMC1 (* skoMC1 skoMC1))))))) (* skoMC1 (* skoMC1 (* skoMC1 2.)))) (<= (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 2.))) (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (- 1.)))) (* skoSC1 (* skoMC1 (* skoMC1 (* skoMC1 (- 1.))))))))) (* skoMC1 (* skoMC1 (* skoMC1 (- 2.))))) (<= (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (+ (- 2.) (* skoMC1 (+ 7. (* skoMC1 6.))))))) (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (* skoMC1 (* skoMC1 6.))))) (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (+ 1. (* skoMC1 (+ (- 3.) (* skoMC1 2.))))))) (* skoSC1 (* skoMC1 (* skoMC1 (* skoMC1 (* skoMC1 (- 2.)))))))))))) (* skoMC1 (* skoMC1 (* skoMC1 (* skoMC1 (+ (- 6.) (* skoMC1 (- 2.)))))))) (<= (* skoSC1 (+ (* skoMC1 (* skoMC1 skoMC1)) (* skoSC1 (* skoMC1 (* skoMC1 skoMC1))))) 0.) (<= (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (- 1.)))) (* skoSC1 (* skoMC1 (* skoMC1 (* skoMC1 (- 1.))))))) 0.) (<= (* skoSC1 (* skoMC1 (* skoMC1 (* skoMC1 (- 1.))))) (* skoMC1 (* skoMC1 skoMC1))) (> (* skoSC1 (* skoMC1 (* skoMC1 skoMC1))) (* skoMC1 (* skoMC1 (* skoMC1 (- 1.))))) (<= (* skoMC1 (* skoMC1 (* skoMC1 (- 2.)))) 0.) (> (* skoMC1 (* skoMC1 (* skoMC1 2.))) 0.) (<= skoSC1 (/ 5. 4.)) (<= 2. skoMC1) (<= 0. skoSC1) (> skoMC1 0.) (<= 0. skoMC1) (> (* skoSC1 skoMC1) (* skoMC1 (- 1.))) (<= (* skoSC1 (* skoMC1 (- 1.))) skoMC1) (> (* skoSC1 (* skoMC1 (* skoMC1 (* skoMC1 2.)))) (* skoMC1 (* skoMC1 (* skoMC1 (- 2.))))) (<= (* skoSC1 (* skoMC1 (* skoMC1 (* skoMC1 (- 2.))))) (* skoMC1 (* skoMC1 (* skoMC1 2.)))) (> (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (* skoMC1 12.)))) (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (+ (- 1.) (* skoMC1 6.))))) (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (- 1.)))) (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (/ 1. 12.)))) (* skoSC1 (* skoMC1 (* skoMC1 (* skoMC1 (/ 1. 12.))))))))))))) (* skoMC1 (* skoMC1 (* skoMC1 (+ (- 2.) (* skoMC1 (- 6.)))))))) (succedent (> (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (* skoMC1 (- 12.))))) (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (+ 1. (* skoMC1 (- 6.)))))) (* skoSC1 (+ (* skoMC1 (* skoMC1 skoMC1)) (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (/ (- 1.) 12.)))) (* skoSC1 (* skoMC1 (* skoMC1 (* skoMC1 (/ (- 1.) 12.))))))))))))) (* skoMC1 (* skoMC1 (* skoMC1 (+ 2. (* skoMC1 6.))))))))
-----[end problem]-----

-----[begin problem]-----
% In Mathematica format:
Timing[Resolve[Exists[{skoSC1,skoMC1}, And[skoSC1*(skoMC1*skoMC1*skoMC1*-2+skoSC1*(skoMC1*skoMC1*skoMC1+skoSC1*skoMC1*skoMC1*skoMC1))<=skoMC1*skoMC1*skoMC1*2,skoSC1*(skoMC1*skoMC1*skoMC1+skoSC1*skoMC1*skoMC1*skoMC1)<=0,skoSC1*(skoMC1*skoMC1*skoMC1*2+skoSC1*(skoMC1*skoMC1*skoMC1*-1+skoSC1*skoMC1*skoMC1*skoMC1*-1))>skoMC1*skoMC1*skoMC1*-2,skoSC1*(skoMC1*skoMC1*skoMC1*-1+skoSC1*skoMC1*skoMC1*skoMC1*-1)<=0,skoSC1*skoMC1*skoMC1*skoMC1*-1<=skoMC1*skoMC1*skoMC1,skoSC1*skoMC1*skoMC1*skoMC1>skoMC1*skoMC1*skoMC1*-1,skoMC1*skoMC1*skoMC1*-2<=0,skoMC1*skoMC1*skoMC1*2>0,skoSC1<=(5/4),2<=skoMC1,0<=skoSC1,skoMC1>0,0<=skoMC1,skoSC1*skoMC1>skoMC1*-1,skoSC1*skoMC1*-1<=skoMC1,skoSC1*skoMC1*skoMC1*skoMC1*2>skoMC1*skoMC1*skoMC1*-2,skoSC1*skoMC1*skoMC1*skoMC1*-2<=skoMC1*skoMC1*skoMC1*2,skoSC1*(skoMC1*skoMC1*skoMC1*skoMC1*12+skoSC1*(skoMC1*skoMC1*skoMC1*(-1+skoMC1*6)+skoSC1*(skoMC1*skoMC1*skoMC1*-1+skoSC1*(skoMC1*skoMC1*skoMC1*(1/12)+skoSC1*skoMC1*skoMC1*skoMC1*(1/12)))))>skoMC1*skoMC1*skoMC1*(-2+skoMC1*-6),skoSC1*(skoMC1*skoMC1*skoMC1*skoMC1*-12+skoSC1*(skoMC1*skoMC1*skoMC1*(1+skoMC1*-6)+skoSC1*(skoMC1*skoMC1*skoMC1+skoSC1*(skoMC1*skoMC1*skoMC1*(-1/12)+skoSC1*skoMC1*skoMC1*skoMC1*(-1/12)))))<=skoMC1*skoMC1*skoMC1*(2+skoMC1*6)]], Reals]]

% In QepcadB format:
(E skoSC1) (E skoMC1) [[(skoSC1 ((skoMC1 skoMC1 skoMC1 (-2))+(skoSC1 ((skoMC1 skoMC1 skoMC1)+(skoSC1 skoMC1 skoMC1 skoMC1)))))<=(skoMC1 skoMC1 skoMC1 (2))]/\[[(skoSC1 ((skoMC1 skoMC1 skoMC1)+(skoSC1 skoMC1 skoMC1 skoMC1)))<=0]/\[[(skoMC1 skoMC1 skoMC1 (-2))<(skoSC1 ((skoMC1 skoMC1 skoMC1 (2))+(skoSC1 ((skoMC1 skoMC1 skoMC1 (-1))+(skoSC1 skoMC1 skoMC1 skoMC1 (-1))))))]/\[[(skoSC1 ((skoMC1 skoMC1 skoMC1 (-1))+(skoSC1 skoMC1 skoMC1 skoMC1 (-1))))<=0]/\[[(skoSC1 skoMC1 skoMC1 skoMC1 (-1))<=(skoMC1 skoMC1 skoMC1)]/\[[(skoMC1 skoMC1 skoMC1 (-1))<(skoSC1 skoMC1 skoMC1 skoMC1)]/\[[(skoMC1 skoMC1 skoMC1 (-2))<=0]/\[[0<(skoMC1 skoMC1 skoMC1 (2))]/\[[skoSC1<=5/4]/\[[2<=skoMC1]/\[[0<=skoSC1]/\[[0<skoMC1]/\[[0<=skoMC1]/\[[(skoMC1 (-1))<(skoSC1 skoMC1)]/\[[(skoSC1 skoMC1 (-1))<=skoMC1]/\[[(skoMC1 skoMC1 skoMC1 (-2))<(skoSC1 skoMC1 skoMC1 skoMC1 (2))]/\[[(skoSC1 skoMC1 skoMC1 skoMC1 (-2))<=(skoMC1 skoMC1 skoMC1 (2))]/\[[(skoMC1 skoMC1 skoMC1 (-2+(skoMC1 (-6))))<(skoSC1 ((skoMC1 skoMC1 skoMC1 skoMC1 (12))+(skoSC1 ((skoMC1 skoMC1 skoMC1 (-1+(skoMC1 (6))))+(skoSC1 ((skoMC1 skoMC1 skoMC1 (-1))+(skoSC1 ((skoMC1 skoMC1 skoMC1 (1/12))+(skoSC1 skoMC1 skoMC1 skoMC1 (1/12))))))))))]/\[(skoSC1 ((skoMC1 skoMC1 skoMC1 skoMC1 (-12))+(skoSC1 ((skoMC1 skoMC1 skoMC1 (1+(skoMC1 (-6))))+(skoSC1 ((skoMC1 skoMC1 skoMC1)+(skoSC1 ((skoMC1 skoMC1 skoMC1 (-1/12))+(skoSC1 skoMC1 skoMC1 skoMC1 (-1/12))))))))))<=(skoMC1 skoMC1 skoMC1 (2+(skoMC1 (6))))]]]]]]]]]]]]]]]]]]].

% In SMTLib2 format:
(declare-fun skoSC1 () Real) (declare-fun skoMC1 () Real) (assert (and (<= (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (- 2.)))) (* skoSC1 (+ (* skoMC1 (* skoMC1 skoMC1)) (* skoSC1 (* skoMC1 (* skoMC1 skoMC1))))))) (* skoMC1 (* skoMC1 (* skoMC1 2.)))) (and (<= (* skoSC1 (+ (* skoMC1 (* skoMC1 skoMC1)) (* skoSC1 (* skoMC1 (* skoMC1 skoMC1))))) 0.) (and (> (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 2.))) (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (- 1.)))) (* skoSC1 (* skoMC1 (* skoMC1 (* skoMC1 (- 1.))))))))) (* skoMC1 (* skoMC1 (* skoMC1 (- 2.))))) (and (<= (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (- 1.)))) (* skoSC1 (* skoMC1 (* skoMC1 (* skoMC1 (- 1.))))))) 0.) (and (<= (* skoSC1 (* skoMC1 (* skoMC1 (* skoMC1 (- 1.))))) (* skoMC1 (* skoMC1 skoMC1))) (and (> (* skoSC1 (* skoMC1 (* skoMC1 skoMC1))) (* skoMC1 (* skoMC1 (* skoMC1 (- 1.))))) (and (<= (* skoMC1 (* skoMC1 (* skoMC1 (- 2.)))) 0.) (and (> (* skoMC1 (* skoMC1 (* skoMC1 2.))) 0.) (and (<= skoSC1 (/ 5. 4.)) (and (<= 2. skoMC1) (and (<= 0. skoSC1) (and (> skoMC1 0.) (and (<= 0. skoMC1) (and (> (* skoSC1 skoMC1) (* skoMC1 (- 1.))) (and (<= (* skoSC1 (* skoMC1 (- 1.))) skoMC1) (and (> (* skoSC1 (* skoMC1 (* skoMC1 (* skoMC1 2.)))) (* skoMC1 (* skoMC1 (* skoMC1 (- 2.))))) (and (<= (* skoSC1 (* skoMC1 (* skoMC1 (* skoMC1 (- 2.))))) (* skoMC1 (* skoMC1 (* skoMC1 2.)))) (and (> (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (* skoMC1 12.)))) (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (+ (- 1.) (* skoMC1 6.))))) (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (- 1.)))) (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (/ 1. 12.)))) (* skoSC1 (* skoMC1 (* skoMC1 (* skoMC1 (/ 1. 12.))))))))))))) (* skoMC1 (* skoMC1 (* skoMC1 (+ (- 2.) (* skoMC1 (- 6.))))))) (<= (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (* skoMC1 (- 12.))))) (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (+ 1. (* skoMC1 (- 6.)))))) (* skoSC1 (+ (* skoMC1 (* skoMC1 skoMC1)) (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (/ (- 1.) 12.)))) (* skoSC1 (* skoMC1 (* skoMC1 (* skoMC1 (/ (- 1.) 12.))))))))))))) (* skoMC1 (* skoMC1 (* skoMC1 (+ 2. (* skoMC1 6.)))))))))))))))))))))))))

% In GRF format:
(sequent " MetiTarski formula " (antecedent (<= (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (- 2.)))) (* skoSC1 (+ (* skoMC1 (* skoMC1 skoMC1)) (* skoSC1 (* skoMC1 (* skoMC1 skoMC1))))))) (* skoMC1 (* skoMC1 (* skoMC1 2.)))) (<= (* skoSC1 (+ (* skoMC1 (* skoMC1 skoMC1)) (* skoSC1 (* skoMC1 (* skoMC1 skoMC1))))) 0.) (> (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 2.))) (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (- 1.)))) (* skoSC1 (* skoMC1 (* skoMC1 (* skoMC1 (- 1.))))))))) (* skoMC1 (* skoMC1 (* skoMC1 (- 2.))))) (<= (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (- 1.)))) (* skoSC1 (* skoMC1 (* skoMC1 (* skoMC1 (- 1.))))))) 0.) (<= (* skoSC1 (* skoMC1 (* skoMC1 (* skoMC1 (- 1.))))) (* skoMC1 (* skoMC1 skoMC1))) (> (* skoSC1 (* skoMC1 (* skoMC1 skoMC1))) (* skoMC1 (* skoMC1 (* skoMC1 (- 1.))))) (<= (* skoMC1 (* skoMC1 (* skoMC1 (- 2.)))) 0.) (> (* skoMC1 (* skoMC1 (* skoMC1 2.))) 0.) (<= skoSC1 (/ 5. 4.)) (<= 2. skoMC1) (<= 0. skoSC1) (> skoMC1 0.) (<= 0. skoMC1) (> (* skoSC1 skoMC1) (* skoMC1 (- 1.))) (<= (* skoSC1 (* skoMC1 (- 1.))) skoMC1) (> (* skoSC1 (* skoMC1 (* skoMC1 (* skoMC1 2.)))) (* skoMC1 (* skoMC1 (* skoMC1 (- 2.))))) (<= (* skoSC1 (* skoMC1 (* skoMC1 (* skoMC1 (- 2.))))) (* skoMC1 (* skoMC1 (* skoMC1 2.)))) (> (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (* skoMC1 12.)))) (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (+ (- 1.) (* skoMC1 6.))))) (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (- 1.)))) (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (/ 1. 12.)))) (* skoSC1 (* skoMC1 (* skoMC1 (* skoMC1 (/ 1. 12.))))))))))))) (* skoMC1 (* skoMC1 (* skoMC1 (+ (- 2.) (* skoMC1 (- 6.)))))))) (succedent (> (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (* skoMC1 (- 12.))))) (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (+ 1. (* skoMC1 (- 6.)))))) (* skoSC1 (+ (* skoMC1 (* skoMC1 skoMC1)) (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (/ (- 1.) 12.)))) (* skoSC1 (* skoMC1 (* skoMC1 (* skoMC1 (/ (- 1.) 12.))))))))))))) (* skoMC1 (* skoMC1 (* skoMC1 (+ 2. (* skoMC1 6.))))))))
-----[end problem]-----

-----[begin problem]-----
% In Mathematica format:
Timing[Resolve[Exists[{skoSC1,skoMC1}, And[skoSC1*(skoMC1*skoMC1*skoMC1*2+skoSC1*(skoMC1*skoMC1*skoMC1*-1+skoSC1*skoMC1*skoMC1*skoMC1*-1))<=skoMC1*skoMC1*skoMC1*-2,skoSC1*(skoMC1*skoMC1*skoMC1+skoSC1*skoMC1*skoMC1*skoMC1)<=0,skoSC1*(skoMC1*skoMC1*skoMC1*-2+skoSC1*(skoMC1*skoMC1*skoMC1+skoSC1*skoMC1*skoMC1*skoMC1))>skoMC1*skoMC1*skoMC1*2,skoSC1*(skoMC1*skoMC1*skoMC1*-1+skoSC1*skoMC1*skoMC1*skoMC1*-1)<=0,skoSC1*skoMC1*skoMC1*skoMC1*-1<=skoMC1*skoMC1*skoMC1,skoSC1*skoMC1*skoMC1*skoMC1>skoMC1*skoMC1*skoMC1*-1,skoMC1*skoMC1*skoMC1*-2<=0,skoMC1*skoMC1*skoMC1*2>0,skoSC1<=(5/4),2<=skoMC1,0<=skoSC1,skoMC1>0,0<=skoMC1,skoSC1*skoMC1>skoMC1*-1,skoSC1*skoMC1*-1<=skoMC1,skoSC1*skoMC1*skoMC1*skoMC1*2>skoMC1*skoMC1*skoMC1*-2,skoSC1*skoMC1*skoMC1*skoMC1*-2<=skoMC1*skoMC1*skoMC1*2,skoSC1*(skoMC1*skoMC1*skoMC1*skoMC1*12+skoSC1*(skoMC1*skoMC1*skoMC1*(-1+skoMC1*6)+skoSC1*(skoMC1*skoMC1*skoMC1*-1+skoSC1*(skoMC1*skoMC1*skoMC1*(1/12)+skoSC1*skoMC1*skoMC1*skoMC1*(1/12)))))>skoMC1*skoMC1*skoMC1*(-2+skoMC1*-6),skoSC1*(skoMC1*skoMC1*skoMC1*skoMC1*-12+skoSC1*(skoMC1*skoMC1*skoMC1*(1+skoMC1*-6)+skoSC1*(skoMC1*skoMC1*skoMC1+skoSC1*(skoMC1*skoMC1*skoMC1*(-1/12)+skoSC1*skoMC1*skoMC1*skoMC1*(-1/12)))))<=skoMC1*skoMC1*skoMC1*(2+skoMC1*6)]], Reals]]

% In QepcadB format:
(E skoSC1) (E skoMC1) [[(skoSC1 ((skoMC1 skoMC1 skoMC1 (2))+(skoSC1 ((skoMC1 skoMC1 skoMC1 (-1))+(skoSC1 skoMC1 skoMC1 skoMC1 (-1))))))<=(skoMC1 skoMC1 skoMC1 (-2))]/\[[(skoSC1 ((skoMC1 skoMC1 skoMC1)+(skoSC1 skoMC1 skoMC1 skoMC1)))<=0]/\[[(skoMC1 skoMC1 skoMC1 (2))<(skoSC1 ((skoMC1 skoMC1 skoMC1 (-2))+(skoSC1 ((skoMC1 skoMC1 skoMC1)+(skoSC1 skoMC1 skoMC1 skoMC1)))))]/\[[(skoSC1 ((skoMC1 skoMC1 skoMC1 (-1))+(skoSC1 skoMC1 skoMC1 skoMC1 (-1))))<=0]/\[[(skoSC1 skoMC1 skoMC1 skoMC1 (-1))<=(skoMC1 skoMC1 skoMC1)]/\[[(skoMC1 skoMC1 skoMC1 (-1))<(skoSC1 skoMC1 skoMC1 skoMC1)]/\[[(skoMC1 skoMC1 skoMC1 (-2))<=0]/\[[0<(skoMC1 skoMC1 skoMC1 (2))]/\[[skoSC1<=5/4]/\[[2<=skoMC1]/\[[0<=skoSC1]/\[[0<skoMC1]/\[[0<=skoMC1]/\[[(skoMC1 (-1))<(skoSC1 skoMC1)]/\[[(skoSC1 skoMC1 (-1))<=skoMC1]/\[[(skoMC1 skoMC1 skoMC1 (-2))<(skoSC1 skoMC1 skoMC1 skoMC1 (2))]/\[[(skoSC1 skoMC1 skoMC1 skoMC1 (-2))<=(skoMC1 skoMC1 skoMC1 (2))]/\[[(skoMC1 skoMC1 skoMC1 (-2+(skoMC1 (-6))))<(skoSC1 ((skoMC1 skoMC1 skoMC1 skoMC1 (12))+(skoSC1 ((skoMC1 skoMC1 skoMC1 (-1+(skoMC1 (6))))+(skoSC1 ((skoMC1 skoMC1 skoMC1 (-1))+(skoSC1 ((skoMC1 skoMC1 skoMC1 (1/12))+(skoSC1 skoMC1 skoMC1 skoMC1 (1/12))))))))))]/\[(skoSC1 ((skoMC1 skoMC1 skoMC1 skoMC1 (-12))+(skoSC1 ((skoMC1 skoMC1 skoMC1 (1+(skoMC1 (-6))))+(skoSC1 ((skoMC1 skoMC1 skoMC1)+(skoSC1 ((skoMC1 skoMC1 skoMC1 (-1/12))+(skoSC1 skoMC1 skoMC1 skoMC1 (-1/12))))))))))<=(skoMC1 skoMC1 skoMC1 (2+(skoMC1 (6))))]]]]]]]]]]]]]]]]]]].

% In SMTLib2 format:
(declare-fun skoSC1 () Real) (declare-fun skoMC1 () Real) (assert (and (<= (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 2.))) (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (- 1.)))) (* skoSC1 (* skoMC1 (* skoMC1 (* skoMC1 (- 1.))))))))) (* skoMC1 (* skoMC1 (* skoMC1 (- 2.))))) (and (<= (* skoSC1 (+ (* skoMC1 (* skoMC1 skoMC1)) (* skoSC1 (* skoMC1 (* skoMC1 skoMC1))))) 0.) (and (> (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (- 2.)))) (* skoSC1 (+ (* skoMC1 (* skoMC1 skoMC1)) (* skoSC1 (* skoMC1 (* skoMC1 skoMC1))))))) (* skoMC1 (* skoMC1 (* skoMC1 2.)))) (and (<= (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (- 1.)))) (* skoSC1 (* skoMC1 (* skoMC1 (* skoMC1 (- 1.))))))) 0.) (and (<= (* skoSC1 (* skoMC1 (* skoMC1 (* skoMC1 (- 1.))))) (* skoMC1 (* skoMC1 skoMC1))) (and (> (* skoSC1 (* skoMC1 (* skoMC1 skoMC1))) (* skoMC1 (* skoMC1 (* skoMC1 (- 1.))))) (and (<= (* skoMC1 (* skoMC1 (* skoMC1 (- 2.)))) 0.) (and (> (* skoMC1 (* skoMC1 (* skoMC1 2.))) 0.) (and (<= skoSC1 (/ 5. 4.)) (and (<= 2. skoMC1) (and (<= 0. skoSC1) (and (> skoMC1 0.) (and (<= 0. skoMC1) (and (> (* skoSC1 skoMC1) (* skoMC1 (- 1.))) (and (<= (* skoSC1 (* skoMC1 (- 1.))) skoMC1) (and (> (* skoSC1 (* skoMC1 (* skoMC1 (* skoMC1 2.)))) (* skoMC1 (* skoMC1 (* skoMC1 (- 2.))))) (and (<= (* skoSC1 (* skoMC1 (* skoMC1 (* skoMC1 (- 2.))))) (* skoMC1 (* skoMC1 (* skoMC1 2.)))) (and (> (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (* skoMC1 12.)))) (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (+ (- 1.) (* skoMC1 6.))))) (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (- 1.)))) (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (/ 1. 12.)))) (* skoSC1 (* skoMC1 (* skoMC1 (* skoMC1 (/ 1. 12.))))))))))))) (* skoMC1 (* skoMC1 (* skoMC1 (+ (- 2.) (* skoMC1 (- 6.))))))) (<= (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (* skoMC1 (- 12.))))) (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (+ 1. (* skoMC1 (- 6.)))))) (* skoSC1 (+ (* skoMC1 (* skoMC1 skoMC1)) (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (/ (- 1.) 12.)))) (* skoSC1 (* skoMC1 (* skoMC1 (* skoMC1 (/ (- 1.) 12.))))))))))))) (* skoMC1 (* skoMC1 (* skoMC1 (+ 2. (* skoMC1 6.)))))))))))))))))))))))))

% In GRF format:
(sequent " MetiTarski formula " (antecedent (<= (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 2.))) (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (- 1.)))) (* skoSC1 (* skoMC1 (* skoMC1 (* skoMC1 (- 1.))))))))) (* skoMC1 (* skoMC1 (* skoMC1 (- 2.))))) (<= (* skoSC1 (+ (* skoMC1 (* skoMC1 skoMC1)) (* skoSC1 (* skoMC1 (* skoMC1 skoMC1))))) 0.) (> (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (- 2.)))) (* skoSC1 (+ (* skoMC1 (* skoMC1 skoMC1)) (* skoSC1 (* skoMC1 (* skoMC1 skoMC1))))))) (* skoMC1 (* skoMC1 (* skoMC1 2.)))) (<= (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (- 1.)))) (* skoSC1 (* skoMC1 (* skoMC1 (* skoMC1 (- 1.))))))) 0.) (<= (* skoSC1 (* skoMC1 (* skoMC1 (* skoMC1 (- 1.))))) (* skoMC1 (* skoMC1 skoMC1))) (> (* skoSC1 (* skoMC1 (* skoMC1 skoMC1))) (* skoMC1 (* skoMC1 (* skoMC1 (- 1.))))) (<= (* skoMC1 (* skoMC1 (* skoMC1 (- 2.)))) 0.) (> (* skoMC1 (* skoMC1 (* skoMC1 2.))) 0.) (<= skoSC1 (/ 5. 4.)) (<= 2. skoMC1) (<= 0. skoSC1) (> skoMC1 0.) (<= 0. skoMC1) (> (* skoSC1 skoMC1) (* skoMC1 (- 1.))) (<= (* skoSC1 (* skoMC1 (- 1.))) skoMC1) (> (* skoSC1 (* skoMC1 (* skoMC1 (* skoMC1 2.)))) (* skoMC1 (* skoMC1 (* skoMC1 (- 2.))))) (<= (* skoSC1 (* skoMC1 (* skoMC1 (* skoMC1 (- 2.))))) (* skoMC1 (* skoMC1 (* skoMC1 2.)))) (> (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (* skoMC1 12.)))) (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (+ (- 1.) (* skoMC1 6.))))) (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (- 1.)))) (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (/ 1. 12.)))) (* skoSC1 (* skoMC1 (* skoMC1 (* skoMC1 (/ 1. 12.))))))))))))) (* skoMC1 (* skoMC1 (* skoMC1 (+ (- 2.) (* skoMC1 (- 6.)))))))) (succedent (> (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (* skoMC1 (- 12.))))) (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (+ 1. (* skoMC1 (- 6.)))))) (* skoSC1 (+ (* skoMC1 (* skoMC1 skoMC1)) (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (/ (- 1.) 12.)))) (* skoSC1 (* skoMC1 (* skoMC1 (* skoMC1 (/ (- 1.) 12.))))))))))))) (* skoMC1 (* skoMC1 (* skoMC1 (+ 2. (* skoMC1 6.))))))))
-----[end problem]-----

-----[begin problem]-----
% In Mathematica format:
Timing[Resolve[Exists[{skoSC1,skoMC1}, And[skoSC1*(skoMC1*skoMC1*skoMC1*2+skoSC1*(skoMC1*skoMC1*skoMC1*-1+skoSC1*skoMC1*skoMC1*skoMC1*-1))<=skoMC1*skoMC1*skoMC1*-2,skoSC1*(skoMC1*skoMC1*skoMC1+skoSC1*skoMC1*skoMC1*skoMC1)>0,skoSC1*(skoMC1*skoMC1*skoMC1*-1+skoSC1*skoMC1*skoMC1*skoMC1*-1)<=0,skoSC1*skoMC1*skoMC1*skoMC1*-1<=skoMC1*skoMC1*skoMC1,skoSC1*skoMC1*skoMC1*skoMC1>skoMC1*skoMC1*skoMC1*-1,skoMC1*skoMC1*skoMC1*-2<=0,skoMC1*skoMC1*skoMC1*2>0,skoSC1<=(5/4),2<=skoMC1,0<=skoSC1,skoMC1>0,0<=skoMC1,skoSC1*skoMC1>skoMC1*-1,skoSC1*skoMC1*-1<=skoMC1,skoSC1*skoMC1*skoMC1*skoMC1*2>skoMC1*skoMC1*skoMC1*-2,skoSC1*skoMC1*skoMC1*skoMC1*-2<=skoMC1*skoMC1*skoMC1*2,skoSC1*(skoMC1*skoMC1*skoMC1*skoMC1*12+skoSC1*(skoMC1*skoMC1*skoMC1*(-1+skoMC1*6)+skoSC1*(skoMC1*skoMC1*skoMC1*-1+skoSC1*(skoMC1*skoMC1*skoMC1*(1/12)+skoSC1*skoMC1*skoMC1*skoMC1*(1/12)))))>skoMC1*skoMC1*skoMC1*(-2+skoMC1*-6),skoSC1*(skoMC1*skoMC1*skoMC1*skoMC1*-12+skoSC1*(skoMC1*skoMC1*skoMC1*(1+skoMC1*-6)+skoSC1*(skoMC1*skoMC1*skoMC1+skoSC1*(skoMC1*skoMC1*skoMC1*(-1/12)+skoSC1*skoMC1*skoMC1*skoMC1*(-1/12)))))<=skoMC1*skoMC1*skoMC1*(2+skoMC1*6)]], Reals]]

% In QepcadB format:
(E skoSC1) (E skoMC1) [[(skoSC1 ((skoMC1 skoMC1 skoMC1 (2))+(skoSC1 ((skoMC1 skoMC1 skoMC1 (-1))+(skoSC1 skoMC1 skoMC1 skoMC1 (-1))))))<=(skoMC1 skoMC1 skoMC1 (-2))]/\[[0<(skoSC1 ((skoMC1 skoMC1 skoMC1)+(skoSC1 skoMC1 skoMC1 skoMC1)))]/\[[(skoSC1 ((skoMC1 skoMC1 skoMC1 (-1))+(skoSC1 skoMC1 skoMC1 skoMC1 (-1))))<=0]/\[[(skoSC1 skoMC1 skoMC1 skoMC1 (-1))<=(skoMC1 skoMC1 skoMC1)]/\[[(skoMC1 skoMC1 skoMC1 (-1))<(skoSC1 skoMC1 skoMC1 skoMC1)]/\[[(skoMC1 skoMC1 skoMC1 (-2))<=0]/\[[0<(skoMC1 skoMC1 skoMC1 (2))]/\[[skoSC1<=5/4]/\[[2<=skoMC1]/\[[0<=skoSC1]/\[[0<skoMC1]/\[[0<=skoMC1]/\[[(skoMC1 (-1))<(skoSC1 skoMC1)]/\[[(skoSC1 skoMC1 (-1))<=skoMC1]/\[[(skoMC1 skoMC1 skoMC1 (-2))<(skoSC1 skoMC1 skoMC1 skoMC1 (2))]/\[[(skoSC1 skoMC1 skoMC1 skoMC1 (-2))<=(skoMC1 skoMC1 skoMC1 (2))]/\[[(skoMC1 skoMC1 skoMC1 (-2+(skoMC1 (-6))))<(skoSC1 ((skoMC1 skoMC1 skoMC1 skoMC1 (12))+(skoSC1 ((skoMC1 skoMC1 skoMC1 (-1+(skoMC1 (6))))+(skoSC1 ((skoMC1 skoMC1 skoMC1 (-1))+(skoSC1 ((skoMC1 skoMC1 skoMC1 (1/12))+(skoSC1 skoMC1 skoMC1 skoMC1 (1/12))))))))))]/\[(skoSC1 ((skoMC1 skoMC1 skoMC1 skoMC1 (-12))+(skoSC1 ((skoMC1 skoMC1 skoMC1 (1+(skoMC1 (-6))))+(skoSC1 ((skoMC1 skoMC1 skoMC1)+(skoSC1 ((skoMC1 skoMC1 skoMC1 (-1/12))+(skoSC1 skoMC1 skoMC1 skoMC1 (-1/12))))))))))<=(skoMC1 skoMC1 skoMC1 (2+(skoMC1 (6))))]]]]]]]]]]]]]]]]]].

% In SMTLib2 format:
(declare-fun skoSC1 () Real) (declare-fun skoMC1 () Real) (assert (and (<= (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 2.))) (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (- 1.)))) (* skoSC1 (* skoMC1 (* skoMC1 (* skoMC1 (- 1.))))))))) (* skoMC1 (* skoMC1 (* skoMC1 (- 2.))))) (and (> (* skoSC1 (+ (* skoMC1 (* skoMC1 skoMC1)) (* skoSC1 (* skoMC1 (* skoMC1 skoMC1))))) 0.) (and (<= (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (- 1.)))) (* skoSC1 (* skoMC1 (* skoMC1 (* skoMC1 (- 1.))))))) 0.) (and (<= (* skoSC1 (* skoMC1 (* skoMC1 (* skoMC1 (- 1.))))) (* skoMC1 (* skoMC1 skoMC1))) (and (> (* skoSC1 (* skoMC1 (* skoMC1 skoMC1))) (* skoMC1 (* skoMC1 (* skoMC1 (- 1.))))) (and (<= (* skoMC1 (* skoMC1 (* skoMC1 (- 2.)))) 0.) (and (> (* skoMC1 (* skoMC1 (* skoMC1 2.))) 0.) (and (<= skoSC1 (/ 5. 4.)) (and (<= 2. skoMC1) (and (<= 0. skoSC1) (and (> skoMC1 0.) (and (<= 0. skoMC1) (and (> (* skoSC1 skoMC1) (* skoMC1 (- 1.))) (and (<= (* skoSC1 (* skoMC1 (- 1.))) skoMC1) (and (> (* skoSC1 (* skoMC1 (* skoMC1 (* skoMC1 2.)))) (* skoMC1 (* skoMC1 (* skoMC1 (- 2.))))) (and (<= (* skoSC1 (* skoMC1 (* skoMC1 (* skoMC1 (- 2.))))) (* skoMC1 (* skoMC1 (* skoMC1 2.)))) (and (> (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (* skoMC1 12.)))) (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (+ (- 1.) (* skoMC1 6.))))) (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (- 1.)))) (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (/ 1. 12.)))) (* skoSC1 (* skoMC1 (* skoMC1 (* skoMC1 (/ 1. 12.))))))))))))) (* skoMC1 (* skoMC1 (* skoMC1 (+ (- 2.) (* skoMC1 (- 6.))))))) (<= (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (* skoMC1 (- 12.))))) (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (+ 1. (* skoMC1 (- 6.)))))) (* skoSC1 (+ (* skoMC1 (* skoMC1 skoMC1)) (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (/ (- 1.) 12.)))) (* skoSC1 (* skoMC1 (* skoMC1 (* skoMC1 (/ (- 1.) 12.))))))))))))) (* skoMC1 (* skoMC1 (* skoMC1 (+ 2. (* skoMC1 6.))))))))))))))))))))))))

% In GRF format:
(sequent " MetiTarski formula " (antecedent (<= (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 2.))) (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (- 1.)))) (* skoSC1 (* skoMC1 (* skoMC1 (* skoMC1 (- 1.))))))))) (* skoMC1 (* skoMC1 (* skoMC1 (- 2.))))) (> (* skoSC1 (+ (* skoMC1 (* skoMC1 skoMC1)) (* skoSC1 (* skoMC1 (* skoMC1 skoMC1))))) 0.) (<= (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (- 1.)))) (* skoSC1 (* skoMC1 (* skoMC1 (* skoMC1 (- 1.))))))) 0.) (<= (* skoSC1 (* skoMC1 (* skoMC1 (* skoMC1 (- 1.))))) (* skoMC1 (* skoMC1 skoMC1))) (> (* skoSC1 (* skoMC1 (* skoMC1 skoMC1))) (* skoMC1 (* skoMC1 (* skoMC1 (- 1.))))) (<= (* skoMC1 (* skoMC1 (* skoMC1 (- 2.)))) 0.) (> (* skoMC1 (* skoMC1 (* skoMC1 2.))) 0.) (<= skoSC1 (/ 5. 4.)) (<= 2. skoMC1) (<= 0. skoSC1) (> skoMC1 0.) (<= 0. skoMC1) (> (* skoSC1 skoMC1) (* skoMC1 (- 1.))) (<= (* skoSC1 (* skoMC1 (- 1.))) skoMC1) (> (* skoSC1 (* skoMC1 (* skoMC1 (* skoMC1 2.)))) (* skoMC1 (* skoMC1 (* skoMC1 (- 2.))))) (<= (* skoSC1 (* skoMC1 (* skoMC1 (* skoMC1 (- 2.))))) (* skoMC1 (* skoMC1 (* skoMC1 2.)))) (> (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (* skoMC1 12.)))) (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (+ (- 1.) (* skoMC1 6.))))) (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (- 1.)))) (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (/ 1. 12.)))) (* skoSC1 (* skoMC1 (* skoMC1 (* skoMC1 (/ 1. 12.))))))))))))) (* skoMC1 (* skoMC1 (* skoMC1 (+ (- 2.) (* skoMC1 (- 6.)))))))) (succedent (> (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (* skoMC1 (- 12.))))) (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (+ 1. (* skoMC1 (- 6.)))))) (* skoSC1 (+ (* skoMC1 (* skoMC1 skoMC1)) (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (/ (- 1.) 12.)))) (* skoSC1 (* skoMC1 (* skoMC1 (* skoMC1 (/ (- 1.) 12.))))))))))))) (* skoMC1 (* skoMC1 (* skoMC1 (+ 2. (* skoMC1 6.))))))))
-----[end problem]-----

-----[begin problem]-----
% In Mathematica format:
Timing[Resolve[Exists[{skoSC1,skoMC1}, And[skoSC1*(skoMC1*skoMC1*skoMC1*2+skoSC1*(skoMC1*skoMC1*skoMC1*-1+skoSC1*skoMC1*skoMC1*skoMC1*-1))>skoMC1*skoMC1*skoMC1*-2,skoSC1*(skoMC1*skoMC1*skoMC1*-1+skoSC1*skoMC1*skoMC1*skoMC1*-1)<=0,skoSC1*skoMC1*skoMC1*skoMC1*-1<=skoMC1*skoMC1*skoMC1,skoSC1*skoMC1*skoMC1*skoMC1>skoMC1*skoMC1*skoMC1*-1,skoMC1*skoMC1*skoMC1*-2<=0,skoMC1*skoMC1*skoMC1*2>0,skoSC1<=(5/4),2<=skoMC1,0<=skoSC1,skoMC1>0,0<=skoMC1,skoSC1*skoMC1>skoMC1*-1,skoSC1*skoMC1*-1<=skoMC1,skoSC1*skoMC1*skoMC1*skoMC1*2>skoMC1*skoMC1*skoMC1*-2,skoSC1*skoMC1*skoMC1*skoMC1*-2<=skoMC1*skoMC1*skoMC1*2,skoSC1*(skoMC1*skoMC1*skoMC1*skoMC1*12+skoSC1*(skoMC1*skoMC1*skoMC1*(-1+skoMC1*6)+skoSC1*(skoMC1*skoMC1*skoMC1*-1+skoSC1*(skoMC1*skoMC1*skoMC1*(1/12)+skoSC1*skoMC1*skoMC1*skoMC1*(1/12)))))>skoMC1*skoMC1*skoMC1*(-2+skoMC1*-6),skoSC1*(skoMC1*skoMC1*skoMC1*skoMC1*-12+skoSC1*(skoMC1*skoMC1*skoMC1*(1+skoMC1*-6)+skoSC1*(skoMC1*skoMC1*skoMC1+skoSC1*(skoMC1*skoMC1*skoMC1*(-1/12)+skoSC1*skoMC1*skoMC1*skoMC1*(-1/12)))))<=skoMC1*skoMC1*skoMC1*(2+skoMC1*6)]], Reals]]

% In QepcadB format:
(E skoSC1) (E skoMC1) [[(skoMC1 skoMC1 skoMC1 (-2))<(skoSC1 ((skoMC1 skoMC1 skoMC1 (2))+(skoSC1 ((skoMC1 skoMC1 skoMC1 (-1))+(skoSC1 skoMC1 skoMC1 skoMC1 (-1))))))]/\[[(skoSC1 ((skoMC1 skoMC1 skoMC1 (-1))+(skoSC1 skoMC1 skoMC1 skoMC1 (-1))))<=0]/\[[(skoSC1 skoMC1 skoMC1 skoMC1 (-1))<=(skoMC1 skoMC1 skoMC1)]/\[[(skoMC1 skoMC1 skoMC1 (-1))<(skoSC1 skoMC1 skoMC1 skoMC1)]/\[[(skoMC1 skoMC1 skoMC1 (-2))<=0]/\[[0<(skoMC1 skoMC1 skoMC1 (2))]/\[[skoSC1<=5/4]/\[[2<=skoMC1]/\[[0<=skoSC1]/\[[0<skoMC1]/\[[0<=skoMC1]/\[[(skoMC1 (-1))<(skoSC1 skoMC1)]/\[[(skoSC1 skoMC1 (-1))<=skoMC1]/\[[(skoMC1 skoMC1 skoMC1 (-2))<(skoSC1 skoMC1 skoMC1 skoMC1 (2))]/\[[(skoSC1 skoMC1 skoMC1 skoMC1 (-2))<=(skoMC1 skoMC1 skoMC1 (2))]/\[[(skoMC1 skoMC1 skoMC1 (-2+(skoMC1 (-6))))<(skoSC1 ((skoMC1 skoMC1 skoMC1 skoMC1 (12))+(skoSC1 ((skoMC1 skoMC1 skoMC1 (-1+(skoMC1 (6))))+(skoSC1 ((skoMC1 skoMC1 skoMC1 (-1))+(skoSC1 ((skoMC1 skoMC1 skoMC1 (1/12))+(skoSC1 skoMC1 skoMC1 skoMC1 (1/12))))))))))]/\[(skoSC1 ((skoMC1 skoMC1 skoMC1 skoMC1 (-12))+(skoSC1 ((skoMC1 skoMC1 skoMC1 (1+(skoMC1 (-6))))+(skoSC1 ((skoMC1 skoMC1 skoMC1)+(skoSC1 ((skoMC1 skoMC1 skoMC1 (-1/12))+(skoSC1 skoMC1 skoMC1 skoMC1 (-1/12))))))))))<=(skoMC1 skoMC1 skoMC1 (2+(skoMC1 (6))))]]]]]]]]]]]]]]]]].

% In SMTLib2 format:
(declare-fun skoSC1 () Real) (declare-fun skoMC1 () Real) (assert (and (> (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 2.))) (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (- 1.)))) (* skoSC1 (* skoMC1 (* skoMC1 (* skoMC1 (- 1.))))))))) (* skoMC1 (* skoMC1 (* skoMC1 (- 2.))))) (and (<= (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (- 1.)))) (* skoSC1 (* skoMC1 (* skoMC1 (* skoMC1 (- 1.))))))) 0.) (and (<= (* skoSC1 (* skoMC1 (* skoMC1 (* skoMC1 (- 1.))))) (* skoMC1 (* skoMC1 skoMC1))) (and (> (* skoSC1 (* skoMC1 (* skoMC1 skoMC1))) (* skoMC1 (* skoMC1 (* skoMC1 (- 1.))))) (and (<= (* skoMC1 (* skoMC1 (* skoMC1 (- 2.)))) 0.) (and (> (* skoMC1 (* skoMC1 (* skoMC1 2.))) 0.) (and (<= skoSC1 (/ 5. 4.)) (and (<= 2. skoMC1) (and (<= 0. skoSC1) (and (> skoMC1 0.) (and (<= 0. skoMC1) (and (> (* skoSC1 skoMC1) (* skoMC1 (- 1.))) (and (<= (* skoSC1 (* skoMC1 (- 1.))) skoMC1) (and (> (* skoSC1 (* skoMC1 (* skoMC1 (* skoMC1 2.)))) (* skoMC1 (* skoMC1 (* skoMC1 (- 2.))))) (and (<= (* skoSC1 (* skoMC1 (* skoMC1 (* skoMC1 (- 2.))))) (* skoMC1 (* skoMC1 (* skoMC1 2.)))) (and (> (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (* skoMC1 12.)))) (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (+ (- 1.) (* skoMC1 6.))))) (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (- 1.)))) (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (/ 1. 12.)))) (* skoSC1 (* skoMC1 (* skoMC1 (* skoMC1 (/ 1. 12.))))))))))))) (* skoMC1 (* skoMC1 (* skoMC1 (+ (- 2.) (* skoMC1 (- 6.))))))) (<= (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (* skoMC1 (- 12.))))) (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (+ 1. (* skoMC1 (- 6.)))))) (* skoSC1 (+ (* skoMC1 (* skoMC1 skoMC1)) (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (/ (- 1.) 12.)))) (* skoSC1 (* skoMC1 (* skoMC1 (* skoMC1 (/ (- 1.) 12.))))))))))))) (* skoMC1 (* skoMC1 (* skoMC1 (+ 2. (* skoMC1 6.)))))))))))))))))))))))

% In GRF format:
(sequent " MetiTarski formula " (antecedent (> (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 2.))) (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (- 1.)))) (* skoSC1 (* skoMC1 (* skoMC1 (* skoMC1 (- 1.))))))))) (* skoMC1 (* skoMC1 (* skoMC1 (- 2.))))) (<= (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (- 1.)))) (* skoSC1 (* skoMC1 (* skoMC1 (* skoMC1 (- 1.))))))) 0.) (<= (* skoSC1 (* skoMC1 (* skoMC1 (* skoMC1 (- 1.))))) (* skoMC1 (* skoMC1 skoMC1))) (> (* skoSC1 (* skoMC1 (* skoMC1 skoMC1))) (* skoMC1 (* skoMC1 (* skoMC1 (- 1.))))) (<= (* skoMC1 (* skoMC1 (* skoMC1 (- 2.)))) 0.) (> (* skoMC1 (* skoMC1 (* skoMC1 2.))) 0.) (<= skoSC1 (/ 5. 4.)) (<= 2. skoMC1) (<= 0. skoSC1) (> skoMC1 0.) (<= 0. skoMC1) (> (* skoSC1 skoMC1) (* skoMC1 (- 1.))) (<= (* skoSC1 (* skoMC1 (- 1.))) skoMC1) (> (* skoSC1 (* skoMC1 (* skoMC1 (* skoMC1 2.)))) (* skoMC1 (* skoMC1 (* skoMC1 (- 2.))))) (<= (* skoSC1 (* skoMC1 (* skoMC1 (* skoMC1 (- 2.))))) (* skoMC1 (* skoMC1 (* skoMC1 2.)))) (> (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (* skoMC1 12.)))) (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (+ (- 1.) (* skoMC1 6.))))) (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (- 1.)))) (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (/ 1. 12.)))) (* skoSC1 (* skoMC1 (* skoMC1 (* skoMC1 (/ 1. 12.))))))))))))) (* skoMC1 (* skoMC1 (* skoMC1 (+ (- 2.) (* skoMC1 (- 6.)))))))) (succedent (> (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (* skoMC1 (- 12.))))) (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (+ 1. (* skoMC1 (- 6.)))))) (* skoSC1 (+ (* skoMC1 (* skoMC1 skoMC1)) (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (/ (- 1.) 12.)))) (* skoSC1 (* skoMC1 (* skoMC1 (* skoMC1 (/ (- 1.) 12.))))))))))))) (* skoMC1 (* skoMC1 (* skoMC1 (+ 2. (* skoMC1 6.))))))))
-----[end problem]-----

-----[begin problem]-----
% In Mathematica format:
Timing[Resolve[Exists[{skoSC1,skoMC1}, And[skoSC1*(skoMC1*skoMC1*skoMC1+skoSC1*skoMC1*skoMC1*skoMC1)>0,skoSC1*(skoMC1*skoMC1*skoMC1*2+skoSC1*(skoMC1*skoMC1*skoMC1*-1+skoSC1*skoMC1*skoMC1*skoMC1*-1))>skoMC1*skoMC1*skoMC1*-2,skoSC1*(skoMC1*skoMC1*skoMC1*-1+skoSC1*skoMC1*skoMC1*skoMC1*-1)<=0,skoSC1*skoMC1*skoMC1*skoMC1*-1<=skoMC1*skoMC1*skoMC1,skoSC1*skoMC1*skoMC1*skoMC1>skoMC1*skoMC1*skoMC1*-1,skoMC1*skoMC1*skoMC1*-2<=0,skoMC1*skoMC1*skoMC1*2>0,skoSC1<=(5/4),2<=skoMC1,0<=skoSC1,skoMC1>0,0<=skoMC1,skoSC1*skoMC1>skoMC1*-1,skoSC1*skoMC1*-1<=skoMC1,skoSC1*skoMC1*skoMC1*skoMC1*2>skoMC1*skoMC1*skoMC1*-2,skoSC1*skoMC1*skoMC1*skoMC1*-2<=skoMC1*skoMC1*skoMC1*2,skoSC1*(skoMC1*skoMC1*skoMC1*skoMC1*12+skoSC1*(skoMC1*skoMC1*skoMC1*(-1+skoMC1*6)+skoSC1*(skoMC1*skoMC1*skoMC1*-1+skoSC1*(skoMC1*skoMC1*skoMC1*(1/12)+skoSC1*skoMC1*skoMC1*skoMC1*(1/12)))))>skoMC1*skoMC1*skoMC1*(-2+skoMC1*-6),skoSC1*(skoMC1*skoMC1*skoMC1*skoMC1*-12+skoSC1*(skoMC1*skoMC1*skoMC1*(1+skoMC1*-6)+skoSC1*(skoMC1*skoMC1*skoMC1+skoSC1*(skoMC1*skoMC1*skoMC1*(-1/12)+skoSC1*skoMC1*skoMC1*skoMC1*(-1/12)))))<=skoMC1*skoMC1*skoMC1*(2+skoMC1*6)]], Reals]]

% In QepcadB format:
(E skoSC1) (E skoMC1) [[0<(skoSC1 ((skoMC1 skoMC1 skoMC1)+(skoSC1 skoMC1 skoMC1 skoMC1)))]/\[[(skoMC1 skoMC1 skoMC1 (-2))<(skoSC1 ((skoMC1 skoMC1 skoMC1 (2))+(skoSC1 ((skoMC1 skoMC1 skoMC1 (-1))+(skoSC1 skoMC1 skoMC1 skoMC1 (-1))))))]/\[[(skoSC1 ((skoMC1 skoMC1 skoMC1 (-1))+(skoSC1 skoMC1 skoMC1 skoMC1 (-1))))<=0]/\[[(skoSC1 skoMC1 skoMC1 skoMC1 (-1))<=(skoMC1 skoMC1 skoMC1)]/\[[(skoMC1 skoMC1 skoMC1 (-1))<(skoSC1 skoMC1 skoMC1 skoMC1)]/\[[(skoMC1 skoMC1 skoMC1 (-2))<=0]/\[[0<(skoMC1 skoMC1 skoMC1 (2))]/\[[skoSC1<=5/4]/\[[2<=skoMC1]/\[[0<=skoSC1]/\[[0<skoMC1]/\[[0<=skoMC1]/\[[(skoMC1 (-1))<(skoSC1 skoMC1)]/\[[(skoSC1 skoMC1 (-1))<=skoMC1]/\[[(skoMC1 skoMC1 skoMC1 (-2))<(skoSC1 skoMC1 skoMC1 skoMC1 (2))]/\[[(skoSC1 skoMC1 skoMC1 skoMC1 (-2))<=(skoMC1 skoMC1 skoMC1 (2))]/\[[(skoMC1 skoMC1 skoMC1 (-2+(skoMC1 (-6))))<(skoSC1 ((skoMC1 skoMC1 skoMC1 skoMC1 (12))+(skoSC1 ((skoMC1 skoMC1 skoMC1 (-1+(skoMC1 (6))))+(skoSC1 ((skoMC1 skoMC1 skoMC1 (-1))+(skoSC1 ((skoMC1 skoMC1 skoMC1 (1/12))+(skoSC1 skoMC1 skoMC1 skoMC1 (1/12))))))))))]/\[(skoSC1 ((skoMC1 skoMC1 skoMC1 skoMC1 (-12))+(skoSC1 ((skoMC1 skoMC1 skoMC1 (1+(skoMC1 (-6))))+(skoSC1 ((skoMC1 skoMC1 skoMC1)+(skoSC1 ((skoMC1 skoMC1 skoMC1 (-1/12))+(skoSC1 skoMC1 skoMC1 skoMC1 (-1/12))))))))))<=(skoMC1 skoMC1 skoMC1 (2+(skoMC1 (6))))]]]]]]]]]]]]]]]]]].

% In SMTLib2 format:
(declare-fun skoSC1 () Real) (declare-fun skoMC1 () Real) (assert (and (> (* skoSC1 (+ (* skoMC1 (* skoMC1 skoMC1)) (* skoSC1 (* skoMC1 (* skoMC1 skoMC1))))) 0.) (and (> (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 2.))) (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (- 1.)))) (* skoSC1 (* skoMC1 (* skoMC1 (* skoMC1 (- 1.))))))))) (* skoMC1 (* skoMC1 (* skoMC1 (- 2.))))) (and (<= (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (- 1.)))) (* skoSC1 (* skoMC1 (* skoMC1 (* skoMC1 (- 1.))))))) 0.) (and (<= (* skoSC1 (* skoMC1 (* skoMC1 (* skoMC1 (- 1.))))) (* skoMC1 (* skoMC1 skoMC1))) (and (> (* skoSC1 (* skoMC1 (* skoMC1 skoMC1))) (* skoMC1 (* skoMC1 (* skoMC1 (- 1.))))) (and (<= (* skoMC1 (* skoMC1 (* skoMC1 (- 2.)))) 0.) (and (> (* skoMC1 (* skoMC1 (* skoMC1 2.))) 0.) (and (<= skoSC1 (/ 5. 4.)) (and (<= 2. skoMC1) (and (<= 0. skoSC1) (and (> skoMC1 0.) (and (<= 0. skoMC1) (and (> (* skoSC1 skoMC1) (* skoMC1 (- 1.))) (and (<= (* skoSC1 (* skoMC1 (- 1.))) skoMC1) (and (> (* skoSC1 (* skoMC1 (* skoMC1 (* skoMC1 2.)))) (* skoMC1 (* skoMC1 (* skoMC1 (- 2.))))) (and (<= (* skoSC1 (* skoMC1 (* skoMC1 (* skoMC1 (- 2.))))) (* skoMC1 (* skoMC1 (* skoMC1 2.)))) (and (> (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (* skoMC1 12.)))) (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (+ (- 1.) (* skoMC1 6.))))) (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (- 1.)))) (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (/ 1. 12.)))) (* skoSC1 (* skoMC1 (* skoMC1 (* skoMC1 (/ 1. 12.))))))))))))) (* skoMC1 (* skoMC1 (* skoMC1 (+ (- 2.) (* skoMC1 (- 6.))))))) (<= (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (* skoMC1 (- 12.))))) (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (+ 1. (* skoMC1 (- 6.)))))) (* skoSC1 (+ (* skoMC1 (* skoMC1 skoMC1)) (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (/ (- 1.) 12.)))) (* skoSC1 (* skoMC1 (* skoMC1 (* skoMC1 (/ (- 1.) 12.))))))))))))) (* skoMC1 (* skoMC1 (* skoMC1 (+ 2. (* skoMC1 6.))))))))))))))))))))))))

% In GRF format:
(sequent " MetiTarski formula " (antecedent (> (* skoSC1 (+ (* skoMC1 (* skoMC1 skoMC1)) (* skoSC1 (* skoMC1 (* skoMC1 skoMC1))))) 0.) (> (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 2.))) (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (- 1.)))) (* skoSC1 (* skoMC1 (* skoMC1 (* skoMC1 (- 1.))))))))) (* skoMC1 (* skoMC1 (* skoMC1 (- 2.))))) (<= (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (- 1.)))) (* skoSC1 (* skoMC1 (* skoMC1 (* skoMC1 (- 1.))))))) 0.) (<= (* skoSC1 (* skoMC1 (* skoMC1 (* skoMC1 (- 1.))))) (* skoMC1 (* skoMC1 skoMC1))) (> (* skoSC1 (* skoMC1 (* skoMC1 skoMC1))) (* skoMC1 (* skoMC1 (* skoMC1 (- 1.))))) (<= (* skoMC1 (* skoMC1 (* skoMC1 (- 2.)))) 0.) (> (* skoMC1 (* skoMC1 (* skoMC1 2.))) 0.) (<= skoSC1 (/ 5. 4.)) (<= 2. skoMC1) (<= 0. skoSC1) (> skoMC1 0.) (<= 0. skoMC1) (> (* skoSC1 skoMC1) (* skoMC1 (- 1.))) (<= (* skoSC1 (* skoMC1 (- 1.))) skoMC1) (> (* skoSC1 (* skoMC1 (* skoMC1 (* skoMC1 2.)))) (* skoMC1 (* skoMC1 (* skoMC1 (- 2.))))) (<= (* skoSC1 (* skoMC1 (* skoMC1 (* skoMC1 (- 2.))))) (* skoMC1 (* skoMC1 (* skoMC1 2.)))) (> (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (* skoMC1 12.)))) (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (+ (- 1.) (* skoMC1 6.))))) (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (- 1.)))) (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (/ 1. 12.)))) (* skoSC1 (* skoMC1 (* skoMC1 (* skoMC1 (/ 1. 12.))))))))))))) (* skoMC1 (* skoMC1 (* skoMC1 (+ (- 2.) (* skoMC1 (- 6.)))))))) (succedent (> (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (* skoMC1 (- 12.))))) (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (+ 1. (* skoMC1 (- 6.)))))) (* skoSC1 (+ (* skoMC1 (* skoMC1 skoMC1)) (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (/ (- 1.) 12.)))) (* skoSC1 (* skoMC1 (* skoMC1 (* skoMC1 (/ (- 1.) 12.))))))))))))) (* skoMC1 (* skoMC1 (* skoMC1 (+ 2. (* skoMC1 6.))))))))
-----[end problem]-----

-----[begin problem]-----
% In Mathematica format:
Timing[Resolve[Exists[{skoSC1,skoMC1}, And[skoSC1*(skoMC1*skoMC1*skoMC1*-2+skoSC1*(skoMC1*skoMC1*skoMC1+skoSC1*skoMC1*skoMC1*skoMC1))<=skoMC1*skoMC1*skoMC1*2,skoSC1*(skoMC1*skoMC1*skoMC1+skoSC1*skoMC1*skoMC1*skoMC1)<=0,skoSC1*(skoMC1*skoMC1*skoMC1*2+skoSC1*(skoMC1*skoMC1*skoMC1*-1+skoSC1*skoMC1*skoMC1*skoMC1*-1))>skoMC1*skoMC1*skoMC1*-2,skoSC1*(skoMC1*skoMC1*skoMC1*-1+skoSC1*skoMC1*skoMC1*skoMC1*-1)<=0,skoSC1*skoMC1*skoMC1*skoMC1*-1<=skoMC1*skoMC1*skoMC1,skoSC1*skoMC1*skoMC1*skoMC1>skoMC1*skoMC1*skoMC1*-1,skoMC1*skoMC1*skoMC1*-2<=0,skoMC1*skoMC1*skoMC1*2>0,skoSC1<=(5/4),2<=skoMC1,0<=skoSC1,skoMC1>0,0<=skoMC1,skoSC1*skoMC1>skoMC1*-1,skoSC1*skoMC1*-1<=skoMC1,skoSC1*skoMC1*skoMC1*skoMC1*2>skoMC1*skoMC1*skoMC1*-2,skoSC1*skoMC1*skoMC1*skoMC1*-2<=skoMC1*skoMC1*skoMC1*2,skoSC1*(skoMC1*skoMC1*skoMC1*skoMC1*12+skoSC1*(skoMC1*skoMC1*skoMC1*(-1+skoMC1*6)+skoSC1*(skoMC1*skoMC1*skoMC1*-1+skoSC1*(skoMC1*skoMC1*skoMC1*(1/12)+skoSC1*skoMC1*skoMC1*skoMC1*(1/12)))))>skoMC1*skoMC1*skoMC1*(-2+skoMC1*-6),skoSC1*(skoMC1*skoMC1*skoMC1*skoMC1*-12+skoSC1*(skoMC1*skoMC1*skoMC1*(1+skoMC1*-6)+skoSC1*(skoMC1*skoMC1*skoMC1+skoSC1*(skoMC1*skoMC1*skoMC1*(-1/12)+skoSC1*skoMC1*skoMC1*skoMC1*(-1/12)))))<=skoMC1*skoMC1*skoMC1*(2+skoMC1*6)]], Reals]]

% In QepcadB format:
(E skoSC1) (E skoMC1) [[(skoSC1 ((skoMC1 skoMC1 skoMC1 (-2))+(skoSC1 ((skoMC1 skoMC1 skoMC1)+(skoSC1 skoMC1 skoMC1 skoMC1)))))<=(skoMC1 skoMC1 skoMC1 (2))]/\[[(skoSC1 ((skoMC1 skoMC1 skoMC1)+(skoSC1 skoMC1 skoMC1 skoMC1)))<=0]/\[[(skoMC1 skoMC1 skoMC1 (-2))<(skoSC1 ((skoMC1 skoMC1 skoMC1 (2))+(skoSC1 ((skoMC1 skoMC1 skoMC1 (-1))+(skoSC1 skoMC1 skoMC1 skoMC1 (-1))))))]/\[[(skoSC1 ((skoMC1 skoMC1 skoMC1 (-1))+(skoSC1 skoMC1 skoMC1 skoMC1 (-1))))<=0]/\[[(skoSC1 skoMC1 skoMC1 skoMC1 (-1))<=(skoMC1 skoMC1 skoMC1)]/\[[(skoMC1 skoMC1 skoMC1 (-1))<(skoSC1 skoMC1 skoMC1 skoMC1)]/\[[(skoMC1 skoMC1 skoMC1 (-2))<=0]/\[[0<(skoMC1 skoMC1 skoMC1 (2))]/\[[skoSC1<=5/4]/\[[2<=skoMC1]/\[[0<=skoSC1]/\[[0<skoMC1]/\[[0<=skoMC1]/\[[(skoMC1 (-1))<(skoSC1 skoMC1)]/\[[(skoSC1 skoMC1 (-1))<=skoMC1]/\[[(skoMC1 skoMC1 skoMC1 (-2))<(skoSC1 skoMC1 skoMC1 skoMC1 (2))]/\[[(skoSC1 skoMC1 skoMC1 skoMC1 (-2))<=(skoMC1 skoMC1 skoMC1 (2))]/\[[(skoMC1 skoMC1 skoMC1 (-2+(skoMC1 (-6))))<(skoSC1 ((skoMC1 skoMC1 skoMC1 skoMC1 (12))+(skoSC1 ((skoMC1 skoMC1 skoMC1 (-1+(skoMC1 (6))))+(skoSC1 ((skoMC1 skoMC1 skoMC1 (-1))+(skoSC1 ((skoMC1 skoMC1 skoMC1 (1/12))+(skoSC1 skoMC1 skoMC1 skoMC1 (1/12))))))))))]/\[(skoSC1 ((skoMC1 skoMC1 skoMC1 skoMC1 (-12))+(skoSC1 ((skoMC1 skoMC1 skoMC1 (1+(skoMC1 (-6))))+(skoSC1 ((skoMC1 skoMC1 skoMC1)+(skoSC1 ((skoMC1 skoMC1 skoMC1 (-1/12))+(skoSC1 skoMC1 skoMC1 skoMC1 (-1/12))))))))))<=(skoMC1 skoMC1 skoMC1 (2+(skoMC1 (6))))]]]]]]]]]]]]]]]]]]].

% In SMTLib2 format:
(declare-fun skoSC1 () Real) (declare-fun skoMC1 () Real) (assert (and (<= (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (- 2.)))) (* skoSC1 (+ (* skoMC1 (* skoMC1 skoMC1)) (* skoSC1 (* skoMC1 (* skoMC1 skoMC1))))))) (* skoMC1 (* skoMC1 (* skoMC1 2.)))) (and (<= (* skoSC1 (+ (* skoMC1 (* skoMC1 skoMC1)) (* skoSC1 (* skoMC1 (* skoMC1 skoMC1))))) 0.) (and (> (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 2.))) (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (- 1.)))) (* skoSC1 (* skoMC1 (* skoMC1 (* skoMC1 (- 1.))))))))) (* skoMC1 (* skoMC1 (* skoMC1 (- 2.))))) (and (<= (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (- 1.)))) (* skoSC1 (* skoMC1 (* skoMC1 (* skoMC1 (- 1.))))))) 0.) (and (<= (* skoSC1 (* skoMC1 (* skoMC1 (* skoMC1 (- 1.))))) (* skoMC1 (* skoMC1 skoMC1))) (and (> (* skoSC1 (* skoMC1 (* skoMC1 skoMC1))) (* skoMC1 (* skoMC1 (* skoMC1 (- 1.))))) (and (<= (* skoMC1 (* skoMC1 (* skoMC1 (- 2.)))) 0.) (and (> (* skoMC1 (* skoMC1 (* skoMC1 2.))) 0.) (and (<= skoSC1 (/ 5. 4.)) (and (<= 2. skoMC1) (and (<= 0. skoSC1) (and (> skoMC1 0.) (and (<= 0. skoMC1) (and (> (* skoSC1 skoMC1) (* skoMC1 (- 1.))) (and (<= (* skoSC1 (* skoMC1 (- 1.))) skoMC1) (and (> (* skoSC1 (* skoMC1 (* skoMC1 (* skoMC1 2.)))) (* skoMC1 (* skoMC1 (* skoMC1 (- 2.))))) (and (<= (* skoSC1 (* skoMC1 (* skoMC1 (* skoMC1 (- 2.))))) (* skoMC1 (* skoMC1 (* skoMC1 2.)))) (and (> (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (* skoMC1 12.)))) (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (+ (- 1.) (* skoMC1 6.))))) (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (- 1.)))) (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (/ 1. 12.)))) (* skoSC1 (* skoMC1 (* skoMC1 (* skoMC1 (/ 1. 12.))))))))))))) (* skoMC1 (* skoMC1 (* skoMC1 (+ (- 2.) (* skoMC1 (- 6.))))))) (<= (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (* skoMC1 (- 12.))))) (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (+ 1. (* skoMC1 (- 6.)))))) (* skoSC1 (+ (* skoMC1 (* skoMC1 skoMC1)) (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (/ (- 1.) 12.)))) (* skoSC1 (* skoMC1 (* skoMC1 (* skoMC1 (/ (- 1.) 12.))))))))))))) (* skoMC1 (* skoMC1 (* skoMC1 (+ 2. (* skoMC1 6.)))))))))))))))))))))))))

% In GRF format:
(sequent " MetiTarski formula " (antecedent (<= (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (- 2.)))) (* skoSC1 (+ (* skoMC1 (* skoMC1 skoMC1)) (* skoSC1 (* skoMC1 (* skoMC1 skoMC1))))))) (* skoMC1 (* skoMC1 (* skoMC1 2.)))) (<= (* skoSC1 (+ (* skoMC1 (* skoMC1 skoMC1)) (* skoSC1 (* skoMC1 (* skoMC1 skoMC1))))) 0.) (> (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 2.))) (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (- 1.)))) (* skoSC1 (* skoMC1 (* skoMC1 (* skoMC1 (- 1.))))))))) (* skoMC1 (* skoMC1 (* skoMC1 (- 2.))))) (<= (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (- 1.)))) (* skoSC1 (* skoMC1 (* skoMC1 (* skoMC1 (- 1.))))))) 0.) (<= (* skoSC1 (* skoMC1 (* skoMC1 (* skoMC1 (- 1.))))) (* skoMC1 (* skoMC1 skoMC1))) (> (* skoSC1 (* skoMC1 (* skoMC1 skoMC1))) (* skoMC1 (* skoMC1 (* skoMC1 (- 1.))))) (<= (* skoMC1 (* skoMC1 (* skoMC1 (- 2.)))) 0.) (> (* skoMC1 (* skoMC1 (* skoMC1 2.))) 0.) (<= skoSC1 (/ 5. 4.)) (<= 2. skoMC1) (<= 0. skoSC1) (> skoMC1 0.) (<= 0. skoMC1) (> (* skoSC1 skoMC1) (* skoMC1 (- 1.))) (<= (* skoSC1 (* skoMC1 (- 1.))) skoMC1) (> (* skoSC1 (* skoMC1 (* skoMC1 (* skoMC1 2.)))) (* skoMC1 (* skoMC1 (* skoMC1 (- 2.))))) (<= (* skoSC1 (* skoMC1 (* skoMC1 (* skoMC1 (- 2.))))) (* skoMC1 (* skoMC1 (* skoMC1 2.)))) (> (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (* skoMC1 12.)))) (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (+ (- 1.) (* skoMC1 6.))))) (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (- 1.)))) (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (/ 1. 12.)))) (* skoSC1 (* skoMC1 (* skoMC1 (* skoMC1 (/ 1. 12.))))))))))))) (* skoMC1 (* skoMC1 (* skoMC1 (+ (- 2.) (* skoMC1 (- 6.)))))))) (succedent (> (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (* skoMC1 (- 12.))))) (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (+ 1. (* skoMC1 (- 6.)))))) (* skoSC1 (+ (* skoMC1 (* skoMC1 skoMC1)) (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (/ (- 1.) 12.)))) (* skoSC1 (* skoMC1 (* skoMC1 (* skoMC1 (/ (- 1.) 12.))))))))))))) (* skoMC1 (* skoMC1 (* skoMC1 (+ 2. (* skoMC1 6.))))))))
-----[end problem]-----

-----[begin problem]-----
% In Mathematica format:
Timing[Resolve[Exists[{skoMC1,skoSC1}, And[skoSC1*(skoMC1*skoMC1*skoMC1*skoMC1*(7+skoMC1*6)+skoSC1*(skoMC1*skoMC1*skoMC1*(-2+skoMC1*skoMC1*6)+skoSC1*(skoMC1*skoMC1*skoMC1*(-1+skoMC1*(-3+skoMC1*2))+skoSC1*(skoMC1*skoMC1*skoMC1*((1/2)+skoMC1*-2)+skoSC1*skoMC1*skoMC1*skoMC1*(1/2)))))<=skoMC1*skoMC1*skoMC1*(-2+skoMC1*(-6+skoMC1*-2)),skoSC1*(skoMC1*skoMC1*skoMC1+skoSC1*skoMC1*skoMC1*skoMC1)<=0,skoSC1*(skoMC1*skoMC1*skoMC1*2+skoSC1*(skoMC1*skoMC1*skoMC1*-1+skoSC1*skoMC1*skoMC1*skoMC1*-1))>skoMC1*skoMC1*skoMC1*-2,skoSC1*(skoMC1*skoMC1*skoMC1*2+skoSC1*(skoMC1*skoMC1*skoMC1*-1+skoSC1*skoMC1*skoMC1*skoMC1*-1))>skoMC1*skoMC1*skoMC1*-2,skoSC1*(skoMC1*skoMC1*skoMC1*-1+skoSC1*skoMC1*skoMC1*skoMC1*-1)<=0,skoSC1*skoMC1*skoMC1*skoMC1*-1<=skoMC1*skoMC1*skoMC1,skoSC1*skoMC1*skoMC1*skoMC1>skoMC1*skoMC1*skoMC1*-1,skoMC1*skoMC1*skoMC1*-2<=0,skoMC1*skoMC1*skoMC1*2>0,skoSC1<=(5/4),2<=skoMC1,0<=skoSC1,skoMC1>0,0<=skoMC1,skoSC1*skoMC1>skoMC1*-1,skoSC1*skoMC1*-1<=skoMC1,skoSC1*skoMC1*skoMC1*skoMC1*2>skoMC1*skoMC1*skoMC1*-2,skoSC1*skoMC1*skoMC1*skoMC1*-2<=skoMC1*skoMC1*skoMC1*2,skoSC1*(skoMC1*skoMC1*skoMC1*skoMC1*12+skoSC1*(skoMC1*skoMC1*skoMC1*(-1+skoMC1*6)+skoSC1*(skoMC1*skoMC1*skoMC1*-1+skoSC1*(skoMC1*skoMC1*skoMC1*(1/12)+skoSC1*skoMC1*skoMC1*skoMC1*(1/12)))))>skoMC1*skoMC1*skoMC1*(-2+skoMC1*-6),skoSC1*(skoMC1*skoMC1*skoMC1*skoMC1*-12+skoSC1*(skoMC1*skoMC1*skoMC1*(1+skoMC1*-6)+skoSC1*(skoMC1*skoMC1*skoMC1+skoSC1*(skoMC1*skoMC1*skoMC1*(-1/12)+skoSC1*skoMC1*skoMC1*skoMC1*(-1/12)))))<=skoMC1*skoMC1*skoMC1*(2+skoMC1*6)]], Reals]]

% In QepcadB format:
(E skoMC1) (E skoSC1) [[(skoSC1 ((skoMC1 skoMC1 skoMC1 skoMC1 (7+(skoMC1 (6))))+(skoSC1 ((skoMC1 skoMC1 skoMC1 (-2+(skoMC1 skoMC1 (6))))+(skoSC1 ((skoMC1 skoMC1 skoMC1 (-1+(skoMC1 (-3+(skoMC1 (2))))))+(skoSC1 ((skoMC1 skoMC1 skoMC1 (1/2+(skoMC1 (-2))))+(skoSC1 skoMC1 skoMC1 skoMC1 (1/2))))))))))<=(skoMC1 skoMC1 skoMC1 (-2+(skoMC1 (-6+(skoMC1 (-2))))))]/\[[(skoSC1 ((skoMC1 skoMC1 skoMC1)+(skoSC1 skoMC1 skoMC1 skoMC1)))<=0]/\[[(skoMC1 skoMC1 skoMC1 (-2))<(skoSC1 ((skoMC1 skoMC1 skoMC1 (2))+(skoSC1 ((skoMC1 skoMC1 skoMC1 (-1))+(skoSC1 skoMC1 skoMC1 skoMC1 (-1))))))]/\[[(skoMC1 skoMC1 skoMC1 (-2))<(skoSC1 ((skoMC1 skoMC1 skoMC1 (2))+(skoSC1 ((skoMC1 skoMC1 skoMC1 (-1))+(skoSC1 skoMC1 skoMC1 skoMC1 (-1))))))]/\[[(skoSC1 ((skoMC1 skoMC1 skoMC1 (-1))+(skoSC1 skoMC1 skoMC1 skoMC1 (-1))))<=0]/\[[(skoSC1 skoMC1 skoMC1 skoMC1 (-1))<=(skoMC1 skoMC1 skoMC1)]/\[[(skoMC1 skoMC1 skoMC1 (-1))<(skoSC1 skoMC1 skoMC1 skoMC1)]/\[[(skoMC1 skoMC1 skoMC1 (-2))<=0]/\[[0<(skoMC1 skoMC1 skoMC1 (2))]/\[[skoSC1<=5/4]/\[[2<=skoMC1]/\[[0<=skoSC1]/\[[0<skoMC1]/\[[0<=skoMC1]/\[[(skoMC1 (-1))<(skoSC1 skoMC1)]/\[[(skoSC1 skoMC1 (-1))<=skoMC1]/\[[(skoMC1 skoMC1 skoMC1 (-2))<(skoSC1 skoMC1 skoMC1 skoMC1 (2))]/\[[(skoSC1 skoMC1 skoMC1 skoMC1 (-2))<=(skoMC1 skoMC1 skoMC1 (2))]/\[[(skoMC1 skoMC1 skoMC1 (-2+(skoMC1 (-6))))<(skoSC1 ((skoMC1 skoMC1 skoMC1 skoMC1 (12))+(skoSC1 ((skoMC1 skoMC1 skoMC1 (-1+(skoMC1 (6))))+(skoSC1 ((skoMC1 skoMC1 skoMC1 (-1))+(skoSC1 ((skoMC1 skoMC1 skoMC1 (1/12))+(skoSC1 skoMC1 skoMC1 skoMC1 (1/12))))))))))]/\[(skoSC1 ((skoMC1 skoMC1 skoMC1 skoMC1 (-12))+(skoSC1 ((skoMC1 skoMC1 skoMC1 (1+(skoMC1 (-6))))+(skoSC1 ((skoMC1 skoMC1 skoMC1)+(skoSC1 ((skoMC1 skoMC1 skoMC1 (-1/12))+(skoSC1 skoMC1 skoMC1 skoMC1 (-1/12))))))))))<=(skoMC1 skoMC1 skoMC1 (2+(skoMC1 (6))))]]]]]]]]]]]]]]]]]]]].

% In SMTLib2 format:
(declare-fun skoMC1 () Real) (declare-fun skoSC1 () Real) (assert (and (<= (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (* skoMC1 (+ 7. (* skoMC1 6.)))))) (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (+ (- 2.) (* skoMC1 (* skoMC1 6.)))))) (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (+ (- 1.) (* skoMC1 (+ (- 3.) (* skoMC1 2.))))))) (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (+ (/ 1. 2.) (* skoMC1 (- 2.)))))) (* skoSC1 (* skoMC1 (* skoMC1 (* skoMC1 (/ 1. 2.))))))))))))) (* skoMC1 (* skoMC1 (* skoMC1 (+ (- 2.) (* skoMC1 (+ (- 6.) (* skoMC1 (- 2.))))))))) (and (<= (* skoSC1 (+ (* skoMC1 (* skoMC1 skoMC1)) (* skoSC1 (* skoMC1 (* skoMC1 skoMC1))))) 0.) (and (> (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 2.))) (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (- 1.)))) (* skoSC1 (* skoMC1 (* skoMC1 (* skoMC1 (- 1.))))))))) (* skoMC1 (* skoMC1 (* skoMC1 (- 2.))))) (and (> (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 2.))) (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (- 1.)))) (* skoSC1 (* skoMC1 (* skoMC1 (* skoMC1 (- 1.))))))))) (* skoMC1 (* skoMC1 (* skoMC1 (- 2.))))) (and (<= (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (- 1.)))) (* skoSC1 (* skoMC1 (* skoMC1 (* skoMC1 (- 1.))))))) 0.) (and (<= (* skoSC1 (* skoMC1 (* skoMC1 (* skoMC1 (- 1.))))) (* skoMC1 (* skoMC1 skoMC1))) (and (> (* skoSC1 (* skoMC1 (* skoMC1 skoMC1))) (* skoMC1 (* skoMC1 (* skoMC1 (- 1.))))) (and (<= (* skoMC1 (* skoMC1 (* skoMC1 (- 2.)))) 0.) (and (> (* skoMC1 (* skoMC1 (* skoMC1 2.))) 0.) (and (<= skoSC1 (/ 5. 4.)) (and (<= 2. skoMC1) (and (<= 0. skoSC1) (and (> skoMC1 0.) (and (<= 0. skoMC1) (and (> (* skoSC1 skoMC1) (* skoMC1 (- 1.))) (and (<= (* skoSC1 (* skoMC1 (- 1.))) skoMC1) (and (> (* skoSC1 (* skoMC1 (* skoMC1 (* skoMC1 2.)))) (* skoMC1 (* skoMC1 (* skoMC1 (- 2.))))) (and (<= (* skoSC1 (* skoMC1 (* skoMC1 (* skoMC1 (- 2.))))) (* skoMC1 (* skoMC1 (* skoMC1 2.)))) (and (> (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (* skoMC1 12.)))) (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (+ (- 1.) (* skoMC1 6.))))) (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (- 1.)))) (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (/ 1. 12.)))) (* skoSC1 (* skoMC1 (* skoMC1 (* skoMC1 (/ 1. 12.))))))))))))) (* skoMC1 (* skoMC1 (* skoMC1 (+ (- 2.) (* skoMC1 (- 6.))))))) (<= (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (* skoMC1 (- 12.))))) (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (+ 1. (* skoMC1 (- 6.)))))) (* skoSC1 (+ (* skoMC1 (* skoMC1 skoMC1)) (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (/ (- 1.) 12.)))) (* skoSC1 (* skoMC1 (* skoMC1 (* skoMC1 (/ (- 1.) 12.))))))))))))) (* skoMC1 (* skoMC1 (* skoMC1 (+ 2. (* skoMC1 6.))))))))))))))))))))))))))

% In GRF format:
(sequent " MetiTarski formula " (antecedent (<= (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (* skoMC1 (+ 7. (* skoMC1 6.)))))) (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (+ (- 2.) (* skoMC1 (* skoMC1 6.)))))) (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (+ (- 1.) (* skoMC1 (+ (- 3.) (* skoMC1 2.))))))) (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (+ (/ 1. 2.) (* skoMC1 (- 2.)))))) (* skoSC1 (* skoMC1 (* skoMC1 (* skoMC1 (/ 1. 2.))))))))))))) (* skoMC1 (* skoMC1 (* skoMC1 (+ (- 2.) (* skoMC1 (+ (- 6.) (* skoMC1 (- 2.))))))))) (<= (* skoSC1 (+ (* skoMC1 (* skoMC1 skoMC1)) (* skoSC1 (* skoMC1 (* skoMC1 skoMC1))))) 0.) (> (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 2.))) (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (- 1.)))) (* skoSC1 (* skoMC1 (* skoMC1 (* skoMC1 (- 1.))))))))) (* skoMC1 (* skoMC1 (* skoMC1 (- 2.))))) (> (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 2.))) (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (- 1.)))) (* skoSC1 (* skoMC1 (* skoMC1 (* skoMC1 (- 1.))))))))) (* skoMC1 (* skoMC1 (* skoMC1 (- 2.))))) (<= (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (- 1.)))) (* skoSC1 (* skoMC1 (* skoMC1 (* skoMC1 (- 1.))))))) 0.) (<= (* skoSC1 (* skoMC1 (* skoMC1 (* skoMC1 (- 1.))))) (* skoMC1 (* skoMC1 skoMC1))) (> (* skoSC1 (* skoMC1 (* skoMC1 skoMC1))) (* skoMC1 (* skoMC1 (* skoMC1 (- 1.))))) (<= (* skoMC1 (* skoMC1 (* skoMC1 (- 2.)))) 0.) (> (* skoMC1 (* skoMC1 (* skoMC1 2.))) 0.) (<= skoSC1 (/ 5. 4.)) (<= 2. skoMC1) (<= 0. skoSC1) (> skoMC1 0.) (<= 0. skoMC1) (> (* skoSC1 skoMC1) (* skoMC1 (- 1.))) (<= (* skoSC1 (* skoMC1 (- 1.))) skoMC1) (> (* skoSC1 (* skoMC1 (* skoMC1 (* skoMC1 2.)))) (* skoMC1 (* skoMC1 (* skoMC1 (- 2.))))) (<= (* skoSC1 (* skoMC1 (* skoMC1 (* skoMC1 (- 2.))))) (* skoMC1 (* skoMC1 (* skoMC1 2.)))) (> (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (* skoMC1 12.)))) (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (+ (- 1.) (* skoMC1 6.))))) (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (- 1.)))) (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (/ 1. 12.)))) (* skoSC1 (* skoMC1 (* skoMC1 (* skoMC1 (/ 1. 12.))))))))))))) (* skoMC1 (* skoMC1 (* skoMC1 (+ (- 2.) (* skoMC1 (- 6.)))))))) (succedent (> (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (* skoMC1 (- 12.))))) (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (+ 1. (* skoMC1 (- 6.)))))) (* skoSC1 (+ (* skoMC1 (* skoMC1 skoMC1)) (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (/ (- 1.) 12.)))) (* skoSC1 (* skoMC1 (* skoMC1 (* skoMC1 (/ (- 1.) 12.))))))))))))) (* skoMC1 (* skoMC1 (* skoMC1 (+ 2. (* skoMC1 6.))))))))
-----[end problem]-----

-----[begin problem]-----
% In Mathematica format:
Timing[Resolve[Exists[{skoSC1,skoMC1}, And[skoSC1*(skoMC1*skoMC1*skoMC1+skoSC1*skoMC1*skoMC1*skoMC1)>0,skoSC1*(skoMC1*skoMC1*skoMC1*2+skoSC1*(skoMC1*skoMC1*skoMC1*-1+skoSC1*skoMC1*skoMC1*skoMC1*-1))>skoMC1*skoMC1*skoMC1*-2,skoSC1*(skoMC1*skoMC1*skoMC1*-1+skoSC1*skoMC1*skoMC1*skoMC1*-1)<=0,skoSC1*skoMC1*skoMC1*skoMC1*-1<=skoMC1*skoMC1*skoMC1,skoSC1*skoMC1*skoMC1*skoMC1>skoMC1*skoMC1*skoMC1*-1,skoMC1*skoMC1*skoMC1*-2<=0,skoMC1*skoMC1*skoMC1*2>0,skoSC1<=(5/4),2<=skoMC1,0<=skoSC1,skoMC1>0,0<=skoMC1,skoSC1*skoMC1>skoMC1*-1,skoSC1*skoMC1*-1<=skoMC1,skoSC1*skoMC1*skoMC1*skoMC1*2>skoMC1*skoMC1*skoMC1*-2,skoSC1*skoMC1*skoMC1*skoMC1*-2<=skoMC1*skoMC1*skoMC1*2,skoSC1*(skoMC1*skoMC1*skoMC1*skoMC1*12+skoSC1*(skoMC1*skoMC1*skoMC1*(-1+skoMC1*6)+skoSC1*(skoMC1*skoMC1*skoMC1*-1+skoSC1*(skoMC1*skoMC1*skoMC1*(1/12)+skoSC1*skoMC1*skoMC1*skoMC1*(1/12)))))>skoMC1*skoMC1*skoMC1*(-2+skoMC1*-6),skoSC1*(skoMC1*skoMC1*skoMC1*skoMC1*-12+skoSC1*(skoMC1*skoMC1*skoMC1*(1+skoMC1*-6)+skoSC1*(skoMC1*skoMC1*skoMC1+skoSC1*(skoMC1*skoMC1*skoMC1*(-1/12)+skoSC1*skoMC1*skoMC1*skoMC1*(-1/12)))))<=skoMC1*skoMC1*skoMC1*(2+skoMC1*6)]], Reals]]

% In QepcadB format:
(E skoSC1) (E skoMC1) [[0<(skoSC1 ((skoMC1 skoMC1 skoMC1)+(skoSC1 skoMC1 skoMC1 skoMC1)))]/\[[(skoMC1 skoMC1 skoMC1 (-2))<(skoSC1 ((skoMC1 skoMC1 skoMC1 (2))+(skoSC1 ((skoMC1 skoMC1 skoMC1 (-1))+(skoSC1 skoMC1 skoMC1 skoMC1 (-1))))))]/\[[(skoSC1 ((skoMC1 skoMC1 skoMC1 (-1))+(skoSC1 skoMC1 skoMC1 skoMC1 (-1))))<=0]/\[[(skoSC1 skoMC1 skoMC1 skoMC1 (-1))<=(skoMC1 skoMC1 skoMC1)]/\[[(skoMC1 skoMC1 skoMC1 (-1))<(skoSC1 skoMC1 skoMC1 skoMC1)]/\[[(skoMC1 skoMC1 skoMC1 (-2))<=0]/\[[0<(skoMC1 skoMC1 skoMC1 (2))]/\[[skoSC1<=5/4]/\[[2<=skoMC1]/\[[0<=skoSC1]/\[[0<skoMC1]/\[[0<=skoMC1]/\[[(skoMC1 (-1))<(skoSC1 skoMC1)]/\[[(skoSC1 skoMC1 (-1))<=skoMC1]/\[[(skoMC1 skoMC1 skoMC1 (-2))<(skoSC1 skoMC1 skoMC1 skoMC1 (2))]/\[[(skoSC1 skoMC1 skoMC1 skoMC1 (-2))<=(skoMC1 skoMC1 skoMC1 (2))]/\[[(skoMC1 skoMC1 skoMC1 (-2+(skoMC1 (-6))))<(skoSC1 ((skoMC1 skoMC1 skoMC1 skoMC1 (12))+(skoSC1 ((skoMC1 skoMC1 skoMC1 (-1+(skoMC1 (6))))+(skoSC1 ((skoMC1 skoMC1 skoMC1 (-1))+(skoSC1 ((skoMC1 skoMC1 skoMC1 (1/12))+(skoSC1 skoMC1 skoMC1 skoMC1 (1/12))))))))))]/\[(skoSC1 ((skoMC1 skoMC1 skoMC1 skoMC1 (-12))+(skoSC1 ((skoMC1 skoMC1 skoMC1 (1+(skoMC1 (-6))))+(skoSC1 ((skoMC1 skoMC1 skoMC1)+(skoSC1 ((skoMC1 skoMC1 skoMC1 (-1/12))+(skoSC1 skoMC1 skoMC1 skoMC1 (-1/12))))))))))<=(skoMC1 skoMC1 skoMC1 (2+(skoMC1 (6))))]]]]]]]]]]]]]]]]]].

% In SMTLib2 format:
(declare-fun skoSC1 () Real) (declare-fun skoMC1 () Real) (assert (and (> (* skoSC1 (+ (* skoMC1 (* skoMC1 skoMC1)) (* skoSC1 (* skoMC1 (* skoMC1 skoMC1))))) 0.) (and (> (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 2.))) (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (- 1.)))) (* skoSC1 (* skoMC1 (* skoMC1 (* skoMC1 (- 1.))))))))) (* skoMC1 (* skoMC1 (* skoMC1 (- 2.))))) (and (<= (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (- 1.)))) (* skoSC1 (* skoMC1 (* skoMC1 (* skoMC1 (- 1.))))))) 0.) (and (<= (* skoSC1 (* skoMC1 (* skoMC1 (* skoMC1 (- 1.))))) (* skoMC1 (* skoMC1 skoMC1))) (and (> (* skoSC1 (* skoMC1 (* skoMC1 skoMC1))) (* skoMC1 (* skoMC1 (* skoMC1 (- 1.))))) (and (<= (* skoMC1 (* skoMC1 (* skoMC1 (- 2.)))) 0.) (and (> (* skoMC1 (* skoMC1 (* skoMC1 2.))) 0.) (and (<= skoSC1 (/ 5. 4.)) (and (<= 2. skoMC1) (and (<= 0. skoSC1) (and (> skoMC1 0.) (and (<= 0. skoMC1) (and (> (* skoSC1 skoMC1) (* skoMC1 (- 1.))) (and (<= (* skoSC1 (* skoMC1 (- 1.))) skoMC1) (and (> (* skoSC1 (* skoMC1 (* skoMC1 (* skoMC1 2.)))) (* skoMC1 (* skoMC1 (* skoMC1 (- 2.))))) (and (<= (* skoSC1 (* skoMC1 (* skoMC1 (* skoMC1 (- 2.))))) (* skoMC1 (* skoMC1 (* skoMC1 2.)))) (and (> (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (* skoMC1 12.)))) (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (+ (- 1.) (* skoMC1 6.))))) (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (- 1.)))) (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (/ 1. 12.)))) (* skoSC1 (* skoMC1 (* skoMC1 (* skoMC1 (/ 1. 12.))))))))))))) (* skoMC1 (* skoMC1 (* skoMC1 (+ (- 2.) (* skoMC1 (- 6.))))))) (<= (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (* skoMC1 (- 12.))))) (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (+ 1. (* skoMC1 (- 6.)))))) (* skoSC1 (+ (* skoMC1 (* skoMC1 skoMC1)) (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (/ (- 1.) 12.)))) (* skoSC1 (* skoMC1 (* skoMC1 (* skoMC1 (/ (- 1.) 12.))))))))))))) (* skoMC1 (* skoMC1 (* skoMC1 (+ 2. (* skoMC1 6.))))))))))))))))))))))))

% In GRF format:
(sequent " MetiTarski formula " (antecedent (> (* skoSC1 (+ (* skoMC1 (* skoMC1 skoMC1)) (* skoSC1 (* skoMC1 (* skoMC1 skoMC1))))) 0.) (> (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 2.))) (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (- 1.)))) (* skoSC1 (* skoMC1 (* skoMC1 (* skoMC1 (- 1.))))))))) (* skoMC1 (* skoMC1 (* skoMC1 (- 2.))))) (<= (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (- 1.)))) (* skoSC1 (* skoMC1 (* skoMC1 (* skoMC1 (- 1.))))))) 0.) (<= (* skoSC1 (* skoMC1 (* skoMC1 (* skoMC1 (- 1.))))) (* skoMC1 (* skoMC1 skoMC1))) (> (* skoSC1 (* skoMC1 (* skoMC1 skoMC1))) (* skoMC1 (* skoMC1 (* skoMC1 (- 1.))))) (<= (* skoMC1 (* skoMC1 (* skoMC1 (- 2.)))) 0.) (> (* skoMC1 (* skoMC1 (* skoMC1 2.))) 0.) (<= skoSC1 (/ 5. 4.)) (<= 2. skoMC1) (<= 0. skoSC1) (> skoMC1 0.) (<= 0. skoMC1) (> (* skoSC1 skoMC1) (* skoMC1 (- 1.))) (<= (* skoSC1 (* skoMC1 (- 1.))) skoMC1) (> (* skoSC1 (* skoMC1 (* skoMC1 (* skoMC1 2.)))) (* skoMC1 (* skoMC1 (* skoMC1 (- 2.))))) (<= (* skoSC1 (* skoMC1 (* skoMC1 (* skoMC1 (- 2.))))) (* skoMC1 (* skoMC1 (* skoMC1 2.)))) (> (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (* skoMC1 12.)))) (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (+ (- 1.) (* skoMC1 6.))))) (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (- 1.)))) (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (/ 1. 12.)))) (* skoSC1 (* skoMC1 (* skoMC1 (* skoMC1 (/ 1. 12.))))))))))))) (* skoMC1 (* skoMC1 (* skoMC1 (+ (- 2.) (* skoMC1 (- 6.)))))))) (succedent (> (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (* skoMC1 (- 12.))))) (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (+ 1. (* skoMC1 (- 6.)))))) (* skoSC1 (+ (* skoMC1 (* skoMC1 skoMC1)) (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (/ (- 1.) 12.)))) (* skoSC1 (* skoMC1 (* skoMC1 (* skoMC1 (/ (- 1.) 12.))))))))))))) (* skoMC1 (* skoMC1 (* skoMC1 (+ 2. (* skoMC1 6.))))))))
-----[end problem]-----

-----[begin problem]-----
% In Mathematica format:
Timing[Resolve[Exists[{skoSC1,skoMC1}, And[skoSC1*(skoMC1*skoMC1*skoMC1*-2+skoSC1*(skoMC1*skoMC1*skoMC1+skoSC1*skoMC1*skoMC1*skoMC1))<=skoMC1*skoMC1*skoMC1*2,skoSC1*(skoMC1*skoMC1*skoMC1+skoSC1*skoMC1*skoMC1*skoMC1)>0,skoSC1*(skoMC1*skoMC1*skoMC1*2+skoSC1*(skoMC1*skoMC1*skoMC1*-1+skoSC1*skoMC1*skoMC1*skoMC1*-1))>skoMC1*skoMC1*skoMC1*-2,skoSC1*(skoMC1*skoMC1*skoMC1*-1+skoSC1*skoMC1*skoMC1*skoMC1*-1)<=0,skoSC1*skoMC1*skoMC1*skoMC1*-1<=skoMC1*skoMC1*skoMC1,skoSC1*skoMC1*skoMC1*skoMC1>skoMC1*skoMC1*skoMC1*-1,skoMC1*skoMC1*skoMC1*-2<=0,skoMC1*skoMC1*skoMC1*2>0,skoSC1<=(5/4),2<=skoMC1,0<=skoSC1,skoMC1>0,0<=skoMC1,skoSC1*skoMC1>skoMC1*-1,skoSC1*skoMC1*-1<=skoMC1,skoSC1*skoMC1*skoMC1*skoMC1*2>skoMC1*skoMC1*skoMC1*-2,skoSC1*skoMC1*skoMC1*skoMC1*-2<=skoMC1*skoMC1*skoMC1*2,skoSC1*(skoMC1*skoMC1*skoMC1*skoMC1*12+skoSC1*(skoMC1*skoMC1*skoMC1*(-1+skoMC1*6)+skoSC1*(skoMC1*skoMC1*skoMC1*-1+skoSC1*(skoMC1*skoMC1*skoMC1*(1/12)+skoSC1*skoMC1*skoMC1*skoMC1*(1/12)))))>skoMC1*skoMC1*skoMC1*(-2+skoMC1*-6),skoSC1*(skoMC1*skoMC1*skoMC1*skoMC1*-12+skoSC1*(skoMC1*skoMC1*skoMC1*(1+skoMC1*-6)+skoSC1*(skoMC1*skoMC1*skoMC1+skoSC1*(skoMC1*skoMC1*skoMC1*(-1/12)+skoSC1*skoMC1*skoMC1*skoMC1*(-1/12)))))<=skoMC1*skoMC1*skoMC1*(2+skoMC1*6)]], Reals]]

% In QepcadB format:
(E skoSC1) (E skoMC1) [[(skoSC1 ((skoMC1 skoMC1 skoMC1 (-2))+(skoSC1 ((skoMC1 skoMC1 skoMC1)+(skoSC1 skoMC1 skoMC1 skoMC1)))))<=(skoMC1 skoMC1 skoMC1 (2))]/\[[0<(skoSC1 ((skoMC1 skoMC1 skoMC1)+(skoSC1 skoMC1 skoMC1 skoMC1)))]/\[[(skoMC1 skoMC1 skoMC1 (-2))<(skoSC1 ((skoMC1 skoMC1 skoMC1 (2))+(skoSC1 ((skoMC1 skoMC1 skoMC1 (-1))+(skoSC1 skoMC1 skoMC1 skoMC1 (-1))))))]/\[[(skoSC1 ((skoMC1 skoMC1 skoMC1 (-1))+(skoSC1 skoMC1 skoMC1 skoMC1 (-1))))<=0]/\[[(skoSC1 skoMC1 skoMC1 skoMC1 (-1))<=(skoMC1 skoMC1 skoMC1)]/\[[(skoMC1 skoMC1 skoMC1 (-1))<(skoSC1 skoMC1 skoMC1 skoMC1)]/\[[(skoMC1 skoMC1 skoMC1 (-2))<=0]/\[[0<(skoMC1 skoMC1 skoMC1 (2))]/\[[skoSC1<=5/4]/\[[2<=skoMC1]/\[[0<=skoSC1]/\[[0<skoMC1]/\[[0<=skoMC1]/\[[(skoMC1 (-1))<(skoSC1 skoMC1)]/\[[(skoSC1 skoMC1 (-1))<=skoMC1]/\[[(skoMC1 skoMC1 skoMC1 (-2))<(skoSC1 skoMC1 skoMC1 skoMC1 (2))]/\[[(skoSC1 skoMC1 skoMC1 skoMC1 (-2))<=(skoMC1 skoMC1 skoMC1 (2))]/\[[(skoMC1 skoMC1 skoMC1 (-2+(skoMC1 (-6))))<(skoSC1 ((skoMC1 skoMC1 skoMC1 skoMC1 (12))+(skoSC1 ((skoMC1 skoMC1 skoMC1 (-1+(skoMC1 (6))))+(skoSC1 ((skoMC1 skoMC1 skoMC1 (-1))+(skoSC1 ((skoMC1 skoMC1 skoMC1 (1/12))+(skoSC1 skoMC1 skoMC1 skoMC1 (1/12))))))))))]/\[(skoSC1 ((skoMC1 skoMC1 skoMC1 skoMC1 (-12))+(skoSC1 ((skoMC1 skoMC1 skoMC1 (1+(skoMC1 (-6))))+(skoSC1 ((skoMC1 skoMC1 skoMC1)+(skoSC1 ((skoMC1 skoMC1 skoMC1 (-1/12))+(skoSC1 skoMC1 skoMC1 skoMC1 (-1/12))))))))))<=(skoMC1 skoMC1 skoMC1 (2+(skoMC1 (6))))]]]]]]]]]]]]]]]]]]].

% In SMTLib2 format:
(declare-fun skoSC1 () Real) (declare-fun skoMC1 () Real) (assert (and (<= (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (- 2.)))) (* skoSC1 (+ (* skoMC1 (* skoMC1 skoMC1)) (* skoSC1 (* skoMC1 (* skoMC1 skoMC1))))))) (* skoMC1 (* skoMC1 (* skoMC1 2.)))) (and (> (* skoSC1 (+ (* skoMC1 (* skoMC1 skoMC1)) (* skoSC1 (* skoMC1 (* skoMC1 skoMC1))))) 0.) (and (> (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 2.))) (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (- 1.)))) (* skoSC1 (* skoMC1 (* skoMC1 (* skoMC1 (- 1.))))))))) (* skoMC1 (* skoMC1 (* skoMC1 (- 2.))))) (and (<= (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (- 1.)))) (* skoSC1 (* skoMC1 (* skoMC1 (* skoMC1 (- 1.))))))) 0.) (and (<= (* skoSC1 (* skoMC1 (* skoMC1 (* skoMC1 (- 1.))))) (* skoMC1 (* skoMC1 skoMC1))) (and (> (* skoSC1 (* skoMC1 (* skoMC1 skoMC1))) (* skoMC1 (* skoMC1 (* skoMC1 (- 1.))))) (and (<= (* skoMC1 (* skoMC1 (* skoMC1 (- 2.)))) 0.) (and (> (* skoMC1 (* skoMC1 (* skoMC1 2.))) 0.) (and (<= skoSC1 (/ 5. 4.)) (and (<= 2. skoMC1) (and (<= 0. skoSC1) (and (> skoMC1 0.) (and (<= 0. skoMC1) (and (> (* skoSC1 skoMC1) (* skoMC1 (- 1.))) (and (<= (* skoSC1 (* skoMC1 (- 1.))) skoMC1) (and (> (* skoSC1 (* skoMC1 (* skoMC1 (* skoMC1 2.)))) (* skoMC1 (* skoMC1 (* skoMC1 (- 2.))))) (and (<= (* skoSC1 (* skoMC1 (* skoMC1 (* skoMC1 (- 2.))))) (* skoMC1 (* skoMC1 (* skoMC1 2.)))) (and (> (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (* skoMC1 12.)))) (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (+ (- 1.) (* skoMC1 6.))))) (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (- 1.)))) (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (/ 1. 12.)))) (* skoSC1 (* skoMC1 (* skoMC1 (* skoMC1 (/ 1. 12.))))))))))))) (* skoMC1 (* skoMC1 (* skoMC1 (+ (- 2.) (* skoMC1 (- 6.))))))) (<= (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (* skoMC1 (- 12.))))) (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (+ 1. (* skoMC1 (- 6.)))))) (* skoSC1 (+ (* skoMC1 (* skoMC1 skoMC1)) (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (/ (- 1.) 12.)))) (* skoSC1 (* skoMC1 (* skoMC1 (* skoMC1 (/ (- 1.) 12.))))))))))))) (* skoMC1 (* skoMC1 (* skoMC1 (+ 2. (* skoMC1 6.)))))))))))))))))))))))))

% In GRF format:
(sequent " MetiTarski formula " (antecedent (<= (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (- 2.)))) (* skoSC1 (+ (* skoMC1 (* skoMC1 skoMC1)) (* skoSC1 (* skoMC1 (* skoMC1 skoMC1))))))) (* skoMC1 (* skoMC1 (* skoMC1 2.)))) (> (* skoSC1 (+ (* skoMC1 (* skoMC1 skoMC1)) (* skoSC1 (* skoMC1 (* skoMC1 skoMC1))))) 0.) (> (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 2.))) (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (- 1.)))) (* skoSC1 (* skoMC1 (* skoMC1 (* skoMC1 (- 1.))))))))) (* skoMC1 (* skoMC1 (* skoMC1 (- 2.))))) (<= (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (- 1.)))) (* skoSC1 (* skoMC1 (* skoMC1 (* skoMC1 (- 1.))))))) 0.) (<= (* skoSC1 (* skoMC1 (* skoMC1 (* skoMC1 (- 1.))))) (* skoMC1 (* skoMC1 skoMC1))) (> (* skoSC1 (* skoMC1 (* skoMC1 skoMC1))) (* skoMC1 (* skoMC1 (* skoMC1 (- 1.))))) (<= (* skoMC1 (* skoMC1 (* skoMC1 (- 2.)))) 0.) (> (* skoMC1 (* skoMC1 (* skoMC1 2.))) 0.) (<= skoSC1 (/ 5. 4.)) (<= 2. skoMC1) (<= 0. skoSC1) (> skoMC1 0.) (<= 0. skoMC1) (> (* skoSC1 skoMC1) (* skoMC1 (- 1.))) (<= (* skoSC1 (* skoMC1 (- 1.))) skoMC1) (> (* skoSC1 (* skoMC1 (* skoMC1 (* skoMC1 2.)))) (* skoMC1 (* skoMC1 (* skoMC1 (- 2.))))) (<= (* skoSC1 (* skoMC1 (* skoMC1 (* skoMC1 (- 2.))))) (* skoMC1 (* skoMC1 (* skoMC1 2.)))) (> (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (* skoMC1 12.)))) (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (+ (- 1.) (* skoMC1 6.))))) (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (- 1.)))) (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (/ 1. 12.)))) (* skoSC1 (* skoMC1 (* skoMC1 (* skoMC1 (/ 1. 12.))))))))))))) (* skoMC1 (* skoMC1 (* skoMC1 (+ (- 2.) (* skoMC1 (- 6.)))))))) (succedent (> (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (* skoMC1 (- 12.))))) (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (+ 1. (* skoMC1 (- 6.)))))) (* skoSC1 (+ (* skoMC1 (* skoMC1 skoMC1)) (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (/ (- 1.) 12.)))) (* skoSC1 (* skoMC1 (* skoMC1 (* skoMC1 (/ (- 1.) 12.))))))))))))) (* skoMC1 (* skoMC1 (* skoMC1 (+ 2. (* skoMC1 6.))))))))
-----[end problem]-----

-----[begin problem]-----
% In Mathematica format:
Timing[Resolve[Exists[{skoSC1,skoMC1}, And[skoSC1>0,skoSC1*(skoMC1*skoMC1*skoMC1*-2+skoSC1*(skoMC1*skoMC1*skoMC1+skoSC1*skoMC1*skoMC1*skoMC1))<=skoMC1*skoMC1*skoMC1*2,skoSC1*(skoMC1*skoMC1*skoMC1+skoSC1*skoMC1*skoMC1*skoMC1)>0,skoSC1*(skoMC1*skoMC1*skoMC1*2+skoSC1*(skoMC1*skoMC1*skoMC1*-1+skoSC1*skoMC1*skoMC1*skoMC1*-1))>skoMC1*skoMC1*skoMC1*-2,skoSC1*(skoMC1*skoMC1*skoMC1*-1+skoSC1*skoMC1*skoMC1*skoMC1*-1)<=0,skoSC1*skoMC1*skoMC1*skoMC1*-1<=skoMC1*skoMC1*skoMC1,skoSC1*skoMC1*skoMC1*skoMC1>skoMC1*skoMC1*skoMC1*-1,skoMC1*skoMC1*skoMC1*-2<=0,skoMC1*skoMC1*skoMC1*2>0,skoSC1<=(5/4),2<=skoMC1,0<=skoSC1,skoMC1>0,0<=skoMC1,skoSC1*skoMC1>skoMC1*-1,skoSC1*skoMC1*-1<=skoMC1,skoSC1*skoMC1*skoMC1*skoMC1*2>skoMC1*skoMC1*skoMC1*-2,skoSC1*skoMC1*skoMC1*skoMC1*-2<=skoMC1*skoMC1*skoMC1*2,skoSC1*(skoMC1*skoMC1*skoMC1*skoMC1*12+skoSC1*(skoMC1*skoMC1*skoMC1*(-1+skoMC1*6)+skoSC1*(skoMC1*skoMC1*skoMC1*-1+skoSC1*(skoMC1*skoMC1*skoMC1*(1/12)+skoSC1*skoMC1*skoMC1*skoMC1*(1/12)))))>skoMC1*skoMC1*skoMC1*(-2+skoMC1*-6),skoSC1*(skoMC1*skoMC1*skoMC1*skoMC1*-12+skoSC1*(skoMC1*skoMC1*skoMC1*(1+skoMC1*-6)+skoSC1*(skoMC1*skoMC1*skoMC1+skoSC1*(skoMC1*skoMC1*skoMC1*(-1/12)+skoSC1*skoMC1*skoMC1*skoMC1*(-1/12)))))<=skoMC1*skoMC1*skoMC1*(2+skoMC1*6)]], Reals]]

% In QepcadB format:
(E skoSC1) (E skoMC1) [[0<skoSC1]/\[[(skoSC1 ((skoMC1 skoMC1 skoMC1 (-2))+(skoSC1 ((skoMC1 skoMC1 skoMC1)+(skoSC1 skoMC1 skoMC1 skoMC1)))))<=(skoMC1 skoMC1 skoMC1 (2))]/\[[0<(skoSC1 ((skoMC1 skoMC1 skoMC1)+(skoSC1 skoMC1 skoMC1 skoMC1)))]/\[[(skoMC1 skoMC1 skoMC1 (-2))<(skoSC1 ((skoMC1 skoMC1 skoMC1 (2))+(skoSC1 ((skoMC1 skoMC1 skoMC1 (-1))+(skoSC1 skoMC1 skoMC1 skoMC1 (-1))))))]/\[[(skoSC1 ((skoMC1 skoMC1 skoMC1 (-1))+(skoSC1 skoMC1 skoMC1 skoMC1 (-1))))<=0]/\[[(skoSC1 skoMC1 skoMC1 skoMC1 (-1))<=(skoMC1 skoMC1 skoMC1)]/\[[(skoMC1 skoMC1 skoMC1 (-1))<(skoSC1 skoMC1 skoMC1 skoMC1)]/\[[(skoMC1 skoMC1 skoMC1 (-2))<=0]/\[[0<(skoMC1 skoMC1 skoMC1 (2))]/\[[skoSC1<=5/4]/\[[2<=skoMC1]/\[[0<=skoSC1]/\[[0<skoMC1]/\[[0<=skoMC1]/\[[(skoMC1 (-1))<(skoSC1 skoMC1)]/\[[(skoSC1 skoMC1 (-1))<=skoMC1]/\[[(skoMC1 skoMC1 skoMC1 (-2))<(skoSC1 skoMC1 skoMC1 skoMC1 (2))]/\[[(skoSC1 skoMC1 skoMC1 skoMC1 (-2))<=(skoMC1 skoMC1 skoMC1 (2))]/\[[(skoMC1 skoMC1 skoMC1 (-2+(skoMC1 (-6))))<(skoSC1 ((skoMC1 skoMC1 skoMC1 skoMC1 (12))+(skoSC1 ((skoMC1 skoMC1 skoMC1 (-1+(skoMC1 (6))))+(skoSC1 ((skoMC1 skoMC1 skoMC1 (-1))+(skoSC1 ((skoMC1 skoMC1 skoMC1 (1/12))+(skoSC1 skoMC1 skoMC1 skoMC1 (1/12))))))))))]/\[(skoSC1 ((skoMC1 skoMC1 skoMC1 skoMC1 (-12))+(skoSC1 ((skoMC1 skoMC1 skoMC1 (1+(skoMC1 (-6))))+(skoSC1 ((skoMC1 skoMC1 skoMC1)+(skoSC1 ((skoMC1 skoMC1 skoMC1 (-1/12))+(skoSC1 skoMC1 skoMC1 skoMC1 (-1/12))))))))))<=(skoMC1 skoMC1 skoMC1 (2+(skoMC1 (6))))]]]]]]]]]]]]]]]]]]]].

% In SMTLib2 format:
(declare-fun skoSC1 () Real) (declare-fun skoMC1 () Real) (assert (and (> skoSC1 0.) (and (<= (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (- 2.)))) (* skoSC1 (+ (* skoMC1 (* skoMC1 skoMC1)) (* skoSC1 (* skoMC1 (* skoMC1 skoMC1))))))) (* skoMC1 (* skoMC1 (* skoMC1 2.)))) (and (> (* skoSC1 (+ (* skoMC1 (* skoMC1 skoMC1)) (* skoSC1 (* skoMC1 (* skoMC1 skoMC1))))) 0.) (and (> (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 2.))) (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (- 1.)))) (* skoSC1 (* skoMC1 (* skoMC1 (* skoMC1 (- 1.))))))))) (* skoMC1 (* skoMC1 (* skoMC1 (- 2.))))) (and (<= (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (- 1.)))) (* skoSC1 (* skoMC1 (* skoMC1 (* skoMC1 (- 1.))))))) 0.) (and (<= (* skoSC1 (* skoMC1 (* skoMC1 (* skoMC1 (- 1.))))) (* skoMC1 (* skoMC1 skoMC1))) (and (> (* skoSC1 (* skoMC1 (* skoMC1 skoMC1))) (* skoMC1 (* skoMC1 (* skoMC1 (- 1.))))) (and (<= (* skoMC1 (* skoMC1 (* skoMC1 (- 2.)))) 0.) (and (> (* skoMC1 (* skoMC1 (* skoMC1 2.))) 0.) (and (<= skoSC1 (/ 5. 4.)) (and (<= 2. skoMC1) (and (<= 0. skoSC1) (and (> skoMC1 0.) (and (<= 0. skoMC1) (and (> (* skoSC1 skoMC1) (* skoMC1 (- 1.))) (and (<= (* skoSC1 (* skoMC1 (- 1.))) skoMC1) (and (> (* skoSC1 (* skoMC1 (* skoMC1 (* skoMC1 2.)))) (* skoMC1 (* skoMC1 (* skoMC1 (- 2.))))) (and (<= (* skoSC1 (* skoMC1 (* skoMC1 (* skoMC1 (- 2.))))) (* skoMC1 (* skoMC1 (* skoMC1 2.)))) (and (> (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (* skoMC1 12.)))) (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (+ (- 1.) (* skoMC1 6.))))) (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (- 1.)))) (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (/ 1. 12.)))) (* skoSC1 (* skoMC1 (* skoMC1 (* skoMC1 (/ 1. 12.))))))))))))) (* skoMC1 (* skoMC1 (* skoMC1 (+ (- 2.) (* skoMC1 (- 6.))))))) (<= (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (* skoMC1 (- 12.))))) (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (+ 1. (* skoMC1 (- 6.)))))) (* skoSC1 (+ (* skoMC1 (* skoMC1 skoMC1)) (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (/ (- 1.) 12.)))) (* skoSC1 (* skoMC1 (* skoMC1 (* skoMC1 (/ (- 1.) 12.))))))))))))) (* skoMC1 (* skoMC1 (* skoMC1 (+ 2. (* skoMC1 6.))))))))))))))))))))))))))

% In GRF format:
(sequent " MetiTarski formula " (antecedent (> skoSC1 0.) (<= (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (- 2.)))) (* skoSC1 (+ (* skoMC1 (* skoMC1 skoMC1)) (* skoSC1 (* skoMC1 (* skoMC1 skoMC1))))))) (* skoMC1 (* skoMC1 (* skoMC1 2.)))) (> (* skoSC1 (+ (* skoMC1 (* skoMC1 skoMC1)) (* skoSC1 (* skoMC1 (* skoMC1 skoMC1))))) 0.) (> (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 2.))) (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (- 1.)))) (* skoSC1 (* skoMC1 (* skoMC1 (* skoMC1 (- 1.))))))))) (* skoMC1 (* skoMC1 (* skoMC1 (- 2.))))) (<= (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (- 1.)))) (* skoSC1 (* skoMC1 (* skoMC1 (* skoMC1 (- 1.))))))) 0.) (<= (* skoSC1 (* skoMC1 (* skoMC1 (* skoMC1 (- 1.))))) (* skoMC1 (* skoMC1 skoMC1))) (> (* skoSC1 (* skoMC1 (* skoMC1 skoMC1))) (* skoMC1 (* skoMC1 (* skoMC1 (- 1.))))) (<= (* skoMC1 (* skoMC1 (* skoMC1 (- 2.)))) 0.) (> (* skoMC1 (* skoMC1 (* skoMC1 2.))) 0.) (<= skoSC1 (/ 5. 4.)) (<= 2. skoMC1) (<= 0. skoSC1) (> skoMC1 0.) (<= 0. skoMC1) (> (* skoSC1 skoMC1) (* skoMC1 (- 1.))) (<= (* skoSC1 (* skoMC1 (- 1.))) skoMC1) (> (* skoSC1 (* skoMC1 (* skoMC1 (* skoMC1 2.)))) (* skoMC1 (* skoMC1 (* skoMC1 (- 2.))))) (<= (* skoSC1 (* skoMC1 (* skoMC1 (* skoMC1 (- 2.))))) (* skoMC1 (* skoMC1 (* skoMC1 2.)))) (> (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (* skoMC1 12.)))) (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (+ (- 1.) (* skoMC1 6.))))) (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (- 1.)))) (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (/ 1. 12.)))) (* skoSC1 (* skoMC1 (* skoMC1 (* skoMC1 (/ 1. 12.))))))))))))) (* skoMC1 (* skoMC1 (* skoMC1 (+ (- 2.) (* skoMC1 (- 6.)))))))) (succedent (> (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (* skoMC1 (- 12.))))) (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (+ 1. (* skoMC1 (- 6.)))))) (* skoSC1 (+ (* skoMC1 (* skoMC1 skoMC1)) (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (/ (- 1.) 12.)))) (* skoSC1 (* skoMC1 (* skoMC1 (* skoMC1 (/ (- 1.) 12.))))))))))))) (* skoMC1 (* skoMC1 (* skoMC1 (+ 2. (* skoMC1 6.))))))))
-----[end problem]-----

-----[begin problem]-----
% In Mathematica format:
Timing[Resolve[Exists[{skoSC1,skoMC1}, And[skoSC1*skoMC1<=skoMC1*-1,skoSC1<=0,skoSC1*(skoMC1*skoMC1*skoMC1*-2+skoSC1*(skoMC1*skoMC1*skoMC1+skoSC1*skoMC1*skoMC1*skoMC1))<=skoMC1*skoMC1*skoMC1*2,skoSC1*(skoMC1*skoMC1*skoMC1+skoSC1*skoMC1*skoMC1*skoMC1)>0,skoSC1*(skoMC1*skoMC1*skoMC1*2+skoSC1*(skoMC1*skoMC1*skoMC1*-1+skoSC1*skoMC1*skoMC1*skoMC1*-1))>skoMC1*skoMC1*skoMC1*-2,skoSC1*(skoMC1*skoMC1*skoMC1*-1+skoSC1*skoMC1*skoMC1*skoMC1*-1)<=0,skoSC1*skoMC1*skoMC1*skoMC1*-1<=skoMC1*skoMC1*skoMC1,skoSC1*skoMC1*skoMC1*skoMC1>skoMC1*skoMC1*skoMC1*-1,skoMC1*skoMC1*skoMC1*-2<=0,skoMC1*skoMC1*skoMC1*2>0,skoSC1<=(5/4),2<=skoMC1,0<=skoSC1,skoMC1>0,0<=skoMC1,skoSC1*skoMC1>skoMC1*-1,skoSC1*skoMC1*-1<=skoMC1,skoSC1*skoMC1*skoMC1*skoMC1*2>skoMC1*skoMC1*skoMC1*-2,skoSC1*skoMC1*skoMC1*skoMC1*-2<=skoMC1*skoMC1*skoMC1*2,skoSC1*(skoMC1*skoMC1*skoMC1*skoMC1*12+skoSC1*(skoMC1*skoMC1*skoMC1*(-1+skoMC1*6)+skoSC1*(skoMC1*skoMC1*skoMC1*-1+skoSC1*(skoMC1*skoMC1*skoMC1*(1/12)+skoSC1*skoMC1*skoMC1*skoMC1*(1/12)))))>skoMC1*skoMC1*skoMC1*(-2+skoMC1*-6),skoSC1*(skoMC1*skoMC1*skoMC1*skoMC1*-12+skoSC1*(skoMC1*skoMC1*skoMC1*(1+skoMC1*-6)+skoSC1*(skoMC1*skoMC1*skoMC1+skoSC1*(skoMC1*skoMC1*skoMC1*(-1/12)+skoSC1*skoMC1*skoMC1*skoMC1*(-1/12)))))<=skoMC1*skoMC1*skoMC1*(2+skoMC1*6)]], Reals]]

% In QepcadB format:
(E skoSC1) (E skoMC1) [[(skoSC1 skoMC1)<=(skoMC1 (-1))]/\[[skoSC1<=0]/\[[(skoSC1 ((skoMC1 skoMC1 skoMC1 (-2))+(skoSC1 ((skoMC1 skoMC1 skoMC1)+(skoSC1 skoMC1 skoMC1 skoMC1)))))<=(skoMC1 skoMC1 skoMC1 (2))]/\[[0<(skoSC1 ((skoMC1 skoMC1 skoMC1)+(skoSC1 skoMC1 skoMC1 skoMC1)))]/\[[(skoMC1 skoMC1 skoMC1 (-2))<(skoSC1 ((skoMC1 skoMC1 skoMC1 (2))+(skoSC1 ((skoMC1 skoMC1 skoMC1 (-1))+(skoSC1 skoMC1 skoMC1 skoMC1 (-1))))))]/\[[(skoSC1 ((skoMC1 skoMC1 skoMC1 (-1))+(skoSC1 skoMC1 skoMC1 skoMC1 (-1))))<=0]/\[[(skoSC1 skoMC1 skoMC1 skoMC1 (-1))<=(skoMC1 skoMC1 skoMC1)]/\[[(skoMC1 skoMC1 skoMC1 (-1))<(skoSC1 skoMC1 skoMC1 skoMC1)]/\[[(skoMC1 skoMC1 skoMC1 (-2))<=0]/\[[0<(skoMC1 skoMC1 skoMC1 (2))]/\[[skoSC1<=5/4]/\[[2<=skoMC1]/\[[0<=skoSC1]/\[[0<skoMC1]/\[[0<=skoMC1]/\[[(skoMC1 (-1))<(skoSC1 skoMC1)]/\[[(skoSC1 skoMC1 (-1))<=skoMC1]/\[[(skoMC1 skoMC1 skoMC1 (-2))<(skoSC1 skoMC1 skoMC1 skoMC1 (2))]/\[[(skoSC1 skoMC1 skoMC1 skoMC1 (-2))<=(skoMC1 skoMC1 skoMC1 (2))]/\[[(skoMC1 skoMC1 skoMC1 (-2+(skoMC1 (-6))))<(skoSC1 ((skoMC1 skoMC1 skoMC1 skoMC1 (12))+(skoSC1 ((skoMC1 skoMC1 skoMC1 (-1+(skoMC1 (6))))+(skoSC1 ((skoMC1 skoMC1 skoMC1 (-1))+(skoSC1 ((skoMC1 skoMC1 skoMC1 (1/12))+(skoSC1 skoMC1 skoMC1 skoMC1 (1/12))))))))))]/\[(skoSC1 ((skoMC1 skoMC1 skoMC1 skoMC1 (-12))+(skoSC1 ((skoMC1 skoMC1 skoMC1 (1+(skoMC1 (-6))))+(skoSC1 ((skoMC1 skoMC1 skoMC1)+(skoSC1 ((skoMC1 skoMC1 skoMC1 (-1/12))+(skoSC1 skoMC1 skoMC1 skoMC1 (-1/12))))))))))<=(skoMC1 skoMC1 skoMC1 (2+(skoMC1 (6))))]]]]]]]]]]]]]]]]]]]]].

% In SMTLib2 format:
(declare-fun skoSC1 () Real) (declare-fun skoMC1 () Real) (assert (and (<= (* skoSC1 skoMC1) (* skoMC1 (- 1.))) (and (<= skoSC1 0.) (and (<= (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (- 2.)))) (* skoSC1 (+ (* skoMC1 (* skoMC1 skoMC1)) (* skoSC1 (* skoMC1 (* skoMC1 skoMC1))))))) (* skoMC1 (* skoMC1 (* skoMC1 2.)))) (and (> (* skoSC1 (+ (* skoMC1 (* skoMC1 skoMC1)) (* skoSC1 (* skoMC1 (* skoMC1 skoMC1))))) 0.) (and (> (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 2.))) (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (- 1.)))) (* skoSC1 (* skoMC1 (* skoMC1 (* skoMC1 (- 1.))))))))) (* skoMC1 (* skoMC1 (* skoMC1 (- 2.))))) (and (<= (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (- 1.)))) (* skoSC1 (* skoMC1 (* skoMC1 (* skoMC1 (- 1.))))))) 0.) (and (<= (* skoSC1 (* skoMC1 (* skoMC1 (* skoMC1 (- 1.))))) (* skoMC1 (* skoMC1 skoMC1))) (and (> (* skoSC1 (* skoMC1 (* skoMC1 skoMC1))) (* skoMC1 (* skoMC1 (* skoMC1 (- 1.))))) (and (<= (* skoMC1 (* skoMC1 (* skoMC1 (- 2.)))) 0.) (and (> (* skoMC1 (* skoMC1 (* skoMC1 2.))) 0.) (and (<= skoSC1 (/ 5. 4.)) (and (<= 2. skoMC1) (and (<= 0. skoSC1) (and (> skoMC1 0.) (and (<= 0. skoMC1) (and (> (* skoSC1 skoMC1) (* skoMC1 (- 1.))) (and (<= (* skoSC1 (* skoMC1 (- 1.))) skoMC1) (and (> (* skoSC1 (* skoMC1 (* skoMC1 (* skoMC1 2.)))) (* skoMC1 (* skoMC1 (* skoMC1 (- 2.))))) (and (<= (* skoSC1 (* skoMC1 (* skoMC1 (* skoMC1 (- 2.))))) (* skoMC1 (* skoMC1 (* skoMC1 2.)))) (and (> (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (* skoMC1 12.)))) (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (+ (- 1.) (* skoMC1 6.))))) (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (- 1.)))) (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (/ 1. 12.)))) (* skoSC1 (* skoMC1 (* skoMC1 (* skoMC1 (/ 1. 12.))))))))))))) (* skoMC1 (* skoMC1 (* skoMC1 (+ (- 2.) (* skoMC1 (- 6.))))))) (<= (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (* skoMC1 (- 12.))))) (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (+ 1. (* skoMC1 (- 6.)))))) (* skoSC1 (+ (* skoMC1 (* skoMC1 skoMC1)) (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (/ (- 1.) 12.)))) (* skoSC1 (* skoMC1 (* skoMC1 (* skoMC1 (/ (- 1.) 12.))))))))))))) (* skoMC1 (* skoMC1 (* skoMC1 (+ 2. (* skoMC1 6.)))))))))))))))))))))))))))

% In GRF format:
(sequent " MetiTarski formula " (antecedent (<= (* skoSC1 skoMC1) (* skoMC1 (- 1.))) (<= skoSC1 0.) (<= (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (- 2.)))) (* skoSC1 (+ (* skoMC1 (* skoMC1 skoMC1)) (* skoSC1 (* skoMC1 (* skoMC1 skoMC1))))))) (* skoMC1 (* skoMC1 (* skoMC1 2.)))) (> (* skoSC1 (+ (* skoMC1 (* skoMC1 skoMC1)) (* skoSC1 (* skoMC1 (* skoMC1 skoMC1))))) 0.) (> (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 2.))) (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (- 1.)))) (* skoSC1 (* skoMC1 (* skoMC1 (* skoMC1 (- 1.))))))))) (* skoMC1 (* skoMC1 (* skoMC1 (- 2.))))) (<= (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (- 1.)))) (* skoSC1 (* skoMC1 (* skoMC1 (* skoMC1 (- 1.))))))) 0.) (<= (* skoSC1 (* skoMC1 (* skoMC1 (* skoMC1 (- 1.))))) (* skoMC1 (* skoMC1 skoMC1))) (> (* skoSC1 (* skoMC1 (* skoMC1 skoMC1))) (* skoMC1 (* skoMC1 (* skoMC1 (- 1.))))) (<= (* skoMC1 (* skoMC1 (* skoMC1 (- 2.)))) 0.) (> (* skoMC1 (* skoMC1 (* skoMC1 2.))) 0.) (<= skoSC1 (/ 5. 4.)) (<= 2. skoMC1) (<= 0. skoSC1) (> skoMC1 0.) (<= 0. skoMC1) (> (* skoSC1 skoMC1) (* skoMC1 (- 1.))) (<= (* skoSC1 (* skoMC1 (- 1.))) skoMC1) (> (* skoSC1 (* skoMC1 (* skoMC1 (* skoMC1 2.)))) (* skoMC1 (* skoMC1 (* skoMC1 (- 2.))))) (<= (* skoSC1 (* skoMC1 (* skoMC1 (* skoMC1 (- 2.))))) (* skoMC1 (* skoMC1 (* skoMC1 2.)))) (> (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (* skoMC1 12.)))) (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (+ (- 1.) (* skoMC1 6.))))) (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (- 1.)))) (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (/ 1. 12.)))) (* skoSC1 (* skoMC1 (* skoMC1 (* skoMC1 (/ 1. 12.))))))))))))) (* skoMC1 (* skoMC1 (* skoMC1 (+ (- 2.) (* skoMC1 (- 6.)))))))) (succedent (> (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (* skoMC1 (- 12.))))) (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (+ 1. (* skoMC1 (- 6.)))))) (* skoSC1 (+ (* skoMC1 (* skoMC1 skoMC1)) (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (/ (- 1.) 12.)))) (* skoSC1 (* skoMC1 (* skoMC1 (* skoMC1 (/ (- 1.) 12.))))))))))))) (* skoMC1 (* skoMC1 (* skoMC1 (+ 2. (* skoMC1 6.))))))))
-----[end problem]-----

-----[begin problem]-----
% In Mathematica format:
Timing[Resolve[Exists[{skoSC1,skoMC1}, And[skoSC1*skoMC1*-1<=skoMC1,skoSC1<=0,skoSC1*(skoMC1*skoMC1*skoMC1*-2+skoSC1*(skoMC1*skoMC1*skoMC1+skoSC1*skoMC1*skoMC1*skoMC1))<=skoMC1*skoMC1*skoMC1*2,skoSC1*(skoMC1*skoMC1*skoMC1+skoSC1*skoMC1*skoMC1*skoMC1)>0,skoSC1*(skoMC1*skoMC1*skoMC1*2+skoSC1*(skoMC1*skoMC1*skoMC1*-1+skoSC1*skoMC1*skoMC1*skoMC1*-1))>skoMC1*skoMC1*skoMC1*-2,skoSC1*(skoMC1*skoMC1*skoMC1*-1+skoSC1*skoMC1*skoMC1*skoMC1*-1)<=0,skoSC1*skoMC1*skoMC1*skoMC1*-1<=skoMC1*skoMC1*skoMC1,skoSC1*skoMC1*skoMC1*skoMC1>skoMC1*skoMC1*skoMC1*-1,skoMC1*skoMC1*skoMC1*-2<=0,skoMC1*skoMC1*skoMC1*2>0,skoSC1<=(5/4),2<=skoMC1,0<=skoSC1,skoMC1>0,0<=skoMC1,skoSC1*skoMC1>skoMC1*-1,skoSC1*skoMC1*-1<=skoMC1,skoSC1*skoMC1*skoMC1*skoMC1*2>skoMC1*skoMC1*skoMC1*-2,skoSC1*skoMC1*skoMC1*skoMC1*-2<=skoMC1*skoMC1*skoMC1*2,skoSC1*(skoMC1*skoMC1*skoMC1*skoMC1*12+skoSC1*(skoMC1*skoMC1*skoMC1*(-1+skoMC1*6)+skoSC1*(skoMC1*skoMC1*skoMC1*-1+skoSC1*(skoMC1*skoMC1*skoMC1*(1/12)+skoSC1*skoMC1*skoMC1*skoMC1*(1/12)))))>skoMC1*skoMC1*skoMC1*(-2+skoMC1*-6),skoSC1*(skoMC1*skoMC1*skoMC1*skoMC1*-12+skoSC1*(skoMC1*skoMC1*skoMC1*(1+skoMC1*-6)+skoSC1*(skoMC1*skoMC1*skoMC1+skoSC1*(skoMC1*skoMC1*skoMC1*(-1/12)+skoSC1*skoMC1*skoMC1*skoMC1*(-1/12)))))<=skoMC1*skoMC1*skoMC1*(2+skoMC1*6)]], Reals]]

% In QepcadB format:
(E skoSC1) (E skoMC1) [[(skoSC1 skoMC1 (-1))<=skoMC1]/\[[skoSC1<=0]/\[[(skoSC1 ((skoMC1 skoMC1 skoMC1 (-2))+(skoSC1 ((skoMC1 skoMC1 skoMC1)+(skoSC1 skoMC1 skoMC1 skoMC1)))))<=(skoMC1 skoMC1 skoMC1 (2))]/\[[0<(skoSC1 ((skoMC1 skoMC1 skoMC1)+(skoSC1 skoMC1 skoMC1 skoMC1)))]/\[[(skoMC1 skoMC1 skoMC1 (-2))<(skoSC1 ((skoMC1 skoMC1 skoMC1 (2))+(skoSC1 ((skoMC1 skoMC1 skoMC1 (-1))+(skoSC1 skoMC1 skoMC1 skoMC1 (-1))))))]/\[[(skoSC1 ((skoMC1 skoMC1 skoMC1 (-1))+(skoSC1 skoMC1 skoMC1 skoMC1 (-1))))<=0]/\[[(skoSC1 skoMC1 skoMC1 skoMC1 (-1))<=(skoMC1 skoMC1 skoMC1)]/\[[(skoMC1 skoMC1 skoMC1 (-1))<(skoSC1 skoMC1 skoMC1 skoMC1)]/\[[(skoMC1 skoMC1 skoMC1 (-2))<=0]/\[[0<(skoMC1 skoMC1 skoMC1 (2))]/\[[skoSC1<=5/4]/\[[2<=skoMC1]/\[[0<=skoSC1]/\[[0<skoMC1]/\[[0<=skoMC1]/\[[(skoMC1 (-1))<(skoSC1 skoMC1)]/\[[(skoSC1 skoMC1 (-1))<=skoMC1]/\[[(skoMC1 skoMC1 skoMC1 (-2))<(skoSC1 skoMC1 skoMC1 skoMC1 (2))]/\[[(skoSC1 skoMC1 skoMC1 skoMC1 (-2))<=(skoMC1 skoMC1 skoMC1 (2))]/\[[(skoMC1 skoMC1 skoMC1 (-2+(skoMC1 (-6))))<(skoSC1 ((skoMC1 skoMC1 skoMC1 skoMC1 (12))+(skoSC1 ((skoMC1 skoMC1 skoMC1 (-1+(skoMC1 (6))))+(skoSC1 ((skoMC1 skoMC1 skoMC1 (-1))+(skoSC1 ((skoMC1 skoMC1 skoMC1 (1/12))+(skoSC1 skoMC1 skoMC1 skoMC1 (1/12))))))))))]/\[(skoSC1 ((skoMC1 skoMC1 skoMC1 skoMC1 (-12))+(skoSC1 ((skoMC1 skoMC1 skoMC1 (1+(skoMC1 (-6))))+(skoSC1 ((skoMC1 skoMC1 skoMC1)+(skoSC1 ((skoMC1 skoMC1 skoMC1 (-1/12))+(skoSC1 skoMC1 skoMC1 skoMC1 (-1/12))))))))))<=(skoMC1 skoMC1 skoMC1 (2+(skoMC1 (6))))]]]]]]]]]]]]]]]]]]]]].

% In SMTLib2 format:
(declare-fun skoSC1 () Real) (declare-fun skoMC1 () Real) (assert (and (<= (* skoSC1 (* skoMC1 (- 1.))) skoMC1) (and (<= skoSC1 0.) (and (<= (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (- 2.)))) (* skoSC1 (+ (* skoMC1 (* skoMC1 skoMC1)) (* skoSC1 (* skoMC1 (* skoMC1 skoMC1))))))) (* skoMC1 (* skoMC1 (* skoMC1 2.)))) (and (> (* skoSC1 (+ (* skoMC1 (* skoMC1 skoMC1)) (* skoSC1 (* skoMC1 (* skoMC1 skoMC1))))) 0.) (and (> (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 2.))) (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (- 1.)))) (* skoSC1 (* skoMC1 (* skoMC1 (* skoMC1 (- 1.))))))))) (* skoMC1 (* skoMC1 (* skoMC1 (- 2.))))) (and (<= (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (- 1.)))) (* skoSC1 (* skoMC1 (* skoMC1 (* skoMC1 (- 1.))))))) 0.) (and (<= (* skoSC1 (* skoMC1 (* skoMC1 (* skoMC1 (- 1.))))) (* skoMC1 (* skoMC1 skoMC1))) (and (> (* skoSC1 (* skoMC1 (* skoMC1 skoMC1))) (* skoMC1 (* skoMC1 (* skoMC1 (- 1.))))) (and (<= (* skoMC1 (* skoMC1 (* skoMC1 (- 2.)))) 0.) (and (> (* skoMC1 (* skoMC1 (* skoMC1 2.))) 0.) (and (<= skoSC1 (/ 5. 4.)) (and (<= 2. skoMC1) (and (<= 0. skoSC1) (and (> skoMC1 0.) (and (<= 0. skoMC1) (and (> (* skoSC1 skoMC1) (* skoMC1 (- 1.))) (and (<= (* skoSC1 (* skoMC1 (- 1.))) skoMC1) (and (> (* skoSC1 (* skoMC1 (* skoMC1 (* skoMC1 2.)))) (* skoMC1 (* skoMC1 (* skoMC1 (- 2.))))) (and (<= (* skoSC1 (* skoMC1 (* skoMC1 (* skoMC1 (- 2.))))) (* skoMC1 (* skoMC1 (* skoMC1 2.)))) (and (> (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (* skoMC1 12.)))) (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (+ (- 1.) (* skoMC1 6.))))) (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (- 1.)))) (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (/ 1. 12.)))) (* skoSC1 (* skoMC1 (* skoMC1 (* skoMC1 (/ 1. 12.))))))))))))) (* skoMC1 (* skoMC1 (* skoMC1 (+ (- 2.) (* skoMC1 (- 6.))))))) (<= (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (* skoMC1 (- 12.))))) (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (+ 1. (* skoMC1 (- 6.)))))) (* skoSC1 (+ (* skoMC1 (* skoMC1 skoMC1)) (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (/ (- 1.) 12.)))) (* skoSC1 (* skoMC1 (* skoMC1 (* skoMC1 (/ (- 1.) 12.))))))))))))) (* skoMC1 (* skoMC1 (* skoMC1 (+ 2. (* skoMC1 6.)))))))))))))))))))))))))))

% In GRF format:
(sequent " MetiTarski formula " (antecedent (<= (* skoSC1 (* skoMC1 (- 1.))) skoMC1) (<= skoSC1 0.) (<= (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (- 2.)))) (* skoSC1 (+ (* skoMC1 (* skoMC1 skoMC1)) (* skoSC1 (* skoMC1 (* skoMC1 skoMC1))))))) (* skoMC1 (* skoMC1 (* skoMC1 2.)))) (> (* skoSC1 (+ (* skoMC1 (* skoMC1 skoMC1)) (* skoSC1 (* skoMC1 (* skoMC1 skoMC1))))) 0.) (> (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 2.))) (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (- 1.)))) (* skoSC1 (* skoMC1 (* skoMC1 (* skoMC1 (- 1.))))))))) (* skoMC1 (* skoMC1 (* skoMC1 (- 2.))))) (<= (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (- 1.)))) (* skoSC1 (* skoMC1 (* skoMC1 (* skoMC1 (- 1.))))))) 0.) (<= (* skoSC1 (* skoMC1 (* skoMC1 (* skoMC1 (- 1.))))) (* skoMC1 (* skoMC1 skoMC1))) (> (* skoSC1 (* skoMC1 (* skoMC1 skoMC1))) (* skoMC1 (* skoMC1 (* skoMC1 (- 1.))))) (<= (* skoMC1 (* skoMC1 (* skoMC1 (- 2.)))) 0.) (> (* skoMC1 (* skoMC1 (* skoMC1 2.))) 0.) (<= skoSC1 (/ 5. 4.)) (<= 2. skoMC1) (<= 0. skoSC1) (> skoMC1 0.) (<= 0. skoMC1) (> (* skoSC1 skoMC1) (* skoMC1 (- 1.))) (<= (* skoSC1 (* skoMC1 (- 1.))) skoMC1) (> (* skoSC1 (* skoMC1 (* skoMC1 (* skoMC1 2.)))) (* skoMC1 (* skoMC1 (* skoMC1 (- 2.))))) (<= (* skoSC1 (* skoMC1 (* skoMC1 (* skoMC1 (- 2.))))) (* skoMC1 (* skoMC1 (* skoMC1 2.)))) (> (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (* skoMC1 12.)))) (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (+ (- 1.) (* skoMC1 6.))))) (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (- 1.)))) (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (/ 1. 12.)))) (* skoSC1 (* skoMC1 (* skoMC1 (* skoMC1 (/ 1. 12.))))))))))))) (* skoMC1 (* skoMC1 (* skoMC1 (+ (- 2.) (* skoMC1 (- 6.)))))))) (succedent (> (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (* skoMC1 (- 12.))))) (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (+ 1. (* skoMC1 (- 6.)))))) (* skoSC1 (+ (* skoMC1 (* skoMC1 skoMC1)) (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (/ (- 1.) 12.)))) (* skoSC1 (* skoMC1 (* skoMC1 (* skoMC1 (/ (- 1.) 12.))))))))))))) (* skoMC1 (* skoMC1 (* skoMC1 (+ 2. (* skoMC1 6.))))))))
-----[end problem]-----

-----[begin problem]-----
% In Mathematica format:
Timing[Resolve[Exists[{skoSC1,skoMC1}, And[skoMC1>0,skoSC1>0,skoSC1*(skoMC1*skoMC1*skoMC1*-2+skoSC1*(skoMC1*skoMC1*skoMC1+skoSC1*skoMC1*skoMC1*skoMC1))<=skoMC1*skoMC1*skoMC1*2,skoSC1*(skoMC1*skoMC1*skoMC1+skoSC1*skoMC1*skoMC1*skoMC1)>0,skoSC1*(skoMC1*skoMC1*skoMC1*2+skoSC1*(skoMC1*skoMC1*skoMC1*-1+skoSC1*skoMC1*skoMC1*skoMC1*-1))>skoMC1*skoMC1*skoMC1*-2,skoSC1*(skoMC1*skoMC1*skoMC1*-1+skoSC1*skoMC1*skoMC1*skoMC1*-1)<=0,skoSC1*skoMC1*skoMC1*skoMC1*-1<=skoMC1*skoMC1*skoMC1,skoSC1*skoMC1*skoMC1*skoMC1>skoMC1*skoMC1*skoMC1*-1,skoMC1*skoMC1*skoMC1*-2<=0,skoMC1*skoMC1*skoMC1*2>0,skoSC1<=(5/4),2<=skoMC1,0<=skoSC1,skoMC1>0,0<=skoMC1,skoSC1*skoMC1>skoMC1*-1,skoSC1*skoMC1*-1<=skoMC1,skoSC1*skoMC1*skoMC1*skoMC1*2>skoMC1*skoMC1*skoMC1*-2,skoSC1*skoMC1*skoMC1*skoMC1*-2<=skoMC1*skoMC1*skoMC1*2,skoSC1*(skoMC1*skoMC1*skoMC1*skoMC1*12+skoSC1*(skoMC1*skoMC1*skoMC1*(-1+skoMC1*6)+skoSC1*(skoMC1*skoMC1*skoMC1*-1+skoSC1*(skoMC1*skoMC1*skoMC1*(1/12)+skoSC1*skoMC1*skoMC1*skoMC1*(1/12)))))>skoMC1*skoMC1*skoMC1*(-2+skoMC1*-6),skoSC1*(skoMC1*skoMC1*skoMC1*skoMC1*-12+skoSC1*(skoMC1*skoMC1*skoMC1*(1+skoMC1*-6)+skoSC1*(skoMC1*skoMC1*skoMC1+skoSC1*(skoMC1*skoMC1*skoMC1*(-1/12)+skoSC1*skoMC1*skoMC1*skoMC1*(-1/12)))))<=skoMC1*skoMC1*skoMC1*(2+skoMC1*6)]], Reals]]

% In QepcadB format:
(E skoSC1) (E skoMC1) [[0<skoMC1]/\[[0<skoSC1]/\[[(skoSC1 ((skoMC1 skoMC1 skoMC1 (-2))+(skoSC1 ((skoMC1 skoMC1 skoMC1)+(skoSC1 skoMC1 skoMC1 skoMC1)))))<=(skoMC1 skoMC1 skoMC1 (2))]/\[[0<(skoSC1 ((skoMC1 skoMC1 skoMC1)+(skoSC1 skoMC1 skoMC1 skoMC1)))]/\[[(skoMC1 skoMC1 skoMC1 (-2))<(skoSC1 ((skoMC1 skoMC1 skoMC1 (2))+(skoSC1 ((skoMC1 skoMC1 skoMC1 (-1))+(skoSC1 skoMC1 skoMC1 skoMC1 (-1))))))]/\[[(skoSC1 ((skoMC1 skoMC1 skoMC1 (-1))+(skoSC1 skoMC1 skoMC1 skoMC1 (-1))))<=0]/\[[(skoSC1 skoMC1 skoMC1 skoMC1 (-1))<=(skoMC1 skoMC1 skoMC1)]/\[[(skoMC1 skoMC1 skoMC1 (-1))<(skoSC1 skoMC1 skoMC1 skoMC1)]/\[[(skoMC1 skoMC1 skoMC1 (-2))<=0]/\[[0<(skoMC1 skoMC1 skoMC1 (2))]/\[[skoSC1<=5/4]/\[[2<=skoMC1]/\[[0<=skoSC1]/\[[0<skoMC1]/\[[0<=skoMC1]/\[[(skoMC1 (-1))<(skoSC1 skoMC1)]/\[[(skoSC1 skoMC1 (-1))<=skoMC1]/\[[(skoMC1 skoMC1 skoMC1 (-2))<(skoSC1 skoMC1 skoMC1 skoMC1 (2))]/\[[(skoSC1 skoMC1 skoMC1 skoMC1 (-2))<=(skoMC1 skoMC1 skoMC1 (2))]/\[[(skoMC1 skoMC1 skoMC1 (-2+(skoMC1 (-6))))<(skoSC1 ((skoMC1 skoMC1 skoMC1 skoMC1 (12))+(skoSC1 ((skoMC1 skoMC1 skoMC1 (-1+(skoMC1 (6))))+(skoSC1 ((skoMC1 skoMC1 skoMC1 (-1))+(skoSC1 ((skoMC1 skoMC1 skoMC1 (1/12))+(skoSC1 skoMC1 skoMC1 skoMC1 (1/12))))))))))]/\[(skoSC1 ((skoMC1 skoMC1 skoMC1 skoMC1 (-12))+(skoSC1 ((skoMC1 skoMC1 skoMC1 (1+(skoMC1 (-6))))+(skoSC1 ((skoMC1 skoMC1 skoMC1)+(skoSC1 ((skoMC1 skoMC1 skoMC1 (-1/12))+(skoSC1 skoMC1 skoMC1 skoMC1 (-1/12))))))))))<=(skoMC1 skoMC1 skoMC1 (2+(skoMC1 (6))))]]]]]]]]]]]]]]]]]]]]].

% In SMTLib2 format:
(declare-fun skoSC1 () Real) (declare-fun skoMC1 () Real) (assert (and (> skoMC1 0.) (and (> skoSC1 0.) (and (<= (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (- 2.)))) (* skoSC1 (+ (* skoMC1 (* skoMC1 skoMC1)) (* skoSC1 (* skoMC1 (* skoMC1 skoMC1))))))) (* skoMC1 (* skoMC1 (* skoMC1 2.)))) (and (> (* skoSC1 (+ (* skoMC1 (* skoMC1 skoMC1)) (* skoSC1 (* skoMC1 (* skoMC1 skoMC1))))) 0.) (and (> (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 2.))) (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (- 1.)))) (* skoSC1 (* skoMC1 (* skoMC1 (* skoMC1 (- 1.))))))))) (* skoMC1 (* skoMC1 (* skoMC1 (- 2.))))) (and (<= (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (- 1.)))) (* skoSC1 (* skoMC1 (* skoMC1 (* skoMC1 (- 1.))))))) 0.) (and (<= (* skoSC1 (* skoMC1 (* skoMC1 (* skoMC1 (- 1.))))) (* skoMC1 (* skoMC1 skoMC1))) (and (> (* skoSC1 (* skoMC1 (* skoMC1 skoMC1))) (* skoMC1 (* skoMC1 (* skoMC1 (- 1.))))) (and (<= (* skoMC1 (* skoMC1 (* skoMC1 (- 2.)))) 0.) (and (> (* skoMC1 (* skoMC1 (* skoMC1 2.))) 0.) (and (<= skoSC1 (/ 5. 4.)) (and (<= 2. skoMC1) (and (<= 0. skoSC1) (and (> skoMC1 0.) (and (<= 0. skoMC1) (and (> (* skoSC1 skoMC1) (* skoMC1 (- 1.))) (and (<= (* skoSC1 (* skoMC1 (- 1.))) skoMC1) (and (> (* skoSC1 (* skoMC1 (* skoMC1 (* skoMC1 2.)))) (* skoMC1 (* skoMC1 (* skoMC1 (- 2.))))) (and (<= (* skoSC1 (* skoMC1 (* skoMC1 (* skoMC1 (- 2.))))) (* skoMC1 (* skoMC1 (* skoMC1 2.)))) (and (> (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (* skoMC1 12.)))) (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (+ (- 1.) (* skoMC1 6.))))) (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (- 1.)))) (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (/ 1. 12.)))) (* skoSC1 (* skoMC1 (* skoMC1 (* skoMC1 (/ 1. 12.))))))))))))) (* skoMC1 (* skoMC1 (* skoMC1 (+ (- 2.) (* skoMC1 (- 6.))))))) (<= (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (* skoMC1 (- 12.))))) (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (+ 1. (* skoMC1 (- 6.)))))) (* skoSC1 (+ (* skoMC1 (* skoMC1 skoMC1)) (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (/ (- 1.) 12.)))) (* skoSC1 (* skoMC1 (* skoMC1 (* skoMC1 (/ (- 1.) 12.))))))))))))) (* skoMC1 (* skoMC1 (* skoMC1 (+ 2. (* skoMC1 6.)))))))))))))))))))))))))))

% In GRF format:
(sequent " MetiTarski formula " (antecedent (> skoMC1 0.) (> skoSC1 0.) (<= (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (- 2.)))) (* skoSC1 (+ (* skoMC1 (* skoMC1 skoMC1)) (* skoSC1 (* skoMC1 (* skoMC1 skoMC1))))))) (* skoMC1 (* skoMC1 (* skoMC1 2.)))) (> (* skoSC1 (+ (* skoMC1 (* skoMC1 skoMC1)) (* skoSC1 (* skoMC1 (* skoMC1 skoMC1))))) 0.) (> (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 2.))) (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (- 1.)))) (* skoSC1 (* skoMC1 (* skoMC1 (* skoMC1 (- 1.))))))))) (* skoMC1 (* skoMC1 (* skoMC1 (- 2.))))) (<= (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (- 1.)))) (* skoSC1 (* skoMC1 (* skoMC1 (* skoMC1 (- 1.))))))) 0.) (<= (* skoSC1 (* skoMC1 (* skoMC1 (* skoMC1 (- 1.))))) (* skoMC1 (* skoMC1 skoMC1))) (> (* skoSC1 (* skoMC1 (* skoMC1 skoMC1))) (* skoMC1 (* skoMC1 (* skoMC1 (- 1.))))) (<= (* skoMC1 (* skoMC1 (* skoMC1 (- 2.)))) 0.) (> (* skoMC1 (* skoMC1 (* skoMC1 2.))) 0.) (<= skoSC1 (/ 5. 4.)) (<= 2. skoMC1) (<= 0. skoSC1) (> skoMC1 0.) (<= 0. skoMC1) (> (* skoSC1 skoMC1) (* skoMC1 (- 1.))) (<= (* skoSC1 (* skoMC1 (- 1.))) skoMC1) (> (* skoSC1 (* skoMC1 (* skoMC1 (* skoMC1 2.)))) (* skoMC1 (* skoMC1 (* skoMC1 (- 2.))))) (<= (* skoSC1 (* skoMC1 (* skoMC1 (* skoMC1 (- 2.))))) (* skoMC1 (* skoMC1 (* skoMC1 2.)))) (> (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (* skoMC1 12.)))) (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (+ (- 1.) (* skoMC1 6.))))) (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (- 1.)))) (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (/ 1. 12.)))) (* skoSC1 (* skoMC1 (* skoMC1 (* skoMC1 (/ 1. 12.))))))))))))) (* skoMC1 (* skoMC1 (* skoMC1 (+ (- 2.) (* skoMC1 (- 6.)))))))) (succedent (> (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (* skoMC1 (- 12.))))) (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (+ 1. (* skoMC1 (- 6.)))))) (* skoSC1 (+ (* skoMC1 (* skoMC1 skoMC1)) (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (/ (- 1.) 12.)))) (* skoSC1 (* skoMC1 (* skoMC1 (* skoMC1 (/ (- 1.) 12.))))))))))))) (* skoMC1 (* skoMC1 (* skoMC1 (+ 2. (* skoMC1 6.))))))))
-----[end problem]-----

-----[begin problem]-----
% In Mathematica format:
Timing[Resolve[Exists[{skoSC1,skoMC1}, And[skoMC1<=0,skoSC1<=0,skoSC1*(skoMC1*skoMC1*skoMC1*-2+skoSC1*(skoMC1*skoMC1*skoMC1+skoSC1*skoMC1*skoMC1*skoMC1))<=skoMC1*skoMC1*skoMC1*2,skoSC1*(skoMC1*skoMC1*skoMC1+skoSC1*skoMC1*skoMC1*skoMC1)>0,skoSC1*(skoMC1*skoMC1*skoMC1*2+skoSC1*(skoMC1*skoMC1*skoMC1*-1+skoSC1*skoMC1*skoMC1*skoMC1*-1))>skoMC1*skoMC1*skoMC1*-2,skoSC1*(skoMC1*skoMC1*skoMC1*-1+skoSC1*skoMC1*skoMC1*skoMC1*-1)<=0,skoSC1*skoMC1*skoMC1*skoMC1*-1<=skoMC1*skoMC1*skoMC1,skoSC1*skoMC1*skoMC1*skoMC1>skoMC1*skoMC1*skoMC1*-1,skoMC1*skoMC1*skoMC1*-2<=0,skoMC1*skoMC1*skoMC1*2>0,skoSC1<=(5/4),2<=skoMC1,0<=skoSC1,skoMC1>0,0<=skoMC1,skoSC1*skoMC1>skoMC1*-1,skoSC1*skoMC1*-1<=skoMC1,skoSC1*skoMC1*skoMC1*skoMC1*2>skoMC1*skoMC1*skoMC1*-2,skoSC1*skoMC1*skoMC1*skoMC1*-2<=skoMC1*skoMC1*skoMC1*2,skoSC1*(skoMC1*skoMC1*skoMC1*skoMC1*12+skoSC1*(skoMC1*skoMC1*skoMC1*(-1+skoMC1*6)+skoSC1*(skoMC1*skoMC1*skoMC1*-1+skoSC1*(skoMC1*skoMC1*skoMC1*(1/12)+skoSC1*skoMC1*skoMC1*skoMC1*(1/12)))))>skoMC1*skoMC1*skoMC1*(-2+skoMC1*-6),skoSC1*(skoMC1*skoMC1*skoMC1*skoMC1*-12+skoSC1*(skoMC1*skoMC1*skoMC1*(1+skoMC1*-6)+skoSC1*(skoMC1*skoMC1*skoMC1+skoSC1*(skoMC1*skoMC1*skoMC1*(-1/12)+skoSC1*skoMC1*skoMC1*skoMC1*(-1/12)))))<=skoMC1*skoMC1*skoMC1*(2+skoMC1*6)]], Reals]]

% In QepcadB format:
(E skoSC1) (E skoMC1) [[skoMC1<=0]/\[[skoSC1<=0]/\[[(skoSC1 ((skoMC1 skoMC1 skoMC1 (-2))+(skoSC1 ((skoMC1 skoMC1 skoMC1)+(skoSC1 skoMC1 skoMC1 skoMC1)))))<=(skoMC1 skoMC1 skoMC1 (2))]/\[[0<(skoSC1 ((skoMC1 skoMC1 skoMC1)+(skoSC1 skoMC1 skoMC1 skoMC1)))]/\[[(skoMC1 skoMC1 skoMC1 (-2))<(skoSC1 ((skoMC1 skoMC1 skoMC1 (2))+(skoSC1 ((skoMC1 skoMC1 skoMC1 (-1))+(skoSC1 skoMC1 skoMC1 skoMC1 (-1))))))]/\[[(skoSC1 ((skoMC1 skoMC1 skoMC1 (-1))+(skoSC1 skoMC1 skoMC1 skoMC1 (-1))))<=0]/\[[(skoSC1 skoMC1 skoMC1 skoMC1 (-1))<=(skoMC1 skoMC1 skoMC1)]/\[[(skoMC1 skoMC1 skoMC1 (-1))<(skoSC1 skoMC1 skoMC1 skoMC1)]/\[[(skoMC1 skoMC1 skoMC1 (-2))<=0]/\[[0<(skoMC1 skoMC1 skoMC1 (2))]/\[[skoSC1<=5/4]/\[[2<=skoMC1]/\[[0<=skoSC1]/\[[0<skoMC1]/\[[0<=skoMC1]/\[[(skoMC1 (-1))<(skoSC1 skoMC1)]/\[[(skoSC1 skoMC1 (-1))<=skoMC1]/\[[(skoMC1 skoMC1 skoMC1 (-2))<(skoSC1 skoMC1 skoMC1 skoMC1 (2))]/\[[(skoSC1 skoMC1 skoMC1 skoMC1 (-2))<=(skoMC1 skoMC1 skoMC1 (2))]/\[[(skoMC1 skoMC1 skoMC1 (-2+(skoMC1 (-6))))<(skoSC1 ((skoMC1 skoMC1 skoMC1 skoMC1 (12))+(skoSC1 ((skoMC1 skoMC1 skoMC1 (-1+(skoMC1 (6))))+(skoSC1 ((skoMC1 skoMC1 skoMC1 (-1))+(skoSC1 ((skoMC1 skoMC1 skoMC1 (1/12))+(skoSC1 skoMC1 skoMC1 skoMC1 (1/12))))))))))]/\[(skoSC1 ((skoMC1 skoMC1 skoMC1 skoMC1 (-12))+(skoSC1 ((skoMC1 skoMC1 skoMC1 (1+(skoMC1 (-6))))+(skoSC1 ((skoMC1 skoMC1 skoMC1)+(skoSC1 ((skoMC1 skoMC1 skoMC1 (-1/12))+(skoSC1 skoMC1 skoMC1 skoMC1 (-1/12))))))))))<=(skoMC1 skoMC1 skoMC1 (2+(skoMC1 (6))))]]]]]]]]]]]]]]]]]]]]].

% In SMTLib2 format:
(declare-fun skoSC1 () Real) (declare-fun skoMC1 () Real) (assert (and (<= skoMC1 0.) (and (<= skoSC1 0.) (and (<= (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (- 2.)))) (* skoSC1 (+ (* skoMC1 (* skoMC1 skoMC1)) (* skoSC1 (* skoMC1 (* skoMC1 skoMC1))))))) (* skoMC1 (* skoMC1 (* skoMC1 2.)))) (and (> (* skoSC1 (+ (* skoMC1 (* skoMC1 skoMC1)) (* skoSC1 (* skoMC1 (* skoMC1 skoMC1))))) 0.) (and (> (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 2.))) (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (- 1.)))) (* skoSC1 (* skoMC1 (* skoMC1 (* skoMC1 (- 1.))))))))) (* skoMC1 (* skoMC1 (* skoMC1 (- 2.))))) (and (<= (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (- 1.)))) (* skoSC1 (* skoMC1 (* skoMC1 (* skoMC1 (- 1.))))))) 0.) (and (<= (* skoSC1 (* skoMC1 (* skoMC1 (* skoMC1 (- 1.))))) (* skoMC1 (* skoMC1 skoMC1))) (and (> (* skoSC1 (* skoMC1 (* skoMC1 skoMC1))) (* skoMC1 (* skoMC1 (* skoMC1 (- 1.))))) (and (<= (* skoMC1 (* skoMC1 (* skoMC1 (- 2.)))) 0.) (and (> (* skoMC1 (* skoMC1 (* skoMC1 2.))) 0.) (and (<= skoSC1 (/ 5. 4.)) (and (<= 2. skoMC1) (and (<= 0. skoSC1) (and (> skoMC1 0.) (and (<= 0. skoMC1) (and (> (* skoSC1 skoMC1) (* skoMC1 (- 1.))) (and (<= (* skoSC1 (* skoMC1 (- 1.))) skoMC1) (and (> (* skoSC1 (* skoMC1 (* skoMC1 (* skoMC1 2.)))) (* skoMC1 (* skoMC1 (* skoMC1 (- 2.))))) (and (<= (* skoSC1 (* skoMC1 (* skoMC1 (* skoMC1 (- 2.))))) (* skoMC1 (* skoMC1 (* skoMC1 2.)))) (and (> (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (* skoMC1 12.)))) (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (+ (- 1.) (* skoMC1 6.))))) (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (- 1.)))) (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (/ 1. 12.)))) (* skoSC1 (* skoMC1 (* skoMC1 (* skoMC1 (/ 1. 12.))))))))))))) (* skoMC1 (* skoMC1 (* skoMC1 (+ (- 2.) (* skoMC1 (- 6.))))))) (<= (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (* skoMC1 (- 12.))))) (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (+ 1. (* skoMC1 (- 6.)))))) (* skoSC1 (+ (* skoMC1 (* skoMC1 skoMC1)) (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (/ (- 1.) 12.)))) (* skoSC1 (* skoMC1 (* skoMC1 (* skoMC1 (/ (- 1.) 12.))))))))))))) (* skoMC1 (* skoMC1 (* skoMC1 (+ 2. (* skoMC1 6.)))))))))))))))))))))))))))

% In GRF format:
(sequent " MetiTarski formula " (antecedent (<= skoMC1 0.) (<= skoSC1 0.) (<= (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (- 2.)))) (* skoSC1 (+ (* skoMC1 (* skoMC1 skoMC1)) (* skoSC1 (* skoMC1 (* skoMC1 skoMC1))))))) (* skoMC1 (* skoMC1 (* skoMC1 2.)))) (> (* skoSC1 (+ (* skoMC1 (* skoMC1 skoMC1)) (* skoSC1 (* skoMC1 (* skoMC1 skoMC1))))) 0.) (> (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 2.))) (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (- 1.)))) (* skoSC1 (* skoMC1 (* skoMC1 (* skoMC1 (- 1.))))))))) (* skoMC1 (* skoMC1 (* skoMC1 (- 2.))))) (<= (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (- 1.)))) (* skoSC1 (* skoMC1 (* skoMC1 (* skoMC1 (- 1.))))))) 0.) (<= (* skoSC1 (* skoMC1 (* skoMC1 (* skoMC1 (- 1.))))) (* skoMC1 (* skoMC1 skoMC1))) (> (* skoSC1 (* skoMC1 (* skoMC1 skoMC1))) (* skoMC1 (* skoMC1 (* skoMC1 (- 1.))))) (<= (* skoMC1 (* skoMC1 (* skoMC1 (- 2.)))) 0.) (> (* skoMC1 (* skoMC1 (* skoMC1 2.))) 0.) (<= skoSC1 (/ 5. 4.)) (<= 2. skoMC1) (<= 0. skoSC1) (> skoMC1 0.) (<= 0. skoMC1) (> (* skoSC1 skoMC1) (* skoMC1 (- 1.))) (<= (* skoSC1 (* skoMC1 (- 1.))) skoMC1) (> (* skoSC1 (* skoMC1 (* skoMC1 (* skoMC1 2.)))) (* skoMC1 (* skoMC1 (* skoMC1 (- 2.))))) (<= (* skoSC1 (* skoMC1 (* skoMC1 (* skoMC1 (- 2.))))) (* skoMC1 (* skoMC1 (* skoMC1 2.)))) (> (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (* skoMC1 12.)))) (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (+ (- 1.) (* skoMC1 6.))))) (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (- 1.)))) (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (/ 1. 12.)))) (* skoSC1 (* skoMC1 (* skoMC1 (* skoMC1 (/ 1. 12.))))))))))))) (* skoMC1 (* skoMC1 (* skoMC1 (+ (- 2.) (* skoMC1 (- 6.)))))))) (succedent (> (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (* skoMC1 (- 12.))))) (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (+ 1. (* skoMC1 (- 6.)))))) (* skoSC1 (+ (* skoMC1 (* skoMC1 skoMC1)) (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (/ (- 1.) 12.)))) (* skoSC1 (* skoMC1 (* skoMC1 (* skoMC1 (/ (- 1.) 12.))))))))))))) (* skoMC1 (* skoMC1 (* skoMC1 (+ 2. (* skoMC1 6.))))))))
-----[end problem]-----

-----[begin problem]-----
% In Mathematica format:
Timing[Resolve[Exists[{skoSC1,skoMC1}, And[0<=skoMC1,skoSC1*(skoMC1*skoMC1*skoMC1*-2+skoSC1*(skoMC1*skoMC1*skoMC1+skoSC1*skoMC1*skoMC1*skoMC1))<=skoMC1*skoMC1*skoMC1*2,skoSC1*(skoMC1*skoMC1*skoMC1+skoSC1*skoMC1*skoMC1*skoMC1)>0,skoSC1*(skoMC1*skoMC1*skoMC1*2+skoSC1*(skoMC1*skoMC1*skoMC1*-1+skoSC1*skoMC1*skoMC1*skoMC1*-1))>skoMC1*skoMC1*skoMC1*-2,skoSC1*(skoMC1*skoMC1*skoMC1*-1+skoSC1*skoMC1*skoMC1*skoMC1*-1)<=0,skoSC1*skoMC1*skoMC1*skoMC1*-1<=skoMC1*skoMC1*skoMC1,skoSC1*skoMC1*skoMC1*skoMC1>skoMC1*skoMC1*skoMC1*-1,skoMC1*skoMC1*skoMC1*-2<=0,skoMC1*skoMC1*skoMC1*2>0,skoSC1<=(5/4),2<=skoMC1,0<=skoSC1,skoMC1>0,0<=skoMC1,skoSC1*skoMC1>skoMC1*-1,skoSC1*skoMC1*-1<=skoMC1,skoSC1*skoMC1*skoMC1*skoMC1*2>skoMC1*skoMC1*skoMC1*-2,skoSC1*skoMC1*skoMC1*skoMC1*-2<=skoMC1*skoMC1*skoMC1*2,skoSC1*(skoMC1*skoMC1*skoMC1*skoMC1*12+skoSC1*(skoMC1*skoMC1*skoMC1*(-1+skoMC1*6)+skoSC1*(skoMC1*skoMC1*skoMC1*-1+skoSC1*(skoMC1*skoMC1*skoMC1*(1/12)+skoSC1*skoMC1*skoMC1*skoMC1*(1/12)))))>skoMC1*skoMC1*skoMC1*(-2+skoMC1*-6),skoSC1*(skoMC1*skoMC1*skoMC1*skoMC1*-12+skoSC1*(skoMC1*skoMC1*skoMC1*(1+skoMC1*-6)+skoSC1*(skoMC1*skoMC1*skoMC1+skoSC1*(skoMC1*skoMC1*skoMC1*(-1/12)+skoSC1*skoMC1*skoMC1*skoMC1*(-1/12)))))<=skoMC1*skoMC1*skoMC1*(2+skoMC1*6)]], Reals]]

% In QepcadB format:
(E skoSC1) (E skoMC1) [[0<=skoMC1]/\[[(skoSC1 ((skoMC1 skoMC1 skoMC1 (-2))+(skoSC1 ((skoMC1 skoMC1 skoMC1)+(skoSC1 skoMC1 skoMC1 skoMC1)))))<=(skoMC1 skoMC1 skoMC1 (2))]/\[[0<(skoSC1 ((skoMC1 skoMC1 skoMC1)+(skoSC1 skoMC1 skoMC1 skoMC1)))]/\[[(skoMC1 skoMC1 skoMC1 (-2))<(skoSC1 ((skoMC1 skoMC1 skoMC1 (2))+(skoSC1 ((skoMC1 skoMC1 skoMC1 (-1))+(skoSC1 skoMC1 skoMC1 skoMC1 (-1))))))]/\[[(skoSC1 ((skoMC1 skoMC1 skoMC1 (-1))+(skoSC1 skoMC1 skoMC1 skoMC1 (-1))))<=0]/\[[(skoSC1 skoMC1 skoMC1 skoMC1 (-1))<=(skoMC1 skoMC1 skoMC1)]/\[[(skoMC1 skoMC1 skoMC1 (-1))<(skoSC1 skoMC1 skoMC1 skoMC1)]/\[[(skoMC1 skoMC1 skoMC1 (-2))<=0]/\[[0<(skoMC1 skoMC1 skoMC1 (2))]/\[[skoSC1<=5/4]/\[[2<=skoMC1]/\[[0<=skoSC1]/\[[0<skoMC1]/\[[0<=skoMC1]/\[[(skoMC1 (-1))<(skoSC1 skoMC1)]/\[[(skoSC1 skoMC1 (-1))<=skoMC1]/\[[(skoMC1 skoMC1 skoMC1 (-2))<(skoSC1 skoMC1 skoMC1 skoMC1 (2))]/\[[(skoSC1 skoMC1 skoMC1 skoMC1 (-2))<=(skoMC1 skoMC1 skoMC1 (2))]/\[[(skoMC1 skoMC1 skoMC1 (-2+(skoMC1 (-6))))<(skoSC1 ((skoMC1 skoMC1 skoMC1 skoMC1 (12))+(skoSC1 ((skoMC1 skoMC1 skoMC1 (-1+(skoMC1 (6))))+(skoSC1 ((skoMC1 skoMC1 skoMC1 (-1))+(skoSC1 ((skoMC1 skoMC1 skoMC1 (1/12))+(skoSC1 skoMC1 skoMC1 skoMC1 (1/12))))))))))]/\[(skoSC1 ((skoMC1 skoMC1 skoMC1 skoMC1 (-12))+(skoSC1 ((skoMC1 skoMC1 skoMC1 (1+(skoMC1 (-6))))+(skoSC1 ((skoMC1 skoMC1 skoMC1)+(skoSC1 ((skoMC1 skoMC1 skoMC1 (-1/12))+(skoSC1 skoMC1 skoMC1 skoMC1 (-1/12))))))))))<=(skoMC1 skoMC1 skoMC1 (2+(skoMC1 (6))))]]]]]]]]]]]]]]]]]]]].

% In SMTLib2 format:
(declare-fun skoSC1 () Real) (declare-fun skoMC1 () Real) (assert (and (<= 0. skoMC1) (and (<= (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (- 2.)))) (* skoSC1 (+ (* skoMC1 (* skoMC1 skoMC1)) (* skoSC1 (* skoMC1 (* skoMC1 skoMC1))))))) (* skoMC1 (* skoMC1 (* skoMC1 2.)))) (and (> (* skoSC1 (+ (* skoMC1 (* skoMC1 skoMC1)) (* skoSC1 (* skoMC1 (* skoMC1 skoMC1))))) 0.) (and (> (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 2.))) (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (- 1.)))) (* skoSC1 (* skoMC1 (* skoMC1 (* skoMC1 (- 1.))))))))) (* skoMC1 (* skoMC1 (* skoMC1 (- 2.))))) (and (<= (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (- 1.)))) (* skoSC1 (* skoMC1 (* skoMC1 (* skoMC1 (- 1.))))))) 0.) (and (<= (* skoSC1 (* skoMC1 (* skoMC1 (* skoMC1 (- 1.))))) (* skoMC1 (* skoMC1 skoMC1))) (and (> (* skoSC1 (* skoMC1 (* skoMC1 skoMC1))) (* skoMC1 (* skoMC1 (* skoMC1 (- 1.))))) (and (<= (* skoMC1 (* skoMC1 (* skoMC1 (- 2.)))) 0.) (and (> (* skoMC1 (* skoMC1 (* skoMC1 2.))) 0.) (and (<= skoSC1 (/ 5. 4.)) (and (<= 2. skoMC1) (and (<= 0. skoSC1) (and (> skoMC1 0.) (and (<= 0. skoMC1) (and (> (* skoSC1 skoMC1) (* skoMC1 (- 1.))) (and (<= (* skoSC1 (* skoMC1 (- 1.))) skoMC1) (and (> (* skoSC1 (* skoMC1 (* skoMC1 (* skoMC1 2.)))) (* skoMC1 (* skoMC1 (* skoMC1 (- 2.))))) (and (<= (* skoSC1 (* skoMC1 (* skoMC1 (* skoMC1 (- 2.))))) (* skoMC1 (* skoMC1 (* skoMC1 2.)))) (and (> (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (* skoMC1 12.)))) (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (+ (- 1.) (* skoMC1 6.))))) (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (- 1.)))) (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (/ 1. 12.)))) (* skoSC1 (* skoMC1 (* skoMC1 (* skoMC1 (/ 1. 12.))))))))))))) (* skoMC1 (* skoMC1 (* skoMC1 (+ (- 2.) (* skoMC1 (- 6.))))))) (<= (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (* skoMC1 (- 12.))))) (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (+ 1. (* skoMC1 (- 6.)))))) (* skoSC1 (+ (* skoMC1 (* skoMC1 skoMC1)) (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (/ (- 1.) 12.)))) (* skoSC1 (* skoMC1 (* skoMC1 (* skoMC1 (/ (- 1.) 12.))))))))))))) (* skoMC1 (* skoMC1 (* skoMC1 (+ 2. (* skoMC1 6.))))))))))))))))))))))))))

% In GRF format:
(sequent " MetiTarski formula " (antecedent (<= 0. skoMC1) (<= (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (- 2.)))) (* skoSC1 (+ (* skoMC1 (* skoMC1 skoMC1)) (* skoSC1 (* skoMC1 (* skoMC1 skoMC1))))))) (* skoMC1 (* skoMC1 (* skoMC1 2.)))) (> (* skoSC1 (+ (* skoMC1 (* skoMC1 skoMC1)) (* skoSC1 (* skoMC1 (* skoMC1 skoMC1))))) 0.) (> (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 2.))) (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (- 1.)))) (* skoSC1 (* skoMC1 (* skoMC1 (* skoMC1 (- 1.))))))))) (* skoMC1 (* skoMC1 (* skoMC1 (- 2.))))) (<= (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (- 1.)))) (* skoSC1 (* skoMC1 (* skoMC1 (* skoMC1 (- 1.))))))) 0.) (<= (* skoSC1 (* skoMC1 (* skoMC1 (* skoMC1 (- 1.))))) (* skoMC1 (* skoMC1 skoMC1))) (> (* skoSC1 (* skoMC1 (* skoMC1 skoMC1))) (* skoMC1 (* skoMC1 (* skoMC1 (- 1.))))) (<= (* skoMC1 (* skoMC1 (* skoMC1 (- 2.)))) 0.) (> (* skoMC1 (* skoMC1 (* skoMC1 2.))) 0.) (<= skoSC1 (/ 5. 4.)) (<= 2. skoMC1) (<= 0. skoSC1) (> skoMC1 0.) (<= 0. skoMC1) (> (* skoSC1 skoMC1) (* skoMC1 (- 1.))) (<= (* skoSC1 (* skoMC1 (- 1.))) skoMC1) (> (* skoSC1 (* skoMC1 (* skoMC1 (* skoMC1 2.)))) (* skoMC1 (* skoMC1 (* skoMC1 (- 2.))))) (<= (* skoSC1 (* skoMC1 (* skoMC1 (* skoMC1 (- 2.))))) (* skoMC1 (* skoMC1 (* skoMC1 2.)))) (> (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (* skoMC1 12.)))) (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (+ (- 1.) (* skoMC1 6.))))) (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (- 1.)))) (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (/ 1. 12.)))) (* skoSC1 (* skoMC1 (* skoMC1 (* skoMC1 (/ 1. 12.))))))))))))) (* skoMC1 (* skoMC1 (* skoMC1 (+ (- 2.) (* skoMC1 (- 6.)))))))) (succedent (> (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (* skoMC1 (- 12.))))) (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (+ 1. (* skoMC1 (- 6.)))))) (* skoSC1 (+ (* skoMC1 (* skoMC1 skoMC1)) (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (/ (- 1.) 12.)))) (* skoSC1 (* skoMC1 (* skoMC1 (* skoMC1 (/ (- 1.) 12.))))))))))))) (* skoMC1 (* skoMC1 (* skoMC1 (+ 2. (* skoMC1 6.))))))))
-----[end problem]-----

-----[begin problem]-----
% In Mathematica format:
Timing[Resolve[Exists[{skoSC1,skoMC1}, And[skoSC1<=0,skoSC1*(skoMC1*(-1+skoMC1*3)+skoSC1*(skoMC1*(-2+skoMC1*-3)+skoSC1*(skoMC1*skoMC1*-1+skoSC1*skoMC1*(1/12))))>skoMC1*(-2+skoMC1*-5),skoMC1>0,skoSC1*(skoMC1*skoMC1*skoMC1*-2+skoSC1*(skoMC1*skoMC1*skoMC1+skoSC1*skoMC1*skoMC1*skoMC1))<=skoMC1*skoMC1*skoMC1*2,skoSC1*(skoMC1*skoMC1*skoMC1+skoSC1*skoMC1*skoMC1*skoMC1)>0,skoSC1*(skoMC1*skoMC1*skoMC1*2+skoSC1*(skoMC1*skoMC1*skoMC1*-1+skoSC1*skoMC1*skoMC1*skoMC1*-1))>skoMC1*skoMC1*skoMC1*-2,skoSC1*(skoMC1*skoMC1*skoMC1*-1+skoSC1*skoMC1*skoMC1*skoMC1*-1)<=0,skoSC1*skoMC1*skoMC1*skoMC1*-1<=skoMC1*skoMC1*skoMC1,skoSC1*skoMC1*skoMC1*skoMC1>skoMC1*skoMC1*skoMC1*-1,skoMC1*skoMC1*skoMC1*-2<=0,skoMC1*skoMC1*skoMC1*2>0,skoSC1<=(5/4),2<=skoMC1,0<=skoSC1,skoMC1>0,0<=skoMC1,skoSC1*skoMC1>skoMC1*-1,skoSC1*skoMC1*-1<=skoMC1,skoSC1*skoMC1*skoMC1*skoMC1*2>skoMC1*skoMC1*skoMC1*-2,skoSC1*skoMC1*skoMC1*skoMC1*-2<=skoMC1*skoMC1*skoMC1*2,skoSC1*(skoMC1*skoMC1*skoMC1*skoMC1*12+skoSC1*(skoMC1*skoMC1*skoMC1*(-1+skoMC1*6)+skoSC1*(skoMC1*skoMC1*skoMC1*-1+skoSC1*(skoMC1*skoMC1*skoMC1*(1/12)+skoSC1*skoMC1*skoMC1*skoMC1*(1/12)))))>skoMC1*skoMC1*skoMC1*(-2+skoMC1*-6),skoSC1*(skoMC1*skoMC1*skoMC1*skoMC1*-12+skoSC1*(skoMC1*skoMC1*skoMC1*(1+skoMC1*-6)+skoSC1*(skoMC1*skoMC1*skoMC1+skoSC1*(skoMC1*skoMC1*skoMC1*(-1/12)+skoSC1*skoMC1*skoMC1*skoMC1*(-1/12)))))<=skoMC1*skoMC1*skoMC1*(2+skoMC1*6)]], Reals]]

% In QepcadB format:
(E skoSC1) (E skoMC1) [[skoSC1<=0]/\[[(skoMC1 (-2+(skoMC1 (-5))))<(skoSC1 ((skoMC1 (-1+(skoMC1 (3))))+(skoSC1 ((skoMC1 (-2+(skoMC1 (-3))))+(skoSC1 ((skoMC1 skoMC1 (-1))+(skoSC1 skoMC1 (1/12))))))))]/\[[0<skoMC1]/\[[(skoSC1 ((skoMC1 skoMC1 skoMC1 (-2))+(skoSC1 ((skoMC1 skoMC1 skoMC1)+(skoSC1 skoMC1 skoMC1 skoMC1)))))<=(skoMC1 skoMC1 skoMC1 (2))]/\[[0<(skoSC1 ((skoMC1 skoMC1 skoMC1)+(skoSC1 skoMC1 skoMC1 skoMC1)))]/\[[(skoMC1 skoMC1 skoMC1 (-2))<(skoSC1 ((skoMC1 skoMC1 skoMC1 (2))+(skoSC1 ((skoMC1 skoMC1 skoMC1 (-1))+(skoSC1 skoMC1 skoMC1 skoMC1 (-1))))))]/\[[(skoSC1 ((skoMC1 skoMC1 skoMC1 (-1))+(skoSC1 skoMC1 skoMC1 skoMC1 (-1))))<=0]/\[[(skoSC1 skoMC1 skoMC1 skoMC1 (-1))<=(skoMC1 skoMC1 skoMC1)]/\[[(skoMC1 skoMC1 skoMC1 (-1))<(skoSC1 skoMC1 skoMC1 skoMC1)]/\[[(skoMC1 skoMC1 skoMC1 (-2))<=0]/\[[0<(skoMC1 skoMC1 skoMC1 (2))]/\[[skoSC1<=5/4]/\[[2<=skoMC1]/\[[0<=skoSC1]/\[[0<skoMC1]/\[[0<=skoMC1]/\[[(skoMC1 (-1))<(skoSC1 skoMC1)]/\[[(skoSC1 skoMC1 (-1))<=skoMC1]/\[[(skoMC1 skoMC1 skoMC1 (-2))<(skoSC1 skoMC1 skoMC1 skoMC1 (2))]/\[[(skoSC1 skoMC1 skoMC1 skoMC1 (-2))<=(skoMC1 skoMC1 skoMC1 (2))]/\[[(skoMC1 skoMC1 skoMC1 (-2+(skoMC1 (-6))))<(skoSC1 ((skoMC1 skoMC1 skoMC1 skoMC1 (12))+(skoSC1 ((skoMC1 skoMC1 skoMC1 (-1+(skoMC1 (6))))+(skoSC1 ((skoMC1 skoMC1 skoMC1 (-1))+(skoSC1 ((skoMC1 skoMC1 skoMC1 (1/12))+(skoSC1 skoMC1 skoMC1 skoMC1 (1/12))))))))))]/\[(skoSC1 ((skoMC1 skoMC1 skoMC1 skoMC1 (-12))+(skoSC1 ((skoMC1 skoMC1 skoMC1 (1+(skoMC1 (-6))))+(skoSC1 ((skoMC1 skoMC1 skoMC1)+(skoSC1 ((skoMC1 skoMC1 skoMC1 (-1/12))+(skoSC1 skoMC1 skoMC1 skoMC1 (-1/12))))))))))<=(skoMC1 skoMC1 skoMC1 (2+(skoMC1 (6))))]]]]]]]]]]]]]]]]]]]]]].

% In SMTLib2 format:
(declare-fun skoSC1 () Real) (declare-fun skoMC1 () Real) (assert (and (<= skoSC1 0.) (and (> (* skoSC1 (+ (* skoMC1 (+ (- 1.) (* skoMC1 3.))) (* skoSC1 (+ (* skoMC1 (+ (- 2.) (* skoMC1 (- 3.)))) (* skoSC1 (+ (* skoMC1 (* skoMC1 (- 1.))) (* skoSC1 (* skoMC1 (/ 1. 12.))))))))) (* skoMC1 (+ (- 2.) (* skoMC1 (- 5.))))) (and (> skoMC1 0.) (and (<= (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (- 2.)))) (* skoSC1 (+ (* skoMC1 (* skoMC1 skoMC1)) (* skoSC1 (* skoMC1 (* skoMC1 skoMC1))))))) (* skoMC1 (* skoMC1 (* skoMC1 2.)))) (and (> (* skoSC1 (+ (* skoMC1 (* skoMC1 skoMC1)) (* skoSC1 (* skoMC1 (* skoMC1 skoMC1))))) 0.) (and (> (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 2.))) (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (- 1.)))) (* skoSC1 (* skoMC1 (* skoMC1 (* skoMC1 (- 1.))))))))) (* skoMC1 (* skoMC1 (* skoMC1 (- 2.))))) (and (<= (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (- 1.)))) (* skoSC1 (* skoMC1 (* skoMC1 (* skoMC1 (- 1.))))))) 0.) (and (<= (* skoSC1 (* skoMC1 (* skoMC1 (* skoMC1 (- 1.))))) (* skoMC1 (* skoMC1 skoMC1))) (and (> (* skoSC1 (* skoMC1 (* skoMC1 skoMC1))) (* skoMC1 (* skoMC1 (* skoMC1 (- 1.))))) (and (<= (* skoMC1 (* skoMC1 (* skoMC1 (- 2.)))) 0.) (and (> (* skoMC1 (* skoMC1 (* skoMC1 2.))) 0.) (and (<= skoSC1 (/ 5. 4.)) (and (<= 2. skoMC1) (and (<= 0. skoSC1) (and (> skoMC1 0.) (and (<= 0. skoMC1) (and (> (* skoSC1 skoMC1) (* skoMC1 (- 1.))) (and (<= (* skoSC1 (* skoMC1 (- 1.))) skoMC1) (and (> (* skoSC1 (* skoMC1 (* skoMC1 (* skoMC1 2.)))) (* skoMC1 (* skoMC1 (* skoMC1 (- 2.))))) (and (<= (* skoSC1 (* skoMC1 (* skoMC1 (* skoMC1 (- 2.))))) (* skoMC1 (* skoMC1 (* skoMC1 2.)))) (and (> (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (* skoMC1 12.)))) (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (+ (- 1.) (* skoMC1 6.))))) (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (- 1.)))) (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (/ 1. 12.)))) (* skoSC1 (* skoMC1 (* skoMC1 (* skoMC1 (/ 1. 12.))))))))))))) (* skoMC1 (* skoMC1 (* skoMC1 (+ (- 2.) (* skoMC1 (- 6.))))))) (<= (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (* skoMC1 (- 12.))))) (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (+ 1. (* skoMC1 (- 6.)))))) (* skoSC1 (+ (* skoMC1 (* skoMC1 skoMC1)) (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (/ (- 1.) 12.)))) (* skoSC1 (* skoMC1 (* skoMC1 (* skoMC1 (/ (- 1.) 12.))))))))))))) (* skoMC1 (* skoMC1 (* skoMC1 (+ 2. (* skoMC1 6.))))))))))))))))))))))))))))

% In GRF format:
(sequent " MetiTarski formula " (antecedent (<= skoSC1 0.) (> (* skoSC1 (+ (* skoMC1 (+ (- 1.) (* skoMC1 3.))) (* skoSC1 (+ (* skoMC1 (+ (- 2.) (* skoMC1 (- 3.)))) (* skoSC1 (+ (* skoMC1 (* skoMC1 (- 1.))) (* skoSC1 (* skoMC1 (/ 1. 12.))))))))) (* skoMC1 (+ (- 2.) (* skoMC1 (- 5.))))) (> skoMC1 0.) (<= (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (- 2.)))) (* skoSC1 (+ (* skoMC1 (* skoMC1 skoMC1)) (* skoSC1 (* skoMC1 (* skoMC1 skoMC1))))))) (* skoMC1 (* skoMC1 (* skoMC1 2.)))) (> (* skoSC1 (+ (* skoMC1 (* skoMC1 skoMC1)) (* skoSC1 (* skoMC1 (* skoMC1 skoMC1))))) 0.) (> (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 2.))) (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (- 1.)))) (* skoSC1 (* skoMC1 (* skoMC1 (* skoMC1 (- 1.))))))))) (* skoMC1 (* skoMC1 (* skoMC1 (- 2.))))) (<= (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (- 1.)))) (* skoSC1 (* skoMC1 (* skoMC1 (* skoMC1 (- 1.))))))) 0.) (<= (* skoSC1 (* skoMC1 (* skoMC1 (* skoMC1 (- 1.))))) (* skoMC1 (* skoMC1 skoMC1))) (> (* skoSC1 (* skoMC1 (* skoMC1 skoMC1))) (* skoMC1 (* skoMC1 (* skoMC1 (- 1.))))) (<= (* skoMC1 (* skoMC1 (* skoMC1 (- 2.)))) 0.) (> (* skoMC1 (* skoMC1 (* skoMC1 2.))) 0.) (<= skoSC1 (/ 5. 4.)) (<= 2. skoMC1) (<= 0. skoSC1) (> skoMC1 0.) (<= 0. skoMC1) (> (* skoSC1 skoMC1) (* skoMC1 (- 1.))) (<= (* skoSC1 (* skoMC1 (- 1.))) skoMC1) (> (* skoSC1 (* skoMC1 (* skoMC1 (* skoMC1 2.)))) (* skoMC1 (* skoMC1 (* skoMC1 (- 2.))))) (<= (* skoSC1 (* skoMC1 (* skoMC1 (* skoMC1 (- 2.))))) (* skoMC1 (* skoMC1 (* skoMC1 2.)))) (> (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (* skoMC1 12.)))) (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (+ (- 1.) (* skoMC1 6.))))) (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (- 1.)))) (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (/ 1. 12.)))) (* skoSC1 (* skoMC1 (* skoMC1 (* skoMC1 (/ 1. 12.))))))))))))) (* skoMC1 (* skoMC1 (* skoMC1 (+ (- 2.) (* skoMC1 (- 6.)))))))) (succedent (> (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (* skoMC1 (- 12.))))) (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (+ 1. (* skoMC1 (- 6.)))))) (* skoSC1 (+ (* skoMC1 (* skoMC1 skoMC1)) (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (/ (- 1.) 12.)))) (* skoSC1 (* skoMC1 (* skoMC1 (* skoMC1 (/ (- 1.) 12.))))))))))))) (* skoMC1 (* skoMC1 (* skoMC1 (+ 2. (* skoMC1 6.))))))))
-----[end problem]-----

-----[begin problem]-----
% In Mathematica format:
Timing[Resolve[Exists[{skoSC1,skoMC1}, And[0<=skoMC1,skoSC1*(skoMC1*skoMC1*skoMC1*-2+skoSC1*(skoMC1*skoMC1*skoMC1+skoSC1*skoMC1*skoMC1*skoMC1))<=skoMC1*skoMC1*skoMC1*2,skoSC1*(skoMC1*skoMC1*skoMC1+skoSC1*skoMC1*skoMC1*skoMC1)>0,skoSC1*(skoMC1*skoMC1*skoMC1*2+skoSC1*(skoMC1*skoMC1*skoMC1*-1+skoSC1*skoMC1*skoMC1*skoMC1*-1))>skoMC1*skoMC1*skoMC1*-2,skoSC1*(skoMC1*skoMC1*skoMC1*-1+skoSC1*skoMC1*skoMC1*skoMC1*-1)<=0,skoSC1*skoMC1*skoMC1*skoMC1*-1<=skoMC1*skoMC1*skoMC1,skoSC1*skoMC1*skoMC1*skoMC1>skoMC1*skoMC1*skoMC1*-1,skoMC1*skoMC1*skoMC1*-2<=0,skoMC1*skoMC1*skoMC1*2>0,skoSC1<=(5/4),2<=skoMC1,0<=skoSC1,skoMC1>0,0<=skoMC1,skoSC1*skoMC1>skoMC1*-1,skoSC1*skoMC1*-1<=skoMC1,skoSC1*skoMC1*skoMC1*skoMC1*2>skoMC1*skoMC1*skoMC1*-2,skoSC1*skoMC1*skoMC1*skoMC1*-2<=skoMC1*skoMC1*skoMC1*2,skoSC1*(skoMC1*skoMC1*skoMC1*skoMC1*12+skoSC1*(skoMC1*skoMC1*skoMC1*(-1+skoMC1*6)+skoSC1*(skoMC1*skoMC1*skoMC1*-1+skoSC1*(skoMC1*skoMC1*skoMC1*(1/12)+skoSC1*skoMC1*skoMC1*skoMC1*(1/12)))))>skoMC1*skoMC1*skoMC1*(-2+skoMC1*-6),skoSC1*(skoMC1*skoMC1*skoMC1*skoMC1*-12+skoSC1*(skoMC1*skoMC1*skoMC1*(1+skoMC1*-6)+skoSC1*(skoMC1*skoMC1*skoMC1+skoSC1*(skoMC1*skoMC1*skoMC1*(-1/12)+skoSC1*skoMC1*skoMC1*skoMC1*(-1/12)))))<=skoMC1*skoMC1*skoMC1*(2+skoMC1*6)]], Reals]]

% In QepcadB format:
(E skoSC1) (E skoMC1) [[0<=skoMC1]/\[[(skoSC1 ((skoMC1 skoMC1 skoMC1 (-2))+(skoSC1 ((skoMC1 skoMC1 skoMC1)+(skoSC1 skoMC1 skoMC1 skoMC1)))))<=(skoMC1 skoMC1 skoMC1 (2))]/\[[0<(skoSC1 ((skoMC1 skoMC1 skoMC1)+(skoSC1 skoMC1 skoMC1 skoMC1)))]/\[[(skoMC1 skoMC1 skoMC1 (-2))<(skoSC1 ((skoMC1 skoMC1 skoMC1 (2))+(skoSC1 ((skoMC1 skoMC1 skoMC1 (-1))+(skoSC1 skoMC1 skoMC1 skoMC1 (-1))))))]/\[[(skoSC1 ((skoMC1 skoMC1 skoMC1 (-1))+(skoSC1 skoMC1 skoMC1 skoMC1 (-1))))<=0]/\[[(skoSC1 skoMC1 skoMC1 skoMC1 (-1))<=(skoMC1 skoMC1 skoMC1)]/\[[(skoMC1 skoMC1 skoMC1 (-1))<(skoSC1 skoMC1 skoMC1 skoMC1)]/\[[(skoMC1 skoMC1 skoMC1 (-2))<=0]/\[[0<(skoMC1 skoMC1 skoMC1 (2))]/\[[skoSC1<=5/4]/\[[2<=skoMC1]/\[[0<=skoSC1]/\[[0<skoMC1]/\[[0<=skoMC1]/\[[(skoMC1 (-1))<(skoSC1 skoMC1)]/\[[(skoSC1 skoMC1 (-1))<=skoMC1]/\[[(skoMC1 skoMC1 skoMC1 (-2))<(skoSC1 skoMC1 skoMC1 skoMC1 (2))]/\[[(skoSC1 skoMC1 skoMC1 skoMC1 (-2))<=(skoMC1 skoMC1 skoMC1 (2))]/\[[(skoMC1 skoMC1 skoMC1 (-2+(skoMC1 (-6))))<(skoSC1 ((skoMC1 skoMC1 skoMC1 skoMC1 (12))+(skoSC1 ((skoMC1 skoMC1 skoMC1 (-1+(skoMC1 (6))))+(skoSC1 ((skoMC1 skoMC1 skoMC1 (-1))+(skoSC1 ((skoMC1 skoMC1 skoMC1 (1/12))+(skoSC1 skoMC1 skoMC1 skoMC1 (1/12))))))))))]/\[(skoSC1 ((skoMC1 skoMC1 skoMC1 skoMC1 (-12))+(skoSC1 ((skoMC1 skoMC1 skoMC1 (1+(skoMC1 (-6))))+(skoSC1 ((skoMC1 skoMC1 skoMC1)+(skoSC1 ((skoMC1 skoMC1 skoMC1 (-1/12))+(skoSC1 skoMC1 skoMC1 skoMC1 (-1/12))))))))))<=(skoMC1 skoMC1 skoMC1 (2+(skoMC1 (6))))]]]]]]]]]]]]]]]]]]]].

% In SMTLib2 format:
(declare-fun skoSC1 () Real) (declare-fun skoMC1 () Real) (assert (and (<= 0. skoMC1) (and (<= (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (- 2.)))) (* skoSC1 (+ (* skoMC1 (* skoMC1 skoMC1)) (* skoSC1 (* skoMC1 (* skoMC1 skoMC1))))))) (* skoMC1 (* skoMC1 (* skoMC1 2.)))) (and (> (* skoSC1 (+ (* skoMC1 (* skoMC1 skoMC1)) (* skoSC1 (* skoMC1 (* skoMC1 skoMC1))))) 0.) (and (> (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 2.))) (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (- 1.)))) (* skoSC1 (* skoMC1 (* skoMC1 (* skoMC1 (- 1.))))))))) (* skoMC1 (* skoMC1 (* skoMC1 (- 2.))))) (and (<= (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (- 1.)))) (* skoSC1 (* skoMC1 (* skoMC1 (* skoMC1 (- 1.))))))) 0.) (and (<= (* skoSC1 (* skoMC1 (* skoMC1 (* skoMC1 (- 1.))))) (* skoMC1 (* skoMC1 skoMC1))) (and (> (* skoSC1 (* skoMC1 (* skoMC1 skoMC1))) (* skoMC1 (* skoMC1 (* skoMC1 (- 1.))))) (and (<= (* skoMC1 (* skoMC1 (* skoMC1 (- 2.)))) 0.) (and (> (* skoMC1 (* skoMC1 (* skoMC1 2.))) 0.) (and (<= skoSC1 (/ 5. 4.)) (and (<= 2. skoMC1) (and (<= 0. skoSC1) (and (> skoMC1 0.) (and (<= 0. skoMC1) (and (> (* skoSC1 skoMC1) (* skoMC1 (- 1.))) (and (<= (* skoSC1 (* skoMC1 (- 1.))) skoMC1) (and (> (* skoSC1 (* skoMC1 (* skoMC1 (* skoMC1 2.)))) (* skoMC1 (* skoMC1 (* skoMC1 (- 2.))))) (and (<= (* skoSC1 (* skoMC1 (* skoMC1 (* skoMC1 (- 2.))))) (* skoMC1 (* skoMC1 (* skoMC1 2.)))) (and (> (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (* skoMC1 12.)))) (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (+ (- 1.) (* skoMC1 6.))))) (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (- 1.)))) (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (/ 1. 12.)))) (* skoSC1 (* skoMC1 (* skoMC1 (* skoMC1 (/ 1. 12.))))))))))))) (* skoMC1 (* skoMC1 (* skoMC1 (+ (- 2.) (* skoMC1 (- 6.))))))) (<= (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (* skoMC1 (- 12.))))) (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (+ 1. (* skoMC1 (- 6.)))))) (* skoSC1 (+ (* skoMC1 (* skoMC1 skoMC1)) (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (/ (- 1.) 12.)))) (* skoSC1 (* skoMC1 (* skoMC1 (* skoMC1 (/ (- 1.) 12.))))))))))))) (* skoMC1 (* skoMC1 (* skoMC1 (+ 2. (* skoMC1 6.))))))))))))))))))))))))))

% In GRF format:
(sequent " MetiTarski formula " (antecedent (<= 0. skoMC1) (<= (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (- 2.)))) (* skoSC1 (+ (* skoMC1 (* skoMC1 skoMC1)) (* skoSC1 (* skoMC1 (* skoMC1 skoMC1))))))) (* skoMC1 (* skoMC1 (* skoMC1 2.)))) (> (* skoSC1 (+ (* skoMC1 (* skoMC1 skoMC1)) (* skoSC1 (* skoMC1 (* skoMC1 skoMC1))))) 0.) (> (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 2.))) (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (- 1.)))) (* skoSC1 (* skoMC1 (* skoMC1 (* skoMC1 (- 1.))))))))) (* skoMC1 (* skoMC1 (* skoMC1 (- 2.))))) (<= (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (- 1.)))) (* skoSC1 (* skoMC1 (* skoMC1 (* skoMC1 (- 1.))))))) 0.) (<= (* skoSC1 (* skoMC1 (* skoMC1 (* skoMC1 (- 1.))))) (* skoMC1 (* skoMC1 skoMC1))) (> (* skoSC1 (* skoMC1 (* skoMC1 skoMC1))) (* skoMC1 (* skoMC1 (* skoMC1 (- 1.))))) (<= (* skoMC1 (* skoMC1 (* skoMC1 (- 2.)))) 0.) (> (* skoMC1 (* skoMC1 (* skoMC1 2.))) 0.) (<= skoSC1 (/ 5. 4.)) (<= 2. skoMC1) (<= 0. skoSC1) (> skoMC1 0.) (<= 0. skoMC1) (> (* skoSC1 skoMC1) (* skoMC1 (- 1.))) (<= (* skoSC1 (* skoMC1 (- 1.))) skoMC1) (> (* skoSC1 (* skoMC1 (* skoMC1 (* skoMC1 2.)))) (* skoMC1 (* skoMC1 (* skoMC1 (- 2.))))) (<= (* skoSC1 (* skoMC1 (* skoMC1 (* skoMC1 (- 2.))))) (* skoMC1 (* skoMC1 (* skoMC1 2.)))) (> (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (* skoMC1 12.)))) (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (+ (- 1.) (* skoMC1 6.))))) (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (- 1.)))) (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (/ 1. 12.)))) (* skoSC1 (* skoMC1 (* skoMC1 (* skoMC1 (/ 1. 12.))))))))))))) (* skoMC1 (* skoMC1 (* skoMC1 (+ (- 2.) (* skoMC1 (- 6.)))))))) (succedent (> (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (* skoMC1 (- 12.))))) (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (+ 1. (* skoMC1 (- 6.)))))) (* skoSC1 (+ (* skoMC1 (* skoMC1 skoMC1)) (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (/ (- 1.) 12.)))) (* skoSC1 (* skoMC1 (* skoMC1 (* skoMC1 (/ (- 1.) 12.))))))))))))) (* skoMC1 (* skoMC1 (* skoMC1 (+ 2. (* skoMC1 6.))))))))
-----[end problem]-----

-----[begin problem]-----
% In Mathematica format:
Timing[Resolve[Exists[{skoSC1,skoMC1}, And[skoSC1>0,skoSC1*(skoMC1*skoMC1*skoMC1*-2+skoSC1*(skoMC1*skoMC1*skoMC1+skoSC1*skoMC1*skoMC1*skoMC1))<=skoMC1*skoMC1*skoMC1*2,skoSC1*(skoMC1*skoMC1*skoMC1+skoSC1*skoMC1*skoMC1*skoMC1)>0,skoSC1*(skoMC1*skoMC1*skoMC1*2+skoSC1*(skoMC1*skoMC1*skoMC1*-1+skoSC1*skoMC1*skoMC1*skoMC1*-1))>skoMC1*skoMC1*skoMC1*-2,skoSC1*(skoMC1*skoMC1*skoMC1*-1+skoSC1*skoMC1*skoMC1*skoMC1*-1)<=0,skoSC1*skoMC1*skoMC1*skoMC1*-1<=skoMC1*skoMC1*skoMC1,skoSC1*skoMC1*skoMC1*skoMC1>skoMC1*skoMC1*skoMC1*-1,skoMC1*skoMC1*skoMC1*-2<=0,skoMC1*skoMC1*skoMC1*2>0,skoSC1<=(5/4),2<=skoMC1,0<=skoSC1,skoMC1>0,0<=skoMC1,skoSC1*skoMC1>skoMC1*-1,skoSC1*skoMC1*-1<=skoMC1,skoSC1*skoMC1*skoMC1*skoMC1*2>skoMC1*skoMC1*skoMC1*-2,skoSC1*skoMC1*skoMC1*skoMC1*-2<=skoMC1*skoMC1*skoMC1*2,skoSC1*(skoMC1*skoMC1*skoMC1*skoMC1*12+skoSC1*(skoMC1*skoMC1*skoMC1*(-1+skoMC1*6)+skoSC1*(skoMC1*skoMC1*skoMC1*-1+skoSC1*(skoMC1*skoMC1*skoMC1*(1/12)+skoSC1*skoMC1*skoMC1*skoMC1*(1/12)))))>skoMC1*skoMC1*skoMC1*(-2+skoMC1*-6),skoSC1*(skoMC1*skoMC1*skoMC1*skoMC1*-12+skoSC1*(skoMC1*skoMC1*skoMC1*(1+skoMC1*-6)+skoSC1*(skoMC1*skoMC1*skoMC1+skoSC1*(skoMC1*skoMC1*skoMC1*(-1/12)+skoSC1*skoMC1*skoMC1*skoMC1*(-1/12)))))<=skoMC1*skoMC1*skoMC1*(2+skoMC1*6)]], Reals]]

% In QepcadB format:
(E skoSC1) (E skoMC1) [[0<skoSC1]/\[[(skoSC1 ((skoMC1 skoMC1 skoMC1 (-2))+(skoSC1 ((skoMC1 skoMC1 skoMC1)+(skoSC1 skoMC1 skoMC1 skoMC1)))))<=(skoMC1 skoMC1 skoMC1 (2))]/\[[0<(skoSC1 ((skoMC1 skoMC1 skoMC1)+(skoSC1 skoMC1 skoMC1 skoMC1)))]/\[[(skoMC1 skoMC1 skoMC1 (-2))<(skoSC1 ((skoMC1 skoMC1 skoMC1 (2))+(skoSC1 ((skoMC1 skoMC1 skoMC1 (-1))+(skoSC1 skoMC1 skoMC1 skoMC1 (-1))))))]/\[[(skoSC1 ((skoMC1 skoMC1 skoMC1 (-1))+(skoSC1 skoMC1 skoMC1 skoMC1 (-1))))<=0]/\[[(skoSC1 skoMC1 skoMC1 skoMC1 (-1))<=(skoMC1 skoMC1 skoMC1)]/\[[(skoMC1 skoMC1 skoMC1 (-1))<(skoSC1 skoMC1 skoMC1 skoMC1)]/\[[(skoMC1 skoMC1 skoMC1 (-2))<=0]/\[[0<(skoMC1 skoMC1 skoMC1 (2))]/\[[skoSC1<=5/4]/\[[2<=skoMC1]/\[[0<=skoSC1]/\[[0<skoMC1]/\[[0<=skoMC1]/\[[(skoMC1 (-1))<(skoSC1 skoMC1)]/\[[(skoSC1 skoMC1 (-1))<=skoMC1]/\[[(skoMC1 skoMC1 skoMC1 (-2))<(skoSC1 skoMC1 skoMC1 skoMC1 (2))]/\[[(skoSC1 skoMC1 skoMC1 skoMC1 (-2))<=(skoMC1 skoMC1 skoMC1 (2))]/\[[(skoMC1 skoMC1 skoMC1 (-2+(skoMC1 (-6))))<(skoSC1 ((skoMC1 skoMC1 skoMC1 skoMC1 (12))+(skoSC1 ((skoMC1 skoMC1 skoMC1 (-1+(skoMC1 (6))))+(skoSC1 ((skoMC1 skoMC1 skoMC1 (-1))+(skoSC1 ((skoMC1 skoMC1 skoMC1 (1/12))+(skoSC1 skoMC1 skoMC1 skoMC1 (1/12))))))))))]/\[(skoSC1 ((skoMC1 skoMC1 skoMC1 skoMC1 (-12))+(skoSC1 ((skoMC1 skoMC1 skoMC1 (1+(skoMC1 (-6))))+(skoSC1 ((skoMC1 skoMC1 skoMC1)+(skoSC1 ((skoMC1 skoMC1 skoMC1 (-1/12))+(skoSC1 skoMC1 skoMC1 skoMC1 (-1/12))))))))))<=(skoMC1 skoMC1 skoMC1 (2+(skoMC1 (6))))]]]]]]]]]]]]]]]]]]]].

% In SMTLib2 format:
(declare-fun skoSC1 () Real) (declare-fun skoMC1 () Real) (assert (and (> skoSC1 0.) (and (<= (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (- 2.)))) (* skoSC1 (+ (* skoMC1 (* skoMC1 skoMC1)) (* skoSC1 (* skoMC1 (* skoMC1 skoMC1))))))) (* skoMC1 (* skoMC1 (* skoMC1 2.)))) (and (> (* skoSC1 (+ (* skoMC1 (* skoMC1 skoMC1)) (* skoSC1 (* skoMC1 (* skoMC1 skoMC1))))) 0.) (and (> (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 2.))) (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (- 1.)))) (* skoSC1 (* skoMC1 (* skoMC1 (* skoMC1 (- 1.))))))))) (* skoMC1 (* skoMC1 (* skoMC1 (- 2.))))) (and (<= (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (- 1.)))) (* skoSC1 (* skoMC1 (* skoMC1 (* skoMC1 (- 1.))))))) 0.) (and (<= (* skoSC1 (* skoMC1 (* skoMC1 (* skoMC1 (- 1.))))) (* skoMC1 (* skoMC1 skoMC1))) (and (> (* skoSC1 (* skoMC1 (* skoMC1 skoMC1))) (* skoMC1 (* skoMC1 (* skoMC1 (- 1.))))) (and (<= (* skoMC1 (* skoMC1 (* skoMC1 (- 2.)))) 0.) (and (> (* skoMC1 (* skoMC1 (* skoMC1 2.))) 0.) (and (<= skoSC1 (/ 5. 4.)) (and (<= 2. skoMC1) (and (<= 0. skoSC1) (and (> skoMC1 0.) (and (<= 0. skoMC1) (and (> (* skoSC1 skoMC1) (* skoMC1 (- 1.))) (and (<= (* skoSC1 (* skoMC1 (- 1.))) skoMC1) (and (> (* skoSC1 (* skoMC1 (* skoMC1 (* skoMC1 2.)))) (* skoMC1 (* skoMC1 (* skoMC1 (- 2.))))) (and (<= (* skoSC1 (* skoMC1 (* skoMC1 (* skoMC1 (- 2.))))) (* skoMC1 (* skoMC1 (* skoMC1 2.)))) (and (> (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (* skoMC1 12.)))) (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (+ (- 1.) (* skoMC1 6.))))) (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (- 1.)))) (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (/ 1. 12.)))) (* skoSC1 (* skoMC1 (* skoMC1 (* skoMC1 (/ 1. 12.))))))))))))) (* skoMC1 (* skoMC1 (* skoMC1 (+ (- 2.) (* skoMC1 (- 6.))))))) (<= (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (* skoMC1 (- 12.))))) (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (+ 1. (* skoMC1 (- 6.)))))) (* skoSC1 (+ (* skoMC1 (* skoMC1 skoMC1)) (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (/ (- 1.) 12.)))) (* skoSC1 (* skoMC1 (* skoMC1 (* skoMC1 (/ (- 1.) 12.))))))))))))) (* skoMC1 (* skoMC1 (* skoMC1 (+ 2. (* skoMC1 6.))))))))))))))))))))))))))

% In GRF format:
(sequent " MetiTarski formula " (antecedent (> skoSC1 0.) (<= (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (- 2.)))) (* skoSC1 (+ (* skoMC1 (* skoMC1 skoMC1)) (* skoSC1 (* skoMC1 (* skoMC1 skoMC1))))))) (* skoMC1 (* skoMC1 (* skoMC1 2.)))) (> (* skoSC1 (+ (* skoMC1 (* skoMC1 skoMC1)) (* skoSC1 (* skoMC1 (* skoMC1 skoMC1))))) 0.) (> (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 2.))) (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (- 1.)))) (* skoSC1 (* skoMC1 (* skoMC1 (* skoMC1 (- 1.))))))))) (* skoMC1 (* skoMC1 (* skoMC1 (- 2.))))) (<= (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (- 1.)))) (* skoSC1 (* skoMC1 (* skoMC1 (* skoMC1 (- 1.))))))) 0.) (<= (* skoSC1 (* skoMC1 (* skoMC1 (* skoMC1 (- 1.))))) (* skoMC1 (* skoMC1 skoMC1))) (> (* skoSC1 (* skoMC1 (* skoMC1 skoMC1))) (* skoMC1 (* skoMC1 (* skoMC1 (- 1.))))) (<= (* skoMC1 (* skoMC1 (* skoMC1 (- 2.)))) 0.) (> (* skoMC1 (* skoMC1 (* skoMC1 2.))) 0.) (<= skoSC1 (/ 5. 4.)) (<= 2. skoMC1) (<= 0. skoSC1) (> skoMC1 0.) (<= 0. skoMC1) (> (* skoSC1 skoMC1) (* skoMC1 (- 1.))) (<= (* skoSC1 (* skoMC1 (- 1.))) skoMC1) (> (* skoSC1 (* skoMC1 (* skoMC1 (* skoMC1 2.)))) (* skoMC1 (* skoMC1 (* skoMC1 (- 2.))))) (<= (* skoSC1 (* skoMC1 (* skoMC1 (* skoMC1 (- 2.))))) (* skoMC1 (* skoMC1 (* skoMC1 2.)))) (> (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (* skoMC1 12.)))) (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (+ (- 1.) (* skoMC1 6.))))) (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (- 1.)))) (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (/ 1. 12.)))) (* skoSC1 (* skoMC1 (* skoMC1 (* skoMC1 (/ 1. 12.))))))))))))) (* skoMC1 (* skoMC1 (* skoMC1 (+ (- 2.) (* skoMC1 (- 6.)))))))) (succedent (> (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (* skoMC1 (- 12.))))) (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (+ 1. (* skoMC1 (- 6.)))))) (* skoSC1 (+ (* skoMC1 (* skoMC1 skoMC1)) (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (/ (- 1.) 12.)))) (* skoSC1 (* skoMC1 (* skoMC1 (* skoMC1 (/ (- 1.) 12.))))))))))))) (* skoMC1 (* skoMC1 (* skoMC1 (+ 2. (* skoMC1 6.))))))))
-----[end problem]-----

-----[begin problem]-----
% In Mathematica format:
Timing[Resolve[Exists[{skoSC1,skoMC1}, And[skoSC1*skoMC1*-1<=skoMC1,skoSC1>0,skoSC1*(skoMC1*skoMC1*skoMC1*-2+skoSC1*(skoMC1*skoMC1*skoMC1+skoSC1*skoMC1*skoMC1*skoMC1))<=skoMC1*skoMC1*skoMC1*2,skoSC1*(skoMC1*skoMC1*skoMC1+skoSC1*skoMC1*skoMC1*skoMC1)>0,skoSC1*(skoMC1*skoMC1*skoMC1*2+skoSC1*(skoMC1*skoMC1*skoMC1*-1+skoSC1*skoMC1*skoMC1*skoMC1*-1))>skoMC1*skoMC1*skoMC1*-2,skoSC1*(skoMC1*skoMC1*skoMC1*-1+skoSC1*skoMC1*skoMC1*skoMC1*-1)<=0,skoSC1*skoMC1*skoMC1*skoMC1*-1<=skoMC1*skoMC1*skoMC1,skoSC1*skoMC1*skoMC1*skoMC1>skoMC1*skoMC1*skoMC1*-1,skoMC1*skoMC1*skoMC1*-2<=0,skoMC1*skoMC1*skoMC1*2>0,skoSC1<=(5/4),2<=skoMC1,0<=skoSC1,skoMC1>0,0<=skoMC1,skoSC1*skoMC1>skoMC1*-1,skoSC1*skoMC1*-1<=skoMC1,skoSC1*skoMC1*skoMC1*skoMC1*2>skoMC1*skoMC1*skoMC1*-2,skoSC1*skoMC1*skoMC1*skoMC1*-2<=skoMC1*skoMC1*skoMC1*2,skoSC1*(skoMC1*skoMC1*skoMC1*skoMC1*12+skoSC1*(skoMC1*skoMC1*skoMC1*(-1+skoMC1*6)+skoSC1*(skoMC1*skoMC1*skoMC1*-1+skoSC1*(skoMC1*skoMC1*skoMC1*(1/12)+skoSC1*skoMC1*skoMC1*skoMC1*(1/12)))))>skoMC1*skoMC1*skoMC1*(-2+skoMC1*-6),skoSC1*(skoMC1*skoMC1*skoMC1*skoMC1*-12+skoSC1*(skoMC1*skoMC1*skoMC1*(1+skoMC1*-6)+skoSC1*(skoMC1*skoMC1*skoMC1+skoSC1*(skoMC1*skoMC1*skoMC1*(-1/12)+skoSC1*skoMC1*skoMC1*skoMC1*(-1/12)))))<=skoMC1*skoMC1*skoMC1*(2+skoMC1*6)]], Reals]]

% In QepcadB format:
(E skoSC1) (E skoMC1) [[(skoSC1 skoMC1 (-1))<=skoMC1]/\[[0<skoSC1]/\[[(skoSC1 ((skoMC1 skoMC1 skoMC1 (-2))+(skoSC1 ((skoMC1 skoMC1 skoMC1)+(skoSC1 skoMC1 skoMC1 skoMC1)))))<=(skoMC1 skoMC1 skoMC1 (2))]/\[[0<(skoSC1 ((skoMC1 skoMC1 skoMC1)+(skoSC1 skoMC1 skoMC1 skoMC1)))]/\[[(skoMC1 skoMC1 skoMC1 (-2))<(skoSC1 ((skoMC1 skoMC1 skoMC1 (2))+(skoSC1 ((skoMC1 skoMC1 skoMC1 (-1))+(skoSC1 skoMC1 skoMC1 skoMC1 (-1))))))]/\[[(skoSC1 ((skoMC1 skoMC1 skoMC1 (-1))+(skoSC1 skoMC1 skoMC1 skoMC1 (-1))))<=0]/\[[(skoSC1 skoMC1 skoMC1 skoMC1 (-1))<=(skoMC1 skoMC1 skoMC1)]/\[[(skoMC1 skoMC1 skoMC1 (-1))<(skoSC1 skoMC1 skoMC1 skoMC1)]/\[[(skoMC1 skoMC1 skoMC1 (-2))<=0]/\[[0<(skoMC1 skoMC1 skoMC1 (2))]/\[[skoSC1<=5/4]/\[[2<=skoMC1]/\[[0<=skoSC1]/\[[0<skoMC1]/\[[0<=skoMC1]/\[[(skoMC1 (-1))<(skoSC1 skoMC1)]/\[[(skoSC1 skoMC1 (-1))<=skoMC1]/\[[(skoMC1 skoMC1 skoMC1 (-2))<(skoSC1 skoMC1 skoMC1 skoMC1 (2))]/\[[(skoSC1 skoMC1 skoMC1 skoMC1 (-2))<=(skoMC1 skoMC1 skoMC1 (2))]/\[[(skoMC1 skoMC1 skoMC1 (-2+(skoMC1 (-6))))<(skoSC1 ((skoMC1 skoMC1 skoMC1 skoMC1 (12))+(skoSC1 ((skoMC1 skoMC1 skoMC1 (-1+(skoMC1 (6))))+(skoSC1 ((skoMC1 skoMC1 skoMC1 (-1))+(skoSC1 ((skoMC1 skoMC1 skoMC1 (1/12))+(skoSC1 skoMC1 skoMC1 skoMC1 (1/12))))))))))]/\[(skoSC1 ((skoMC1 skoMC1 skoMC1 skoMC1 (-12))+(skoSC1 ((skoMC1 skoMC1 skoMC1 (1+(skoMC1 (-6))))+(skoSC1 ((skoMC1 skoMC1 skoMC1)+(skoSC1 ((skoMC1 skoMC1 skoMC1 (-1/12))+(skoSC1 skoMC1 skoMC1 skoMC1 (-1/12))))))))))<=(skoMC1 skoMC1 skoMC1 (2+(skoMC1 (6))))]]]]]]]]]]]]]]]]]]]]].

% In SMTLib2 format:
(declare-fun skoSC1 () Real) (declare-fun skoMC1 () Real) (assert (and (<= (* skoSC1 (* skoMC1 (- 1.))) skoMC1) (and (> skoSC1 0.) (and (<= (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (- 2.)))) (* skoSC1 (+ (* skoMC1 (* skoMC1 skoMC1)) (* skoSC1 (* skoMC1 (* skoMC1 skoMC1))))))) (* skoMC1 (* skoMC1 (* skoMC1 2.)))) (and (> (* skoSC1 (+ (* skoMC1 (* skoMC1 skoMC1)) (* skoSC1 (* skoMC1 (* skoMC1 skoMC1))))) 0.) (and (> (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 2.))) (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (- 1.)))) (* skoSC1 (* skoMC1 (* skoMC1 (* skoMC1 (- 1.))))))))) (* skoMC1 (* skoMC1 (* skoMC1 (- 2.))))) (and (<= (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (- 1.)))) (* skoSC1 (* skoMC1 (* skoMC1 (* skoMC1 (- 1.))))))) 0.) (and (<= (* skoSC1 (* skoMC1 (* skoMC1 (* skoMC1 (- 1.))))) (* skoMC1 (* skoMC1 skoMC1))) (and (> (* skoSC1 (* skoMC1 (* skoMC1 skoMC1))) (* skoMC1 (* skoMC1 (* skoMC1 (- 1.))))) (and (<= (* skoMC1 (* skoMC1 (* skoMC1 (- 2.)))) 0.) (and (> (* skoMC1 (* skoMC1 (* skoMC1 2.))) 0.) (and (<= skoSC1 (/ 5. 4.)) (and (<= 2. skoMC1) (and (<= 0. skoSC1) (and (> skoMC1 0.) (and (<= 0. skoMC1) (and (> (* skoSC1 skoMC1) (* skoMC1 (- 1.))) (and (<= (* skoSC1 (* skoMC1 (- 1.))) skoMC1) (and (> (* skoSC1 (* skoMC1 (* skoMC1 (* skoMC1 2.)))) (* skoMC1 (* skoMC1 (* skoMC1 (- 2.))))) (and (<= (* skoSC1 (* skoMC1 (* skoMC1 (* skoMC1 (- 2.))))) (* skoMC1 (* skoMC1 (* skoMC1 2.)))) (and (> (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (* skoMC1 12.)))) (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (+ (- 1.) (* skoMC1 6.))))) (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (- 1.)))) (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (/ 1. 12.)))) (* skoSC1 (* skoMC1 (* skoMC1 (* skoMC1 (/ 1. 12.))))))))))))) (* skoMC1 (* skoMC1 (* skoMC1 (+ (- 2.) (* skoMC1 (- 6.))))))) (<= (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (* skoMC1 (- 12.))))) (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (+ 1. (* skoMC1 (- 6.)))))) (* skoSC1 (+ (* skoMC1 (* skoMC1 skoMC1)) (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (/ (- 1.) 12.)))) (* skoSC1 (* skoMC1 (* skoMC1 (* skoMC1 (/ (- 1.) 12.))))))))))))) (* skoMC1 (* skoMC1 (* skoMC1 (+ 2. (* skoMC1 6.)))))))))))))))))))))))))))

% In GRF format:
(sequent " MetiTarski formula " (antecedent (<= (* skoSC1 (* skoMC1 (- 1.))) skoMC1) (> skoSC1 0.) (<= (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (- 2.)))) (* skoSC1 (+ (* skoMC1 (* skoMC1 skoMC1)) (* skoSC1 (* skoMC1 (* skoMC1 skoMC1))))))) (* skoMC1 (* skoMC1 (* skoMC1 2.)))) (> (* skoSC1 (+ (* skoMC1 (* skoMC1 skoMC1)) (* skoSC1 (* skoMC1 (* skoMC1 skoMC1))))) 0.) (> (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 2.))) (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (- 1.)))) (* skoSC1 (* skoMC1 (* skoMC1 (* skoMC1 (- 1.))))))))) (* skoMC1 (* skoMC1 (* skoMC1 (- 2.))))) (<= (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (- 1.)))) (* skoSC1 (* skoMC1 (* skoMC1 (* skoMC1 (- 1.))))))) 0.) (<= (* skoSC1 (* skoMC1 (* skoMC1 (* skoMC1 (- 1.))))) (* skoMC1 (* skoMC1 skoMC1))) (> (* skoSC1 (* skoMC1 (* skoMC1 skoMC1))) (* skoMC1 (* skoMC1 (* skoMC1 (- 1.))))) (<= (* skoMC1 (* skoMC1 (* skoMC1 (- 2.)))) 0.) (> (* skoMC1 (* skoMC1 (* skoMC1 2.))) 0.) (<= skoSC1 (/ 5. 4.)) (<= 2. skoMC1) (<= 0. skoSC1) (> skoMC1 0.) (<= 0. skoMC1) (> (* skoSC1 skoMC1) (* skoMC1 (- 1.))) (<= (* skoSC1 (* skoMC1 (- 1.))) skoMC1) (> (* skoSC1 (* skoMC1 (* skoMC1 (* skoMC1 2.)))) (* skoMC1 (* skoMC1 (* skoMC1 (- 2.))))) (<= (* skoSC1 (* skoMC1 (* skoMC1 (* skoMC1 (- 2.))))) (* skoMC1 (* skoMC1 (* skoMC1 2.)))) (> (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (* skoMC1 12.)))) (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (+ (- 1.) (* skoMC1 6.))))) (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (- 1.)))) (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (/ 1. 12.)))) (* skoSC1 (* skoMC1 (* skoMC1 (* skoMC1 (/ 1. 12.))))))))))))) (* skoMC1 (* skoMC1 (* skoMC1 (+ (- 2.) (* skoMC1 (- 6.)))))))) (succedent (> (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (* skoMC1 (- 12.))))) (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (+ 1. (* skoMC1 (- 6.)))))) (* skoSC1 (+ (* skoMC1 (* skoMC1 skoMC1)) (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (/ (- 1.) 12.)))) (* skoSC1 (* skoMC1 (* skoMC1 (* skoMC1 (/ (- 1.) 12.))))))))))))) (* skoMC1 (* skoMC1 (* skoMC1 (+ 2. (* skoMC1 6.))))))))
-----[end problem]-----

-----[begin problem]-----
% In Mathematica format:
Timing[Resolve[Exists[{skoSC1,skoMC1}, And[0<=skoMC1,skoSC1>0,skoSC1*(skoMC1*skoMC1*skoMC1*-2+skoSC1*(skoMC1*skoMC1*skoMC1+skoSC1*skoMC1*skoMC1*skoMC1))<=skoMC1*skoMC1*skoMC1*2,skoSC1*(skoMC1*skoMC1*skoMC1+skoSC1*skoMC1*skoMC1*skoMC1)>0,skoSC1*(skoMC1*skoMC1*skoMC1*2+skoSC1*(skoMC1*skoMC1*skoMC1*-1+skoSC1*skoMC1*skoMC1*skoMC1*-1))>skoMC1*skoMC1*skoMC1*-2,skoSC1*(skoMC1*skoMC1*skoMC1*-1+skoSC1*skoMC1*skoMC1*skoMC1*-1)<=0,skoSC1*skoMC1*skoMC1*skoMC1*-1<=skoMC1*skoMC1*skoMC1,skoSC1*skoMC1*skoMC1*skoMC1>skoMC1*skoMC1*skoMC1*-1,skoMC1*skoMC1*skoMC1*-2<=0,skoMC1*skoMC1*skoMC1*2>0,skoSC1<=(5/4),2<=skoMC1,0<=skoSC1,skoMC1>0,0<=skoMC1,skoSC1*skoMC1>skoMC1*-1,skoSC1*skoMC1*-1<=skoMC1,skoSC1*skoMC1*skoMC1*skoMC1*2>skoMC1*skoMC1*skoMC1*-2,skoSC1*skoMC1*skoMC1*skoMC1*-2<=skoMC1*skoMC1*skoMC1*2,skoSC1*(skoMC1*skoMC1*skoMC1*skoMC1*12+skoSC1*(skoMC1*skoMC1*skoMC1*(-1+skoMC1*6)+skoSC1*(skoMC1*skoMC1*skoMC1*-1+skoSC1*(skoMC1*skoMC1*skoMC1*(1/12)+skoSC1*skoMC1*skoMC1*skoMC1*(1/12)))))>skoMC1*skoMC1*skoMC1*(-2+skoMC1*-6),skoSC1*(skoMC1*skoMC1*skoMC1*skoMC1*-12+skoSC1*(skoMC1*skoMC1*skoMC1*(1+skoMC1*-6)+skoSC1*(skoMC1*skoMC1*skoMC1+skoSC1*(skoMC1*skoMC1*skoMC1*(-1/12)+skoSC1*skoMC1*skoMC1*skoMC1*(-1/12)))))<=skoMC1*skoMC1*skoMC1*(2+skoMC1*6)]], Reals]]

% In QepcadB format:
(E skoSC1) (E skoMC1) [[0<=skoMC1]/\[[0<skoSC1]/\[[(skoSC1 ((skoMC1 skoMC1 skoMC1 (-2))+(skoSC1 ((skoMC1 skoMC1 skoMC1)+(skoSC1 skoMC1 skoMC1 skoMC1)))))<=(skoMC1 skoMC1 skoMC1 (2))]/\[[0<(skoSC1 ((skoMC1 skoMC1 skoMC1)+(skoSC1 skoMC1 skoMC1 skoMC1)))]/\[[(skoMC1 skoMC1 skoMC1 (-2))<(skoSC1 ((skoMC1 skoMC1 skoMC1 (2))+(skoSC1 ((skoMC1 skoMC1 skoMC1 (-1))+(skoSC1 skoMC1 skoMC1 skoMC1 (-1))))))]/\[[(skoSC1 ((skoMC1 skoMC1 skoMC1 (-1))+(skoSC1 skoMC1 skoMC1 skoMC1 (-1))))<=0]/\[[(skoSC1 skoMC1 skoMC1 skoMC1 (-1))<=(skoMC1 skoMC1 skoMC1)]/\[[(skoMC1 skoMC1 skoMC1 (-1))<(skoSC1 skoMC1 skoMC1 skoMC1)]/\[[(skoMC1 skoMC1 skoMC1 (-2))<=0]/\[[0<(skoMC1 skoMC1 skoMC1 (2))]/\[[skoSC1<=5/4]/\[[2<=skoMC1]/\[[0<=skoSC1]/\[[0<skoMC1]/\[[0<=skoMC1]/\[[(skoMC1 (-1))<(skoSC1 skoMC1)]/\[[(skoSC1 skoMC1 (-1))<=skoMC1]/\[[(skoMC1 skoMC1 skoMC1 (-2))<(skoSC1 skoMC1 skoMC1 skoMC1 (2))]/\[[(skoSC1 skoMC1 skoMC1 skoMC1 (-2))<=(skoMC1 skoMC1 skoMC1 (2))]/\[[(skoMC1 skoMC1 skoMC1 (-2+(skoMC1 (-6))))<(skoSC1 ((skoMC1 skoMC1 skoMC1 skoMC1 (12))+(skoSC1 ((skoMC1 skoMC1 skoMC1 (-1+(skoMC1 (6))))+(skoSC1 ((skoMC1 skoMC1 skoMC1 (-1))+(skoSC1 ((skoMC1 skoMC1 skoMC1 (1/12))+(skoSC1 skoMC1 skoMC1 skoMC1 (1/12))))))))))]/\[(skoSC1 ((skoMC1 skoMC1 skoMC1 skoMC1 (-12))+(skoSC1 ((skoMC1 skoMC1 skoMC1 (1+(skoMC1 (-6))))+(skoSC1 ((skoMC1 skoMC1 skoMC1)+(skoSC1 ((skoMC1 skoMC1 skoMC1 (-1/12))+(skoSC1 skoMC1 skoMC1 skoMC1 (-1/12))))))))))<=(skoMC1 skoMC1 skoMC1 (2+(skoMC1 (6))))]]]]]]]]]]]]]]]]]]]]].

% In SMTLib2 format:
(declare-fun skoSC1 () Real) (declare-fun skoMC1 () Real) (assert (and (<= 0. skoMC1) (and (> skoSC1 0.) (and (<= (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (- 2.)))) (* skoSC1 (+ (* skoMC1 (* skoMC1 skoMC1)) (* skoSC1 (* skoMC1 (* skoMC1 skoMC1))))))) (* skoMC1 (* skoMC1 (* skoMC1 2.)))) (and (> (* skoSC1 (+ (* skoMC1 (* skoMC1 skoMC1)) (* skoSC1 (* skoMC1 (* skoMC1 skoMC1))))) 0.) (and (> (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 2.))) (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (- 1.)))) (* skoSC1 (* skoMC1 (* skoMC1 (* skoMC1 (- 1.))))))))) (* skoMC1 (* skoMC1 (* skoMC1 (- 2.))))) (and (<= (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (- 1.)))) (* skoSC1 (* skoMC1 (* skoMC1 (* skoMC1 (- 1.))))))) 0.) (and (<= (* skoSC1 (* skoMC1 (* skoMC1 (* skoMC1 (- 1.))))) (* skoMC1 (* skoMC1 skoMC1))) (and (> (* skoSC1 (* skoMC1 (* skoMC1 skoMC1))) (* skoMC1 (* skoMC1 (* skoMC1 (- 1.))))) (and (<= (* skoMC1 (* skoMC1 (* skoMC1 (- 2.)))) 0.) (and (> (* skoMC1 (* skoMC1 (* skoMC1 2.))) 0.) (and (<= skoSC1 (/ 5. 4.)) (and (<= 2. skoMC1) (and (<= 0. skoSC1) (and (> skoMC1 0.) (and (<= 0. skoMC1) (and (> (* skoSC1 skoMC1) (* skoMC1 (- 1.))) (and (<= (* skoSC1 (* skoMC1 (- 1.))) skoMC1) (and (> (* skoSC1 (* skoMC1 (* skoMC1 (* skoMC1 2.)))) (* skoMC1 (* skoMC1 (* skoMC1 (- 2.))))) (and (<= (* skoSC1 (* skoMC1 (* skoMC1 (* skoMC1 (- 2.))))) (* skoMC1 (* skoMC1 (* skoMC1 2.)))) (and (> (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (* skoMC1 12.)))) (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (+ (- 1.) (* skoMC1 6.))))) (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (- 1.)))) (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (/ 1. 12.)))) (* skoSC1 (* skoMC1 (* skoMC1 (* skoMC1 (/ 1. 12.))))))))))))) (* skoMC1 (* skoMC1 (* skoMC1 (+ (- 2.) (* skoMC1 (- 6.))))))) (<= (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (* skoMC1 (- 12.))))) (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (+ 1. (* skoMC1 (- 6.)))))) (* skoSC1 (+ (* skoMC1 (* skoMC1 skoMC1)) (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (/ (- 1.) 12.)))) (* skoSC1 (* skoMC1 (* skoMC1 (* skoMC1 (/ (- 1.) 12.))))))))))))) (* skoMC1 (* skoMC1 (* skoMC1 (+ 2. (* skoMC1 6.)))))))))))))))))))))))))))

% In GRF format:
(sequent " MetiTarski formula " (antecedent (<= 0. skoMC1) (> skoSC1 0.) (<= (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (- 2.)))) (* skoSC1 (+ (* skoMC1 (* skoMC1 skoMC1)) (* skoSC1 (* skoMC1 (* skoMC1 skoMC1))))))) (* skoMC1 (* skoMC1 (* skoMC1 2.)))) (> (* skoSC1 (+ (* skoMC1 (* skoMC1 skoMC1)) (* skoSC1 (* skoMC1 (* skoMC1 skoMC1))))) 0.) (> (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 2.))) (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (- 1.)))) (* skoSC1 (* skoMC1 (* skoMC1 (* skoMC1 (- 1.))))))))) (* skoMC1 (* skoMC1 (* skoMC1 (- 2.))))) (<= (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (- 1.)))) (* skoSC1 (* skoMC1 (* skoMC1 (* skoMC1 (- 1.))))))) 0.) (<= (* skoSC1 (* skoMC1 (* skoMC1 (* skoMC1 (- 1.))))) (* skoMC1 (* skoMC1 skoMC1))) (> (* skoSC1 (* skoMC1 (* skoMC1 skoMC1))) (* skoMC1 (* skoMC1 (* skoMC1 (- 1.))))) (<= (* skoMC1 (* skoMC1 (* skoMC1 (- 2.)))) 0.) (> (* skoMC1 (* skoMC1 (* skoMC1 2.))) 0.) (<= skoSC1 (/ 5. 4.)) (<= 2. skoMC1) (<= 0. skoSC1) (> skoMC1 0.) (<= 0. skoMC1) (> (* skoSC1 skoMC1) (* skoMC1 (- 1.))) (<= (* skoSC1 (* skoMC1 (- 1.))) skoMC1) (> (* skoSC1 (* skoMC1 (* skoMC1 (* skoMC1 2.)))) (* skoMC1 (* skoMC1 (* skoMC1 (- 2.))))) (<= (* skoSC1 (* skoMC1 (* skoMC1 (* skoMC1 (- 2.))))) (* skoMC1 (* skoMC1 (* skoMC1 2.)))) (> (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (* skoMC1 12.)))) (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (+ (- 1.) (* skoMC1 6.))))) (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (- 1.)))) (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (/ 1. 12.)))) (* skoSC1 (* skoMC1 (* skoMC1 (* skoMC1 (/ 1. 12.))))))))))))) (* skoMC1 (* skoMC1 (* skoMC1 (+ (- 2.) (* skoMC1 (- 6.)))))))) (succedent (> (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (* skoMC1 (- 12.))))) (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (+ 1. (* skoMC1 (- 6.)))))) (* skoSC1 (+ (* skoMC1 (* skoMC1 skoMC1)) (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (/ (- 1.) 12.)))) (* skoSC1 (* skoMC1 (* skoMC1 (* skoMC1 (/ (- 1.) 12.))))))))))))) (* skoMC1 (* skoMC1 (* skoMC1 (+ 2. (* skoMC1 6.))))))))
-----[end problem]-----

-----[begin problem]-----
% In Mathematica format:
Timing[Resolve[Exists[{skoSC1,skoMC1}, And[0>skoMC1,skoSC1*(skoMC1*(1+skoMC1*-3)+skoSC1*(skoMC1*(2+skoMC1*3)+skoSC1*(skoMC1*((-1/6)+skoMC1)+skoSC1*skoMC1*(-1/4))))>skoMC1*(2+skoMC1*5),skoSC1>0,skoSC1*(skoMC1*skoMC1*skoMC1+skoSC1*skoMC1*skoMC1*skoMC1)>0,skoSC1*(skoMC1*skoMC1*skoMC1*2+skoSC1*(skoMC1*skoMC1*skoMC1*-1+skoSC1*skoMC1*skoMC1*skoMC1*-1))>skoMC1*skoMC1*skoMC1*-2,skoSC1*skoMC1*skoMC1*skoMC1>skoMC1*skoMC1*skoMC1*-1,skoMC1*skoMC1*skoMC1*2>0,skoMC1>0,skoSC1*skoMC1>skoMC1*-1,skoSC1*skoMC1*skoMC1*skoMC1*2>skoMC1*skoMC1*skoMC1*-2,skoSC1*(skoMC1*skoMC1*skoMC1*skoMC1*12+skoSC1*(skoMC1*skoMC1*skoMC1*(-1+skoMC1*6)+skoSC1*(skoMC1*skoMC1*skoMC1*-1+skoSC1*(skoMC1*skoMC1*skoMC1*(1/12)+skoSC1*skoMC1*skoMC1*skoMC1*(1/12)))))>skoMC1*skoMC1*skoMC1*(-2+skoMC1*-6)]], Reals]]

% In QepcadB format:
(E skoSC1) (E skoMC1) [[skoMC1<0]/\[[(skoMC1 (2+(skoMC1 (5))))<(skoSC1 ((skoMC1 (1+(skoMC1 (-3))))+(skoSC1 ((skoMC1 (2+(skoMC1 (3))))+(skoSC1 ((skoMC1 (-1/6+skoMC1))+(skoSC1 skoMC1 (-1/4))))))))]/\[[0<skoSC1]/\[[0<(skoSC1 ((skoMC1 skoMC1 skoMC1)+(skoSC1 skoMC1 skoMC1 skoMC1)))]/\[[(skoMC1 skoMC1 skoMC1 (-2))<(skoSC1 ((skoMC1 skoMC1 skoMC1 (2))+(skoSC1 ((skoMC1 skoMC1 skoMC1 (-1))+(skoSC1 skoMC1 skoMC1 skoMC1 (-1))))))]/\[[(skoMC1 skoMC1 skoMC1 (-1))<(skoSC1 skoMC1 skoMC1 skoMC1)]/\[[0<(skoMC1 skoMC1 skoMC1 (2))]/\[[0<skoMC1]/\[[(skoMC1 (-1))<(skoSC1 skoMC1)]/\[[(skoMC1 skoMC1 skoMC1 (-2))<(skoSC1 skoMC1 skoMC1 skoMC1 (2))]/\[(skoMC1 skoMC1 skoMC1 (-2+(skoMC1 (-6))))<(skoSC1 ((skoMC1 skoMC1 skoMC1 skoMC1 (12))+(skoSC1 ((skoMC1 skoMC1 skoMC1 (-1+(skoMC1 (6))))+(skoSC1 ((skoMC1 skoMC1 skoMC1 (-1))+(skoSC1 ((skoMC1 skoMC1 skoMC1 (1/12))+(skoSC1 skoMC1 skoMC1 skoMC1 (1/12))))))))))]]]]]]]]]]].

% In SMTLib2 format:
(declare-fun skoSC1 () Real) (declare-fun skoMC1 () Real) (assert (and (> 0. skoMC1) (and (> (* skoSC1 (+ (* skoMC1 (+ 1. (* skoMC1 (- 3.)))) (* skoSC1 (+ (* skoMC1 (+ 2. (* skoMC1 3.))) (* skoSC1 (+ (* skoMC1 (+ (/ (- 1.) 6.) skoMC1)) (* skoSC1 (* skoMC1 (/ (- 1.) 4.))))))))) (* skoMC1 (+ 2. (* skoMC1 5.)))) (and (> skoSC1 0.) (and (> (* skoSC1 (+ (* skoMC1 (* skoMC1 skoMC1)) (* skoSC1 (* skoMC1 (* skoMC1 skoMC1))))) 0.) (and (> (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 2.))) (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (- 1.)))) (* skoSC1 (* skoMC1 (* skoMC1 (* skoMC1 (- 1.))))))))) (* skoMC1 (* skoMC1 (* skoMC1 (- 2.))))) (and (> (* skoSC1 (* skoMC1 (* skoMC1 skoMC1))) (* skoMC1 (* skoMC1 (* skoMC1 (- 1.))))) (and (> (* skoMC1 (* skoMC1 (* skoMC1 2.))) 0.) (and (> skoMC1 0.) (and (> (* skoSC1 skoMC1) (* skoMC1 (- 1.))) (and (> (* skoSC1 (* skoMC1 (* skoMC1 (* skoMC1 2.)))) (* skoMC1 (* skoMC1 (* skoMC1 (- 2.))))) (> (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (* skoMC1 12.)))) (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (+ (- 1.) (* skoMC1 6.))))) (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (- 1.)))) (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (/ 1. 12.)))) (* skoSC1 (* skoMC1 (* skoMC1 (* skoMC1 (/ 1. 12.))))))))))))) (* skoMC1 (* skoMC1 (* skoMC1 (+ (- 2.) (* skoMC1 (- 6.))))))))))))))))))

% In GRF format:
(sequent " MetiTarski formula " (antecedent (> 0. skoMC1) (> (* skoSC1 (+ (* skoMC1 (+ 1. (* skoMC1 (- 3.)))) (* skoSC1 (+ (* skoMC1 (+ 2. (* skoMC1 3.))) (* skoSC1 (+ (* skoMC1 (+ (/ (- 1.) 6.) skoMC1)) (* skoSC1 (* skoMC1 (/ (- 1.) 4.))))))))) (* skoMC1 (+ 2. (* skoMC1 5.)))) (> skoSC1 0.) (> (* skoSC1 (+ (* skoMC1 (* skoMC1 skoMC1)) (* skoSC1 (* skoMC1 (* skoMC1 skoMC1))))) 0.) (> (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 2.))) (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (- 1.)))) (* skoSC1 (* skoMC1 (* skoMC1 (* skoMC1 (- 1.))))))))) (* skoMC1 (* skoMC1 (* skoMC1 (- 2.))))) (> (* skoSC1 (* skoMC1 (* skoMC1 skoMC1))) (* skoMC1 (* skoMC1 (* skoMC1 (- 1.))))) (> (* skoMC1 (* skoMC1 (* skoMC1 2.))) 0.) (> skoMC1 0.) (> (* skoSC1 skoMC1) (* skoMC1 (- 1.))) (> (* skoSC1 (* skoMC1 (* skoMC1 (* skoMC1 2.)))) (* skoMC1 (* skoMC1 (* skoMC1 (- 2.)))))) (succedent (<= (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (* skoMC1 12.)))) (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (+ (- 1.) (* skoMC1 6.))))) (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (- 1.)))) (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (/ 1. 12.)))) (* skoSC1 (* skoMC1 (* skoMC1 (* skoMC1 (/ 1. 12.))))))))))))) (* skoMC1 (* skoMC1 (* skoMC1 (+ (- 2.) (* skoMC1 (- 6.)))))))))
-----[end problem]-----

-----[begin problem]-----
% In Mathematica format:
Timing[Resolve[Exists[{skoSC1,skoMC1}, And[skoSC1*(skoMC1*(-1+skoMC1*3)+skoSC1*(skoMC1*(-2+skoMC1*-3)+skoSC1*(skoMC1*((1/6)+skoMC1*-1)+skoSC1*skoMC1*(1/4))))>skoMC1*(-2+skoMC1*-5),skoMC1>0,skoSC1>0,skoSC1*(skoMC1*skoMC1*skoMC1+skoSC1*skoMC1*skoMC1*skoMC1)>0,skoSC1*(skoMC1*skoMC1*skoMC1*2+skoSC1*(skoMC1*skoMC1*skoMC1*-1+skoSC1*skoMC1*skoMC1*skoMC1*-1))>skoMC1*skoMC1*skoMC1*-2,skoSC1*skoMC1*skoMC1*skoMC1>skoMC1*skoMC1*skoMC1*-1,skoMC1*skoMC1*skoMC1*2>0,skoMC1>0,skoSC1*skoMC1>skoMC1*-1,skoSC1*skoMC1*skoMC1*skoMC1*2>skoMC1*skoMC1*skoMC1*-2,skoSC1*(skoMC1*skoMC1*skoMC1*skoMC1*12+skoSC1*(skoMC1*skoMC1*skoMC1*(-1+skoMC1*6)+skoSC1*(skoMC1*skoMC1*skoMC1*-1+skoSC1*(skoMC1*skoMC1*skoMC1*(1/12)+skoSC1*skoMC1*skoMC1*skoMC1*(1/12)))))>skoMC1*skoMC1*skoMC1*(-2+skoMC1*-6)]], Reals]]

% In QepcadB format:
(E skoSC1) (E skoMC1) [[(skoMC1 (-2+(skoMC1 (-5))))<(skoSC1 ((skoMC1 (-1+(skoMC1 (3))))+(skoSC1 ((skoMC1 (-2+(skoMC1 (-3))))+(skoSC1 ((skoMC1 (1/6+(skoMC1 (-1))))+(skoSC1 skoMC1 (1/4))))))))]/\[[0<skoMC1]/\[[0<skoSC1]/\[[0<(skoSC1 ((skoMC1 skoMC1 skoMC1)+(skoSC1 skoMC1 skoMC1 skoMC1)))]/\[[(skoMC1 skoMC1 skoMC1 (-2))<(skoSC1 ((skoMC1 skoMC1 skoMC1 (2))+(skoSC1 ((skoMC1 skoMC1 skoMC1 (-1))+(skoSC1 skoMC1 skoMC1 skoMC1 (-1))))))]/\[[(skoMC1 skoMC1 skoMC1 (-1))<(skoSC1 skoMC1 skoMC1 skoMC1)]/\[[0<(skoMC1 skoMC1 skoMC1 (2))]/\[[0<skoMC1]/\[[(skoMC1 (-1))<(skoSC1 skoMC1)]/\[[(skoMC1 skoMC1 skoMC1 (-2))<(skoSC1 skoMC1 skoMC1 skoMC1 (2))]/\[(skoMC1 skoMC1 skoMC1 (-2+(skoMC1 (-6))))<(skoSC1 ((skoMC1 skoMC1 skoMC1 skoMC1 (12))+(skoSC1 ((skoMC1 skoMC1 skoMC1 (-1+(skoMC1 (6))))+(skoSC1 ((skoMC1 skoMC1 skoMC1 (-1))+(skoSC1 ((skoMC1 skoMC1 skoMC1 (1/12))+(skoSC1 skoMC1 skoMC1 skoMC1 (1/12))))))))))]]]]]]]]]]].

% In SMTLib2 format:
(declare-fun skoSC1 () Real) (declare-fun skoMC1 () Real) (assert (and (> (* skoSC1 (+ (* skoMC1 (+ (- 1.) (* skoMC1 3.))) (* skoSC1 (+ (* skoMC1 (+ (- 2.) (* skoMC1 (- 3.)))) (* skoSC1 (+ (* skoMC1 (+ (/ 1. 6.) (* skoMC1 (- 1.)))) (* skoSC1 (* skoMC1 (/ 1. 4.))))))))) (* skoMC1 (+ (- 2.) (* skoMC1 (- 5.))))) (and (> skoMC1 0.) (and (> skoSC1 0.) (and (> (* skoSC1 (+ (* skoMC1 (* skoMC1 skoMC1)) (* skoSC1 (* skoMC1 (* skoMC1 skoMC1))))) 0.) (and (> (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 2.))) (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (- 1.)))) (* skoSC1 (* skoMC1 (* skoMC1 (* skoMC1 (- 1.))))))))) (* skoMC1 (* skoMC1 (* skoMC1 (- 2.))))) (and (> (* skoSC1 (* skoMC1 (* skoMC1 skoMC1))) (* skoMC1 (* skoMC1 (* skoMC1 (- 1.))))) (and (> (* skoMC1 (* skoMC1 (* skoMC1 2.))) 0.) (and (> skoMC1 0.) (and (> (* skoSC1 skoMC1) (* skoMC1 (- 1.))) (and (> (* skoSC1 (* skoMC1 (* skoMC1 (* skoMC1 2.)))) (* skoMC1 (* skoMC1 (* skoMC1 (- 2.))))) (> (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (* skoMC1 12.)))) (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (+ (- 1.) (* skoMC1 6.))))) (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (- 1.)))) (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (/ 1. 12.)))) (* skoSC1 (* skoMC1 (* skoMC1 (* skoMC1 (/ 1. 12.))))))))))))) (* skoMC1 (* skoMC1 (* skoMC1 (+ (- 2.) (* skoMC1 (- 6.))))))))))))))))))

% In GRF format:
(sequent " MetiTarski formula " (antecedent (> (* skoSC1 (+ (* skoMC1 (+ (- 1.) (* skoMC1 3.))) (* skoSC1 (+ (* skoMC1 (+ (- 2.) (* skoMC1 (- 3.)))) (* skoSC1 (+ (* skoMC1 (+ (/ 1. 6.) (* skoMC1 (- 1.)))) (* skoSC1 (* skoMC1 (/ 1. 4.))))))))) (* skoMC1 (+ (- 2.) (* skoMC1 (- 5.))))) (> skoMC1 0.) (> skoSC1 0.) (> (* skoSC1 (+ (* skoMC1 (* skoMC1 skoMC1)) (* skoSC1 (* skoMC1 (* skoMC1 skoMC1))))) 0.) (> (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 2.))) (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (- 1.)))) (* skoSC1 (* skoMC1 (* skoMC1 (* skoMC1 (- 1.))))))))) (* skoMC1 (* skoMC1 (* skoMC1 (- 2.))))) (> (* skoSC1 (* skoMC1 (* skoMC1 skoMC1))) (* skoMC1 (* skoMC1 (* skoMC1 (- 1.))))) (> (* skoMC1 (* skoMC1 (* skoMC1 2.))) 0.) (> skoMC1 0.) (> (* skoSC1 skoMC1) (* skoMC1 (- 1.))) (> (* skoSC1 (* skoMC1 (* skoMC1 (* skoMC1 2.)))) (* skoMC1 (* skoMC1 (* skoMC1 (- 2.)))))) (succedent (<= (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (* skoMC1 12.)))) (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (+ (- 1.) (* skoMC1 6.))))) (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (- 1.)))) (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (/ 1. 12.)))) (* skoSC1 (* skoMC1 (* skoMC1 (* skoMC1 (/ 1. 12.))))))))))))) (* skoMC1 (* skoMC1 (* skoMC1 (+ (- 2.) (* skoMC1 (- 6.)))))))))
-----[end problem]-----

-----[begin problem]-----
% In Mathematica format:
Timing[Resolve[Exists[{skoSC1,skoMC1}, And[skoSC1*(skoMC1*(-1+skoMC1*3)+skoSC1*(skoMC1*(-2+skoMC1*-3)+skoSC1*(skoMC1*((1/6)+skoMC1*-1)+skoSC1*skoMC1*(1/4))))>skoMC1*(-2+skoMC1*-5),skoMC1>0,skoSC1>0,skoSC1*(skoMC1*skoMC1*skoMC1*-2+skoSC1*(skoMC1*skoMC1*skoMC1+skoSC1*skoMC1*skoMC1*skoMC1))<=skoMC1*skoMC1*skoMC1*2,skoSC1*(skoMC1*skoMC1*skoMC1+skoSC1*skoMC1*skoMC1*skoMC1)>0,skoSC1*(skoMC1*skoMC1*skoMC1*2+skoSC1*(skoMC1*skoMC1*skoMC1*-1+skoSC1*skoMC1*skoMC1*skoMC1*-1))>skoMC1*skoMC1*skoMC1*-2,skoSC1*(skoMC1*skoMC1*skoMC1*-1+skoSC1*skoMC1*skoMC1*skoMC1*-1)<=0,skoSC1*skoMC1*skoMC1*skoMC1*-1<=skoMC1*skoMC1*skoMC1,skoSC1*skoMC1*skoMC1*skoMC1>skoMC1*skoMC1*skoMC1*-1,skoMC1*skoMC1*skoMC1*-2<=0,skoMC1*skoMC1*skoMC1*2>0,skoSC1<=(5/4),2<=skoMC1,0<=skoSC1,skoMC1>0,0<=skoMC1,skoSC1*skoMC1>skoMC1*-1,skoSC1*skoMC1*-1<=skoMC1,skoSC1*skoMC1*skoMC1*skoMC1*2>skoMC1*skoMC1*skoMC1*-2,skoSC1*skoMC1*skoMC1*skoMC1*-2<=skoMC1*skoMC1*skoMC1*2,skoSC1*(skoMC1*skoMC1*skoMC1*skoMC1*12+skoSC1*(skoMC1*skoMC1*skoMC1*(-1+skoMC1*6)+skoSC1*(skoMC1*skoMC1*skoMC1*-1+skoSC1*(skoMC1*skoMC1*skoMC1*(1/12)+skoSC1*skoMC1*skoMC1*skoMC1*(1/12)))))>skoMC1*skoMC1*skoMC1*(-2+skoMC1*-6),skoSC1*(skoMC1*skoMC1*skoMC1*skoMC1*-12+skoSC1*(skoMC1*skoMC1*skoMC1*(1+skoMC1*-6)+skoSC1*(skoMC1*skoMC1*skoMC1+skoSC1*(skoMC1*skoMC1*skoMC1*(-1/12)+skoSC1*skoMC1*skoMC1*skoMC1*(-1/12)))))<=skoMC1*skoMC1*skoMC1*(2+skoMC1*6)]], Reals]]

% In QepcadB format:
(E skoSC1) (E skoMC1) [[(skoMC1 (-2+(skoMC1 (-5))))<(skoSC1 ((skoMC1 (-1+(skoMC1 (3))))+(skoSC1 ((skoMC1 (-2+(skoMC1 (-3))))+(skoSC1 ((skoMC1 (1/6+(skoMC1 (-1))))+(skoSC1 skoMC1 (1/4))))))))]/\[[0<skoMC1]/\[[0<skoSC1]/\[[(skoSC1 ((skoMC1 skoMC1 skoMC1 (-2))+(skoSC1 ((skoMC1 skoMC1 skoMC1)+(skoSC1 skoMC1 skoMC1 skoMC1)))))<=(skoMC1 skoMC1 skoMC1 (2))]/\[[0<(skoSC1 ((skoMC1 skoMC1 skoMC1)+(skoSC1 skoMC1 skoMC1 skoMC1)))]/\[[(skoMC1 skoMC1 skoMC1 (-2))<(skoSC1 ((skoMC1 skoMC1 skoMC1 (2))+(skoSC1 ((skoMC1 skoMC1 skoMC1 (-1))+(skoSC1 skoMC1 skoMC1 skoMC1 (-1))))))]/\[[(skoSC1 ((skoMC1 skoMC1 skoMC1 (-1))+(skoSC1 skoMC1 skoMC1 skoMC1 (-1))))<=0]/\[[(skoSC1 skoMC1 skoMC1 skoMC1 (-1))<=(skoMC1 skoMC1 skoMC1)]/\[[(skoMC1 skoMC1 skoMC1 (-1))<(skoSC1 skoMC1 skoMC1 skoMC1)]/\[[(skoMC1 skoMC1 skoMC1 (-2))<=0]/\[[0<(skoMC1 skoMC1 skoMC1 (2))]/\[[skoSC1<=5/4]/\[[2<=skoMC1]/\[[0<=skoSC1]/\[[0<skoMC1]/\[[0<=skoMC1]/\[[(skoMC1 (-1))<(skoSC1 skoMC1)]/\[[(skoSC1 skoMC1 (-1))<=skoMC1]/\[[(skoMC1 skoMC1 skoMC1 (-2))<(skoSC1 skoMC1 skoMC1 skoMC1 (2))]/\[[(skoSC1 skoMC1 skoMC1 skoMC1 (-2))<=(skoMC1 skoMC1 skoMC1 (2))]/\[[(skoMC1 skoMC1 skoMC1 (-2+(skoMC1 (-6))))<(skoSC1 ((skoMC1 skoMC1 skoMC1 skoMC1 (12))+(skoSC1 ((skoMC1 skoMC1 skoMC1 (-1+(skoMC1 (6))))+(skoSC1 ((skoMC1 skoMC1 skoMC1 (-1))+(skoSC1 ((skoMC1 skoMC1 skoMC1 (1/12))+(skoSC1 skoMC1 skoMC1 skoMC1 (1/12))))))))))]/\[(skoSC1 ((skoMC1 skoMC1 skoMC1 skoMC1 (-12))+(skoSC1 ((skoMC1 skoMC1 skoMC1 (1+(skoMC1 (-6))))+(skoSC1 ((skoMC1 skoMC1 skoMC1)+(skoSC1 ((skoMC1 skoMC1 skoMC1 (-1/12))+(skoSC1 skoMC1 skoMC1 skoMC1 (-1/12))))))))))<=(skoMC1 skoMC1 skoMC1 (2+(skoMC1 (6))))]]]]]]]]]]]]]]]]]]]]]].

% In SMTLib2 format:
(declare-fun skoSC1 () Real) (declare-fun skoMC1 () Real) (assert (and (> (* skoSC1 (+ (* skoMC1 (+ (- 1.) (* skoMC1 3.))) (* skoSC1 (+ (* skoMC1 (+ (- 2.) (* skoMC1 (- 3.)))) (* skoSC1 (+ (* skoMC1 (+ (/ 1. 6.) (* skoMC1 (- 1.)))) (* skoSC1 (* skoMC1 (/ 1. 4.))))))))) (* skoMC1 (+ (- 2.) (* skoMC1 (- 5.))))) (and (> skoMC1 0.) (and (> skoSC1 0.) (and (<= (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (- 2.)))) (* skoSC1 (+ (* skoMC1 (* skoMC1 skoMC1)) (* skoSC1 (* skoMC1 (* skoMC1 skoMC1))))))) (* skoMC1 (* skoMC1 (* skoMC1 2.)))) (and (> (* skoSC1 (+ (* skoMC1 (* skoMC1 skoMC1)) (* skoSC1 (* skoMC1 (* skoMC1 skoMC1))))) 0.) (and (> (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 2.))) (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (- 1.)))) (* skoSC1 (* skoMC1 (* skoMC1 (* skoMC1 (- 1.))))))))) (* skoMC1 (* skoMC1 (* skoMC1 (- 2.))))) (and (<= (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (- 1.)))) (* skoSC1 (* skoMC1 (* skoMC1 (* skoMC1 (- 1.))))))) 0.) (and (<= (* skoSC1 (* skoMC1 (* skoMC1 (* skoMC1 (- 1.))))) (* skoMC1 (* skoMC1 skoMC1))) (and (> (* skoSC1 (* skoMC1 (* skoMC1 skoMC1))) (* skoMC1 (* skoMC1 (* skoMC1 (- 1.))))) (and (<= (* skoMC1 (* skoMC1 (* skoMC1 (- 2.)))) 0.) (and (> (* skoMC1 (* skoMC1 (* skoMC1 2.))) 0.) (and (<= skoSC1 (/ 5. 4.)) (and (<= 2. skoMC1) (and (<= 0. skoSC1) (and (> skoMC1 0.) (and (<= 0. skoMC1) (and (> (* skoSC1 skoMC1) (* skoMC1 (- 1.))) (and (<= (* skoSC1 (* skoMC1 (- 1.))) skoMC1) (and (> (* skoSC1 (* skoMC1 (* skoMC1 (* skoMC1 2.)))) (* skoMC1 (* skoMC1 (* skoMC1 (- 2.))))) (and (<= (* skoSC1 (* skoMC1 (* skoMC1 (* skoMC1 (- 2.))))) (* skoMC1 (* skoMC1 (* skoMC1 2.)))) (and (> (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (* skoMC1 12.)))) (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (+ (- 1.) (* skoMC1 6.))))) (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (- 1.)))) (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (/ 1. 12.)))) (* skoSC1 (* skoMC1 (* skoMC1 (* skoMC1 (/ 1. 12.))))))))))))) (* skoMC1 (* skoMC1 (* skoMC1 (+ (- 2.) (* skoMC1 (- 6.))))))) (<= (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (* skoMC1 (- 12.))))) (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (+ 1. (* skoMC1 (- 6.)))))) (* skoSC1 (+ (* skoMC1 (* skoMC1 skoMC1)) (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (/ (- 1.) 12.)))) (* skoSC1 (* skoMC1 (* skoMC1 (* skoMC1 (/ (- 1.) 12.))))))))))))) (* skoMC1 (* skoMC1 (* skoMC1 (+ 2. (* skoMC1 6.))))))))))))))))))))))))))))

% In GRF format:
(sequent " MetiTarski formula " (antecedent (> (* skoSC1 (+ (* skoMC1 (+ (- 1.) (* skoMC1 3.))) (* skoSC1 (+ (* skoMC1 (+ (- 2.) (* skoMC1 (- 3.)))) (* skoSC1 (+ (* skoMC1 (+ (/ 1. 6.) (* skoMC1 (- 1.)))) (* skoSC1 (* skoMC1 (/ 1. 4.))))))))) (* skoMC1 (+ (- 2.) (* skoMC1 (- 5.))))) (> skoMC1 0.) (> skoSC1 0.) (<= (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (- 2.)))) (* skoSC1 (+ (* skoMC1 (* skoMC1 skoMC1)) (* skoSC1 (* skoMC1 (* skoMC1 skoMC1))))))) (* skoMC1 (* skoMC1 (* skoMC1 2.)))) (> (* skoSC1 (+ (* skoMC1 (* skoMC1 skoMC1)) (* skoSC1 (* skoMC1 (* skoMC1 skoMC1))))) 0.) (> (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 2.))) (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (- 1.)))) (* skoSC1 (* skoMC1 (* skoMC1 (* skoMC1 (- 1.))))))))) (* skoMC1 (* skoMC1 (* skoMC1 (- 2.))))) (<= (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (- 1.)))) (* skoSC1 (* skoMC1 (* skoMC1 (* skoMC1 (- 1.))))))) 0.) (<= (* skoSC1 (* skoMC1 (* skoMC1 (* skoMC1 (- 1.))))) (* skoMC1 (* skoMC1 skoMC1))) (> (* skoSC1 (* skoMC1 (* skoMC1 skoMC1))) (* skoMC1 (* skoMC1 (* skoMC1 (- 1.))))) (<= (* skoMC1 (* skoMC1 (* skoMC1 (- 2.)))) 0.) (> (* skoMC1 (* skoMC1 (* skoMC1 2.))) 0.) (<= skoSC1 (/ 5. 4.)) (<= 2. skoMC1) (<= 0. skoSC1) (> skoMC1 0.) (<= 0. skoMC1) (> (* skoSC1 skoMC1) (* skoMC1 (- 1.))) (<= (* skoSC1 (* skoMC1 (- 1.))) skoMC1) (> (* skoSC1 (* skoMC1 (* skoMC1 (* skoMC1 2.)))) (* skoMC1 (* skoMC1 (* skoMC1 (- 2.))))) (<= (* skoSC1 (* skoMC1 (* skoMC1 (* skoMC1 (- 2.))))) (* skoMC1 (* skoMC1 (* skoMC1 2.)))) (> (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (* skoMC1 12.)))) (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (+ (- 1.) (* skoMC1 6.))))) (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (- 1.)))) (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (/ 1. 12.)))) (* skoSC1 (* skoMC1 (* skoMC1 (* skoMC1 (/ 1. 12.))))))))))))) (* skoMC1 (* skoMC1 (* skoMC1 (+ (- 2.) (* skoMC1 (- 6.)))))))) (succedent (> (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (* skoMC1 (- 12.))))) (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (+ 1. (* skoMC1 (- 6.)))))) (* skoSC1 (+ (* skoMC1 (* skoMC1 skoMC1)) (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (/ (- 1.) 12.)))) (* skoSC1 (* skoMC1 (* skoMC1 (* skoMC1 (/ (- 1.) 12.))))))))))))) (* skoMC1 (* skoMC1 (* skoMC1 (+ 2. (* skoMC1 6.))))))))
-----[end problem]-----

-----[begin problem]-----
% In Mathematica format:
Timing[Resolve[Exists[{skoSC1,skoMC1}, And[skoSC1*(skoMC1*(-1+skoMC1*3)+skoSC1*(skoMC1*(-2+skoMC1*-3)+skoSC1*(skoMC1*((1/6)+skoMC1*-1)+skoSC1*skoMC1*(1/4))))<=skoMC1*(-2+skoMC1*-5),skoMC1<=0,skoSC1>0,skoSC1*(skoMC1*skoMC1*skoMC1*-2+skoSC1*(skoMC1*skoMC1*skoMC1+skoSC1*skoMC1*skoMC1*skoMC1))<=skoMC1*skoMC1*skoMC1*2,skoSC1*(skoMC1*skoMC1*skoMC1+skoSC1*skoMC1*skoMC1*skoMC1)>0,skoSC1*(skoMC1*skoMC1*skoMC1*2+skoSC1*(skoMC1*skoMC1*skoMC1*-1+skoSC1*skoMC1*skoMC1*skoMC1*-1))>skoMC1*skoMC1*skoMC1*-2,skoSC1*(skoMC1*skoMC1*skoMC1*-1+skoSC1*skoMC1*skoMC1*skoMC1*-1)<=0,skoSC1*skoMC1*skoMC1*skoMC1*-1<=skoMC1*skoMC1*skoMC1,skoSC1*skoMC1*skoMC1*skoMC1>skoMC1*skoMC1*skoMC1*-1,skoMC1*skoMC1*skoMC1*-2<=0,skoMC1*skoMC1*skoMC1*2>0,skoSC1<=(5/4),2<=skoMC1,0<=skoSC1,skoMC1>0,0<=skoMC1,skoSC1*skoMC1>skoMC1*-1,skoSC1*skoMC1*-1<=skoMC1,skoSC1*skoMC1*skoMC1*skoMC1*2>skoMC1*skoMC1*skoMC1*-2,skoSC1*skoMC1*skoMC1*skoMC1*-2<=skoMC1*skoMC1*skoMC1*2,skoSC1*(skoMC1*skoMC1*skoMC1*skoMC1*12+skoSC1*(skoMC1*skoMC1*skoMC1*(-1+skoMC1*6)+skoSC1*(skoMC1*skoMC1*skoMC1*-1+skoSC1*(skoMC1*skoMC1*skoMC1*(1/12)+skoSC1*skoMC1*skoMC1*skoMC1*(1/12)))))>skoMC1*skoMC1*skoMC1*(-2+skoMC1*-6),skoSC1*(skoMC1*skoMC1*skoMC1*skoMC1*-12+skoSC1*(skoMC1*skoMC1*skoMC1*(1+skoMC1*-6)+skoSC1*(skoMC1*skoMC1*skoMC1+skoSC1*(skoMC1*skoMC1*skoMC1*(-1/12)+skoSC1*skoMC1*skoMC1*skoMC1*(-1/12)))))<=skoMC1*skoMC1*skoMC1*(2+skoMC1*6)]], Reals]]

% In QepcadB format:
(E skoSC1) (E skoMC1) [[(skoSC1 ((skoMC1 (-1+(skoMC1 (3))))+(skoSC1 ((skoMC1 (-2+(skoMC1 (-3))))+(skoSC1 ((skoMC1 (1/6+(skoMC1 (-1))))+(skoSC1 skoMC1 (1/4))))))))<=(skoMC1 (-2+(skoMC1 (-5))))]/\[[skoMC1<=0]/\[[0<skoSC1]/\[[(skoSC1 ((skoMC1 skoMC1 skoMC1 (-2))+(skoSC1 ((skoMC1 skoMC1 skoMC1)+(skoSC1 skoMC1 skoMC1 skoMC1)))))<=(skoMC1 skoMC1 skoMC1 (2))]/\[[0<(skoSC1 ((skoMC1 skoMC1 skoMC1)+(skoSC1 skoMC1 skoMC1 skoMC1)))]/\[[(skoMC1 skoMC1 skoMC1 (-2))<(skoSC1 ((skoMC1 skoMC1 skoMC1 (2))+(skoSC1 ((skoMC1 skoMC1 skoMC1 (-1))+(skoSC1 skoMC1 skoMC1 skoMC1 (-1))))))]/\[[(skoSC1 ((skoMC1 skoMC1 skoMC1 (-1))+(skoSC1 skoMC1 skoMC1 skoMC1 (-1))))<=0]/\[[(skoSC1 skoMC1 skoMC1 skoMC1 (-1))<=(skoMC1 skoMC1 skoMC1)]/\[[(skoMC1 skoMC1 skoMC1 (-1))<(skoSC1 skoMC1 skoMC1 skoMC1)]/\[[(skoMC1 skoMC1 skoMC1 (-2))<=0]/\[[0<(skoMC1 skoMC1 skoMC1 (2))]/\[[skoSC1<=5/4]/\[[2<=skoMC1]/\[[0<=skoSC1]/\[[0<skoMC1]/\[[0<=skoMC1]/\[[(skoMC1 (-1))<(skoSC1 skoMC1)]/\[[(skoSC1 skoMC1 (-1))<=skoMC1]/\[[(skoMC1 skoMC1 skoMC1 (-2))<(skoSC1 skoMC1 skoMC1 skoMC1 (2))]/\[[(skoSC1 skoMC1 skoMC1 skoMC1 (-2))<=(skoMC1 skoMC1 skoMC1 (2))]/\[[(skoMC1 skoMC1 skoMC1 (-2+(skoMC1 (-6))))<(skoSC1 ((skoMC1 skoMC1 skoMC1 skoMC1 (12))+(skoSC1 ((skoMC1 skoMC1 skoMC1 (-1+(skoMC1 (6))))+(skoSC1 ((skoMC1 skoMC1 skoMC1 (-1))+(skoSC1 ((skoMC1 skoMC1 skoMC1 (1/12))+(skoSC1 skoMC1 skoMC1 skoMC1 (1/12))))))))))]/\[(skoSC1 ((skoMC1 skoMC1 skoMC1 skoMC1 (-12))+(skoSC1 ((skoMC1 skoMC1 skoMC1 (1+(skoMC1 (-6))))+(skoSC1 ((skoMC1 skoMC1 skoMC1)+(skoSC1 ((skoMC1 skoMC1 skoMC1 (-1/12))+(skoSC1 skoMC1 skoMC1 skoMC1 (-1/12))))))))))<=(skoMC1 skoMC1 skoMC1 (2+(skoMC1 (6))))]]]]]]]]]]]]]]]]]]]]]].

% In SMTLib2 format:
(declare-fun skoSC1 () Real) (declare-fun skoMC1 () Real) (assert (and (<= (* skoSC1 (+ (* skoMC1 (+ (- 1.) (* skoMC1 3.))) (* skoSC1 (+ (* skoMC1 (+ (- 2.) (* skoMC1 (- 3.)))) (* skoSC1 (+ (* skoMC1 (+ (/ 1. 6.) (* skoMC1 (- 1.)))) (* skoSC1 (* skoMC1 (/ 1. 4.))))))))) (* skoMC1 (+ (- 2.) (* skoMC1 (- 5.))))) (and (<= skoMC1 0.) (and (> skoSC1 0.) (and (<= (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (- 2.)))) (* skoSC1 (+ (* skoMC1 (* skoMC1 skoMC1)) (* skoSC1 (* skoMC1 (* skoMC1 skoMC1))))))) (* skoMC1 (* skoMC1 (* skoMC1 2.)))) (and (> (* skoSC1 (+ (* skoMC1 (* skoMC1 skoMC1)) (* skoSC1 (* skoMC1 (* skoMC1 skoMC1))))) 0.) (and (> (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 2.))) (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (- 1.)))) (* skoSC1 (* skoMC1 (* skoMC1 (* skoMC1 (- 1.))))))))) (* skoMC1 (* skoMC1 (* skoMC1 (- 2.))))) (and (<= (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (- 1.)))) (* skoSC1 (* skoMC1 (* skoMC1 (* skoMC1 (- 1.))))))) 0.) (and (<= (* skoSC1 (* skoMC1 (* skoMC1 (* skoMC1 (- 1.))))) (* skoMC1 (* skoMC1 skoMC1))) (and (> (* skoSC1 (* skoMC1 (* skoMC1 skoMC1))) (* skoMC1 (* skoMC1 (* skoMC1 (- 1.))))) (and (<= (* skoMC1 (* skoMC1 (* skoMC1 (- 2.)))) 0.) (and (> (* skoMC1 (* skoMC1 (* skoMC1 2.))) 0.) (and (<= skoSC1 (/ 5. 4.)) (and (<= 2. skoMC1) (and (<= 0. skoSC1) (and (> skoMC1 0.) (and (<= 0. skoMC1) (and (> (* skoSC1 skoMC1) (* skoMC1 (- 1.))) (and (<= (* skoSC1 (* skoMC1 (- 1.))) skoMC1) (and (> (* skoSC1 (* skoMC1 (* skoMC1 (* skoMC1 2.)))) (* skoMC1 (* skoMC1 (* skoMC1 (- 2.))))) (and (<= (* skoSC1 (* skoMC1 (* skoMC1 (* skoMC1 (- 2.))))) (* skoMC1 (* skoMC1 (* skoMC1 2.)))) (and (> (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (* skoMC1 12.)))) (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (+ (- 1.) (* skoMC1 6.))))) (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (- 1.)))) (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (/ 1. 12.)))) (* skoSC1 (* skoMC1 (* skoMC1 (* skoMC1 (/ 1. 12.))))))))))))) (* skoMC1 (* skoMC1 (* skoMC1 (+ (- 2.) (* skoMC1 (- 6.))))))) (<= (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (* skoMC1 (- 12.))))) (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (+ 1. (* skoMC1 (- 6.)))))) (* skoSC1 (+ (* skoMC1 (* skoMC1 skoMC1)) (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (/ (- 1.) 12.)))) (* skoSC1 (* skoMC1 (* skoMC1 (* skoMC1 (/ (- 1.) 12.))))))))))))) (* skoMC1 (* skoMC1 (* skoMC1 (+ 2. (* skoMC1 6.))))))))))))))))))))))))))))

% In GRF format:
(sequent " MetiTarski formula " (antecedent (<= (* skoSC1 (+ (* skoMC1 (+ (- 1.) (* skoMC1 3.))) (* skoSC1 (+ (* skoMC1 (+ (- 2.) (* skoMC1 (- 3.)))) (* skoSC1 (+ (* skoMC1 (+ (/ 1. 6.) (* skoMC1 (- 1.)))) (* skoSC1 (* skoMC1 (/ 1. 4.))))))))) (* skoMC1 (+ (- 2.) (* skoMC1 (- 5.))))) (<= skoMC1 0.) (> skoSC1 0.) (<= (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (- 2.)))) (* skoSC1 (+ (* skoMC1 (* skoMC1 skoMC1)) (* skoSC1 (* skoMC1 (* skoMC1 skoMC1))))))) (* skoMC1 (* skoMC1 (* skoMC1 2.)))) (> (* skoSC1 (+ (* skoMC1 (* skoMC1 skoMC1)) (* skoSC1 (* skoMC1 (* skoMC1 skoMC1))))) 0.) (> (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 2.))) (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (- 1.)))) (* skoSC1 (* skoMC1 (* skoMC1 (* skoMC1 (- 1.))))))))) (* skoMC1 (* skoMC1 (* skoMC1 (- 2.))))) (<= (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (- 1.)))) (* skoSC1 (* skoMC1 (* skoMC1 (* skoMC1 (- 1.))))))) 0.) (<= (* skoSC1 (* skoMC1 (* skoMC1 (* skoMC1 (- 1.))))) (* skoMC1 (* skoMC1 skoMC1))) (> (* skoSC1 (* skoMC1 (* skoMC1 skoMC1))) (* skoMC1 (* skoMC1 (* skoMC1 (- 1.))))) (<= (* skoMC1 (* skoMC1 (* skoMC1 (- 2.)))) 0.) (> (* skoMC1 (* skoMC1 (* skoMC1 2.))) 0.) (<= skoSC1 (/ 5. 4.)) (<= 2. skoMC1) (<= 0. skoSC1) (> skoMC1 0.) (<= 0. skoMC1) (> (* skoSC1 skoMC1) (* skoMC1 (- 1.))) (<= (* skoSC1 (* skoMC1 (- 1.))) skoMC1) (> (* skoSC1 (* skoMC1 (* skoMC1 (* skoMC1 2.)))) (* skoMC1 (* skoMC1 (* skoMC1 (- 2.))))) (<= (* skoSC1 (* skoMC1 (* skoMC1 (* skoMC1 (- 2.))))) (* skoMC1 (* skoMC1 (* skoMC1 2.)))) (> (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (* skoMC1 12.)))) (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (+ (- 1.) (* skoMC1 6.))))) (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (- 1.)))) (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (/ 1. 12.)))) (* skoSC1 (* skoMC1 (* skoMC1 (* skoMC1 (/ 1. 12.))))))))))))) (* skoMC1 (* skoMC1 (* skoMC1 (+ (- 2.) (* skoMC1 (- 6.)))))))) (succedent (> (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (* skoMC1 (- 12.))))) (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (+ 1. (* skoMC1 (- 6.)))))) (* skoSC1 (+ (* skoMC1 (* skoMC1 skoMC1)) (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (/ (- 1.) 12.)))) (* skoSC1 (* skoMC1 (* skoMC1 (* skoMC1 (/ (- 1.) 12.))))))))))))) (* skoMC1 (* skoMC1 (* skoMC1 (+ 2. (* skoMC1 6.))))))))
-----[end problem]-----

-----[begin problem]-----
% In Mathematica format:
Timing[Resolve[Exists[{skoSC1,skoMC1}, And[0<=skoMC1,skoSC1>0,skoSC1*(skoMC1*skoMC1*skoMC1*-2+skoSC1*(skoMC1*skoMC1*skoMC1+skoSC1*skoMC1*skoMC1*skoMC1))<=skoMC1*skoMC1*skoMC1*2,skoSC1*(skoMC1*skoMC1*skoMC1+skoSC1*skoMC1*skoMC1*skoMC1)>0,skoSC1*(skoMC1*skoMC1*skoMC1*2+skoSC1*(skoMC1*skoMC1*skoMC1*-1+skoSC1*skoMC1*skoMC1*skoMC1*-1))>skoMC1*skoMC1*skoMC1*-2,skoSC1*(skoMC1*skoMC1*skoMC1*-1+skoSC1*skoMC1*skoMC1*skoMC1*-1)<=0,skoSC1*skoMC1*skoMC1*skoMC1*-1<=skoMC1*skoMC1*skoMC1,skoSC1*skoMC1*skoMC1*skoMC1>skoMC1*skoMC1*skoMC1*-1,skoMC1*skoMC1*skoMC1*-2<=0,skoMC1*skoMC1*skoMC1*2>0,skoSC1<=(5/4),2<=skoMC1,0<=skoSC1,skoMC1>0,0<=skoMC1,skoSC1*skoMC1>skoMC1*-1,skoSC1*skoMC1*-1<=skoMC1,skoSC1*skoMC1*skoMC1*skoMC1*2>skoMC1*skoMC1*skoMC1*-2,skoSC1*skoMC1*skoMC1*skoMC1*-2<=skoMC1*skoMC1*skoMC1*2,skoSC1*(skoMC1*skoMC1*skoMC1*skoMC1*12+skoSC1*(skoMC1*skoMC1*skoMC1*(-1+skoMC1*6)+skoSC1*(skoMC1*skoMC1*skoMC1*-1+skoSC1*(skoMC1*skoMC1*skoMC1*(1/12)+skoSC1*skoMC1*skoMC1*skoMC1*(1/12)))))>skoMC1*skoMC1*skoMC1*(-2+skoMC1*-6),skoSC1*(skoMC1*skoMC1*skoMC1*skoMC1*-12+skoSC1*(skoMC1*skoMC1*skoMC1*(1+skoMC1*-6)+skoSC1*(skoMC1*skoMC1*skoMC1+skoSC1*(skoMC1*skoMC1*skoMC1*(-1/12)+skoSC1*skoMC1*skoMC1*skoMC1*(-1/12)))))<=skoMC1*skoMC1*skoMC1*(2+skoMC1*6)]], Reals]]

% In QepcadB format:
(E skoSC1) (E skoMC1) [[0<=skoMC1]/\[[0<skoSC1]/\[[(skoSC1 ((skoMC1 skoMC1 skoMC1 (-2))+(skoSC1 ((skoMC1 skoMC1 skoMC1)+(skoSC1 skoMC1 skoMC1 skoMC1)))))<=(skoMC1 skoMC1 skoMC1 (2))]/\[[0<(skoSC1 ((skoMC1 skoMC1 skoMC1)+(skoSC1 skoMC1 skoMC1 skoMC1)))]/\[[(skoMC1 skoMC1 skoMC1 (-2))<(skoSC1 ((skoMC1 skoMC1 skoMC1 (2))+(skoSC1 ((skoMC1 skoMC1 skoMC1 (-1))+(skoSC1 skoMC1 skoMC1 skoMC1 (-1))))))]/\[[(skoSC1 ((skoMC1 skoMC1 skoMC1 (-1))+(skoSC1 skoMC1 skoMC1 skoMC1 (-1))))<=0]/\[[(skoSC1 skoMC1 skoMC1 skoMC1 (-1))<=(skoMC1 skoMC1 skoMC1)]/\[[(skoMC1 skoMC1 skoMC1 (-1))<(skoSC1 skoMC1 skoMC1 skoMC1)]/\[[(skoMC1 skoMC1 skoMC1 (-2))<=0]/\[[0<(skoMC1 skoMC1 skoMC1 (2))]/\[[skoSC1<=5/4]/\[[2<=skoMC1]/\[[0<=skoSC1]/\[[0<skoMC1]/\[[0<=skoMC1]/\[[(skoMC1 (-1))<(skoSC1 skoMC1)]/\[[(skoSC1 skoMC1 (-1))<=skoMC1]/\[[(skoMC1 skoMC1 skoMC1 (-2))<(skoSC1 skoMC1 skoMC1 skoMC1 (2))]/\[[(skoSC1 skoMC1 skoMC1 skoMC1 (-2))<=(skoMC1 skoMC1 skoMC1 (2))]/\[[(skoMC1 skoMC1 skoMC1 (-2+(skoMC1 (-6))))<(skoSC1 ((skoMC1 skoMC1 skoMC1 skoMC1 (12))+(skoSC1 ((skoMC1 skoMC1 skoMC1 (-1+(skoMC1 (6))))+(skoSC1 ((skoMC1 skoMC1 skoMC1 (-1))+(skoSC1 ((skoMC1 skoMC1 skoMC1 (1/12))+(skoSC1 skoMC1 skoMC1 skoMC1 (1/12))))))))))]/\[(skoSC1 ((skoMC1 skoMC1 skoMC1 skoMC1 (-12))+(skoSC1 ((skoMC1 skoMC1 skoMC1 (1+(skoMC1 (-6))))+(skoSC1 ((skoMC1 skoMC1 skoMC1)+(skoSC1 ((skoMC1 skoMC1 skoMC1 (-1/12))+(skoSC1 skoMC1 skoMC1 skoMC1 (-1/12))))))))))<=(skoMC1 skoMC1 skoMC1 (2+(skoMC1 (6))))]]]]]]]]]]]]]]]]]]]]].

% In SMTLib2 format:
(declare-fun skoSC1 () Real) (declare-fun skoMC1 () Real) (assert (and (<= 0. skoMC1) (and (> skoSC1 0.) (and (<= (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (- 2.)))) (* skoSC1 (+ (* skoMC1 (* skoMC1 skoMC1)) (* skoSC1 (* skoMC1 (* skoMC1 skoMC1))))))) (* skoMC1 (* skoMC1 (* skoMC1 2.)))) (and (> (* skoSC1 (+ (* skoMC1 (* skoMC1 skoMC1)) (* skoSC1 (* skoMC1 (* skoMC1 skoMC1))))) 0.) (and (> (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 2.))) (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (- 1.)))) (* skoSC1 (* skoMC1 (* skoMC1 (* skoMC1 (- 1.))))))))) (* skoMC1 (* skoMC1 (* skoMC1 (- 2.))))) (and (<= (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (- 1.)))) (* skoSC1 (* skoMC1 (* skoMC1 (* skoMC1 (- 1.))))))) 0.) (and (<= (* skoSC1 (* skoMC1 (* skoMC1 (* skoMC1 (- 1.))))) (* skoMC1 (* skoMC1 skoMC1))) (and (> (* skoSC1 (* skoMC1 (* skoMC1 skoMC1))) (* skoMC1 (* skoMC1 (* skoMC1 (- 1.))))) (and (<= (* skoMC1 (* skoMC1 (* skoMC1 (- 2.)))) 0.) (and (> (* skoMC1 (* skoMC1 (* skoMC1 2.))) 0.) (and (<= skoSC1 (/ 5. 4.)) (and (<= 2. skoMC1) (and (<= 0. skoSC1) (and (> skoMC1 0.) (and (<= 0. skoMC1) (and (> (* skoSC1 skoMC1) (* skoMC1 (- 1.))) (and (<= (* skoSC1 (* skoMC1 (- 1.))) skoMC1) (and (> (* skoSC1 (* skoMC1 (* skoMC1 (* skoMC1 2.)))) (* skoMC1 (* skoMC1 (* skoMC1 (- 2.))))) (and (<= (* skoSC1 (* skoMC1 (* skoMC1 (* skoMC1 (- 2.))))) (* skoMC1 (* skoMC1 (* skoMC1 2.)))) (and (> (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (* skoMC1 12.)))) (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (+ (- 1.) (* skoMC1 6.))))) (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (- 1.)))) (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (/ 1. 12.)))) (* skoSC1 (* skoMC1 (* skoMC1 (* skoMC1 (/ 1. 12.))))))))))))) (* skoMC1 (* skoMC1 (* skoMC1 (+ (- 2.) (* skoMC1 (- 6.))))))) (<= (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (* skoMC1 (- 12.))))) (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (+ 1. (* skoMC1 (- 6.)))))) (* skoSC1 (+ (* skoMC1 (* skoMC1 skoMC1)) (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (/ (- 1.) 12.)))) (* skoSC1 (* skoMC1 (* skoMC1 (* skoMC1 (/ (- 1.) 12.))))))))))))) (* skoMC1 (* skoMC1 (* skoMC1 (+ 2. (* skoMC1 6.)))))))))))))))))))))))))))

% In GRF format:
(sequent " MetiTarski formula " (antecedent (<= 0. skoMC1) (> skoSC1 0.) (<= (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (- 2.)))) (* skoSC1 (+ (* skoMC1 (* skoMC1 skoMC1)) (* skoSC1 (* skoMC1 (* skoMC1 skoMC1))))))) (* skoMC1 (* skoMC1 (* skoMC1 2.)))) (> (* skoSC1 (+ (* skoMC1 (* skoMC1 skoMC1)) (* skoSC1 (* skoMC1 (* skoMC1 skoMC1))))) 0.) (> (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 2.))) (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (- 1.)))) (* skoSC1 (* skoMC1 (* skoMC1 (* skoMC1 (- 1.))))))))) (* skoMC1 (* skoMC1 (* skoMC1 (- 2.))))) (<= (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (- 1.)))) (* skoSC1 (* skoMC1 (* skoMC1 (* skoMC1 (- 1.))))))) 0.) (<= (* skoSC1 (* skoMC1 (* skoMC1 (* skoMC1 (- 1.))))) (* skoMC1 (* skoMC1 skoMC1))) (> (* skoSC1 (* skoMC1 (* skoMC1 skoMC1))) (* skoMC1 (* skoMC1 (* skoMC1 (- 1.))))) (<= (* skoMC1 (* skoMC1 (* skoMC1 (- 2.)))) 0.) (> (* skoMC1 (* skoMC1 (* skoMC1 2.))) 0.) (<= skoSC1 (/ 5. 4.)) (<= 2. skoMC1) (<= 0. skoSC1) (> skoMC1 0.) (<= 0. skoMC1) (> (* skoSC1 skoMC1) (* skoMC1 (- 1.))) (<= (* skoSC1 (* skoMC1 (- 1.))) skoMC1) (> (* skoSC1 (* skoMC1 (* skoMC1 (* skoMC1 2.)))) (* skoMC1 (* skoMC1 (* skoMC1 (- 2.))))) (<= (* skoSC1 (* skoMC1 (* skoMC1 (* skoMC1 (- 2.))))) (* skoMC1 (* skoMC1 (* skoMC1 2.)))) (> (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (* skoMC1 12.)))) (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (+ (- 1.) (* skoMC1 6.))))) (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (- 1.)))) (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (/ 1. 12.)))) (* skoSC1 (* skoMC1 (* skoMC1 (* skoMC1 (/ 1. 12.))))))))))))) (* skoMC1 (* skoMC1 (* skoMC1 (+ (- 2.) (* skoMC1 (- 6.)))))))) (succedent (> (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (* skoMC1 (- 12.))))) (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (+ 1. (* skoMC1 (- 6.)))))) (* skoSC1 (+ (* skoMC1 (* skoMC1 skoMC1)) (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (/ (- 1.) 12.)))) (* skoSC1 (* skoMC1 (* skoMC1 (* skoMC1 (/ (- 1.) 12.))))))))))))) (* skoMC1 (* skoMC1 (* skoMC1 (+ 2. (* skoMC1 6.))))))))
-----[end problem]-----

-----[begin problem]-----
% In Mathematica format:
Timing[Resolve[Exists[{skoSC1,skoMC1}, And[skoSC1*(skoMC1*(-1+skoMC1*3)+skoSC1*(skoMC1*(-2+skoMC1*-3)+skoSC1*(skoMC1*((1/6)+skoMC1*-1)+skoSC1*skoMC1*(1/4))))>skoMC1*(-2+skoMC1*-5),skoSC1>0,skoSC1*(skoMC1*skoMC1*skoMC1*-2+skoSC1*(skoMC1*skoMC1*skoMC1+skoSC1*skoMC1*skoMC1*skoMC1))<=skoMC1*skoMC1*skoMC1*2,skoSC1*(skoMC1*skoMC1*skoMC1+skoSC1*skoMC1*skoMC1*skoMC1)>0,skoSC1*(skoMC1*skoMC1*skoMC1*2+skoSC1*(skoMC1*skoMC1*skoMC1*-1+skoSC1*skoMC1*skoMC1*skoMC1*-1))>skoMC1*skoMC1*skoMC1*-2,skoSC1*(skoMC1*skoMC1*skoMC1*-1+skoSC1*skoMC1*skoMC1*skoMC1*-1)<=0,skoSC1*skoMC1*skoMC1*skoMC1*-1<=skoMC1*skoMC1*skoMC1,skoSC1*skoMC1*skoMC1*skoMC1>skoMC1*skoMC1*skoMC1*-1,skoMC1*skoMC1*skoMC1*-2<=0,skoMC1*skoMC1*skoMC1*2>0,skoSC1<=(5/4),2<=skoMC1,0<=skoSC1,skoMC1>0,0<=skoMC1,skoSC1*skoMC1>skoMC1*-1,skoSC1*skoMC1*-1<=skoMC1,skoSC1*skoMC1*skoMC1*skoMC1*2>skoMC1*skoMC1*skoMC1*-2,skoSC1*skoMC1*skoMC1*skoMC1*-2<=skoMC1*skoMC1*skoMC1*2,skoSC1*(skoMC1*skoMC1*skoMC1*skoMC1*12+skoSC1*(skoMC1*skoMC1*skoMC1*(-1+skoMC1*6)+skoSC1*(skoMC1*skoMC1*skoMC1*-1+skoSC1*(skoMC1*skoMC1*skoMC1*(1/12)+skoSC1*skoMC1*skoMC1*skoMC1*(1/12)))))>skoMC1*skoMC1*skoMC1*(-2+skoMC1*-6),skoSC1*(skoMC1*skoMC1*skoMC1*skoMC1*-12+skoSC1*(skoMC1*skoMC1*skoMC1*(1+skoMC1*-6)+skoSC1*(skoMC1*skoMC1*skoMC1+skoSC1*(skoMC1*skoMC1*skoMC1*(-1/12)+skoSC1*skoMC1*skoMC1*skoMC1*(-1/12)))))<=skoMC1*skoMC1*skoMC1*(2+skoMC1*6)]], Reals]]

% In QepcadB format:
(E skoSC1) (E skoMC1) [[(skoMC1 (-2+(skoMC1 (-5))))<(skoSC1 ((skoMC1 (-1+(skoMC1 (3))))+(skoSC1 ((skoMC1 (-2+(skoMC1 (-3))))+(skoSC1 ((skoMC1 (1/6+(skoMC1 (-1))))+(skoSC1 skoMC1 (1/4))))))))]/\[[0<skoSC1]/\[[(skoSC1 ((skoMC1 skoMC1 skoMC1 (-2))+(skoSC1 ((skoMC1 skoMC1 skoMC1)+(skoSC1 skoMC1 skoMC1 skoMC1)))))<=(skoMC1 skoMC1 skoMC1 (2))]/\[[0<(skoSC1 ((skoMC1 skoMC1 skoMC1)+(skoSC1 skoMC1 skoMC1 skoMC1)))]/\[[(skoMC1 skoMC1 skoMC1 (-2))<(skoSC1 ((skoMC1 skoMC1 skoMC1 (2))+(skoSC1 ((skoMC1 skoMC1 skoMC1 (-1))+(skoSC1 skoMC1 skoMC1 skoMC1 (-1))))))]/\[[(skoSC1 ((skoMC1 skoMC1 skoMC1 (-1))+(skoSC1 skoMC1 skoMC1 skoMC1 (-1))))<=0]/\[[(skoSC1 skoMC1 skoMC1 skoMC1 (-1))<=(skoMC1 skoMC1 skoMC1)]/\[[(skoMC1 skoMC1 skoMC1 (-1))<(skoSC1 skoMC1 skoMC1 skoMC1)]/\[[(skoMC1 skoMC1 skoMC1 (-2))<=0]/\[[0<(skoMC1 skoMC1 skoMC1 (2))]/\[[skoSC1<=5/4]/\[[2<=skoMC1]/\[[0<=skoSC1]/\[[0<skoMC1]/\[[0<=skoMC1]/\[[(skoMC1 (-1))<(skoSC1 skoMC1)]/\[[(skoSC1 skoMC1 (-1))<=skoMC1]/\[[(skoMC1 skoMC1 skoMC1 (-2))<(skoSC1 skoMC1 skoMC1 skoMC1 (2))]/\[[(skoSC1 skoMC1 skoMC1 skoMC1 (-2))<=(skoMC1 skoMC1 skoMC1 (2))]/\[[(skoMC1 skoMC1 skoMC1 (-2+(skoMC1 (-6))))<(skoSC1 ((skoMC1 skoMC1 skoMC1 skoMC1 (12))+(skoSC1 ((skoMC1 skoMC1 skoMC1 (-1+(skoMC1 (6))))+(skoSC1 ((skoMC1 skoMC1 skoMC1 (-1))+(skoSC1 ((skoMC1 skoMC1 skoMC1 (1/12))+(skoSC1 skoMC1 skoMC1 skoMC1 (1/12))))))))))]/\[(skoSC1 ((skoMC1 skoMC1 skoMC1 skoMC1 (-12))+(skoSC1 ((skoMC1 skoMC1 skoMC1 (1+(skoMC1 (-6))))+(skoSC1 ((skoMC1 skoMC1 skoMC1)+(skoSC1 ((skoMC1 skoMC1 skoMC1 (-1/12))+(skoSC1 skoMC1 skoMC1 skoMC1 (-1/12))))))))))<=(skoMC1 skoMC1 skoMC1 (2+(skoMC1 (6))))]]]]]]]]]]]]]]]]]]]]].

% In SMTLib2 format:
(declare-fun skoSC1 () Real) (declare-fun skoMC1 () Real) (assert (and (> (* skoSC1 (+ (* skoMC1 (+ (- 1.) (* skoMC1 3.))) (* skoSC1 (+ (* skoMC1 (+ (- 2.) (* skoMC1 (- 3.)))) (* skoSC1 (+ (* skoMC1 (+ (/ 1. 6.) (* skoMC1 (- 1.)))) (* skoSC1 (* skoMC1 (/ 1. 4.))))))))) (* skoMC1 (+ (- 2.) (* skoMC1 (- 5.))))) (and (> skoSC1 0.) (and (<= (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (- 2.)))) (* skoSC1 (+ (* skoMC1 (* skoMC1 skoMC1)) (* skoSC1 (* skoMC1 (* skoMC1 skoMC1))))))) (* skoMC1 (* skoMC1 (* skoMC1 2.)))) (and (> (* skoSC1 (+ (* skoMC1 (* skoMC1 skoMC1)) (* skoSC1 (* skoMC1 (* skoMC1 skoMC1))))) 0.) (and (> (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 2.))) (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (- 1.)))) (* skoSC1 (* skoMC1 (* skoMC1 (* skoMC1 (- 1.))))))))) (* skoMC1 (* skoMC1 (* skoMC1 (- 2.))))) (and (<= (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (- 1.)))) (* skoSC1 (* skoMC1 (* skoMC1 (* skoMC1 (- 1.))))))) 0.) (and (<= (* skoSC1 (* skoMC1 (* skoMC1 (* skoMC1 (- 1.))))) (* skoMC1 (* skoMC1 skoMC1))) (and (> (* skoSC1 (* skoMC1 (* skoMC1 skoMC1))) (* skoMC1 (* skoMC1 (* skoMC1 (- 1.))))) (and (<= (* skoMC1 (* skoMC1 (* skoMC1 (- 2.)))) 0.) (and (> (* skoMC1 (* skoMC1 (* skoMC1 2.))) 0.) (and (<= skoSC1 (/ 5. 4.)) (and (<= 2. skoMC1) (and (<= 0. skoSC1) (and (> skoMC1 0.) (and (<= 0. skoMC1) (and (> (* skoSC1 skoMC1) (* skoMC1 (- 1.))) (and (<= (* skoSC1 (* skoMC1 (- 1.))) skoMC1) (and (> (* skoSC1 (* skoMC1 (* skoMC1 (* skoMC1 2.)))) (* skoMC1 (* skoMC1 (* skoMC1 (- 2.))))) (and (<= (* skoSC1 (* skoMC1 (* skoMC1 (* skoMC1 (- 2.))))) (* skoMC1 (* skoMC1 (* skoMC1 2.)))) (and (> (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (* skoMC1 12.)))) (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (+ (- 1.) (* skoMC1 6.))))) (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (- 1.)))) (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (/ 1. 12.)))) (* skoSC1 (* skoMC1 (* skoMC1 (* skoMC1 (/ 1. 12.))))))))))))) (* skoMC1 (* skoMC1 (* skoMC1 (+ (- 2.) (* skoMC1 (- 6.))))))) (<= (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (* skoMC1 (- 12.))))) (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (+ 1. (* skoMC1 (- 6.)))))) (* skoSC1 (+ (* skoMC1 (* skoMC1 skoMC1)) (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (/ (- 1.) 12.)))) (* skoSC1 (* skoMC1 (* skoMC1 (* skoMC1 (/ (- 1.) 12.))))))))))))) (* skoMC1 (* skoMC1 (* skoMC1 (+ 2. (* skoMC1 6.)))))))))))))))))))))))))))

% In GRF format:
(sequent " MetiTarski formula " (antecedent (> (* skoSC1 (+ (* skoMC1 (+ (- 1.) (* skoMC1 3.))) (* skoSC1 (+ (* skoMC1 (+ (- 2.) (* skoMC1 (- 3.)))) (* skoSC1 (+ (* skoMC1 (+ (/ 1. 6.) (* skoMC1 (- 1.)))) (* skoSC1 (* skoMC1 (/ 1. 4.))))))))) (* skoMC1 (+ (- 2.) (* skoMC1 (- 5.))))) (> skoSC1 0.) (<= (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (- 2.)))) (* skoSC1 (+ (* skoMC1 (* skoMC1 skoMC1)) (* skoSC1 (* skoMC1 (* skoMC1 skoMC1))))))) (* skoMC1 (* skoMC1 (* skoMC1 2.)))) (> (* skoSC1 (+ (* skoMC1 (* skoMC1 skoMC1)) (* skoSC1 (* skoMC1 (* skoMC1 skoMC1))))) 0.) (> (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 2.))) (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (- 1.)))) (* skoSC1 (* skoMC1 (* skoMC1 (* skoMC1 (- 1.))))))))) (* skoMC1 (* skoMC1 (* skoMC1 (- 2.))))) (<= (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (- 1.)))) (* skoSC1 (* skoMC1 (* skoMC1 (* skoMC1 (- 1.))))))) 0.) (<= (* skoSC1 (* skoMC1 (* skoMC1 (* skoMC1 (- 1.))))) (* skoMC1 (* skoMC1 skoMC1))) (> (* skoSC1 (* skoMC1 (* skoMC1 skoMC1))) (* skoMC1 (* skoMC1 (* skoMC1 (- 1.))))) (<= (* skoMC1 (* skoMC1 (* skoMC1 (- 2.)))) 0.) (> (* skoMC1 (* skoMC1 (* skoMC1 2.))) 0.) (<= skoSC1 (/ 5. 4.)) (<= 2. skoMC1) (<= 0. skoSC1) (> skoMC1 0.) (<= 0. skoMC1) (> (* skoSC1 skoMC1) (* skoMC1 (- 1.))) (<= (* skoSC1 (* skoMC1 (- 1.))) skoMC1) (> (* skoSC1 (* skoMC1 (* skoMC1 (* skoMC1 2.)))) (* skoMC1 (* skoMC1 (* skoMC1 (- 2.))))) (<= (* skoSC1 (* skoMC1 (* skoMC1 (* skoMC1 (- 2.))))) (* skoMC1 (* skoMC1 (* skoMC1 2.)))) (> (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (* skoMC1 12.)))) (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (+ (- 1.) (* skoMC1 6.))))) (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (- 1.)))) (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (/ 1. 12.)))) (* skoSC1 (* skoMC1 (* skoMC1 (* skoMC1 (/ 1. 12.))))))))))))) (* skoMC1 (* skoMC1 (* skoMC1 (+ (- 2.) (* skoMC1 (- 6.)))))))) (succedent (> (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (* skoMC1 (- 12.))))) (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (+ 1. (* skoMC1 (- 6.)))))) (* skoSC1 (+ (* skoMC1 (* skoMC1 skoMC1)) (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (/ (- 1.) 12.)))) (* skoSC1 (* skoMC1 (* skoMC1 (* skoMC1 (/ (- 1.) 12.))))))))))))) (* skoMC1 (* skoMC1 (* skoMC1 (+ 2. (* skoMC1 6.))))))))
-----[end problem]-----

-----[begin problem]-----
% In Mathematica format:
Timing[Resolve[Exists[{skoSC1,skoMC1}, And[0>skoMC1,skoSC1*(skoMC1*(1+skoMC1*-3)+skoSC1*(skoMC1*(2+skoMC1*3)+skoSC1*(skoMC1*((-1/6)+skoMC1)+skoSC1*(skoMC1*(-1/4)+skoSC1*skoSC1*(skoMC1*(1/360)+skoSC1*skoSC1*(skoMC1*(-1/20160)+skoSC1*skoSC1*(skoMC1*(1/1814400)+skoSC1*skoSC1*skoMC1*(-1/239500800))))))))>skoMC1*(2+skoMC1*5),skoSC1*(skoMC1*(-1+skoMC1*3)+skoSC1*(skoMC1*(-2+skoMC1*-3)+skoSC1*(skoMC1*((1/6)+skoMC1*-1)+skoSC1*skoMC1*(1/4))))>skoMC1*(-2+skoMC1*-5),skoSC1>0,skoSC1*(skoMC1*skoMC1*skoMC1+skoSC1*skoMC1*skoMC1*skoMC1)>0,skoSC1*(skoMC1*skoMC1*skoMC1*2+skoSC1*(skoMC1*skoMC1*skoMC1*-1+skoSC1*skoMC1*skoMC1*skoMC1*-1))>skoMC1*skoMC1*skoMC1*-2,skoSC1*skoMC1*skoMC1*skoMC1>skoMC1*skoMC1*skoMC1*-1,skoMC1*skoMC1*skoMC1*2>0,skoMC1>0,skoSC1*skoMC1>skoMC1*-1,skoSC1*skoMC1*skoMC1*skoMC1*2>skoMC1*skoMC1*skoMC1*-2,skoSC1*(skoMC1*skoMC1*skoMC1*skoMC1*12+skoSC1*(skoMC1*skoMC1*skoMC1*(-1+skoMC1*6)+skoSC1*(skoMC1*skoMC1*skoMC1*-1+skoSC1*(skoMC1*skoMC1*skoMC1*(1/12)+skoSC1*skoMC1*skoMC1*skoMC1*(1/12)))))>skoMC1*skoMC1*skoMC1*(-2+skoMC1*-6)]], Reals]]

% In QepcadB format:
(E skoSC1) (E skoMC1) [[skoMC1<0]/\[[(skoMC1 (2+(skoMC1 (5))))<(skoSC1 ((skoMC1 (1+(skoMC1 (-3))))+(skoSC1 ((skoMC1 (2+(skoMC1 (3))))+(skoSC1 ((skoMC1 (-1/6+skoMC1))+(skoSC1 ((skoMC1 (-1/4))+(skoSC1 skoSC1 ((skoMC1 (1/360))+(skoSC1 skoSC1 ((skoMC1 (-1/20160))+(skoSC1 skoSC1 ((skoMC1 (1/1814400))+(skoSC1 skoSC1 skoMC1 (-1/239500800))))))))))))))))]/\[[(skoMC1 (-2+(skoMC1 (-5))))<(skoSC1 ((skoMC1 (-1+(skoMC1 (3))))+(skoSC1 ((skoMC1 (-2+(skoMC1 (-3))))+(skoSC1 ((skoMC1 (1/6+(skoMC1 (-1))))+(skoSC1 skoMC1 (1/4))))))))]/\[[0<skoSC1]/\[[0<(skoSC1 ((skoMC1 skoMC1 skoMC1)+(skoSC1 skoMC1 skoMC1 skoMC1)))]/\[[(skoMC1 skoMC1 skoMC1 (-2))<(skoSC1 ((skoMC1 skoMC1 skoMC1 (2))+(skoSC1 ((skoMC1 skoMC1 skoMC1 (-1))+(skoSC1 skoMC1 skoMC1 skoMC1 (-1))))))]/\[[(skoMC1 skoMC1 skoMC1 (-1))<(skoSC1 skoMC1 skoMC1 skoMC1)]/\[[0<(skoMC1 skoMC1 skoMC1 (2))]/\[[0<skoMC1]/\[[(skoMC1 (-1))<(skoSC1 skoMC1)]/\[[(skoMC1 skoMC1 skoMC1 (-2))<(skoSC1 skoMC1 skoMC1 skoMC1 (2))]/\[(skoMC1 skoMC1 skoMC1 (-2+(skoMC1 (-6))))<(skoSC1 ((skoMC1 skoMC1 skoMC1 skoMC1 (12))+(skoSC1 ((skoMC1 skoMC1 skoMC1 (-1+(skoMC1 (6))))+(skoSC1 ((skoMC1 skoMC1 skoMC1 (-1))+(skoSC1 ((skoMC1 skoMC1 skoMC1 (1/12))+(skoSC1 skoMC1 skoMC1 skoMC1 (1/12))))))))))]]]]]]]]]]]].

% In SMTLib2 format:
(declare-fun skoSC1 () Real) (declare-fun skoMC1 () Real) (assert (and (> 0. skoMC1) (and (> (* skoSC1 (+ (* skoMC1 (+ 1. (* skoMC1 (- 3.)))) (* skoSC1 (+ (* skoMC1 (+ 2. (* skoMC1 3.))) (* skoSC1 (+ (* skoMC1 (+ (/ (- 1.) 6.) skoMC1)) (* skoSC1 (+ (* skoMC1 (/ (- 1.) 4.)) (* skoSC1 (* skoSC1 (+ (* skoMC1 (/ 1. 360.)) (* skoSC1 (* skoSC1 (+ (* skoMC1 (/ (- 1.) 20160.)) (* skoSC1 (* skoSC1 (+ (* skoMC1 (/ 1. 1814400.)) (* skoSC1 (* skoSC1 (* skoMC1 (/ (- 1.) 239500800.))))))))))))))))))))) (* skoMC1 (+ 2. (* skoMC1 5.)))) (and (> (* skoSC1 (+ (* skoMC1 (+ (- 1.) (* skoMC1 3.))) (* skoSC1 (+ (* skoMC1 (+ (- 2.) (* skoMC1 (- 3.)))) (* skoSC1 (+ (* skoMC1 (+ (/ 1. 6.) (* skoMC1 (- 1.)))) (* skoSC1 (* skoMC1 (/ 1. 4.))))))))) (* skoMC1 (+ (- 2.) (* skoMC1 (- 5.))))) (and (> skoSC1 0.) (and (> (* skoSC1 (+ (* skoMC1 (* skoMC1 skoMC1)) (* skoSC1 (* skoMC1 (* skoMC1 skoMC1))))) 0.) (and (> (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 2.))) (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (- 1.)))) (* skoSC1 (* skoMC1 (* skoMC1 (* skoMC1 (- 1.))))))))) (* skoMC1 (* skoMC1 (* skoMC1 (- 2.))))) (and (> (* skoSC1 (* skoMC1 (* skoMC1 skoMC1))) (* skoMC1 (* skoMC1 (* skoMC1 (- 1.))))) (and (> (* skoMC1 (* skoMC1 (* skoMC1 2.))) 0.) (and (> skoMC1 0.) (and (> (* skoSC1 skoMC1) (* skoMC1 (- 1.))) (and (> (* skoSC1 (* skoMC1 (* skoMC1 (* skoMC1 2.)))) (* skoMC1 (* skoMC1 (* skoMC1 (- 2.))))) (> (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (* skoMC1 12.)))) (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (+ (- 1.) (* skoMC1 6.))))) (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (- 1.)))) (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (/ 1. 12.)))) (* skoSC1 (* skoMC1 (* skoMC1 (* skoMC1 (/ 1. 12.))))))))))))) (* skoMC1 (* skoMC1 (* skoMC1 (+ (- 2.) (* skoMC1 (- 6.)))))))))))))))))))

% In GRF format:
(sequent " MetiTarski formula " (antecedent (> 0. skoMC1) (> (* skoSC1 (+ (* skoMC1 (+ 1. (* skoMC1 (- 3.)))) (* skoSC1 (+ (* skoMC1 (+ 2. (* skoMC1 3.))) (* skoSC1 (+ (* skoMC1 (+ (/ (- 1.) 6.) skoMC1)) (* skoSC1 (+ (* skoMC1 (/ (- 1.) 4.)) (* skoSC1 (* skoSC1 (+ (* skoMC1 (/ 1. 360.)) (* skoSC1 (* skoSC1 (+ (* skoMC1 (/ (- 1.) 20160.)) (* skoSC1 (* skoSC1 (+ (* skoMC1 (/ 1. 1814400.)) (* skoSC1 (* skoSC1 (* skoMC1 (/ (- 1.) 239500800.))))))))))))))))))))) (* skoMC1 (+ 2. (* skoMC1 5.)))) (> (* skoSC1 (+ (* skoMC1 (+ (- 1.) (* skoMC1 3.))) (* skoSC1 (+ (* skoMC1 (+ (- 2.) (* skoMC1 (- 3.)))) (* skoSC1 (+ (* skoMC1 (+ (/ 1. 6.) (* skoMC1 (- 1.)))) (* skoSC1 (* skoMC1 (/ 1. 4.))))))))) (* skoMC1 (+ (- 2.) (* skoMC1 (- 5.))))) (> skoSC1 0.) (> (* skoSC1 (+ (* skoMC1 (* skoMC1 skoMC1)) (* skoSC1 (* skoMC1 (* skoMC1 skoMC1))))) 0.) (> (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 2.))) (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (- 1.)))) (* skoSC1 (* skoMC1 (* skoMC1 (* skoMC1 (- 1.))))))))) (* skoMC1 (* skoMC1 (* skoMC1 (- 2.))))) (> (* skoSC1 (* skoMC1 (* skoMC1 skoMC1))) (* skoMC1 (* skoMC1 (* skoMC1 (- 1.))))) (> (* skoMC1 (* skoMC1 (* skoMC1 2.))) 0.) (> skoMC1 0.) (> (* skoSC1 skoMC1) (* skoMC1 (- 1.))) (> (* skoSC1 (* skoMC1 (* skoMC1 (* skoMC1 2.)))) (* skoMC1 (* skoMC1 (* skoMC1 (- 2.)))))) (succedent (<= (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (* skoMC1 12.)))) (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (+ (- 1.) (* skoMC1 6.))))) (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (- 1.)))) (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (/ 1. 12.)))) (* skoSC1 (* skoMC1 (* skoMC1 (* skoMC1 (/ 1. 12.))))))))))))) (* skoMC1 (* skoMC1 (* skoMC1 (+ (- 2.) (* skoMC1 (- 6.)))))))))
-----[end problem]-----

-----[begin problem]-----
% In Mathematica format:
Timing[Resolve[Exists[{skoSC1,skoMC1}, And[0<=skoMC1,skoSC1*(skoMC1*(-1+skoMC1*3)+skoSC1*(skoMC1*(-2+skoMC1*-3)+skoSC1*(skoMC1*((1/6)+skoMC1*-1)+skoSC1*skoMC1*(1/4))))>skoMC1*(-2+skoMC1*-5),skoSC1>0,skoSC1*(skoMC1*skoMC1*skoMC1*-2+skoSC1*(skoMC1*skoMC1*skoMC1+skoSC1*skoMC1*skoMC1*skoMC1))<=skoMC1*skoMC1*skoMC1*2,skoSC1*(skoMC1*skoMC1*skoMC1+skoSC1*skoMC1*skoMC1*skoMC1)>0,skoSC1*(skoMC1*skoMC1*skoMC1*2+skoSC1*(skoMC1*skoMC1*skoMC1*-1+skoSC1*skoMC1*skoMC1*skoMC1*-1))>skoMC1*skoMC1*skoMC1*-2,skoSC1*(skoMC1*skoMC1*skoMC1*-1+skoSC1*skoMC1*skoMC1*skoMC1*-1)<=0,skoSC1*skoMC1*skoMC1*skoMC1*-1<=skoMC1*skoMC1*skoMC1,skoSC1*skoMC1*skoMC1*skoMC1>skoMC1*skoMC1*skoMC1*-1,skoMC1*skoMC1*skoMC1*-2<=0,skoMC1*skoMC1*skoMC1*2>0,skoSC1<=(5/4),2<=skoMC1,0<=skoSC1,skoMC1>0,0<=skoMC1,skoSC1*skoMC1>skoMC1*-1,skoSC1*skoMC1*-1<=skoMC1,skoSC1*skoMC1*skoMC1*skoMC1*2>skoMC1*skoMC1*skoMC1*-2,skoSC1*skoMC1*skoMC1*skoMC1*-2<=skoMC1*skoMC1*skoMC1*2,skoSC1*(skoMC1*skoMC1*skoMC1*skoMC1*12+skoSC1*(skoMC1*skoMC1*skoMC1*(-1+skoMC1*6)+skoSC1*(skoMC1*skoMC1*skoMC1*-1+skoSC1*(skoMC1*skoMC1*skoMC1*(1/12)+skoSC1*skoMC1*skoMC1*skoMC1*(1/12)))))>skoMC1*skoMC1*skoMC1*(-2+skoMC1*-6),skoSC1*(skoMC1*skoMC1*skoMC1*skoMC1*-12+skoSC1*(skoMC1*skoMC1*skoMC1*(1+skoMC1*-6)+skoSC1*(skoMC1*skoMC1*skoMC1+skoSC1*(skoMC1*skoMC1*skoMC1*(-1/12)+skoSC1*skoMC1*skoMC1*skoMC1*(-1/12)))))<=skoMC1*skoMC1*skoMC1*(2+skoMC1*6)]], Reals]]

% In QepcadB format:
(E skoSC1) (E skoMC1) [[0<=skoMC1]/\[[(skoMC1 (-2+(skoMC1 (-5))))<(skoSC1 ((skoMC1 (-1+(skoMC1 (3))))+(skoSC1 ((skoMC1 (-2+(skoMC1 (-3))))+(skoSC1 ((skoMC1 (1/6+(skoMC1 (-1))))+(skoSC1 skoMC1 (1/4))))))))]/\[[0<skoSC1]/\[[(skoSC1 ((skoMC1 skoMC1 skoMC1 (-2))+(skoSC1 ((skoMC1 skoMC1 skoMC1)+(skoSC1 skoMC1 skoMC1 skoMC1)))))<=(skoMC1 skoMC1 skoMC1 (2))]/\[[0<(skoSC1 ((skoMC1 skoMC1 skoMC1)+(skoSC1 skoMC1 skoMC1 skoMC1)))]/\[[(skoMC1 skoMC1 skoMC1 (-2))<(skoSC1 ((skoMC1 skoMC1 skoMC1 (2))+(skoSC1 ((skoMC1 skoMC1 skoMC1 (-1))+(skoSC1 skoMC1 skoMC1 skoMC1 (-1))))))]/\[[(skoSC1 ((skoMC1 skoMC1 skoMC1 (-1))+(skoSC1 skoMC1 skoMC1 skoMC1 (-1))))<=0]/\[[(skoSC1 skoMC1 skoMC1 skoMC1 (-1))<=(skoMC1 skoMC1 skoMC1)]/\[[(skoMC1 skoMC1 skoMC1 (-1))<(skoSC1 skoMC1 skoMC1 skoMC1)]/\[[(skoMC1 skoMC1 skoMC1 (-2))<=0]/\[[0<(skoMC1 skoMC1 skoMC1 (2))]/\[[skoSC1<=5/4]/\[[2<=skoMC1]/\[[0<=skoSC1]/\[[0<skoMC1]/\[[0<=skoMC1]/\[[(skoMC1 (-1))<(skoSC1 skoMC1)]/\[[(skoSC1 skoMC1 (-1))<=skoMC1]/\[[(skoMC1 skoMC1 skoMC1 (-2))<(skoSC1 skoMC1 skoMC1 skoMC1 (2))]/\[[(skoSC1 skoMC1 skoMC1 skoMC1 (-2))<=(skoMC1 skoMC1 skoMC1 (2))]/\[[(skoMC1 skoMC1 skoMC1 (-2+(skoMC1 (-6))))<(skoSC1 ((skoMC1 skoMC1 skoMC1 skoMC1 (12))+(skoSC1 ((skoMC1 skoMC1 skoMC1 (-1+(skoMC1 (6))))+(skoSC1 ((skoMC1 skoMC1 skoMC1 (-1))+(skoSC1 ((skoMC1 skoMC1 skoMC1 (1/12))+(skoSC1 skoMC1 skoMC1 skoMC1 (1/12))))))))))]/\[(skoSC1 ((skoMC1 skoMC1 skoMC1 skoMC1 (-12))+(skoSC1 ((skoMC1 skoMC1 skoMC1 (1+(skoMC1 (-6))))+(skoSC1 ((skoMC1 skoMC1 skoMC1)+(skoSC1 ((skoMC1 skoMC1 skoMC1 (-1/12))+(skoSC1 skoMC1 skoMC1 skoMC1 (-1/12))))))))))<=(skoMC1 skoMC1 skoMC1 (2+(skoMC1 (6))))]]]]]]]]]]]]]]]]]]]]]].

% In SMTLib2 format:
(declare-fun skoSC1 () Real) (declare-fun skoMC1 () Real) (assert (and (<= 0. skoMC1) (and (> (* skoSC1 (+ (* skoMC1 (+ (- 1.) (* skoMC1 3.))) (* skoSC1 (+ (* skoMC1 (+ (- 2.) (* skoMC1 (- 3.)))) (* skoSC1 (+ (* skoMC1 (+ (/ 1. 6.) (* skoMC1 (- 1.)))) (* skoSC1 (* skoMC1 (/ 1. 4.))))))))) (* skoMC1 (+ (- 2.) (* skoMC1 (- 5.))))) (and (> skoSC1 0.) (and (<= (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (- 2.)))) (* skoSC1 (+ (* skoMC1 (* skoMC1 skoMC1)) (* skoSC1 (* skoMC1 (* skoMC1 skoMC1))))))) (* skoMC1 (* skoMC1 (* skoMC1 2.)))) (and (> (* skoSC1 (+ (* skoMC1 (* skoMC1 skoMC1)) (* skoSC1 (* skoMC1 (* skoMC1 skoMC1))))) 0.) (and (> (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 2.))) (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (- 1.)))) (* skoSC1 (* skoMC1 (* skoMC1 (* skoMC1 (- 1.))))))))) (* skoMC1 (* skoMC1 (* skoMC1 (- 2.))))) (and (<= (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (- 1.)))) (* skoSC1 (* skoMC1 (* skoMC1 (* skoMC1 (- 1.))))))) 0.) (and (<= (* skoSC1 (* skoMC1 (* skoMC1 (* skoMC1 (- 1.))))) (* skoMC1 (* skoMC1 skoMC1))) (and (> (* skoSC1 (* skoMC1 (* skoMC1 skoMC1))) (* skoMC1 (* skoMC1 (* skoMC1 (- 1.))))) (and (<= (* skoMC1 (* skoMC1 (* skoMC1 (- 2.)))) 0.) (and (> (* skoMC1 (* skoMC1 (* skoMC1 2.))) 0.) (and (<= skoSC1 (/ 5. 4.)) (and (<= 2. skoMC1) (and (<= 0. skoSC1) (and (> skoMC1 0.) (and (<= 0. skoMC1) (and (> (* skoSC1 skoMC1) (* skoMC1 (- 1.))) (and (<= (* skoSC1 (* skoMC1 (- 1.))) skoMC1) (and (> (* skoSC1 (* skoMC1 (* skoMC1 (* skoMC1 2.)))) (* skoMC1 (* skoMC1 (* skoMC1 (- 2.))))) (and (<= (* skoSC1 (* skoMC1 (* skoMC1 (* skoMC1 (- 2.))))) (* skoMC1 (* skoMC1 (* skoMC1 2.)))) (and (> (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (* skoMC1 12.)))) (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (+ (- 1.) (* skoMC1 6.))))) (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (- 1.)))) (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (/ 1. 12.)))) (* skoSC1 (* skoMC1 (* skoMC1 (* skoMC1 (/ 1. 12.))))))))))))) (* skoMC1 (* skoMC1 (* skoMC1 (+ (- 2.) (* skoMC1 (- 6.))))))) (<= (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (* skoMC1 (- 12.))))) (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (+ 1. (* skoMC1 (- 6.)))))) (* skoSC1 (+ (* skoMC1 (* skoMC1 skoMC1)) (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (/ (- 1.) 12.)))) (* skoSC1 (* skoMC1 (* skoMC1 (* skoMC1 (/ (- 1.) 12.))))))))))))) (* skoMC1 (* skoMC1 (* skoMC1 (+ 2. (* skoMC1 6.))))))))))))))))))))))))))))

% In GRF format:
(sequent " MetiTarski formula " (antecedent (<= 0. skoMC1) (> (* skoSC1 (+ (* skoMC1 (+ (- 1.) (* skoMC1 3.))) (* skoSC1 (+ (* skoMC1 (+ (- 2.) (* skoMC1 (- 3.)))) (* skoSC1 (+ (* skoMC1 (+ (/ 1. 6.) (* skoMC1 (- 1.)))) (* skoSC1 (* skoMC1 (/ 1. 4.))))))))) (* skoMC1 (+ (- 2.) (* skoMC1 (- 5.))))) (> skoSC1 0.) (<= (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (- 2.)))) (* skoSC1 (+ (* skoMC1 (* skoMC1 skoMC1)) (* skoSC1 (* skoMC1 (* skoMC1 skoMC1))))))) (* skoMC1 (* skoMC1 (* skoMC1 2.)))) (> (* skoSC1 (+ (* skoMC1 (* skoMC1 skoMC1)) (* skoSC1 (* skoMC1 (* skoMC1 skoMC1))))) 0.) (> (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 2.))) (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (- 1.)))) (* skoSC1 (* skoMC1 (* skoMC1 (* skoMC1 (- 1.))))))))) (* skoMC1 (* skoMC1 (* skoMC1 (- 2.))))) (<= (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (- 1.)))) (* skoSC1 (* skoMC1 (* skoMC1 (* skoMC1 (- 1.))))))) 0.) (<= (* skoSC1 (* skoMC1 (* skoMC1 (* skoMC1 (- 1.))))) (* skoMC1 (* skoMC1 skoMC1))) (> (* skoSC1 (* skoMC1 (* skoMC1 skoMC1))) (* skoMC1 (* skoMC1 (* skoMC1 (- 1.))))) (<= (* skoMC1 (* skoMC1 (* skoMC1 (- 2.)))) 0.) (> (* skoMC1 (* skoMC1 (* skoMC1 2.))) 0.) (<= skoSC1 (/ 5. 4.)) (<= 2. skoMC1) (<= 0. skoSC1) (> skoMC1 0.) (<= 0. skoMC1) (> (* skoSC1 skoMC1) (* skoMC1 (- 1.))) (<= (* skoSC1 (* skoMC1 (- 1.))) skoMC1) (> (* skoSC1 (* skoMC1 (* skoMC1 (* skoMC1 2.)))) (* skoMC1 (* skoMC1 (* skoMC1 (- 2.))))) (<= (* skoSC1 (* skoMC1 (* skoMC1 (* skoMC1 (- 2.))))) (* skoMC1 (* skoMC1 (* skoMC1 2.)))) (> (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (* skoMC1 12.)))) (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (+ (- 1.) (* skoMC1 6.))))) (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (- 1.)))) (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (/ 1. 12.)))) (* skoSC1 (* skoMC1 (* skoMC1 (* skoMC1 (/ 1. 12.))))))))))))) (* skoMC1 (* skoMC1 (* skoMC1 (+ (- 2.) (* skoMC1 (- 6.)))))))) (succedent (> (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (* skoMC1 (- 12.))))) (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (+ 1. (* skoMC1 (- 6.)))))) (* skoSC1 (+ (* skoMC1 (* skoMC1 skoMC1)) (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (/ (- 1.) 12.)))) (* skoSC1 (* skoMC1 (* skoMC1 (* skoMC1 (/ (- 1.) 12.))))))))))))) (* skoMC1 (* skoMC1 (* skoMC1 (+ 2. (* skoMC1 6.))))))))
-----[end problem]-----

-----[begin problem]-----
% In Mathematica format:
Timing[Resolve[Exists[{skoSC1,skoMC1}, And[skoSC1*(skoMC1*(-1+skoMC1*3)+skoSC1*(skoMC1*(-2+skoMC1*-3)+skoSC1*(skoMC1*((1/6)+skoMC1*-1)+skoSC1*(skoMC1*(1/4)+skoSC1*skoSC1*(skoMC1*(-1/360)+skoSC1*skoSC1*(skoMC1*(1/20160)+skoSC1*skoSC1*(skoMC1*(-1/1814400)+skoSC1*skoSC1*skoMC1*(1/239500800))))))))>skoMC1*(-2+skoMC1*-5),skoMC1>0,skoSC1*(skoMC1*(-1+skoMC1*3)+skoSC1*(skoMC1*(-2+skoMC1*-3)+skoSC1*(skoMC1*((1/6)+skoMC1*-1)+skoSC1*skoMC1*(1/4))))>skoMC1*(-2+skoMC1*-5),skoSC1>0,skoSC1*(skoMC1*skoMC1*skoMC1+skoSC1*skoMC1*skoMC1*skoMC1)>0,skoSC1*(skoMC1*skoMC1*skoMC1*2+skoSC1*(skoMC1*skoMC1*skoMC1*-1+skoSC1*skoMC1*skoMC1*skoMC1*-1))>skoMC1*skoMC1*skoMC1*-2,skoSC1*skoMC1*skoMC1*skoMC1>skoMC1*skoMC1*skoMC1*-1,skoMC1*skoMC1*skoMC1*2>0,skoMC1>0,skoSC1*skoMC1>skoMC1*-1,skoSC1*skoMC1*skoMC1*skoMC1*2>skoMC1*skoMC1*skoMC1*-2,skoSC1*(skoMC1*skoMC1*skoMC1*skoMC1*12+skoSC1*(skoMC1*skoMC1*skoMC1*(-1+skoMC1*6)+skoSC1*(skoMC1*skoMC1*skoMC1*-1+skoSC1*(skoMC1*skoMC1*skoMC1*(1/12)+skoSC1*skoMC1*skoMC1*skoMC1*(1/12)))))>skoMC1*skoMC1*skoMC1*(-2+skoMC1*-6)]], Reals]]

% In QepcadB format:
(E skoSC1) (E skoMC1) [[(skoMC1 (-2+(skoMC1 (-5))))<(skoSC1 ((skoMC1 (-1+(skoMC1 (3))))+(skoSC1 ((skoMC1 (-2+(skoMC1 (-3))))+(skoSC1 ((skoMC1 (1/6+(skoMC1 (-1))))+(skoSC1 ((skoMC1 (1/4))+(skoSC1 skoSC1 ((skoMC1 (-1/360))+(skoSC1 skoSC1 ((skoMC1 (1/20160))+(skoSC1 skoSC1 ((skoMC1 (-1/1814400))+(skoSC1 skoSC1 skoMC1 (1/239500800))))))))))))))))]/\[[0<skoMC1]/\[[(skoMC1 (-2+(skoMC1 (-5))))<(skoSC1 ((skoMC1 (-1+(skoMC1 (3))))+(skoSC1 ((skoMC1 (-2+(skoMC1 (-3))))+(skoSC1 ((skoMC1 (1/6+(skoMC1 (-1))))+(skoSC1 skoMC1 (1/4))))))))]/\[[0<skoSC1]/\[[0<(skoSC1 ((skoMC1 skoMC1 skoMC1)+(skoSC1 skoMC1 skoMC1 skoMC1)))]/\[[(skoMC1 skoMC1 skoMC1 (-2))<(skoSC1 ((skoMC1 skoMC1 skoMC1 (2))+(skoSC1 ((skoMC1 skoMC1 skoMC1 (-1))+(skoSC1 skoMC1 skoMC1 skoMC1 (-1))))))]/\[[(skoMC1 skoMC1 skoMC1 (-1))<(skoSC1 skoMC1 skoMC1 skoMC1)]/\[[0<(skoMC1 skoMC1 skoMC1 (2))]/\[[0<skoMC1]/\[[(skoMC1 (-1))<(skoSC1 skoMC1)]/\[[(skoMC1 skoMC1 skoMC1 (-2))<(skoSC1 skoMC1 skoMC1 skoMC1 (2))]/\[(skoMC1 skoMC1 skoMC1 (-2+(skoMC1 (-6))))<(skoSC1 ((skoMC1 skoMC1 skoMC1 skoMC1 (12))+(skoSC1 ((skoMC1 skoMC1 skoMC1 (-1+(skoMC1 (6))))+(skoSC1 ((skoMC1 skoMC1 skoMC1 (-1))+(skoSC1 ((skoMC1 skoMC1 skoMC1 (1/12))+(skoSC1 skoMC1 skoMC1 skoMC1 (1/12))))))))))]]]]]]]]]]]].

% In SMTLib2 format:
(declare-fun skoSC1 () Real) (declare-fun skoMC1 () Real) (assert (and (> (* skoSC1 (+ (* skoMC1 (+ (- 1.) (* skoMC1 3.))) (* skoSC1 (+ (* skoMC1 (+ (- 2.) (* skoMC1 (- 3.)))) (* skoSC1 (+ (* skoMC1 (+ (/ 1. 6.) (* skoMC1 (- 1.)))) (* skoSC1 (+ (* skoMC1 (/ 1. 4.)) (* skoSC1 (* skoSC1 (+ (* skoMC1 (/ (- 1.) 360.)) (* skoSC1 (* skoSC1 (+ (* skoMC1 (/ 1. 20160.)) (* skoSC1 (* skoSC1 (+ (* skoMC1 (/ (- 1.) 1814400.)) (* skoSC1 (* skoSC1 (* skoMC1 (/ 1. 239500800.))))))))))))))))))))) (* skoMC1 (+ (- 2.) (* skoMC1 (- 5.))))) (and (> skoMC1 0.) (and (> (* skoSC1 (+ (* skoMC1 (+ (- 1.) (* skoMC1 3.))) (* skoSC1 (+ (* skoMC1 (+ (- 2.) (* skoMC1 (- 3.)))) (* skoSC1 (+ (* skoMC1 (+ (/ 1. 6.) (* skoMC1 (- 1.)))) (* skoSC1 (* skoMC1 (/ 1. 4.))))))))) (* skoMC1 (+ (- 2.) (* skoMC1 (- 5.))))) (and (> skoSC1 0.) (and (> (* skoSC1 (+ (* skoMC1 (* skoMC1 skoMC1)) (* skoSC1 (* skoMC1 (* skoMC1 skoMC1))))) 0.) (and (> (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 2.))) (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (- 1.)))) (* skoSC1 (* skoMC1 (* skoMC1 (* skoMC1 (- 1.))))))))) (* skoMC1 (* skoMC1 (* skoMC1 (- 2.))))) (and (> (* skoSC1 (* skoMC1 (* skoMC1 skoMC1))) (* skoMC1 (* skoMC1 (* skoMC1 (- 1.))))) (and (> (* skoMC1 (* skoMC1 (* skoMC1 2.))) 0.) (and (> skoMC1 0.) (and (> (* skoSC1 skoMC1) (* skoMC1 (- 1.))) (and (> (* skoSC1 (* skoMC1 (* skoMC1 (* skoMC1 2.)))) (* skoMC1 (* skoMC1 (* skoMC1 (- 2.))))) (> (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (* skoMC1 12.)))) (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (+ (- 1.) (* skoMC1 6.))))) (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (- 1.)))) (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (/ 1. 12.)))) (* skoSC1 (* skoMC1 (* skoMC1 (* skoMC1 (/ 1. 12.))))))))))))) (* skoMC1 (* skoMC1 (* skoMC1 (+ (- 2.) (* skoMC1 (- 6.)))))))))))))))))))

% In GRF format:
(sequent " MetiTarski formula " (antecedent (> (* skoSC1 (+ (* skoMC1 (+ (- 1.) (* skoMC1 3.))) (* skoSC1 (+ (* skoMC1 (+ (- 2.) (* skoMC1 (- 3.)))) (* skoSC1 (+ (* skoMC1 (+ (/ 1. 6.) (* skoMC1 (- 1.)))) (* skoSC1 (+ (* skoMC1 (/ 1. 4.)) (* skoSC1 (* skoSC1 (+ (* skoMC1 (/ (- 1.) 360.)) (* skoSC1 (* skoSC1 (+ (* skoMC1 (/ 1. 20160.)) (* skoSC1 (* skoSC1 (+ (* skoMC1 (/ (- 1.) 1814400.)) (* skoSC1 (* skoSC1 (* skoMC1 (/ 1. 239500800.))))))))))))))))))))) (* skoMC1 (+ (- 2.) (* skoMC1 (- 5.))))) (> skoMC1 0.) (> (* skoSC1 (+ (* skoMC1 (+ (- 1.) (* skoMC1 3.))) (* skoSC1 (+ (* skoMC1 (+ (- 2.) (* skoMC1 (- 3.)))) (* skoSC1 (+ (* skoMC1 (+ (/ 1. 6.) (* skoMC1 (- 1.)))) (* skoSC1 (* skoMC1 (/ 1. 4.))))))))) (* skoMC1 (+ (- 2.) (* skoMC1 (- 5.))))) (> skoSC1 0.) (> (* skoSC1 (+ (* skoMC1 (* skoMC1 skoMC1)) (* skoSC1 (* skoMC1 (* skoMC1 skoMC1))))) 0.) (> (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 2.))) (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (- 1.)))) (* skoSC1 (* skoMC1 (* skoMC1 (* skoMC1 (- 1.))))))))) (* skoMC1 (* skoMC1 (* skoMC1 (- 2.))))) (> (* skoSC1 (* skoMC1 (* skoMC1 skoMC1))) (* skoMC1 (* skoMC1 (* skoMC1 (- 1.))))) (> (* skoMC1 (* skoMC1 (* skoMC1 2.))) 0.) (> skoMC1 0.) (> (* skoSC1 skoMC1) (* skoMC1 (- 1.))) (> (* skoSC1 (* skoMC1 (* skoMC1 (* skoMC1 2.)))) (* skoMC1 (* skoMC1 (* skoMC1 (- 2.)))))) (succedent (<= (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (* skoMC1 12.)))) (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (+ (- 1.) (* skoMC1 6.))))) (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (- 1.)))) (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (/ 1. 12.)))) (* skoSC1 (* skoMC1 (* skoMC1 (* skoMC1 (/ 1. 12.))))))))))))) (* skoMC1 (* skoMC1 (* skoMC1 (+ (- 2.) (* skoMC1 (- 6.)))))))))
-----[end problem]-----

-----[begin problem]-----
% In Mathematica format:
Timing[Resolve[Exists[{skoSC1,skoMC1}, And[skoSC1*(skoMC1*(-1+skoMC1*3)+skoSC1*(skoMC1*(-2+skoMC1*-3)+skoSC1*(skoMC1*((1/6)+skoMC1*-1)+skoSC1*(skoMC1*(1/4)+skoSC1*skoSC1*(skoMC1*(-1/360)+skoSC1*skoSC1*(skoMC1*(1/20160)+skoSC1*skoSC1*(skoMC1*(-1/1814400)+skoSC1*skoSC1*skoMC1*(1/239500800))))))))>skoMC1*(-2+skoMC1*-5),skoMC1>0,skoSC1*(skoMC1*(-1+skoMC1*3)+skoSC1*(skoMC1*(-2+skoMC1*-3)+skoSC1*(skoMC1*((1/6)+skoMC1*-1)+skoSC1*skoMC1*(1/4))))>skoMC1*(-2+skoMC1*-5),skoSC1>0,skoSC1*(skoMC1*skoMC1*skoMC1*-2+skoSC1*(skoMC1*skoMC1*skoMC1+skoSC1*skoMC1*skoMC1*skoMC1))<=skoMC1*skoMC1*skoMC1*2,skoSC1*(skoMC1*skoMC1*skoMC1+skoSC1*skoMC1*skoMC1*skoMC1)>0,skoSC1*(skoMC1*skoMC1*skoMC1*2+skoSC1*(skoMC1*skoMC1*skoMC1*-1+skoSC1*skoMC1*skoMC1*skoMC1*-1))>skoMC1*skoMC1*skoMC1*-2,skoSC1*(skoMC1*skoMC1*skoMC1*-1+skoSC1*skoMC1*skoMC1*skoMC1*-1)<=0,skoSC1*skoMC1*skoMC1*skoMC1*-1<=skoMC1*skoMC1*skoMC1,skoSC1*skoMC1*skoMC1*skoMC1>skoMC1*skoMC1*skoMC1*-1,skoMC1*skoMC1*skoMC1*-2<=0,skoMC1*skoMC1*skoMC1*2>0,skoSC1<=(5/4),2<=skoMC1,0<=skoSC1,skoMC1>0,0<=skoMC1,skoSC1*skoMC1>skoMC1*-1,skoSC1*skoMC1*-1<=skoMC1,skoSC1*skoMC1*skoMC1*skoMC1*2>skoMC1*skoMC1*skoMC1*-2,skoSC1*skoMC1*skoMC1*skoMC1*-2<=skoMC1*skoMC1*skoMC1*2,skoSC1*(skoMC1*skoMC1*skoMC1*skoMC1*12+skoSC1*(skoMC1*skoMC1*skoMC1*(-1+skoMC1*6)+skoSC1*(skoMC1*skoMC1*skoMC1*-1+skoSC1*(skoMC1*skoMC1*skoMC1*(1/12)+skoSC1*skoMC1*skoMC1*skoMC1*(1/12)))))>skoMC1*skoMC1*skoMC1*(-2+skoMC1*-6),skoSC1*(skoMC1*skoMC1*skoMC1*skoMC1*-12+skoSC1*(skoMC1*skoMC1*skoMC1*(1+skoMC1*-6)+skoSC1*(skoMC1*skoMC1*skoMC1+skoSC1*(skoMC1*skoMC1*skoMC1*(-1/12)+skoSC1*skoMC1*skoMC1*skoMC1*(-1/12)))))<=skoMC1*skoMC1*skoMC1*(2+skoMC1*6)]], Reals]]

% In QepcadB format:
(E skoSC1) (E skoMC1) [[(skoMC1 (-2+(skoMC1 (-5))))<(skoSC1 ((skoMC1 (-1+(skoMC1 (3))))+(skoSC1 ((skoMC1 (-2+(skoMC1 (-3))))+(skoSC1 ((skoMC1 (1/6+(skoMC1 (-1))))+(skoSC1 ((skoMC1 (1/4))+(skoSC1 skoSC1 ((skoMC1 (-1/360))+(skoSC1 skoSC1 ((skoMC1 (1/20160))+(skoSC1 skoSC1 ((skoMC1 (-1/1814400))+(skoSC1 skoSC1 skoMC1 (1/239500800))))))))))))))))]/\[[0<skoMC1]/\[[(skoMC1 (-2+(skoMC1 (-5))))<(skoSC1 ((skoMC1 (-1+(skoMC1 (3))))+(skoSC1 ((skoMC1 (-2+(skoMC1 (-3))))+(skoSC1 ((skoMC1 (1/6+(skoMC1 (-1))))+(skoSC1 skoMC1 (1/4))))))))]/\[[0<skoSC1]/\[[(skoSC1 ((skoMC1 skoMC1 skoMC1 (-2))+(skoSC1 ((skoMC1 skoMC1 skoMC1)+(skoSC1 skoMC1 skoMC1 skoMC1)))))<=(skoMC1 skoMC1 skoMC1 (2))]/\[[0<(skoSC1 ((skoMC1 skoMC1 skoMC1)+(skoSC1 skoMC1 skoMC1 skoMC1)))]/\[[(skoMC1 skoMC1 skoMC1 (-2))<(skoSC1 ((skoMC1 skoMC1 skoMC1 (2))+(skoSC1 ((skoMC1 skoMC1 skoMC1 (-1))+(skoSC1 skoMC1 skoMC1 skoMC1 (-1))))))]/\[[(skoSC1 ((skoMC1 skoMC1 skoMC1 (-1))+(skoSC1 skoMC1 skoMC1 skoMC1 (-1))))<=0]/\[[(skoSC1 skoMC1 skoMC1 skoMC1 (-1))<=(skoMC1 skoMC1 skoMC1)]/\[[(skoMC1 skoMC1 skoMC1 (-1))<(skoSC1 skoMC1 skoMC1 skoMC1)]/\[[(skoMC1 skoMC1 skoMC1 (-2))<=0]/\[[0<(skoMC1 skoMC1 skoMC1 (2))]/\[[skoSC1<=5/4]/\[[2<=skoMC1]/\[[0<=skoSC1]/\[[0<skoMC1]/\[[0<=skoMC1]/\[[(skoMC1 (-1))<(skoSC1 skoMC1)]/\[[(skoSC1 skoMC1 (-1))<=skoMC1]/\[[(skoMC1 skoMC1 skoMC1 (-2))<(skoSC1 skoMC1 skoMC1 skoMC1 (2))]/\[[(skoSC1 skoMC1 skoMC1 skoMC1 (-2))<=(skoMC1 skoMC1 skoMC1 (2))]/\[[(skoMC1 skoMC1 skoMC1 (-2+(skoMC1 (-6))))<(skoSC1 ((skoMC1 skoMC1 skoMC1 skoMC1 (12))+(skoSC1 ((skoMC1 skoMC1 skoMC1 (-1+(skoMC1 (6))))+(skoSC1 ((skoMC1 skoMC1 skoMC1 (-1))+(skoSC1 ((skoMC1 skoMC1 skoMC1 (1/12))+(skoSC1 skoMC1 skoMC1 skoMC1 (1/12))))))))))]/\[(skoSC1 ((skoMC1 skoMC1 skoMC1 skoMC1 (-12))+(skoSC1 ((skoMC1 skoMC1 skoMC1 (1+(skoMC1 (-6))))+(skoSC1 ((skoMC1 skoMC1 skoMC1)+(skoSC1 ((skoMC1 skoMC1 skoMC1 (-1/12))+(skoSC1 skoMC1 skoMC1 skoMC1 (-1/12))))))))))<=(skoMC1 skoMC1 skoMC1 (2+(skoMC1 (6))))]]]]]]]]]]]]]]]]]]]]]]].

% In SMTLib2 format:
(declare-fun skoSC1 () Real) (declare-fun skoMC1 () Real) (assert (and (> (* skoSC1 (+ (* skoMC1 (+ (- 1.) (* skoMC1 3.))) (* skoSC1 (+ (* skoMC1 (+ (- 2.) (* skoMC1 (- 3.)))) (* skoSC1 (+ (* skoMC1 (+ (/ 1. 6.) (* skoMC1 (- 1.)))) (* skoSC1 (+ (* skoMC1 (/ 1. 4.)) (* skoSC1 (* skoSC1 (+ (* skoMC1 (/ (- 1.) 360.)) (* skoSC1 (* skoSC1 (+ (* skoMC1 (/ 1. 20160.)) (* skoSC1 (* skoSC1 (+ (* skoMC1 (/ (- 1.) 1814400.)) (* skoSC1 (* skoSC1 (* skoMC1 (/ 1. 239500800.))))))))))))))))))))) (* skoMC1 (+ (- 2.) (* skoMC1 (- 5.))))) (and (> skoMC1 0.) (and (> (* skoSC1 (+ (* skoMC1 (+ (- 1.) (* skoMC1 3.))) (* skoSC1 (+ (* skoMC1 (+ (- 2.) (* skoMC1 (- 3.)))) (* skoSC1 (+ (* skoMC1 (+ (/ 1. 6.) (* skoMC1 (- 1.)))) (* skoSC1 (* skoMC1 (/ 1. 4.))))))))) (* skoMC1 (+ (- 2.) (* skoMC1 (- 5.))))) (and (> skoSC1 0.) (and (<= (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (- 2.)))) (* skoSC1 (+ (* skoMC1 (* skoMC1 skoMC1)) (* skoSC1 (* skoMC1 (* skoMC1 skoMC1))))))) (* skoMC1 (* skoMC1 (* skoMC1 2.)))) (and (> (* skoSC1 (+ (* skoMC1 (* skoMC1 skoMC1)) (* skoSC1 (* skoMC1 (* skoMC1 skoMC1))))) 0.) (and (> (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 2.))) (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (- 1.)))) (* skoSC1 (* skoMC1 (* skoMC1 (* skoMC1 (- 1.))))))))) (* skoMC1 (* skoMC1 (* skoMC1 (- 2.))))) (and (<= (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (- 1.)))) (* skoSC1 (* skoMC1 (* skoMC1 (* skoMC1 (- 1.))))))) 0.) (and (<= (* skoSC1 (* skoMC1 (* skoMC1 (* skoMC1 (- 1.))))) (* skoMC1 (* skoMC1 skoMC1))) (and (> (* skoSC1 (* skoMC1 (* skoMC1 skoMC1))) (* skoMC1 (* skoMC1 (* skoMC1 (- 1.))))) (and (<= (* skoMC1 (* skoMC1 (* skoMC1 (- 2.)))) 0.) (and (> (* skoMC1 (* skoMC1 (* skoMC1 2.))) 0.) (and (<= skoSC1 (/ 5. 4.)) (and (<= 2. skoMC1) (and (<= 0. skoSC1) (and (> skoMC1 0.) (and (<= 0. skoMC1) (and (> (* skoSC1 skoMC1) (* skoMC1 (- 1.))) (and (<= (* skoSC1 (* skoMC1 (- 1.))) skoMC1) (and (> (* skoSC1 (* skoMC1 (* skoMC1 (* skoMC1 2.)))) (* skoMC1 (* skoMC1 (* skoMC1 (- 2.))))) (and (<= (* skoSC1 (* skoMC1 (* skoMC1 (* skoMC1 (- 2.))))) (* skoMC1 (* skoMC1 (* skoMC1 2.)))) (and (> (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (* skoMC1 12.)))) (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (+ (- 1.) (* skoMC1 6.))))) (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (- 1.)))) (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (/ 1. 12.)))) (* skoSC1 (* skoMC1 (* skoMC1 (* skoMC1 (/ 1. 12.))))))))))))) (* skoMC1 (* skoMC1 (* skoMC1 (+ (- 2.) (* skoMC1 (- 6.))))))) (<= (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (* skoMC1 (- 12.))))) (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (+ 1. (* skoMC1 (- 6.)))))) (* skoSC1 (+ (* skoMC1 (* skoMC1 skoMC1)) (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (/ (- 1.) 12.)))) (* skoSC1 (* skoMC1 (* skoMC1 (* skoMC1 (/ (- 1.) 12.))))))))))))) (* skoMC1 (* skoMC1 (* skoMC1 (+ 2. (* skoMC1 6.)))))))))))))))))))))))))))))

% In GRF format:
(sequent " MetiTarski formula " (antecedent (> (* skoSC1 (+ (* skoMC1 (+ (- 1.) (* skoMC1 3.))) (* skoSC1 (+ (* skoMC1 (+ (- 2.) (* skoMC1 (- 3.)))) (* skoSC1 (+ (* skoMC1 (+ (/ 1. 6.) (* skoMC1 (- 1.)))) (* skoSC1 (+ (* skoMC1 (/ 1. 4.)) (* skoSC1 (* skoSC1 (+ (* skoMC1 (/ (- 1.) 360.)) (* skoSC1 (* skoSC1 (+ (* skoMC1 (/ 1. 20160.)) (* skoSC1 (* skoSC1 (+ (* skoMC1 (/ (- 1.) 1814400.)) (* skoSC1 (* skoSC1 (* skoMC1 (/ 1. 239500800.))))))))))))))))))))) (* skoMC1 (+ (- 2.) (* skoMC1 (- 5.))))) (> skoMC1 0.) (> (* skoSC1 (+ (* skoMC1 (+ (- 1.) (* skoMC1 3.))) (* skoSC1 (+ (* skoMC1 (+ (- 2.) (* skoMC1 (- 3.)))) (* skoSC1 (+ (* skoMC1 (+ (/ 1. 6.) (* skoMC1 (- 1.)))) (* skoSC1 (* skoMC1 (/ 1. 4.))))))))) (* skoMC1 (+ (- 2.) (* skoMC1 (- 5.))))) (> skoSC1 0.) (<= (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (- 2.)))) (* skoSC1 (+ (* skoMC1 (* skoMC1 skoMC1)) (* skoSC1 (* skoMC1 (* skoMC1 skoMC1))))))) (* skoMC1 (* skoMC1 (* skoMC1 2.)))) (> (* skoSC1 (+ (* skoMC1 (* skoMC1 skoMC1)) (* skoSC1 (* skoMC1 (* skoMC1 skoMC1))))) 0.) (> (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 2.))) (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (- 1.)))) (* skoSC1 (* skoMC1 (* skoMC1 (* skoMC1 (- 1.))))))))) (* skoMC1 (* skoMC1 (* skoMC1 (- 2.))))) (<= (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (- 1.)))) (* skoSC1 (* skoMC1 (* skoMC1 (* skoMC1 (- 1.))))))) 0.) (<= (* skoSC1 (* skoMC1 (* skoMC1 (* skoMC1 (- 1.))))) (* skoMC1 (* skoMC1 skoMC1))) (> (* skoSC1 (* skoMC1 (* skoMC1 skoMC1))) (* skoMC1 (* skoMC1 (* skoMC1 (- 1.))))) (<= (* skoMC1 (* skoMC1 (* skoMC1 (- 2.)))) 0.) (> (* skoMC1 (* skoMC1 (* skoMC1 2.))) 0.) (<= skoSC1 (/ 5. 4.)) (<= 2. skoMC1) (<= 0. skoSC1) (> skoMC1 0.) (<= 0. skoMC1) (> (* skoSC1 skoMC1) (* skoMC1 (- 1.))) (<= (* skoSC1 (* skoMC1 (- 1.))) skoMC1) (> (* skoSC1 (* skoMC1 (* skoMC1 (* skoMC1 2.)))) (* skoMC1 (* skoMC1 (* skoMC1 (- 2.))))) (<= (* skoSC1 (* skoMC1 (* skoMC1 (* skoMC1 (- 2.))))) (* skoMC1 (* skoMC1 (* skoMC1 2.)))) (> (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (* skoMC1 12.)))) (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (+ (- 1.) (* skoMC1 6.))))) (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (- 1.)))) (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (/ 1. 12.)))) (* skoSC1 (* skoMC1 (* skoMC1 (* skoMC1 (/ 1. 12.))))))))))))) (* skoMC1 (* skoMC1 (* skoMC1 (+ (- 2.) (* skoMC1 (- 6.)))))))) (succedent (> (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (* skoMC1 (- 12.))))) (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (+ 1. (* skoMC1 (- 6.)))))) (* skoSC1 (+ (* skoMC1 (* skoMC1 skoMC1)) (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (/ (- 1.) 12.)))) (* skoSC1 (* skoMC1 (* skoMC1 (* skoMC1 (/ (- 1.) 12.))))))))))))) (* skoMC1 (* skoMC1 (* skoMC1 (+ 2. (* skoMC1 6.))))))))
-----[end problem]-----

-----[begin problem]-----
% In Mathematica format:
Timing[Resolve[Exists[{skoSC1,skoMC1}, And[skoSC1*(skoMC1*(-1+skoMC1*3)+skoSC1*(skoMC1*(-2+skoMC1*-3)+skoSC1*(skoMC1*((1/6)+skoMC1*-1)+skoSC1*(skoMC1*(1/4)+skoSC1*skoSC1*(skoMC1*(-1/360)+skoSC1*skoSC1*(skoMC1*(1/20160)+skoSC1*skoSC1*(skoMC1*(-1/1814400)+skoSC1*skoSC1*skoMC1*(1/239500800))))))))<=skoMC1*(-2+skoMC1*-5),skoMC1<=0,skoSC1*(skoMC1*(-1+skoMC1*3)+skoSC1*(skoMC1*(-2+skoMC1*-3)+skoSC1*(skoMC1*((1/6)+skoMC1*-1)+skoSC1*skoMC1*(1/4))))>skoMC1*(-2+skoMC1*-5),skoSC1>0,skoSC1*(skoMC1*skoMC1*skoMC1*-2+skoSC1*(skoMC1*skoMC1*skoMC1+skoSC1*skoMC1*skoMC1*skoMC1))<=skoMC1*skoMC1*skoMC1*2,skoSC1*(skoMC1*skoMC1*skoMC1+skoSC1*skoMC1*skoMC1*skoMC1)>0,skoSC1*(skoMC1*skoMC1*skoMC1*2+skoSC1*(skoMC1*skoMC1*skoMC1*-1+skoSC1*skoMC1*skoMC1*skoMC1*-1))>skoMC1*skoMC1*skoMC1*-2,skoSC1*(skoMC1*skoMC1*skoMC1*-1+skoSC1*skoMC1*skoMC1*skoMC1*-1)<=0,skoSC1*skoMC1*skoMC1*skoMC1*-1<=skoMC1*skoMC1*skoMC1,skoSC1*skoMC1*skoMC1*skoMC1>skoMC1*skoMC1*skoMC1*-1,skoMC1*skoMC1*skoMC1*-2<=0,skoMC1*skoMC1*skoMC1*2>0,skoSC1<=(5/4),2<=skoMC1,0<=skoSC1,skoMC1>0,0<=skoMC1,skoSC1*skoMC1>skoMC1*-1,skoSC1*skoMC1*-1<=skoMC1,skoSC1*skoMC1*skoMC1*skoMC1*2>skoMC1*skoMC1*skoMC1*-2,skoSC1*skoMC1*skoMC1*skoMC1*-2<=skoMC1*skoMC1*skoMC1*2,skoSC1*(skoMC1*skoMC1*skoMC1*skoMC1*12+skoSC1*(skoMC1*skoMC1*skoMC1*(-1+skoMC1*6)+skoSC1*(skoMC1*skoMC1*skoMC1*-1+skoSC1*(skoMC1*skoMC1*skoMC1*(1/12)+skoSC1*skoMC1*skoMC1*skoMC1*(1/12)))))>skoMC1*skoMC1*skoMC1*(-2+skoMC1*-6),skoSC1*(skoMC1*skoMC1*skoMC1*skoMC1*-12+skoSC1*(skoMC1*skoMC1*skoMC1*(1+skoMC1*-6)+skoSC1*(skoMC1*skoMC1*skoMC1+skoSC1*(skoMC1*skoMC1*skoMC1*(-1/12)+skoSC1*skoMC1*skoMC1*skoMC1*(-1/12)))))<=skoMC1*skoMC1*skoMC1*(2+skoMC1*6)]], Reals]]

% In QepcadB format:
(E skoSC1) (E skoMC1) [[(skoSC1 ((skoMC1 (-1+(skoMC1 (3))))+(skoSC1 ((skoMC1 (-2+(skoMC1 (-3))))+(skoSC1 ((skoMC1 (1/6+(skoMC1 (-1))))+(skoSC1 ((skoMC1 (1/4))+(skoSC1 skoSC1 ((skoMC1 (-1/360))+(skoSC1 skoSC1 ((skoMC1 (1/20160))+(skoSC1 skoSC1 ((skoMC1 (-1/1814400))+(skoSC1 skoSC1 skoMC1 (1/239500800))))))))))))))))<=(skoMC1 (-2+(skoMC1 (-5))))]/\[[skoMC1<=0]/\[[(skoMC1 (-2+(skoMC1 (-5))))<(skoSC1 ((skoMC1 (-1+(skoMC1 (3))))+(skoSC1 ((skoMC1 (-2+(skoMC1 (-3))))+(skoSC1 ((skoMC1 (1/6+(skoMC1 (-1))))+(skoSC1 skoMC1 (1/4))))))))]/\[[0<skoSC1]/\[[(skoSC1 ((skoMC1 skoMC1 skoMC1 (-2))+(skoSC1 ((skoMC1 skoMC1 skoMC1)+(skoSC1 skoMC1 skoMC1 skoMC1)))))<=(skoMC1 skoMC1 skoMC1 (2))]/\[[0<(skoSC1 ((skoMC1 skoMC1 skoMC1)+(skoSC1 skoMC1 skoMC1 skoMC1)))]/\[[(skoMC1 skoMC1 skoMC1 (-2))<(skoSC1 ((skoMC1 skoMC1 skoMC1 (2))+(skoSC1 ((skoMC1 skoMC1 skoMC1 (-1))+(skoSC1 skoMC1 skoMC1 skoMC1 (-1))))))]/\[[(skoSC1 ((skoMC1 skoMC1 skoMC1 (-1))+(skoSC1 skoMC1 skoMC1 skoMC1 (-1))))<=0]/\[[(skoSC1 skoMC1 skoMC1 skoMC1 (-1))<=(skoMC1 skoMC1 skoMC1)]/\[[(skoMC1 skoMC1 skoMC1 (-1))<(skoSC1 skoMC1 skoMC1 skoMC1)]/\[[(skoMC1 skoMC1 skoMC1 (-2))<=0]/\[[0<(skoMC1 skoMC1 skoMC1 (2))]/\[[skoSC1<=5/4]/\[[2<=skoMC1]/\[[0<=skoSC1]/\[[0<skoMC1]/\[[0<=skoMC1]/\[[(skoMC1 (-1))<(skoSC1 skoMC1)]/\[[(skoSC1 skoMC1 (-1))<=skoMC1]/\[[(skoMC1 skoMC1 skoMC1 (-2))<(skoSC1 skoMC1 skoMC1 skoMC1 (2))]/\[[(skoSC1 skoMC1 skoMC1 skoMC1 (-2))<=(skoMC1 skoMC1 skoMC1 (2))]/\[[(skoMC1 skoMC1 skoMC1 (-2+(skoMC1 (-6))))<(skoSC1 ((skoMC1 skoMC1 skoMC1 skoMC1 (12))+(skoSC1 ((skoMC1 skoMC1 skoMC1 (-1+(skoMC1 (6))))+(skoSC1 ((skoMC1 skoMC1 skoMC1 (-1))+(skoSC1 ((skoMC1 skoMC1 skoMC1 (1/12))+(skoSC1 skoMC1 skoMC1 skoMC1 (1/12))))))))))]/\[(skoSC1 ((skoMC1 skoMC1 skoMC1 skoMC1 (-12))+(skoSC1 ((skoMC1 skoMC1 skoMC1 (1+(skoMC1 (-6))))+(skoSC1 ((skoMC1 skoMC1 skoMC1)+(skoSC1 ((skoMC1 skoMC1 skoMC1 (-1/12))+(skoSC1 skoMC1 skoMC1 skoMC1 (-1/12))))))))))<=(skoMC1 skoMC1 skoMC1 (2+(skoMC1 (6))))]]]]]]]]]]]]]]]]]]]]]]].

% In SMTLib2 format:
(declare-fun skoSC1 () Real) (declare-fun skoMC1 () Real) (assert (and (<= (* skoSC1 (+ (* skoMC1 (+ (- 1.) (* skoMC1 3.))) (* skoSC1 (+ (* skoMC1 (+ (- 2.) (* skoMC1 (- 3.)))) (* skoSC1 (+ (* skoMC1 (+ (/ 1. 6.) (* skoMC1 (- 1.)))) (* skoSC1 (+ (* skoMC1 (/ 1. 4.)) (* skoSC1 (* skoSC1 (+ (* skoMC1 (/ (- 1.) 360.)) (* skoSC1 (* skoSC1 (+ (* skoMC1 (/ 1. 20160.)) (* skoSC1 (* skoSC1 (+ (* skoMC1 (/ (- 1.) 1814400.)) (* skoSC1 (* skoSC1 (* skoMC1 (/ 1. 239500800.))))))))))))))))))))) (* skoMC1 (+ (- 2.) (* skoMC1 (- 5.))))) (and (<= skoMC1 0.) (and (> (* skoSC1 (+ (* skoMC1 (+ (- 1.) (* skoMC1 3.))) (* skoSC1 (+ (* skoMC1 (+ (- 2.) (* skoMC1 (- 3.)))) (* skoSC1 (+ (* skoMC1 (+ (/ 1. 6.) (* skoMC1 (- 1.)))) (* skoSC1 (* skoMC1 (/ 1. 4.))))))))) (* skoMC1 (+ (- 2.) (* skoMC1 (- 5.))))) (and (> skoSC1 0.) (and (<= (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (- 2.)))) (* skoSC1 (+ (* skoMC1 (* skoMC1 skoMC1)) (* skoSC1 (* skoMC1 (* skoMC1 skoMC1))))))) (* skoMC1 (* skoMC1 (* skoMC1 2.)))) (and (> (* skoSC1 (+ (* skoMC1 (* skoMC1 skoMC1)) (* skoSC1 (* skoMC1 (* skoMC1 skoMC1))))) 0.) (and (> (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 2.))) (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (- 1.)))) (* skoSC1 (* skoMC1 (* skoMC1 (* skoMC1 (- 1.))))))))) (* skoMC1 (* skoMC1 (* skoMC1 (- 2.))))) (and (<= (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (- 1.)))) (* skoSC1 (* skoMC1 (* skoMC1 (* skoMC1 (- 1.))))))) 0.) (and (<= (* skoSC1 (* skoMC1 (* skoMC1 (* skoMC1 (- 1.))))) (* skoMC1 (* skoMC1 skoMC1))) (and (> (* skoSC1 (* skoMC1 (* skoMC1 skoMC1))) (* skoMC1 (* skoMC1 (* skoMC1 (- 1.))))) (and (<= (* skoMC1 (* skoMC1 (* skoMC1 (- 2.)))) 0.) (and (> (* skoMC1 (* skoMC1 (* skoMC1 2.))) 0.) (and (<= skoSC1 (/ 5. 4.)) (and (<= 2. skoMC1) (and (<= 0. skoSC1) (and (> skoMC1 0.) (and (<= 0. skoMC1) (and (> (* skoSC1 skoMC1) (* skoMC1 (- 1.))) (and (<= (* skoSC1 (* skoMC1 (- 1.))) skoMC1) (and (> (* skoSC1 (* skoMC1 (* skoMC1 (* skoMC1 2.)))) (* skoMC1 (* skoMC1 (* skoMC1 (- 2.))))) (and (<= (* skoSC1 (* skoMC1 (* skoMC1 (* skoMC1 (- 2.))))) (* skoMC1 (* skoMC1 (* skoMC1 2.)))) (and (> (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (* skoMC1 12.)))) (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (+ (- 1.) (* skoMC1 6.))))) (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (- 1.)))) (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (/ 1. 12.)))) (* skoSC1 (* skoMC1 (* skoMC1 (* skoMC1 (/ 1. 12.))))))))))))) (* skoMC1 (* skoMC1 (* skoMC1 (+ (- 2.) (* skoMC1 (- 6.))))))) (<= (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (* skoMC1 (- 12.))))) (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (+ 1. (* skoMC1 (- 6.)))))) (* skoSC1 (+ (* skoMC1 (* skoMC1 skoMC1)) (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (/ (- 1.) 12.)))) (* skoSC1 (* skoMC1 (* skoMC1 (* skoMC1 (/ (- 1.) 12.))))))))))))) (* skoMC1 (* skoMC1 (* skoMC1 (+ 2. (* skoMC1 6.)))))))))))))))))))))))))))))

% In GRF format:
(sequent " MetiTarski formula " (antecedent (<= (* skoSC1 (+ (* skoMC1 (+ (- 1.) (* skoMC1 3.))) (* skoSC1 (+ (* skoMC1 (+ (- 2.) (* skoMC1 (- 3.)))) (* skoSC1 (+ (* skoMC1 (+ (/ 1. 6.) (* skoMC1 (- 1.)))) (* skoSC1 (+ (* skoMC1 (/ 1. 4.)) (* skoSC1 (* skoSC1 (+ (* skoMC1 (/ (- 1.) 360.)) (* skoSC1 (* skoSC1 (+ (* skoMC1 (/ 1. 20160.)) (* skoSC1 (* skoSC1 (+ (* skoMC1 (/ (- 1.) 1814400.)) (* skoSC1 (* skoSC1 (* skoMC1 (/ 1. 239500800.))))))))))))))))))))) (* skoMC1 (+ (- 2.) (* skoMC1 (- 5.))))) (<= skoMC1 0.) (> (* skoSC1 (+ (* skoMC1 (+ (- 1.) (* skoMC1 3.))) (* skoSC1 (+ (* skoMC1 (+ (- 2.) (* skoMC1 (- 3.)))) (* skoSC1 (+ (* skoMC1 (+ (/ 1. 6.) (* skoMC1 (- 1.)))) (* skoSC1 (* skoMC1 (/ 1. 4.))))))))) (* skoMC1 (+ (- 2.) (* skoMC1 (- 5.))))) (> skoSC1 0.) (<= (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (- 2.)))) (* skoSC1 (+ (* skoMC1 (* skoMC1 skoMC1)) (* skoSC1 (* skoMC1 (* skoMC1 skoMC1))))))) (* skoMC1 (* skoMC1 (* skoMC1 2.)))) (> (* skoSC1 (+ (* skoMC1 (* skoMC1 skoMC1)) (* skoSC1 (* skoMC1 (* skoMC1 skoMC1))))) 0.) (> (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 2.))) (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (- 1.)))) (* skoSC1 (* skoMC1 (* skoMC1 (* skoMC1 (- 1.))))))))) (* skoMC1 (* skoMC1 (* skoMC1 (- 2.))))) (<= (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (- 1.)))) (* skoSC1 (* skoMC1 (* skoMC1 (* skoMC1 (- 1.))))))) 0.) (<= (* skoSC1 (* skoMC1 (* skoMC1 (* skoMC1 (- 1.))))) (* skoMC1 (* skoMC1 skoMC1))) (> (* skoSC1 (* skoMC1 (* skoMC1 skoMC1))) (* skoMC1 (* skoMC1 (* skoMC1 (- 1.))))) (<= (* skoMC1 (* skoMC1 (* skoMC1 (- 2.)))) 0.) (> (* skoMC1 (* skoMC1 (* skoMC1 2.))) 0.) (<= skoSC1 (/ 5. 4.)) (<= 2. skoMC1) (<= 0. skoSC1) (> skoMC1 0.) (<= 0. skoMC1) (> (* skoSC1 skoMC1) (* skoMC1 (- 1.))) (<= (* skoSC1 (* skoMC1 (- 1.))) skoMC1) (> (* skoSC1 (* skoMC1 (* skoMC1 (* skoMC1 2.)))) (* skoMC1 (* skoMC1 (* skoMC1 (- 2.))))) (<= (* skoSC1 (* skoMC1 (* skoMC1 (* skoMC1 (- 2.))))) (* skoMC1 (* skoMC1 (* skoMC1 2.)))) (> (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (* skoMC1 12.)))) (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (+ (- 1.) (* skoMC1 6.))))) (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (- 1.)))) (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (/ 1. 12.)))) (* skoSC1 (* skoMC1 (* skoMC1 (* skoMC1 (/ 1. 12.))))))))))))) (* skoMC1 (* skoMC1 (* skoMC1 (+ (- 2.) (* skoMC1 (- 6.)))))))) (succedent (> (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (* skoMC1 (- 12.))))) (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (+ 1. (* skoMC1 (- 6.)))))) (* skoSC1 (+ (* skoMC1 (* skoMC1 skoMC1)) (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (/ (- 1.) 12.)))) (* skoSC1 (* skoMC1 (* skoMC1 (* skoMC1 (/ (- 1.) 12.))))))))))))) (* skoMC1 (* skoMC1 (* skoMC1 (+ 2. (* skoMC1 6.))))))))
-----[end problem]-----

-----[begin problem]-----
% In Mathematica format:
Timing[Resolve[Exists[{skoSC1,skoMC1}, And[0<=skoMC1,skoSC1*(skoMC1*(-1+skoMC1*3)+skoSC1*(skoMC1*(-2+skoMC1*-3)+skoSC1*(skoMC1*((1/6)+skoMC1*-1)+skoSC1*skoMC1*(1/4))))>skoMC1*(-2+skoMC1*-5),skoSC1>0,skoSC1*(skoMC1*skoMC1*skoMC1*-2+skoSC1*(skoMC1*skoMC1*skoMC1+skoSC1*skoMC1*skoMC1*skoMC1))<=skoMC1*skoMC1*skoMC1*2,skoSC1*(skoMC1*skoMC1*skoMC1+skoSC1*skoMC1*skoMC1*skoMC1)>0,skoSC1*(skoMC1*skoMC1*skoMC1*2+skoSC1*(skoMC1*skoMC1*skoMC1*-1+skoSC1*skoMC1*skoMC1*skoMC1*-1))>skoMC1*skoMC1*skoMC1*-2,skoSC1*(skoMC1*skoMC1*skoMC1*-1+skoSC1*skoMC1*skoMC1*skoMC1*-1)<=0,skoSC1*skoMC1*skoMC1*skoMC1*-1<=skoMC1*skoMC1*skoMC1,skoSC1*skoMC1*skoMC1*skoMC1>skoMC1*skoMC1*skoMC1*-1,skoMC1*skoMC1*skoMC1*-2<=0,skoMC1*skoMC1*skoMC1*2>0,skoSC1<=(5/4),2<=skoMC1,0<=skoSC1,skoMC1>0,0<=skoMC1,skoSC1*skoMC1>skoMC1*-1,skoSC1*skoMC1*-1<=skoMC1,skoSC1*skoMC1*skoMC1*skoMC1*2>skoMC1*skoMC1*skoMC1*-2,skoSC1*skoMC1*skoMC1*skoMC1*-2<=skoMC1*skoMC1*skoMC1*2,skoSC1*(skoMC1*skoMC1*skoMC1*skoMC1*12+skoSC1*(skoMC1*skoMC1*skoMC1*(-1+skoMC1*6)+skoSC1*(skoMC1*skoMC1*skoMC1*-1+skoSC1*(skoMC1*skoMC1*skoMC1*(1/12)+skoSC1*skoMC1*skoMC1*skoMC1*(1/12)))))>skoMC1*skoMC1*skoMC1*(-2+skoMC1*-6),skoSC1*(skoMC1*skoMC1*skoMC1*skoMC1*-12+skoSC1*(skoMC1*skoMC1*skoMC1*(1+skoMC1*-6)+skoSC1*(skoMC1*skoMC1*skoMC1+skoSC1*(skoMC1*skoMC1*skoMC1*(-1/12)+skoSC1*skoMC1*skoMC1*skoMC1*(-1/12)))))<=skoMC1*skoMC1*skoMC1*(2+skoMC1*6)]], Reals]]

% In QepcadB format:
(E skoSC1) (E skoMC1) [[0<=skoMC1]/\[[(skoMC1 (-2+(skoMC1 (-5))))<(skoSC1 ((skoMC1 (-1+(skoMC1 (3))))+(skoSC1 ((skoMC1 (-2+(skoMC1 (-3))))+(skoSC1 ((skoMC1 (1/6+(skoMC1 (-1))))+(skoSC1 skoMC1 (1/4))))))))]/\[[0<skoSC1]/\[[(skoSC1 ((skoMC1 skoMC1 skoMC1 (-2))+(skoSC1 ((skoMC1 skoMC1 skoMC1)+(skoSC1 skoMC1 skoMC1 skoMC1)))))<=(skoMC1 skoMC1 skoMC1 (2))]/\[[0<(skoSC1 ((skoMC1 skoMC1 skoMC1)+(skoSC1 skoMC1 skoMC1 skoMC1)))]/\[[(skoMC1 skoMC1 skoMC1 (-2))<(skoSC1 ((skoMC1 skoMC1 skoMC1 (2))+(skoSC1 ((skoMC1 skoMC1 skoMC1 (-1))+(skoSC1 skoMC1 skoMC1 skoMC1 (-1))))))]/\[[(skoSC1 ((skoMC1 skoMC1 skoMC1 (-1))+(skoSC1 skoMC1 skoMC1 skoMC1 (-1))))<=0]/\[[(skoSC1 skoMC1 skoMC1 skoMC1 (-1))<=(skoMC1 skoMC1 skoMC1)]/\[[(skoMC1 skoMC1 skoMC1 (-1))<(skoSC1 skoMC1 skoMC1 skoMC1)]/\[[(skoMC1 skoMC1 skoMC1 (-2))<=0]/\[[0<(skoMC1 skoMC1 skoMC1 (2))]/\[[skoSC1<=5/4]/\[[2<=skoMC1]/\[[0<=skoSC1]/\[[0<skoMC1]/\[[0<=skoMC1]/\[[(skoMC1 (-1))<(skoSC1 skoMC1)]/\[[(skoSC1 skoMC1 (-1))<=skoMC1]/\[[(skoMC1 skoMC1 skoMC1 (-2))<(skoSC1 skoMC1 skoMC1 skoMC1 (2))]/\[[(skoSC1 skoMC1 skoMC1 skoMC1 (-2))<=(skoMC1 skoMC1 skoMC1 (2))]/\[[(skoMC1 skoMC1 skoMC1 (-2+(skoMC1 (-6))))<(skoSC1 ((skoMC1 skoMC1 skoMC1 skoMC1 (12))+(skoSC1 ((skoMC1 skoMC1 skoMC1 (-1+(skoMC1 (6))))+(skoSC1 ((skoMC1 skoMC1 skoMC1 (-1))+(skoSC1 ((skoMC1 skoMC1 skoMC1 (1/12))+(skoSC1 skoMC1 skoMC1 skoMC1 (1/12))))))))))]/\[(skoSC1 ((skoMC1 skoMC1 skoMC1 skoMC1 (-12))+(skoSC1 ((skoMC1 skoMC1 skoMC1 (1+(skoMC1 (-6))))+(skoSC1 ((skoMC1 skoMC1 skoMC1)+(skoSC1 ((skoMC1 skoMC1 skoMC1 (-1/12))+(skoSC1 skoMC1 skoMC1 skoMC1 (-1/12))))))))))<=(skoMC1 skoMC1 skoMC1 (2+(skoMC1 (6))))]]]]]]]]]]]]]]]]]]]]]].

% In SMTLib2 format:
(declare-fun skoSC1 () Real) (declare-fun skoMC1 () Real) (assert (and (<= 0. skoMC1) (and (> (* skoSC1 (+ (* skoMC1 (+ (- 1.) (* skoMC1 3.))) (* skoSC1 (+ (* skoMC1 (+ (- 2.) (* skoMC1 (- 3.)))) (* skoSC1 (+ (* skoMC1 (+ (/ 1. 6.) (* skoMC1 (- 1.)))) (* skoSC1 (* skoMC1 (/ 1. 4.))))))))) (* skoMC1 (+ (- 2.) (* skoMC1 (- 5.))))) (and (> skoSC1 0.) (and (<= (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (- 2.)))) (* skoSC1 (+ (* skoMC1 (* skoMC1 skoMC1)) (* skoSC1 (* skoMC1 (* skoMC1 skoMC1))))))) (* skoMC1 (* skoMC1 (* skoMC1 2.)))) (and (> (* skoSC1 (+ (* skoMC1 (* skoMC1 skoMC1)) (* skoSC1 (* skoMC1 (* skoMC1 skoMC1))))) 0.) (and (> (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 2.))) (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (- 1.)))) (* skoSC1 (* skoMC1 (* skoMC1 (* skoMC1 (- 1.))))))))) (* skoMC1 (* skoMC1 (* skoMC1 (- 2.))))) (and (<= (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (- 1.)))) (* skoSC1 (* skoMC1 (* skoMC1 (* skoMC1 (- 1.))))))) 0.) (and (<= (* skoSC1 (* skoMC1 (* skoMC1 (* skoMC1 (- 1.))))) (* skoMC1 (* skoMC1 skoMC1))) (and (> (* skoSC1 (* skoMC1 (* skoMC1 skoMC1))) (* skoMC1 (* skoMC1 (* skoMC1 (- 1.))))) (and (<= (* skoMC1 (* skoMC1 (* skoMC1 (- 2.)))) 0.) (and (> (* skoMC1 (* skoMC1 (* skoMC1 2.))) 0.) (and (<= skoSC1 (/ 5. 4.)) (and (<= 2. skoMC1) (and (<= 0. skoSC1) (and (> skoMC1 0.) (and (<= 0. skoMC1) (and (> (* skoSC1 skoMC1) (* skoMC1 (- 1.))) (and (<= (* skoSC1 (* skoMC1 (- 1.))) skoMC1) (and (> (* skoSC1 (* skoMC1 (* skoMC1 (* skoMC1 2.)))) (* skoMC1 (* skoMC1 (* skoMC1 (- 2.))))) (and (<= (* skoSC1 (* skoMC1 (* skoMC1 (* skoMC1 (- 2.))))) (* skoMC1 (* skoMC1 (* skoMC1 2.)))) (and (> (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (* skoMC1 12.)))) (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (+ (- 1.) (* skoMC1 6.))))) (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (- 1.)))) (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (/ 1. 12.)))) (* skoSC1 (* skoMC1 (* skoMC1 (* skoMC1 (/ 1. 12.))))))))))))) (* skoMC1 (* skoMC1 (* skoMC1 (+ (- 2.) (* skoMC1 (- 6.))))))) (<= (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (* skoMC1 (- 12.))))) (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (+ 1. (* skoMC1 (- 6.)))))) (* skoSC1 (+ (* skoMC1 (* skoMC1 skoMC1)) (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (/ (- 1.) 12.)))) (* skoSC1 (* skoMC1 (* skoMC1 (* skoMC1 (/ (- 1.) 12.))))))))))))) (* skoMC1 (* skoMC1 (* skoMC1 (+ 2. (* skoMC1 6.))))))))))))))))))))))))))))

% In GRF format:
(sequent " MetiTarski formula " (antecedent (<= 0. skoMC1) (> (* skoSC1 (+ (* skoMC1 (+ (- 1.) (* skoMC1 3.))) (* skoSC1 (+ (* skoMC1 (+ (- 2.) (* skoMC1 (- 3.)))) (* skoSC1 (+ (* skoMC1 (+ (/ 1. 6.) (* skoMC1 (- 1.)))) (* skoSC1 (* skoMC1 (/ 1. 4.))))))))) (* skoMC1 (+ (- 2.) (* skoMC1 (- 5.))))) (> skoSC1 0.) (<= (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (- 2.)))) (* skoSC1 (+ (* skoMC1 (* skoMC1 skoMC1)) (* skoSC1 (* skoMC1 (* skoMC1 skoMC1))))))) (* skoMC1 (* skoMC1 (* skoMC1 2.)))) (> (* skoSC1 (+ (* skoMC1 (* skoMC1 skoMC1)) (* skoSC1 (* skoMC1 (* skoMC1 skoMC1))))) 0.) (> (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 2.))) (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (- 1.)))) (* skoSC1 (* skoMC1 (* skoMC1 (* skoMC1 (- 1.))))))))) (* skoMC1 (* skoMC1 (* skoMC1 (- 2.))))) (<= (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (- 1.)))) (* skoSC1 (* skoMC1 (* skoMC1 (* skoMC1 (- 1.))))))) 0.) (<= (* skoSC1 (* skoMC1 (* skoMC1 (* skoMC1 (- 1.))))) (* skoMC1 (* skoMC1 skoMC1))) (> (* skoSC1 (* skoMC1 (* skoMC1 skoMC1))) (* skoMC1 (* skoMC1 (* skoMC1 (- 1.))))) (<= (* skoMC1 (* skoMC1 (* skoMC1 (- 2.)))) 0.) (> (* skoMC1 (* skoMC1 (* skoMC1 2.))) 0.) (<= skoSC1 (/ 5. 4.)) (<= 2. skoMC1) (<= 0. skoSC1) (> skoMC1 0.) (<= 0. skoMC1) (> (* skoSC1 skoMC1) (* skoMC1 (- 1.))) (<= (* skoSC1 (* skoMC1 (- 1.))) skoMC1) (> (* skoSC1 (* skoMC1 (* skoMC1 (* skoMC1 2.)))) (* skoMC1 (* skoMC1 (* skoMC1 (- 2.))))) (<= (* skoSC1 (* skoMC1 (* skoMC1 (* skoMC1 (- 2.))))) (* skoMC1 (* skoMC1 (* skoMC1 2.)))) (> (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (* skoMC1 12.)))) (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (+ (- 1.) (* skoMC1 6.))))) (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (- 1.)))) (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (/ 1. 12.)))) (* skoSC1 (* skoMC1 (* skoMC1 (* skoMC1 (/ 1. 12.))))))))))))) (* skoMC1 (* skoMC1 (* skoMC1 (+ (- 2.) (* skoMC1 (- 6.)))))))) (succedent (> (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (* skoMC1 (- 12.))))) (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (+ 1. (* skoMC1 (- 6.)))))) (* skoSC1 (+ (* skoMC1 (* skoMC1 skoMC1)) (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (/ (- 1.) 12.)))) (* skoSC1 (* skoMC1 (* skoMC1 (* skoMC1 (/ (- 1.) 12.))))))))))))) (* skoMC1 (* skoMC1 (* skoMC1 (+ 2. (* skoMC1 6.))))))))
-----[end problem]-----

-----[begin problem]-----
% In Mathematica format:
Timing[Resolve[Exists[{skoSC1,skoMC1}, And[skoSC1*(skoMC1*(-1+skoMC1*3)+skoSC1*(skoMC1*(-2+skoMC1*-3)+skoSC1*(skoMC1*((1/6)+skoMC1*-1)+skoSC1*(skoMC1*(1/4)+skoSC1*skoSC1*(skoMC1*(-1/360)+skoSC1*skoSC1*(skoMC1*(1/20160)+skoSC1*skoSC1*(skoMC1*(-1/1814400)+skoSC1*skoSC1*skoMC1*(1/239500800))))))))>skoMC1*(-2+skoMC1*-5),skoSC1*(skoMC1*(-1+skoMC1*3)+skoSC1*(skoMC1*(-2+skoMC1*-3)+skoSC1*(skoMC1*((1/6)+skoMC1*-1)+skoSC1*skoMC1*(1/4))))>skoMC1*(-2+skoMC1*-5),skoSC1>0,skoSC1*(skoMC1*skoMC1*skoMC1+skoSC1*skoMC1*skoMC1*skoMC1)>0,skoSC1*(skoMC1*skoMC1*skoMC1*2+skoSC1*(skoMC1*skoMC1*skoMC1*-1+skoSC1*skoMC1*skoMC1*skoMC1*-1))>skoMC1*skoMC1*skoMC1*-2,skoSC1*skoMC1*skoMC1*skoMC1>skoMC1*skoMC1*skoMC1*-1,skoMC1*skoMC1*skoMC1*2>0,skoMC1>0,skoSC1*skoMC1>skoMC1*-1,skoSC1*skoMC1*skoMC1*skoMC1*2>skoMC1*skoMC1*skoMC1*-2,skoSC1*(skoMC1*skoMC1*skoMC1*skoMC1*12+skoSC1*(skoMC1*skoMC1*skoMC1*(-1+skoMC1*6)+skoSC1*(skoMC1*skoMC1*skoMC1*-1+skoSC1*(skoMC1*skoMC1*skoMC1*(1/12)+skoSC1*skoMC1*skoMC1*skoMC1*(1/12)))))>skoMC1*skoMC1*skoMC1*(-2+skoMC1*-6)]], Reals]]

% In QepcadB format:
(E skoSC1) (E skoMC1) [[(skoMC1 (-2+(skoMC1 (-5))))<(skoSC1 ((skoMC1 (-1+(skoMC1 (3))))+(skoSC1 ((skoMC1 (-2+(skoMC1 (-3))))+(skoSC1 ((skoMC1 (1/6+(skoMC1 (-1))))+(skoSC1 ((skoMC1 (1/4))+(skoSC1 skoSC1 ((skoMC1 (-1/360))+(skoSC1 skoSC1 ((skoMC1 (1/20160))+(skoSC1 skoSC1 ((skoMC1 (-1/1814400))+(skoSC1 skoSC1 skoMC1 (1/239500800))))))))))))))))]/\[[(skoMC1 (-2+(skoMC1 (-5))))<(skoSC1 ((skoMC1 (-1+(skoMC1 (3))))+(skoSC1 ((skoMC1 (-2+(skoMC1 (-3))))+(skoSC1 ((skoMC1 (1/6+(skoMC1 (-1))))+(skoSC1 skoMC1 (1/4))))))))]/\[[0<skoSC1]/\[[0<(skoSC1 ((skoMC1 skoMC1 skoMC1)+(skoSC1 skoMC1 skoMC1 skoMC1)))]/\[[(skoMC1 skoMC1 skoMC1 (-2))<(skoSC1 ((skoMC1 skoMC1 skoMC1 (2))+(skoSC1 ((skoMC1 skoMC1 skoMC1 (-1))+(skoSC1 skoMC1 skoMC1 skoMC1 (-1))))))]/\[[(skoMC1 skoMC1 skoMC1 (-1))<(skoSC1 skoMC1 skoMC1 skoMC1)]/\[[0<(skoMC1 skoMC1 skoMC1 (2))]/\[[0<skoMC1]/\[[(skoMC1 (-1))<(skoSC1 skoMC1)]/\[[(skoMC1 skoMC1 skoMC1 (-2))<(skoSC1 skoMC1 skoMC1 skoMC1 (2))]/\[(skoMC1 skoMC1 skoMC1 (-2+(skoMC1 (-6))))<(skoSC1 ((skoMC1 skoMC1 skoMC1 skoMC1 (12))+(skoSC1 ((skoMC1 skoMC1 skoMC1 (-1+(skoMC1 (6))))+(skoSC1 ((skoMC1 skoMC1 skoMC1 (-1))+(skoSC1 ((skoMC1 skoMC1 skoMC1 (1/12))+(skoSC1 skoMC1 skoMC1 skoMC1 (1/12))))))))))]]]]]]]]]]].

% In SMTLib2 format:
(declare-fun skoSC1 () Real) (declare-fun skoMC1 () Real) (assert (and (> (* skoSC1 (+ (* skoMC1 (+ (- 1.) (* skoMC1 3.))) (* skoSC1 (+ (* skoMC1 (+ (- 2.) (* skoMC1 (- 3.)))) (* skoSC1 (+ (* skoMC1 (+ (/ 1. 6.) (* skoMC1 (- 1.)))) (* skoSC1 (+ (* skoMC1 (/ 1. 4.)) (* skoSC1 (* skoSC1 (+ (* skoMC1 (/ (- 1.) 360.)) (* skoSC1 (* skoSC1 (+ (* skoMC1 (/ 1. 20160.)) (* skoSC1 (* skoSC1 (+ (* skoMC1 (/ (- 1.) 1814400.)) (* skoSC1 (* skoSC1 (* skoMC1 (/ 1. 239500800.))))))))))))))))))))) (* skoMC1 (+ (- 2.) (* skoMC1 (- 5.))))) (and (> (* skoSC1 (+ (* skoMC1 (+ (- 1.) (* skoMC1 3.))) (* skoSC1 (+ (* skoMC1 (+ (- 2.) (* skoMC1 (- 3.)))) (* skoSC1 (+ (* skoMC1 (+ (/ 1. 6.) (* skoMC1 (- 1.)))) (* skoSC1 (* skoMC1 (/ 1. 4.))))))))) (* skoMC1 (+ (- 2.) (* skoMC1 (- 5.))))) (and (> skoSC1 0.) (and (> (* skoSC1 (+ (* skoMC1 (* skoMC1 skoMC1)) (* skoSC1 (* skoMC1 (* skoMC1 skoMC1))))) 0.) (and (> (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 2.))) (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (- 1.)))) (* skoSC1 (* skoMC1 (* skoMC1 (* skoMC1 (- 1.))))))))) (* skoMC1 (* skoMC1 (* skoMC1 (- 2.))))) (and (> (* skoSC1 (* skoMC1 (* skoMC1 skoMC1))) (* skoMC1 (* skoMC1 (* skoMC1 (- 1.))))) (and (> (* skoMC1 (* skoMC1 (* skoMC1 2.))) 0.) (and (> skoMC1 0.) (and (> (* skoSC1 skoMC1) (* skoMC1 (- 1.))) (and (> (* skoSC1 (* skoMC1 (* skoMC1 (* skoMC1 2.)))) (* skoMC1 (* skoMC1 (* skoMC1 (- 2.))))) (> (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (* skoMC1 12.)))) (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (+ (- 1.) (* skoMC1 6.))))) (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (- 1.)))) (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (/ 1. 12.)))) (* skoSC1 (* skoMC1 (* skoMC1 (* skoMC1 (/ 1. 12.))))))))))))) (* skoMC1 (* skoMC1 (* skoMC1 (+ (- 2.) (* skoMC1 (- 6.))))))))))))))))))

% In GRF format:
(sequent " MetiTarski formula " (antecedent (> (* skoSC1 (+ (* skoMC1 (+ (- 1.) (* skoMC1 3.))) (* skoSC1 (+ (* skoMC1 (+ (- 2.) (* skoMC1 (- 3.)))) (* skoSC1 (+ (* skoMC1 (+ (/ 1. 6.) (* skoMC1 (- 1.)))) (* skoSC1 (+ (* skoMC1 (/ 1. 4.)) (* skoSC1 (* skoSC1 (+ (* skoMC1 (/ (- 1.) 360.)) (* skoSC1 (* skoSC1 (+ (* skoMC1 (/ 1. 20160.)) (* skoSC1 (* skoSC1 (+ (* skoMC1 (/ (- 1.) 1814400.)) (* skoSC1 (* skoSC1 (* skoMC1 (/ 1. 239500800.))))))))))))))))))))) (* skoMC1 (+ (- 2.) (* skoMC1 (- 5.))))) (> (* skoSC1 (+ (* skoMC1 (+ (- 1.) (* skoMC1 3.))) (* skoSC1 (+ (* skoMC1 (+ (- 2.) (* skoMC1 (- 3.)))) (* skoSC1 (+ (* skoMC1 (+ (/ 1. 6.) (* skoMC1 (- 1.)))) (* skoSC1 (* skoMC1 (/ 1. 4.))))))))) (* skoMC1 (+ (- 2.) (* skoMC1 (- 5.))))) (> skoSC1 0.) (> (* skoSC1 (+ (* skoMC1 (* skoMC1 skoMC1)) (* skoSC1 (* skoMC1 (* skoMC1 skoMC1))))) 0.) (> (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 2.))) (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (- 1.)))) (* skoSC1 (* skoMC1 (* skoMC1 (* skoMC1 (- 1.))))))))) (* skoMC1 (* skoMC1 (* skoMC1 (- 2.))))) (> (* skoSC1 (* skoMC1 (* skoMC1 skoMC1))) (* skoMC1 (* skoMC1 (* skoMC1 (- 1.))))) (> (* skoMC1 (* skoMC1 (* skoMC1 2.))) 0.) (> skoMC1 0.) (> (* skoSC1 skoMC1) (* skoMC1 (- 1.))) (> (* skoSC1 (* skoMC1 (* skoMC1 (* skoMC1 2.)))) (* skoMC1 (* skoMC1 (* skoMC1 (- 2.)))))) (succedent (<= (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (* skoMC1 12.)))) (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (+ (- 1.) (* skoMC1 6.))))) (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (- 1.)))) (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (/ 1. 12.)))) (* skoSC1 (* skoMC1 (* skoMC1 (* skoMC1 (/ 1. 12.))))))))))))) (* skoMC1 (* skoMC1 (* skoMC1 (+ (- 2.) (* skoMC1 (- 6.)))))))))
-----[end problem]-----

-----[begin problem]-----
% In Mathematica format:
Timing[Resolve[Exists[{skoSC1,skoMC1}, And[skoSC1*(skoMC1*(-1+skoMC1*3)+skoSC1*(skoMC1*(-2+skoMC1*-3)+skoSC1*(skoMC1*((1/6)+skoMC1*-1)+skoSC1*(skoMC1*(1/4)+skoSC1*skoSC1*(skoMC1*(-1/360)+skoSC1*skoSC1*(skoMC1*(1/20160)+skoSC1*skoSC1*(skoMC1*(-1/1814400)+skoSC1*skoSC1*skoMC1*(1/239500800))))))))>skoMC1*(-2+skoMC1*-5),skoSC1*(skoMC1*(-1+skoMC1*3)+skoSC1*(skoMC1*(-2+skoMC1*-3)+skoSC1*(skoMC1*((1/6)+skoMC1*-1)+skoSC1*skoMC1*(1/4))))>skoMC1*(-2+skoMC1*-5),skoSC1>0,skoSC1*(skoMC1*skoMC1*skoMC1*-2+skoSC1*(skoMC1*skoMC1*skoMC1+skoSC1*skoMC1*skoMC1*skoMC1))<=skoMC1*skoMC1*skoMC1*2,skoSC1*(skoMC1*skoMC1*skoMC1+skoSC1*skoMC1*skoMC1*skoMC1)>0,skoSC1*(skoMC1*skoMC1*skoMC1*2+skoSC1*(skoMC1*skoMC1*skoMC1*-1+skoSC1*skoMC1*skoMC1*skoMC1*-1))>skoMC1*skoMC1*skoMC1*-2,skoSC1*(skoMC1*skoMC1*skoMC1*-1+skoSC1*skoMC1*skoMC1*skoMC1*-1)<=0,skoSC1*skoMC1*skoMC1*skoMC1*-1<=skoMC1*skoMC1*skoMC1,skoSC1*skoMC1*skoMC1*skoMC1>skoMC1*skoMC1*skoMC1*-1,skoMC1*skoMC1*skoMC1*-2<=0,skoMC1*skoMC1*skoMC1*2>0,skoSC1<=(5/4),2<=skoMC1,0<=skoSC1,skoMC1>0,0<=skoMC1,skoSC1*skoMC1>skoMC1*-1,skoSC1*skoMC1*-1<=skoMC1,skoSC1*skoMC1*skoMC1*skoMC1*2>skoMC1*skoMC1*skoMC1*-2,skoSC1*skoMC1*skoMC1*skoMC1*-2<=skoMC1*skoMC1*skoMC1*2,skoSC1*(skoMC1*skoMC1*skoMC1*skoMC1*12+skoSC1*(skoMC1*skoMC1*skoMC1*(-1+skoMC1*6)+skoSC1*(skoMC1*skoMC1*skoMC1*-1+skoSC1*(skoMC1*skoMC1*skoMC1*(1/12)+skoSC1*skoMC1*skoMC1*skoMC1*(1/12)))))>skoMC1*skoMC1*skoMC1*(-2+skoMC1*-6),skoSC1*(skoMC1*skoMC1*skoMC1*skoMC1*-12+skoSC1*(skoMC1*skoMC1*skoMC1*(1+skoMC1*-6)+skoSC1*(skoMC1*skoMC1*skoMC1+skoSC1*(skoMC1*skoMC1*skoMC1*(-1/12)+skoSC1*skoMC1*skoMC1*skoMC1*(-1/12)))))<=skoMC1*skoMC1*skoMC1*(2+skoMC1*6)]], Reals]]

% In QepcadB format:
(E skoSC1) (E skoMC1) [[(skoMC1 (-2+(skoMC1 (-5))))<(skoSC1 ((skoMC1 (-1+(skoMC1 (3))))+(skoSC1 ((skoMC1 (-2+(skoMC1 (-3))))+(skoSC1 ((skoMC1 (1/6+(skoMC1 (-1))))+(skoSC1 ((skoMC1 (1/4))+(skoSC1 skoSC1 ((skoMC1 (-1/360))+(skoSC1 skoSC1 ((skoMC1 (1/20160))+(skoSC1 skoSC1 ((skoMC1 (-1/1814400))+(skoSC1 skoSC1 skoMC1 (1/239500800))))))))))))))))]/\[[(skoMC1 (-2+(skoMC1 (-5))))<(skoSC1 ((skoMC1 (-1+(skoMC1 (3))))+(skoSC1 ((skoMC1 (-2+(skoMC1 (-3))))+(skoSC1 ((skoMC1 (1/6+(skoMC1 (-1))))+(skoSC1 skoMC1 (1/4))))))))]/\[[0<skoSC1]/\[[(skoSC1 ((skoMC1 skoMC1 skoMC1 (-2))+(skoSC1 ((skoMC1 skoMC1 skoMC1)+(skoSC1 skoMC1 skoMC1 skoMC1)))))<=(skoMC1 skoMC1 skoMC1 (2))]/\[[0<(skoSC1 ((skoMC1 skoMC1 skoMC1)+(skoSC1 skoMC1 skoMC1 skoMC1)))]/\[[(skoMC1 skoMC1 skoMC1 (-2))<(skoSC1 ((skoMC1 skoMC1 skoMC1 (2))+(skoSC1 ((skoMC1 skoMC1 skoMC1 (-1))+(skoSC1 skoMC1 skoMC1 skoMC1 (-1))))))]/\[[(skoSC1 ((skoMC1 skoMC1 skoMC1 (-1))+(skoSC1 skoMC1 skoMC1 skoMC1 (-1))))<=0]/\[[(skoSC1 skoMC1 skoMC1 skoMC1 (-1))<=(skoMC1 skoMC1 skoMC1)]/\[[(skoMC1 skoMC1 skoMC1 (-1))<(skoSC1 skoMC1 skoMC1 skoMC1)]/\[[(skoMC1 skoMC1 skoMC1 (-2))<=0]/\[[0<(skoMC1 skoMC1 skoMC1 (2))]/\[[skoSC1<=5/4]/\[[2<=skoMC1]/\[[0<=skoSC1]/\[[0<skoMC1]/\[[0<=skoMC1]/\[[(skoMC1 (-1))<(skoSC1 skoMC1)]/\[[(skoSC1 skoMC1 (-1))<=skoMC1]/\[[(skoMC1 skoMC1 skoMC1 (-2))<(skoSC1 skoMC1 skoMC1 skoMC1 (2))]/\[[(skoSC1 skoMC1 skoMC1 skoMC1 (-2))<=(skoMC1 skoMC1 skoMC1 (2))]/\[[(skoMC1 skoMC1 skoMC1 (-2+(skoMC1 (-6))))<(skoSC1 ((skoMC1 skoMC1 skoMC1 skoMC1 (12))+(skoSC1 ((skoMC1 skoMC1 skoMC1 (-1+(skoMC1 (6))))+(skoSC1 ((skoMC1 skoMC1 skoMC1 (-1))+(skoSC1 ((skoMC1 skoMC1 skoMC1 (1/12))+(skoSC1 skoMC1 skoMC1 skoMC1 (1/12))))))))))]/\[(skoSC1 ((skoMC1 skoMC1 skoMC1 skoMC1 (-12))+(skoSC1 ((skoMC1 skoMC1 skoMC1 (1+(skoMC1 (-6))))+(skoSC1 ((skoMC1 skoMC1 skoMC1)+(skoSC1 ((skoMC1 skoMC1 skoMC1 (-1/12))+(skoSC1 skoMC1 skoMC1 skoMC1 (-1/12))))))))))<=(skoMC1 skoMC1 skoMC1 (2+(skoMC1 (6))))]]]]]]]]]]]]]]]]]]]]]].

% In SMTLib2 format:
(declare-fun skoSC1 () Real) (declare-fun skoMC1 () Real) (assert (and (> (* skoSC1 (+ (* skoMC1 (+ (- 1.) (* skoMC1 3.))) (* skoSC1 (+ (* skoMC1 (+ (- 2.) (* skoMC1 (- 3.)))) (* skoSC1 (+ (* skoMC1 (+ (/ 1. 6.) (* skoMC1 (- 1.)))) (* skoSC1 (+ (* skoMC1 (/ 1. 4.)) (* skoSC1 (* skoSC1 (+ (* skoMC1 (/ (- 1.) 360.)) (* skoSC1 (* skoSC1 (+ (* skoMC1 (/ 1. 20160.)) (* skoSC1 (* skoSC1 (+ (* skoMC1 (/ (- 1.) 1814400.)) (* skoSC1 (* skoSC1 (* skoMC1 (/ 1. 239500800.))))))))))))))))))))) (* skoMC1 (+ (- 2.) (* skoMC1 (- 5.))))) (and (> (* skoSC1 (+ (* skoMC1 (+ (- 1.) (* skoMC1 3.))) (* skoSC1 (+ (* skoMC1 (+ (- 2.) (* skoMC1 (- 3.)))) (* skoSC1 (+ (* skoMC1 (+ (/ 1. 6.) (* skoMC1 (- 1.)))) (* skoSC1 (* skoMC1 (/ 1. 4.))))))))) (* skoMC1 (+ (- 2.) (* skoMC1 (- 5.))))) (and (> skoSC1 0.) (and (<= (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (- 2.)))) (* skoSC1 (+ (* skoMC1 (* skoMC1 skoMC1)) (* skoSC1 (* skoMC1 (* skoMC1 skoMC1))))))) (* skoMC1 (* skoMC1 (* skoMC1 2.)))) (and (> (* skoSC1 (+ (* skoMC1 (* skoMC1 skoMC1)) (* skoSC1 (* skoMC1 (* skoMC1 skoMC1))))) 0.) (and (> (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 2.))) (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (- 1.)))) (* skoSC1 (* skoMC1 (* skoMC1 (* skoMC1 (- 1.))))))))) (* skoMC1 (* skoMC1 (* skoMC1 (- 2.))))) (and (<= (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (- 1.)))) (* skoSC1 (* skoMC1 (* skoMC1 (* skoMC1 (- 1.))))))) 0.) (and (<= (* skoSC1 (* skoMC1 (* skoMC1 (* skoMC1 (- 1.))))) (* skoMC1 (* skoMC1 skoMC1))) (and (> (* skoSC1 (* skoMC1 (* skoMC1 skoMC1))) (* skoMC1 (* skoMC1 (* skoMC1 (- 1.))))) (and (<= (* skoMC1 (* skoMC1 (* skoMC1 (- 2.)))) 0.) (and (> (* skoMC1 (* skoMC1 (* skoMC1 2.))) 0.) (and (<= skoSC1 (/ 5. 4.)) (and (<= 2. skoMC1) (and (<= 0. skoSC1) (and (> skoMC1 0.) (and (<= 0. skoMC1) (and (> (* skoSC1 skoMC1) (* skoMC1 (- 1.))) (and (<= (* skoSC1 (* skoMC1 (- 1.))) skoMC1) (and (> (* skoSC1 (* skoMC1 (* skoMC1 (* skoMC1 2.)))) (* skoMC1 (* skoMC1 (* skoMC1 (- 2.))))) (and (<= (* skoSC1 (* skoMC1 (* skoMC1 (* skoMC1 (- 2.))))) (* skoMC1 (* skoMC1 (* skoMC1 2.)))) (and (> (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (* skoMC1 12.)))) (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (+ (- 1.) (* skoMC1 6.))))) (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (- 1.)))) (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (/ 1. 12.)))) (* skoSC1 (* skoMC1 (* skoMC1 (* skoMC1 (/ 1. 12.))))))))))))) (* skoMC1 (* skoMC1 (* skoMC1 (+ (- 2.) (* skoMC1 (- 6.))))))) (<= (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (* skoMC1 (- 12.))))) (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (+ 1. (* skoMC1 (- 6.)))))) (* skoSC1 (+ (* skoMC1 (* skoMC1 skoMC1)) (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (/ (- 1.) 12.)))) (* skoSC1 (* skoMC1 (* skoMC1 (* skoMC1 (/ (- 1.) 12.))))))))))))) (* skoMC1 (* skoMC1 (* skoMC1 (+ 2. (* skoMC1 6.))))))))))))))))))))))))))))

% In GRF format:
(sequent " MetiTarski formula " (antecedent (> (* skoSC1 (+ (* skoMC1 (+ (- 1.) (* skoMC1 3.))) (* skoSC1 (+ (* skoMC1 (+ (- 2.) (* skoMC1 (- 3.)))) (* skoSC1 (+ (* skoMC1 (+ (/ 1. 6.) (* skoMC1 (- 1.)))) (* skoSC1 (+ (* skoMC1 (/ 1. 4.)) (* skoSC1 (* skoSC1 (+ (* skoMC1 (/ (- 1.) 360.)) (* skoSC1 (* skoSC1 (+ (* skoMC1 (/ 1. 20160.)) (* skoSC1 (* skoSC1 (+ (* skoMC1 (/ (- 1.) 1814400.)) (* skoSC1 (* skoSC1 (* skoMC1 (/ 1. 239500800.))))))))))))))))))))) (* skoMC1 (+ (- 2.) (* skoMC1 (- 5.))))) (> (* skoSC1 (+ (* skoMC1 (+ (- 1.) (* skoMC1 3.))) (* skoSC1 (+ (* skoMC1 (+ (- 2.) (* skoMC1 (- 3.)))) (* skoSC1 (+ (* skoMC1 (+ (/ 1. 6.) (* skoMC1 (- 1.)))) (* skoSC1 (* skoMC1 (/ 1. 4.))))))))) (* skoMC1 (+ (- 2.) (* skoMC1 (- 5.))))) (> skoSC1 0.) (<= (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (- 2.)))) (* skoSC1 (+ (* skoMC1 (* skoMC1 skoMC1)) (* skoSC1 (* skoMC1 (* skoMC1 skoMC1))))))) (* skoMC1 (* skoMC1 (* skoMC1 2.)))) (> (* skoSC1 (+ (* skoMC1 (* skoMC1 skoMC1)) (* skoSC1 (* skoMC1 (* skoMC1 skoMC1))))) 0.) (> (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 2.))) (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (- 1.)))) (* skoSC1 (* skoMC1 (* skoMC1 (* skoMC1 (- 1.))))))))) (* skoMC1 (* skoMC1 (* skoMC1 (- 2.))))) (<= (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (- 1.)))) (* skoSC1 (* skoMC1 (* skoMC1 (* skoMC1 (- 1.))))))) 0.) (<= (* skoSC1 (* skoMC1 (* skoMC1 (* skoMC1 (- 1.))))) (* skoMC1 (* skoMC1 skoMC1))) (> (* skoSC1 (* skoMC1 (* skoMC1 skoMC1))) (* skoMC1 (* skoMC1 (* skoMC1 (- 1.))))) (<= (* skoMC1 (* skoMC1 (* skoMC1 (- 2.)))) 0.) (> (* skoMC1 (* skoMC1 (* skoMC1 2.))) 0.) (<= skoSC1 (/ 5. 4.)) (<= 2. skoMC1) (<= 0. skoSC1) (> skoMC1 0.) (<= 0. skoMC1) (> (* skoSC1 skoMC1) (* skoMC1 (- 1.))) (<= (* skoSC1 (* skoMC1 (- 1.))) skoMC1) (> (* skoSC1 (* skoMC1 (* skoMC1 (* skoMC1 2.)))) (* skoMC1 (* skoMC1 (* skoMC1 (- 2.))))) (<= (* skoSC1 (* skoMC1 (* skoMC1 (* skoMC1 (- 2.))))) (* skoMC1 (* skoMC1 (* skoMC1 2.)))) (> (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (* skoMC1 12.)))) (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (+ (- 1.) (* skoMC1 6.))))) (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (- 1.)))) (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (/ 1. 12.)))) (* skoSC1 (* skoMC1 (* skoMC1 (* skoMC1 (/ 1. 12.))))))))))))) (* skoMC1 (* skoMC1 (* skoMC1 (+ (- 2.) (* skoMC1 (- 6.)))))))) (succedent (> (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (* skoMC1 (- 12.))))) (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (+ 1. (* skoMC1 (- 6.)))))) (* skoSC1 (+ (* skoMC1 (* skoMC1 skoMC1)) (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (/ (- 1.) 12.)))) (* skoSC1 (* skoMC1 (* skoMC1 (* skoMC1 (/ (- 1.) 12.))))))))))))) (* skoMC1 (* skoMC1 (* skoMC1 (+ 2. (* skoMC1 6.))))))))
-----[end problem]-----

-----[begin problem]-----
% In Mathematica format:
Timing[Resolve[Exists[{skoSC1,skoMC1}, And[skoSC1*skoMC1*skoMC1*skoMC1*-1<=skoMC1*skoMC1*skoMC1,skoSC1*(skoMC1*(-1+skoMC1*3)+skoSC1*(skoMC1*(-2+skoMC1*-3)+skoSC1*(skoMC1*((1/6)+skoMC1*-1)+skoSC1*skoMC1*(1/4))))>skoMC1*(-2+skoMC1*-5),skoSC1>0,skoSC1*(skoMC1*skoMC1*skoMC1*-2+skoSC1*(skoMC1*skoMC1*skoMC1+skoSC1*skoMC1*skoMC1*skoMC1))<=skoMC1*skoMC1*skoMC1*2,skoSC1*(skoMC1*skoMC1*skoMC1+skoSC1*skoMC1*skoMC1*skoMC1)>0,skoSC1*(skoMC1*skoMC1*skoMC1*2+skoSC1*(skoMC1*skoMC1*skoMC1*-1+skoSC1*skoMC1*skoMC1*skoMC1*-1))>skoMC1*skoMC1*skoMC1*-2,skoSC1*(skoMC1*skoMC1*skoMC1*-1+skoSC1*skoMC1*skoMC1*skoMC1*-1)<=0,skoSC1*skoMC1*skoMC1*skoMC1*-1<=skoMC1*skoMC1*skoMC1,skoSC1*skoMC1*skoMC1*skoMC1>skoMC1*skoMC1*skoMC1*-1,skoMC1*skoMC1*skoMC1*-2<=0,skoMC1*skoMC1*skoMC1*2>0,skoSC1<=(5/4),2<=skoMC1,0<=skoSC1,skoMC1>0,0<=skoMC1,skoSC1*skoMC1>skoMC1*-1,skoSC1*skoMC1*-1<=skoMC1,skoSC1*skoMC1*skoMC1*skoMC1*2>skoMC1*skoMC1*skoMC1*-2,skoSC1*skoMC1*skoMC1*skoMC1*-2<=skoMC1*skoMC1*skoMC1*2,skoSC1*(skoMC1*skoMC1*skoMC1*skoMC1*12+skoSC1*(skoMC1*skoMC1*skoMC1*(-1+skoMC1*6)+skoSC1*(skoMC1*skoMC1*skoMC1*-1+skoSC1*(skoMC1*skoMC1*skoMC1*(1/12)+skoSC1*skoMC1*skoMC1*skoMC1*(1/12)))))>skoMC1*skoMC1*skoMC1*(-2+skoMC1*-6),skoSC1*(skoMC1*skoMC1*skoMC1*skoMC1*-12+skoSC1*(skoMC1*skoMC1*skoMC1*(1+skoMC1*-6)+skoSC1*(skoMC1*skoMC1*skoMC1+skoSC1*(skoMC1*skoMC1*skoMC1*(-1/12)+skoSC1*skoMC1*skoMC1*skoMC1*(-1/12)))))<=skoMC1*skoMC1*skoMC1*(2+skoMC1*6)]], Reals]]

% In QepcadB format:
(E skoSC1) (E skoMC1) [[(skoSC1 skoMC1 skoMC1 skoMC1 (-1))<=(skoMC1 skoMC1 skoMC1)]/\[[(skoMC1 (-2+(skoMC1 (-5))))<(skoSC1 ((skoMC1 (-1+(skoMC1 (3))))+(skoSC1 ((skoMC1 (-2+(skoMC1 (-3))))+(skoSC1 ((skoMC1 (1/6+(skoMC1 (-1))))+(skoSC1 skoMC1 (1/4))))))))]/\[[0<skoSC1]/\[[(skoSC1 ((skoMC1 skoMC1 skoMC1 (-2))+(skoSC1 ((skoMC1 skoMC1 skoMC1)+(skoSC1 skoMC1 skoMC1 skoMC1)))))<=(skoMC1 skoMC1 skoMC1 (2))]/\[[0<(skoSC1 ((skoMC1 skoMC1 skoMC1)+(skoSC1 skoMC1 skoMC1 skoMC1)))]/\[[(skoMC1 skoMC1 skoMC1 (-2))<(skoSC1 ((skoMC1 skoMC1 skoMC1 (2))+(skoSC1 ((skoMC1 skoMC1 skoMC1 (-1))+(skoSC1 skoMC1 skoMC1 skoMC1 (-1))))))]/\[[(skoSC1 ((skoMC1 skoMC1 skoMC1 (-1))+(skoSC1 skoMC1 skoMC1 skoMC1 (-1))))<=0]/\[[(skoSC1 skoMC1 skoMC1 skoMC1 (-1))<=(skoMC1 skoMC1 skoMC1)]/\[[(skoMC1 skoMC1 skoMC1 (-1))<(skoSC1 skoMC1 skoMC1 skoMC1)]/\[[(skoMC1 skoMC1 skoMC1 (-2))<=0]/\[[0<(skoMC1 skoMC1 skoMC1 (2))]/\[[skoSC1<=5/4]/\[[2<=skoMC1]/\[[0<=skoSC1]/\[[0<skoMC1]/\[[0<=skoMC1]/\[[(skoMC1 (-1))<(skoSC1 skoMC1)]/\[[(skoSC1 skoMC1 (-1))<=skoMC1]/\[[(skoMC1 skoMC1 skoMC1 (-2))<(skoSC1 skoMC1 skoMC1 skoMC1 (2))]/\[[(skoSC1 skoMC1 skoMC1 skoMC1 (-2))<=(skoMC1 skoMC1 skoMC1 (2))]/\[[(skoMC1 skoMC1 skoMC1 (-2+(skoMC1 (-6))))<(skoSC1 ((skoMC1 skoMC1 skoMC1 skoMC1 (12))+(skoSC1 ((skoMC1 skoMC1 skoMC1 (-1+(skoMC1 (6))))+(skoSC1 ((skoMC1 skoMC1 skoMC1 (-1))+(skoSC1 ((skoMC1 skoMC1 skoMC1 (1/12))+(skoSC1 skoMC1 skoMC1 skoMC1 (1/12))))))))))]/\[(skoSC1 ((skoMC1 skoMC1 skoMC1 skoMC1 (-12))+(skoSC1 ((skoMC1 skoMC1 skoMC1 (1+(skoMC1 (-6))))+(skoSC1 ((skoMC1 skoMC1 skoMC1)+(skoSC1 ((skoMC1 skoMC1 skoMC1 (-1/12))+(skoSC1 skoMC1 skoMC1 skoMC1 (-1/12))))))))))<=(skoMC1 skoMC1 skoMC1 (2+(skoMC1 (6))))]]]]]]]]]]]]]]]]]]]]]].

% In SMTLib2 format:
(declare-fun skoSC1 () Real) (declare-fun skoMC1 () Real) (assert (and (<= (* skoSC1 (* skoMC1 (* skoMC1 (* skoMC1 (- 1.))))) (* skoMC1 (* skoMC1 skoMC1))) (and (> (* skoSC1 (+ (* skoMC1 (+ (- 1.) (* skoMC1 3.))) (* skoSC1 (+ (* skoMC1 (+ (- 2.) (* skoMC1 (- 3.)))) (* skoSC1 (+ (* skoMC1 (+ (/ 1. 6.) (* skoMC1 (- 1.)))) (* skoSC1 (* skoMC1 (/ 1. 4.))))))))) (* skoMC1 (+ (- 2.) (* skoMC1 (- 5.))))) (and (> skoSC1 0.) (and (<= (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (- 2.)))) (* skoSC1 (+ (* skoMC1 (* skoMC1 skoMC1)) (* skoSC1 (* skoMC1 (* skoMC1 skoMC1))))))) (* skoMC1 (* skoMC1 (* skoMC1 2.)))) (and (> (* skoSC1 (+ (* skoMC1 (* skoMC1 skoMC1)) (* skoSC1 (* skoMC1 (* skoMC1 skoMC1))))) 0.) (and (> (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 2.))) (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (- 1.)))) (* skoSC1 (* skoMC1 (* skoMC1 (* skoMC1 (- 1.))))))))) (* skoMC1 (* skoMC1 (* skoMC1 (- 2.))))) (and (<= (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (- 1.)))) (* skoSC1 (* skoMC1 (* skoMC1 (* skoMC1 (- 1.))))))) 0.) (and (<= (* skoSC1 (* skoMC1 (* skoMC1 (* skoMC1 (- 1.))))) (* skoMC1 (* skoMC1 skoMC1))) (and (> (* skoSC1 (* skoMC1 (* skoMC1 skoMC1))) (* skoMC1 (* skoMC1 (* skoMC1 (- 1.))))) (and (<= (* skoMC1 (* skoMC1 (* skoMC1 (- 2.)))) 0.) (and (> (* skoMC1 (* skoMC1 (* skoMC1 2.))) 0.) (and (<= skoSC1 (/ 5. 4.)) (and (<= 2. skoMC1) (and (<= 0. skoSC1) (and (> skoMC1 0.) (and (<= 0. skoMC1) (and (> (* skoSC1 skoMC1) (* skoMC1 (- 1.))) (and (<= (* skoSC1 (* skoMC1 (- 1.))) skoMC1) (and (> (* skoSC1 (* skoMC1 (* skoMC1 (* skoMC1 2.)))) (* skoMC1 (* skoMC1 (* skoMC1 (- 2.))))) (and (<= (* skoSC1 (* skoMC1 (* skoMC1 (* skoMC1 (- 2.))))) (* skoMC1 (* skoMC1 (* skoMC1 2.)))) (and (> (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (* skoMC1 12.)))) (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (+ (- 1.) (* skoMC1 6.))))) (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (- 1.)))) (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (/ 1. 12.)))) (* skoSC1 (* skoMC1 (* skoMC1 (* skoMC1 (/ 1. 12.))))))))))))) (* skoMC1 (* skoMC1 (* skoMC1 (+ (- 2.) (* skoMC1 (- 6.))))))) (<= (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (* skoMC1 (- 12.))))) (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (+ 1. (* skoMC1 (- 6.)))))) (* skoSC1 (+ (* skoMC1 (* skoMC1 skoMC1)) (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (/ (- 1.) 12.)))) (* skoSC1 (* skoMC1 (* skoMC1 (* skoMC1 (/ (- 1.) 12.))))))))))))) (* skoMC1 (* skoMC1 (* skoMC1 (+ 2. (* skoMC1 6.))))))))))))))))))))))))))))

% In GRF format:
(sequent " MetiTarski formula " (antecedent (<= (* skoSC1 (* skoMC1 (* skoMC1 (* skoMC1 (- 1.))))) (* skoMC1 (* skoMC1 skoMC1))) (> (* skoSC1 (+ (* skoMC1 (+ (- 1.) (* skoMC1 3.))) (* skoSC1 (+ (* skoMC1 (+ (- 2.) (* skoMC1 (- 3.)))) (* skoSC1 (+ (* skoMC1 (+ (/ 1. 6.) (* skoMC1 (- 1.)))) (* skoSC1 (* skoMC1 (/ 1. 4.))))))))) (* skoMC1 (+ (- 2.) (* skoMC1 (- 5.))))) (> skoSC1 0.) (<= (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (- 2.)))) (* skoSC1 (+ (* skoMC1 (* skoMC1 skoMC1)) (* skoSC1 (* skoMC1 (* skoMC1 skoMC1))))))) (* skoMC1 (* skoMC1 (* skoMC1 2.)))) (> (* skoSC1 (+ (* skoMC1 (* skoMC1 skoMC1)) (* skoSC1 (* skoMC1 (* skoMC1 skoMC1))))) 0.) (> (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 2.))) (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (- 1.)))) (* skoSC1 (* skoMC1 (* skoMC1 (* skoMC1 (- 1.))))))))) (* skoMC1 (* skoMC1 (* skoMC1 (- 2.))))) (<= (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (- 1.)))) (* skoSC1 (* skoMC1 (* skoMC1 (* skoMC1 (- 1.))))))) 0.) (<= (* skoSC1 (* skoMC1 (* skoMC1 (* skoMC1 (- 1.))))) (* skoMC1 (* skoMC1 skoMC1))) (> (* skoSC1 (* skoMC1 (* skoMC1 skoMC1))) (* skoMC1 (* skoMC1 (* skoMC1 (- 1.))))) (<= (* skoMC1 (* skoMC1 (* skoMC1 (- 2.)))) 0.) (> (* skoMC1 (* skoMC1 (* skoMC1 2.))) 0.) (<= skoSC1 (/ 5. 4.)) (<= 2. skoMC1) (<= 0. skoSC1) (> skoMC1 0.) (<= 0. skoMC1) (> (* skoSC1 skoMC1) (* skoMC1 (- 1.))) (<= (* skoSC1 (* skoMC1 (- 1.))) skoMC1) (> (* skoSC1 (* skoMC1 (* skoMC1 (* skoMC1 2.)))) (* skoMC1 (* skoMC1 (* skoMC1 (- 2.))))) (<= (* skoSC1 (* skoMC1 (* skoMC1 (* skoMC1 (- 2.))))) (* skoMC1 (* skoMC1 (* skoMC1 2.)))) (> (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (* skoMC1 12.)))) (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (+ (- 1.) (* skoMC1 6.))))) (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (- 1.)))) (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (/ 1. 12.)))) (* skoSC1 (* skoMC1 (* skoMC1 (* skoMC1 (/ 1. 12.))))))))))))) (* skoMC1 (* skoMC1 (* skoMC1 (+ (- 2.) (* skoMC1 (- 6.)))))))) (succedent (> (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (* skoMC1 (- 12.))))) (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (+ 1. (* skoMC1 (- 6.)))))) (* skoSC1 (+ (* skoMC1 (* skoMC1 skoMC1)) (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (/ (- 1.) 12.)))) (* skoSC1 (* skoMC1 (* skoMC1 (* skoMC1 (/ (- 1.) 12.))))))))))))) (* skoMC1 (* skoMC1 (* skoMC1 (+ 2. (* skoMC1 6.))))))))
-----[end problem]-----

-----[begin problem]-----
% In Mathematica format:
Timing[Resolve[Exists[{skoSC1,skoMC1}, And[skoMC1*skoMC1*skoMC1*-2<=0,skoSC1*(skoMC1*(-1+skoMC1*3)+skoSC1*(skoMC1*(-2+skoMC1*-3)+skoSC1*(skoMC1*((1/6)+skoMC1*-1)+skoSC1*skoMC1*(1/4))))>skoMC1*(-2+skoMC1*-5),skoSC1>0,skoSC1*(skoMC1*skoMC1*skoMC1*-2+skoSC1*(skoMC1*skoMC1*skoMC1+skoSC1*skoMC1*skoMC1*skoMC1))<=skoMC1*skoMC1*skoMC1*2,skoSC1*(skoMC1*skoMC1*skoMC1+skoSC1*skoMC1*skoMC1*skoMC1)>0,skoSC1*(skoMC1*skoMC1*skoMC1*2+skoSC1*(skoMC1*skoMC1*skoMC1*-1+skoSC1*skoMC1*skoMC1*skoMC1*-1))>skoMC1*skoMC1*skoMC1*-2,skoSC1*(skoMC1*skoMC1*skoMC1*-1+skoSC1*skoMC1*skoMC1*skoMC1*-1)<=0,skoSC1*skoMC1*skoMC1*skoMC1*-1<=skoMC1*skoMC1*skoMC1,skoSC1*skoMC1*skoMC1*skoMC1>skoMC1*skoMC1*skoMC1*-1,skoMC1*skoMC1*skoMC1*-2<=0,skoMC1*skoMC1*skoMC1*2>0,skoSC1<=(5/4),2<=skoMC1,0<=skoSC1,skoMC1>0,0<=skoMC1,skoSC1*skoMC1>skoMC1*-1,skoSC1*skoMC1*-1<=skoMC1,skoSC1*skoMC1*skoMC1*skoMC1*2>skoMC1*skoMC1*skoMC1*-2,skoSC1*skoMC1*skoMC1*skoMC1*-2<=skoMC1*skoMC1*skoMC1*2,skoSC1*(skoMC1*skoMC1*skoMC1*skoMC1*12+skoSC1*(skoMC1*skoMC1*skoMC1*(-1+skoMC1*6)+skoSC1*(skoMC1*skoMC1*skoMC1*-1+skoSC1*(skoMC1*skoMC1*skoMC1*(1/12)+skoSC1*skoMC1*skoMC1*skoMC1*(1/12)))))>skoMC1*skoMC1*skoMC1*(-2+skoMC1*-6),skoSC1*(skoMC1*skoMC1*skoMC1*skoMC1*-12+skoSC1*(skoMC1*skoMC1*skoMC1*(1+skoMC1*-6)+skoSC1*(skoMC1*skoMC1*skoMC1+skoSC1*(skoMC1*skoMC1*skoMC1*(-1/12)+skoSC1*skoMC1*skoMC1*skoMC1*(-1/12)))))<=skoMC1*skoMC1*skoMC1*(2+skoMC1*6)]], Reals]]

% In QepcadB format:
(E skoSC1) (E skoMC1) [[(skoMC1 skoMC1 skoMC1 (-2))<=0]/\[[(skoMC1 (-2+(skoMC1 (-5))))<(skoSC1 ((skoMC1 (-1+(skoMC1 (3))))+(skoSC1 ((skoMC1 (-2+(skoMC1 (-3))))+(skoSC1 ((skoMC1 (1/6+(skoMC1 (-1))))+(skoSC1 skoMC1 (1/4))))))))]/\[[0<skoSC1]/\[[(skoSC1 ((skoMC1 skoMC1 skoMC1 (-2))+(skoSC1 ((skoMC1 skoMC1 skoMC1)+(skoSC1 skoMC1 skoMC1 skoMC1)))))<=(skoMC1 skoMC1 skoMC1 (2))]/\[[0<(skoSC1 ((skoMC1 skoMC1 skoMC1)+(skoSC1 skoMC1 skoMC1 skoMC1)))]/\[[(skoMC1 skoMC1 skoMC1 (-2))<(skoSC1 ((skoMC1 skoMC1 skoMC1 (2))+(skoSC1 ((skoMC1 skoMC1 skoMC1 (-1))+(skoSC1 skoMC1 skoMC1 skoMC1 (-1))))))]/\[[(skoSC1 ((skoMC1 skoMC1 skoMC1 (-1))+(skoSC1 skoMC1 skoMC1 skoMC1 (-1))))<=0]/\[[(skoSC1 skoMC1 skoMC1 skoMC1 (-1))<=(skoMC1 skoMC1 skoMC1)]/\[[(skoMC1 skoMC1 skoMC1 (-1))<(skoSC1 skoMC1 skoMC1 skoMC1)]/\[[(skoMC1 skoMC1 skoMC1 (-2))<=0]/\[[0<(skoMC1 skoMC1 skoMC1 (2))]/\[[skoSC1<=5/4]/\[[2<=skoMC1]/\[[0<=skoSC1]/\[[0<skoMC1]/\[[0<=skoMC1]/\[[(skoMC1 (-1))<(skoSC1 skoMC1)]/\[[(skoSC1 skoMC1 (-1))<=skoMC1]/\[[(skoMC1 skoMC1 skoMC1 (-2))<(skoSC1 skoMC1 skoMC1 skoMC1 (2))]/\[[(skoSC1 skoMC1 skoMC1 skoMC1 (-2))<=(skoMC1 skoMC1 skoMC1 (2))]/\[[(skoMC1 skoMC1 skoMC1 (-2+(skoMC1 (-6))))<(skoSC1 ((skoMC1 skoMC1 skoMC1 skoMC1 (12))+(skoSC1 ((skoMC1 skoMC1 skoMC1 (-1+(skoMC1 (6))))+(skoSC1 ((skoMC1 skoMC1 skoMC1 (-1))+(skoSC1 ((skoMC1 skoMC1 skoMC1 (1/12))+(skoSC1 skoMC1 skoMC1 skoMC1 (1/12))))))))))]/\[(skoSC1 ((skoMC1 skoMC1 skoMC1 skoMC1 (-12))+(skoSC1 ((skoMC1 skoMC1 skoMC1 (1+(skoMC1 (-6))))+(skoSC1 ((skoMC1 skoMC1 skoMC1)+(skoSC1 ((skoMC1 skoMC1 skoMC1 (-1/12))+(skoSC1 skoMC1 skoMC1 skoMC1 (-1/12))))))))))<=(skoMC1 skoMC1 skoMC1 (2+(skoMC1 (6))))]]]]]]]]]]]]]]]]]]]]]].

% In SMTLib2 format:
(declare-fun skoSC1 () Real) (declare-fun skoMC1 () Real) (assert (and (<= (* skoMC1 (* skoMC1 (* skoMC1 (- 2.)))) 0.) (and (> (* skoSC1 (+ (* skoMC1 (+ (- 1.) (* skoMC1 3.))) (* skoSC1 (+ (* skoMC1 (+ (- 2.) (* skoMC1 (- 3.)))) (* skoSC1 (+ (* skoMC1 (+ (/ 1. 6.) (* skoMC1 (- 1.)))) (* skoSC1 (* skoMC1 (/ 1. 4.))))))))) (* skoMC1 (+ (- 2.) (* skoMC1 (- 5.))))) (and (> skoSC1 0.) (and (<= (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (- 2.)))) (* skoSC1 (+ (* skoMC1 (* skoMC1 skoMC1)) (* skoSC1 (* skoMC1 (* skoMC1 skoMC1))))))) (* skoMC1 (* skoMC1 (* skoMC1 2.)))) (and (> (* skoSC1 (+ (* skoMC1 (* skoMC1 skoMC1)) (* skoSC1 (* skoMC1 (* skoMC1 skoMC1))))) 0.) (and (> (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 2.))) (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (- 1.)))) (* skoSC1 (* skoMC1 (* skoMC1 (* skoMC1 (- 1.))))))))) (* skoMC1 (* skoMC1 (* skoMC1 (- 2.))))) (and (<= (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (- 1.)))) (* skoSC1 (* skoMC1 (* skoMC1 (* skoMC1 (- 1.))))))) 0.) (and (<= (* skoSC1 (* skoMC1 (* skoMC1 (* skoMC1 (- 1.))))) (* skoMC1 (* skoMC1 skoMC1))) (and (> (* skoSC1 (* skoMC1 (* skoMC1 skoMC1))) (* skoMC1 (* skoMC1 (* skoMC1 (- 1.))))) (and (<= (* skoMC1 (* skoMC1 (* skoMC1 (- 2.)))) 0.) (and (> (* skoMC1 (* skoMC1 (* skoMC1 2.))) 0.) (and (<= skoSC1 (/ 5. 4.)) (and (<= 2. skoMC1) (and (<= 0. skoSC1) (and (> skoMC1 0.) (and (<= 0. skoMC1) (and (> (* skoSC1 skoMC1) (* skoMC1 (- 1.))) (and (<= (* skoSC1 (* skoMC1 (- 1.))) skoMC1) (and (> (* skoSC1 (* skoMC1 (* skoMC1 (* skoMC1 2.)))) (* skoMC1 (* skoMC1 (* skoMC1 (- 2.))))) (and (<= (* skoSC1 (* skoMC1 (* skoMC1 (* skoMC1 (- 2.))))) (* skoMC1 (* skoMC1 (* skoMC1 2.)))) (and (> (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (* skoMC1 12.)))) (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (+ (- 1.) (* skoMC1 6.))))) (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (- 1.)))) (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (/ 1. 12.)))) (* skoSC1 (* skoMC1 (* skoMC1 (* skoMC1 (/ 1. 12.))))))))))))) (* skoMC1 (* skoMC1 (* skoMC1 (+ (- 2.) (* skoMC1 (- 6.))))))) (<= (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (* skoMC1 (- 12.))))) (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (+ 1. (* skoMC1 (- 6.)))))) (* skoSC1 (+ (* skoMC1 (* skoMC1 skoMC1)) (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (/ (- 1.) 12.)))) (* skoSC1 (* skoMC1 (* skoMC1 (* skoMC1 (/ (- 1.) 12.))))))))))))) (* skoMC1 (* skoMC1 (* skoMC1 (+ 2. (* skoMC1 6.))))))))))))))))))))))))))))

% In GRF format:
(sequent " MetiTarski formula " (antecedent (<= (* skoMC1 (* skoMC1 (* skoMC1 (- 2.)))) 0.) (> (* skoSC1 (+ (* skoMC1 (+ (- 1.) (* skoMC1 3.))) (* skoSC1 (+ (* skoMC1 (+ (- 2.) (* skoMC1 (- 3.)))) (* skoSC1 (+ (* skoMC1 (+ (/ 1. 6.) (* skoMC1 (- 1.)))) (* skoSC1 (* skoMC1 (/ 1. 4.))))))))) (* skoMC1 (+ (- 2.) (* skoMC1 (- 5.))))) (> skoSC1 0.) (<= (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (- 2.)))) (* skoSC1 (+ (* skoMC1 (* skoMC1 skoMC1)) (* skoSC1 (* skoMC1 (* skoMC1 skoMC1))))))) (* skoMC1 (* skoMC1 (* skoMC1 2.)))) (> (* skoSC1 (+ (* skoMC1 (* skoMC1 skoMC1)) (* skoSC1 (* skoMC1 (* skoMC1 skoMC1))))) 0.) (> (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 2.))) (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (- 1.)))) (* skoSC1 (* skoMC1 (* skoMC1 (* skoMC1 (- 1.))))))))) (* skoMC1 (* skoMC1 (* skoMC1 (- 2.))))) (<= (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (- 1.)))) (* skoSC1 (* skoMC1 (* skoMC1 (* skoMC1 (- 1.))))))) 0.) (<= (* skoSC1 (* skoMC1 (* skoMC1 (* skoMC1 (- 1.))))) (* skoMC1 (* skoMC1 skoMC1))) (> (* skoSC1 (* skoMC1 (* skoMC1 skoMC1))) (* skoMC1 (* skoMC1 (* skoMC1 (- 1.))))) (<= (* skoMC1 (* skoMC1 (* skoMC1 (- 2.)))) 0.) (> (* skoMC1 (* skoMC1 (* skoMC1 2.))) 0.) (<= skoSC1 (/ 5. 4.)) (<= 2. skoMC1) (<= 0. skoSC1) (> skoMC1 0.) (<= 0. skoMC1) (> (* skoSC1 skoMC1) (* skoMC1 (- 1.))) (<= (* skoSC1 (* skoMC1 (- 1.))) skoMC1) (> (* skoSC1 (* skoMC1 (* skoMC1 (* skoMC1 2.)))) (* skoMC1 (* skoMC1 (* skoMC1 (- 2.))))) (<= (* skoSC1 (* skoMC1 (* skoMC1 (* skoMC1 (- 2.))))) (* skoMC1 (* skoMC1 (* skoMC1 2.)))) (> (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (* skoMC1 12.)))) (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (+ (- 1.) (* skoMC1 6.))))) (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (- 1.)))) (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (/ 1. 12.)))) (* skoSC1 (* skoMC1 (* skoMC1 (* skoMC1 (/ 1. 12.))))))))))))) (* skoMC1 (* skoMC1 (* skoMC1 (+ (- 2.) (* skoMC1 (- 6.)))))))) (succedent (> (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (* skoMC1 (- 12.))))) (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (+ 1. (* skoMC1 (- 6.)))))) (* skoSC1 (+ (* skoMC1 (* skoMC1 skoMC1)) (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (/ (- 1.) 12.)))) (* skoSC1 (* skoMC1 (* skoMC1 (* skoMC1 (/ (- 1.) 12.))))))))))))) (* skoMC1 (* skoMC1 (* skoMC1 (+ 2. (* skoMC1 6.))))))))
-----[end problem]-----

-----[begin problem]-----
% In Mathematica format:
Timing[Resolve[Exists[{skoSC1,skoMC1}, And[skoMC1*skoMC1*skoMC1*-2>0,skoSC1*(skoMC1*skoMC1*skoMC1*(1+skoMC1*-3)+skoSC1*(skoMC1*skoMC1*skoMC1*(2+skoMC1*3)+skoSC1*(skoMC1*skoMC1*skoMC1*((-1/6)+skoMC1)+skoSC1*skoMC1*skoMC1*skoMC1*(-1/4))))>skoMC1*skoMC1*skoMC1*(2+skoMC1*5),skoSC1*(skoMC1*(-1+skoMC1*3)+skoSC1*(skoMC1*(-2+skoMC1*-3)+skoSC1*(skoMC1*((1/6)+skoMC1*-1)+skoSC1*skoMC1*(1/4))))>skoMC1*(-2+skoMC1*-5),skoSC1>0,skoSC1*(skoMC1*skoMC1*skoMC1+skoSC1*skoMC1*skoMC1*skoMC1)>0,skoSC1*(skoMC1*skoMC1*skoMC1*2+skoSC1*(skoMC1*skoMC1*skoMC1*-1+skoSC1*skoMC1*skoMC1*skoMC1*-1))>skoMC1*skoMC1*skoMC1*-2,skoSC1*skoMC1*skoMC1*skoMC1>skoMC1*skoMC1*skoMC1*-1,skoMC1*skoMC1*skoMC1*2>0,skoMC1>0,skoSC1*skoMC1>skoMC1*-1,skoSC1*skoMC1*skoMC1*skoMC1*2>skoMC1*skoMC1*skoMC1*-2,skoSC1*(skoMC1*skoMC1*skoMC1*skoMC1*12+skoSC1*(skoMC1*skoMC1*skoMC1*(-1+skoMC1*6)+skoSC1*(skoMC1*skoMC1*skoMC1*-1+skoSC1*(skoMC1*skoMC1*skoMC1*(1/12)+skoSC1*skoMC1*skoMC1*skoMC1*(1/12)))))>skoMC1*skoMC1*skoMC1*(-2+skoMC1*-6)]], Reals]]

% In QepcadB format:
(E skoSC1) (E skoMC1) [[0<(skoMC1 skoMC1 skoMC1 (-2))]/\[[(skoMC1 skoMC1 skoMC1 (2+(skoMC1 (5))))<(skoSC1 ((skoMC1 skoMC1 skoMC1 (1+(skoMC1 (-3))))+(skoSC1 ((skoMC1 skoMC1 skoMC1 (2+(skoMC1 (3))))+(skoSC1 ((skoMC1 skoMC1 skoMC1 (-1/6+skoMC1))+(skoSC1 skoMC1 skoMC1 skoMC1 (-1/4))))))))]/\[[(skoMC1 (-2+(skoMC1 (-5))))<(skoSC1 ((skoMC1 (-1+(skoMC1 (3))))+(skoSC1 ((skoMC1 (-2+(skoMC1 (-3))))+(skoSC1 ((skoMC1 (1/6+(skoMC1 (-1))))+(skoSC1 skoMC1 (1/4))))))))]/\[[0<skoSC1]/\[[0<(skoSC1 ((skoMC1 skoMC1 skoMC1)+(skoSC1 skoMC1 skoMC1 skoMC1)))]/\[[(skoMC1 skoMC1 skoMC1 (-2))<(skoSC1 ((skoMC1 skoMC1 skoMC1 (2))+(skoSC1 ((skoMC1 skoMC1 skoMC1 (-1))+(skoSC1 skoMC1 skoMC1 skoMC1 (-1))))))]/\[[(skoMC1 skoMC1 skoMC1 (-1))<(skoSC1 skoMC1 skoMC1 skoMC1)]/\[[0<(skoMC1 skoMC1 skoMC1 (2))]/\[[0<skoMC1]/\[[(skoMC1 (-1))<(skoSC1 skoMC1)]/\[[(skoMC1 skoMC1 skoMC1 (-2))<(skoSC1 skoMC1 skoMC1 skoMC1 (2))]/\[(skoMC1 skoMC1 skoMC1 (-2+(skoMC1 (-6))))<(skoSC1 ((skoMC1 skoMC1 skoMC1 skoMC1 (12))+(skoSC1 ((skoMC1 skoMC1 skoMC1 (-1+(skoMC1 (6))))+(skoSC1 ((skoMC1 skoMC1 skoMC1 (-1))+(skoSC1 ((skoMC1 skoMC1 skoMC1 (1/12))+(skoSC1 skoMC1 skoMC1 skoMC1 (1/12))))))))))]]]]]]]]]]]].

% In SMTLib2 format:
(declare-fun skoSC1 () Real) (declare-fun skoMC1 () Real) (assert (and (> (* skoMC1 (* skoMC1 (* skoMC1 (- 2.)))) 0.) (and (> (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (+ 1. (* skoMC1 (- 3.)))))) (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (+ 2. (* skoMC1 3.))))) (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (+ (/ (- 1.) 6.) skoMC1)))) (* skoSC1 (* skoMC1 (* skoMC1 (* skoMC1 (/ (- 1.) 4.))))))))))) (* skoMC1 (* skoMC1 (* skoMC1 (+ 2. (* skoMC1 5.)))))) (and (> (* skoSC1 (+ (* skoMC1 (+ (- 1.) (* skoMC1 3.))) (* skoSC1 (+ (* skoMC1 (+ (- 2.) (* skoMC1 (- 3.)))) (* skoSC1 (+ (* skoMC1 (+ (/ 1. 6.) (* skoMC1 (- 1.)))) (* skoSC1 (* skoMC1 (/ 1. 4.))))))))) (* skoMC1 (+ (- 2.) (* skoMC1 (- 5.))))) (and (> skoSC1 0.) (and (> (* skoSC1 (+ (* skoMC1 (* skoMC1 skoMC1)) (* skoSC1 (* skoMC1 (* skoMC1 skoMC1))))) 0.) (and (> (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 2.))) (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (- 1.)))) (* skoSC1 (* skoMC1 (* skoMC1 (* skoMC1 (- 1.))))))))) (* skoMC1 (* skoMC1 (* skoMC1 (- 2.))))) (and (> (* skoSC1 (* skoMC1 (* skoMC1 skoMC1))) (* skoMC1 (* skoMC1 (* skoMC1 (- 1.))))) (and (> (* skoMC1 (* skoMC1 (* skoMC1 2.))) 0.) (and (> skoMC1 0.) (and (> (* skoSC1 skoMC1) (* skoMC1 (- 1.))) (and (> (* skoSC1 (* skoMC1 (* skoMC1 (* skoMC1 2.)))) (* skoMC1 (* skoMC1 (* skoMC1 (- 2.))))) (> (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (* skoMC1 12.)))) (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (+ (- 1.) (* skoMC1 6.))))) (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (- 1.)))) (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (/ 1. 12.)))) (* skoSC1 (* skoMC1 (* skoMC1 (* skoMC1 (/ 1. 12.))))))))))))) (* skoMC1 (* skoMC1 (* skoMC1 (+ (- 2.) (* skoMC1 (- 6.)))))))))))))))))))

% In GRF format:
(sequent " MetiTarski formula " (antecedent (> (* skoMC1 (* skoMC1 (* skoMC1 (- 2.)))) 0.) (> (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (+ 1. (* skoMC1 (- 3.)))))) (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (+ 2. (* skoMC1 3.))))) (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (+ (/ (- 1.) 6.) skoMC1)))) (* skoSC1 (* skoMC1 (* skoMC1 (* skoMC1 (/ (- 1.) 4.))))))))))) (* skoMC1 (* skoMC1 (* skoMC1 (+ 2. (* skoMC1 5.)))))) (> (* skoSC1 (+ (* skoMC1 (+ (- 1.) (* skoMC1 3.))) (* skoSC1 (+ (* skoMC1 (+ (- 2.) (* skoMC1 (- 3.)))) (* skoSC1 (+ (* skoMC1 (+ (/ 1. 6.) (* skoMC1 (- 1.)))) (* skoSC1 (* skoMC1 (/ 1. 4.))))))))) (* skoMC1 (+ (- 2.) (* skoMC1 (- 5.))))) (> skoSC1 0.) (> (* skoSC1 (+ (* skoMC1 (* skoMC1 skoMC1)) (* skoSC1 (* skoMC1 (* skoMC1 skoMC1))))) 0.) (> (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 2.))) (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (- 1.)))) (* skoSC1 (* skoMC1 (* skoMC1 (* skoMC1 (- 1.))))))))) (* skoMC1 (* skoMC1 (* skoMC1 (- 2.))))) (> (* skoSC1 (* skoMC1 (* skoMC1 skoMC1))) (* skoMC1 (* skoMC1 (* skoMC1 (- 1.))))) (> (* skoMC1 (* skoMC1 (* skoMC1 2.))) 0.) (> skoMC1 0.) (> (* skoSC1 skoMC1) (* skoMC1 (- 1.))) (> (* skoSC1 (* skoMC1 (* skoMC1 (* skoMC1 2.)))) (* skoMC1 (* skoMC1 (* skoMC1 (- 2.)))))) (succedent (<= (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (* skoMC1 12.)))) (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (+ (- 1.) (* skoMC1 6.))))) (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (- 1.)))) (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (/ 1. 12.)))) (* skoSC1 (* skoMC1 (* skoMC1 (* skoMC1 (/ 1. 12.))))))))))))) (* skoMC1 (* skoMC1 (* skoMC1 (+ (- 2.) (* skoMC1 (- 6.)))))))))
-----[end problem]-----

-----[begin problem]-----
% In Mathematica format:
Timing[Resolve[Exists[{skoSC1,skoMC1}, And[skoMC1*skoMC1*skoMC1*2>0,skoSC1*(skoMC1*skoMC1*skoMC1*(-1+skoMC1*3)+skoSC1*(skoMC1*skoMC1*skoMC1*(-2+skoMC1*-3)+skoSC1*(skoMC1*skoMC1*skoMC1*((1/6)+skoMC1*-1)+skoSC1*skoMC1*skoMC1*skoMC1*(1/4))))>skoMC1*skoMC1*skoMC1*(-2+skoMC1*-5),skoSC1*(skoMC1*(-1+skoMC1*3)+skoSC1*(skoMC1*(-2+skoMC1*-3)+skoSC1*(skoMC1*((1/6)+skoMC1*-1)+skoSC1*skoMC1*(1/4))))>skoMC1*(-2+skoMC1*-5),skoSC1>0,skoSC1*(skoMC1*skoMC1*skoMC1+skoSC1*skoMC1*skoMC1*skoMC1)>0,skoSC1*(skoMC1*skoMC1*skoMC1*2+skoSC1*(skoMC1*skoMC1*skoMC1*-1+skoSC1*skoMC1*skoMC1*skoMC1*-1))>skoMC1*skoMC1*skoMC1*-2,skoSC1*skoMC1*skoMC1*skoMC1>skoMC1*skoMC1*skoMC1*-1,skoMC1*skoMC1*skoMC1*2>0,skoMC1>0,skoSC1*skoMC1>skoMC1*-1,skoSC1*skoMC1*skoMC1*skoMC1*2>skoMC1*skoMC1*skoMC1*-2,skoSC1*(skoMC1*skoMC1*skoMC1*skoMC1*12+skoSC1*(skoMC1*skoMC1*skoMC1*(-1+skoMC1*6)+skoSC1*(skoMC1*skoMC1*skoMC1*-1+skoSC1*(skoMC1*skoMC1*skoMC1*(1/12)+skoSC1*skoMC1*skoMC1*skoMC1*(1/12)))))>skoMC1*skoMC1*skoMC1*(-2+skoMC1*-6)]], Reals]]

% In QepcadB format:
(E skoSC1) (E skoMC1) [[0<(skoMC1 skoMC1 skoMC1 (2))]/\[[(skoMC1 skoMC1 skoMC1 (-2+(skoMC1 (-5))))<(skoSC1 ((skoMC1 skoMC1 skoMC1 (-1+(skoMC1 (3))))+(skoSC1 ((skoMC1 skoMC1 skoMC1 (-2+(skoMC1 (-3))))+(skoSC1 ((skoMC1 skoMC1 skoMC1 (1/6+(skoMC1 (-1))))+(skoSC1 skoMC1 skoMC1 skoMC1 (1/4))))))))]/\[[(skoMC1 (-2+(skoMC1 (-5))))<(skoSC1 ((skoMC1 (-1+(skoMC1 (3))))+(skoSC1 ((skoMC1 (-2+(skoMC1 (-3))))+(skoSC1 ((skoMC1 (1/6+(skoMC1 (-1))))+(skoSC1 skoMC1 (1/4))))))))]/\[[0<skoSC1]/\[[0<(skoSC1 ((skoMC1 skoMC1 skoMC1)+(skoSC1 skoMC1 skoMC1 skoMC1)))]/\[[(skoMC1 skoMC1 skoMC1 (-2))<(skoSC1 ((skoMC1 skoMC1 skoMC1 (2))+(skoSC1 ((skoMC1 skoMC1 skoMC1 (-1))+(skoSC1 skoMC1 skoMC1 skoMC1 (-1))))))]/\[[(skoMC1 skoMC1 skoMC1 (-1))<(skoSC1 skoMC1 skoMC1 skoMC1)]/\[[0<(skoMC1 skoMC1 skoMC1 (2))]/\[[0<skoMC1]/\[[(skoMC1 (-1))<(skoSC1 skoMC1)]/\[[(skoMC1 skoMC1 skoMC1 (-2))<(skoSC1 skoMC1 skoMC1 skoMC1 (2))]/\[(skoMC1 skoMC1 skoMC1 (-2+(skoMC1 (-6))))<(skoSC1 ((skoMC1 skoMC1 skoMC1 skoMC1 (12))+(skoSC1 ((skoMC1 skoMC1 skoMC1 (-1+(skoMC1 (6))))+(skoSC1 ((skoMC1 skoMC1 skoMC1 (-1))+(skoSC1 ((skoMC1 skoMC1 skoMC1 (1/12))+(skoSC1 skoMC1 skoMC1 skoMC1 (1/12))))))))))]]]]]]]]]]]].

% In SMTLib2 format:
(declare-fun skoSC1 () Real) (declare-fun skoMC1 () Real) (assert (and (> (* skoMC1 (* skoMC1 (* skoMC1 2.))) 0.) (and (> (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (+ (- 1.) (* skoMC1 3.))))) (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (+ (- 2.) (* skoMC1 (- 3.)))))) (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (+ (/ 1. 6.) (* skoMC1 (- 1.)))))) (* skoSC1 (* skoMC1 (* skoMC1 (* skoMC1 (/ 1. 4.))))))))))) (* skoMC1 (* skoMC1 (* skoMC1 (+ (- 2.) (* skoMC1 (- 5.))))))) (and (> (* skoSC1 (+ (* skoMC1 (+ (- 1.) (* skoMC1 3.))) (* skoSC1 (+ (* skoMC1 (+ (- 2.) (* skoMC1 (- 3.)))) (* skoSC1 (+ (* skoMC1 (+ (/ 1. 6.) (* skoMC1 (- 1.)))) (* skoSC1 (* skoMC1 (/ 1. 4.))))))))) (* skoMC1 (+ (- 2.) (* skoMC1 (- 5.))))) (and (> skoSC1 0.) (and (> (* skoSC1 (+ (* skoMC1 (* skoMC1 skoMC1)) (* skoSC1 (* skoMC1 (* skoMC1 skoMC1))))) 0.) (and (> (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 2.))) (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (- 1.)))) (* skoSC1 (* skoMC1 (* skoMC1 (* skoMC1 (- 1.))))))))) (* skoMC1 (* skoMC1 (* skoMC1 (- 2.))))) (and (> (* skoSC1 (* skoMC1 (* skoMC1 skoMC1))) (* skoMC1 (* skoMC1 (* skoMC1 (- 1.))))) (and (> (* skoMC1 (* skoMC1 (* skoMC1 2.))) 0.) (and (> skoMC1 0.) (and (> (* skoSC1 skoMC1) (* skoMC1 (- 1.))) (and (> (* skoSC1 (* skoMC1 (* skoMC1 (* skoMC1 2.)))) (* skoMC1 (* skoMC1 (* skoMC1 (- 2.))))) (> (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (* skoMC1 12.)))) (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (+ (- 1.) (* skoMC1 6.))))) (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (- 1.)))) (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (/ 1. 12.)))) (* skoSC1 (* skoMC1 (* skoMC1 (* skoMC1 (/ 1. 12.))))))))))))) (* skoMC1 (* skoMC1 (* skoMC1 (+ (- 2.) (* skoMC1 (- 6.)))))))))))))))))))

% In GRF format:
(sequent " MetiTarski formula " (antecedent (> (* skoMC1 (* skoMC1 (* skoMC1 2.))) 0.) (> (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (+ (- 1.) (* skoMC1 3.))))) (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (+ (- 2.) (* skoMC1 (- 3.)))))) (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (+ (/ 1. 6.) (* skoMC1 (- 1.)))))) (* skoSC1 (* skoMC1 (* skoMC1 (* skoMC1 (/ 1. 4.))))))))))) (* skoMC1 (* skoMC1 (* skoMC1 (+ (- 2.) (* skoMC1 (- 5.))))))) (> (* skoSC1 (+ (* skoMC1 (+ (- 1.) (* skoMC1 3.))) (* skoSC1 (+ (* skoMC1 (+ (- 2.) (* skoMC1 (- 3.)))) (* skoSC1 (+ (* skoMC1 (+ (/ 1. 6.) (* skoMC1 (- 1.)))) (* skoSC1 (* skoMC1 (/ 1. 4.))))))))) (* skoMC1 (+ (- 2.) (* skoMC1 (- 5.))))) (> skoSC1 0.) (> (* skoSC1 (+ (* skoMC1 (* skoMC1 skoMC1)) (* skoSC1 (* skoMC1 (* skoMC1 skoMC1))))) 0.) (> (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 2.))) (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (- 1.)))) (* skoSC1 (* skoMC1 (* skoMC1 (* skoMC1 (- 1.))))))))) (* skoMC1 (* skoMC1 (* skoMC1 (- 2.))))) (> (* skoSC1 (* skoMC1 (* skoMC1 skoMC1))) (* skoMC1 (* skoMC1 (* skoMC1 (- 1.))))) (> (* skoMC1 (* skoMC1 (* skoMC1 2.))) 0.) (> skoMC1 0.) (> (* skoSC1 skoMC1) (* skoMC1 (- 1.))) (> (* skoSC1 (* skoMC1 (* skoMC1 (* skoMC1 2.)))) (* skoMC1 (* skoMC1 (* skoMC1 (- 2.)))))) (succedent (<= (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (* skoMC1 12.)))) (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (+ (- 1.) (* skoMC1 6.))))) (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (- 1.)))) (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (/ 1. 12.)))) (* skoSC1 (* skoMC1 (* skoMC1 (* skoMC1 (/ 1. 12.))))))))))))) (* skoMC1 (* skoMC1 (* skoMC1 (+ (- 2.) (* skoMC1 (- 6.)))))))))
-----[end problem]-----

-----[begin problem]-----
% In Mathematica format:
Timing[Resolve[Exists[{skoSC1,skoMC1}, And[skoMC1*skoMC1*skoMC1*2>0,skoSC1*(skoMC1*skoMC1*skoMC1*(-1+skoMC1*3)+skoSC1*(skoMC1*skoMC1*skoMC1*(-2+skoMC1*-3)+skoSC1*(skoMC1*skoMC1*skoMC1*((1/6)+skoMC1*-1)+skoSC1*skoMC1*skoMC1*skoMC1*(1/4))))>skoMC1*skoMC1*skoMC1*(-2+skoMC1*-5),skoSC1*(skoMC1*(-1+skoMC1*3)+skoSC1*(skoMC1*(-2+skoMC1*-3)+skoSC1*(skoMC1*((1/6)+skoMC1*-1)+skoSC1*skoMC1*(1/4))))>skoMC1*(-2+skoMC1*-5),skoSC1>0,skoSC1*(skoMC1*skoMC1*skoMC1*-2+skoSC1*(skoMC1*skoMC1*skoMC1+skoSC1*skoMC1*skoMC1*skoMC1))<=skoMC1*skoMC1*skoMC1*2,skoSC1*(skoMC1*skoMC1*skoMC1+skoSC1*skoMC1*skoMC1*skoMC1)>0,skoSC1*(skoMC1*skoMC1*skoMC1*2+skoSC1*(skoMC1*skoMC1*skoMC1*-1+skoSC1*skoMC1*skoMC1*skoMC1*-1))>skoMC1*skoMC1*skoMC1*-2,skoSC1*(skoMC1*skoMC1*skoMC1*-1+skoSC1*skoMC1*skoMC1*skoMC1*-1)<=0,skoSC1*skoMC1*skoMC1*skoMC1*-1<=skoMC1*skoMC1*skoMC1,skoSC1*skoMC1*skoMC1*skoMC1>skoMC1*skoMC1*skoMC1*-1,skoMC1*skoMC1*skoMC1*-2<=0,skoMC1*skoMC1*skoMC1*2>0,skoSC1<=(5/4),2<=skoMC1,0<=skoSC1,skoMC1>0,0<=skoMC1,skoSC1*skoMC1>skoMC1*-1,skoSC1*skoMC1*-1<=skoMC1,skoSC1*skoMC1*skoMC1*skoMC1*2>skoMC1*skoMC1*skoMC1*-2,skoSC1*skoMC1*skoMC1*skoMC1*-2<=skoMC1*skoMC1*skoMC1*2,skoSC1*(skoMC1*skoMC1*skoMC1*skoMC1*12+skoSC1*(skoMC1*skoMC1*skoMC1*(-1+skoMC1*6)+skoSC1*(skoMC1*skoMC1*skoMC1*-1+skoSC1*(skoMC1*skoMC1*skoMC1*(1/12)+skoSC1*skoMC1*skoMC1*skoMC1*(1/12)))))>skoMC1*skoMC1*skoMC1*(-2+skoMC1*-6),skoSC1*(skoMC1*skoMC1*skoMC1*skoMC1*-12+skoSC1*(skoMC1*skoMC1*skoMC1*(1+skoMC1*-6)+skoSC1*(skoMC1*skoMC1*skoMC1+skoSC1*(skoMC1*skoMC1*skoMC1*(-1/12)+skoSC1*skoMC1*skoMC1*skoMC1*(-1/12)))))<=skoMC1*skoMC1*skoMC1*(2+skoMC1*6)]], Reals]]

% In QepcadB format:
(E skoSC1) (E skoMC1) [[0<(skoMC1 skoMC1 skoMC1 (2))]/\[[(skoMC1 skoMC1 skoMC1 (-2+(skoMC1 (-5))))<(skoSC1 ((skoMC1 skoMC1 skoMC1 (-1+(skoMC1 (3))))+(skoSC1 ((skoMC1 skoMC1 skoMC1 (-2+(skoMC1 (-3))))+(skoSC1 ((skoMC1 skoMC1 skoMC1 (1/6+(skoMC1 (-1))))+(skoSC1 skoMC1 skoMC1 skoMC1 (1/4))))))))]/\[[(skoMC1 (-2+(skoMC1 (-5))))<(skoSC1 ((skoMC1 (-1+(skoMC1 (3))))+(skoSC1 ((skoMC1 (-2+(skoMC1 (-3))))+(skoSC1 ((skoMC1 (1/6+(skoMC1 (-1))))+(skoSC1 skoMC1 (1/4))))))))]/\[[0<skoSC1]/\[[(skoSC1 ((skoMC1 skoMC1 skoMC1 (-2))+(skoSC1 ((skoMC1 skoMC1 skoMC1)+(skoSC1 skoMC1 skoMC1 skoMC1)))))<=(skoMC1 skoMC1 skoMC1 (2))]/\[[0<(skoSC1 ((skoMC1 skoMC1 skoMC1)+(skoSC1 skoMC1 skoMC1 skoMC1)))]/\[[(skoMC1 skoMC1 skoMC1 (-2))<(skoSC1 ((skoMC1 skoMC1 skoMC1 (2))+(skoSC1 ((skoMC1 skoMC1 skoMC1 (-1))+(skoSC1 skoMC1 skoMC1 skoMC1 (-1))))))]/\[[(skoSC1 ((skoMC1 skoMC1 skoMC1 (-1))+(skoSC1 skoMC1 skoMC1 skoMC1 (-1))))<=0]/\[[(skoSC1 skoMC1 skoMC1 skoMC1 (-1))<=(skoMC1 skoMC1 skoMC1)]/\[[(skoMC1 skoMC1 skoMC1 (-1))<(skoSC1 skoMC1 skoMC1 skoMC1)]/\[[(skoMC1 skoMC1 skoMC1 (-2))<=0]/\[[0<(skoMC1 skoMC1 skoMC1 (2))]/\[[skoSC1<=5/4]/\[[2<=skoMC1]/\[[0<=skoSC1]/\[[0<skoMC1]/\[[0<=skoMC1]/\[[(skoMC1 (-1))<(skoSC1 skoMC1)]/\[[(skoSC1 skoMC1 (-1))<=skoMC1]/\[[(skoMC1 skoMC1 skoMC1 (-2))<(skoSC1 skoMC1 skoMC1 skoMC1 (2))]/\[[(skoSC1 skoMC1 skoMC1 skoMC1 (-2))<=(skoMC1 skoMC1 skoMC1 (2))]/\[[(skoMC1 skoMC1 skoMC1 (-2+(skoMC1 (-6))))<(skoSC1 ((skoMC1 skoMC1 skoMC1 skoMC1 (12))+(skoSC1 ((skoMC1 skoMC1 skoMC1 (-1+(skoMC1 (6))))+(skoSC1 ((skoMC1 skoMC1 skoMC1 (-1))+(skoSC1 ((skoMC1 skoMC1 skoMC1 (1/12))+(skoSC1 skoMC1 skoMC1 skoMC1 (1/12))))))))))]/\[(skoSC1 ((skoMC1 skoMC1 skoMC1 skoMC1 (-12))+(skoSC1 ((skoMC1 skoMC1 skoMC1 (1+(skoMC1 (-6))))+(skoSC1 ((skoMC1 skoMC1 skoMC1)+(skoSC1 ((skoMC1 skoMC1 skoMC1 (-1/12))+(skoSC1 skoMC1 skoMC1 skoMC1 (-1/12))))))))))<=(skoMC1 skoMC1 skoMC1 (2+(skoMC1 (6))))]]]]]]]]]]]]]]]]]]]]]]].

% In SMTLib2 format:
(declare-fun skoSC1 () Real) (declare-fun skoMC1 () Real) (assert (and (> (* skoMC1 (* skoMC1 (* skoMC1 2.))) 0.) (and (> (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (+ (- 1.) (* skoMC1 3.))))) (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (+ (- 2.) (* skoMC1 (- 3.)))))) (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (+ (/ 1. 6.) (* skoMC1 (- 1.)))))) (* skoSC1 (* skoMC1 (* skoMC1 (* skoMC1 (/ 1. 4.))))))))))) (* skoMC1 (* skoMC1 (* skoMC1 (+ (- 2.) (* skoMC1 (- 5.))))))) (and (> (* skoSC1 (+ (* skoMC1 (+ (- 1.) (* skoMC1 3.))) (* skoSC1 (+ (* skoMC1 (+ (- 2.) (* skoMC1 (- 3.)))) (* skoSC1 (+ (* skoMC1 (+ (/ 1. 6.) (* skoMC1 (- 1.)))) (* skoSC1 (* skoMC1 (/ 1. 4.))))))))) (* skoMC1 (+ (- 2.) (* skoMC1 (- 5.))))) (and (> skoSC1 0.) (and (<= (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (- 2.)))) (* skoSC1 (+ (* skoMC1 (* skoMC1 skoMC1)) (* skoSC1 (* skoMC1 (* skoMC1 skoMC1))))))) (* skoMC1 (* skoMC1 (* skoMC1 2.)))) (and (> (* skoSC1 (+ (* skoMC1 (* skoMC1 skoMC1)) (* skoSC1 (* skoMC1 (* skoMC1 skoMC1))))) 0.) (and (> (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 2.))) (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (- 1.)))) (* skoSC1 (* skoMC1 (* skoMC1 (* skoMC1 (- 1.))))))))) (* skoMC1 (* skoMC1 (* skoMC1 (- 2.))))) (and (<= (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (- 1.)))) (* skoSC1 (* skoMC1 (* skoMC1 (* skoMC1 (- 1.))))))) 0.) (and (<= (* skoSC1 (* skoMC1 (* skoMC1 (* skoMC1 (- 1.))))) (* skoMC1 (* skoMC1 skoMC1))) (and (> (* skoSC1 (* skoMC1 (* skoMC1 skoMC1))) (* skoMC1 (* skoMC1 (* skoMC1 (- 1.))))) (and (<= (* skoMC1 (* skoMC1 (* skoMC1 (- 2.)))) 0.) (and (> (* skoMC1 (* skoMC1 (* skoMC1 2.))) 0.) (and (<= skoSC1 (/ 5. 4.)) (and (<= 2. skoMC1) (and (<= 0. skoSC1) (and (> skoMC1 0.) (and (<= 0. skoMC1) (and (> (* skoSC1 skoMC1) (* skoMC1 (- 1.))) (and (<= (* skoSC1 (* skoMC1 (- 1.))) skoMC1) (and (> (* skoSC1 (* skoMC1 (* skoMC1 (* skoMC1 2.)))) (* skoMC1 (* skoMC1 (* skoMC1 (- 2.))))) (and (<= (* skoSC1 (* skoMC1 (* skoMC1 (* skoMC1 (- 2.))))) (* skoMC1 (* skoMC1 (* skoMC1 2.)))) (and (> (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (* skoMC1 12.)))) (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (+ (- 1.) (* skoMC1 6.))))) (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (- 1.)))) (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (/ 1. 12.)))) (* skoSC1 (* skoMC1 (* skoMC1 (* skoMC1 (/ 1. 12.))))))))))))) (* skoMC1 (* skoMC1 (* skoMC1 (+ (- 2.) (* skoMC1 (- 6.))))))) (<= (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (* skoMC1 (- 12.))))) (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (+ 1. (* skoMC1 (- 6.)))))) (* skoSC1 (+ (* skoMC1 (* skoMC1 skoMC1)) (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (/ (- 1.) 12.)))) (* skoSC1 (* skoMC1 (* skoMC1 (* skoMC1 (/ (- 1.) 12.))))))))))))) (* skoMC1 (* skoMC1 (* skoMC1 (+ 2. (* skoMC1 6.)))))))))))))))))))))))))))))

% In GRF format:
(sequent " MetiTarski formula " (antecedent (> (* skoMC1 (* skoMC1 (* skoMC1 2.))) 0.) (> (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (+ (- 1.) (* skoMC1 3.))))) (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (+ (- 2.) (* skoMC1 (- 3.)))))) (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (+ (/ 1. 6.) (* skoMC1 (- 1.)))))) (* skoSC1 (* skoMC1 (* skoMC1 (* skoMC1 (/ 1. 4.))))))))))) (* skoMC1 (* skoMC1 (* skoMC1 (+ (- 2.) (* skoMC1 (- 5.))))))) (> (* skoSC1 (+ (* skoMC1 (+ (- 1.) (* skoMC1 3.))) (* skoSC1 (+ (* skoMC1 (+ (- 2.) (* skoMC1 (- 3.)))) (* skoSC1 (+ (* skoMC1 (+ (/ 1. 6.) (* skoMC1 (- 1.)))) (* skoSC1 (* skoMC1 (/ 1. 4.))))))))) (* skoMC1 (+ (- 2.) (* skoMC1 (- 5.))))) (> skoSC1 0.) (<= (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (- 2.)))) (* skoSC1 (+ (* skoMC1 (* skoMC1 skoMC1)) (* skoSC1 (* skoMC1 (* skoMC1 skoMC1))))))) (* skoMC1 (* skoMC1 (* skoMC1 2.)))) (> (* skoSC1 (+ (* skoMC1 (* skoMC1 skoMC1)) (* skoSC1 (* skoMC1 (* skoMC1 skoMC1))))) 0.) (> (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 2.))) (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (- 1.)))) (* skoSC1 (* skoMC1 (* skoMC1 (* skoMC1 (- 1.))))))))) (* skoMC1 (* skoMC1 (* skoMC1 (- 2.))))) (<= (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (- 1.)))) (* skoSC1 (* skoMC1 (* skoMC1 (* skoMC1 (- 1.))))))) 0.) (<= (* skoSC1 (* skoMC1 (* skoMC1 (* skoMC1 (- 1.))))) (* skoMC1 (* skoMC1 skoMC1))) (> (* skoSC1 (* skoMC1 (* skoMC1 skoMC1))) (* skoMC1 (* skoMC1 (* skoMC1 (- 1.))))) (<= (* skoMC1 (* skoMC1 (* skoMC1 (- 2.)))) 0.) (> (* skoMC1 (* skoMC1 (* skoMC1 2.))) 0.) (<= skoSC1 (/ 5. 4.)) (<= 2. skoMC1) (<= 0. skoSC1) (> skoMC1 0.) (<= 0. skoMC1) (> (* skoSC1 skoMC1) (* skoMC1 (- 1.))) (<= (* skoSC1 (* skoMC1 (- 1.))) skoMC1) (> (* skoSC1 (* skoMC1 (* skoMC1 (* skoMC1 2.)))) (* skoMC1 (* skoMC1 (* skoMC1 (- 2.))))) (<= (* skoSC1 (* skoMC1 (* skoMC1 (* skoMC1 (- 2.))))) (* skoMC1 (* skoMC1 (* skoMC1 2.)))) (> (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (* skoMC1 12.)))) (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (+ (- 1.) (* skoMC1 6.))))) (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (- 1.)))) (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (/ 1. 12.)))) (* skoSC1 (* skoMC1 (* skoMC1 (* skoMC1 (/ 1. 12.))))))))))))) (* skoMC1 (* skoMC1 (* skoMC1 (+ (- 2.) (* skoMC1 (- 6.)))))))) (succedent (> (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (* skoMC1 (- 12.))))) (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (+ 1. (* skoMC1 (- 6.)))))) (* skoSC1 (+ (* skoMC1 (* skoMC1 skoMC1)) (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (/ (- 1.) 12.)))) (* skoSC1 (* skoMC1 (* skoMC1 (* skoMC1 (/ (- 1.) 12.))))))))))))) (* skoMC1 (* skoMC1 (* skoMC1 (+ 2. (* skoMC1 6.))))))))
-----[end problem]-----

-----[begin problem]-----
% In Mathematica format:
Timing[Resolve[Exists[{skoSC1,skoMC1}, And[skoMC1*skoMC1*skoMC1*2<=0,skoSC1*(skoMC1*skoMC1*skoMC1*(-1+skoMC1*3)+skoSC1*(skoMC1*skoMC1*skoMC1*(-2+skoMC1*-3)+skoSC1*(skoMC1*skoMC1*skoMC1*((1/6)+skoMC1*-1)+skoSC1*skoMC1*skoMC1*skoMC1*(1/4))))<=skoMC1*skoMC1*skoMC1*(-2+skoMC1*-5),skoSC1*(skoMC1*(-1+skoMC1*3)+skoSC1*(skoMC1*(-2+skoMC1*-3)+skoSC1*(skoMC1*((1/6)+skoMC1*-1)+skoSC1*skoMC1*(1/4))))>skoMC1*(-2+skoMC1*-5),skoSC1>0,skoSC1*(skoMC1*skoMC1*skoMC1*-2+skoSC1*(skoMC1*skoMC1*skoMC1+skoSC1*skoMC1*skoMC1*skoMC1))<=skoMC1*skoMC1*skoMC1*2,skoSC1*(skoMC1*skoMC1*skoMC1+skoSC1*skoMC1*skoMC1*skoMC1)>0,skoSC1*(skoMC1*skoMC1*skoMC1*2+skoSC1*(skoMC1*skoMC1*skoMC1*-1+skoSC1*skoMC1*skoMC1*skoMC1*-1))>skoMC1*skoMC1*skoMC1*-2,skoSC1*(skoMC1*skoMC1*skoMC1*-1+skoSC1*skoMC1*skoMC1*skoMC1*-1)<=0,skoSC1*skoMC1*skoMC1*skoMC1*-1<=skoMC1*skoMC1*skoMC1,skoSC1*skoMC1*skoMC1*skoMC1>skoMC1*skoMC1*skoMC1*-1,skoMC1*skoMC1*skoMC1*-2<=0,skoMC1*skoMC1*skoMC1*2>0,skoSC1<=(5/4),2<=skoMC1,0<=skoSC1,skoMC1>0,0<=skoMC1,skoSC1*skoMC1>skoMC1*-1,skoSC1*skoMC1*-1<=skoMC1,skoSC1*skoMC1*skoMC1*skoMC1*2>skoMC1*skoMC1*skoMC1*-2,skoSC1*skoMC1*skoMC1*skoMC1*-2<=skoMC1*skoMC1*skoMC1*2,skoSC1*(skoMC1*skoMC1*skoMC1*skoMC1*12+skoSC1*(skoMC1*skoMC1*skoMC1*(-1+skoMC1*6)+skoSC1*(skoMC1*skoMC1*skoMC1*-1+skoSC1*(skoMC1*skoMC1*skoMC1*(1/12)+skoSC1*skoMC1*skoMC1*skoMC1*(1/12)))))>skoMC1*skoMC1*skoMC1*(-2+skoMC1*-6),skoSC1*(skoMC1*skoMC1*skoMC1*skoMC1*-12+skoSC1*(skoMC1*skoMC1*skoMC1*(1+skoMC1*-6)+skoSC1*(skoMC1*skoMC1*skoMC1+skoSC1*(skoMC1*skoMC1*skoMC1*(-1/12)+skoSC1*skoMC1*skoMC1*skoMC1*(-1/12)))))<=skoMC1*skoMC1*skoMC1*(2+skoMC1*6)]], Reals]]

% In QepcadB format:
(E skoSC1) (E skoMC1) [[(skoMC1 skoMC1 skoMC1 (2))<=0]/\[[(skoSC1 ((skoMC1 skoMC1 skoMC1 (-1+(skoMC1 (3))))+(skoSC1 ((skoMC1 skoMC1 skoMC1 (-2+(skoMC1 (-3))))+(skoSC1 ((skoMC1 skoMC1 skoMC1 (1/6+(skoMC1 (-1))))+(skoSC1 skoMC1 skoMC1 skoMC1 (1/4))))))))<=(skoMC1 skoMC1 skoMC1 (-2+(skoMC1 (-5))))]/\[[(skoMC1 (-2+(skoMC1 (-5))))<(skoSC1 ((skoMC1 (-1+(skoMC1 (3))))+(skoSC1 ((skoMC1 (-2+(skoMC1 (-3))))+(skoSC1 ((skoMC1 (1/6+(skoMC1 (-1))))+(skoSC1 skoMC1 (1/4))))))))]/\[[0<skoSC1]/\[[(skoSC1 ((skoMC1 skoMC1 skoMC1 (-2))+(skoSC1 ((skoMC1 skoMC1 skoMC1)+(skoSC1 skoMC1 skoMC1 skoMC1)))))<=(skoMC1 skoMC1 skoMC1 (2))]/\[[0<(skoSC1 ((skoMC1 skoMC1 skoMC1)+(skoSC1 skoMC1 skoMC1 skoMC1)))]/\[[(skoMC1 skoMC1 skoMC1 (-2))<(skoSC1 ((skoMC1 skoMC1 skoMC1 (2))+(skoSC1 ((skoMC1 skoMC1 skoMC1 (-1))+(skoSC1 skoMC1 skoMC1 skoMC1 (-1))))))]/\[[(skoSC1 ((skoMC1 skoMC1 skoMC1 (-1))+(skoSC1 skoMC1 skoMC1 skoMC1 (-1))))<=0]/\[[(skoSC1 skoMC1 skoMC1 skoMC1 (-1))<=(skoMC1 skoMC1 skoMC1)]/\[[(skoMC1 skoMC1 skoMC1 (-1))<(skoSC1 skoMC1 skoMC1 skoMC1)]/\[[(skoMC1 skoMC1 skoMC1 (-2))<=0]/\[[0<(skoMC1 skoMC1 skoMC1 (2))]/\[[skoSC1<=5/4]/\[[2<=skoMC1]/\[[0<=skoSC1]/\[[0<skoMC1]/\[[0<=skoMC1]/\[[(skoMC1 (-1))<(skoSC1 skoMC1)]/\[[(skoSC1 skoMC1 (-1))<=skoMC1]/\[[(skoMC1 skoMC1 skoMC1 (-2))<(skoSC1 skoMC1 skoMC1 skoMC1 (2))]/\[[(skoSC1 skoMC1 skoMC1 skoMC1 (-2))<=(skoMC1 skoMC1 skoMC1 (2))]/\[[(skoMC1 skoMC1 skoMC1 (-2+(skoMC1 (-6))))<(skoSC1 ((skoMC1 skoMC1 skoMC1 skoMC1 (12))+(skoSC1 ((skoMC1 skoMC1 skoMC1 (-1+(skoMC1 (6))))+(skoSC1 ((skoMC1 skoMC1 skoMC1 (-1))+(skoSC1 ((skoMC1 skoMC1 skoMC1 (1/12))+(skoSC1 skoMC1 skoMC1 skoMC1 (1/12))))))))))]/\[(skoSC1 ((skoMC1 skoMC1 skoMC1 skoMC1 (-12))+(skoSC1 ((skoMC1 skoMC1 skoMC1 (1+(skoMC1 (-6))))+(skoSC1 ((skoMC1 skoMC1 skoMC1)+(skoSC1 ((skoMC1 skoMC1 skoMC1 (-1/12))+(skoSC1 skoMC1 skoMC1 skoMC1 (-1/12))))))))))<=(skoMC1 skoMC1 skoMC1 (2+(skoMC1 (6))))]]]]]]]]]]]]]]]]]]]]]]].

% In SMTLib2 format:
(declare-fun skoSC1 () Real) (declare-fun skoMC1 () Real) (assert (and (<= (* skoMC1 (* skoMC1 (* skoMC1 2.))) 0.) (and (<= (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (+ (- 1.) (* skoMC1 3.))))) (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (+ (- 2.) (* skoMC1 (- 3.)))))) (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (+ (/ 1. 6.) (* skoMC1 (- 1.)))))) (* skoSC1 (* skoMC1 (* skoMC1 (* skoMC1 (/ 1. 4.))))))))))) (* skoMC1 (* skoMC1 (* skoMC1 (+ (- 2.) (* skoMC1 (- 5.))))))) (and (> (* skoSC1 (+ (* skoMC1 (+ (- 1.) (* skoMC1 3.))) (* skoSC1 (+ (* skoMC1 (+ (- 2.) (* skoMC1 (- 3.)))) (* skoSC1 (+ (* skoMC1 (+ (/ 1. 6.) (* skoMC1 (- 1.)))) (* skoSC1 (* skoMC1 (/ 1. 4.))))))))) (* skoMC1 (+ (- 2.) (* skoMC1 (- 5.))))) (and (> skoSC1 0.) (and (<= (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (- 2.)))) (* skoSC1 (+ (* skoMC1 (* skoMC1 skoMC1)) (* skoSC1 (* skoMC1 (* skoMC1 skoMC1))))))) (* skoMC1 (* skoMC1 (* skoMC1 2.)))) (and (> (* skoSC1 (+ (* skoMC1 (* skoMC1 skoMC1)) (* skoSC1 (* skoMC1 (* skoMC1 skoMC1))))) 0.) (and (> (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 2.))) (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (- 1.)))) (* skoSC1 (* skoMC1 (* skoMC1 (* skoMC1 (- 1.))))))))) (* skoMC1 (* skoMC1 (* skoMC1 (- 2.))))) (and (<= (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (- 1.)))) (* skoSC1 (* skoMC1 (* skoMC1 (* skoMC1 (- 1.))))))) 0.) (and (<= (* skoSC1 (* skoMC1 (* skoMC1 (* skoMC1 (- 1.))))) (* skoMC1 (* skoMC1 skoMC1))) (and (> (* skoSC1 (* skoMC1 (* skoMC1 skoMC1))) (* skoMC1 (* skoMC1 (* skoMC1 (- 1.))))) (and (<= (* skoMC1 (* skoMC1 (* skoMC1 (- 2.)))) 0.) (and (> (* skoMC1 (* skoMC1 (* skoMC1 2.))) 0.) (and (<= skoSC1 (/ 5. 4.)) (and (<= 2. skoMC1) (and (<= 0. skoSC1) (and (> skoMC1 0.) (and (<= 0. skoMC1) (and (> (* skoSC1 skoMC1) (* skoMC1 (- 1.))) (and (<= (* skoSC1 (* skoMC1 (- 1.))) skoMC1) (and (> (* skoSC1 (* skoMC1 (* skoMC1 (* skoMC1 2.)))) (* skoMC1 (* skoMC1 (* skoMC1 (- 2.))))) (and (<= (* skoSC1 (* skoMC1 (* skoMC1 (* skoMC1 (- 2.))))) (* skoMC1 (* skoMC1 (* skoMC1 2.)))) (and (> (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (* skoMC1 12.)))) (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (+ (- 1.) (* skoMC1 6.))))) (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (- 1.)))) (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (/ 1. 12.)))) (* skoSC1 (* skoMC1 (* skoMC1 (* skoMC1 (/ 1. 12.))))))))))))) (* skoMC1 (* skoMC1 (* skoMC1 (+ (- 2.) (* skoMC1 (- 6.))))))) (<= (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (* skoMC1 (- 12.))))) (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (+ 1. (* skoMC1 (- 6.)))))) (* skoSC1 (+ (* skoMC1 (* skoMC1 skoMC1)) (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (/ (- 1.) 12.)))) (* skoSC1 (* skoMC1 (* skoMC1 (* skoMC1 (/ (- 1.) 12.))))))))))))) (* skoMC1 (* skoMC1 (* skoMC1 (+ 2. (* skoMC1 6.)))))))))))))))))))))))))))))

% In GRF format:
(sequent " MetiTarski formula " (antecedent (<= (* skoMC1 (* skoMC1 (* skoMC1 2.))) 0.) (<= (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (+ (- 1.) (* skoMC1 3.))))) (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (+ (- 2.) (* skoMC1 (- 3.)))))) (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (+ (/ 1. 6.) (* skoMC1 (- 1.)))))) (* skoSC1 (* skoMC1 (* skoMC1 (* skoMC1 (/ 1. 4.))))))))))) (* skoMC1 (* skoMC1 (* skoMC1 (+ (- 2.) (* skoMC1 (- 5.))))))) (> (* skoSC1 (+ (* skoMC1 (+ (- 1.) (* skoMC1 3.))) (* skoSC1 (+ (* skoMC1 (+ (- 2.) (* skoMC1 (- 3.)))) (* skoSC1 (+ (* skoMC1 (+ (/ 1. 6.) (* skoMC1 (- 1.)))) (* skoSC1 (* skoMC1 (/ 1. 4.))))))))) (* skoMC1 (+ (- 2.) (* skoMC1 (- 5.))))) (> skoSC1 0.) (<= (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (- 2.)))) (* skoSC1 (+ (* skoMC1 (* skoMC1 skoMC1)) (* skoSC1 (* skoMC1 (* skoMC1 skoMC1))))))) (* skoMC1 (* skoMC1 (* skoMC1 2.)))) (> (* skoSC1 (+ (* skoMC1 (* skoMC1 skoMC1)) (* skoSC1 (* skoMC1 (* skoMC1 skoMC1))))) 0.) (> (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 2.))) (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (- 1.)))) (* skoSC1 (* skoMC1 (* skoMC1 (* skoMC1 (- 1.))))))))) (* skoMC1 (* skoMC1 (* skoMC1 (- 2.))))) (<= (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (- 1.)))) (* skoSC1 (* skoMC1 (* skoMC1 (* skoMC1 (- 1.))))))) 0.) (<= (* skoSC1 (* skoMC1 (* skoMC1 (* skoMC1 (- 1.))))) (* skoMC1 (* skoMC1 skoMC1))) (> (* skoSC1 (* skoMC1 (* skoMC1 skoMC1))) (* skoMC1 (* skoMC1 (* skoMC1 (- 1.))))) (<= (* skoMC1 (* skoMC1 (* skoMC1 (- 2.)))) 0.) (> (* skoMC1 (* skoMC1 (* skoMC1 2.))) 0.) (<= skoSC1 (/ 5. 4.)) (<= 2. skoMC1) (<= 0. skoSC1) (> skoMC1 0.) (<= 0. skoMC1) (> (* skoSC1 skoMC1) (* skoMC1 (- 1.))) (<= (* skoSC1 (* skoMC1 (- 1.))) skoMC1) (> (* skoSC1 (* skoMC1 (* skoMC1 (* skoMC1 2.)))) (* skoMC1 (* skoMC1 (* skoMC1 (- 2.))))) (<= (* skoSC1 (* skoMC1 (* skoMC1 (* skoMC1 (- 2.))))) (* skoMC1 (* skoMC1 (* skoMC1 2.)))) (> (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (* skoMC1 12.)))) (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (+ (- 1.) (* skoMC1 6.))))) (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (- 1.)))) (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (/ 1. 12.)))) (* skoSC1 (* skoMC1 (* skoMC1 (* skoMC1 (/ 1. 12.))))))))))))) (* skoMC1 (* skoMC1 (* skoMC1 (+ (- 2.) (* skoMC1 (- 6.)))))))) (succedent (> (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (* skoMC1 (- 12.))))) (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (+ 1. (* skoMC1 (- 6.)))))) (* skoSC1 (+ (* skoMC1 (* skoMC1 skoMC1)) (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (/ (- 1.) 12.)))) (* skoSC1 (* skoMC1 (* skoMC1 (* skoMC1 (/ (- 1.) 12.))))))))))))) (* skoMC1 (* skoMC1 (* skoMC1 (+ 2. (* skoMC1 6.))))))))
-----[end problem]-----

-----[begin problem]-----
% In Mathematica format:
Timing[Resolve[Exists[{skoSC1,skoMC1}, And[skoMC1*skoMC1*skoMC1*-2<=0,skoSC1*(skoMC1*(-1+skoMC1*3)+skoSC1*(skoMC1*(-2+skoMC1*-3)+skoSC1*(skoMC1*((1/6)+skoMC1*-1)+skoSC1*skoMC1*(1/4))))>skoMC1*(-2+skoMC1*-5),skoSC1>0,skoSC1*(skoMC1*skoMC1*skoMC1*-2+skoSC1*(skoMC1*skoMC1*skoMC1+skoSC1*skoMC1*skoMC1*skoMC1))<=skoMC1*skoMC1*skoMC1*2,skoSC1*(skoMC1*skoMC1*skoMC1+skoSC1*skoMC1*skoMC1*skoMC1)>0,skoSC1*(skoMC1*skoMC1*skoMC1*2+skoSC1*(skoMC1*skoMC1*skoMC1*-1+skoSC1*skoMC1*skoMC1*skoMC1*-1))>skoMC1*skoMC1*skoMC1*-2,skoSC1*(skoMC1*skoMC1*skoMC1*-1+skoSC1*skoMC1*skoMC1*skoMC1*-1)<=0,skoSC1*skoMC1*skoMC1*skoMC1*-1<=skoMC1*skoMC1*skoMC1,skoSC1*skoMC1*skoMC1*skoMC1>skoMC1*skoMC1*skoMC1*-1,skoMC1*skoMC1*skoMC1*-2<=0,skoMC1*skoMC1*skoMC1*2>0,skoSC1<=(5/4),2<=skoMC1,0<=skoSC1,skoMC1>0,0<=skoMC1,skoSC1*skoMC1>skoMC1*-1,skoSC1*skoMC1*-1<=skoMC1,skoSC1*skoMC1*skoMC1*skoMC1*2>skoMC1*skoMC1*skoMC1*-2,skoSC1*skoMC1*skoMC1*skoMC1*-2<=skoMC1*skoMC1*skoMC1*2,skoSC1*(skoMC1*skoMC1*skoMC1*skoMC1*12+skoSC1*(skoMC1*skoMC1*skoMC1*(-1+skoMC1*6)+skoSC1*(skoMC1*skoMC1*skoMC1*-1+skoSC1*(skoMC1*skoMC1*skoMC1*(1/12)+skoSC1*skoMC1*skoMC1*skoMC1*(1/12)))))>skoMC1*skoMC1*skoMC1*(-2+skoMC1*-6),skoSC1*(skoMC1*skoMC1*skoMC1*skoMC1*-12+skoSC1*(skoMC1*skoMC1*skoMC1*(1+skoMC1*-6)+skoSC1*(skoMC1*skoMC1*skoMC1+skoSC1*(skoMC1*skoMC1*skoMC1*(-1/12)+skoSC1*skoMC1*skoMC1*skoMC1*(-1/12)))))<=skoMC1*skoMC1*skoMC1*(2+skoMC1*6)]], Reals]]

% In QepcadB format:
(E skoSC1) (E skoMC1) [[(skoMC1 skoMC1 skoMC1 (-2))<=0]/\[[(skoMC1 (-2+(skoMC1 (-5))))<(skoSC1 ((skoMC1 (-1+(skoMC1 (3))))+(skoSC1 ((skoMC1 (-2+(skoMC1 (-3))))+(skoSC1 ((skoMC1 (1/6+(skoMC1 (-1))))+(skoSC1 skoMC1 (1/4))))))))]/\[[0<skoSC1]/\[[(skoSC1 ((skoMC1 skoMC1 skoMC1 (-2))+(skoSC1 ((skoMC1 skoMC1 skoMC1)+(skoSC1 skoMC1 skoMC1 skoMC1)))))<=(skoMC1 skoMC1 skoMC1 (2))]/\[[0<(skoSC1 ((skoMC1 skoMC1 skoMC1)+(skoSC1 skoMC1 skoMC1 skoMC1)))]/\[[(skoMC1 skoMC1 skoMC1 (-2))<(skoSC1 ((skoMC1 skoMC1 skoMC1 (2))+(skoSC1 ((skoMC1 skoMC1 skoMC1 (-1))+(skoSC1 skoMC1 skoMC1 skoMC1 (-1))))))]/\[[(skoSC1 ((skoMC1 skoMC1 skoMC1 (-1))+(skoSC1 skoMC1 skoMC1 skoMC1 (-1))))<=0]/\[[(skoSC1 skoMC1 skoMC1 skoMC1 (-1))<=(skoMC1 skoMC1 skoMC1)]/\[[(skoMC1 skoMC1 skoMC1 (-1))<(skoSC1 skoMC1 skoMC1 skoMC1)]/\[[(skoMC1 skoMC1 skoMC1 (-2))<=0]/\[[0<(skoMC1 skoMC1 skoMC1 (2))]/\[[skoSC1<=5/4]/\[[2<=skoMC1]/\[[0<=skoSC1]/\[[0<skoMC1]/\[[0<=skoMC1]/\[[(skoMC1 (-1))<(skoSC1 skoMC1)]/\[[(skoSC1 skoMC1 (-1))<=skoMC1]/\[[(skoMC1 skoMC1 skoMC1 (-2))<(skoSC1 skoMC1 skoMC1 skoMC1 (2))]/\[[(skoSC1 skoMC1 skoMC1 skoMC1 (-2))<=(skoMC1 skoMC1 skoMC1 (2))]/\[[(skoMC1 skoMC1 skoMC1 (-2+(skoMC1 (-6))))<(skoSC1 ((skoMC1 skoMC1 skoMC1 skoMC1 (12))+(skoSC1 ((skoMC1 skoMC1 skoMC1 (-1+(skoMC1 (6))))+(skoSC1 ((skoMC1 skoMC1 skoMC1 (-1))+(skoSC1 ((skoMC1 skoMC1 skoMC1 (1/12))+(skoSC1 skoMC1 skoMC1 skoMC1 (1/12))))))))))]/\[(skoSC1 ((skoMC1 skoMC1 skoMC1 skoMC1 (-12))+(skoSC1 ((skoMC1 skoMC1 skoMC1 (1+(skoMC1 (-6))))+(skoSC1 ((skoMC1 skoMC1 skoMC1)+(skoSC1 ((skoMC1 skoMC1 skoMC1 (-1/12))+(skoSC1 skoMC1 skoMC1 skoMC1 (-1/12))))))))))<=(skoMC1 skoMC1 skoMC1 (2+(skoMC1 (6))))]]]]]]]]]]]]]]]]]]]]]].

% In SMTLib2 format:
(declare-fun skoSC1 () Real) (declare-fun skoMC1 () Real) (assert (and (<= (* skoMC1 (* skoMC1 (* skoMC1 (- 2.)))) 0.) (and (> (* skoSC1 (+ (* skoMC1 (+ (- 1.) (* skoMC1 3.))) (* skoSC1 (+ (* skoMC1 (+ (- 2.) (* skoMC1 (- 3.)))) (* skoSC1 (+ (* skoMC1 (+ (/ 1. 6.) (* skoMC1 (- 1.)))) (* skoSC1 (* skoMC1 (/ 1. 4.))))))))) (* skoMC1 (+ (- 2.) (* skoMC1 (- 5.))))) (and (> skoSC1 0.) (and (<= (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (- 2.)))) (* skoSC1 (+ (* skoMC1 (* skoMC1 skoMC1)) (* skoSC1 (* skoMC1 (* skoMC1 skoMC1))))))) (* skoMC1 (* skoMC1 (* skoMC1 2.)))) (and (> (* skoSC1 (+ (* skoMC1 (* skoMC1 skoMC1)) (* skoSC1 (* skoMC1 (* skoMC1 skoMC1))))) 0.) (and (> (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 2.))) (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (- 1.)))) (* skoSC1 (* skoMC1 (* skoMC1 (* skoMC1 (- 1.))))))))) (* skoMC1 (* skoMC1 (* skoMC1 (- 2.))))) (and (<= (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (- 1.)))) (* skoSC1 (* skoMC1 (* skoMC1 (* skoMC1 (- 1.))))))) 0.) (and (<= (* skoSC1 (* skoMC1 (* skoMC1 (* skoMC1 (- 1.))))) (* skoMC1 (* skoMC1 skoMC1))) (and (> (* skoSC1 (* skoMC1 (* skoMC1 skoMC1))) (* skoMC1 (* skoMC1 (* skoMC1 (- 1.))))) (and (<= (* skoMC1 (* skoMC1 (* skoMC1 (- 2.)))) 0.) (and (> (* skoMC1 (* skoMC1 (* skoMC1 2.))) 0.) (and (<= skoSC1 (/ 5. 4.)) (and (<= 2. skoMC1) (and (<= 0. skoSC1) (and (> skoMC1 0.) (and (<= 0. skoMC1) (and (> (* skoSC1 skoMC1) (* skoMC1 (- 1.))) (and (<= (* skoSC1 (* skoMC1 (- 1.))) skoMC1) (and (> (* skoSC1 (* skoMC1 (* skoMC1 (* skoMC1 2.)))) (* skoMC1 (* skoMC1 (* skoMC1 (- 2.))))) (and (<= (* skoSC1 (* skoMC1 (* skoMC1 (* skoMC1 (- 2.))))) (* skoMC1 (* skoMC1 (* skoMC1 2.)))) (and (> (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (* skoMC1 12.)))) (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (+ (- 1.) (* skoMC1 6.))))) (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (- 1.)))) (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (/ 1. 12.)))) (* skoSC1 (* skoMC1 (* skoMC1 (* skoMC1 (/ 1. 12.))))))))))))) (* skoMC1 (* skoMC1 (* skoMC1 (+ (- 2.) (* skoMC1 (- 6.))))))) (<= (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (* skoMC1 (- 12.))))) (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (+ 1. (* skoMC1 (- 6.)))))) (* skoSC1 (+ (* skoMC1 (* skoMC1 skoMC1)) (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (/ (- 1.) 12.)))) (* skoSC1 (* skoMC1 (* skoMC1 (* skoMC1 (/ (- 1.) 12.))))))))))))) (* skoMC1 (* skoMC1 (* skoMC1 (+ 2. (* skoMC1 6.))))))))))))))))))))))))))))

% In GRF format:
(sequent " MetiTarski formula " (antecedent (<= (* skoMC1 (* skoMC1 (* skoMC1 (- 2.)))) 0.) (> (* skoSC1 (+ (* skoMC1 (+ (- 1.) (* skoMC1 3.))) (* skoSC1 (+ (* skoMC1 (+ (- 2.) (* skoMC1 (- 3.)))) (* skoSC1 (+ (* skoMC1 (+ (/ 1. 6.) (* skoMC1 (- 1.)))) (* skoSC1 (* skoMC1 (/ 1. 4.))))))))) (* skoMC1 (+ (- 2.) (* skoMC1 (- 5.))))) (> skoSC1 0.) (<= (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (- 2.)))) (* skoSC1 (+ (* skoMC1 (* skoMC1 skoMC1)) (* skoSC1 (* skoMC1 (* skoMC1 skoMC1))))))) (* skoMC1 (* skoMC1 (* skoMC1 2.)))) (> (* skoSC1 (+ (* skoMC1 (* skoMC1 skoMC1)) (* skoSC1 (* skoMC1 (* skoMC1 skoMC1))))) 0.) (> (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 2.))) (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (- 1.)))) (* skoSC1 (* skoMC1 (* skoMC1 (* skoMC1 (- 1.))))))))) (* skoMC1 (* skoMC1 (* skoMC1 (- 2.))))) (<= (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (- 1.)))) (* skoSC1 (* skoMC1 (* skoMC1 (* skoMC1 (- 1.))))))) 0.) (<= (* skoSC1 (* skoMC1 (* skoMC1 (* skoMC1 (- 1.))))) (* skoMC1 (* skoMC1 skoMC1))) (> (* skoSC1 (* skoMC1 (* skoMC1 skoMC1))) (* skoMC1 (* skoMC1 (* skoMC1 (- 1.))))) (<= (* skoMC1 (* skoMC1 (* skoMC1 (- 2.)))) 0.) (> (* skoMC1 (* skoMC1 (* skoMC1 2.))) 0.) (<= skoSC1 (/ 5. 4.)) (<= 2. skoMC1) (<= 0. skoSC1) (> skoMC1 0.) (<= 0. skoMC1) (> (* skoSC1 skoMC1) (* skoMC1 (- 1.))) (<= (* skoSC1 (* skoMC1 (- 1.))) skoMC1) (> (* skoSC1 (* skoMC1 (* skoMC1 (* skoMC1 2.)))) (* skoMC1 (* skoMC1 (* skoMC1 (- 2.))))) (<= (* skoSC1 (* skoMC1 (* skoMC1 (* skoMC1 (- 2.))))) (* skoMC1 (* skoMC1 (* skoMC1 2.)))) (> (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (* skoMC1 12.)))) (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (+ (- 1.) (* skoMC1 6.))))) (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (- 1.)))) (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (/ 1. 12.)))) (* skoSC1 (* skoMC1 (* skoMC1 (* skoMC1 (/ 1. 12.))))))))))))) (* skoMC1 (* skoMC1 (* skoMC1 (+ (- 2.) (* skoMC1 (- 6.)))))))) (succedent (> (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (* skoMC1 (- 12.))))) (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (+ 1. (* skoMC1 (- 6.)))))) (* skoSC1 (+ (* skoMC1 (* skoMC1 skoMC1)) (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (/ (- 1.) 12.)))) (* skoSC1 (* skoMC1 (* skoMC1 (* skoMC1 (/ (- 1.) 12.))))))))))))) (* skoMC1 (* skoMC1 (* skoMC1 (+ 2. (* skoMC1 6.))))))))
-----[end problem]-----

-----[begin problem]-----
% In Mathematica format:
Timing[Resolve[Exists[{skoSC1,skoMC1}, And[skoSC1*(skoMC1*skoMC1*skoMC1*(-1+skoMC1*3)+skoSC1*(skoMC1*skoMC1*skoMC1*(-2+skoMC1*-3)+skoSC1*(skoMC1*skoMC1*skoMC1*((1/6)+skoMC1*-1)+skoSC1*skoMC1*skoMC1*skoMC1*(1/4))))>skoMC1*skoMC1*skoMC1*(-2+skoMC1*-5),skoSC1*(skoMC1*(-1+skoMC1*3)+skoSC1*(skoMC1*(-2+skoMC1*-3)+skoSC1*(skoMC1*((1/6)+skoMC1*-1)+skoSC1*skoMC1*(1/4))))>skoMC1*(-2+skoMC1*-5),skoSC1>0,skoSC1*(skoMC1*skoMC1*skoMC1+skoSC1*skoMC1*skoMC1*skoMC1)>0,skoSC1*(skoMC1*skoMC1*skoMC1*2+skoSC1*(skoMC1*skoMC1*skoMC1*-1+skoSC1*skoMC1*skoMC1*skoMC1*-1))>skoMC1*skoMC1*skoMC1*-2,skoSC1*skoMC1*skoMC1*skoMC1>skoMC1*skoMC1*skoMC1*-1,skoMC1*skoMC1*skoMC1*2>0,skoMC1>0,skoSC1*skoMC1>skoMC1*-1,skoSC1*skoMC1*skoMC1*skoMC1*2>skoMC1*skoMC1*skoMC1*-2,skoSC1*(skoMC1*skoMC1*skoMC1*skoMC1*12+skoSC1*(skoMC1*skoMC1*skoMC1*(-1+skoMC1*6)+skoSC1*(skoMC1*skoMC1*skoMC1*-1+skoSC1*(skoMC1*skoMC1*skoMC1*(1/12)+skoSC1*skoMC1*skoMC1*skoMC1*(1/12)))))>skoMC1*skoMC1*skoMC1*(-2+skoMC1*-6)]], Reals]]

% In QepcadB format:
(E skoSC1) (E skoMC1) [[(skoMC1 skoMC1 skoMC1 (-2+(skoMC1 (-5))))<(skoSC1 ((skoMC1 skoMC1 skoMC1 (-1+(skoMC1 (3))))+(skoSC1 ((skoMC1 skoMC1 skoMC1 (-2+(skoMC1 (-3))))+(skoSC1 ((skoMC1 skoMC1 skoMC1 (1/6+(skoMC1 (-1))))+(skoSC1 skoMC1 skoMC1 skoMC1 (1/4))))))))]/\[[(skoMC1 (-2+(skoMC1 (-5))))<(skoSC1 ((skoMC1 (-1+(skoMC1 (3))))+(skoSC1 ((skoMC1 (-2+(skoMC1 (-3))))+(skoSC1 ((skoMC1 (1/6+(skoMC1 (-1))))+(skoSC1 skoMC1 (1/4))))))))]/\[[0<skoSC1]/\[[0<(skoSC1 ((skoMC1 skoMC1 skoMC1)+(skoSC1 skoMC1 skoMC1 skoMC1)))]/\[[(skoMC1 skoMC1 skoMC1 (-2))<(skoSC1 ((skoMC1 skoMC1 skoMC1 (2))+(skoSC1 ((skoMC1 skoMC1 skoMC1 (-1))+(skoSC1 skoMC1 skoMC1 skoMC1 (-1))))))]/\[[(skoMC1 skoMC1 skoMC1 (-1))<(skoSC1 skoMC1 skoMC1 skoMC1)]/\[[0<(skoMC1 skoMC1 skoMC1 (2))]/\[[0<skoMC1]/\[[(skoMC1 (-1))<(skoSC1 skoMC1)]/\[[(skoMC1 skoMC1 skoMC1 (-2))<(skoSC1 skoMC1 skoMC1 skoMC1 (2))]/\[(skoMC1 skoMC1 skoMC1 (-2+(skoMC1 (-6))))<(skoSC1 ((skoMC1 skoMC1 skoMC1 skoMC1 (12))+(skoSC1 ((skoMC1 skoMC1 skoMC1 (-1+(skoMC1 (6))))+(skoSC1 ((skoMC1 skoMC1 skoMC1 (-1))+(skoSC1 ((skoMC1 skoMC1 skoMC1 (1/12))+(skoSC1 skoMC1 skoMC1 skoMC1 (1/12))))))))))]]]]]]]]]]].

% In SMTLib2 format:
(declare-fun skoSC1 () Real) (declare-fun skoMC1 () Real) (assert (and (> (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (+ (- 1.) (* skoMC1 3.))))) (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (+ (- 2.) (* skoMC1 (- 3.)))))) (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (+ (/ 1. 6.) (* skoMC1 (- 1.)))))) (* skoSC1 (* skoMC1 (* skoMC1 (* skoMC1 (/ 1. 4.))))))))))) (* skoMC1 (* skoMC1 (* skoMC1 (+ (- 2.) (* skoMC1 (- 5.))))))) (and (> (* skoSC1 (+ (* skoMC1 (+ (- 1.) (* skoMC1 3.))) (* skoSC1 (+ (* skoMC1 (+ (- 2.) (* skoMC1 (- 3.)))) (* skoSC1 (+ (* skoMC1 (+ (/ 1. 6.) (* skoMC1 (- 1.)))) (* skoSC1 (* skoMC1 (/ 1. 4.))))))))) (* skoMC1 (+ (- 2.) (* skoMC1 (- 5.))))) (and (> skoSC1 0.) (and (> (* skoSC1 (+ (* skoMC1 (* skoMC1 skoMC1)) (* skoSC1 (* skoMC1 (* skoMC1 skoMC1))))) 0.) (and (> (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 2.))) (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (- 1.)))) (* skoSC1 (* skoMC1 (* skoMC1 (* skoMC1 (- 1.))))))))) (* skoMC1 (* skoMC1 (* skoMC1 (- 2.))))) (and (> (* skoSC1 (* skoMC1 (* skoMC1 skoMC1))) (* skoMC1 (* skoMC1 (* skoMC1 (- 1.))))) (and (> (* skoMC1 (* skoMC1 (* skoMC1 2.))) 0.) (and (> skoMC1 0.) (and (> (* skoSC1 skoMC1) (* skoMC1 (- 1.))) (and (> (* skoSC1 (* skoMC1 (* skoMC1 (* skoMC1 2.)))) (* skoMC1 (* skoMC1 (* skoMC1 (- 2.))))) (> (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (* skoMC1 12.)))) (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (+ (- 1.) (* skoMC1 6.))))) (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (- 1.)))) (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (/ 1. 12.)))) (* skoSC1 (* skoMC1 (* skoMC1 (* skoMC1 (/ 1. 12.))))))))))))) (* skoMC1 (* skoMC1 (* skoMC1 (+ (- 2.) (* skoMC1 (- 6.))))))))))))))))))

% In GRF format:
(sequent " MetiTarski formula " (antecedent (> (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (+ (- 1.) (* skoMC1 3.))))) (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (+ (- 2.) (* skoMC1 (- 3.)))))) (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (+ (/ 1. 6.) (* skoMC1 (- 1.)))))) (* skoSC1 (* skoMC1 (* skoMC1 (* skoMC1 (/ 1. 4.))))))))))) (* skoMC1 (* skoMC1 (* skoMC1 (+ (- 2.) (* skoMC1 (- 5.))))))) (> (* skoSC1 (+ (* skoMC1 (+ (- 1.) (* skoMC1 3.))) (* skoSC1 (+ (* skoMC1 (+ (- 2.) (* skoMC1 (- 3.)))) (* skoSC1 (+ (* skoMC1 (+ (/ 1. 6.) (* skoMC1 (- 1.)))) (* skoSC1 (* skoMC1 (/ 1. 4.))))))))) (* skoMC1 (+ (- 2.) (* skoMC1 (- 5.))))) (> skoSC1 0.) (> (* skoSC1 (+ (* skoMC1 (* skoMC1 skoMC1)) (* skoSC1 (* skoMC1 (* skoMC1 skoMC1))))) 0.) (> (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 2.))) (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (- 1.)))) (* skoSC1 (* skoMC1 (* skoMC1 (* skoMC1 (- 1.))))))))) (* skoMC1 (* skoMC1 (* skoMC1 (- 2.))))) (> (* skoSC1 (* skoMC1 (* skoMC1 skoMC1))) (* skoMC1 (* skoMC1 (* skoMC1 (- 1.))))) (> (* skoMC1 (* skoMC1 (* skoMC1 2.))) 0.) (> skoMC1 0.) (> (* skoSC1 skoMC1) (* skoMC1 (- 1.))) (> (* skoSC1 (* skoMC1 (* skoMC1 (* skoMC1 2.)))) (* skoMC1 (* skoMC1 (* skoMC1 (- 2.)))))) (succedent (<= (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (* skoMC1 12.)))) (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (+ (- 1.) (* skoMC1 6.))))) (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (- 1.)))) (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (/ 1. 12.)))) (* skoSC1 (* skoMC1 (* skoMC1 (* skoMC1 (/ 1. 12.))))))))))))) (* skoMC1 (* skoMC1 (* skoMC1 (+ (- 2.) (* skoMC1 (- 6.)))))))))
-----[end problem]-----

-----[begin problem]-----
% In Mathematica format:
Timing[Resolve[Exists[{skoSC1,skoMC1}, And[skoSC1*(skoMC1*skoMC1*skoMC1*(-1+skoMC1*3)+skoSC1*(skoMC1*skoMC1*skoMC1*(-2+skoMC1*-3)+skoSC1*(skoMC1*skoMC1*skoMC1*((1/6)+skoMC1*-1)+skoSC1*skoMC1*skoMC1*skoMC1*(1/4))))>skoMC1*skoMC1*skoMC1*(-2+skoMC1*-5),skoSC1*(skoMC1*(-1+skoMC1*3)+skoSC1*(skoMC1*(-2+skoMC1*-3)+skoSC1*(skoMC1*((1/6)+skoMC1*-1)+skoSC1*skoMC1*(1/4))))>skoMC1*(-2+skoMC1*-5),skoSC1>0,skoSC1*(skoMC1*skoMC1*skoMC1*-2+skoSC1*(skoMC1*skoMC1*skoMC1+skoSC1*skoMC1*skoMC1*skoMC1))<=skoMC1*skoMC1*skoMC1*2,skoSC1*(skoMC1*skoMC1*skoMC1+skoSC1*skoMC1*skoMC1*skoMC1)>0,skoSC1*(skoMC1*skoMC1*skoMC1*2+skoSC1*(skoMC1*skoMC1*skoMC1*-1+skoSC1*skoMC1*skoMC1*skoMC1*-1))>skoMC1*skoMC1*skoMC1*-2,skoSC1*(skoMC1*skoMC1*skoMC1*-1+skoSC1*skoMC1*skoMC1*skoMC1*-1)<=0,skoSC1*skoMC1*skoMC1*skoMC1*-1<=skoMC1*skoMC1*skoMC1,skoSC1*skoMC1*skoMC1*skoMC1>skoMC1*skoMC1*skoMC1*-1,skoMC1*skoMC1*skoMC1*-2<=0,skoMC1*skoMC1*skoMC1*2>0,skoSC1<=(5/4),2<=skoMC1,0<=skoSC1,skoMC1>0,0<=skoMC1,skoSC1*skoMC1>skoMC1*-1,skoSC1*skoMC1*-1<=skoMC1,skoSC1*skoMC1*skoMC1*skoMC1*2>skoMC1*skoMC1*skoMC1*-2,skoSC1*skoMC1*skoMC1*skoMC1*-2<=skoMC1*skoMC1*skoMC1*2,skoSC1*(skoMC1*skoMC1*skoMC1*skoMC1*12+skoSC1*(skoMC1*skoMC1*skoMC1*(-1+skoMC1*6)+skoSC1*(skoMC1*skoMC1*skoMC1*-1+skoSC1*(skoMC1*skoMC1*skoMC1*(1/12)+skoSC1*skoMC1*skoMC1*skoMC1*(1/12)))))>skoMC1*skoMC1*skoMC1*(-2+skoMC1*-6),skoSC1*(skoMC1*skoMC1*skoMC1*skoMC1*-12+skoSC1*(skoMC1*skoMC1*skoMC1*(1+skoMC1*-6)+skoSC1*(skoMC1*skoMC1*skoMC1+skoSC1*(skoMC1*skoMC1*skoMC1*(-1/12)+skoSC1*skoMC1*skoMC1*skoMC1*(-1/12)))))<=skoMC1*skoMC1*skoMC1*(2+skoMC1*6)]], Reals]]

% In QepcadB format:
(E skoSC1) (E skoMC1) [[(skoMC1 skoMC1 skoMC1 (-2+(skoMC1 (-5))))<(skoSC1 ((skoMC1 skoMC1 skoMC1 (-1+(skoMC1 (3))))+(skoSC1 ((skoMC1 skoMC1 skoMC1 (-2+(skoMC1 (-3))))+(skoSC1 ((skoMC1 skoMC1 skoMC1 (1/6+(skoMC1 (-1))))+(skoSC1 skoMC1 skoMC1 skoMC1 (1/4))))))))]/\[[(skoMC1 (-2+(skoMC1 (-5))))<(skoSC1 ((skoMC1 (-1+(skoMC1 (3))))+(skoSC1 ((skoMC1 (-2+(skoMC1 (-3))))+(skoSC1 ((skoMC1 (1/6+(skoMC1 (-1))))+(skoSC1 skoMC1 (1/4))))))))]/\[[0<skoSC1]/\[[(skoSC1 ((skoMC1 skoMC1 skoMC1 (-2))+(skoSC1 ((skoMC1 skoMC1 skoMC1)+(skoSC1 skoMC1 skoMC1 skoMC1)))))<=(skoMC1 skoMC1 skoMC1 (2))]/\[[0<(skoSC1 ((skoMC1 skoMC1 skoMC1)+(skoSC1 skoMC1 skoMC1 skoMC1)))]/\[[(skoMC1 skoMC1 skoMC1 (-2))<(skoSC1 ((skoMC1 skoMC1 skoMC1 (2))+(skoSC1 ((skoMC1 skoMC1 skoMC1 (-1))+(skoSC1 skoMC1 skoMC1 skoMC1 (-1))))))]/\[[(skoSC1 ((skoMC1 skoMC1 skoMC1 (-1))+(skoSC1 skoMC1 skoMC1 skoMC1 (-1))))<=0]/\[[(skoSC1 skoMC1 skoMC1 skoMC1 (-1))<=(skoMC1 skoMC1 skoMC1)]/\[[(skoMC1 skoMC1 skoMC1 (-1))<(skoSC1 skoMC1 skoMC1 skoMC1)]/\[[(skoMC1 skoMC1 skoMC1 (-2))<=0]/\[[0<(skoMC1 skoMC1 skoMC1 (2))]/\[[skoSC1<=5/4]/\[[2<=skoMC1]/\[[0<=skoSC1]/\[[0<skoMC1]/\[[0<=skoMC1]/\[[(skoMC1 (-1))<(skoSC1 skoMC1)]/\[[(skoSC1 skoMC1 (-1))<=skoMC1]/\[[(skoMC1 skoMC1 skoMC1 (-2))<(skoSC1 skoMC1 skoMC1 skoMC1 (2))]/\[[(skoSC1 skoMC1 skoMC1 skoMC1 (-2))<=(skoMC1 skoMC1 skoMC1 (2))]/\[[(skoMC1 skoMC1 skoMC1 (-2+(skoMC1 (-6))))<(skoSC1 ((skoMC1 skoMC1 skoMC1 skoMC1 (12))+(skoSC1 ((skoMC1 skoMC1 skoMC1 (-1+(skoMC1 (6))))+(skoSC1 ((skoMC1 skoMC1 skoMC1 (-1))+(skoSC1 ((skoMC1 skoMC1 skoMC1 (1/12))+(skoSC1 skoMC1 skoMC1 skoMC1 (1/12))))))))))]/\[(skoSC1 ((skoMC1 skoMC1 skoMC1 skoMC1 (-12))+(skoSC1 ((skoMC1 skoMC1 skoMC1 (1+(skoMC1 (-6))))+(skoSC1 ((skoMC1 skoMC1 skoMC1)+(skoSC1 ((skoMC1 skoMC1 skoMC1 (-1/12))+(skoSC1 skoMC1 skoMC1 skoMC1 (-1/12))))))))))<=(skoMC1 skoMC1 skoMC1 (2+(skoMC1 (6))))]]]]]]]]]]]]]]]]]]]]]].

% In SMTLib2 format:
(declare-fun skoSC1 () Real) (declare-fun skoMC1 () Real) (assert (and (> (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (+ (- 1.) (* skoMC1 3.))))) (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (+ (- 2.) (* skoMC1 (- 3.)))))) (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (+ (/ 1. 6.) (* skoMC1 (- 1.)))))) (* skoSC1 (* skoMC1 (* skoMC1 (* skoMC1 (/ 1. 4.))))))))))) (* skoMC1 (* skoMC1 (* skoMC1 (+ (- 2.) (* skoMC1 (- 5.))))))) (and (> (* skoSC1 (+ (* skoMC1 (+ (- 1.) (* skoMC1 3.))) (* skoSC1 (+ (* skoMC1 (+ (- 2.) (* skoMC1 (- 3.)))) (* skoSC1 (+ (* skoMC1 (+ (/ 1. 6.) (* skoMC1 (- 1.)))) (* skoSC1 (* skoMC1 (/ 1. 4.))))))))) (* skoMC1 (+ (- 2.) (* skoMC1 (- 5.))))) (and (> skoSC1 0.) (and (<= (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (- 2.)))) (* skoSC1 (+ (* skoMC1 (* skoMC1 skoMC1)) (* skoSC1 (* skoMC1 (* skoMC1 skoMC1))))))) (* skoMC1 (* skoMC1 (* skoMC1 2.)))) (and (> (* skoSC1 (+ (* skoMC1 (* skoMC1 skoMC1)) (* skoSC1 (* skoMC1 (* skoMC1 skoMC1))))) 0.) (and (> (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 2.))) (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (- 1.)))) (* skoSC1 (* skoMC1 (* skoMC1 (* skoMC1 (- 1.))))))))) (* skoMC1 (* skoMC1 (* skoMC1 (- 2.))))) (and (<= (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (- 1.)))) (* skoSC1 (* skoMC1 (* skoMC1 (* skoMC1 (- 1.))))))) 0.) (and (<= (* skoSC1 (* skoMC1 (* skoMC1 (* skoMC1 (- 1.))))) (* skoMC1 (* skoMC1 skoMC1))) (and (> (* skoSC1 (* skoMC1 (* skoMC1 skoMC1))) (* skoMC1 (* skoMC1 (* skoMC1 (- 1.))))) (and (<= (* skoMC1 (* skoMC1 (* skoMC1 (- 2.)))) 0.) (and (> (* skoMC1 (* skoMC1 (* skoMC1 2.))) 0.) (and (<= skoSC1 (/ 5. 4.)) (and (<= 2. skoMC1) (and (<= 0. skoSC1) (and (> skoMC1 0.) (and (<= 0. skoMC1) (and (> (* skoSC1 skoMC1) (* skoMC1 (- 1.))) (and (<= (* skoSC1 (* skoMC1 (- 1.))) skoMC1) (and (> (* skoSC1 (* skoMC1 (* skoMC1 (* skoMC1 2.)))) (* skoMC1 (* skoMC1 (* skoMC1 (- 2.))))) (and (<= (* skoSC1 (* skoMC1 (* skoMC1 (* skoMC1 (- 2.))))) (* skoMC1 (* skoMC1 (* skoMC1 2.)))) (and (> (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (* skoMC1 12.)))) (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (+ (- 1.) (* skoMC1 6.))))) (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (- 1.)))) (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (/ 1. 12.)))) (* skoSC1 (* skoMC1 (* skoMC1 (* skoMC1 (/ 1. 12.))))))))))))) (* skoMC1 (* skoMC1 (* skoMC1 (+ (- 2.) (* skoMC1 (- 6.))))))) (<= (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (* skoMC1 (- 12.))))) (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (+ 1. (* skoMC1 (- 6.)))))) (* skoSC1 (+ (* skoMC1 (* skoMC1 skoMC1)) (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (/ (- 1.) 12.)))) (* skoSC1 (* skoMC1 (* skoMC1 (* skoMC1 (/ (- 1.) 12.))))))))))))) (* skoMC1 (* skoMC1 (* skoMC1 (+ 2. (* skoMC1 6.))))))))))))))))))))))))))))

% In GRF format:
(sequent " MetiTarski formula " (antecedent (> (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (+ (- 1.) (* skoMC1 3.))))) (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (+ (- 2.) (* skoMC1 (- 3.)))))) (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (+ (/ 1. 6.) (* skoMC1 (- 1.)))))) (* skoSC1 (* skoMC1 (* skoMC1 (* skoMC1 (/ 1. 4.))))))))))) (* skoMC1 (* skoMC1 (* skoMC1 (+ (- 2.) (* skoMC1 (- 5.))))))) (> (* skoSC1 (+ (* skoMC1 (+ (- 1.) (* skoMC1 3.))) (* skoSC1 (+ (* skoMC1 (+ (- 2.) (* skoMC1 (- 3.)))) (* skoSC1 (+ (* skoMC1 (+ (/ 1. 6.) (* skoMC1 (- 1.)))) (* skoSC1 (* skoMC1 (/ 1. 4.))))))))) (* skoMC1 (+ (- 2.) (* skoMC1 (- 5.))))) (> skoSC1 0.) (<= (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (- 2.)))) (* skoSC1 (+ (* skoMC1 (* skoMC1 skoMC1)) (* skoSC1 (* skoMC1 (* skoMC1 skoMC1))))))) (* skoMC1 (* skoMC1 (* skoMC1 2.)))) (> (* skoSC1 (+ (* skoMC1 (* skoMC1 skoMC1)) (* skoSC1 (* skoMC1 (* skoMC1 skoMC1))))) 0.) (> (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 2.))) (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (- 1.)))) (* skoSC1 (* skoMC1 (* skoMC1 (* skoMC1 (- 1.))))))))) (* skoMC1 (* skoMC1 (* skoMC1 (- 2.))))) (<= (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (- 1.)))) (* skoSC1 (* skoMC1 (* skoMC1 (* skoMC1 (- 1.))))))) 0.) (<= (* skoSC1 (* skoMC1 (* skoMC1 (* skoMC1 (- 1.))))) (* skoMC1 (* skoMC1 skoMC1))) (> (* skoSC1 (* skoMC1 (* skoMC1 skoMC1))) (* skoMC1 (* skoMC1 (* skoMC1 (- 1.))))) (<= (* skoMC1 (* skoMC1 (* skoMC1 (- 2.)))) 0.) (> (* skoMC1 (* skoMC1 (* skoMC1 2.))) 0.) (<= skoSC1 (/ 5. 4.)) (<= 2. skoMC1) (<= 0. skoSC1) (> skoMC1 0.) (<= 0. skoMC1) (> (* skoSC1 skoMC1) (* skoMC1 (- 1.))) (<= (* skoSC1 (* skoMC1 (- 1.))) skoMC1) (> (* skoSC1 (* skoMC1 (* skoMC1 (* skoMC1 2.)))) (* skoMC1 (* skoMC1 (* skoMC1 (- 2.))))) (<= (* skoSC1 (* skoMC1 (* skoMC1 (* skoMC1 (- 2.))))) (* skoMC1 (* skoMC1 (* skoMC1 2.)))) (> (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (* skoMC1 12.)))) (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (+ (- 1.) (* skoMC1 6.))))) (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (- 1.)))) (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (/ 1. 12.)))) (* skoSC1 (* skoMC1 (* skoMC1 (* skoMC1 (/ 1. 12.))))))))))))) (* skoMC1 (* skoMC1 (* skoMC1 (+ (- 2.) (* skoMC1 (- 6.)))))))) (succedent (> (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (* skoMC1 (- 12.))))) (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (+ 1. (* skoMC1 (- 6.)))))) (* skoSC1 (+ (* skoMC1 (* skoMC1 skoMC1)) (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (/ (- 1.) 12.)))) (* skoSC1 (* skoMC1 (* skoMC1 (* skoMC1 (/ (- 1.) 12.))))))))))))) (* skoMC1 (* skoMC1 (* skoMC1 (+ 2. (* skoMC1 6.))))))))
-----[end problem]-----

-----[begin problem]-----
% In Mathematica format:
Timing[Resolve[Exists[{skoSC1,skoMC1}, And[skoMC1*skoMC1*skoMC1*-2>0,skoSC1*(skoMC1*skoMC1*skoMC1*(1+skoMC1*-3)+skoSC1*(skoMC1*skoMC1*skoMC1*(2+skoMC1*3)+skoSC1*(skoMC1*skoMC1*skoMC1*((-1/6)+skoMC1)+skoSC1*(skoMC1*skoMC1*skoMC1*(-1/4)+skoSC1*skoSC1*(skoMC1*skoMC1*skoMC1*(1/360)+skoSC1*skoSC1*(skoMC1*skoMC1*skoMC1*(-1/20160)+skoSC1*skoSC1*(skoMC1*skoMC1*skoMC1*(1/1814400)+skoSC1*skoSC1*skoMC1*skoMC1*skoMC1*(-1/239500800))))))))>skoMC1*skoMC1*skoMC1*(2+skoMC1*5),skoSC1*(skoMC1*skoMC1*skoMC1*(-1+skoMC1*3)+skoSC1*(skoMC1*skoMC1*skoMC1*(-2+skoMC1*-3)+skoSC1*(skoMC1*skoMC1*skoMC1*((1/6)+skoMC1*-1)+skoSC1*skoMC1*skoMC1*skoMC1*(1/4))))>skoMC1*skoMC1*skoMC1*(-2+skoMC1*-5),skoSC1*(skoMC1*(-1+skoMC1*3)+skoSC1*(skoMC1*(-2+skoMC1*-3)+skoSC1*(skoMC1*((1/6)+skoMC1*-1)+skoSC1*skoMC1*(1/4))))>skoMC1*(-2+skoMC1*-5),skoSC1>0,skoSC1*(skoMC1*skoMC1*skoMC1+skoSC1*skoMC1*skoMC1*skoMC1)>0,skoSC1*(skoMC1*skoMC1*skoMC1*2+skoSC1*(skoMC1*skoMC1*skoMC1*-1+skoSC1*skoMC1*skoMC1*skoMC1*-1))>skoMC1*skoMC1*skoMC1*-2,skoSC1*skoMC1*skoMC1*skoMC1>skoMC1*skoMC1*skoMC1*-1,skoMC1*skoMC1*skoMC1*2>0,skoMC1>0,skoSC1*skoMC1>skoMC1*-1,skoSC1*skoMC1*skoMC1*skoMC1*2>skoMC1*skoMC1*skoMC1*-2,skoSC1*(skoMC1*skoMC1*skoMC1*skoMC1*12+skoSC1*(skoMC1*skoMC1*skoMC1*(-1+skoMC1*6)+skoSC1*(skoMC1*skoMC1*skoMC1*-1+skoSC1*(skoMC1*skoMC1*skoMC1*(1/12)+skoSC1*skoMC1*skoMC1*skoMC1*(1/12)))))>skoMC1*skoMC1*skoMC1*(-2+skoMC1*-6)]], Reals]]

% In QepcadB format:
(E skoSC1) (E skoMC1) [[0<(skoMC1 skoMC1 skoMC1 (-2))]/\[[(skoMC1 skoMC1 skoMC1 (2+(skoMC1 (5))))<(skoSC1 ((skoMC1 skoMC1 skoMC1 (1+(skoMC1 (-3))))+(skoSC1 ((skoMC1 skoMC1 skoMC1 (2+(skoMC1 (3))))+(skoSC1 ((skoMC1 skoMC1 skoMC1 (-1/6+skoMC1))+(skoSC1 ((skoMC1 skoMC1 skoMC1 (-1/4))+(skoSC1 skoSC1 ((skoMC1 skoMC1 skoMC1 (1/360))+(skoSC1 skoSC1 ((skoMC1 skoMC1 skoMC1 (-1/20160))+(skoSC1 skoSC1 ((skoMC1 skoMC1 skoMC1 (1/1814400))+(skoSC1 skoSC1 skoMC1 skoMC1 skoMC1 (-1/239500800))))))))))))))))]/\[[(skoMC1 skoMC1 skoMC1 (-2+(skoMC1 (-5))))<(skoSC1 ((skoMC1 skoMC1 skoMC1 (-1+(skoMC1 (3))))+(skoSC1 ((skoMC1 skoMC1 skoMC1 (-2+(skoMC1 (-3))))+(skoSC1 ((skoMC1 skoMC1 skoMC1 (1/6+(skoMC1 (-1))))+(skoSC1 skoMC1 skoMC1 skoMC1 (1/4))))))))]/\[[(skoMC1 (-2+(skoMC1 (-5))))<(skoSC1 ((skoMC1 (-1+(skoMC1 (3))))+(skoSC1 ((skoMC1 (-2+(skoMC1 (-3))))+(skoSC1 ((skoMC1 (1/6+(skoMC1 (-1))))+(skoSC1 skoMC1 (1/4))))))))]/\[[0<skoSC1]/\[[0<(skoSC1 ((skoMC1 skoMC1 skoMC1)+(skoSC1 skoMC1 skoMC1 skoMC1)))]/\[[(skoMC1 skoMC1 skoMC1 (-2))<(skoSC1 ((skoMC1 skoMC1 skoMC1 (2))+(skoSC1 ((skoMC1 skoMC1 skoMC1 (-1))+(skoSC1 skoMC1 skoMC1 skoMC1 (-1))))))]/\[[(skoMC1 skoMC1 skoMC1 (-1))<(skoSC1 skoMC1 skoMC1 skoMC1)]/\[[0<(skoMC1 skoMC1 skoMC1 (2))]/\[[0<skoMC1]/\[[(skoMC1 (-1))<(skoSC1 skoMC1)]/\[[(skoMC1 skoMC1 skoMC1 (-2))<(skoSC1 skoMC1 skoMC1 skoMC1 (2))]/\[(skoMC1 skoMC1 skoMC1 (-2+(skoMC1 (-6))))<(skoSC1 ((skoMC1 skoMC1 skoMC1 skoMC1 (12))+(skoSC1 ((skoMC1 skoMC1 skoMC1 (-1+(skoMC1 (6))))+(skoSC1 ((skoMC1 skoMC1 skoMC1 (-1))+(skoSC1 ((skoMC1 skoMC1 skoMC1 (1/12))+(skoSC1 skoMC1 skoMC1 skoMC1 (1/12))))))))))]]]]]]]]]]]]].

% In SMTLib2 format:
(declare-fun skoSC1 () Real) (declare-fun skoMC1 () Real) (assert (and (> (* skoMC1 (* skoMC1 (* skoMC1 (- 2.)))) 0.) (and (> (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (+ 1. (* skoMC1 (- 3.)))))) (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (+ 2. (* skoMC1 3.))))) (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (+ (/ (- 1.) 6.) skoMC1)))) (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (/ (- 1.) 4.)))) (* skoSC1 (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (/ 1. 360.)))) (* skoSC1 (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (/ (- 1.) 20160.)))) (* skoSC1 (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (/ 1. 1814400.)))) (* skoSC1 (* skoSC1 (* skoMC1 (* skoMC1 (* skoMC1 (/ (- 1.) 239500800.))))))))))))))))))))))) (* skoMC1 (* skoMC1 (* skoMC1 (+ 2. (* skoMC1 5.)))))) (and (> (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (+ (- 1.) (* skoMC1 3.))))) (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (+ (- 2.) (* skoMC1 (- 3.)))))) (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (+ (/ 1. 6.) (* skoMC1 (- 1.)))))) (* skoSC1 (* skoMC1 (* skoMC1 (* skoMC1 (/ 1. 4.))))))))))) (* skoMC1 (* skoMC1 (* skoMC1 (+ (- 2.) (* skoMC1 (- 5.))))))) (and (> (* skoSC1 (+ (* skoMC1 (+ (- 1.) (* skoMC1 3.))) (* skoSC1 (+ (* skoMC1 (+ (- 2.) (* skoMC1 (- 3.)))) (* skoSC1 (+ (* skoMC1 (+ (/ 1. 6.) (* skoMC1 (- 1.)))) (* skoSC1 (* skoMC1 (/ 1. 4.))))))))) (* skoMC1 (+ (- 2.) (* skoMC1 (- 5.))))) (and (> skoSC1 0.) (and (> (* skoSC1 (+ (* skoMC1 (* skoMC1 skoMC1)) (* skoSC1 (* skoMC1 (* skoMC1 skoMC1))))) 0.) (and (> (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 2.))) (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (- 1.)))) (* skoSC1 (* skoMC1 (* skoMC1 (* skoMC1 (- 1.))))))))) (* skoMC1 (* skoMC1 (* skoMC1 (- 2.))))) (and (> (* skoSC1 (* skoMC1 (* skoMC1 skoMC1))) (* skoMC1 (* skoMC1 (* skoMC1 (- 1.))))) (and (> (* skoMC1 (* skoMC1 (* skoMC1 2.))) 0.) (and (> skoMC1 0.) (and (> (* skoSC1 skoMC1) (* skoMC1 (- 1.))) (and (> (* skoSC1 (* skoMC1 (* skoMC1 (* skoMC1 2.)))) (* skoMC1 (* skoMC1 (* skoMC1 (- 2.))))) (> (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (* skoMC1 12.)))) (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (+ (- 1.) (* skoMC1 6.))))) (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (- 1.)))) (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (/ 1. 12.)))) (* skoSC1 (* skoMC1 (* skoMC1 (* skoMC1 (/ 1. 12.))))))))))))) (* skoMC1 (* skoMC1 (* skoMC1 (+ (- 2.) (* skoMC1 (- 6.))))))))))))))))))))

% In GRF format:
(sequent " MetiTarski formula " (antecedent (> (* skoMC1 (* skoMC1 (* skoMC1 (- 2.)))) 0.) (> (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (+ 1. (* skoMC1 (- 3.)))))) (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (+ 2. (* skoMC1 3.))))) (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (+ (/ (- 1.) 6.) skoMC1)))) (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (/ (- 1.) 4.)))) (* skoSC1 (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (/ 1. 360.)))) (* skoSC1 (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (/ (- 1.) 20160.)))) (* skoSC1 (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (/ 1. 1814400.)))) (* skoSC1 (* skoSC1 (* skoMC1 (* skoMC1 (* skoMC1 (/ (- 1.) 239500800.))))))))))))))))))))))) (* skoMC1 (* skoMC1 (* skoMC1 (+ 2. (* skoMC1 5.)))))) (> (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (+ (- 1.) (* skoMC1 3.))))) (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (+ (- 2.) (* skoMC1 (- 3.)))))) (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (+ (/ 1. 6.) (* skoMC1 (- 1.)))))) (* skoSC1 (* skoMC1 (* skoMC1 (* skoMC1 (/ 1. 4.))))))))))) (* skoMC1 (* skoMC1 (* skoMC1 (+ (- 2.) (* skoMC1 (- 5.))))))) (> (* skoSC1 (+ (* skoMC1 (+ (- 1.) (* skoMC1 3.))) (* skoSC1 (+ (* skoMC1 (+ (- 2.) (* skoMC1 (- 3.)))) (* skoSC1 (+ (* skoMC1 (+ (/ 1. 6.) (* skoMC1 (- 1.)))) (* skoSC1 (* skoMC1 (/ 1. 4.))))))))) (* skoMC1 (+ (- 2.) (* skoMC1 (- 5.))))) (> skoSC1 0.) (> (* skoSC1 (+ (* skoMC1 (* skoMC1 skoMC1)) (* skoSC1 (* skoMC1 (* skoMC1 skoMC1))))) 0.) (> (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 2.))) (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (- 1.)))) (* skoSC1 (* skoMC1 (* skoMC1 (* skoMC1 (- 1.))))))))) (* skoMC1 (* skoMC1 (* skoMC1 (- 2.))))) (> (* skoSC1 (* skoMC1 (* skoMC1 skoMC1))) (* skoMC1 (* skoMC1 (* skoMC1 (- 1.))))) (> (* skoMC1 (* skoMC1 (* skoMC1 2.))) 0.) (> skoMC1 0.) (> (* skoSC1 skoMC1) (* skoMC1 (- 1.))) (> (* skoSC1 (* skoMC1 (* skoMC1 (* skoMC1 2.)))) (* skoMC1 (* skoMC1 (* skoMC1 (- 2.)))))) (succedent (<= (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (* skoMC1 12.)))) (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (+ (- 1.) (* skoMC1 6.))))) (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (- 1.)))) (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (/ 1. 12.)))) (* skoSC1 (* skoMC1 (* skoMC1 (* skoMC1 (/ 1. 12.))))))))))))) (* skoMC1 (* skoMC1 (* skoMC1 (+ (- 2.) (* skoMC1 (- 6.)))))))))
-----[end problem]-----

-----[begin problem]-----
% In Mathematica format:
Timing[Resolve[Exists[{skoSC1,skoMC1}, And[skoMC1*skoMC1*skoMC1*-2<=0,skoSC1*(skoMC1*skoMC1*skoMC1*(-1+skoMC1*3)+skoSC1*(skoMC1*skoMC1*skoMC1*(-2+skoMC1*-3)+skoSC1*(skoMC1*skoMC1*skoMC1*((1/6)+skoMC1*-1)+skoSC1*skoMC1*skoMC1*skoMC1*(1/4))))>skoMC1*skoMC1*skoMC1*(-2+skoMC1*-5),skoSC1*(skoMC1*(-1+skoMC1*3)+skoSC1*(skoMC1*(-2+skoMC1*-3)+skoSC1*(skoMC1*((1/6)+skoMC1*-1)+skoSC1*skoMC1*(1/4))))>skoMC1*(-2+skoMC1*-5),skoSC1>0,skoSC1*(skoMC1*skoMC1*skoMC1*-2+skoSC1*(skoMC1*skoMC1*skoMC1+skoSC1*skoMC1*skoMC1*skoMC1))<=skoMC1*skoMC1*skoMC1*2,skoSC1*(skoMC1*skoMC1*skoMC1+skoSC1*skoMC1*skoMC1*skoMC1)>0,skoSC1*(skoMC1*skoMC1*skoMC1*2+skoSC1*(skoMC1*skoMC1*skoMC1*-1+skoSC1*skoMC1*skoMC1*skoMC1*-1))>skoMC1*skoMC1*skoMC1*-2,skoSC1*(skoMC1*skoMC1*skoMC1*-1+skoSC1*skoMC1*skoMC1*skoMC1*-1)<=0,skoSC1*skoMC1*skoMC1*skoMC1*-1<=skoMC1*skoMC1*skoMC1,skoSC1*skoMC1*skoMC1*skoMC1>skoMC1*skoMC1*skoMC1*-1,skoMC1*skoMC1*skoMC1*-2<=0,skoMC1*skoMC1*skoMC1*2>0,skoSC1<=(5/4),2<=skoMC1,0<=skoSC1,skoMC1>0,0<=skoMC1,skoSC1*skoMC1>skoMC1*-1,skoSC1*skoMC1*-1<=skoMC1,skoSC1*skoMC1*skoMC1*skoMC1*2>skoMC1*skoMC1*skoMC1*-2,skoSC1*skoMC1*skoMC1*skoMC1*-2<=skoMC1*skoMC1*skoMC1*2,skoSC1*(skoMC1*skoMC1*skoMC1*skoMC1*12+skoSC1*(skoMC1*skoMC1*skoMC1*(-1+skoMC1*6)+skoSC1*(skoMC1*skoMC1*skoMC1*-1+skoSC1*(skoMC1*skoMC1*skoMC1*(1/12)+skoSC1*skoMC1*skoMC1*skoMC1*(1/12)))))>skoMC1*skoMC1*skoMC1*(-2+skoMC1*-6),skoSC1*(skoMC1*skoMC1*skoMC1*skoMC1*-12+skoSC1*(skoMC1*skoMC1*skoMC1*(1+skoMC1*-6)+skoSC1*(skoMC1*skoMC1*skoMC1+skoSC1*(skoMC1*skoMC1*skoMC1*(-1/12)+skoSC1*skoMC1*skoMC1*skoMC1*(-1/12)))))<=skoMC1*skoMC1*skoMC1*(2+skoMC1*6)]], Reals]]

% In QepcadB format:
(E skoSC1) (E skoMC1) [[(skoMC1 skoMC1 skoMC1 (-2))<=0]/\[[(skoMC1 skoMC1 skoMC1 (-2+(skoMC1 (-5))))<(skoSC1 ((skoMC1 skoMC1 skoMC1 (-1+(skoMC1 (3))))+(skoSC1 ((skoMC1 skoMC1 skoMC1 (-2+(skoMC1 (-3))))+(skoSC1 ((skoMC1 skoMC1 skoMC1 (1/6+(skoMC1 (-1))))+(skoSC1 skoMC1 skoMC1 skoMC1 (1/4))))))))]/\[[(skoMC1 (-2+(skoMC1 (-5))))<(skoSC1 ((skoMC1 (-1+(skoMC1 (3))))+(skoSC1 ((skoMC1 (-2+(skoMC1 (-3))))+(skoSC1 ((skoMC1 (1/6+(skoMC1 (-1))))+(skoSC1 skoMC1 (1/4))))))))]/\[[0<skoSC1]/\[[(skoSC1 ((skoMC1 skoMC1 skoMC1 (-2))+(skoSC1 ((skoMC1 skoMC1 skoMC1)+(skoSC1 skoMC1 skoMC1 skoMC1)))))<=(skoMC1 skoMC1 skoMC1 (2))]/\[[0<(skoSC1 ((skoMC1 skoMC1 skoMC1)+(skoSC1 skoMC1 skoMC1 skoMC1)))]/\[[(skoMC1 skoMC1 skoMC1 (-2))<(skoSC1 ((skoMC1 skoMC1 skoMC1 (2))+(skoSC1 ((skoMC1 skoMC1 skoMC1 (-1))+(skoSC1 skoMC1 skoMC1 skoMC1 (-1))))))]/\[[(skoSC1 ((skoMC1 skoMC1 skoMC1 (-1))+(skoSC1 skoMC1 skoMC1 skoMC1 (-1))))<=0]/\[[(skoSC1 skoMC1 skoMC1 skoMC1 (-1))<=(skoMC1 skoMC1 skoMC1)]/\[[(skoMC1 skoMC1 skoMC1 (-1))<(skoSC1 skoMC1 skoMC1 skoMC1)]/\[[(skoMC1 skoMC1 skoMC1 (-2))<=0]/\[[0<(skoMC1 skoMC1 skoMC1 (2))]/\[[skoSC1<=5/4]/\[[2<=skoMC1]/\[[0<=skoSC1]/\[[0<skoMC1]/\[[0<=skoMC1]/\[[(skoMC1 (-1))<(skoSC1 skoMC1)]/\[[(skoSC1 skoMC1 (-1))<=skoMC1]/\[[(skoMC1 skoMC1 skoMC1 (-2))<(skoSC1 skoMC1 skoMC1 skoMC1 (2))]/\[[(skoSC1 skoMC1 skoMC1 skoMC1 (-2))<=(skoMC1 skoMC1 skoMC1 (2))]/\[[(skoMC1 skoMC1 skoMC1 (-2+(skoMC1 (-6))))<(skoSC1 ((skoMC1 skoMC1 skoMC1 skoMC1 (12))+(skoSC1 ((skoMC1 skoMC1 skoMC1 (-1+(skoMC1 (6))))+(skoSC1 ((skoMC1 skoMC1 skoMC1 (-1))+(skoSC1 ((skoMC1 skoMC1 skoMC1 (1/12))+(skoSC1 skoMC1 skoMC1 skoMC1 (1/12))))))))))]/\[(skoSC1 ((skoMC1 skoMC1 skoMC1 skoMC1 (-12))+(skoSC1 ((skoMC1 skoMC1 skoMC1 (1+(skoMC1 (-6))))+(skoSC1 ((skoMC1 skoMC1 skoMC1)+(skoSC1 ((skoMC1 skoMC1 skoMC1 (-1/12))+(skoSC1 skoMC1 skoMC1 skoMC1 (-1/12))))))))))<=(skoMC1 skoMC1 skoMC1 (2+(skoMC1 (6))))]]]]]]]]]]]]]]]]]]]]]]].

% In SMTLib2 format:
(declare-fun skoSC1 () Real) (declare-fun skoMC1 () Real) (assert (and (<= (* skoMC1 (* skoMC1 (* skoMC1 (- 2.)))) 0.) (and (> (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (+ (- 1.) (* skoMC1 3.))))) (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (+ (- 2.) (* skoMC1 (- 3.)))))) (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (+ (/ 1. 6.) (* skoMC1 (- 1.)))))) (* skoSC1 (* skoMC1 (* skoMC1 (* skoMC1 (/ 1. 4.))))))))))) (* skoMC1 (* skoMC1 (* skoMC1 (+ (- 2.) (* skoMC1 (- 5.))))))) (and (> (* skoSC1 (+ (* skoMC1 (+ (- 1.) (* skoMC1 3.))) (* skoSC1 (+ (* skoMC1 (+ (- 2.) (* skoMC1 (- 3.)))) (* skoSC1 (+ (* skoMC1 (+ (/ 1. 6.) (* skoMC1 (- 1.)))) (* skoSC1 (* skoMC1 (/ 1. 4.))))))))) (* skoMC1 (+ (- 2.) (* skoMC1 (- 5.))))) (and (> skoSC1 0.) (and (<= (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (- 2.)))) (* skoSC1 (+ (* skoMC1 (* skoMC1 skoMC1)) (* skoSC1 (* skoMC1 (* skoMC1 skoMC1))))))) (* skoMC1 (* skoMC1 (* skoMC1 2.)))) (and (> (* skoSC1 (+ (* skoMC1 (* skoMC1 skoMC1)) (* skoSC1 (* skoMC1 (* skoMC1 skoMC1))))) 0.) (and (> (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 2.))) (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (- 1.)))) (* skoSC1 (* skoMC1 (* skoMC1 (* skoMC1 (- 1.))))))))) (* skoMC1 (* skoMC1 (* skoMC1 (- 2.))))) (and (<= (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (- 1.)))) (* skoSC1 (* skoMC1 (* skoMC1 (* skoMC1 (- 1.))))))) 0.) (and (<= (* skoSC1 (* skoMC1 (* skoMC1 (* skoMC1 (- 1.))))) (* skoMC1 (* skoMC1 skoMC1))) (and (> (* skoSC1 (* skoMC1 (* skoMC1 skoMC1))) (* skoMC1 (* skoMC1 (* skoMC1 (- 1.))))) (and (<= (* skoMC1 (* skoMC1 (* skoMC1 (- 2.)))) 0.) (and (> (* skoMC1 (* skoMC1 (* skoMC1 2.))) 0.) (and (<= skoSC1 (/ 5. 4.)) (and (<= 2. skoMC1) (and (<= 0. skoSC1) (and (> skoMC1 0.) (and (<= 0. skoMC1) (and (> (* skoSC1 skoMC1) (* skoMC1 (- 1.))) (and (<= (* skoSC1 (* skoMC1 (- 1.))) skoMC1) (and (> (* skoSC1 (* skoMC1 (* skoMC1 (* skoMC1 2.)))) (* skoMC1 (* skoMC1 (* skoMC1 (- 2.))))) (and (<= (* skoSC1 (* skoMC1 (* skoMC1 (* skoMC1 (- 2.))))) (* skoMC1 (* skoMC1 (* skoMC1 2.)))) (and (> (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (* skoMC1 12.)))) (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (+ (- 1.) (* skoMC1 6.))))) (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (- 1.)))) (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (/ 1. 12.)))) (* skoSC1 (* skoMC1 (* skoMC1 (* skoMC1 (/ 1. 12.))))))))))))) (* skoMC1 (* skoMC1 (* skoMC1 (+ (- 2.) (* skoMC1 (- 6.))))))) (<= (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (* skoMC1 (- 12.))))) (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (+ 1. (* skoMC1 (- 6.)))))) (* skoSC1 (+ (* skoMC1 (* skoMC1 skoMC1)) (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (/ (- 1.) 12.)))) (* skoSC1 (* skoMC1 (* skoMC1 (* skoMC1 (/ (- 1.) 12.))))))))))))) (* skoMC1 (* skoMC1 (* skoMC1 (+ 2. (* skoMC1 6.)))))))))))))))))))))))))))))

% In GRF format:
(sequent " MetiTarski formula " (antecedent (<= (* skoMC1 (* skoMC1 (* skoMC1 (- 2.)))) 0.) (> (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (+ (- 1.) (* skoMC1 3.))))) (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (+ (- 2.) (* skoMC1 (- 3.)))))) (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (+ (/ 1. 6.) (* skoMC1 (- 1.)))))) (* skoSC1 (* skoMC1 (* skoMC1 (* skoMC1 (/ 1. 4.))))))))))) (* skoMC1 (* skoMC1 (* skoMC1 (+ (- 2.) (* skoMC1 (- 5.))))))) (> (* skoSC1 (+ (* skoMC1 (+ (- 1.) (* skoMC1 3.))) (* skoSC1 (+ (* skoMC1 (+ (- 2.) (* skoMC1 (- 3.)))) (* skoSC1 (+ (* skoMC1 (+ (/ 1. 6.) (* skoMC1 (- 1.)))) (* skoSC1 (* skoMC1 (/ 1. 4.))))))))) (* skoMC1 (+ (- 2.) (* skoMC1 (- 5.))))) (> skoSC1 0.) (<= (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (- 2.)))) (* skoSC1 (+ (* skoMC1 (* skoMC1 skoMC1)) (* skoSC1 (* skoMC1 (* skoMC1 skoMC1))))))) (* skoMC1 (* skoMC1 (* skoMC1 2.)))) (> (* skoSC1 (+ (* skoMC1 (* skoMC1 skoMC1)) (* skoSC1 (* skoMC1 (* skoMC1 skoMC1))))) 0.) (> (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 2.))) (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (- 1.)))) (* skoSC1 (* skoMC1 (* skoMC1 (* skoMC1 (- 1.))))))))) (* skoMC1 (* skoMC1 (* skoMC1 (- 2.))))) (<= (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (- 1.)))) (* skoSC1 (* skoMC1 (* skoMC1 (* skoMC1 (- 1.))))))) 0.) (<= (* skoSC1 (* skoMC1 (* skoMC1 (* skoMC1 (- 1.))))) (* skoMC1 (* skoMC1 skoMC1))) (> (* skoSC1 (* skoMC1 (* skoMC1 skoMC1))) (* skoMC1 (* skoMC1 (* skoMC1 (- 1.))))) (<= (* skoMC1 (* skoMC1 (* skoMC1 (- 2.)))) 0.) (> (* skoMC1 (* skoMC1 (* skoMC1 2.))) 0.) (<= skoSC1 (/ 5. 4.)) (<= 2. skoMC1) (<= 0. skoSC1) (> skoMC1 0.) (<= 0. skoMC1) (> (* skoSC1 skoMC1) (* skoMC1 (- 1.))) (<= (* skoSC1 (* skoMC1 (- 1.))) skoMC1) (> (* skoSC1 (* skoMC1 (* skoMC1 (* skoMC1 2.)))) (* skoMC1 (* skoMC1 (* skoMC1 (- 2.))))) (<= (* skoSC1 (* skoMC1 (* skoMC1 (* skoMC1 (- 2.))))) (* skoMC1 (* skoMC1 (* skoMC1 2.)))) (> (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (* skoMC1 12.)))) (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (+ (- 1.) (* skoMC1 6.))))) (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (- 1.)))) (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (/ 1. 12.)))) (* skoSC1 (* skoMC1 (* skoMC1 (* skoMC1 (/ 1. 12.))))))))))))) (* skoMC1 (* skoMC1 (* skoMC1 (+ (- 2.) (* skoMC1 (- 6.)))))))) (succedent (> (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (* skoMC1 (- 12.))))) (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (+ 1. (* skoMC1 (- 6.)))))) (* skoSC1 (+ (* skoMC1 (* skoMC1 skoMC1)) (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (/ (- 1.) 12.)))) (* skoSC1 (* skoMC1 (* skoMC1 (* skoMC1 (/ (- 1.) 12.))))))))))))) (* skoMC1 (* skoMC1 (* skoMC1 (+ 2. (* skoMC1 6.))))))))
-----[end problem]-----

-----[begin problem]-----
% In Mathematica format:
Timing[Resolve[Exists[{skoSC1,skoMC1}, And[skoMC1*skoMC1*skoMC1*2>0,skoSC1*(skoMC1*skoMC1*skoMC1*(-1+skoMC1*3)+skoSC1*(skoMC1*skoMC1*skoMC1*(-2+skoMC1*-3)+skoSC1*(skoMC1*skoMC1*skoMC1*((1/6)+skoMC1*-1)+skoSC1*(skoMC1*skoMC1*skoMC1*(1/4)+skoSC1*skoSC1*(skoMC1*skoMC1*skoMC1*(-1/360)+skoSC1*skoSC1*(skoMC1*skoMC1*skoMC1*(1/20160)+skoSC1*skoSC1*(skoMC1*skoMC1*skoMC1*(-1/1814400)+skoSC1*skoSC1*skoMC1*skoMC1*skoMC1*(1/239500800))))))))>skoMC1*skoMC1*skoMC1*(-2+skoMC1*-5),skoSC1*(skoMC1*skoMC1*skoMC1*(-1+skoMC1*3)+skoSC1*(skoMC1*skoMC1*skoMC1*(-2+skoMC1*-3)+skoSC1*(skoMC1*skoMC1*skoMC1*((1/6)+skoMC1*-1)+skoSC1*skoMC1*skoMC1*skoMC1*(1/4))))>skoMC1*skoMC1*skoMC1*(-2+skoMC1*-5),skoSC1*(skoMC1*(-1+skoMC1*3)+skoSC1*(skoMC1*(-2+skoMC1*-3)+skoSC1*(skoMC1*((1/6)+skoMC1*-1)+skoSC1*skoMC1*(1/4))))>skoMC1*(-2+skoMC1*-5),skoSC1>0,skoSC1*(skoMC1*skoMC1*skoMC1+skoSC1*skoMC1*skoMC1*skoMC1)>0,skoSC1*(skoMC1*skoMC1*skoMC1*2+skoSC1*(skoMC1*skoMC1*skoMC1*-1+skoSC1*skoMC1*skoMC1*skoMC1*-1))>skoMC1*skoMC1*skoMC1*-2,skoSC1*skoMC1*skoMC1*skoMC1>skoMC1*skoMC1*skoMC1*-1,skoMC1*skoMC1*skoMC1*2>0,skoMC1>0,skoSC1*skoMC1>skoMC1*-1,skoSC1*skoMC1*skoMC1*skoMC1*2>skoMC1*skoMC1*skoMC1*-2,skoSC1*(skoMC1*skoMC1*skoMC1*skoMC1*12+skoSC1*(skoMC1*skoMC1*skoMC1*(-1+skoMC1*6)+skoSC1*(skoMC1*skoMC1*skoMC1*-1+skoSC1*(skoMC1*skoMC1*skoMC1*(1/12)+skoSC1*skoMC1*skoMC1*skoMC1*(1/12)))))>skoMC1*skoMC1*skoMC1*(-2+skoMC1*-6)]], Reals]]

% In QepcadB format:
(E skoSC1) (E skoMC1) [[0<(skoMC1 skoMC1 skoMC1 (2))]/\[[(skoMC1 skoMC1 skoMC1 (-2+(skoMC1 (-5))))<(skoSC1 ((skoMC1 skoMC1 skoMC1 (-1+(skoMC1 (3))))+(skoSC1 ((skoMC1 skoMC1 skoMC1 (-2+(skoMC1 (-3))))+(skoSC1 ((skoMC1 skoMC1 skoMC1 (1/6+(skoMC1 (-1))))+(skoSC1 ((skoMC1 skoMC1 skoMC1 (1/4))+(skoSC1 skoSC1 ((skoMC1 skoMC1 skoMC1 (-1/360))+(skoSC1 skoSC1 ((skoMC1 skoMC1 skoMC1 (1/20160))+(skoSC1 skoSC1 ((skoMC1 skoMC1 skoMC1 (-1/1814400))+(skoSC1 skoSC1 skoMC1 skoMC1 skoMC1 (1/239500800))))))))))))))))]/\[[(skoMC1 skoMC1 skoMC1 (-2+(skoMC1 (-5))))<(skoSC1 ((skoMC1 skoMC1 skoMC1 (-1+(skoMC1 (3))))+(skoSC1 ((skoMC1 skoMC1 skoMC1 (-2+(skoMC1 (-3))))+(skoSC1 ((skoMC1 skoMC1 skoMC1 (1/6+(skoMC1 (-1))))+(skoSC1 skoMC1 skoMC1 skoMC1 (1/4))))))))]/\[[(skoMC1 (-2+(skoMC1 (-5))))<(skoSC1 ((skoMC1 (-1+(skoMC1 (3))))+(skoSC1 ((skoMC1 (-2+(skoMC1 (-3))))+(skoSC1 ((skoMC1 (1/6+(skoMC1 (-1))))+(skoSC1 skoMC1 (1/4))))))))]/\[[0<skoSC1]/\[[0<(skoSC1 ((skoMC1 skoMC1 skoMC1)+(skoSC1 skoMC1 skoMC1 skoMC1)))]/\[[(skoMC1 skoMC1 skoMC1 (-2))<(skoSC1 ((skoMC1 skoMC1 skoMC1 (2))+(skoSC1 ((skoMC1 skoMC1 skoMC1 (-1))+(skoSC1 skoMC1 skoMC1 skoMC1 (-1))))))]/\[[(skoMC1 skoMC1 skoMC1 (-1))<(skoSC1 skoMC1 skoMC1 skoMC1)]/\[[0<(skoMC1 skoMC1 skoMC1 (2))]/\[[0<skoMC1]/\[[(skoMC1 (-1))<(skoSC1 skoMC1)]/\[[(skoMC1 skoMC1 skoMC1 (-2))<(skoSC1 skoMC1 skoMC1 skoMC1 (2))]/\[(skoMC1 skoMC1 skoMC1 (-2+(skoMC1 (-6))))<(skoSC1 ((skoMC1 skoMC1 skoMC1 skoMC1 (12))+(skoSC1 ((skoMC1 skoMC1 skoMC1 (-1+(skoMC1 (6))))+(skoSC1 ((skoMC1 skoMC1 skoMC1 (-1))+(skoSC1 ((skoMC1 skoMC1 skoMC1 (1/12))+(skoSC1 skoMC1 skoMC1 skoMC1 (1/12))))))))))]]]]]]]]]]]]].

% In SMTLib2 format:
(declare-fun skoSC1 () Real) (declare-fun skoMC1 () Real) (assert (and (> (* skoMC1 (* skoMC1 (* skoMC1 2.))) 0.) (and (> (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (+ (- 1.) (* skoMC1 3.))))) (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (+ (- 2.) (* skoMC1 (- 3.)))))) (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (+ (/ 1. 6.) (* skoMC1 (- 1.)))))) (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (/ 1. 4.)))) (* skoSC1 (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (/ (- 1.) 360.)))) (* skoSC1 (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (/ 1. 20160.)))) (* skoSC1 (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (/ (- 1.) 1814400.)))) (* skoSC1 (* skoSC1 (* skoMC1 (* skoMC1 (* skoMC1 (/ 1. 239500800.))))))))))))))))))))))) (* skoMC1 (* skoMC1 (* skoMC1 (+ (- 2.) (* skoMC1 (- 5.))))))) (and (> (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (+ (- 1.) (* skoMC1 3.))))) (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (+ (- 2.) (* skoMC1 (- 3.)))))) (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (+ (/ 1. 6.) (* skoMC1 (- 1.)))))) (* skoSC1 (* skoMC1 (* skoMC1 (* skoMC1 (/ 1. 4.))))))))))) (* skoMC1 (* skoMC1 (* skoMC1 (+ (- 2.) (* skoMC1 (- 5.))))))) (and (> (* skoSC1 (+ (* skoMC1 (+ (- 1.) (* skoMC1 3.))) (* skoSC1 (+ (* skoMC1 (+ (- 2.) (* skoMC1 (- 3.)))) (* skoSC1 (+ (* skoMC1 (+ (/ 1. 6.) (* skoMC1 (- 1.)))) (* skoSC1 (* skoMC1 (/ 1. 4.))))))))) (* skoMC1 (+ (- 2.) (* skoMC1 (- 5.))))) (and (> skoSC1 0.) (and (> (* skoSC1 (+ (* skoMC1 (* skoMC1 skoMC1)) (* skoSC1 (* skoMC1 (* skoMC1 skoMC1))))) 0.) (and (> (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 2.))) (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (- 1.)))) (* skoSC1 (* skoMC1 (* skoMC1 (* skoMC1 (- 1.))))))))) (* skoMC1 (* skoMC1 (* skoMC1 (- 2.))))) (and (> (* skoSC1 (* skoMC1 (* skoMC1 skoMC1))) (* skoMC1 (* skoMC1 (* skoMC1 (- 1.))))) (and (> (* skoMC1 (* skoMC1 (* skoMC1 2.))) 0.) (and (> skoMC1 0.) (and (> (* skoSC1 skoMC1) (* skoMC1 (- 1.))) (and (> (* skoSC1 (* skoMC1 (* skoMC1 (* skoMC1 2.)))) (* skoMC1 (* skoMC1 (* skoMC1 (- 2.))))) (> (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (* skoMC1 12.)))) (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (+ (- 1.) (* skoMC1 6.))))) (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (- 1.)))) (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (/ 1. 12.)))) (* skoSC1 (* skoMC1 (* skoMC1 (* skoMC1 (/ 1. 12.))))))))))))) (* skoMC1 (* skoMC1 (* skoMC1 (+ (- 2.) (* skoMC1 (- 6.))))))))))))))))))))

% In GRF format:
(sequent " MetiTarski formula " (antecedent (> (* skoMC1 (* skoMC1 (* skoMC1 2.))) 0.) (> (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (+ (- 1.) (* skoMC1 3.))))) (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (+ (- 2.) (* skoMC1 (- 3.)))))) (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (+ (/ 1. 6.) (* skoMC1 (- 1.)))))) (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (/ 1. 4.)))) (* skoSC1 (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (/ (- 1.) 360.)))) (* skoSC1 (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (/ 1. 20160.)))) (* skoSC1 (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (/ (- 1.) 1814400.)))) (* skoSC1 (* skoSC1 (* skoMC1 (* skoMC1 (* skoMC1 (/ 1. 239500800.))))))))))))))))))))))) (* skoMC1 (* skoMC1 (* skoMC1 (+ (- 2.) (* skoMC1 (- 5.))))))) (> (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (+ (- 1.) (* skoMC1 3.))))) (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (+ (- 2.) (* skoMC1 (- 3.)))))) (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (+ (/ 1. 6.) (* skoMC1 (- 1.)))))) (* skoSC1 (* skoMC1 (* skoMC1 (* skoMC1 (/ 1. 4.))))))))))) (* skoMC1 (* skoMC1 (* skoMC1 (+ (- 2.) (* skoMC1 (- 5.))))))) (> (* skoSC1 (+ (* skoMC1 (+ (- 1.) (* skoMC1 3.))) (* skoSC1 (+ (* skoMC1 (+ (- 2.) (* skoMC1 (- 3.)))) (* skoSC1 (+ (* skoMC1 (+ (/ 1. 6.) (* skoMC1 (- 1.)))) (* skoSC1 (* skoMC1 (/ 1. 4.))))))))) (* skoMC1 (+ (- 2.) (* skoMC1 (- 5.))))) (> skoSC1 0.) (> (* skoSC1 (+ (* skoMC1 (* skoMC1 skoMC1)) (* skoSC1 (* skoMC1 (* skoMC1 skoMC1))))) 0.) (> (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 2.))) (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (- 1.)))) (* skoSC1 (* skoMC1 (* skoMC1 (* skoMC1 (- 1.))))))))) (* skoMC1 (* skoMC1 (* skoMC1 (- 2.))))) (> (* skoSC1 (* skoMC1 (* skoMC1 skoMC1))) (* skoMC1 (* skoMC1 (* skoMC1 (- 1.))))) (> (* skoMC1 (* skoMC1 (* skoMC1 2.))) 0.) (> skoMC1 0.) (> (* skoSC1 skoMC1) (* skoMC1 (- 1.))) (> (* skoSC1 (* skoMC1 (* skoMC1 (* skoMC1 2.)))) (* skoMC1 (* skoMC1 (* skoMC1 (- 2.)))))) (succedent (<= (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (* skoMC1 12.)))) (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (+ (- 1.) (* skoMC1 6.))))) (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (- 1.)))) (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (/ 1. 12.)))) (* skoSC1 (* skoMC1 (* skoMC1 (* skoMC1 (/ 1. 12.))))))))))))) (* skoMC1 (* skoMC1 (* skoMC1 (+ (- 2.) (* skoMC1 (- 6.)))))))))
-----[end problem]-----

-----[begin problem]-----
% In Mathematica format:
Timing[Resolve[Exists[{skoSC1,skoMC1}, And[skoMC1*skoMC1*skoMC1*2>0,skoSC1*(skoMC1*skoMC1*skoMC1*(-1+skoMC1*3)+skoSC1*(skoMC1*skoMC1*skoMC1*(-2+skoMC1*-3)+skoSC1*(skoMC1*skoMC1*skoMC1*((1/6)+skoMC1*-1)+skoSC1*(skoMC1*skoMC1*skoMC1*(1/4)+skoSC1*skoSC1*(skoMC1*skoMC1*skoMC1*(-1/360)+skoSC1*skoSC1*(skoMC1*skoMC1*skoMC1*(1/20160)+skoSC1*skoSC1*(skoMC1*skoMC1*skoMC1*(-1/1814400)+skoSC1*skoSC1*skoMC1*skoMC1*skoMC1*(1/239500800))))))))>skoMC1*skoMC1*skoMC1*(-2+skoMC1*-5),skoSC1*(skoMC1*skoMC1*skoMC1*(-1+skoMC1*3)+skoSC1*(skoMC1*skoMC1*skoMC1*(-2+skoMC1*-3)+skoSC1*(skoMC1*skoMC1*skoMC1*((1/6)+skoMC1*-1)+skoSC1*skoMC1*skoMC1*skoMC1*(1/4))))>skoMC1*skoMC1*skoMC1*(-2+skoMC1*-5),skoSC1*(skoMC1*(-1+skoMC1*3)+skoSC1*(skoMC1*(-2+skoMC1*-3)+skoSC1*(skoMC1*((1/6)+skoMC1*-1)+skoSC1*skoMC1*(1/4))))>skoMC1*(-2+skoMC1*-5),skoSC1>0,skoSC1*(skoMC1*skoMC1*skoMC1*-2+skoSC1*(skoMC1*skoMC1*skoMC1+skoSC1*skoMC1*skoMC1*skoMC1))<=skoMC1*skoMC1*skoMC1*2,skoSC1*(skoMC1*skoMC1*skoMC1+skoSC1*skoMC1*skoMC1*skoMC1)>0,skoSC1*(skoMC1*skoMC1*skoMC1*2+skoSC1*(skoMC1*skoMC1*skoMC1*-1+skoSC1*skoMC1*skoMC1*skoMC1*-1))>skoMC1*skoMC1*skoMC1*-2,skoSC1*(skoMC1*skoMC1*skoMC1*-1+skoSC1*skoMC1*skoMC1*skoMC1*-1)<=0,skoSC1*skoMC1*skoMC1*skoMC1*-1<=skoMC1*skoMC1*skoMC1,skoSC1*skoMC1*skoMC1*skoMC1>skoMC1*skoMC1*skoMC1*-1,skoMC1*skoMC1*skoMC1*-2<=0,skoMC1*skoMC1*skoMC1*2>0,skoSC1<=(5/4),2<=skoMC1,0<=skoSC1,skoMC1>0,0<=skoMC1,skoSC1*skoMC1>skoMC1*-1,skoSC1*skoMC1*-1<=skoMC1,skoSC1*skoMC1*skoMC1*skoMC1*2>skoMC1*skoMC1*skoMC1*-2,skoSC1*skoMC1*skoMC1*skoMC1*-2<=skoMC1*skoMC1*skoMC1*2,skoSC1*(skoMC1*skoMC1*skoMC1*skoMC1*12+skoSC1*(skoMC1*skoMC1*skoMC1*(-1+skoMC1*6)+skoSC1*(skoMC1*skoMC1*skoMC1*-1+skoSC1*(skoMC1*skoMC1*skoMC1*(1/12)+skoSC1*skoMC1*skoMC1*skoMC1*(1/12)))))>skoMC1*skoMC1*skoMC1*(-2+skoMC1*-6),skoSC1*(skoMC1*skoMC1*skoMC1*skoMC1*-12+skoSC1*(skoMC1*skoMC1*skoMC1*(1+skoMC1*-6)+skoSC1*(skoMC1*skoMC1*skoMC1+skoSC1*(skoMC1*skoMC1*skoMC1*(-1/12)+skoSC1*skoMC1*skoMC1*skoMC1*(-1/12)))))<=skoMC1*skoMC1*skoMC1*(2+skoMC1*6)]], Reals]]

% In QepcadB format:
(E skoSC1) (E skoMC1) [[0<(skoMC1 skoMC1 skoMC1 (2))]/\[[(skoMC1 skoMC1 skoMC1 (-2+(skoMC1 (-5))))<(skoSC1 ((skoMC1 skoMC1 skoMC1 (-1+(skoMC1 (3))))+(skoSC1 ((skoMC1 skoMC1 skoMC1 (-2+(skoMC1 (-3))))+(skoSC1 ((skoMC1 skoMC1 skoMC1 (1/6+(skoMC1 (-1))))+(skoSC1 ((skoMC1 skoMC1 skoMC1 (1/4))+(skoSC1 skoSC1 ((skoMC1 skoMC1 skoMC1 (-1/360))+(skoSC1 skoSC1 ((skoMC1 skoMC1 skoMC1 (1/20160))+(skoSC1 skoSC1 ((skoMC1 skoMC1 skoMC1 (-1/1814400))+(skoSC1 skoSC1 skoMC1 skoMC1 skoMC1 (1/239500800))))))))))))))))]/\[[(skoMC1 skoMC1 skoMC1 (-2+(skoMC1 (-5))))<(skoSC1 ((skoMC1 skoMC1 skoMC1 (-1+(skoMC1 (3))))+(skoSC1 ((skoMC1 skoMC1 skoMC1 (-2+(skoMC1 (-3))))+(skoSC1 ((skoMC1 skoMC1 skoMC1 (1/6+(skoMC1 (-1))))+(skoSC1 skoMC1 skoMC1 skoMC1 (1/4))))))))]/\[[(skoMC1 (-2+(skoMC1 (-5))))<(skoSC1 ((skoMC1 (-1+(skoMC1 (3))))+(skoSC1 ((skoMC1 (-2+(skoMC1 (-3))))+(skoSC1 ((skoMC1 (1/6+(skoMC1 (-1))))+(skoSC1 skoMC1 (1/4))))))))]/\[[0<skoSC1]/\[[(skoSC1 ((skoMC1 skoMC1 skoMC1 (-2))+(skoSC1 ((skoMC1 skoMC1 skoMC1)+(skoSC1 skoMC1 skoMC1 skoMC1)))))<=(skoMC1 skoMC1 skoMC1 (2))]/\[[0<(skoSC1 ((skoMC1 skoMC1 skoMC1)+(skoSC1 skoMC1 skoMC1 skoMC1)))]/\[[(skoMC1 skoMC1 skoMC1 (-2))<(skoSC1 ((skoMC1 skoMC1 skoMC1 (2))+(skoSC1 ((skoMC1 skoMC1 skoMC1 (-1))+(skoSC1 skoMC1 skoMC1 skoMC1 (-1))))))]/\[[(skoSC1 ((skoMC1 skoMC1 skoMC1 (-1))+(skoSC1 skoMC1 skoMC1 skoMC1 (-1))))<=0]/\[[(skoSC1 skoMC1 skoMC1 skoMC1 (-1))<=(skoMC1 skoMC1 skoMC1)]/\[[(skoMC1 skoMC1 skoMC1 (-1))<(skoSC1 skoMC1 skoMC1 skoMC1)]/\[[(skoMC1 skoMC1 skoMC1 (-2))<=0]/\[[0<(skoMC1 skoMC1 skoMC1 (2))]/\[[skoSC1<=5/4]/\[[2<=skoMC1]/\[[0<=skoSC1]/\[[0<skoMC1]/\[[0<=skoMC1]/\[[(skoMC1 (-1))<(skoSC1 skoMC1)]/\[[(skoSC1 skoMC1 (-1))<=skoMC1]/\[[(skoMC1 skoMC1 skoMC1 (-2))<(skoSC1 skoMC1 skoMC1 skoMC1 (2))]/\[[(skoSC1 skoMC1 skoMC1 skoMC1 (-2))<=(skoMC1 skoMC1 skoMC1 (2))]/\[[(skoMC1 skoMC1 skoMC1 (-2+(skoMC1 (-6))))<(skoSC1 ((skoMC1 skoMC1 skoMC1 skoMC1 (12))+(skoSC1 ((skoMC1 skoMC1 skoMC1 (-1+(skoMC1 (6))))+(skoSC1 ((skoMC1 skoMC1 skoMC1 (-1))+(skoSC1 ((skoMC1 skoMC1 skoMC1 (1/12))+(skoSC1 skoMC1 skoMC1 skoMC1 (1/12))))))))))]/\[(skoSC1 ((skoMC1 skoMC1 skoMC1 skoMC1 (-12))+(skoSC1 ((skoMC1 skoMC1 skoMC1 (1+(skoMC1 (-6))))+(skoSC1 ((skoMC1 skoMC1 skoMC1)+(skoSC1 ((skoMC1 skoMC1 skoMC1 (-1/12))+(skoSC1 skoMC1 skoMC1 skoMC1 (-1/12))))))))))<=(skoMC1 skoMC1 skoMC1 (2+(skoMC1 (6))))]]]]]]]]]]]]]]]]]]]]]]]].

% In SMTLib2 format:
(declare-fun skoSC1 () Real) (declare-fun skoMC1 () Real) (assert (and (> (* skoMC1 (* skoMC1 (* skoMC1 2.))) 0.) (and (> (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (+ (- 1.) (* skoMC1 3.))))) (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (+ (- 2.) (* skoMC1 (- 3.)))))) (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (+ (/ 1. 6.) (* skoMC1 (- 1.)))))) (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (/ 1. 4.)))) (* skoSC1 (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (/ (- 1.) 360.)))) (* skoSC1 (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (/ 1. 20160.)))) (* skoSC1 (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (/ (- 1.) 1814400.)))) (* skoSC1 (* skoSC1 (* skoMC1 (* skoMC1 (* skoMC1 (/ 1. 239500800.))))))))))))))))))))))) (* skoMC1 (* skoMC1 (* skoMC1 (+ (- 2.) (* skoMC1 (- 5.))))))) (and (> (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (+ (- 1.) (* skoMC1 3.))))) (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (+ (- 2.) (* skoMC1 (- 3.)))))) (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (+ (/ 1. 6.) (* skoMC1 (- 1.)))))) (* skoSC1 (* skoMC1 (* skoMC1 (* skoMC1 (/ 1. 4.))))))))))) (* skoMC1 (* skoMC1 (* skoMC1 (+ (- 2.) (* skoMC1 (- 5.))))))) (and (> (* skoSC1 (+ (* skoMC1 (+ (- 1.) (* skoMC1 3.))) (* skoSC1 (+ (* skoMC1 (+ (- 2.) (* skoMC1 (- 3.)))) (* skoSC1 (+ (* skoMC1 (+ (/ 1. 6.) (* skoMC1 (- 1.)))) (* skoSC1 (* skoMC1 (/ 1. 4.))))))))) (* skoMC1 (+ (- 2.) (* skoMC1 (- 5.))))) (and (> skoSC1 0.) (and (<= (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (- 2.)))) (* skoSC1 (+ (* skoMC1 (* skoMC1 skoMC1)) (* skoSC1 (* skoMC1 (* skoMC1 skoMC1))))))) (* skoMC1 (* skoMC1 (* skoMC1 2.)))) (and (> (* skoSC1 (+ (* skoMC1 (* skoMC1 skoMC1)) (* skoSC1 (* skoMC1 (* skoMC1 skoMC1))))) 0.) (and (> (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 2.))) (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (- 1.)))) (* skoSC1 (* skoMC1 (* skoMC1 (* skoMC1 (- 1.))))))))) (* skoMC1 (* skoMC1 (* skoMC1 (- 2.))))) (and (<= (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (- 1.)))) (* skoSC1 (* skoMC1 (* skoMC1 (* skoMC1 (- 1.))))))) 0.) (and (<= (* skoSC1 (* skoMC1 (* skoMC1 (* skoMC1 (- 1.))))) (* skoMC1 (* skoMC1 skoMC1))) (and (> (* skoSC1 (* skoMC1 (* skoMC1 skoMC1))) (* skoMC1 (* skoMC1 (* skoMC1 (- 1.))))) (and (<= (* skoMC1 (* skoMC1 (* skoMC1 (- 2.)))) 0.) (and (> (* skoMC1 (* skoMC1 (* skoMC1 2.))) 0.) (and (<= skoSC1 (/ 5. 4.)) (and (<= 2. skoMC1) (and (<= 0. skoSC1) (and (> skoMC1 0.) (and (<= 0. skoMC1) (and (> (* skoSC1 skoMC1) (* skoMC1 (- 1.))) (and (<= (* skoSC1 (* skoMC1 (- 1.))) skoMC1) (and (> (* skoSC1 (* skoMC1 (* skoMC1 (* skoMC1 2.)))) (* skoMC1 (* skoMC1 (* skoMC1 (- 2.))))) (and (<= (* skoSC1 (* skoMC1 (* skoMC1 (* skoMC1 (- 2.))))) (* skoMC1 (* skoMC1 (* skoMC1 2.)))) (and (> (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (* skoMC1 12.)))) (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (+ (- 1.) (* skoMC1 6.))))) (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (- 1.)))) (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (/ 1. 12.)))) (* skoSC1 (* skoMC1 (* skoMC1 (* skoMC1 (/ 1. 12.))))))))))))) (* skoMC1 (* skoMC1 (* skoMC1 (+ (- 2.) (* skoMC1 (- 6.))))))) (<= (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (* skoMC1 (- 12.))))) (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (+ 1. (* skoMC1 (- 6.)))))) (* skoSC1 (+ (* skoMC1 (* skoMC1 skoMC1)) (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (/ (- 1.) 12.)))) (* skoSC1 (* skoMC1 (* skoMC1 (* skoMC1 (/ (- 1.) 12.))))))))))))) (* skoMC1 (* skoMC1 (* skoMC1 (+ 2. (* skoMC1 6.))))))))))))))))))))))))))))))

% In GRF format:
(sequent " MetiTarski formula " (antecedent (> (* skoMC1 (* skoMC1 (* skoMC1 2.))) 0.) (> (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (+ (- 1.) (* skoMC1 3.))))) (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (+ (- 2.) (* skoMC1 (- 3.)))))) (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (+ (/ 1. 6.) (* skoMC1 (- 1.)))))) (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (/ 1. 4.)))) (* skoSC1 (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (/ (- 1.) 360.)))) (* skoSC1 (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (/ 1. 20160.)))) (* skoSC1 (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (/ (- 1.) 1814400.)))) (* skoSC1 (* skoSC1 (* skoMC1 (* skoMC1 (* skoMC1 (/ 1. 239500800.))))))))))))))))))))))) (* skoMC1 (* skoMC1 (* skoMC1 (+ (- 2.) (* skoMC1 (- 5.))))))) (> (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (+ (- 1.) (* skoMC1 3.))))) (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (+ (- 2.) (* skoMC1 (- 3.)))))) (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (+ (/ 1. 6.) (* skoMC1 (- 1.)))))) (* skoSC1 (* skoMC1 (* skoMC1 (* skoMC1 (/ 1. 4.))))))))))) (* skoMC1 (* skoMC1 (* skoMC1 (+ (- 2.) (* skoMC1 (- 5.))))))) (> (* skoSC1 (+ (* skoMC1 (+ (- 1.) (* skoMC1 3.))) (* skoSC1 (+ (* skoMC1 (+ (- 2.) (* skoMC1 (- 3.)))) (* skoSC1 (+ (* skoMC1 (+ (/ 1. 6.) (* skoMC1 (- 1.)))) (* skoSC1 (* skoMC1 (/ 1. 4.))))))))) (* skoMC1 (+ (- 2.) (* skoMC1 (- 5.))))) (> skoSC1 0.) (<= (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (- 2.)))) (* skoSC1 (+ (* skoMC1 (* skoMC1 skoMC1)) (* skoSC1 (* skoMC1 (* skoMC1 skoMC1))))))) (* skoMC1 (* skoMC1 (* skoMC1 2.)))) (> (* skoSC1 (+ (* skoMC1 (* skoMC1 skoMC1)) (* skoSC1 (* skoMC1 (* skoMC1 skoMC1))))) 0.) (> (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 2.))) (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (- 1.)))) (* skoSC1 (* skoMC1 (* skoMC1 (* skoMC1 (- 1.))))))))) (* skoMC1 (* skoMC1 (* skoMC1 (- 2.))))) (<= (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (- 1.)))) (* skoSC1 (* skoMC1 (* skoMC1 (* skoMC1 (- 1.))))))) 0.) (<= (* skoSC1 (* skoMC1 (* skoMC1 (* skoMC1 (- 1.))))) (* skoMC1 (* skoMC1 skoMC1))) (> (* skoSC1 (* skoMC1 (* skoMC1 skoMC1))) (* skoMC1 (* skoMC1 (* skoMC1 (- 1.))))) (<= (* skoMC1 (* skoMC1 (* skoMC1 (- 2.)))) 0.) (> (* skoMC1 (* skoMC1 (* skoMC1 2.))) 0.) (<= skoSC1 (/ 5. 4.)) (<= 2. skoMC1) (<= 0. skoSC1) (> skoMC1 0.) (<= 0. skoMC1) (> (* skoSC1 skoMC1) (* skoMC1 (- 1.))) (<= (* skoSC1 (* skoMC1 (- 1.))) skoMC1) (> (* skoSC1 (* skoMC1 (* skoMC1 (* skoMC1 2.)))) (* skoMC1 (* skoMC1 (* skoMC1 (- 2.))))) (<= (* skoSC1 (* skoMC1 (* skoMC1 (* skoMC1 (- 2.))))) (* skoMC1 (* skoMC1 (* skoMC1 2.)))) (> (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (* skoMC1 12.)))) (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (+ (- 1.) (* skoMC1 6.))))) (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (- 1.)))) (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (/ 1. 12.)))) (* skoSC1 (* skoMC1 (* skoMC1 (* skoMC1 (/ 1. 12.))))))))))))) (* skoMC1 (* skoMC1 (* skoMC1 (+ (- 2.) (* skoMC1 (- 6.)))))))) (succedent (> (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (* skoMC1 (- 12.))))) (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (+ 1. (* skoMC1 (- 6.)))))) (* skoSC1 (+ (* skoMC1 (* skoMC1 skoMC1)) (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (/ (- 1.) 12.)))) (* skoSC1 (* skoMC1 (* skoMC1 (* skoMC1 (/ (- 1.) 12.))))))))))))) (* skoMC1 (* skoMC1 (* skoMC1 (+ 2. (* skoMC1 6.))))))))
-----[end problem]-----

-----[begin problem]-----
% In Mathematica format:
Timing[Resolve[Exists[{skoSC1,skoMC1}, And[skoMC1*skoMC1*skoMC1*2<=0,skoSC1*(skoMC1*skoMC1*skoMC1*(-1+skoMC1*3)+skoSC1*(skoMC1*skoMC1*skoMC1*(-2+skoMC1*-3)+skoSC1*(skoMC1*skoMC1*skoMC1*((1/6)+skoMC1*-1)+skoSC1*(skoMC1*skoMC1*skoMC1*(1/4)+skoSC1*skoSC1*(skoMC1*skoMC1*skoMC1*(-1/360)+skoSC1*skoSC1*(skoMC1*skoMC1*skoMC1*(1/20160)+skoSC1*skoSC1*(skoMC1*skoMC1*skoMC1*(-1/1814400)+skoSC1*skoSC1*skoMC1*skoMC1*skoMC1*(1/239500800))))))))<=skoMC1*skoMC1*skoMC1*(-2+skoMC1*-5),skoSC1*(skoMC1*skoMC1*skoMC1*(-1+skoMC1*3)+skoSC1*(skoMC1*skoMC1*skoMC1*(-2+skoMC1*-3)+skoSC1*(skoMC1*skoMC1*skoMC1*((1/6)+skoMC1*-1)+skoSC1*skoMC1*skoMC1*skoMC1*(1/4))))>skoMC1*skoMC1*skoMC1*(-2+skoMC1*-5),skoSC1*(skoMC1*(-1+skoMC1*3)+skoSC1*(skoMC1*(-2+skoMC1*-3)+skoSC1*(skoMC1*((1/6)+skoMC1*-1)+skoSC1*skoMC1*(1/4))))>skoMC1*(-2+skoMC1*-5),skoSC1>0,skoSC1*(skoMC1*skoMC1*skoMC1*-2+skoSC1*(skoMC1*skoMC1*skoMC1+skoSC1*skoMC1*skoMC1*skoMC1))<=skoMC1*skoMC1*skoMC1*2,skoSC1*(skoMC1*skoMC1*skoMC1+skoSC1*skoMC1*skoMC1*skoMC1)>0,skoSC1*(skoMC1*skoMC1*skoMC1*2+skoSC1*(skoMC1*skoMC1*skoMC1*-1+skoSC1*skoMC1*skoMC1*skoMC1*-1))>skoMC1*skoMC1*skoMC1*-2,skoSC1*(skoMC1*skoMC1*skoMC1*-1+skoSC1*skoMC1*skoMC1*skoMC1*-1)<=0,skoSC1*skoMC1*skoMC1*skoMC1*-1<=skoMC1*skoMC1*skoMC1,skoSC1*skoMC1*skoMC1*skoMC1>skoMC1*skoMC1*skoMC1*-1,skoMC1*skoMC1*skoMC1*-2<=0,skoMC1*skoMC1*skoMC1*2>0,skoSC1<=(5/4),2<=skoMC1,0<=skoSC1,skoMC1>0,0<=skoMC1,skoSC1*skoMC1>skoMC1*-1,skoSC1*skoMC1*-1<=skoMC1,skoSC1*skoMC1*skoMC1*skoMC1*2>skoMC1*skoMC1*skoMC1*-2,skoSC1*skoMC1*skoMC1*skoMC1*-2<=skoMC1*skoMC1*skoMC1*2,skoSC1*(skoMC1*skoMC1*skoMC1*skoMC1*12+skoSC1*(skoMC1*skoMC1*skoMC1*(-1+skoMC1*6)+skoSC1*(skoMC1*skoMC1*skoMC1*-1+skoSC1*(skoMC1*skoMC1*skoMC1*(1/12)+skoSC1*skoMC1*skoMC1*skoMC1*(1/12)))))>skoMC1*skoMC1*skoMC1*(-2+skoMC1*-6),skoSC1*(skoMC1*skoMC1*skoMC1*skoMC1*-12+skoSC1*(skoMC1*skoMC1*skoMC1*(1+skoMC1*-6)+skoSC1*(skoMC1*skoMC1*skoMC1+skoSC1*(skoMC1*skoMC1*skoMC1*(-1/12)+skoSC1*skoMC1*skoMC1*skoMC1*(-1/12)))))<=skoMC1*skoMC1*skoMC1*(2+skoMC1*6)]], Reals]]

% In QepcadB format:
(E skoSC1) (E skoMC1) [[(skoMC1 skoMC1 skoMC1 (2))<=0]/\[[(skoSC1 ((skoMC1 skoMC1 skoMC1 (-1+(skoMC1 (3))))+(skoSC1 ((skoMC1 skoMC1 skoMC1 (-2+(skoMC1 (-3))))+(skoSC1 ((skoMC1 skoMC1 skoMC1 (1/6+(skoMC1 (-1))))+(skoSC1 ((skoMC1 skoMC1 skoMC1 (1/4))+(skoSC1 skoSC1 ((skoMC1 skoMC1 skoMC1 (-1/360))+(skoSC1 skoSC1 ((skoMC1 skoMC1 skoMC1 (1/20160))+(skoSC1 skoSC1 ((skoMC1 skoMC1 skoMC1 (-1/1814400))+(skoSC1 skoSC1 skoMC1 skoMC1 skoMC1 (1/239500800))))))))))))))))<=(skoMC1 skoMC1 skoMC1 (-2+(skoMC1 (-5))))]/\[[(skoMC1 skoMC1 skoMC1 (-2+(skoMC1 (-5))))<(skoSC1 ((skoMC1 skoMC1 skoMC1 (-1+(skoMC1 (3))))+(skoSC1 ((skoMC1 skoMC1 skoMC1 (-2+(skoMC1 (-3))))+(skoSC1 ((skoMC1 skoMC1 skoMC1 (1/6+(skoMC1 (-1))))+(skoSC1 skoMC1 skoMC1 skoMC1 (1/4))))))))]/\[[(skoMC1 (-2+(skoMC1 (-5))))<(skoSC1 ((skoMC1 (-1+(skoMC1 (3))))+(skoSC1 ((skoMC1 (-2+(skoMC1 (-3))))+(skoSC1 ((skoMC1 (1/6+(skoMC1 (-1))))+(skoSC1 skoMC1 (1/4))))))))]/\[[0<skoSC1]/\[[(skoSC1 ((skoMC1 skoMC1 skoMC1 (-2))+(skoSC1 ((skoMC1 skoMC1 skoMC1)+(skoSC1 skoMC1 skoMC1 skoMC1)))))<=(skoMC1 skoMC1 skoMC1 (2))]/\[[0<(skoSC1 ((skoMC1 skoMC1 skoMC1)+(skoSC1 skoMC1 skoMC1 skoMC1)))]/\[[(skoMC1 skoMC1 skoMC1 (-2))<(skoSC1 ((skoMC1 skoMC1 skoMC1 (2))+(skoSC1 ((skoMC1 skoMC1 skoMC1 (-1))+(skoSC1 skoMC1 skoMC1 skoMC1 (-1))))))]/\[[(skoSC1 ((skoMC1 skoMC1 skoMC1 (-1))+(skoSC1 skoMC1 skoMC1 skoMC1 (-1))))<=0]/\[[(skoSC1 skoMC1 skoMC1 skoMC1 (-1))<=(skoMC1 skoMC1 skoMC1)]/\[[(skoMC1 skoMC1 skoMC1 (-1))<(skoSC1 skoMC1 skoMC1 skoMC1)]/\[[(skoMC1 skoMC1 skoMC1 (-2))<=0]/\[[0<(skoMC1 skoMC1 skoMC1 (2))]/\[[skoSC1<=5/4]/\[[2<=skoMC1]/\[[0<=skoSC1]/\[[0<skoMC1]/\[[0<=skoMC1]/\[[(skoMC1 (-1))<(skoSC1 skoMC1)]/\[[(skoSC1 skoMC1 (-1))<=skoMC1]/\[[(skoMC1 skoMC1 skoMC1 (-2))<(skoSC1 skoMC1 skoMC1 skoMC1 (2))]/\[[(skoSC1 skoMC1 skoMC1 skoMC1 (-2))<=(skoMC1 skoMC1 skoMC1 (2))]/\[[(skoMC1 skoMC1 skoMC1 (-2+(skoMC1 (-6))))<(skoSC1 ((skoMC1 skoMC1 skoMC1 skoMC1 (12))+(skoSC1 ((skoMC1 skoMC1 skoMC1 (-1+(skoMC1 (6))))+(skoSC1 ((skoMC1 skoMC1 skoMC1 (-1))+(skoSC1 ((skoMC1 skoMC1 skoMC1 (1/12))+(skoSC1 skoMC1 skoMC1 skoMC1 (1/12))))))))))]/\[(skoSC1 ((skoMC1 skoMC1 skoMC1 skoMC1 (-12))+(skoSC1 ((skoMC1 skoMC1 skoMC1 (1+(skoMC1 (-6))))+(skoSC1 ((skoMC1 skoMC1 skoMC1)+(skoSC1 ((skoMC1 skoMC1 skoMC1 (-1/12))+(skoSC1 skoMC1 skoMC1 skoMC1 (-1/12))))))))))<=(skoMC1 skoMC1 skoMC1 (2+(skoMC1 (6))))]]]]]]]]]]]]]]]]]]]]]]]].

% In SMTLib2 format:
(declare-fun skoSC1 () Real) (declare-fun skoMC1 () Real) (assert (and (<= (* skoMC1 (* skoMC1 (* skoMC1 2.))) 0.) (and (<= (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (+ (- 1.) (* skoMC1 3.))))) (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (+ (- 2.) (* skoMC1 (- 3.)))))) (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (+ (/ 1. 6.) (* skoMC1 (- 1.)))))) (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (/ 1. 4.)))) (* skoSC1 (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (/ (- 1.) 360.)))) (* skoSC1 (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (/ 1. 20160.)))) (* skoSC1 (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (/ (- 1.) 1814400.)))) (* skoSC1 (* skoSC1 (* skoMC1 (* skoMC1 (* skoMC1 (/ 1. 239500800.))))))))))))))))))))))) (* skoMC1 (* skoMC1 (* skoMC1 (+ (- 2.) (* skoMC1 (- 5.))))))) (and (> (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (+ (- 1.) (* skoMC1 3.))))) (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (+ (- 2.) (* skoMC1 (- 3.)))))) (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (+ (/ 1. 6.) (* skoMC1 (- 1.)))))) (* skoSC1 (* skoMC1 (* skoMC1 (* skoMC1 (/ 1. 4.))))))))))) (* skoMC1 (* skoMC1 (* skoMC1 (+ (- 2.) (* skoMC1 (- 5.))))))) (and (> (* skoSC1 (+ (* skoMC1 (+ (- 1.) (* skoMC1 3.))) (* skoSC1 (+ (* skoMC1 (+ (- 2.) (* skoMC1 (- 3.)))) (* skoSC1 (+ (* skoMC1 (+ (/ 1. 6.) (* skoMC1 (- 1.)))) (* skoSC1 (* skoMC1 (/ 1. 4.))))))))) (* skoMC1 (+ (- 2.) (* skoMC1 (- 5.))))) (and (> skoSC1 0.) (and (<= (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (- 2.)))) (* skoSC1 (+ (* skoMC1 (* skoMC1 skoMC1)) (* skoSC1 (* skoMC1 (* skoMC1 skoMC1))))))) (* skoMC1 (* skoMC1 (* skoMC1 2.)))) (and (> (* skoSC1 (+ (* skoMC1 (* skoMC1 skoMC1)) (* skoSC1 (* skoMC1 (* skoMC1 skoMC1))))) 0.) (and (> (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 2.))) (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (- 1.)))) (* skoSC1 (* skoMC1 (* skoMC1 (* skoMC1 (- 1.))))))))) (* skoMC1 (* skoMC1 (* skoMC1 (- 2.))))) (and (<= (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (- 1.)))) (* skoSC1 (* skoMC1 (* skoMC1 (* skoMC1 (- 1.))))))) 0.) (and (<= (* skoSC1 (* skoMC1 (* skoMC1 (* skoMC1 (- 1.))))) (* skoMC1 (* skoMC1 skoMC1))) (and (> (* skoSC1 (* skoMC1 (* skoMC1 skoMC1))) (* skoMC1 (* skoMC1 (* skoMC1 (- 1.))))) (and (<= (* skoMC1 (* skoMC1 (* skoMC1 (- 2.)))) 0.) (and (> (* skoMC1 (* skoMC1 (* skoMC1 2.))) 0.) (and (<= skoSC1 (/ 5. 4.)) (and (<= 2. skoMC1) (and (<= 0. skoSC1) (and (> skoMC1 0.) (and (<= 0. skoMC1) (and (> (* skoSC1 skoMC1) (* skoMC1 (- 1.))) (and (<= (* skoSC1 (* skoMC1 (- 1.))) skoMC1) (and (> (* skoSC1 (* skoMC1 (* skoMC1 (* skoMC1 2.)))) (* skoMC1 (* skoMC1 (* skoMC1 (- 2.))))) (and (<= (* skoSC1 (* skoMC1 (* skoMC1 (* skoMC1 (- 2.))))) (* skoMC1 (* skoMC1 (* skoMC1 2.)))) (and (> (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (* skoMC1 12.)))) (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (+ (- 1.) (* skoMC1 6.))))) (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (- 1.)))) (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (/ 1. 12.)))) (* skoSC1 (* skoMC1 (* skoMC1 (* skoMC1 (/ 1. 12.))))))))))))) (* skoMC1 (* skoMC1 (* skoMC1 (+ (- 2.) (* skoMC1 (- 6.))))))) (<= (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (* skoMC1 (- 12.))))) (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (+ 1. (* skoMC1 (- 6.)))))) (* skoSC1 (+ (* skoMC1 (* skoMC1 skoMC1)) (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (/ (- 1.) 12.)))) (* skoSC1 (* skoMC1 (* skoMC1 (* skoMC1 (/ (- 1.) 12.))))))))))))) (* skoMC1 (* skoMC1 (* skoMC1 (+ 2. (* skoMC1 6.))))))))))))))))))))))))))))))

% In GRF format:
(sequent " MetiTarski formula " (antecedent (<= (* skoMC1 (* skoMC1 (* skoMC1 2.))) 0.) (<= (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (+ (- 1.) (* skoMC1 3.))))) (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (+ (- 2.) (* skoMC1 (- 3.)))))) (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (+ (/ 1. 6.) (* skoMC1 (- 1.)))))) (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (/ 1. 4.)))) (* skoSC1 (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (/ (- 1.) 360.)))) (* skoSC1 (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (/ 1. 20160.)))) (* skoSC1 (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (/ (- 1.) 1814400.)))) (* skoSC1 (* skoSC1 (* skoMC1 (* skoMC1 (* skoMC1 (/ 1. 239500800.))))))))))))))))))))))) (* skoMC1 (* skoMC1 (* skoMC1 (+ (- 2.) (* skoMC1 (- 5.))))))) (> (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (+ (- 1.) (* skoMC1 3.))))) (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (+ (- 2.) (* skoMC1 (- 3.)))))) (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (+ (/ 1. 6.) (* skoMC1 (- 1.)))))) (* skoSC1 (* skoMC1 (* skoMC1 (* skoMC1 (/ 1. 4.))))))))))) (* skoMC1 (* skoMC1 (* skoMC1 (+ (- 2.) (* skoMC1 (- 5.))))))) (> (* skoSC1 (+ (* skoMC1 (+ (- 1.) (* skoMC1 3.))) (* skoSC1 (+ (* skoMC1 (+ (- 2.) (* skoMC1 (- 3.)))) (* skoSC1 (+ (* skoMC1 (+ (/ 1. 6.) (* skoMC1 (- 1.)))) (* skoSC1 (* skoMC1 (/ 1. 4.))))))))) (* skoMC1 (+ (- 2.) (* skoMC1 (- 5.))))) (> skoSC1 0.) (<= (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (- 2.)))) (* skoSC1 (+ (* skoMC1 (* skoMC1 skoMC1)) (* skoSC1 (* skoMC1 (* skoMC1 skoMC1))))))) (* skoMC1 (* skoMC1 (* skoMC1 2.)))) (> (* skoSC1 (+ (* skoMC1 (* skoMC1 skoMC1)) (* skoSC1 (* skoMC1 (* skoMC1 skoMC1))))) 0.) (> (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 2.))) (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (- 1.)))) (* skoSC1 (* skoMC1 (* skoMC1 (* skoMC1 (- 1.))))))))) (* skoMC1 (* skoMC1 (* skoMC1 (- 2.))))) (<= (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (- 1.)))) (* skoSC1 (* skoMC1 (* skoMC1 (* skoMC1 (- 1.))))))) 0.) (<= (* skoSC1 (* skoMC1 (* skoMC1 (* skoMC1 (- 1.))))) (* skoMC1 (* skoMC1 skoMC1))) (> (* skoSC1 (* skoMC1 (* skoMC1 skoMC1))) (* skoMC1 (* skoMC1 (* skoMC1 (- 1.))))) (<= (* skoMC1 (* skoMC1 (* skoMC1 (- 2.)))) 0.) (> (* skoMC1 (* skoMC1 (* skoMC1 2.))) 0.) (<= skoSC1 (/ 5. 4.)) (<= 2. skoMC1) (<= 0. skoSC1) (> skoMC1 0.) (<= 0. skoMC1) (> (* skoSC1 skoMC1) (* skoMC1 (- 1.))) (<= (* skoSC1 (* skoMC1 (- 1.))) skoMC1) (> (* skoSC1 (* skoMC1 (* skoMC1 (* skoMC1 2.)))) (* skoMC1 (* skoMC1 (* skoMC1 (- 2.))))) (<= (* skoSC1 (* skoMC1 (* skoMC1 (* skoMC1 (- 2.))))) (* skoMC1 (* skoMC1 (* skoMC1 2.)))) (> (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (* skoMC1 12.)))) (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (+ (- 1.) (* skoMC1 6.))))) (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (- 1.)))) (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (/ 1. 12.)))) (* skoSC1 (* skoMC1 (* skoMC1 (* skoMC1 (/ 1. 12.))))))))))))) (* skoMC1 (* skoMC1 (* skoMC1 (+ (- 2.) (* skoMC1 (- 6.)))))))) (succedent (> (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (* skoMC1 (- 12.))))) (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (+ 1. (* skoMC1 (- 6.)))))) (* skoSC1 (+ (* skoMC1 (* skoMC1 skoMC1)) (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (/ (- 1.) 12.)))) (* skoSC1 (* skoMC1 (* skoMC1 (* skoMC1 (/ (- 1.) 12.))))))))))))) (* skoMC1 (* skoMC1 (* skoMC1 (+ 2. (* skoMC1 6.))))))))
-----[end problem]-----

-----[begin problem]-----
% In Mathematica format:
Timing[Resolve[Exists[{skoSC1,skoMC1}, And[skoMC1*skoMC1*skoMC1*-2<=0,skoSC1*(skoMC1*skoMC1*skoMC1*(-1+skoMC1*3)+skoSC1*(skoMC1*skoMC1*skoMC1*(-2+skoMC1*-3)+skoSC1*(skoMC1*skoMC1*skoMC1*((1/6)+skoMC1*-1)+skoSC1*skoMC1*skoMC1*skoMC1*(1/4))))>skoMC1*skoMC1*skoMC1*(-2+skoMC1*-5),skoSC1*(skoMC1*(-1+skoMC1*3)+skoSC1*(skoMC1*(-2+skoMC1*-3)+skoSC1*(skoMC1*((1/6)+skoMC1*-1)+skoSC1*skoMC1*(1/4))))>skoMC1*(-2+skoMC1*-5),skoSC1>0,skoSC1*(skoMC1*skoMC1*skoMC1*-2+skoSC1*(skoMC1*skoMC1*skoMC1+skoSC1*skoMC1*skoMC1*skoMC1))<=skoMC1*skoMC1*skoMC1*2,skoSC1*(skoMC1*skoMC1*skoMC1+skoSC1*skoMC1*skoMC1*skoMC1)>0,skoSC1*(skoMC1*skoMC1*skoMC1*2+skoSC1*(skoMC1*skoMC1*skoMC1*-1+skoSC1*skoMC1*skoMC1*skoMC1*-1))>skoMC1*skoMC1*skoMC1*-2,skoSC1*(skoMC1*skoMC1*skoMC1*-1+skoSC1*skoMC1*skoMC1*skoMC1*-1)<=0,skoSC1*skoMC1*skoMC1*skoMC1*-1<=skoMC1*skoMC1*skoMC1,skoSC1*skoMC1*skoMC1*skoMC1>skoMC1*skoMC1*skoMC1*-1,skoMC1*skoMC1*skoMC1*-2<=0,skoMC1*skoMC1*skoMC1*2>0,skoSC1<=(5/4),2<=skoMC1,0<=skoSC1,skoMC1>0,0<=skoMC1,skoSC1*skoMC1>skoMC1*-1,skoSC1*skoMC1*-1<=skoMC1,skoSC1*skoMC1*skoMC1*skoMC1*2>skoMC1*skoMC1*skoMC1*-2,skoSC1*skoMC1*skoMC1*skoMC1*-2<=skoMC1*skoMC1*skoMC1*2,skoSC1*(skoMC1*skoMC1*skoMC1*skoMC1*12+skoSC1*(skoMC1*skoMC1*skoMC1*(-1+skoMC1*6)+skoSC1*(skoMC1*skoMC1*skoMC1*-1+skoSC1*(skoMC1*skoMC1*skoMC1*(1/12)+skoSC1*skoMC1*skoMC1*skoMC1*(1/12)))))>skoMC1*skoMC1*skoMC1*(-2+skoMC1*-6),skoSC1*(skoMC1*skoMC1*skoMC1*skoMC1*-12+skoSC1*(skoMC1*skoMC1*skoMC1*(1+skoMC1*-6)+skoSC1*(skoMC1*skoMC1*skoMC1+skoSC1*(skoMC1*skoMC1*skoMC1*(-1/12)+skoSC1*skoMC1*skoMC1*skoMC1*(-1/12)))))<=skoMC1*skoMC1*skoMC1*(2+skoMC1*6)]], Reals]]

% In QepcadB format:
(E skoSC1) (E skoMC1) [[(skoMC1 skoMC1 skoMC1 (-2))<=0]/\[[(skoMC1 skoMC1 skoMC1 (-2+(skoMC1 (-5))))<(skoSC1 ((skoMC1 skoMC1 skoMC1 (-1+(skoMC1 (3))))+(skoSC1 ((skoMC1 skoMC1 skoMC1 (-2+(skoMC1 (-3))))+(skoSC1 ((skoMC1 skoMC1 skoMC1 (1/6+(skoMC1 (-1))))+(skoSC1 skoMC1 skoMC1 skoMC1 (1/4))))))))]/\[[(skoMC1 (-2+(skoMC1 (-5))))<(skoSC1 ((skoMC1 (-1+(skoMC1 (3))))+(skoSC1 ((skoMC1 (-2+(skoMC1 (-3))))+(skoSC1 ((skoMC1 (1/6+(skoMC1 (-1))))+(skoSC1 skoMC1 (1/4))))))))]/\[[0<skoSC1]/\[[(skoSC1 ((skoMC1 skoMC1 skoMC1 (-2))+(skoSC1 ((skoMC1 skoMC1 skoMC1)+(skoSC1 skoMC1 skoMC1 skoMC1)))))<=(skoMC1 skoMC1 skoMC1 (2))]/\[[0<(skoSC1 ((skoMC1 skoMC1 skoMC1)+(skoSC1 skoMC1 skoMC1 skoMC1)))]/\[[(skoMC1 skoMC1 skoMC1 (-2))<(skoSC1 ((skoMC1 skoMC1 skoMC1 (2))+(skoSC1 ((skoMC1 skoMC1 skoMC1 (-1))+(skoSC1 skoMC1 skoMC1 skoMC1 (-1))))))]/\[[(skoSC1 ((skoMC1 skoMC1 skoMC1 (-1))+(skoSC1 skoMC1 skoMC1 skoMC1 (-1))))<=0]/\[[(skoSC1 skoMC1 skoMC1 skoMC1 (-1))<=(skoMC1 skoMC1 skoMC1)]/\[[(skoMC1 skoMC1 skoMC1 (-1))<(skoSC1 skoMC1 skoMC1 skoMC1)]/\[[(skoMC1 skoMC1 skoMC1 (-2))<=0]/\[[0<(skoMC1 skoMC1 skoMC1 (2))]/\[[skoSC1<=5/4]/\[[2<=skoMC1]/\[[0<=skoSC1]/\[[0<skoMC1]/\[[0<=skoMC1]/\[[(skoMC1 (-1))<(skoSC1 skoMC1)]/\[[(skoSC1 skoMC1 (-1))<=skoMC1]/\[[(skoMC1 skoMC1 skoMC1 (-2))<(skoSC1 skoMC1 skoMC1 skoMC1 (2))]/\[[(skoSC1 skoMC1 skoMC1 skoMC1 (-2))<=(skoMC1 skoMC1 skoMC1 (2))]/\[[(skoMC1 skoMC1 skoMC1 (-2+(skoMC1 (-6))))<(skoSC1 ((skoMC1 skoMC1 skoMC1 skoMC1 (12))+(skoSC1 ((skoMC1 skoMC1 skoMC1 (-1+(skoMC1 (6))))+(skoSC1 ((skoMC1 skoMC1 skoMC1 (-1))+(skoSC1 ((skoMC1 skoMC1 skoMC1 (1/12))+(skoSC1 skoMC1 skoMC1 skoMC1 (1/12))))))))))]/\[(skoSC1 ((skoMC1 skoMC1 skoMC1 skoMC1 (-12))+(skoSC1 ((skoMC1 skoMC1 skoMC1 (1+(skoMC1 (-6))))+(skoSC1 ((skoMC1 skoMC1 skoMC1)+(skoSC1 ((skoMC1 skoMC1 skoMC1 (-1/12))+(skoSC1 skoMC1 skoMC1 skoMC1 (-1/12))))))))))<=(skoMC1 skoMC1 skoMC1 (2+(skoMC1 (6))))]]]]]]]]]]]]]]]]]]]]]]].

% In SMTLib2 format:
(declare-fun skoSC1 () Real) (declare-fun skoMC1 () Real) (assert (and (<= (* skoMC1 (* skoMC1 (* skoMC1 (- 2.)))) 0.) (and (> (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (+ (- 1.) (* skoMC1 3.))))) (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (+ (- 2.) (* skoMC1 (- 3.)))))) (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (+ (/ 1. 6.) (* skoMC1 (- 1.)))))) (* skoSC1 (* skoMC1 (* skoMC1 (* skoMC1 (/ 1. 4.))))))))))) (* skoMC1 (* skoMC1 (* skoMC1 (+ (- 2.) (* skoMC1 (- 5.))))))) (and (> (* skoSC1 (+ (* skoMC1 (+ (- 1.) (* skoMC1 3.))) (* skoSC1 (+ (* skoMC1 (+ (- 2.) (* skoMC1 (- 3.)))) (* skoSC1 (+ (* skoMC1 (+ (/ 1. 6.) (* skoMC1 (- 1.)))) (* skoSC1 (* skoMC1 (/ 1. 4.))))))))) (* skoMC1 (+ (- 2.) (* skoMC1 (- 5.))))) (and (> skoSC1 0.) (and (<= (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (- 2.)))) (* skoSC1 (+ (* skoMC1 (* skoMC1 skoMC1)) (* skoSC1 (* skoMC1 (* skoMC1 skoMC1))))))) (* skoMC1 (* skoMC1 (* skoMC1 2.)))) (and (> (* skoSC1 (+ (* skoMC1 (* skoMC1 skoMC1)) (* skoSC1 (* skoMC1 (* skoMC1 skoMC1))))) 0.) (and (> (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 2.))) (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (- 1.)))) (* skoSC1 (* skoMC1 (* skoMC1 (* skoMC1 (- 1.))))))))) (* skoMC1 (* skoMC1 (* skoMC1 (- 2.))))) (and (<= (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (- 1.)))) (* skoSC1 (* skoMC1 (* skoMC1 (* skoMC1 (- 1.))))))) 0.) (and (<= (* skoSC1 (* skoMC1 (* skoMC1 (* skoMC1 (- 1.))))) (* skoMC1 (* skoMC1 skoMC1))) (and (> (* skoSC1 (* skoMC1 (* skoMC1 skoMC1))) (* skoMC1 (* skoMC1 (* skoMC1 (- 1.))))) (and (<= (* skoMC1 (* skoMC1 (* skoMC1 (- 2.)))) 0.) (and (> (* skoMC1 (* skoMC1 (* skoMC1 2.))) 0.) (and (<= skoSC1 (/ 5. 4.)) (and (<= 2. skoMC1) (and (<= 0. skoSC1) (and (> skoMC1 0.) (and (<= 0. skoMC1) (and (> (* skoSC1 skoMC1) (* skoMC1 (- 1.))) (and (<= (* skoSC1 (* skoMC1 (- 1.))) skoMC1) (and (> (* skoSC1 (* skoMC1 (* skoMC1 (* skoMC1 2.)))) (* skoMC1 (* skoMC1 (* skoMC1 (- 2.))))) (and (<= (* skoSC1 (* skoMC1 (* skoMC1 (* skoMC1 (- 2.))))) (* skoMC1 (* skoMC1 (* skoMC1 2.)))) (and (> (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (* skoMC1 12.)))) (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (+ (- 1.) (* skoMC1 6.))))) (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (- 1.)))) (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (/ 1. 12.)))) (* skoSC1 (* skoMC1 (* skoMC1 (* skoMC1 (/ 1. 12.))))))))))))) (* skoMC1 (* skoMC1 (* skoMC1 (+ (- 2.) (* skoMC1 (- 6.))))))) (<= (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (* skoMC1 (- 12.))))) (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (+ 1. (* skoMC1 (- 6.)))))) (* skoSC1 (+ (* skoMC1 (* skoMC1 skoMC1)) (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (/ (- 1.) 12.)))) (* skoSC1 (* skoMC1 (* skoMC1 (* skoMC1 (/ (- 1.) 12.))))))))))))) (* skoMC1 (* skoMC1 (* skoMC1 (+ 2. (* skoMC1 6.)))))))))))))))))))))))))))))

% In GRF format:
(sequent " MetiTarski formula " (antecedent (<= (* skoMC1 (* skoMC1 (* skoMC1 (- 2.)))) 0.) (> (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (+ (- 1.) (* skoMC1 3.))))) (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (+ (- 2.) (* skoMC1 (- 3.)))))) (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (+ (/ 1. 6.) (* skoMC1 (- 1.)))))) (* skoSC1 (* skoMC1 (* skoMC1 (* skoMC1 (/ 1. 4.))))))))))) (* skoMC1 (* skoMC1 (* skoMC1 (+ (- 2.) (* skoMC1 (- 5.))))))) (> (* skoSC1 (+ (* skoMC1 (+ (- 1.) (* skoMC1 3.))) (* skoSC1 (+ (* skoMC1 (+ (- 2.) (* skoMC1 (- 3.)))) (* skoSC1 (+ (* skoMC1 (+ (/ 1. 6.) (* skoMC1 (- 1.)))) (* skoSC1 (* skoMC1 (/ 1. 4.))))))))) (* skoMC1 (+ (- 2.) (* skoMC1 (- 5.))))) (> skoSC1 0.) (<= (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (- 2.)))) (* skoSC1 (+ (* skoMC1 (* skoMC1 skoMC1)) (* skoSC1 (* skoMC1 (* skoMC1 skoMC1))))))) (* skoMC1 (* skoMC1 (* skoMC1 2.)))) (> (* skoSC1 (+ (* skoMC1 (* skoMC1 skoMC1)) (* skoSC1 (* skoMC1 (* skoMC1 skoMC1))))) 0.) (> (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 2.))) (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (- 1.)))) (* skoSC1 (* skoMC1 (* skoMC1 (* skoMC1 (- 1.))))))))) (* skoMC1 (* skoMC1 (* skoMC1 (- 2.))))) (<= (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (- 1.)))) (* skoSC1 (* skoMC1 (* skoMC1 (* skoMC1 (- 1.))))))) 0.) (<= (* skoSC1 (* skoMC1 (* skoMC1 (* skoMC1 (- 1.))))) (* skoMC1 (* skoMC1 skoMC1))) (> (* skoSC1 (* skoMC1 (* skoMC1 skoMC1))) (* skoMC1 (* skoMC1 (* skoMC1 (- 1.))))) (<= (* skoMC1 (* skoMC1 (* skoMC1 (- 2.)))) 0.) (> (* skoMC1 (* skoMC1 (* skoMC1 2.))) 0.) (<= skoSC1 (/ 5. 4.)) (<= 2. skoMC1) (<= 0. skoSC1) (> skoMC1 0.) (<= 0. skoMC1) (> (* skoSC1 skoMC1) (* skoMC1 (- 1.))) (<= (* skoSC1 (* skoMC1 (- 1.))) skoMC1) (> (* skoSC1 (* skoMC1 (* skoMC1 (* skoMC1 2.)))) (* skoMC1 (* skoMC1 (* skoMC1 (- 2.))))) (<= (* skoSC1 (* skoMC1 (* skoMC1 (* skoMC1 (- 2.))))) (* skoMC1 (* skoMC1 (* skoMC1 2.)))) (> (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (* skoMC1 12.)))) (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (+ (- 1.) (* skoMC1 6.))))) (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (- 1.)))) (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (/ 1. 12.)))) (* skoSC1 (* skoMC1 (* skoMC1 (* skoMC1 (/ 1. 12.))))))))))))) (* skoMC1 (* skoMC1 (* skoMC1 (+ (- 2.) (* skoMC1 (- 6.)))))))) (succedent (> (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (* skoMC1 (- 12.))))) (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (+ 1. (* skoMC1 (- 6.)))))) (* skoSC1 (+ (* skoMC1 (* skoMC1 skoMC1)) (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (/ (- 1.) 12.)))) (* skoSC1 (* skoMC1 (* skoMC1 (* skoMC1 (/ (- 1.) 12.))))))))))))) (* skoMC1 (* skoMC1 (* skoMC1 (+ 2. (* skoMC1 6.))))))))
-----[end problem]-----

-----[begin problem]-----
% In Mathematica format:
Timing[Resolve[Exists[{skoSC1,skoMC1}, And[skoSC1*(skoMC1*skoMC1*skoMC1*(-1+skoMC1*3)+skoSC1*(skoMC1*skoMC1*skoMC1*(-2+skoMC1*-3)+skoSC1*(skoMC1*skoMC1*skoMC1*((1/6)+skoMC1*-1)+skoSC1*(skoMC1*skoMC1*skoMC1*(1/4)+skoSC1*skoSC1*(skoMC1*skoMC1*skoMC1*(-1/360)+skoSC1*skoSC1*(skoMC1*skoMC1*skoMC1*(1/20160)+skoSC1*skoSC1*(skoMC1*skoMC1*skoMC1*(-1/1814400)+skoSC1*skoSC1*skoMC1*skoMC1*skoMC1*(1/239500800))))))))>skoMC1*skoMC1*skoMC1*(-2+skoMC1*-5),skoSC1*(skoMC1*skoMC1*skoMC1*(-1+skoMC1*3)+skoSC1*(skoMC1*skoMC1*skoMC1*(-2+skoMC1*-3)+skoSC1*(skoMC1*skoMC1*skoMC1*((1/6)+skoMC1*-1)+skoSC1*skoMC1*skoMC1*skoMC1*(1/4))))>skoMC1*skoMC1*skoMC1*(-2+skoMC1*-5),skoSC1*(skoMC1*(-1+skoMC1*3)+skoSC1*(skoMC1*(-2+skoMC1*-3)+skoSC1*(skoMC1*((1/6)+skoMC1*-1)+skoSC1*skoMC1*(1/4))))>skoMC1*(-2+skoMC1*-5),skoSC1>0,skoSC1*(skoMC1*skoMC1*skoMC1+skoSC1*skoMC1*skoMC1*skoMC1)>0,skoSC1*(skoMC1*skoMC1*skoMC1*2+skoSC1*(skoMC1*skoMC1*skoMC1*-1+skoSC1*skoMC1*skoMC1*skoMC1*-1))>skoMC1*skoMC1*skoMC1*-2,skoSC1*skoMC1*skoMC1*skoMC1>skoMC1*skoMC1*skoMC1*-1,skoMC1*skoMC1*skoMC1*2>0,skoMC1>0,skoSC1*skoMC1>skoMC1*-1,skoSC1*skoMC1*skoMC1*skoMC1*2>skoMC1*skoMC1*skoMC1*-2,skoSC1*(skoMC1*skoMC1*skoMC1*skoMC1*12+skoSC1*(skoMC1*skoMC1*skoMC1*(-1+skoMC1*6)+skoSC1*(skoMC1*skoMC1*skoMC1*-1+skoSC1*(skoMC1*skoMC1*skoMC1*(1/12)+skoSC1*skoMC1*skoMC1*skoMC1*(1/12)))))>skoMC1*skoMC1*skoMC1*(-2+skoMC1*-6)]], Reals]]

% In QepcadB format:
(E skoSC1) (E skoMC1) [[(skoMC1 skoMC1 skoMC1 (-2+(skoMC1 (-5))))<(skoSC1 ((skoMC1 skoMC1 skoMC1 (-1+(skoMC1 (3))))+(skoSC1 ((skoMC1 skoMC1 skoMC1 (-2+(skoMC1 (-3))))+(skoSC1 ((skoMC1 skoMC1 skoMC1 (1/6+(skoMC1 (-1))))+(skoSC1 ((skoMC1 skoMC1 skoMC1 (1/4))+(skoSC1 skoSC1 ((skoMC1 skoMC1 skoMC1 (-1/360))+(skoSC1 skoSC1 ((skoMC1 skoMC1 skoMC1 (1/20160))+(skoSC1 skoSC1 ((skoMC1 skoMC1 skoMC1 (-1/1814400))+(skoSC1 skoSC1 skoMC1 skoMC1 skoMC1 (1/239500800))))))))))))))))]/\[[(skoMC1 skoMC1 skoMC1 (-2+(skoMC1 (-5))))<(skoSC1 ((skoMC1 skoMC1 skoMC1 (-1+(skoMC1 (3))))+(skoSC1 ((skoMC1 skoMC1 skoMC1 (-2+(skoMC1 (-3))))+(skoSC1 ((skoMC1 skoMC1 skoMC1 (1/6+(skoMC1 (-1))))+(skoSC1 skoMC1 skoMC1 skoMC1 (1/4))))))))]/\[[(skoMC1 (-2+(skoMC1 (-5))))<(skoSC1 ((skoMC1 (-1+(skoMC1 (3))))+(skoSC1 ((skoMC1 (-2+(skoMC1 (-3))))+(skoSC1 ((skoMC1 (1/6+(skoMC1 (-1))))+(skoSC1 skoMC1 (1/4))))))))]/\[[0<skoSC1]/\[[0<(skoSC1 ((skoMC1 skoMC1 skoMC1)+(skoSC1 skoMC1 skoMC1 skoMC1)))]/\[[(skoMC1 skoMC1 skoMC1 (-2))<(skoSC1 ((skoMC1 skoMC1 skoMC1 (2))+(skoSC1 ((skoMC1 skoMC1 skoMC1 (-1))+(skoSC1 skoMC1 skoMC1 skoMC1 (-1))))))]/\[[(skoMC1 skoMC1 skoMC1 (-1))<(skoSC1 skoMC1 skoMC1 skoMC1)]/\[[0<(skoMC1 skoMC1 skoMC1 (2))]/\[[0<skoMC1]/\[[(skoMC1 (-1))<(skoSC1 skoMC1)]/\[[(skoMC1 skoMC1 skoMC1 (-2))<(skoSC1 skoMC1 skoMC1 skoMC1 (2))]/\[(skoMC1 skoMC1 skoMC1 (-2+(skoMC1 (-6))))<(skoSC1 ((skoMC1 skoMC1 skoMC1 skoMC1 (12))+(skoSC1 ((skoMC1 skoMC1 skoMC1 (-1+(skoMC1 (6))))+(skoSC1 ((skoMC1 skoMC1 skoMC1 (-1))+(skoSC1 ((skoMC1 skoMC1 skoMC1 (1/12))+(skoSC1 skoMC1 skoMC1 skoMC1 (1/12))))))))))]]]]]]]]]]]].

% In SMTLib2 format:
(declare-fun skoSC1 () Real) (declare-fun skoMC1 () Real) (assert (and (> (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (+ (- 1.) (* skoMC1 3.))))) (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (+ (- 2.) (* skoMC1 (- 3.)))))) (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (+ (/ 1. 6.) (* skoMC1 (- 1.)))))) (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (/ 1. 4.)))) (* skoSC1 (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (/ (- 1.) 360.)))) (* skoSC1 (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (/ 1. 20160.)))) (* skoSC1 (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (/ (- 1.) 1814400.)))) (* skoSC1 (* skoSC1 (* skoMC1 (* skoMC1 (* skoMC1 (/ 1. 239500800.))))))))))))))))))))))) (* skoMC1 (* skoMC1 (* skoMC1 (+ (- 2.) (* skoMC1 (- 5.))))))) (and (> (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (+ (- 1.) (* skoMC1 3.))))) (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (+ (- 2.) (* skoMC1 (- 3.)))))) (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (+ (/ 1. 6.) (* skoMC1 (- 1.)))))) (* skoSC1 (* skoMC1 (* skoMC1 (* skoMC1 (/ 1. 4.))))))))))) (* skoMC1 (* skoMC1 (* skoMC1 (+ (- 2.) (* skoMC1 (- 5.))))))) (and (> (* skoSC1 (+ (* skoMC1 (+ (- 1.) (* skoMC1 3.))) (* skoSC1 (+ (* skoMC1 (+ (- 2.) (* skoMC1 (- 3.)))) (* skoSC1 (+ (* skoMC1 (+ (/ 1. 6.) (* skoMC1 (- 1.)))) (* skoSC1 (* skoMC1 (/ 1. 4.))))))))) (* skoMC1 (+ (- 2.) (* skoMC1 (- 5.))))) (and (> skoSC1 0.) (and (> (* skoSC1 (+ (* skoMC1 (* skoMC1 skoMC1)) (* skoSC1 (* skoMC1 (* skoMC1 skoMC1))))) 0.) (and (> (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 2.))) (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (- 1.)))) (* skoSC1 (* skoMC1 (* skoMC1 (* skoMC1 (- 1.))))))))) (* skoMC1 (* skoMC1 (* skoMC1 (- 2.))))) (and (> (* skoSC1 (* skoMC1 (* skoMC1 skoMC1))) (* skoMC1 (* skoMC1 (* skoMC1 (- 1.))))) (and (> (* skoMC1 (* skoMC1 (* skoMC1 2.))) 0.) (and (> skoMC1 0.) (and (> (* skoSC1 skoMC1) (* skoMC1 (- 1.))) (and (> (* skoSC1 (* skoMC1 (* skoMC1 (* skoMC1 2.)))) (* skoMC1 (* skoMC1 (* skoMC1 (- 2.))))) (> (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (* skoMC1 12.)))) (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (+ (- 1.) (* skoMC1 6.))))) (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (- 1.)))) (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (/ 1. 12.)))) (* skoSC1 (* skoMC1 (* skoMC1 (* skoMC1 (/ 1. 12.))))))))))))) (* skoMC1 (* skoMC1 (* skoMC1 (+ (- 2.) (* skoMC1 (- 6.)))))))))))))))))))

% In GRF format:
(sequent " MetiTarski formula " (antecedent (> (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (+ (- 1.) (* skoMC1 3.))))) (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (+ (- 2.) (* skoMC1 (- 3.)))))) (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (+ (/ 1. 6.) (* skoMC1 (- 1.)))))) (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (/ 1. 4.)))) (* skoSC1 (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (/ (- 1.) 360.)))) (* skoSC1 (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (/ 1. 20160.)))) (* skoSC1 (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (/ (- 1.) 1814400.)))) (* skoSC1 (* skoSC1 (* skoMC1 (* skoMC1 (* skoMC1 (/ 1. 239500800.))))))))))))))))))))))) (* skoMC1 (* skoMC1 (* skoMC1 (+ (- 2.) (* skoMC1 (- 5.))))))) (> (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (+ (- 1.) (* skoMC1 3.))))) (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (+ (- 2.) (* skoMC1 (- 3.)))))) (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (+ (/ 1. 6.) (* skoMC1 (- 1.)))))) (* skoSC1 (* skoMC1 (* skoMC1 (* skoMC1 (/ 1. 4.))))))))))) (* skoMC1 (* skoMC1 (* skoMC1 (+ (- 2.) (* skoMC1 (- 5.))))))) (> (* skoSC1 (+ (* skoMC1 (+ (- 1.) (* skoMC1 3.))) (* skoSC1 (+ (* skoMC1 (+ (- 2.) (* skoMC1 (- 3.)))) (* skoSC1 (+ (* skoMC1 (+ (/ 1. 6.) (* skoMC1 (- 1.)))) (* skoSC1 (* skoMC1 (/ 1. 4.))))))))) (* skoMC1 (+ (- 2.) (* skoMC1 (- 5.))))) (> skoSC1 0.) (> (* skoSC1 (+ (* skoMC1 (* skoMC1 skoMC1)) (* skoSC1 (* skoMC1 (* skoMC1 skoMC1))))) 0.) (> (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 2.))) (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (- 1.)))) (* skoSC1 (* skoMC1 (* skoMC1 (* skoMC1 (- 1.))))))))) (* skoMC1 (* skoMC1 (* skoMC1 (- 2.))))) (> (* skoSC1 (* skoMC1 (* skoMC1 skoMC1))) (* skoMC1 (* skoMC1 (* skoMC1 (- 1.))))) (> (* skoMC1 (* skoMC1 (* skoMC1 2.))) 0.) (> skoMC1 0.) (> (* skoSC1 skoMC1) (* skoMC1 (- 1.))) (> (* skoSC1 (* skoMC1 (* skoMC1 (* skoMC1 2.)))) (* skoMC1 (* skoMC1 (* skoMC1 (- 2.)))))) (succedent (<= (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (* skoMC1 12.)))) (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (+ (- 1.) (* skoMC1 6.))))) (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (- 1.)))) (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (/ 1. 12.)))) (* skoSC1 (* skoMC1 (* skoMC1 (* skoMC1 (/ 1. 12.))))))))))))) (* skoMC1 (* skoMC1 (* skoMC1 (+ (- 2.) (* skoMC1 (- 6.)))))))))
-----[end problem]-----

-----[begin problem]-----
% In Mathematica format:
Timing[Resolve[Exists[{skoSC1,skoMC1}, And[skoSC1*(skoMC1*skoMC1*skoMC1*(-1+skoMC1*3)+skoSC1*(skoMC1*skoMC1*skoMC1*(-2+skoMC1*-3)+skoSC1*(skoMC1*skoMC1*skoMC1*((1/6)+skoMC1*-1)+skoSC1*(skoMC1*skoMC1*skoMC1*(1/4)+skoSC1*skoSC1*(skoMC1*skoMC1*skoMC1*(-1/360)+skoSC1*skoSC1*(skoMC1*skoMC1*skoMC1*(1/20160)+skoSC1*skoSC1*(skoMC1*skoMC1*skoMC1*(-1/1814400)+skoSC1*skoSC1*skoMC1*skoMC1*skoMC1*(1/239500800))))))))>skoMC1*skoMC1*skoMC1*(-2+skoMC1*-5),skoSC1*(skoMC1*skoMC1*skoMC1*(-1+skoMC1*3)+skoSC1*(skoMC1*skoMC1*skoMC1*(-2+skoMC1*-3)+skoSC1*(skoMC1*skoMC1*skoMC1*((1/6)+skoMC1*-1)+skoSC1*skoMC1*skoMC1*skoMC1*(1/4))))>skoMC1*skoMC1*skoMC1*(-2+skoMC1*-5),skoSC1*(skoMC1*(-1+skoMC1*3)+skoSC1*(skoMC1*(-2+skoMC1*-3)+skoSC1*(skoMC1*((1/6)+skoMC1*-1)+skoSC1*skoMC1*(1/4))))>skoMC1*(-2+skoMC1*-5),skoSC1>0,skoSC1*(skoMC1*skoMC1*skoMC1*-2+skoSC1*(skoMC1*skoMC1*skoMC1+skoSC1*skoMC1*skoMC1*skoMC1))<=skoMC1*skoMC1*skoMC1*2,skoSC1*(skoMC1*skoMC1*skoMC1+skoSC1*skoMC1*skoMC1*skoMC1)>0,skoSC1*(skoMC1*skoMC1*skoMC1*2+skoSC1*(skoMC1*skoMC1*skoMC1*-1+skoSC1*skoMC1*skoMC1*skoMC1*-1))>skoMC1*skoMC1*skoMC1*-2,skoSC1*(skoMC1*skoMC1*skoMC1*-1+skoSC1*skoMC1*skoMC1*skoMC1*-1)<=0,skoSC1*skoMC1*skoMC1*skoMC1*-1<=skoMC1*skoMC1*skoMC1,skoSC1*skoMC1*skoMC1*skoMC1>skoMC1*skoMC1*skoMC1*-1,skoMC1*skoMC1*skoMC1*-2<=0,skoMC1*skoMC1*skoMC1*2>0,skoSC1<=(5/4),2<=skoMC1,0<=skoSC1,skoMC1>0,0<=skoMC1,skoSC1*skoMC1>skoMC1*-1,skoSC1*skoMC1*-1<=skoMC1,skoSC1*skoMC1*skoMC1*skoMC1*2>skoMC1*skoMC1*skoMC1*-2,skoSC1*skoMC1*skoMC1*skoMC1*-2<=skoMC1*skoMC1*skoMC1*2,skoSC1*(skoMC1*skoMC1*skoMC1*skoMC1*12+skoSC1*(skoMC1*skoMC1*skoMC1*(-1+skoMC1*6)+skoSC1*(skoMC1*skoMC1*skoMC1*-1+skoSC1*(skoMC1*skoMC1*skoMC1*(1/12)+skoSC1*skoMC1*skoMC1*skoMC1*(1/12)))))>skoMC1*skoMC1*skoMC1*(-2+skoMC1*-6),skoSC1*(skoMC1*skoMC1*skoMC1*skoMC1*-12+skoSC1*(skoMC1*skoMC1*skoMC1*(1+skoMC1*-6)+skoSC1*(skoMC1*skoMC1*skoMC1+skoSC1*(skoMC1*skoMC1*skoMC1*(-1/12)+skoSC1*skoMC1*skoMC1*skoMC1*(-1/12)))))<=skoMC1*skoMC1*skoMC1*(2+skoMC1*6)]], Reals]]

% In QepcadB format:
(E skoSC1) (E skoMC1) [[(skoMC1 skoMC1 skoMC1 (-2+(skoMC1 (-5))))<(skoSC1 ((skoMC1 skoMC1 skoMC1 (-1+(skoMC1 (3))))+(skoSC1 ((skoMC1 skoMC1 skoMC1 (-2+(skoMC1 (-3))))+(skoSC1 ((skoMC1 skoMC1 skoMC1 (1/6+(skoMC1 (-1))))+(skoSC1 ((skoMC1 skoMC1 skoMC1 (1/4))+(skoSC1 skoSC1 ((skoMC1 skoMC1 skoMC1 (-1/360))+(skoSC1 skoSC1 ((skoMC1 skoMC1 skoMC1 (1/20160))+(skoSC1 skoSC1 ((skoMC1 skoMC1 skoMC1 (-1/1814400))+(skoSC1 skoSC1 skoMC1 skoMC1 skoMC1 (1/239500800))))))))))))))))]/\[[(skoMC1 skoMC1 skoMC1 (-2+(skoMC1 (-5))))<(skoSC1 ((skoMC1 skoMC1 skoMC1 (-1+(skoMC1 (3))))+(skoSC1 ((skoMC1 skoMC1 skoMC1 (-2+(skoMC1 (-3))))+(skoSC1 ((skoMC1 skoMC1 skoMC1 (1/6+(skoMC1 (-1))))+(skoSC1 skoMC1 skoMC1 skoMC1 (1/4))))))))]/\[[(skoMC1 (-2+(skoMC1 (-5))))<(skoSC1 ((skoMC1 (-1+(skoMC1 (3))))+(skoSC1 ((skoMC1 (-2+(skoMC1 (-3))))+(skoSC1 ((skoMC1 (1/6+(skoMC1 (-1))))+(skoSC1 skoMC1 (1/4))))))))]/\[[0<skoSC1]/\[[(skoSC1 ((skoMC1 skoMC1 skoMC1 (-2))+(skoSC1 ((skoMC1 skoMC1 skoMC1)+(skoSC1 skoMC1 skoMC1 skoMC1)))))<=(skoMC1 skoMC1 skoMC1 (2))]/\[[0<(skoSC1 ((skoMC1 skoMC1 skoMC1)+(skoSC1 skoMC1 skoMC1 skoMC1)))]/\[[(skoMC1 skoMC1 skoMC1 (-2))<(skoSC1 ((skoMC1 skoMC1 skoMC1 (2))+(skoSC1 ((skoMC1 skoMC1 skoMC1 (-1))+(skoSC1 skoMC1 skoMC1 skoMC1 (-1))))))]/\[[(skoSC1 ((skoMC1 skoMC1 skoMC1 (-1))+(skoSC1 skoMC1 skoMC1 skoMC1 (-1))))<=0]/\[[(skoSC1 skoMC1 skoMC1 skoMC1 (-1))<=(skoMC1 skoMC1 skoMC1)]/\[[(skoMC1 skoMC1 skoMC1 (-1))<(skoSC1 skoMC1 skoMC1 skoMC1)]/\[[(skoMC1 skoMC1 skoMC1 (-2))<=0]/\[[0<(skoMC1 skoMC1 skoMC1 (2))]/\[[skoSC1<=5/4]/\[[2<=skoMC1]/\[[0<=skoSC1]/\[[0<skoMC1]/\[[0<=skoMC1]/\[[(skoMC1 (-1))<(skoSC1 skoMC1)]/\[[(skoSC1 skoMC1 (-1))<=skoMC1]/\[[(skoMC1 skoMC1 skoMC1 (-2))<(skoSC1 skoMC1 skoMC1 skoMC1 (2))]/\[[(skoSC1 skoMC1 skoMC1 skoMC1 (-2))<=(skoMC1 skoMC1 skoMC1 (2))]/\[[(skoMC1 skoMC1 skoMC1 (-2+(skoMC1 (-6))))<(skoSC1 ((skoMC1 skoMC1 skoMC1 skoMC1 (12))+(skoSC1 ((skoMC1 skoMC1 skoMC1 (-1+(skoMC1 (6))))+(skoSC1 ((skoMC1 skoMC1 skoMC1 (-1))+(skoSC1 ((skoMC1 skoMC1 skoMC1 (1/12))+(skoSC1 skoMC1 skoMC1 skoMC1 (1/12))))))))))]/\[(skoSC1 ((skoMC1 skoMC1 skoMC1 skoMC1 (-12))+(skoSC1 ((skoMC1 skoMC1 skoMC1 (1+(skoMC1 (-6))))+(skoSC1 ((skoMC1 skoMC1 skoMC1)+(skoSC1 ((skoMC1 skoMC1 skoMC1 (-1/12))+(skoSC1 skoMC1 skoMC1 skoMC1 (-1/12))))))))))<=(skoMC1 skoMC1 skoMC1 (2+(skoMC1 (6))))]]]]]]]]]]]]]]]]]]]]]]].

% In SMTLib2 format:
(declare-fun skoSC1 () Real) (declare-fun skoMC1 () Real) (assert (and (> (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (+ (- 1.) (* skoMC1 3.))))) (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (+ (- 2.) (* skoMC1 (- 3.)))))) (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (+ (/ 1. 6.) (* skoMC1 (- 1.)))))) (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (/ 1. 4.)))) (* skoSC1 (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (/ (- 1.) 360.)))) (* skoSC1 (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (/ 1. 20160.)))) (* skoSC1 (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (/ (- 1.) 1814400.)))) (* skoSC1 (* skoSC1 (* skoMC1 (* skoMC1 (* skoMC1 (/ 1. 239500800.))))))))))))))))))))))) (* skoMC1 (* skoMC1 (* skoMC1 (+ (- 2.) (* skoMC1 (- 5.))))))) (and (> (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (+ (- 1.) (* skoMC1 3.))))) (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (+ (- 2.) (* skoMC1 (- 3.)))))) (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (+ (/ 1. 6.) (* skoMC1 (- 1.)))))) (* skoSC1 (* skoMC1 (* skoMC1 (* skoMC1 (/ 1. 4.))))))))))) (* skoMC1 (* skoMC1 (* skoMC1 (+ (- 2.) (* skoMC1 (- 5.))))))) (and (> (* skoSC1 (+ (* skoMC1 (+ (- 1.) (* skoMC1 3.))) (* skoSC1 (+ (* skoMC1 (+ (- 2.) (* skoMC1 (- 3.)))) (* skoSC1 (+ (* skoMC1 (+ (/ 1. 6.) (* skoMC1 (- 1.)))) (* skoSC1 (* skoMC1 (/ 1. 4.))))))))) (* skoMC1 (+ (- 2.) (* skoMC1 (- 5.))))) (and (> skoSC1 0.) (and (<= (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (- 2.)))) (* skoSC1 (+ (* skoMC1 (* skoMC1 skoMC1)) (* skoSC1 (* skoMC1 (* skoMC1 skoMC1))))))) (* skoMC1 (* skoMC1 (* skoMC1 2.)))) (and (> (* skoSC1 (+ (* skoMC1 (* skoMC1 skoMC1)) (* skoSC1 (* skoMC1 (* skoMC1 skoMC1))))) 0.) (and (> (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 2.))) (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (- 1.)))) (* skoSC1 (* skoMC1 (* skoMC1 (* skoMC1 (- 1.))))))))) (* skoMC1 (* skoMC1 (* skoMC1 (- 2.))))) (and (<= (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (- 1.)))) (* skoSC1 (* skoMC1 (* skoMC1 (* skoMC1 (- 1.))))))) 0.) (and (<= (* skoSC1 (* skoMC1 (* skoMC1 (* skoMC1 (- 1.))))) (* skoMC1 (* skoMC1 skoMC1))) (and (> (* skoSC1 (* skoMC1 (* skoMC1 skoMC1))) (* skoMC1 (* skoMC1 (* skoMC1 (- 1.))))) (and (<= (* skoMC1 (* skoMC1 (* skoMC1 (- 2.)))) 0.) (and (> (* skoMC1 (* skoMC1 (* skoMC1 2.))) 0.) (and (<= skoSC1 (/ 5. 4.)) (and (<= 2. skoMC1) (and (<= 0. skoSC1) (and (> skoMC1 0.) (and (<= 0. skoMC1) (and (> (* skoSC1 skoMC1) (* skoMC1 (- 1.))) (and (<= (* skoSC1 (* skoMC1 (- 1.))) skoMC1) (and (> (* skoSC1 (* skoMC1 (* skoMC1 (* skoMC1 2.)))) (* skoMC1 (* skoMC1 (* skoMC1 (- 2.))))) (and (<= (* skoSC1 (* skoMC1 (* skoMC1 (* skoMC1 (- 2.))))) (* skoMC1 (* skoMC1 (* skoMC1 2.)))) (and (> (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (* skoMC1 12.)))) (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (+ (- 1.) (* skoMC1 6.))))) (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (- 1.)))) (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (/ 1. 12.)))) (* skoSC1 (* skoMC1 (* skoMC1 (* skoMC1 (/ 1. 12.))))))))))))) (* skoMC1 (* skoMC1 (* skoMC1 (+ (- 2.) (* skoMC1 (- 6.))))))) (<= (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (* skoMC1 (- 12.))))) (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (+ 1. (* skoMC1 (- 6.)))))) (* skoSC1 (+ (* skoMC1 (* skoMC1 skoMC1)) (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (/ (- 1.) 12.)))) (* skoSC1 (* skoMC1 (* skoMC1 (* skoMC1 (/ (- 1.) 12.))))))))))))) (* skoMC1 (* skoMC1 (* skoMC1 (+ 2. (* skoMC1 6.)))))))))))))))))))))))))))))

% In GRF format:
(sequent " MetiTarski formula " (antecedent (> (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (+ (- 1.) (* skoMC1 3.))))) (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (+ (- 2.) (* skoMC1 (- 3.)))))) (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (+ (/ 1. 6.) (* skoMC1 (- 1.)))))) (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (/ 1. 4.)))) (* skoSC1 (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (/ (- 1.) 360.)))) (* skoSC1 (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (/ 1. 20160.)))) (* skoSC1 (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (/ (- 1.) 1814400.)))) (* skoSC1 (* skoSC1 (* skoMC1 (* skoMC1 (* skoMC1 (/ 1. 239500800.))))))))))))))))))))))) (* skoMC1 (* skoMC1 (* skoMC1 (+ (- 2.) (* skoMC1 (- 5.))))))) (> (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (+ (- 1.) (* skoMC1 3.))))) (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (+ (- 2.) (* skoMC1 (- 3.)))))) (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (+ (/ 1. 6.) (* skoMC1 (- 1.)))))) (* skoSC1 (* skoMC1 (* skoMC1 (* skoMC1 (/ 1. 4.))))))))))) (* skoMC1 (* skoMC1 (* skoMC1 (+ (- 2.) (* skoMC1 (- 5.))))))) (> (* skoSC1 (+ (* skoMC1 (+ (- 1.) (* skoMC1 3.))) (* skoSC1 (+ (* skoMC1 (+ (- 2.) (* skoMC1 (- 3.)))) (* skoSC1 (+ (* skoMC1 (+ (/ 1. 6.) (* skoMC1 (- 1.)))) (* skoSC1 (* skoMC1 (/ 1. 4.))))))))) (* skoMC1 (+ (- 2.) (* skoMC1 (- 5.))))) (> skoSC1 0.) (<= (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (- 2.)))) (* skoSC1 (+ (* skoMC1 (* skoMC1 skoMC1)) (* skoSC1 (* skoMC1 (* skoMC1 skoMC1))))))) (* skoMC1 (* skoMC1 (* skoMC1 2.)))) (> (* skoSC1 (+ (* skoMC1 (* skoMC1 skoMC1)) (* skoSC1 (* skoMC1 (* skoMC1 skoMC1))))) 0.) (> (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 2.))) (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (- 1.)))) (* skoSC1 (* skoMC1 (* skoMC1 (* skoMC1 (- 1.))))))))) (* skoMC1 (* skoMC1 (* skoMC1 (- 2.))))) (<= (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (- 1.)))) (* skoSC1 (* skoMC1 (* skoMC1 (* skoMC1 (- 1.))))))) 0.) (<= (* skoSC1 (* skoMC1 (* skoMC1 (* skoMC1 (- 1.))))) (* skoMC1 (* skoMC1 skoMC1))) (> (* skoSC1 (* skoMC1 (* skoMC1 skoMC1))) (* skoMC1 (* skoMC1 (* skoMC1 (- 1.))))) (<= (* skoMC1 (* skoMC1 (* skoMC1 (- 2.)))) 0.) (> (* skoMC1 (* skoMC1 (* skoMC1 2.))) 0.) (<= skoSC1 (/ 5. 4.)) (<= 2. skoMC1) (<= 0. skoSC1) (> skoMC1 0.) (<= 0. skoMC1) (> (* skoSC1 skoMC1) (* skoMC1 (- 1.))) (<= (* skoSC1 (* skoMC1 (- 1.))) skoMC1) (> (* skoSC1 (* skoMC1 (* skoMC1 (* skoMC1 2.)))) (* skoMC1 (* skoMC1 (* skoMC1 (- 2.))))) (<= (* skoSC1 (* skoMC1 (* skoMC1 (* skoMC1 (- 2.))))) (* skoMC1 (* skoMC1 (* skoMC1 2.)))) (> (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (* skoMC1 12.)))) (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (+ (- 1.) (* skoMC1 6.))))) (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (- 1.)))) (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (/ 1. 12.)))) (* skoSC1 (* skoMC1 (* skoMC1 (* skoMC1 (/ 1. 12.))))))))))))) (* skoMC1 (* skoMC1 (* skoMC1 (+ (- 2.) (* skoMC1 (- 6.)))))))) (succedent (> (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (* skoMC1 (- 12.))))) (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (+ 1. (* skoMC1 (- 6.)))))) (* skoSC1 (+ (* skoMC1 (* skoMC1 skoMC1)) (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (/ (- 1.) 12.)))) (* skoSC1 (* skoMC1 (* skoMC1 (* skoMC1 (/ (- 1.) 12.))))))))))))) (* skoMC1 (* skoMC1 (* skoMC1 (+ 2. (* skoMC1 6.))))))))
-----[end problem]-----

-----[begin problem]-----
% In Mathematica format:
Timing[Resolve[Exists[{skoSC1,skoMC1}, And[skoSC1*(skoMC1*skoMC1*skoMC1+skoSC1*skoMC1*skoMC1*skoMC1)<=0,skoSC1*(skoMC1*skoMC1*skoMC1*(-1+skoMC1*3)+skoSC1*(skoMC1*skoMC1*skoMC1*(-2+skoMC1*-3)+skoSC1*(skoMC1*skoMC1*skoMC1*((1/6)+skoMC1*-1)+skoSC1*skoMC1*skoMC1*skoMC1*(1/4))))>skoMC1*skoMC1*skoMC1*(-2+skoMC1*-5),skoSC1*(skoMC1*(-1+skoMC1*3)+skoSC1*(skoMC1*(-2+skoMC1*-3)+skoSC1*(skoMC1*((1/6)+skoMC1*-1)+skoSC1*skoMC1*(1/4))))>skoMC1*(-2+skoMC1*-5),skoSC1>0,skoSC1*(skoMC1*skoMC1*skoMC1*-2+skoSC1*(skoMC1*skoMC1*skoMC1+skoSC1*skoMC1*skoMC1*skoMC1))<=skoMC1*skoMC1*skoMC1*2,skoSC1*(skoMC1*skoMC1*skoMC1+skoSC1*skoMC1*skoMC1*skoMC1)>0,skoSC1*(skoMC1*skoMC1*skoMC1*2+skoSC1*(skoMC1*skoMC1*skoMC1*-1+skoSC1*skoMC1*skoMC1*skoMC1*-1))>skoMC1*skoMC1*skoMC1*-2,skoSC1*(skoMC1*skoMC1*skoMC1*-1+skoSC1*skoMC1*skoMC1*skoMC1*-1)<=0,skoSC1*skoMC1*skoMC1*skoMC1*-1<=skoMC1*skoMC1*skoMC1,skoSC1*skoMC1*skoMC1*skoMC1>skoMC1*skoMC1*skoMC1*-1,skoMC1*skoMC1*skoMC1*-2<=0,skoMC1*skoMC1*skoMC1*2>0,skoSC1<=(5/4),2<=skoMC1,0<=skoSC1,skoMC1>0,0<=skoMC1,skoSC1*skoMC1>skoMC1*-1,skoSC1*skoMC1*-1<=skoMC1,skoSC1*skoMC1*skoMC1*skoMC1*2>skoMC1*skoMC1*skoMC1*-2,skoSC1*skoMC1*skoMC1*skoMC1*-2<=skoMC1*skoMC1*skoMC1*2,skoSC1*(skoMC1*skoMC1*skoMC1*skoMC1*12+skoSC1*(skoMC1*skoMC1*skoMC1*(-1+skoMC1*6)+skoSC1*(skoMC1*skoMC1*skoMC1*-1+skoSC1*(skoMC1*skoMC1*skoMC1*(1/12)+skoSC1*skoMC1*skoMC1*skoMC1*(1/12)))))>skoMC1*skoMC1*skoMC1*(-2+skoMC1*-6),skoSC1*(skoMC1*skoMC1*skoMC1*skoMC1*-12+skoSC1*(skoMC1*skoMC1*skoMC1*(1+skoMC1*-6)+skoSC1*(skoMC1*skoMC1*skoMC1+skoSC1*(skoMC1*skoMC1*skoMC1*(-1/12)+skoSC1*skoMC1*skoMC1*skoMC1*(-1/12)))))<=skoMC1*skoMC1*skoMC1*(2+skoMC1*6)]], Reals]]

% In QepcadB format:
(E skoSC1) (E skoMC1) [[(skoSC1 ((skoMC1 skoMC1 skoMC1)+(skoSC1 skoMC1 skoMC1 skoMC1)))<=0]/\[[(skoMC1 skoMC1 skoMC1 (-2+(skoMC1 (-5))))<(skoSC1 ((skoMC1 skoMC1 skoMC1 (-1+(skoMC1 (3))))+(skoSC1 ((skoMC1 skoMC1 skoMC1 (-2+(skoMC1 (-3))))+(skoSC1 ((skoMC1 skoMC1 skoMC1 (1/6+(skoMC1 (-1))))+(skoSC1 skoMC1 skoMC1 skoMC1 (1/4))))))))]/\[[(skoMC1 (-2+(skoMC1 (-5))))<(skoSC1 ((skoMC1 (-1+(skoMC1 (3))))+(skoSC1 ((skoMC1 (-2+(skoMC1 (-3))))+(skoSC1 ((skoMC1 (1/6+(skoMC1 (-1))))+(skoSC1 skoMC1 (1/4))))))))]/\[[0<skoSC1]/\[[(skoSC1 ((skoMC1 skoMC1 skoMC1 (-2))+(skoSC1 ((skoMC1 skoMC1 skoMC1)+(skoSC1 skoMC1 skoMC1 skoMC1)))))<=(skoMC1 skoMC1 skoMC1 (2))]/\[[0<(skoSC1 ((skoMC1 skoMC1 skoMC1)+(skoSC1 skoMC1 skoMC1 skoMC1)))]/\[[(skoMC1 skoMC1 skoMC1 (-2))<(skoSC1 ((skoMC1 skoMC1 skoMC1 (2))+(skoSC1 ((skoMC1 skoMC1 skoMC1 (-1))+(skoSC1 skoMC1 skoMC1 skoMC1 (-1))))))]/\[[(skoSC1 ((skoMC1 skoMC1 skoMC1 (-1))+(skoSC1 skoMC1 skoMC1 skoMC1 (-1))))<=0]/\[[(skoSC1 skoMC1 skoMC1 skoMC1 (-1))<=(skoMC1 skoMC1 skoMC1)]/\[[(skoMC1 skoMC1 skoMC1 (-1))<(skoSC1 skoMC1 skoMC1 skoMC1)]/\[[(skoMC1 skoMC1 skoMC1 (-2))<=0]/\[[0<(skoMC1 skoMC1 skoMC1 (2))]/\[[skoSC1<=5/4]/\[[2<=skoMC1]/\[[0<=skoSC1]/\[[0<skoMC1]/\[[0<=skoMC1]/\[[(skoMC1 (-1))<(skoSC1 skoMC1)]/\[[(skoSC1 skoMC1 (-1))<=skoMC1]/\[[(skoMC1 skoMC1 skoMC1 (-2))<(skoSC1 skoMC1 skoMC1 skoMC1 (2))]/\[[(skoSC1 skoMC1 skoMC1 skoMC1 (-2))<=(skoMC1 skoMC1 skoMC1 (2))]/\[[(skoMC1 skoMC1 skoMC1 (-2+(skoMC1 (-6))))<(skoSC1 ((skoMC1 skoMC1 skoMC1 skoMC1 (12))+(skoSC1 ((skoMC1 skoMC1 skoMC1 (-1+(skoMC1 (6))))+(skoSC1 ((skoMC1 skoMC1 skoMC1 (-1))+(skoSC1 ((skoMC1 skoMC1 skoMC1 (1/12))+(skoSC1 skoMC1 skoMC1 skoMC1 (1/12))))))))))]/\[(skoSC1 ((skoMC1 skoMC1 skoMC1 skoMC1 (-12))+(skoSC1 ((skoMC1 skoMC1 skoMC1 (1+(skoMC1 (-6))))+(skoSC1 ((skoMC1 skoMC1 skoMC1)+(skoSC1 ((skoMC1 skoMC1 skoMC1 (-1/12))+(skoSC1 skoMC1 skoMC1 skoMC1 (-1/12))))))))))<=(skoMC1 skoMC1 skoMC1 (2+(skoMC1 (6))))]]]]]]]]]]]]]]]]]]]]]]].

% In SMTLib2 format:
(declare-fun skoSC1 () Real) (declare-fun skoMC1 () Real) (assert (and (<= (* skoSC1 (+ (* skoMC1 (* skoMC1 skoMC1)) (* skoSC1 (* skoMC1 (* skoMC1 skoMC1))))) 0.) (and (> (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (+ (- 1.) (* skoMC1 3.))))) (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (+ (- 2.) (* skoMC1 (- 3.)))))) (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (+ (/ 1. 6.) (* skoMC1 (- 1.)))))) (* skoSC1 (* skoMC1 (* skoMC1 (* skoMC1 (/ 1. 4.))))))))))) (* skoMC1 (* skoMC1 (* skoMC1 (+ (- 2.) (* skoMC1 (- 5.))))))) (and (> (* skoSC1 (+ (* skoMC1 (+ (- 1.) (* skoMC1 3.))) (* skoSC1 (+ (* skoMC1 (+ (- 2.) (* skoMC1 (- 3.)))) (* skoSC1 (+ (* skoMC1 (+ (/ 1. 6.) (* skoMC1 (- 1.)))) (* skoSC1 (* skoMC1 (/ 1. 4.))))))))) (* skoMC1 (+ (- 2.) (* skoMC1 (- 5.))))) (and (> skoSC1 0.) (and (<= (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (- 2.)))) (* skoSC1 (+ (* skoMC1 (* skoMC1 skoMC1)) (* skoSC1 (* skoMC1 (* skoMC1 skoMC1))))))) (* skoMC1 (* skoMC1 (* skoMC1 2.)))) (and (> (* skoSC1 (+ (* skoMC1 (* skoMC1 skoMC1)) (* skoSC1 (* skoMC1 (* skoMC1 skoMC1))))) 0.) (and (> (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 2.))) (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (- 1.)))) (* skoSC1 (* skoMC1 (* skoMC1 (* skoMC1 (- 1.))))))))) (* skoMC1 (* skoMC1 (* skoMC1 (- 2.))))) (and (<= (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (- 1.)))) (* skoSC1 (* skoMC1 (* skoMC1 (* skoMC1 (- 1.))))))) 0.) (and (<= (* skoSC1 (* skoMC1 (* skoMC1 (* skoMC1 (- 1.))))) (* skoMC1 (* skoMC1 skoMC1))) (and (> (* skoSC1 (* skoMC1 (* skoMC1 skoMC1))) (* skoMC1 (* skoMC1 (* skoMC1 (- 1.))))) (and (<= (* skoMC1 (* skoMC1 (* skoMC1 (- 2.)))) 0.) (and (> (* skoMC1 (* skoMC1 (* skoMC1 2.))) 0.) (and (<= skoSC1 (/ 5. 4.)) (and (<= 2. skoMC1) (and (<= 0. skoSC1) (and (> skoMC1 0.) (and (<= 0. skoMC1) (and (> (* skoSC1 skoMC1) (* skoMC1 (- 1.))) (and (<= (* skoSC1 (* skoMC1 (- 1.))) skoMC1) (and (> (* skoSC1 (* skoMC1 (* skoMC1 (* skoMC1 2.)))) (* skoMC1 (* skoMC1 (* skoMC1 (- 2.))))) (and (<= (* skoSC1 (* skoMC1 (* skoMC1 (* skoMC1 (- 2.))))) (* skoMC1 (* skoMC1 (* skoMC1 2.)))) (and (> (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (* skoMC1 12.)))) (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (+ (- 1.) (* skoMC1 6.))))) (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (- 1.)))) (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (/ 1. 12.)))) (* skoSC1 (* skoMC1 (* skoMC1 (* skoMC1 (/ 1. 12.))))))))))))) (* skoMC1 (* skoMC1 (* skoMC1 (+ (- 2.) (* skoMC1 (- 6.))))))) (<= (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (* skoMC1 (- 12.))))) (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (+ 1. (* skoMC1 (- 6.)))))) (* skoSC1 (+ (* skoMC1 (* skoMC1 skoMC1)) (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (/ (- 1.) 12.)))) (* skoSC1 (* skoMC1 (* skoMC1 (* skoMC1 (/ (- 1.) 12.))))))))))))) (* skoMC1 (* skoMC1 (* skoMC1 (+ 2. (* skoMC1 6.)))))))))))))))))))))))))))))

% In GRF format:
(sequent " MetiTarski formula " (antecedent (<= (* skoSC1 (+ (* skoMC1 (* skoMC1 skoMC1)) (* skoSC1 (* skoMC1 (* skoMC1 skoMC1))))) 0.) (> (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (+ (- 1.) (* skoMC1 3.))))) (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (+ (- 2.) (* skoMC1 (- 3.)))))) (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (+ (/ 1. 6.) (* skoMC1 (- 1.)))))) (* skoSC1 (* skoMC1 (* skoMC1 (* skoMC1 (/ 1. 4.))))))))))) (* skoMC1 (* skoMC1 (* skoMC1 (+ (- 2.) (* skoMC1 (- 5.))))))) (> (* skoSC1 (+ (* skoMC1 (+ (- 1.) (* skoMC1 3.))) (* skoSC1 (+ (* skoMC1 (+ (- 2.) (* skoMC1 (- 3.)))) (* skoSC1 (+ (* skoMC1 (+ (/ 1. 6.) (* skoMC1 (- 1.)))) (* skoSC1 (* skoMC1 (/ 1. 4.))))))))) (* skoMC1 (+ (- 2.) (* skoMC1 (- 5.))))) (> skoSC1 0.) (<= (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (- 2.)))) (* skoSC1 (+ (* skoMC1 (* skoMC1 skoMC1)) (* skoSC1 (* skoMC1 (* skoMC1 skoMC1))))))) (* skoMC1 (* skoMC1 (* skoMC1 2.)))) (> (* skoSC1 (+ (* skoMC1 (* skoMC1 skoMC1)) (* skoSC1 (* skoMC1 (* skoMC1 skoMC1))))) 0.) (> (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 2.))) (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (- 1.)))) (* skoSC1 (* skoMC1 (* skoMC1 (* skoMC1 (- 1.))))))))) (* skoMC1 (* skoMC1 (* skoMC1 (- 2.))))) (<= (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (- 1.)))) (* skoSC1 (* skoMC1 (* skoMC1 (* skoMC1 (- 1.))))))) 0.) (<= (* skoSC1 (* skoMC1 (* skoMC1 (* skoMC1 (- 1.))))) (* skoMC1 (* skoMC1 skoMC1))) (> (* skoSC1 (* skoMC1 (* skoMC1 skoMC1))) (* skoMC1 (* skoMC1 (* skoMC1 (- 1.))))) (<= (* skoMC1 (* skoMC1 (* skoMC1 (- 2.)))) 0.) (> (* skoMC1 (* skoMC1 (* skoMC1 2.))) 0.) (<= skoSC1 (/ 5. 4.)) (<= 2. skoMC1) (<= 0. skoSC1) (> skoMC1 0.) (<= 0. skoMC1) (> (* skoSC1 skoMC1) (* skoMC1 (- 1.))) (<= (* skoSC1 (* skoMC1 (- 1.))) skoMC1) (> (* skoSC1 (* skoMC1 (* skoMC1 (* skoMC1 2.)))) (* skoMC1 (* skoMC1 (* skoMC1 (- 2.))))) (<= (* skoSC1 (* skoMC1 (* skoMC1 (* skoMC1 (- 2.))))) (* skoMC1 (* skoMC1 (* skoMC1 2.)))) (> (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (* skoMC1 12.)))) (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (+ (- 1.) (* skoMC1 6.))))) (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (- 1.)))) (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (/ 1. 12.)))) (* skoSC1 (* skoMC1 (* skoMC1 (* skoMC1 (/ 1. 12.))))))))))))) (* skoMC1 (* skoMC1 (* skoMC1 (+ (- 2.) (* skoMC1 (- 6.)))))))) (succedent (> (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (* skoMC1 (- 12.))))) (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (+ 1. (* skoMC1 (- 6.)))))) (* skoSC1 (+ (* skoMC1 (* skoMC1 skoMC1)) (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (/ (- 1.) 12.)))) (* skoSC1 (* skoMC1 (* skoMC1 (* skoMC1 (/ (- 1.) 12.))))))))))))) (* skoMC1 (* skoMC1 (* skoMC1 (+ 2. (* skoMC1 6.))))))))
-----[end problem]-----

-----[begin problem]-----
% In Mathematica format:
Timing[Resolve[Exists[{skoSC1,skoMC1}, And[skoMC1*skoMC1*-1<=0,skoSC1*(skoMC1*skoMC1*skoMC1*(-1+skoMC1*3)+skoSC1*(skoMC1*skoMC1*skoMC1*(-2+skoMC1*-3)+skoSC1*(skoMC1*skoMC1*skoMC1*((1/6)+skoMC1*-1)+skoSC1*skoMC1*skoMC1*skoMC1*(1/4))))>skoMC1*skoMC1*skoMC1*(-2+skoMC1*-5),skoSC1*(skoMC1*(-1+skoMC1*3)+skoSC1*(skoMC1*(-2+skoMC1*-3)+skoSC1*(skoMC1*((1/6)+skoMC1*-1)+skoSC1*skoMC1*(1/4))))>skoMC1*(-2+skoMC1*-5),skoSC1>0,skoSC1*(skoMC1*skoMC1*skoMC1*-2+skoSC1*(skoMC1*skoMC1*skoMC1+skoSC1*skoMC1*skoMC1*skoMC1))<=skoMC1*skoMC1*skoMC1*2,skoSC1*(skoMC1*skoMC1*skoMC1+skoSC1*skoMC1*skoMC1*skoMC1)>0,skoSC1*(skoMC1*skoMC1*skoMC1*2+skoSC1*(skoMC1*skoMC1*skoMC1*-1+skoSC1*skoMC1*skoMC1*skoMC1*-1))>skoMC1*skoMC1*skoMC1*-2,skoSC1*(skoMC1*skoMC1*skoMC1*-1+skoSC1*skoMC1*skoMC1*skoMC1*-1)<=0,skoSC1*skoMC1*skoMC1*skoMC1*-1<=skoMC1*skoMC1*skoMC1,skoSC1*skoMC1*skoMC1*skoMC1>skoMC1*skoMC1*skoMC1*-1,skoMC1*skoMC1*skoMC1*-2<=0,skoMC1*skoMC1*skoMC1*2>0,skoSC1<=(5/4),2<=skoMC1,0<=skoSC1,skoMC1>0,0<=skoMC1,skoSC1*skoMC1>skoMC1*-1,skoSC1*skoMC1*-1<=skoMC1,skoSC1*skoMC1*skoMC1*skoMC1*2>skoMC1*skoMC1*skoMC1*-2,skoSC1*skoMC1*skoMC1*skoMC1*-2<=skoMC1*skoMC1*skoMC1*2,skoSC1*(skoMC1*skoMC1*skoMC1*skoMC1*12+skoSC1*(skoMC1*skoMC1*skoMC1*(-1+skoMC1*6)+skoSC1*(skoMC1*skoMC1*skoMC1*-1+skoSC1*(skoMC1*skoMC1*skoMC1*(1/12)+skoSC1*skoMC1*skoMC1*skoMC1*(1/12)))))>skoMC1*skoMC1*skoMC1*(-2+skoMC1*-6),skoSC1*(skoMC1*skoMC1*skoMC1*skoMC1*-12+skoSC1*(skoMC1*skoMC1*skoMC1*(1+skoMC1*-6)+skoSC1*(skoMC1*skoMC1*skoMC1+skoSC1*(skoMC1*skoMC1*skoMC1*(-1/12)+skoSC1*skoMC1*skoMC1*skoMC1*(-1/12)))))<=skoMC1*skoMC1*skoMC1*(2+skoMC1*6)]], Reals]]

% In QepcadB format:
(E skoSC1) (E skoMC1) [[(skoMC1 skoMC1 (-1))<=0]/\[[(skoMC1 skoMC1 skoMC1 (-2+(skoMC1 (-5))))<(skoSC1 ((skoMC1 skoMC1 skoMC1 (-1+(skoMC1 (3))))+(skoSC1 ((skoMC1 skoMC1 skoMC1 (-2+(skoMC1 (-3))))+(skoSC1 ((skoMC1 skoMC1 skoMC1 (1/6+(skoMC1 (-1))))+(skoSC1 skoMC1 skoMC1 skoMC1 (1/4))))))))]/\[[(skoMC1 (-2+(skoMC1 (-5))))<(skoSC1 ((skoMC1 (-1+(skoMC1 (3))))+(skoSC1 ((skoMC1 (-2+(skoMC1 (-3))))+(skoSC1 ((skoMC1 (1/6+(skoMC1 (-1))))+(skoSC1 skoMC1 (1/4))))))))]/\[[0<skoSC1]/\[[(skoSC1 ((skoMC1 skoMC1 skoMC1 (-2))+(skoSC1 ((skoMC1 skoMC1 skoMC1)+(skoSC1 skoMC1 skoMC1 skoMC1)))))<=(skoMC1 skoMC1 skoMC1 (2))]/\[[0<(skoSC1 ((skoMC1 skoMC1 skoMC1)+(skoSC1 skoMC1 skoMC1 skoMC1)))]/\[[(skoMC1 skoMC1 skoMC1 (-2))<(skoSC1 ((skoMC1 skoMC1 skoMC1 (2))+(skoSC1 ((skoMC1 skoMC1 skoMC1 (-1))+(skoSC1 skoMC1 skoMC1 skoMC1 (-1))))))]/\[[(skoSC1 ((skoMC1 skoMC1 skoMC1 (-1))+(skoSC1 skoMC1 skoMC1 skoMC1 (-1))))<=0]/\[[(skoSC1 skoMC1 skoMC1 skoMC1 (-1))<=(skoMC1 skoMC1 skoMC1)]/\[[(skoMC1 skoMC1 skoMC1 (-1))<(skoSC1 skoMC1 skoMC1 skoMC1)]/\[[(skoMC1 skoMC1 skoMC1 (-2))<=0]/\[[0<(skoMC1 skoMC1 skoMC1 (2))]/\[[skoSC1<=5/4]/\[[2<=skoMC1]/\[[0<=skoSC1]/\[[0<skoMC1]/\[[0<=skoMC1]/\[[(skoMC1 (-1))<(skoSC1 skoMC1)]/\[[(skoSC1 skoMC1 (-1))<=skoMC1]/\[[(skoMC1 skoMC1 skoMC1 (-2))<(skoSC1 skoMC1 skoMC1 skoMC1 (2))]/\[[(skoSC1 skoMC1 skoMC1 skoMC1 (-2))<=(skoMC1 skoMC1 skoMC1 (2))]/\[[(skoMC1 skoMC1 skoMC1 (-2+(skoMC1 (-6))))<(skoSC1 ((skoMC1 skoMC1 skoMC1 skoMC1 (12))+(skoSC1 ((skoMC1 skoMC1 skoMC1 (-1+(skoMC1 (6))))+(skoSC1 ((skoMC1 skoMC1 skoMC1 (-1))+(skoSC1 ((skoMC1 skoMC1 skoMC1 (1/12))+(skoSC1 skoMC1 skoMC1 skoMC1 (1/12))))))))))]/\[(skoSC1 ((skoMC1 skoMC1 skoMC1 skoMC1 (-12))+(skoSC1 ((skoMC1 skoMC1 skoMC1 (1+(skoMC1 (-6))))+(skoSC1 ((skoMC1 skoMC1 skoMC1)+(skoSC1 ((skoMC1 skoMC1 skoMC1 (-1/12))+(skoSC1 skoMC1 skoMC1 skoMC1 (-1/12))))))))))<=(skoMC1 skoMC1 skoMC1 (2+(skoMC1 (6))))]]]]]]]]]]]]]]]]]]]]]]].

% In SMTLib2 format:
(declare-fun skoSC1 () Real) (declare-fun skoMC1 () Real) (assert (and (<= (* skoMC1 (* skoMC1 (- 1.))) 0.) (and (> (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (+ (- 1.) (* skoMC1 3.))))) (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (+ (- 2.) (* skoMC1 (- 3.)))))) (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (+ (/ 1. 6.) (* skoMC1 (- 1.)))))) (* skoSC1 (* skoMC1 (* skoMC1 (* skoMC1 (/ 1. 4.))))))))))) (* skoMC1 (* skoMC1 (* skoMC1 (+ (- 2.) (* skoMC1 (- 5.))))))) (and (> (* skoSC1 (+ (* skoMC1 (+ (- 1.) (* skoMC1 3.))) (* skoSC1 (+ (* skoMC1 (+ (- 2.) (* skoMC1 (- 3.)))) (* skoSC1 (+ (* skoMC1 (+ (/ 1. 6.) (* skoMC1 (- 1.)))) (* skoSC1 (* skoMC1 (/ 1. 4.))))))))) (* skoMC1 (+ (- 2.) (* skoMC1 (- 5.))))) (and (> skoSC1 0.) (and (<= (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (- 2.)))) (* skoSC1 (+ (* skoMC1 (* skoMC1 skoMC1)) (* skoSC1 (* skoMC1 (* skoMC1 skoMC1))))))) (* skoMC1 (* skoMC1 (* skoMC1 2.)))) (and (> (* skoSC1 (+ (* skoMC1 (* skoMC1 skoMC1)) (* skoSC1 (* skoMC1 (* skoMC1 skoMC1))))) 0.) (and (> (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 2.))) (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (- 1.)))) (* skoSC1 (* skoMC1 (* skoMC1 (* skoMC1 (- 1.))))))))) (* skoMC1 (* skoMC1 (* skoMC1 (- 2.))))) (and (<= (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (- 1.)))) (* skoSC1 (* skoMC1 (* skoMC1 (* skoMC1 (- 1.))))))) 0.) (and (<= (* skoSC1 (* skoMC1 (* skoMC1 (* skoMC1 (- 1.))))) (* skoMC1 (* skoMC1 skoMC1))) (and (> (* skoSC1 (* skoMC1 (* skoMC1 skoMC1))) (* skoMC1 (* skoMC1 (* skoMC1 (- 1.))))) (and (<= (* skoMC1 (* skoMC1 (* skoMC1 (- 2.)))) 0.) (and (> (* skoMC1 (* skoMC1 (* skoMC1 2.))) 0.) (and (<= skoSC1 (/ 5. 4.)) (and (<= 2. skoMC1) (and (<= 0. skoSC1) (and (> skoMC1 0.) (and (<= 0. skoMC1) (and (> (* skoSC1 skoMC1) (* skoMC1 (- 1.))) (and (<= (* skoSC1 (* skoMC1 (- 1.))) skoMC1) (and (> (* skoSC1 (* skoMC1 (* skoMC1 (* skoMC1 2.)))) (* skoMC1 (* skoMC1 (* skoMC1 (- 2.))))) (and (<= (* skoSC1 (* skoMC1 (* skoMC1 (* skoMC1 (- 2.))))) (* skoMC1 (* skoMC1 (* skoMC1 2.)))) (and (> (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (* skoMC1 12.)))) (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (+ (- 1.) (* skoMC1 6.))))) (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (- 1.)))) (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (/ 1. 12.)))) (* skoSC1 (* skoMC1 (* skoMC1 (* skoMC1 (/ 1. 12.))))))))))))) (* skoMC1 (* skoMC1 (* skoMC1 (+ (- 2.) (* skoMC1 (- 6.))))))) (<= (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (* skoMC1 (- 12.))))) (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (+ 1. (* skoMC1 (- 6.)))))) (* skoSC1 (+ (* skoMC1 (* skoMC1 skoMC1)) (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (/ (- 1.) 12.)))) (* skoSC1 (* skoMC1 (* skoMC1 (* skoMC1 (/ (- 1.) 12.))))))))))))) (* skoMC1 (* skoMC1 (* skoMC1 (+ 2. (* skoMC1 6.)))))))))))))))))))))))))))))

% In GRF format:
(sequent " MetiTarski formula " (antecedent (<= (* skoMC1 (* skoMC1 (- 1.))) 0.) (> (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (+ (- 1.) (* skoMC1 3.))))) (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (+ (- 2.) (* skoMC1 (- 3.)))))) (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (+ (/ 1. 6.) (* skoMC1 (- 1.)))))) (* skoSC1 (* skoMC1 (* skoMC1 (* skoMC1 (/ 1. 4.))))))))))) (* skoMC1 (* skoMC1 (* skoMC1 (+ (- 2.) (* skoMC1 (- 5.))))))) (> (* skoSC1 (+ (* skoMC1 (+ (- 1.) (* skoMC1 3.))) (* skoSC1 (+ (* skoMC1 (+ (- 2.) (* skoMC1 (- 3.)))) (* skoSC1 (+ (* skoMC1 (+ (/ 1. 6.) (* skoMC1 (- 1.)))) (* skoSC1 (* skoMC1 (/ 1. 4.))))))))) (* skoMC1 (+ (- 2.) (* skoMC1 (- 5.))))) (> skoSC1 0.) (<= (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (- 2.)))) (* skoSC1 (+ (* skoMC1 (* skoMC1 skoMC1)) (* skoSC1 (* skoMC1 (* skoMC1 skoMC1))))))) (* skoMC1 (* skoMC1 (* skoMC1 2.)))) (> (* skoSC1 (+ (* skoMC1 (* skoMC1 skoMC1)) (* skoSC1 (* skoMC1 (* skoMC1 skoMC1))))) 0.) (> (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 2.))) (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (- 1.)))) (* skoSC1 (* skoMC1 (* skoMC1 (* skoMC1 (- 1.))))))))) (* skoMC1 (* skoMC1 (* skoMC1 (- 2.))))) (<= (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (- 1.)))) (* skoSC1 (* skoMC1 (* skoMC1 (* skoMC1 (- 1.))))))) 0.) (<= (* skoSC1 (* skoMC1 (* skoMC1 (* skoMC1 (- 1.))))) (* skoMC1 (* skoMC1 skoMC1))) (> (* skoSC1 (* skoMC1 (* skoMC1 skoMC1))) (* skoMC1 (* skoMC1 (* skoMC1 (- 1.))))) (<= (* skoMC1 (* skoMC1 (* skoMC1 (- 2.)))) 0.) (> (* skoMC1 (* skoMC1 (* skoMC1 2.))) 0.) (<= skoSC1 (/ 5. 4.)) (<= 2. skoMC1) (<= 0. skoSC1) (> skoMC1 0.) (<= 0. skoMC1) (> (* skoSC1 skoMC1) (* skoMC1 (- 1.))) (<= (* skoSC1 (* skoMC1 (- 1.))) skoMC1) (> (* skoSC1 (* skoMC1 (* skoMC1 (* skoMC1 2.)))) (* skoMC1 (* skoMC1 (* skoMC1 (- 2.))))) (<= (* skoSC1 (* skoMC1 (* skoMC1 (* skoMC1 (- 2.))))) (* skoMC1 (* skoMC1 (* skoMC1 2.)))) (> (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (* skoMC1 12.)))) (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (+ (- 1.) (* skoMC1 6.))))) (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (- 1.)))) (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (/ 1. 12.)))) (* skoSC1 (* skoMC1 (* skoMC1 (* skoMC1 (/ 1. 12.))))))))))))) (* skoMC1 (* skoMC1 (* skoMC1 (+ (- 2.) (* skoMC1 (- 6.)))))))) (succedent (> (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (* skoMC1 (- 12.))))) (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (+ 1. (* skoMC1 (- 6.)))))) (* skoSC1 (+ (* skoMC1 (* skoMC1 skoMC1)) (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (/ (- 1.) 12.)))) (* skoSC1 (* skoMC1 (* skoMC1 (* skoMC1 (/ (- 1.) 12.))))))))))))) (* skoMC1 (* skoMC1 (* skoMC1 (+ 2. (* skoMC1 6.))))))))
-----[end problem]-----

-----[begin problem]-----
% In Mathematica format:
Timing[Resolve[Exists[{skoSC1,skoMC1}, And[skoMC1*skoMC1*skoMC1*-1<=0,skoSC1*(skoMC1*skoMC1*skoMC1*(-1+skoMC1*3)+skoSC1*(skoMC1*skoMC1*skoMC1*(-2+skoMC1*-3)+skoSC1*(skoMC1*skoMC1*skoMC1*((1/6)+skoMC1*-1)+skoSC1*skoMC1*skoMC1*skoMC1*(1/4))))>skoMC1*skoMC1*skoMC1*(-2+skoMC1*-5),skoSC1*(skoMC1*(-1+skoMC1*3)+skoSC1*(skoMC1*(-2+skoMC1*-3)+skoSC1*(skoMC1*((1/6)+skoMC1*-1)+skoSC1*skoMC1*(1/4))))>skoMC1*(-2+skoMC1*-5),skoSC1>0,skoSC1*(skoMC1*skoMC1*skoMC1*-2+skoSC1*(skoMC1*skoMC1*skoMC1+skoSC1*skoMC1*skoMC1*skoMC1))<=skoMC1*skoMC1*skoMC1*2,skoSC1*(skoMC1*skoMC1*skoMC1+skoSC1*skoMC1*skoMC1*skoMC1)>0,skoSC1*(skoMC1*skoMC1*skoMC1*2+skoSC1*(skoMC1*skoMC1*skoMC1*-1+skoSC1*skoMC1*skoMC1*skoMC1*-1))>skoMC1*skoMC1*skoMC1*-2,skoSC1*(skoMC1*skoMC1*skoMC1*-1+skoSC1*skoMC1*skoMC1*skoMC1*-1)<=0,skoSC1*skoMC1*skoMC1*skoMC1*-1<=skoMC1*skoMC1*skoMC1,skoSC1*skoMC1*skoMC1*skoMC1>skoMC1*skoMC1*skoMC1*-1,skoMC1*skoMC1*skoMC1*-2<=0,skoMC1*skoMC1*skoMC1*2>0,skoSC1<=(5/4),2<=skoMC1,0<=skoSC1,skoMC1>0,0<=skoMC1,skoSC1*skoMC1>skoMC1*-1,skoSC1*skoMC1*-1<=skoMC1,skoSC1*skoMC1*skoMC1*skoMC1*2>skoMC1*skoMC1*skoMC1*-2,skoSC1*skoMC1*skoMC1*skoMC1*-2<=skoMC1*skoMC1*skoMC1*2,skoSC1*(skoMC1*skoMC1*skoMC1*skoMC1*12+skoSC1*(skoMC1*skoMC1*skoMC1*(-1+skoMC1*6)+skoSC1*(skoMC1*skoMC1*skoMC1*-1+skoSC1*(skoMC1*skoMC1*skoMC1*(1/12)+skoSC1*skoMC1*skoMC1*skoMC1*(1/12)))))>skoMC1*skoMC1*skoMC1*(-2+skoMC1*-6),skoSC1*(skoMC1*skoMC1*skoMC1*skoMC1*-12+skoSC1*(skoMC1*skoMC1*skoMC1*(1+skoMC1*-6)+skoSC1*(skoMC1*skoMC1*skoMC1+skoSC1*(skoMC1*skoMC1*skoMC1*(-1/12)+skoSC1*skoMC1*skoMC1*skoMC1*(-1/12)))))<=skoMC1*skoMC1*skoMC1*(2+skoMC1*6)]], Reals]]

% In QepcadB format:
(E skoSC1) (E skoMC1) [[(skoMC1 skoMC1 skoMC1 (-1))<=0]/\[[(skoMC1 skoMC1 skoMC1 (-2+(skoMC1 (-5))))<(skoSC1 ((skoMC1 skoMC1 skoMC1 (-1+(skoMC1 (3))))+(skoSC1 ((skoMC1 skoMC1 skoMC1 (-2+(skoMC1 (-3))))+(skoSC1 ((skoMC1 skoMC1 skoMC1 (1/6+(skoMC1 (-1))))+(skoSC1 skoMC1 skoMC1 skoMC1 (1/4))))))))]/\[[(skoMC1 (-2+(skoMC1 (-5))))<(skoSC1 ((skoMC1 (-1+(skoMC1 (3))))+(skoSC1 ((skoMC1 (-2+(skoMC1 (-3))))+(skoSC1 ((skoMC1 (1/6+(skoMC1 (-1))))+(skoSC1 skoMC1 (1/4))))))))]/\[[0<skoSC1]/\[[(skoSC1 ((skoMC1 skoMC1 skoMC1 (-2))+(skoSC1 ((skoMC1 skoMC1 skoMC1)+(skoSC1 skoMC1 skoMC1 skoMC1)))))<=(skoMC1 skoMC1 skoMC1 (2))]/\[[0<(skoSC1 ((skoMC1 skoMC1 skoMC1)+(skoSC1 skoMC1 skoMC1 skoMC1)))]/\[[(skoMC1 skoMC1 skoMC1 (-2))<(skoSC1 ((skoMC1 skoMC1 skoMC1 (2))+(skoSC1 ((skoMC1 skoMC1 skoMC1 (-1))+(skoSC1 skoMC1 skoMC1 skoMC1 (-1))))))]/\[[(skoSC1 ((skoMC1 skoMC1 skoMC1 (-1))+(skoSC1 skoMC1 skoMC1 skoMC1 (-1))))<=0]/\[[(skoSC1 skoMC1 skoMC1 skoMC1 (-1))<=(skoMC1 skoMC1 skoMC1)]/\[[(skoMC1 skoMC1 skoMC1 (-1))<(skoSC1 skoMC1 skoMC1 skoMC1)]/\[[(skoMC1 skoMC1 skoMC1 (-2))<=0]/\[[0<(skoMC1 skoMC1 skoMC1 (2))]/\[[skoSC1<=5/4]/\[[2<=skoMC1]/\[[0<=skoSC1]/\[[0<skoMC1]/\[[0<=skoMC1]/\[[(skoMC1 (-1))<(skoSC1 skoMC1)]/\[[(skoSC1 skoMC1 (-1))<=skoMC1]/\[[(skoMC1 skoMC1 skoMC1 (-2))<(skoSC1 skoMC1 skoMC1 skoMC1 (2))]/\[[(skoSC1 skoMC1 skoMC1 skoMC1 (-2))<=(skoMC1 skoMC1 skoMC1 (2))]/\[[(skoMC1 skoMC1 skoMC1 (-2+(skoMC1 (-6))))<(skoSC1 ((skoMC1 skoMC1 skoMC1 skoMC1 (12))+(skoSC1 ((skoMC1 skoMC1 skoMC1 (-1+(skoMC1 (6))))+(skoSC1 ((skoMC1 skoMC1 skoMC1 (-1))+(skoSC1 ((skoMC1 skoMC1 skoMC1 (1/12))+(skoSC1 skoMC1 skoMC1 skoMC1 (1/12))))))))))]/\[(skoSC1 ((skoMC1 skoMC1 skoMC1 skoMC1 (-12))+(skoSC1 ((skoMC1 skoMC1 skoMC1 (1+(skoMC1 (-6))))+(skoSC1 ((skoMC1 skoMC1 skoMC1)+(skoSC1 ((skoMC1 skoMC1 skoMC1 (-1/12))+(skoSC1 skoMC1 skoMC1 skoMC1 (-1/12))))))))))<=(skoMC1 skoMC1 skoMC1 (2+(skoMC1 (6))))]]]]]]]]]]]]]]]]]]]]]]].

% In SMTLib2 format:
(declare-fun skoSC1 () Real) (declare-fun skoMC1 () Real) (assert (and (<= (* skoMC1 (* skoMC1 (* skoMC1 (- 1.)))) 0.) (and (> (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (+ (- 1.) (* skoMC1 3.))))) (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (+ (- 2.) (* skoMC1 (- 3.)))))) (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (+ (/ 1. 6.) (* skoMC1 (- 1.)))))) (* skoSC1 (* skoMC1 (* skoMC1 (* skoMC1 (/ 1. 4.))))))))))) (* skoMC1 (* skoMC1 (* skoMC1 (+ (- 2.) (* skoMC1 (- 5.))))))) (and (> (* skoSC1 (+ (* skoMC1 (+ (- 1.) (* skoMC1 3.))) (* skoSC1 (+ (* skoMC1 (+ (- 2.) (* skoMC1 (- 3.)))) (* skoSC1 (+ (* skoMC1 (+ (/ 1. 6.) (* skoMC1 (- 1.)))) (* skoSC1 (* skoMC1 (/ 1. 4.))))))))) (* skoMC1 (+ (- 2.) (* skoMC1 (- 5.))))) (and (> skoSC1 0.) (and (<= (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (- 2.)))) (* skoSC1 (+ (* skoMC1 (* skoMC1 skoMC1)) (* skoSC1 (* skoMC1 (* skoMC1 skoMC1))))))) (* skoMC1 (* skoMC1 (* skoMC1 2.)))) (and (> (* skoSC1 (+ (* skoMC1 (* skoMC1 skoMC1)) (* skoSC1 (* skoMC1 (* skoMC1 skoMC1))))) 0.) (and (> (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 2.))) (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (- 1.)))) (* skoSC1 (* skoMC1 (* skoMC1 (* skoMC1 (- 1.))))))))) (* skoMC1 (* skoMC1 (* skoMC1 (- 2.))))) (and (<= (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (- 1.)))) (* skoSC1 (* skoMC1 (* skoMC1 (* skoMC1 (- 1.))))))) 0.) (and (<= (* skoSC1 (* skoMC1 (* skoMC1 (* skoMC1 (- 1.))))) (* skoMC1 (* skoMC1 skoMC1))) (and (> (* skoSC1 (* skoMC1 (* skoMC1 skoMC1))) (* skoMC1 (* skoMC1 (* skoMC1 (- 1.))))) (and (<= (* skoMC1 (* skoMC1 (* skoMC1 (- 2.)))) 0.) (and (> (* skoMC1 (* skoMC1 (* skoMC1 2.))) 0.) (and (<= skoSC1 (/ 5. 4.)) (and (<= 2. skoMC1) (and (<= 0. skoSC1) (and (> skoMC1 0.) (and (<= 0. skoMC1) (and (> (* skoSC1 skoMC1) (* skoMC1 (- 1.))) (and (<= (* skoSC1 (* skoMC1 (- 1.))) skoMC1) (and (> (* skoSC1 (* skoMC1 (* skoMC1 (* skoMC1 2.)))) (* skoMC1 (* skoMC1 (* skoMC1 (- 2.))))) (and (<= (* skoSC1 (* skoMC1 (* skoMC1 (* skoMC1 (- 2.))))) (* skoMC1 (* skoMC1 (* skoMC1 2.)))) (and (> (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (* skoMC1 12.)))) (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (+ (- 1.) (* skoMC1 6.))))) (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (- 1.)))) (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (/ 1. 12.)))) (* skoSC1 (* skoMC1 (* skoMC1 (* skoMC1 (/ 1. 12.))))))))))))) (* skoMC1 (* skoMC1 (* skoMC1 (+ (- 2.) (* skoMC1 (- 6.))))))) (<= (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (* skoMC1 (- 12.))))) (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (+ 1. (* skoMC1 (- 6.)))))) (* skoSC1 (+ (* skoMC1 (* skoMC1 skoMC1)) (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (/ (- 1.) 12.)))) (* skoSC1 (* skoMC1 (* skoMC1 (* skoMC1 (/ (- 1.) 12.))))))))))))) (* skoMC1 (* skoMC1 (* skoMC1 (+ 2. (* skoMC1 6.)))))))))))))))))))))))))))))

% In GRF format:
(sequent " MetiTarski formula " (antecedent (<= (* skoMC1 (* skoMC1 (* skoMC1 (- 1.)))) 0.) (> (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (+ (- 1.) (* skoMC1 3.))))) (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (+ (- 2.) (* skoMC1 (- 3.)))))) (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (+ (/ 1. 6.) (* skoMC1 (- 1.)))))) (* skoSC1 (* skoMC1 (* skoMC1 (* skoMC1 (/ 1. 4.))))))))))) (* skoMC1 (* skoMC1 (* skoMC1 (+ (- 2.) (* skoMC1 (- 5.))))))) (> (* skoSC1 (+ (* skoMC1 (+ (- 1.) (* skoMC1 3.))) (* skoSC1 (+ (* skoMC1 (+ (- 2.) (* skoMC1 (- 3.)))) (* skoSC1 (+ (* skoMC1 (+ (/ 1. 6.) (* skoMC1 (- 1.)))) (* skoSC1 (* skoMC1 (/ 1. 4.))))))))) (* skoMC1 (+ (- 2.) (* skoMC1 (- 5.))))) (> skoSC1 0.) (<= (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (- 2.)))) (* skoSC1 (+ (* skoMC1 (* skoMC1 skoMC1)) (* skoSC1 (* skoMC1 (* skoMC1 skoMC1))))))) (* skoMC1 (* skoMC1 (* skoMC1 2.)))) (> (* skoSC1 (+ (* skoMC1 (* skoMC1 skoMC1)) (* skoSC1 (* skoMC1 (* skoMC1 skoMC1))))) 0.) (> (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 2.))) (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (- 1.)))) (* skoSC1 (* skoMC1 (* skoMC1 (* skoMC1 (- 1.))))))))) (* skoMC1 (* skoMC1 (* skoMC1 (- 2.))))) (<= (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (- 1.)))) (* skoSC1 (* skoMC1 (* skoMC1 (* skoMC1 (- 1.))))))) 0.) (<= (* skoSC1 (* skoMC1 (* skoMC1 (* skoMC1 (- 1.))))) (* skoMC1 (* skoMC1 skoMC1))) (> (* skoSC1 (* skoMC1 (* skoMC1 skoMC1))) (* skoMC1 (* skoMC1 (* skoMC1 (- 1.))))) (<= (* skoMC1 (* skoMC1 (* skoMC1 (- 2.)))) 0.) (> (* skoMC1 (* skoMC1 (* skoMC1 2.))) 0.) (<= skoSC1 (/ 5. 4.)) (<= 2. skoMC1) (<= 0. skoSC1) (> skoMC1 0.) (<= 0. skoMC1) (> (* skoSC1 skoMC1) (* skoMC1 (- 1.))) (<= (* skoSC1 (* skoMC1 (- 1.))) skoMC1) (> (* skoSC1 (* skoMC1 (* skoMC1 (* skoMC1 2.)))) (* skoMC1 (* skoMC1 (* skoMC1 (- 2.))))) (<= (* skoSC1 (* skoMC1 (* skoMC1 (* skoMC1 (- 2.))))) (* skoMC1 (* skoMC1 (* skoMC1 2.)))) (> (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (* skoMC1 12.)))) (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (+ (- 1.) (* skoMC1 6.))))) (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (- 1.)))) (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (/ 1. 12.)))) (* skoSC1 (* skoMC1 (* skoMC1 (* skoMC1 (/ 1. 12.))))))))))))) (* skoMC1 (* skoMC1 (* skoMC1 (+ (- 2.) (* skoMC1 (- 6.)))))))) (succedent (> (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (* skoMC1 (- 12.))))) (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (+ 1. (* skoMC1 (- 6.)))))) (* skoSC1 (+ (* skoMC1 (* skoMC1 skoMC1)) (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (/ (- 1.) 12.)))) (* skoSC1 (* skoMC1 (* skoMC1 (* skoMC1 (/ (- 1.) 12.))))))))))))) (* skoMC1 (* skoMC1 (* skoMC1 (+ 2. (* skoMC1 6.))))))))
-----[end problem]-----

-----[begin problem]-----
% In Mathematica format:
Timing[Resolve[Exists[{skoSC1,skoMC1}, And[skoSC1*skoMC1*-1<=skoMC1,skoSC1*(skoMC1*skoMC1*skoMC1*(-1+skoMC1*3)+skoSC1*(skoMC1*skoMC1*skoMC1*(-2+skoMC1*-3)+skoSC1*(skoMC1*skoMC1*skoMC1*((1/6)+skoMC1*-1)+skoSC1*skoMC1*skoMC1*skoMC1*(1/4))))>skoMC1*skoMC1*skoMC1*(-2+skoMC1*-5),skoSC1*(skoMC1*(-1+skoMC1*3)+skoSC1*(skoMC1*(-2+skoMC1*-3)+skoSC1*(skoMC1*((1/6)+skoMC1*-1)+skoSC1*skoMC1*(1/4))))>skoMC1*(-2+skoMC1*-5),skoSC1>0,skoSC1*(skoMC1*skoMC1*skoMC1*-2+skoSC1*(skoMC1*skoMC1*skoMC1+skoSC1*skoMC1*skoMC1*skoMC1))<=skoMC1*skoMC1*skoMC1*2,skoSC1*(skoMC1*skoMC1*skoMC1+skoSC1*skoMC1*skoMC1*skoMC1)>0,skoSC1*(skoMC1*skoMC1*skoMC1*2+skoSC1*(skoMC1*skoMC1*skoMC1*-1+skoSC1*skoMC1*skoMC1*skoMC1*-1))>skoMC1*skoMC1*skoMC1*-2,skoSC1*(skoMC1*skoMC1*skoMC1*-1+skoSC1*skoMC1*skoMC1*skoMC1*-1)<=0,skoSC1*skoMC1*skoMC1*skoMC1*-1<=skoMC1*skoMC1*skoMC1,skoSC1*skoMC1*skoMC1*skoMC1>skoMC1*skoMC1*skoMC1*-1,skoMC1*skoMC1*skoMC1*-2<=0,skoMC1*skoMC1*skoMC1*2>0,skoSC1<=(5/4),2<=skoMC1,0<=skoSC1,skoMC1>0,0<=skoMC1,skoSC1*skoMC1>skoMC1*-1,skoSC1*skoMC1*-1<=skoMC1,skoSC1*skoMC1*skoMC1*skoMC1*2>skoMC1*skoMC1*skoMC1*-2,skoSC1*skoMC1*skoMC1*skoMC1*-2<=skoMC1*skoMC1*skoMC1*2,skoSC1*(skoMC1*skoMC1*skoMC1*skoMC1*12+skoSC1*(skoMC1*skoMC1*skoMC1*(-1+skoMC1*6)+skoSC1*(skoMC1*skoMC1*skoMC1*-1+skoSC1*(skoMC1*skoMC1*skoMC1*(1/12)+skoSC1*skoMC1*skoMC1*skoMC1*(1/12)))))>skoMC1*skoMC1*skoMC1*(-2+skoMC1*-6),skoSC1*(skoMC1*skoMC1*skoMC1*skoMC1*-12+skoSC1*(skoMC1*skoMC1*skoMC1*(1+skoMC1*-6)+skoSC1*(skoMC1*skoMC1*skoMC1+skoSC1*(skoMC1*skoMC1*skoMC1*(-1/12)+skoSC1*skoMC1*skoMC1*skoMC1*(-1/12)))))<=skoMC1*skoMC1*skoMC1*(2+skoMC1*6)]], Reals]]

% In QepcadB format:
(E skoSC1) (E skoMC1) [[(skoSC1 skoMC1 (-1))<=skoMC1]/\[[(skoMC1 skoMC1 skoMC1 (-2+(skoMC1 (-5))))<(skoSC1 ((skoMC1 skoMC1 skoMC1 (-1+(skoMC1 (3))))+(skoSC1 ((skoMC1 skoMC1 skoMC1 (-2+(skoMC1 (-3))))+(skoSC1 ((skoMC1 skoMC1 skoMC1 (1/6+(skoMC1 (-1))))+(skoSC1 skoMC1 skoMC1 skoMC1 (1/4))))))))]/\[[(skoMC1 (-2+(skoMC1 (-5))))<(skoSC1 ((skoMC1 (-1+(skoMC1 (3))))+(skoSC1 ((skoMC1 (-2+(skoMC1 (-3))))+(skoSC1 ((skoMC1 (1/6+(skoMC1 (-1))))+(skoSC1 skoMC1 (1/4))))))))]/\[[0<skoSC1]/\[[(skoSC1 ((skoMC1 skoMC1 skoMC1 (-2))+(skoSC1 ((skoMC1 skoMC1 skoMC1)+(skoSC1 skoMC1 skoMC1 skoMC1)))))<=(skoMC1 skoMC1 skoMC1 (2))]/\[[0<(skoSC1 ((skoMC1 skoMC1 skoMC1)+(skoSC1 skoMC1 skoMC1 skoMC1)))]/\[[(skoMC1 skoMC1 skoMC1 (-2))<(skoSC1 ((skoMC1 skoMC1 skoMC1 (2))+(skoSC1 ((skoMC1 skoMC1 skoMC1 (-1))+(skoSC1 skoMC1 skoMC1 skoMC1 (-1))))))]/\[[(skoSC1 ((skoMC1 skoMC1 skoMC1 (-1))+(skoSC1 skoMC1 skoMC1 skoMC1 (-1))))<=0]/\[[(skoSC1 skoMC1 skoMC1 skoMC1 (-1))<=(skoMC1 skoMC1 skoMC1)]/\[[(skoMC1 skoMC1 skoMC1 (-1))<(skoSC1 skoMC1 skoMC1 skoMC1)]/\[[(skoMC1 skoMC1 skoMC1 (-2))<=0]/\[[0<(skoMC1 skoMC1 skoMC1 (2))]/\[[skoSC1<=5/4]/\[[2<=skoMC1]/\[[0<=skoSC1]/\[[0<skoMC1]/\[[0<=skoMC1]/\[[(skoMC1 (-1))<(skoSC1 skoMC1)]/\[[(skoSC1 skoMC1 (-1))<=skoMC1]/\[[(skoMC1 skoMC1 skoMC1 (-2))<(skoSC1 skoMC1 skoMC1 skoMC1 (2))]/\[[(skoSC1 skoMC1 skoMC1 skoMC1 (-2))<=(skoMC1 skoMC1 skoMC1 (2))]/\[[(skoMC1 skoMC1 skoMC1 (-2+(skoMC1 (-6))))<(skoSC1 ((skoMC1 skoMC1 skoMC1 skoMC1 (12))+(skoSC1 ((skoMC1 skoMC1 skoMC1 (-1+(skoMC1 (6))))+(skoSC1 ((skoMC1 skoMC1 skoMC1 (-1))+(skoSC1 ((skoMC1 skoMC1 skoMC1 (1/12))+(skoSC1 skoMC1 skoMC1 skoMC1 (1/12))))))))))]/\[(skoSC1 ((skoMC1 skoMC1 skoMC1 skoMC1 (-12))+(skoSC1 ((skoMC1 skoMC1 skoMC1 (1+(skoMC1 (-6))))+(skoSC1 ((skoMC1 skoMC1 skoMC1)+(skoSC1 ((skoMC1 skoMC1 skoMC1 (-1/12))+(skoSC1 skoMC1 skoMC1 skoMC1 (-1/12))))))))))<=(skoMC1 skoMC1 skoMC1 (2+(skoMC1 (6))))]]]]]]]]]]]]]]]]]]]]]]].

% In SMTLib2 format:
(declare-fun skoSC1 () Real) (declare-fun skoMC1 () Real) (assert (and (<= (* skoSC1 (* skoMC1 (- 1.))) skoMC1) (and (> (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (+ (- 1.) (* skoMC1 3.))))) (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (+ (- 2.) (* skoMC1 (- 3.)))))) (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (+ (/ 1. 6.) (* skoMC1 (- 1.)))))) (* skoSC1 (* skoMC1 (* skoMC1 (* skoMC1 (/ 1. 4.))))))))))) (* skoMC1 (* skoMC1 (* skoMC1 (+ (- 2.) (* skoMC1 (- 5.))))))) (and (> (* skoSC1 (+ (* skoMC1 (+ (- 1.) (* skoMC1 3.))) (* skoSC1 (+ (* skoMC1 (+ (- 2.) (* skoMC1 (- 3.)))) (* skoSC1 (+ (* skoMC1 (+ (/ 1. 6.) (* skoMC1 (- 1.)))) (* skoSC1 (* skoMC1 (/ 1. 4.))))))))) (* skoMC1 (+ (- 2.) (* skoMC1 (- 5.))))) (and (> skoSC1 0.) (and (<= (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (- 2.)))) (* skoSC1 (+ (* skoMC1 (* skoMC1 skoMC1)) (* skoSC1 (* skoMC1 (* skoMC1 skoMC1))))))) (* skoMC1 (* skoMC1 (* skoMC1 2.)))) (and (> (* skoSC1 (+ (* skoMC1 (* skoMC1 skoMC1)) (* skoSC1 (* skoMC1 (* skoMC1 skoMC1))))) 0.) (and (> (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 2.))) (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (- 1.)))) (* skoSC1 (* skoMC1 (* skoMC1 (* skoMC1 (- 1.))))))))) (* skoMC1 (* skoMC1 (* skoMC1 (- 2.))))) (and (<= (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (- 1.)))) (* skoSC1 (* skoMC1 (* skoMC1 (* skoMC1 (- 1.))))))) 0.) (and (<= (* skoSC1 (* skoMC1 (* skoMC1 (* skoMC1 (- 1.))))) (* skoMC1 (* skoMC1 skoMC1))) (and (> (* skoSC1 (* skoMC1 (* skoMC1 skoMC1))) (* skoMC1 (* skoMC1 (* skoMC1 (- 1.))))) (and (<= (* skoMC1 (* skoMC1 (* skoMC1 (- 2.)))) 0.) (and (> (* skoMC1 (* skoMC1 (* skoMC1 2.))) 0.) (and (<= skoSC1 (/ 5. 4.)) (and (<= 2. skoMC1) (and (<= 0. skoSC1) (and (> skoMC1 0.) (and (<= 0. skoMC1) (and (> (* skoSC1 skoMC1) (* skoMC1 (- 1.))) (and (<= (* skoSC1 (* skoMC1 (- 1.))) skoMC1) (and (> (* skoSC1 (* skoMC1 (* skoMC1 (* skoMC1 2.)))) (* skoMC1 (* skoMC1 (* skoMC1 (- 2.))))) (and (<= (* skoSC1 (* skoMC1 (* skoMC1 (* skoMC1 (- 2.))))) (* skoMC1 (* skoMC1 (* skoMC1 2.)))) (and (> (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (* skoMC1 12.)))) (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (+ (- 1.) (* skoMC1 6.))))) (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (- 1.)))) (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (/ 1. 12.)))) (* skoSC1 (* skoMC1 (* skoMC1 (* skoMC1 (/ 1. 12.))))))))))))) (* skoMC1 (* skoMC1 (* skoMC1 (+ (- 2.) (* skoMC1 (- 6.))))))) (<= (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (* skoMC1 (- 12.))))) (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (+ 1. (* skoMC1 (- 6.)))))) (* skoSC1 (+ (* skoMC1 (* skoMC1 skoMC1)) (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (/ (- 1.) 12.)))) (* skoSC1 (* skoMC1 (* skoMC1 (* skoMC1 (/ (- 1.) 12.))))))))))))) (* skoMC1 (* skoMC1 (* skoMC1 (+ 2. (* skoMC1 6.)))))))))))))))))))))))))))))

% In GRF format:
(sequent " MetiTarski formula " (antecedent (<= (* skoSC1 (* skoMC1 (- 1.))) skoMC1) (> (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (+ (- 1.) (* skoMC1 3.))))) (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (+ (- 2.) (* skoMC1 (- 3.)))))) (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (+ (/ 1. 6.) (* skoMC1 (- 1.)))))) (* skoSC1 (* skoMC1 (* skoMC1 (* skoMC1 (/ 1. 4.))))))))))) (* skoMC1 (* skoMC1 (* skoMC1 (+ (- 2.) (* skoMC1 (- 5.))))))) (> (* skoSC1 (+ (* skoMC1 (+ (- 1.) (* skoMC1 3.))) (* skoSC1 (+ (* skoMC1 (+ (- 2.) (* skoMC1 (- 3.)))) (* skoSC1 (+ (* skoMC1 (+ (/ 1. 6.) (* skoMC1 (- 1.)))) (* skoSC1 (* skoMC1 (/ 1. 4.))))))))) (* skoMC1 (+ (- 2.) (* skoMC1 (- 5.))))) (> skoSC1 0.) (<= (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (- 2.)))) (* skoSC1 (+ (* skoMC1 (* skoMC1 skoMC1)) (* skoSC1 (* skoMC1 (* skoMC1 skoMC1))))))) (* skoMC1 (* skoMC1 (* skoMC1 2.)))) (> (* skoSC1 (+ (* skoMC1 (* skoMC1 skoMC1)) (* skoSC1 (* skoMC1 (* skoMC1 skoMC1))))) 0.) (> (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 2.))) (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (- 1.)))) (* skoSC1 (* skoMC1 (* skoMC1 (* skoMC1 (- 1.))))))))) (* skoMC1 (* skoMC1 (* skoMC1 (- 2.))))) (<= (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (- 1.)))) (* skoSC1 (* skoMC1 (* skoMC1 (* skoMC1 (- 1.))))))) 0.) (<= (* skoSC1 (* skoMC1 (* skoMC1 (* skoMC1 (- 1.))))) (* skoMC1 (* skoMC1 skoMC1))) (> (* skoSC1 (* skoMC1 (* skoMC1 skoMC1))) (* skoMC1 (* skoMC1 (* skoMC1 (- 1.))))) (<= (* skoMC1 (* skoMC1 (* skoMC1 (- 2.)))) 0.) (> (* skoMC1 (* skoMC1 (* skoMC1 2.))) 0.) (<= skoSC1 (/ 5. 4.)) (<= 2. skoMC1) (<= 0. skoSC1) (> skoMC1 0.) (<= 0. skoMC1) (> (* skoSC1 skoMC1) (* skoMC1 (- 1.))) (<= (* skoSC1 (* skoMC1 (- 1.))) skoMC1) (> (* skoSC1 (* skoMC1 (* skoMC1 (* skoMC1 2.)))) (* skoMC1 (* skoMC1 (* skoMC1 (- 2.))))) (<= (* skoSC1 (* skoMC1 (* skoMC1 (* skoMC1 (- 2.))))) (* skoMC1 (* skoMC1 (* skoMC1 2.)))) (> (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (* skoMC1 12.)))) (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (+ (- 1.) (* skoMC1 6.))))) (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (- 1.)))) (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (/ 1. 12.)))) (* skoSC1 (* skoMC1 (* skoMC1 (* skoMC1 (/ 1. 12.))))))))))))) (* skoMC1 (* skoMC1 (* skoMC1 (+ (- 2.) (* skoMC1 (- 6.)))))))) (succedent (> (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (* skoMC1 (- 12.))))) (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (+ 1. (* skoMC1 (- 6.)))))) (* skoSC1 (+ (* skoMC1 (* skoMC1 skoMC1)) (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (/ (- 1.) 12.)))) (* skoSC1 (* skoMC1 (* skoMC1 (* skoMC1 (/ (- 1.) 12.))))))))))))) (* skoMC1 (* skoMC1 (* skoMC1 (+ 2. (* skoMC1 6.))))))))
-----[end problem]-----

-----[begin problem]-----
% In Mathematica format:
Timing[Resolve[Exists[{skoSC1,skoMC1}, And[0<=skoMC1,skoSC1*(skoMC1*skoMC1*skoMC1*(-1+skoMC1*3)+skoSC1*(skoMC1*skoMC1*skoMC1*(-2+skoMC1*-3)+skoSC1*(skoMC1*skoMC1*skoMC1*((1/6)+skoMC1*-1)+skoSC1*skoMC1*skoMC1*skoMC1*(1/4))))>skoMC1*skoMC1*skoMC1*(-2+skoMC1*-5),skoSC1*(skoMC1*(-1+skoMC1*3)+skoSC1*(skoMC1*(-2+skoMC1*-3)+skoSC1*(skoMC1*((1/6)+skoMC1*-1)+skoSC1*skoMC1*(1/4))))>skoMC1*(-2+skoMC1*-5),skoSC1>0,skoSC1*(skoMC1*skoMC1*skoMC1*-2+skoSC1*(skoMC1*skoMC1*skoMC1+skoSC1*skoMC1*skoMC1*skoMC1))<=skoMC1*skoMC1*skoMC1*2,skoSC1*(skoMC1*skoMC1*skoMC1+skoSC1*skoMC1*skoMC1*skoMC1)>0,skoSC1*(skoMC1*skoMC1*skoMC1*2+skoSC1*(skoMC1*skoMC1*skoMC1*-1+skoSC1*skoMC1*skoMC1*skoMC1*-1))>skoMC1*skoMC1*skoMC1*-2,skoSC1*(skoMC1*skoMC1*skoMC1*-1+skoSC1*skoMC1*skoMC1*skoMC1*-1)<=0,skoSC1*skoMC1*skoMC1*skoMC1*-1<=skoMC1*skoMC1*skoMC1,skoSC1*skoMC1*skoMC1*skoMC1>skoMC1*skoMC1*skoMC1*-1,skoMC1*skoMC1*skoMC1*-2<=0,skoMC1*skoMC1*skoMC1*2>0,skoSC1<=(5/4),2<=skoMC1,0<=skoSC1,skoMC1>0,0<=skoMC1,skoSC1*skoMC1>skoMC1*-1,skoSC1*skoMC1*-1<=skoMC1,skoSC1*skoMC1*skoMC1*skoMC1*2>skoMC1*skoMC1*skoMC1*-2,skoSC1*skoMC1*skoMC1*skoMC1*-2<=skoMC1*skoMC1*skoMC1*2,skoSC1*(skoMC1*skoMC1*skoMC1*skoMC1*12+skoSC1*(skoMC1*skoMC1*skoMC1*(-1+skoMC1*6)+skoSC1*(skoMC1*skoMC1*skoMC1*-1+skoSC1*(skoMC1*skoMC1*skoMC1*(1/12)+skoSC1*skoMC1*skoMC1*skoMC1*(1/12)))))>skoMC1*skoMC1*skoMC1*(-2+skoMC1*-6),skoSC1*(skoMC1*skoMC1*skoMC1*skoMC1*-12+skoSC1*(skoMC1*skoMC1*skoMC1*(1+skoMC1*-6)+skoSC1*(skoMC1*skoMC1*skoMC1+skoSC1*(skoMC1*skoMC1*skoMC1*(-1/12)+skoSC1*skoMC1*skoMC1*skoMC1*(-1/12)))))<=skoMC1*skoMC1*skoMC1*(2+skoMC1*6)]], Reals]]

% In QepcadB format:
(E skoSC1) (E skoMC1) [[0<=skoMC1]/\[[(skoMC1 skoMC1 skoMC1 (-2+(skoMC1 (-5))))<(skoSC1 ((skoMC1 skoMC1 skoMC1 (-1+(skoMC1 (3))))+(skoSC1 ((skoMC1 skoMC1 skoMC1 (-2+(skoMC1 (-3))))+(skoSC1 ((skoMC1 skoMC1 skoMC1 (1/6+(skoMC1 (-1))))+(skoSC1 skoMC1 skoMC1 skoMC1 (1/4))))))))]/\[[(skoMC1 (-2+(skoMC1 (-5))))<(skoSC1 ((skoMC1 (-1+(skoMC1 (3))))+(skoSC1 ((skoMC1 (-2+(skoMC1 (-3))))+(skoSC1 ((skoMC1 (1/6+(skoMC1 (-1))))+(skoSC1 skoMC1 (1/4))))))))]/\[[0<skoSC1]/\[[(skoSC1 ((skoMC1 skoMC1 skoMC1 (-2))+(skoSC1 ((skoMC1 skoMC1 skoMC1)+(skoSC1 skoMC1 skoMC1 skoMC1)))))<=(skoMC1 skoMC1 skoMC1 (2))]/\[[0<(skoSC1 ((skoMC1 skoMC1 skoMC1)+(skoSC1 skoMC1 skoMC1 skoMC1)))]/\[[(skoMC1 skoMC1 skoMC1 (-2))<(skoSC1 ((skoMC1 skoMC1 skoMC1 (2))+(skoSC1 ((skoMC1 skoMC1 skoMC1 (-1))+(skoSC1 skoMC1 skoMC1 skoMC1 (-1))))))]/\[[(skoSC1 ((skoMC1 skoMC1 skoMC1 (-1))+(skoSC1 skoMC1 skoMC1 skoMC1 (-1))))<=0]/\[[(skoSC1 skoMC1 skoMC1 skoMC1 (-1))<=(skoMC1 skoMC1 skoMC1)]/\[[(skoMC1 skoMC1 skoMC1 (-1))<(skoSC1 skoMC1 skoMC1 skoMC1)]/\[[(skoMC1 skoMC1 skoMC1 (-2))<=0]/\[[0<(skoMC1 skoMC1 skoMC1 (2))]/\[[skoSC1<=5/4]/\[[2<=skoMC1]/\[[0<=skoSC1]/\[[0<skoMC1]/\[[0<=skoMC1]/\[[(skoMC1 (-1))<(skoSC1 skoMC1)]/\[[(skoSC1 skoMC1 (-1))<=skoMC1]/\[[(skoMC1 skoMC1 skoMC1 (-2))<(skoSC1 skoMC1 skoMC1 skoMC1 (2))]/\[[(skoSC1 skoMC1 skoMC1 skoMC1 (-2))<=(skoMC1 skoMC1 skoMC1 (2))]/\[[(skoMC1 skoMC1 skoMC1 (-2+(skoMC1 (-6))))<(skoSC1 ((skoMC1 skoMC1 skoMC1 skoMC1 (12))+(skoSC1 ((skoMC1 skoMC1 skoMC1 (-1+(skoMC1 (6))))+(skoSC1 ((skoMC1 skoMC1 skoMC1 (-1))+(skoSC1 ((skoMC1 skoMC1 skoMC1 (1/12))+(skoSC1 skoMC1 skoMC1 skoMC1 (1/12))))))))))]/\[(skoSC1 ((skoMC1 skoMC1 skoMC1 skoMC1 (-12))+(skoSC1 ((skoMC1 skoMC1 skoMC1 (1+(skoMC1 (-6))))+(skoSC1 ((skoMC1 skoMC1 skoMC1)+(skoSC1 ((skoMC1 skoMC1 skoMC1 (-1/12))+(skoSC1 skoMC1 skoMC1 skoMC1 (-1/12))))))))))<=(skoMC1 skoMC1 skoMC1 (2+(skoMC1 (6))))]]]]]]]]]]]]]]]]]]]]]]].

% In SMTLib2 format:
(declare-fun skoSC1 () Real) (declare-fun skoMC1 () Real) (assert (and (<= 0. skoMC1) (and (> (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (+ (- 1.) (* skoMC1 3.))))) (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (+ (- 2.) (* skoMC1 (- 3.)))))) (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (+ (/ 1. 6.) (* skoMC1 (- 1.)))))) (* skoSC1 (* skoMC1 (* skoMC1 (* skoMC1 (/ 1. 4.))))))))))) (* skoMC1 (* skoMC1 (* skoMC1 (+ (- 2.) (* skoMC1 (- 5.))))))) (and (> (* skoSC1 (+ (* skoMC1 (+ (- 1.) (* skoMC1 3.))) (* skoSC1 (+ (* skoMC1 (+ (- 2.) (* skoMC1 (- 3.)))) (* skoSC1 (+ (* skoMC1 (+ (/ 1. 6.) (* skoMC1 (- 1.)))) (* skoSC1 (* skoMC1 (/ 1. 4.))))))))) (* skoMC1 (+ (- 2.) (* skoMC1 (- 5.))))) (and (> skoSC1 0.) (and (<= (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (- 2.)))) (* skoSC1 (+ (* skoMC1 (* skoMC1 skoMC1)) (* skoSC1 (* skoMC1 (* skoMC1 skoMC1))))))) (* skoMC1 (* skoMC1 (* skoMC1 2.)))) (and (> (* skoSC1 (+ (* skoMC1 (* skoMC1 skoMC1)) (* skoSC1 (* skoMC1 (* skoMC1 skoMC1))))) 0.) (and (> (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 2.))) (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (- 1.)))) (* skoSC1 (* skoMC1 (* skoMC1 (* skoMC1 (- 1.))))))))) (* skoMC1 (* skoMC1 (* skoMC1 (- 2.))))) (and (<= (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (- 1.)))) (* skoSC1 (* skoMC1 (* skoMC1 (* skoMC1 (- 1.))))))) 0.) (and (<= (* skoSC1 (* skoMC1 (* skoMC1 (* skoMC1 (- 1.))))) (* skoMC1 (* skoMC1 skoMC1))) (and (> (* skoSC1 (* skoMC1 (* skoMC1 skoMC1))) (* skoMC1 (* skoMC1 (* skoMC1 (- 1.))))) (and (<= (* skoMC1 (* skoMC1 (* skoMC1 (- 2.)))) 0.) (and (> (* skoMC1 (* skoMC1 (* skoMC1 2.))) 0.) (and (<= skoSC1 (/ 5. 4.)) (and (<= 2. skoMC1) (and (<= 0. skoSC1) (and (> skoMC1 0.) (and (<= 0. skoMC1) (and (> (* skoSC1 skoMC1) (* skoMC1 (- 1.))) (and (<= (* skoSC1 (* skoMC1 (- 1.))) skoMC1) (and (> (* skoSC1 (* skoMC1 (* skoMC1 (* skoMC1 2.)))) (* skoMC1 (* skoMC1 (* skoMC1 (- 2.))))) (and (<= (* skoSC1 (* skoMC1 (* skoMC1 (* skoMC1 (- 2.))))) (* skoMC1 (* skoMC1 (* skoMC1 2.)))) (and (> (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (* skoMC1 12.)))) (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (+ (- 1.) (* skoMC1 6.))))) (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (- 1.)))) (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (/ 1. 12.)))) (* skoSC1 (* skoMC1 (* skoMC1 (* skoMC1 (/ 1. 12.))))))))))))) (* skoMC1 (* skoMC1 (* skoMC1 (+ (- 2.) (* skoMC1 (- 6.))))))) (<= (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (* skoMC1 (- 12.))))) (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (+ 1. (* skoMC1 (- 6.)))))) (* skoSC1 (+ (* skoMC1 (* skoMC1 skoMC1)) (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (/ (- 1.) 12.)))) (* skoSC1 (* skoMC1 (* skoMC1 (* skoMC1 (/ (- 1.) 12.))))))))))))) (* skoMC1 (* skoMC1 (* skoMC1 (+ 2. (* skoMC1 6.)))))))))))))))))))))))))))))

% In GRF format:
(sequent " MetiTarski formula " (antecedent (<= 0. skoMC1) (> (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (+ (- 1.) (* skoMC1 3.))))) (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (+ (- 2.) (* skoMC1 (- 3.)))))) (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (+ (/ 1. 6.) (* skoMC1 (- 1.)))))) (* skoSC1 (* skoMC1 (* skoMC1 (* skoMC1 (/ 1. 4.))))))))))) (* skoMC1 (* skoMC1 (* skoMC1 (+ (- 2.) (* skoMC1 (- 5.))))))) (> (* skoSC1 (+ (* skoMC1 (+ (- 1.) (* skoMC1 3.))) (* skoSC1 (+ (* skoMC1 (+ (- 2.) (* skoMC1 (- 3.)))) (* skoSC1 (+ (* skoMC1 (+ (/ 1. 6.) (* skoMC1 (- 1.)))) (* skoSC1 (* skoMC1 (/ 1. 4.))))))))) (* skoMC1 (+ (- 2.) (* skoMC1 (- 5.))))) (> skoSC1 0.) (<= (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (- 2.)))) (* skoSC1 (+ (* skoMC1 (* skoMC1 skoMC1)) (* skoSC1 (* skoMC1 (* skoMC1 skoMC1))))))) (* skoMC1 (* skoMC1 (* skoMC1 2.)))) (> (* skoSC1 (+ (* skoMC1 (* skoMC1 skoMC1)) (* skoSC1 (* skoMC1 (* skoMC1 skoMC1))))) 0.) (> (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 2.))) (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (- 1.)))) (* skoSC1 (* skoMC1 (* skoMC1 (* skoMC1 (- 1.))))))))) (* skoMC1 (* skoMC1 (* skoMC1 (- 2.))))) (<= (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (- 1.)))) (* skoSC1 (* skoMC1 (* skoMC1 (* skoMC1 (- 1.))))))) 0.) (<= (* skoSC1 (* skoMC1 (* skoMC1 (* skoMC1 (- 1.))))) (* skoMC1 (* skoMC1 skoMC1))) (> (* skoSC1 (* skoMC1 (* skoMC1 skoMC1))) (* skoMC1 (* skoMC1 (* skoMC1 (- 1.))))) (<= (* skoMC1 (* skoMC1 (* skoMC1 (- 2.)))) 0.) (> (* skoMC1 (* skoMC1 (* skoMC1 2.))) 0.) (<= skoSC1 (/ 5. 4.)) (<= 2. skoMC1) (<= 0. skoSC1) (> skoMC1 0.) (<= 0. skoMC1) (> (* skoSC1 skoMC1) (* skoMC1 (- 1.))) (<= (* skoSC1 (* skoMC1 (- 1.))) skoMC1) (> (* skoSC1 (* skoMC1 (* skoMC1 (* skoMC1 2.)))) (* skoMC1 (* skoMC1 (* skoMC1 (- 2.))))) (<= (* skoSC1 (* skoMC1 (* skoMC1 (* skoMC1 (- 2.))))) (* skoMC1 (* skoMC1 (* skoMC1 2.)))) (> (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (* skoMC1 12.)))) (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (+ (- 1.) (* skoMC1 6.))))) (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (- 1.)))) (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (/ 1. 12.)))) (* skoSC1 (* skoMC1 (* skoMC1 (* skoMC1 (/ 1. 12.))))))))))))) (* skoMC1 (* skoMC1 (* skoMC1 (+ (- 2.) (* skoMC1 (- 6.)))))))) (succedent (> (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (* skoMC1 (- 12.))))) (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (+ 1. (* skoMC1 (- 6.)))))) (* skoSC1 (+ (* skoMC1 (* skoMC1 skoMC1)) (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (/ (- 1.) 12.)))) (* skoSC1 (* skoMC1 (* skoMC1 (* skoMC1 (/ (- 1.) 12.))))))))))))) (* skoMC1 (* skoMC1 (* skoMC1 (+ 2. (* skoMC1 6.))))))))
-----[end problem]-----

-----[begin problem]-----
% In Mathematica format:
Timing[Resolve[Exists[{skoSC1,skoMC1}, And[skoMC1>0,skoSC1*(skoMC1*skoMC1*skoMC1*(-1+skoMC1*3)+skoSC1*(skoMC1*skoMC1*skoMC1*(-2+skoMC1*-3)+skoSC1*(skoMC1*skoMC1*skoMC1*((1/6)+skoMC1*-1)+skoSC1*skoMC1*skoMC1*skoMC1*(1/4))))>skoMC1*skoMC1*skoMC1*(-2+skoMC1*-5),skoSC1*(skoMC1*(-1+skoMC1*3)+skoSC1*(skoMC1*(-2+skoMC1*-3)+skoSC1*(skoMC1*((1/6)+skoMC1*-1)+skoSC1*skoMC1*(1/4))))>skoMC1*(-2+skoMC1*-5),skoSC1>0,skoSC1*(skoMC1*skoMC1*skoMC1+skoSC1*skoMC1*skoMC1*skoMC1)>0,skoSC1*(skoMC1*skoMC1*skoMC1*2+skoSC1*(skoMC1*skoMC1*skoMC1*-1+skoSC1*skoMC1*skoMC1*skoMC1*-1))>skoMC1*skoMC1*skoMC1*-2,skoSC1*skoMC1*skoMC1*skoMC1>skoMC1*skoMC1*skoMC1*-1,skoMC1*skoMC1*skoMC1*2>0,skoMC1>0,skoSC1*skoMC1>skoMC1*-1,skoSC1*skoMC1*skoMC1*skoMC1*2>skoMC1*skoMC1*skoMC1*-2,skoSC1*(skoMC1*skoMC1*skoMC1*skoMC1*12+skoSC1*(skoMC1*skoMC1*skoMC1*(-1+skoMC1*6)+skoSC1*(skoMC1*skoMC1*skoMC1*-1+skoSC1*(skoMC1*skoMC1*skoMC1*(1/12)+skoSC1*skoMC1*skoMC1*skoMC1*(1/12)))))>skoMC1*skoMC1*skoMC1*(-2+skoMC1*-6)]], Reals]]

% In QepcadB format:
(E skoSC1) (E skoMC1) [[0<skoMC1]/\[[(skoMC1 skoMC1 skoMC1 (-2+(skoMC1 (-5))))<(skoSC1 ((skoMC1 skoMC1 skoMC1 (-1+(skoMC1 (3))))+(skoSC1 ((skoMC1 skoMC1 skoMC1 (-2+(skoMC1 (-3))))+(skoSC1 ((skoMC1 skoMC1 skoMC1 (1/6+(skoMC1 (-1))))+(skoSC1 skoMC1 skoMC1 skoMC1 (1/4))))))))]/\[[(skoMC1 (-2+(skoMC1 (-5))))<(skoSC1 ((skoMC1 (-1+(skoMC1 (3))))+(skoSC1 ((skoMC1 (-2+(skoMC1 (-3))))+(skoSC1 ((skoMC1 (1/6+(skoMC1 (-1))))+(skoSC1 skoMC1 (1/4))))))))]/\[[0<skoSC1]/\[[0<(skoSC1 ((skoMC1 skoMC1 skoMC1)+(skoSC1 skoMC1 skoMC1 skoMC1)))]/\[[(skoMC1 skoMC1 skoMC1 (-2))<(skoSC1 ((skoMC1 skoMC1 skoMC1 (2))+(skoSC1 ((skoMC1 skoMC1 skoMC1 (-1))+(skoSC1 skoMC1 skoMC1 skoMC1 (-1))))))]/\[[(skoMC1 skoMC1 skoMC1 (-1))<(skoSC1 skoMC1 skoMC1 skoMC1)]/\[[0<(skoMC1 skoMC1 skoMC1 (2))]/\[[0<skoMC1]/\[[(skoMC1 (-1))<(skoSC1 skoMC1)]/\[[(skoMC1 skoMC1 skoMC1 (-2))<(skoSC1 skoMC1 skoMC1 skoMC1 (2))]/\[(skoMC1 skoMC1 skoMC1 (-2+(skoMC1 (-6))))<(skoSC1 ((skoMC1 skoMC1 skoMC1 skoMC1 (12))+(skoSC1 ((skoMC1 skoMC1 skoMC1 (-1+(skoMC1 (6))))+(skoSC1 ((skoMC1 skoMC1 skoMC1 (-1))+(skoSC1 ((skoMC1 skoMC1 skoMC1 (1/12))+(skoSC1 skoMC1 skoMC1 skoMC1 (1/12))))))))))]]]]]]]]]]]].

% In SMTLib2 format:
(declare-fun skoSC1 () Real) (declare-fun skoMC1 () Real) (assert (and (> skoMC1 0.) (and (> (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (+ (- 1.) (* skoMC1 3.))))) (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (+ (- 2.) (* skoMC1 (- 3.)))))) (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (+ (/ 1. 6.) (* skoMC1 (- 1.)))))) (* skoSC1 (* skoMC1 (* skoMC1 (* skoMC1 (/ 1. 4.))))))))))) (* skoMC1 (* skoMC1 (* skoMC1 (+ (- 2.) (* skoMC1 (- 5.))))))) (and (> (* skoSC1 (+ (* skoMC1 (+ (- 1.) (* skoMC1 3.))) (* skoSC1 (+ (* skoMC1 (+ (- 2.) (* skoMC1 (- 3.)))) (* skoSC1 (+ (* skoMC1 (+ (/ 1. 6.) (* skoMC1 (- 1.)))) (* skoSC1 (* skoMC1 (/ 1. 4.))))))))) (* skoMC1 (+ (- 2.) (* skoMC1 (- 5.))))) (and (> skoSC1 0.) (and (> (* skoSC1 (+ (* skoMC1 (* skoMC1 skoMC1)) (* skoSC1 (* skoMC1 (* skoMC1 skoMC1))))) 0.) (and (> (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 2.))) (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (- 1.)))) (* skoSC1 (* skoMC1 (* skoMC1 (* skoMC1 (- 1.))))))))) (* skoMC1 (* skoMC1 (* skoMC1 (- 2.))))) (and (> (* skoSC1 (* skoMC1 (* skoMC1 skoMC1))) (* skoMC1 (* skoMC1 (* skoMC1 (- 1.))))) (and (> (* skoMC1 (* skoMC1 (* skoMC1 2.))) 0.) (and (> skoMC1 0.) (and (> (* skoSC1 skoMC1) (* skoMC1 (- 1.))) (and (> (* skoSC1 (* skoMC1 (* skoMC1 (* skoMC1 2.)))) (* skoMC1 (* skoMC1 (* skoMC1 (- 2.))))) (> (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (* skoMC1 12.)))) (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (+ (- 1.) (* skoMC1 6.))))) (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (- 1.)))) (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (/ 1. 12.)))) (* skoSC1 (* skoMC1 (* skoMC1 (* skoMC1 (/ 1. 12.))))))))))))) (* skoMC1 (* skoMC1 (* skoMC1 (+ (- 2.) (* skoMC1 (- 6.)))))))))))))))))))

% In GRF format:
(sequent " MetiTarski formula " (antecedent (> skoMC1 0.) (> (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (+ (- 1.) (* skoMC1 3.))))) (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (+ (- 2.) (* skoMC1 (- 3.)))))) (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (+ (/ 1. 6.) (* skoMC1 (- 1.)))))) (* skoSC1 (* skoMC1 (* skoMC1 (* skoMC1 (/ 1. 4.))))))))))) (* skoMC1 (* skoMC1 (* skoMC1 (+ (- 2.) (* skoMC1 (- 5.))))))) (> (* skoSC1 (+ (* skoMC1 (+ (- 1.) (* skoMC1 3.))) (* skoSC1 (+ (* skoMC1 (+ (- 2.) (* skoMC1 (- 3.)))) (* skoSC1 (+ (* skoMC1 (+ (/ 1. 6.) (* skoMC1 (- 1.)))) (* skoSC1 (* skoMC1 (/ 1. 4.))))))))) (* skoMC1 (+ (- 2.) (* skoMC1 (- 5.))))) (> skoSC1 0.) (> (* skoSC1 (+ (* skoMC1 (* skoMC1 skoMC1)) (* skoSC1 (* skoMC1 (* skoMC1 skoMC1))))) 0.) (> (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 2.))) (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (- 1.)))) (* skoSC1 (* skoMC1 (* skoMC1 (* skoMC1 (- 1.))))))))) (* skoMC1 (* skoMC1 (* skoMC1 (- 2.))))) (> (* skoSC1 (* skoMC1 (* skoMC1 skoMC1))) (* skoMC1 (* skoMC1 (* skoMC1 (- 1.))))) (> (* skoMC1 (* skoMC1 (* skoMC1 2.))) 0.) (> skoMC1 0.) (> (* skoSC1 skoMC1) (* skoMC1 (- 1.))) (> (* skoSC1 (* skoMC1 (* skoMC1 (* skoMC1 2.)))) (* skoMC1 (* skoMC1 (* skoMC1 (- 2.)))))) (succedent (<= (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (* skoMC1 12.)))) (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (+ (- 1.) (* skoMC1 6.))))) (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (- 1.)))) (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (/ 1. 12.)))) (* skoSC1 (* skoMC1 (* skoMC1 (* skoMC1 (/ 1. 12.))))))))))))) (* skoMC1 (* skoMC1 (* skoMC1 (+ (- 2.) (* skoMC1 (- 6.)))))))))
-----[end problem]-----

-----[begin problem]-----
% In Mathematica format:
Timing[Resolve[Exists[{skoSC1,skoMC1}, And[skoSC1*(skoMC1*(1+skoMC1*-3)+skoSC1*(skoMC1*(2+skoMC1*3)+skoSC1*(skoMC1*((-1/6)+skoMC1)+skoSC1*skoMC1*(-1/4))))<=skoMC1*(2+skoMC1*5),skoMC1>0,skoSC1*(skoMC1*skoMC1*skoMC1*(-1+skoMC1*3)+skoSC1*(skoMC1*skoMC1*skoMC1*(-2+skoMC1*-3)+skoSC1*(skoMC1*skoMC1*skoMC1*((1/6)+skoMC1*-1)+skoSC1*skoMC1*skoMC1*skoMC1*(1/4))))>skoMC1*skoMC1*skoMC1*(-2+skoMC1*-5),skoSC1*(skoMC1*(-1+skoMC1*3)+skoSC1*(skoMC1*(-2+skoMC1*-3)+skoSC1*(skoMC1*((1/6)+skoMC1*-1)+skoSC1*skoMC1*(1/4))))>skoMC1*(-2+skoMC1*-5),skoSC1>0,skoSC1*(skoMC1*skoMC1*skoMC1*-2+skoSC1*(skoMC1*skoMC1*skoMC1+skoSC1*skoMC1*skoMC1*skoMC1))<=skoMC1*skoMC1*skoMC1*2,skoSC1*(skoMC1*skoMC1*skoMC1+skoSC1*skoMC1*skoMC1*skoMC1)>0,skoSC1*(skoMC1*skoMC1*skoMC1*2+skoSC1*(skoMC1*skoMC1*skoMC1*-1+skoSC1*skoMC1*skoMC1*skoMC1*-1))>skoMC1*skoMC1*skoMC1*-2,skoSC1*(skoMC1*skoMC1*skoMC1*-1+skoSC1*skoMC1*skoMC1*skoMC1*-1)<=0,skoSC1*skoMC1*skoMC1*skoMC1*-1<=skoMC1*skoMC1*skoMC1,skoSC1*skoMC1*skoMC1*skoMC1>skoMC1*skoMC1*skoMC1*-1,skoMC1*skoMC1*skoMC1*-2<=0,skoMC1*skoMC1*skoMC1*2>0,skoSC1<=(5/4),2<=skoMC1,0<=skoSC1,skoMC1>0,0<=skoMC1,skoSC1*skoMC1>skoMC1*-1,skoSC1*skoMC1*-1<=skoMC1,skoSC1*skoMC1*skoMC1*skoMC1*2>skoMC1*skoMC1*skoMC1*-2,skoSC1*skoMC1*skoMC1*skoMC1*-2<=skoMC1*skoMC1*skoMC1*2,skoSC1*(skoMC1*skoMC1*skoMC1*skoMC1*12+skoSC1*(skoMC1*skoMC1*skoMC1*(-1+skoMC1*6)+skoSC1*(skoMC1*skoMC1*skoMC1*-1+skoSC1*(skoMC1*skoMC1*skoMC1*(1/12)+skoSC1*skoMC1*skoMC1*skoMC1*(1/12)))))>skoMC1*skoMC1*skoMC1*(-2+skoMC1*-6),skoSC1*(skoMC1*skoMC1*skoMC1*skoMC1*-12+skoSC1*(skoMC1*skoMC1*skoMC1*(1+skoMC1*-6)+skoSC1*(skoMC1*skoMC1*skoMC1+skoSC1*(skoMC1*skoMC1*skoMC1*(-1/12)+skoSC1*skoMC1*skoMC1*skoMC1*(-1/12)))))<=skoMC1*skoMC1*skoMC1*(2+skoMC1*6)]], Reals]]

% In QepcadB format:
(E skoSC1) (E skoMC1) [[(skoSC1 ((skoMC1 (1+(skoMC1 (-3))))+(skoSC1 ((skoMC1 (2+(skoMC1 (3))))+(skoSC1 ((skoMC1 (-1/6+skoMC1))+(skoSC1 skoMC1 (-1/4))))))))<=(skoMC1 (2+(skoMC1 (5))))]/\[[0<skoMC1]/\[[(skoMC1 skoMC1 skoMC1 (-2+(skoMC1 (-5))))<(skoSC1 ((skoMC1 skoMC1 skoMC1 (-1+(skoMC1 (3))))+(skoSC1 ((skoMC1 skoMC1 skoMC1 (-2+(skoMC1 (-3))))+(skoSC1 ((skoMC1 skoMC1 skoMC1 (1/6+(skoMC1 (-1))))+(skoSC1 skoMC1 skoMC1 skoMC1 (1/4))))))))]/\[[(skoMC1 (-2+(skoMC1 (-5))))<(skoSC1 ((skoMC1 (-1+(skoMC1 (3))))+(skoSC1 ((skoMC1 (-2+(skoMC1 (-3))))+(skoSC1 ((skoMC1 (1/6+(skoMC1 (-1))))+(skoSC1 skoMC1 (1/4))))))))]/\[[0<skoSC1]/\[[(skoSC1 ((skoMC1 skoMC1 skoMC1 (-2))+(skoSC1 ((skoMC1 skoMC1 skoMC1)+(skoSC1 skoMC1 skoMC1 skoMC1)))))<=(skoMC1 skoMC1 skoMC1 (2))]/\[[0<(skoSC1 ((skoMC1 skoMC1 skoMC1)+(skoSC1 skoMC1 skoMC1 skoMC1)))]/\[[(skoMC1 skoMC1 skoMC1 (-2))<(skoSC1 ((skoMC1 skoMC1 skoMC1 (2))+(skoSC1 ((skoMC1 skoMC1 skoMC1 (-1))+(skoSC1 skoMC1 skoMC1 skoMC1 (-1))))))]/\[[(skoSC1 ((skoMC1 skoMC1 skoMC1 (-1))+(skoSC1 skoMC1 skoMC1 skoMC1 (-1))))<=0]/\[[(skoSC1 skoMC1 skoMC1 skoMC1 (-1))<=(skoMC1 skoMC1 skoMC1)]/\[[(skoMC1 skoMC1 skoMC1 (-1))<(skoSC1 skoMC1 skoMC1 skoMC1)]/\[[(skoMC1 skoMC1 skoMC1 (-2))<=0]/\[[0<(skoMC1 skoMC1 skoMC1 (2))]/\[[skoSC1<=5/4]/\[[2<=skoMC1]/\[[0<=skoSC1]/\[[0<skoMC1]/\[[0<=skoMC1]/\[[(skoMC1 (-1))<(skoSC1 skoMC1)]/\[[(skoSC1 skoMC1 (-1))<=skoMC1]/\[[(skoMC1 skoMC1 skoMC1 (-2))<(skoSC1 skoMC1 skoMC1 skoMC1 (2))]/\[[(skoSC1 skoMC1 skoMC1 skoMC1 (-2))<=(skoMC1 skoMC1 skoMC1 (2))]/\[[(skoMC1 skoMC1 skoMC1 (-2+(skoMC1 (-6))))<(skoSC1 ((skoMC1 skoMC1 skoMC1 skoMC1 (12))+(skoSC1 ((skoMC1 skoMC1 skoMC1 (-1+(skoMC1 (6))))+(skoSC1 ((skoMC1 skoMC1 skoMC1 (-1))+(skoSC1 ((skoMC1 skoMC1 skoMC1 (1/12))+(skoSC1 skoMC1 skoMC1 skoMC1 (1/12))))))))))]/\[(skoSC1 ((skoMC1 skoMC1 skoMC1 skoMC1 (-12))+(skoSC1 ((skoMC1 skoMC1 skoMC1 (1+(skoMC1 (-6))))+(skoSC1 ((skoMC1 skoMC1 skoMC1)+(skoSC1 ((skoMC1 skoMC1 skoMC1 (-1/12))+(skoSC1 skoMC1 skoMC1 skoMC1 (-1/12))))))))))<=(skoMC1 skoMC1 skoMC1 (2+(skoMC1 (6))))]]]]]]]]]]]]]]]]]]]]]]]].

% In SMTLib2 format:
(declare-fun skoSC1 () Real) (declare-fun skoMC1 () Real) (assert (and (<= (* skoSC1 (+ (* skoMC1 (+ 1. (* skoMC1 (- 3.)))) (* skoSC1 (+ (* skoMC1 (+ 2. (* skoMC1 3.))) (* skoSC1 (+ (* skoMC1 (+ (/ (- 1.) 6.) skoMC1)) (* skoSC1 (* skoMC1 (/ (- 1.) 4.))))))))) (* skoMC1 (+ 2. (* skoMC1 5.)))) (and (> skoMC1 0.) (and (> (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (+ (- 1.) (* skoMC1 3.))))) (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (+ (- 2.) (* skoMC1 (- 3.)))))) (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (+ (/ 1. 6.) (* skoMC1 (- 1.)))))) (* skoSC1 (* skoMC1 (* skoMC1 (* skoMC1 (/ 1. 4.))))))))))) (* skoMC1 (* skoMC1 (* skoMC1 (+ (- 2.) (* skoMC1 (- 5.))))))) (and (> (* skoSC1 (+ (* skoMC1 (+ (- 1.) (* skoMC1 3.))) (* skoSC1 (+ (* skoMC1 (+ (- 2.) (* skoMC1 (- 3.)))) (* skoSC1 (+ (* skoMC1 (+ (/ 1. 6.) (* skoMC1 (- 1.)))) (* skoSC1 (* skoMC1 (/ 1. 4.))))))))) (* skoMC1 (+ (- 2.) (* skoMC1 (- 5.))))) (and (> skoSC1 0.) (and (<= (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (- 2.)))) (* skoSC1 (+ (* skoMC1 (* skoMC1 skoMC1)) (* skoSC1 (* skoMC1 (* skoMC1 skoMC1))))))) (* skoMC1 (* skoMC1 (* skoMC1 2.)))) (and (> (* skoSC1 (+ (* skoMC1 (* skoMC1 skoMC1)) (* skoSC1 (* skoMC1 (* skoMC1 skoMC1))))) 0.) (and (> (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 2.))) (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (- 1.)))) (* skoSC1 (* skoMC1 (* skoMC1 (* skoMC1 (- 1.))))))))) (* skoMC1 (* skoMC1 (* skoMC1 (- 2.))))) (and (<= (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (- 1.)))) (* skoSC1 (* skoMC1 (* skoMC1 (* skoMC1 (- 1.))))))) 0.) (and (<= (* skoSC1 (* skoMC1 (* skoMC1 (* skoMC1 (- 1.))))) (* skoMC1 (* skoMC1 skoMC1))) (and (> (* skoSC1 (* skoMC1 (* skoMC1 skoMC1))) (* skoMC1 (* skoMC1 (* skoMC1 (- 1.))))) (and (<= (* skoMC1 (* skoMC1 (* skoMC1 (- 2.)))) 0.) (and (> (* skoMC1 (* skoMC1 (* skoMC1 2.))) 0.) (and (<= skoSC1 (/ 5. 4.)) (and (<= 2. skoMC1) (and (<= 0. skoSC1) (and (> skoMC1 0.) (and (<= 0. skoMC1) (and (> (* skoSC1 skoMC1) (* skoMC1 (- 1.))) (and (<= (* skoSC1 (* skoMC1 (- 1.))) skoMC1) (and (> (* skoSC1 (* skoMC1 (* skoMC1 (* skoMC1 2.)))) (* skoMC1 (* skoMC1 (* skoMC1 (- 2.))))) (and (<= (* skoSC1 (* skoMC1 (* skoMC1 (* skoMC1 (- 2.))))) (* skoMC1 (* skoMC1 (* skoMC1 2.)))) (and (> (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (* skoMC1 12.)))) (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (+ (- 1.) (* skoMC1 6.))))) (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (- 1.)))) (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (/ 1. 12.)))) (* skoSC1 (* skoMC1 (* skoMC1 (* skoMC1 (/ 1. 12.))))))))))))) (* skoMC1 (* skoMC1 (* skoMC1 (+ (- 2.) (* skoMC1 (- 6.))))))) (<= (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (* skoMC1 (- 12.))))) (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (+ 1. (* skoMC1 (- 6.)))))) (* skoSC1 (+ (* skoMC1 (* skoMC1 skoMC1)) (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (/ (- 1.) 12.)))) (* skoSC1 (* skoMC1 (* skoMC1 (* skoMC1 (/ (- 1.) 12.))))))))))))) (* skoMC1 (* skoMC1 (* skoMC1 (+ 2. (* skoMC1 6.))))))))))))))))))))))))))))))

% In GRF format:
(sequent " MetiTarski formula " (antecedent (<= (* skoSC1 (+ (* skoMC1 (+ 1. (* skoMC1 (- 3.)))) (* skoSC1 (+ (* skoMC1 (+ 2. (* skoMC1 3.))) (* skoSC1 (+ (* skoMC1 (+ (/ (- 1.) 6.) skoMC1)) (* skoSC1 (* skoMC1 (/ (- 1.) 4.))))))))) (* skoMC1 (+ 2. (* skoMC1 5.)))) (> skoMC1 0.) (> (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (+ (- 1.) (* skoMC1 3.))))) (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (+ (- 2.) (* skoMC1 (- 3.)))))) (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (+ (/ 1. 6.) (* skoMC1 (- 1.)))))) (* skoSC1 (* skoMC1 (* skoMC1 (* skoMC1 (/ 1. 4.))))))))))) (* skoMC1 (* skoMC1 (* skoMC1 (+ (- 2.) (* skoMC1 (- 5.))))))) (> (* skoSC1 (+ (* skoMC1 (+ (- 1.) (* skoMC1 3.))) (* skoSC1 (+ (* skoMC1 (+ (- 2.) (* skoMC1 (- 3.)))) (* skoSC1 (+ (* skoMC1 (+ (/ 1. 6.) (* skoMC1 (- 1.)))) (* skoSC1 (* skoMC1 (/ 1. 4.))))))))) (* skoMC1 (+ (- 2.) (* skoMC1 (- 5.))))) (> skoSC1 0.) (<= (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (- 2.)))) (* skoSC1 (+ (* skoMC1 (* skoMC1 skoMC1)) (* skoSC1 (* skoMC1 (* skoMC1 skoMC1))))))) (* skoMC1 (* skoMC1 (* skoMC1 2.)))) (> (* skoSC1 (+ (* skoMC1 (* skoMC1 skoMC1)) (* skoSC1 (* skoMC1 (* skoMC1 skoMC1))))) 0.) (> (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 2.))) (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (- 1.)))) (* skoSC1 (* skoMC1 (* skoMC1 (* skoMC1 (- 1.))))))))) (* skoMC1 (* skoMC1 (* skoMC1 (- 2.))))) (<= (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (- 1.)))) (* skoSC1 (* skoMC1 (* skoMC1 (* skoMC1 (- 1.))))))) 0.) (<= (* skoSC1 (* skoMC1 (* skoMC1 (* skoMC1 (- 1.))))) (* skoMC1 (* skoMC1 skoMC1))) (> (* skoSC1 (* skoMC1 (* skoMC1 skoMC1))) (* skoMC1 (* skoMC1 (* skoMC1 (- 1.))))) (<= (* skoMC1 (* skoMC1 (* skoMC1 (- 2.)))) 0.) (> (* skoMC1 (* skoMC1 (* skoMC1 2.))) 0.) (<= skoSC1 (/ 5. 4.)) (<= 2. skoMC1) (<= 0. skoSC1) (> skoMC1 0.) (<= 0. skoMC1) (> (* skoSC1 skoMC1) (* skoMC1 (- 1.))) (<= (* skoSC1 (* skoMC1 (- 1.))) skoMC1) (> (* skoSC1 (* skoMC1 (* skoMC1 (* skoMC1 2.)))) (* skoMC1 (* skoMC1 (* skoMC1 (- 2.))))) (<= (* skoSC1 (* skoMC1 (* skoMC1 (* skoMC1 (- 2.))))) (* skoMC1 (* skoMC1 (* skoMC1 2.)))) (> (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (* skoMC1 12.)))) (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (+ (- 1.) (* skoMC1 6.))))) (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (- 1.)))) (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (/ 1. 12.)))) (* skoSC1 (* skoMC1 (* skoMC1 (* skoMC1 (/ 1. 12.))))))))))))) (* skoMC1 (* skoMC1 (* skoMC1 (+ (- 2.) (* skoMC1 (- 6.)))))))) (succedent (> (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (* skoMC1 (- 12.))))) (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (+ 1. (* skoMC1 (- 6.)))))) (* skoSC1 (+ (* skoMC1 (* skoMC1 skoMC1)) (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (/ (- 1.) 12.)))) (* skoSC1 (* skoMC1 (* skoMC1 (* skoMC1 (/ (- 1.) 12.))))))))))))) (* skoMC1 (* skoMC1 (* skoMC1 (+ 2. (* skoMC1 6.))))))))
-----[end problem]-----

-----[begin problem]-----
% In Mathematica format:
Timing[Resolve[Exists[{skoSC1,skoMC1}, And[skoSC1*(skoMC1*(1+skoMC1*-3)+skoSC1*(skoMC1*(2+skoMC1*3)+skoSC1*(skoMC1*((-1/6)+skoMC1)+skoSC1*skoMC1*(-1/4))))>skoMC1*(2+skoMC1*5),skoSC1*(skoMC1*skoMC1*skoMC1*(-1+skoMC1*3)+skoSC1*(skoMC1*skoMC1*skoMC1*(-2+skoMC1*-3)+skoSC1*(skoMC1*skoMC1*skoMC1*((1/6)+skoMC1*-1)+skoSC1*skoMC1*skoMC1*skoMC1*(1/4))))>skoMC1*skoMC1*skoMC1*(-2+skoMC1*-5),skoSC1*(skoMC1*(-1+skoMC1*3)+skoSC1*(skoMC1*(-2+skoMC1*-3)+skoSC1*(skoMC1*((1/6)+skoMC1*-1)+skoSC1*skoMC1*(1/4))))>skoMC1*(-2+skoMC1*-5),skoSC1>0,skoSC1*(skoMC1*skoMC1*skoMC1+skoSC1*skoMC1*skoMC1*skoMC1)>0,skoSC1*(skoMC1*skoMC1*skoMC1*2+skoSC1*(skoMC1*skoMC1*skoMC1*-1+skoSC1*skoMC1*skoMC1*skoMC1*-1))>skoMC1*skoMC1*skoMC1*-2,skoSC1*skoMC1*skoMC1*skoMC1>skoMC1*skoMC1*skoMC1*-1,skoMC1*skoMC1*skoMC1*2>0,skoMC1>0,skoSC1*skoMC1>skoMC1*-1,skoSC1*skoMC1*skoMC1*skoMC1*2>skoMC1*skoMC1*skoMC1*-2,skoSC1*(skoMC1*skoMC1*skoMC1*skoMC1*12+skoSC1*(skoMC1*skoMC1*skoMC1*(-1+skoMC1*6)+skoSC1*(skoMC1*skoMC1*skoMC1*-1+skoSC1*(skoMC1*skoMC1*skoMC1*(1/12)+skoSC1*skoMC1*skoMC1*skoMC1*(1/12)))))>skoMC1*skoMC1*skoMC1*(-2+skoMC1*-6)]], Reals]]

% In QepcadB format:
(E skoSC1) (E skoMC1) [[(skoMC1 (2+(skoMC1 (5))))<(skoSC1 ((skoMC1 (1+(skoMC1 (-3))))+(skoSC1 ((skoMC1 (2+(skoMC1 (3))))+(skoSC1 ((skoMC1 (-1/6+skoMC1))+(skoSC1 skoMC1 (-1/4))))))))]/\[[(skoMC1 skoMC1 skoMC1 (-2+(skoMC1 (-5))))<(skoSC1 ((skoMC1 skoMC1 skoMC1 (-1+(skoMC1 (3))))+(skoSC1 ((skoMC1 skoMC1 skoMC1 (-2+(skoMC1 (-3))))+(skoSC1 ((skoMC1 skoMC1 skoMC1 (1/6+(skoMC1 (-1))))+(skoSC1 skoMC1 skoMC1 skoMC1 (1/4))))))))]/\[[(skoMC1 (-2+(skoMC1 (-5))))<(skoSC1 ((skoMC1 (-1+(skoMC1 (3))))+(skoSC1 ((skoMC1 (-2+(skoMC1 (-3))))+(skoSC1 ((skoMC1 (1/6+(skoMC1 (-1))))+(skoSC1 skoMC1 (1/4))))))))]/\[[0<skoSC1]/\[[0<(skoSC1 ((skoMC1 skoMC1 skoMC1)+(skoSC1 skoMC1 skoMC1 skoMC1)))]/\[[(skoMC1 skoMC1 skoMC1 (-2))<(skoSC1 ((skoMC1 skoMC1 skoMC1 (2))+(skoSC1 ((skoMC1 skoMC1 skoMC1 (-1))+(skoSC1 skoMC1 skoMC1 skoMC1 (-1))))))]/\[[(skoMC1 skoMC1 skoMC1 (-1))<(skoSC1 skoMC1 skoMC1 skoMC1)]/\[[0<(skoMC1 skoMC1 skoMC1 (2))]/\[[0<skoMC1]/\[[(skoMC1 (-1))<(skoSC1 skoMC1)]/\[[(skoMC1 skoMC1 skoMC1 (-2))<(skoSC1 skoMC1 skoMC1 skoMC1 (2))]/\[(skoMC1 skoMC1 skoMC1 (-2+(skoMC1 (-6))))<(skoSC1 ((skoMC1 skoMC1 skoMC1 skoMC1 (12))+(skoSC1 ((skoMC1 skoMC1 skoMC1 (-1+(skoMC1 (6))))+(skoSC1 ((skoMC1 skoMC1 skoMC1 (-1))+(skoSC1 ((skoMC1 skoMC1 skoMC1 (1/12))+(skoSC1 skoMC1 skoMC1 skoMC1 (1/12))))))))))]]]]]]]]]]]].

% In SMTLib2 format:
(declare-fun skoSC1 () Real) (declare-fun skoMC1 () Real) (assert (and (> (* skoSC1 (+ (* skoMC1 (+ 1. (* skoMC1 (- 3.)))) (* skoSC1 (+ (* skoMC1 (+ 2. (* skoMC1 3.))) (* skoSC1 (+ (* skoMC1 (+ (/ (- 1.) 6.) skoMC1)) (* skoSC1 (* skoMC1 (/ (- 1.) 4.))))))))) (* skoMC1 (+ 2. (* skoMC1 5.)))) (and (> (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (+ (- 1.) (* skoMC1 3.))))) (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (+ (- 2.) (* skoMC1 (- 3.)))))) (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (+ (/ 1. 6.) (* skoMC1 (- 1.)))))) (* skoSC1 (* skoMC1 (* skoMC1 (* skoMC1 (/ 1. 4.))))))))))) (* skoMC1 (* skoMC1 (* skoMC1 (+ (- 2.) (* skoMC1 (- 5.))))))) (and (> (* skoSC1 (+ (* skoMC1 (+ (- 1.) (* skoMC1 3.))) (* skoSC1 (+ (* skoMC1 (+ (- 2.) (* skoMC1 (- 3.)))) (* skoSC1 (+ (* skoMC1 (+ (/ 1. 6.) (* skoMC1 (- 1.)))) (* skoSC1 (* skoMC1 (/ 1. 4.))))))))) (* skoMC1 (+ (- 2.) (* skoMC1 (- 5.))))) (and (> skoSC1 0.) (and (> (* skoSC1 (+ (* skoMC1 (* skoMC1 skoMC1)) (* skoSC1 (* skoMC1 (* skoMC1 skoMC1))))) 0.) (and (> (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 2.))) (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (- 1.)))) (* skoSC1 (* skoMC1 (* skoMC1 (* skoMC1 (- 1.))))))))) (* skoMC1 (* skoMC1 (* skoMC1 (- 2.))))) (and (> (* skoSC1 (* skoMC1 (* skoMC1 skoMC1))) (* skoMC1 (* skoMC1 (* skoMC1 (- 1.))))) (and (> (* skoMC1 (* skoMC1 (* skoMC1 2.))) 0.) (and (> skoMC1 0.) (and (> (* skoSC1 skoMC1) (* skoMC1 (- 1.))) (and (> (* skoSC1 (* skoMC1 (* skoMC1 (* skoMC1 2.)))) (* skoMC1 (* skoMC1 (* skoMC1 (- 2.))))) (> (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (* skoMC1 12.)))) (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (+ (- 1.) (* skoMC1 6.))))) (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (- 1.)))) (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (/ 1. 12.)))) (* skoSC1 (* skoMC1 (* skoMC1 (* skoMC1 (/ 1. 12.))))))))))))) (* skoMC1 (* skoMC1 (* skoMC1 (+ (- 2.) (* skoMC1 (- 6.)))))))))))))))))))

% In GRF format:
(sequent " MetiTarski formula " (antecedent (> (* skoSC1 (+ (* skoMC1 (+ 1. (* skoMC1 (- 3.)))) (* skoSC1 (+ (* skoMC1 (+ 2. (* skoMC1 3.))) (* skoSC1 (+ (* skoMC1 (+ (/ (- 1.) 6.) skoMC1)) (* skoSC1 (* skoMC1 (/ (- 1.) 4.))))))))) (* skoMC1 (+ 2. (* skoMC1 5.)))) (> (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (+ (- 1.) (* skoMC1 3.))))) (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (+ (- 2.) (* skoMC1 (- 3.)))))) (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (+ (/ 1. 6.) (* skoMC1 (- 1.)))))) (* skoSC1 (* skoMC1 (* skoMC1 (* skoMC1 (/ 1. 4.))))))))))) (* skoMC1 (* skoMC1 (* skoMC1 (+ (- 2.) (* skoMC1 (- 5.))))))) (> (* skoSC1 (+ (* skoMC1 (+ (- 1.) (* skoMC1 3.))) (* skoSC1 (+ (* skoMC1 (+ (- 2.) (* skoMC1 (- 3.)))) (* skoSC1 (+ (* skoMC1 (+ (/ 1. 6.) (* skoMC1 (- 1.)))) (* skoSC1 (* skoMC1 (/ 1. 4.))))))))) (* skoMC1 (+ (- 2.) (* skoMC1 (- 5.))))) (> skoSC1 0.) (> (* skoSC1 (+ (* skoMC1 (* skoMC1 skoMC1)) (* skoSC1 (* skoMC1 (* skoMC1 skoMC1))))) 0.) (> (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 2.))) (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (- 1.)))) (* skoSC1 (* skoMC1 (* skoMC1 (* skoMC1 (- 1.))))))))) (* skoMC1 (* skoMC1 (* skoMC1 (- 2.))))) (> (* skoSC1 (* skoMC1 (* skoMC1 skoMC1))) (* skoMC1 (* skoMC1 (* skoMC1 (- 1.))))) (> (* skoMC1 (* skoMC1 (* skoMC1 2.))) 0.) (> skoMC1 0.) (> (* skoSC1 skoMC1) (* skoMC1 (- 1.))) (> (* skoSC1 (* skoMC1 (* skoMC1 (* skoMC1 2.)))) (* skoMC1 (* skoMC1 (* skoMC1 (- 2.)))))) (succedent (<= (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (* skoMC1 12.)))) (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (+ (- 1.) (* skoMC1 6.))))) (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (- 1.)))) (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (/ 1. 12.)))) (* skoSC1 (* skoMC1 (* skoMC1 (* skoMC1 (/ 1. 12.))))))))))))) (* skoMC1 (* skoMC1 (* skoMC1 (+ (- 2.) (* skoMC1 (- 6.)))))))))
-----[end problem]-----

-----[begin problem]-----
% In Mathematica format:
Timing[Resolve[Exists[{skoSC1,skoMC1}, And[0<=skoMC1,skoSC1*(skoMC1*skoMC1*skoMC1*(-1+skoMC1*3)+skoSC1*(skoMC1*skoMC1*skoMC1*(-2+skoMC1*-3)+skoSC1*(skoMC1*skoMC1*skoMC1*((1/6)+skoMC1*-1)+skoSC1*skoMC1*skoMC1*skoMC1*(1/4))))>skoMC1*skoMC1*skoMC1*(-2+skoMC1*-5),skoSC1*(skoMC1*(-1+skoMC1*3)+skoSC1*(skoMC1*(-2+skoMC1*-3)+skoSC1*(skoMC1*((1/6)+skoMC1*-1)+skoSC1*skoMC1*(1/4))))>skoMC1*(-2+skoMC1*-5),skoSC1>0,skoSC1*(skoMC1*skoMC1*skoMC1*-2+skoSC1*(skoMC1*skoMC1*skoMC1+skoSC1*skoMC1*skoMC1*skoMC1))<=skoMC1*skoMC1*skoMC1*2,skoSC1*(skoMC1*skoMC1*skoMC1+skoSC1*skoMC1*skoMC1*skoMC1)>0,skoSC1*(skoMC1*skoMC1*skoMC1*2+skoSC1*(skoMC1*skoMC1*skoMC1*-1+skoSC1*skoMC1*skoMC1*skoMC1*-1))>skoMC1*skoMC1*skoMC1*-2,skoSC1*(skoMC1*skoMC1*skoMC1*-1+skoSC1*skoMC1*skoMC1*skoMC1*-1)<=0,skoSC1*skoMC1*skoMC1*skoMC1*-1<=skoMC1*skoMC1*skoMC1,skoSC1*skoMC1*skoMC1*skoMC1>skoMC1*skoMC1*skoMC1*-1,skoMC1*skoMC1*skoMC1*-2<=0,skoMC1*skoMC1*skoMC1*2>0,skoSC1<=(5/4),2<=skoMC1,0<=skoSC1,skoMC1>0,0<=skoMC1,skoSC1*skoMC1>skoMC1*-1,skoSC1*skoMC1*-1<=skoMC1,skoSC1*skoMC1*skoMC1*skoMC1*2>skoMC1*skoMC1*skoMC1*-2,skoSC1*skoMC1*skoMC1*skoMC1*-2<=skoMC1*skoMC1*skoMC1*2,skoSC1*(skoMC1*skoMC1*skoMC1*skoMC1*12+skoSC1*(skoMC1*skoMC1*skoMC1*(-1+skoMC1*6)+skoSC1*(skoMC1*skoMC1*skoMC1*-1+skoSC1*(skoMC1*skoMC1*skoMC1*(1/12)+skoSC1*skoMC1*skoMC1*skoMC1*(1/12)))))>skoMC1*skoMC1*skoMC1*(-2+skoMC1*-6),skoSC1*(skoMC1*skoMC1*skoMC1*skoMC1*-12+skoSC1*(skoMC1*skoMC1*skoMC1*(1+skoMC1*-6)+skoSC1*(skoMC1*skoMC1*skoMC1+skoSC1*(skoMC1*skoMC1*skoMC1*(-1/12)+skoSC1*skoMC1*skoMC1*skoMC1*(-1/12)))))<=skoMC1*skoMC1*skoMC1*(2+skoMC1*6)]], Reals]]

% In QepcadB format:
(E skoSC1) (E skoMC1) [[0<=skoMC1]/\[[(skoMC1 skoMC1 skoMC1 (-2+(skoMC1 (-5))))<(skoSC1 ((skoMC1 skoMC1 skoMC1 (-1+(skoMC1 (3))))+(skoSC1 ((skoMC1 skoMC1 skoMC1 (-2+(skoMC1 (-3))))+(skoSC1 ((skoMC1 skoMC1 skoMC1 (1/6+(skoMC1 (-1))))+(skoSC1 skoMC1 skoMC1 skoMC1 (1/4))))))))]/\[[(skoMC1 (-2+(skoMC1 (-5))))<(skoSC1 ((skoMC1 (-1+(skoMC1 (3))))+(skoSC1 ((skoMC1 (-2+(skoMC1 (-3))))+(skoSC1 ((skoMC1 (1/6+(skoMC1 (-1))))+(skoSC1 skoMC1 (1/4))))))))]/\[[0<skoSC1]/\[[(skoSC1 ((skoMC1 skoMC1 skoMC1 (-2))+(skoSC1 ((skoMC1 skoMC1 skoMC1)+(skoSC1 skoMC1 skoMC1 skoMC1)))))<=(skoMC1 skoMC1 skoMC1 (2))]/\[[0<(skoSC1 ((skoMC1 skoMC1 skoMC1)+(skoSC1 skoMC1 skoMC1 skoMC1)))]/\[[(skoMC1 skoMC1 skoMC1 (-2))<(skoSC1 ((skoMC1 skoMC1 skoMC1 (2))+(skoSC1 ((skoMC1 skoMC1 skoMC1 (-1))+(skoSC1 skoMC1 skoMC1 skoMC1 (-1))))))]/\[[(skoSC1 ((skoMC1 skoMC1 skoMC1 (-1))+(skoSC1 skoMC1 skoMC1 skoMC1 (-1))))<=0]/\[[(skoSC1 skoMC1 skoMC1 skoMC1 (-1))<=(skoMC1 skoMC1 skoMC1)]/\[[(skoMC1 skoMC1 skoMC1 (-1))<(skoSC1 skoMC1 skoMC1 skoMC1)]/\[[(skoMC1 skoMC1 skoMC1 (-2))<=0]/\[[0<(skoMC1 skoMC1 skoMC1 (2))]/\[[skoSC1<=5/4]/\[[2<=skoMC1]/\[[0<=skoSC1]/\[[0<skoMC1]/\[[0<=skoMC1]/\[[(skoMC1 (-1))<(skoSC1 skoMC1)]/\[[(skoSC1 skoMC1 (-1))<=skoMC1]/\[[(skoMC1 skoMC1 skoMC1 (-2))<(skoSC1 skoMC1 skoMC1 skoMC1 (2))]/\[[(skoSC1 skoMC1 skoMC1 skoMC1 (-2))<=(skoMC1 skoMC1 skoMC1 (2))]/\[[(skoMC1 skoMC1 skoMC1 (-2+(skoMC1 (-6))))<(skoSC1 ((skoMC1 skoMC1 skoMC1 skoMC1 (12))+(skoSC1 ((skoMC1 skoMC1 skoMC1 (-1+(skoMC1 (6))))+(skoSC1 ((skoMC1 skoMC1 skoMC1 (-1))+(skoSC1 ((skoMC1 skoMC1 skoMC1 (1/12))+(skoSC1 skoMC1 skoMC1 skoMC1 (1/12))))))))))]/\[(skoSC1 ((skoMC1 skoMC1 skoMC1 skoMC1 (-12))+(skoSC1 ((skoMC1 skoMC1 skoMC1 (1+(skoMC1 (-6))))+(skoSC1 ((skoMC1 skoMC1 skoMC1)+(skoSC1 ((skoMC1 skoMC1 skoMC1 (-1/12))+(skoSC1 skoMC1 skoMC1 skoMC1 (-1/12))))))))))<=(skoMC1 skoMC1 skoMC1 (2+(skoMC1 (6))))]]]]]]]]]]]]]]]]]]]]]]].

% In SMTLib2 format:
(declare-fun skoSC1 () Real) (declare-fun skoMC1 () Real) (assert (and (<= 0. skoMC1) (and (> (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (+ (- 1.) (* skoMC1 3.))))) (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (+ (- 2.) (* skoMC1 (- 3.)))))) (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (+ (/ 1. 6.) (* skoMC1 (- 1.)))))) (* skoSC1 (* skoMC1 (* skoMC1 (* skoMC1 (/ 1. 4.))))))))))) (* skoMC1 (* skoMC1 (* skoMC1 (+ (- 2.) (* skoMC1 (- 5.))))))) (and (> (* skoSC1 (+ (* skoMC1 (+ (- 1.) (* skoMC1 3.))) (* skoSC1 (+ (* skoMC1 (+ (- 2.) (* skoMC1 (- 3.)))) (* skoSC1 (+ (* skoMC1 (+ (/ 1. 6.) (* skoMC1 (- 1.)))) (* skoSC1 (* skoMC1 (/ 1. 4.))))))))) (* skoMC1 (+ (- 2.) (* skoMC1 (- 5.))))) (and (> skoSC1 0.) (and (<= (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (- 2.)))) (* skoSC1 (+ (* skoMC1 (* skoMC1 skoMC1)) (* skoSC1 (* skoMC1 (* skoMC1 skoMC1))))))) (* skoMC1 (* skoMC1 (* skoMC1 2.)))) (and (> (* skoSC1 (+ (* skoMC1 (* skoMC1 skoMC1)) (* skoSC1 (* skoMC1 (* skoMC1 skoMC1))))) 0.) (and (> (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 2.))) (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (- 1.)))) (* skoSC1 (* skoMC1 (* skoMC1 (* skoMC1 (- 1.))))))))) (* skoMC1 (* skoMC1 (* skoMC1 (- 2.))))) (and (<= (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (- 1.)))) (* skoSC1 (* skoMC1 (* skoMC1 (* skoMC1 (- 1.))))))) 0.) (and (<= (* skoSC1 (* skoMC1 (* skoMC1 (* skoMC1 (- 1.))))) (* skoMC1 (* skoMC1 skoMC1))) (and (> (* skoSC1 (* skoMC1 (* skoMC1 skoMC1))) (* skoMC1 (* skoMC1 (* skoMC1 (- 1.))))) (and (<= (* skoMC1 (* skoMC1 (* skoMC1 (- 2.)))) 0.) (and (> (* skoMC1 (* skoMC1 (* skoMC1 2.))) 0.) (and (<= skoSC1 (/ 5. 4.)) (and (<= 2. skoMC1) (and (<= 0. skoSC1) (and (> skoMC1 0.) (and (<= 0. skoMC1) (and (> (* skoSC1 skoMC1) (* skoMC1 (- 1.))) (and (<= (* skoSC1 (* skoMC1 (- 1.))) skoMC1) (and (> (* skoSC1 (* skoMC1 (* skoMC1 (* skoMC1 2.)))) (* skoMC1 (* skoMC1 (* skoMC1 (- 2.))))) (and (<= (* skoSC1 (* skoMC1 (* skoMC1 (* skoMC1 (- 2.))))) (* skoMC1 (* skoMC1 (* skoMC1 2.)))) (and (> (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (* skoMC1 12.)))) (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (+ (- 1.) (* skoMC1 6.))))) (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (- 1.)))) (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (/ 1. 12.)))) (* skoSC1 (* skoMC1 (* skoMC1 (* skoMC1 (/ 1. 12.))))))))))))) (* skoMC1 (* skoMC1 (* skoMC1 (+ (- 2.) (* skoMC1 (- 6.))))))) (<= (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (* skoMC1 (- 12.))))) (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (+ 1. (* skoMC1 (- 6.)))))) (* skoSC1 (+ (* skoMC1 (* skoMC1 skoMC1)) (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (/ (- 1.) 12.)))) (* skoSC1 (* skoMC1 (* skoMC1 (* skoMC1 (/ (- 1.) 12.))))))))))))) (* skoMC1 (* skoMC1 (* skoMC1 (+ 2. (* skoMC1 6.)))))))))))))))))))))))))))))

% In GRF format:
(sequent " MetiTarski formula " (antecedent (<= 0. skoMC1) (> (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (+ (- 1.) (* skoMC1 3.))))) (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (+ (- 2.) (* skoMC1 (- 3.)))))) (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (+ (/ 1. 6.) (* skoMC1 (- 1.)))))) (* skoSC1 (* skoMC1 (* skoMC1 (* skoMC1 (/ 1. 4.))))))))))) (* skoMC1 (* skoMC1 (* skoMC1 (+ (- 2.) (* skoMC1 (- 5.))))))) (> (* skoSC1 (+ (* skoMC1 (+ (- 1.) (* skoMC1 3.))) (* skoSC1 (+ (* skoMC1 (+ (- 2.) (* skoMC1 (- 3.)))) (* skoSC1 (+ (* skoMC1 (+ (/ 1. 6.) (* skoMC1 (- 1.)))) (* skoSC1 (* skoMC1 (/ 1. 4.))))))))) (* skoMC1 (+ (- 2.) (* skoMC1 (- 5.))))) (> skoSC1 0.) (<= (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (- 2.)))) (* skoSC1 (+ (* skoMC1 (* skoMC1 skoMC1)) (* skoSC1 (* skoMC1 (* skoMC1 skoMC1))))))) (* skoMC1 (* skoMC1 (* skoMC1 2.)))) (> (* skoSC1 (+ (* skoMC1 (* skoMC1 skoMC1)) (* skoSC1 (* skoMC1 (* skoMC1 skoMC1))))) 0.) (> (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 2.))) (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (- 1.)))) (* skoSC1 (* skoMC1 (* skoMC1 (* skoMC1 (- 1.))))))))) (* skoMC1 (* skoMC1 (* skoMC1 (- 2.))))) (<= (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (- 1.)))) (* skoSC1 (* skoMC1 (* skoMC1 (* skoMC1 (- 1.))))))) 0.) (<= (* skoSC1 (* skoMC1 (* skoMC1 (* skoMC1 (- 1.))))) (* skoMC1 (* skoMC1 skoMC1))) (> (* skoSC1 (* skoMC1 (* skoMC1 skoMC1))) (* skoMC1 (* skoMC1 (* skoMC1 (- 1.))))) (<= (* skoMC1 (* skoMC1 (* skoMC1 (- 2.)))) 0.) (> (* skoMC1 (* skoMC1 (* skoMC1 2.))) 0.) (<= skoSC1 (/ 5. 4.)) (<= 2. skoMC1) (<= 0. skoSC1) (> skoMC1 0.) (<= 0. skoMC1) (> (* skoSC1 skoMC1) (* skoMC1 (- 1.))) (<= (* skoSC1 (* skoMC1 (- 1.))) skoMC1) (> (* skoSC1 (* skoMC1 (* skoMC1 (* skoMC1 2.)))) (* skoMC1 (* skoMC1 (* skoMC1 (- 2.))))) (<= (* skoSC1 (* skoMC1 (* skoMC1 (* skoMC1 (- 2.))))) (* skoMC1 (* skoMC1 (* skoMC1 2.)))) (> (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (* skoMC1 12.)))) (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (+ (- 1.) (* skoMC1 6.))))) (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (- 1.)))) (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (/ 1. 12.)))) (* skoSC1 (* skoMC1 (* skoMC1 (* skoMC1 (/ 1. 12.))))))))))))) (* skoMC1 (* skoMC1 (* skoMC1 (+ (- 2.) (* skoMC1 (- 6.)))))))) (succedent (> (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (* skoMC1 (- 12.))))) (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (+ 1. (* skoMC1 (- 6.)))))) (* skoSC1 (+ (* skoMC1 (* skoMC1 skoMC1)) (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (/ (- 1.) 12.)))) (* skoSC1 (* skoMC1 (* skoMC1 (* skoMC1 (/ (- 1.) 12.))))))))))))) (* skoMC1 (* skoMC1 (* skoMC1 (+ 2. (* skoMC1 6.))))))))
-----[end problem]-----

-----[begin problem]-----
% In Mathematica format:
Timing[Resolve[Exists[{skoSC1,skoMC1}, And[skoSC1*(skoMC1*(1+skoMC1*-3)+skoSC1*(skoMC1*(2+skoMC1*3)+skoSC1*(skoMC1*((-1/6)+skoMC1)+skoSC1*skoMC1*(-1/4))))<=skoMC1*(2+skoMC1*5),skoSC1*(skoMC1*skoMC1*skoMC1*(-1+skoMC1*3)+skoSC1*(skoMC1*skoMC1*skoMC1*(-2+skoMC1*-3)+skoSC1*(skoMC1*skoMC1*skoMC1*((1/6)+skoMC1*-1)+skoSC1*skoMC1*skoMC1*skoMC1*(1/4))))>skoMC1*skoMC1*skoMC1*(-2+skoMC1*-5),skoSC1*(skoMC1*(-1+skoMC1*3)+skoSC1*(skoMC1*(-2+skoMC1*-3)+skoSC1*(skoMC1*((1/6)+skoMC1*-1)+skoSC1*skoMC1*(1/4))))>skoMC1*(-2+skoMC1*-5),skoSC1>0,skoSC1*(skoMC1*skoMC1*skoMC1*-2+skoSC1*(skoMC1*skoMC1*skoMC1+skoSC1*skoMC1*skoMC1*skoMC1))<=skoMC1*skoMC1*skoMC1*2,skoSC1*(skoMC1*skoMC1*skoMC1+skoSC1*skoMC1*skoMC1*skoMC1)>0,skoSC1*(skoMC1*skoMC1*skoMC1*2+skoSC1*(skoMC1*skoMC1*skoMC1*-1+skoSC1*skoMC1*skoMC1*skoMC1*-1))>skoMC1*skoMC1*skoMC1*-2,skoSC1*(skoMC1*skoMC1*skoMC1*-1+skoSC1*skoMC1*skoMC1*skoMC1*-1)<=0,skoSC1*skoMC1*skoMC1*skoMC1*-1<=skoMC1*skoMC1*skoMC1,skoSC1*skoMC1*skoMC1*skoMC1>skoMC1*skoMC1*skoMC1*-1,skoMC1*skoMC1*skoMC1*-2<=0,skoMC1*skoMC1*skoMC1*2>0,skoSC1<=(5/4),2<=skoMC1,0<=skoSC1,skoMC1>0,0<=skoMC1,skoSC1*skoMC1>skoMC1*-1,skoSC1*skoMC1*-1<=skoMC1,skoSC1*skoMC1*skoMC1*skoMC1*2>skoMC1*skoMC1*skoMC1*-2,skoSC1*skoMC1*skoMC1*skoMC1*-2<=skoMC1*skoMC1*skoMC1*2,skoSC1*(skoMC1*skoMC1*skoMC1*skoMC1*12+skoSC1*(skoMC1*skoMC1*skoMC1*(-1+skoMC1*6)+skoSC1*(skoMC1*skoMC1*skoMC1*-1+skoSC1*(skoMC1*skoMC1*skoMC1*(1/12)+skoSC1*skoMC1*skoMC1*skoMC1*(1/12)))))>skoMC1*skoMC1*skoMC1*(-2+skoMC1*-6),skoSC1*(skoMC1*skoMC1*skoMC1*skoMC1*-12+skoSC1*(skoMC1*skoMC1*skoMC1*(1+skoMC1*-6)+skoSC1*(skoMC1*skoMC1*skoMC1+skoSC1*(skoMC1*skoMC1*skoMC1*(-1/12)+skoSC1*skoMC1*skoMC1*skoMC1*(-1/12)))))<=skoMC1*skoMC1*skoMC1*(2+skoMC1*6)]], Reals]]

% In QepcadB format:
(E skoSC1) (E skoMC1) [[(skoSC1 ((skoMC1 (1+(skoMC1 (-3))))+(skoSC1 ((skoMC1 (2+(skoMC1 (3))))+(skoSC1 ((skoMC1 (-1/6+skoMC1))+(skoSC1 skoMC1 (-1/4))))))))<=(skoMC1 (2+(skoMC1 (5))))]/\[[(skoMC1 skoMC1 skoMC1 (-2+(skoMC1 (-5))))<(skoSC1 ((skoMC1 skoMC1 skoMC1 (-1+(skoMC1 (3))))+(skoSC1 ((skoMC1 skoMC1 skoMC1 (-2+(skoMC1 (-3))))+(skoSC1 ((skoMC1 skoMC1 skoMC1 (1/6+(skoMC1 (-1))))+(skoSC1 skoMC1 skoMC1 skoMC1 (1/4))))))))]/\[[(skoMC1 (-2+(skoMC1 (-5))))<(skoSC1 ((skoMC1 (-1+(skoMC1 (3))))+(skoSC1 ((skoMC1 (-2+(skoMC1 (-3))))+(skoSC1 ((skoMC1 (1/6+(skoMC1 (-1))))+(skoSC1 skoMC1 (1/4))))))))]/\[[0<skoSC1]/\[[(skoSC1 ((skoMC1 skoMC1 skoMC1 (-2))+(skoSC1 ((skoMC1 skoMC1 skoMC1)+(skoSC1 skoMC1 skoMC1 skoMC1)))))<=(skoMC1 skoMC1 skoMC1 (2))]/\[[0<(skoSC1 ((skoMC1 skoMC1 skoMC1)+(skoSC1 skoMC1 skoMC1 skoMC1)))]/\[[(skoMC1 skoMC1 skoMC1 (-2))<(skoSC1 ((skoMC1 skoMC1 skoMC1 (2))+(skoSC1 ((skoMC1 skoMC1 skoMC1 (-1))+(skoSC1 skoMC1 skoMC1 skoMC1 (-1))))))]/\[[(skoSC1 ((skoMC1 skoMC1 skoMC1 (-1))+(skoSC1 skoMC1 skoMC1 skoMC1 (-1))))<=0]/\[[(skoSC1 skoMC1 skoMC1 skoMC1 (-1))<=(skoMC1 skoMC1 skoMC1)]/\[[(skoMC1 skoMC1 skoMC1 (-1))<(skoSC1 skoMC1 skoMC1 skoMC1)]/\[[(skoMC1 skoMC1 skoMC1 (-2))<=0]/\[[0<(skoMC1 skoMC1 skoMC1 (2))]/\[[skoSC1<=5/4]/\[[2<=skoMC1]/\[[0<=skoSC1]/\[[0<skoMC1]/\[[0<=skoMC1]/\[[(skoMC1 (-1))<(skoSC1 skoMC1)]/\[[(skoSC1 skoMC1 (-1))<=skoMC1]/\[[(skoMC1 skoMC1 skoMC1 (-2))<(skoSC1 skoMC1 skoMC1 skoMC1 (2))]/\[[(skoSC1 skoMC1 skoMC1 skoMC1 (-2))<=(skoMC1 skoMC1 skoMC1 (2))]/\[[(skoMC1 skoMC1 skoMC1 (-2+(skoMC1 (-6))))<(skoSC1 ((skoMC1 skoMC1 skoMC1 skoMC1 (12))+(skoSC1 ((skoMC1 skoMC1 skoMC1 (-1+(skoMC1 (6))))+(skoSC1 ((skoMC1 skoMC1 skoMC1 (-1))+(skoSC1 ((skoMC1 skoMC1 skoMC1 (1/12))+(skoSC1 skoMC1 skoMC1 skoMC1 (1/12))))))))))]/\[(skoSC1 ((skoMC1 skoMC1 skoMC1 skoMC1 (-12))+(skoSC1 ((skoMC1 skoMC1 skoMC1 (1+(skoMC1 (-6))))+(skoSC1 ((skoMC1 skoMC1 skoMC1)+(skoSC1 ((skoMC1 skoMC1 skoMC1 (-1/12))+(skoSC1 skoMC1 skoMC1 skoMC1 (-1/12))))))))))<=(skoMC1 skoMC1 skoMC1 (2+(skoMC1 (6))))]]]]]]]]]]]]]]]]]]]]]]].

% In SMTLib2 format:
(declare-fun skoSC1 () Real) (declare-fun skoMC1 () Real) (assert (and (<= (* skoSC1 (+ (* skoMC1 (+ 1. (* skoMC1 (- 3.)))) (* skoSC1 (+ (* skoMC1 (+ 2. (* skoMC1 3.))) (* skoSC1 (+ (* skoMC1 (+ (/ (- 1.) 6.) skoMC1)) (* skoSC1 (* skoMC1 (/ (- 1.) 4.))))))))) (* skoMC1 (+ 2. (* skoMC1 5.)))) (and (> (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (+ (- 1.) (* skoMC1 3.))))) (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (+ (- 2.) (* skoMC1 (- 3.)))))) (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (+ (/ 1. 6.) (* skoMC1 (- 1.)))))) (* skoSC1 (* skoMC1 (* skoMC1 (* skoMC1 (/ 1. 4.))))))))))) (* skoMC1 (* skoMC1 (* skoMC1 (+ (- 2.) (* skoMC1 (- 5.))))))) (and (> (* skoSC1 (+ (* skoMC1 (+ (- 1.) (* skoMC1 3.))) (* skoSC1 (+ (* skoMC1 (+ (- 2.) (* skoMC1 (- 3.)))) (* skoSC1 (+ (* skoMC1 (+ (/ 1. 6.) (* skoMC1 (- 1.)))) (* skoSC1 (* skoMC1 (/ 1. 4.))))))))) (* skoMC1 (+ (- 2.) (* skoMC1 (- 5.))))) (and (> skoSC1 0.) (and (<= (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (- 2.)))) (* skoSC1 (+ (* skoMC1 (* skoMC1 skoMC1)) (* skoSC1 (* skoMC1 (* skoMC1 skoMC1))))))) (* skoMC1 (* skoMC1 (* skoMC1 2.)))) (and (> (* skoSC1 (+ (* skoMC1 (* skoMC1 skoMC1)) (* skoSC1 (* skoMC1 (* skoMC1 skoMC1))))) 0.) (and (> (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 2.))) (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (- 1.)))) (* skoSC1 (* skoMC1 (* skoMC1 (* skoMC1 (- 1.))))))))) (* skoMC1 (* skoMC1 (* skoMC1 (- 2.))))) (and (<= (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (- 1.)))) (* skoSC1 (* skoMC1 (* skoMC1 (* skoMC1 (- 1.))))))) 0.) (and (<= (* skoSC1 (* skoMC1 (* skoMC1 (* skoMC1 (- 1.))))) (* skoMC1 (* skoMC1 skoMC1))) (and (> (* skoSC1 (* skoMC1 (* skoMC1 skoMC1))) (* skoMC1 (* skoMC1 (* skoMC1 (- 1.))))) (and (<= (* skoMC1 (* skoMC1 (* skoMC1 (- 2.)))) 0.) (and (> (* skoMC1 (* skoMC1 (* skoMC1 2.))) 0.) (and (<= skoSC1 (/ 5. 4.)) (and (<= 2. skoMC1) (and (<= 0. skoSC1) (and (> skoMC1 0.) (and (<= 0. skoMC1) (and (> (* skoSC1 skoMC1) (* skoMC1 (- 1.))) (and (<= (* skoSC1 (* skoMC1 (- 1.))) skoMC1) (and (> (* skoSC1 (* skoMC1 (* skoMC1 (* skoMC1 2.)))) (* skoMC1 (* skoMC1 (* skoMC1 (- 2.))))) (and (<= (* skoSC1 (* skoMC1 (* skoMC1 (* skoMC1 (- 2.))))) (* skoMC1 (* skoMC1 (* skoMC1 2.)))) (and (> (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (* skoMC1 12.)))) (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (+ (- 1.) (* skoMC1 6.))))) (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (- 1.)))) (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (/ 1. 12.)))) (* skoSC1 (* skoMC1 (* skoMC1 (* skoMC1 (/ 1. 12.))))))))))))) (* skoMC1 (* skoMC1 (* skoMC1 (+ (- 2.) (* skoMC1 (- 6.))))))) (<= (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (* skoMC1 (- 12.))))) (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (+ 1. (* skoMC1 (- 6.)))))) (* skoSC1 (+ (* skoMC1 (* skoMC1 skoMC1)) (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (/ (- 1.) 12.)))) (* skoSC1 (* skoMC1 (* skoMC1 (* skoMC1 (/ (- 1.) 12.))))))))))))) (* skoMC1 (* skoMC1 (* skoMC1 (+ 2. (* skoMC1 6.)))))))))))))))))))))))))))))

% In GRF format:
(sequent " MetiTarski formula " (antecedent (<= (* skoSC1 (+ (* skoMC1 (+ 1. (* skoMC1 (- 3.)))) (* skoSC1 (+ (* skoMC1 (+ 2. (* skoMC1 3.))) (* skoSC1 (+ (* skoMC1 (+ (/ (- 1.) 6.) skoMC1)) (* skoSC1 (* skoMC1 (/ (- 1.) 4.))))))))) (* skoMC1 (+ 2. (* skoMC1 5.)))) (> (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (+ (- 1.) (* skoMC1 3.))))) (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (+ (- 2.) (* skoMC1 (- 3.)))))) (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (+ (/ 1. 6.) (* skoMC1 (- 1.)))))) (* skoSC1 (* skoMC1 (* skoMC1 (* skoMC1 (/ 1. 4.))))))))))) (* skoMC1 (* skoMC1 (* skoMC1 (+ (- 2.) (* skoMC1 (- 5.))))))) (> (* skoSC1 (+ (* skoMC1 (+ (- 1.) (* skoMC1 3.))) (* skoSC1 (+ (* skoMC1 (+ (- 2.) (* skoMC1 (- 3.)))) (* skoSC1 (+ (* skoMC1 (+ (/ 1. 6.) (* skoMC1 (- 1.)))) (* skoSC1 (* skoMC1 (/ 1. 4.))))))))) (* skoMC1 (+ (- 2.) (* skoMC1 (- 5.))))) (> skoSC1 0.) (<= (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (- 2.)))) (* skoSC1 (+ (* skoMC1 (* skoMC1 skoMC1)) (* skoSC1 (* skoMC1 (* skoMC1 skoMC1))))))) (* skoMC1 (* skoMC1 (* skoMC1 2.)))) (> (* skoSC1 (+ (* skoMC1 (* skoMC1 skoMC1)) (* skoSC1 (* skoMC1 (* skoMC1 skoMC1))))) 0.) (> (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 2.))) (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (- 1.)))) (* skoSC1 (* skoMC1 (* skoMC1 (* skoMC1 (- 1.))))))))) (* skoMC1 (* skoMC1 (* skoMC1 (- 2.))))) (<= (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (- 1.)))) (* skoSC1 (* skoMC1 (* skoMC1 (* skoMC1 (- 1.))))))) 0.) (<= (* skoSC1 (* skoMC1 (* skoMC1 (* skoMC1 (- 1.))))) (* skoMC1 (* skoMC1 skoMC1))) (> (* skoSC1 (* skoMC1 (* skoMC1 skoMC1))) (* skoMC1 (* skoMC1 (* skoMC1 (- 1.))))) (<= (* skoMC1 (* skoMC1 (* skoMC1 (- 2.)))) 0.) (> (* skoMC1 (* skoMC1 (* skoMC1 2.))) 0.) (<= skoSC1 (/ 5. 4.)) (<= 2. skoMC1) (<= 0. skoSC1) (> skoMC1 0.) (<= 0. skoMC1) (> (* skoSC1 skoMC1) (* skoMC1 (- 1.))) (<= (* skoSC1 (* skoMC1 (- 1.))) skoMC1) (> (* skoSC1 (* skoMC1 (* skoMC1 (* skoMC1 2.)))) (* skoMC1 (* skoMC1 (* skoMC1 (- 2.))))) (<= (* skoSC1 (* skoMC1 (* skoMC1 (* skoMC1 (- 2.))))) (* skoMC1 (* skoMC1 (* skoMC1 2.)))) (> (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (* skoMC1 12.)))) (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (+ (- 1.) (* skoMC1 6.))))) (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (- 1.)))) (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (/ 1. 12.)))) (* skoSC1 (* skoMC1 (* skoMC1 (* skoMC1 (/ 1. 12.))))))))))))) (* skoMC1 (* skoMC1 (* skoMC1 (+ (- 2.) (* skoMC1 (- 6.)))))))) (succedent (> (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (* skoMC1 (- 12.))))) (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (+ 1. (* skoMC1 (- 6.)))))) (* skoSC1 (+ (* skoMC1 (* skoMC1 skoMC1)) (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (/ (- 1.) 12.)))) (* skoSC1 (* skoMC1 (* skoMC1 (* skoMC1 (/ (- 1.) 12.))))))))))))) (* skoMC1 (* skoMC1 (* skoMC1 (+ 2. (* skoMC1 6.))))))))
-----[end problem]-----

-----[begin problem]-----
% In Mathematica format:
Timing[Resolve[Exists[{skoSC1,skoMC1}, And[skoSC1*(skoMC1*(1+skoMC1*-3)+skoSC1*(skoMC1*(2+skoMC1*3)+skoSC1*(skoMC1*((-1/6)+skoMC1)+skoSC1*(skoMC1*(-1/4)+skoSC1*skoSC1*(skoMC1*(1/360)+skoSC1*skoSC1*(skoMC1*(-1/20160)+skoSC1*skoSC1*(skoMC1*(1/1814400)+skoSC1*skoSC1*skoMC1*(-1/239500800))))))))<=skoMC1*(2+skoMC1*5),skoMC1>0,skoSC1*(skoMC1*(1+skoMC1*-3)+skoSC1*(skoMC1*(2+skoMC1*3)+skoSC1*(skoMC1*((-1/6)+skoMC1)+skoSC1*skoMC1*(-1/4))))<=skoMC1*(2+skoMC1*5),skoSC1*(skoMC1*skoMC1*skoMC1*(-1+skoMC1*3)+skoSC1*(skoMC1*skoMC1*skoMC1*(-2+skoMC1*-3)+skoSC1*(skoMC1*skoMC1*skoMC1*((1/6)+skoMC1*-1)+skoSC1*skoMC1*skoMC1*skoMC1*(1/4))))>skoMC1*skoMC1*skoMC1*(-2+skoMC1*-5),skoSC1*(skoMC1*(-1+skoMC1*3)+skoSC1*(skoMC1*(-2+skoMC1*-3)+skoSC1*(skoMC1*((1/6)+skoMC1*-1)+skoSC1*skoMC1*(1/4))))>skoMC1*(-2+skoMC1*-5),skoSC1>0,skoSC1*(skoMC1*skoMC1*skoMC1*-2+skoSC1*(skoMC1*skoMC1*skoMC1+skoSC1*skoMC1*skoMC1*skoMC1))<=skoMC1*skoMC1*skoMC1*2,skoSC1*(skoMC1*skoMC1*skoMC1+skoSC1*skoMC1*skoMC1*skoMC1)>0,skoSC1*(skoMC1*skoMC1*skoMC1*2+skoSC1*(skoMC1*skoMC1*skoMC1*-1+skoSC1*skoMC1*skoMC1*skoMC1*-1))>skoMC1*skoMC1*skoMC1*-2,skoSC1*(skoMC1*skoMC1*skoMC1*-1+skoSC1*skoMC1*skoMC1*skoMC1*-1)<=0,skoSC1*skoMC1*skoMC1*skoMC1*-1<=skoMC1*skoMC1*skoMC1,skoSC1*skoMC1*skoMC1*skoMC1>skoMC1*skoMC1*skoMC1*-1,skoMC1*skoMC1*skoMC1*-2<=0,skoMC1*skoMC1*skoMC1*2>0,skoSC1<=(5/4),2<=skoMC1,0<=skoSC1,skoMC1>0,0<=skoMC1,skoSC1*skoMC1>skoMC1*-1,skoSC1*skoMC1*-1<=skoMC1,skoSC1*skoMC1*skoMC1*skoMC1*2>skoMC1*skoMC1*skoMC1*-2,skoSC1*skoMC1*skoMC1*skoMC1*-2<=skoMC1*skoMC1*skoMC1*2,skoSC1*(skoMC1*skoMC1*skoMC1*skoMC1*12+skoSC1*(skoMC1*skoMC1*skoMC1*(-1+skoMC1*6)+skoSC1*(skoMC1*skoMC1*skoMC1*-1+skoSC1*(skoMC1*skoMC1*skoMC1*(1/12)+skoSC1*skoMC1*skoMC1*skoMC1*(1/12)))))>skoMC1*skoMC1*skoMC1*(-2+skoMC1*-6),skoSC1*(skoMC1*skoMC1*skoMC1*skoMC1*-12+skoSC1*(skoMC1*skoMC1*skoMC1*(1+skoMC1*-6)+skoSC1*(skoMC1*skoMC1*skoMC1+skoSC1*(skoMC1*skoMC1*skoMC1*(-1/12)+skoSC1*skoMC1*skoMC1*skoMC1*(-1/12)))))<=skoMC1*skoMC1*skoMC1*(2+skoMC1*6)]], Reals]]

% In QepcadB format:
(E skoSC1) (E skoMC1) [[(skoSC1 ((skoMC1 (1+(skoMC1 (-3))))+(skoSC1 ((skoMC1 (2+(skoMC1 (3))))+(skoSC1 ((skoMC1 (-1/6+skoMC1))+(skoSC1 ((skoMC1 (-1/4))+(skoSC1 skoSC1 ((skoMC1 (1/360))+(skoSC1 skoSC1 ((skoMC1 (-1/20160))+(skoSC1 skoSC1 ((skoMC1 (1/1814400))+(skoSC1 skoSC1 skoMC1 (-1/239500800))))))))))))))))<=(skoMC1 (2+(skoMC1 (5))))]/\[[0<skoMC1]/\[[(skoSC1 ((skoMC1 (1+(skoMC1 (-3))))+(skoSC1 ((skoMC1 (2+(skoMC1 (3))))+(skoSC1 ((skoMC1 (-1/6+skoMC1))+(skoSC1 skoMC1 (-1/4))))))))<=(skoMC1 (2+(skoMC1 (5))))]/\[[(skoMC1 skoMC1 skoMC1 (-2+(skoMC1 (-5))))<(skoSC1 ((skoMC1 skoMC1 skoMC1 (-1+(skoMC1 (3))))+(skoSC1 ((skoMC1 skoMC1 skoMC1 (-2+(skoMC1 (-3))))+(skoSC1 ((skoMC1 skoMC1 skoMC1 (1/6+(skoMC1 (-1))))+(skoSC1 skoMC1 skoMC1 skoMC1 (1/4))))))))]/\[[(skoMC1 (-2+(skoMC1 (-5))))<(skoSC1 ((skoMC1 (-1+(skoMC1 (3))))+(skoSC1 ((skoMC1 (-2+(skoMC1 (-3))))+(skoSC1 ((skoMC1 (1/6+(skoMC1 (-1))))+(skoSC1 skoMC1 (1/4))))))))]/\[[0<skoSC1]/\[[(skoSC1 ((skoMC1 skoMC1 skoMC1 (-2))+(skoSC1 ((skoMC1 skoMC1 skoMC1)+(skoSC1 skoMC1 skoMC1 skoMC1)))))<=(skoMC1 skoMC1 skoMC1 (2))]/\[[0<(skoSC1 ((skoMC1 skoMC1 skoMC1)+(skoSC1 skoMC1 skoMC1 skoMC1)))]/\[[(skoMC1 skoMC1 skoMC1 (-2))<(skoSC1 ((skoMC1 skoMC1 skoMC1 (2))+(skoSC1 ((skoMC1 skoMC1 skoMC1 (-1))+(skoSC1 skoMC1 skoMC1 skoMC1 (-1))))))]/\[[(skoSC1 ((skoMC1 skoMC1 skoMC1 (-1))+(skoSC1 skoMC1 skoMC1 skoMC1 (-1))))<=0]/\[[(skoSC1 skoMC1 skoMC1 skoMC1 (-1))<=(skoMC1 skoMC1 skoMC1)]/\[[(skoMC1 skoMC1 skoMC1 (-1))<(skoSC1 skoMC1 skoMC1 skoMC1)]/\[[(skoMC1 skoMC1 skoMC1 (-2))<=0]/\[[0<(skoMC1 skoMC1 skoMC1 (2))]/\[[skoSC1<=5/4]/\[[2<=skoMC1]/\[[0<=skoSC1]/\[[0<skoMC1]/\[[0<=skoMC1]/\[[(skoMC1 (-1))<(skoSC1 skoMC1)]/\[[(skoSC1 skoMC1 (-1))<=skoMC1]/\[[(skoMC1 skoMC1 skoMC1 (-2))<(skoSC1 skoMC1 skoMC1 skoMC1 (2))]/\[[(skoSC1 skoMC1 skoMC1 skoMC1 (-2))<=(skoMC1 skoMC1 skoMC1 (2))]/\[[(skoMC1 skoMC1 skoMC1 (-2+(skoMC1 (-6))))<(skoSC1 ((skoMC1 skoMC1 skoMC1 skoMC1 (12))+(skoSC1 ((skoMC1 skoMC1 skoMC1 (-1+(skoMC1 (6))))+(skoSC1 ((skoMC1 skoMC1 skoMC1 (-1))+(skoSC1 ((skoMC1 skoMC1 skoMC1 (1/12))+(skoSC1 skoMC1 skoMC1 skoMC1 (1/12))))))))))]/\[(skoSC1 ((skoMC1 skoMC1 skoMC1 skoMC1 (-12))+(skoSC1 ((skoMC1 skoMC1 skoMC1 (1+(skoMC1 (-6))))+(skoSC1 ((skoMC1 skoMC1 skoMC1)+(skoSC1 ((skoMC1 skoMC1 skoMC1 (-1/12))+(skoSC1 skoMC1 skoMC1 skoMC1 (-1/12))))))))))<=(skoMC1 skoMC1 skoMC1 (2+(skoMC1 (6))))]]]]]]]]]]]]]]]]]]]]]]]]].

% In SMTLib2 format:
(declare-fun skoSC1 () Real) (declare-fun skoMC1 () Real) (assert (and (<= (* skoSC1 (+ (* skoMC1 (+ 1. (* skoMC1 (- 3.)))) (* skoSC1 (+ (* skoMC1 (+ 2. (* skoMC1 3.))) (* skoSC1 (+ (* skoMC1 (+ (/ (- 1.) 6.) skoMC1)) (* skoSC1 (+ (* skoMC1 (/ (- 1.) 4.)) (* skoSC1 (* skoSC1 (+ (* skoMC1 (/ 1. 360.)) (* skoSC1 (* skoSC1 (+ (* skoMC1 (/ (- 1.) 20160.)) (* skoSC1 (* skoSC1 (+ (* skoMC1 (/ 1. 1814400.)) (* skoSC1 (* skoSC1 (* skoMC1 (/ (- 1.) 239500800.))))))))))))))))))))) (* skoMC1 (+ 2. (* skoMC1 5.)))) (and (> skoMC1 0.) (and (<= (* skoSC1 (+ (* skoMC1 (+ 1. (* skoMC1 (- 3.)))) (* skoSC1 (+ (* skoMC1 (+ 2. (* skoMC1 3.))) (* skoSC1 (+ (* skoMC1 (+ (/ (- 1.) 6.) skoMC1)) (* skoSC1 (* skoMC1 (/ (- 1.) 4.))))))))) (* skoMC1 (+ 2. (* skoMC1 5.)))) (and (> (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (+ (- 1.) (* skoMC1 3.))))) (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (+ (- 2.) (* skoMC1 (- 3.)))))) (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (+ (/ 1. 6.) (* skoMC1 (- 1.)))))) (* skoSC1 (* skoMC1 (* skoMC1 (* skoMC1 (/ 1. 4.))))))))))) (* skoMC1 (* skoMC1 (* skoMC1 (+ (- 2.) (* skoMC1 (- 5.))))))) (and (> (* skoSC1 (+ (* skoMC1 (+ (- 1.) (* skoMC1 3.))) (* skoSC1 (+ (* skoMC1 (+ (- 2.) (* skoMC1 (- 3.)))) (* skoSC1 (+ (* skoMC1 (+ (/ 1. 6.) (* skoMC1 (- 1.)))) (* skoSC1 (* skoMC1 (/ 1. 4.))))))))) (* skoMC1 (+ (- 2.) (* skoMC1 (- 5.))))) (and (> skoSC1 0.) (and (<= (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (- 2.)))) (* skoSC1 (+ (* skoMC1 (* skoMC1 skoMC1)) (* skoSC1 (* skoMC1 (* skoMC1 skoMC1))))))) (* skoMC1 (* skoMC1 (* skoMC1 2.)))) (and (> (* skoSC1 (+ (* skoMC1 (* skoMC1 skoMC1)) (* skoSC1 (* skoMC1 (* skoMC1 skoMC1))))) 0.) (and (> (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 2.))) (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (- 1.)))) (* skoSC1 (* skoMC1 (* skoMC1 (* skoMC1 (- 1.))))))))) (* skoMC1 (* skoMC1 (* skoMC1 (- 2.))))) (and (<= (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (- 1.)))) (* skoSC1 (* skoMC1 (* skoMC1 (* skoMC1 (- 1.))))))) 0.) (and (<= (* skoSC1 (* skoMC1 (* skoMC1 (* skoMC1 (- 1.))))) (* skoMC1 (* skoMC1 skoMC1))) (and (> (* skoSC1 (* skoMC1 (* skoMC1 skoMC1))) (* skoMC1 (* skoMC1 (* skoMC1 (- 1.))))) (and (<= (* skoMC1 (* skoMC1 (* skoMC1 (- 2.)))) 0.) (and (> (* skoMC1 (* skoMC1 (* skoMC1 2.))) 0.) (and (<= skoSC1 (/ 5. 4.)) (and (<= 2. skoMC1) (and (<= 0. skoSC1) (and (> skoMC1 0.) (and (<= 0. skoMC1) (and (> (* skoSC1 skoMC1) (* skoMC1 (- 1.))) (and (<= (* skoSC1 (* skoMC1 (- 1.))) skoMC1) (and (> (* skoSC1 (* skoMC1 (* skoMC1 (* skoMC1 2.)))) (* skoMC1 (* skoMC1 (* skoMC1 (- 2.))))) (and (<= (* skoSC1 (* skoMC1 (* skoMC1 (* skoMC1 (- 2.))))) (* skoMC1 (* skoMC1 (* skoMC1 2.)))) (and (> (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (* skoMC1 12.)))) (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (+ (- 1.) (* skoMC1 6.))))) (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (- 1.)))) (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (/ 1. 12.)))) (* skoSC1 (* skoMC1 (* skoMC1 (* skoMC1 (/ 1. 12.))))))))))))) (* skoMC1 (* skoMC1 (* skoMC1 (+ (- 2.) (* skoMC1 (- 6.))))))) (<= (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (* skoMC1 (- 12.))))) (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (+ 1. (* skoMC1 (- 6.)))))) (* skoSC1 (+ (* skoMC1 (* skoMC1 skoMC1)) (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (/ (- 1.) 12.)))) (* skoSC1 (* skoMC1 (* skoMC1 (* skoMC1 (/ (- 1.) 12.))))))))))))) (* skoMC1 (* skoMC1 (* skoMC1 (+ 2. (* skoMC1 6.)))))))))))))))))))))))))))))))

% In GRF format:
(sequent " MetiTarski formula " (antecedent (<= (* skoSC1 (+ (* skoMC1 (+ 1. (* skoMC1 (- 3.)))) (* skoSC1 (+ (* skoMC1 (+ 2. (* skoMC1 3.))) (* skoSC1 (+ (* skoMC1 (+ (/ (- 1.) 6.) skoMC1)) (* skoSC1 (+ (* skoMC1 (/ (- 1.) 4.)) (* skoSC1 (* skoSC1 (+ (* skoMC1 (/ 1. 360.)) (* skoSC1 (* skoSC1 (+ (* skoMC1 (/ (- 1.) 20160.)) (* skoSC1 (* skoSC1 (+ (* skoMC1 (/ 1. 1814400.)) (* skoSC1 (* skoSC1 (* skoMC1 (/ (- 1.) 239500800.))))))))))))))))))))) (* skoMC1 (+ 2. (* skoMC1 5.)))) (> skoMC1 0.) (<= (* skoSC1 (+ (* skoMC1 (+ 1. (* skoMC1 (- 3.)))) (* skoSC1 (+ (* skoMC1 (+ 2. (* skoMC1 3.))) (* skoSC1 (+ (* skoMC1 (+ (/ (- 1.) 6.) skoMC1)) (* skoSC1 (* skoMC1 (/ (- 1.) 4.))))))))) (* skoMC1 (+ 2. (* skoMC1 5.)))) (> (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (+ (- 1.) (* skoMC1 3.))))) (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (+ (- 2.) (* skoMC1 (- 3.)))))) (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (+ (/ 1. 6.) (* skoMC1 (- 1.)))))) (* skoSC1 (* skoMC1 (* skoMC1 (* skoMC1 (/ 1. 4.))))))))))) (* skoMC1 (* skoMC1 (* skoMC1 (+ (- 2.) (* skoMC1 (- 5.))))))) (> (* skoSC1 (+ (* skoMC1 (+ (- 1.) (* skoMC1 3.))) (* skoSC1 (+ (* skoMC1 (+ (- 2.) (* skoMC1 (- 3.)))) (* skoSC1 (+ (* skoMC1 (+ (/ 1. 6.) (* skoMC1 (- 1.)))) (* skoSC1 (* skoMC1 (/ 1. 4.))))))))) (* skoMC1 (+ (- 2.) (* skoMC1 (- 5.))))) (> skoSC1 0.) (<= (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (- 2.)))) (* skoSC1 (+ (* skoMC1 (* skoMC1 skoMC1)) (* skoSC1 (* skoMC1 (* skoMC1 skoMC1))))))) (* skoMC1 (* skoMC1 (* skoMC1 2.)))) (> (* skoSC1 (+ (* skoMC1 (* skoMC1 skoMC1)) (* skoSC1 (* skoMC1 (* skoMC1 skoMC1))))) 0.) (> (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 2.))) (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (- 1.)))) (* skoSC1 (* skoMC1 (* skoMC1 (* skoMC1 (- 1.))))))))) (* skoMC1 (* skoMC1 (* skoMC1 (- 2.))))) (<= (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (- 1.)))) (* skoSC1 (* skoMC1 (* skoMC1 (* skoMC1 (- 1.))))))) 0.) (<= (* skoSC1 (* skoMC1 (* skoMC1 (* skoMC1 (- 1.))))) (* skoMC1 (* skoMC1 skoMC1))) (> (* skoSC1 (* skoMC1 (* skoMC1 skoMC1))) (* skoMC1 (* skoMC1 (* skoMC1 (- 1.))))) (<= (* skoMC1 (* skoMC1 (* skoMC1 (- 2.)))) 0.) (> (* skoMC1 (* skoMC1 (* skoMC1 2.))) 0.) (<= skoSC1 (/ 5. 4.)) (<= 2. skoMC1) (<= 0. skoSC1) (> skoMC1 0.) (<= 0. skoMC1) (> (* skoSC1 skoMC1) (* skoMC1 (- 1.))) (<= (* skoSC1 (* skoMC1 (- 1.))) skoMC1) (> (* skoSC1 (* skoMC1 (* skoMC1 (* skoMC1 2.)))) (* skoMC1 (* skoMC1 (* skoMC1 (- 2.))))) (<= (* skoSC1 (* skoMC1 (* skoMC1 (* skoMC1 (- 2.))))) (* skoMC1 (* skoMC1 (* skoMC1 2.)))) (> (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (* skoMC1 12.)))) (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (+ (- 1.) (* skoMC1 6.))))) (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (- 1.)))) (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (/ 1. 12.)))) (* skoSC1 (* skoMC1 (* skoMC1 (* skoMC1 (/ 1. 12.))))))))))))) (* skoMC1 (* skoMC1 (* skoMC1 (+ (- 2.) (* skoMC1 (- 6.)))))))) (succedent (> (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (* skoMC1 (- 12.))))) (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (+ 1. (* skoMC1 (- 6.)))))) (* skoSC1 (+ (* skoMC1 (* skoMC1 skoMC1)) (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (/ (- 1.) 12.)))) (* skoSC1 (* skoMC1 (* skoMC1 (* skoMC1 (/ (- 1.) 12.))))))))))))) (* skoMC1 (* skoMC1 (* skoMC1 (+ 2. (* skoMC1 6.))))))))
-----[end problem]-----

-----[begin problem]-----
% In Mathematica format:
Timing[Resolve[Exists[{skoSC1,skoMC1}, And[skoSC1*(skoMC1*(1+skoMC1*-3)+skoSC1*(skoMC1*(2+skoMC1*3)+skoSC1*(skoMC1*((-1/6)+skoMC1)+skoSC1*(skoMC1*(-1/4)+skoSC1*skoSC1*(skoMC1*(1/360)+skoSC1*skoSC1*(skoMC1*(-1/20160)+skoSC1*skoSC1*(skoMC1*(1/1814400)+skoSC1*skoSC1*skoMC1*(-1/239500800))))))))>skoMC1*(2+skoMC1*5),skoSC1*(skoMC1*skoMC1*skoMC1*(-1+skoMC1*3)+skoSC1*(skoMC1*skoMC1*skoMC1*(-2+skoMC1*-3)+skoSC1*(skoMC1*skoMC1*skoMC1*((1/6)+skoMC1*-1)+skoSC1*skoMC1*skoMC1*skoMC1*(1/4))))>skoMC1*skoMC1*skoMC1*(-2+skoMC1*-5),skoSC1*(skoMC1*(-1+skoMC1*3)+skoSC1*(skoMC1*(-2+skoMC1*-3)+skoSC1*(skoMC1*((1/6)+skoMC1*-1)+skoSC1*skoMC1*(1/4))))>skoMC1*(-2+skoMC1*-5),skoSC1>0,skoSC1*(skoMC1*skoMC1*skoMC1+skoSC1*skoMC1*skoMC1*skoMC1)>0,skoSC1*(skoMC1*skoMC1*skoMC1*2+skoSC1*(skoMC1*skoMC1*skoMC1*-1+skoSC1*skoMC1*skoMC1*skoMC1*-1))>skoMC1*skoMC1*skoMC1*-2,skoSC1*skoMC1*skoMC1*skoMC1>skoMC1*skoMC1*skoMC1*-1,skoMC1*skoMC1*skoMC1*2>0,skoMC1>0,skoSC1*skoMC1>skoMC1*-1,skoSC1*skoMC1*skoMC1*skoMC1*2>skoMC1*skoMC1*skoMC1*-2,skoSC1*(skoMC1*skoMC1*skoMC1*skoMC1*12+skoSC1*(skoMC1*skoMC1*skoMC1*(-1+skoMC1*6)+skoSC1*(skoMC1*skoMC1*skoMC1*-1+skoSC1*(skoMC1*skoMC1*skoMC1*(1/12)+skoSC1*skoMC1*skoMC1*skoMC1*(1/12)))))>skoMC1*skoMC1*skoMC1*(-2+skoMC1*-6)]], Reals]]

% In QepcadB format:
(E skoSC1) (E skoMC1) [[(skoMC1 (2+(skoMC1 (5))))<(skoSC1 ((skoMC1 (1+(skoMC1 (-3))))+(skoSC1 ((skoMC1 (2+(skoMC1 (3))))+(skoSC1 ((skoMC1 (-1/6+skoMC1))+(skoSC1 ((skoMC1 (-1/4))+(skoSC1 skoSC1 ((skoMC1 (1/360))+(skoSC1 skoSC1 ((skoMC1 (-1/20160))+(skoSC1 skoSC1 ((skoMC1 (1/1814400))+(skoSC1 skoSC1 skoMC1 (-1/239500800))))))))))))))))]/\[[(skoMC1 skoMC1 skoMC1 (-2+(skoMC1 (-5))))<(skoSC1 ((skoMC1 skoMC1 skoMC1 (-1+(skoMC1 (3))))+(skoSC1 ((skoMC1 skoMC1 skoMC1 (-2+(skoMC1 (-3))))+(skoSC1 ((skoMC1 skoMC1 skoMC1 (1/6+(skoMC1 (-1))))+(skoSC1 skoMC1 skoMC1 skoMC1 (1/4))))))))]/\[[(skoMC1 (-2+(skoMC1 (-5))))<(skoSC1 ((skoMC1 (-1+(skoMC1 (3))))+(skoSC1 ((skoMC1 (-2+(skoMC1 (-3))))+(skoSC1 ((skoMC1 (1/6+(skoMC1 (-1))))+(skoSC1 skoMC1 (1/4))))))))]/\[[0<skoSC1]/\[[0<(skoSC1 ((skoMC1 skoMC1 skoMC1)+(skoSC1 skoMC1 skoMC1 skoMC1)))]/\[[(skoMC1 skoMC1 skoMC1 (-2))<(skoSC1 ((skoMC1 skoMC1 skoMC1 (2))+(skoSC1 ((skoMC1 skoMC1 skoMC1 (-1))+(skoSC1 skoMC1 skoMC1 skoMC1 (-1))))))]/\[[(skoMC1 skoMC1 skoMC1 (-1))<(skoSC1 skoMC1 skoMC1 skoMC1)]/\[[0<(skoMC1 skoMC1 skoMC1 (2))]/\[[0<skoMC1]/\[[(skoMC1 (-1))<(skoSC1 skoMC1)]/\[[(skoMC1 skoMC1 skoMC1 (-2))<(skoSC1 skoMC1 skoMC1 skoMC1 (2))]/\[(skoMC1 skoMC1 skoMC1 (-2+(skoMC1 (-6))))<(skoSC1 ((skoMC1 skoMC1 skoMC1 skoMC1 (12))+(skoSC1 ((skoMC1 skoMC1 skoMC1 (-1+(skoMC1 (6))))+(skoSC1 ((skoMC1 skoMC1 skoMC1 (-1))+(skoSC1 ((skoMC1 skoMC1 skoMC1 (1/12))+(skoSC1 skoMC1 skoMC1 skoMC1 (1/12))))))))))]]]]]]]]]]]].

% In SMTLib2 format:
(declare-fun skoSC1 () Real) (declare-fun skoMC1 () Real) (assert (and (> (* skoSC1 (+ (* skoMC1 (+ 1. (* skoMC1 (- 3.)))) (* skoSC1 (+ (* skoMC1 (+ 2. (* skoMC1 3.))) (* skoSC1 (+ (* skoMC1 (+ (/ (- 1.) 6.) skoMC1)) (* skoSC1 (+ (* skoMC1 (/ (- 1.) 4.)) (* skoSC1 (* skoSC1 (+ (* skoMC1 (/ 1. 360.)) (* skoSC1 (* skoSC1 (+ (* skoMC1 (/ (- 1.) 20160.)) (* skoSC1 (* skoSC1 (+ (* skoMC1 (/ 1. 1814400.)) (* skoSC1 (* skoSC1 (* skoMC1 (/ (- 1.) 239500800.))))))))))))))))))))) (* skoMC1 (+ 2. (* skoMC1 5.)))) (and (> (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (+ (- 1.) (* skoMC1 3.))))) (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (+ (- 2.) (* skoMC1 (- 3.)))))) (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (+ (/ 1. 6.) (* skoMC1 (- 1.)))))) (* skoSC1 (* skoMC1 (* skoMC1 (* skoMC1 (/ 1. 4.))))))))))) (* skoMC1 (* skoMC1 (* skoMC1 (+ (- 2.) (* skoMC1 (- 5.))))))) (and (> (* skoSC1 (+ (* skoMC1 (+ (- 1.) (* skoMC1 3.))) (* skoSC1 (+ (* skoMC1 (+ (- 2.) (* skoMC1 (- 3.)))) (* skoSC1 (+ (* skoMC1 (+ (/ 1. 6.) (* skoMC1 (- 1.)))) (* skoSC1 (* skoMC1 (/ 1. 4.))))))))) (* skoMC1 (+ (- 2.) (* skoMC1 (- 5.))))) (and (> skoSC1 0.) (and (> (* skoSC1 (+ (* skoMC1 (* skoMC1 skoMC1)) (* skoSC1 (* skoMC1 (* skoMC1 skoMC1))))) 0.) (and (> (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 2.))) (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (- 1.)))) (* skoSC1 (* skoMC1 (* skoMC1 (* skoMC1 (- 1.))))))))) (* skoMC1 (* skoMC1 (* skoMC1 (- 2.))))) (and (> (* skoSC1 (* skoMC1 (* skoMC1 skoMC1))) (* skoMC1 (* skoMC1 (* skoMC1 (- 1.))))) (and (> (* skoMC1 (* skoMC1 (* skoMC1 2.))) 0.) (and (> skoMC1 0.) (and (> (* skoSC1 skoMC1) (* skoMC1 (- 1.))) (and (> (* skoSC1 (* skoMC1 (* skoMC1 (* skoMC1 2.)))) (* skoMC1 (* skoMC1 (* skoMC1 (- 2.))))) (> (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (* skoMC1 12.)))) (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (+ (- 1.) (* skoMC1 6.))))) (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (- 1.)))) (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (/ 1. 12.)))) (* skoSC1 (* skoMC1 (* skoMC1 (* skoMC1 (/ 1. 12.))))))))))))) (* skoMC1 (* skoMC1 (* skoMC1 (+ (- 2.) (* skoMC1 (- 6.)))))))))))))))))))

% In GRF format:
(sequent " MetiTarski formula " (antecedent (> (* skoSC1 (+ (* skoMC1 (+ 1. (* skoMC1 (- 3.)))) (* skoSC1 (+ (* skoMC1 (+ 2. (* skoMC1 3.))) (* skoSC1 (+ (* skoMC1 (+ (/ (- 1.) 6.) skoMC1)) (* skoSC1 (+ (* skoMC1 (/ (- 1.) 4.)) (* skoSC1 (* skoSC1 (+ (* skoMC1 (/ 1. 360.)) (* skoSC1 (* skoSC1 (+ (* skoMC1 (/ (- 1.) 20160.)) (* skoSC1 (* skoSC1 (+ (* skoMC1 (/ 1. 1814400.)) (* skoSC1 (* skoSC1 (* skoMC1 (/ (- 1.) 239500800.))))))))))))))))))))) (* skoMC1 (+ 2. (* skoMC1 5.)))) (> (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (+ (- 1.) (* skoMC1 3.))))) (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (+ (- 2.) (* skoMC1 (- 3.)))))) (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (+ (/ 1. 6.) (* skoMC1 (- 1.)))))) (* skoSC1 (* skoMC1 (* skoMC1 (* skoMC1 (/ 1. 4.))))))))))) (* skoMC1 (* skoMC1 (* skoMC1 (+ (- 2.) (* skoMC1 (- 5.))))))) (> (* skoSC1 (+ (* skoMC1 (+ (- 1.) (* skoMC1 3.))) (* skoSC1 (+ (* skoMC1 (+ (- 2.) (* skoMC1 (- 3.)))) (* skoSC1 (+ (* skoMC1 (+ (/ 1. 6.) (* skoMC1 (- 1.)))) (* skoSC1 (* skoMC1 (/ 1. 4.))))))))) (* skoMC1 (+ (- 2.) (* skoMC1 (- 5.))))) (> skoSC1 0.) (> (* skoSC1 (+ (* skoMC1 (* skoMC1 skoMC1)) (* skoSC1 (* skoMC1 (* skoMC1 skoMC1))))) 0.) (> (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 2.))) (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (- 1.)))) (* skoSC1 (* skoMC1 (* skoMC1 (* skoMC1 (- 1.))))))))) (* skoMC1 (* skoMC1 (* skoMC1 (- 2.))))) (> (* skoSC1 (* skoMC1 (* skoMC1 skoMC1))) (* skoMC1 (* skoMC1 (* skoMC1 (- 1.))))) (> (* skoMC1 (* skoMC1 (* skoMC1 2.))) 0.) (> skoMC1 0.) (> (* skoSC1 skoMC1) (* skoMC1 (- 1.))) (> (* skoSC1 (* skoMC1 (* skoMC1 (* skoMC1 2.)))) (* skoMC1 (* skoMC1 (* skoMC1 (- 2.)))))) (succedent (<= (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (* skoMC1 12.)))) (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (+ (- 1.) (* skoMC1 6.))))) (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (- 1.)))) (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (/ 1. 12.)))) (* skoSC1 (* skoMC1 (* skoMC1 (* skoMC1 (/ 1. 12.))))))))))))) (* skoMC1 (* skoMC1 (* skoMC1 (+ (- 2.) (* skoMC1 (- 6.)))))))))
-----[end problem]-----

-----[begin problem]-----
% In Mathematica format:
Timing[Resolve[Exists[{skoSC1,skoMC1}, And[skoMC1<=0,skoSC1*(skoMC1*(1+skoMC1*-3)+skoSC1*(skoMC1*(2+skoMC1*3)+skoSC1*(skoMC1*((-1/6)+skoMC1)+skoSC1*(skoMC1*(-1/4)+skoSC1*skoSC1*(skoMC1*(1/360)+skoSC1*skoSC1*(skoMC1*(-1/20160)+skoSC1*skoSC1*(skoMC1*(1/1814400)+skoSC1*skoSC1*skoMC1*(-1/239500800))))))))>skoMC1*(2+skoMC1*5),skoSC1*(skoMC1*(1+skoMC1*-3)+skoSC1*(skoMC1*(2+skoMC1*3)+skoSC1*(skoMC1*((-1/6)+skoMC1)+skoSC1*skoMC1*(-1/4))))<=skoMC1*(2+skoMC1*5),skoSC1*(skoMC1*skoMC1*skoMC1*(-1+skoMC1*3)+skoSC1*(skoMC1*skoMC1*skoMC1*(-2+skoMC1*-3)+skoSC1*(skoMC1*skoMC1*skoMC1*((1/6)+skoMC1*-1)+skoSC1*skoMC1*skoMC1*skoMC1*(1/4))))>skoMC1*skoMC1*skoMC1*(-2+skoMC1*-5),skoSC1*(skoMC1*(-1+skoMC1*3)+skoSC1*(skoMC1*(-2+skoMC1*-3)+skoSC1*(skoMC1*((1/6)+skoMC1*-1)+skoSC1*skoMC1*(1/4))))>skoMC1*(-2+skoMC1*-5),skoSC1>0,skoSC1*(skoMC1*skoMC1*skoMC1*-2+skoSC1*(skoMC1*skoMC1*skoMC1+skoSC1*skoMC1*skoMC1*skoMC1))<=skoMC1*skoMC1*skoMC1*2,skoSC1*(skoMC1*skoMC1*skoMC1+skoSC1*skoMC1*skoMC1*skoMC1)>0,skoSC1*(skoMC1*skoMC1*skoMC1*2+skoSC1*(skoMC1*skoMC1*skoMC1*-1+skoSC1*skoMC1*skoMC1*skoMC1*-1))>skoMC1*skoMC1*skoMC1*-2,skoSC1*(skoMC1*skoMC1*skoMC1*-1+skoSC1*skoMC1*skoMC1*skoMC1*-1)<=0,skoSC1*skoMC1*skoMC1*skoMC1*-1<=skoMC1*skoMC1*skoMC1,skoSC1*skoMC1*skoMC1*skoMC1>skoMC1*skoMC1*skoMC1*-1,skoMC1*skoMC1*skoMC1*-2<=0,skoMC1*skoMC1*skoMC1*2>0,skoSC1<=(5/4),2<=skoMC1,0<=skoSC1,skoMC1>0,0<=skoMC1,skoSC1*skoMC1>skoMC1*-1,skoSC1*skoMC1*-1<=skoMC1,skoSC1*skoMC1*skoMC1*skoMC1*2>skoMC1*skoMC1*skoMC1*-2,skoSC1*skoMC1*skoMC1*skoMC1*-2<=skoMC1*skoMC1*skoMC1*2,skoSC1*(skoMC1*skoMC1*skoMC1*skoMC1*12+skoSC1*(skoMC1*skoMC1*skoMC1*(-1+skoMC1*6)+skoSC1*(skoMC1*skoMC1*skoMC1*-1+skoSC1*(skoMC1*skoMC1*skoMC1*(1/12)+skoSC1*skoMC1*skoMC1*skoMC1*(1/12)))))>skoMC1*skoMC1*skoMC1*(-2+skoMC1*-6),skoSC1*(skoMC1*skoMC1*skoMC1*skoMC1*-12+skoSC1*(skoMC1*skoMC1*skoMC1*(1+skoMC1*-6)+skoSC1*(skoMC1*skoMC1*skoMC1+skoSC1*(skoMC1*skoMC1*skoMC1*(-1/12)+skoSC1*skoMC1*skoMC1*skoMC1*(-1/12)))))<=skoMC1*skoMC1*skoMC1*(2+skoMC1*6)]], Reals]]

% In QepcadB format:
(E skoSC1) (E skoMC1) [[skoMC1<=0]/\[[(skoMC1 (2+(skoMC1 (5))))<(skoSC1 ((skoMC1 (1+(skoMC1 (-3))))+(skoSC1 ((skoMC1 (2+(skoMC1 (3))))+(skoSC1 ((skoMC1 (-1/6+skoMC1))+(skoSC1 ((skoMC1 (-1/4))+(skoSC1 skoSC1 ((skoMC1 (1/360))+(skoSC1 skoSC1 ((skoMC1 (-1/20160))+(skoSC1 skoSC1 ((skoMC1 (1/1814400))+(skoSC1 skoSC1 skoMC1 (-1/239500800))))))))))))))))]/\[[(skoSC1 ((skoMC1 (1+(skoMC1 (-3))))+(skoSC1 ((skoMC1 (2+(skoMC1 (3))))+(skoSC1 ((skoMC1 (-1/6+skoMC1))+(skoSC1 skoMC1 (-1/4))))))))<=(skoMC1 (2+(skoMC1 (5))))]/\[[(skoMC1 skoMC1 skoMC1 (-2+(skoMC1 (-5))))<(skoSC1 ((skoMC1 skoMC1 skoMC1 (-1+(skoMC1 (3))))+(skoSC1 ((skoMC1 skoMC1 skoMC1 (-2+(skoMC1 (-3))))+(skoSC1 ((skoMC1 skoMC1 skoMC1 (1/6+(skoMC1 (-1))))+(skoSC1 skoMC1 skoMC1 skoMC1 (1/4))))))))]/\[[(skoMC1 (-2+(skoMC1 (-5))))<(skoSC1 ((skoMC1 (-1+(skoMC1 (3))))+(skoSC1 ((skoMC1 (-2+(skoMC1 (-3))))+(skoSC1 ((skoMC1 (1/6+(skoMC1 (-1))))+(skoSC1 skoMC1 (1/4))))))))]/\[[0<skoSC1]/\[[(skoSC1 ((skoMC1 skoMC1 skoMC1 (-2))+(skoSC1 ((skoMC1 skoMC1 skoMC1)+(skoSC1 skoMC1 skoMC1 skoMC1)))))<=(skoMC1 skoMC1 skoMC1 (2))]/\[[0<(skoSC1 ((skoMC1 skoMC1 skoMC1)+(skoSC1 skoMC1 skoMC1 skoMC1)))]/\[[(skoMC1 skoMC1 skoMC1 (-2))<(skoSC1 ((skoMC1 skoMC1 skoMC1 (2))+(skoSC1 ((skoMC1 skoMC1 skoMC1 (-1))+(skoSC1 skoMC1 skoMC1 skoMC1 (-1))))))]/\[[(skoSC1 ((skoMC1 skoMC1 skoMC1 (-1))+(skoSC1 skoMC1 skoMC1 skoMC1 (-1))))<=0]/\[[(skoSC1 skoMC1 skoMC1 skoMC1 (-1))<=(skoMC1 skoMC1 skoMC1)]/\[[(skoMC1 skoMC1 skoMC1 (-1))<(skoSC1 skoMC1 skoMC1 skoMC1)]/\[[(skoMC1 skoMC1 skoMC1 (-2))<=0]/\[[0<(skoMC1 skoMC1 skoMC1 (2))]/\[[skoSC1<=5/4]/\[[2<=skoMC1]/\[[0<=skoSC1]/\[[0<skoMC1]/\[[0<=skoMC1]/\[[(skoMC1 (-1))<(skoSC1 skoMC1)]/\[[(skoSC1 skoMC1 (-1))<=skoMC1]/\[[(skoMC1 skoMC1 skoMC1 (-2))<(skoSC1 skoMC1 skoMC1 skoMC1 (2))]/\[[(skoSC1 skoMC1 skoMC1 skoMC1 (-2))<=(skoMC1 skoMC1 skoMC1 (2))]/\[[(skoMC1 skoMC1 skoMC1 (-2+(skoMC1 (-6))))<(skoSC1 ((skoMC1 skoMC1 skoMC1 skoMC1 (12))+(skoSC1 ((skoMC1 skoMC1 skoMC1 (-1+(skoMC1 (6))))+(skoSC1 ((skoMC1 skoMC1 skoMC1 (-1))+(skoSC1 ((skoMC1 skoMC1 skoMC1 (1/12))+(skoSC1 skoMC1 skoMC1 skoMC1 (1/12))))))))))]/\[(skoSC1 ((skoMC1 skoMC1 skoMC1 skoMC1 (-12))+(skoSC1 ((skoMC1 skoMC1 skoMC1 (1+(skoMC1 (-6))))+(skoSC1 ((skoMC1 skoMC1 skoMC1)+(skoSC1 ((skoMC1 skoMC1 skoMC1 (-1/12))+(skoSC1 skoMC1 skoMC1 skoMC1 (-1/12))))))))))<=(skoMC1 skoMC1 skoMC1 (2+(skoMC1 (6))))]]]]]]]]]]]]]]]]]]]]]]]]].

% In SMTLib2 format:
(declare-fun skoSC1 () Real) (declare-fun skoMC1 () Real) (assert (and (<= skoMC1 0.) (and (> (* skoSC1 (+ (* skoMC1 (+ 1. (* skoMC1 (- 3.)))) (* skoSC1 (+ (* skoMC1 (+ 2. (* skoMC1 3.))) (* skoSC1 (+ (* skoMC1 (+ (/ (- 1.) 6.) skoMC1)) (* skoSC1 (+ (* skoMC1 (/ (- 1.) 4.)) (* skoSC1 (* skoSC1 (+ (* skoMC1 (/ 1. 360.)) (* skoSC1 (* skoSC1 (+ (* skoMC1 (/ (- 1.) 20160.)) (* skoSC1 (* skoSC1 (+ (* skoMC1 (/ 1. 1814400.)) (* skoSC1 (* skoSC1 (* skoMC1 (/ (- 1.) 239500800.))))))))))))))))))))) (* skoMC1 (+ 2. (* skoMC1 5.)))) (and (<= (* skoSC1 (+ (* skoMC1 (+ 1. (* skoMC1 (- 3.)))) (* skoSC1 (+ (* skoMC1 (+ 2. (* skoMC1 3.))) (* skoSC1 (+ (* skoMC1 (+ (/ (- 1.) 6.) skoMC1)) (* skoSC1 (* skoMC1 (/ (- 1.) 4.))))))))) (* skoMC1 (+ 2. (* skoMC1 5.)))) (and (> (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (+ (- 1.) (* skoMC1 3.))))) (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (+ (- 2.) (* skoMC1 (- 3.)))))) (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (+ (/ 1. 6.) (* skoMC1 (- 1.)))))) (* skoSC1 (* skoMC1 (* skoMC1 (* skoMC1 (/ 1. 4.))))))))))) (* skoMC1 (* skoMC1 (* skoMC1 (+ (- 2.) (* skoMC1 (- 5.))))))) (and (> (* skoSC1 (+ (* skoMC1 (+ (- 1.) (* skoMC1 3.))) (* skoSC1 (+ (* skoMC1 (+ (- 2.) (* skoMC1 (- 3.)))) (* skoSC1 (+ (* skoMC1 (+ (/ 1. 6.) (* skoMC1 (- 1.)))) (* skoSC1 (* skoMC1 (/ 1. 4.))))))))) (* skoMC1 (+ (- 2.) (* skoMC1 (- 5.))))) (and (> skoSC1 0.) (and (<= (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (- 2.)))) (* skoSC1 (+ (* skoMC1 (* skoMC1 skoMC1)) (* skoSC1 (* skoMC1 (* skoMC1 skoMC1))))))) (* skoMC1 (* skoMC1 (* skoMC1 2.)))) (and (> (* skoSC1 (+ (* skoMC1 (* skoMC1 skoMC1)) (* skoSC1 (* skoMC1 (* skoMC1 skoMC1))))) 0.) (and (> (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 2.))) (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (- 1.)))) (* skoSC1 (* skoMC1 (* skoMC1 (* skoMC1 (- 1.))))))))) (* skoMC1 (* skoMC1 (* skoMC1 (- 2.))))) (and (<= (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (- 1.)))) (* skoSC1 (* skoMC1 (* skoMC1 (* skoMC1 (- 1.))))))) 0.) (and (<= (* skoSC1 (* skoMC1 (* skoMC1 (* skoMC1 (- 1.))))) (* skoMC1 (* skoMC1 skoMC1))) (and (> (* skoSC1 (* skoMC1 (* skoMC1 skoMC1))) (* skoMC1 (* skoMC1 (* skoMC1 (- 1.))))) (and (<= (* skoMC1 (* skoMC1 (* skoMC1 (- 2.)))) 0.) (and (> (* skoMC1 (* skoMC1 (* skoMC1 2.))) 0.) (and (<= skoSC1 (/ 5. 4.)) (and (<= 2. skoMC1) (and (<= 0. skoSC1) (and (> skoMC1 0.) (and (<= 0. skoMC1) (and (> (* skoSC1 skoMC1) (* skoMC1 (- 1.))) (and (<= (* skoSC1 (* skoMC1 (- 1.))) skoMC1) (and (> (* skoSC1 (* skoMC1 (* skoMC1 (* skoMC1 2.)))) (* skoMC1 (* skoMC1 (* skoMC1 (- 2.))))) (and (<= (* skoSC1 (* skoMC1 (* skoMC1 (* skoMC1 (- 2.))))) (* skoMC1 (* skoMC1 (* skoMC1 2.)))) (and (> (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (* skoMC1 12.)))) (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (+ (- 1.) (* skoMC1 6.))))) (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (- 1.)))) (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (/ 1. 12.)))) (* skoSC1 (* skoMC1 (* skoMC1 (* skoMC1 (/ 1. 12.))))))))))))) (* skoMC1 (* skoMC1 (* skoMC1 (+ (- 2.) (* skoMC1 (- 6.))))))) (<= (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (* skoMC1 (- 12.))))) (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (+ 1. (* skoMC1 (- 6.)))))) (* skoSC1 (+ (* skoMC1 (* skoMC1 skoMC1)) (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (/ (- 1.) 12.)))) (* skoSC1 (* skoMC1 (* skoMC1 (* skoMC1 (/ (- 1.) 12.))))))))))))) (* skoMC1 (* skoMC1 (* skoMC1 (+ 2. (* skoMC1 6.)))))))))))))))))))))))))))))))

% In GRF format:
(sequent " MetiTarski formula " (antecedent (<= skoMC1 0.) (> (* skoSC1 (+ (* skoMC1 (+ 1. (* skoMC1 (- 3.)))) (* skoSC1 (+ (* skoMC1 (+ 2. (* skoMC1 3.))) (* skoSC1 (+ (* skoMC1 (+ (/ (- 1.) 6.) skoMC1)) (* skoSC1 (+ (* skoMC1 (/ (- 1.) 4.)) (* skoSC1 (* skoSC1 (+ (* skoMC1 (/ 1. 360.)) (* skoSC1 (* skoSC1 (+ (* skoMC1 (/ (- 1.) 20160.)) (* skoSC1 (* skoSC1 (+ (* skoMC1 (/ 1. 1814400.)) (* skoSC1 (* skoSC1 (* skoMC1 (/ (- 1.) 239500800.))))))))))))))))))))) (* skoMC1 (+ 2. (* skoMC1 5.)))) (<= (* skoSC1 (+ (* skoMC1 (+ 1. (* skoMC1 (- 3.)))) (* skoSC1 (+ (* skoMC1 (+ 2. (* skoMC1 3.))) (* skoSC1 (+ (* skoMC1 (+ (/ (- 1.) 6.) skoMC1)) (* skoSC1 (* skoMC1 (/ (- 1.) 4.))))))))) (* skoMC1 (+ 2. (* skoMC1 5.)))) (> (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (+ (- 1.) (* skoMC1 3.))))) (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (+ (- 2.) (* skoMC1 (- 3.)))))) (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (+ (/ 1. 6.) (* skoMC1 (- 1.)))))) (* skoSC1 (* skoMC1 (* skoMC1 (* skoMC1 (/ 1. 4.))))))))))) (* skoMC1 (* skoMC1 (* skoMC1 (+ (- 2.) (* skoMC1 (- 5.))))))) (> (* skoSC1 (+ (* skoMC1 (+ (- 1.) (* skoMC1 3.))) (* skoSC1 (+ (* skoMC1 (+ (- 2.) (* skoMC1 (- 3.)))) (* skoSC1 (+ (* skoMC1 (+ (/ 1. 6.) (* skoMC1 (- 1.)))) (* skoSC1 (* skoMC1 (/ 1. 4.))))))))) (* skoMC1 (+ (- 2.) (* skoMC1 (- 5.))))) (> skoSC1 0.) (<= (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (- 2.)))) (* skoSC1 (+ (* skoMC1 (* skoMC1 skoMC1)) (* skoSC1 (* skoMC1 (* skoMC1 skoMC1))))))) (* skoMC1 (* skoMC1 (* skoMC1 2.)))) (> (* skoSC1 (+ (* skoMC1 (* skoMC1 skoMC1)) (* skoSC1 (* skoMC1 (* skoMC1 skoMC1))))) 0.) (> (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 2.))) (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (- 1.)))) (* skoSC1 (* skoMC1 (* skoMC1 (* skoMC1 (- 1.))))))))) (* skoMC1 (* skoMC1 (* skoMC1 (- 2.))))) (<= (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (- 1.)))) (* skoSC1 (* skoMC1 (* skoMC1 (* skoMC1 (- 1.))))))) 0.) (<= (* skoSC1 (* skoMC1 (* skoMC1 (* skoMC1 (- 1.))))) (* skoMC1 (* skoMC1 skoMC1))) (> (* skoSC1 (* skoMC1 (* skoMC1 skoMC1))) (* skoMC1 (* skoMC1 (* skoMC1 (- 1.))))) (<= (* skoMC1 (* skoMC1 (* skoMC1 (- 2.)))) 0.) (> (* skoMC1 (* skoMC1 (* skoMC1 2.))) 0.) (<= skoSC1 (/ 5. 4.)) (<= 2. skoMC1) (<= 0. skoSC1) (> skoMC1 0.) (<= 0. skoMC1) (> (* skoSC1 skoMC1) (* skoMC1 (- 1.))) (<= (* skoSC1 (* skoMC1 (- 1.))) skoMC1) (> (* skoSC1 (* skoMC1 (* skoMC1 (* skoMC1 2.)))) (* skoMC1 (* skoMC1 (* skoMC1 (- 2.))))) (<= (* skoSC1 (* skoMC1 (* skoMC1 (* skoMC1 (- 2.))))) (* skoMC1 (* skoMC1 (* skoMC1 2.)))) (> (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (* skoMC1 12.)))) (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (+ (- 1.) (* skoMC1 6.))))) (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (- 1.)))) (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (/ 1. 12.)))) (* skoSC1 (* skoMC1 (* skoMC1 (* skoMC1 (/ 1. 12.))))))))))))) (* skoMC1 (* skoMC1 (* skoMC1 (+ (- 2.) (* skoMC1 (- 6.)))))))) (succedent (> (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (* skoMC1 (- 12.))))) (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (+ 1. (* skoMC1 (- 6.)))))) (* skoSC1 (+ (* skoMC1 (* skoMC1 skoMC1)) (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (/ (- 1.) 12.)))) (* skoSC1 (* skoMC1 (* skoMC1 (* skoMC1 (/ (- 1.) 12.))))))))))))) (* skoMC1 (* skoMC1 (* skoMC1 (+ 2. (* skoMC1 6.))))))))
-----[end problem]-----

-----[begin problem]-----
% In Mathematica format:
Timing[Resolve[Exists[{skoSC1,skoMC1}, And[0<=skoMC1,skoSC1*(skoMC1*(1+skoMC1*-3)+skoSC1*(skoMC1*(2+skoMC1*3)+skoSC1*(skoMC1*((-1/6)+skoMC1)+skoSC1*skoMC1*(-1/4))))<=skoMC1*(2+skoMC1*5),skoSC1*(skoMC1*skoMC1*skoMC1*(-1+skoMC1*3)+skoSC1*(skoMC1*skoMC1*skoMC1*(-2+skoMC1*-3)+skoSC1*(skoMC1*skoMC1*skoMC1*((1/6)+skoMC1*-1)+skoSC1*skoMC1*skoMC1*skoMC1*(1/4))))>skoMC1*skoMC1*skoMC1*(-2+skoMC1*-5),skoSC1*(skoMC1*(-1+skoMC1*3)+skoSC1*(skoMC1*(-2+skoMC1*-3)+skoSC1*(skoMC1*((1/6)+skoMC1*-1)+skoSC1*skoMC1*(1/4))))>skoMC1*(-2+skoMC1*-5),skoSC1>0,skoSC1*(skoMC1*skoMC1*skoMC1*-2+skoSC1*(skoMC1*skoMC1*skoMC1+skoSC1*skoMC1*skoMC1*skoMC1))<=skoMC1*skoMC1*skoMC1*2,skoSC1*(skoMC1*skoMC1*skoMC1+skoSC1*skoMC1*skoMC1*skoMC1)>0,skoSC1*(skoMC1*skoMC1*skoMC1*2+skoSC1*(skoMC1*skoMC1*skoMC1*-1+skoSC1*skoMC1*skoMC1*skoMC1*-1))>skoMC1*skoMC1*skoMC1*-2,skoSC1*(skoMC1*skoMC1*skoMC1*-1+skoSC1*skoMC1*skoMC1*skoMC1*-1)<=0,skoSC1*skoMC1*skoMC1*skoMC1*-1<=skoMC1*skoMC1*skoMC1,skoSC1*skoMC1*skoMC1*skoMC1>skoMC1*skoMC1*skoMC1*-1,skoMC1*skoMC1*skoMC1*-2<=0,skoMC1*skoMC1*skoMC1*2>0,skoSC1<=(5/4),2<=skoMC1,0<=skoSC1,skoMC1>0,0<=skoMC1,skoSC1*skoMC1>skoMC1*-1,skoSC1*skoMC1*-1<=skoMC1,skoSC1*skoMC1*skoMC1*skoMC1*2>skoMC1*skoMC1*skoMC1*-2,skoSC1*skoMC1*skoMC1*skoMC1*-2<=skoMC1*skoMC1*skoMC1*2,skoSC1*(skoMC1*skoMC1*skoMC1*skoMC1*12+skoSC1*(skoMC1*skoMC1*skoMC1*(-1+skoMC1*6)+skoSC1*(skoMC1*skoMC1*skoMC1*-1+skoSC1*(skoMC1*skoMC1*skoMC1*(1/12)+skoSC1*skoMC1*skoMC1*skoMC1*(1/12)))))>skoMC1*skoMC1*skoMC1*(-2+skoMC1*-6),skoSC1*(skoMC1*skoMC1*skoMC1*skoMC1*-12+skoSC1*(skoMC1*skoMC1*skoMC1*(1+skoMC1*-6)+skoSC1*(skoMC1*skoMC1*skoMC1+skoSC1*(skoMC1*skoMC1*skoMC1*(-1/12)+skoSC1*skoMC1*skoMC1*skoMC1*(-1/12)))))<=skoMC1*skoMC1*skoMC1*(2+skoMC1*6)]], Reals]]

% In QepcadB format:
(E skoSC1) (E skoMC1) [[0<=skoMC1]/\[[(skoSC1 ((skoMC1 (1+(skoMC1 (-3))))+(skoSC1 ((skoMC1 (2+(skoMC1 (3))))+(skoSC1 ((skoMC1 (-1/6+skoMC1))+(skoSC1 skoMC1 (-1/4))))))))<=(skoMC1 (2+(skoMC1 (5))))]/\[[(skoMC1 skoMC1 skoMC1 (-2+(skoMC1 (-5))))<(skoSC1 ((skoMC1 skoMC1 skoMC1 (-1+(skoMC1 (3))))+(skoSC1 ((skoMC1 skoMC1 skoMC1 (-2+(skoMC1 (-3))))+(skoSC1 ((skoMC1 skoMC1 skoMC1 (1/6+(skoMC1 (-1))))+(skoSC1 skoMC1 skoMC1 skoMC1 (1/4))))))))]/\[[(skoMC1 (-2+(skoMC1 (-5))))<(skoSC1 ((skoMC1 (-1+(skoMC1 (3))))+(skoSC1 ((skoMC1 (-2+(skoMC1 (-3))))+(skoSC1 ((skoMC1 (1/6+(skoMC1 (-1))))+(skoSC1 skoMC1 (1/4))))))))]/\[[0<skoSC1]/\[[(skoSC1 ((skoMC1 skoMC1 skoMC1 (-2))+(skoSC1 ((skoMC1 skoMC1 skoMC1)+(skoSC1 skoMC1 skoMC1 skoMC1)))))<=(skoMC1 skoMC1 skoMC1 (2))]/\[[0<(skoSC1 ((skoMC1 skoMC1 skoMC1)+(skoSC1 skoMC1 skoMC1 skoMC1)))]/\[[(skoMC1 skoMC1 skoMC1 (-2))<(skoSC1 ((skoMC1 skoMC1 skoMC1 (2))+(skoSC1 ((skoMC1 skoMC1 skoMC1 (-1))+(skoSC1 skoMC1 skoMC1 skoMC1 (-1))))))]/\[[(skoSC1 ((skoMC1 skoMC1 skoMC1 (-1))+(skoSC1 skoMC1 skoMC1 skoMC1 (-1))))<=0]/\[[(skoSC1 skoMC1 skoMC1 skoMC1 (-1))<=(skoMC1 skoMC1 skoMC1)]/\[[(skoMC1 skoMC1 skoMC1 (-1))<(skoSC1 skoMC1 skoMC1 skoMC1)]/\[[(skoMC1 skoMC1 skoMC1 (-2))<=0]/\[[0<(skoMC1 skoMC1 skoMC1 (2))]/\[[skoSC1<=5/4]/\[[2<=skoMC1]/\[[0<=skoSC1]/\[[0<skoMC1]/\[[0<=skoMC1]/\[[(skoMC1 (-1))<(skoSC1 skoMC1)]/\[[(skoSC1 skoMC1 (-1))<=skoMC1]/\[[(skoMC1 skoMC1 skoMC1 (-2))<(skoSC1 skoMC1 skoMC1 skoMC1 (2))]/\[[(skoSC1 skoMC1 skoMC1 skoMC1 (-2))<=(skoMC1 skoMC1 skoMC1 (2))]/\[[(skoMC1 skoMC1 skoMC1 (-2+(skoMC1 (-6))))<(skoSC1 ((skoMC1 skoMC1 skoMC1 skoMC1 (12))+(skoSC1 ((skoMC1 skoMC1 skoMC1 (-1+(skoMC1 (6))))+(skoSC1 ((skoMC1 skoMC1 skoMC1 (-1))+(skoSC1 ((skoMC1 skoMC1 skoMC1 (1/12))+(skoSC1 skoMC1 skoMC1 skoMC1 (1/12))))))))))]/\[(skoSC1 ((skoMC1 skoMC1 skoMC1 skoMC1 (-12))+(skoSC1 ((skoMC1 skoMC1 skoMC1 (1+(skoMC1 (-6))))+(skoSC1 ((skoMC1 skoMC1 skoMC1)+(skoSC1 ((skoMC1 skoMC1 skoMC1 (-1/12))+(skoSC1 skoMC1 skoMC1 skoMC1 (-1/12))))))))))<=(skoMC1 skoMC1 skoMC1 (2+(skoMC1 (6))))]]]]]]]]]]]]]]]]]]]]]]]].

% In SMTLib2 format:
(declare-fun skoSC1 () Real) (declare-fun skoMC1 () Real) (assert (and (<= 0. skoMC1) (and (<= (* skoSC1 (+ (* skoMC1 (+ 1. (* skoMC1 (- 3.)))) (* skoSC1 (+ (* skoMC1 (+ 2. (* skoMC1 3.))) (* skoSC1 (+ (* skoMC1 (+ (/ (- 1.) 6.) skoMC1)) (* skoSC1 (* skoMC1 (/ (- 1.) 4.))))))))) (* skoMC1 (+ 2. (* skoMC1 5.)))) (and (> (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (+ (- 1.) (* skoMC1 3.))))) (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (+ (- 2.) (* skoMC1 (- 3.)))))) (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (+ (/ 1. 6.) (* skoMC1 (- 1.)))))) (* skoSC1 (* skoMC1 (* skoMC1 (* skoMC1 (/ 1. 4.))))))))))) (* skoMC1 (* skoMC1 (* skoMC1 (+ (- 2.) (* skoMC1 (- 5.))))))) (and (> (* skoSC1 (+ (* skoMC1 (+ (- 1.) (* skoMC1 3.))) (* skoSC1 (+ (* skoMC1 (+ (- 2.) (* skoMC1 (- 3.)))) (* skoSC1 (+ (* skoMC1 (+ (/ 1. 6.) (* skoMC1 (- 1.)))) (* skoSC1 (* skoMC1 (/ 1. 4.))))))))) (* skoMC1 (+ (- 2.) (* skoMC1 (- 5.))))) (and (> skoSC1 0.) (and (<= (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (- 2.)))) (* skoSC1 (+ (* skoMC1 (* skoMC1 skoMC1)) (* skoSC1 (* skoMC1 (* skoMC1 skoMC1))))))) (* skoMC1 (* skoMC1 (* skoMC1 2.)))) (and (> (* skoSC1 (+ (* skoMC1 (* skoMC1 skoMC1)) (* skoSC1 (* skoMC1 (* skoMC1 skoMC1))))) 0.) (and (> (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 2.))) (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (- 1.)))) (* skoSC1 (* skoMC1 (* skoMC1 (* skoMC1 (- 1.))))))))) (* skoMC1 (* skoMC1 (* skoMC1 (- 2.))))) (and (<= (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (- 1.)))) (* skoSC1 (* skoMC1 (* skoMC1 (* skoMC1 (- 1.))))))) 0.) (and (<= (* skoSC1 (* skoMC1 (* skoMC1 (* skoMC1 (- 1.))))) (* skoMC1 (* skoMC1 skoMC1))) (and (> (* skoSC1 (* skoMC1 (* skoMC1 skoMC1))) (* skoMC1 (* skoMC1 (* skoMC1 (- 1.))))) (and (<= (* skoMC1 (* skoMC1 (* skoMC1 (- 2.)))) 0.) (and (> (* skoMC1 (* skoMC1 (* skoMC1 2.))) 0.) (and (<= skoSC1 (/ 5. 4.)) (and (<= 2. skoMC1) (and (<= 0. skoSC1) (and (> skoMC1 0.) (and (<= 0. skoMC1) (and (> (* skoSC1 skoMC1) (* skoMC1 (- 1.))) (and (<= (* skoSC1 (* skoMC1 (- 1.))) skoMC1) (and (> (* skoSC1 (* skoMC1 (* skoMC1 (* skoMC1 2.)))) (* skoMC1 (* skoMC1 (* skoMC1 (- 2.))))) (and (<= (* skoSC1 (* skoMC1 (* skoMC1 (* skoMC1 (- 2.))))) (* skoMC1 (* skoMC1 (* skoMC1 2.)))) (and (> (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (* skoMC1 12.)))) (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (+ (- 1.) (* skoMC1 6.))))) (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (- 1.)))) (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (/ 1. 12.)))) (* skoSC1 (* skoMC1 (* skoMC1 (* skoMC1 (/ 1. 12.))))))))))))) (* skoMC1 (* skoMC1 (* skoMC1 (+ (- 2.) (* skoMC1 (- 6.))))))) (<= (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (* skoMC1 (- 12.))))) (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (+ 1. (* skoMC1 (- 6.)))))) (* skoSC1 (+ (* skoMC1 (* skoMC1 skoMC1)) (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (/ (- 1.) 12.)))) (* skoSC1 (* skoMC1 (* skoMC1 (* skoMC1 (/ (- 1.) 12.))))))))))))) (* skoMC1 (* skoMC1 (* skoMC1 (+ 2. (* skoMC1 6.))))))))))))))))))))))))))))))

% In GRF format:
(sequent " MetiTarski formula " (antecedent (<= 0. skoMC1) (<= (* skoSC1 (+ (* skoMC1 (+ 1. (* skoMC1 (- 3.)))) (* skoSC1 (+ (* skoMC1 (+ 2. (* skoMC1 3.))) (* skoSC1 (+ (* skoMC1 (+ (/ (- 1.) 6.) skoMC1)) (* skoSC1 (* skoMC1 (/ (- 1.) 4.))))))))) (* skoMC1 (+ 2. (* skoMC1 5.)))) (> (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (+ (- 1.) (* skoMC1 3.))))) (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (+ (- 2.) (* skoMC1 (- 3.)))))) (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (+ (/ 1. 6.) (* skoMC1 (- 1.)))))) (* skoSC1 (* skoMC1 (* skoMC1 (* skoMC1 (/ 1. 4.))))))))))) (* skoMC1 (* skoMC1 (* skoMC1 (+ (- 2.) (* skoMC1 (- 5.))))))) (> (* skoSC1 (+ (* skoMC1 (+ (- 1.) (* skoMC1 3.))) (* skoSC1 (+ (* skoMC1 (+ (- 2.) (* skoMC1 (- 3.)))) (* skoSC1 (+ (* skoMC1 (+ (/ 1. 6.) (* skoMC1 (- 1.)))) (* skoSC1 (* skoMC1 (/ 1. 4.))))))))) (* skoMC1 (+ (- 2.) (* skoMC1 (- 5.))))) (> skoSC1 0.) (<= (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (- 2.)))) (* skoSC1 (+ (* skoMC1 (* skoMC1 skoMC1)) (* skoSC1 (* skoMC1 (* skoMC1 skoMC1))))))) (* skoMC1 (* skoMC1 (* skoMC1 2.)))) (> (* skoSC1 (+ (* skoMC1 (* skoMC1 skoMC1)) (* skoSC1 (* skoMC1 (* skoMC1 skoMC1))))) 0.) (> (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 2.))) (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (- 1.)))) (* skoSC1 (* skoMC1 (* skoMC1 (* skoMC1 (- 1.))))))))) (* skoMC1 (* skoMC1 (* skoMC1 (- 2.))))) (<= (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (- 1.)))) (* skoSC1 (* skoMC1 (* skoMC1 (* skoMC1 (- 1.))))))) 0.) (<= (* skoSC1 (* skoMC1 (* skoMC1 (* skoMC1 (- 1.))))) (* skoMC1 (* skoMC1 skoMC1))) (> (* skoSC1 (* skoMC1 (* skoMC1 skoMC1))) (* skoMC1 (* skoMC1 (* skoMC1 (- 1.))))) (<= (* skoMC1 (* skoMC1 (* skoMC1 (- 2.)))) 0.) (> (* skoMC1 (* skoMC1 (* skoMC1 2.))) 0.) (<= skoSC1 (/ 5. 4.)) (<= 2. skoMC1) (<= 0. skoSC1) (> skoMC1 0.) (<= 0. skoMC1) (> (* skoSC1 skoMC1) (* skoMC1 (- 1.))) (<= (* skoSC1 (* skoMC1 (- 1.))) skoMC1) (> (* skoSC1 (* skoMC1 (* skoMC1 (* skoMC1 2.)))) (* skoMC1 (* skoMC1 (* skoMC1 (- 2.))))) (<= (* skoSC1 (* skoMC1 (* skoMC1 (* skoMC1 (- 2.))))) (* skoMC1 (* skoMC1 (* skoMC1 2.)))) (> (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (* skoMC1 12.)))) (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (+ (- 1.) (* skoMC1 6.))))) (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (- 1.)))) (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (/ 1. 12.)))) (* skoSC1 (* skoMC1 (* skoMC1 (* skoMC1 (/ 1. 12.))))))))))))) (* skoMC1 (* skoMC1 (* skoMC1 (+ (- 2.) (* skoMC1 (- 6.)))))))) (succedent (> (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (* skoMC1 (- 12.))))) (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (+ 1. (* skoMC1 (- 6.)))))) (* skoSC1 (+ (* skoMC1 (* skoMC1 skoMC1)) (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (/ (- 1.) 12.)))) (* skoSC1 (* skoMC1 (* skoMC1 (* skoMC1 (/ (- 1.) 12.))))))))))))) (* skoMC1 (* skoMC1 (* skoMC1 (+ 2. (* skoMC1 6.))))))))
-----[end problem]-----

-----[begin problem]-----
% In Mathematica format:
Timing[Resolve[Exists[{skoSC1,skoMC1}, And[0<=skoMC1,skoSC1*(skoMC1*(1+skoMC1*-3)+skoSC1*(skoMC1*(2+skoMC1*3)+skoSC1*(skoMC1*((-1/6)+skoMC1)+skoSC1*skoMC1*(-1/4))))<=skoMC1*(2+skoMC1*5),skoSC1*(skoMC1*skoMC1*skoMC1*(-1+skoMC1*3)+skoSC1*(skoMC1*skoMC1*skoMC1*(-2+skoMC1*-3)+skoSC1*(skoMC1*skoMC1*skoMC1*((1/6)+skoMC1*-1)+skoSC1*skoMC1*skoMC1*skoMC1*(1/4))))>skoMC1*skoMC1*skoMC1*(-2+skoMC1*-5),skoSC1*(skoMC1*(-1+skoMC1*3)+skoSC1*(skoMC1*(-2+skoMC1*-3)+skoSC1*(skoMC1*((1/6)+skoMC1*-1)+skoSC1*skoMC1*(1/4))))>skoMC1*(-2+skoMC1*-5),skoSC1>0,skoSC1*(skoMC1*skoMC1*skoMC1*-2+skoSC1*(skoMC1*skoMC1*skoMC1+skoSC1*skoMC1*skoMC1*skoMC1))<=skoMC1*skoMC1*skoMC1*2,skoSC1*(skoMC1*skoMC1*skoMC1+skoSC1*skoMC1*skoMC1*skoMC1)>0,skoSC1*(skoMC1*skoMC1*skoMC1*2+skoSC1*(skoMC1*skoMC1*skoMC1*-1+skoSC1*skoMC1*skoMC1*skoMC1*-1))>skoMC1*skoMC1*skoMC1*-2,skoSC1*(skoMC1*skoMC1*skoMC1*-1+skoSC1*skoMC1*skoMC1*skoMC1*-1)<=0,skoSC1*skoMC1*skoMC1*skoMC1*-1<=skoMC1*skoMC1*skoMC1,skoSC1*skoMC1*skoMC1*skoMC1>skoMC1*skoMC1*skoMC1*-1,skoMC1*skoMC1*skoMC1*-2<=0,skoMC1*skoMC1*skoMC1*2>0,skoSC1<=(5/4),2<=skoMC1,0<=skoSC1,skoMC1>0,0<=skoMC1,skoSC1*skoMC1>skoMC1*-1,skoSC1*skoMC1*-1<=skoMC1,skoSC1*skoMC1*skoMC1*skoMC1*2>skoMC1*skoMC1*skoMC1*-2,skoSC1*skoMC1*skoMC1*skoMC1*-2<=skoMC1*skoMC1*skoMC1*2,skoSC1*(skoMC1*skoMC1*skoMC1*skoMC1*12+skoSC1*(skoMC1*skoMC1*skoMC1*(-1+skoMC1*6)+skoSC1*(skoMC1*skoMC1*skoMC1*-1+skoSC1*(skoMC1*skoMC1*skoMC1*(1/12)+skoSC1*skoMC1*skoMC1*skoMC1*(1/12)))))>skoMC1*skoMC1*skoMC1*(-2+skoMC1*-6),skoSC1*(skoMC1*skoMC1*skoMC1*skoMC1*-12+skoSC1*(skoMC1*skoMC1*skoMC1*(1+skoMC1*-6)+skoSC1*(skoMC1*skoMC1*skoMC1+skoSC1*(skoMC1*skoMC1*skoMC1*(-1/12)+skoSC1*skoMC1*skoMC1*skoMC1*(-1/12)))))<=skoMC1*skoMC1*skoMC1*(2+skoMC1*6)]], Reals]]

% In QepcadB format:
(E skoSC1) (E skoMC1) [[0<=skoMC1]/\[[(skoSC1 ((skoMC1 (1+(skoMC1 (-3))))+(skoSC1 ((skoMC1 (2+(skoMC1 (3))))+(skoSC1 ((skoMC1 (-1/6+skoMC1))+(skoSC1 skoMC1 (-1/4))))))))<=(skoMC1 (2+(skoMC1 (5))))]/\[[(skoMC1 skoMC1 skoMC1 (-2+(skoMC1 (-5))))<(skoSC1 ((skoMC1 skoMC1 skoMC1 (-1+(skoMC1 (3))))+(skoSC1 ((skoMC1 skoMC1 skoMC1 (-2+(skoMC1 (-3))))+(skoSC1 ((skoMC1 skoMC1 skoMC1 (1/6+(skoMC1 (-1))))+(skoSC1 skoMC1 skoMC1 skoMC1 (1/4))))))))]/\[[(skoMC1 (-2+(skoMC1 (-5))))<(skoSC1 ((skoMC1 (-1+(skoMC1 (3))))+(skoSC1 ((skoMC1 (-2+(skoMC1 (-3))))+(skoSC1 ((skoMC1 (1/6+(skoMC1 (-1))))+(skoSC1 skoMC1 (1/4))))))))]/\[[0<skoSC1]/\[[(skoSC1 ((skoMC1 skoMC1 skoMC1 (-2))+(skoSC1 ((skoMC1 skoMC1 skoMC1)+(skoSC1 skoMC1 skoMC1 skoMC1)))))<=(skoMC1 skoMC1 skoMC1 (2))]/\[[0<(skoSC1 ((skoMC1 skoMC1 skoMC1)+(skoSC1 skoMC1 skoMC1 skoMC1)))]/\[[(skoMC1 skoMC1 skoMC1 (-2))<(skoSC1 ((skoMC1 skoMC1 skoMC1 (2))+(skoSC1 ((skoMC1 skoMC1 skoMC1 (-1))+(skoSC1 skoMC1 skoMC1 skoMC1 (-1))))))]/\[[(skoSC1 ((skoMC1 skoMC1 skoMC1 (-1))+(skoSC1 skoMC1 skoMC1 skoMC1 (-1))))<=0]/\[[(skoSC1 skoMC1 skoMC1 skoMC1 (-1))<=(skoMC1 skoMC1 skoMC1)]/\[[(skoMC1 skoMC1 skoMC1 (-1))<(skoSC1 skoMC1 skoMC1 skoMC1)]/\[[(skoMC1 skoMC1 skoMC1 (-2))<=0]/\[[0<(skoMC1 skoMC1 skoMC1 (2))]/\[[skoSC1<=5/4]/\[[2<=skoMC1]/\[[0<=skoSC1]/\[[0<skoMC1]/\[[0<=skoMC1]/\[[(skoMC1 (-1))<(skoSC1 skoMC1)]/\[[(skoSC1 skoMC1 (-1))<=skoMC1]/\[[(skoMC1 skoMC1 skoMC1 (-2))<(skoSC1 skoMC1 skoMC1 skoMC1 (2))]/\[[(skoSC1 skoMC1 skoMC1 skoMC1 (-2))<=(skoMC1 skoMC1 skoMC1 (2))]/\[[(skoMC1 skoMC1 skoMC1 (-2+(skoMC1 (-6))))<(skoSC1 ((skoMC1 skoMC1 skoMC1 skoMC1 (12))+(skoSC1 ((skoMC1 skoMC1 skoMC1 (-1+(skoMC1 (6))))+(skoSC1 ((skoMC1 skoMC1 skoMC1 (-1))+(skoSC1 ((skoMC1 skoMC1 skoMC1 (1/12))+(skoSC1 skoMC1 skoMC1 skoMC1 (1/12))))))))))]/\[(skoSC1 ((skoMC1 skoMC1 skoMC1 skoMC1 (-12))+(skoSC1 ((skoMC1 skoMC1 skoMC1 (1+(skoMC1 (-6))))+(skoSC1 ((skoMC1 skoMC1 skoMC1)+(skoSC1 ((skoMC1 skoMC1 skoMC1 (-1/12))+(skoSC1 skoMC1 skoMC1 skoMC1 (-1/12))))))))))<=(skoMC1 skoMC1 skoMC1 (2+(skoMC1 (6))))]]]]]]]]]]]]]]]]]]]]]]]].

% In SMTLib2 format:
(declare-fun skoSC1 () Real) (declare-fun skoMC1 () Real) (assert (and (<= 0. skoMC1) (and (<= (* skoSC1 (+ (* skoMC1 (+ 1. (* skoMC1 (- 3.)))) (* skoSC1 (+ (* skoMC1 (+ 2. (* skoMC1 3.))) (* skoSC1 (+ (* skoMC1 (+ (/ (- 1.) 6.) skoMC1)) (* skoSC1 (* skoMC1 (/ (- 1.) 4.))))))))) (* skoMC1 (+ 2. (* skoMC1 5.)))) (and (> (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (+ (- 1.) (* skoMC1 3.))))) (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (+ (- 2.) (* skoMC1 (- 3.)))))) (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (+ (/ 1. 6.) (* skoMC1 (- 1.)))))) (* skoSC1 (* skoMC1 (* skoMC1 (* skoMC1 (/ 1. 4.))))))))))) (* skoMC1 (* skoMC1 (* skoMC1 (+ (- 2.) (* skoMC1 (- 5.))))))) (and (> (* skoSC1 (+ (* skoMC1 (+ (- 1.) (* skoMC1 3.))) (* skoSC1 (+ (* skoMC1 (+ (- 2.) (* skoMC1 (- 3.)))) (* skoSC1 (+ (* skoMC1 (+ (/ 1. 6.) (* skoMC1 (- 1.)))) (* skoSC1 (* skoMC1 (/ 1. 4.))))))))) (* skoMC1 (+ (- 2.) (* skoMC1 (- 5.))))) (and (> skoSC1 0.) (and (<= (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (- 2.)))) (* skoSC1 (+ (* skoMC1 (* skoMC1 skoMC1)) (* skoSC1 (* skoMC1 (* skoMC1 skoMC1))))))) (* skoMC1 (* skoMC1 (* skoMC1 2.)))) (and (> (* skoSC1 (+ (* skoMC1 (* skoMC1 skoMC1)) (* skoSC1 (* skoMC1 (* skoMC1 skoMC1))))) 0.) (and (> (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 2.))) (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (- 1.)))) (* skoSC1 (* skoMC1 (* skoMC1 (* skoMC1 (- 1.))))))))) (* skoMC1 (* skoMC1 (* skoMC1 (- 2.))))) (and (<= (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (- 1.)))) (* skoSC1 (* skoMC1 (* skoMC1 (* skoMC1 (- 1.))))))) 0.) (and (<= (* skoSC1 (* skoMC1 (* skoMC1 (* skoMC1 (- 1.))))) (* skoMC1 (* skoMC1 skoMC1))) (and (> (* skoSC1 (* skoMC1 (* skoMC1 skoMC1))) (* skoMC1 (* skoMC1 (* skoMC1 (- 1.))))) (and (<= (* skoMC1 (* skoMC1 (* skoMC1 (- 2.)))) 0.) (and (> (* skoMC1 (* skoMC1 (* skoMC1 2.))) 0.) (and (<= skoSC1 (/ 5. 4.)) (and (<= 2. skoMC1) (and (<= 0. skoSC1) (and (> skoMC1 0.) (and (<= 0. skoMC1) (and (> (* skoSC1 skoMC1) (* skoMC1 (- 1.))) (and (<= (* skoSC1 (* skoMC1 (- 1.))) skoMC1) (and (> (* skoSC1 (* skoMC1 (* skoMC1 (* skoMC1 2.)))) (* skoMC1 (* skoMC1 (* skoMC1 (- 2.))))) (and (<= (* skoSC1 (* skoMC1 (* skoMC1 (* skoMC1 (- 2.))))) (* skoMC1 (* skoMC1 (* skoMC1 2.)))) (and (> (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (* skoMC1 12.)))) (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (+ (- 1.) (* skoMC1 6.))))) (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (- 1.)))) (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (/ 1. 12.)))) (* skoSC1 (* skoMC1 (* skoMC1 (* skoMC1 (/ 1. 12.))))))))))))) (* skoMC1 (* skoMC1 (* skoMC1 (+ (- 2.) (* skoMC1 (- 6.))))))) (<= (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (* skoMC1 (- 12.))))) (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (+ 1. (* skoMC1 (- 6.)))))) (* skoSC1 (+ (* skoMC1 (* skoMC1 skoMC1)) (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (/ (- 1.) 12.)))) (* skoSC1 (* skoMC1 (* skoMC1 (* skoMC1 (/ (- 1.) 12.))))))))))))) (* skoMC1 (* skoMC1 (* skoMC1 (+ 2. (* skoMC1 6.))))))))))))))))))))))))))))))

% In GRF format:
(sequent " MetiTarski formula " (antecedent (<= 0. skoMC1) (<= (* skoSC1 (+ (* skoMC1 (+ 1. (* skoMC1 (- 3.)))) (* skoSC1 (+ (* skoMC1 (+ 2. (* skoMC1 3.))) (* skoSC1 (+ (* skoMC1 (+ (/ (- 1.) 6.) skoMC1)) (* skoSC1 (* skoMC1 (/ (- 1.) 4.))))))))) (* skoMC1 (+ 2. (* skoMC1 5.)))) (> (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (+ (- 1.) (* skoMC1 3.))))) (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (+ (- 2.) (* skoMC1 (- 3.)))))) (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (+ (/ 1. 6.) (* skoMC1 (- 1.)))))) (* skoSC1 (* skoMC1 (* skoMC1 (* skoMC1 (/ 1. 4.))))))))))) (* skoMC1 (* skoMC1 (* skoMC1 (+ (- 2.) (* skoMC1 (- 5.))))))) (> (* skoSC1 (+ (* skoMC1 (+ (- 1.) (* skoMC1 3.))) (* skoSC1 (+ (* skoMC1 (+ (- 2.) (* skoMC1 (- 3.)))) (* skoSC1 (+ (* skoMC1 (+ (/ 1. 6.) (* skoMC1 (- 1.)))) (* skoSC1 (* skoMC1 (/ 1. 4.))))))))) (* skoMC1 (+ (- 2.) (* skoMC1 (- 5.))))) (> skoSC1 0.) (<= (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (- 2.)))) (* skoSC1 (+ (* skoMC1 (* skoMC1 skoMC1)) (* skoSC1 (* skoMC1 (* skoMC1 skoMC1))))))) (* skoMC1 (* skoMC1 (* skoMC1 2.)))) (> (* skoSC1 (+ (* skoMC1 (* skoMC1 skoMC1)) (* skoSC1 (* skoMC1 (* skoMC1 skoMC1))))) 0.) (> (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 2.))) (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (- 1.)))) (* skoSC1 (* skoMC1 (* skoMC1 (* skoMC1 (- 1.))))))))) (* skoMC1 (* skoMC1 (* skoMC1 (- 2.))))) (<= (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (- 1.)))) (* skoSC1 (* skoMC1 (* skoMC1 (* skoMC1 (- 1.))))))) 0.) (<= (* skoSC1 (* skoMC1 (* skoMC1 (* skoMC1 (- 1.))))) (* skoMC1 (* skoMC1 skoMC1))) (> (* skoSC1 (* skoMC1 (* skoMC1 skoMC1))) (* skoMC1 (* skoMC1 (* skoMC1 (- 1.))))) (<= (* skoMC1 (* skoMC1 (* skoMC1 (- 2.)))) 0.) (> (* skoMC1 (* skoMC1 (* skoMC1 2.))) 0.) (<= skoSC1 (/ 5. 4.)) (<= 2. skoMC1) (<= 0. skoSC1) (> skoMC1 0.) (<= 0. skoMC1) (> (* skoSC1 skoMC1) (* skoMC1 (- 1.))) (<= (* skoSC1 (* skoMC1 (- 1.))) skoMC1) (> (* skoSC1 (* skoMC1 (* skoMC1 (* skoMC1 2.)))) (* skoMC1 (* skoMC1 (* skoMC1 (- 2.))))) (<= (* skoSC1 (* skoMC1 (* skoMC1 (* skoMC1 (- 2.))))) (* skoMC1 (* skoMC1 (* skoMC1 2.)))) (> (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (* skoMC1 12.)))) (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (+ (- 1.) (* skoMC1 6.))))) (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (- 1.)))) (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (/ 1. 12.)))) (* skoSC1 (* skoMC1 (* skoMC1 (* skoMC1 (/ 1. 12.))))))))))))) (* skoMC1 (* skoMC1 (* skoMC1 (+ (- 2.) (* skoMC1 (- 6.)))))))) (succedent (> (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (* skoMC1 (- 12.))))) (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (+ 1. (* skoMC1 (- 6.)))))) (* skoSC1 (+ (* skoMC1 (* skoMC1 skoMC1)) (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (/ (- 1.) 12.)))) (* skoSC1 (* skoMC1 (* skoMC1 (* skoMC1 (/ (- 1.) 12.))))))))))))) (* skoMC1 (* skoMC1 (* skoMC1 (+ 2. (* skoMC1 6.))))))))
-----[end problem]-----

-----[begin problem]-----
% In Mathematica format:
Timing[Resolve[Exists[{skoSC1,skoMC1}, And[skoSC1*(skoMC1*(1+skoMC1*-3)+skoSC1*(skoMC1*(2+skoMC1*3)+skoSC1*(skoMC1*((-1/6)+skoMC1)+skoSC1*(skoMC1*(-1/4)+skoSC1*skoSC1*(skoMC1*(1/360)+skoSC1*skoSC1*(skoMC1*(-1/20160)+skoSC1*skoSC1*(skoMC1*(1/1814400)+skoSC1*skoSC1*skoMC1*(-1/239500800))))))))<=skoMC1*(2+skoMC1*5),skoSC1*(skoMC1*(1+skoMC1*-3)+skoSC1*(skoMC1*(2+skoMC1*3)+skoSC1*(skoMC1*((-1/6)+skoMC1)+skoSC1*skoMC1*(-1/4))))<=skoMC1*(2+skoMC1*5),skoSC1*(skoMC1*skoMC1*skoMC1*(-1+skoMC1*3)+skoSC1*(skoMC1*skoMC1*skoMC1*(-2+skoMC1*-3)+skoSC1*(skoMC1*skoMC1*skoMC1*((1/6)+skoMC1*-1)+skoSC1*skoMC1*skoMC1*skoMC1*(1/4))))>skoMC1*skoMC1*skoMC1*(-2+skoMC1*-5),skoSC1*(skoMC1*(-1+skoMC1*3)+skoSC1*(skoMC1*(-2+skoMC1*-3)+skoSC1*(skoMC1*((1/6)+skoMC1*-1)+skoSC1*skoMC1*(1/4))))>skoMC1*(-2+skoMC1*-5),skoSC1>0,skoSC1*(skoMC1*skoMC1*skoMC1*-2+skoSC1*(skoMC1*skoMC1*skoMC1+skoSC1*skoMC1*skoMC1*skoMC1))<=skoMC1*skoMC1*skoMC1*2,skoSC1*(skoMC1*skoMC1*skoMC1+skoSC1*skoMC1*skoMC1*skoMC1)>0,skoSC1*(skoMC1*skoMC1*skoMC1*2+skoSC1*(skoMC1*skoMC1*skoMC1*-1+skoSC1*skoMC1*skoMC1*skoMC1*-1))>skoMC1*skoMC1*skoMC1*-2,skoSC1*(skoMC1*skoMC1*skoMC1*-1+skoSC1*skoMC1*skoMC1*skoMC1*-1)<=0,skoSC1*skoMC1*skoMC1*skoMC1*-1<=skoMC1*skoMC1*skoMC1,skoSC1*skoMC1*skoMC1*skoMC1>skoMC1*skoMC1*skoMC1*-1,skoMC1*skoMC1*skoMC1*-2<=0,skoMC1*skoMC1*skoMC1*2>0,skoSC1<=(5/4),2<=skoMC1,0<=skoSC1,skoMC1>0,0<=skoMC1,skoSC1*skoMC1>skoMC1*-1,skoSC1*skoMC1*-1<=skoMC1,skoSC1*skoMC1*skoMC1*skoMC1*2>skoMC1*skoMC1*skoMC1*-2,skoSC1*skoMC1*skoMC1*skoMC1*-2<=skoMC1*skoMC1*skoMC1*2,skoSC1*(skoMC1*skoMC1*skoMC1*skoMC1*12+skoSC1*(skoMC1*skoMC1*skoMC1*(-1+skoMC1*6)+skoSC1*(skoMC1*skoMC1*skoMC1*-1+skoSC1*(skoMC1*skoMC1*skoMC1*(1/12)+skoSC1*skoMC1*skoMC1*skoMC1*(1/12)))))>skoMC1*skoMC1*skoMC1*(-2+skoMC1*-6),skoSC1*(skoMC1*skoMC1*skoMC1*skoMC1*-12+skoSC1*(skoMC1*skoMC1*skoMC1*(1+skoMC1*-6)+skoSC1*(skoMC1*skoMC1*skoMC1+skoSC1*(skoMC1*skoMC1*skoMC1*(-1/12)+skoSC1*skoMC1*skoMC1*skoMC1*(-1/12)))))<=skoMC1*skoMC1*skoMC1*(2+skoMC1*6)]], Reals]]

% In QepcadB format:
(E skoSC1) (E skoMC1) [[(skoSC1 ((skoMC1 (1+(skoMC1 (-3))))+(skoSC1 ((skoMC1 (2+(skoMC1 (3))))+(skoSC1 ((skoMC1 (-1/6+skoMC1))+(skoSC1 ((skoMC1 (-1/4))+(skoSC1 skoSC1 ((skoMC1 (1/360))+(skoSC1 skoSC1 ((skoMC1 (-1/20160))+(skoSC1 skoSC1 ((skoMC1 (1/1814400))+(skoSC1 skoSC1 skoMC1 (-1/239500800))))))))))))))))<=(skoMC1 (2+(skoMC1 (5))))]/\[[(skoSC1 ((skoMC1 (1+(skoMC1 (-3))))+(skoSC1 ((skoMC1 (2+(skoMC1 (3))))+(skoSC1 ((skoMC1 (-1/6+skoMC1))+(skoSC1 skoMC1 (-1/4))))))))<=(skoMC1 (2+(skoMC1 (5))))]/\[[(skoMC1 skoMC1 skoMC1 (-2+(skoMC1 (-5))))<(skoSC1 ((skoMC1 skoMC1 skoMC1 (-1+(skoMC1 (3))))+(skoSC1 ((skoMC1 skoMC1 skoMC1 (-2+(skoMC1 (-3))))+(skoSC1 ((skoMC1 skoMC1 skoMC1 (1/6+(skoMC1 (-1))))+(skoSC1 skoMC1 skoMC1 skoMC1 (1/4))))))))]/\[[(skoMC1 (-2+(skoMC1 (-5))))<(skoSC1 ((skoMC1 (-1+(skoMC1 (3))))+(skoSC1 ((skoMC1 (-2+(skoMC1 (-3))))+(skoSC1 ((skoMC1 (1/6+(skoMC1 (-1))))+(skoSC1 skoMC1 (1/4))))))))]/\[[0<skoSC1]/\[[(skoSC1 ((skoMC1 skoMC1 skoMC1 (-2))+(skoSC1 ((skoMC1 skoMC1 skoMC1)+(skoSC1 skoMC1 skoMC1 skoMC1)))))<=(skoMC1 skoMC1 skoMC1 (2))]/\[[0<(skoSC1 ((skoMC1 skoMC1 skoMC1)+(skoSC1 skoMC1 skoMC1 skoMC1)))]/\[[(skoMC1 skoMC1 skoMC1 (-2))<(skoSC1 ((skoMC1 skoMC1 skoMC1 (2))+(skoSC1 ((skoMC1 skoMC1 skoMC1 (-1))+(skoSC1 skoMC1 skoMC1 skoMC1 (-1))))))]/\[[(skoSC1 ((skoMC1 skoMC1 skoMC1 (-1))+(skoSC1 skoMC1 skoMC1 skoMC1 (-1))))<=0]/\[[(skoSC1 skoMC1 skoMC1 skoMC1 (-1))<=(skoMC1 skoMC1 skoMC1)]/\[[(skoMC1 skoMC1 skoMC1 (-1))<(skoSC1 skoMC1 skoMC1 skoMC1)]/\[[(skoMC1 skoMC1 skoMC1 (-2))<=0]/\[[0<(skoMC1 skoMC1 skoMC1 (2))]/\[[skoSC1<=5/4]/\[[2<=skoMC1]/\[[0<=skoSC1]/\[[0<skoMC1]/\[[0<=skoMC1]/\[[(skoMC1 (-1))<(skoSC1 skoMC1)]/\[[(skoSC1 skoMC1 (-1))<=skoMC1]/\[[(skoMC1 skoMC1 skoMC1 (-2))<(skoSC1 skoMC1 skoMC1 skoMC1 (2))]/\[[(skoSC1 skoMC1 skoMC1 skoMC1 (-2))<=(skoMC1 skoMC1 skoMC1 (2))]/\[[(skoMC1 skoMC1 skoMC1 (-2+(skoMC1 (-6))))<(skoSC1 ((skoMC1 skoMC1 skoMC1 skoMC1 (12))+(skoSC1 ((skoMC1 skoMC1 skoMC1 (-1+(skoMC1 (6))))+(skoSC1 ((skoMC1 skoMC1 skoMC1 (-1))+(skoSC1 ((skoMC1 skoMC1 skoMC1 (1/12))+(skoSC1 skoMC1 skoMC1 skoMC1 (1/12))))))))))]/\[(skoSC1 ((skoMC1 skoMC1 skoMC1 skoMC1 (-12))+(skoSC1 ((skoMC1 skoMC1 skoMC1 (1+(skoMC1 (-6))))+(skoSC1 ((skoMC1 skoMC1 skoMC1)+(skoSC1 ((skoMC1 skoMC1 skoMC1 (-1/12))+(skoSC1 skoMC1 skoMC1 skoMC1 (-1/12))))))))))<=(skoMC1 skoMC1 skoMC1 (2+(skoMC1 (6))))]]]]]]]]]]]]]]]]]]]]]]]].

% In SMTLib2 format:
(declare-fun skoSC1 () Real) (declare-fun skoMC1 () Real) (assert (and (<= (* skoSC1 (+ (* skoMC1 (+ 1. (* skoMC1 (- 3.)))) (* skoSC1 (+ (* skoMC1 (+ 2. (* skoMC1 3.))) (* skoSC1 (+ (* skoMC1 (+ (/ (- 1.) 6.) skoMC1)) (* skoSC1 (+ (* skoMC1 (/ (- 1.) 4.)) (* skoSC1 (* skoSC1 (+ (* skoMC1 (/ 1. 360.)) (* skoSC1 (* skoSC1 (+ (* skoMC1 (/ (- 1.) 20160.)) (* skoSC1 (* skoSC1 (+ (* skoMC1 (/ 1. 1814400.)) (* skoSC1 (* skoSC1 (* skoMC1 (/ (- 1.) 239500800.))))))))))))))))))))) (* skoMC1 (+ 2. (* skoMC1 5.)))) (and (<= (* skoSC1 (+ (* skoMC1 (+ 1. (* skoMC1 (- 3.)))) (* skoSC1 (+ (* skoMC1 (+ 2. (* skoMC1 3.))) (* skoSC1 (+ (* skoMC1 (+ (/ (- 1.) 6.) skoMC1)) (* skoSC1 (* skoMC1 (/ (- 1.) 4.))))))))) (* skoMC1 (+ 2. (* skoMC1 5.)))) (and (> (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (+ (- 1.) (* skoMC1 3.))))) (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (+ (- 2.) (* skoMC1 (- 3.)))))) (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (+ (/ 1. 6.) (* skoMC1 (- 1.)))))) (* skoSC1 (* skoMC1 (* skoMC1 (* skoMC1 (/ 1. 4.))))))))))) (* skoMC1 (* skoMC1 (* skoMC1 (+ (- 2.) (* skoMC1 (- 5.))))))) (and (> (* skoSC1 (+ (* skoMC1 (+ (- 1.) (* skoMC1 3.))) (* skoSC1 (+ (* skoMC1 (+ (- 2.) (* skoMC1 (- 3.)))) (* skoSC1 (+ (* skoMC1 (+ (/ 1. 6.) (* skoMC1 (- 1.)))) (* skoSC1 (* skoMC1 (/ 1. 4.))))))))) (* skoMC1 (+ (- 2.) (* skoMC1 (- 5.))))) (and (> skoSC1 0.) (and (<= (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (- 2.)))) (* skoSC1 (+ (* skoMC1 (* skoMC1 skoMC1)) (* skoSC1 (* skoMC1 (* skoMC1 skoMC1))))))) (* skoMC1 (* skoMC1 (* skoMC1 2.)))) (and (> (* skoSC1 (+ (* skoMC1 (* skoMC1 skoMC1)) (* skoSC1 (* skoMC1 (* skoMC1 skoMC1))))) 0.) (and (> (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 2.))) (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (- 1.)))) (* skoSC1 (* skoMC1 (* skoMC1 (* skoMC1 (- 1.))))))))) (* skoMC1 (* skoMC1 (* skoMC1 (- 2.))))) (and (<= (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (- 1.)))) (* skoSC1 (* skoMC1 (* skoMC1 (* skoMC1 (- 1.))))))) 0.) (and (<= (* skoSC1 (* skoMC1 (* skoMC1 (* skoMC1 (- 1.))))) (* skoMC1 (* skoMC1 skoMC1))) (and (> (* skoSC1 (* skoMC1 (* skoMC1 skoMC1))) (* skoMC1 (* skoMC1 (* skoMC1 (- 1.))))) (and (<= (* skoMC1 (* skoMC1 (* skoMC1 (- 2.)))) 0.) (and (> (* skoMC1 (* skoMC1 (* skoMC1 2.))) 0.) (and (<= skoSC1 (/ 5. 4.)) (and (<= 2. skoMC1) (and (<= 0. skoSC1) (and (> skoMC1 0.) (and (<= 0. skoMC1) (and (> (* skoSC1 skoMC1) (* skoMC1 (- 1.))) (and (<= (* skoSC1 (* skoMC1 (- 1.))) skoMC1) (and (> (* skoSC1 (* skoMC1 (* skoMC1 (* skoMC1 2.)))) (* skoMC1 (* skoMC1 (* skoMC1 (- 2.))))) (and (<= (* skoSC1 (* skoMC1 (* skoMC1 (* skoMC1 (- 2.))))) (* skoMC1 (* skoMC1 (* skoMC1 2.)))) (and (> (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (* skoMC1 12.)))) (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (+ (- 1.) (* skoMC1 6.))))) (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (- 1.)))) (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (/ 1. 12.)))) (* skoSC1 (* skoMC1 (* skoMC1 (* skoMC1 (/ 1. 12.))))))))))))) (* skoMC1 (* skoMC1 (* skoMC1 (+ (- 2.) (* skoMC1 (- 6.))))))) (<= (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (* skoMC1 (- 12.))))) (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (+ 1. (* skoMC1 (- 6.)))))) (* skoSC1 (+ (* skoMC1 (* skoMC1 skoMC1)) (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (/ (- 1.) 12.)))) (* skoSC1 (* skoMC1 (* skoMC1 (* skoMC1 (/ (- 1.) 12.))))))))))))) (* skoMC1 (* skoMC1 (* skoMC1 (+ 2. (* skoMC1 6.))))))))))))))))))))))))))))))

% In GRF format:
(sequent " MetiTarski formula " (antecedent (<= (* skoSC1 (+ (* skoMC1 (+ 1. (* skoMC1 (- 3.)))) (* skoSC1 (+ (* skoMC1 (+ 2. (* skoMC1 3.))) (* skoSC1 (+ (* skoMC1 (+ (/ (- 1.) 6.) skoMC1)) (* skoSC1 (+ (* skoMC1 (/ (- 1.) 4.)) (* skoSC1 (* skoSC1 (+ (* skoMC1 (/ 1. 360.)) (* skoSC1 (* skoSC1 (+ (* skoMC1 (/ (- 1.) 20160.)) (* skoSC1 (* skoSC1 (+ (* skoMC1 (/ 1. 1814400.)) (* skoSC1 (* skoSC1 (* skoMC1 (/ (- 1.) 239500800.))))))))))))))))))))) (* skoMC1 (+ 2. (* skoMC1 5.)))) (<= (* skoSC1 (+ (* skoMC1 (+ 1. (* skoMC1 (- 3.)))) (* skoSC1 (+ (* skoMC1 (+ 2. (* skoMC1 3.))) (* skoSC1 (+ (* skoMC1 (+ (/ (- 1.) 6.) skoMC1)) (* skoSC1 (* skoMC1 (/ (- 1.) 4.))))))))) (* skoMC1 (+ 2. (* skoMC1 5.)))) (> (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (+ (- 1.) (* skoMC1 3.))))) (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (+ (- 2.) (* skoMC1 (- 3.)))))) (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (+ (/ 1. 6.) (* skoMC1 (- 1.)))))) (* skoSC1 (* skoMC1 (* skoMC1 (* skoMC1 (/ 1. 4.))))))))))) (* skoMC1 (* skoMC1 (* skoMC1 (+ (- 2.) (* skoMC1 (- 5.))))))) (> (* skoSC1 (+ (* skoMC1 (+ (- 1.) (* skoMC1 3.))) (* skoSC1 (+ (* skoMC1 (+ (- 2.) (* skoMC1 (- 3.)))) (* skoSC1 (+ (* skoMC1 (+ (/ 1. 6.) (* skoMC1 (- 1.)))) (* skoSC1 (* skoMC1 (/ 1. 4.))))))))) (* skoMC1 (+ (- 2.) (* skoMC1 (- 5.))))) (> skoSC1 0.) (<= (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (- 2.)))) (* skoSC1 (+ (* skoMC1 (* skoMC1 skoMC1)) (* skoSC1 (* skoMC1 (* skoMC1 skoMC1))))))) (* skoMC1 (* skoMC1 (* skoMC1 2.)))) (> (* skoSC1 (+ (* skoMC1 (* skoMC1 skoMC1)) (* skoSC1 (* skoMC1 (* skoMC1 skoMC1))))) 0.) (> (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 2.))) (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (- 1.)))) (* skoSC1 (* skoMC1 (* skoMC1 (* skoMC1 (- 1.))))))))) (* skoMC1 (* skoMC1 (* skoMC1 (- 2.))))) (<= (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (- 1.)))) (* skoSC1 (* skoMC1 (* skoMC1 (* skoMC1 (- 1.))))))) 0.) (<= (* skoSC1 (* skoMC1 (* skoMC1 (* skoMC1 (- 1.))))) (* skoMC1 (* skoMC1 skoMC1))) (> (* skoSC1 (* skoMC1 (* skoMC1 skoMC1))) (* skoMC1 (* skoMC1 (* skoMC1 (- 1.))))) (<= (* skoMC1 (* skoMC1 (* skoMC1 (- 2.)))) 0.) (> (* skoMC1 (* skoMC1 (* skoMC1 2.))) 0.) (<= skoSC1 (/ 5. 4.)) (<= 2. skoMC1) (<= 0. skoSC1) (> skoMC1 0.) (<= 0. skoMC1) (> (* skoSC1 skoMC1) (* skoMC1 (- 1.))) (<= (* skoSC1 (* skoMC1 (- 1.))) skoMC1) (> (* skoSC1 (* skoMC1 (* skoMC1 (* skoMC1 2.)))) (* skoMC1 (* skoMC1 (* skoMC1 (- 2.))))) (<= (* skoSC1 (* skoMC1 (* skoMC1 (* skoMC1 (- 2.))))) (* skoMC1 (* skoMC1 (* skoMC1 2.)))) (> (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (* skoMC1 12.)))) (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (+ (- 1.) (* skoMC1 6.))))) (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (- 1.)))) (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (/ 1. 12.)))) (* skoSC1 (* skoMC1 (* skoMC1 (* skoMC1 (/ 1. 12.))))))))))))) (* skoMC1 (* skoMC1 (* skoMC1 (+ (- 2.) (* skoMC1 (- 6.)))))))) (succedent (> (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (* skoMC1 (- 12.))))) (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (+ 1. (* skoMC1 (- 6.)))))) (* skoSC1 (+ (* skoMC1 (* skoMC1 skoMC1)) (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (/ (- 1.) 12.)))) (* skoSC1 (* skoMC1 (* skoMC1 (* skoMC1 (/ (- 1.) 12.))))))))))))) (* skoMC1 (* skoMC1 (* skoMC1 (+ 2. (* skoMC1 6.))))))))
-----[end problem]-----

-----[begin problem]-----
% In Mathematica format:
Timing[Resolve[Exists[{skoSC1,skoMC1}, And[skoSC1*skoMC1*skoMC1*skoMC1*-1<=skoMC1*skoMC1*skoMC1,skoSC1*(skoMC1*(1+skoMC1*-3)+skoSC1*(skoMC1*(2+skoMC1*3)+skoSC1*(skoMC1*((-1/6)+skoMC1)+skoSC1*skoMC1*(-1/4))))<=skoMC1*(2+skoMC1*5),skoSC1*(skoMC1*skoMC1*skoMC1*(-1+skoMC1*3)+skoSC1*(skoMC1*skoMC1*skoMC1*(-2+skoMC1*-3)+skoSC1*(skoMC1*skoMC1*skoMC1*((1/6)+skoMC1*-1)+skoSC1*skoMC1*skoMC1*skoMC1*(1/4))))>skoMC1*skoMC1*skoMC1*(-2+skoMC1*-5),skoSC1*(skoMC1*(-1+skoMC1*3)+skoSC1*(skoMC1*(-2+skoMC1*-3)+skoSC1*(skoMC1*((1/6)+skoMC1*-1)+skoSC1*skoMC1*(1/4))))>skoMC1*(-2+skoMC1*-5),skoSC1>0,skoSC1*(skoMC1*skoMC1*skoMC1*-2+skoSC1*(skoMC1*skoMC1*skoMC1+skoSC1*skoMC1*skoMC1*skoMC1))<=skoMC1*skoMC1*skoMC1*2,skoSC1*(skoMC1*skoMC1*skoMC1+skoSC1*skoMC1*skoMC1*skoMC1)>0,skoSC1*(skoMC1*skoMC1*skoMC1*2+skoSC1*(skoMC1*skoMC1*skoMC1*-1+skoSC1*skoMC1*skoMC1*skoMC1*-1))>skoMC1*skoMC1*skoMC1*-2,skoSC1*(skoMC1*skoMC1*skoMC1*-1+skoSC1*skoMC1*skoMC1*skoMC1*-1)<=0,skoSC1*skoMC1*skoMC1*skoMC1*-1<=skoMC1*skoMC1*skoMC1,skoSC1*skoMC1*skoMC1*skoMC1>skoMC1*skoMC1*skoMC1*-1,skoMC1*skoMC1*skoMC1*-2<=0,skoMC1*skoMC1*skoMC1*2>0,skoSC1<=(5/4),2<=skoMC1,0<=skoSC1,skoMC1>0,0<=skoMC1,skoSC1*skoMC1>skoMC1*-1,skoSC1*skoMC1*-1<=skoMC1,skoSC1*skoMC1*skoMC1*skoMC1*2>skoMC1*skoMC1*skoMC1*-2,skoSC1*skoMC1*skoMC1*skoMC1*-2<=skoMC1*skoMC1*skoMC1*2,skoSC1*(skoMC1*skoMC1*skoMC1*skoMC1*12+skoSC1*(skoMC1*skoMC1*skoMC1*(-1+skoMC1*6)+skoSC1*(skoMC1*skoMC1*skoMC1*-1+skoSC1*(skoMC1*skoMC1*skoMC1*(1/12)+skoSC1*skoMC1*skoMC1*skoMC1*(1/12)))))>skoMC1*skoMC1*skoMC1*(-2+skoMC1*-6),skoSC1*(skoMC1*skoMC1*skoMC1*skoMC1*-12+skoSC1*(skoMC1*skoMC1*skoMC1*(1+skoMC1*-6)+skoSC1*(skoMC1*skoMC1*skoMC1+skoSC1*(skoMC1*skoMC1*skoMC1*(-1/12)+skoSC1*skoMC1*skoMC1*skoMC1*(-1/12)))))<=skoMC1*skoMC1*skoMC1*(2+skoMC1*6)]], Reals]]

% In QepcadB format:
(E skoSC1) (E skoMC1) [[(skoSC1 skoMC1 skoMC1 skoMC1 (-1))<=(skoMC1 skoMC1 skoMC1)]/\[[(skoSC1 ((skoMC1 (1+(skoMC1 (-3))))+(skoSC1 ((skoMC1 (2+(skoMC1 (3))))+(skoSC1 ((skoMC1 (-1/6+skoMC1))+(skoSC1 skoMC1 (-1/4))))))))<=(skoMC1 (2+(skoMC1 (5))))]/\[[(skoMC1 skoMC1 skoMC1 (-2+(skoMC1 (-5))))<(skoSC1 ((skoMC1 skoMC1 skoMC1 (-1+(skoMC1 (3))))+(skoSC1 ((skoMC1 skoMC1 skoMC1 (-2+(skoMC1 (-3))))+(skoSC1 ((skoMC1 skoMC1 skoMC1 (1/6+(skoMC1 (-1))))+(skoSC1 skoMC1 skoMC1 skoMC1 (1/4))))))))]/\[[(skoMC1 (-2+(skoMC1 (-5))))<(skoSC1 ((skoMC1 (-1+(skoMC1 (3))))+(skoSC1 ((skoMC1 (-2+(skoMC1 (-3))))+(skoSC1 ((skoMC1 (1/6+(skoMC1 (-1))))+(skoSC1 skoMC1 (1/4))))))))]/\[[0<skoSC1]/\[[(skoSC1 ((skoMC1 skoMC1 skoMC1 (-2))+(skoSC1 ((skoMC1 skoMC1 skoMC1)+(skoSC1 skoMC1 skoMC1 skoMC1)))))<=(skoMC1 skoMC1 skoMC1 (2))]/\[[0<(skoSC1 ((skoMC1 skoMC1 skoMC1)+(skoSC1 skoMC1 skoMC1 skoMC1)))]/\[[(skoMC1 skoMC1 skoMC1 (-2))<(skoSC1 ((skoMC1 skoMC1 skoMC1 (2))+(skoSC1 ((skoMC1 skoMC1 skoMC1 (-1))+(skoSC1 skoMC1 skoMC1 skoMC1 (-1))))))]/\[[(skoSC1 ((skoMC1 skoMC1 skoMC1 (-1))+(skoSC1 skoMC1 skoMC1 skoMC1 (-1))))<=0]/\[[(skoSC1 skoMC1 skoMC1 skoMC1 (-1))<=(skoMC1 skoMC1 skoMC1)]/\[[(skoMC1 skoMC1 skoMC1 (-1))<(skoSC1 skoMC1 skoMC1 skoMC1)]/\[[(skoMC1 skoMC1 skoMC1 (-2))<=0]/\[[0<(skoMC1 skoMC1 skoMC1 (2))]/\[[skoSC1<=5/4]/\[[2<=skoMC1]/\[[0<=skoSC1]/\[[0<skoMC1]/\[[0<=skoMC1]/\[[(skoMC1 (-1))<(skoSC1 skoMC1)]/\[[(skoSC1 skoMC1 (-1))<=skoMC1]/\[[(skoMC1 skoMC1 skoMC1 (-2))<(skoSC1 skoMC1 skoMC1 skoMC1 (2))]/\[[(skoSC1 skoMC1 skoMC1 skoMC1 (-2))<=(skoMC1 skoMC1 skoMC1 (2))]/\[[(skoMC1 skoMC1 skoMC1 (-2+(skoMC1 (-6))))<(skoSC1 ((skoMC1 skoMC1 skoMC1 skoMC1 (12))+(skoSC1 ((skoMC1 skoMC1 skoMC1 (-1+(skoMC1 (6))))+(skoSC1 ((skoMC1 skoMC1 skoMC1 (-1))+(skoSC1 ((skoMC1 skoMC1 skoMC1 (1/12))+(skoSC1 skoMC1 skoMC1 skoMC1 (1/12))))))))))]/\[(skoSC1 ((skoMC1 skoMC1 skoMC1 skoMC1 (-12))+(skoSC1 ((skoMC1 skoMC1 skoMC1 (1+(skoMC1 (-6))))+(skoSC1 ((skoMC1 skoMC1 skoMC1)+(skoSC1 ((skoMC1 skoMC1 skoMC1 (-1/12))+(skoSC1 skoMC1 skoMC1 skoMC1 (-1/12))))))))))<=(skoMC1 skoMC1 skoMC1 (2+(skoMC1 (6))))]]]]]]]]]]]]]]]]]]]]]]]].

% In SMTLib2 format:
(declare-fun skoSC1 () Real) (declare-fun skoMC1 () Real) (assert (and (<= (* skoSC1 (* skoMC1 (* skoMC1 (* skoMC1 (- 1.))))) (* skoMC1 (* skoMC1 skoMC1))) (and (<= (* skoSC1 (+ (* skoMC1 (+ 1. (* skoMC1 (- 3.)))) (* skoSC1 (+ (* skoMC1 (+ 2. (* skoMC1 3.))) (* skoSC1 (+ (* skoMC1 (+ (/ (- 1.) 6.) skoMC1)) (* skoSC1 (* skoMC1 (/ (- 1.) 4.))))))))) (* skoMC1 (+ 2. (* skoMC1 5.)))) (and (> (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (+ (- 1.) (* skoMC1 3.))))) (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (+ (- 2.) (* skoMC1 (- 3.)))))) (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (+ (/ 1. 6.) (* skoMC1 (- 1.)))))) (* skoSC1 (* skoMC1 (* skoMC1 (* skoMC1 (/ 1. 4.))))))))))) (* skoMC1 (* skoMC1 (* skoMC1 (+ (- 2.) (* skoMC1 (- 5.))))))) (and (> (* skoSC1 (+ (* skoMC1 (+ (- 1.) (* skoMC1 3.))) (* skoSC1 (+ (* skoMC1 (+ (- 2.) (* skoMC1 (- 3.)))) (* skoSC1 (+ (* skoMC1 (+ (/ 1. 6.) (* skoMC1 (- 1.)))) (* skoSC1 (* skoMC1 (/ 1. 4.))))))))) (* skoMC1 (+ (- 2.) (* skoMC1 (- 5.))))) (and (> skoSC1 0.) (and (<= (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (- 2.)))) (* skoSC1 (+ (* skoMC1 (* skoMC1 skoMC1)) (* skoSC1 (* skoMC1 (* skoMC1 skoMC1))))))) (* skoMC1 (* skoMC1 (* skoMC1 2.)))) (and (> (* skoSC1 (+ (* skoMC1 (* skoMC1 skoMC1)) (* skoSC1 (* skoMC1 (* skoMC1 skoMC1))))) 0.) (and (> (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 2.))) (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (- 1.)))) (* skoSC1 (* skoMC1 (* skoMC1 (* skoMC1 (- 1.))))))))) (* skoMC1 (* skoMC1 (* skoMC1 (- 2.))))) (and (<= (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (- 1.)))) (* skoSC1 (* skoMC1 (* skoMC1 (* skoMC1 (- 1.))))))) 0.) (and (<= (* skoSC1 (* skoMC1 (* skoMC1 (* skoMC1 (- 1.))))) (* skoMC1 (* skoMC1 skoMC1))) (and (> (* skoSC1 (* skoMC1 (* skoMC1 skoMC1))) (* skoMC1 (* skoMC1 (* skoMC1 (- 1.))))) (and (<= (* skoMC1 (* skoMC1 (* skoMC1 (- 2.)))) 0.) (and (> (* skoMC1 (* skoMC1 (* skoMC1 2.))) 0.) (and (<= skoSC1 (/ 5. 4.)) (and (<= 2. skoMC1) (and (<= 0. skoSC1) (and (> skoMC1 0.) (and (<= 0. skoMC1) (and (> (* skoSC1 skoMC1) (* skoMC1 (- 1.))) (and (<= (* skoSC1 (* skoMC1 (- 1.))) skoMC1) (and (> (* skoSC1 (* skoMC1 (* skoMC1 (* skoMC1 2.)))) (* skoMC1 (* skoMC1 (* skoMC1 (- 2.))))) (and (<= (* skoSC1 (* skoMC1 (* skoMC1 (* skoMC1 (- 2.))))) (* skoMC1 (* skoMC1 (* skoMC1 2.)))) (and (> (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (* skoMC1 12.)))) (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (+ (- 1.) (* skoMC1 6.))))) (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (- 1.)))) (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (/ 1. 12.)))) (* skoSC1 (* skoMC1 (* skoMC1 (* skoMC1 (/ 1. 12.))))))))))))) (* skoMC1 (* skoMC1 (* skoMC1 (+ (- 2.) (* skoMC1 (- 6.))))))) (<= (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (* skoMC1 (- 12.))))) (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (+ 1. (* skoMC1 (- 6.)))))) (* skoSC1 (+ (* skoMC1 (* skoMC1 skoMC1)) (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (/ (- 1.) 12.)))) (* skoSC1 (* skoMC1 (* skoMC1 (* skoMC1 (/ (- 1.) 12.))))))))))))) (* skoMC1 (* skoMC1 (* skoMC1 (+ 2. (* skoMC1 6.))))))))))))))))))))))))))))))

% In GRF format:
(sequent " MetiTarski formula " (antecedent (<= (* skoSC1 (* skoMC1 (* skoMC1 (* skoMC1 (- 1.))))) (* skoMC1 (* skoMC1 skoMC1))) (<= (* skoSC1 (+ (* skoMC1 (+ 1. (* skoMC1 (- 3.)))) (* skoSC1 (+ (* skoMC1 (+ 2. (* skoMC1 3.))) (* skoSC1 (+ (* skoMC1 (+ (/ (- 1.) 6.) skoMC1)) (* skoSC1 (* skoMC1 (/ (- 1.) 4.))))))))) (* skoMC1 (+ 2. (* skoMC1 5.)))) (> (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (+ (- 1.) (* skoMC1 3.))))) (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (+ (- 2.) (* skoMC1 (- 3.)))))) (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (+ (/ 1. 6.) (* skoMC1 (- 1.)))))) (* skoSC1 (* skoMC1 (* skoMC1 (* skoMC1 (/ 1. 4.))))))))))) (* skoMC1 (* skoMC1 (* skoMC1 (+ (- 2.) (* skoMC1 (- 5.))))))) (> (* skoSC1 (+ (* skoMC1 (+ (- 1.) (* skoMC1 3.))) (* skoSC1 (+ (* skoMC1 (+ (- 2.) (* skoMC1 (- 3.)))) (* skoSC1 (+ (* skoMC1 (+ (/ 1. 6.) (* skoMC1 (- 1.)))) (* skoSC1 (* skoMC1 (/ 1. 4.))))))))) (* skoMC1 (+ (- 2.) (* skoMC1 (- 5.))))) (> skoSC1 0.) (<= (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (- 2.)))) (* skoSC1 (+ (* skoMC1 (* skoMC1 skoMC1)) (* skoSC1 (* skoMC1 (* skoMC1 skoMC1))))))) (* skoMC1 (* skoMC1 (* skoMC1 2.)))) (> (* skoSC1 (+ (* skoMC1 (* skoMC1 skoMC1)) (* skoSC1 (* skoMC1 (* skoMC1 skoMC1))))) 0.) (> (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 2.))) (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (- 1.)))) (* skoSC1 (* skoMC1 (* skoMC1 (* skoMC1 (- 1.))))))))) (* skoMC1 (* skoMC1 (* skoMC1 (- 2.))))) (<= (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (- 1.)))) (* skoSC1 (* skoMC1 (* skoMC1 (* skoMC1 (- 1.))))))) 0.) (<= (* skoSC1 (* skoMC1 (* skoMC1 (* skoMC1 (- 1.))))) (* skoMC1 (* skoMC1 skoMC1))) (> (* skoSC1 (* skoMC1 (* skoMC1 skoMC1))) (* skoMC1 (* skoMC1 (* skoMC1 (- 1.))))) (<= (* skoMC1 (* skoMC1 (* skoMC1 (- 2.)))) 0.) (> (* skoMC1 (* skoMC1 (* skoMC1 2.))) 0.) (<= skoSC1 (/ 5. 4.)) (<= 2. skoMC1) (<= 0. skoSC1) (> skoMC1 0.) (<= 0. skoMC1) (> (* skoSC1 skoMC1) (* skoMC1 (- 1.))) (<= (* skoSC1 (* skoMC1 (- 1.))) skoMC1) (> (* skoSC1 (* skoMC1 (* skoMC1 (* skoMC1 2.)))) (* skoMC1 (* skoMC1 (* skoMC1 (- 2.))))) (<= (* skoSC1 (* skoMC1 (* skoMC1 (* skoMC1 (- 2.))))) (* skoMC1 (* skoMC1 (* skoMC1 2.)))) (> (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (* skoMC1 12.)))) (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (+ (- 1.) (* skoMC1 6.))))) (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (- 1.)))) (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (/ 1. 12.)))) (* skoSC1 (* skoMC1 (* skoMC1 (* skoMC1 (/ 1. 12.))))))))))))) (* skoMC1 (* skoMC1 (* skoMC1 (+ (- 2.) (* skoMC1 (- 6.)))))))) (succedent (> (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (* skoMC1 (- 12.))))) (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (+ 1. (* skoMC1 (- 6.)))))) (* skoSC1 (+ (* skoMC1 (* skoMC1 skoMC1)) (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (/ (- 1.) 12.)))) (* skoSC1 (* skoMC1 (* skoMC1 (* skoMC1 (/ (- 1.) 12.))))))))))))) (* skoMC1 (* skoMC1 (* skoMC1 (+ 2. (* skoMC1 6.))))))))
-----[end problem]-----

-----[begin problem]-----
% In Mathematica format:
Timing[Resolve[Exists[{skoSC1,skoMC1}, And[skoMC1*skoMC1*skoMC1*2>0,skoSC1*(skoMC1*skoMC1*skoMC1*(-1+skoMC1*3)+skoSC1*(skoMC1*skoMC1*skoMC1*(-2+skoMC1*-3)+skoSC1*(skoMC1*skoMC1*skoMC1*((1/6)+skoMC1*-1)+skoSC1*skoMC1*skoMC1*skoMC1*(1/4))))>skoMC1*skoMC1*skoMC1*(-2+skoMC1*-5),skoSC1*(skoMC1*(-1+skoMC1*3)+skoSC1*(skoMC1*(-2+skoMC1*-3)+skoSC1*(skoMC1*((1/6)+skoMC1*-1)+skoSC1*skoMC1*(1/4))))>skoMC1*(-2+skoMC1*-5),skoSC1>0,skoSC1*(skoMC1*skoMC1*skoMC1+skoSC1*skoMC1*skoMC1*skoMC1)>0,skoSC1*(skoMC1*skoMC1*skoMC1*2+skoSC1*(skoMC1*skoMC1*skoMC1*-1+skoSC1*skoMC1*skoMC1*skoMC1*-1))>skoMC1*skoMC1*skoMC1*-2,skoSC1*skoMC1*skoMC1*skoMC1>skoMC1*skoMC1*skoMC1*-1,skoMC1*skoMC1*skoMC1*2>0,skoMC1>0,skoSC1*skoMC1>skoMC1*-1,skoSC1*skoMC1*skoMC1*skoMC1*2>skoMC1*skoMC1*skoMC1*-2,skoSC1*(skoMC1*skoMC1*skoMC1*skoMC1*12+skoSC1*(skoMC1*skoMC1*skoMC1*(-1+skoMC1*6)+skoSC1*(skoMC1*skoMC1*skoMC1*-1+skoSC1*(skoMC1*skoMC1*skoMC1*(1/12)+skoSC1*skoMC1*skoMC1*skoMC1*(1/12)))))>skoMC1*skoMC1*skoMC1*(-2+skoMC1*-6)]], Reals]]

% In QepcadB format:
(E skoSC1) (E skoMC1) [[0<(skoMC1 skoMC1 skoMC1 (2))]/\[[(skoMC1 skoMC1 skoMC1 (-2+(skoMC1 (-5))))<(skoSC1 ((skoMC1 skoMC1 skoMC1 (-1+(skoMC1 (3))))+(skoSC1 ((skoMC1 skoMC1 skoMC1 (-2+(skoMC1 (-3))))+(skoSC1 ((skoMC1 skoMC1 skoMC1 (1/6+(skoMC1 (-1))))+(skoSC1 skoMC1 skoMC1 skoMC1 (1/4))))))))]/\[[(skoMC1 (-2+(skoMC1 (-5))))<(skoSC1 ((skoMC1 (-1+(skoMC1 (3))))+(skoSC1 ((skoMC1 (-2+(skoMC1 (-3))))+(skoSC1 ((skoMC1 (1/6+(skoMC1 (-1))))+(skoSC1 skoMC1 (1/4))))))))]/\[[0<skoSC1]/\[[0<(skoSC1 ((skoMC1 skoMC1 skoMC1)+(skoSC1 skoMC1 skoMC1 skoMC1)))]/\[[(skoMC1 skoMC1 skoMC1 (-2))<(skoSC1 ((skoMC1 skoMC1 skoMC1 (2))+(skoSC1 ((skoMC1 skoMC1 skoMC1 (-1))+(skoSC1 skoMC1 skoMC1 skoMC1 (-1))))))]/\[[(skoMC1 skoMC1 skoMC1 (-1))<(skoSC1 skoMC1 skoMC1 skoMC1)]/\[[0<(skoMC1 skoMC1 skoMC1 (2))]/\[[0<skoMC1]/\[[(skoMC1 (-1))<(skoSC1 skoMC1)]/\[[(skoMC1 skoMC1 skoMC1 (-2))<(skoSC1 skoMC1 skoMC1 skoMC1 (2))]/\[(skoMC1 skoMC1 skoMC1 (-2+(skoMC1 (-6))))<(skoSC1 ((skoMC1 skoMC1 skoMC1 skoMC1 (12))+(skoSC1 ((skoMC1 skoMC1 skoMC1 (-1+(skoMC1 (6))))+(skoSC1 ((skoMC1 skoMC1 skoMC1 (-1))+(skoSC1 ((skoMC1 skoMC1 skoMC1 (1/12))+(skoSC1 skoMC1 skoMC1 skoMC1 (1/12))))))))))]]]]]]]]]]]].

% In SMTLib2 format:
(declare-fun skoSC1 () Real) (declare-fun skoMC1 () Real) (assert (and (> (* skoMC1 (* skoMC1 (* skoMC1 2.))) 0.) (and (> (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (+ (- 1.) (* skoMC1 3.))))) (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (+ (- 2.) (* skoMC1 (- 3.)))))) (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (+ (/ 1. 6.) (* skoMC1 (- 1.)))))) (* skoSC1 (* skoMC1 (* skoMC1 (* skoMC1 (/ 1. 4.))))))))))) (* skoMC1 (* skoMC1 (* skoMC1 (+ (- 2.) (* skoMC1 (- 5.))))))) (and (> (* skoSC1 (+ (* skoMC1 (+ (- 1.) (* skoMC1 3.))) (* skoSC1 (+ (* skoMC1 (+ (- 2.) (* skoMC1 (- 3.)))) (* skoSC1 (+ (* skoMC1 (+ (/ 1. 6.) (* skoMC1 (- 1.)))) (* skoSC1 (* skoMC1 (/ 1. 4.))))))))) (* skoMC1 (+ (- 2.) (* skoMC1 (- 5.))))) (and (> skoSC1 0.) (and (> (* skoSC1 (+ (* skoMC1 (* skoMC1 skoMC1)) (* skoSC1 (* skoMC1 (* skoMC1 skoMC1))))) 0.) (and (> (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 2.))) (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (- 1.)))) (* skoSC1 (* skoMC1 (* skoMC1 (* skoMC1 (- 1.))))))))) (* skoMC1 (* skoMC1 (* skoMC1 (- 2.))))) (and (> (* skoSC1 (* skoMC1 (* skoMC1 skoMC1))) (* skoMC1 (* skoMC1 (* skoMC1 (- 1.))))) (and (> (* skoMC1 (* skoMC1 (* skoMC1 2.))) 0.) (and (> skoMC1 0.) (and (> (* skoSC1 skoMC1) (* skoMC1 (- 1.))) (and (> (* skoSC1 (* skoMC1 (* skoMC1 (* skoMC1 2.)))) (* skoMC1 (* skoMC1 (* skoMC1 (- 2.))))) (> (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (* skoMC1 12.)))) (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (+ (- 1.) (* skoMC1 6.))))) (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (- 1.)))) (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (/ 1. 12.)))) (* skoSC1 (* skoMC1 (* skoMC1 (* skoMC1 (/ 1. 12.))))))))))))) (* skoMC1 (* skoMC1 (* skoMC1 (+ (- 2.) (* skoMC1 (- 6.)))))))))))))))))))

% In GRF format:
(sequent " MetiTarski formula " (antecedent (> (* skoMC1 (* skoMC1 (* skoMC1 2.))) 0.) (> (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (+ (- 1.) (* skoMC1 3.))))) (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (+ (- 2.) (* skoMC1 (- 3.)))))) (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (+ (/ 1. 6.) (* skoMC1 (- 1.)))))) (* skoSC1 (* skoMC1 (* skoMC1 (* skoMC1 (/ 1. 4.))))))))))) (* skoMC1 (* skoMC1 (* skoMC1 (+ (- 2.) (* skoMC1 (- 5.))))))) (> (* skoSC1 (+ (* skoMC1 (+ (- 1.) (* skoMC1 3.))) (* skoSC1 (+ (* skoMC1 (+ (- 2.) (* skoMC1 (- 3.)))) (* skoSC1 (+ (* skoMC1 (+ (/ 1. 6.) (* skoMC1 (- 1.)))) (* skoSC1 (* skoMC1 (/ 1. 4.))))))))) (* skoMC1 (+ (- 2.) (* skoMC1 (- 5.))))) (> skoSC1 0.) (> (* skoSC1 (+ (* skoMC1 (* skoMC1 skoMC1)) (* skoSC1 (* skoMC1 (* skoMC1 skoMC1))))) 0.) (> (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 2.))) (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (- 1.)))) (* skoSC1 (* skoMC1 (* skoMC1 (* skoMC1 (- 1.))))))))) (* skoMC1 (* skoMC1 (* skoMC1 (- 2.))))) (> (* skoSC1 (* skoMC1 (* skoMC1 skoMC1))) (* skoMC1 (* skoMC1 (* skoMC1 (- 1.))))) (> (* skoMC1 (* skoMC1 (* skoMC1 2.))) 0.) (> skoMC1 0.) (> (* skoSC1 skoMC1) (* skoMC1 (- 1.))) (> (* skoSC1 (* skoMC1 (* skoMC1 (* skoMC1 2.)))) (* skoMC1 (* skoMC1 (* skoMC1 (- 2.)))))) (succedent (<= (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (* skoMC1 12.)))) (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (+ (- 1.) (* skoMC1 6.))))) (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (- 1.)))) (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (/ 1. 12.)))) (* skoSC1 (* skoMC1 (* skoMC1 (* skoMC1 (/ 1. 12.))))))))))))) (* skoMC1 (* skoMC1 (* skoMC1 (+ (- 2.) (* skoMC1 (- 6.)))))))))
-----[end problem]-----

-----[begin problem]-----
% In Mathematica format:
Timing[Resolve[Exists[{skoSC1,skoMC1}, And[skoSC1*(skoMC1*skoMC1*skoMC1*(1+skoMC1*-3)+skoSC1*(skoMC1*skoMC1*skoMC1*(2+skoMC1*3)+skoSC1*(skoMC1*skoMC1*skoMC1*((-1/6)+skoMC1)+skoSC1*skoMC1*skoMC1*skoMC1*(-1/4))))<=skoMC1*skoMC1*skoMC1*(2+skoMC1*5),skoMC1*skoMC1*skoMC1*2>0,skoSC1*(skoMC1*(1+skoMC1*-3)+skoSC1*(skoMC1*(2+skoMC1*3)+skoSC1*(skoMC1*((-1/6)+skoMC1)+skoSC1*skoMC1*(-1/4))))<=skoMC1*(2+skoMC1*5),skoSC1*(skoMC1*skoMC1*skoMC1*(-1+skoMC1*3)+skoSC1*(skoMC1*skoMC1*skoMC1*(-2+skoMC1*-3)+skoSC1*(skoMC1*skoMC1*skoMC1*((1/6)+skoMC1*-1)+skoSC1*skoMC1*skoMC1*skoMC1*(1/4))))>skoMC1*skoMC1*skoMC1*(-2+skoMC1*-5),skoSC1*(skoMC1*(-1+skoMC1*3)+skoSC1*(skoMC1*(-2+skoMC1*-3)+skoSC1*(skoMC1*((1/6)+skoMC1*-1)+skoSC1*skoMC1*(1/4))))>skoMC1*(-2+skoMC1*-5),skoSC1>0,skoSC1*(skoMC1*skoMC1*skoMC1*-2+skoSC1*(skoMC1*skoMC1*skoMC1+skoSC1*skoMC1*skoMC1*skoMC1))<=skoMC1*skoMC1*skoMC1*2,skoSC1*(skoMC1*skoMC1*skoMC1+skoSC1*skoMC1*skoMC1*skoMC1)>0,skoSC1*(skoMC1*skoMC1*skoMC1*2+skoSC1*(skoMC1*skoMC1*skoMC1*-1+skoSC1*skoMC1*skoMC1*skoMC1*-1))>skoMC1*skoMC1*skoMC1*-2,skoSC1*(skoMC1*skoMC1*skoMC1*-1+skoSC1*skoMC1*skoMC1*skoMC1*-1)<=0,skoSC1*skoMC1*skoMC1*skoMC1*-1<=skoMC1*skoMC1*skoMC1,skoSC1*skoMC1*skoMC1*skoMC1>skoMC1*skoMC1*skoMC1*-1,skoMC1*skoMC1*skoMC1*-2<=0,skoMC1*skoMC1*skoMC1*2>0,skoSC1<=(5/4),2<=skoMC1,0<=skoSC1,skoMC1>0,0<=skoMC1,skoSC1*skoMC1>skoMC1*-1,skoSC1*skoMC1*-1<=skoMC1,skoSC1*skoMC1*skoMC1*skoMC1*2>skoMC1*skoMC1*skoMC1*-2,skoSC1*skoMC1*skoMC1*skoMC1*-2<=skoMC1*skoMC1*skoMC1*2,skoSC1*(skoMC1*skoMC1*skoMC1*skoMC1*12+skoSC1*(skoMC1*skoMC1*skoMC1*(-1+skoMC1*6)+skoSC1*(skoMC1*skoMC1*skoMC1*-1+skoSC1*(skoMC1*skoMC1*skoMC1*(1/12)+skoSC1*skoMC1*skoMC1*skoMC1*(1/12)))))>skoMC1*skoMC1*skoMC1*(-2+skoMC1*-6),skoSC1*(skoMC1*skoMC1*skoMC1*skoMC1*-12+skoSC1*(skoMC1*skoMC1*skoMC1*(1+skoMC1*-6)+skoSC1*(skoMC1*skoMC1*skoMC1+skoSC1*(skoMC1*skoMC1*skoMC1*(-1/12)+skoSC1*skoMC1*skoMC1*skoMC1*(-1/12)))))<=skoMC1*skoMC1*skoMC1*(2+skoMC1*6)]], Reals]]

% In QepcadB format:
(E skoSC1) (E skoMC1) [[(skoSC1 ((skoMC1 skoMC1 skoMC1 (1+(skoMC1 (-3))))+(skoSC1 ((skoMC1 skoMC1 skoMC1 (2+(skoMC1 (3))))+(skoSC1 ((skoMC1 skoMC1 skoMC1 (-1/6+skoMC1))+(skoSC1 skoMC1 skoMC1 skoMC1 (-1/4))))))))<=(skoMC1 skoMC1 skoMC1 (2+(skoMC1 (5))))]/\[[0<(skoMC1 skoMC1 skoMC1 (2))]/\[[(skoSC1 ((skoMC1 (1+(skoMC1 (-3))))+(skoSC1 ((skoMC1 (2+(skoMC1 (3))))+(skoSC1 ((skoMC1 (-1/6+skoMC1))+(skoSC1 skoMC1 (-1/4))))))))<=(skoMC1 (2+(skoMC1 (5))))]/\[[(skoMC1 skoMC1 skoMC1 (-2+(skoMC1 (-5))))<(skoSC1 ((skoMC1 skoMC1 skoMC1 (-1+(skoMC1 (3))))+(skoSC1 ((skoMC1 skoMC1 skoMC1 (-2+(skoMC1 (-3))))+(skoSC1 ((skoMC1 skoMC1 skoMC1 (1/6+(skoMC1 (-1))))+(skoSC1 skoMC1 skoMC1 skoMC1 (1/4))))))))]/\[[(skoMC1 (-2+(skoMC1 (-5))))<(skoSC1 ((skoMC1 (-1+(skoMC1 (3))))+(skoSC1 ((skoMC1 (-2+(skoMC1 (-3))))+(skoSC1 ((skoMC1 (1/6+(skoMC1 (-1))))+(skoSC1 skoMC1 (1/4))))))))]/\[[0<skoSC1]/\[[(skoSC1 ((skoMC1 skoMC1 skoMC1 (-2))+(skoSC1 ((skoMC1 skoMC1 skoMC1)+(skoSC1 skoMC1 skoMC1 skoMC1)))))<=(skoMC1 skoMC1 skoMC1 (2))]/\[[0<(skoSC1 ((skoMC1 skoMC1 skoMC1)+(skoSC1 skoMC1 skoMC1 skoMC1)))]/\[[(skoMC1 skoMC1 skoMC1 (-2))<(skoSC1 ((skoMC1 skoMC1 skoMC1 (2))+(skoSC1 ((skoMC1 skoMC1 skoMC1 (-1))+(skoSC1 skoMC1 skoMC1 skoMC1 (-1))))))]/\[[(skoSC1 ((skoMC1 skoMC1 skoMC1 (-1))+(skoSC1 skoMC1 skoMC1 skoMC1 (-1))))<=0]/\[[(skoSC1 skoMC1 skoMC1 skoMC1 (-1))<=(skoMC1 skoMC1 skoMC1)]/\[[(skoMC1 skoMC1 skoMC1 (-1))<(skoSC1 skoMC1 skoMC1 skoMC1)]/\[[(skoMC1 skoMC1 skoMC1 (-2))<=0]/\[[0<(skoMC1 skoMC1 skoMC1 (2))]/\[[skoSC1<=5/4]/\[[2<=skoMC1]/\[[0<=skoSC1]/\[[0<skoMC1]/\[[0<=skoMC1]/\[[(skoMC1 (-1))<(skoSC1 skoMC1)]/\[[(skoSC1 skoMC1 (-1))<=skoMC1]/\[[(skoMC1 skoMC1 skoMC1 (-2))<(skoSC1 skoMC1 skoMC1 skoMC1 (2))]/\[[(skoSC1 skoMC1 skoMC1 skoMC1 (-2))<=(skoMC1 skoMC1 skoMC1 (2))]/\[[(skoMC1 skoMC1 skoMC1 (-2+(skoMC1 (-6))))<(skoSC1 ((skoMC1 skoMC1 skoMC1 skoMC1 (12))+(skoSC1 ((skoMC1 skoMC1 skoMC1 (-1+(skoMC1 (6))))+(skoSC1 ((skoMC1 skoMC1 skoMC1 (-1))+(skoSC1 ((skoMC1 skoMC1 skoMC1 (1/12))+(skoSC1 skoMC1 skoMC1 skoMC1 (1/12))))))))))]/\[(skoSC1 ((skoMC1 skoMC1 skoMC1 skoMC1 (-12))+(skoSC1 ((skoMC1 skoMC1 skoMC1 (1+(skoMC1 (-6))))+(skoSC1 ((skoMC1 skoMC1 skoMC1)+(skoSC1 ((skoMC1 skoMC1 skoMC1 (-1/12))+(skoSC1 skoMC1 skoMC1 skoMC1 (-1/12))))))))))<=(skoMC1 skoMC1 skoMC1 (2+(skoMC1 (6))))]]]]]]]]]]]]]]]]]]]]]]]]].

% In SMTLib2 format:
(declare-fun skoSC1 () Real) (declare-fun skoMC1 () Real) (assert (and (<= (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (+ 1. (* skoMC1 (- 3.)))))) (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (+ 2. (* skoMC1 3.))))) (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (+ (/ (- 1.) 6.) skoMC1)))) (* skoSC1 (* skoMC1 (* skoMC1 (* skoMC1 (/ (- 1.) 4.))))))))))) (* skoMC1 (* skoMC1 (* skoMC1 (+ 2. (* skoMC1 5.)))))) (and (> (* skoMC1 (* skoMC1 (* skoMC1 2.))) 0.) (and (<= (* skoSC1 (+ (* skoMC1 (+ 1. (* skoMC1 (- 3.)))) (* skoSC1 (+ (* skoMC1 (+ 2. (* skoMC1 3.))) (* skoSC1 (+ (* skoMC1 (+ (/ (- 1.) 6.) skoMC1)) (* skoSC1 (* skoMC1 (/ (- 1.) 4.))))))))) (* skoMC1 (+ 2. (* skoMC1 5.)))) (and (> (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (+ (- 1.) (* skoMC1 3.))))) (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (+ (- 2.) (* skoMC1 (- 3.)))))) (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (+ (/ 1. 6.) (* skoMC1 (- 1.)))))) (* skoSC1 (* skoMC1 (* skoMC1 (* skoMC1 (/ 1. 4.))))))))))) (* skoMC1 (* skoMC1 (* skoMC1 (+ (- 2.) (* skoMC1 (- 5.))))))) (and (> (* skoSC1 (+ (* skoMC1 (+ (- 1.) (* skoMC1 3.))) (* skoSC1 (+ (* skoMC1 (+ (- 2.) (* skoMC1 (- 3.)))) (* skoSC1 (+ (* skoMC1 (+ (/ 1. 6.) (* skoMC1 (- 1.)))) (* skoSC1 (* skoMC1 (/ 1. 4.))))))))) (* skoMC1 (+ (- 2.) (* skoMC1 (- 5.))))) (and (> skoSC1 0.) (and (<= (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (- 2.)))) (* skoSC1 (+ (* skoMC1 (* skoMC1 skoMC1)) (* skoSC1 (* skoMC1 (* skoMC1 skoMC1))))))) (* skoMC1 (* skoMC1 (* skoMC1 2.)))) (and (> (* skoSC1 (+ (* skoMC1 (* skoMC1 skoMC1)) (* skoSC1 (* skoMC1 (* skoMC1 skoMC1))))) 0.) (and (> (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 2.))) (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (- 1.)))) (* skoSC1 (* skoMC1 (* skoMC1 (* skoMC1 (- 1.))))))))) (* skoMC1 (* skoMC1 (* skoMC1 (- 2.))))) (and (<= (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (- 1.)))) (* skoSC1 (* skoMC1 (* skoMC1 (* skoMC1 (- 1.))))))) 0.) (and (<= (* skoSC1 (* skoMC1 (* skoMC1 (* skoMC1 (- 1.))))) (* skoMC1 (* skoMC1 skoMC1))) (and (> (* skoSC1 (* skoMC1 (* skoMC1 skoMC1))) (* skoMC1 (* skoMC1 (* skoMC1 (- 1.))))) (and (<= (* skoMC1 (* skoMC1 (* skoMC1 (- 2.)))) 0.) (and (> (* skoMC1 (* skoMC1 (* skoMC1 2.))) 0.) (and (<= skoSC1 (/ 5. 4.)) (and (<= 2. skoMC1) (and (<= 0. skoSC1) (and (> skoMC1 0.) (and (<= 0. skoMC1) (and (> (* skoSC1 skoMC1) (* skoMC1 (- 1.))) (and (<= (* skoSC1 (* skoMC1 (- 1.))) skoMC1) (and (> (* skoSC1 (* skoMC1 (* skoMC1 (* skoMC1 2.)))) (* skoMC1 (* skoMC1 (* skoMC1 (- 2.))))) (and (<= (* skoSC1 (* skoMC1 (* skoMC1 (* skoMC1 (- 2.))))) (* skoMC1 (* skoMC1 (* skoMC1 2.)))) (and (> (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (* skoMC1 12.)))) (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (+ (- 1.) (* skoMC1 6.))))) (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (- 1.)))) (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (/ 1. 12.)))) (* skoSC1 (* skoMC1 (* skoMC1 (* skoMC1 (/ 1. 12.))))))))))))) (* skoMC1 (* skoMC1 (* skoMC1 (+ (- 2.) (* skoMC1 (- 6.))))))) (<= (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (* skoMC1 (- 12.))))) (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (+ 1. (* skoMC1 (- 6.)))))) (* skoSC1 (+ (* skoMC1 (* skoMC1 skoMC1)) (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (/ (- 1.) 12.)))) (* skoSC1 (* skoMC1 (* skoMC1 (* skoMC1 (/ (- 1.) 12.))))))))))))) (* skoMC1 (* skoMC1 (* skoMC1 (+ 2. (* skoMC1 6.)))))))))))))))))))))))))))))))

% In GRF format:
(sequent " MetiTarski formula " (antecedent (<= (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (+ 1. (* skoMC1 (- 3.)))))) (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (+ 2. (* skoMC1 3.))))) (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (+ (/ (- 1.) 6.) skoMC1)))) (* skoSC1 (* skoMC1 (* skoMC1 (* skoMC1 (/ (- 1.) 4.))))))))))) (* skoMC1 (* skoMC1 (* skoMC1 (+ 2. (* skoMC1 5.)))))) (> (* skoMC1 (* skoMC1 (* skoMC1 2.))) 0.) (<= (* skoSC1 (+ (* skoMC1 (+ 1. (* skoMC1 (- 3.)))) (* skoSC1 (+ (* skoMC1 (+ 2. (* skoMC1 3.))) (* skoSC1 (+ (* skoMC1 (+ (/ (- 1.) 6.) skoMC1)) (* skoSC1 (* skoMC1 (/ (- 1.) 4.))))))))) (* skoMC1 (+ 2. (* skoMC1 5.)))) (> (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (+ (- 1.) (* skoMC1 3.))))) (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (+ (- 2.) (* skoMC1 (- 3.)))))) (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (+ (/ 1. 6.) (* skoMC1 (- 1.)))))) (* skoSC1 (* skoMC1 (* skoMC1 (* skoMC1 (/ 1. 4.))))))))))) (* skoMC1 (* skoMC1 (* skoMC1 (+ (- 2.) (* skoMC1 (- 5.))))))) (> (* skoSC1 (+ (* skoMC1 (+ (- 1.) (* skoMC1 3.))) (* skoSC1 (+ (* skoMC1 (+ (- 2.) (* skoMC1 (- 3.)))) (* skoSC1 (+ (* skoMC1 (+ (/ 1. 6.) (* skoMC1 (- 1.)))) (* skoSC1 (* skoMC1 (/ 1. 4.))))))))) (* skoMC1 (+ (- 2.) (* skoMC1 (- 5.))))) (> skoSC1 0.) (<= (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (- 2.)))) (* skoSC1 (+ (* skoMC1 (* skoMC1 skoMC1)) (* skoSC1 (* skoMC1 (* skoMC1 skoMC1))))))) (* skoMC1 (* skoMC1 (* skoMC1 2.)))) (> (* skoSC1 (+ (* skoMC1 (* skoMC1 skoMC1)) (* skoSC1 (* skoMC1 (* skoMC1 skoMC1))))) 0.) (> (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 2.))) (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (- 1.)))) (* skoSC1 (* skoMC1 (* skoMC1 (* skoMC1 (- 1.))))))))) (* skoMC1 (* skoMC1 (* skoMC1 (- 2.))))) (<= (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (- 1.)))) (* skoSC1 (* skoMC1 (* skoMC1 (* skoMC1 (- 1.))))))) 0.) (<= (* skoSC1 (* skoMC1 (* skoMC1 (* skoMC1 (- 1.))))) (* skoMC1 (* skoMC1 skoMC1))) (> (* skoSC1 (* skoMC1 (* skoMC1 skoMC1))) (* skoMC1 (* skoMC1 (* skoMC1 (- 1.))))) (<= (* skoMC1 (* skoMC1 (* skoMC1 (- 2.)))) 0.) (> (* skoMC1 (* skoMC1 (* skoMC1 2.))) 0.) (<= skoSC1 (/ 5. 4.)) (<= 2. skoMC1) (<= 0. skoSC1) (> skoMC1 0.) (<= 0. skoMC1) (> (* skoSC1 skoMC1) (* skoMC1 (- 1.))) (<= (* skoSC1 (* skoMC1 (- 1.))) skoMC1) (> (* skoSC1 (* skoMC1 (* skoMC1 (* skoMC1 2.)))) (* skoMC1 (* skoMC1 (* skoMC1 (- 2.))))) (<= (* skoSC1 (* skoMC1 (* skoMC1 (* skoMC1 (- 2.))))) (* skoMC1 (* skoMC1 (* skoMC1 2.)))) (> (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (* skoMC1 12.)))) (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (+ (- 1.) (* skoMC1 6.))))) (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (- 1.)))) (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (/ 1. 12.)))) (* skoSC1 (* skoMC1 (* skoMC1 (* skoMC1 (/ 1. 12.))))))))))))) (* skoMC1 (* skoMC1 (* skoMC1 (+ (- 2.) (* skoMC1 (- 6.)))))))) (succedent (> (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (* skoMC1 (- 12.))))) (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (+ 1. (* skoMC1 (- 6.)))))) (* skoSC1 (+ (* skoMC1 (* skoMC1 skoMC1)) (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (/ (- 1.) 12.)))) (* skoSC1 (* skoMC1 (* skoMC1 (* skoMC1 (/ (- 1.) 12.))))))))))))) (* skoMC1 (* skoMC1 (* skoMC1 (+ 2. (* skoMC1 6.))))))))
-----[end problem]-----

-----[begin problem]-----
% In Mathematica format:
Timing[Resolve[Exists[{skoSC1,skoMC1}, And[skoSC1*(skoMC1*skoMC1*skoMC1*(1+skoMC1*-3)+skoSC1*(skoMC1*skoMC1*skoMC1*(2+skoMC1*3)+skoSC1*(skoMC1*skoMC1*skoMC1*((-1/6)+skoMC1)+skoSC1*skoMC1*skoMC1*skoMC1*(-1/4))))>skoMC1*skoMC1*skoMC1*(2+skoMC1*5),skoSC1*(skoMC1*skoMC1*skoMC1*(-1+skoMC1*3)+skoSC1*(skoMC1*skoMC1*skoMC1*(-2+skoMC1*-3)+skoSC1*(skoMC1*skoMC1*skoMC1*((1/6)+skoMC1*-1)+skoSC1*skoMC1*skoMC1*skoMC1*(1/4))))>skoMC1*skoMC1*skoMC1*(-2+skoMC1*-5),skoSC1*(skoMC1*(-1+skoMC1*3)+skoSC1*(skoMC1*(-2+skoMC1*-3)+skoSC1*(skoMC1*((1/6)+skoMC1*-1)+skoSC1*skoMC1*(1/4))))>skoMC1*(-2+skoMC1*-5),skoSC1>0,skoSC1*(skoMC1*skoMC1*skoMC1+skoSC1*skoMC1*skoMC1*skoMC1)>0,skoSC1*(skoMC1*skoMC1*skoMC1*2+skoSC1*(skoMC1*skoMC1*skoMC1*-1+skoSC1*skoMC1*skoMC1*skoMC1*-1))>skoMC1*skoMC1*skoMC1*-2,skoSC1*skoMC1*skoMC1*skoMC1>skoMC1*skoMC1*skoMC1*-1,skoMC1*skoMC1*skoMC1*2>0,skoMC1>0,skoSC1*skoMC1>skoMC1*-1,skoSC1*skoMC1*skoMC1*skoMC1*2>skoMC1*skoMC1*skoMC1*-2,skoSC1*(skoMC1*skoMC1*skoMC1*skoMC1*12+skoSC1*(skoMC1*skoMC1*skoMC1*(-1+skoMC1*6)+skoSC1*(skoMC1*skoMC1*skoMC1*-1+skoSC1*(skoMC1*skoMC1*skoMC1*(1/12)+skoSC1*skoMC1*skoMC1*skoMC1*(1/12)))))>skoMC1*skoMC1*skoMC1*(-2+skoMC1*-6)]], Reals]]

% In QepcadB format:
(E skoSC1) (E skoMC1) [[(skoMC1 skoMC1 skoMC1 (2+(skoMC1 (5))))<(skoSC1 ((skoMC1 skoMC1 skoMC1 (1+(skoMC1 (-3))))+(skoSC1 ((skoMC1 skoMC1 skoMC1 (2+(skoMC1 (3))))+(skoSC1 ((skoMC1 skoMC1 skoMC1 (-1/6+skoMC1))+(skoSC1 skoMC1 skoMC1 skoMC1 (-1/4))))))))]/\[[(skoMC1 skoMC1 skoMC1 (-2+(skoMC1 (-5))))<(skoSC1 ((skoMC1 skoMC1 skoMC1 (-1+(skoMC1 (3))))+(skoSC1 ((skoMC1 skoMC1 skoMC1 (-2+(skoMC1 (-3))))+(skoSC1 ((skoMC1 skoMC1 skoMC1 (1/6+(skoMC1 (-1))))+(skoSC1 skoMC1 skoMC1 skoMC1 (1/4))))))))]/\[[(skoMC1 (-2+(skoMC1 (-5))))<(skoSC1 ((skoMC1 (-1+(skoMC1 (3))))+(skoSC1 ((skoMC1 (-2+(skoMC1 (-3))))+(skoSC1 ((skoMC1 (1/6+(skoMC1 (-1))))+(skoSC1 skoMC1 (1/4))))))))]/\[[0<skoSC1]/\[[0<(skoSC1 ((skoMC1 skoMC1 skoMC1)+(skoSC1 skoMC1 skoMC1 skoMC1)))]/\[[(skoMC1 skoMC1 skoMC1 (-2))<(skoSC1 ((skoMC1 skoMC1 skoMC1 (2))+(skoSC1 ((skoMC1 skoMC1 skoMC1 (-1))+(skoSC1 skoMC1 skoMC1 skoMC1 (-1))))))]/\[[(skoMC1 skoMC1 skoMC1 (-1))<(skoSC1 skoMC1 skoMC1 skoMC1)]/\[[0<(skoMC1 skoMC1 skoMC1 (2))]/\[[0<skoMC1]/\[[(skoMC1 (-1))<(skoSC1 skoMC1)]/\[[(skoMC1 skoMC1 skoMC1 (-2))<(skoSC1 skoMC1 skoMC1 skoMC1 (2))]/\[(skoMC1 skoMC1 skoMC1 (-2+(skoMC1 (-6))))<(skoSC1 ((skoMC1 skoMC1 skoMC1 skoMC1 (12))+(skoSC1 ((skoMC1 skoMC1 skoMC1 (-1+(skoMC1 (6))))+(skoSC1 ((skoMC1 skoMC1 skoMC1 (-1))+(skoSC1 ((skoMC1 skoMC1 skoMC1 (1/12))+(skoSC1 skoMC1 skoMC1 skoMC1 (1/12))))))))))]]]]]]]]]]]].

% In SMTLib2 format:
(declare-fun skoSC1 () Real) (declare-fun skoMC1 () Real) (assert (and (> (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (+ 1. (* skoMC1 (- 3.)))))) (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (+ 2. (* skoMC1 3.))))) (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (+ (/ (- 1.) 6.) skoMC1)))) (* skoSC1 (* skoMC1 (* skoMC1 (* skoMC1 (/ (- 1.) 4.))))))))))) (* skoMC1 (* skoMC1 (* skoMC1 (+ 2. (* skoMC1 5.)))))) (and (> (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (+ (- 1.) (* skoMC1 3.))))) (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (+ (- 2.) (* skoMC1 (- 3.)))))) (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (+ (/ 1. 6.) (* skoMC1 (- 1.)))))) (* skoSC1 (* skoMC1 (* skoMC1 (* skoMC1 (/ 1. 4.))))))))))) (* skoMC1 (* skoMC1 (* skoMC1 (+ (- 2.) (* skoMC1 (- 5.))))))) (and (> (* skoSC1 (+ (* skoMC1 (+ (- 1.) (* skoMC1 3.))) (* skoSC1 (+ (* skoMC1 (+ (- 2.) (* skoMC1 (- 3.)))) (* skoSC1 (+ (* skoMC1 (+ (/ 1. 6.) (* skoMC1 (- 1.)))) (* skoSC1 (* skoMC1 (/ 1. 4.))))))))) (* skoMC1 (+ (- 2.) (* skoMC1 (- 5.))))) (and (> skoSC1 0.) (and (> (* skoSC1 (+ (* skoMC1 (* skoMC1 skoMC1)) (* skoSC1 (* skoMC1 (* skoMC1 skoMC1))))) 0.) (and (> (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 2.))) (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (- 1.)))) (* skoSC1 (* skoMC1 (* skoMC1 (* skoMC1 (- 1.))))))))) (* skoMC1 (* skoMC1 (* skoMC1 (- 2.))))) (and (> (* skoSC1 (* skoMC1 (* skoMC1 skoMC1))) (* skoMC1 (* skoMC1 (* skoMC1 (- 1.))))) (and (> (* skoMC1 (* skoMC1 (* skoMC1 2.))) 0.) (and (> skoMC1 0.) (and (> (* skoSC1 skoMC1) (* skoMC1 (- 1.))) (and (> (* skoSC1 (* skoMC1 (* skoMC1 (* skoMC1 2.)))) (* skoMC1 (* skoMC1 (* skoMC1 (- 2.))))) (> (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (* skoMC1 12.)))) (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (+ (- 1.) (* skoMC1 6.))))) (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (- 1.)))) (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (/ 1. 12.)))) (* skoSC1 (* skoMC1 (* skoMC1 (* skoMC1 (/ 1. 12.))))))))))))) (* skoMC1 (* skoMC1 (* skoMC1 (+ (- 2.) (* skoMC1 (- 6.)))))))))))))))))))

% In GRF format:
(sequent " MetiTarski formula " (antecedent (> (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (+ 1. (* skoMC1 (- 3.)))))) (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (+ 2. (* skoMC1 3.))))) (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (+ (/ (- 1.) 6.) skoMC1)))) (* skoSC1 (* skoMC1 (* skoMC1 (* skoMC1 (/ (- 1.) 4.))))))))))) (* skoMC1 (* skoMC1 (* skoMC1 (+ 2. (* skoMC1 5.)))))) (> (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (+ (- 1.) (* skoMC1 3.))))) (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (+ (- 2.) (* skoMC1 (- 3.)))))) (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (+ (/ 1. 6.) (* skoMC1 (- 1.)))))) (* skoSC1 (* skoMC1 (* skoMC1 (* skoMC1 (/ 1. 4.))))))))))) (* skoMC1 (* skoMC1 (* skoMC1 (+ (- 2.) (* skoMC1 (- 5.))))))) (> (* skoSC1 (+ (* skoMC1 (+ (- 1.) (* skoMC1 3.))) (* skoSC1 (+ (* skoMC1 (+ (- 2.) (* skoMC1 (- 3.)))) (* skoSC1 (+ (* skoMC1 (+ (/ 1. 6.) (* skoMC1 (- 1.)))) (* skoSC1 (* skoMC1 (/ 1. 4.))))))))) (* skoMC1 (+ (- 2.) (* skoMC1 (- 5.))))) (> skoSC1 0.) (> (* skoSC1 (+ (* skoMC1 (* skoMC1 skoMC1)) (* skoSC1 (* skoMC1 (* skoMC1 skoMC1))))) 0.) (> (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 2.))) (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (- 1.)))) (* skoSC1 (* skoMC1 (* skoMC1 (* skoMC1 (- 1.))))))))) (* skoMC1 (* skoMC1 (* skoMC1 (- 2.))))) (> (* skoSC1 (* skoMC1 (* skoMC1 skoMC1))) (* skoMC1 (* skoMC1 (* skoMC1 (- 1.))))) (> (* skoMC1 (* skoMC1 (* skoMC1 2.))) 0.) (> skoMC1 0.) (> (* skoSC1 skoMC1) (* skoMC1 (- 1.))) (> (* skoSC1 (* skoMC1 (* skoMC1 (* skoMC1 2.)))) (* skoMC1 (* skoMC1 (* skoMC1 (- 2.)))))) (succedent (<= (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (* skoMC1 12.)))) (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (+ (- 1.) (* skoMC1 6.))))) (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (- 1.)))) (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (/ 1. 12.)))) (* skoSC1 (* skoMC1 (* skoMC1 (* skoMC1 (/ 1. 12.))))))))))))) (* skoMC1 (* skoMC1 (* skoMC1 (+ (- 2.) (* skoMC1 (- 6.)))))))))
-----[end problem]-----

-----[begin problem]-----
% In Mathematica format:
Timing[Resolve[Exists[{skoSC1,skoMC1}, And[skoSC1*(skoMC1*skoMC1*skoMC1*(1+skoMC1*-3)+skoSC1*(skoMC1*skoMC1*skoMC1*(2+skoMC1*3)+skoSC1*(skoMC1*skoMC1*skoMC1*((-1/6)+skoMC1)+skoSC1*skoMC1*skoMC1*skoMC1*(-1/4))))<=skoMC1*skoMC1*skoMC1*(2+skoMC1*5),skoSC1*(skoMC1*(1+skoMC1*-3)+skoSC1*(skoMC1*(2+skoMC1*3)+skoSC1*(skoMC1*((-1/6)+skoMC1)+skoSC1*skoMC1*(-1/4))))<=skoMC1*(2+skoMC1*5),skoSC1*(skoMC1*skoMC1*skoMC1*(-1+skoMC1*3)+skoSC1*(skoMC1*skoMC1*skoMC1*(-2+skoMC1*-3)+skoSC1*(skoMC1*skoMC1*skoMC1*((1/6)+skoMC1*-1)+skoSC1*skoMC1*skoMC1*skoMC1*(1/4))))>skoMC1*skoMC1*skoMC1*(-2+skoMC1*-5),skoSC1*(skoMC1*(-1+skoMC1*3)+skoSC1*(skoMC1*(-2+skoMC1*-3)+skoSC1*(skoMC1*((1/6)+skoMC1*-1)+skoSC1*skoMC1*(1/4))))>skoMC1*(-2+skoMC1*-5),skoSC1>0,skoSC1*(skoMC1*skoMC1*skoMC1*-2+skoSC1*(skoMC1*skoMC1*skoMC1+skoSC1*skoMC1*skoMC1*skoMC1))<=skoMC1*skoMC1*skoMC1*2,skoSC1*(skoMC1*skoMC1*skoMC1+skoSC1*skoMC1*skoMC1*skoMC1)>0,skoSC1*(skoMC1*skoMC1*skoMC1*2+skoSC1*(skoMC1*skoMC1*skoMC1*-1+skoSC1*skoMC1*skoMC1*skoMC1*-1))>skoMC1*skoMC1*skoMC1*-2,skoSC1*(skoMC1*skoMC1*skoMC1*-1+skoSC1*skoMC1*skoMC1*skoMC1*-1)<=0,skoSC1*skoMC1*skoMC1*skoMC1*-1<=skoMC1*skoMC1*skoMC1,skoSC1*skoMC1*skoMC1*skoMC1>skoMC1*skoMC1*skoMC1*-1,skoMC1*skoMC1*skoMC1*-2<=0,skoMC1*skoMC1*skoMC1*2>0,skoSC1<=(5/4),2<=skoMC1,0<=skoSC1,skoMC1>0,0<=skoMC1,skoSC1*skoMC1>skoMC1*-1,skoSC1*skoMC1*-1<=skoMC1,skoSC1*skoMC1*skoMC1*skoMC1*2>skoMC1*skoMC1*skoMC1*-2,skoSC1*skoMC1*skoMC1*skoMC1*-2<=skoMC1*skoMC1*skoMC1*2,skoSC1*(skoMC1*skoMC1*skoMC1*skoMC1*12+skoSC1*(skoMC1*skoMC1*skoMC1*(-1+skoMC1*6)+skoSC1*(skoMC1*skoMC1*skoMC1*-1+skoSC1*(skoMC1*skoMC1*skoMC1*(1/12)+skoSC1*skoMC1*skoMC1*skoMC1*(1/12)))))>skoMC1*skoMC1*skoMC1*(-2+skoMC1*-6),skoSC1*(skoMC1*skoMC1*skoMC1*skoMC1*-12+skoSC1*(skoMC1*skoMC1*skoMC1*(1+skoMC1*-6)+skoSC1*(skoMC1*skoMC1*skoMC1+skoSC1*(skoMC1*skoMC1*skoMC1*(-1/12)+skoSC1*skoMC1*skoMC1*skoMC1*(-1/12)))))<=skoMC1*skoMC1*skoMC1*(2+skoMC1*6)]], Reals]]

% In QepcadB format:
(E skoSC1) (E skoMC1) [[(skoSC1 ((skoMC1 skoMC1 skoMC1 (1+(skoMC1 (-3))))+(skoSC1 ((skoMC1 skoMC1 skoMC1 (2+(skoMC1 (3))))+(skoSC1 ((skoMC1 skoMC1 skoMC1 (-1/6+skoMC1))+(skoSC1 skoMC1 skoMC1 skoMC1 (-1/4))))))))<=(skoMC1 skoMC1 skoMC1 (2+(skoMC1 (5))))]/\[[(skoSC1 ((skoMC1 (1+(skoMC1 (-3))))+(skoSC1 ((skoMC1 (2+(skoMC1 (3))))+(skoSC1 ((skoMC1 (-1/6+skoMC1))+(skoSC1 skoMC1 (-1/4))))))))<=(skoMC1 (2+(skoMC1 (5))))]/\[[(skoMC1 skoMC1 skoMC1 (-2+(skoMC1 (-5))))<(skoSC1 ((skoMC1 skoMC1 skoMC1 (-1+(skoMC1 (3))))+(skoSC1 ((skoMC1 skoMC1 skoMC1 (-2+(skoMC1 (-3))))+(skoSC1 ((skoMC1 skoMC1 skoMC1 (1/6+(skoMC1 (-1))))+(skoSC1 skoMC1 skoMC1 skoMC1 (1/4))))))))]/\[[(skoMC1 (-2+(skoMC1 (-5))))<(skoSC1 ((skoMC1 (-1+(skoMC1 (3))))+(skoSC1 ((skoMC1 (-2+(skoMC1 (-3))))+(skoSC1 ((skoMC1 (1/6+(skoMC1 (-1))))+(skoSC1 skoMC1 (1/4))))))))]/\[[0<skoSC1]/\[[(skoSC1 ((skoMC1 skoMC1 skoMC1 (-2))+(skoSC1 ((skoMC1 skoMC1 skoMC1)+(skoSC1 skoMC1 skoMC1 skoMC1)))))<=(skoMC1 skoMC1 skoMC1 (2))]/\[[0<(skoSC1 ((skoMC1 skoMC1 skoMC1)+(skoSC1 skoMC1 skoMC1 skoMC1)))]/\[[(skoMC1 skoMC1 skoMC1 (-2))<(skoSC1 ((skoMC1 skoMC1 skoMC1 (2))+(skoSC1 ((skoMC1 skoMC1 skoMC1 (-1))+(skoSC1 skoMC1 skoMC1 skoMC1 (-1))))))]/\[[(skoSC1 ((skoMC1 skoMC1 skoMC1 (-1))+(skoSC1 skoMC1 skoMC1 skoMC1 (-1))))<=0]/\[[(skoSC1 skoMC1 skoMC1 skoMC1 (-1))<=(skoMC1 skoMC1 skoMC1)]/\[[(skoMC1 skoMC1 skoMC1 (-1))<(skoSC1 skoMC1 skoMC1 skoMC1)]/\[[(skoMC1 skoMC1 skoMC1 (-2))<=0]/\[[0<(skoMC1 skoMC1 skoMC1 (2))]/\[[skoSC1<=5/4]/\[[2<=skoMC1]/\[[0<=skoSC1]/\[[0<skoMC1]/\[[0<=skoMC1]/\[[(skoMC1 (-1))<(skoSC1 skoMC1)]/\[[(skoSC1 skoMC1 (-1))<=skoMC1]/\[[(skoMC1 skoMC1 skoMC1 (-2))<(skoSC1 skoMC1 skoMC1 skoMC1 (2))]/\[[(skoSC1 skoMC1 skoMC1 skoMC1 (-2))<=(skoMC1 skoMC1 skoMC1 (2))]/\[[(skoMC1 skoMC1 skoMC1 (-2+(skoMC1 (-6))))<(skoSC1 ((skoMC1 skoMC1 skoMC1 skoMC1 (12))+(skoSC1 ((skoMC1 skoMC1 skoMC1 (-1+(skoMC1 (6))))+(skoSC1 ((skoMC1 skoMC1 skoMC1 (-1))+(skoSC1 ((skoMC1 skoMC1 skoMC1 (1/12))+(skoSC1 skoMC1 skoMC1 skoMC1 (1/12))))))))))]/\[(skoSC1 ((skoMC1 skoMC1 skoMC1 skoMC1 (-12))+(skoSC1 ((skoMC1 skoMC1 skoMC1 (1+(skoMC1 (-6))))+(skoSC1 ((skoMC1 skoMC1 skoMC1)+(skoSC1 ((skoMC1 skoMC1 skoMC1 (-1/12))+(skoSC1 skoMC1 skoMC1 skoMC1 (-1/12))))))))))<=(skoMC1 skoMC1 skoMC1 (2+(skoMC1 (6))))]]]]]]]]]]]]]]]]]]]]]]]].

% In SMTLib2 format:
(declare-fun skoSC1 () Real) (declare-fun skoMC1 () Real) (assert (and (<= (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (+ 1. (* skoMC1 (- 3.)))))) (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (+ 2. (* skoMC1 3.))))) (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (+ (/ (- 1.) 6.) skoMC1)))) (* skoSC1 (* skoMC1 (* skoMC1 (* skoMC1 (/ (- 1.) 4.))))))))))) (* skoMC1 (* skoMC1 (* skoMC1 (+ 2. (* skoMC1 5.)))))) (and (<= (* skoSC1 (+ (* skoMC1 (+ 1. (* skoMC1 (- 3.)))) (* skoSC1 (+ (* skoMC1 (+ 2. (* skoMC1 3.))) (* skoSC1 (+ (* skoMC1 (+ (/ (- 1.) 6.) skoMC1)) (* skoSC1 (* skoMC1 (/ (- 1.) 4.))))))))) (* skoMC1 (+ 2. (* skoMC1 5.)))) (and (> (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (+ (- 1.) (* skoMC1 3.))))) (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (+ (- 2.) (* skoMC1 (- 3.)))))) (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (+ (/ 1. 6.) (* skoMC1 (- 1.)))))) (* skoSC1 (* skoMC1 (* skoMC1 (* skoMC1 (/ 1. 4.))))))))))) (* skoMC1 (* skoMC1 (* skoMC1 (+ (- 2.) (* skoMC1 (- 5.))))))) (and (> (* skoSC1 (+ (* skoMC1 (+ (- 1.) (* skoMC1 3.))) (* skoSC1 (+ (* skoMC1 (+ (- 2.) (* skoMC1 (- 3.)))) (* skoSC1 (+ (* skoMC1 (+ (/ 1. 6.) (* skoMC1 (- 1.)))) (* skoSC1 (* skoMC1 (/ 1. 4.))))))))) (* skoMC1 (+ (- 2.) (* skoMC1 (- 5.))))) (and (> skoSC1 0.) (and (<= (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (- 2.)))) (* skoSC1 (+ (* skoMC1 (* skoMC1 skoMC1)) (* skoSC1 (* skoMC1 (* skoMC1 skoMC1))))))) (* skoMC1 (* skoMC1 (* skoMC1 2.)))) (and (> (* skoSC1 (+ (* skoMC1 (* skoMC1 skoMC1)) (* skoSC1 (* skoMC1 (* skoMC1 skoMC1))))) 0.) (and (> (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 2.))) (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (- 1.)))) (* skoSC1 (* skoMC1 (* skoMC1 (* skoMC1 (- 1.))))))))) (* skoMC1 (* skoMC1 (* skoMC1 (- 2.))))) (and (<= (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (- 1.)))) (* skoSC1 (* skoMC1 (* skoMC1 (* skoMC1 (- 1.))))))) 0.) (and (<= (* skoSC1 (* skoMC1 (* skoMC1 (* skoMC1 (- 1.))))) (* skoMC1 (* skoMC1 skoMC1))) (and (> (* skoSC1 (* skoMC1 (* skoMC1 skoMC1))) (* skoMC1 (* skoMC1 (* skoMC1 (- 1.))))) (and (<= (* skoMC1 (* skoMC1 (* skoMC1 (- 2.)))) 0.) (and (> (* skoMC1 (* skoMC1 (* skoMC1 2.))) 0.) (and (<= skoSC1 (/ 5. 4.)) (and (<= 2. skoMC1) (and (<= 0. skoSC1) (and (> skoMC1 0.) (and (<= 0. skoMC1) (and (> (* skoSC1 skoMC1) (* skoMC1 (- 1.))) (and (<= (* skoSC1 (* skoMC1 (- 1.))) skoMC1) (and (> (* skoSC1 (* skoMC1 (* skoMC1 (* skoMC1 2.)))) (* skoMC1 (* skoMC1 (* skoMC1 (- 2.))))) (and (<= (* skoSC1 (* skoMC1 (* skoMC1 (* skoMC1 (- 2.))))) (* skoMC1 (* skoMC1 (* skoMC1 2.)))) (and (> (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (* skoMC1 12.)))) (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (+ (- 1.) (* skoMC1 6.))))) (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (- 1.)))) (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (/ 1. 12.)))) (* skoSC1 (* skoMC1 (* skoMC1 (* skoMC1 (/ 1. 12.))))))))))))) (* skoMC1 (* skoMC1 (* skoMC1 (+ (- 2.) (* skoMC1 (- 6.))))))) (<= (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (* skoMC1 (- 12.))))) (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (+ 1. (* skoMC1 (- 6.)))))) (* skoSC1 (+ (* skoMC1 (* skoMC1 skoMC1)) (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (/ (- 1.) 12.)))) (* skoSC1 (* skoMC1 (* skoMC1 (* skoMC1 (/ (- 1.) 12.))))))))))))) (* skoMC1 (* skoMC1 (* skoMC1 (+ 2. (* skoMC1 6.))))))))))))))))))))))))))))))

% In GRF format:
(sequent " MetiTarski formula " (antecedent (<= (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (+ 1. (* skoMC1 (- 3.)))))) (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (+ 2. (* skoMC1 3.))))) (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (+ (/ (- 1.) 6.) skoMC1)))) (* skoSC1 (* skoMC1 (* skoMC1 (* skoMC1 (/ (- 1.) 4.))))))))))) (* skoMC1 (* skoMC1 (* skoMC1 (+ 2. (* skoMC1 5.)))))) (<= (* skoSC1 (+ (* skoMC1 (+ 1. (* skoMC1 (- 3.)))) (* skoSC1 (+ (* skoMC1 (+ 2. (* skoMC1 3.))) (* skoSC1 (+ (* skoMC1 (+ (/ (- 1.) 6.) skoMC1)) (* skoSC1 (* skoMC1 (/ (- 1.) 4.))))))))) (* skoMC1 (+ 2. (* skoMC1 5.)))) (> (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (+ (- 1.) (* skoMC1 3.))))) (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (+ (- 2.) (* skoMC1 (- 3.)))))) (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (+ (/ 1. 6.) (* skoMC1 (- 1.)))))) (* skoSC1 (* skoMC1 (* skoMC1 (* skoMC1 (/ 1. 4.))))))))))) (* skoMC1 (* skoMC1 (* skoMC1 (+ (- 2.) (* skoMC1 (- 5.))))))) (> (* skoSC1 (+ (* skoMC1 (+ (- 1.) (* skoMC1 3.))) (* skoSC1 (+ (* skoMC1 (+ (- 2.) (* skoMC1 (- 3.)))) (* skoSC1 (+ (* skoMC1 (+ (/ 1. 6.) (* skoMC1 (- 1.)))) (* skoSC1 (* skoMC1 (/ 1. 4.))))))))) (* skoMC1 (+ (- 2.) (* skoMC1 (- 5.))))) (> skoSC1 0.) (<= (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (- 2.)))) (* skoSC1 (+ (* skoMC1 (* skoMC1 skoMC1)) (* skoSC1 (* skoMC1 (* skoMC1 skoMC1))))))) (* skoMC1 (* skoMC1 (* skoMC1 2.)))) (> (* skoSC1 (+ (* skoMC1 (* skoMC1 skoMC1)) (* skoSC1 (* skoMC1 (* skoMC1 skoMC1))))) 0.) (> (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 2.))) (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (- 1.)))) (* skoSC1 (* skoMC1 (* skoMC1 (* skoMC1 (- 1.))))))))) (* skoMC1 (* skoMC1 (* skoMC1 (- 2.))))) (<= (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (- 1.)))) (* skoSC1 (* skoMC1 (* skoMC1 (* skoMC1 (- 1.))))))) 0.) (<= (* skoSC1 (* skoMC1 (* skoMC1 (* skoMC1 (- 1.))))) (* skoMC1 (* skoMC1 skoMC1))) (> (* skoSC1 (* skoMC1 (* skoMC1 skoMC1))) (* skoMC1 (* skoMC1 (* skoMC1 (- 1.))))) (<= (* skoMC1 (* skoMC1 (* skoMC1 (- 2.)))) 0.) (> (* skoMC1 (* skoMC1 (* skoMC1 2.))) 0.) (<= skoSC1 (/ 5. 4.)) (<= 2. skoMC1) (<= 0. skoSC1) (> skoMC1 0.) (<= 0. skoMC1) (> (* skoSC1 skoMC1) (* skoMC1 (- 1.))) (<= (* skoSC1 (* skoMC1 (- 1.))) skoMC1) (> (* skoSC1 (* skoMC1 (* skoMC1 (* skoMC1 2.)))) (* skoMC1 (* skoMC1 (* skoMC1 (- 2.))))) (<= (* skoSC1 (* skoMC1 (* skoMC1 (* skoMC1 (- 2.))))) (* skoMC1 (* skoMC1 (* skoMC1 2.)))) (> (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (* skoMC1 12.)))) (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (+ (- 1.) (* skoMC1 6.))))) (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (- 1.)))) (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (/ 1. 12.)))) (* skoSC1 (* skoMC1 (* skoMC1 (* skoMC1 (/ 1. 12.))))))))))))) (* skoMC1 (* skoMC1 (* skoMC1 (+ (- 2.) (* skoMC1 (- 6.)))))))) (succedent (> (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (* skoMC1 (- 12.))))) (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (+ 1. (* skoMC1 (- 6.)))))) (* skoSC1 (+ (* skoMC1 (* skoMC1 skoMC1)) (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (/ (- 1.) 12.)))) (* skoSC1 (* skoMC1 (* skoMC1 (* skoMC1 (/ (- 1.) 12.))))))))))))) (* skoMC1 (* skoMC1 (* skoMC1 (+ 2. (* skoMC1 6.))))))))
-----[end problem]-----

-----[begin problem]-----
% In Mathematica format:
Timing[Resolve[Exists[{skoSC1,skoMC1}, And[skoSC1*(skoMC1*skoMC1*skoMC1*(1+skoMC1*-3)+skoSC1*(skoMC1*skoMC1*skoMC1*(2+skoMC1*3)+skoSC1*(skoMC1*skoMC1*skoMC1*((-1/6)+skoMC1)+skoSC1*(skoMC1*skoMC1*skoMC1*(-1/4)+skoSC1*skoSC1*(skoMC1*skoMC1*skoMC1*(1/360)+skoSC1*skoSC1*(skoMC1*skoMC1*skoMC1*(-1/20160)+skoSC1*skoSC1*(skoMC1*skoMC1*skoMC1*(1/1814400)+skoSC1*skoSC1*skoMC1*skoMC1*skoMC1*(-1/239500800))))))))<=skoMC1*skoMC1*skoMC1*(2+skoMC1*5),skoMC1*skoMC1*skoMC1*2>0,skoSC1*(skoMC1*skoMC1*skoMC1*(1+skoMC1*-3)+skoSC1*(skoMC1*skoMC1*skoMC1*(2+skoMC1*3)+skoSC1*(skoMC1*skoMC1*skoMC1*((-1/6)+skoMC1)+skoSC1*skoMC1*skoMC1*skoMC1*(-1/4))))<=skoMC1*skoMC1*skoMC1*(2+skoMC1*5),skoSC1*(skoMC1*(1+skoMC1*-3)+skoSC1*(skoMC1*(2+skoMC1*3)+skoSC1*(skoMC1*((-1/6)+skoMC1)+skoSC1*skoMC1*(-1/4))))<=skoMC1*(2+skoMC1*5),skoSC1*(skoMC1*skoMC1*skoMC1*(-1+skoMC1*3)+skoSC1*(skoMC1*skoMC1*skoMC1*(-2+skoMC1*-3)+skoSC1*(skoMC1*skoMC1*skoMC1*((1/6)+skoMC1*-1)+skoSC1*skoMC1*skoMC1*skoMC1*(1/4))))>skoMC1*skoMC1*skoMC1*(-2+skoMC1*-5),skoSC1*(skoMC1*(-1+skoMC1*3)+skoSC1*(skoMC1*(-2+skoMC1*-3)+skoSC1*(skoMC1*((1/6)+skoMC1*-1)+skoSC1*skoMC1*(1/4))))>skoMC1*(-2+skoMC1*-5),skoSC1>0,skoSC1*(skoMC1*skoMC1*skoMC1*-2+skoSC1*(skoMC1*skoMC1*skoMC1+skoSC1*skoMC1*skoMC1*skoMC1))<=skoMC1*skoMC1*skoMC1*2,skoSC1*(skoMC1*skoMC1*skoMC1+skoSC1*skoMC1*skoMC1*skoMC1)>0,skoSC1*(skoMC1*skoMC1*skoMC1*2+skoSC1*(skoMC1*skoMC1*skoMC1*-1+skoSC1*skoMC1*skoMC1*skoMC1*-1))>skoMC1*skoMC1*skoMC1*-2,skoSC1*(skoMC1*skoMC1*skoMC1*-1+skoSC1*skoMC1*skoMC1*skoMC1*-1)<=0,skoSC1*skoMC1*skoMC1*skoMC1*-1<=skoMC1*skoMC1*skoMC1,skoSC1*skoMC1*skoMC1*skoMC1>skoMC1*skoMC1*skoMC1*-1,skoMC1*skoMC1*skoMC1*-2<=0,skoMC1*skoMC1*skoMC1*2>0,skoSC1<=(5/4),2<=skoMC1,0<=skoSC1,skoMC1>0,0<=skoMC1,skoSC1*skoMC1>skoMC1*-1,skoSC1*skoMC1*-1<=skoMC1,skoSC1*skoMC1*skoMC1*skoMC1*2>skoMC1*skoMC1*skoMC1*-2,skoSC1*skoMC1*skoMC1*skoMC1*-2<=skoMC1*skoMC1*skoMC1*2,skoSC1*(skoMC1*skoMC1*skoMC1*skoMC1*12+skoSC1*(skoMC1*skoMC1*skoMC1*(-1+skoMC1*6)+skoSC1*(skoMC1*skoMC1*skoMC1*-1+skoSC1*(skoMC1*skoMC1*skoMC1*(1/12)+skoSC1*skoMC1*skoMC1*skoMC1*(1/12)))))>skoMC1*skoMC1*skoMC1*(-2+skoMC1*-6),skoSC1*(skoMC1*skoMC1*skoMC1*skoMC1*-12+skoSC1*(skoMC1*skoMC1*skoMC1*(1+skoMC1*-6)+skoSC1*(skoMC1*skoMC1*skoMC1+skoSC1*(skoMC1*skoMC1*skoMC1*(-1/12)+skoSC1*skoMC1*skoMC1*skoMC1*(-1/12)))))<=skoMC1*skoMC1*skoMC1*(2+skoMC1*6)]], Reals]]

% In QepcadB format:
(E skoSC1) (E skoMC1) [[(skoSC1 ((skoMC1 skoMC1 skoMC1 (1+(skoMC1 (-3))))+(skoSC1 ((skoMC1 skoMC1 skoMC1 (2+(skoMC1 (3))))+(skoSC1 ((skoMC1 skoMC1 skoMC1 (-1/6+skoMC1))+(skoSC1 ((skoMC1 skoMC1 skoMC1 (-1/4))+(skoSC1 skoSC1 ((skoMC1 skoMC1 skoMC1 (1/360))+(skoSC1 skoSC1 ((skoMC1 skoMC1 skoMC1 (-1/20160))+(skoSC1 skoSC1 ((skoMC1 skoMC1 skoMC1 (1/1814400))+(skoSC1 skoSC1 skoMC1 skoMC1 skoMC1 (-1/239500800))))))))))))))))<=(skoMC1 skoMC1 skoMC1 (2+(skoMC1 (5))))]/\[[0<(skoMC1 skoMC1 skoMC1 (2))]/\[[(skoSC1 ((skoMC1 skoMC1 skoMC1 (1+(skoMC1 (-3))))+(skoSC1 ((skoMC1 skoMC1 skoMC1 (2+(skoMC1 (3))))+(skoSC1 ((skoMC1 skoMC1 skoMC1 (-1/6+skoMC1))+(skoSC1 skoMC1 skoMC1 skoMC1 (-1/4))))))))<=(skoMC1 skoMC1 skoMC1 (2+(skoMC1 (5))))]/\[[(skoSC1 ((skoMC1 (1+(skoMC1 (-3))))+(skoSC1 ((skoMC1 (2+(skoMC1 (3))))+(skoSC1 ((skoMC1 (-1/6+skoMC1))+(skoSC1 skoMC1 (-1/4))))))))<=(skoMC1 (2+(skoMC1 (5))))]/\[[(skoMC1 skoMC1 skoMC1 (-2+(skoMC1 (-5))))<(skoSC1 ((skoMC1 skoMC1 skoMC1 (-1+(skoMC1 (3))))+(skoSC1 ((skoMC1 skoMC1 skoMC1 (-2+(skoMC1 (-3))))+(skoSC1 ((skoMC1 skoMC1 skoMC1 (1/6+(skoMC1 (-1))))+(skoSC1 skoMC1 skoMC1 skoMC1 (1/4))))))))]/\[[(skoMC1 (-2+(skoMC1 (-5))))<(skoSC1 ((skoMC1 (-1+(skoMC1 (3))))+(skoSC1 ((skoMC1 (-2+(skoMC1 (-3))))+(skoSC1 ((skoMC1 (1/6+(skoMC1 (-1))))+(skoSC1 skoMC1 (1/4))))))))]/\[[0<skoSC1]/\[[(skoSC1 ((skoMC1 skoMC1 skoMC1 (-2))+(skoSC1 ((skoMC1 skoMC1 skoMC1)+(skoSC1 skoMC1 skoMC1 skoMC1)))))<=(skoMC1 skoMC1 skoMC1 (2))]/\[[0<(skoSC1 ((skoMC1 skoMC1 skoMC1)+(skoSC1 skoMC1 skoMC1 skoMC1)))]/\[[(skoMC1 skoMC1 skoMC1 (-2))<(skoSC1 ((skoMC1 skoMC1 skoMC1 (2))+(skoSC1 ((skoMC1 skoMC1 skoMC1 (-1))+(skoSC1 skoMC1 skoMC1 skoMC1 (-1))))))]/\[[(skoSC1 ((skoMC1 skoMC1 skoMC1 (-1))+(skoSC1 skoMC1 skoMC1 skoMC1 (-1))))<=0]/\[[(skoSC1 skoMC1 skoMC1 skoMC1 (-1))<=(skoMC1 skoMC1 skoMC1)]/\[[(skoMC1 skoMC1 skoMC1 (-1))<(skoSC1 skoMC1 skoMC1 skoMC1)]/\[[(skoMC1 skoMC1 skoMC1 (-2))<=0]/\[[0<(skoMC1 skoMC1 skoMC1 (2))]/\[[skoSC1<=5/4]/\[[2<=skoMC1]/\[[0<=skoSC1]/\[[0<skoMC1]/\[[0<=skoMC1]/\[[(skoMC1 (-1))<(skoSC1 skoMC1)]/\[[(skoSC1 skoMC1 (-1))<=skoMC1]/\[[(skoMC1 skoMC1 skoMC1 (-2))<(skoSC1 skoMC1 skoMC1 skoMC1 (2))]/\[[(skoSC1 skoMC1 skoMC1 skoMC1 (-2))<=(skoMC1 skoMC1 skoMC1 (2))]/\[[(skoMC1 skoMC1 skoMC1 (-2+(skoMC1 (-6))))<(skoSC1 ((skoMC1 skoMC1 skoMC1 skoMC1 (12))+(skoSC1 ((skoMC1 skoMC1 skoMC1 (-1+(skoMC1 (6))))+(skoSC1 ((skoMC1 skoMC1 skoMC1 (-1))+(skoSC1 ((skoMC1 skoMC1 skoMC1 (1/12))+(skoSC1 skoMC1 skoMC1 skoMC1 (1/12))))))))))]/\[(skoSC1 ((skoMC1 skoMC1 skoMC1 skoMC1 (-12))+(skoSC1 ((skoMC1 skoMC1 skoMC1 (1+(skoMC1 (-6))))+(skoSC1 ((skoMC1 skoMC1 skoMC1)+(skoSC1 ((skoMC1 skoMC1 skoMC1 (-1/12))+(skoSC1 skoMC1 skoMC1 skoMC1 (-1/12))))))))))<=(skoMC1 skoMC1 skoMC1 (2+(skoMC1 (6))))]]]]]]]]]]]]]]]]]]]]]]]]]].

% In SMTLib2 format:
(declare-fun skoSC1 () Real) (declare-fun skoMC1 () Real) (assert (and (<= (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (+ 1. (* skoMC1 (- 3.)))))) (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (+ 2. (* skoMC1 3.))))) (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (+ (/ (- 1.) 6.) skoMC1)))) (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (/ (- 1.) 4.)))) (* skoSC1 (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (/ 1. 360.)))) (* skoSC1 (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (/ (- 1.) 20160.)))) (* skoSC1 (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (/ 1. 1814400.)))) (* skoSC1 (* skoSC1 (* skoMC1 (* skoMC1 (* skoMC1 (/ (- 1.) 239500800.))))))))))))))))))))))) (* skoMC1 (* skoMC1 (* skoMC1 (+ 2. (* skoMC1 5.)))))) (and (> (* skoMC1 (* skoMC1 (* skoMC1 2.))) 0.) (and (<= (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (+ 1. (* skoMC1 (- 3.)))))) (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (+ 2. (* skoMC1 3.))))) (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (+ (/ (- 1.) 6.) skoMC1)))) (* skoSC1 (* skoMC1 (* skoMC1 (* skoMC1 (/ (- 1.) 4.))))))))))) (* skoMC1 (* skoMC1 (* skoMC1 (+ 2. (* skoMC1 5.)))))) (and (<= (* skoSC1 (+ (* skoMC1 (+ 1. (* skoMC1 (- 3.)))) (* skoSC1 (+ (* skoMC1 (+ 2. (* skoMC1 3.))) (* skoSC1 (+ (* skoMC1 (+ (/ (- 1.) 6.) skoMC1)) (* skoSC1 (* skoMC1 (/ (- 1.) 4.))))))))) (* skoMC1 (+ 2. (* skoMC1 5.)))) (and (> (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (+ (- 1.) (* skoMC1 3.))))) (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (+ (- 2.) (* skoMC1 (- 3.)))))) (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (+ (/ 1. 6.) (* skoMC1 (- 1.)))))) (* skoSC1 (* skoMC1 (* skoMC1 (* skoMC1 (/ 1. 4.))))))))))) (* skoMC1 (* skoMC1 (* skoMC1 (+ (- 2.) (* skoMC1 (- 5.))))))) (and (> (* skoSC1 (+ (* skoMC1 (+ (- 1.) (* skoMC1 3.))) (* skoSC1 (+ (* skoMC1 (+ (- 2.) (* skoMC1 (- 3.)))) (* skoSC1 (+ (* skoMC1 (+ (/ 1. 6.) (* skoMC1 (- 1.)))) (* skoSC1 (* skoMC1 (/ 1. 4.))))))))) (* skoMC1 (+ (- 2.) (* skoMC1 (- 5.))))) (and (> skoSC1 0.) (and (<= (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (- 2.)))) (* skoSC1 (+ (* skoMC1 (* skoMC1 skoMC1)) (* skoSC1 (* skoMC1 (* skoMC1 skoMC1))))))) (* skoMC1 (* skoMC1 (* skoMC1 2.)))) (and (> (* skoSC1 (+ (* skoMC1 (* skoMC1 skoMC1)) (* skoSC1 (* skoMC1 (* skoMC1 skoMC1))))) 0.) (and (> (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 2.))) (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (- 1.)))) (* skoSC1 (* skoMC1 (* skoMC1 (* skoMC1 (- 1.))))))))) (* skoMC1 (* skoMC1 (* skoMC1 (- 2.))))) (and (<= (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (- 1.)))) (* skoSC1 (* skoMC1 (* skoMC1 (* skoMC1 (- 1.))))))) 0.) (and (<= (* skoSC1 (* skoMC1 (* skoMC1 (* skoMC1 (- 1.))))) (* skoMC1 (* skoMC1 skoMC1))) (and (> (* skoSC1 (* skoMC1 (* skoMC1 skoMC1))) (* skoMC1 (* skoMC1 (* skoMC1 (- 1.))))) (and (<= (* skoMC1 (* skoMC1 (* skoMC1 (- 2.)))) 0.) (and (> (* skoMC1 (* skoMC1 (* skoMC1 2.))) 0.) (and (<= skoSC1 (/ 5. 4.)) (and (<= 2. skoMC1) (and (<= 0. skoSC1) (and (> skoMC1 0.) (and (<= 0. skoMC1) (and (> (* skoSC1 skoMC1) (* skoMC1 (- 1.))) (and (<= (* skoSC1 (* skoMC1 (- 1.))) skoMC1) (and (> (* skoSC1 (* skoMC1 (* skoMC1 (* skoMC1 2.)))) (* skoMC1 (* skoMC1 (* skoMC1 (- 2.))))) (and (<= (* skoSC1 (* skoMC1 (* skoMC1 (* skoMC1 (- 2.))))) (* skoMC1 (* skoMC1 (* skoMC1 2.)))) (and (> (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (* skoMC1 12.)))) (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (+ (- 1.) (* skoMC1 6.))))) (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (- 1.)))) (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (/ 1. 12.)))) (* skoSC1 (* skoMC1 (* skoMC1 (* skoMC1 (/ 1. 12.))))))))))))) (* skoMC1 (* skoMC1 (* skoMC1 (+ (- 2.) (* skoMC1 (- 6.))))))) (<= (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (* skoMC1 (- 12.))))) (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (+ 1. (* skoMC1 (- 6.)))))) (* skoSC1 (+ (* skoMC1 (* skoMC1 skoMC1)) (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (/ (- 1.) 12.)))) (* skoSC1 (* skoMC1 (* skoMC1 (* skoMC1 (/ (- 1.) 12.))))))))))))) (* skoMC1 (* skoMC1 (* skoMC1 (+ 2. (* skoMC1 6.))))))))))))))))))))))))))))))))

% In GRF format:
(sequent " MetiTarski formula " (antecedent (<= (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (+ 1. (* skoMC1 (- 3.)))))) (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (+ 2. (* skoMC1 3.))))) (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (+ (/ (- 1.) 6.) skoMC1)))) (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (/ (- 1.) 4.)))) (* skoSC1 (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (/ 1. 360.)))) (* skoSC1 (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (/ (- 1.) 20160.)))) (* skoSC1 (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (/ 1. 1814400.)))) (* skoSC1 (* skoSC1 (* skoMC1 (* skoMC1 (* skoMC1 (/ (- 1.) 239500800.))))))))))))))))))))))) (* skoMC1 (* skoMC1 (* skoMC1 (+ 2. (* skoMC1 5.)))))) (> (* skoMC1 (* skoMC1 (* skoMC1 2.))) 0.) (<= (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (+ 1. (* skoMC1 (- 3.)))))) (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (+ 2. (* skoMC1 3.))))) (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (+ (/ (- 1.) 6.) skoMC1)))) (* skoSC1 (* skoMC1 (* skoMC1 (* skoMC1 (/ (- 1.) 4.))))))))))) (* skoMC1 (* skoMC1 (* skoMC1 (+ 2. (* skoMC1 5.)))))) (<= (* skoSC1 (+ (* skoMC1 (+ 1. (* skoMC1 (- 3.)))) (* skoSC1 (+ (* skoMC1 (+ 2. (* skoMC1 3.))) (* skoSC1 (+ (* skoMC1 (+ (/ (- 1.) 6.) skoMC1)) (* skoSC1 (* skoMC1 (/ (- 1.) 4.))))))))) (* skoMC1 (+ 2. (* skoMC1 5.)))) (> (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (+ (- 1.) (* skoMC1 3.))))) (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (+ (- 2.) (* skoMC1 (- 3.)))))) (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (+ (/ 1. 6.) (* skoMC1 (- 1.)))))) (* skoSC1 (* skoMC1 (* skoMC1 (* skoMC1 (/ 1. 4.))))))))))) (* skoMC1 (* skoMC1 (* skoMC1 (+ (- 2.) (* skoMC1 (- 5.))))))) (> (* skoSC1 (+ (* skoMC1 (+ (- 1.) (* skoMC1 3.))) (* skoSC1 (+ (* skoMC1 (+ (- 2.) (* skoMC1 (- 3.)))) (* skoSC1 (+ (* skoMC1 (+ (/ 1. 6.) (* skoMC1 (- 1.)))) (* skoSC1 (* skoMC1 (/ 1. 4.))))))))) (* skoMC1 (+ (- 2.) (* skoMC1 (- 5.))))) (> skoSC1 0.) (<= (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (- 2.)))) (* skoSC1 (+ (* skoMC1 (* skoMC1 skoMC1)) (* skoSC1 (* skoMC1 (* skoMC1 skoMC1))))))) (* skoMC1 (* skoMC1 (* skoMC1 2.)))) (> (* skoSC1 (+ (* skoMC1 (* skoMC1 skoMC1)) (* skoSC1 (* skoMC1 (* skoMC1 skoMC1))))) 0.) (> (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 2.))) (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (- 1.)))) (* skoSC1 (* skoMC1 (* skoMC1 (* skoMC1 (- 1.))))))))) (* skoMC1 (* skoMC1 (* skoMC1 (- 2.))))) (<= (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (- 1.)))) (* skoSC1 (* skoMC1 (* skoMC1 (* skoMC1 (- 1.))))))) 0.) (<= (* skoSC1 (* skoMC1 (* skoMC1 (* skoMC1 (- 1.))))) (* skoMC1 (* skoMC1 skoMC1))) (> (* skoSC1 (* skoMC1 (* skoMC1 skoMC1))) (* skoMC1 (* skoMC1 (* skoMC1 (- 1.))))) (<= (* skoMC1 (* skoMC1 (* skoMC1 (- 2.)))) 0.) (> (* skoMC1 (* skoMC1 (* skoMC1 2.))) 0.) (<= skoSC1 (/ 5. 4.)) (<= 2. skoMC1) (<= 0. skoSC1) (> skoMC1 0.) (<= 0. skoMC1) (> (* skoSC1 skoMC1) (* skoMC1 (- 1.))) (<= (* skoSC1 (* skoMC1 (- 1.))) skoMC1) (> (* skoSC1 (* skoMC1 (* skoMC1 (* skoMC1 2.)))) (* skoMC1 (* skoMC1 (* skoMC1 (- 2.))))) (<= (* skoSC1 (* skoMC1 (* skoMC1 (* skoMC1 (- 2.))))) (* skoMC1 (* skoMC1 (* skoMC1 2.)))) (> (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (* skoMC1 12.)))) (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (+ (- 1.) (* skoMC1 6.))))) (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (- 1.)))) (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (/ 1. 12.)))) (* skoSC1 (* skoMC1 (* skoMC1 (* skoMC1 (/ 1. 12.))))))))))))) (* skoMC1 (* skoMC1 (* skoMC1 (+ (- 2.) (* skoMC1 (- 6.)))))))) (succedent (> (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (* skoMC1 (- 12.))))) (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (+ 1. (* skoMC1 (- 6.)))))) (* skoSC1 (+ (* skoMC1 (* skoMC1 skoMC1)) (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (/ (- 1.) 12.)))) (* skoSC1 (* skoMC1 (* skoMC1 (* skoMC1 (/ (- 1.) 12.))))))))))))) (* skoMC1 (* skoMC1 (* skoMC1 (+ 2. (* skoMC1 6.))))))))
-----[end problem]-----

-----[begin problem]-----
% In Mathematica format:
Timing[Resolve[Exists[{skoSC1,skoMC1}, And[skoSC1*(skoMC1*skoMC1*skoMC1*(1+skoMC1*-3)+skoSC1*(skoMC1*skoMC1*skoMC1*(2+skoMC1*3)+skoSC1*(skoMC1*skoMC1*skoMC1*((-1/6)+skoMC1)+skoSC1*(skoMC1*skoMC1*skoMC1*(-1/4)+skoSC1*skoSC1*(skoMC1*skoMC1*skoMC1*(1/360)+skoSC1*skoSC1*(skoMC1*skoMC1*skoMC1*(-1/20160)+skoSC1*skoSC1*(skoMC1*skoMC1*skoMC1*(1/1814400)+skoSC1*skoSC1*skoMC1*skoMC1*skoMC1*(-1/239500800))))))))>skoMC1*skoMC1*skoMC1*(2+skoMC1*5),skoSC1*(skoMC1*skoMC1*skoMC1*(-1+skoMC1*3)+skoSC1*(skoMC1*skoMC1*skoMC1*(-2+skoMC1*-3)+skoSC1*(skoMC1*skoMC1*skoMC1*((1/6)+skoMC1*-1)+skoSC1*skoMC1*skoMC1*skoMC1*(1/4))))>skoMC1*skoMC1*skoMC1*(-2+skoMC1*-5),skoSC1*(skoMC1*(-1+skoMC1*3)+skoSC1*(skoMC1*(-2+skoMC1*-3)+skoSC1*(skoMC1*((1/6)+skoMC1*-1)+skoSC1*skoMC1*(1/4))))>skoMC1*(-2+skoMC1*-5),skoSC1>0,skoSC1*(skoMC1*skoMC1*skoMC1+skoSC1*skoMC1*skoMC1*skoMC1)>0,skoSC1*(skoMC1*skoMC1*skoMC1*2+skoSC1*(skoMC1*skoMC1*skoMC1*-1+skoSC1*skoMC1*skoMC1*skoMC1*-1))>skoMC1*skoMC1*skoMC1*-2,skoSC1*skoMC1*skoMC1*skoMC1>skoMC1*skoMC1*skoMC1*-1,skoMC1*skoMC1*skoMC1*2>0,skoMC1>0,skoSC1*skoMC1>skoMC1*-1,skoSC1*skoMC1*skoMC1*skoMC1*2>skoMC1*skoMC1*skoMC1*-2,skoSC1*(skoMC1*skoMC1*skoMC1*skoMC1*12+skoSC1*(skoMC1*skoMC1*skoMC1*(-1+skoMC1*6)+skoSC1*(skoMC1*skoMC1*skoMC1*-1+skoSC1*(skoMC1*skoMC1*skoMC1*(1/12)+skoSC1*skoMC1*skoMC1*skoMC1*(1/12)))))>skoMC1*skoMC1*skoMC1*(-2+skoMC1*-6)]], Reals]]

% In QepcadB format:
(E skoSC1) (E skoMC1) [[(skoMC1 skoMC1 skoMC1 (2+(skoMC1 (5))))<(skoSC1 ((skoMC1 skoMC1 skoMC1 (1+(skoMC1 (-3))))+(skoSC1 ((skoMC1 skoMC1 skoMC1 (2+(skoMC1 (3))))+(skoSC1 ((skoMC1 skoMC1 skoMC1 (-1/6+skoMC1))+(skoSC1 ((skoMC1 skoMC1 skoMC1 (-1/4))+(skoSC1 skoSC1 ((skoMC1 skoMC1 skoMC1 (1/360))+(skoSC1 skoSC1 ((skoMC1 skoMC1 skoMC1 (-1/20160))+(skoSC1 skoSC1 ((skoMC1 skoMC1 skoMC1 (1/1814400))+(skoSC1 skoSC1 skoMC1 skoMC1 skoMC1 (-1/239500800))))))))))))))))]/\[[(skoMC1 skoMC1 skoMC1 (-2+(skoMC1 (-5))))<(skoSC1 ((skoMC1 skoMC1 skoMC1 (-1+(skoMC1 (3))))+(skoSC1 ((skoMC1 skoMC1 skoMC1 (-2+(skoMC1 (-3))))+(skoSC1 ((skoMC1 skoMC1 skoMC1 (1/6+(skoMC1 (-1))))+(skoSC1 skoMC1 skoMC1 skoMC1 (1/4))))))))]/\[[(skoMC1 (-2+(skoMC1 (-5))))<(skoSC1 ((skoMC1 (-1+(skoMC1 (3))))+(skoSC1 ((skoMC1 (-2+(skoMC1 (-3))))+(skoSC1 ((skoMC1 (1/6+(skoMC1 (-1))))+(skoSC1 skoMC1 (1/4))))))))]/\[[0<skoSC1]/\[[0<(skoSC1 ((skoMC1 skoMC1 skoMC1)+(skoSC1 skoMC1 skoMC1 skoMC1)))]/\[[(skoMC1 skoMC1 skoMC1 (-2))<(skoSC1 ((skoMC1 skoMC1 skoMC1 (2))+(skoSC1 ((skoMC1 skoMC1 skoMC1 (-1))+(skoSC1 skoMC1 skoMC1 skoMC1 (-1))))))]/\[[(skoMC1 skoMC1 skoMC1 (-1))<(skoSC1 skoMC1 skoMC1 skoMC1)]/\[[0<(skoMC1 skoMC1 skoMC1 (2))]/\[[0<skoMC1]/\[[(skoMC1 (-1))<(skoSC1 skoMC1)]/\[[(skoMC1 skoMC1 skoMC1 (-2))<(skoSC1 skoMC1 skoMC1 skoMC1 (2))]/\[(skoMC1 skoMC1 skoMC1 (-2+(skoMC1 (-6))))<(skoSC1 ((skoMC1 skoMC1 skoMC1 skoMC1 (12))+(skoSC1 ((skoMC1 skoMC1 skoMC1 (-1+(skoMC1 (6))))+(skoSC1 ((skoMC1 skoMC1 skoMC1 (-1))+(skoSC1 ((skoMC1 skoMC1 skoMC1 (1/12))+(skoSC1 skoMC1 skoMC1 skoMC1 (1/12))))))))))]]]]]]]]]]]].

% In SMTLib2 format:
(declare-fun skoSC1 () Real) (declare-fun skoMC1 () Real) (assert (and (> (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (+ 1. (* skoMC1 (- 3.)))))) (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (+ 2. (* skoMC1 3.))))) (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (+ (/ (- 1.) 6.) skoMC1)))) (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (/ (- 1.) 4.)))) (* skoSC1 (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (/ 1. 360.)))) (* skoSC1 (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (/ (- 1.) 20160.)))) (* skoSC1 (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (/ 1. 1814400.)))) (* skoSC1 (* skoSC1 (* skoMC1 (* skoMC1 (* skoMC1 (/ (- 1.) 239500800.))))))))))))))))))))))) (* skoMC1 (* skoMC1 (* skoMC1 (+ 2. (* skoMC1 5.)))))) (and (> (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (+ (- 1.) (* skoMC1 3.))))) (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (+ (- 2.) (* skoMC1 (- 3.)))))) (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (+ (/ 1. 6.) (* skoMC1 (- 1.)))))) (* skoSC1 (* skoMC1 (* skoMC1 (* skoMC1 (/ 1. 4.))))))))))) (* skoMC1 (* skoMC1 (* skoMC1 (+ (- 2.) (* skoMC1 (- 5.))))))) (and (> (* skoSC1 (+ (* skoMC1 (+ (- 1.) (* skoMC1 3.))) (* skoSC1 (+ (* skoMC1 (+ (- 2.) (* skoMC1 (- 3.)))) (* skoSC1 (+ (* skoMC1 (+ (/ 1. 6.) (* skoMC1 (- 1.)))) (* skoSC1 (* skoMC1 (/ 1. 4.))))))))) (* skoMC1 (+ (- 2.) (* skoMC1 (- 5.))))) (and (> skoSC1 0.) (and (> (* skoSC1 (+ (* skoMC1 (* skoMC1 skoMC1)) (* skoSC1 (* skoMC1 (* skoMC1 skoMC1))))) 0.) (and (> (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 2.))) (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (- 1.)))) (* skoSC1 (* skoMC1 (* skoMC1 (* skoMC1 (- 1.))))))))) (* skoMC1 (* skoMC1 (* skoMC1 (- 2.))))) (and (> (* skoSC1 (* skoMC1 (* skoMC1 skoMC1))) (* skoMC1 (* skoMC1 (* skoMC1 (- 1.))))) (and (> (* skoMC1 (* skoMC1 (* skoMC1 2.))) 0.) (and (> skoMC1 0.) (and (> (* skoSC1 skoMC1) (* skoMC1 (- 1.))) (and (> (* skoSC1 (* skoMC1 (* skoMC1 (* skoMC1 2.)))) (* skoMC1 (* skoMC1 (* skoMC1 (- 2.))))) (> (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (* skoMC1 12.)))) (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (+ (- 1.) (* skoMC1 6.))))) (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (- 1.)))) (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (/ 1. 12.)))) (* skoSC1 (* skoMC1 (* skoMC1 (* skoMC1 (/ 1. 12.))))))))))))) (* skoMC1 (* skoMC1 (* skoMC1 (+ (- 2.) (* skoMC1 (- 6.)))))))))))))))))))

% In GRF format:
(sequent " MetiTarski formula " (antecedent (> (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (+ 1. (* skoMC1 (- 3.)))))) (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (+ 2. (* skoMC1 3.))))) (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (+ (/ (- 1.) 6.) skoMC1)))) (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (/ (- 1.) 4.)))) (* skoSC1 (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (/ 1. 360.)))) (* skoSC1 (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (/ (- 1.) 20160.)))) (* skoSC1 (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (/ 1. 1814400.)))) (* skoSC1 (* skoSC1 (* skoMC1 (* skoMC1 (* skoMC1 (/ (- 1.) 239500800.))))))))))))))))))))))) (* skoMC1 (* skoMC1 (* skoMC1 (+ 2. (* skoMC1 5.)))))) (> (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (+ (- 1.) (* skoMC1 3.))))) (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (+ (- 2.) (* skoMC1 (- 3.)))))) (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (+ (/ 1. 6.) (* skoMC1 (- 1.)))))) (* skoSC1 (* skoMC1 (* skoMC1 (* skoMC1 (/ 1. 4.))))))))))) (* skoMC1 (* skoMC1 (* skoMC1 (+ (- 2.) (* skoMC1 (- 5.))))))) (> (* skoSC1 (+ (* skoMC1 (+ (- 1.) (* skoMC1 3.))) (* skoSC1 (+ (* skoMC1 (+ (- 2.) (* skoMC1 (- 3.)))) (* skoSC1 (+ (* skoMC1 (+ (/ 1. 6.) (* skoMC1 (- 1.)))) (* skoSC1 (* skoMC1 (/ 1. 4.))))))))) (* skoMC1 (+ (- 2.) (* skoMC1 (- 5.))))) (> skoSC1 0.) (> (* skoSC1 (+ (* skoMC1 (* skoMC1 skoMC1)) (* skoSC1 (* skoMC1 (* skoMC1 skoMC1))))) 0.) (> (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 2.))) (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (- 1.)))) (* skoSC1 (* skoMC1 (* skoMC1 (* skoMC1 (- 1.))))))))) (* skoMC1 (* skoMC1 (* skoMC1 (- 2.))))) (> (* skoSC1 (* skoMC1 (* skoMC1 skoMC1))) (* skoMC1 (* skoMC1 (* skoMC1 (- 1.))))) (> (* skoMC1 (* skoMC1 (* skoMC1 2.))) 0.) (> skoMC1 0.) (> (* skoSC1 skoMC1) (* skoMC1 (- 1.))) (> (* skoSC1 (* skoMC1 (* skoMC1 (* skoMC1 2.)))) (* skoMC1 (* skoMC1 (* skoMC1 (- 2.)))))) (succedent (<= (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (* skoMC1 12.)))) (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (+ (- 1.) (* skoMC1 6.))))) (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (- 1.)))) (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (/ 1. 12.)))) (* skoSC1 (* skoMC1 (* skoMC1 (* skoMC1 (/ 1. 12.))))))))))))) (* skoMC1 (* skoMC1 (* skoMC1 (+ (- 2.) (* skoMC1 (- 6.)))))))))
-----[end problem]-----

-----[begin problem]-----
% In Mathematica format:
Timing[Resolve[Exists[{skoSC1,skoMC1}, And[skoMC1*skoMC1*skoMC1*2<=0,skoSC1*(skoMC1*skoMC1*skoMC1*(1+skoMC1*-3)+skoSC1*(skoMC1*skoMC1*skoMC1*(2+skoMC1*3)+skoSC1*(skoMC1*skoMC1*skoMC1*((-1/6)+skoMC1)+skoSC1*(skoMC1*skoMC1*skoMC1*(-1/4)+skoSC1*skoSC1*(skoMC1*skoMC1*skoMC1*(1/360)+skoSC1*skoSC1*(skoMC1*skoMC1*skoMC1*(-1/20160)+skoSC1*skoSC1*(skoMC1*skoMC1*skoMC1*(1/1814400)+skoSC1*skoSC1*skoMC1*skoMC1*skoMC1*(-1/239500800))))))))>skoMC1*skoMC1*skoMC1*(2+skoMC1*5),skoSC1*(skoMC1*skoMC1*skoMC1*(1+skoMC1*-3)+skoSC1*(skoMC1*skoMC1*skoMC1*(2+skoMC1*3)+skoSC1*(skoMC1*skoMC1*skoMC1*((-1/6)+skoMC1)+skoSC1*skoMC1*skoMC1*skoMC1*(-1/4))))<=skoMC1*skoMC1*skoMC1*(2+skoMC1*5),skoSC1*(skoMC1*(1+skoMC1*-3)+skoSC1*(skoMC1*(2+skoMC1*3)+skoSC1*(skoMC1*((-1/6)+skoMC1)+skoSC1*skoMC1*(-1/4))))<=skoMC1*(2+skoMC1*5),skoSC1*(skoMC1*skoMC1*skoMC1*(-1+skoMC1*3)+skoSC1*(skoMC1*skoMC1*skoMC1*(-2+skoMC1*-3)+skoSC1*(skoMC1*skoMC1*skoMC1*((1/6)+skoMC1*-1)+skoSC1*skoMC1*skoMC1*skoMC1*(1/4))))>skoMC1*skoMC1*skoMC1*(-2+skoMC1*-5),skoSC1*(skoMC1*(-1+skoMC1*3)+skoSC1*(skoMC1*(-2+skoMC1*-3)+skoSC1*(skoMC1*((1/6)+skoMC1*-1)+skoSC1*skoMC1*(1/4))))>skoMC1*(-2+skoMC1*-5),skoSC1>0,skoSC1*(skoMC1*skoMC1*skoMC1*-2+skoSC1*(skoMC1*skoMC1*skoMC1+skoSC1*skoMC1*skoMC1*skoMC1))<=skoMC1*skoMC1*skoMC1*2,skoSC1*(skoMC1*skoMC1*skoMC1+skoSC1*skoMC1*skoMC1*skoMC1)>0,skoSC1*(skoMC1*skoMC1*skoMC1*2+skoSC1*(skoMC1*skoMC1*skoMC1*-1+skoSC1*skoMC1*skoMC1*skoMC1*-1))>skoMC1*skoMC1*skoMC1*-2,skoSC1*(skoMC1*skoMC1*skoMC1*-1+skoSC1*skoMC1*skoMC1*skoMC1*-1)<=0,skoSC1*skoMC1*skoMC1*skoMC1*-1<=skoMC1*skoMC1*skoMC1,skoSC1*skoMC1*skoMC1*skoMC1>skoMC1*skoMC1*skoMC1*-1,skoMC1*skoMC1*skoMC1*-2<=0,skoMC1*skoMC1*skoMC1*2>0,skoSC1<=(5/4),2<=skoMC1,0<=skoSC1,skoMC1>0,0<=skoMC1,skoSC1*skoMC1>skoMC1*-1,skoSC1*skoMC1*-1<=skoMC1,skoSC1*skoMC1*skoMC1*skoMC1*2>skoMC1*skoMC1*skoMC1*-2,skoSC1*skoMC1*skoMC1*skoMC1*-2<=skoMC1*skoMC1*skoMC1*2,skoSC1*(skoMC1*skoMC1*skoMC1*skoMC1*12+skoSC1*(skoMC1*skoMC1*skoMC1*(-1+skoMC1*6)+skoSC1*(skoMC1*skoMC1*skoMC1*-1+skoSC1*(skoMC1*skoMC1*skoMC1*(1/12)+skoSC1*skoMC1*skoMC1*skoMC1*(1/12)))))>skoMC1*skoMC1*skoMC1*(-2+skoMC1*-6),skoSC1*(skoMC1*skoMC1*skoMC1*skoMC1*-12+skoSC1*(skoMC1*skoMC1*skoMC1*(1+skoMC1*-6)+skoSC1*(skoMC1*skoMC1*skoMC1+skoSC1*(skoMC1*skoMC1*skoMC1*(-1/12)+skoSC1*skoMC1*skoMC1*skoMC1*(-1/12)))))<=skoMC1*skoMC1*skoMC1*(2+skoMC1*6)]], Reals]]

% In QepcadB format:
(E skoSC1) (E skoMC1) [[(skoMC1 skoMC1 skoMC1 (2))<=0]/\[[(skoMC1 skoMC1 skoMC1 (2+(skoMC1 (5))))<(skoSC1 ((skoMC1 skoMC1 skoMC1 (1+(skoMC1 (-3))))+(skoSC1 ((skoMC1 skoMC1 skoMC1 (2+(skoMC1 (3))))+(skoSC1 ((skoMC1 skoMC1 skoMC1 (-1/6+skoMC1))+(skoSC1 ((skoMC1 skoMC1 skoMC1 (-1/4))+(skoSC1 skoSC1 ((skoMC1 skoMC1 skoMC1 (1/360))+(skoSC1 skoSC1 ((skoMC1 skoMC1 skoMC1 (-1/20160))+(skoSC1 skoSC1 ((skoMC1 skoMC1 skoMC1 (1/1814400))+(skoSC1 skoSC1 skoMC1 skoMC1 skoMC1 (-1/239500800))))))))))))))))]/\[[(skoSC1 ((skoMC1 skoMC1 skoMC1 (1+(skoMC1 (-3))))+(skoSC1 ((skoMC1 skoMC1 skoMC1 (2+(skoMC1 (3))))+(skoSC1 ((skoMC1 skoMC1 skoMC1 (-1/6+skoMC1))+(skoSC1 skoMC1 skoMC1 skoMC1 (-1/4))))))))<=(skoMC1 skoMC1 skoMC1 (2+(skoMC1 (5))))]/\[[(skoSC1 ((skoMC1 (1+(skoMC1 (-3))))+(skoSC1 ((skoMC1 (2+(skoMC1 (3))))+(skoSC1 ((skoMC1 (-1/6+skoMC1))+(skoSC1 skoMC1 (-1/4))))))))<=(skoMC1 (2+(skoMC1 (5))))]/\[[(skoMC1 skoMC1 skoMC1 (-2+(skoMC1 (-5))))<(skoSC1 ((skoMC1 skoMC1 skoMC1 (-1+(skoMC1 (3))))+(skoSC1 ((skoMC1 skoMC1 skoMC1 (-2+(skoMC1 (-3))))+(skoSC1 ((skoMC1 skoMC1 skoMC1 (1/6+(skoMC1 (-1))))+(skoSC1 skoMC1 skoMC1 skoMC1 (1/4))))))))]/\[[(skoMC1 (-2+(skoMC1 (-5))))<(skoSC1 ((skoMC1 (-1+(skoMC1 (3))))+(skoSC1 ((skoMC1 (-2+(skoMC1 (-3))))+(skoSC1 ((skoMC1 (1/6+(skoMC1 (-1))))+(skoSC1 skoMC1 (1/4))))))))]/\[[0<skoSC1]/\[[(skoSC1 ((skoMC1 skoMC1 skoMC1 (-2))+(skoSC1 ((skoMC1 skoMC1 skoMC1)+(skoSC1 skoMC1 skoMC1 skoMC1)))))<=(skoMC1 skoMC1 skoMC1 (2))]/\[[0<(skoSC1 ((skoMC1 skoMC1 skoMC1)+(skoSC1 skoMC1 skoMC1 skoMC1)))]/\[[(skoMC1 skoMC1 skoMC1 (-2))<(skoSC1 ((skoMC1 skoMC1 skoMC1 (2))+(skoSC1 ((skoMC1 skoMC1 skoMC1 (-1))+(skoSC1 skoMC1 skoMC1 skoMC1 (-1))))))]/\[[(skoSC1 ((skoMC1 skoMC1 skoMC1 (-1))+(skoSC1 skoMC1 skoMC1 skoMC1 (-1))))<=0]/\[[(skoSC1 skoMC1 skoMC1 skoMC1 (-1))<=(skoMC1 skoMC1 skoMC1)]/\[[(skoMC1 skoMC1 skoMC1 (-1))<(skoSC1 skoMC1 skoMC1 skoMC1)]/\[[(skoMC1 skoMC1 skoMC1 (-2))<=0]/\[[0<(skoMC1 skoMC1 skoMC1 (2))]/\[[skoSC1<=5/4]/\[[2<=skoMC1]/\[[0<=skoSC1]/\[[0<skoMC1]/\[[0<=skoMC1]/\[[(skoMC1 (-1))<(skoSC1 skoMC1)]/\[[(skoSC1 skoMC1 (-1))<=skoMC1]/\[[(skoMC1 skoMC1 skoMC1 (-2))<(skoSC1 skoMC1 skoMC1 skoMC1 (2))]/\[[(skoSC1 skoMC1 skoMC1 skoMC1 (-2))<=(skoMC1 skoMC1 skoMC1 (2))]/\[[(skoMC1 skoMC1 skoMC1 (-2+(skoMC1 (-6))))<(skoSC1 ((skoMC1 skoMC1 skoMC1 skoMC1 (12))+(skoSC1 ((skoMC1 skoMC1 skoMC1 (-1+(skoMC1 (6))))+(skoSC1 ((skoMC1 skoMC1 skoMC1 (-1))+(skoSC1 ((skoMC1 skoMC1 skoMC1 (1/12))+(skoSC1 skoMC1 skoMC1 skoMC1 (1/12))))))))))]/\[(skoSC1 ((skoMC1 skoMC1 skoMC1 skoMC1 (-12))+(skoSC1 ((skoMC1 skoMC1 skoMC1 (1+(skoMC1 (-6))))+(skoSC1 ((skoMC1 skoMC1 skoMC1)+(skoSC1 ((skoMC1 skoMC1 skoMC1 (-1/12))+(skoSC1 skoMC1 skoMC1 skoMC1 (-1/12))))))))))<=(skoMC1 skoMC1 skoMC1 (2+(skoMC1 (6))))]]]]]]]]]]]]]]]]]]]]]]]]]].

% In SMTLib2 format:
(declare-fun skoSC1 () Real) (declare-fun skoMC1 () Real) (assert (and (<= (* skoMC1 (* skoMC1 (* skoMC1 2.))) 0.) (and (> (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (+ 1. (* skoMC1 (- 3.)))))) (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (+ 2. (* skoMC1 3.))))) (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (+ (/ (- 1.) 6.) skoMC1)))) (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (/ (- 1.) 4.)))) (* skoSC1 (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (/ 1. 360.)))) (* skoSC1 (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (/ (- 1.) 20160.)))) (* skoSC1 (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (/ 1. 1814400.)))) (* skoSC1 (* skoSC1 (* skoMC1 (* skoMC1 (* skoMC1 (/ (- 1.) 239500800.))))))))))))))))))))))) (* skoMC1 (* skoMC1 (* skoMC1 (+ 2. (* skoMC1 5.)))))) (and (<= (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (+ 1. (* skoMC1 (- 3.)))))) (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (+ 2. (* skoMC1 3.))))) (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (+ (/ (- 1.) 6.) skoMC1)))) (* skoSC1 (* skoMC1 (* skoMC1 (* skoMC1 (/ (- 1.) 4.))))))))))) (* skoMC1 (* skoMC1 (* skoMC1 (+ 2. (* skoMC1 5.)))))) (and (<= (* skoSC1 (+ (* skoMC1 (+ 1. (* skoMC1 (- 3.)))) (* skoSC1 (+ (* skoMC1 (+ 2. (* skoMC1 3.))) (* skoSC1 (+ (* skoMC1 (+ (/ (- 1.) 6.) skoMC1)) (* skoSC1 (* skoMC1 (/ (- 1.) 4.))))))))) (* skoMC1 (+ 2. (* skoMC1 5.)))) (and (> (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (+ (- 1.) (* skoMC1 3.))))) (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (+ (- 2.) (* skoMC1 (- 3.)))))) (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (+ (/ 1. 6.) (* skoMC1 (- 1.)))))) (* skoSC1 (* skoMC1 (* skoMC1 (* skoMC1 (/ 1. 4.))))))))))) (* skoMC1 (* skoMC1 (* skoMC1 (+ (- 2.) (* skoMC1 (- 5.))))))) (and (> (* skoSC1 (+ (* skoMC1 (+ (- 1.) (* skoMC1 3.))) (* skoSC1 (+ (* skoMC1 (+ (- 2.) (* skoMC1 (- 3.)))) (* skoSC1 (+ (* skoMC1 (+ (/ 1. 6.) (* skoMC1 (- 1.)))) (* skoSC1 (* skoMC1 (/ 1. 4.))))))))) (* skoMC1 (+ (- 2.) (* skoMC1 (- 5.))))) (and (> skoSC1 0.) (and (<= (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (- 2.)))) (* skoSC1 (+ (* skoMC1 (* skoMC1 skoMC1)) (* skoSC1 (* skoMC1 (* skoMC1 skoMC1))))))) (* skoMC1 (* skoMC1 (* skoMC1 2.)))) (and (> (* skoSC1 (+ (* skoMC1 (* skoMC1 skoMC1)) (* skoSC1 (* skoMC1 (* skoMC1 skoMC1))))) 0.) (and (> (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 2.))) (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (- 1.)))) (* skoSC1 (* skoMC1 (* skoMC1 (* skoMC1 (- 1.))))))))) (* skoMC1 (* skoMC1 (* skoMC1 (- 2.))))) (and (<= (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (- 1.)))) (* skoSC1 (* skoMC1 (* skoMC1 (* skoMC1 (- 1.))))))) 0.) (and (<= (* skoSC1 (* skoMC1 (* skoMC1 (* skoMC1 (- 1.))))) (* skoMC1 (* skoMC1 skoMC1))) (and (> (* skoSC1 (* skoMC1 (* skoMC1 skoMC1))) (* skoMC1 (* skoMC1 (* skoMC1 (- 1.))))) (and (<= (* skoMC1 (* skoMC1 (* skoMC1 (- 2.)))) 0.) (and (> (* skoMC1 (* skoMC1 (* skoMC1 2.))) 0.) (and (<= skoSC1 (/ 5. 4.)) (and (<= 2. skoMC1) (and (<= 0. skoSC1) (and (> skoMC1 0.) (and (<= 0. skoMC1) (and (> (* skoSC1 skoMC1) (* skoMC1 (- 1.))) (and (<= (* skoSC1 (* skoMC1 (- 1.))) skoMC1) (and (> (* skoSC1 (* skoMC1 (* skoMC1 (* skoMC1 2.)))) (* skoMC1 (* skoMC1 (* skoMC1 (- 2.))))) (and (<= (* skoSC1 (* skoMC1 (* skoMC1 (* skoMC1 (- 2.))))) (* skoMC1 (* skoMC1 (* skoMC1 2.)))) (and (> (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (* skoMC1 12.)))) (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (+ (- 1.) (* skoMC1 6.))))) (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (- 1.)))) (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (/ 1. 12.)))) (* skoSC1 (* skoMC1 (* skoMC1 (* skoMC1 (/ 1. 12.))))))))))))) (* skoMC1 (* skoMC1 (* skoMC1 (+ (- 2.) (* skoMC1 (- 6.))))))) (<= (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (* skoMC1 (- 12.))))) (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (+ 1. (* skoMC1 (- 6.)))))) (* skoSC1 (+ (* skoMC1 (* skoMC1 skoMC1)) (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (/ (- 1.) 12.)))) (* skoSC1 (* skoMC1 (* skoMC1 (* skoMC1 (/ (- 1.) 12.))))))))))))) (* skoMC1 (* skoMC1 (* skoMC1 (+ 2. (* skoMC1 6.))))))))))))))))))))))))))))))))

% In GRF format:
(sequent " MetiTarski formula " (antecedent (<= (* skoMC1 (* skoMC1 (* skoMC1 2.))) 0.) (> (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (+ 1. (* skoMC1 (- 3.)))))) (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (+ 2. (* skoMC1 3.))))) (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (+ (/ (- 1.) 6.) skoMC1)))) (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (/ (- 1.) 4.)))) (* skoSC1 (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (/ 1. 360.)))) (* skoSC1 (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (/ (- 1.) 20160.)))) (* skoSC1 (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (/ 1. 1814400.)))) (* skoSC1 (* skoSC1 (* skoMC1 (* skoMC1 (* skoMC1 (/ (- 1.) 239500800.))))))))))))))))))))))) (* skoMC1 (* skoMC1 (* skoMC1 (+ 2. (* skoMC1 5.)))))) (<= (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (+ 1. (* skoMC1 (- 3.)))))) (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (+ 2. (* skoMC1 3.))))) (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (+ (/ (- 1.) 6.) skoMC1)))) (* skoSC1 (* skoMC1 (* skoMC1 (* skoMC1 (/ (- 1.) 4.))))))))))) (* skoMC1 (* skoMC1 (* skoMC1 (+ 2. (* skoMC1 5.)))))) (<= (* skoSC1 (+ (* skoMC1 (+ 1. (* skoMC1 (- 3.)))) (* skoSC1 (+ (* skoMC1 (+ 2. (* skoMC1 3.))) (* skoSC1 (+ (* skoMC1 (+ (/ (- 1.) 6.) skoMC1)) (* skoSC1 (* skoMC1 (/ (- 1.) 4.))))))))) (* skoMC1 (+ 2. (* skoMC1 5.)))) (> (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (+ (- 1.) (* skoMC1 3.))))) (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (+ (- 2.) (* skoMC1 (- 3.)))))) (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (+ (/ 1. 6.) (* skoMC1 (- 1.)))))) (* skoSC1 (* skoMC1 (* skoMC1 (* skoMC1 (/ 1. 4.))))))))))) (* skoMC1 (* skoMC1 (* skoMC1 (+ (- 2.) (* skoMC1 (- 5.))))))) (> (* skoSC1 (+ (* skoMC1 (+ (- 1.) (* skoMC1 3.))) (* skoSC1 (+ (* skoMC1 (+ (- 2.) (* skoMC1 (- 3.)))) (* skoSC1 (+ (* skoMC1 (+ (/ 1. 6.) (* skoMC1 (- 1.)))) (* skoSC1 (* skoMC1 (/ 1. 4.))))))))) (* skoMC1 (+ (- 2.) (* skoMC1 (- 5.))))) (> skoSC1 0.) (<= (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (- 2.)))) (* skoSC1 (+ (* skoMC1 (* skoMC1 skoMC1)) (* skoSC1 (* skoMC1 (* skoMC1 skoMC1))))))) (* skoMC1 (* skoMC1 (* skoMC1 2.)))) (> (* skoSC1 (+ (* skoMC1 (* skoMC1 skoMC1)) (* skoSC1 (* skoMC1 (* skoMC1 skoMC1))))) 0.) (> (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 2.))) (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (- 1.)))) (* skoSC1 (* skoMC1 (* skoMC1 (* skoMC1 (- 1.))))))))) (* skoMC1 (* skoMC1 (* skoMC1 (- 2.))))) (<= (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (- 1.)))) (* skoSC1 (* skoMC1 (* skoMC1 (* skoMC1 (- 1.))))))) 0.) (<= (* skoSC1 (* skoMC1 (* skoMC1 (* skoMC1 (- 1.))))) (* skoMC1 (* skoMC1 skoMC1))) (> (* skoSC1 (* skoMC1 (* skoMC1 skoMC1))) (* skoMC1 (* skoMC1 (* skoMC1 (- 1.))))) (<= (* skoMC1 (* skoMC1 (* skoMC1 (- 2.)))) 0.) (> (* skoMC1 (* skoMC1 (* skoMC1 2.))) 0.) (<= skoSC1 (/ 5. 4.)) (<= 2. skoMC1) (<= 0. skoSC1) (> skoMC1 0.) (<= 0. skoMC1) (> (* skoSC1 skoMC1) (* skoMC1 (- 1.))) (<= (* skoSC1 (* skoMC1 (- 1.))) skoMC1) (> (* skoSC1 (* skoMC1 (* skoMC1 (* skoMC1 2.)))) (* skoMC1 (* skoMC1 (* skoMC1 (- 2.))))) (<= (* skoSC1 (* skoMC1 (* skoMC1 (* skoMC1 (- 2.))))) (* skoMC1 (* skoMC1 (* skoMC1 2.)))) (> (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (* skoMC1 12.)))) (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (+ (- 1.) (* skoMC1 6.))))) (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (- 1.)))) (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (/ 1. 12.)))) (* skoSC1 (* skoMC1 (* skoMC1 (* skoMC1 (/ 1. 12.))))))))))))) (* skoMC1 (* skoMC1 (* skoMC1 (+ (- 2.) (* skoMC1 (- 6.)))))))) (succedent (> (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (* skoMC1 (- 12.))))) (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (+ 1. (* skoMC1 (- 6.)))))) (* skoSC1 (+ (* skoMC1 (* skoMC1 skoMC1)) (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (/ (- 1.) 12.)))) (* skoSC1 (* skoMC1 (* skoMC1 (* skoMC1 (/ (- 1.) 12.))))))))))))) (* skoMC1 (* skoMC1 (* skoMC1 (+ 2. (* skoMC1 6.))))))))
-----[end problem]-----

-----[begin problem]-----
% In Mathematica format:
Timing[Resolve[Exists[{skoSC1,skoMC1}, And[skoSC1*(skoMC1*skoMC1*skoMC1*(1+skoMC1*-3)+skoSC1*(skoMC1*skoMC1*skoMC1*(2+skoMC1*3)+skoSC1*(skoMC1*skoMC1*skoMC1*((-1/6)+skoMC1)+skoSC1*(skoMC1*skoMC1*skoMC1*(-1/4)+skoSC1*skoSC1*(skoMC1*skoMC1*skoMC1*(1/360)+skoSC1*skoSC1*(skoMC1*skoMC1*skoMC1*(-1/20160)+skoSC1*skoSC1*(skoMC1*skoMC1*skoMC1*(1/1814400)+skoSC1*skoSC1*skoMC1*skoMC1*skoMC1*(-1/239500800))))))))<=skoMC1*skoMC1*skoMC1*(2+skoMC1*5),skoSC1*(skoMC1*skoMC1*skoMC1*(1+skoMC1*-3)+skoSC1*(skoMC1*skoMC1*skoMC1*(2+skoMC1*3)+skoSC1*(skoMC1*skoMC1*skoMC1*((-1/6)+skoMC1)+skoSC1*skoMC1*skoMC1*skoMC1*(-1/4))))<=skoMC1*skoMC1*skoMC1*(2+skoMC1*5),skoSC1*(skoMC1*(1+skoMC1*-3)+skoSC1*(skoMC1*(2+skoMC1*3)+skoSC1*(skoMC1*((-1/6)+skoMC1)+skoSC1*skoMC1*(-1/4))))<=skoMC1*(2+skoMC1*5),skoSC1*(skoMC1*skoMC1*skoMC1*(-1+skoMC1*3)+skoSC1*(skoMC1*skoMC1*skoMC1*(-2+skoMC1*-3)+skoSC1*(skoMC1*skoMC1*skoMC1*((1/6)+skoMC1*-1)+skoSC1*skoMC1*skoMC1*skoMC1*(1/4))))>skoMC1*skoMC1*skoMC1*(-2+skoMC1*-5),skoSC1*(skoMC1*(-1+skoMC1*3)+skoSC1*(skoMC1*(-2+skoMC1*-3)+skoSC1*(skoMC1*((1/6)+skoMC1*-1)+skoSC1*skoMC1*(1/4))))>skoMC1*(-2+skoMC1*-5),skoSC1>0,skoSC1*(skoMC1*skoMC1*skoMC1*-2+skoSC1*(skoMC1*skoMC1*skoMC1+skoSC1*skoMC1*skoMC1*skoMC1))<=skoMC1*skoMC1*skoMC1*2,skoSC1*(skoMC1*skoMC1*skoMC1+skoSC1*skoMC1*skoMC1*skoMC1)>0,skoSC1*(skoMC1*skoMC1*skoMC1*2+skoSC1*(skoMC1*skoMC1*skoMC1*-1+skoSC1*skoMC1*skoMC1*skoMC1*-1))>skoMC1*skoMC1*skoMC1*-2,skoSC1*(skoMC1*skoMC1*skoMC1*-1+skoSC1*skoMC1*skoMC1*skoMC1*-1)<=0,skoSC1*skoMC1*skoMC1*skoMC1*-1<=skoMC1*skoMC1*skoMC1,skoSC1*skoMC1*skoMC1*skoMC1>skoMC1*skoMC1*skoMC1*-1,skoMC1*skoMC1*skoMC1*-2<=0,skoMC1*skoMC1*skoMC1*2>0,skoSC1<=(5/4),2<=skoMC1,0<=skoSC1,skoMC1>0,0<=skoMC1,skoSC1*skoMC1>skoMC1*-1,skoSC1*skoMC1*-1<=skoMC1,skoSC1*skoMC1*skoMC1*skoMC1*2>skoMC1*skoMC1*skoMC1*-2,skoSC1*skoMC1*skoMC1*skoMC1*-2<=skoMC1*skoMC1*skoMC1*2,skoSC1*(skoMC1*skoMC1*skoMC1*skoMC1*12+skoSC1*(skoMC1*skoMC1*skoMC1*(-1+skoMC1*6)+skoSC1*(skoMC1*skoMC1*skoMC1*-1+skoSC1*(skoMC1*skoMC1*skoMC1*(1/12)+skoSC1*skoMC1*skoMC1*skoMC1*(1/12)))))>skoMC1*skoMC1*skoMC1*(-2+skoMC1*-6),skoSC1*(skoMC1*skoMC1*skoMC1*skoMC1*-12+skoSC1*(skoMC1*skoMC1*skoMC1*(1+skoMC1*-6)+skoSC1*(skoMC1*skoMC1*skoMC1+skoSC1*(skoMC1*skoMC1*skoMC1*(-1/12)+skoSC1*skoMC1*skoMC1*skoMC1*(-1/12)))))<=skoMC1*skoMC1*skoMC1*(2+skoMC1*6)]], Reals]]

% In QepcadB format:
(E skoSC1) (E skoMC1) [[(skoSC1 ((skoMC1 skoMC1 skoMC1 (1+(skoMC1 (-3))))+(skoSC1 ((skoMC1 skoMC1 skoMC1 (2+(skoMC1 (3))))+(skoSC1 ((skoMC1 skoMC1 skoMC1 (-1/6+skoMC1))+(skoSC1 ((skoMC1 skoMC1 skoMC1 (-1/4))+(skoSC1 skoSC1 ((skoMC1 skoMC1 skoMC1 (1/360))+(skoSC1 skoSC1 ((skoMC1 skoMC1 skoMC1 (-1/20160))+(skoSC1 skoSC1 ((skoMC1 skoMC1 skoMC1 (1/1814400))+(skoSC1 skoSC1 skoMC1 skoMC1 skoMC1 (-1/239500800))))))))))))))))<=(skoMC1 skoMC1 skoMC1 (2+(skoMC1 (5))))]/\[[(skoSC1 ((skoMC1 skoMC1 skoMC1 (1+(skoMC1 (-3))))+(skoSC1 ((skoMC1 skoMC1 skoMC1 (2+(skoMC1 (3))))+(skoSC1 ((skoMC1 skoMC1 skoMC1 (-1/6+skoMC1))+(skoSC1 skoMC1 skoMC1 skoMC1 (-1/4))))))))<=(skoMC1 skoMC1 skoMC1 (2+(skoMC1 (5))))]/\[[(skoSC1 ((skoMC1 (1+(skoMC1 (-3))))+(skoSC1 ((skoMC1 (2+(skoMC1 (3))))+(skoSC1 ((skoMC1 (-1/6+skoMC1))+(skoSC1 skoMC1 (-1/4))))))))<=(skoMC1 (2+(skoMC1 (5))))]/\[[(skoMC1 skoMC1 skoMC1 (-2+(skoMC1 (-5))))<(skoSC1 ((skoMC1 skoMC1 skoMC1 (-1+(skoMC1 (3))))+(skoSC1 ((skoMC1 skoMC1 skoMC1 (-2+(skoMC1 (-3))))+(skoSC1 ((skoMC1 skoMC1 skoMC1 (1/6+(skoMC1 (-1))))+(skoSC1 skoMC1 skoMC1 skoMC1 (1/4))))))))]/\[[(skoMC1 (-2+(skoMC1 (-5))))<(skoSC1 ((skoMC1 (-1+(skoMC1 (3))))+(skoSC1 ((skoMC1 (-2+(skoMC1 (-3))))+(skoSC1 ((skoMC1 (1/6+(skoMC1 (-1))))+(skoSC1 skoMC1 (1/4))))))))]/\[[0<skoSC1]/\[[(skoSC1 ((skoMC1 skoMC1 skoMC1 (-2))+(skoSC1 ((skoMC1 skoMC1 skoMC1)+(skoSC1 skoMC1 skoMC1 skoMC1)))))<=(skoMC1 skoMC1 skoMC1 (2))]/\[[0<(skoSC1 ((skoMC1 skoMC1 skoMC1)+(skoSC1 skoMC1 skoMC1 skoMC1)))]/\[[(skoMC1 skoMC1 skoMC1 (-2))<(skoSC1 ((skoMC1 skoMC1 skoMC1 (2))+(skoSC1 ((skoMC1 skoMC1 skoMC1 (-1))+(skoSC1 skoMC1 skoMC1 skoMC1 (-1))))))]/\[[(skoSC1 ((skoMC1 skoMC1 skoMC1 (-1))+(skoSC1 skoMC1 skoMC1 skoMC1 (-1))))<=0]/\[[(skoSC1 skoMC1 skoMC1 skoMC1 (-1))<=(skoMC1 skoMC1 skoMC1)]/\[[(skoMC1 skoMC1 skoMC1 (-1))<(skoSC1 skoMC1 skoMC1 skoMC1)]/\[[(skoMC1 skoMC1 skoMC1 (-2))<=0]/\[[0<(skoMC1 skoMC1 skoMC1 (2))]/\[[skoSC1<=5/4]/\[[2<=skoMC1]/\[[0<=skoSC1]/\[[0<skoMC1]/\[[0<=skoMC1]/\[[(skoMC1 (-1))<(skoSC1 skoMC1)]/\[[(skoSC1 skoMC1 (-1))<=skoMC1]/\[[(skoMC1 skoMC1 skoMC1 (-2))<(skoSC1 skoMC1 skoMC1 skoMC1 (2))]/\[[(skoSC1 skoMC1 skoMC1 skoMC1 (-2))<=(skoMC1 skoMC1 skoMC1 (2))]/\[[(skoMC1 skoMC1 skoMC1 (-2+(skoMC1 (-6))))<(skoSC1 ((skoMC1 skoMC1 skoMC1 skoMC1 (12))+(skoSC1 ((skoMC1 skoMC1 skoMC1 (-1+(skoMC1 (6))))+(skoSC1 ((skoMC1 skoMC1 skoMC1 (-1))+(skoSC1 ((skoMC1 skoMC1 skoMC1 (1/12))+(skoSC1 skoMC1 skoMC1 skoMC1 (1/12))))))))))]/\[(skoSC1 ((skoMC1 skoMC1 skoMC1 skoMC1 (-12))+(skoSC1 ((skoMC1 skoMC1 skoMC1 (1+(skoMC1 (-6))))+(skoSC1 ((skoMC1 skoMC1 skoMC1)+(skoSC1 ((skoMC1 skoMC1 skoMC1 (-1/12))+(skoSC1 skoMC1 skoMC1 skoMC1 (-1/12))))))))))<=(skoMC1 skoMC1 skoMC1 (2+(skoMC1 (6))))]]]]]]]]]]]]]]]]]]]]]]]]].

% In SMTLib2 format:
(declare-fun skoSC1 () Real) (declare-fun skoMC1 () Real) (assert (and (<= (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (+ 1. (* skoMC1 (- 3.)))))) (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (+ 2. (* skoMC1 3.))))) (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (+ (/ (- 1.) 6.) skoMC1)))) (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (/ (- 1.) 4.)))) (* skoSC1 (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (/ 1. 360.)))) (* skoSC1 (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (/ (- 1.) 20160.)))) (* skoSC1 (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (/ 1. 1814400.)))) (* skoSC1 (* skoSC1 (* skoMC1 (* skoMC1 (* skoMC1 (/ (- 1.) 239500800.))))))))))))))))))))))) (* skoMC1 (* skoMC1 (* skoMC1 (+ 2. (* skoMC1 5.)))))) (and (<= (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (+ 1. (* skoMC1 (- 3.)))))) (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (+ 2. (* skoMC1 3.))))) (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (+ (/ (- 1.) 6.) skoMC1)))) (* skoSC1 (* skoMC1 (* skoMC1 (* skoMC1 (/ (- 1.) 4.))))))))))) (* skoMC1 (* skoMC1 (* skoMC1 (+ 2. (* skoMC1 5.)))))) (and (<= (* skoSC1 (+ (* skoMC1 (+ 1. (* skoMC1 (- 3.)))) (* skoSC1 (+ (* skoMC1 (+ 2. (* skoMC1 3.))) (* skoSC1 (+ (* skoMC1 (+ (/ (- 1.) 6.) skoMC1)) (* skoSC1 (* skoMC1 (/ (- 1.) 4.))))))))) (* skoMC1 (+ 2. (* skoMC1 5.)))) (and (> (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (+ (- 1.) (* skoMC1 3.))))) (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (+ (- 2.) (* skoMC1 (- 3.)))))) (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (+ (/ 1. 6.) (* skoMC1 (- 1.)))))) (* skoSC1 (* skoMC1 (* skoMC1 (* skoMC1 (/ 1. 4.))))))))))) (* skoMC1 (* skoMC1 (* skoMC1 (+ (- 2.) (* skoMC1 (- 5.))))))) (and (> (* skoSC1 (+ (* skoMC1 (+ (- 1.) (* skoMC1 3.))) (* skoSC1 (+ (* skoMC1 (+ (- 2.) (* skoMC1 (- 3.)))) (* skoSC1 (+ (* skoMC1 (+ (/ 1. 6.) (* skoMC1 (- 1.)))) (* skoSC1 (* skoMC1 (/ 1. 4.))))))))) (* skoMC1 (+ (- 2.) (* skoMC1 (- 5.))))) (and (> skoSC1 0.) (and (<= (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (- 2.)))) (* skoSC1 (+ (* skoMC1 (* skoMC1 skoMC1)) (* skoSC1 (* skoMC1 (* skoMC1 skoMC1))))))) (* skoMC1 (* skoMC1 (* skoMC1 2.)))) (and (> (* skoSC1 (+ (* skoMC1 (* skoMC1 skoMC1)) (* skoSC1 (* skoMC1 (* skoMC1 skoMC1))))) 0.) (and (> (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 2.))) (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (- 1.)))) (* skoSC1 (* skoMC1 (* skoMC1 (* skoMC1 (- 1.))))))))) (* skoMC1 (* skoMC1 (* skoMC1 (- 2.))))) (and (<= (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (- 1.)))) (* skoSC1 (* skoMC1 (* skoMC1 (* skoMC1 (- 1.))))))) 0.) (and (<= (* skoSC1 (* skoMC1 (* skoMC1 (* skoMC1 (- 1.))))) (* skoMC1 (* skoMC1 skoMC1))) (and (> (* skoSC1 (* skoMC1 (* skoMC1 skoMC1))) (* skoMC1 (* skoMC1 (* skoMC1 (- 1.))))) (and (<= (* skoMC1 (* skoMC1 (* skoMC1 (- 2.)))) 0.) (and (> (* skoMC1 (* skoMC1 (* skoMC1 2.))) 0.) (and (<= skoSC1 (/ 5. 4.)) (and (<= 2. skoMC1) (and (<= 0. skoSC1) (and (> skoMC1 0.) (and (<= 0. skoMC1) (and (> (* skoSC1 skoMC1) (* skoMC1 (- 1.))) (and (<= (* skoSC1 (* skoMC1 (- 1.))) skoMC1) (and (> (* skoSC1 (* skoMC1 (* skoMC1 (* skoMC1 2.)))) (* skoMC1 (* skoMC1 (* skoMC1 (- 2.))))) (and (<= (* skoSC1 (* skoMC1 (* skoMC1 (* skoMC1 (- 2.))))) (* skoMC1 (* skoMC1 (* skoMC1 2.)))) (and (> (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (* skoMC1 12.)))) (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (+ (- 1.) (* skoMC1 6.))))) (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (- 1.)))) (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (/ 1. 12.)))) (* skoSC1 (* skoMC1 (* skoMC1 (* skoMC1 (/ 1. 12.))))))))))))) (* skoMC1 (* skoMC1 (* skoMC1 (+ (- 2.) (* skoMC1 (- 6.))))))) (<= (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (* skoMC1 (- 12.))))) (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (+ 1. (* skoMC1 (- 6.)))))) (* skoSC1 (+ (* skoMC1 (* skoMC1 skoMC1)) (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (/ (- 1.) 12.)))) (* skoSC1 (* skoMC1 (* skoMC1 (* skoMC1 (/ (- 1.) 12.))))))))))))) (* skoMC1 (* skoMC1 (* skoMC1 (+ 2. (* skoMC1 6.)))))))))))))))))))))))))))))))

% In GRF format:
(sequent " MetiTarski formula " (antecedent (<= (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (+ 1. (* skoMC1 (- 3.)))))) (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (+ 2. (* skoMC1 3.))))) (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (+ (/ (- 1.) 6.) skoMC1)))) (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (/ (- 1.) 4.)))) (* skoSC1 (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (/ 1. 360.)))) (* skoSC1 (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (/ (- 1.) 20160.)))) (* skoSC1 (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (/ 1. 1814400.)))) (* skoSC1 (* skoSC1 (* skoMC1 (* skoMC1 (* skoMC1 (/ (- 1.) 239500800.))))))))))))))))))))))) (* skoMC1 (* skoMC1 (* skoMC1 (+ 2. (* skoMC1 5.)))))) (<= (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (+ 1. (* skoMC1 (- 3.)))))) (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (+ 2. (* skoMC1 3.))))) (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (+ (/ (- 1.) 6.) skoMC1)))) (* skoSC1 (* skoMC1 (* skoMC1 (* skoMC1 (/ (- 1.) 4.))))))))))) (* skoMC1 (* skoMC1 (* skoMC1 (+ 2. (* skoMC1 5.)))))) (<= (* skoSC1 (+ (* skoMC1 (+ 1. (* skoMC1 (- 3.)))) (* skoSC1 (+ (* skoMC1 (+ 2. (* skoMC1 3.))) (* skoSC1 (+ (* skoMC1 (+ (/ (- 1.) 6.) skoMC1)) (* skoSC1 (* skoMC1 (/ (- 1.) 4.))))))))) (* skoMC1 (+ 2. (* skoMC1 5.)))) (> (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (+ (- 1.) (* skoMC1 3.))))) (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (+ (- 2.) (* skoMC1 (- 3.)))))) (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (+ (/ 1. 6.) (* skoMC1 (- 1.)))))) (* skoSC1 (* skoMC1 (* skoMC1 (* skoMC1 (/ 1. 4.))))))))))) (* skoMC1 (* skoMC1 (* skoMC1 (+ (- 2.) (* skoMC1 (- 5.))))))) (> (* skoSC1 (+ (* skoMC1 (+ (- 1.) (* skoMC1 3.))) (* skoSC1 (+ (* skoMC1 (+ (- 2.) (* skoMC1 (- 3.)))) (* skoSC1 (+ (* skoMC1 (+ (/ 1. 6.) (* skoMC1 (- 1.)))) (* skoSC1 (* skoMC1 (/ 1. 4.))))))))) (* skoMC1 (+ (- 2.) (* skoMC1 (- 5.))))) (> skoSC1 0.) (<= (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (- 2.)))) (* skoSC1 (+ (* skoMC1 (* skoMC1 skoMC1)) (* skoSC1 (* skoMC1 (* skoMC1 skoMC1))))))) (* skoMC1 (* skoMC1 (* skoMC1 2.)))) (> (* skoSC1 (+ (* skoMC1 (* skoMC1 skoMC1)) (* skoSC1 (* skoMC1 (* skoMC1 skoMC1))))) 0.) (> (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 2.))) (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (- 1.)))) (* skoSC1 (* skoMC1 (* skoMC1 (* skoMC1 (- 1.))))))))) (* skoMC1 (* skoMC1 (* skoMC1 (- 2.))))) (<= (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (- 1.)))) (* skoSC1 (* skoMC1 (* skoMC1 (* skoMC1 (- 1.))))))) 0.) (<= (* skoSC1 (* skoMC1 (* skoMC1 (* skoMC1 (- 1.))))) (* skoMC1 (* skoMC1 skoMC1))) (> (* skoSC1 (* skoMC1 (* skoMC1 skoMC1))) (* skoMC1 (* skoMC1 (* skoMC1 (- 1.))))) (<= (* skoMC1 (* skoMC1 (* skoMC1 (- 2.)))) 0.) (> (* skoMC1 (* skoMC1 (* skoMC1 2.))) 0.) (<= skoSC1 (/ 5. 4.)) (<= 2. skoMC1) (<= 0. skoSC1) (> skoMC1 0.) (<= 0. skoMC1) (> (* skoSC1 skoMC1) (* skoMC1 (- 1.))) (<= (* skoSC1 (* skoMC1 (- 1.))) skoMC1) (> (* skoSC1 (* skoMC1 (* skoMC1 (* skoMC1 2.)))) (* skoMC1 (* skoMC1 (* skoMC1 (- 2.))))) (<= (* skoSC1 (* skoMC1 (* skoMC1 (* skoMC1 (- 2.))))) (* skoMC1 (* skoMC1 (* skoMC1 2.)))) (> (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (* skoMC1 12.)))) (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (+ (- 1.) (* skoMC1 6.))))) (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (- 1.)))) (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (/ 1. 12.)))) (* skoSC1 (* skoMC1 (* skoMC1 (* skoMC1 (/ 1. 12.))))))))))))) (* skoMC1 (* skoMC1 (* skoMC1 (+ (- 2.) (* skoMC1 (- 6.)))))))) (succedent (> (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (* skoMC1 (- 12.))))) (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (+ 1. (* skoMC1 (- 6.)))))) (* skoSC1 (+ (* skoMC1 (* skoMC1 skoMC1)) (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (/ (- 1.) 12.)))) (* skoSC1 (* skoMC1 (* skoMC1 (* skoMC1 (/ (- 1.) 12.))))))))))))) (* skoMC1 (* skoMC1 (* skoMC1 (+ 2. (* skoMC1 6.))))))))
-----[end problem]-----

-----[begin problem]-----
% In Mathematica format:
Timing[Resolve[Exists[{skoSC1,skoMC1}, And[skoSC1*(skoMC1*skoMC1*skoMC1*-1+skoSC1*skoMC1*skoMC1*skoMC1*-1)<=0,skoSC1*(skoMC1*skoMC1*skoMC1*(1+skoMC1*-3)+skoSC1*(skoMC1*skoMC1*skoMC1*(2+skoMC1*3)+skoSC1*(skoMC1*skoMC1*skoMC1*((-1/6)+skoMC1)+skoSC1*skoMC1*skoMC1*skoMC1*(-1/4))))<=skoMC1*skoMC1*skoMC1*(2+skoMC1*5),skoSC1*(skoMC1*(1+skoMC1*-3)+skoSC1*(skoMC1*(2+skoMC1*3)+skoSC1*(skoMC1*((-1/6)+skoMC1)+skoSC1*skoMC1*(-1/4))))<=skoMC1*(2+skoMC1*5),skoSC1*(skoMC1*skoMC1*skoMC1*(-1+skoMC1*3)+skoSC1*(skoMC1*skoMC1*skoMC1*(-2+skoMC1*-3)+skoSC1*(skoMC1*skoMC1*skoMC1*((1/6)+skoMC1*-1)+skoSC1*skoMC1*skoMC1*skoMC1*(1/4))))>skoMC1*skoMC1*skoMC1*(-2+skoMC1*-5),skoSC1*(skoMC1*(-1+skoMC1*3)+skoSC1*(skoMC1*(-2+skoMC1*-3)+skoSC1*(skoMC1*((1/6)+skoMC1*-1)+skoSC1*skoMC1*(1/4))))>skoMC1*(-2+skoMC1*-5),skoSC1>0,skoSC1*(skoMC1*skoMC1*skoMC1*-2+skoSC1*(skoMC1*skoMC1*skoMC1+skoSC1*skoMC1*skoMC1*skoMC1))<=skoMC1*skoMC1*skoMC1*2,skoSC1*(skoMC1*skoMC1*skoMC1+skoSC1*skoMC1*skoMC1*skoMC1)>0,skoSC1*(skoMC1*skoMC1*skoMC1*2+skoSC1*(skoMC1*skoMC1*skoMC1*-1+skoSC1*skoMC1*skoMC1*skoMC1*-1))>skoMC1*skoMC1*skoMC1*-2,skoSC1*(skoMC1*skoMC1*skoMC1*-1+skoSC1*skoMC1*skoMC1*skoMC1*-1)<=0,skoSC1*skoMC1*skoMC1*skoMC1*-1<=skoMC1*skoMC1*skoMC1,skoSC1*skoMC1*skoMC1*skoMC1>skoMC1*skoMC1*skoMC1*-1,skoMC1*skoMC1*skoMC1*-2<=0,skoMC1*skoMC1*skoMC1*2>0,skoSC1<=(5/4),2<=skoMC1,0<=skoSC1,skoMC1>0,0<=skoMC1,skoSC1*skoMC1>skoMC1*-1,skoSC1*skoMC1*-1<=skoMC1,skoSC1*skoMC1*skoMC1*skoMC1*2>skoMC1*skoMC1*skoMC1*-2,skoSC1*skoMC1*skoMC1*skoMC1*-2<=skoMC1*skoMC1*skoMC1*2,skoSC1*(skoMC1*skoMC1*skoMC1*skoMC1*12+skoSC1*(skoMC1*skoMC1*skoMC1*(-1+skoMC1*6)+skoSC1*(skoMC1*skoMC1*skoMC1*-1+skoSC1*(skoMC1*skoMC1*skoMC1*(1/12)+skoSC1*skoMC1*skoMC1*skoMC1*(1/12)))))>skoMC1*skoMC1*skoMC1*(-2+skoMC1*-6),skoSC1*(skoMC1*skoMC1*skoMC1*skoMC1*-12+skoSC1*(skoMC1*skoMC1*skoMC1*(1+skoMC1*-6)+skoSC1*(skoMC1*skoMC1*skoMC1+skoSC1*(skoMC1*skoMC1*skoMC1*(-1/12)+skoSC1*skoMC1*skoMC1*skoMC1*(-1/12)))))<=skoMC1*skoMC1*skoMC1*(2+skoMC1*6)]], Reals]]

% In QepcadB format:
(E skoSC1) (E skoMC1) [[(skoSC1 ((skoMC1 skoMC1 skoMC1 (-1))+(skoSC1 skoMC1 skoMC1 skoMC1 (-1))))<=0]/\[[(skoSC1 ((skoMC1 skoMC1 skoMC1 (1+(skoMC1 (-3))))+(skoSC1 ((skoMC1 skoMC1 skoMC1 (2+(skoMC1 (3))))+(skoSC1 ((skoMC1 skoMC1 skoMC1 (-1/6+skoMC1))+(skoSC1 skoMC1 skoMC1 skoMC1 (-1/4))))))))<=(skoMC1 skoMC1 skoMC1 (2+(skoMC1 (5))))]/\[[(skoSC1 ((skoMC1 (1+(skoMC1 (-3))))+(skoSC1 ((skoMC1 (2+(skoMC1 (3))))+(skoSC1 ((skoMC1 (-1/6+skoMC1))+(skoSC1 skoMC1 (-1/4))))))))<=(skoMC1 (2+(skoMC1 (5))))]/\[[(skoMC1 skoMC1 skoMC1 (-2+(skoMC1 (-5))))<(skoSC1 ((skoMC1 skoMC1 skoMC1 (-1+(skoMC1 (3))))+(skoSC1 ((skoMC1 skoMC1 skoMC1 (-2+(skoMC1 (-3))))+(skoSC1 ((skoMC1 skoMC1 skoMC1 (1/6+(skoMC1 (-1))))+(skoSC1 skoMC1 skoMC1 skoMC1 (1/4))))))))]/\[[(skoMC1 (-2+(skoMC1 (-5))))<(skoSC1 ((skoMC1 (-1+(skoMC1 (3))))+(skoSC1 ((skoMC1 (-2+(skoMC1 (-3))))+(skoSC1 ((skoMC1 (1/6+(skoMC1 (-1))))+(skoSC1 skoMC1 (1/4))))))))]/\[[0<skoSC1]/\[[(skoSC1 ((skoMC1 skoMC1 skoMC1 (-2))+(skoSC1 ((skoMC1 skoMC1 skoMC1)+(skoSC1 skoMC1 skoMC1 skoMC1)))))<=(skoMC1 skoMC1 skoMC1 (2))]/\[[0<(skoSC1 ((skoMC1 skoMC1 skoMC1)+(skoSC1 skoMC1 skoMC1 skoMC1)))]/\[[(skoMC1 skoMC1 skoMC1 (-2))<(skoSC1 ((skoMC1 skoMC1 skoMC1 (2))+(skoSC1 ((skoMC1 skoMC1 skoMC1 (-1))+(skoSC1 skoMC1 skoMC1 skoMC1 (-1))))))]/\[[(skoSC1 ((skoMC1 skoMC1 skoMC1 (-1))+(skoSC1 skoMC1 skoMC1 skoMC1 (-1))))<=0]/\[[(skoSC1 skoMC1 skoMC1 skoMC1 (-1))<=(skoMC1 skoMC1 skoMC1)]/\[[(skoMC1 skoMC1 skoMC1 (-1))<(skoSC1 skoMC1 skoMC1 skoMC1)]/\[[(skoMC1 skoMC1 skoMC1 (-2))<=0]/\[[0<(skoMC1 skoMC1 skoMC1 (2))]/\[[skoSC1<=5/4]/\[[2<=skoMC1]/\[[0<=skoSC1]/\[[0<skoMC1]/\[[0<=skoMC1]/\[[(skoMC1 (-1))<(skoSC1 skoMC1)]/\[[(skoSC1 skoMC1 (-1))<=skoMC1]/\[[(skoMC1 skoMC1 skoMC1 (-2))<(skoSC1 skoMC1 skoMC1 skoMC1 (2))]/\[[(skoSC1 skoMC1 skoMC1 skoMC1 (-2))<=(skoMC1 skoMC1 skoMC1 (2))]/\[[(skoMC1 skoMC1 skoMC1 (-2+(skoMC1 (-6))))<(skoSC1 ((skoMC1 skoMC1 skoMC1 skoMC1 (12))+(skoSC1 ((skoMC1 skoMC1 skoMC1 (-1+(skoMC1 (6))))+(skoSC1 ((skoMC1 skoMC1 skoMC1 (-1))+(skoSC1 ((skoMC1 skoMC1 skoMC1 (1/12))+(skoSC1 skoMC1 skoMC1 skoMC1 (1/12))))))))))]/\[(skoSC1 ((skoMC1 skoMC1 skoMC1 skoMC1 (-12))+(skoSC1 ((skoMC1 skoMC1 skoMC1 (1+(skoMC1 (-6))))+(skoSC1 ((skoMC1 skoMC1 skoMC1)+(skoSC1 ((skoMC1 skoMC1 skoMC1 (-1/12))+(skoSC1 skoMC1 skoMC1 skoMC1 (-1/12))))))))))<=(skoMC1 skoMC1 skoMC1 (2+(skoMC1 (6))))]]]]]]]]]]]]]]]]]]]]]]]]].

% In SMTLib2 format:
(declare-fun skoSC1 () Real) (declare-fun skoMC1 () Real) (assert (and (<= (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (- 1.)))) (* skoSC1 (* skoMC1 (* skoMC1 (* skoMC1 (- 1.))))))) 0.) (and (<= (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (+ 1. (* skoMC1 (- 3.)))))) (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (+ 2. (* skoMC1 3.))))) (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (+ (/ (- 1.) 6.) skoMC1)))) (* skoSC1 (* skoMC1 (* skoMC1 (* skoMC1 (/ (- 1.) 4.))))))))))) (* skoMC1 (* skoMC1 (* skoMC1 (+ 2. (* skoMC1 5.)))))) (and (<= (* skoSC1 (+ (* skoMC1 (+ 1. (* skoMC1 (- 3.)))) (* skoSC1 (+ (* skoMC1 (+ 2. (* skoMC1 3.))) (* skoSC1 (+ (* skoMC1 (+ (/ (- 1.) 6.) skoMC1)) (* skoSC1 (* skoMC1 (/ (- 1.) 4.))))))))) (* skoMC1 (+ 2. (* skoMC1 5.)))) (and (> (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (+ (- 1.) (* skoMC1 3.))))) (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (+ (- 2.) (* skoMC1 (- 3.)))))) (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (+ (/ 1. 6.) (* skoMC1 (- 1.)))))) (* skoSC1 (* skoMC1 (* skoMC1 (* skoMC1 (/ 1. 4.))))))))))) (* skoMC1 (* skoMC1 (* skoMC1 (+ (- 2.) (* skoMC1 (- 5.))))))) (and (> (* skoSC1 (+ (* skoMC1 (+ (- 1.) (* skoMC1 3.))) (* skoSC1 (+ (* skoMC1 (+ (- 2.) (* skoMC1 (- 3.)))) (* skoSC1 (+ (* skoMC1 (+ (/ 1. 6.) (* skoMC1 (- 1.)))) (* skoSC1 (* skoMC1 (/ 1. 4.))))))))) (* skoMC1 (+ (- 2.) (* skoMC1 (- 5.))))) (and (> skoSC1 0.) (and (<= (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (- 2.)))) (* skoSC1 (+ (* skoMC1 (* skoMC1 skoMC1)) (* skoSC1 (* skoMC1 (* skoMC1 skoMC1))))))) (* skoMC1 (* skoMC1 (* skoMC1 2.)))) (and (> (* skoSC1 (+ (* skoMC1 (* skoMC1 skoMC1)) (* skoSC1 (* skoMC1 (* skoMC1 skoMC1))))) 0.) (and (> (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 2.))) (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (- 1.)))) (* skoSC1 (* skoMC1 (* skoMC1 (* skoMC1 (- 1.))))))))) (* skoMC1 (* skoMC1 (* skoMC1 (- 2.))))) (and (<= (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (- 1.)))) (* skoSC1 (* skoMC1 (* skoMC1 (* skoMC1 (- 1.))))))) 0.) (and (<= (* skoSC1 (* skoMC1 (* skoMC1 (* skoMC1 (- 1.))))) (* skoMC1 (* skoMC1 skoMC1))) (and (> (* skoSC1 (* skoMC1 (* skoMC1 skoMC1))) (* skoMC1 (* skoMC1 (* skoMC1 (- 1.))))) (and (<= (* skoMC1 (* skoMC1 (* skoMC1 (- 2.)))) 0.) (and (> (* skoMC1 (* skoMC1 (* skoMC1 2.))) 0.) (and (<= skoSC1 (/ 5. 4.)) (and (<= 2. skoMC1) (and (<= 0. skoSC1) (and (> skoMC1 0.) (and (<= 0. skoMC1) (and (> (* skoSC1 skoMC1) (* skoMC1 (- 1.))) (and (<= (* skoSC1 (* skoMC1 (- 1.))) skoMC1) (and (> (* skoSC1 (* skoMC1 (* skoMC1 (* skoMC1 2.)))) (* skoMC1 (* skoMC1 (* skoMC1 (- 2.))))) (and (<= (* skoSC1 (* skoMC1 (* skoMC1 (* skoMC1 (- 2.))))) (* skoMC1 (* skoMC1 (* skoMC1 2.)))) (and (> (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (* skoMC1 12.)))) (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (+ (- 1.) (* skoMC1 6.))))) (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (- 1.)))) (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (/ 1. 12.)))) (* skoSC1 (* skoMC1 (* skoMC1 (* skoMC1 (/ 1. 12.))))))))))))) (* skoMC1 (* skoMC1 (* skoMC1 (+ (- 2.) (* skoMC1 (- 6.))))))) (<= (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (* skoMC1 (- 12.))))) (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (+ 1. (* skoMC1 (- 6.)))))) (* skoSC1 (+ (* skoMC1 (* skoMC1 skoMC1)) (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (/ (- 1.) 12.)))) (* skoSC1 (* skoMC1 (* skoMC1 (* skoMC1 (/ (- 1.) 12.))))))))))))) (* skoMC1 (* skoMC1 (* skoMC1 (+ 2. (* skoMC1 6.)))))))))))))))))))))))))))))))

% In GRF format:
(sequent " MetiTarski formula " (antecedent (<= (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (- 1.)))) (* skoSC1 (* skoMC1 (* skoMC1 (* skoMC1 (- 1.))))))) 0.) (<= (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (+ 1. (* skoMC1 (- 3.)))))) (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (+ 2. (* skoMC1 3.))))) (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (+ (/ (- 1.) 6.) skoMC1)))) (* skoSC1 (* skoMC1 (* skoMC1 (* skoMC1 (/ (- 1.) 4.))))))))))) (* skoMC1 (* skoMC1 (* skoMC1 (+ 2. (* skoMC1 5.)))))) (<= (* skoSC1 (+ (* skoMC1 (+ 1. (* skoMC1 (- 3.)))) (* skoSC1 (+ (* skoMC1 (+ 2. (* skoMC1 3.))) (* skoSC1 (+ (* skoMC1 (+ (/ (- 1.) 6.) skoMC1)) (* skoSC1 (* skoMC1 (/ (- 1.) 4.))))))))) (* skoMC1 (+ 2. (* skoMC1 5.)))) (> (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (+ (- 1.) (* skoMC1 3.))))) (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (+ (- 2.) (* skoMC1 (- 3.)))))) (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (+ (/ 1. 6.) (* skoMC1 (- 1.)))))) (* skoSC1 (* skoMC1 (* skoMC1 (* skoMC1 (/ 1. 4.))))))))))) (* skoMC1 (* skoMC1 (* skoMC1 (+ (- 2.) (* skoMC1 (- 5.))))))) (> (* skoSC1 (+ (* skoMC1 (+ (- 1.) (* skoMC1 3.))) (* skoSC1 (+ (* skoMC1 (+ (- 2.) (* skoMC1 (- 3.)))) (* skoSC1 (+ (* skoMC1 (+ (/ 1. 6.) (* skoMC1 (- 1.)))) (* skoSC1 (* skoMC1 (/ 1. 4.))))))))) (* skoMC1 (+ (- 2.) (* skoMC1 (- 5.))))) (> skoSC1 0.) (<= (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (- 2.)))) (* skoSC1 (+ (* skoMC1 (* skoMC1 skoMC1)) (* skoSC1 (* skoMC1 (* skoMC1 skoMC1))))))) (* skoMC1 (* skoMC1 (* skoMC1 2.)))) (> (* skoSC1 (+ (* skoMC1 (* skoMC1 skoMC1)) (* skoSC1 (* skoMC1 (* skoMC1 skoMC1))))) 0.) (> (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 2.))) (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (- 1.)))) (* skoSC1 (* skoMC1 (* skoMC1 (* skoMC1 (- 1.))))))))) (* skoMC1 (* skoMC1 (* skoMC1 (- 2.))))) (<= (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (- 1.)))) (* skoSC1 (* skoMC1 (* skoMC1 (* skoMC1 (- 1.))))))) 0.) (<= (* skoSC1 (* skoMC1 (* skoMC1 (* skoMC1 (- 1.))))) (* skoMC1 (* skoMC1 skoMC1))) (> (* skoSC1 (* skoMC1 (* skoMC1 skoMC1))) (* skoMC1 (* skoMC1 (* skoMC1 (- 1.))))) (<= (* skoMC1 (* skoMC1 (* skoMC1 (- 2.)))) 0.) (> (* skoMC1 (* skoMC1 (* skoMC1 2.))) 0.) (<= skoSC1 (/ 5. 4.)) (<= 2. skoMC1) (<= 0. skoSC1) (> skoMC1 0.) (<= 0. skoMC1) (> (* skoSC1 skoMC1) (* skoMC1 (- 1.))) (<= (* skoSC1 (* skoMC1 (- 1.))) skoMC1) (> (* skoSC1 (* skoMC1 (* skoMC1 (* skoMC1 2.)))) (* skoMC1 (* skoMC1 (* skoMC1 (- 2.))))) (<= (* skoSC1 (* skoMC1 (* skoMC1 (* skoMC1 (- 2.))))) (* skoMC1 (* skoMC1 (* skoMC1 2.)))) (> (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (* skoMC1 12.)))) (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (+ (- 1.) (* skoMC1 6.))))) (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (- 1.)))) (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (/ 1. 12.)))) (* skoSC1 (* skoMC1 (* skoMC1 (* skoMC1 (/ 1. 12.))))))))))))) (* skoMC1 (* skoMC1 (* skoMC1 (+ (- 2.) (* skoMC1 (- 6.)))))))) (succedent (> (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (* skoMC1 (- 12.))))) (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (+ 1. (* skoMC1 (- 6.)))))) (* skoSC1 (+ (* skoMC1 (* skoMC1 skoMC1)) (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (/ (- 1.) 12.)))) (* skoSC1 (* skoMC1 (* skoMC1 (* skoMC1 (/ (- 1.) 12.))))))))))))) (* skoMC1 (* skoMC1 (* skoMC1 (+ 2. (* skoMC1 6.))))))))
-----[end problem]-----

-----[begin problem]-----
% In Mathematica format:
Timing[Resolve[Exists[{skoSC1,skoMC1}, And[skoSC1*(skoMC1*skoMC1*skoMC1*skoMC1*12+skoSC1*(skoMC1*skoMC1*skoMC1*(-1+skoMC1*6)+skoSC1*(skoMC1*skoMC1*skoMC1*-1+skoSC1*(skoMC1*skoMC1*skoMC1*(1/12)+skoSC1*skoMC1*skoMC1*skoMC1*(1/12)))))>skoMC1*skoMC1*skoMC1*(-2+skoMC1*-6),skoSC1*skoMC1*skoMC1*skoMC1*2>skoMC1*skoMC1*skoMC1*-2,skoSC1*skoMC1>skoMC1*-1,skoMC1>0,skoMC1*skoMC1*skoMC1*2>0,skoSC1*skoMC1*skoMC1*skoMC1>skoMC1*skoMC1*skoMC1*-1,skoSC1*(skoMC1*skoMC1*skoMC1*2+skoSC1*(skoMC1*skoMC1*skoMC1*-1+skoSC1*skoMC1*skoMC1*skoMC1*-1))>skoMC1*skoMC1*skoMC1*-2,skoSC1*(skoMC1*skoMC1*skoMC1+skoSC1*skoMC1*skoMC1*skoMC1)>0,skoSC1>0,skoSC1*(skoMC1*(-1+skoMC1*3)+skoSC1*(skoMC1*(-2+skoMC1*-3)+skoSC1*(skoMC1*((1/6)+skoMC1*-1)+skoSC1*skoMC1*(1/4))))>skoMC1*(-2+skoMC1*-5),skoSC1*(skoMC1*skoMC1*skoMC1*(-1+skoMC1*3)+skoSC1*(skoMC1*skoMC1*skoMC1*(-2+skoMC1*-3)+skoSC1*(skoMC1*skoMC1*skoMC1*((1/6)+skoMC1*-1)+skoSC1*skoMC1*skoMC1*skoMC1*(1/4))))>skoMC1*skoMC1*skoMC1*(-2+skoMC1*-5)]], Reals]]

% In QepcadB format:
(E skoSC1) (E skoMC1) [[(skoMC1 skoMC1 skoMC1 (-2+(skoMC1 (-6))))<(skoSC1 ((skoMC1 skoMC1 skoMC1 skoMC1 (12))+(skoSC1 ((skoMC1 skoMC1 skoMC1 (-1+(skoMC1 (6))))+(skoSC1 ((skoMC1 skoMC1 skoMC1 (-1))+(skoSC1 ((skoMC1 skoMC1 skoMC1 (1/12))+(skoSC1 skoMC1 skoMC1 skoMC1 (1/12))))))))))]/\[[(skoMC1 skoMC1 skoMC1 (-2))<(skoSC1 skoMC1 skoMC1 skoMC1 (2))]/\[[(skoMC1 (-1))<(skoSC1 skoMC1)]/\[[0<skoMC1]/\[[0<(skoMC1 skoMC1 skoMC1 (2))]/\[[(skoMC1 skoMC1 skoMC1 (-1))<(skoSC1 skoMC1 skoMC1 skoMC1)]/\[[(skoMC1 skoMC1 skoMC1 (-2))<(skoSC1 ((skoMC1 skoMC1 skoMC1 (2))+(skoSC1 ((skoMC1 skoMC1 skoMC1 (-1))+(skoSC1 skoMC1 skoMC1 skoMC1 (-1))))))]/\[[0<(skoSC1 ((skoMC1 skoMC1 skoMC1)+(skoSC1 skoMC1 skoMC1 skoMC1)))]/\[[0<skoSC1]/\[[(skoMC1 (-2+(skoMC1 (-5))))<(skoSC1 ((skoMC1 (-1+(skoMC1 (3))))+(skoSC1 ((skoMC1 (-2+(skoMC1 (-3))))+(skoSC1 ((skoMC1 (1/6+(skoMC1 (-1))))+(skoSC1 skoMC1 (1/4))))))))]/\[(skoMC1 skoMC1 skoMC1 (-2+(skoMC1 (-5))))<(skoSC1 ((skoMC1 skoMC1 skoMC1 (-1+(skoMC1 (3))))+(skoSC1 ((skoMC1 skoMC1 skoMC1 (-2+(skoMC1 (-3))))+(skoSC1 ((skoMC1 skoMC1 skoMC1 (1/6+(skoMC1 (-1))))+(skoSC1 skoMC1 skoMC1 skoMC1 (1/4))))))))]]]]]]]]]]].

% In SMTLib2 format:
(declare-fun skoSC1 () Real) (declare-fun skoMC1 () Real) (assert (and (> (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (* skoMC1 12.)))) (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (+ (- 1.) (* skoMC1 6.))))) (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (- 1.)))) (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (/ 1. 12.)))) (* skoSC1 (* skoMC1 (* skoMC1 (* skoMC1 (/ 1. 12.))))))))))))) (* skoMC1 (* skoMC1 (* skoMC1 (+ (- 2.) (* skoMC1 (- 6.))))))) (and (> (* skoSC1 (* skoMC1 (* skoMC1 (* skoMC1 2.)))) (* skoMC1 (* skoMC1 (* skoMC1 (- 2.))))) (and (> (* skoSC1 skoMC1) (* skoMC1 (- 1.))) (and (> skoMC1 0.) (and (> (* skoMC1 (* skoMC1 (* skoMC1 2.))) 0.) (and (> (* skoSC1 (* skoMC1 (* skoMC1 skoMC1))) (* skoMC1 (* skoMC1 (* skoMC1 (- 1.))))) (and (> (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 2.))) (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (- 1.)))) (* skoSC1 (* skoMC1 (* skoMC1 (* skoMC1 (- 1.))))))))) (* skoMC1 (* skoMC1 (* skoMC1 (- 2.))))) (and (> (* skoSC1 (+ (* skoMC1 (* skoMC1 skoMC1)) (* skoSC1 (* skoMC1 (* skoMC1 skoMC1))))) 0.) (and (> skoSC1 0.) (and (> (* skoSC1 (+ (* skoMC1 (+ (- 1.) (* skoMC1 3.))) (* skoSC1 (+ (* skoMC1 (+ (- 2.) (* skoMC1 (- 3.)))) (* skoSC1 (+ (* skoMC1 (+ (/ 1. 6.) (* skoMC1 (- 1.)))) (* skoSC1 (* skoMC1 (/ 1. 4.))))))))) (* skoMC1 (+ (- 2.) (* skoMC1 (- 5.))))) (> (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (+ (- 1.) (* skoMC1 3.))))) (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (+ (- 2.) (* skoMC1 (- 3.)))))) (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (+ (/ 1. 6.) (* skoMC1 (- 1.)))))) (* skoSC1 (* skoMC1 (* skoMC1 (* skoMC1 (/ 1. 4.))))))))))) (* skoMC1 (* skoMC1 (* skoMC1 (+ (- 2.) (* skoMC1 (- 5.))))))))))))))))))

% In GRF format:
(sequent " MetiTarski formula " (antecedent (> (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (* skoMC1 12.)))) (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (+ (- 1.) (* skoMC1 6.))))) (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (- 1.)))) (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (/ 1. 12.)))) (* skoSC1 (* skoMC1 (* skoMC1 (* skoMC1 (/ 1. 12.))))))))))))) (* skoMC1 (* skoMC1 (* skoMC1 (+ (- 2.) (* skoMC1 (- 6.))))))) (> (* skoSC1 (* skoMC1 (* skoMC1 (* skoMC1 2.)))) (* skoMC1 (* skoMC1 (* skoMC1 (- 2.))))) (> (* skoSC1 skoMC1) (* skoMC1 (- 1.))) (> skoMC1 0.) (> (* skoMC1 (* skoMC1 (* skoMC1 2.))) 0.) (> (* skoSC1 (* skoMC1 (* skoMC1 skoMC1))) (* skoMC1 (* skoMC1 (* skoMC1 (- 1.))))) (> (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 2.))) (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (- 1.)))) (* skoSC1 (* skoMC1 (* skoMC1 (* skoMC1 (- 1.))))))))) (* skoMC1 (* skoMC1 (* skoMC1 (- 2.))))) (> (* skoSC1 (+ (* skoMC1 (* skoMC1 skoMC1)) (* skoSC1 (* skoMC1 (* skoMC1 skoMC1))))) 0.) (> skoSC1 0.) (> (* skoSC1 (+ (* skoMC1 (+ (- 1.) (* skoMC1 3.))) (* skoSC1 (+ (* skoMC1 (+ (- 2.) (* skoMC1 (- 3.)))) (* skoSC1 (+ (* skoMC1 (+ (/ 1. 6.) (* skoMC1 (- 1.)))) (* skoSC1 (* skoMC1 (/ 1. 4.))))))))) (* skoMC1 (+ (- 2.) (* skoMC1 (- 5.)))))) (succedent (<= (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (+ (- 1.) (* skoMC1 3.))))) (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (+ (- 2.) (* skoMC1 (- 3.)))))) (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (+ (/ 1. 6.) (* skoMC1 (- 1.)))))) (* skoSC1 (* skoMC1 (* skoMC1 (* skoMC1 (/ 1. 4.))))))))))) (* skoMC1 (* skoMC1 (* skoMC1 (+ (- 2.) (* skoMC1 (- 5.)))))))))
-----[end problem]-----

-----[begin problem]-----
% In Mathematica format:
Timing[Resolve[Exists[{skoSC1,skoMC1}, And[skoMC1*skoMC1*-1<=0,skoSC1*(skoMC1*skoMC1*skoMC1*skoMC1*-12+skoSC1*(skoMC1*skoMC1*skoMC1*(1+skoMC1*-6)+skoSC1*(skoMC1*skoMC1*skoMC1+skoSC1*(skoMC1*skoMC1*skoMC1*(-1/12)+skoSC1*skoMC1*skoMC1*skoMC1*(-1/12)))))<=skoMC1*skoMC1*skoMC1*(2+skoMC1*6),skoSC1*(skoMC1*skoMC1*skoMC1*skoMC1*12+skoSC1*(skoMC1*skoMC1*skoMC1*(-1+skoMC1*6)+skoSC1*(skoMC1*skoMC1*skoMC1*-1+skoSC1*(skoMC1*skoMC1*skoMC1*(1/12)+skoSC1*skoMC1*skoMC1*skoMC1*(1/12)))))>skoMC1*skoMC1*skoMC1*(-2+skoMC1*-6),skoSC1*skoMC1*skoMC1*skoMC1*-2<=skoMC1*skoMC1*skoMC1*2,skoSC1*skoMC1*skoMC1*skoMC1*2>skoMC1*skoMC1*skoMC1*-2,skoSC1*skoMC1*-1<=skoMC1,skoSC1*skoMC1>skoMC1*-1,0<=skoMC1,skoMC1>0,0<=skoSC1,2<=skoMC1,skoSC1<=(5/4),skoMC1*skoMC1*skoMC1*2>0,skoMC1*skoMC1*skoMC1*-2<=0,skoSC1*skoMC1*skoMC1*skoMC1>skoMC1*skoMC1*skoMC1*-1,skoSC1*skoMC1*skoMC1*skoMC1*-1<=skoMC1*skoMC1*skoMC1,skoSC1*(skoMC1*skoMC1*skoMC1*-1+skoSC1*skoMC1*skoMC1*skoMC1*-1)<=0,skoSC1*(skoMC1*skoMC1*skoMC1*2+skoSC1*(skoMC1*skoMC1*skoMC1*-1+skoSC1*skoMC1*skoMC1*skoMC1*-1))>skoMC1*skoMC1*skoMC1*-2,skoSC1*(skoMC1*skoMC1*skoMC1+skoSC1*skoMC1*skoMC1*skoMC1)>0,skoSC1*(skoMC1*skoMC1*skoMC1*-2+skoSC1*(skoMC1*skoMC1*skoMC1+skoSC1*skoMC1*skoMC1*skoMC1))<=skoMC1*skoMC1*skoMC1*2,skoSC1>0,skoSC1*(skoMC1*(-1+skoMC1*3)+skoSC1*(skoMC1*(-2+skoMC1*-3)+skoSC1*(skoMC1*((1/6)+skoMC1*-1)+skoSC1*skoMC1*(1/4))))>skoMC1*(-2+skoMC1*-5),skoSC1*(skoMC1*skoMC1*skoMC1*(-1+skoMC1*3)+skoSC1*(skoMC1*skoMC1*skoMC1*(-2+skoMC1*-3)+skoSC1*(skoMC1*skoMC1*skoMC1*((1/6)+skoMC1*-1)+skoSC1*skoMC1*skoMC1*skoMC1*(1/4))))>skoMC1*skoMC1*skoMC1*(-2+skoMC1*-5),skoSC1*(skoMC1*(1+skoMC1*-3)+skoSC1*(skoMC1*(2+skoMC1*3)+skoSC1*(skoMC1*((-1/6)+skoMC1)+skoSC1*skoMC1*(-1/4))))<=skoMC1*(2+skoMC1*5),skoSC1*(skoMC1*skoMC1*skoMC1*(1+skoMC1*-3)+skoSC1*(skoMC1*skoMC1*skoMC1*(2+skoMC1*3)+skoSC1*(skoMC1*skoMC1*skoMC1*((-1/6)+skoMC1)+skoSC1*skoMC1*skoMC1*skoMC1*(-1/4))))<=skoMC1*skoMC1*skoMC1*(2+skoMC1*5)]], Reals]]

% In QepcadB format:
(E skoSC1) (E skoMC1) [[(skoMC1 skoMC1 (-1))<=0]/\[[(skoSC1 ((skoMC1 skoMC1 skoMC1 skoMC1 (-12))+(skoSC1 ((skoMC1 skoMC1 skoMC1 (1+(skoMC1 (-6))))+(skoSC1 ((skoMC1 skoMC1 skoMC1)+(skoSC1 ((skoMC1 skoMC1 skoMC1 (-1/12))+(skoSC1 skoMC1 skoMC1 skoMC1 (-1/12))))))))))<=(skoMC1 skoMC1 skoMC1 (2+(skoMC1 (6))))]/\[[(skoMC1 skoMC1 skoMC1 (-2+(skoMC1 (-6))))<(skoSC1 ((skoMC1 skoMC1 skoMC1 skoMC1 (12))+(skoSC1 ((skoMC1 skoMC1 skoMC1 (-1+(skoMC1 (6))))+(skoSC1 ((skoMC1 skoMC1 skoMC1 (-1))+(skoSC1 ((skoMC1 skoMC1 skoMC1 (1/12))+(skoSC1 skoMC1 skoMC1 skoMC1 (1/12))))))))))]/\[[(skoSC1 skoMC1 skoMC1 skoMC1 (-2))<=(skoMC1 skoMC1 skoMC1 (2))]/\[[(skoMC1 skoMC1 skoMC1 (-2))<(skoSC1 skoMC1 skoMC1 skoMC1 (2))]/\[[(skoSC1 skoMC1 (-1))<=skoMC1]/\[[(skoMC1 (-1))<(skoSC1 skoMC1)]/\[[0<=skoMC1]/\[[0<skoMC1]/\[[0<=skoSC1]/\[[2<=skoMC1]/\[[skoSC1<=5/4]/\[[0<(skoMC1 skoMC1 skoMC1 (2))]/\[[(skoMC1 skoMC1 skoMC1 (-2))<=0]/\[[(skoMC1 skoMC1 skoMC1 (-1))<(skoSC1 skoMC1 skoMC1 skoMC1)]/\[[(skoSC1 skoMC1 skoMC1 skoMC1 (-1))<=(skoMC1 skoMC1 skoMC1)]/\[[(skoSC1 ((skoMC1 skoMC1 skoMC1 (-1))+(skoSC1 skoMC1 skoMC1 skoMC1 (-1))))<=0]/\[[(skoMC1 skoMC1 skoMC1 (-2))<(skoSC1 ((skoMC1 skoMC1 skoMC1 (2))+(skoSC1 ((skoMC1 skoMC1 skoMC1 (-1))+(skoSC1 skoMC1 skoMC1 skoMC1 (-1))))))]/\[[0<(skoSC1 ((skoMC1 skoMC1 skoMC1)+(skoSC1 skoMC1 skoMC1 skoMC1)))]/\[[(skoSC1 ((skoMC1 skoMC1 skoMC1 (-2))+(skoSC1 ((skoMC1 skoMC1 skoMC1)+(skoSC1 skoMC1 skoMC1 skoMC1)))))<=(skoMC1 skoMC1 skoMC1 (2))]/\[[0<skoSC1]/\[[(skoMC1 (-2+(skoMC1 (-5))))<(skoSC1 ((skoMC1 (-1+(skoMC1 (3))))+(skoSC1 ((skoMC1 (-2+(skoMC1 (-3))))+(skoSC1 ((skoMC1 (1/6+(skoMC1 (-1))))+(skoSC1 skoMC1 (1/4))))))))]/\[[(skoMC1 skoMC1 skoMC1 (-2+(skoMC1 (-5))))<(skoSC1 ((skoMC1 skoMC1 skoMC1 (-1+(skoMC1 (3))))+(skoSC1 ((skoMC1 skoMC1 skoMC1 (-2+(skoMC1 (-3))))+(skoSC1 ((skoMC1 skoMC1 skoMC1 (1/6+(skoMC1 (-1))))+(skoSC1 skoMC1 skoMC1 skoMC1 (1/4))))))))]/\[[(skoSC1 ((skoMC1 (1+(skoMC1 (-3))))+(skoSC1 ((skoMC1 (2+(skoMC1 (3))))+(skoSC1 ((skoMC1 (-1/6+skoMC1))+(skoSC1 skoMC1 (-1/4))))))))<=(skoMC1 (2+(skoMC1 (5))))]/\[(skoSC1 ((skoMC1 skoMC1 skoMC1 (1+(skoMC1 (-3))))+(skoSC1 ((skoMC1 skoMC1 skoMC1 (2+(skoMC1 (3))))+(skoSC1 ((skoMC1 skoMC1 skoMC1 (-1/6+skoMC1))+(skoSC1 skoMC1 skoMC1 skoMC1 (-1/4))))))))<=(skoMC1 skoMC1 skoMC1 (2+(skoMC1 (5))))]]]]]]]]]]]]]]]]]]]]]]]]].

% In SMTLib2 format:
(declare-fun skoSC1 () Real) (declare-fun skoMC1 () Real) (assert (and (<= (* skoMC1 (* skoMC1 (- 1.))) 0.) (and (<= (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (* skoMC1 (- 12.))))) (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (+ 1. (* skoMC1 (- 6.)))))) (* skoSC1 (+ (* skoMC1 (* skoMC1 skoMC1)) (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (/ (- 1.) 12.)))) (* skoSC1 (* skoMC1 (* skoMC1 (* skoMC1 (/ (- 1.) 12.))))))))))))) (* skoMC1 (* skoMC1 (* skoMC1 (+ 2. (* skoMC1 6.)))))) (and (> (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (* skoMC1 12.)))) (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (+ (- 1.) (* skoMC1 6.))))) (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (- 1.)))) (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (/ 1. 12.)))) (* skoSC1 (* skoMC1 (* skoMC1 (* skoMC1 (/ 1. 12.))))))))))))) (* skoMC1 (* skoMC1 (* skoMC1 (+ (- 2.) (* skoMC1 (- 6.))))))) (and (<= (* skoSC1 (* skoMC1 (* skoMC1 (* skoMC1 (- 2.))))) (* skoMC1 (* skoMC1 (* skoMC1 2.)))) (and (> (* skoSC1 (* skoMC1 (* skoMC1 (* skoMC1 2.)))) (* skoMC1 (* skoMC1 (* skoMC1 (- 2.))))) (and (<= (* skoSC1 (* skoMC1 (- 1.))) skoMC1) (and (> (* skoSC1 skoMC1) (* skoMC1 (- 1.))) (and (<= 0. skoMC1) (and (> skoMC1 0.) (and (<= 0. skoSC1) (and (<= 2. skoMC1) (and (<= skoSC1 (/ 5. 4.)) (and (> (* skoMC1 (* skoMC1 (* skoMC1 2.))) 0.) (and (<= (* skoMC1 (* skoMC1 (* skoMC1 (- 2.)))) 0.) (and (> (* skoSC1 (* skoMC1 (* skoMC1 skoMC1))) (* skoMC1 (* skoMC1 (* skoMC1 (- 1.))))) (and (<= (* skoSC1 (* skoMC1 (* skoMC1 (* skoMC1 (- 1.))))) (* skoMC1 (* skoMC1 skoMC1))) (and (<= (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (- 1.)))) (* skoSC1 (* skoMC1 (* skoMC1 (* skoMC1 (- 1.))))))) 0.) (and (> (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 2.))) (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (- 1.)))) (* skoSC1 (* skoMC1 (* skoMC1 (* skoMC1 (- 1.))))))))) (* skoMC1 (* skoMC1 (* skoMC1 (- 2.))))) (and (> (* skoSC1 (+ (* skoMC1 (* skoMC1 skoMC1)) (* skoSC1 (* skoMC1 (* skoMC1 skoMC1))))) 0.) (and (<= (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (- 2.)))) (* skoSC1 (+ (* skoMC1 (* skoMC1 skoMC1)) (* skoSC1 (* skoMC1 (* skoMC1 skoMC1))))))) (* skoMC1 (* skoMC1 (* skoMC1 2.)))) (and (> skoSC1 0.) (and (> (* skoSC1 (+ (* skoMC1 (+ (- 1.) (* skoMC1 3.))) (* skoSC1 (+ (* skoMC1 (+ (- 2.) (* skoMC1 (- 3.)))) (* skoSC1 (+ (* skoMC1 (+ (/ 1. 6.) (* skoMC1 (- 1.)))) (* skoSC1 (* skoMC1 (/ 1. 4.))))))))) (* skoMC1 (+ (- 2.) (* skoMC1 (- 5.))))) (and (> (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (+ (- 1.) (* skoMC1 3.))))) (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (+ (- 2.) (* skoMC1 (- 3.)))))) (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (+ (/ 1. 6.) (* skoMC1 (- 1.)))))) (* skoSC1 (* skoMC1 (* skoMC1 (* skoMC1 (/ 1. 4.))))))))))) (* skoMC1 (* skoMC1 (* skoMC1 (+ (- 2.) (* skoMC1 (- 5.))))))) (and (<= (* skoSC1 (+ (* skoMC1 (+ 1. (* skoMC1 (- 3.)))) (* skoSC1 (+ (* skoMC1 (+ 2. (* skoMC1 3.))) (* skoSC1 (+ (* skoMC1 (+ (/ (- 1.) 6.) skoMC1)) (* skoSC1 (* skoMC1 (/ (- 1.) 4.))))))))) (* skoMC1 (+ 2. (* skoMC1 5.)))) (<= (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (+ 1. (* skoMC1 (- 3.)))))) (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (+ 2. (* skoMC1 3.))))) (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (+ (/ (- 1.) 6.) skoMC1)))) (* skoSC1 (* skoMC1 (* skoMC1 (* skoMC1 (/ (- 1.) 4.))))))))))) (* skoMC1 (* skoMC1 (* skoMC1 (+ 2. (* skoMC1 5.)))))))))))))))))))))))))))))))

% In GRF format:
(sequent " MetiTarski formula " (antecedent (<= (* skoMC1 (* skoMC1 (- 1.))) 0.) (<= (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (* skoMC1 (- 12.))))) (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (+ 1. (* skoMC1 (- 6.)))))) (* skoSC1 (+ (* skoMC1 (* skoMC1 skoMC1)) (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (/ (- 1.) 12.)))) (* skoSC1 (* skoMC1 (* skoMC1 (* skoMC1 (/ (- 1.) 12.))))))))))))) (* skoMC1 (* skoMC1 (* skoMC1 (+ 2. (* skoMC1 6.)))))) (> (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (* skoMC1 12.)))) (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (+ (- 1.) (* skoMC1 6.))))) (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (- 1.)))) (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (/ 1. 12.)))) (* skoSC1 (* skoMC1 (* skoMC1 (* skoMC1 (/ 1. 12.))))))))))))) (* skoMC1 (* skoMC1 (* skoMC1 (+ (- 2.) (* skoMC1 (- 6.))))))) (<= (* skoSC1 (* skoMC1 (* skoMC1 (* skoMC1 (- 2.))))) (* skoMC1 (* skoMC1 (* skoMC1 2.)))) (> (* skoSC1 (* skoMC1 (* skoMC1 (* skoMC1 2.)))) (* skoMC1 (* skoMC1 (* skoMC1 (- 2.))))) (<= (* skoSC1 (* skoMC1 (- 1.))) skoMC1) (> (* skoSC1 skoMC1) (* skoMC1 (- 1.))) (<= 0. skoMC1) (> skoMC1 0.) (<= 0. skoSC1) (<= 2. skoMC1) (<= skoSC1 (/ 5. 4.)) (> (* skoMC1 (* skoMC1 (* skoMC1 2.))) 0.) (<= (* skoMC1 (* skoMC1 (* skoMC1 (- 2.)))) 0.) (> (* skoSC1 (* skoMC1 (* skoMC1 skoMC1))) (* skoMC1 (* skoMC1 (* skoMC1 (- 1.))))) (<= (* skoSC1 (* skoMC1 (* skoMC1 (* skoMC1 (- 1.))))) (* skoMC1 (* skoMC1 skoMC1))) (<= (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (- 1.)))) (* skoSC1 (* skoMC1 (* skoMC1 (* skoMC1 (- 1.))))))) 0.) (> (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 2.))) (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (- 1.)))) (* skoSC1 (* skoMC1 (* skoMC1 (* skoMC1 (- 1.))))))))) (* skoMC1 (* skoMC1 (* skoMC1 (- 2.))))) (> (* skoSC1 (+ (* skoMC1 (* skoMC1 skoMC1)) (* skoSC1 (* skoMC1 (* skoMC1 skoMC1))))) 0.) (<= (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (- 2.)))) (* skoSC1 (+ (* skoMC1 (* skoMC1 skoMC1)) (* skoSC1 (* skoMC1 (* skoMC1 skoMC1))))))) (* skoMC1 (* skoMC1 (* skoMC1 2.)))) (> skoSC1 0.) (> (* skoSC1 (+ (* skoMC1 (+ (- 1.) (* skoMC1 3.))) (* skoSC1 (+ (* skoMC1 (+ (- 2.) (* skoMC1 (- 3.)))) (* skoSC1 (+ (* skoMC1 (+ (/ 1. 6.) (* skoMC1 (- 1.)))) (* skoSC1 (* skoMC1 (/ 1. 4.))))))))) (* skoMC1 (+ (- 2.) (* skoMC1 (- 5.))))) (> (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (+ (- 1.) (* skoMC1 3.))))) (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (+ (- 2.) (* skoMC1 (- 3.)))))) (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (+ (/ 1. 6.) (* skoMC1 (- 1.)))))) (* skoSC1 (* skoMC1 (* skoMC1 (* skoMC1 (/ 1. 4.))))))))))) (* skoMC1 (* skoMC1 (* skoMC1 (+ (- 2.) (* skoMC1 (- 5.))))))) (<= (* skoSC1 (+ (* skoMC1 (+ 1. (* skoMC1 (- 3.)))) (* skoSC1 (+ (* skoMC1 (+ 2. (* skoMC1 3.))) (* skoSC1 (+ (* skoMC1 (+ (/ (- 1.) 6.) skoMC1)) (* skoSC1 (* skoMC1 (/ (- 1.) 4.))))))))) (* skoMC1 (+ 2. (* skoMC1 5.))))) (succedent (> (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (+ 1. (* skoMC1 (- 3.)))))) (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (+ 2. (* skoMC1 3.))))) (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (+ (/ (- 1.) 6.) skoMC1)))) (* skoSC1 (* skoMC1 (* skoMC1 (* skoMC1 (/ (- 1.) 4.))))))))))) (* skoMC1 (* skoMC1 (* skoMC1 (+ 2. (* skoMC1 5.))))))))
-----[end problem]-----

-----[begin problem]-----
% In Mathematica format:
Timing[Resolve[Exists[{skoSC1,skoMC1}, And[skoMC1*skoMC1*skoMC1*-1<=0,skoSC1*(skoMC1*skoMC1*skoMC1*skoMC1*-12+skoSC1*(skoMC1*skoMC1*skoMC1*(1+skoMC1*-6)+skoSC1*(skoMC1*skoMC1*skoMC1+skoSC1*(skoMC1*skoMC1*skoMC1*(-1/12)+skoSC1*skoMC1*skoMC1*skoMC1*(-1/12)))))<=skoMC1*skoMC1*skoMC1*(2+skoMC1*6),skoSC1*(skoMC1*skoMC1*skoMC1*skoMC1*12+skoSC1*(skoMC1*skoMC1*skoMC1*(-1+skoMC1*6)+skoSC1*(skoMC1*skoMC1*skoMC1*-1+skoSC1*(skoMC1*skoMC1*skoMC1*(1/12)+skoSC1*skoMC1*skoMC1*skoMC1*(1/12)))))>skoMC1*skoMC1*skoMC1*(-2+skoMC1*-6),skoSC1*skoMC1*skoMC1*skoMC1*-2<=skoMC1*skoMC1*skoMC1*2,skoSC1*skoMC1*skoMC1*skoMC1*2>skoMC1*skoMC1*skoMC1*-2,skoSC1*skoMC1*-1<=skoMC1,skoSC1*skoMC1>skoMC1*-1,0<=skoMC1,skoMC1>0,0<=skoSC1,2<=skoMC1,skoSC1<=(5/4),skoMC1*skoMC1*skoMC1*2>0,skoMC1*skoMC1*skoMC1*-2<=0,skoSC1*skoMC1*skoMC1*skoMC1>skoMC1*skoMC1*skoMC1*-1,skoSC1*skoMC1*skoMC1*skoMC1*-1<=skoMC1*skoMC1*skoMC1,skoSC1*(skoMC1*skoMC1*skoMC1*-1+skoSC1*skoMC1*skoMC1*skoMC1*-1)<=0,skoSC1*(skoMC1*skoMC1*skoMC1*2+skoSC1*(skoMC1*skoMC1*skoMC1*-1+skoSC1*skoMC1*skoMC1*skoMC1*-1))>skoMC1*skoMC1*skoMC1*-2,skoSC1*(skoMC1*skoMC1*skoMC1+skoSC1*skoMC1*skoMC1*skoMC1)>0,skoSC1*(skoMC1*skoMC1*skoMC1*-2+skoSC1*(skoMC1*skoMC1*skoMC1+skoSC1*skoMC1*skoMC1*skoMC1))<=skoMC1*skoMC1*skoMC1*2,skoSC1>0,skoSC1*(skoMC1*(-1+skoMC1*3)+skoSC1*(skoMC1*(-2+skoMC1*-3)+skoSC1*(skoMC1*((1/6)+skoMC1*-1)+skoSC1*skoMC1*(1/4))))>skoMC1*(-2+skoMC1*-5),skoSC1*(skoMC1*skoMC1*skoMC1*(-1+skoMC1*3)+skoSC1*(skoMC1*skoMC1*skoMC1*(-2+skoMC1*-3)+skoSC1*(skoMC1*skoMC1*skoMC1*((1/6)+skoMC1*-1)+skoSC1*skoMC1*skoMC1*skoMC1*(1/4))))>skoMC1*skoMC1*skoMC1*(-2+skoMC1*-5),skoSC1*(skoMC1*(1+skoMC1*-3)+skoSC1*(skoMC1*(2+skoMC1*3)+skoSC1*(skoMC1*((-1/6)+skoMC1)+skoSC1*skoMC1*(-1/4))))<=skoMC1*(2+skoMC1*5),skoSC1*(skoMC1*skoMC1*skoMC1*(1+skoMC1*-3)+skoSC1*(skoMC1*skoMC1*skoMC1*(2+skoMC1*3)+skoSC1*(skoMC1*skoMC1*skoMC1*((-1/6)+skoMC1)+skoSC1*skoMC1*skoMC1*skoMC1*(-1/4))))<=skoMC1*skoMC1*skoMC1*(2+skoMC1*5)]], Reals]]

% In QepcadB format:
(E skoSC1) (E skoMC1) [[(skoMC1 skoMC1 skoMC1 (-1))<=0]/\[[(skoSC1 ((skoMC1 skoMC1 skoMC1 skoMC1 (-12))+(skoSC1 ((skoMC1 skoMC1 skoMC1 (1+(skoMC1 (-6))))+(skoSC1 ((skoMC1 skoMC1 skoMC1)+(skoSC1 ((skoMC1 skoMC1 skoMC1 (-1/12))+(skoSC1 skoMC1 skoMC1 skoMC1 (-1/12))))))))))<=(skoMC1 skoMC1 skoMC1 (2+(skoMC1 (6))))]/\[[(skoMC1 skoMC1 skoMC1 (-2+(skoMC1 (-6))))<(skoSC1 ((skoMC1 skoMC1 skoMC1 skoMC1 (12))+(skoSC1 ((skoMC1 skoMC1 skoMC1 (-1+(skoMC1 (6))))+(skoSC1 ((skoMC1 skoMC1 skoMC1 (-1))+(skoSC1 ((skoMC1 skoMC1 skoMC1 (1/12))+(skoSC1 skoMC1 skoMC1 skoMC1 (1/12))))))))))]/\[[(skoSC1 skoMC1 skoMC1 skoMC1 (-2))<=(skoMC1 skoMC1 skoMC1 (2))]/\[[(skoMC1 skoMC1 skoMC1 (-2))<(skoSC1 skoMC1 skoMC1 skoMC1 (2))]/\[[(skoSC1 skoMC1 (-1))<=skoMC1]/\[[(skoMC1 (-1))<(skoSC1 skoMC1)]/\[[0<=skoMC1]/\[[0<skoMC1]/\[[0<=skoSC1]/\[[2<=skoMC1]/\[[skoSC1<=5/4]/\[[0<(skoMC1 skoMC1 skoMC1 (2))]/\[[(skoMC1 skoMC1 skoMC1 (-2))<=0]/\[[(skoMC1 skoMC1 skoMC1 (-1))<(skoSC1 skoMC1 skoMC1 skoMC1)]/\[[(skoSC1 skoMC1 skoMC1 skoMC1 (-1))<=(skoMC1 skoMC1 skoMC1)]/\[[(skoSC1 ((skoMC1 skoMC1 skoMC1 (-1))+(skoSC1 skoMC1 skoMC1 skoMC1 (-1))))<=0]/\[[(skoMC1 skoMC1 skoMC1 (-2))<(skoSC1 ((skoMC1 skoMC1 skoMC1 (2))+(skoSC1 ((skoMC1 skoMC1 skoMC1 (-1))+(skoSC1 skoMC1 skoMC1 skoMC1 (-1))))))]/\[[0<(skoSC1 ((skoMC1 skoMC1 skoMC1)+(skoSC1 skoMC1 skoMC1 skoMC1)))]/\[[(skoSC1 ((skoMC1 skoMC1 skoMC1 (-2))+(skoSC1 ((skoMC1 skoMC1 skoMC1)+(skoSC1 skoMC1 skoMC1 skoMC1)))))<=(skoMC1 skoMC1 skoMC1 (2))]/\[[0<skoSC1]/\[[(skoMC1 (-2+(skoMC1 (-5))))<(skoSC1 ((skoMC1 (-1+(skoMC1 (3))))+(skoSC1 ((skoMC1 (-2+(skoMC1 (-3))))+(skoSC1 ((skoMC1 (1/6+(skoMC1 (-1))))+(skoSC1 skoMC1 (1/4))))))))]/\[[(skoMC1 skoMC1 skoMC1 (-2+(skoMC1 (-5))))<(skoSC1 ((skoMC1 skoMC1 skoMC1 (-1+(skoMC1 (3))))+(skoSC1 ((skoMC1 skoMC1 skoMC1 (-2+(skoMC1 (-3))))+(skoSC1 ((skoMC1 skoMC1 skoMC1 (1/6+(skoMC1 (-1))))+(skoSC1 skoMC1 skoMC1 skoMC1 (1/4))))))))]/\[[(skoSC1 ((skoMC1 (1+(skoMC1 (-3))))+(skoSC1 ((skoMC1 (2+(skoMC1 (3))))+(skoSC1 ((skoMC1 (-1/6+skoMC1))+(skoSC1 skoMC1 (-1/4))))))))<=(skoMC1 (2+(skoMC1 (5))))]/\[(skoSC1 ((skoMC1 skoMC1 skoMC1 (1+(skoMC1 (-3))))+(skoSC1 ((skoMC1 skoMC1 skoMC1 (2+(skoMC1 (3))))+(skoSC1 ((skoMC1 skoMC1 skoMC1 (-1/6+skoMC1))+(skoSC1 skoMC1 skoMC1 skoMC1 (-1/4))))))))<=(skoMC1 skoMC1 skoMC1 (2+(skoMC1 (5))))]]]]]]]]]]]]]]]]]]]]]]]]].

% In SMTLib2 format:
(declare-fun skoSC1 () Real) (declare-fun skoMC1 () Real) (assert (and (<= (* skoMC1 (* skoMC1 (* skoMC1 (- 1.)))) 0.) (and (<= (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (* skoMC1 (- 12.))))) (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (+ 1. (* skoMC1 (- 6.)))))) (* skoSC1 (+ (* skoMC1 (* skoMC1 skoMC1)) (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (/ (- 1.) 12.)))) (* skoSC1 (* skoMC1 (* skoMC1 (* skoMC1 (/ (- 1.) 12.))))))))))))) (* skoMC1 (* skoMC1 (* skoMC1 (+ 2. (* skoMC1 6.)))))) (and (> (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (* skoMC1 12.)))) (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (+ (- 1.) (* skoMC1 6.))))) (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (- 1.)))) (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (/ 1. 12.)))) (* skoSC1 (* skoMC1 (* skoMC1 (* skoMC1 (/ 1. 12.))))))))))))) (* skoMC1 (* skoMC1 (* skoMC1 (+ (- 2.) (* skoMC1 (- 6.))))))) (and (<= (* skoSC1 (* skoMC1 (* skoMC1 (* skoMC1 (- 2.))))) (* skoMC1 (* skoMC1 (* skoMC1 2.)))) (and (> (* skoSC1 (* skoMC1 (* skoMC1 (* skoMC1 2.)))) (* skoMC1 (* skoMC1 (* skoMC1 (- 2.))))) (and (<= (* skoSC1 (* skoMC1 (- 1.))) skoMC1) (and (> (* skoSC1 skoMC1) (* skoMC1 (- 1.))) (and (<= 0. skoMC1) (and (> skoMC1 0.) (and (<= 0. skoSC1) (and (<= 2. skoMC1) (and (<= skoSC1 (/ 5. 4.)) (and (> (* skoMC1 (* skoMC1 (* skoMC1 2.))) 0.) (and (<= (* skoMC1 (* skoMC1 (* skoMC1 (- 2.)))) 0.) (and (> (* skoSC1 (* skoMC1 (* skoMC1 skoMC1))) (* skoMC1 (* skoMC1 (* skoMC1 (- 1.))))) (and (<= (* skoSC1 (* skoMC1 (* skoMC1 (* skoMC1 (- 1.))))) (* skoMC1 (* skoMC1 skoMC1))) (and (<= (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (- 1.)))) (* skoSC1 (* skoMC1 (* skoMC1 (* skoMC1 (- 1.))))))) 0.) (and (> (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 2.))) (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (- 1.)))) (* skoSC1 (* skoMC1 (* skoMC1 (* skoMC1 (- 1.))))))))) (* skoMC1 (* skoMC1 (* skoMC1 (- 2.))))) (and (> (* skoSC1 (+ (* skoMC1 (* skoMC1 skoMC1)) (* skoSC1 (* skoMC1 (* skoMC1 skoMC1))))) 0.) (and (<= (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (- 2.)))) (* skoSC1 (+ (* skoMC1 (* skoMC1 skoMC1)) (* skoSC1 (* skoMC1 (* skoMC1 skoMC1))))))) (* skoMC1 (* skoMC1 (* skoMC1 2.)))) (and (> skoSC1 0.) (and (> (* skoSC1 (+ (* skoMC1 (+ (- 1.) (* skoMC1 3.))) (* skoSC1 (+ (* skoMC1 (+ (- 2.) (* skoMC1 (- 3.)))) (* skoSC1 (+ (* skoMC1 (+ (/ 1. 6.) (* skoMC1 (- 1.)))) (* skoSC1 (* skoMC1 (/ 1. 4.))))))))) (* skoMC1 (+ (- 2.) (* skoMC1 (- 5.))))) (and (> (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (+ (- 1.) (* skoMC1 3.))))) (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (+ (- 2.) (* skoMC1 (- 3.)))))) (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (+ (/ 1. 6.) (* skoMC1 (- 1.)))))) (* skoSC1 (* skoMC1 (* skoMC1 (* skoMC1 (/ 1. 4.))))))))))) (* skoMC1 (* skoMC1 (* skoMC1 (+ (- 2.) (* skoMC1 (- 5.))))))) (and (<= (* skoSC1 (+ (* skoMC1 (+ 1. (* skoMC1 (- 3.)))) (* skoSC1 (+ (* skoMC1 (+ 2. (* skoMC1 3.))) (* skoSC1 (+ (* skoMC1 (+ (/ (- 1.) 6.) skoMC1)) (* skoSC1 (* skoMC1 (/ (- 1.) 4.))))))))) (* skoMC1 (+ 2. (* skoMC1 5.)))) (<= (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (+ 1. (* skoMC1 (- 3.)))))) (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (+ 2. (* skoMC1 3.))))) (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (+ (/ (- 1.) 6.) skoMC1)))) (* skoSC1 (* skoMC1 (* skoMC1 (* skoMC1 (/ (- 1.) 4.))))))))))) (* skoMC1 (* skoMC1 (* skoMC1 (+ 2. (* skoMC1 5.)))))))))))))))))))))))))))))))

% In GRF format:
(sequent " MetiTarski formula " (antecedent (<= (* skoMC1 (* skoMC1 (* skoMC1 (- 1.)))) 0.) (<= (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (* skoMC1 (- 12.))))) (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (+ 1. (* skoMC1 (- 6.)))))) (* skoSC1 (+ (* skoMC1 (* skoMC1 skoMC1)) (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (/ (- 1.) 12.)))) (* skoSC1 (* skoMC1 (* skoMC1 (* skoMC1 (/ (- 1.) 12.))))))))))))) (* skoMC1 (* skoMC1 (* skoMC1 (+ 2. (* skoMC1 6.)))))) (> (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (* skoMC1 12.)))) (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (+ (- 1.) (* skoMC1 6.))))) (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (- 1.)))) (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (/ 1. 12.)))) (* skoSC1 (* skoMC1 (* skoMC1 (* skoMC1 (/ 1. 12.))))))))))))) (* skoMC1 (* skoMC1 (* skoMC1 (+ (- 2.) (* skoMC1 (- 6.))))))) (<= (* skoSC1 (* skoMC1 (* skoMC1 (* skoMC1 (- 2.))))) (* skoMC1 (* skoMC1 (* skoMC1 2.)))) (> (* skoSC1 (* skoMC1 (* skoMC1 (* skoMC1 2.)))) (* skoMC1 (* skoMC1 (* skoMC1 (- 2.))))) (<= (* skoSC1 (* skoMC1 (- 1.))) skoMC1) (> (* skoSC1 skoMC1) (* skoMC1 (- 1.))) (<= 0. skoMC1) (> skoMC1 0.) (<= 0. skoSC1) (<= 2. skoMC1) (<= skoSC1 (/ 5. 4.)) (> (* skoMC1 (* skoMC1 (* skoMC1 2.))) 0.) (<= (* skoMC1 (* skoMC1 (* skoMC1 (- 2.)))) 0.) (> (* skoSC1 (* skoMC1 (* skoMC1 skoMC1))) (* skoMC1 (* skoMC1 (* skoMC1 (- 1.))))) (<= (* skoSC1 (* skoMC1 (* skoMC1 (* skoMC1 (- 1.))))) (* skoMC1 (* skoMC1 skoMC1))) (<= (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (- 1.)))) (* skoSC1 (* skoMC1 (* skoMC1 (* skoMC1 (- 1.))))))) 0.) (> (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 2.))) (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (- 1.)))) (* skoSC1 (* skoMC1 (* skoMC1 (* skoMC1 (- 1.))))))))) (* skoMC1 (* skoMC1 (* skoMC1 (- 2.))))) (> (* skoSC1 (+ (* skoMC1 (* skoMC1 skoMC1)) (* skoSC1 (* skoMC1 (* skoMC1 skoMC1))))) 0.) (<= (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (- 2.)))) (* skoSC1 (+ (* skoMC1 (* skoMC1 skoMC1)) (* skoSC1 (* skoMC1 (* skoMC1 skoMC1))))))) (* skoMC1 (* skoMC1 (* skoMC1 2.)))) (> skoSC1 0.) (> (* skoSC1 (+ (* skoMC1 (+ (- 1.) (* skoMC1 3.))) (* skoSC1 (+ (* skoMC1 (+ (- 2.) (* skoMC1 (- 3.)))) (* skoSC1 (+ (* skoMC1 (+ (/ 1. 6.) (* skoMC1 (- 1.)))) (* skoSC1 (* skoMC1 (/ 1. 4.))))))))) (* skoMC1 (+ (- 2.) (* skoMC1 (- 5.))))) (> (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (+ (- 1.) (* skoMC1 3.))))) (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (+ (- 2.) (* skoMC1 (- 3.)))))) (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (+ (/ 1. 6.) (* skoMC1 (- 1.)))))) (* skoSC1 (* skoMC1 (* skoMC1 (* skoMC1 (/ 1. 4.))))))))))) (* skoMC1 (* skoMC1 (* skoMC1 (+ (- 2.) (* skoMC1 (- 5.))))))) (<= (* skoSC1 (+ (* skoMC1 (+ 1. (* skoMC1 (- 3.)))) (* skoSC1 (+ (* skoMC1 (+ 2. (* skoMC1 3.))) (* skoSC1 (+ (* skoMC1 (+ (/ (- 1.) 6.) skoMC1)) (* skoSC1 (* skoMC1 (/ (- 1.) 4.))))))))) (* skoMC1 (+ 2. (* skoMC1 5.))))) (succedent (> (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (+ 1. (* skoMC1 (- 3.)))))) (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (+ 2. (* skoMC1 3.))))) (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (+ (/ (- 1.) 6.) skoMC1)))) (* skoSC1 (* skoMC1 (* skoMC1 (* skoMC1 (/ (- 1.) 4.))))))))))) (* skoMC1 (* skoMC1 (* skoMC1 (+ 2. (* skoMC1 5.))))))))
-----[end problem]-----

-----[begin problem]-----
% In Mathematica format:
Timing[Resolve[Exists[{skoSC1,skoMC1}, And[skoSC1*(skoMC1*skoMC1*skoMC1*2+skoSC1*(skoMC1*skoMC1*skoMC1*-1+skoSC1*skoMC1*skoMC1*skoMC1*-1))<=skoMC1*skoMC1*skoMC1*-2,skoSC1*(skoMC1*skoMC1*skoMC1*(1+skoMC1*-3)+skoSC1*(skoMC1*skoMC1*skoMC1*(2+skoMC1*3)+skoSC1*(skoMC1*skoMC1*skoMC1*((-1/6)+skoMC1)+skoSC1*skoMC1*skoMC1*skoMC1*(-1/4))))<=skoMC1*skoMC1*skoMC1*(2+skoMC1*5),skoSC1*(skoMC1*(1+skoMC1*-3)+skoSC1*(skoMC1*(2+skoMC1*3)+skoSC1*(skoMC1*((-1/6)+skoMC1)+skoSC1*skoMC1*(-1/4))))<=skoMC1*(2+skoMC1*5),skoSC1*(skoMC1*skoMC1*skoMC1*(-1+skoMC1*3)+skoSC1*(skoMC1*skoMC1*skoMC1*(-2+skoMC1*-3)+skoSC1*(skoMC1*skoMC1*skoMC1*((1/6)+skoMC1*-1)+skoSC1*skoMC1*skoMC1*skoMC1*(1/4))))>skoMC1*skoMC1*skoMC1*(-2+skoMC1*-5),skoSC1*(skoMC1*(-1+skoMC1*3)+skoSC1*(skoMC1*(-2+skoMC1*-3)+skoSC1*(skoMC1*((1/6)+skoMC1*-1)+skoSC1*skoMC1*(1/4))))>skoMC1*(-2+skoMC1*-5),skoSC1>0,skoSC1*(skoMC1*skoMC1*skoMC1*-2+skoSC1*(skoMC1*skoMC1*skoMC1+skoSC1*skoMC1*skoMC1*skoMC1))<=skoMC1*skoMC1*skoMC1*2,skoSC1*(skoMC1*skoMC1*skoMC1+skoSC1*skoMC1*skoMC1*skoMC1)>0,skoSC1*(skoMC1*skoMC1*skoMC1*2+skoSC1*(skoMC1*skoMC1*skoMC1*-1+skoSC1*skoMC1*skoMC1*skoMC1*-1))>skoMC1*skoMC1*skoMC1*-2,skoSC1*(skoMC1*skoMC1*skoMC1*-1+skoSC1*skoMC1*skoMC1*skoMC1*-1)<=0,skoSC1*skoMC1*skoMC1*skoMC1*-1<=skoMC1*skoMC1*skoMC1,skoSC1*skoMC1*skoMC1*skoMC1>skoMC1*skoMC1*skoMC1*-1,skoMC1*skoMC1*skoMC1*-2<=0,skoMC1*skoMC1*skoMC1*2>0,skoSC1<=(5/4),2<=skoMC1,0<=skoSC1,skoMC1>0,0<=skoMC1,skoSC1*skoMC1>skoMC1*-1,skoSC1*skoMC1*-1<=skoMC1,skoSC1*skoMC1*skoMC1*skoMC1*2>skoMC1*skoMC1*skoMC1*-2,skoSC1*skoMC1*skoMC1*skoMC1*-2<=skoMC1*skoMC1*skoMC1*2,skoSC1*(skoMC1*skoMC1*skoMC1*skoMC1*12+skoSC1*(skoMC1*skoMC1*skoMC1*(-1+skoMC1*6)+skoSC1*(skoMC1*skoMC1*skoMC1*-1+skoSC1*(skoMC1*skoMC1*skoMC1*(1/12)+skoSC1*skoMC1*skoMC1*skoMC1*(1/12)))))>skoMC1*skoMC1*skoMC1*(-2+skoMC1*-6),skoSC1*(skoMC1*skoMC1*skoMC1*skoMC1*-12+skoSC1*(skoMC1*skoMC1*skoMC1*(1+skoMC1*-6)+skoSC1*(skoMC1*skoMC1*skoMC1+skoSC1*(skoMC1*skoMC1*skoMC1*(-1/12)+skoSC1*skoMC1*skoMC1*skoMC1*(-1/12)))))<=skoMC1*skoMC1*skoMC1*(2+skoMC1*6)]], Reals]]

% In QepcadB format:
(E skoSC1) (E skoMC1) [[(skoSC1 ((skoMC1 skoMC1 skoMC1 (2))+(skoSC1 ((skoMC1 skoMC1 skoMC1 (-1))+(skoSC1 skoMC1 skoMC1 skoMC1 (-1))))))<=(skoMC1 skoMC1 skoMC1 (-2))]/\[[(skoSC1 ((skoMC1 skoMC1 skoMC1 (1+(skoMC1 (-3))))+(skoSC1 ((skoMC1 skoMC1 skoMC1 (2+(skoMC1 (3))))+(skoSC1 ((skoMC1 skoMC1 skoMC1 (-1/6+skoMC1))+(skoSC1 skoMC1 skoMC1 skoMC1 (-1/4))))))))<=(skoMC1 skoMC1 skoMC1 (2+(skoMC1 (5))))]/\[[(skoSC1 ((skoMC1 (1+(skoMC1 (-3))))+(skoSC1 ((skoMC1 (2+(skoMC1 (3))))+(skoSC1 ((skoMC1 (-1/6+skoMC1))+(skoSC1 skoMC1 (-1/4))))))))<=(skoMC1 (2+(skoMC1 (5))))]/\[[(skoMC1 skoMC1 skoMC1 (-2+(skoMC1 (-5))))<(skoSC1 ((skoMC1 skoMC1 skoMC1 (-1+(skoMC1 (3))))+(skoSC1 ((skoMC1 skoMC1 skoMC1 (-2+(skoMC1 (-3))))+(skoSC1 ((skoMC1 skoMC1 skoMC1 (1/6+(skoMC1 (-1))))+(skoSC1 skoMC1 skoMC1 skoMC1 (1/4))))))))]/\[[(skoMC1 (-2+(skoMC1 (-5))))<(skoSC1 ((skoMC1 (-1+(skoMC1 (3))))+(skoSC1 ((skoMC1 (-2+(skoMC1 (-3))))+(skoSC1 ((skoMC1 (1/6+(skoMC1 (-1))))+(skoSC1 skoMC1 (1/4))))))))]/\[[0<skoSC1]/\[[(skoSC1 ((skoMC1 skoMC1 skoMC1 (-2))+(skoSC1 ((skoMC1 skoMC1 skoMC1)+(skoSC1 skoMC1 skoMC1 skoMC1)))))<=(skoMC1 skoMC1 skoMC1 (2))]/\[[0<(skoSC1 ((skoMC1 skoMC1 skoMC1)+(skoSC1 skoMC1 skoMC1 skoMC1)))]/\[[(skoMC1 skoMC1 skoMC1 (-2))<(skoSC1 ((skoMC1 skoMC1 skoMC1 (2))+(skoSC1 ((skoMC1 skoMC1 skoMC1 (-1))+(skoSC1 skoMC1 skoMC1 skoMC1 (-1))))))]/\[[(skoSC1 ((skoMC1 skoMC1 skoMC1 (-1))+(skoSC1 skoMC1 skoMC1 skoMC1 (-1))))<=0]/\[[(skoSC1 skoMC1 skoMC1 skoMC1 (-1))<=(skoMC1 skoMC1 skoMC1)]/\[[(skoMC1 skoMC1 skoMC1 (-1))<(skoSC1 skoMC1 skoMC1 skoMC1)]/\[[(skoMC1 skoMC1 skoMC1 (-2))<=0]/\[[0<(skoMC1 skoMC1 skoMC1 (2))]/\[[skoSC1<=5/4]/\[[2<=skoMC1]/\[[0<=skoSC1]/\[[0<skoMC1]/\[[0<=skoMC1]/\[[(skoMC1 (-1))<(skoSC1 skoMC1)]/\[[(skoSC1 skoMC1 (-1))<=skoMC1]/\[[(skoMC1 skoMC1 skoMC1 (-2))<(skoSC1 skoMC1 skoMC1 skoMC1 (2))]/\[[(skoSC1 skoMC1 skoMC1 skoMC1 (-2))<=(skoMC1 skoMC1 skoMC1 (2))]/\[[(skoMC1 skoMC1 skoMC1 (-2+(skoMC1 (-6))))<(skoSC1 ((skoMC1 skoMC1 skoMC1 skoMC1 (12))+(skoSC1 ((skoMC1 skoMC1 skoMC1 (-1+(skoMC1 (6))))+(skoSC1 ((skoMC1 skoMC1 skoMC1 (-1))+(skoSC1 ((skoMC1 skoMC1 skoMC1 (1/12))+(skoSC1 skoMC1 skoMC1 skoMC1 (1/12))))))))))]/\[(skoSC1 ((skoMC1 skoMC1 skoMC1 skoMC1 (-12))+(skoSC1 ((skoMC1 skoMC1 skoMC1 (1+(skoMC1 (-6))))+(skoSC1 ((skoMC1 skoMC1 skoMC1)+(skoSC1 ((skoMC1 skoMC1 skoMC1 (-1/12))+(skoSC1 skoMC1 skoMC1 skoMC1 (-1/12))))))))))<=(skoMC1 skoMC1 skoMC1 (2+(skoMC1 (6))))]]]]]]]]]]]]]]]]]]]]]]]]].

% In SMTLib2 format:
(declare-fun skoSC1 () Real) (declare-fun skoMC1 () Real) (assert (and (<= (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 2.))) (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (- 1.)))) (* skoSC1 (* skoMC1 (* skoMC1 (* skoMC1 (- 1.))))))))) (* skoMC1 (* skoMC1 (* skoMC1 (- 2.))))) (and (<= (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (+ 1. (* skoMC1 (- 3.)))))) (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (+ 2. (* skoMC1 3.))))) (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (+ (/ (- 1.) 6.) skoMC1)))) (* skoSC1 (* skoMC1 (* skoMC1 (* skoMC1 (/ (- 1.) 4.))))))))))) (* skoMC1 (* skoMC1 (* skoMC1 (+ 2. (* skoMC1 5.)))))) (and (<= (* skoSC1 (+ (* skoMC1 (+ 1. (* skoMC1 (- 3.)))) (* skoSC1 (+ (* skoMC1 (+ 2. (* skoMC1 3.))) (* skoSC1 (+ (* skoMC1 (+ (/ (- 1.) 6.) skoMC1)) (* skoSC1 (* skoMC1 (/ (- 1.) 4.))))))))) (* skoMC1 (+ 2. (* skoMC1 5.)))) (and (> (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (+ (- 1.) (* skoMC1 3.))))) (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (+ (- 2.) (* skoMC1 (- 3.)))))) (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (+ (/ 1. 6.) (* skoMC1 (- 1.)))))) (* skoSC1 (* skoMC1 (* skoMC1 (* skoMC1 (/ 1. 4.))))))))))) (* skoMC1 (* skoMC1 (* skoMC1 (+ (- 2.) (* skoMC1 (- 5.))))))) (and (> (* skoSC1 (+ (* skoMC1 (+ (- 1.) (* skoMC1 3.))) (* skoSC1 (+ (* skoMC1 (+ (- 2.) (* skoMC1 (- 3.)))) (* skoSC1 (+ (* skoMC1 (+ (/ 1. 6.) (* skoMC1 (- 1.)))) (* skoSC1 (* skoMC1 (/ 1. 4.))))))))) (* skoMC1 (+ (- 2.) (* skoMC1 (- 5.))))) (and (> skoSC1 0.) (and (<= (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (- 2.)))) (* skoSC1 (+ (* skoMC1 (* skoMC1 skoMC1)) (* skoSC1 (* skoMC1 (* skoMC1 skoMC1))))))) (* skoMC1 (* skoMC1 (* skoMC1 2.)))) (and (> (* skoSC1 (+ (* skoMC1 (* skoMC1 skoMC1)) (* skoSC1 (* skoMC1 (* skoMC1 skoMC1))))) 0.) (and (> (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 2.))) (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (- 1.)))) (* skoSC1 (* skoMC1 (* skoMC1 (* skoMC1 (- 1.))))))))) (* skoMC1 (* skoMC1 (* skoMC1 (- 2.))))) (and (<= (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (- 1.)))) (* skoSC1 (* skoMC1 (* skoMC1 (* skoMC1 (- 1.))))))) 0.) (and (<= (* skoSC1 (* skoMC1 (* skoMC1 (* skoMC1 (- 1.))))) (* skoMC1 (* skoMC1 skoMC1))) (and (> (* skoSC1 (* skoMC1 (* skoMC1 skoMC1))) (* skoMC1 (* skoMC1 (* skoMC1 (- 1.))))) (and (<= (* skoMC1 (* skoMC1 (* skoMC1 (- 2.)))) 0.) (and (> (* skoMC1 (* skoMC1 (* skoMC1 2.))) 0.) (and (<= skoSC1 (/ 5. 4.)) (and (<= 2. skoMC1) (and (<= 0. skoSC1) (and (> skoMC1 0.) (and (<= 0. skoMC1) (and (> (* skoSC1 skoMC1) (* skoMC1 (- 1.))) (and (<= (* skoSC1 (* skoMC1 (- 1.))) skoMC1) (and (> (* skoSC1 (* skoMC1 (* skoMC1 (* skoMC1 2.)))) (* skoMC1 (* skoMC1 (* skoMC1 (- 2.))))) (and (<= (* skoSC1 (* skoMC1 (* skoMC1 (* skoMC1 (- 2.))))) (* skoMC1 (* skoMC1 (* skoMC1 2.)))) (and (> (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (* skoMC1 12.)))) (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (+ (- 1.) (* skoMC1 6.))))) (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (- 1.)))) (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (/ 1. 12.)))) (* skoSC1 (* skoMC1 (* skoMC1 (* skoMC1 (/ 1. 12.))))))))))))) (* skoMC1 (* skoMC1 (* skoMC1 (+ (- 2.) (* skoMC1 (- 6.))))))) (<= (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (* skoMC1 (- 12.))))) (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (+ 1. (* skoMC1 (- 6.)))))) (* skoSC1 (+ (* skoMC1 (* skoMC1 skoMC1)) (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (/ (- 1.) 12.)))) (* skoSC1 (* skoMC1 (* skoMC1 (* skoMC1 (/ (- 1.) 12.))))))))))))) (* skoMC1 (* skoMC1 (* skoMC1 (+ 2. (* skoMC1 6.)))))))))))))))))))))))))))))))

% In GRF format:
(sequent " MetiTarski formula " (antecedent (<= (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 2.))) (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (- 1.)))) (* skoSC1 (* skoMC1 (* skoMC1 (* skoMC1 (- 1.))))))))) (* skoMC1 (* skoMC1 (* skoMC1 (- 2.))))) (<= (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (+ 1. (* skoMC1 (- 3.)))))) (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (+ 2. (* skoMC1 3.))))) (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (+ (/ (- 1.) 6.) skoMC1)))) (* skoSC1 (* skoMC1 (* skoMC1 (* skoMC1 (/ (- 1.) 4.))))))))))) (* skoMC1 (* skoMC1 (* skoMC1 (+ 2. (* skoMC1 5.)))))) (<= (* skoSC1 (+ (* skoMC1 (+ 1. (* skoMC1 (- 3.)))) (* skoSC1 (+ (* skoMC1 (+ 2. (* skoMC1 3.))) (* skoSC1 (+ (* skoMC1 (+ (/ (- 1.) 6.) skoMC1)) (* skoSC1 (* skoMC1 (/ (- 1.) 4.))))))))) (* skoMC1 (+ 2. (* skoMC1 5.)))) (> (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (+ (- 1.) (* skoMC1 3.))))) (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (+ (- 2.) (* skoMC1 (- 3.)))))) (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (+ (/ 1. 6.) (* skoMC1 (- 1.)))))) (* skoSC1 (* skoMC1 (* skoMC1 (* skoMC1 (/ 1. 4.))))))))))) (* skoMC1 (* skoMC1 (* skoMC1 (+ (- 2.) (* skoMC1 (- 5.))))))) (> (* skoSC1 (+ (* skoMC1 (+ (- 1.) (* skoMC1 3.))) (* skoSC1 (+ (* skoMC1 (+ (- 2.) (* skoMC1 (- 3.)))) (* skoSC1 (+ (* skoMC1 (+ (/ 1. 6.) (* skoMC1 (- 1.)))) (* skoSC1 (* skoMC1 (/ 1. 4.))))))))) (* skoMC1 (+ (- 2.) (* skoMC1 (- 5.))))) (> skoSC1 0.) (<= (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (- 2.)))) (* skoSC1 (+ (* skoMC1 (* skoMC1 skoMC1)) (* skoSC1 (* skoMC1 (* skoMC1 skoMC1))))))) (* skoMC1 (* skoMC1 (* skoMC1 2.)))) (> (* skoSC1 (+ (* skoMC1 (* skoMC1 skoMC1)) (* skoSC1 (* skoMC1 (* skoMC1 skoMC1))))) 0.) (> (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 2.))) (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (- 1.)))) (* skoSC1 (* skoMC1 (* skoMC1 (* skoMC1 (- 1.))))))))) (* skoMC1 (* skoMC1 (* skoMC1 (- 2.))))) (<= (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (- 1.)))) (* skoSC1 (* skoMC1 (* skoMC1 (* skoMC1 (- 1.))))))) 0.) (<= (* skoSC1 (* skoMC1 (* skoMC1 (* skoMC1 (- 1.))))) (* skoMC1 (* skoMC1 skoMC1))) (> (* skoSC1 (* skoMC1 (* skoMC1 skoMC1))) (* skoMC1 (* skoMC1 (* skoMC1 (- 1.))))) (<= (* skoMC1 (* skoMC1 (* skoMC1 (- 2.)))) 0.) (> (* skoMC1 (* skoMC1 (* skoMC1 2.))) 0.) (<= skoSC1 (/ 5. 4.)) (<= 2. skoMC1) (<= 0. skoSC1) (> skoMC1 0.) (<= 0. skoMC1) (> (* skoSC1 skoMC1) (* skoMC1 (- 1.))) (<= (* skoSC1 (* skoMC1 (- 1.))) skoMC1) (> (* skoSC1 (* skoMC1 (* skoMC1 (* skoMC1 2.)))) (* skoMC1 (* skoMC1 (* skoMC1 (- 2.))))) (<= (* skoSC1 (* skoMC1 (* skoMC1 (* skoMC1 (- 2.))))) (* skoMC1 (* skoMC1 (* skoMC1 2.)))) (> (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (* skoMC1 12.)))) (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (+ (- 1.) (* skoMC1 6.))))) (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (- 1.)))) (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (/ 1. 12.)))) (* skoSC1 (* skoMC1 (* skoMC1 (* skoMC1 (/ 1. 12.))))))))))))) (* skoMC1 (* skoMC1 (* skoMC1 (+ (- 2.) (* skoMC1 (- 6.)))))))) (succedent (> (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (* skoMC1 (- 12.))))) (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (+ 1. (* skoMC1 (- 6.)))))) (* skoSC1 (+ (* skoMC1 (* skoMC1 skoMC1)) (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (/ (- 1.) 12.)))) (* skoSC1 (* skoMC1 (* skoMC1 (* skoMC1 (/ (- 1.) 12.))))))))))))) (* skoMC1 (* skoMC1 (* skoMC1 (+ 2. (* skoMC1 6.))))))))
-----[end problem]-----

-----[begin problem]-----
% In Mathematica format:
Timing[Resolve[Exists[{skoSC1,skoMC1}, And[skoSC1*(skoMC1*skoMC1*skoMC1*-2+skoSC1*(skoMC1*skoMC1*skoMC1+skoSC1*skoMC1*skoMC1*skoMC1))<=skoMC1*skoMC1*skoMC1*2,skoSC1*(skoMC1*skoMC1*skoMC1*(1+skoMC1*-3)+skoSC1*(skoMC1*skoMC1*skoMC1*(2+skoMC1*3)+skoSC1*(skoMC1*skoMC1*skoMC1*((-1/6)+skoMC1)+skoSC1*skoMC1*skoMC1*skoMC1*(-1/4))))<=skoMC1*skoMC1*skoMC1*(2+skoMC1*5),skoSC1*(skoMC1*(1+skoMC1*-3)+skoSC1*(skoMC1*(2+skoMC1*3)+skoSC1*(skoMC1*((-1/6)+skoMC1)+skoSC1*skoMC1*(-1/4))))<=skoMC1*(2+skoMC1*5),skoSC1*(skoMC1*skoMC1*skoMC1*(-1+skoMC1*3)+skoSC1*(skoMC1*skoMC1*skoMC1*(-2+skoMC1*-3)+skoSC1*(skoMC1*skoMC1*skoMC1*((1/6)+skoMC1*-1)+skoSC1*skoMC1*skoMC1*skoMC1*(1/4))))>skoMC1*skoMC1*skoMC1*(-2+skoMC1*-5),skoSC1*(skoMC1*(-1+skoMC1*3)+skoSC1*(skoMC1*(-2+skoMC1*-3)+skoSC1*(skoMC1*((1/6)+skoMC1*-1)+skoSC1*skoMC1*(1/4))))>skoMC1*(-2+skoMC1*-5),skoSC1>0,skoSC1*(skoMC1*skoMC1*skoMC1*-2+skoSC1*(skoMC1*skoMC1*skoMC1+skoSC1*skoMC1*skoMC1*skoMC1))<=skoMC1*skoMC1*skoMC1*2,skoSC1*(skoMC1*skoMC1*skoMC1+skoSC1*skoMC1*skoMC1*skoMC1)>0,skoSC1*(skoMC1*skoMC1*skoMC1*2+skoSC1*(skoMC1*skoMC1*skoMC1*-1+skoSC1*skoMC1*skoMC1*skoMC1*-1))>skoMC1*skoMC1*skoMC1*-2,skoSC1*(skoMC1*skoMC1*skoMC1*-1+skoSC1*skoMC1*skoMC1*skoMC1*-1)<=0,skoSC1*skoMC1*skoMC1*skoMC1*-1<=skoMC1*skoMC1*skoMC1,skoSC1*skoMC1*skoMC1*skoMC1>skoMC1*skoMC1*skoMC1*-1,skoMC1*skoMC1*skoMC1*-2<=0,skoMC1*skoMC1*skoMC1*2>0,skoSC1<=(5/4),2<=skoMC1,0<=skoSC1,skoMC1>0,0<=skoMC1,skoSC1*skoMC1>skoMC1*-1,skoSC1*skoMC1*-1<=skoMC1,skoSC1*skoMC1*skoMC1*skoMC1*2>skoMC1*skoMC1*skoMC1*-2,skoSC1*skoMC1*skoMC1*skoMC1*-2<=skoMC1*skoMC1*skoMC1*2,skoSC1*(skoMC1*skoMC1*skoMC1*skoMC1*12+skoSC1*(skoMC1*skoMC1*skoMC1*(-1+skoMC1*6)+skoSC1*(skoMC1*skoMC1*skoMC1*-1+skoSC1*(skoMC1*skoMC1*skoMC1*(1/12)+skoSC1*skoMC1*skoMC1*skoMC1*(1/12)))))>skoMC1*skoMC1*skoMC1*(-2+skoMC1*-6),skoSC1*(skoMC1*skoMC1*skoMC1*skoMC1*-12+skoSC1*(skoMC1*skoMC1*skoMC1*(1+skoMC1*-6)+skoSC1*(skoMC1*skoMC1*skoMC1+skoSC1*(skoMC1*skoMC1*skoMC1*(-1/12)+skoSC1*skoMC1*skoMC1*skoMC1*(-1/12)))))<=skoMC1*skoMC1*skoMC1*(2+skoMC1*6)]], Reals]]

% In QepcadB format:
(E skoSC1) (E skoMC1) [[(skoSC1 ((skoMC1 skoMC1 skoMC1 (-2))+(skoSC1 ((skoMC1 skoMC1 skoMC1)+(skoSC1 skoMC1 skoMC1 skoMC1)))))<=(skoMC1 skoMC1 skoMC1 (2))]/\[[(skoSC1 ((skoMC1 skoMC1 skoMC1 (1+(skoMC1 (-3))))+(skoSC1 ((skoMC1 skoMC1 skoMC1 (2+(skoMC1 (3))))+(skoSC1 ((skoMC1 skoMC1 skoMC1 (-1/6+skoMC1))+(skoSC1 skoMC1 skoMC1 skoMC1 (-1/4))))))))<=(skoMC1 skoMC1 skoMC1 (2+(skoMC1 (5))))]/\[[(skoSC1 ((skoMC1 (1+(skoMC1 (-3))))+(skoSC1 ((skoMC1 (2+(skoMC1 (3))))+(skoSC1 ((skoMC1 (-1/6+skoMC1))+(skoSC1 skoMC1 (-1/4))))))))<=(skoMC1 (2+(skoMC1 (5))))]/\[[(skoMC1 skoMC1 skoMC1 (-2+(skoMC1 (-5))))<(skoSC1 ((skoMC1 skoMC1 skoMC1 (-1+(skoMC1 (3))))+(skoSC1 ((skoMC1 skoMC1 skoMC1 (-2+(skoMC1 (-3))))+(skoSC1 ((skoMC1 skoMC1 skoMC1 (1/6+(skoMC1 (-1))))+(skoSC1 skoMC1 skoMC1 skoMC1 (1/4))))))))]/\[[(skoMC1 (-2+(skoMC1 (-5))))<(skoSC1 ((skoMC1 (-1+(skoMC1 (3))))+(skoSC1 ((skoMC1 (-2+(skoMC1 (-3))))+(skoSC1 ((skoMC1 (1/6+(skoMC1 (-1))))+(skoSC1 skoMC1 (1/4))))))))]/\[[0<skoSC1]/\[[(skoSC1 ((skoMC1 skoMC1 skoMC1 (-2))+(skoSC1 ((skoMC1 skoMC1 skoMC1)+(skoSC1 skoMC1 skoMC1 skoMC1)))))<=(skoMC1 skoMC1 skoMC1 (2))]/\[[0<(skoSC1 ((skoMC1 skoMC1 skoMC1)+(skoSC1 skoMC1 skoMC1 skoMC1)))]/\[[(skoMC1 skoMC1 skoMC1 (-2))<(skoSC1 ((skoMC1 skoMC1 skoMC1 (2))+(skoSC1 ((skoMC1 skoMC1 skoMC1 (-1))+(skoSC1 skoMC1 skoMC1 skoMC1 (-1))))))]/\[[(skoSC1 ((skoMC1 skoMC1 skoMC1 (-1))+(skoSC1 skoMC1 skoMC1 skoMC1 (-1))))<=0]/\[[(skoSC1 skoMC1 skoMC1 skoMC1 (-1))<=(skoMC1 skoMC1 skoMC1)]/\[[(skoMC1 skoMC1 skoMC1 (-1))<(skoSC1 skoMC1 skoMC1 skoMC1)]/\[[(skoMC1 skoMC1 skoMC1 (-2))<=0]/\[[0<(skoMC1 skoMC1 skoMC1 (2))]/\[[skoSC1<=5/4]/\[[2<=skoMC1]/\[[0<=skoSC1]/\[[0<skoMC1]/\[[0<=skoMC1]/\[[(skoMC1 (-1))<(skoSC1 skoMC1)]/\[[(skoSC1 skoMC1 (-1))<=skoMC1]/\[[(skoMC1 skoMC1 skoMC1 (-2))<(skoSC1 skoMC1 skoMC1 skoMC1 (2))]/\[[(skoSC1 skoMC1 skoMC1 skoMC1 (-2))<=(skoMC1 skoMC1 skoMC1 (2))]/\[[(skoMC1 skoMC1 skoMC1 (-2+(skoMC1 (-6))))<(skoSC1 ((skoMC1 skoMC1 skoMC1 skoMC1 (12))+(skoSC1 ((skoMC1 skoMC1 skoMC1 (-1+(skoMC1 (6))))+(skoSC1 ((skoMC1 skoMC1 skoMC1 (-1))+(skoSC1 ((skoMC1 skoMC1 skoMC1 (1/12))+(skoSC1 skoMC1 skoMC1 skoMC1 (1/12))))))))))]/\[(skoSC1 ((skoMC1 skoMC1 skoMC1 skoMC1 (-12))+(skoSC1 ((skoMC1 skoMC1 skoMC1 (1+(skoMC1 (-6))))+(skoSC1 ((skoMC1 skoMC1 skoMC1)+(skoSC1 ((skoMC1 skoMC1 skoMC1 (-1/12))+(skoSC1 skoMC1 skoMC1 skoMC1 (-1/12))))))))))<=(skoMC1 skoMC1 skoMC1 (2+(skoMC1 (6))))]]]]]]]]]]]]]]]]]]]]]]]]].

% In SMTLib2 format:
(declare-fun skoSC1 () Real) (declare-fun skoMC1 () Real) (assert (and (<= (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (- 2.)))) (* skoSC1 (+ (* skoMC1 (* skoMC1 skoMC1)) (* skoSC1 (* skoMC1 (* skoMC1 skoMC1))))))) (* skoMC1 (* skoMC1 (* skoMC1 2.)))) (and (<= (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (+ 1. (* skoMC1 (- 3.)))))) (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (+ 2. (* skoMC1 3.))))) (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (+ (/ (- 1.) 6.) skoMC1)))) (* skoSC1 (* skoMC1 (* skoMC1 (* skoMC1 (/ (- 1.) 4.))))))))))) (* skoMC1 (* skoMC1 (* skoMC1 (+ 2. (* skoMC1 5.)))))) (and (<= (* skoSC1 (+ (* skoMC1 (+ 1. (* skoMC1 (- 3.)))) (* skoSC1 (+ (* skoMC1 (+ 2. (* skoMC1 3.))) (* skoSC1 (+ (* skoMC1 (+ (/ (- 1.) 6.) skoMC1)) (* skoSC1 (* skoMC1 (/ (- 1.) 4.))))))))) (* skoMC1 (+ 2. (* skoMC1 5.)))) (and (> (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (+ (- 1.) (* skoMC1 3.))))) (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (+ (- 2.) (* skoMC1 (- 3.)))))) (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (+ (/ 1. 6.) (* skoMC1 (- 1.)))))) (* skoSC1 (* skoMC1 (* skoMC1 (* skoMC1 (/ 1. 4.))))))))))) (* skoMC1 (* skoMC1 (* skoMC1 (+ (- 2.) (* skoMC1 (- 5.))))))) (and (> (* skoSC1 (+ (* skoMC1 (+ (- 1.) (* skoMC1 3.))) (* skoSC1 (+ (* skoMC1 (+ (- 2.) (* skoMC1 (- 3.)))) (* skoSC1 (+ (* skoMC1 (+ (/ 1. 6.) (* skoMC1 (- 1.)))) (* skoSC1 (* skoMC1 (/ 1. 4.))))))))) (* skoMC1 (+ (- 2.) (* skoMC1 (- 5.))))) (and (> skoSC1 0.) (and (<= (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (- 2.)))) (* skoSC1 (+ (* skoMC1 (* skoMC1 skoMC1)) (* skoSC1 (* skoMC1 (* skoMC1 skoMC1))))))) (* skoMC1 (* skoMC1 (* skoMC1 2.)))) (and (> (* skoSC1 (+ (* skoMC1 (* skoMC1 skoMC1)) (* skoSC1 (* skoMC1 (* skoMC1 skoMC1))))) 0.) (and (> (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 2.))) (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (- 1.)))) (* skoSC1 (* skoMC1 (* skoMC1 (* skoMC1 (- 1.))))))))) (* skoMC1 (* skoMC1 (* skoMC1 (- 2.))))) (and (<= (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (- 1.)))) (* skoSC1 (* skoMC1 (* skoMC1 (* skoMC1 (- 1.))))))) 0.) (and (<= (* skoSC1 (* skoMC1 (* skoMC1 (* skoMC1 (- 1.))))) (* skoMC1 (* skoMC1 skoMC1))) (and (> (* skoSC1 (* skoMC1 (* skoMC1 skoMC1))) (* skoMC1 (* skoMC1 (* skoMC1 (- 1.))))) (and (<= (* skoMC1 (* skoMC1 (* skoMC1 (- 2.)))) 0.) (and (> (* skoMC1 (* skoMC1 (* skoMC1 2.))) 0.) (and (<= skoSC1 (/ 5. 4.)) (and (<= 2. skoMC1) (and (<= 0. skoSC1) (and (> skoMC1 0.) (and (<= 0. skoMC1) (and (> (* skoSC1 skoMC1) (* skoMC1 (- 1.))) (and (<= (* skoSC1 (* skoMC1 (- 1.))) skoMC1) (and (> (* skoSC1 (* skoMC1 (* skoMC1 (* skoMC1 2.)))) (* skoMC1 (* skoMC1 (* skoMC1 (- 2.))))) (and (<= (* skoSC1 (* skoMC1 (* skoMC1 (* skoMC1 (- 2.))))) (* skoMC1 (* skoMC1 (* skoMC1 2.)))) (and (> (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (* skoMC1 12.)))) (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (+ (- 1.) (* skoMC1 6.))))) (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (- 1.)))) (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (/ 1. 12.)))) (* skoSC1 (* skoMC1 (* skoMC1 (* skoMC1 (/ 1. 12.))))))))))))) (* skoMC1 (* skoMC1 (* skoMC1 (+ (- 2.) (* skoMC1 (- 6.))))))) (<= (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (* skoMC1 (- 12.))))) (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (+ 1. (* skoMC1 (- 6.)))))) (* skoSC1 (+ (* skoMC1 (* skoMC1 skoMC1)) (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (/ (- 1.) 12.)))) (* skoSC1 (* skoMC1 (* skoMC1 (* skoMC1 (/ (- 1.) 12.))))))))))))) (* skoMC1 (* skoMC1 (* skoMC1 (+ 2. (* skoMC1 6.)))))))))))))))))))))))))))))))

% In GRF format:
(sequent " MetiTarski formula " (antecedent (<= (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (- 2.)))) (* skoSC1 (+ (* skoMC1 (* skoMC1 skoMC1)) (* skoSC1 (* skoMC1 (* skoMC1 skoMC1))))))) (* skoMC1 (* skoMC1 (* skoMC1 2.)))) (<= (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (+ 1. (* skoMC1 (- 3.)))))) (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (+ 2. (* skoMC1 3.))))) (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (+ (/ (- 1.) 6.) skoMC1)))) (* skoSC1 (* skoMC1 (* skoMC1 (* skoMC1 (/ (- 1.) 4.))))))))))) (* skoMC1 (* skoMC1 (* skoMC1 (+ 2. (* skoMC1 5.)))))) (<= (* skoSC1 (+ (* skoMC1 (+ 1. (* skoMC1 (- 3.)))) (* skoSC1 (+ (* skoMC1 (+ 2. (* skoMC1 3.))) (* skoSC1 (+ (* skoMC1 (+ (/ (- 1.) 6.) skoMC1)) (* skoSC1 (* skoMC1 (/ (- 1.) 4.))))))))) (* skoMC1 (+ 2. (* skoMC1 5.)))) (> (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (+ (- 1.) (* skoMC1 3.))))) (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (+ (- 2.) (* skoMC1 (- 3.)))))) (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (+ (/ 1. 6.) (* skoMC1 (- 1.)))))) (* skoSC1 (* skoMC1 (* skoMC1 (* skoMC1 (/ 1. 4.))))))))))) (* skoMC1 (* skoMC1 (* skoMC1 (+ (- 2.) (* skoMC1 (- 5.))))))) (> (* skoSC1 (+ (* skoMC1 (+ (- 1.) (* skoMC1 3.))) (* skoSC1 (+ (* skoMC1 (+ (- 2.) (* skoMC1 (- 3.)))) (* skoSC1 (+ (* skoMC1 (+ (/ 1. 6.) (* skoMC1 (- 1.)))) (* skoSC1 (* skoMC1 (/ 1. 4.))))))))) (* skoMC1 (+ (- 2.) (* skoMC1 (- 5.))))) (> skoSC1 0.) (<= (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (- 2.)))) (* skoSC1 (+ (* skoMC1 (* skoMC1 skoMC1)) (* skoSC1 (* skoMC1 (* skoMC1 skoMC1))))))) (* skoMC1 (* skoMC1 (* skoMC1 2.)))) (> (* skoSC1 (+ (* skoMC1 (* skoMC1 skoMC1)) (* skoSC1 (* skoMC1 (* skoMC1 skoMC1))))) 0.) (> (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 2.))) (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (- 1.)))) (* skoSC1 (* skoMC1 (* skoMC1 (* skoMC1 (- 1.))))))))) (* skoMC1 (* skoMC1 (* skoMC1 (- 2.))))) (<= (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (- 1.)))) (* skoSC1 (* skoMC1 (* skoMC1 (* skoMC1 (- 1.))))))) 0.) (<= (* skoSC1 (* skoMC1 (* skoMC1 (* skoMC1 (- 1.))))) (* skoMC1 (* skoMC1 skoMC1))) (> (* skoSC1 (* skoMC1 (* skoMC1 skoMC1))) (* skoMC1 (* skoMC1 (* skoMC1 (- 1.))))) (<= (* skoMC1 (* skoMC1 (* skoMC1 (- 2.)))) 0.) (> (* skoMC1 (* skoMC1 (* skoMC1 2.))) 0.) (<= skoSC1 (/ 5. 4.)) (<= 2. skoMC1) (<= 0. skoSC1) (> skoMC1 0.) (<= 0. skoMC1) (> (* skoSC1 skoMC1) (* skoMC1 (- 1.))) (<= (* skoSC1 (* skoMC1 (- 1.))) skoMC1) (> (* skoSC1 (* skoMC1 (* skoMC1 (* skoMC1 2.)))) (* skoMC1 (* skoMC1 (* skoMC1 (- 2.))))) (<= (* skoSC1 (* skoMC1 (* skoMC1 (* skoMC1 (- 2.))))) (* skoMC1 (* skoMC1 (* skoMC1 2.)))) (> (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (* skoMC1 12.)))) (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (+ (- 1.) (* skoMC1 6.))))) (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (- 1.)))) (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (/ 1. 12.)))) (* skoSC1 (* skoMC1 (* skoMC1 (* skoMC1 (/ 1. 12.))))))))))))) (* skoMC1 (* skoMC1 (* skoMC1 (+ (- 2.) (* skoMC1 (- 6.)))))))) (succedent (> (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (* skoMC1 (- 12.))))) (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (+ 1. (* skoMC1 (- 6.)))))) (* skoSC1 (+ (* skoMC1 (* skoMC1 skoMC1)) (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (/ (- 1.) 12.)))) (* skoSC1 (* skoMC1 (* skoMC1 (* skoMC1 (/ (- 1.) 12.))))))))))))) (* skoMC1 (* skoMC1 (* skoMC1 (+ 2. (* skoMC1 6.))))))))
-----[end problem]-----

-----[begin problem]-----
% In Mathematica format:
Timing[Resolve[Exists[{skoSC1,skoMC1}, And[skoSC1*(skoMC1*skoMC1*skoMC1*2+skoSC1*(skoMC1*skoMC1*skoMC1*-1+skoSC1*skoMC1*skoMC1*skoMC1*-1))>skoMC1*skoMC1*skoMC1*-2,skoSC1*(skoMC1*skoMC1*skoMC1*(-1+skoMC1*3)+skoSC1*(skoMC1*skoMC1*skoMC1*(-2+skoMC1*-3)+skoSC1*(skoMC1*skoMC1*skoMC1*((1/6)+skoMC1*-1)+skoSC1*skoMC1*skoMC1*skoMC1*(1/4))))>skoMC1*skoMC1*skoMC1*(-2+skoMC1*-5),skoSC1*(skoMC1*(-1+skoMC1*3)+skoSC1*(skoMC1*(-2+skoMC1*-3)+skoSC1*(skoMC1*((1/6)+skoMC1*-1)+skoSC1*skoMC1*(1/4))))>skoMC1*(-2+skoMC1*-5),skoSC1>0,skoSC1*(skoMC1*skoMC1*skoMC1+skoSC1*skoMC1*skoMC1*skoMC1)>0,skoSC1*(skoMC1*skoMC1*skoMC1*2+skoSC1*(skoMC1*skoMC1*skoMC1*-1+skoSC1*skoMC1*skoMC1*skoMC1*-1))>skoMC1*skoMC1*skoMC1*-2,skoSC1*skoMC1*skoMC1*skoMC1>skoMC1*skoMC1*skoMC1*-1,skoMC1*skoMC1*skoMC1*2>0,skoMC1>0,skoSC1*skoMC1>skoMC1*-1,skoSC1*skoMC1*skoMC1*skoMC1*2>skoMC1*skoMC1*skoMC1*-2,skoSC1*(skoMC1*skoMC1*skoMC1*skoMC1*12+skoSC1*(skoMC1*skoMC1*skoMC1*(-1+skoMC1*6)+skoSC1*(skoMC1*skoMC1*skoMC1*-1+skoSC1*(skoMC1*skoMC1*skoMC1*(1/12)+skoSC1*skoMC1*skoMC1*skoMC1*(1/12)))))>skoMC1*skoMC1*skoMC1*(-2+skoMC1*-6)]], Reals]]

% In QepcadB format:
(E skoSC1) (E skoMC1) [[(skoMC1 skoMC1 skoMC1 (-2))<(skoSC1 ((skoMC1 skoMC1 skoMC1 (2))+(skoSC1 ((skoMC1 skoMC1 skoMC1 (-1))+(skoSC1 skoMC1 skoMC1 skoMC1 (-1))))))]/\[[(skoMC1 skoMC1 skoMC1 (-2+(skoMC1 (-5))))<(skoSC1 ((skoMC1 skoMC1 skoMC1 (-1+(skoMC1 (3))))+(skoSC1 ((skoMC1 skoMC1 skoMC1 (-2+(skoMC1 (-3))))+(skoSC1 ((skoMC1 skoMC1 skoMC1 (1/6+(skoMC1 (-1))))+(skoSC1 skoMC1 skoMC1 skoMC1 (1/4))))))))]/\[[(skoMC1 (-2+(skoMC1 (-5))))<(skoSC1 ((skoMC1 (-1+(skoMC1 (3))))+(skoSC1 ((skoMC1 (-2+(skoMC1 (-3))))+(skoSC1 ((skoMC1 (1/6+(skoMC1 (-1))))+(skoSC1 skoMC1 (1/4))))))))]/\[[0<skoSC1]/\[[0<(skoSC1 ((skoMC1 skoMC1 skoMC1)+(skoSC1 skoMC1 skoMC1 skoMC1)))]/\[[(skoMC1 skoMC1 skoMC1 (-2))<(skoSC1 ((skoMC1 skoMC1 skoMC1 (2))+(skoSC1 ((skoMC1 skoMC1 skoMC1 (-1))+(skoSC1 skoMC1 skoMC1 skoMC1 (-1))))))]/\[[(skoMC1 skoMC1 skoMC1 (-1))<(skoSC1 skoMC1 skoMC1 skoMC1)]/\[[0<(skoMC1 skoMC1 skoMC1 (2))]/\[[0<skoMC1]/\[[(skoMC1 (-1))<(skoSC1 skoMC1)]/\[[(skoMC1 skoMC1 skoMC1 (-2))<(skoSC1 skoMC1 skoMC1 skoMC1 (2))]/\[(skoMC1 skoMC1 skoMC1 (-2+(skoMC1 (-6))))<(skoSC1 ((skoMC1 skoMC1 skoMC1 skoMC1 (12))+(skoSC1 ((skoMC1 skoMC1 skoMC1 (-1+(skoMC1 (6))))+(skoSC1 ((skoMC1 skoMC1 skoMC1 (-1))+(skoSC1 ((skoMC1 skoMC1 skoMC1 (1/12))+(skoSC1 skoMC1 skoMC1 skoMC1 (1/12))))))))))]]]]]]]]]]]].

% In SMTLib2 format:
(declare-fun skoSC1 () Real) (declare-fun skoMC1 () Real) (assert (and (> (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 2.))) (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (- 1.)))) (* skoSC1 (* skoMC1 (* skoMC1 (* skoMC1 (- 1.))))))))) (* skoMC1 (* skoMC1 (* skoMC1 (- 2.))))) (and (> (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (+ (- 1.) (* skoMC1 3.))))) (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (+ (- 2.) (* skoMC1 (- 3.)))))) (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (+ (/ 1. 6.) (* skoMC1 (- 1.)))))) (* skoSC1 (* skoMC1 (* skoMC1 (* skoMC1 (/ 1. 4.))))))))))) (* skoMC1 (* skoMC1 (* skoMC1 (+ (- 2.) (* skoMC1 (- 5.))))))) (and (> (* skoSC1 (+ (* skoMC1 (+ (- 1.) (* skoMC1 3.))) (* skoSC1 (+ (* skoMC1 (+ (- 2.) (* skoMC1 (- 3.)))) (* skoSC1 (+ (* skoMC1 (+ (/ 1. 6.) (* skoMC1 (- 1.)))) (* skoSC1 (* skoMC1 (/ 1. 4.))))))))) (* skoMC1 (+ (- 2.) (* skoMC1 (- 5.))))) (and (> skoSC1 0.) (and (> (* skoSC1 (+ (* skoMC1 (* skoMC1 skoMC1)) (* skoSC1 (* skoMC1 (* skoMC1 skoMC1))))) 0.) (and (> (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 2.))) (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (- 1.)))) (* skoSC1 (* skoMC1 (* skoMC1 (* skoMC1 (- 1.))))))))) (* skoMC1 (* skoMC1 (* skoMC1 (- 2.))))) (and (> (* skoSC1 (* skoMC1 (* skoMC1 skoMC1))) (* skoMC1 (* skoMC1 (* skoMC1 (- 1.))))) (and (> (* skoMC1 (* skoMC1 (* skoMC1 2.))) 0.) (and (> skoMC1 0.) (and (> (* skoSC1 skoMC1) (* skoMC1 (- 1.))) (and (> (* skoSC1 (* skoMC1 (* skoMC1 (* skoMC1 2.)))) (* skoMC1 (* skoMC1 (* skoMC1 (- 2.))))) (> (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (* skoMC1 12.)))) (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (+ (- 1.) (* skoMC1 6.))))) (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (- 1.)))) (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (/ 1. 12.)))) (* skoSC1 (* skoMC1 (* skoMC1 (* skoMC1 (/ 1. 12.))))))))))))) (* skoMC1 (* skoMC1 (* skoMC1 (+ (- 2.) (* skoMC1 (- 6.)))))))))))))))))))

% In GRF format:
(sequent " MetiTarski formula " (antecedent (> (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 2.))) (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (- 1.)))) (* skoSC1 (* skoMC1 (* skoMC1 (* skoMC1 (- 1.))))))))) (* skoMC1 (* skoMC1 (* skoMC1 (- 2.))))) (> (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (+ (- 1.) (* skoMC1 3.))))) (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (+ (- 2.) (* skoMC1 (- 3.)))))) (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (+ (/ 1. 6.) (* skoMC1 (- 1.)))))) (* skoSC1 (* skoMC1 (* skoMC1 (* skoMC1 (/ 1. 4.))))))))))) (* skoMC1 (* skoMC1 (* skoMC1 (+ (- 2.) (* skoMC1 (- 5.))))))) (> (* skoSC1 (+ (* skoMC1 (+ (- 1.) (* skoMC1 3.))) (* skoSC1 (+ (* skoMC1 (+ (- 2.) (* skoMC1 (- 3.)))) (* skoSC1 (+ (* skoMC1 (+ (/ 1. 6.) (* skoMC1 (- 1.)))) (* skoSC1 (* skoMC1 (/ 1. 4.))))))))) (* skoMC1 (+ (- 2.) (* skoMC1 (- 5.))))) (> skoSC1 0.) (> (* skoSC1 (+ (* skoMC1 (* skoMC1 skoMC1)) (* skoSC1 (* skoMC1 (* skoMC1 skoMC1))))) 0.) (> (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 2.))) (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (- 1.)))) (* skoSC1 (* skoMC1 (* skoMC1 (* skoMC1 (- 1.))))))))) (* skoMC1 (* skoMC1 (* skoMC1 (- 2.))))) (> (* skoSC1 (* skoMC1 (* skoMC1 skoMC1))) (* skoMC1 (* skoMC1 (* skoMC1 (- 1.))))) (> (* skoMC1 (* skoMC1 (* skoMC1 2.))) 0.) (> skoMC1 0.) (> (* skoSC1 skoMC1) (* skoMC1 (- 1.))) (> (* skoSC1 (* skoMC1 (* skoMC1 (* skoMC1 2.)))) (* skoMC1 (* skoMC1 (* skoMC1 (- 2.)))))) (succedent (<= (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (* skoMC1 12.)))) (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (+ (- 1.) (* skoMC1 6.))))) (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (- 1.)))) (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (/ 1. 12.)))) (* skoSC1 (* skoMC1 (* skoMC1 (* skoMC1 (/ 1. 12.))))))))))))) (* skoMC1 (* skoMC1 (* skoMC1 (+ (- 2.) (* skoMC1 (- 6.)))))))))
-----[end problem]-----

-----[begin problem]-----
% In Mathematica format:
Timing[Resolve[Exists[{skoMC1,skoSC1}, And[skoSC1*(skoMC1*skoMC1*skoMC1*skoMC1*(7+skoMC1*6)+skoSC1*(skoMC1*skoMC1*skoMC1*(-1+skoMC1*skoMC1*6)+skoSC1*(skoMC1*skoMC1*skoMC1*skoMC1*(-3+skoMC1*2)+skoSC1*(skoMC1*skoMC1*skoMC1*((1/3)+skoMC1*-2)+skoSC1*skoMC1*skoMC1*skoMC1*(1/3)))))<=skoMC1*skoMC1*skoMC1*(-2+skoMC1*(-6+skoMC1*-2)),skoSC1*(skoMC1*skoMC1*skoMC1*2+skoSC1*(skoMC1*skoMC1*skoMC1*-1+skoSC1*skoMC1*skoMC1*skoMC1*-1))>skoMC1*skoMC1*skoMC1*-2,skoSC1*(skoMC1*skoMC1*skoMC1*(1+skoMC1*-3)+skoSC1*(skoMC1*skoMC1*skoMC1*(2+skoMC1*3)+skoSC1*(skoMC1*skoMC1*skoMC1*((-1/6)+skoMC1)+skoSC1*skoMC1*skoMC1*skoMC1*(-1/4))))<=skoMC1*skoMC1*skoMC1*(2+skoMC1*5),skoSC1*(skoMC1*(1+skoMC1*-3)+skoSC1*(skoMC1*(2+skoMC1*3)+skoSC1*(skoMC1*((-1/6)+skoMC1)+skoSC1*skoMC1*(-1/4))))<=skoMC1*(2+skoMC1*5),skoSC1*(skoMC1*skoMC1*skoMC1*(-1+skoMC1*3)+skoSC1*(skoMC1*skoMC1*skoMC1*(-2+skoMC1*-3)+skoSC1*(skoMC1*skoMC1*skoMC1*((1/6)+skoMC1*-1)+skoSC1*skoMC1*skoMC1*skoMC1*(1/4))))>skoMC1*skoMC1*skoMC1*(-2+skoMC1*-5),skoSC1*(skoMC1*(-1+skoMC1*3)+skoSC1*(skoMC1*(-2+skoMC1*-3)+skoSC1*(skoMC1*((1/6)+skoMC1*-1)+skoSC1*skoMC1*(1/4))))>skoMC1*(-2+skoMC1*-5),skoSC1>0,skoSC1*(skoMC1*skoMC1*skoMC1*-2+skoSC1*(skoMC1*skoMC1*skoMC1+skoSC1*skoMC1*skoMC1*skoMC1))<=skoMC1*skoMC1*skoMC1*2,skoSC1*(skoMC1*skoMC1*skoMC1+skoSC1*skoMC1*skoMC1*skoMC1)>0,skoSC1*(skoMC1*skoMC1*skoMC1*2+skoSC1*(skoMC1*skoMC1*skoMC1*-1+skoSC1*skoMC1*skoMC1*skoMC1*-1))>skoMC1*skoMC1*skoMC1*-2,skoSC1*(skoMC1*skoMC1*skoMC1*-1+skoSC1*skoMC1*skoMC1*skoMC1*-1)<=0,skoSC1*skoMC1*skoMC1*skoMC1*-1<=skoMC1*skoMC1*skoMC1,skoSC1*skoMC1*skoMC1*skoMC1>skoMC1*skoMC1*skoMC1*-1,skoMC1*skoMC1*skoMC1*-2<=0,skoMC1*skoMC1*skoMC1*2>0,skoSC1<=(5/4),2<=skoMC1,0<=skoSC1,skoMC1>0,0<=skoMC1,skoSC1*skoMC1>skoMC1*-1,skoSC1*skoMC1*-1<=skoMC1,skoSC1*skoMC1*skoMC1*skoMC1*2>skoMC1*skoMC1*skoMC1*-2,skoSC1*skoMC1*skoMC1*skoMC1*-2<=skoMC1*skoMC1*skoMC1*2,skoSC1*(skoMC1*skoMC1*skoMC1*skoMC1*12+skoSC1*(skoMC1*skoMC1*skoMC1*(-1+skoMC1*6)+skoSC1*(skoMC1*skoMC1*skoMC1*-1+skoSC1*(skoMC1*skoMC1*skoMC1*(1/12)+skoSC1*skoMC1*skoMC1*skoMC1*(1/12)))))>skoMC1*skoMC1*skoMC1*(-2+skoMC1*-6),skoSC1*(skoMC1*skoMC1*skoMC1*skoMC1*-12+skoSC1*(skoMC1*skoMC1*skoMC1*(1+skoMC1*-6)+skoSC1*(skoMC1*skoMC1*skoMC1+skoSC1*(skoMC1*skoMC1*skoMC1*(-1/12)+skoSC1*skoMC1*skoMC1*skoMC1*(-1/12)))))<=skoMC1*skoMC1*skoMC1*(2+skoMC1*6)]], Reals]]

% In QepcadB format:
(E skoMC1) (E skoSC1) [[(skoSC1 ((skoMC1 skoMC1 skoMC1 skoMC1 (7+(skoMC1 (6))))+(skoSC1 ((skoMC1 skoMC1 skoMC1 (-1+(skoMC1 skoMC1 (6))))+(skoSC1 ((skoMC1 skoMC1 skoMC1 skoMC1 (-3+(skoMC1 (2))))+(skoSC1 ((skoMC1 skoMC1 skoMC1 (1/3+(skoMC1 (-2))))+(skoSC1 skoMC1 skoMC1 skoMC1 (1/3))))))))))<=(skoMC1 skoMC1 skoMC1 (-2+(skoMC1 (-6+(skoMC1 (-2))))))]/\[[(skoMC1 skoMC1 skoMC1 (-2))<(skoSC1 ((skoMC1 skoMC1 skoMC1 (2))+(skoSC1 ((skoMC1 skoMC1 skoMC1 (-1))+(skoSC1 skoMC1 skoMC1 skoMC1 (-1))))))]/\[[(skoSC1 ((skoMC1 skoMC1 skoMC1 (1+(skoMC1 (-3))))+(skoSC1 ((skoMC1 skoMC1 skoMC1 (2+(skoMC1 (3))))+(skoSC1 ((skoMC1 skoMC1 skoMC1 (-1/6+skoMC1))+(skoSC1 skoMC1 skoMC1 skoMC1 (-1/4))))))))<=(skoMC1 skoMC1 skoMC1 (2+(skoMC1 (5))))]/\[[(skoSC1 ((skoMC1 (1+(skoMC1 (-3))))+(skoSC1 ((skoMC1 (2+(skoMC1 (3))))+(skoSC1 ((skoMC1 (-1/6+skoMC1))+(skoSC1 skoMC1 (-1/4))))))))<=(skoMC1 (2+(skoMC1 (5))))]/\[[(skoMC1 skoMC1 skoMC1 (-2+(skoMC1 (-5))))<(skoSC1 ((skoMC1 skoMC1 skoMC1 (-1+(skoMC1 (3))))+(skoSC1 ((skoMC1 skoMC1 skoMC1 (-2+(skoMC1 (-3))))+(skoSC1 ((skoMC1 skoMC1 skoMC1 (1/6+(skoMC1 (-1))))+(skoSC1 skoMC1 skoMC1 skoMC1 (1/4))))))))]/\[[(skoMC1 (-2+(skoMC1 (-5))))<(skoSC1 ((skoMC1 (-1+(skoMC1 (3))))+(skoSC1 ((skoMC1 (-2+(skoMC1 (-3))))+(skoSC1 ((skoMC1 (1/6+(skoMC1 (-1))))+(skoSC1 skoMC1 (1/4))))))))]/\[[0<skoSC1]/\[[(skoSC1 ((skoMC1 skoMC1 skoMC1 (-2))+(skoSC1 ((skoMC1 skoMC1 skoMC1)+(skoSC1 skoMC1 skoMC1 skoMC1)))))<=(skoMC1 skoMC1 skoMC1 (2))]/\[[0<(skoSC1 ((skoMC1 skoMC1 skoMC1)+(skoSC1 skoMC1 skoMC1 skoMC1)))]/\[[(skoMC1 skoMC1 skoMC1 (-2))<(skoSC1 ((skoMC1 skoMC1 skoMC1 (2))+(skoSC1 ((skoMC1 skoMC1 skoMC1 (-1))+(skoSC1 skoMC1 skoMC1 skoMC1 (-1))))))]/\[[(skoSC1 ((skoMC1 skoMC1 skoMC1 (-1))+(skoSC1 skoMC1 skoMC1 skoMC1 (-1))))<=0]/\[[(skoSC1 skoMC1 skoMC1 skoMC1 (-1))<=(skoMC1 skoMC1 skoMC1)]/\[[(skoMC1 skoMC1 skoMC1 (-1))<(skoSC1 skoMC1 skoMC1 skoMC1)]/\[[(skoMC1 skoMC1 skoMC1 (-2))<=0]/\[[0<(skoMC1 skoMC1 skoMC1 (2))]/\[[skoSC1<=5/4]/\[[2<=skoMC1]/\[[0<=skoSC1]/\[[0<skoMC1]/\[[0<=skoMC1]/\[[(skoMC1 (-1))<(skoSC1 skoMC1)]/\[[(skoSC1 skoMC1 (-1))<=skoMC1]/\[[(skoMC1 skoMC1 skoMC1 (-2))<(skoSC1 skoMC1 skoMC1 skoMC1 (2))]/\[[(skoSC1 skoMC1 skoMC1 skoMC1 (-2))<=(skoMC1 skoMC1 skoMC1 (2))]/\[[(skoMC1 skoMC1 skoMC1 (-2+(skoMC1 (-6))))<(skoSC1 ((skoMC1 skoMC1 skoMC1 skoMC1 (12))+(skoSC1 ((skoMC1 skoMC1 skoMC1 (-1+(skoMC1 (6))))+(skoSC1 ((skoMC1 skoMC1 skoMC1 (-1))+(skoSC1 ((skoMC1 skoMC1 skoMC1 (1/12))+(skoSC1 skoMC1 skoMC1 skoMC1 (1/12))))))))))]/\[(skoSC1 ((skoMC1 skoMC1 skoMC1 skoMC1 (-12))+(skoSC1 ((skoMC1 skoMC1 skoMC1 (1+(skoMC1 (-6))))+(skoSC1 ((skoMC1 skoMC1 skoMC1)+(skoSC1 ((skoMC1 skoMC1 skoMC1 (-1/12))+(skoSC1 skoMC1 skoMC1 skoMC1 (-1/12))))))))))<=(skoMC1 skoMC1 skoMC1 (2+(skoMC1 (6))))]]]]]]]]]]]]]]]]]]]]]]]]]].

% In SMTLib2 format:
(declare-fun skoMC1 () Real) (declare-fun skoSC1 () Real) (assert (and (<= (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (* skoMC1 (+ 7. (* skoMC1 6.)))))) (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (+ (- 1.) (* skoMC1 (* skoMC1 6.)))))) (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (* skoMC1 (+ (- 3.) (* skoMC1 2.)))))) (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (+ (/ 1. 3.) (* skoMC1 (- 2.)))))) (* skoSC1 (* skoMC1 (* skoMC1 (* skoMC1 (/ 1. 3.))))))))))))) (* skoMC1 (* skoMC1 (* skoMC1 (+ (- 2.) (* skoMC1 (+ (- 6.) (* skoMC1 (- 2.))))))))) (and (> (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 2.))) (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (- 1.)))) (* skoSC1 (* skoMC1 (* skoMC1 (* skoMC1 (- 1.))))))))) (* skoMC1 (* skoMC1 (* skoMC1 (- 2.))))) (and (<= (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (+ 1. (* skoMC1 (- 3.)))))) (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (+ 2. (* skoMC1 3.))))) (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (+ (/ (- 1.) 6.) skoMC1)))) (* skoSC1 (* skoMC1 (* skoMC1 (* skoMC1 (/ (- 1.) 4.))))))))))) (* skoMC1 (* skoMC1 (* skoMC1 (+ 2. (* skoMC1 5.)))))) (and (<= (* skoSC1 (+ (* skoMC1 (+ 1. (* skoMC1 (- 3.)))) (* skoSC1 (+ (* skoMC1 (+ 2. (* skoMC1 3.))) (* skoSC1 (+ (* skoMC1 (+ (/ (- 1.) 6.) skoMC1)) (* skoSC1 (* skoMC1 (/ (- 1.) 4.))))))))) (* skoMC1 (+ 2. (* skoMC1 5.)))) (and (> (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (+ (- 1.) (* skoMC1 3.))))) (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (+ (- 2.) (* skoMC1 (- 3.)))))) (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (+ (/ 1. 6.) (* skoMC1 (- 1.)))))) (* skoSC1 (* skoMC1 (* skoMC1 (* skoMC1 (/ 1. 4.))))))))))) (* skoMC1 (* skoMC1 (* skoMC1 (+ (- 2.) (* skoMC1 (- 5.))))))) (and (> (* skoSC1 (+ (* skoMC1 (+ (- 1.) (* skoMC1 3.))) (* skoSC1 (+ (* skoMC1 (+ (- 2.) (* skoMC1 (- 3.)))) (* skoSC1 (+ (* skoMC1 (+ (/ 1. 6.) (* skoMC1 (- 1.)))) (* skoSC1 (* skoMC1 (/ 1. 4.))))))))) (* skoMC1 (+ (- 2.) (* skoMC1 (- 5.))))) (and (> skoSC1 0.) (and (<= (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (- 2.)))) (* skoSC1 (+ (* skoMC1 (* skoMC1 skoMC1)) (* skoSC1 (* skoMC1 (* skoMC1 skoMC1))))))) (* skoMC1 (* skoMC1 (* skoMC1 2.)))) (and (> (* skoSC1 (+ (* skoMC1 (* skoMC1 skoMC1)) (* skoSC1 (* skoMC1 (* skoMC1 skoMC1))))) 0.) (and (> (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 2.))) (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (- 1.)))) (* skoSC1 (* skoMC1 (* skoMC1 (* skoMC1 (- 1.))))))))) (* skoMC1 (* skoMC1 (* skoMC1 (- 2.))))) (and (<= (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (- 1.)))) (* skoSC1 (* skoMC1 (* skoMC1 (* skoMC1 (- 1.))))))) 0.) (and (<= (* skoSC1 (* skoMC1 (* skoMC1 (* skoMC1 (- 1.))))) (* skoMC1 (* skoMC1 skoMC1))) (and (> (* skoSC1 (* skoMC1 (* skoMC1 skoMC1))) (* skoMC1 (* skoMC1 (* skoMC1 (- 1.))))) (and (<= (* skoMC1 (* skoMC1 (* skoMC1 (- 2.)))) 0.) (and (> (* skoMC1 (* skoMC1 (* skoMC1 2.))) 0.) (and (<= skoSC1 (/ 5. 4.)) (and (<= 2. skoMC1) (and (<= 0. skoSC1) (and (> skoMC1 0.) (and (<= 0. skoMC1) (and (> (* skoSC1 skoMC1) (* skoMC1 (- 1.))) (and (<= (* skoSC1 (* skoMC1 (- 1.))) skoMC1) (and (> (* skoSC1 (* skoMC1 (* skoMC1 (* skoMC1 2.)))) (* skoMC1 (* skoMC1 (* skoMC1 (- 2.))))) (and (<= (* skoSC1 (* skoMC1 (* skoMC1 (* skoMC1 (- 2.))))) (* skoMC1 (* skoMC1 (* skoMC1 2.)))) (and (> (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (* skoMC1 12.)))) (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (+ (- 1.) (* skoMC1 6.))))) (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (- 1.)))) (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (/ 1. 12.)))) (* skoSC1 (* skoMC1 (* skoMC1 (* skoMC1 (/ 1. 12.))))))))))))) (* skoMC1 (* skoMC1 (* skoMC1 (+ (- 2.) (* skoMC1 (- 6.))))))) (<= (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (* skoMC1 (- 12.))))) (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (+ 1. (* skoMC1 (- 6.)))))) (* skoSC1 (+ (* skoMC1 (* skoMC1 skoMC1)) (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (/ (- 1.) 12.)))) (* skoSC1 (* skoMC1 (* skoMC1 (* skoMC1 (/ (- 1.) 12.))))))))))))) (* skoMC1 (* skoMC1 (* skoMC1 (+ 2. (* skoMC1 6.))))))))))))))))))))))))))))))))

% In GRF format:
(sequent " MetiTarski formula " (antecedent (<= (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (* skoMC1 (+ 7. (* skoMC1 6.)))))) (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (+ (- 1.) (* skoMC1 (* skoMC1 6.)))))) (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (* skoMC1 (+ (- 3.) (* skoMC1 2.)))))) (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (+ (/ 1. 3.) (* skoMC1 (- 2.)))))) (* skoSC1 (* skoMC1 (* skoMC1 (* skoMC1 (/ 1. 3.))))))))))))) (* skoMC1 (* skoMC1 (* skoMC1 (+ (- 2.) (* skoMC1 (+ (- 6.) (* skoMC1 (- 2.))))))))) (> (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 2.))) (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (- 1.)))) (* skoSC1 (* skoMC1 (* skoMC1 (* skoMC1 (- 1.))))))))) (* skoMC1 (* skoMC1 (* skoMC1 (- 2.))))) (<= (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (+ 1. (* skoMC1 (- 3.)))))) (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (+ 2. (* skoMC1 3.))))) (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (+ (/ (- 1.) 6.) skoMC1)))) (* skoSC1 (* skoMC1 (* skoMC1 (* skoMC1 (/ (- 1.) 4.))))))))))) (* skoMC1 (* skoMC1 (* skoMC1 (+ 2. (* skoMC1 5.)))))) (<= (* skoSC1 (+ (* skoMC1 (+ 1. (* skoMC1 (- 3.)))) (* skoSC1 (+ (* skoMC1 (+ 2. (* skoMC1 3.))) (* skoSC1 (+ (* skoMC1 (+ (/ (- 1.) 6.) skoMC1)) (* skoSC1 (* skoMC1 (/ (- 1.) 4.))))))))) (* skoMC1 (+ 2. (* skoMC1 5.)))) (> (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (+ (- 1.) (* skoMC1 3.))))) (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (+ (- 2.) (* skoMC1 (- 3.)))))) (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (+ (/ 1. 6.) (* skoMC1 (- 1.)))))) (* skoSC1 (* skoMC1 (* skoMC1 (* skoMC1 (/ 1. 4.))))))))))) (* skoMC1 (* skoMC1 (* skoMC1 (+ (- 2.) (* skoMC1 (- 5.))))))) (> (* skoSC1 (+ (* skoMC1 (+ (- 1.) (* skoMC1 3.))) (* skoSC1 (+ (* skoMC1 (+ (- 2.) (* skoMC1 (- 3.)))) (* skoSC1 (+ (* skoMC1 (+ (/ 1. 6.) (* skoMC1 (- 1.)))) (* skoSC1 (* skoMC1 (/ 1. 4.))))))))) (* skoMC1 (+ (- 2.) (* skoMC1 (- 5.))))) (> skoSC1 0.) (<= (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (- 2.)))) (* skoSC1 (+ (* skoMC1 (* skoMC1 skoMC1)) (* skoSC1 (* skoMC1 (* skoMC1 skoMC1))))))) (* skoMC1 (* skoMC1 (* skoMC1 2.)))) (> (* skoSC1 (+ (* skoMC1 (* skoMC1 skoMC1)) (* skoSC1 (* skoMC1 (* skoMC1 skoMC1))))) 0.) (> (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 2.))) (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (- 1.)))) (* skoSC1 (* skoMC1 (* skoMC1 (* skoMC1 (- 1.))))))))) (* skoMC1 (* skoMC1 (* skoMC1 (- 2.))))) (<= (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (- 1.)))) (* skoSC1 (* skoMC1 (* skoMC1 (* skoMC1 (- 1.))))))) 0.) (<= (* skoSC1 (* skoMC1 (* skoMC1 (* skoMC1 (- 1.))))) (* skoMC1 (* skoMC1 skoMC1))) (> (* skoSC1 (* skoMC1 (* skoMC1 skoMC1))) (* skoMC1 (* skoMC1 (* skoMC1 (- 1.))))) (<= (* skoMC1 (* skoMC1 (* skoMC1 (- 2.)))) 0.) (> (* skoMC1 (* skoMC1 (* skoMC1 2.))) 0.) (<= skoSC1 (/ 5. 4.)) (<= 2. skoMC1) (<= 0. skoSC1) (> skoMC1 0.) (<= 0. skoMC1) (> (* skoSC1 skoMC1) (* skoMC1 (- 1.))) (<= (* skoSC1 (* skoMC1 (- 1.))) skoMC1) (> (* skoSC1 (* skoMC1 (* skoMC1 (* skoMC1 2.)))) (* skoMC1 (* skoMC1 (* skoMC1 (- 2.))))) (<= (* skoSC1 (* skoMC1 (* skoMC1 (* skoMC1 (- 2.))))) (* skoMC1 (* skoMC1 (* skoMC1 2.)))) (> (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (* skoMC1 12.)))) (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (+ (- 1.) (* skoMC1 6.))))) (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (- 1.)))) (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (/ 1. 12.)))) (* skoSC1 (* skoMC1 (* skoMC1 (* skoMC1 (/ 1. 12.))))))))))))) (* skoMC1 (* skoMC1 (* skoMC1 (+ (- 2.) (* skoMC1 (- 6.)))))))) (succedent (> (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (* skoMC1 (- 12.))))) (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (+ 1. (* skoMC1 (- 6.)))))) (* skoSC1 (+ (* skoMC1 (* skoMC1 skoMC1)) (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (/ (- 1.) 12.)))) (* skoSC1 (* skoMC1 (* skoMC1 (* skoMC1 (/ (- 1.) 12.))))))))))))) (* skoMC1 (* skoMC1 (* skoMC1 (+ 2. (* skoMC1 6.))))))))
-----[end problem]-----

-----[begin problem]-----
% In Mathematica format:
Timing[Resolve[Exists[{skoMC1,skoSC1}, And[skoMC1*skoMC1*skoMC1*-1<=0,skoSC1*skoMC1*-1<=skoMC1,skoSC1*skoMC1>skoMC1*-1,0<=skoMC1,skoMC1>0,0<=skoSC1,2<=skoMC1,skoSC1<=(5/4),skoMC1*skoMC1*skoMC1*2>0,skoMC1*skoMC1*skoMC1*-2<=0,skoSC1*skoMC1*skoMC1*skoMC1>skoMC1*skoMC1*skoMC1*-1]], Reals]]

% In QepcadB format:
(E skoMC1) (E skoSC1) [[(skoMC1 skoMC1 skoMC1 (-1))<=0]/\[[(skoSC1 skoMC1 (-1))<=skoMC1]/\[[(skoMC1 (-1))<(skoSC1 skoMC1)]/\[[0<=skoMC1]/\[[0<skoMC1]/\[[0<=skoSC1]/\[[2<=skoMC1]/\[[skoSC1<=5/4]/\[[0<(skoMC1 skoMC1 skoMC1 (2))]/\[[(skoMC1 skoMC1 skoMC1 (-2))<=0]/\[(skoMC1 skoMC1 skoMC1 (-1))<(skoSC1 skoMC1 skoMC1 skoMC1)]]]]]]]]]]].

% In SMTLib2 format:
(declare-fun skoMC1 () Real) (declare-fun skoSC1 () Real) (assert (and (<= (* skoMC1 (* skoMC1 (* skoMC1 (- 1.)))) 0.) (and (<= (* skoSC1 (* skoMC1 (- 1.))) skoMC1) (and (> (* skoSC1 skoMC1) (* skoMC1 (- 1.))) (and (<= 0. skoMC1) (and (> skoMC1 0.) (and (<= 0. skoSC1) (and (<= 2. skoMC1) (and (<= skoSC1 (/ 5. 4.)) (and (> (* skoMC1 (* skoMC1 (* skoMC1 2.))) 0.) (and (<= (* skoMC1 (* skoMC1 (* skoMC1 (- 2.)))) 0.) (> (* skoSC1 (* skoMC1 (* skoMC1 skoMC1))) (* skoMC1 (* skoMC1 (* skoMC1 (- 1.))))))))))))))))

% In GRF format:
(sequent " MetiTarski formula " (antecedent (<= (* skoMC1 (* skoMC1 (* skoMC1 (- 1.)))) 0.) (<= (* skoSC1 (* skoMC1 (- 1.))) skoMC1) (> (* skoSC1 skoMC1) (* skoMC1 (- 1.))) (<= 0. skoMC1) (> skoMC1 0.) (<= 0. skoSC1) (<= 2. skoMC1) (<= skoSC1 (/ 5. 4.)) (> (* skoMC1 (* skoMC1 (* skoMC1 2.))) 0.) (<= (* skoMC1 (* skoMC1 (* skoMC1 (- 2.)))) 0.)) (succedent (<= (* skoSC1 (* skoMC1 (* skoMC1 skoMC1))) (* skoMC1 (* skoMC1 (* skoMC1 (- 1.)))))))
-----[end problem]-----

-----[begin problem]-----
% In Mathematica format:
Timing[Resolve[Exists[{skoMC1,skoSC1}, And[skoSC1*skoMC1<=skoMC1*-1,skoSC1<=0,skoMC1>0,skoSC1*skoMC1*-1<=skoMC1,skoSC1*skoMC1>skoMC1*-1,0<=skoMC1,skoMC1>0,0<=skoSC1,2<=skoMC1,skoSC1<=(5/4),skoMC1*skoMC1*skoMC1*2>0,skoMC1*skoMC1*skoMC1*-2<=0,skoSC1*skoMC1*skoMC1*skoMC1>skoMC1*skoMC1*skoMC1*-1]], Reals]]

% In QepcadB format:
(E skoMC1) (E skoSC1) [[(skoSC1 skoMC1)<=(skoMC1 (-1))]/\[[skoSC1<=0]/\[[0<skoMC1]/\[[(skoSC1 skoMC1 (-1))<=skoMC1]/\[[(skoMC1 (-1))<(skoSC1 skoMC1)]/\[[0<=skoMC1]/\[[0<skoMC1]/\[[0<=skoSC1]/\[[2<=skoMC1]/\[[skoSC1<=5/4]/\[[0<(skoMC1 skoMC1 skoMC1 (2))]/\[[(skoMC1 skoMC1 skoMC1 (-2))<=0]/\[(skoMC1 skoMC1 skoMC1 (-1))<(skoSC1 skoMC1 skoMC1 skoMC1)]]]]]]]]]]]]].

% In SMTLib2 format:
(declare-fun skoMC1 () Real) (declare-fun skoSC1 () Real) (assert (and (<= (* skoSC1 skoMC1) (* skoMC1 (- 1.))) (and (<= skoSC1 0.) (and (> skoMC1 0.) (and (<= (* skoSC1 (* skoMC1 (- 1.))) skoMC1) (and (> (* skoSC1 skoMC1) (* skoMC1 (- 1.))) (and (<= 0. skoMC1) (and (> skoMC1 0.) (and (<= 0. skoSC1) (and (<= 2. skoMC1) (and (<= skoSC1 (/ 5. 4.)) (and (> (* skoMC1 (* skoMC1 (* skoMC1 2.))) 0.) (and (<= (* skoMC1 (* skoMC1 (* skoMC1 (- 2.)))) 0.) (> (* skoSC1 (* skoMC1 (* skoMC1 skoMC1))) (* skoMC1 (* skoMC1 (* skoMC1 (- 1.))))))))))))))))))

% In GRF format:
(sequent " MetiTarski formula " (antecedent (<= (* skoSC1 skoMC1) (* skoMC1 (- 1.))) (<= skoSC1 0.) (> skoMC1 0.) (<= (* skoSC1 (* skoMC1 (- 1.))) skoMC1) (> (* skoSC1 skoMC1) (* skoMC1 (- 1.))) (<= 0. skoMC1) (> skoMC1 0.) (<= 0. skoSC1) (<= 2. skoMC1) (<= skoSC1 (/ 5. 4.)) (> (* skoMC1 (* skoMC1 (* skoMC1 2.))) 0.) (<= (* skoMC1 (* skoMC1 (* skoMC1 (- 2.)))) 0.)) (succedent (<= (* skoSC1 (* skoMC1 (* skoMC1 skoMC1))) (* skoMC1 (* skoMC1 (* skoMC1 (- 1.)))))))
-----[end problem]-----

-----[begin problem]-----
% In Mathematica format:
Timing[Resolve[Exists[{skoMC1,skoSC1}, And[skoMC1>0,skoSC1>0,skoSC1*skoMC1*-1<=skoMC1,skoSC1*skoMC1>skoMC1*-1,0<=skoMC1,skoMC1>0,0<=skoSC1,2<=skoMC1,skoSC1<=(5/4),skoMC1*skoMC1*skoMC1*2>0,skoMC1*skoMC1*skoMC1*-2<=0,skoSC1*skoMC1*skoMC1*skoMC1>skoMC1*skoMC1*skoMC1*-1]], Reals]]

% In QepcadB format:
(E skoMC1) (E skoSC1) [[0<skoMC1]/\[[0<skoSC1]/\[[(skoSC1 skoMC1 (-1))<=skoMC1]/\[[(skoMC1 (-1))<(skoSC1 skoMC1)]/\[[0<=skoMC1]/\[[0<skoMC1]/\[[0<=skoSC1]/\[[2<=skoMC1]/\[[skoSC1<=5/4]/\[[0<(skoMC1 skoMC1 skoMC1 (2))]/\[[(skoMC1 skoMC1 skoMC1 (-2))<=0]/\[(skoMC1 skoMC1 skoMC1 (-1))<(skoSC1 skoMC1 skoMC1 skoMC1)]]]]]]]]]]]].

% In SMTLib2 format:
(declare-fun skoMC1 () Real) (declare-fun skoSC1 () Real) (assert (and (> skoMC1 0.) (and (> skoSC1 0.) (and (<= (* skoSC1 (* skoMC1 (- 1.))) skoMC1) (and (> (* skoSC1 skoMC1) (* skoMC1 (- 1.))) (and (<= 0. skoMC1) (and (> skoMC1 0.) (and (<= 0. skoSC1) (and (<= 2. skoMC1) (and (<= skoSC1 (/ 5. 4.)) (and (> (* skoMC1 (* skoMC1 (* skoMC1 2.))) 0.) (and (<= (* skoMC1 (* skoMC1 (* skoMC1 (- 2.)))) 0.) (> (* skoSC1 (* skoMC1 (* skoMC1 skoMC1))) (* skoMC1 (* skoMC1 (* skoMC1 (- 1.)))))))))))))))))

% In GRF format:
(sequent " MetiTarski formula " (antecedent (> skoMC1 0.) (> skoSC1 0.) (<= (* skoSC1 (* skoMC1 (- 1.))) skoMC1) (> (* skoSC1 skoMC1) (* skoMC1 (- 1.))) (<= 0. skoMC1) (> skoMC1 0.) (<= 0. skoSC1) (<= 2. skoMC1) (<= skoSC1 (/ 5. 4.)) (> (* skoMC1 (* skoMC1 (* skoMC1 2.))) 0.) (<= (* skoMC1 (* skoMC1 (* skoMC1 (- 2.)))) 0.)) (succedent (<= (* skoSC1 (* skoMC1 (* skoMC1 skoMC1))) (* skoMC1 (* skoMC1 (* skoMC1 (- 1.)))))))
-----[end problem]-----

-----[begin problem]-----
% In Mathematica format:
Timing[Resolve[Exists[{skoMC1,skoSC1}, And[skoMC1<=0,skoSC1<=0,skoSC1*skoMC1*-1<=skoMC1,skoSC1*skoMC1>skoMC1*-1,0<=skoMC1,skoMC1>0,0<=skoSC1,2<=skoMC1,skoSC1<=(5/4),skoMC1*skoMC1*skoMC1*2>0,skoMC1*skoMC1*skoMC1*-2<=0,skoSC1*skoMC1*skoMC1*skoMC1>skoMC1*skoMC1*skoMC1*-1]], Reals]]

% In QepcadB format:
(E skoMC1) (E skoSC1) [[skoMC1<=0]/\[[skoSC1<=0]/\[[(skoSC1 skoMC1 (-1))<=skoMC1]/\[[(skoMC1 (-1))<(skoSC1 skoMC1)]/\[[0<=skoMC1]/\[[0<skoMC1]/\[[0<=skoSC1]/\[[2<=skoMC1]/\[[skoSC1<=5/4]/\[[0<(skoMC1 skoMC1 skoMC1 (2))]/\[[(skoMC1 skoMC1 skoMC1 (-2))<=0]/\[(skoMC1 skoMC1 skoMC1 (-1))<(skoSC1 skoMC1 skoMC1 skoMC1)]]]]]]]]]]]].

% In SMTLib2 format:
(declare-fun skoMC1 () Real) (declare-fun skoSC1 () Real) (assert (and (<= skoMC1 0.) (and (<= skoSC1 0.) (and (<= (* skoSC1 (* skoMC1 (- 1.))) skoMC1) (and (> (* skoSC1 skoMC1) (* skoMC1 (- 1.))) (and (<= 0. skoMC1) (and (> skoMC1 0.) (and (<= 0. skoSC1) (and (<= 2. skoMC1) (and (<= skoSC1 (/ 5. 4.)) (and (> (* skoMC1 (* skoMC1 (* skoMC1 2.))) 0.) (and (<= (* skoMC1 (* skoMC1 (* skoMC1 (- 2.)))) 0.) (> (* skoSC1 (* skoMC1 (* skoMC1 skoMC1))) (* skoMC1 (* skoMC1 (* skoMC1 (- 1.)))))))))))))))))

% In GRF format:
(sequent " MetiTarski formula " (antecedent (<= skoMC1 0.) (<= skoSC1 0.) (<= (* skoSC1 (* skoMC1 (- 1.))) skoMC1) (> (* skoSC1 skoMC1) (* skoMC1 (- 1.))) (<= 0. skoMC1) (> skoMC1 0.) (<= 0. skoSC1) (<= 2. skoMC1) (<= skoSC1 (/ 5. 4.)) (> (* skoMC1 (* skoMC1 (* skoMC1 2.))) 0.) (<= (* skoMC1 (* skoMC1 (* skoMC1 (- 2.)))) 0.)) (succedent (<= (* skoSC1 (* skoMC1 (* skoMC1 skoMC1))) (* skoMC1 (* skoMC1 (* skoMC1 (- 1.)))))))
-----[end problem]-----

-----[begin problem]-----
% In Mathematica format:
Timing[Resolve[Exists[{skoMC1,skoSC1}, And[skoSC1>0,skoSC1*skoMC1*-1<=skoMC1,skoSC1*skoMC1>skoMC1*-1,0<=skoMC1,skoMC1>0,0<=skoSC1,2<=skoMC1,skoSC1<=(5/4),skoMC1*skoMC1*skoMC1*2>0,skoMC1*skoMC1*skoMC1*-2<=0,skoSC1*skoMC1*skoMC1*skoMC1>skoMC1*skoMC1*skoMC1*-1]], Reals]]

% In QepcadB format:
(E skoMC1) (E skoSC1) [[0<skoSC1]/\[[(skoSC1 skoMC1 (-1))<=skoMC1]/\[[(skoMC1 (-1))<(skoSC1 skoMC1)]/\[[0<=skoMC1]/\[[0<skoMC1]/\[[0<=skoSC1]/\[[2<=skoMC1]/\[[skoSC1<=5/4]/\[[0<(skoMC1 skoMC1 skoMC1 (2))]/\[[(skoMC1 skoMC1 skoMC1 (-2))<=0]/\[(skoMC1 skoMC1 skoMC1 (-1))<(skoSC1 skoMC1 skoMC1 skoMC1)]]]]]]]]]]].

% In SMTLib2 format:
(declare-fun skoMC1 () Real) (declare-fun skoSC1 () Real) (assert (and (> skoSC1 0.) (and (<= (* skoSC1 (* skoMC1 (- 1.))) skoMC1) (and (> (* skoSC1 skoMC1) (* skoMC1 (- 1.))) (and (<= 0. skoMC1) (and (> skoMC1 0.) (and (<= 0. skoSC1) (and (<= 2. skoMC1) (and (<= skoSC1 (/ 5. 4.)) (and (> (* skoMC1 (* skoMC1 (* skoMC1 2.))) 0.) (and (<= (* skoMC1 (* skoMC1 (* skoMC1 (- 2.)))) 0.) (> (* skoSC1 (* skoMC1 (* skoMC1 skoMC1))) (* skoMC1 (* skoMC1 (* skoMC1 (- 1.))))))))))))))))

% In GRF format:
(sequent " MetiTarski formula " (antecedent (> skoSC1 0.) (<= (* skoSC1 (* skoMC1 (- 1.))) skoMC1) (> (* skoSC1 skoMC1) (* skoMC1 (- 1.))) (<= 0. skoMC1) (> skoMC1 0.) (<= 0. skoSC1) (<= 2. skoMC1) (<= skoSC1 (/ 5. 4.)) (> (* skoMC1 (* skoMC1 (* skoMC1 2.))) 0.) (<= (* skoMC1 (* skoMC1 (* skoMC1 (- 2.)))) 0.)) (succedent (<= (* skoSC1 (* skoMC1 (* skoMC1 skoMC1))) (* skoMC1 (* skoMC1 (* skoMC1 (- 1.)))))))
-----[end problem]-----

-----[begin problem]-----
% In Mathematica format:
Timing[Resolve[Exists[{skoMC1,skoSC1}, And[0<=skoMC1,skoSC1*skoMC1*-1<=skoMC1,skoSC1*skoMC1>skoMC1*-1,0<=skoMC1,skoMC1>0,0<=skoSC1,2<=skoMC1,skoSC1<=(5/4),skoMC1*skoMC1*skoMC1*2>0,skoMC1*skoMC1*skoMC1*-2<=0,skoSC1*skoMC1*skoMC1*skoMC1>skoMC1*skoMC1*skoMC1*-1]], Reals]]

% In QepcadB format:
(E skoMC1) (E skoSC1) [[0<=skoMC1]/\[[(skoSC1 skoMC1 (-1))<=skoMC1]/\[[(skoMC1 (-1))<(skoSC1 skoMC1)]/\[[0<=skoMC1]/\[[0<skoMC1]/\[[0<=skoSC1]/\[[2<=skoMC1]/\[[skoSC1<=5/4]/\[[0<(skoMC1 skoMC1 skoMC1 (2))]/\[[(skoMC1 skoMC1 skoMC1 (-2))<=0]/\[(skoMC1 skoMC1 skoMC1 (-1))<(skoSC1 skoMC1 skoMC1 skoMC1)]]]]]]]]]]].

% In SMTLib2 format:
(declare-fun skoMC1 () Real) (declare-fun skoSC1 () Real) (assert (and (<= 0. skoMC1) (and (<= (* skoSC1 (* skoMC1 (- 1.))) skoMC1) (and (> (* skoSC1 skoMC1) (* skoMC1 (- 1.))) (and (<= 0. skoMC1) (and (> skoMC1 0.) (and (<= 0. skoSC1) (and (<= 2. skoMC1) (and (<= skoSC1 (/ 5. 4.)) (and (> (* skoMC1 (* skoMC1 (* skoMC1 2.))) 0.) (and (<= (* skoMC1 (* skoMC1 (* skoMC1 (- 2.)))) 0.) (> (* skoSC1 (* skoMC1 (* skoMC1 skoMC1))) (* skoMC1 (* skoMC1 (* skoMC1 (- 1.))))))))))))))))

% In GRF format:
(sequent " MetiTarski formula " (antecedent (<= 0. skoMC1) (<= (* skoSC1 (* skoMC1 (- 1.))) skoMC1) (> (* skoSC1 skoMC1) (* skoMC1 (- 1.))) (<= 0. skoMC1) (> skoMC1 0.) (<= 0. skoSC1) (<= 2. skoMC1) (<= skoSC1 (/ 5. 4.)) (> (* skoMC1 (* skoMC1 (* skoMC1 2.))) 0.) (<= (* skoMC1 (* skoMC1 (* skoMC1 (- 2.)))) 0.)) (succedent (<= (* skoSC1 (* skoMC1 (* skoMC1 skoMC1))) (* skoMC1 (* skoMC1 (* skoMC1 (- 1.)))))))
-----[end problem]-----

-----[begin problem]-----
% In Mathematica format:
Timing[Resolve[Exists[{skoSC1,skoMC1}, And[skoSC1<=0,skoSC1*(skoMC1*(-1+skoMC1*3)+skoSC1*(skoMC1*(-2+skoMC1*-3)+skoSC1*(skoMC1*skoMC1*-1+skoSC1*skoMC1*(1/12))))>skoMC1*(-2+skoMC1*-5),skoMC1>0,skoSC1*skoMC1*-1<=skoMC1,skoSC1*skoMC1>skoMC1*-1,0<=skoMC1,skoMC1>0,0<=skoSC1,2<=skoMC1,skoSC1<=(5/4),skoMC1*skoMC1*skoMC1*2>0,skoMC1*skoMC1*skoMC1*-2<=0,skoSC1*skoMC1*skoMC1*skoMC1>skoMC1*skoMC1*skoMC1*-1]], Reals]]

% In QepcadB format:
(E skoSC1) (E skoMC1) [[skoSC1<=0]/\[[(skoMC1 (-2+(skoMC1 (-5))))<(skoSC1 ((skoMC1 (-1+(skoMC1 (3))))+(skoSC1 ((skoMC1 (-2+(skoMC1 (-3))))+(skoSC1 ((skoMC1 skoMC1 (-1))+(skoSC1 skoMC1 (1/12))))))))]/\[[0<skoMC1]/\[[(skoSC1 skoMC1 (-1))<=skoMC1]/\[[(skoMC1 (-1))<(skoSC1 skoMC1)]/\[[0<=skoMC1]/\[[0<skoMC1]/\[[0<=skoSC1]/\[[2<=skoMC1]/\[[skoSC1<=5/4]/\[[0<(skoMC1 skoMC1 skoMC1 (2))]/\[[(skoMC1 skoMC1 skoMC1 (-2))<=0]/\[(skoMC1 skoMC1 skoMC1 (-1))<(skoSC1 skoMC1 skoMC1 skoMC1)]]]]]]]]]]]]].

% In SMTLib2 format:
(declare-fun skoSC1 () Real) (declare-fun skoMC1 () Real) (assert (and (<= skoSC1 0.) (and (> (* skoSC1 (+ (* skoMC1 (+ (- 1.) (* skoMC1 3.))) (* skoSC1 (+ (* skoMC1 (+ (- 2.) (* skoMC1 (- 3.)))) (* skoSC1 (+ (* skoMC1 (* skoMC1 (- 1.))) (* skoSC1 (* skoMC1 (/ 1. 12.))))))))) (* skoMC1 (+ (- 2.) (* skoMC1 (- 5.))))) (and (> skoMC1 0.) (and (<= (* skoSC1 (* skoMC1 (- 1.))) skoMC1) (and (> (* skoSC1 skoMC1) (* skoMC1 (- 1.))) (and (<= 0. skoMC1) (and (> skoMC1 0.) (and (<= 0. skoSC1) (and (<= 2. skoMC1) (and (<= skoSC1 (/ 5. 4.)) (and (> (* skoMC1 (* skoMC1 (* skoMC1 2.))) 0.) (and (<= (* skoMC1 (* skoMC1 (* skoMC1 (- 2.)))) 0.) (> (* skoSC1 (* skoMC1 (* skoMC1 skoMC1))) (* skoMC1 (* skoMC1 (* skoMC1 (- 1.))))))))))))))))))

% In GRF format:
(sequent " MetiTarski formula " (antecedent (<= skoSC1 0.) (> (* skoSC1 (+ (* skoMC1 (+ (- 1.) (* skoMC1 3.))) (* skoSC1 (+ (* skoMC1 (+ (- 2.) (* skoMC1 (- 3.)))) (* skoSC1 (+ (* skoMC1 (* skoMC1 (- 1.))) (* skoSC1 (* skoMC1 (/ 1. 12.))))))))) (* skoMC1 (+ (- 2.) (* skoMC1 (- 5.))))) (> skoMC1 0.) (<= (* skoSC1 (* skoMC1 (- 1.))) skoMC1) (> (* skoSC1 skoMC1) (* skoMC1 (- 1.))) (<= 0. skoMC1) (> skoMC1 0.) (<= 0. skoSC1) (<= 2. skoMC1) (<= skoSC1 (/ 5. 4.)) (> (* skoMC1 (* skoMC1 (* skoMC1 2.))) 0.) (<= (* skoMC1 (* skoMC1 (* skoMC1 (- 2.)))) 0.)) (succedent (<= (* skoSC1 (* skoMC1 (* skoMC1 skoMC1))) (* skoMC1 (* skoMC1 (* skoMC1 (- 1.)))))))
-----[end problem]-----

-----[begin problem]-----
% In Mathematica format:
Timing[Resolve[Exists[{skoSC1,skoMC1}, And[skoSC1*(skoMC1*(-1+skoMC1*3)+skoSC1*(skoMC1*(-2+skoMC1*-3)+skoSC1*(skoMC1*skoMC1*-1+skoSC1*skoMC1*(1/12))))<=skoMC1*(-2+skoMC1*-5),skoMC1>0,skoSC1>0,skoSC1*skoMC1*-1<=skoMC1,skoSC1*skoMC1>skoMC1*-1,0<=skoMC1,skoMC1>0,0<=skoSC1,2<=skoMC1,skoSC1<=(5/4),skoMC1*skoMC1*skoMC1*2>0,skoMC1*skoMC1*skoMC1*-2<=0,skoSC1*skoMC1*skoMC1*skoMC1>skoMC1*skoMC1*skoMC1*-1]], Reals]]

% In QepcadB format:
(E skoSC1) (E skoMC1) [[(skoSC1 ((skoMC1 (-1+(skoMC1 (3))))+(skoSC1 ((skoMC1 (-2+(skoMC1 (-3))))+(skoSC1 ((skoMC1 skoMC1 (-1))+(skoSC1 skoMC1 (1/12))))))))<=(skoMC1 (-2+(skoMC1 (-5))))]/\[[0<skoMC1]/\[[0<skoSC1]/\[[(skoSC1 skoMC1 (-1))<=skoMC1]/\[[(skoMC1 (-1))<(skoSC1 skoMC1)]/\[[0<=skoMC1]/\[[0<skoMC1]/\[[0<=skoSC1]/\[[2<=skoMC1]/\[[skoSC1<=5/4]/\[[0<(skoMC1 skoMC1 skoMC1 (2))]/\[[(skoMC1 skoMC1 skoMC1 (-2))<=0]/\[(skoMC1 skoMC1 skoMC1 (-1))<(skoSC1 skoMC1 skoMC1 skoMC1)]]]]]]]]]]]]].

% In SMTLib2 format:
(declare-fun skoSC1 () Real) (declare-fun skoMC1 () Real) (assert (and (<= (* skoSC1 (+ (* skoMC1 (+ (- 1.) (* skoMC1 3.))) (* skoSC1 (+ (* skoMC1 (+ (- 2.) (* skoMC1 (- 3.)))) (* skoSC1 (+ (* skoMC1 (* skoMC1 (- 1.))) (* skoSC1 (* skoMC1 (/ 1. 12.))))))))) (* skoMC1 (+ (- 2.) (* skoMC1 (- 5.))))) (and (> skoMC1 0.) (and (> skoSC1 0.) (and (<= (* skoSC1 (* skoMC1 (- 1.))) skoMC1) (and (> (* skoSC1 skoMC1) (* skoMC1 (- 1.))) (and (<= 0. skoMC1) (and (> skoMC1 0.) (and (<= 0. skoSC1) (and (<= 2. skoMC1) (and (<= skoSC1 (/ 5. 4.)) (and (> (* skoMC1 (* skoMC1 (* skoMC1 2.))) 0.) (and (<= (* skoMC1 (* skoMC1 (* skoMC1 (- 2.)))) 0.) (> (* skoSC1 (* skoMC1 (* skoMC1 skoMC1))) (* skoMC1 (* skoMC1 (* skoMC1 (- 1.))))))))))))))))))

% In GRF format:
(sequent " MetiTarski formula " (antecedent (<= (* skoSC1 (+ (* skoMC1 (+ (- 1.) (* skoMC1 3.))) (* skoSC1 (+ (* skoMC1 (+ (- 2.) (* skoMC1 (- 3.)))) (* skoSC1 (+ (* skoMC1 (* skoMC1 (- 1.))) (* skoSC1 (* skoMC1 (/ 1. 12.))))))))) (* skoMC1 (+ (- 2.) (* skoMC1 (- 5.))))) (> skoMC1 0.) (> skoSC1 0.) (<= (* skoSC1 (* skoMC1 (- 1.))) skoMC1) (> (* skoSC1 skoMC1) (* skoMC1 (- 1.))) (<= 0. skoMC1) (> skoMC1 0.) (<= 0. skoSC1) (<= 2. skoMC1) (<= skoSC1 (/ 5. 4.)) (> (* skoMC1 (* skoMC1 (* skoMC1 2.))) 0.) (<= (* skoMC1 (* skoMC1 (* skoMC1 (- 2.)))) 0.)) (succedent (<= (* skoSC1 (* skoMC1 (* skoMC1 skoMC1))) (* skoMC1 (* skoMC1 (* skoMC1 (- 1.)))))))
-----[end problem]-----

-----[begin problem]-----
% In Mathematica format:
Timing[Resolve[Exists[{skoSC1,skoMC1}, And[skoSC1*(skoMC1*(-1+skoMC1*3)+skoSC1*(skoMC1*(-2+skoMC1*-3)+skoSC1*(skoMC1*skoMC1*-1+skoSC1*skoMC1*(1/12))))<=skoMC1*(-2+skoMC1*-5),skoMC1<=0,skoSC1*skoMC1*-1<=skoMC1,skoSC1*skoMC1>skoMC1*-1,0<=skoMC1,skoMC1>0,0<=skoSC1,2<=skoMC1,skoSC1<=(5/4),skoMC1*skoMC1*skoMC1*2>0,skoMC1*skoMC1*skoMC1*-2<=0,skoSC1*skoMC1*skoMC1*skoMC1>skoMC1*skoMC1*skoMC1*-1]], Reals]]

% In QepcadB format:
(E skoSC1) (E skoMC1) [[(skoSC1 ((skoMC1 (-1+(skoMC1 (3))))+(skoSC1 ((skoMC1 (-2+(skoMC1 (-3))))+(skoSC1 ((skoMC1 skoMC1 (-1))+(skoSC1 skoMC1 (1/12))))))))<=(skoMC1 (-2+(skoMC1 (-5))))]/\[[skoMC1<=0]/\[[(skoSC1 skoMC1 (-1))<=skoMC1]/\[[(skoMC1 (-1))<(skoSC1 skoMC1)]/\[[0<=skoMC1]/\[[0<skoMC1]/\[[0<=skoSC1]/\[[2<=skoMC1]/\[[skoSC1<=5/4]/\[[0<(skoMC1 skoMC1 skoMC1 (2))]/\[[(skoMC1 skoMC1 skoMC1 (-2))<=0]/\[(skoMC1 skoMC1 skoMC1 (-1))<(skoSC1 skoMC1 skoMC1 skoMC1)]]]]]]]]]]]].

% In SMTLib2 format:
(declare-fun skoSC1 () Real) (declare-fun skoMC1 () Real) (assert (and (<= (* skoSC1 (+ (* skoMC1 (+ (- 1.) (* skoMC1 3.))) (* skoSC1 (+ (* skoMC1 (+ (- 2.) (* skoMC1 (- 3.)))) (* skoSC1 (+ (* skoMC1 (* skoMC1 (- 1.))) (* skoSC1 (* skoMC1 (/ 1. 12.))))))))) (* skoMC1 (+ (- 2.) (* skoMC1 (- 5.))))) (and (<= skoMC1 0.) (and (<= (* skoSC1 (* skoMC1 (- 1.))) skoMC1) (and (> (* skoSC1 skoMC1) (* skoMC1 (- 1.))) (and (<= 0. skoMC1) (and (> skoMC1 0.) (and (<= 0. skoSC1) (and (<= 2. skoMC1) (and (<= skoSC1 (/ 5. 4.)) (and (> (* skoMC1 (* skoMC1 (* skoMC1 2.))) 0.) (and (<= (* skoMC1 (* skoMC1 (* skoMC1 (- 2.)))) 0.) (> (* skoSC1 (* skoMC1 (* skoMC1 skoMC1))) (* skoMC1 (* skoMC1 (* skoMC1 (- 1.)))))))))))))))))

% In GRF format:
(sequent " MetiTarski formula " (antecedent (<= (* skoSC1 (+ (* skoMC1 (+ (- 1.) (* skoMC1 3.))) (* skoSC1 (+ (* skoMC1 (+ (- 2.) (* skoMC1 (- 3.)))) (* skoSC1 (+ (* skoMC1 (* skoMC1 (- 1.))) (* skoSC1 (* skoMC1 (/ 1. 12.))))))))) (* skoMC1 (+ (- 2.) (* skoMC1 (- 5.))))) (<= skoMC1 0.) (<= (* skoSC1 (* skoMC1 (- 1.))) skoMC1) (> (* skoSC1 skoMC1) (* skoMC1 (- 1.))) (<= 0. skoMC1) (> skoMC1 0.) (<= 0. skoSC1) (<= 2. skoMC1) (<= skoSC1 (/ 5. 4.)) (> (* skoMC1 (* skoMC1 (* skoMC1 2.))) 0.) (<= (* skoMC1 (* skoMC1 (* skoMC1 (- 2.)))) 0.)) (succedent (<= (* skoSC1 (* skoMC1 (* skoMC1 skoMC1))) (* skoMC1 (* skoMC1 (* skoMC1 (- 1.)))))))
-----[end problem]-----

-----[begin problem]-----
% In Mathematica format:
Timing[Resolve[Exists[{skoMC1,skoSC1}, And[0<=skoMC1,skoSC1*skoMC1*-1<=skoMC1,skoSC1*skoMC1>skoMC1*-1,0<=skoMC1,skoMC1>0,0<=skoSC1,2<=skoMC1,skoSC1<=(5/4),skoMC1*skoMC1*skoMC1*2>0,skoMC1*skoMC1*skoMC1*-2<=0,skoSC1*skoMC1*skoMC1*skoMC1>skoMC1*skoMC1*skoMC1*-1]], Reals]]

% In QepcadB format:
(E skoMC1) (E skoSC1) [[0<=skoMC1]/\[[(skoSC1 skoMC1 (-1))<=skoMC1]/\[[(skoMC1 (-1))<(skoSC1 skoMC1)]/\[[0<=skoMC1]/\[[0<skoMC1]/\[[0<=skoSC1]/\[[2<=skoMC1]/\[[skoSC1<=5/4]/\[[0<(skoMC1 skoMC1 skoMC1 (2))]/\[[(skoMC1 skoMC1 skoMC1 (-2))<=0]/\[(skoMC1 skoMC1 skoMC1 (-1))<(skoSC1 skoMC1 skoMC1 skoMC1)]]]]]]]]]]].

% In SMTLib2 format:
(declare-fun skoMC1 () Real) (declare-fun skoSC1 () Real) (assert (and (<= 0. skoMC1) (and (<= (* skoSC1 (* skoMC1 (- 1.))) skoMC1) (and (> (* skoSC1 skoMC1) (* skoMC1 (- 1.))) (and (<= 0. skoMC1) (and (> skoMC1 0.) (and (<= 0. skoSC1) (and (<= 2. skoMC1) (and (<= skoSC1 (/ 5. 4.)) (and (> (* skoMC1 (* skoMC1 (* skoMC1 2.))) 0.) (and (<= (* skoMC1 (* skoMC1 (* skoMC1 (- 2.)))) 0.) (> (* skoSC1 (* skoMC1 (* skoMC1 skoMC1))) (* skoMC1 (* skoMC1 (* skoMC1 (- 1.))))))))))))))))

% In GRF format:
(sequent " MetiTarski formula " (antecedent (<= 0. skoMC1) (<= (* skoSC1 (* skoMC1 (- 1.))) skoMC1) (> (* skoSC1 skoMC1) (* skoMC1 (- 1.))) (<= 0. skoMC1) (> skoMC1 0.) (<= 0. skoSC1) (<= 2. skoMC1) (<= skoSC1 (/ 5. 4.)) (> (* skoMC1 (* skoMC1 (* skoMC1 2.))) 0.) (<= (* skoMC1 (* skoMC1 (* skoMC1 (- 2.)))) 0.)) (succedent (<= (* skoSC1 (* skoMC1 (* skoMC1 skoMC1))) (* skoMC1 (* skoMC1 (* skoMC1 (- 1.)))))))
-----[end problem]-----

-----[begin problem]-----
% In Mathematica format:
Timing[Resolve[Exists[{skoSC1,skoMC1}, And[skoSC1*(skoMC1*(-1+skoMC1*3)+skoSC1*(skoMC1*(-2+skoMC1*-3)+skoSC1*(skoMC1*skoMC1*-1+skoSC1*skoMC1*(1/12))))>skoMC1*(-2+skoMC1*-5),skoSC1*skoMC1*-1<=skoMC1,skoSC1*skoMC1>skoMC1*-1,0<=skoMC1,skoMC1>0,0<=skoSC1,2<=skoMC1,skoSC1<=(5/4),skoMC1*skoMC1*skoMC1*2>0,skoMC1*skoMC1*skoMC1*-2<=0,skoSC1*skoMC1*skoMC1*skoMC1>skoMC1*skoMC1*skoMC1*-1]], Reals]]

% In QepcadB format:
(E skoSC1) (E skoMC1) [[(skoMC1 (-2+(skoMC1 (-5))))<(skoSC1 ((skoMC1 (-1+(skoMC1 (3))))+(skoSC1 ((skoMC1 (-2+(skoMC1 (-3))))+(skoSC1 ((skoMC1 skoMC1 (-1))+(skoSC1 skoMC1 (1/12))))))))]/\[[(skoSC1 skoMC1 (-1))<=skoMC1]/\[[(skoMC1 (-1))<(skoSC1 skoMC1)]/\[[0<=skoMC1]/\[[0<skoMC1]/\[[0<=skoSC1]/\[[2<=skoMC1]/\[[skoSC1<=5/4]/\[[0<(skoMC1 skoMC1 skoMC1 (2))]/\[[(skoMC1 skoMC1 skoMC1 (-2))<=0]/\[(skoMC1 skoMC1 skoMC1 (-1))<(skoSC1 skoMC1 skoMC1 skoMC1)]]]]]]]]]]].

% In SMTLib2 format:
(declare-fun skoSC1 () Real) (declare-fun skoMC1 () Real) (assert (and (> (* skoSC1 (+ (* skoMC1 (+ (- 1.) (* skoMC1 3.))) (* skoSC1 (+ (* skoMC1 (+ (- 2.) (* skoMC1 (- 3.)))) (* skoSC1 (+ (* skoMC1 (* skoMC1 (- 1.))) (* skoSC1 (* skoMC1 (/ 1. 12.))))))))) (* skoMC1 (+ (- 2.) (* skoMC1 (- 5.))))) (and (<= (* skoSC1 (* skoMC1 (- 1.))) skoMC1) (and (> (* skoSC1 skoMC1) (* skoMC1 (- 1.))) (and (<= 0. skoMC1) (and (> skoMC1 0.) (and (<= 0. skoSC1) (and (<= 2. skoMC1) (and (<= skoSC1 (/ 5. 4.)) (and (> (* skoMC1 (* skoMC1 (* skoMC1 2.))) 0.) (and (<= (* skoMC1 (* skoMC1 (* skoMC1 (- 2.)))) 0.) (> (* skoSC1 (* skoMC1 (* skoMC1 skoMC1))) (* skoMC1 (* skoMC1 (* skoMC1 (- 1.))))))))))))))))

% In GRF format:
(sequent " MetiTarski formula " (antecedent (> (* skoSC1 (+ (* skoMC1 (+ (- 1.) (* skoMC1 3.))) (* skoSC1 (+ (* skoMC1 (+ (- 2.) (* skoMC1 (- 3.)))) (* skoSC1 (+ (* skoMC1 (* skoMC1 (- 1.))) (* skoSC1 (* skoMC1 (/ 1. 12.))))))))) (* skoMC1 (+ (- 2.) (* skoMC1 (- 5.))))) (<= (* skoSC1 (* skoMC1 (- 1.))) skoMC1) (> (* skoSC1 skoMC1) (* skoMC1 (- 1.))) (<= 0. skoMC1) (> skoMC1 0.) (<= 0. skoSC1) (<= 2. skoMC1) (<= skoSC1 (/ 5. 4.)) (> (* skoMC1 (* skoMC1 (* skoMC1 2.))) 0.) (<= (* skoMC1 (* skoMC1 (* skoMC1 (- 2.)))) 0.)) (succedent (<= (* skoSC1 (* skoMC1 (* skoMC1 skoMC1))) (* skoMC1 (* skoMC1 (* skoMC1 (- 1.)))))))
-----[end problem]-----

-----[begin problem]-----
% In Mathematica format:
Timing[Resolve[Exists[{skoSC1,skoMC1}, And[skoSC1*skoMC1*-1<=skoMC1,skoSC1<=0,skoSC1*(skoMC1*(-1+skoMC1*3)+skoSC1*(skoMC1*(-2+skoMC1*-3)+skoSC1*(skoMC1*skoMC1*-1+skoSC1*skoMC1*(1/12))))>skoMC1*(-2+skoMC1*-5),skoSC1*skoMC1*-1<=skoMC1,skoSC1*skoMC1>skoMC1*-1,0<=skoMC1,skoMC1>0,0<=skoSC1,2<=skoMC1,skoSC1<=(5/4),skoMC1*skoMC1*skoMC1*2>0,skoMC1*skoMC1*skoMC1*-2<=0,skoSC1*skoMC1*skoMC1*skoMC1>skoMC1*skoMC1*skoMC1*-1]], Reals]]

% In QepcadB format:
(E skoSC1) (E skoMC1) [[(skoSC1 skoMC1 (-1))<=skoMC1]/\[[skoSC1<=0]/\[[(skoMC1 (-2+(skoMC1 (-5))))<(skoSC1 ((skoMC1 (-1+(skoMC1 (3))))+(skoSC1 ((skoMC1 (-2+(skoMC1 (-3))))+(skoSC1 ((skoMC1 skoMC1 (-1))+(skoSC1 skoMC1 (1/12))))))))]/\[[(skoSC1 skoMC1 (-1))<=skoMC1]/\[[(skoMC1 (-1))<(skoSC1 skoMC1)]/\[[0<=skoMC1]/\[[0<skoMC1]/\[[0<=skoSC1]/\[[2<=skoMC1]/\[[skoSC1<=5/4]/\[[0<(skoMC1 skoMC1 skoMC1 (2))]/\[[(skoMC1 skoMC1 skoMC1 (-2))<=0]/\[(skoMC1 skoMC1 skoMC1 (-1))<(skoSC1 skoMC1 skoMC1 skoMC1)]]]]]]]]]]]]].

% In SMTLib2 format:
(declare-fun skoSC1 () Real) (declare-fun skoMC1 () Real) (assert (and (<= (* skoSC1 (* skoMC1 (- 1.))) skoMC1) (and (<= skoSC1 0.) (and (> (* skoSC1 (+ (* skoMC1 (+ (- 1.) (* skoMC1 3.))) (* skoSC1 (+ (* skoMC1 (+ (- 2.) (* skoMC1 (- 3.)))) (* skoSC1 (+ (* skoMC1 (* skoMC1 (- 1.))) (* skoSC1 (* skoMC1 (/ 1. 12.))))))))) (* skoMC1 (+ (- 2.) (* skoMC1 (- 5.))))) (and (<= (* skoSC1 (* skoMC1 (- 1.))) skoMC1) (and (> (* skoSC1 skoMC1) (* skoMC1 (- 1.))) (and (<= 0. skoMC1) (and (> skoMC1 0.) (and (<= 0. skoSC1) (and (<= 2. skoMC1) (and (<= skoSC1 (/ 5. 4.)) (and (> (* skoMC1 (* skoMC1 (* skoMC1 2.))) 0.) (and (<= (* skoMC1 (* skoMC1 (* skoMC1 (- 2.)))) 0.) (> (* skoSC1 (* skoMC1 (* skoMC1 skoMC1))) (* skoMC1 (* skoMC1 (* skoMC1 (- 1.))))))))))))))))))

% In GRF format:
(sequent " MetiTarski formula " (antecedent (<= (* skoSC1 (* skoMC1 (- 1.))) skoMC1) (<= skoSC1 0.) (> (* skoSC1 (+ (* skoMC1 (+ (- 1.) (* skoMC1 3.))) (* skoSC1 (+ (* skoMC1 (+ (- 2.) (* skoMC1 (- 3.)))) (* skoSC1 (+ (* skoMC1 (* skoMC1 (- 1.))) (* skoSC1 (* skoMC1 (/ 1. 12.))))))))) (* skoMC1 (+ (- 2.) (* skoMC1 (- 5.))))) (<= (* skoSC1 (* skoMC1 (- 1.))) skoMC1) (> (* skoSC1 skoMC1) (* skoMC1 (- 1.))) (<= 0. skoMC1) (> skoMC1 0.) (<= 0. skoSC1) (<= 2. skoMC1) (<= skoSC1 (/ 5. 4.)) (> (* skoMC1 (* skoMC1 (* skoMC1 2.))) 0.) (<= (* skoMC1 (* skoMC1 (* skoMC1 (- 2.)))) 0.)) (succedent (<= (* skoSC1 (* skoMC1 (* skoMC1 skoMC1))) (* skoMC1 (* skoMC1 (* skoMC1 (- 1.)))))))
-----[end problem]-----

-----[begin problem]-----
% In Mathematica format:
Timing[Resolve[Exists[{skoSC1,skoMC1}, And[skoSC1*skoMC1<=skoMC1*-1,skoSC1<=0,skoSC1*(skoMC1*(-1+skoMC1*3)+skoSC1*(skoMC1*(-2+skoMC1*-3)+skoSC1*(skoMC1*skoMC1*-1+skoSC1*skoMC1*(1/12))))>skoMC1*(-2+skoMC1*-5),skoSC1*skoMC1*-1<=skoMC1,skoSC1*skoMC1>skoMC1*-1,0<=skoMC1,skoMC1>0,0<=skoSC1,2<=skoMC1,skoSC1<=(5/4),skoMC1*skoMC1*skoMC1*2>0,skoMC1*skoMC1*skoMC1*-2<=0,skoSC1*skoMC1*skoMC1*skoMC1>skoMC1*skoMC1*skoMC1*-1]], Reals]]

% In QepcadB format:
(E skoSC1) (E skoMC1) [[(skoSC1 skoMC1)<=(skoMC1 (-1))]/\[[skoSC1<=0]/\[[(skoMC1 (-2+(skoMC1 (-5))))<(skoSC1 ((skoMC1 (-1+(skoMC1 (3))))+(skoSC1 ((skoMC1 (-2+(skoMC1 (-3))))+(skoSC1 ((skoMC1 skoMC1 (-1))+(skoSC1 skoMC1 (1/12))))))))]/\[[(skoSC1 skoMC1 (-1))<=skoMC1]/\[[(skoMC1 (-1))<(skoSC1 skoMC1)]/\[[0<=skoMC1]/\[[0<skoMC1]/\[[0<=skoSC1]/\[[2<=skoMC1]/\[[skoSC1<=5/4]/\[[0<(skoMC1 skoMC1 skoMC1 (2))]/\[[(skoMC1 skoMC1 skoMC1 (-2))<=0]/\[(skoMC1 skoMC1 skoMC1 (-1))<(skoSC1 skoMC1 skoMC1 skoMC1)]]]]]]]]]]]]].

% In SMTLib2 format:
(declare-fun skoSC1 () Real) (declare-fun skoMC1 () Real) (assert (and (<= (* skoSC1 skoMC1) (* skoMC1 (- 1.))) (and (<= skoSC1 0.) (and (> (* skoSC1 (+ (* skoMC1 (+ (- 1.) (* skoMC1 3.))) (* skoSC1 (+ (* skoMC1 (+ (- 2.) (* skoMC1 (- 3.)))) (* skoSC1 (+ (* skoMC1 (* skoMC1 (- 1.))) (* skoSC1 (* skoMC1 (/ 1. 12.))))))))) (* skoMC1 (+ (- 2.) (* skoMC1 (- 5.))))) (and (<= (* skoSC1 (* skoMC1 (- 1.))) skoMC1) (and (> (* skoSC1 skoMC1) (* skoMC1 (- 1.))) (and (<= 0. skoMC1) (and (> skoMC1 0.) (and (<= 0. skoSC1) (and (<= 2. skoMC1) (and (<= skoSC1 (/ 5. 4.)) (and (> (* skoMC1 (* skoMC1 (* skoMC1 2.))) 0.) (and (<= (* skoMC1 (* skoMC1 (* skoMC1 (- 2.)))) 0.) (> (* skoSC1 (* skoMC1 (* skoMC1 skoMC1))) (* skoMC1 (* skoMC1 (* skoMC1 (- 1.))))))))))))))))))

% In GRF format:
(sequent " MetiTarski formula " (antecedent (<= (* skoSC1 skoMC1) (* skoMC1 (- 1.))) (<= skoSC1 0.) (> (* skoSC1 (+ (* skoMC1 (+ (- 1.) (* skoMC1 3.))) (* skoSC1 (+ (* skoMC1 (+ (- 2.) (* skoMC1 (- 3.)))) (* skoSC1 (+ (* skoMC1 (* skoMC1 (- 1.))) (* skoSC1 (* skoMC1 (/ 1. 12.))))))))) (* skoMC1 (+ (- 2.) (* skoMC1 (- 5.))))) (<= (* skoSC1 (* skoMC1 (- 1.))) skoMC1) (> (* skoSC1 skoMC1) (* skoMC1 (- 1.))) (<= 0. skoMC1) (> skoMC1 0.) (<= 0. skoSC1) (<= 2. skoMC1) (<= skoSC1 (/ 5. 4.)) (> (* skoMC1 (* skoMC1 (* skoMC1 2.))) 0.) (<= (* skoMC1 (* skoMC1 (* skoMC1 (- 2.)))) 0.)) (succedent (<= (* skoSC1 (* skoMC1 (* skoMC1 skoMC1))) (* skoMC1 (* skoMC1 (* skoMC1 (- 1.)))))))
-----[end problem]-----

-----[begin problem]-----
% In Mathematica format:
Timing[Resolve[Exists[{skoSC1,skoMC1}, And[skoSC1>0,skoSC1*(skoMC1*(-1+skoMC1*3)+skoSC1*(skoMC1*(-2+skoMC1*-3)+skoSC1*(skoMC1*skoMC1*-1+skoSC1*skoMC1*(1/12))))>skoMC1*(-2+skoMC1*-5),skoSC1*skoMC1*-1<=skoMC1,skoSC1*skoMC1>skoMC1*-1,0<=skoMC1,skoMC1>0,0<=skoSC1,2<=skoMC1,skoSC1<=(5/4),skoMC1*skoMC1*skoMC1*2>0,skoMC1*skoMC1*skoMC1*-2<=0,skoSC1*skoMC1*skoMC1*skoMC1>skoMC1*skoMC1*skoMC1*-1]], Reals]]

% In QepcadB format:
(E skoSC1) (E skoMC1) [[0<skoSC1]/\[[(skoMC1 (-2+(skoMC1 (-5))))<(skoSC1 ((skoMC1 (-1+(skoMC1 (3))))+(skoSC1 ((skoMC1 (-2+(skoMC1 (-3))))+(skoSC1 ((skoMC1 skoMC1 (-1))+(skoSC1 skoMC1 (1/12))))))))]/\[[(skoSC1 skoMC1 (-1))<=skoMC1]/\[[(skoMC1 (-1))<(skoSC1 skoMC1)]/\[[0<=skoMC1]/\[[0<skoMC1]/\[[0<=skoSC1]/\[[2<=skoMC1]/\[[skoSC1<=5/4]/\[[0<(skoMC1 skoMC1 skoMC1 (2))]/\[[(skoMC1 skoMC1 skoMC1 (-2))<=0]/\[(skoMC1 skoMC1 skoMC1 (-1))<(skoSC1 skoMC1 skoMC1 skoMC1)]]]]]]]]]]]].

% In SMTLib2 format:
(declare-fun skoSC1 () Real) (declare-fun skoMC1 () Real) (assert (and (> skoSC1 0.) (and (> (* skoSC1 (+ (* skoMC1 (+ (- 1.) (* skoMC1 3.))) (* skoSC1 (+ (* skoMC1 (+ (- 2.) (* skoMC1 (- 3.)))) (* skoSC1 (+ (* skoMC1 (* skoMC1 (- 1.))) (* skoSC1 (* skoMC1 (/ 1. 12.))))))))) (* skoMC1 (+ (- 2.) (* skoMC1 (- 5.))))) (and (<= (* skoSC1 (* skoMC1 (- 1.))) skoMC1) (and (> (* skoSC1 skoMC1) (* skoMC1 (- 1.))) (and (<= 0. skoMC1) (and (> skoMC1 0.) (and (<= 0. skoSC1) (and (<= 2. skoMC1) (and (<= skoSC1 (/ 5. 4.)) (and (> (* skoMC1 (* skoMC1 (* skoMC1 2.))) 0.) (and (<= (* skoMC1 (* skoMC1 (* skoMC1 (- 2.)))) 0.) (> (* skoSC1 (* skoMC1 (* skoMC1 skoMC1))) (* skoMC1 (* skoMC1 (* skoMC1 (- 1.)))))))))))))))))

% In GRF format:
(sequent " MetiTarski formula " (antecedent (> skoSC1 0.) (> (* skoSC1 (+ (* skoMC1 (+ (- 1.) (* skoMC1 3.))) (* skoSC1 (+ (* skoMC1 (+ (- 2.) (* skoMC1 (- 3.)))) (* skoSC1 (+ (* skoMC1 (* skoMC1 (- 1.))) (* skoSC1 (* skoMC1 (/ 1. 12.))))))))) (* skoMC1 (+ (- 2.) (* skoMC1 (- 5.))))) (<= (* skoSC1 (* skoMC1 (- 1.))) skoMC1) (> (* skoSC1 skoMC1) (* skoMC1 (- 1.))) (<= 0. skoMC1) (> skoMC1 0.) (<= 0. skoSC1) (<= 2. skoMC1) (<= skoSC1 (/ 5. 4.)) (> (* skoMC1 (* skoMC1 (* skoMC1 2.))) 0.) (<= (* skoMC1 (* skoMC1 (* skoMC1 (- 2.)))) 0.)) (succedent (<= (* skoSC1 (* skoMC1 (* skoMC1 skoMC1))) (* skoMC1 (* skoMC1 (* skoMC1 (- 1.)))))))
-----[end problem]-----

-----[begin problem]-----
% In Mathematica format:
Timing[Resolve[Exists[{skoSC1,skoMC1}, And[skoMC1>0,skoSC1>0,skoSC1*(skoMC1*(-1+skoMC1*3)+skoSC1*(skoMC1*(-2+skoMC1*-3)+skoSC1*(skoMC1*skoMC1*-1+skoSC1*skoMC1*(1/12))))>skoMC1*(-2+skoMC1*-5),skoSC1*skoMC1*-1<=skoMC1,skoSC1*skoMC1>skoMC1*-1,0<=skoMC1,skoMC1>0,0<=skoSC1,2<=skoMC1,skoSC1<=(5/4),skoMC1*skoMC1*skoMC1*2>0,skoMC1*skoMC1*skoMC1*-2<=0,skoSC1*skoMC1*skoMC1*skoMC1>skoMC1*skoMC1*skoMC1*-1]], Reals]]

% In QepcadB format:
(E skoSC1) (E skoMC1) [[0<skoMC1]/\[[0<skoSC1]/\[[(skoMC1 (-2+(skoMC1 (-5))))<(skoSC1 ((skoMC1 (-1+(skoMC1 (3))))+(skoSC1 ((skoMC1 (-2+(skoMC1 (-3))))+(skoSC1 ((skoMC1 skoMC1 (-1))+(skoSC1 skoMC1 (1/12))))))))]/\[[(skoSC1 skoMC1 (-1))<=skoMC1]/\[[(skoMC1 (-1))<(skoSC1 skoMC1)]/\[[0<=skoMC1]/\[[0<skoMC1]/\[[0<=skoSC1]/\[[2<=skoMC1]/\[[skoSC1<=5/4]/\[[0<(skoMC1 skoMC1 skoMC1 (2))]/\[[(skoMC1 skoMC1 skoMC1 (-2))<=0]/\[(skoMC1 skoMC1 skoMC1 (-1))<(skoSC1 skoMC1 skoMC1 skoMC1)]]]]]]]]]]]]].

% In SMTLib2 format:
(declare-fun skoSC1 () Real) (declare-fun skoMC1 () Real) (assert (and (> skoMC1 0.) (and (> skoSC1 0.) (and (> (* skoSC1 (+ (* skoMC1 (+ (- 1.) (* skoMC1 3.))) (* skoSC1 (+ (* skoMC1 (+ (- 2.) (* skoMC1 (- 3.)))) (* skoSC1 (+ (* skoMC1 (* skoMC1 (- 1.))) (* skoSC1 (* skoMC1 (/ 1. 12.))))))))) (* skoMC1 (+ (- 2.) (* skoMC1 (- 5.))))) (and (<= (* skoSC1 (* skoMC1 (- 1.))) skoMC1) (and (> (* skoSC1 skoMC1) (* skoMC1 (- 1.))) (and (<= 0. skoMC1) (and (> skoMC1 0.) (and (<= 0. skoSC1) (and (<= 2. skoMC1) (and (<= skoSC1 (/ 5. 4.)) (and (> (* skoMC1 (* skoMC1 (* skoMC1 2.))) 0.) (and (<= (* skoMC1 (* skoMC1 (* skoMC1 (- 2.)))) 0.) (> (* skoSC1 (* skoMC1 (* skoMC1 skoMC1))) (* skoMC1 (* skoMC1 (* skoMC1 (- 1.))))))))))))))))))

% In GRF format:
(sequent " MetiTarski formula " (antecedent (> skoMC1 0.) (> skoSC1 0.) (> (* skoSC1 (+ (* skoMC1 (+ (- 1.) (* skoMC1 3.))) (* skoSC1 (+ (* skoMC1 (+ (- 2.) (* skoMC1 (- 3.)))) (* skoSC1 (+ (* skoMC1 (* skoMC1 (- 1.))) (* skoSC1 (* skoMC1 (/ 1. 12.))))))))) (* skoMC1 (+ (- 2.) (* skoMC1 (- 5.))))) (<= (* skoSC1 (* skoMC1 (- 1.))) skoMC1) (> (* skoSC1 skoMC1) (* skoMC1 (- 1.))) (<= 0. skoMC1) (> skoMC1 0.) (<= 0. skoSC1) (<= 2. skoMC1) (<= skoSC1 (/ 5. 4.)) (> (* skoMC1 (* skoMC1 (* skoMC1 2.))) 0.) (<= (* skoMC1 (* skoMC1 (* skoMC1 (- 2.)))) 0.)) (succedent (<= (* skoSC1 (* skoMC1 (* skoMC1 skoMC1))) (* skoMC1 (* skoMC1 (* skoMC1 (- 1.)))))))
-----[end problem]-----

-----[begin problem]-----
% In Mathematica format:
Timing[Resolve[Exists[{skoSC1,skoMC1}, And[0<=skoMC1,skoSC1*(skoMC1*(-1+skoMC1*3)+skoSC1*(skoMC1*(-2+skoMC1*-3)+skoSC1*(skoMC1*skoMC1*-1+skoSC1*skoMC1*(1/12))))>skoMC1*(-2+skoMC1*-5),skoSC1*skoMC1*-1<=skoMC1,skoSC1*skoMC1>skoMC1*-1,0<=skoMC1,skoMC1>0,0<=skoSC1,2<=skoMC1,skoSC1<=(5/4),skoMC1*skoMC1*skoMC1*2>0,skoMC1*skoMC1*skoMC1*-2<=0,skoSC1*skoMC1*skoMC1*skoMC1>skoMC1*skoMC1*skoMC1*-1]], Reals]]

% In QepcadB format:
(E skoSC1) (E skoMC1) [[0<=skoMC1]/\[[(skoMC1 (-2+(skoMC1 (-5))))<(skoSC1 ((skoMC1 (-1+(skoMC1 (3))))+(skoSC1 ((skoMC1 (-2+(skoMC1 (-3))))+(skoSC1 ((skoMC1 skoMC1 (-1))+(skoSC1 skoMC1 (1/12))))))))]/\[[(skoSC1 skoMC1 (-1))<=skoMC1]/\[[(skoMC1 (-1))<(skoSC1 skoMC1)]/\[[0<=skoMC1]/\[[0<skoMC1]/\[[0<=skoSC1]/\[[2<=skoMC1]/\[[skoSC1<=5/4]/\[[0<(skoMC1 skoMC1 skoMC1 (2))]/\[[(skoMC1 skoMC1 skoMC1 (-2))<=0]/\[(skoMC1 skoMC1 skoMC1 (-1))<(skoSC1 skoMC1 skoMC1 skoMC1)]]]]]]]]]]]].

% In SMTLib2 format:
(declare-fun skoSC1 () Real) (declare-fun skoMC1 () Real) (assert (and (<= 0. skoMC1) (and (> (* skoSC1 (+ (* skoMC1 (+ (- 1.) (* skoMC1 3.))) (* skoSC1 (+ (* skoMC1 (+ (- 2.) (* skoMC1 (- 3.)))) (* skoSC1 (+ (* skoMC1 (* skoMC1 (- 1.))) (* skoSC1 (* skoMC1 (/ 1. 12.))))))))) (* skoMC1 (+ (- 2.) (* skoMC1 (- 5.))))) (and (<= (* skoSC1 (* skoMC1 (- 1.))) skoMC1) (and (> (* skoSC1 skoMC1) (* skoMC1 (- 1.))) (and (<= 0. skoMC1) (and (> skoMC1 0.) (and (<= 0. skoSC1) (and (<= 2. skoMC1) (and (<= skoSC1 (/ 5. 4.)) (and (> (* skoMC1 (* skoMC1 (* skoMC1 2.))) 0.) (and (<= (* skoMC1 (* skoMC1 (* skoMC1 (- 2.)))) 0.) (> (* skoSC1 (* skoMC1 (* skoMC1 skoMC1))) (* skoMC1 (* skoMC1 (* skoMC1 (- 1.)))))))))))))))))

% In GRF format:
(sequent " MetiTarski formula " (antecedent (<= 0. skoMC1) (> (* skoSC1 (+ (* skoMC1 (+ (- 1.) (* skoMC1 3.))) (* skoSC1 (+ (* skoMC1 (+ (- 2.) (* skoMC1 (- 3.)))) (* skoSC1 (+ (* skoMC1 (* skoMC1 (- 1.))) (* skoSC1 (* skoMC1 (/ 1. 12.))))))))) (* skoMC1 (+ (- 2.) (* skoMC1 (- 5.))))) (<= (* skoSC1 (* skoMC1 (- 1.))) skoMC1) (> (* skoSC1 skoMC1) (* skoMC1 (- 1.))) (<= 0. skoMC1) (> skoMC1 0.) (<= 0. skoSC1) (<= 2. skoMC1) (<= skoSC1 (/ 5. 4.)) (> (* skoMC1 (* skoMC1 (* skoMC1 2.))) 0.) (<= (* skoMC1 (* skoMC1 (* skoMC1 (- 2.)))) 0.)) (succedent (<= (* skoSC1 (* skoMC1 (* skoMC1 skoMC1))) (* skoMC1 (* skoMC1 (* skoMC1 (- 1.)))))))
-----[end problem]-----

-----[begin problem]-----
% In Mathematica format:
Timing[Resolve[Exists[{skoSC1,skoMC1}, And[skoSC1*(skoMC1*(1+skoMC1*-3)+skoSC1*(skoMC1*(2+skoMC1*3)+skoSC1*(skoMC1*skoMC1+skoSC1*skoMC1*(-1/12))))<=skoMC1*(2+skoMC1*5),skoSC1<=0,skoMC1>0,skoSC1*(skoMC1*(-1+skoMC1*3)+skoSC1*(skoMC1*(-2+skoMC1*-3)+skoSC1*(skoMC1*skoMC1*-1+skoSC1*skoMC1*(1/12))))>skoMC1*(-2+skoMC1*-5),skoSC1*skoMC1*-1<=skoMC1,skoSC1*skoMC1>skoMC1*-1,0<=skoMC1,skoMC1>0,0<=skoSC1,2<=skoMC1,skoSC1<=(5/4),skoMC1*skoMC1*skoMC1*2>0,skoMC1*skoMC1*skoMC1*-2<=0,skoSC1*skoMC1*skoMC1*skoMC1>skoMC1*skoMC1*skoMC1*-1]], Reals]]

% In QepcadB format:
(E skoSC1) (E skoMC1) [[(skoSC1 ((skoMC1 (1+(skoMC1 (-3))))+(skoSC1 ((skoMC1 (2+(skoMC1 (3))))+(skoSC1 ((skoMC1 skoMC1)+(skoSC1 skoMC1 (-1/12))))))))<=(skoMC1 (2+(skoMC1 (5))))]/\[[skoSC1<=0]/\[[0<skoMC1]/\[[(skoMC1 (-2+(skoMC1 (-5))))<(skoSC1 ((skoMC1 (-1+(skoMC1 (3))))+(skoSC1 ((skoMC1 (-2+(skoMC1 (-3))))+(skoSC1 ((skoMC1 skoMC1 (-1))+(skoSC1 skoMC1 (1/12))))))))]/\[[(skoSC1 skoMC1 (-1))<=skoMC1]/\[[(skoMC1 (-1))<(skoSC1 skoMC1)]/\[[0<=skoMC1]/\[[0<skoMC1]/\[[0<=skoSC1]/\[[2<=skoMC1]/\[[skoSC1<=5/4]/\[[0<(skoMC1 skoMC1 skoMC1 (2))]/\[[(skoMC1 skoMC1 skoMC1 (-2))<=0]/\[(skoMC1 skoMC1 skoMC1 (-1))<(skoSC1 skoMC1 skoMC1 skoMC1)]]]]]]]]]]]]]].

% In SMTLib2 format:
(declare-fun skoSC1 () Real) (declare-fun skoMC1 () Real) (assert (and (<= (* skoSC1 (+ (* skoMC1 (+ 1. (* skoMC1 (- 3.)))) (* skoSC1 (+ (* skoMC1 (+ 2. (* skoMC1 3.))) (* skoSC1 (+ (* skoMC1 skoMC1) (* skoSC1 (* skoMC1 (/ (- 1.) 12.))))))))) (* skoMC1 (+ 2. (* skoMC1 5.)))) (and (<= skoSC1 0.) (and (> skoMC1 0.) (and (> (* skoSC1 (+ (* skoMC1 (+ (- 1.) (* skoMC1 3.))) (* skoSC1 (+ (* skoMC1 (+ (- 2.) (* skoMC1 (- 3.)))) (* skoSC1 (+ (* skoMC1 (* skoMC1 (- 1.))) (* skoSC1 (* skoMC1 (/ 1. 12.))))))))) (* skoMC1 (+ (- 2.) (* skoMC1 (- 5.))))) (and (<= (* skoSC1 (* skoMC1 (- 1.))) skoMC1) (and (> (* skoSC1 skoMC1) (* skoMC1 (- 1.))) (and (<= 0. skoMC1) (and (> skoMC1 0.) (and (<= 0. skoSC1) (and (<= 2. skoMC1) (and (<= skoSC1 (/ 5. 4.)) (and (> (* skoMC1 (* skoMC1 (* skoMC1 2.))) 0.) (and (<= (* skoMC1 (* skoMC1 (* skoMC1 (- 2.)))) 0.) (> (* skoSC1 (* skoMC1 (* skoMC1 skoMC1))) (* skoMC1 (* skoMC1 (* skoMC1 (- 1.)))))))))))))))))))

% In GRF format:
(sequent " MetiTarski formula " (antecedent (<= (* skoSC1 (+ (* skoMC1 (+ 1. (* skoMC1 (- 3.)))) (* skoSC1 (+ (* skoMC1 (+ 2. (* skoMC1 3.))) (* skoSC1 (+ (* skoMC1 skoMC1) (* skoSC1 (* skoMC1 (/ (- 1.) 12.))))))))) (* skoMC1 (+ 2. (* skoMC1 5.)))) (<= skoSC1 0.) (> skoMC1 0.) (> (* skoSC1 (+ (* skoMC1 (+ (- 1.) (* skoMC1 3.))) (* skoSC1 (+ (* skoMC1 (+ (- 2.) (* skoMC1 (- 3.)))) (* skoSC1 (+ (* skoMC1 (* skoMC1 (- 1.))) (* skoSC1 (* skoMC1 (/ 1. 12.))))))))) (* skoMC1 (+ (- 2.) (* skoMC1 (- 5.))))) (<= (* skoSC1 (* skoMC1 (- 1.))) skoMC1) (> (* skoSC1 skoMC1) (* skoMC1 (- 1.))) (<= 0. skoMC1) (> skoMC1 0.) (<= 0. skoSC1) (<= 2. skoMC1) (<= skoSC1 (/ 5. 4.)) (> (* skoMC1 (* skoMC1 (* skoMC1 2.))) 0.) (<= (* skoMC1 (* skoMC1 (* skoMC1 (- 2.)))) 0.)) (succedent (<= (* skoSC1 (* skoMC1 (* skoMC1 skoMC1))) (* skoMC1 (* skoMC1 (* skoMC1 (- 1.)))))))
-----[end problem]-----

-----[begin problem]-----
% In Mathematica format:
Timing[Resolve[Exists[{skoSC1,skoMC1}, And[0<=skoMC1,skoSC1*(skoMC1*(-1+skoMC1*3)+skoSC1*(skoMC1*(-2+skoMC1*-3)+skoSC1*(skoMC1*skoMC1*-1+skoSC1*skoMC1*(1/12))))>skoMC1*(-2+skoMC1*-5),skoSC1*skoMC1*-1<=skoMC1,skoSC1*skoMC1>skoMC1*-1,0<=skoMC1,skoMC1>0,0<=skoSC1,2<=skoMC1,skoSC1<=(5/4),skoMC1*skoMC1*skoMC1*2>0,skoMC1*skoMC1*skoMC1*-2<=0,skoSC1*skoMC1*skoMC1*skoMC1>skoMC1*skoMC1*skoMC1*-1]], Reals]]

% In QepcadB format:
(E skoSC1) (E skoMC1) [[0<=skoMC1]/\[[(skoMC1 (-2+(skoMC1 (-5))))<(skoSC1 ((skoMC1 (-1+(skoMC1 (3))))+(skoSC1 ((skoMC1 (-2+(skoMC1 (-3))))+(skoSC1 ((skoMC1 skoMC1 (-1))+(skoSC1 skoMC1 (1/12))))))))]/\[[(skoSC1 skoMC1 (-1))<=skoMC1]/\[[(skoMC1 (-1))<(skoSC1 skoMC1)]/\[[0<=skoMC1]/\[[0<skoMC1]/\[[0<=skoSC1]/\[[2<=skoMC1]/\[[skoSC1<=5/4]/\[[0<(skoMC1 skoMC1 skoMC1 (2))]/\[[(skoMC1 skoMC1 skoMC1 (-2))<=0]/\[(skoMC1 skoMC1 skoMC1 (-1))<(skoSC1 skoMC1 skoMC1 skoMC1)]]]]]]]]]]]].

% In SMTLib2 format:
(declare-fun skoSC1 () Real) (declare-fun skoMC1 () Real) (assert (and (<= 0. skoMC1) (and (> (* skoSC1 (+ (* skoMC1 (+ (- 1.) (* skoMC1 3.))) (* skoSC1 (+ (* skoMC1 (+ (- 2.) (* skoMC1 (- 3.)))) (* skoSC1 (+ (* skoMC1 (* skoMC1 (- 1.))) (* skoSC1 (* skoMC1 (/ 1. 12.))))))))) (* skoMC1 (+ (- 2.) (* skoMC1 (- 5.))))) (and (<= (* skoSC1 (* skoMC1 (- 1.))) skoMC1) (and (> (* skoSC1 skoMC1) (* skoMC1 (- 1.))) (and (<= 0. skoMC1) (and (> skoMC1 0.) (and (<= 0. skoSC1) (and (<= 2. skoMC1) (and (<= skoSC1 (/ 5. 4.)) (and (> (* skoMC1 (* skoMC1 (* skoMC1 2.))) 0.) (and (<= (* skoMC1 (* skoMC1 (* skoMC1 (- 2.)))) 0.) (> (* skoSC1 (* skoMC1 (* skoMC1 skoMC1))) (* skoMC1 (* skoMC1 (* skoMC1 (- 1.)))))))))))))))))

% In GRF format:
(sequent " MetiTarski formula " (antecedent (<= 0. skoMC1) (> (* skoSC1 (+ (* skoMC1 (+ (- 1.) (* skoMC1 3.))) (* skoSC1 (+ (* skoMC1 (+ (- 2.) (* skoMC1 (- 3.)))) (* skoSC1 (+ (* skoMC1 (* skoMC1 (- 1.))) (* skoSC1 (* skoMC1 (/ 1. 12.))))))))) (* skoMC1 (+ (- 2.) (* skoMC1 (- 5.))))) (<= (* skoSC1 (* skoMC1 (- 1.))) skoMC1) (> (* skoSC1 skoMC1) (* skoMC1 (- 1.))) (<= 0. skoMC1) (> skoMC1 0.) (<= 0. skoSC1) (<= 2. skoMC1) (<= skoSC1 (/ 5. 4.)) (> (* skoMC1 (* skoMC1 (* skoMC1 2.))) 0.) (<= (* skoMC1 (* skoMC1 (* skoMC1 (- 2.)))) 0.)) (succedent (<= (* skoSC1 (* skoMC1 (* skoMC1 skoMC1))) (* skoMC1 (* skoMC1 (* skoMC1 (- 1.)))))))
-----[end problem]-----

-----[begin problem]-----
% In Mathematica format:
Timing[Resolve[Exists[{skoSC1,skoMC1}, And[skoSC1*(skoMC1*(1+skoMC1*-3)+skoSC1*(skoMC1*(2+skoMC1*3)+skoSC1*(skoMC1*skoMC1+skoSC1*skoMC1*(-1/12))))<=skoMC1*(2+skoMC1*5),skoSC1*(skoMC1*(-1+skoMC1*3)+skoSC1*(skoMC1*(-2+skoMC1*-3)+skoSC1*(skoMC1*skoMC1*-1+skoSC1*skoMC1*(1/12))))>skoMC1*(-2+skoMC1*-5),skoSC1*skoMC1*-1<=skoMC1,skoSC1*skoMC1>skoMC1*-1,0<=skoMC1,skoMC1>0,0<=skoSC1,2<=skoMC1,skoSC1<=(5/4),skoMC1*skoMC1*skoMC1*2>0,skoMC1*skoMC1*skoMC1*-2<=0,skoSC1*skoMC1*skoMC1*skoMC1>skoMC1*skoMC1*skoMC1*-1]], Reals]]

% In QepcadB format:
(E skoSC1) (E skoMC1) [[(skoSC1 ((skoMC1 (1+(skoMC1 (-3))))+(skoSC1 ((skoMC1 (2+(skoMC1 (3))))+(skoSC1 ((skoMC1 skoMC1)+(skoSC1 skoMC1 (-1/12))))))))<=(skoMC1 (2+(skoMC1 (5))))]/\[[(skoMC1 (-2+(skoMC1 (-5))))<(skoSC1 ((skoMC1 (-1+(skoMC1 (3))))+(skoSC1 ((skoMC1 (-2+(skoMC1 (-3))))+(skoSC1 ((skoMC1 skoMC1 (-1))+(skoSC1 skoMC1 (1/12))))))))]/\[[(skoSC1 skoMC1 (-1))<=skoMC1]/\[[(skoMC1 (-1))<(skoSC1 skoMC1)]/\[[0<=skoMC1]/\[[0<skoMC1]/\[[0<=skoSC1]/\[[2<=skoMC1]/\[[skoSC1<=5/4]/\[[0<(skoMC1 skoMC1 skoMC1 (2))]/\[[(skoMC1 skoMC1 skoMC1 (-2))<=0]/\[(skoMC1 skoMC1 skoMC1 (-1))<(skoSC1 skoMC1 skoMC1 skoMC1)]]]]]]]]]]]].

% In SMTLib2 format:
(declare-fun skoSC1 () Real) (declare-fun skoMC1 () Real) (assert (and (<= (* skoSC1 (+ (* skoMC1 (+ 1. (* skoMC1 (- 3.)))) (* skoSC1 (+ (* skoMC1 (+ 2. (* skoMC1 3.))) (* skoSC1 (+ (* skoMC1 skoMC1) (* skoSC1 (* skoMC1 (/ (- 1.) 12.))))))))) (* skoMC1 (+ 2. (* skoMC1 5.)))) (and (> (* skoSC1 (+ (* skoMC1 (+ (- 1.) (* skoMC1 3.))) (* skoSC1 (+ (* skoMC1 (+ (- 2.) (* skoMC1 (- 3.)))) (* skoSC1 (+ (* skoMC1 (* skoMC1 (- 1.))) (* skoSC1 (* skoMC1 (/ 1. 12.))))))))) (* skoMC1 (+ (- 2.) (* skoMC1 (- 5.))))) (and (<= (* skoSC1 (* skoMC1 (- 1.))) skoMC1) (and (> (* skoSC1 skoMC1) (* skoMC1 (- 1.))) (and (<= 0. skoMC1) (and (> skoMC1 0.) (and (<= 0. skoSC1) (and (<= 2. skoMC1) (and (<= skoSC1 (/ 5. 4.)) (and (> (* skoMC1 (* skoMC1 (* skoMC1 2.))) 0.) (and (<= (* skoMC1 (* skoMC1 (* skoMC1 (- 2.)))) 0.) (> (* skoSC1 (* skoMC1 (* skoMC1 skoMC1))) (* skoMC1 (* skoMC1 (* skoMC1 (- 1.)))))))))))))))))

% In GRF format:
(sequent " MetiTarski formula " (antecedent (<= (* skoSC1 (+ (* skoMC1 (+ 1. (* skoMC1 (- 3.)))) (* skoSC1 (+ (* skoMC1 (+ 2. (* skoMC1 3.))) (* skoSC1 (+ (* skoMC1 skoMC1) (* skoSC1 (* skoMC1 (/ (- 1.) 12.))))))))) (* skoMC1 (+ 2. (* skoMC1 5.)))) (> (* skoSC1 (+ (* skoMC1 (+ (- 1.) (* skoMC1 3.))) (* skoSC1 (+ (* skoMC1 (+ (- 2.) (* skoMC1 (- 3.)))) (* skoSC1 (+ (* skoMC1 (* skoMC1 (- 1.))) (* skoSC1 (* skoMC1 (/ 1. 12.))))))))) (* skoMC1 (+ (- 2.) (* skoMC1 (- 5.))))) (<= (* skoSC1 (* skoMC1 (- 1.))) skoMC1) (> (* skoSC1 skoMC1) (* skoMC1 (- 1.))) (<= 0. skoMC1) (> skoMC1 0.) (<= 0. skoSC1) (<= 2. skoMC1) (<= skoSC1 (/ 5. 4.)) (> (* skoMC1 (* skoMC1 (* skoMC1 2.))) 0.) (<= (* skoMC1 (* skoMC1 (* skoMC1 (- 2.)))) 0.)) (succedent (<= (* skoSC1 (* skoMC1 (* skoMC1 skoMC1))) (* skoMC1 (* skoMC1 (* skoMC1 (- 1.)))))))
-----[end problem]-----

-----[begin problem]-----
% In Mathematica format:
Timing[Resolve[Exists[{skoSC1,skoMC1}, And[0<=skoMC1,skoSC1*(skoMC1*(1+skoMC1*-3)+skoSC1*(skoMC1*(2+skoMC1*3)+skoSC1*(skoMC1*skoMC1+skoSC1*skoMC1*(-1/12))))<=skoMC1*(2+skoMC1*5),skoSC1*(skoMC1*(-1+skoMC1*3)+skoSC1*(skoMC1*(-2+skoMC1*-3)+skoSC1*(skoMC1*skoMC1*-1+skoSC1*skoMC1*(1/12))))>skoMC1*(-2+skoMC1*-5),skoSC1*skoMC1*-1<=skoMC1,skoSC1*skoMC1>skoMC1*-1,0<=skoMC1,skoMC1>0,0<=skoSC1,2<=skoMC1,skoSC1<=(5/4),skoMC1*skoMC1*skoMC1*2>0,skoMC1*skoMC1*skoMC1*-2<=0,skoSC1*skoMC1*skoMC1*skoMC1>skoMC1*skoMC1*skoMC1*-1]], Reals]]

% In QepcadB format:
(E skoSC1) (E skoMC1) [[0<=skoMC1]/\[[(skoSC1 ((skoMC1 (1+(skoMC1 (-3))))+(skoSC1 ((skoMC1 (2+(skoMC1 (3))))+(skoSC1 ((skoMC1 skoMC1)+(skoSC1 skoMC1 (-1/12))))))))<=(skoMC1 (2+(skoMC1 (5))))]/\[[(skoMC1 (-2+(skoMC1 (-5))))<(skoSC1 ((skoMC1 (-1+(skoMC1 (3))))+(skoSC1 ((skoMC1 (-2+(skoMC1 (-3))))+(skoSC1 ((skoMC1 skoMC1 (-1))+(skoSC1 skoMC1 (1/12))))))))]/\[[(skoSC1 skoMC1 (-1))<=skoMC1]/\[[(skoMC1 (-1))<(skoSC1 skoMC1)]/\[[0<=skoMC1]/\[[0<skoMC1]/\[[0<=skoSC1]/\[[2<=skoMC1]/\[[skoSC1<=5/4]/\[[0<(skoMC1 skoMC1 skoMC1 (2))]/\[[(skoMC1 skoMC1 skoMC1 (-2))<=0]/\[(skoMC1 skoMC1 skoMC1 (-1))<(skoSC1 skoMC1 skoMC1 skoMC1)]]]]]]]]]]]]].

% In SMTLib2 format:
(declare-fun skoSC1 () Real) (declare-fun skoMC1 () Real) (assert (and (<= 0. skoMC1) (and (<= (* skoSC1 (+ (* skoMC1 (+ 1. (* skoMC1 (- 3.)))) (* skoSC1 (+ (* skoMC1 (+ 2. (* skoMC1 3.))) (* skoSC1 (+ (* skoMC1 skoMC1) (* skoSC1 (* skoMC1 (/ (- 1.) 12.))))))))) (* skoMC1 (+ 2. (* skoMC1 5.)))) (and (> (* skoSC1 (+ (* skoMC1 (+ (- 1.) (* skoMC1 3.))) (* skoSC1 (+ (* skoMC1 (+ (- 2.) (* skoMC1 (- 3.)))) (* skoSC1 (+ (* skoMC1 (* skoMC1 (- 1.))) (* skoSC1 (* skoMC1 (/ 1. 12.))))))))) (* skoMC1 (+ (- 2.) (* skoMC1 (- 5.))))) (and (<= (* skoSC1 (* skoMC1 (- 1.))) skoMC1) (and (> (* skoSC1 skoMC1) (* skoMC1 (- 1.))) (and (<= 0. skoMC1) (and (> skoMC1 0.) (and (<= 0. skoSC1) (and (<= 2. skoMC1) (and (<= skoSC1 (/ 5. 4.)) (and (> (* skoMC1 (* skoMC1 (* skoMC1 2.))) 0.) (and (<= (* skoMC1 (* skoMC1 (* skoMC1 (- 2.)))) 0.) (> (* skoSC1 (* skoMC1 (* skoMC1 skoMC1))) (* skoMC1 (* skoMC1 (* skoMC1 (- 1.))))))))))))))))))

% In GRF format:
(sequent " MetiTarski formula " (antecedent (<= 0. skoMC1) (<= (* skoSC1 (+ (* skoMC1 (+ 1. (* skoMC1 (- 3.)))) (* skoSC1 (+ (* skoMC1 (+ 2. (* skoMC1 3.))) (* skoSC1 (+ (* skoMC1 skoMC1) (* skoSC1 (* skoMC1 (/ (- 1.) 12.))))))))) (* skoMC1 (+ 2. (* skoMC1 5.)))) (> (* skoSC1 (+ (* skoMC1 (+ (- 1.) (* skoMC1 3.))) (* skoSC1 (+ (* skoMC1 (+ (- 2.) (* skoMC1 (- 3.)))) (* skoSC1 (+ (* skoMC1 (* skoMC1 (- 1.))) (* skoSC1 (* skoMC1 (/ 1. 12.))))))))) (* skoMC1 (+ (- 2.) (* skoMC1 (- 5.))))) (<= (* skoSC1 (* skoMC1 (- 1.))) skoMC1) (> (* skoSC1 skoMC1) (* skoMC1 (- 1.))) (<= 0. skoMC1) (> skoMC1 0.) (<= 0. skoSC1) (<= 2. skoMC1) (<= skoSC1 (/ 5. 4.)) (> (* skoMC1 (* skoMC1 (* skoMC1 2.))) 0.) (<= (* skoMC1 (* skoMC1 (* skoMC1 (- 2.)))) 0.)) (succedent (<= (* skoSC1 (* skoMC1 (* skoMC1 skoMC1))) (* skoMC1 (* skoMC1 (* skoMC1 (- 1.)))))))
-----[end problem]-----

-----[begin problem]-----
% In Mathematica format:
Timing[Resolve[Exists[{skoSC1,skoMC1}, And[skoSC1*(skoMC1*(-1+skoMC1*3)+skoSC1*(skoMC1*(-2+skoMC1*-3)+skoSC1*(skoMC1*((1/6)+skoMC1*-1)+skoSC1*skoMC1*(1/4))))>skoMC1*(-2+skoMC1*-5),skoMC1>0,skoSC1*(skoMC1*(1+skoMC1*-3)+skoSC1*(skoMC1*(2+skoMC1*3)+skoSC1*(skoMC1*skoMC1+skoSC1*skoMC1*(-1/12))))<=skoMC1*(2+skoMC1*5),skoSC1*(skoMC1*(-1+skoMC1*3)+skoSC1*(skoMC1*(-2+skoMC1*-3)+skoSC1*(skoMC1*skoMC1*-1+skoSC1*skoMC1*(1/12))))>skoMC1*(-2+skoMC1*-5),skoSC1*skoMC1*-1<=skoMC1,skoSC1*skoMC1>skoMC1*-1,0<=skoMC1,skoMC1>0,0<=skoSC1,2<=skoMC1,skoSC1<=(5/4),skoMC1*skoMC1*skoMC1*2>0,skoMC1*skoMC1*skoMC1*-2<=0,skoSC1*skoMC1*skoMC1*skoMC1>skoMC1*skoMC1*skoMC1*-1]], Reals]]

% In QepcadB format:
(E skoSC1) (E skoMC1) [[(skoMC1 (-2+(skoMC1 (-5))))<(skoSC1 ((skoMC1 (-1+(skoMC1 (3))))+(skoSC1 ((skoMC1 (-2+(skoMC1 (-3))))+(skoSC1 ((skoMC1 (1/6+(skoMC1 (-1))))+(skoSC1 skoMC1 (1/4))))))))]/\[[0<skoMC1]/\[[(skoSC1 ((skoMC1 (1+(skoMC1 (-3))))+(skoSC1 ((skoMC1 (2+(skoMC1 (3))))+(skoSC1 ((skoMC1 skoMC1)+(skoSC1 skoMC1 (-1/12))))))))<=(skoMC1 (2+(skoMC1 (5))))]/\[[(skoMC1 (-2+(skoMC1 (-5))))<(skoSC1 ((skoMC1 (-1+(skoMC1 (3))))+(skoSC1 ((skoMC1 (-2+(skoMC1 (-3))))+(skoSC1 ((skoMC1 skoMC1 (-1))+(skoSC1 skoMC1 (1/12))))))))]/\[[(skoSC1 skoMC1 (-1))<=skoMC1]/\[[(skoMC1 (-1))<(skoSC1 skoMC1)]/\[[0<=skoMC1]/\[[0<skoMC1]/\[[0<=skoSC1]/\[[2<=skoMC1]/\[[skoSC1<=5/4]/\[[0<(skoMC1 skoMC1 skoMC1 (2))]/\[[(skoMC1 skoMC1 skoMC1 (-2))<=0]/\[(skoMC1 skoMC1 skoMC1 (-1))<(skoSC1 skoMC1 skoMC1 skoMC1)]]]]]]]]]]]]]].

% In SMTLib2 format:
(declare-fun skoSC1 () Real) (declare-fun skoMC1 () Real) (assert (and (> (* skoSC1 (+ (* skoMC1 (+ (- 1.) (* skoMC1 3.))) (* skoSC1 (+ (* skoMC1 (+ (- 2.) (* skoMC1 (- 3.)))) (* skoSC1 (+ (* skoMC1 (+ (/ 1. 6.) (* skoMC1 (- 1.)))) (* skoSC1 (* skoMC1 (/ 1. 4.))))))))) (* skoMC1 (+ (- 2.) (* skoMC1 (- 5.))))) (and (> skoMC1 0.) (and (<= (* skoSC1 (+ (* skoMC1 (+ 1. (* skoMC1 (- 3.)))) (* skoSC1 (+ (* skoMC1 (+ 2. (* skoMC1 3.))) (* skoSC1 (+ (* skoMC1 skoMC1) (* skoSC1 (* skoMC1 (/ (- 1.) 12.))))))))) (* skoMC1 (+ 2. (* skoMC1 5.)))) (and (> (* skoSC1 (+ (* skoMC1 (+ (- 1.) (* skoMC1 3.))) (* skoSC1 (+ (* skoMC1 (+ (- 2.) (* skoMC1 (- 3.)))) (* skoSC1 (+ (* skoMC1 (* skoMC1 (- 1.))) (* skoSC1 (* skoMC1 (/ 1. 12.))))))))) (* skoMC1 (+ (- 2.) (* skoMC1 (- 5.))))) (and (<= (* skoSC1 (* skoMC1 (- 1.))) skoMC1) (and (> (* skoSC1 skoMC1) (* skoMC1 (- 1.))) (and (<= 0. skoMC1) (and (> skoMC1 0.) (and (<= 0. skoSC1) (and (<= 2. skoMC1) (and (<= skoSC1 (/ 5. 4.)) (and (> (* skoMC1 (* skoMC1 (* skoMC1 2.))) 0.) (and (<= (* skoMC1 (* skoMC1 (* skoMC1 (- 2.)))) 0.) (> (* skoSC1 (* skoMC1 (* skoMC1 skoMC1))) (* skoMC1 (* skoMC1 (* skoMC1 (- 1.)))))))))))))))))))

% In GRF format:
(sequent " MetiTarski formula " (antecedent (> (* skoSC1 (+ (* skoMC1 (+ (- 1.) (* skoMC1 3.))) (* skoSC1 (+ (* skoMC1 (+ (- 2.) (* skoMC1 (- 3.)))) (* skoSC1 (+ (* skoMC1 (+ (/ 1. 6.) (* skoMC1 (- 1.)))) (* skoSC1 (* skoMC1 (/ 1. 4.))))))))) (* skoMC1 (+ (- 2.) (* skoMC1 (- 5.))))) (> skoMC1 0.) (<= (* skoSC1 (+ (* skoMC1 (+ 1. (* skoMC1 (- 3.)))) (* skoSC1 (+ (* skoMC1 (+ 2. (* skoMC1 3.))) (* skoSC1 (+ (* skoMC1 skoMC1) (* skoSC1 (* skoMC1 (/ (- 1.) 12.))))))))) (* skoMC1 (+ 2. (* skoMC1 5.)))) (> (* skoSC1 (+ (* skoMC1 (+ (- 1.) (* skoMC1 3.))) (* skoSC1 (+ (* skoMC1 (+ (- 2.) (* skoMC1 (- 3.)))) (* skoSC1 (+ (* skoMC1 (* skoMC1 (- 1.))) (* skoSC1 (* skoMC1 (/ 1. 12.))))))))) (* skoMC1 (+ (- 2.) (* skoMC1 (- 5.))))) (<= (* skoSC1 (* skoMC1 (- 1.))) skoMC1) (> (* skoSC1 skoMC1) (* skoMC1 (- 1.))) (<= 0. skoMC1) (> skoMC1 0.) (<= 0. skoSC1) (<= 2. skoMC1) (<= skoSC1 (/ 5. 4.)) (> (* skoMC1 (* skoMC1 (* skoMC1 2.))) 0.) (<= (* skoMC1 (* skoMC1 (* skoMC1 (- 2.)))) 0.)) (succedent (<= (* skoSC1 (* skoMC1 (* skoMC1 skoMC1))) (* skoMC1 (* skoMC1 (* skoMC1 (- 1.)))))))
-----[end problem]-----

-----[begin problem]-----
% In Mathematica format:
Timing[Resolve[Exists[{skoSC1,skoMC1}, And[skoSC1*(skoMC1*(-1+skoMC1*3)+skoSC1*(skoMC1*(-2+skoMC1*-3)+skoSC1*(skoMC1*((1/6)+skoMC1*-1)+skoSC1*skoMC1*(1/4))))<=skoMC1*(-2+skoMC1*-5),skoMC1<=0,skoSC1*(skoMC1*(1+skoMC1*-3)+skoSC1*(skoMC1*(2+skoMC1*3)+skoSC1*(skoMC1*skoMC1+skoSC1*skoMC1*(-1/12))))<=skoMC1*(2+skoMC1*5),skoSC1*(skoMC1*(-1+skoMC1*3)+skoSC1*(skoMC1*(-2+skoMC1*-3)+skoSC1*(skoMC1*skoMC1*-1+skoSC1*skoMC1*(1/12))))>skoMC1*(-2+skoMC1*-5),skoSC1*skoMC1*-1<=skoMC1,skoSC1*skoMC1>skoMC1*-1,0<=skoMC1,skoMC1>0,0<=skoSC1,2<=skoMC1,skoSC1<=(5/4),skoMC1*skoMC1*skoMC1*2>0,skoMC1*skoMC1*skoMC1*-2<=0,skoSC1*skoMC1*skoMC1*skoMC1>skoMC1*skoMC1*skoMC1*-1]], Reals]]

% In QepcadB format:
(E skoSC1) (E skoMC1) [[(skoSC1 ((skoMC1 (-1+(skoMC1 (3))))+(skoSC1 ((skoMC1 (-2+(skoMC1 (-3))))+(skoSC1 ((skoMC1 (1/6+(skoMC1 (-1))))+(skoSC1 skoMC1 (1/4))))))))<=(skoMC1 (-2+(skoMC1 (-5))))]/\[[skoMC1<=0]/\[[(skoSC1 ((skoMC1 (1+(skoMC1 (-3))))+(skoSC1 ((skoMC1 (2+(skoMC1 (3))))+(skoSC1 ((skoMC1 skoMC1)+(skoSC1 skoMC1 (-1/12))))))))<=(skoMC1 (2+(skoMC1 (5))))]/\[[(skoMC1 (-2+(skoMC1 (-5))))<(skoSC1 ((skoMC1 (-1+(skoMC1 (3))))+(skoSC1 ((skoMC1 (-2+(skoMC1 (-3))))+(skoSC1 ((skoMC1 skoMC1 (-1))+(skoSC1 skoMC1 (1/12))))))))]/\[[(skoSC1 skoMC1 (-1))<=skoMC1]/\[[(skoMC1 (-1))<(skoSC1 skoMC1)]/\[[0<=skoMC1]/\[[0<skoMC1]/\[[0<=skoSC1]/\[[2<=skoMC1]/\[[skoSC1<=5/4]/\[[0<(skoMC1 skoMC1 skoMC1 (2))]/\[[(skoMC1 skoMC1 skoMC1 (-2))<=0]/\[(skoMC1 skoMC1 skoMC1 (-1))<(skoSC1 skoMC1 skoMC1 skoMC1)]]]]]]]]]]]]]].

% In SMTLib2 format:
(declare-fun skoSC1 () Real) (declare-fun skoMC1 () Real) (assert (and (<= (* skoSC1 (+ (* skoMC1 (+ (- 1.) (* skoMC1 3.))) (* skoSC1 (+ (* skoMC1 (+ (- 2.) (* skoMC1 (- 3.)))) (* skoSC1 (+ (* skoMC1 (+ (/ 1. 6.) (* skoMC1 (- 1.)))) (* skoSC1 (* skoMC1 (/ 1. 4.))))))))) (* skoMC1 (+ (- 2.) (* skoMC1 (- 5.))))) (and (<= skoMC1 0.) (and (<= (* skoSC1 (+ (* skoMC1 (+ 1. (* skoMC1 (- 3.)))) (* skoSC1 (+ (* skoMC1 (+ 2. (* skoMC1 3.))) (* skoSC1 (+ (* skoMC1 skoMC1) (* skoSC1 (* skoMC1 (/ (- 1.) 12.))))))))) (* skoMC1 (+ 2. (* skoMC1 5.)))) (and (> (* skoSC1 (+ (* skoMC1 (+ (- 1.) (* skoMC1 3.))) (* skoSC1 (+ (* skoMC1 (+ (- 2.) (* skoMC1 (- 3.)))) (* skoSC1 (+ (* skoMC1 (* skoMC1 (- 1.))) (* skoSC1 (* skoMC1 (/ 1. 12.))))))))) (* skoMC1 (+ (- 2.) (* skoMC1 (- 5.))))) (and (<= (* skoSC1 (* skoMC1 (- 1.))) skoMC1) (and (> (* skoSC1 skoMC1) (* skoMC1 (- 1.))) (and (<= 0. skoMC1) (and (> skoMC1 0.) (and (<= 0. skoSC1) (and (<= 2. skoMC1) (and (<= skoSC1 (/ 5. 4.)) (and (> (* skoMC1 (* skoMC1 (* skoMC1 2.))) 0.) (and (<= (* skoMC1 (* skoMC1 (* skoMC1 (- 2.)))) 0.) (> (* skoSC1 (* skoMC1 (* skoMC1 skoMC1))) (* skoMC1 (* skoMC1 (* skoMC1 (- 1.)))))))))))))))))))

% In GRF format:
(sequent " MetiTarski formula " (antecedent (<= (* skoSC1 (+ (* skoMC1 (+ (- 1.) (* skoMC1 3.))) (* skoSC1 (+ (* skoMC1 (+ (- 2.) (* skoMC1 (- 3.)))) (* skoSC1 (+ (* skoMC1 (+ (/ 1. 6.) (* skoMC1 (- 1.)))) (* skoSC1 (* skoMC1 (/ 1. 4.))))))))) (* skoMC1 (+ (- 2.) (* skoMC1 (- 5.))))) (<= skoMC1 0.) (<= (* skoSC1 (+ (* skoMC1 (+ 1. (* skoMC1 (- 3.)))) (* skoSC1 (+ (* skoMC1 (+ 2. (* skoMC1 3.))) (* skoSC1 (+ (* skoMC1 skoMC1) (* skoSC1 (* skoMC1 (/ (- 1.) 12.))))))))) (* skoMC1 (+ 2. (* skoMC1 5.)))) (> (* skoSC1 (+ (* skoMC1 (+ (- 1.) (* skoMC1 3.))) (* skoSC1 (+ (* skoMC1 (+ (- 2.) (* skoMC1 (- 3.)))) (* skoSC1 (+ (* skoMC1 (* skoMC1 (- 1.))) (* skoSC1 (* skoMC1 (/ 1. 12.))))))))) (* skoMC1 (+ (- 2.) (* skoMC1 (- 5.))))) (<= (* skoSC1 (* skoMC1 (- 1.))) skoMC1) (> (* skoSC1 skoMC1) (* skoMC1 (- 1.))) (<= 0. skoMC1) (> skoMC1 0.) (<= 0. skoSC1) (<= 2. skoMC1) (<= skoSC1 (/ 5. 4.)) (> (* skoMC1 (* skoMC1 (* skoMC1 2.))) 0.) (<= (* skoMC1 (* skoMC1 (* skoMC1 (- 2.)))) 0.)) (succedent (<= (* skoSC1 (* skoMC1 (* skoMC1 skoMC1))) (* skoMC1 (* skoMC1 (* skoMC1 (- 1.)))))))
-----[end problem]-----

-----[begin problem]-----
% In Mathematica format:
Timing[Resolve[Exists[{skoSC1,skoMC1}, And[0<=skoMC1,skoSC1*(skoMC1*(1+skoMC1*-3)+skoSC1*(skoMC1*(2+skoMC1*3)+skoSC1*(skoMC1*skoMC1+skoSC1*skoMC1*(-1/12))))<=skoMC1*(2+skoMC1*5),skoSC1*(skoMC1*(-1+skoMC1*3)+skoSC1*(skoMC1*(-2+skoMC1*-3)+skoSC1*(skoMC1*skoMC1*-1+skoSC1*skoMC1*(1/12))))>skoMC1*(-2+skoMC1*-5),skoSC1*skoMC1*-1<=skoMC1,skoSC1*skoMC1>skoMC1*-1,0<=skoMC1,skoMC1>0,0<=skoSC1,2<=skoMC1,skoSC1<=(5/4),skoMC1*skoMC1*skoMC1*2>0,skoMC1*skoMC1*skoMC1*-2<=0,skoSC1*skoMC1*skoMC1*skoMC1>skoMC1*skoMC1*skoMC1*-1]], Reals]]

% In QepcadB format:
(E skoSC1) (E skoMC1) [[0<=skoMC1]/\[[(skoSC1 ((skoMC1 (1+(skoMC1 (-3))))+(skoSC1 ((skoMC1 (2+(skoMC1 (3))))+(skoSC1 ((skoMC1 skoMC1)+(skoSC1 skoMC1 (-1/12))))))))<=(skoMC1 (2+(skoMC1 (5))))]/\[[(skoMC1 (-2+(skoMC1 (-5))))<(skoSC1 ((skoMC1 (-1+(skoMC1 (3))))+(skoSC1 ((skoMC1 (-2+(skoMC1 (-3))))+(skoSC1 ((skoMC1 skoMC1 (-1))+(skoSC1 skoMC1 (1/12))))))))]/\[[(skoSC1 skoMC1 (-1))<=skoMC1]/\[[(skoMC1 (-1))<(skoSC1 skoMC1)]/\[[0<=skoMC1]/\[[0<skoMC1]/\[[0<=skoSC1]/\[[2<=skoMC1]/\[[skoSC1<=5/4]/\[[0<(skoMC1 skoMC1 skoMC1 (2))]/\[[(skoMC1 skoMC1 skoMC1 (-2))<=0]/\[(skoMC1 skoMC1 skoMC1 (-1))<(skoSC1 skoMC1 skoMC1 skoMC1)]]]]]]]]]]]]].

% In SMTLib2 format:
(declare-fun skoSC1 () Real) (declare-fun skoMC1 () Real) (assert (and (<= 0. skoMC1) (and (<= (* skoSC1 (+ (* skoMC1 (+ 1. (* skoMC1 (- 3.)))) (* skoSC1 (+ (* skoMC1 (+ 2. (* skoMC1 3.))) (* skoSC1 (+ (* skoMC1 skoMC1) (* skoSC1 (* skoMC1 (/ (- 1.) 12.))))))))) (* skoMC1 (+ 2. (* skoMC1 5.)))) (and (> (* skoSC1 (+ (* skoMC1 (+ (- 1.) (* skoMC1 3.))) (* skoSC1 (+ (* skoMC1 (+ (- 2.) (* skoMC1 (- 3.)))) (* skoSC1 (+ (* skoMC1 (* skoMC1 (- 1.))) (* skoSC1 (* skoMC1 (/ 1. 12.))))))))) (* skoMC1 (+ (- 2.) (* skoMC1 (- 5.))))) (and (<= (* skoSC1 (* skoMC1 (- 1.))) skoMC1) (and (> (* skoSC1 skoMC1) (* skoMC1 (- 1.))) (and (<= 0. skoMC1) (and (> skoMC1 0.) (and (<= 0. skoSC1) (and (<= 2. skoMC1) (and (<= skoSC1 (/ 5. 4.)) (and (> (* skoMC1 (* skoMC1 (* skoMC1 2.))) 0.) (and (<= (* skoMC1 (* skoMC1 (* skoMC1 (- 2.)))) 0.) (> (* skoSC1 (* skoMC1 (* skoMC1 skoMC1))) (* skoMC1 (* skoMC1 (* skoMC1 (- 1.))))))))))))))))))

% In GRF format:
(sequent " MetiTarski formula " (antecedent (<= 0. skoMC1) (<= (* skoSC1 (+ (* skoMC1 (+ 1. (* skoMC1 (- 3.)))) (* skoSC1 (+ (* skoMC1 (+ 2. (* skoMC1 3.))) (* skoSC1 (+ (* skoMC1 skoMC1) (* skoSC1 (* skoMC1 (/ (- 1.) 12.))))))))) (* skoMC1 (+ 2. (* skoMC1 5.)))) (> (* skoSC1 (+ (* skoMC1 (+ (- 1.) (* skoMC1 3.))) (* skoSC1 (+ (* skoMC1 (+ (- 2.) (* skoMC1 (- 3.)))) (* skoSC1 (+ (* skoMC1 (* skoMC1 (- 1.))) (* skoSC1 (* skoMC1 (/ 1. 12.))))))))) (* skoMC1 (+ (- 2.) (* skoMC1 (- 5.))))) (<= (* skoSC1 (* skoMC1 (- 1.))) skoMC1) (> (* skoSC1 skoMC1) (* skoMC1 (- 1.))) (<= 0. skoMC1) (> skoMC1 0.) (<= 0. skoSC1) (<= 2. skoMC1) (<= skoSC1 (/ 5. 4.)) (> (* skoMC1 (* skoMC1 (* skoMC1 2.))) 0.) (<= (* skoMC1 (* skoMC1 (* skoMC1 (- 2.)))) 0.)) (succedent (<= (* skoSC1 (* skoMC1 (* skoMC1 skoMC1))) (* skoMC1 (* skoMC1 (* skoMC1 (- 1.)))))))
-----[end problem]-----

-----[begin problem]-----
% In Mathematica format:
Timing[Resolve[Exists[{skoSC1,skoMC1}, And[skoSC1*(skoMC1*(-1+skoMC1*3)+skoSC1*(skoMC1*(-2+skoMC1*-3)+skoSC1*(skoMC1*((1/6)+skoMC1*-1)+skoSC1*skoMC1*(1/4))))>skoMC1*(-2+skoMC1*-5),skoSC1*(skoMC1*(1+skoMC1*-3)+skoSC1*(skoMC1*(2+skoMC1*3)+skoSC1*(skoMC1*skoMC1+skoSC1*skoMC1*(-1/12))))<=skoMC1*(2+skoMC1*5),skoSC1*(skoMC1*(-1+skoMC1*3)+skoSC1*(skoMC1*(-2+skoMC1*-3)+skoSC1*(skoMC1*skoMC1*-1+skoSC1*skoMC1*(1/12))))>skoMC1*(-2+skoMC1*-5),skoSC1*skoMC1*-1<=skoMC1,skoSC1*skoMC1>skoMC1*-1,0<=skoMC1,skoMC1>0,0<=skoSC1,2<=skoMC1,skoSC1<=(5/4),skoMC1*skoMC1*skoMC1*2>0,skoMC1*skoMC1*skoMC1*-2<=0,skoSC1*skoMC1*skoMC1*skoMC1>skoMC1*skoMC1*skoMC1*-1]], Reals]]

% In QepcadB format:
(E skoSC1) (E skoMC1) [[(skoMC1 (-2+(skoMC1 (-5))))<(skoSC1 ((skoMC1 (-1+(skoMC1 (3))))+(skoSC1 ((skoMC1 (-2+(skoMC1 (-3))))+(skoSC1 ((skoMC1 (1/6+(skoMC1 (-1))))+(skoSC1 skoMC1 (1/4))))))))]/\[[(skoSC1 ((skoMC1 (1+(skoMC1 (-3))))+(skoSC1 ((skoMC1 (2+(skoMC1 (3))))+(skoSC1 ((skoMC1 skoMC1)+(skoSC1 skoMC1 (-1/12))))))))<=(skoMC1 (2+(skoMC1 (5))))]/\[[(skoMC1 (-2+(skoMC1 (-5))))<(skoSC1 ((skoMC1 (-1+(skoMC1 (3))))+(skoSC1 ((skoMC1 (-2+(skoMC1 (-3))))+(skoSC1 ((skoMC1 skoMC1 (-1))+(skoSC1 skoMC1 (1/12))))))))]/\[[(skoSC1 skoMC1 (-1))<=skoMC1]/\[[(skoMC1 (-1))<(skoSC1 skoMC1)]/\[[0<=skoMC1]/\[[0<skoMC1]/\[[0<=skoSC1]/\[[2<=skoMC1]/\[[skoSC1<=5/4]/\[[0<(skoMC1 skoMC1 skoMC1 (2))]/\[[(skoMC1 skoMC1 skoMC1 (-2))<=0]/\[(skoMC1 skoMC1 skoMC1 (-1))<(skoSC1 skoMC1 skoMC1 skoMC1)]]]]]]]]]]]]].

% In SMTLib2 format:
(declare-fun skoSC1 () Real) (declare-fun skoMC1 () Real) (assert (and (> (* skoSC1 (+ (* skoMC1 (+ (- 1.) (* skoMC1 3.))) (* skoSC1 (+ (* skoMC1 (+ (- 2.) (* skoMC1 (- 3.)))) (* skoSC1 (+ (* skoMC1 (+ (/ 1. 6.) (* skoMC1 (- 1.)))) (* skoSC1 (* skoMC1 (/ 1. 4.))))))))) (* skoMC1 (+ (- 2.) (* skoMC1 (- 5.))))) (and (<= (* skoSC1 (+ (* skoMC1 (+ 1. (* skoMC1 (- 3.)))) (* skoSC1 (+ (* skoMC1 (+ 2. (* skoMC1 3.))) (* skoSC1 (+ (* skoMC1 skoMC1) (* skoSC1 (* skoMC1 (/ (- 1.) 12.))))))))) (* skoMC1 (+ 2. (* skoMC1 5.)))) (and (> (* skoSC1 (+ (* skoMC1 (+ (- 1.) (* skoMC1 3.))) (* skoSC1 (+ (* skoMC1 (+ (- 2.) (* skoMC1 (- 3.)))) (* skoSC1 (+ (* skoMC1 (* skoMC1 (- 1.))) (* skoSC1 (* skoMC1 (/ 1. 12.))))))))) (* skoMC1 (+ (- 2.) (* skoMC1 (- 5.))))) (and (<= (* skoSC1 (* skoMC1 (- 1.))) skoMC1) (and (> (* skoSC1 skoMC1) (* skoMC1 (- 1.))) (and (<= 0. skoMC1) (and (> skoMC1 0.) (and (<= 0. skoSC1) (and (<= 2. skoMC1) (and (<= skoSC1 (/ 5. 4.)) (and (> (* skoMC1 (* skoMC1 (* skoMC1 2.))) 0.) (and (<= (* skoMC1 (* skoMC1 (* skoMC1 (- 2.)))) 0.) (> (* skoSC1 (* skoMC1 (* skoMC1 skoMC1))) (* skoMC1 (* skoMC1 (* skoMC1 (- 1.))))))))))))))))))

% In GRF format:
(sequent " MetiTarski formula " (antecedent (> (* skoSC1 (+ (* skoMC1 (+ (- 1.) (* skoMC1 3.))) (* skoSC1 (+ (* skoMC1 (+ (- 2.) (* skoMC1 (- 3.)))) (* skoSC1 (+ (* skoMC1 (+ (/ 1. 6.) (* skoMC1 (- 1.)))) (* skoSC1 (* skoMC1 (/ 1. 4.))))))))) (* skoMC1 (+ (- 2.) (* skoMC1 (- 5.))))) (<= (* skoSC1 (+ (* skoMC1 (+ 1. (* skoMC1 (- 3.)))) (* skoSC1 (+ (* skoMC1 (+ 2. (* skoMC1 3.))) (* skoSC1 (+ (* skoMC1 skoMC1) (* skoSC1 (* skoMC1 (/ (- 1.) 12.))))))))) (* skoMC1 (+ 2. (* skoMC1 5.)))) (> (* skoSC1 (+ (* skoMC1 (+ (- 1.) (* skoMC1 3.))) (* skoSC1 (+ (* skoMC1 (+ (- 2.) (* skoMC1 (- 3.)))) (* skoSC1 (+ (* skoMC1 (* skoMC1 (- 1.))) (* skoSC1 (* skoMC1 (/ 1. 12.))))))))) (* skoMC1 (+ (- 2.) (* skoMC1 (- 5.))))) (<= (* skoSC1 (* skoMC1 (- 1.))) skoMC1) (> (* skoSC1 skoMC1) (* skoMC1 (- 1.))) (<= 0. skoMC1) (> skoMC1 0.) (<= 0. skoSC1) (<= 2. skoMC1) (<= skoSC1 (/ 5. 4.)) (> (* skoMC1 (* skoMC1 (* skoMC1 2.))) 0.) (<= (* skoMC1 (* skoMC1 (* skoMC1 (- 2.)))) 0.)) (succedent (<= (* skoSC1 (* skoMC1 (* skoMC1 skoMC1))) (* skoMC1 (* skoMC1 (* skoMC1 (- 1.)))))))
-----[end problem]-----

-----[begin problem]-----
% In Mathematica format:
Timing[Resolve[Exists[{skoSC1,skoMC1}, And[0<=skoMC1,skoSC1*(skoMC1*(-1+skoMC1*3)+skoSC1*(skoMC1*(-2+skoMC1*-3)+skoSC1*(skoMC1*((1/6)+skoMC1*-1)+skoSC1*skoMC1*(1/4))))>skoMC1*(-2+skoMC1*-5),skoSC1*(skoMC1*(1+skoMC1*-3)+skoSC1*(skoMC1*(2+skoMC1*3)+skoSC1*(skoMC1*skoMC1+skoSC1*skoMC1*(-1/12))))<=skoMC1*(2+skoMC1*5),skoSC1*(skoMC1*(-1+skoMC1*3)+skoSC1*(skoMC1*(-2+skoMC1*-3)+skoSC1*(skoMC1*skoMC1*-1+skoSC1*skoMC1*(1/12))))>skoMC1*(-2+skoMC1*-5),skoSC1*skoMC1*-1<=skoMC1,skoSC1*skoMC1>skoMC1*-1,0<=skoMC1,skoMC1>0,0<=skoSC1,2<=skoMC1,skoSC1<=(5/4),skoMC1*skoMC1*skoMC1*2>0,skoMC1*skoMC1*skoMC1*-2<=0,skoSC1*skoMC1*skoMC1*skoMC1>skoMC1*skoMC1*skoMC1*-1]], Reals]]

% In QepcadB format:
(E skoSC1) (E skoMC1) [[0<=skoMC1]/\[[(skoMC1 (-2+(skoMC1 (-5))))<(skoSC1 ((skoMC1 (-1+(skoMC1 (3))))+(skoSC1 ((skoMC1 (-2+(skoMC1 (-3))))+(skoSC1 ((skoMC1 (1/6+(skoMC1 (-1))))+(skoSC1 skoMC1 (1/4))))))))]/\[[(skoSC1 ((skoMC1 (1+(skoMC1 (-3))))+(skoSC1 ((skoMC1 (2+(skoMC1 (3))))+(skoSC1 ((skoMC1 skoMC1)+(skoSC1 skoMC1 (-1/12))))))))<=(skoMC1 (2+(skoMC1 (5))))]/\[[(skoMC1 (-2+(skoMC1 (-5))))<(skoSC1 ((skoMC1 (-1+(skoMC1 (3))))+(skoSC1 ((skoMC1 (-2+(skoMC1 (-3))))+(skoSC1 ((skoMC1 skoMC1 (-1))+(skoSC1 skoMC1 (1/12))))))))]/\[[(skoSC1 skoMC1 (-1))<=skoMC1]/\[[(skoMC1 (-1))<(skoSC1 skoMC1)]/\[[0<=skoMC1]/\[[0<skoMC1]/\[[0<=skoSC1]/\[[2<=skoMC1]/\[[skoSC1<=5/4]/\[[0<(skoMC1 skoMC1 skoMC1 (2))]/\[[(skoMC1 skoMC1 skoMC1 (-2))<=0]/\[(skoMC1 skoMC1 skoMC1 (-1))<(skoSC1 skoMC1 skoMC1 skoMC1)]]]]]]]]]]]]]].

% In SMTLib2 format:
(declare-fun skoSC1 () Real) (declare-fun skoMC1 () Real) (assert (and (<= 0. skoMC1) (and (> (* skoSC1 (+ (* skoMC1 (+ (- 1.) (* skoMC1 3.))) (* skoSC1 (+ (* skoMC1 (+ (- 2.) (* skoMC1 (- 3.)))) (* skoSC1 (+ (* skoMC1 (+ (/ 1. 6.) (* skoMC1 (- 1.)))) (* skoSC1 (* skoMC1 (/ 1. 4.))))))))) (* skoMC1 (+ (- 2.) (* skoMC1 (- 5.))))) (and (<= (* skoSC1 (+ (* skoMC1 (+ 1. (* skoMC1 (- 3.)))) (* skoSC1 (+ (* skoMC1 (+ 2. (* skoMC1 3.))) (* skoSC1 (+ (* skoMC1 skoMC1) (* skoSC1 (* skoMC1 (/ (- 1.) 12.))))))))) (* skoMC1 (+ 2. (* skoMC1 5.)))) (and (> (* skoSC1 (+ (* skoMC1 (+ (- 1.) (* skoMC1 3.))) (* skoSC1 (+ (* skoMC1 (+ (- 2.) (* skoMC1 (- 3.)))) (* skoSC1 (+ (* skoMC1 (* skoMC1 (- 1.))) (* skoSC1 (* skoMC1 (/ 1. 12.))))))))) (* skoMC1 (+ (- 2.) (* skoMC1 (- 5.))))) (and (<= (* skoSC1 (* skoMC1 (- 1.))) skoMC1) (and (> (* skoSC1 skoMC1) (* skoMC1 (- 1.))) (and (<= 0. skoMC1) (and (> skoMC1 0.) (and (<= 0. skoSC1) (and (<= 2. skoMC1) (and (<= skoSC1 (/ 5. 4.)) (and (> (* skoMC1 (* skoMC1 (* skoMC1 2.))) 0.) (and (<= (* skoMC1 (* skoMC1 (* skoMC1 (- 2.)))) 0.) (> (* skoSC1 (* skoMC1 (* skoMC1 skoMC1))) (* skoMC1 (* skoMC1 (* skoMC1 (- 1.)))))))))))))))))))

% In GRF format:
(sequent " MetiTarski formula " (antecedent (<= 0. skoMC1) (> (* skoSC1 (+ (* skoMC1 (+ (- 1.) (* skoMC1 3.))) (* skoSC1 (+ (* skoMC1 (+ (- 2.) (* skoMC1 (- 3.)))) (* skoSC1 (+ (* skoMC1 (+ (/ 1. 6.) (* skoMC1 (- 1.)))) (* skoSC1 (* skoMC1 (/ 1. 4.))))))))) (* skoMC1 (+ (- 2.) (* skoMC1 (- 5.))))) (<= (* skoSC1 (+ (* skoMC1 (+ 1. (* skoMC1 (- 3.)))) (* skoSC1 (+ (* skoMC1 (+ 2. (* skoMC1 3.))) (* skoSC1 (+ (* skoMC1 skoMC1) (* skoSC1 (* skoMC1 (/ (- 1.) 12.))))))))) (* skoMC1 (+ 2. (* skoMC1 5.)))) (> (* skoSC1 (+ (* skoMC1 (+ (- 1.) (* skoMC1 3.))) (* skoSC1 (+ (* skoMC1 (+ (- 2.) (* skoMC1 (- 3.)))) (* skoSC1 (+ (* skoMC1 (* skoMC1 (- 1.))) (* skoSC1 (* skoMC1 (/ 1. 12.))))))))) (* skoMC1 (+ (- 2.) (* skoMC1 (- 5.))))) (<= (* skoSC1 (* skoMC1 (- 1.))) skoMC1) (> (* skoSC1 skoMC1) (* skoMC1 (- 1.))) (<= 0. skoMC1) (> skoMC1 0.) (<= 0. skoSC1) (<= 2. skoMC1) (<= skoSC1 (/ 5. 4.)) (> (* skoMC1 (* skoMC1 (* skoMC1 2.))) 0.) (<= (* skoMC1 (* skoMC1 (* skoMC1 (- 2.)))) 0.)) (succedent (<= (* skoSC1 (* skoMC1 (* skoMC1 skoMC1))) (* skoMC1 (* skoMC1 (* skoMC1 (- 1.)))))))
-----[end problem]-----

-----[begin problem]-----
% In Mathematica format:
Timing[Resolve[Exists[{skoSC1,skoMC1}, And[skoSC1<=0,skoSC1*(skoMC1*(-1+skoMC1*3)+skoSC1*(skoMC1*(-2+skoMC1*-3)+skoSC1*(skoMC1*skoMC1*-1+skoSC1*(skoMC1*(1/12)+skoSC1*skoSC1*(skoMC1*(-1/360)+skoSC1*skoSC1*(skoMC1*(1/20160)+skoSC1*skoSC1*(skoMC1*(-1/1814400)+skoSC1*skoSC1*skoMC1*(1/239500800))))))))>skoMC1*(-2+skoMC1*-5),skoMC1>0,skoSC1*(skoMC1*(-1+skoMC1*3)+skoSC1*(skoMC1*(-2+skoMC1*-3)+skoSC1*(skoMC1*((1/6)+skoMC1*-1)+skoSC1*skoMC1*(1/4))))>skoMC1*(-2+skoMC1*-5),skoSC1*(skoMC1*(1+skoMC1*-3)+skoSC1*(skoMC1*(2+skoMC1*3)+skoSC1*(skoMC1*skoMC1+skoSC1*skoMC1*(-1/12))))<=skoMC1*(2+skoMC1*5),skoSC1*(skoMC1*(-1+skoMC1*3)+skoSC1*(skoMC1*(-2+skoMC1*-3)+skoSC1*(skoMC1*skoMC1*-1+skoSC1*skoMC1*(1/12))))>skoMC1*(-2+skoMC1*-5),skoSC1*skoMC1*-1<=skoMC1,skoSC1*skoMC1>skoMC1*-1,0<=skoMC1,skoMC1>0,0<=skoSC1,2<=skoMC1,skoSC1<=(5/4),skoMC1*skoMC1*skoMC1*2>0,skoMC1*skoMC1*skoMC1*-2<=0,skoSC1*skoMC1*skoMC1*skoMC1>skoMC1*skoMC1*skoMC1*-1]], Reals]]

% In QepcadB format:
(E skoSC1) (E skoMC1) [[skoSC1<=0]/\[[(skoMC1 (-2+(skoMC1 (-5))))<(skoSC1 ((skoMC1 (-1+(skoMC1 (3))))+(skoSC1 ((skoMC1 (-2+(skoMC1 (-3))))+(skoSC1 ((skoMC1 skoMC1 (-1))+(skoSC1 ((skoMC1 (1/12))+(skoSC1 skoSC1 ((skoMC1 (-1/360))+(skoSC1 skoSC1 ((skoMC1 (1/20160))+(skoSC1 skoSC1 ((skoMC1 (-1/1814400))+(skoSC1 skoSC1 skoMC1 (1/239500800))))))))))))))))]/\[[0<skoMC1]/\[[(skoMC1 (-2+(skoMC1 (-5))))<(skoSC1 ((skoMC1 (-1+(skoMC1 (3))))+(skoSC1 ((skoMC1 (-2+(skoMC1 (-3))))+(skoSC1 ((skoMC1 (1/6+(skoMC1 (-1))))+(skoSC1 skoMC1 (1/4))))))))]/\[[(skoSC1 ((skoMC1 (1+(skoMC1 (-3))))+(skoSC1 ((skoMC1 (2+(skoMC1 (3))))+(skoSC1 ((skoMC1 skoMC1)+(skoSC1 skoMC1 (-1/12))))))))<=(skoMC1 (2+(skoMC1 (5))))]/\[[(skoMC1 (-2+(skoMC1 (-5))))<(skoSC1 ((skoMC1 (-1+(skoMC1 (3))))+(skoSC1 ((skoMC1 (-2+(skoMC1 (-3))))+(skoSC1 ((skoMC1 skoMC1 (-1))+(skoSC1 skoMC1 (1/12))))))))]/\[[(skoSC1 skoMC1 (-1))<=skoMC1]/\[[(skoMC1 (-1))<(skoSC1 skoMC1)]/\[[0<=skoMC1]/\[[0<skoMC1]/\[[0<=skoSC1]/\[[2<=skoMC1]/\[[skoSC1<=5/4]/\[[0<(skoMC1 skoMC1 skoMC1 (2))]/\[[(skoMC1 skoMC1 skoMC1 (-2))<=0]/\[(skoMC1 skoMC1 skoMC1 (-1))<(skoSC1 skoMC1 skoMC1 skoMC1)]]]]]]]]]]]]]]]].

% In SMTLib2 format:
(declare-fun skoSC1 () Real) (declare-fun skoMC1 () Real) (assert (and (<= skoSC1 0.) (and (> (* skoSC1 (+ (* skoMC1 (+ (- 1.) (* skoMC1 3.))) (* skoSC1 (+ (* skoMC1 (+ (- 2.) (* skoMC1 (- 3.)))) (* skoSC1 (+ (* skoMC1 (* skoMC1 (- 1.))) (* skoSC1 (+ (* skoMC1 (/ 1. 12.)) (* skoSC1 (* skoSC1 (+ (* skoMC1 (/ (- 1.) 360.)) (* skoSC1 (* skoSC1 (+ (* skoMC1 (/ 1. 20160.)) (* skoSC1 (* skoSC1 (+ (* skoMC1 (/ (- 1.) 1814400.)) (* skoSC1 (* skoSC1 (* skoMC1 (/ 1. 239500800.))))))))))))))))))))) (* skoMC1 (+ (- 2.) (* skoMC1 (- 5.))))) (and (> skoMC1 0.) (and (> (* skoSC1 (+ (* skoMC1 (+ (- 1.) (* skoMC1 3.))) (* skoSC1 (+ (* skoMC1 (+ (- 2.) (* skoMC1 (- 3.)))) (* skoSC1 (+ (* skoMC1 (+ (/ 1. 6.) (* skoMC1 (- 1.)))) (* skoSC1 (* skoMC1 (/ 1. 4.))))))))) (* skoMC1 (+ (- 2.) (* skoMC1 (- 5.))))) (and (<= (* skoSC1 (+ (* skoMC1 (+ 1. (* skoMC1 (- 3.)))) (* skoSC1 (+ (* skoMC1 (+ 2. (* skoMC1 3.))) (* skoSC1 (+ (* skoMC1 skoMC1) (* skoSC1 (* skoMC1 (/ (- 1.) 12.))))))))) (* skoMC1 (+ 2. (* skoMC1 5.)))) (and (> (* skoSC1 (+ (* skoMC1 (+ (- 1.) (* skoMC1 3.))) (* skoSC1 (+ (* skoMC1 (+ (- 2.) (* skoMC1 (- 3.)))) (* skoSC1 (+ (* skoMC1 (* skoMC1 (- 1.))) (* skoSC1 (* skoMC1 (/ 1. 12.))))))))) (* skoMC1 (+ (- 2.) (* skoMC1 (- 5.))))) (and (<= (* skoSC1 (* skoMC1 (- 1.))) skoMC1) (and (> (* skoSC1 skoMC1) (* skoMC1 (- 1.))) (and (<= 0. skoMC1) (and (> skoMC1 0.) (and (<= 0. skoSC1) (and (<= 2. skoMC1) (and (<= skoSC1 (/ 5. 4.)) (and (> (* skoMC1 (* skoMC1 (* skoMC1 2.))) 0.) (and (<= (* skoMC1 (* skoMC1 (* skoMC1 (- 2.)))) 0.) (> (* skoSC1 (* skoMC1 (* skoMC1 skoMC1))) (* skoMC1 (* skoMC1 (* skoMC1 (- 1.)))))))))))))))))))))

% In GRF format:
(sequent " MetiTarski formula " (antecedent (<= skoSC1 0.) (> (* skoSC1 (+ (* skoMC1 (+ (- 1.) (* skoMC1 3.))) (* skoSC1 (+ (* skoMC1 (+ (- 2.) (* skoMC1 (- 3.)))) (* skoSC1 (+ (* skoMC1 (* skoMC1 (- 1.))) (* skoSC1 (+ (* skoMC1 (/ 1. 12.)) (* skoSC1 (* skoSC1 (+ (* skoMC1 (/ (- 1.) 360.)) (* skoSC1 (* skoSC1 (+ (* skoMC1 (/ 1. 20160.)) (* skoSC1 (* skoSC1 (+ (* skoMC1 (/ (- 1.) 1814400.)) (* skoSC1 (* skoSC1 (* skoMC1 (/ 1. 239500800.))))))))))))))))))))) (* skoMC1 (+ (- 2.) (* skoMC1 (- 5.))))) (> skoMC1 0.) (> (* skoSC1 (+ (* skoMC1 (+ (- 1.) (* skoMC1 3.))) (* skoSC1 (+ (* skoMC1 (+ (- 2.) (* skoMC1 (- 3.)))) (* skoSC1 (+ (* skoMC1 (+ (/ 1. 6.) (* skoMC1 (- 1.)))) (* skoSC1 (* skoMC1 (/ 1. 4.))))))))) (* skoMC1 (+ (- 2.) (* skoMC1 (- 5.))))) (<= (* skoSC1 (+ (* skoMC1 (+ 1. (* skoMC1 (- 3.)))) (* skoSC1 (+ (* skoMC1 (+ 2. (* skoMC1 3.))) (* skoSC1 (+ (* skoMC1 skoMC1) (* skoSC1 (* skoMC1 (/ (- 1.) 12.))))))))) (* skoMC1 (+ 2. (* skoMC1 5.)))) (> (* skoSC1 (+ (* skoMC1 (+ (- 1.) (* skoMC1 3.))) (* skoSC1 (+ (* skoMC1 (+ (- 2.) (* skoMC1 (- 3.)))) (* skoSC1 (+ (* skoMC1 (* skoMC1 (- 1.))) (* skoSC1 (* skoMC1 (/ 1. 12.))))))))) (* skoMC1 (+ (- 2.) (* skoMC1 (- 5.))))) (<= (* skoSC1 (* skoMC1 (- 1.))) skoMC1) (> (* skoSC1 skoMC1) (* skoMC1 (- 1.))) (<= 0. skoMC1) (> skoMC1 0.) (<= 0. skoSC1) (<= 2. skoMC1) (<= skoSC1 (/ 5. 4.)) (> (* skoMC1 (* skoMC1 (* skoMC1 2.))) 0.) (<= (* skoMC1 (* skoMC1 (* skoMC1 (- 2.)))) 0.)) (succedent (<= (* skoSC1 (* skoMC1 (* skoMC1 skoMC1))) (* skoMC1 (* skoMC1 (* skoMC1 (- 1.)))))))
-----[end problem]-----

-----[begin problem]-----
% In Mathematica format:
Timing[Resolve[Exists[{skoSC1,skoMC1}, And[skoSC1*(skoMC1*(-1+skoMC1*3)+skoSC1*(skoMC1*(-2+skoMC1*-3)+skoSC1*(skoMC1*skoMC1*-1+skoSC1*(skoMC1*(1/12)+skoSC1*skoSC1*(skoMC1*(-1/360)+skoSC1*skoSC1*(skoMC1*(1/20160)+skoSC1*skoSC1*(skoMC1*(-1/1814400)+skoSC1*skoSC1*skoMC1*(1/239500800))))))))<=skoMC1*(-2+skoMC1*-5),skoMC1>0,skoSC1>0,skoSC1*(skoMC1*(-1+skoMC1*3)+skoSC1*(skoMC1*(-2+skoMC1*-3)+skoSC1*(skoMC1*((1/6)+skoMC1*-1)+skoSC1*skoMC1*(1/4))))>skoMC1*(-2+skoMC1*-5),skoSC1*(skoMC1*(1+skoMC1*-3)+skoSC1*(skoMC1*(2+skoMC1*3)+skoSC1*(skoMC1*skoMC1+skoSC1*skoMC1*(-1/12))))<=skoMC1*(2+skoMC1*5),skoSC1*(skoMC1*(-1+skoMC1*3)+skoSC1*(skoMC1*(-2+skoMC1*-3)+skoSC1*(skoMC1*skoMC1*-1+skoSC1*skoMC1*(1/12))))>skoMC1*(-2+skoMC1*-5),skoSC1*skoMC1*-1<=skoMC1,skoSC1*skoMC1>skoMC1*-1,0<=skoMC1,skoMC1>0,0<=skoSC1,2<=skoMC1,skoSC1<=(5/4),skoMC1*skoMC1*skoMC1*2>0,skoMC1*skoMC1*skoMC1*-2<=0,skoSC1*skoMC1*skoMC1*skoMC1>skoMC1*skoMC1*skoMC1*-1]], Reals]]

% In QepcadB format:
(E skoSC1) (E skoMC1) [[(skoSC1 ((skoMC1 (-1+(skoMC1 (3))))+(skoSC1 ((skoMC1 (-2+(skoMC1 (-3))))+(skoSC1 ((skoMC1 skoMC1 (-1))+(skoSC1 ((skoMC1 (1/12))+(skoSC1 skoSC1 ((skoMC1 (-1/360))+(skoSC1 skoSC1 ((skoMC1 (1/20160))+(skoSC1 skoSC1 ((skoMC1 (-1/1814400))+(skoSC1 skoSC1 skoMC1 (1/239500800))))))))))))))))<=(skoMC1 (-2+(skoMC1 (-5))))]/\[[0<skoMC1]/\[[0<skoSC1]/\[[(skoMC1 (-2+(skoMC1 (-5))))<(skoSC1 ((skoMC1 (-1+(skoMC1 (3))))+(skoSC1 ((skoMC1 (-2+(skoMC1 (-3))))+(skoSC1 ((skoMC1 (1/6+(skoMC1 (-1))))+(skoSC1 skoMC1 (1/4))))))))]/\[[(skoSC1 ((skoMC1 (1+(skoMC1 (-3))))+(skoSC1 ((skoMC1 (2+(skoMC1 (3))))+(skoSC1 ((skoMC1 skoMC1)+(skoSC1 skoMC1 (-1/12))))))))<=(skoMC1 (2+(skoMC1 (5))))]/\[[(skoMC1 (-2+(skoMC1 (-5))))<(skoSC1 ((skoMC1 (-1+(skoMC1 (3))))+(skoSC1 ((skoMC1 (-2+(skoMC1 (-3))))+(skoSC1 ((skoMC1 skoMC1 (-1))+(skoSC1 skoMC1 (1/12))))))))]/\[[(skoSC1 skoMC1 (-1))<=skoMC1]/\[[(skoMC1 (-1))<(skoSC1 skoMC1)]/\[[0<=skoMC1]/\[[0<skoMC1]/\[[0<=skoSC1]/\[[2<=skoMC1]/\[[skoSC1<=5/4]/\[[0<(skoMC1 skoMC1 skoMC1 (2))]/\[[(skoMC1 skoMC1 skoMC1 (-2))<=0]/\[(skoMC1 skoMC1 skoMC1 (-1))<(skoSC1 skoMC1 skoMC1 skoMC1)]]]]]]]]]]]]]]]].

% In SMTLib2 format:
(declare-fun skoSC1 () Real) (declare-fun skoMC1 () Real) (assert (and (<= (* skoSC1 (+ (* skoMC1 (+ (- 1.) (* skoMC1 3.))) (* skoSC1 (+ (* skoMC1 (+ (- 2.) (* skoMC1 (- 3.)))) (* skoSC1 (+ (* skoMC1 (* skoMC1 (- 1.))) (* skoSC1 (+ (* skoMC1 (/ 1. 12.)) (* skoSC1 (* skoSC1 (+ (* skoMC1 (/ (- 1.) 360.)) (* skoSC1 (* skoSC1 (+ (* skoMC1 (/ 1. 20160.)) (* skoSC1 (* skoSC1 (+ (* skoMC1 (/ (- 1.) 1814400.)) (* skoSC1 (* skoSC1 (* skoMC1 (/ 1. 239500800.))))))))))))))))))))) (* skoMC1 (+ (- 2.) (* skoMC1 (- 5.))))) (and (> skoMC1 0.) (and (> skoSC1 0.) (and (> (* skoSC1 (+ (* skoMC1 (+ (- 1.) (* skoMC1 3.))) (* skoSC1 (+ (* skoMC1 (+ (- 2.) (* skoMC1 (- 3.)))) (* skoSC1 (+ (* skoMC1 (+ (/ 1. 6.) (* skoMC1 (- 1.)))) (* skoSC1 (* skoMC1 (/ 1. 4.))))))))) (* skoMC1 (+ (- 2.) (* skoMC1 (- 5.))))) (and (<= (* skoSC1 (+ (* skoMC1 (+ 1. (* skoMC1 (- 3.)))) (* skoSC1 (+ (* skoMC1 (+ 2. (* skoMC1 3.))) (* skoSC1 (+ (* skoMC1 skoMC1) (* skoSC1 (* skoMC1 (/ (- 1.) 12.))))))))) (* skoMC1 (+ 2. (* skoMC1 5.)))) (and (> (* skoSC1 (+ (* skoMC1 (+ (- 1.) (* skoMC1 3.))) (* skoSC1 (+ (* skoMC1 (+ (- 2.) (* skoMC1 (- 3.)))) (* skoSC1 (+ (* skoMC1 (* skoMC1 (- 1.))) (* skoSC1 (* skoMC1 (/ 1. 12.))))))))) (* skoMC1 (+ (- 2.) (* skoMC1 (- 5.))))) (and (<= (* skoSC1 (* skoMC1 (- 1.))) skoMC1) (and (> (* skoSC1 skoMC1) (* skoMC1 (- 1.))) (and (<= 0. skoMC1) (and (> skoMC1 0.) (and (<= 0. skoSC1) (and (<= 2. skoMC1) (and (<= skoSC1 (/ 5. 4.)) (and (> (* skoMC1 (* skoMC1 (* skoMC1 2.))) 0.) (and (<= (* skoMC1 (* skoMC1 (* skoMC1 (- 2.)))) 0.) (> (* skoSC1 (* skoMC1 (* skoMC1 skoMC1))) (* skoMC1 (* skoMC1 (* skoMC1 (- 1.)))))))))))))))))))))

% In GRF format:
(sequent " MetiTarski formula " (antecedent (<= (* skoSC1 (+ (* skoMC1 (+ (- 1.) (* skoMC1 3.))) (* skoSC1 (+ (* skoMC1 (+ (- 2.) (* skoMC1 (- 3.)))) (* skoSC1 (+ (* skoMC1 (* skoMC1 (- 1.))) (* skoSC1 (+ (* skoMC1 (/ 1. 12.)) (* skoSC1 (* skoSC1 (+ (* skoMC1 (/ (- 1.) 360.)) (* skoSC1 (* skoSC1 (+ (* skoMC1 (/ 1. 20160.)) (* skoSC1 (* skoSC1 (+ (* skoMC1 (/ (- 1.) 1814400.)) (* skoSC1 (* skoSC1 (* skoMC1 (/ 1. 239500800.))))))))))))))))))))) (* skoMC1 (+ (- 2.) (* skoMC1 (- 5.))))) (> skoMC1 0.) (> skoSC1 0.) (> (* skoSC1 (+ (* skoMC1 (+ (- 1.) (* skoMC1 3.))) (* skoSC1 (+ (* skoMC1 (+ (- 2.) (* skoMC1 (- 3.)))) (* skoSC1 (+ (* skoMC1 (+ (/ 1. 6.) (* skoMC1 (- 1.)))) (* skoSC1 (* skoMC1 (/ 1. 4.))))))))) (* skoMC1 (+ (- 2.) (* skoMC1 (- 5.))))) (<= (* skoSC1 (+ (* skoMC1 (+ 1. (* skoMC1 (- 3.)))) (* skoSC1 (+ (* skoMC1 (+ 2. (* skoMC1 3.))) (* skoSC1 (+ (* skoMC1 skoMC1) (* skoSC1 (* skoMC1 (/ (- 1.) 12.))))))))) (* skoMC1 (+ 2. (* skoMC1 5.)))) (> (* skoSC1 (+ (* skoMC1 (+ (- 1.) (* skoMC1 3.))) (* skoSC1 (+ (* skoMC1 (+ (- 2.) (* skoMC1 (- 3.)))) (* skoSC1 (+ (* skoMC1 (* skoMC1 (- 1.))) (* skoSC1 (* skoMC1 (/ 1. 12.))))))))) (* skoMC1 (+ (- 2.) (* skoMC1 (- 5.))))) (<= (* skoSC1 (* skoMC1 (- 1.))) skoMC1) (> (* skoSC1 skoMC1) (* skoMC1 (- 1.))) (<= 0. skoMC1) (> skoMC1 0.) (<= 0. skoSC1) (<= 2. skoMC1) (<= skoSC1 (/ 5. 4.)) (> (* skoMC1 (* skoMC1 (* skoMC1 2.))) 0.) (<= (* skoMC1 (* skoMC1 (* skoMC1 (- 2.)))) 0.)) (succedent (<= (* skoSC1 (* skoMC1 (* skoMC1 skoMC1))) (* skoMC1 (* skoMC1 (* skoMC1 (- 1.)))))))
-----[end problem]-----

-----[begin problem]-----
% In Mathematica format:
Timing[Resolve[Exists[{skoSC1,skoMC1}, And[skoSC1*(skoMC1*(-1+skoMC1*3)+skoSC1*(skoMC1*(-2+skoMC1*-3)+skoSC1*(skoMC1*skoMC1*-1+skoSC1*(skoMC1*(1/12)+skoSC1*skoSC1*(skoMC1*(-1/360)+skoSC1*skoSC1*(skoMC1*(1/20160)+skoSC1*skoSC1*(skoMC1*(-1/1814400)+skoSC1*skoSC1*skoMC1*(1/239500800))))))))<=skoMC1*(-2+skoMC1*-5),skoMC1<=0,skoSC1*(skoMC1*(-1+skoMC1*3)+skoSC1*(skoMC1*(-2+skoMC1*-3)+skoSC1*(skoMC1*((1/6)+skoMC1*-1)+skoSC1*skoMC1*(1/4))))>skoMC1*(-2+skoMC1*-5),skoSC1*(skoMC1*(1+skoMC1*-3)+skoSC1*(skoMC1*(2+skoMC1*3)+skoSC1*(skoMC1*skoMC1+skoSC1*skoMC1*(-1/12))))<=skoMC1*(2+skoMC1*5),skoSC1*(skoMC1*(-1+skoMC1*3)+skoSC1*(skoMC1*(-2+skoMC1*-3)+skoSC1*(skoMC1*skoMC1*-1+skoSC1*skoMC1*(1/12))))>skoMC1*(-2+skoMC1*-5),skoSC1*skoMC1*-1<=skoMC1,skoSC1*skoMC1>skoMC1*-1,0<=skoMC1,skoMC1>0,0<=skoSC1,2<=skoMC1,skoSC1<=(5/4),skoMC1*skoMC1*skoMC1*2>0,skoMC1*skoMC1*skoMC1*-2<=0,skoSC1*skoMC1*skoMC1*skoMC1>skoMC1*skoMC1*skoMC1*-1]], Reals]]

% In QepcadB format:
(E skoSC1) (E skoMC1) [[(skoSC1 ((skoMC1 (-1+(skoMC1 (3))))+(skoSC1 ((skoMC1 (-2+(skoMC1 (-3))))+(skoSC1 ((skoMC1 skoMC1 (-1))+(skoSC1 ((skoMC1 (1/12))+(skoSC1 skoSC1 ((skoMC1 (-1/360))+(skoSC1 skoSC1 ((skoMC1 (1/20160))+(skoSC1 skoSC1 ((skoMC1 (-1/1814400))+(skoSC1 skoSC1 skoMC1 (1/239500800))))))))))))))))<=(skoMC1 (-2+(skoMC1 (-5))))]/\[[skoMC1<=0]/\[[(skoMC1 (-2+(skoMC1 (-5))))<(skoSC1 ((skoMC1 (-1+(skoMC1 (3))))+(skoSC1 ((skoMC1 (-2+(skoMC1 (-3))))+(skoSC1 ((skoMC1 (1/6+(skoMC1 (-1))))+(skoSC1 skoMC1 (1/4))))))))]/\[[(skoSC1 ((skoMC1 (1+(skoMC1 (-3))))+(skoSC1 ((skoMC1 (2+(skoMC1 (3))))+(skoSC1 ((skoMC1 skoMC1)+(skoSC1 skoMC1 (-1/12))))))))<=(skoMC1 (2+(skoMC1 (5))))]/\[[(skoMC1 (-2+(skoMC1 (-5))))<(skoSC1 ((skoMC1 (-1+(skoMC1 (3))))+(skoSC1 ((skoMC1 (-2+(skoMC1 (-3))))+(skoSC1 ((skoMC1 skoMC1 (-1))+(skoSC1 skoMC1 (1/12))))))))]/\[[(skoSC1 skoMC1 (-1))<=skoMC1]/\[[(skoMC1 (-1))<(skoSC1 skoMC1)]/\[[0<=skoMC1]/\[[0<skoMC1]/\[[0<=skoSC1]/\[[2<=skoMC1]/\[[skoSC1<=5/4]/\[[0<(skoMC1 skoMC1 skoMC1 (2))]/\[[(skoMC1 skoMC1 skoMC1 (-2))<=0]/\[(skoMC1 skoMC1 skoMC1 (-1))<(skoSC1 skoMC1 skoMC1 skoMC1)]]]]]]]]]]]]]]].

% In SMTLib2 format:
(declare-fun skoSC1 () Real) (declare-fun skoMC1 () Real) (assert (and (<= (* skoSC1 (+ (* skoMC1 (+ (- 1.) (* skoMC1 3.))) (* skoSC1 (+ (* skoMC1 (+ (- 2.) (* skoMC1 (- 3.)))) (* skoSC1 (+ (* skoMC1 (* skoMC1 (- 1.))) (* skoSC1 (+ (* skoMC1 (/ 1. 12.)) (* skoSC1 (* skoSC1 (+ (* skoMC1 (/ (- 1.) 360.)) (* skoSC1 (* skoSC1 (+ (* skoMC1 (/ 1. 20160.)) (* skoSC1 (* skoSC1 (+ (* skoMC1 (/ (- 1.) 1814400.)) (* skoSC1 (* skoSC1 (* skoMC1 (/ 1. 239500800.))))))))))))))))))))) (* skoMC1 (+ (- 2.) (* skoMC1 (- 5.))))) (and (<= skoMC1 0.) (and (> (* skoSC1 (+ (* skoMC1 (+ (- 1.) (* skoMC1 3.))) (* skoSC1 (+ (* skoMC1 (+ (- 2.) (* skoMC1 (- 3.)))) (* skoSC1 (+ (* skoMC1 (+ (/ 1. 6.) (* skoMC1 (- 1.)))) (* skoSC1 (* skoMC1 (/ 1. 4.))))))))) (* skoMC1 (+ (- 2.) (* skoMC1 (- 5.))))) (and (<= (* skoSC1 (+ (* skoMC1 (+ 1. (* skoMC1 (- 3.)))) (* skoSC1 (+ (* skoMC1 (+ 2. (* skoMC1 3.))) (* skoSC1 (+ (* skoMC1 skoMC1) (* skoSC1 (* skoMC1 (/ (- 1.) 12.))))))))) (* skoMC1 (+ 2. (* skoMC1 5.)))) (and (> (* skoSC1 (+ (* skoMC1 (+ (- 1.) (* skoMC1 3.))) (* skoSC1 (+ (* skoMC1 (+ (- 2.) (* skoMC1 (- 3.)))) (* skoSC1 (+ (* skoMC1 (* skoMC1 (- 1.))) (* skoSC1 (* skoMC1 (/ 1. 12.))))))))) (* skoMC1 (+ (- 2.) (* skoMC1 (- 5.))))) (and (<= (* skoSC1 (* skoMC1 (- 1.))) skoMC1) (and (> (* skoSC1 skoMC1) (* skoMC1 (- 1.))) (and (<= 0. skoMC1) (and (> skoMC1 0.) (and (<= 0. skoSC1) (and (<= 2. skoMC1) (and (<= skoSC1 (/ 5. 4.)) (and (> (* skoMC1 (* skoMC1 (* skoMC1 2.))) 0.) (and (<= (* skoMC1 (* skoMC1 (* skoMC1 (- 2.)))) 0.) (> (* skoSC1 (* skoMC1 (* skoMC1 skoMC1))) (* skoMC1 (* skoMC1 (* skoMC1 (- 1.))))))))))))))))))))

% In GRF format:
(sequent " MetiTarski formula " (antecedent (<= (* skoSC1 (+ (* skoMC1 (+ (- 1.) (* skoMC1 3.))) (* skoSC1 (+ (* skoMC1 (+ (- 2.) (* skoMC1 (- 3.)))) (* skoSC1 (+ (* skoMC1 (* skoMC1 (- 1.))) (* skoSC1 (+ (* skoMC1 (/ 1. 12.)) (* skoSC1 (* skoSC1 (+ (* skoMC1 (/ (- 1.) 360.)) (* skoSC1 (* skoSC1 (+ (* skoMC1 (/ 1. 20160.)) (* skoSC1 (* skoSC1 (+ (* skoMC1 (/ (- 1.) 1814400.)) (* skoSC1 (* skoSC1 (* skoMC1 (/ 1. 239500800.))))))))))))))))))))) (* skoMC1 (+ (- 2.) (* skoMC1 (- 5.))))) (<= skoMC1 0.) (> (* skoSC1 (+ (* skoMC1 (+ (- 1.) (* skoMC1 3.))) (* skoSC1 (+ (* skoMC1 (+ (- 2.) (* skoMC1 (- 3.)))) (* skoSC1 (+ (* skoMC1 (+ (/ 1. 6.) (* skoMC1 (- 1.)))) (* skoSC1 (* skoMC1 (/ 1. 4.))))))))) (* skoMC1 (+ (- 2.) (* skoMC1 (- 5.))))) (<= (* skoSC1 (+ (* skoMC1 (+ 1. (* skoMC1 (- 3.)))) (* skoSC1 (+ (* skoMC1 (+ 2. (* skoMC1 3.))) (* skoSC1 (+ (* skoMC1 skoMC1) (* skoSC1 (* skoMC1 (/ (- 1.) 12.))))))))) (* skoMC1 (+ 2. (* skoMC1 5.)))) (> (* skoSC1 (+ (* skoMC1 (+ (- 1.) (* skoMC1 3.))) (* skoSC1 (+ (* skoMC1 (+ (- 2.) (* skoMC1 (- 3.)))) (* skoSC1 (+ (* skoMC1 (* skoMC1 (- 1.))) (* skoSC1 (* skoMC1 (/ 1. 12.))))))))) (* skoMC1 (+ (- 2.) (* skoMC1 (- 5.))))) (<= (* skoSC1 (* skoMC1 (- 1.))) skoMC1) (> (* skoSC1 skoMC1) (* skoMC1 (- 1.))) (<= 0. skoMC1) (> skoMC1 0.) (<= 0. skoSC1) (<= 2. skoMC1) (<= skoSC1 (/ 5. 4.)) (> (* skoMC1 (* skoMC1 (* skoMC1 2.))) 0.) (<= (* skoMC1 (* skoMC1 (* skoMC1 (- 2.)))) 0.)) (succedent (<= (* skoSC1 (* skoMC1 (* skoMC1 skoMC1))) (* skoMC1 (* skoMC1 (* skoMC1 (- 1.)))))))
-----[end problem]-----

-----[begin problem]-----
% In Mathematica format:
Timing[Resolve[Exists[{skoSC1,skoMC1}, And[0<=skoMC1,skoSC1*(skoMC1*(-1+skoMC1*3)+skoSC1*(skoMC1*(-2+skoMC1*-3)+skoSC1*(skoMC1*((1/6)+skoMC1*-1)+skoSC1*skoMC1*(1/4))))>skoMC1*(-2+skoMC1*-5),skoSC1*(skoMC1*(1+skoMC1*-3)+skoSC1*(skoMC1*(2+skoMC1*3)+skoSC1*(skoMC1*skoMC1+skoSC1*skoMC1*(-1/12))))<=skoMC1*(2+skoMC1*5),skoSC1*(skoMC1*(-1+skoMC1*3)+skoSC1*(skoMC1*(-2+skoMC1*-3)+skoSC1*(skoMC1*skoMC1*-1+skoSC1*skoMC1*(1/12))))>skoMC1*(-2+skoMC1*-5),skoSC1*skoMC1*-1<=skoMC1,skoSC1*skoMC1>skoMC1*-1,0<=skoMC1,skoMC1>0,0<=skoSC1,2<=skoMC1,skoSC1<=(5/4),skoMC1*skoMC1*skoMC1*2>0,skoMC1*skoMC1*skoMC1*-2<=0,skoSC1*skoMC1*skoMC1*skoMC1>skoMC1*skoMC1*skoMC1*-1]], Reals]]

% In QepcadB format:
(E skoSC1) (E skoMC1) [[0<=skoMC1]/\[[(skoMC1 (-2+(skoMC1 (-5))))<(skoSC1 ((skoMC1 (-1+(skoMC1 (3))))+(skoSC1 ((skoMC1 (-2+(skoMC1 (-3))))+(skoSC1 ((skoMC1 (1/6+(skoMC1 (-1))))+(skoSC1 skoMC1 (1/4))))))))]/\[[(skoSC1 ((skoMC1 (1+(skoMC1 (-3))))+(skoSC1 ((skoMC1 (2+(skoMC1 (3))))+(skoSC1 ((skoMC1 skoMC1)+(skoSC1 skoMC1 (-1/12))))))))<=(skoMC1 (2+(skoMC1 (5))))]/\[[(skoMC1 (-2+(skoMC1 (-5))))<(skoSC1 ((skoMC1 (-1+(skoMC1 (3))))+(skoSC1 ((skoMC1 (-2+(skoMC1 (-3))))+(skoSC1 ((skoMC1 skoMC1 (-1))+(skoSC1 skoMC1 (1/12))))))))]/\[[(skoSC1 skoMC1 (-1))<=skoMC1]/\[[(skoMC1 (-1))<(skoSC1 skoMC1)]/\[[0<=skoMC1]/\[[0<skoMC1]/\[[0<=skoSC1]/\[[2<=skoMC1]/\[[skoSC1<=5/4]/\[[0<(skoMC1 skoMC1 skoMC1 (2))]/\[[(skoMC1 skoMC1 skoMC1 (-2))<=0]/\[(skoMC1 skoMC1 skoMC1 (-1))<(skoSC1 skoMC1 skoMC1 skoMC1)]]]]]]]]]]]]]].

% In SMTLib2 format:
(declare-fun skoSC1 () Real) (declare-fun skoMC1 () Real) (assert (and (<= 0. skoMC1) (and (> (* skoSC1 (+ (* skoMC1 (+ (- 1.) (* skoMC1 3.))) (* skoSC1 (+ (* skoMC1 (+ (- 2.) (* skoMC1 (- 3.)))) (* skoSC1 (+ (* skoMC1 (+ (/ 1. 6.) (* skoMC1 (- 1.)))) (* skoSC1 (* skoMC1 (/ 1. 4.))))))))) (* skoMC1 (+ (- 2.) (* skoMC1 (- 5.))))) (and (<= (* skoSC1 (+ (* skoMC1 (+ 1. (* skoMC1 (- 3.)))) (* skoSC1 (+ (* skoMC1 (+ 2. (* skoMC1 3.))) (* skoSC1 (+ (* skoMC1 skoMC1) (* skoSC1 (* skoMC1 (/ (- 1.) 12.))))))))) (* skoMC1 (+ 2. (* skoMC1 5.)))) (and (> (* skoSC1 (+ (* skoMC1 (+ (- 1.) (* skoMC1 3.))) (* skoSC1 (+ (* skoMC1 (+ (- 2.) (* skoMC1 (- 3.)))) (* skoSC1 (+ (* skoMC1 (* skoMC1 (- 1.))) (* skoSC1 (* skoMC1 (/ 1. 12.))))))))) (* skoMC1 (+ (- 2.) (* skoMC1 (- 5.))))) (and (<= (* skoSC1 (* skoMC1 (- 1.))) skoMC1) (and (> (* skoSC1 skoMC1) (* skoMC1 (- 1.))) (and (<= 0. skoMC1) (and (> skoMC1 0.) (and (<= 0. skoSC1) (and (<= 2. skoMC1) (and (<= skoSC1 (/ 5. 4.)) (and (> (* skoMC1 (* skoMC1 (* skoMC1 2.))) 0.) (and (<= (* skoMC1 (* skoMC1 (* skoMC1 (- 2.)))) 0.) (> (* skoSC1 (* skoMC1 (* skoMC1 skoMC1))) (* skoMC1 (* skoMC1 (* skoMC1 (- 1.)))))))))))))))))))

% In GRF format:
(sequent " MetiTarski formula " (antecedent (<= 0. skoMC1) (> (* skoSC1 (+ (* skoMC1 (+ (- 1.) (* skoMC1 3.))) (* skoSC1 (+ (* skoMC1 (+ (- 2.) (* skoMC1 (- 3.)))) (* skoSC1 (+ (* skoMC1 (+ (/ 1. 6.) (* skoMC1 (- 1.)))) (* skoSC1 (* skoMC1 (/ 1. 4.))))))))) (* skoMC1 (+ (- 2.) (* skoMC1 (- 5.))))) (<= (* skoSC1 (+ (* skoMC1 (+ 1. (* skoMC1 (- 3.)))) (* skoSC1 (+ (* skoMC1 (+ 2. (* skoMC1 3.))) (* skoSC1 (+ (* skoMC1 skoMC1) (* skoSC1 (* skoMC1 (/ (- 1.) 12.))))))))) (* skoMC1 (+ 2. (* skoMC1 5.)))) (> (* skoSC1 (+ (* skoMC1 (+ (- 1.) (* skoMC1 3.))) (* skoSC1 (+ (* skoMC1 (+ (- 2.) (* skoMC1 (- 3.)))) (* skoSC1 (+ (* skoMC1 (* skoMC1 (- 1.))) (* skoSC1 (* skoMC1 (/ 1. 12.))))))))) (* skoMC1 (+ (- 2.) (* skoMC1 (- 5.))))) (<= (* skoSC1 (* skoMC1 (- 1.))) skoMC1) (> (* skoSC1 skoMC1) (* skoMC1 (- 1.))) (<= 0. skoMC1) (> skoMC1 0.) (<= 0. skoSC1) (<= 2. skoMC1) (<= skoSC1 (/ 5. 4.)) (> (* skoMC1 (* skoMC1 (* skoMC1 2.))) 0.) (<= (* skoMC1 (* skoMC1 (* skoMC1 (- 2.)))) 0.)) (succedent (<= (* skoSC1 (* skoMC1 (* skoMC1 skoMC1))) (* skoMC1 (* skoMC1 (* skoMC1 (- 1.)))))))
-----[end problem]-----

-----[begin problem]-----
% In Mathematica format:
Timing[Resolve[Exists[{skoSC1,skoMC1}, And[skoSC1*(skoMC1*(-1+skoMC1*3)+skoSC1*(skoMC1*(-2+skoMC1*-3)+skoSC1*(skoMC1*skoMC1*-1+skoSC1*(skoMC1*(1/12)+skoSC1*skoSC1*(skoMC1*(-1/360)+skoSC1*skoSC1*(skoMC1*(1/20160)+skoSC1*skoSC1*(skoMC1*(-1/1814400)+skoSC1*skoSC1*skoMC1*(1/239500800))))))))>skoMC1*(-2+skoMC1*-5),skoSC1*(skoMC1*(-1+skoMC1*3)+skoSC1*(skoMC1*(-2+skoMC1*-3)+skoSC1*(skoMC1*((1/6)+skoMC1*-1)+skoSC1*skoMC1*(1/4))))>skoMC1*(-2+skoMC1*-5),skoSC1*(skoMC1*(1+skoMC1*-3)+skoSC1*(skoMC1*(2+skoMC1*3)+skoSC1*(skoMC1*skoMC1+skoSC1*skoMC1*(-1/12))))<=skoMC1*(2+skoMC1*5),skoSC1*(skoMC1*(-1+skoMC1*3)+skoSC1*(skoMC1*(-2+skoMC1*-3)+skoSC1*(skoMC1*skoMC1*-1+skoSC1*skoMC1*(1/12))))>skoMC1*(-2+skoMC1*-5),skoSC1*skoMC1*-1<=skoMC1,skoSC1*skoMC1>skoMC1*-1,0<=skoMC1,skoMC1>0,0<=skoSC1,2<=skoMC1,skoSC1<=(5/4),skoMC1*skoMC1*skoMC1*2>0,skoMC1*skoMC1*skoMC1*-2<=0,skoSC1*skoMC1*skoMC1*skoMC1>skoMC1*skoMC1*skoMC1*-1]], Reals]]

% In QepcadB format:
(E skoSC1) (E skoMC1) [[(skoMC1 (-2+(skoMC1 (-5))))<(skoSC1 ((skoMC1 (-1+(skoMC1 (3))))+(skoSC1 ((skoMC1 (-2+(skoMC1 (-3))))+(skoSC1 ((skoMC1 skoMC1 (-1))+(skoSC1 ((skoMC1 (1/12))+(skoSC1 skoSC1 ((skoMC1 (-1/360))+(skoSC1 skoSC1 ((skoMC1 (1/20160))+(skoSC1 skoSC1 ((skoMC1 (-1/1814400))+(skoSC1 skoSC1 skoMC1 (1/239500800))))))))))))))))]/\[[(skoMC1 (-2+(skoMC1 (-5))))<(skoSC1 ((skoMC1 (-1+(skoMC1 (3))))+(skoSC1 ((skoMC1 (-2+(skoMC1 (-3))))+(skoSC1 ((skoMC1 (1/6+(skoMC1 (-1))))+(skoSC1 skoMC1 (1/4))))))))]/\[[(skoSC1 ((skoMC1 (1+(skoMC1 (-3))))+(skoSC1 ((skoMC1 (2+(skoMC1 (3))))+(skoSC1 ((skoMC1 skoMC1)+(skoSC1 skoMC1 (-1/12))))))))<=(skoMC1 (2+(skoMC1 (5))))]/\[[(skoMC1 (-2+(skoMC1 (-5))))<(skoSC1 ((skoMC1 (-1+(skoMC1 (3))))+(skoSC1 ((skoMC1 (-2+(skoMC1 (-3))))+(skoSC1 ((skoMC1 skoMC1 (-1))+(skoSC1 skoMC1 (1/12))))))))]/\[[(skoSC1 skoMC1 (-1))<=skoMC1]/\[[(skoMC1 (-1))<(skoSC1 skoMC1)]/\[[0<=skoMC1]/\[[0<skoMC1]/\[[0<=skoSC1]/\[[2<=skoMC1]/\[[skoSC1<=5/4]/\[[0<(skoMC1 skoMC1 skoMC1 (2))]/\[[(skoMC1 skoMC1 skoMC1 (-2))<=0]/\[(skoMC1 skoMC1 skoMC1 (-1))<(skoSC1 skoMC1 skoMC1 skoMC1)]]]]]]]]]]]]]].

% In SMTLib2 format:
(declare-fun skoSC1 () Real) (declare-fun skoMC1 () Real) (assert (and (> (* skoSC1 (+ (* skoMC1 (+ (- 1.) (* skoMC1 3.))) (* skoSC1 (+ (* skoMC1 (+ (- 2.) (* skoMC1 (- 3.)))) (* skoSC1 (+ (* skoMC1 (* skoMC1 (- 1.))) (* skoSC1 (+ (* skoMC1 (/ 1. 12.)) (* skoSC1 (* skoSC1 (+ (* skoMC1 (/ (- 1.) 360.)) (* skoSC1 (* skoSC1 (+ (* skoMC1 (/ 1. 20160.)) (* skoSC1 (* skoSC1 (+ (* skoMC1 (/ (- 1.) 1814400.)) (* skoSC1 (* skoSC1 (* skoMC1 (/ 1. 239500800.))))))))))))))))))))) (* skoMC1 (+ (- 2.) (* skoMC1 (- 5.))))) (and (> (* skoSC1 (+ (* skoMC1 (+ (- 1.) (* skoMC1 3.))) (* skoSC1 (+ (* skoMC1 (+ (- 2.) (* skoMC1 (- 3.)))) (* skoSC1 (+ (* skoMC1 (+ (/ 1. 6.) (* skoMC1 (- 1.)))) (* skoSC1 (* skoMC1 (/ 1. 4.))))))))) (* skoMC1 (+ (- 2.) (* skoMC1 (- 5.))))) (and (<= (* skoSC1 (+ (* skoMC1 (+ 1. (* skoMC1 (- 3.)))) (* skoSC1 (+ (* skoMC1 (+ 2. (* skoMC1 3.))) (* skoSC1 (+ (* skoMC1 skoMC1) (* skoSC1 (* skoMC1 (/ (- 1.) 12.))))))))) (* skoMC1 (+ 2. (* skoMC1 5.)))) (and (> (* skoSC1 (+ (* skoMC1 (+ (- 1.) (* skoMC1 3.))) (* skoSC1 (+ (* skoMC1 (+ (- 2.) (* skoMC1 (- 3.)))) (* skoSC1 (+ (* skoMC1 (* skoMC1 (- 1.))) (* skoSC1 (* skoMC1 (/ 1. 12.))))))))) (* skoMC1 (+ (- 2.) (* skoMC1 (- 5.))))) (and (<= (* skoSC1 (* skoMC1 (- 1.))) skoMC1) (and (> (* skoSC1 skoMC1) (* skoMC1 (- 1.))) (and (<= 0. skoMC1) (and (> skoMC1 0.) (and (<= 0. skoSC1) (and (<= 2. skoMC1) (and (<= skoSC1 (/ 5. 4.)) (and (> (* skoMC1 (* skoMC1 (* skoMC1 2.))) 0.) (and (<= (* skoMC1 (* skoMC1 (* skoMC1 (- 2.)))) 0.) (> (* skoSC1 (* skoMC1 (* skoMC1 skoMC1))) (* skoMC1 (* skoMC1 (* skoMC1 (- 1.)))))))))))))))))))

% In GRF format:
(sequent " MetiTarski formula " (antecedent (> (* skoSC1 (+ (* skoMC1 (+ (- 1.) (* skoMC1 3.))) (* skoSC1 (+ (* skoMC1 (+ (- 2.) (* skoMC1 (- 3.)))) (* skoSC1 (+ (* skoMC1 (* skoMC1 (- 1.))) (* skoSC1 (+ (* skoMC1 (/ 1. 12.)) (* skoSC1 (* skoSC1 (+ (* skoMC1 (/ (- 1.) 360.)) (* skoSC1 (* skoSC1 (+ (* skoMC1 (/ 1. 20160.)) (* skoSC1 (* skoSC1 (+ (* skoMC1 (/ (- 1.) 1814400.)) (* skoSC1 (* skoSC1 (* skoMC1 (/ 1. 239500800.))))))))))))))))))))) (* skoMC1 (+ (- 2.) (* skoMC1 (- 5.))))) (> (* skoSC1 (+ (* skoMC1 (+ (- 1.) (* skoMC1 3.))) (* skoSC1 (+ (* skoMC1 (+ (- 2.) (* skoMC1 (- 3.)))) (* skoSC1 (+ (* skoMC1 (+ (/ 1. 6.) (* skoMC1 (- 1.)))) (* skoSC1 (* skoMC1 (/ 1. 4.))))))))) (* skoMC1 (+ (- 2.) (* skoMC1 (- 5.))))) (<= (* skoSC1 (+ (* skoMC1 (+ 1. (* skoMC1 (- 3.)))) (* skoSC1 (+ (* skoMC1 (+ 2. (* skoMC1 3.))) (* skoSC1 (+ (* skoMC1 skoMC1) (* skoSC1 (* skoMC1 (/ (- 1.) 12.))))))))) (* skoMC1 (+ 2. (* skoMC1 5.)))) (> (* skoSC1 (+ (* skoMC1 (+ (- 1.) (* skoMC1 3.))) (* skoSC1 (+ (* skoMC1 (+ (- 2.) (* skoMC1 (- 3.)))) (* skoSC1 (+ (* skoMC1 (* skoMC1 (- 1.))) (* skoSC1 (* skoMC1 (/ 1. 12.))))))))) (* skoMC1 (+ (- 2.) (* skoMC1 (- 5.))))) (<= (* skoSC1 (* skoMC1 (- 1.))) skoMC1) (> (* skoSC1 skoMC1) (* skoMC1 (- 1.))) (<= 0. skoMC1) (> skoMC1 0.) (<= 0. skoSC1) (<= 2. skoMC1) (<= skoSC1 (/ 5. 4.)) (> (* skoMC1 (* skoMC1 (* skoMC1 2.))) 0.) (<= (* skoMC1 (* skoMC1 (* skoMC1 (- 2.)))) 0.)) (succedent (<= (* skoSC1 (* skoMC1 (* skoMC1 skoMC1))) (* skoMC1 (* skoMC1 (* skoMC1 (- 1.)))))))
-----[end problem]-----

-----[begin problem]-----
% In Mathematica format:
Timing[Resolve[Exists[{skoSC1,skoMC1}, And[skoSC1*(skoMC1*(-1+skoMC1*3)+skoSC1*(skoMC1*(-2+skoMC1*-3)+skoSC1*(skoMC1*((1/6)+skoMC1*-1)+skoSC1*(skoMC1*(1/4)+skoSC1*skoSC1*(skoMC1*(-1/360)+skoSC1*skoSC1*(skoMC1*(1/20160)+skoSC1*skoSC1*(skoMC1*(-1/1814400)+skoSC1*skoSC1*skoMC1*(1/239500800))))))))>skoMC1*(-2+skoMC1*-5),skoMC1>0,skoSC1*(skoMC1*(-1+skoMC1*3)+skoSC1*(skoMC1*(-2+skoMC1*-3)+skoSC1*(skoMC1*((1/6)+skoMC1*-1)+skoSC1*skoMC1*(1/4))))>skoMC1*(-2+skoMC1*-5),skoSC1*(skoMC1*(1+skoMC1*-3)+skoSC1*(skoMC1*(2+skoMC1*3)+skoSC1*(skoMC1*skoMC1+skoSC1*skoMC1*(-1/12))))<=skoMC1*(2+skoMC1*5),skoSC1*(skoMC1*(-1+skoMC1*3)+skoSC1*(skoMC1*(-2+skoMC1*-3)+skoSC1*(skoMC1*skoMC1*-1+skoSC1*skoMC1*(1/12))))>skoMC1*(-2+skoMC1*-5),skoSC1*skoMC1*-1<=skoMC1,skoSC1*skoMC1>skoMC1*-1,0<=skoMC1,skoMC1>0,0<=skoSC1,2<=skoMC1,skoSC1<=(5/4),skoMC1*skoMC1*skoMC1*2>0,skoMC1*skoMC1*skoMC1*-2<=0,skoSC1*skoMC1*skoMC1*skoMC1>skoMC1*skoMC1*skoMC1*-1]], Reals]]

% In QepcadB format:
(E skoSC1) (E skoMC1) [[(skoMC1 (-2+(skoMC1 (-5))))<(skoSC1 ((skoMC1 (-1+(skoMC1 (3))))+(skoSC1 ((skoMC1 (-2+(skoMC1 (-3))))+(skoSC1 ((skoMC1 (1/6+(skoMC1 (-1))))+(skoSC1 ((skoMC1 (1/4))+(skoSC1 skoSC1 ((skoMC1 (-1/360))+(skoSC1 skoSC1 ((skoMC1 (1/20160))+(skoSC1 skoSC1 ((skoMC1 (-1/1814400))+(skoSC1 skoSC1 skoMC1 (1/239500800))))))))))))))))]/\[[0<skoMC1]/\[[(skoMC1 (-2+(skoMC1 (-5))))<(skoSC1 ((skoMC1 (-1+(skoMC1 (3))))+(skoSC1 ((skoMC1 (-2+(skoMC1 (-3))))+(skoSC1 ((skoMC1 (1/6+(skoMC1 (-1))))+(skoSC1 skoMC1 (1/4))))))))]/\[[(skoSC1 ((skoMC1 (1+(skoMC1 (-3))))+(skoSC1 ((skoMC1 (2+(skoMC1 (3))))+(skoSC1 ((skoMC1 skoMC1)+(skoSC1 skoMC1 (-1/12))))))))<=(skoMC1 (2+(skoMC1 (5))))]/\[[(skoMC1 (-2+(skoMC1 (-5))))<(skoSC1 ((skoMC1 (-1+(skoMC1 (3))))+(skoSC1 ((skoMC1 (-2+(skoMC1 (-3))))+(skoSC1 ((skoMC1 skoMC1 (-1))+(skoSC1 skoMC1 (1/12))))))))]/\[[(skoSC1 skoMC1 (-1))<=skoMC1]/\[[(skoMC1 (-1))<(skoSC1 skoMC1)]/\[[0<=skoMC1]/\[[0<skoMC1]/\[[0<=skoSC1]/\[[2<=skoMC1]/\[[skoSC1<=5/4]/\[[0<(skoMC1 skoMC1 skoMC1 (2))]/\[[(skoMC1 skoMC1 skoMC1 (-2))<=0]/\[(skoMC1 skoMC1 skoMC1 (-1))<(skoSC1 skoMC1 skoMC1 skoMC1)]]]]]]]]]]]]]]].

% In SMTLib2 format:
(declare-fun skoSC1 () Real) (declare-fun skoMC1 () Real) (assert (and (> (* skoSC1 (+ (* skoMC1 (+ (- 1.) (* skoMC1 3.))) (* skoSC1 (+ (* skoMC1 (+ (- 2.) (* skoMC1 (- 3.)))) (* skoSC1 (+ (* skoMC1 (+ (/ 1. 6.) (* skoMC1 (- 1.)))) (* skoSC1 (+ (* skoMC1 (/ 1. 4.)) (* skoSC1 (* skoSC1 (+ (* skoMC1 (/ (- 1.) 360.)) (* skoSC1 (* skoSC1 (+ (* skoMC1 (/ 1. 20160.)) (* skoSC1 (* skoSC1 (+ (* skoMC1 (/ (- 1.) 1814400.)) (* skoSC1 (* skoSC1 (* skoMC1 (/ 1. 239500800.))))))))))))))))))))) (* skoMC1 (+ (- 2.) (* skoMC1 (- 5.))))) (and (> skoMC1 0.) (and (> (* skoSC1 (+ (* skoMC1 (+ (- 1.) (* skoMC1 3.))) (* skoSC1 (+ (* skoMC1 (+ (- 2.) (* skoMC1 (- 3.)))) (* skoSC1 (+ (* skoMC1 (+ (/ 1. 6.) (* skoMC1 (- 1.)))) (* skoSC1 (* skoMC1 (/ 1. 4.))))))))) (* skoMC1 (+ (- 2.) (* skoMC1 (- 5.))))) (and (<= (* skoSC1 (+ (* skoMC1 (+ 1. (* skoMC1 (- 3.)))) (* skoSC1 (+ (* skoMC1 (+ 2. (* skoMC1 3.))) (* skoSC1 (+ (* skoMC1 skoMC1) (* skoSC1 (* skoMC1 (/ (- 1.) 12.))))))))) (* skoMC1 (+ 2. (* skoMC1 5.)))) (and (> (* skoSC1 (+ (* skoMC1 (+ (- 1.) (* skoMC1 3.))) (* skoSC1 (+ (* skoMC1 (+ (- 2.) (* skoMC1 (- 3.)))) (* skoSC1 (+ (* skoMC1 (* skoMC1 (- 1.))) (* skoSC1 (* skoMC1 (/ 1. 12.))))))))) (* skoMC1 (+ (- 2.) (* skoMC1 (- 5.))))) (and (<= (* skoSC1 (* skoMC1 (- 1.))) skoMC1) (and (> (* skoSC1 skoMC1) (* skoMC1 (- 1.))) (and (<= 0. skoMC1) (and (> skoMC1 0.) (and (<= 0. skoSC1) (and (<= 2. skoMC1) (and (<= skoSC1 (/ 5. 4.)) (and (> (* skoMC1 (* skoMC1 (* skoMC1 2.))) 0.) (and (<= (* skoMC1 (* skoMC1 (* skoMC1 (- 2.)))) 0.) (> (* skoSC1 (* skoMC1 (* skoMC1 skoMC1))) (* skoMC1 (* skoMC1 (* skoMC1 (- 1.))))))))))))))))))))

% In GRF format:
(sequent " MetiTarski formula " (antecedent (> (* skoSC1 (+ (* skoMC1 (+ (- 1.) (* skoMC1 3.))) (* skoSC1 (+ (* skoMC1 (+ (- 2.) (* skoMC1 (- 3.)))) (* skoSC1 (+ (* skoMC1 (+ (/ 1. 6.) (* skoMC1 (- 1.)))) (* skoSC1 (+ (* skoMC1 (/ 1. 4.)) (* skoSC1 (* skoSC1 (+ (* skoMC1 (/ (- 1.) 360.)) (* skoSC1 (* skoSC1 (+ (* skoMC1 (/ 1. 20160.)) (* skoSC1 (* skoSC1 (+ (* skoMC1 (/ (- 1.) 1814400.)) (* skoSC1 (* skoSC1 (* skoMC1 (/ 1. 239500800.))))))))))))))))))))) (* skoMC1 (+ (- 2.) (* skoMC1 (- 5.))))) (> skoMC1 0.) (> (* skoSC1 (+ (* skoMC1 (+ (- 1.) (* skoMC1 3.))) (* skoSC1 (+ (* skoMC1 (+ (- 2.) (* skoMC1 (- 3.)))) (* skoSC1 (+ (* skoMC1 (+ (/ 1. 6.) (* skoMC1 (- 1.)))) (* skoSC1 (* skoMC1 (/ 1. 4.))))))))) (* skoMC1 (+ (- 2.) (* skoMC1 (- 5.))))) (<= (* skoSC1 (+ (* skoMC1 (+ 1. (* skoMC1 (- 3.)))) (* skoSC1 (+ (* skoMC1 (+ 2. (* skoMC1 3.))) (* skoSC1 (+ (* skoMC1 skoMC1) (* skoSC1 (* skoMC1 (/ (- 1.) 12.))))))))) (* skoMC1 (+ 2. (* skoMC1 5.)))) (> (* skoSC1 (+ (* skoMC1 (+ (- 1.) (* skoMC1 3.))) (* skoSC1 (+ (* skoMC1 (+ (- 2.) (* skoMC1 (- 3.)))) (* skoSC1 (+ (* skoMC1 (* skoMC1 (- 1.))) (* skoSC1 (* skoMC1 (/ 1. 12.))))))))) (* skoMC1 (+ (- 2.) (* skoMC1 (- 5.))))) (<= (* skoSC1 (* skoMC1 (- 1.))) skoMC1) (> (* skoSC1 skoMC1) (* skoMC1 (- 1.))) (<= 0. skoMC1) (> skoMC1 0.) (<= 0. skoSC1) (<= 2. skoMC1) (<= skoSC1 (/ 5. 4.)) (> (* skoMC1 (* skoMC1 (* skoMC1 2.))) 0.) (<= (* skoMC1 (* skoMC1 (* skoMC1 (- 2.)))) 0.)) (succedent (<= (* skoSC1 (* skoMC1 (* skoMC1 skoMC1))) (* skoMC1 (* skoMC1 (* skoMC1 (- 1.)))))))
-----[end problem]-----

-----[begin problem]-----
% In Mathematica format:
Timing[Resolve[Exists[{skoSC1,skoMC1}, And[skoSC1*(skoMC1*(-1+skoMC1*3)+skoSC1*(skoMC1*(-2+skoMC1*-3)+skoSC1*(skoMC1*((1/6)+skoMC1*-1)+skoSC1*(skoMC1*(1/4)+skoSC1*skoSC1*(skoMC1*(-1/360)+skoSC1*skoSC1*(skoMC1*(1/20160)+skoSC1*skoSC1*(skoMC1*(-1/1814400)+skoSC1*skoSC1*skoMC1*(1/239500800))))))))<=skoMC1*(-2+skoMC1*-5),skoMC1<=0,skoSC1*(skoMC1*(-1+skoMC1*3)+skoSC1*(skoMC1*(-2+skoMC1*-3)+skoSC1*(skoMC1*((1/6)+skoMC1*-1)+skoSC1*skoMC1*(1/4))))>skoMC1*(-2+skoMC1*-5),skoSC1*(skoMC1*(1+skoMC1*-3)+skoSC1*(skoMC1*(2+skoMC1*3)+skoSC1*(skoMC1*skoMC1+skoSC1*skoMC1*(-1/12))))<=skoMC1*(2+skoMC1*5),skoSC1*(skoMC1*(-1+skoMC1*3)+skoSC1*(skoMC1*(-2+skoMC1*-3)+skoSC1*(skoMC1*skoMC1*-1+skoSC1*skoMC1*(1/12))))>skoMC1*(-2+skoMC1*-5),skoSC1*skoMC1*-1<=skoMC1,skoSC1*skoMC1>skoMC1*-1,0<=skoMC1,skoMC1>0,0<=skoSC1,2<=skoMC1,skoSC1<=(5/4),skoMC1*skoMC1*skoMC1*2>0,skoMC1*skoMC1*skoMC1*-2<=0,skoSC1*skoMC1*skoMC1*skoMC1>skoMC1*skoMC1*skoMC1*-1]], Reals]]

% In QepcadB format:
(E skoSC1) (E skoMC1) [[(skoSC1 ((skoMC1 (-1+(skoMC1 (3))))+(skoSC1 ((skoMC1 (-2+(skoMC1 (-3))))+(skoSC1 ((skoMC1 (1/6+(skoMC1 (-1))))+(skoSC1 ((skoMC1 (1/4))+(skoSC1 skoSC1 ((skoMC1 (-1/360))+(skoSC1 skoSC1 ((skoMC1 (1/20160))+(skoSC1 skoSC1 ((skoMC1 (-1/1814400))+(skoSC1 skoSC1 skoMC1 (1/239500800))))))))))))))))<=(skoMC1 (-2+(skoMC1 (-5))))]/\[[skoMC1<=0]/\[[(skoMC1 (-2+(skoMC1 (-5))))<(skoSC1 ((skoMC1 (-1+(skoMC1 (3))))+(skoSC1 ((skoMC1 (-2+(skoMC1 (-3))))+(skoSC1 ((skoMC1 (1/6+(skoMC1 (-1))))+(skoSC1 skoMC1 (1/4))))))))]/\[[(skoSC1 ((skoMC1 (1+(skoMC1 (-3))))+(skoSC1 ((skoMC1 (2+(skoMC1 (3))))+(skoSC1 ((skoMC1 skoMC1)+(skoSC1 skoMC1 (-1/12))))))))<=(skoMC1 (2+(skoMC1 (5))))]/\[[(skoMC1 (-2+(skoMC1 (-5))))<(skoSC1 ((skoMC1 (-1+(skoMC1 (3))))+(skoSC1 ((skoMC1 (-2+(skoMC1 (-3))))+(skoSC1 ((skoMC1 skoMC1 (-1))+(skoSC1 skoMC1 (1/12))))))))]/\[[(skoSC1 skoMC1 (-1))<=skoMC1]/\[[(skoMC1 (-1))<(skoSC1 skoMC1)]/\[[0<=skoMC1]/\[[0<skoMC1]/\[[0<=skoSC1]/\[[2<=skoMC1]/\[[skoSC1<=5/4]/\[[0<(skoMC1 skoMC1 skoMC1 (2))]/\[[(skoMC1 skoMC1 skoMC1 (-2))<=0]/\[(skoMC1 skoMC1 skoMC1 (-1))<(skoSC1 skoMC1 skoMC1 skoMC1)]]]]]]]]]]]]]]].

% In SMTLib2 format:
(declare-fun skoSC1 () Real) (declare-fun skoMC1 () Real) (assert (and (<= (* skoSC1 (+ (* skoMC1 (+ (- 1.) (* skoMC1 3.))) (* skoSC1 (+ (* skoMC1 (+ (- 2.) (* skoMC1 (- 3.)))) (* skoSC1 (+ (* skoMC1 (+ (/ 1. 6.) (* skoMC1 (- 1.)))) (* skoSC1 (+ (* skoMC1 (/ 1. 4.)) (* skoSC1 (* skoSC1 (+ (* skoMC1 (/ (- 1.) 360.)) (* skoSC1 (* skoSC1 (+ (* skoMC1 (/ 1. 20160.)) (* skoSC1 (* skoSC1 (+ (* skoMC1 (/ (- 1.) 1814400.)) (* skoSC1 (* skoSC1 (* skoMC1 (/ 1. 239500800.))))))))))))))))))))) (* skoMC1 (+ (- 2.) (* skoMC1 (- 5.))))) (and (<= skoMC1 0.) (and (> (* skoSC1 (+ (* skoMC1 (+ (- 1.) (* skoMC1 3.))) (* skoSC1 (+ (* skoMC1 (+ (- 2.) (* skoMC1 (- 3.)))) (* skoSC1 (+ (* skoMC1 (+ (/ 1. 6.) (* skoMC1 (- 1.)))) (* skoSC1 (* skoMC1 (/ 1. 4.))))))))) (* skoMC1 (+ (- 2.) (* skoMC1 (- 5.))))) (and (<= (* skoSC1 (+ (* skoMC1 (+ 1. (* skoMC1 (- 3.)))) (* skoSC1 (+ (* skoMC1 (+ 2. (* skoMC1 3.))) (* skoSC1 (+ (* skoMC1 skoMC1) (* skoSC1 (* skoMC1 (/ (- 1.) 12.))))))))) (* skoMC1 (+ 2. (* skoMC1 5.)))) (and (> (* skoSC1 (+ (* skoMC1 (+ (- 1.) (* skoMC1 3.))) (* skoSC1 (+ (* skoMC1 (+ (- 2.) (* skoMC1 (- 3.)))) (* skoSC1 (+ (* skoMC1 (* skoMC1 (- 1.))) (* skoSC1 (* skoMC1 (/ 1. 12.))))))))) (* skoMC1 (+ (- 2.) (* skoMC1 (- 5.))))) (and (<= (* skoSC1 (* skoMC1 (- 1.))) skoMC1) (and (> (* skoSC1 skoMC1) (* skoMC1 (- 1.))) (and (<= 0. skoMC1) (and (> skoMC1 0.) (and (<= 0. skoSC1) (and (<= 2. skoMC1) (and (<= skoSC1 (/ 5. 4.)) (and (> (* skoMC1 (* skoMC1 (* skoMC1 2.))) 0.) (and (<= (* skoMC1 (* skoMC1 (* skoMC1 (- 2.)))) 0.) (> (* skoSC1 (* skoMC1 (* skoMC1 skoMC1))) (* skoMC1 (* skoMC1 (* skoMC1 (- 1.))))))))))))))))))))

% In GRF format:
(sequent " MetiTarski formula " (antecedent (<= (* skoSC1 (+ (* skoMC1 (+ (- 1.) (* skoMC1 3.))) (* skoSC1 (+ (* skoMC1 (+ (- 2.) (* skoMC1 (- 3.)))) (* skoSC1 (+ (* skoMC1 (+ (/ 1. 6.) (* skoMC1 (- 1.)))) (* skoSC1 (+ (* skoMC1 (/ 1. 4.)) (* skoSC1 (* skoSC1 (+ (* skoMC1 (/ (- 1.) 360.)) (* skoSC1 (* skoSC1 (+ (* skoMC1 (/ 1. 20160.)) (* skoSC1 (* skoSC1 (+ (* skoMC1 (/ (- 1.) 1814400.)) (* skoSC1 (* skoSC1 (* skoMC1 (/ 1. 239500800.))))))))))))))))))))) (* skoMC1 (+ (- 2.) (* skoMC1 (- 5.))))) (<= skoMC1 0.) (> (* skoSC1 (+ (* skoMC1 (+ (- 1.) (* skoMC1 3.))) (* skoSC1 (+ (* skoMC1 (+ (- 2.) (* skoMC1 (- 3.)))) (* skoSC1 (+ (* skoMC1 (+ (/ 1. 6.) (* skoMC1 (- 1.)))) (* skoSC1 (* skoMC1 (/ 1. 4.))))))))) (* skoMC1 (+ (- 2.) (* skoMC1 (- 5.))))) (<= (* skoSC1 (+ (* skoMC1 (+ 1. (* skoMC1 (- 3.)))) (* skoSC1 (+ (* skoMC1 (+ 2. (* skoMC1 3.))) (* skoSC1 (+ (* skoMC1 skoMC1) (* skoSC1 (* skoMC1 (/ (- 1.) 12.))))))))) (* skoMC1 (+ 2. (* skoMC1 5.)))) (> (* skoSC1 (+ (* skoMC1 (+ (- 1.) (* skoMC1 3.))) (* skoSC1 (+ (* skoMC1 (+ (- 2.) (* skoMC1 (- 3.)))) (* skoSC1 (+ (* skoMC1 (* skoMC1 (- 1.))) (* skoSC1 (* skoMC1 (/ 1. 12.))))))))) (* skoMC1 (+ (- 2.) (* skoMC1 (- 5.))))) (<= (* skoSC1 (* skoMC1 (- 1.))) skoMC1) (> (* skoSC1 skoMC1) (* skoMC1 (- 1.))) (<= 0. skoMC1) (> skoMC1 0.) (<= 0. skoSC1) (<= 2. skoMC1) (<= skoSC1 (/ 5. 4.)) (> (* skoMC1 (* skoMC1 (* skoMC1 2.))) 0.) (<= (* skoMC1 (* skoMC1 (* skoMC1 (- 2.)))) 0.)) (succedent (<= (* skoSC1 (* skoMC1 (* skoMC1 skoMC1))) (* skoMC1 (* skoMC1 (* skoMC1 (- 1.)))))))
-----[end problem]-----

-----[begin problem]-----
% In Mathematica format:
Timing[Resolve[Exists[{skoSC1,skoMC1}, And[skoSC1*(skoMC1*(-1+skoMC1*3)+skoSC1*(skoMC1*(-2+skoMC1*-3)+skoSC1*(skoMC1*((1/6)+skoMC1*-1)+skoSC1*(skoMC1*(1/4)+skoSC1*skoSC1*(skoMC1*(-1/360)+skoSC1*skoSC1*(skoMC1*(1/20160)+skoSC1*skoSC1*(skoMC1*(-1/1814400)+skoSC1*skoSC1*skoMC1*(1/239500800))))))))>skoMC1*(-2+skoMC1*-5),skoSC1*(skoMC1*(-1+skoMC1*3)+skoSC1*(skoMC1*(-2+skoMC1*-3)+skoSC1*(skoMC1*((1/6)+skoMC1*-1)+skoSC1*skoMC1*(1/4))))>skoMC1*(-2+skoMC1*-5),skoSC1*(skoMC1*(1+skoMC1*-3)+skoSC1*(skoMC1*(2+skoMC1*3)+skoSC1*(skoMC1*skoMC1+skoSC1*skoMC1*(-1/12))))<=skoMC1*(2+skoMC1*5),skoSC1*(skoMC1*(-1+skoMC1*3)+skoSC1*(skoMC1*(-2+skoMC1*-3)+skoSC1*(skoMC1*skoMC1*-1+skoSC1*skoMC1*(1/12))))>skoMC1*(-2+skoMC1*-5),skoSC1*skoMC1*-1<=skoMC1,skoSC1*skoMC1>skoMC1*-1,0<=skoMC1,skoMC1>0,0<=skoSC1,2<=skoMC1,skoSC1<=(5/4),skoMC1*skoMC1*skoMC1*2>0,skoMC1*skoMC1*skoMC1*-2<=0,skoSC1*skoMC1*skoMC1*skoMC1>skoMC1*skoMC1*skoMC1*-1]], Reals]]

% In QepcadB format:
(E skoSC1) (E skoMC1) [[(skoMC1 (-2+(skoMC1 (-5))))<(skoSC1 ((skoMC1 (-1+(skoMC1 (3))))+(skoSC1 ((skoMC1 (-2+(skoMC1 (-3))))+(skoSC1 ((skoMC1 (1/6+(skoMC1 (-1))))+(skoSC1 ((skoMC1 (1/4))+(skoSC1 skoSC1 ((skoMC1 (-1/360))+(skoSC1 skoSC1 ((skoMC1 (1/20160))+(skoSC1 skoSC1 ((skoMC1 (-1/1814400))+(skoSC1 skoSC1 skoMC1 (1/239500800))))))))))))))))]/\[[(skoMC1 (-2+(skoMC1 (-5))))<(skoSC1 ((skoMC1 (-1+(skoMC1 (3))))+(skoSC1 ((skoMC1 (-2+(skoMC1 (-3))))+(skoSC1 ((skoMC1 (1/6+(skoMC1 (-1))))+(skoSC1 skoMC1 (1/4))))))))]/\[[(skoSC1 ((skoMC1 (1+(skoMC1 (-3))))+(skoSC1 ((skoMC1 (2+(skoMC1 (3))))+(skoSC1 ((skoMC1 skoMC1)+(skoSC1 skoMC1 (-1/12))))))))<=(skoMC1 (2+(skoMC1 (5))))]/\[[(skoMC1 (-2+(skoMC1 (-5))))<(skoSC1 ((skoMC1 (-1+(skoMC1 (3))))+(skoSC1 ((skoMC1 (-2+(skoMC1 (-3))))+(skoSC1 ((skoMC1 skoMC1 (-1))+(skoSC1 skoMC1 (1/12))))))))]/\[[(skoSC1 skoMC1 (-1))<=skoMC1]/\[[(skoMC1 (-1))<(skoSC1 skoMC1)]/\[[0<=skoMC1]/\[[0<skoMC1]/\[[0<=skoSC1]/\[[2<=skoMC1]/\[[skoSC1<=5/4]/\[[0<(skoMC1 skoMC1 skoMC1 (2))]/\[[(skoMC1 skoMC1 skoMC1 (-2))<=0]/\[(skoMC1 skoMC1 skoMC1 (-1))<(skoSC1 skoMC1 skoMC1 skoMC1)]]]]]]]]]]]]]].

% In SMTLib2 format:
(declare-fun skoSC1 () Real) (declare-fun skoMC1 () Real) (assert (and (> (* skoSC1 (+ (* skoMC1 (+ (- 1.) (* skoMC1 3.))) (* skoSC1 (+ (* skoMC1 (+ (- 2.) (* skoMC1 (- 3.)))) (* skoSC1 (+ (* skoMC1 (+ (/ 1. 6.) (* skoMC1 (- 1.)))) (* skoSC1 (+ (* skoMC1 (/ 1. 4.)) (* skoSC1 (* skoSC1 (+ (* skoMC1 (/ (- 1.) 360.)) (* skoSC1 (* skoSC1 (+ (* skoMC1 (/ 1. 20160.)) (* skoSC1 (* skoSC1 (+ (* skoMC1 (/ (- 1.) 1814400.)) (* skoSC1 (* skoSC1 (* skoMC1 (/ 1. 239500800.))))))))))))))))))))) (* skoMC1 (+ (- 2.) (* skoMC1 (- 5.))))) (and (> (* skoSC1 (+ (* skoMC1 (+ (- 1.) (* skoMC1 3.))) (* skoSC1 (+ (* skoMC1 (+ (- 2.) (* skoMC1 (- 3.)))) (* skoSC1 (+ (* skoMC1 (+ (/ 1. 6.) (* skoMC1 (- 1.)))) (* skoSC1 (* skoMC1 (/ 1. 4.))))))))) (* skoMC1 (+ (- 2.) (* skoMC1 (- 5.))))) (and (<= (* skoSC1 (+ (* skoMC1 (+ 1. (* skoMC1 (- 3.)))) (* skoSC1 (+ (* skoMC1 (+ 2. (* skoMC1 3.))) (* skoSC1 (+ (* skoMC1 skoMC1) (* skoSC1 (* skoMC1 (/ (- 1.) 12.))))))))) (* skoMC1 (+ 2. (* skoMC1 5.)))) (and (> (* skoSC1 (+ (* skoMC1 (+ (- 1.) (* skoMC1 3.))) (* skoSC1 (+ (* skoMC1 (+ (- 2.) (* skoMC1 (- 3.)))) (* skoSC1 (+ (* skoMC1 (* skoMC1 (- 1.))) (* skoSC1 (* skoMC1 (/ 1. 12.))))))))) (* skoMC1 (+ (- 2.) (* skoMC1 (- 5.))))) (and (<= (* skoSC1 (* skoMC1 (- 1.))) skoMC1) (and (> (* skoSC1 skoMC1) (* skoMC1 (- 1.))) (and (<= 0. skoMC1) (and (> skoMC1 0.) (and (<= 0. skoSC1) (and (<= 2. skoMC1) (and (<= skoSC1 (/ 5. 4.)) (and (> (* skoMC1 (* skoMC1 (* skoMC1 2.))) 0.) (and (<= (* skoMC1 (* skoMC1 (* skoMC1 (- 2.)))) 0.) (> (* skoSC1 (* skoMC1 (* skoMC1 skoMC1))) (* skoMC1 (* skoMC1 (* skoMC1 (- 1.)))))))))))))))))))

% In GRF format:
(sequent " MetiTarski formula " (antecedent (> (* skoSC1 (+ (* skoMC1 (+ (- 1.) (* skoMC1 3.))) (* skoSC1 (+ (* skoMC1 (+ (- 2.) (* skoMC1 (- 3.)))) (* skoSC1 (+ (* skoMC1 (+ (/ 1. 6.) (* skoMC1 (- 1.)))) (* skoSC1 (+ (* skoMC1 (/ 1. 4.)) (* skoSC1 (* skoSC1 (+ (* skoMC1 (/ (- 1.) 360.)) (* skoSC1 (* skoSC1 (+ (* skoMC1 (/ 1. 20160.)) (* skoSC1 (* skoSC1 (+ (* skoMC1 (/ (- 1.) 1814400.)) (* skoSC1 (* skoSC1 (* skoMC1 (/ 1. 239500800.))))))))))))))))))))) (* skoMC1 (+ (- 2.) (* skoMC1 (- 5.))))) (> (* skoSC1 (+ (* skoMC1 (+ (- 1.) (* skoMC1 3.))) (* skoSC1 (+ (* skoMC1 (+ (- 2.) (* skoMC1 (- 3.)))) (* skoSC1 (+ (* skoMC1 (+ (/ 1. 6.) (* skoMC1 (- 1.)))) (* skoSC1 (* skoMC1 (/ 1. 4.))))))))) (* skoMC1 (+ (- 2.) (* skoMC1 (- 5.))))) (<= (* skoSC1 (+ (* skoMC1 (+ 1. (* skoMC1 (- 3.)))) (* skoSC1 (+ (* skoMC1 (+ 2. (* skoMC1 3.))) (* skoSC1 (+ (* skoMC1 skoMC1) (* skoSC1 (* skoMC1 (/ (- 1.) 12.))))))))) (* skoMC1 (+ 2. (* skoMC1 5.)))) (> (* skoSC1 (+ (* skoMC1 (+ (- 1.) (* skoMC1 3.))) (* skoSC1 (+ (* skoMC1 (+ (- 2.) (* skoMC1 (- 3.)))) (* skoSC1 (+ (* skoMC1 (* skoMC1 (- 1.))) (* skoSC1 (* skoMC1 (/ 1. 12.))))))))) (* skoMC1 (+ (- 2.) (* skoMC1 (- 5.))))) (<= (* skoSC1 (* skoMC1 (- 1.))) skoMC1) (> (* skoSC1 skoMC1) (* skoMC1 (- 1.))) (<= 0. skoMC1) (> skoMC1 0.) (<= 0. skoSC1) (<= 2. skoMC1) (<= skoSC1 (/ 5. 4.)) (> (* skoMC1 (* skoMC1 (* skoMC1 2.))) 0.) (<= (* skoMC1 (* skoMC1 (* skoMC1 (- 2.)))) 0.)) (succedent (<= (* skoSC1 (* skoMC1 (* skoMC1 skoMC1))) (* skoMC1 (* skoMC1 (* skoMC1 (- 1.)))))))
-----[end problem]-----

-----[begin problem]-----
% In Mathematica format:
Timing[Resolve[Exists[{skoSC1,skoMC1}, And[skoSC1*(skoMC1*(1+skoMC1*-3)+skoSC1*(skoMC1*(2+skoMC1*3)+skoSC1*(skoMC1*((-1/6)+skoMC1)+skoSC1*skoMC1*(-1/4))))<=skoMC1*(2+skoMC1*5),skoMC1>0,skoSC1*(skoMC1*(-1+skoMC1*3)+skoSC1*(skoMC1*(-2+skoMC1*-3)+skoSC1*(skoMC1*((1/6)+skoMC1*-1)+skoSC1*skoMC1*(1/4))))>skoMC1*(-2+skoMC1*-5),skoSC1*(skoMC1*(1+skoMC1*-3)+skoSC1*(skoMC1*(2+skoMC1*3)+skoSC1*(skoMC1*skoMC1+skoSC1*skoMC1*(-1/12))))<=skoMC1*(2+skoMC1*5),skoSC1*(skoMC1*(-1+skoMC1*3)+skoSC1*(skoMC1*(-2+skoMC1*-3)+skoSC1*(skoMC1*skoMC1*-1+skoSC1*skoMC1*(1/12))))>skoMC1*(-2+skoMC1*-5),skoSC1*skoMC1*-1<=skoMC1,skoSC1*skoMC1>skoMC1*-1,0<=skoMC1,skoMC1>0,0<=skoSC1,2<=skoMC1,skoSC1<=(5/4),skoMC1*skoMC1*skoMC1*2>0,skoMC1*skoMC1*skoMC1*-2<=0,skoSC1*skoMC1*skoMC1*skoMC1>skoMC1*skoMC1*skoMC1*-1]], Reals]]

% In QepcadB format:
(E skoSC1) (E skoMC1) [[(skoSC1 ((skoMC1 (1+(skoMC1 (-3))))+(skoSC1 ((skoMC1 (2+(skoMC1 (3))))+(skoSC1 ((skoMC1 (-1/6+skoMC1))+(skoSC1 skoMC1 (-1/4))))))))<=(skoMC1 (2+(skoMC1 (5))))]/\[[0<skoMC1]/\[[(skoMC1 (-2+(skoMC1 (-5))))<(skoSC1 ((skoMC1 (-1+(skoMC1 (3))))+(skoSC1 ((skoMC1 (-2+(skoMC1 (-3))))+(skoSC1 ((skoMC1 (1/6+(skoMC1 (-1))))+(skoSC1 skoMC1 (1/4))))))))]/\[[(skoSC1 ((skoMC1 (1+(skoMC1 (-3))))+(skoSC1 ((skoMC1 (2+(skoMC1 (3))))+(skoSC1 ((skoMC1 skoMC1)+(skoSC1 skoMC1 (-1/12))))))))<=(skoMC1 (2+(skoMC1 (5))))]/\[[(skoMC1 (-2+(skoMC1 (-5))))<(skoSC1 ((skoMC1 (-1+(skoMC1 (3))))+(skoSC1 ((skoMC1 (-2+(skoMC1 (-3))))+(skoSC1 ((skoMC1 skoMC1 (-1))+(skoSC1 skoMC1 (1/12))))))))]/\[[(skoSC1 skoMC1 (-1))<=skoMC1]/\[[(skoMC1 (-1))<(skoSC1 skoMC1)]/\[[0<=skoMC1]/\[[0<skoMC1]/\[[0<=skoSC1]/\[[2<=skoMC1]/\[[skoSC1<=5/4]/\[[0<(skoMC1 skoMC1 skoMC1 (2))]/\[[(skoMC1 skoMC1 skoMC1 (-2))<=0]/\[(skoMC1 skoMC1 skoMC1 (-1))<(skoSC1 skoMC1 skoMC1 skoMC1)]]]]]]]]]]]]]]].

% In SMTLib2 format:
(declare-fun skoSC1 () Real) (declare-fun skoMC1 () Real) (assert (and (<= (* skoSC1 (+ (* skoMC1 (+ 1. (* skoMC1 (- 3.)))) (* skoSC1 (+ (* skoMC1 (+ 2. (* skoMC1 3.))) (* skoSC1 (+ (* skoMC1 (+ (/ (- 1.) 6.) skoMC1)) (* skoSC1 (* skoMC1 (/ (- 1.) 4.))))))))) (* skoMC1 (+ 2. (* skoMC1 5.)))) (and (> skoMC1 0.) (and (> (* skoSC1 (+ (* skoMC1 (+ (- 1.) (* skoMC1 3.))) (* skoSC1 (+ (* skoMC1 (+ (- 2.) (* skoMC1 (- 3.)))) (* skoSC1 (+ (* skoMC1 (+ (/ 1. 6.) (* skoMC1 (- 1.)))) (* skoSC1 (* skoMC1 (/ 1. 4.))))))))) (* skoMC1 (+ (- 2.) (* skoMC1 (- 5.))))) (and (<= (* skoSC1 (+ (* skoMC1 (+ 1. (* skoMC1 (- 3.)))) (* skoSC1 (+ (* skoMC1 (+ 2. (* skoMC1 3.))) (* skoSC1 (+ (* skoMC1 skoMC1) (* skoSC1 (* skoMC1 (/ (- 1.) 12.))))))))) (* skoMC1 (+ 2. (* skoMC1 5.)))) (and (> (* skoSC1 (+ (* skoMC1 (+ (- 1.) (* skoMC1 3.))) (* skoSC1 (+ (* skoMC1 (+ (- 2.) (* skoMC1 (- 3.)))) (* skoSC1 (+ (* skoMC1 (* skoMC1 (- 1.))) (* skoSC1 (* skoMC1 (/ 1. 12.))))))))) (* skoMC1 (+ (- 2.) (* skoMC1 (- 5.))))) (and (<= (* skoSC1 (* skoMC1 (- 1.))) skoMC1) (and (> (* skoSC1 skoMC1) (* skoMC1 (- 1.))) (and (<= 0. skoMC1) (and (> skoMC1 0.) (and (<= 0. skoSC1) (and (<= 2. skoMC1) (and (<= skoSC1 (/ 5. 4.)) (and (> (* skoMC1 (* skoMC1 (* skoMC1 2.))) 0.) (and (<= (* skoMC1 (* skoMC1 (* skoMC1 (- 2.)))) 0.) (> (* skoSC1 (* skoMC1 (* skoMC1 skoMC1))) (* skoMC1 (* skoMC1 (* skoMC1 (- 1.))))))))))))))))))))

% In GRF format:
(sequent " MetiTarski formula " (antecedent (<= (* skoSC1 (+ (* skoMC1 (+ 1. (* skoMC1 (- 3.)))) (* skoSC1 (+ (* skoMC1 (+ 2. (* skoMC1 3.))) (* skoSC1 (+ (* skoMC1 (+ (/ (- 1.) 6.) skoMC1)) (* skoSC1 (* skoMC1 (/ (- 1.) 4.))))))))) (* skoMC1 (+ 2. (* skoMC1 5.)))) (> skoMC1 0.) (> (* skoSC1 (+ (* skoMC1 (+ (- 1.) (* skoMC1 3.))) (* skoSC1 (+ (* skoMC1 (+ (- 2.) (* skoMC1 (- 3.)))) (* skoSC1 (+ (* skoMC1 (+ (/ 1. 6.) (* skoMC1 (- 1.)))) (* skoSC1 (* skoMC1 (/ 1. 4.))))))))) (* skoMC1 (+ (- 2.) (* skoMC1 (- 5.))))) (<= (* skoSC1 (+ (* skoMC1 (+ 1. (* skoMC1 (- 3.)))) (* skoSC1 (+ (* skoMC1 (+ 2. (* skoMC1 3.))) (* skoSC1 (+ (* skoMC1 skoMC1) (* skoSC1 (* skoMC1 (/ (- 1.) 12.))))))))) (* skoMC1 (+ 2. (* skoMC1 5.)))) (> (* skoSC1 (+ (* skoMC1 (+ (- 1.) (* skoMC1 3.))) (* skoSC1 (+ (* skoMC1 (+ (- 2.) (* skoMC1 (- 3.)))) (* skoSC1 (+ (* skoMC1 (* skoMC1 (- 1.))) (* skoSC1 (* skoMC1 (/ 1. 12.))))))))) (* skoMC1 (+ (- 2.) (* skoMC1 (- 5.))))) (<= (* skoSC1 (* skoMC1 (- 1.))) skoMC1) (> (* skoSC1 skoMC1) (* skoMC1 (- 1.))) (<= 0. skoMC1) (> skoMC1 0.) (<= 0. skoSC1) (<= 2. skoMC1) (<= skoSC1 (/ 5. 4.)) (> (* skoMC1 (* skoMC1 (* skoMC1 2.))) 0.) (<= (* skoMC1 (* skoMC1 (* skoMC1 (- 2.)))) 0.)) (succedent (<= (* skoSC1 (* skoMC1 (* skoMC1 skoMC1))) (* skoMC1 (* skoMC1 (* skoMC1 (- 1.)))))))
-----[end problem]-----

-----[begin problem]-----
% In Mathematica format:
Timing[Resolve[Exists[{skoSC1,skoMC1}, And[skoSC1*(skoMC1*(1+skoMC1*-3)+skoSC1*(skoMC1*(2+skoMC1*3)+skoSC1*(skoMC1*((-1/6)+skoMC1)+skoSC1*skoMC1*(-1/4))))<=skoMC1*(2+skoMC1*5),skoSC1*(skoMC1*(-1+skoMC1*3)+skoSC1*(skoMC1*(-2+skoMC1*-3)+skoSC1*(skoMC1*((1/6)+skoMC1*-1)+skoSC1*skoMC1*(1/4))))>skoMC1*(-2+skoMC1*-5),skoSC1*(skoMC1*(1+skoMC1*-3)+skoSC1*(skoMC1*(2+skoMC1*3)+skoSC1*(skoMC1*skoMC1+skoSC1*skoMC1*(-1/12))))<=skoMC1*(2+skoMC1*5),skoSC1*(skoMC1*(-1+skoMC1*3)+skoSC1*(skoMC1*(-2+skoMC1*-3)+skoSC1*(skoMC1*skoMC1*-1+skoSC1*skoMC1*(1/12))))>skoMC1*(-2+skoMC1*-5),skoSC1*skoMC1*-1<=skoMC1,skoSC1*skoMC1>skoMC1*-1,0<=skoMC1,skoMC1>0,0<=skoSC1,2<=skoMC1,skoSC1<=(5/4),skoMC1*skoMC1*skoMC1*2>0,skoMC1*skoMC1*skoMC1*-2<=0,skoSC1*skoMC1*skoMC1*skoMC1>skoMC1*skoMC1*skoMC1*-1]], Reals]]

% In QepcadB format:
(E skoSC1) (E skoMC1) [[(skoSC1 ((skoMC1 (1+(skoMC1 (-3))))+(skoSC1 ((skoMC1 (2+(skoMC1 (3))))+(skoSC1 ((skoMC1 (-1/6+skoMC1))+(skoSC1 skoMC1 (-1/4))))))))<=(skoMC1 (2+(skoMC1 (5))))]/\[[(skoMC1 (-2+(skoMC1 (-5))))<(skoSC1 ((skoMC1 (-1+(skoMC1 (3))))+(skoSC1 ((skoMC1 (-2+(skoMC1 (-3))))+(skoSC1 ((skoMC1 (1/6+(skoMC1 (-1))))+(skoSC1 skoMC1 (1/4))))))))]/\[[(skoSC1 ((skoMC1 (1+(skoMC1 (-3))))+(skoSC1 ((skoMC1 (2+(skoMC1 (3))))+(skoSC1 ((skoMC1 skoMC1)+(skoSC1 skoMC1 (-1/12))))))))<=(skoMC1 (2+(skoMC1 (5))))]/\[[(skoMC1 (-2+(skoMC1 (-5))))<(skoSC1 ((skoMC1 (-1+(skoMC1 (3))))+(skoSC1 ((skoMC1 (-2+(skoMC1 (-3))))+(skoSC1 ((skoMC1 skoMC1 (-1))+(skoSC1 skoMC1 (1/12))))))))]/\[[(skoSC1 skoMC1 (-1))<=skoMC1]/\[[(skoMC1 (-1))<(skoSC1 skoMC1)]/\[[0<=skoMC1]/\[[0<skoMC1]/\[[0<=skoSC1]/\[[2<=skoMC1]/\[[skoSC1<=5/4]/\[[0<(skoMC1 skoMC1 skoMC1 (2))]/\[[(skoMC1 skoMC1 skoMC1 (-2))<=0]/\[(skoMC1 skoMC1 skoMC1 (-1))<(skoSC1 skoMC1 skoMC1 skoMC1)]]]]]]]]]]]]]].

% In SMTLib2 format:
(declare-fun skoSC1 () Real) (declare-fun skoMC1 () Real) (assert (and (<= (* skoSC1 (+ (* skoMC1 (+ 1. (* skoMC1 (- 3.)))) (* skoSC1 (+ (* skoMC1 (+ 2. (* skoMC1 3.))) (* skoSC1 (+ (* skoMC1 (+ (/ (- 1.) 6.) skoMC1)) (* skoSC1 (* skoMC1 (/ (- 1.) 4.))))))))) (* skoMC1 (+ 2. (* skoMC1 5.)))) (and (> (* skoSC1 (+ (* skoMC1 (+ (- 1.) (* skoMC1 3.))) (* skoSC1 (+ (* skoMC1 (+ (- 2.) (* skoMC1 (- 3.)))) (* skoSC1 (+ (* skoMC1 (+ (/ 1. 6.) (* skoMC1 (- 1.)))) (* skoSC1 (* skoMC1 (/ 1. 4.))))))))) (* skoMC1 (+ (- 2.) (* skoMC1 (- 5.))))) (and (<= (* skoSC1 (+ (* skoMC1 (+ 1. (* skoMC1 (- 3.)))) (* skoSC1 (+ (* skoMC1 (+ 2. (* skoMC1 3.))) (* skoSC1 (+ (* skoMC1 skoMC1) (* skoSC1 (* skoMC1 (/ (- 1.) 12.))))))))) (* skoMC1 (+ 2. (* skoMC1 5.)))) (and (> (* skoSC1 (+ (* skoMC1 (+ (- 1.) (* skoMC1 3.))) (* skoSC1 (+ (* skoMC1 (+ (- 2.) (* skoMC1 (- 3.)))) (* skoSC1 (+ (* skoMC1 (* skoMC1 (- 1.))) (* skoSC1 (* skoMC1 (/ 1. 12.))))))))) (* skoMC1 (+ (- 2.) (* skoMC1 (- 5.))))) (and (<= (* skoSC1 (* skoMC1 (- 1.))) skoMC1) (and (> (* skoSC1 skoMC1) (* skoMC1 (- 1.))) (and (<= 0. skoMC1) (and (> skoMC1 0.) (and (<= 0. skoSC1) (and (<= 2. skoMC1) (and (<= skoSC1 (/ 5. 4.)) (and (> (* skoMC1 (* skoMC1 (* skoMC1 2.))) 0.) (and (<= (* skoMC1 (* skoMC1 (* skoMC1 (- 2.)))) 0.) (> (* skoSC1 (* skoMC1 (* skoMC1 skoMC1))) (* skoMC1 (* skoMC1 (* skoMC1 (- 1.)))))))))))))))))))

% In GRF format:
(sequent " MetiTarski formula " (antecedent (<= (* skoSC1 (+ (* skoMC1 (+ 1. (* skoMC1 (- 3.)))) (* skoSC1 (+ (* skoMC1 (+ 2. (* skoMC1 3.))) (* skoSC1 (+ (* skoMC1 (+ (/ (- 1.) 6.) skoMC1)) (* skoSC1 (* skoMC1 (/ (- 1.) 4.))))))))) (* skoMC1 (+ 2. (* skoMC1 5.)))) (> (* skoSC1 (+ (* skoMC1 (+ (- 1.) (* skoMC1 3.))) (* skoSC1 (+ (* skoMC1 (+ (- 2.) (* skoMC1 (- 3.)))) (* skoSC1 (+ (* skoMC1 (+ (/ 1. 6.) (* skoMC1 (- 1.)))) (* skoSC1 (* skoMC1 (/ 1. 4.))))))))) (* skoMC1 (+ (- 2.) (* skoMC1 (- 5.))))) (<= (* skoSC1 (+ (* skoMC1 (+ 1. (* skoMC1 (- 3.)))) (* skoSC1 (+ (* skoMC1 (+ 2. (* skoMC1 3.))) (* skoSC1 (+ (* skoMC1 skoMC1) (* skoSC1 (* skoMC1 (/ (- 1.) 12.))))))))) (* skoMC1 (+ 2. (* skoMC1 5.)))) (> (* skoSC1 (+ (* skoMC1 (+ (- 1.) (* skoMC1 3.))) (* skoSC1 (+ (* skoMC1 (+ (- 2.) (* skoMC1 (- 3.)))) (* skoSC1 (+ (* skoMC1 (* skoMC1 (- 1.))) (* skoSC1 (* skoMC1 (/ 1. 12.))))))))) (* skoMC1 (+ (- 2.) (* skoMC1 (- 5.))))) (<= (* skoSC1 (* skoMC1 (- 1.))) skoMC1) (> (* skoSC1 skoMC1) (* skoMC1 (- 1.))) (<= 0. skoMC1) (> skoMC1 0.) (<= 0. skoSC1) (<= 2. skoMC1) (<= skoSC1 (/ 5. 4.)) (> (* skoMC1 (* skoMC1 (* skoMC1 2.))) 0.) (<= (* skoMC1 (* skoMC1 (* skoMC1 (- 2.)))) 0.)) (succedent (<= (* skoSC1 (* skoMC1 (* skoMC1 skoMC1))) (* skoMC1 (* skoMC1 (* skoMC1 (- 1.)))))))
-----[end problem]-----

-----[begin problem]-----
% In Mathematica format:
Timing[Resolve[Exists[{skoSC1,skoMC1}, And[skoSC1*(skoMC1*(1+skoMC1*-3)+skoSC1*(skoMC1*(2+skoMC1*3)+skoSC1*(skoMC1*skoMC1+skoSC1*(skoMC1*(-1/12)+skoSC1*skoSC1*(skoMC1*(1/360)+skoSC1*skoSC1*(skoMC1*(-1/20160)+skoSC1*skoSC1*(skoMC1*(1/1814400)+skoSC1*skoSC1*skoMC1*(-1/239500800))))))))<=skoMC1*(2+skoMC1*5),skoSC1<=0,skoMC1>0,skoSC1*(skoMC1*(1+skoMC1*-3)+skoSC1*(skoMC1*(2+skoMC1*3)+skoSC1*(skoMC1*((-1/6)+skoMC1)+skoSC1*skoMC1*(-1/4))))<=skoMC1*(2+skoMC1*5),skoSC1*(skoMC1*(-1+skoMC1*3)+skoSC1*(skoMC1*(-2+skoMC1*-3)+skoSC1*(skoMC1*((1/6)+skoMC1*-1)+skoSC1*skoMC1*(1/4))))>skoMC1*(-2+skoMC1*-5),skoSC1*(skoMC1*(1+skoMC1*-3)+skoSC1*(skoMC1*(2+skoMC1*3)+skoSC1*(skoMC1*skoMC1+skoSC1*skoMC1*(-1/12))))<=skoMC1*(2+skoMC1*5),skoSC1*(skoMC1*(-1+skoMC1*3)+skoSC1*(skoMC1*(-2+skoMC1*-3)+skoSC1*(skoMC1*skoMC1*-1+skoSC1*skoMC1*(1/12))))>skoMC1*(-2+skoMC1*-5),skoSC1*skoMC1*-1<=skoMC1,skoSC1*skoMC1>skoMC1*-1,0<=skoMC1,skoMC1>0,0<=skoSC1,2<=skoMC1,skoSC1<=(5/4),skoMC1*skoMC1*skoMC1*2>0,skoMC1*skoMC1*skoMC1*-2<=0,skoSC1*skoMC1*skoMC1*skoMC1>skoMC1*skoMC1*skoMC1*-1]], Reals]]

% In QepcadB format:
(E skoSC1) (E skoMC1) [[(skoSC1 ((skoMC1 (1+(skoMC1 (-3))))+(skoSC1 ((skoMC1 (2+(skoMC1 (3))))+(skoSC1 ((skoMC1 skoMC1)+(skoSC1 ((skoMC1 (-1/12))+(skoSC1 skoSC1 ((skoMC1 (1/360))+(skoSC1 skoSC1 ((skoMC1 (-1/20160))+(skoSC1 skoSC1 ((skoMC1 (1/1814400))+(skoSC1 skoSC1 skoMC1 (-1/239500800))))))))))))))))<=(skoMC1 (2+(skoMC1 (5))))]/\[[skoSC1<=0]/\[[0<skoMC1]/\[[(skoSC1 ((skoMC1 (1+(skoMC1 (-3))))+(skoSC1 ((skoMC1 (2+(skoMC1 (3))))+(skoSC1 ((skoMC1 (-1/6+skoMC1))+(skoSC1 skoMC1 (-1/4))))))))<=(skoMC1 (2+(skoMC1 (5))))]/\[[(skoMC1 (-2+(skoMC1 (-5))))<(skoSC1 ((skoMC1 (-1+(skoMC1 (3))))+(skoSC1 ((skoMC1 (-2+(skoMC1 (-3))))+(skoSC1 ((skoMC1 (1/6+(skoMC1 (-1))))+(skoSC1 skoMC1 (1/4))))))))]/\[[(skoSC1 ((skoMC1 (1+(skoMC1 (-3))))+(skoSC1 ((skoMC1 (2+(skoMC1 (3))))+(skoSC1 ((skoMC1 skoMC1)+(skoSC1 skoMC1 (-1/12))))))))<=(skoMC1 (2+(skoMC1 (5))))]/\[[(skoMC1 (-2+(skoMC1 (-5))))<(skoSC1 ((skoMC1 (-1+(skoMC1 (3))))+(skoSC1 ((skoMC1 (-2+(skoMC1 (-3))))+(skoSC1 ((skoMC1 skoMC1 (-1))+(skoSC1 skoMC1 (1/12))))))))]/\[[(skoSC1 skoMC1 (-1))<=skoMC1]/\[[(skoMC1 (-1))<(skoSC1 skoMC1)]/\[[0<=skoMC1]/\[[0<skoMC1]/\[[0<=skoSC1]/\[[2<=skoMC1]/\[[skoSC1<=5/4]/\[[0<(skoMC1 skoMC1 skoMC1 (2))]/\[[(skoMC1 skoMC1 skoMC1 (-2))<=0]/\[(skoMC1 skoMC1 skoMC1 (-1))<(skoSC1 skoMC1 skoMC1 skoMC1)]]]]]]]]]]]]]]]]].

% In SMTLib2 format:
(declare-fun skoSC1 () Real) (declare-fun skoMC1 () Real) (assert (and (<= (* skoSC1 (+ (* skoMC1 (+ 1. (* skoMC1 (- 3.)))) (* skoSC1 (+ (* skoMC1 (+ 2. (* skoMC1 3.))) (* skoSC1 (+ (* skoMC1 skoMC1) (* skoSC1 (+ (* skoMC1 (/ (- 1.) 12.)) (* skoSC1 (* skoSC1 (+ (* skoMC1 (/ 1. 360.)) (* skoSC1 (* skoSC1 (+ (* skoMC1 (/ (- 1.) 20160.)) (* skoSC1 (* skoSC1 (+ (* skoMC1 (/ 1. 1814400.)) (* skoSC1 (* skoSC1 (* skoMC1 (/ (- 1.) 239500800.))))))))))))))))))))) (* skoMC1 (+ 2. (* skoMC1 5.)))) (and (<= skoSC1 0.) (and (> skoMC1 0.) (and (<= (* skoSC1 (+ (* skoMC1 (+ 1. (* skoMC1 (- 3.)))) (* skoSC1 (+ (* skoMC1 (+ 2. (* skoMC1 3.))) (* skoSC1 (+ (* skoMC1 (+ (/ (- 1.) 6.) skoMC1)) (* skoSC1 (* skoMC1 (/ (- 1.) 4.))))))))) (* skoMC1 (+ 2. (* skoMC1 5.)))) (and (> (* skoSC1 (+ (* skoMC1 (+ (- 1.) (* skoMC1 3.))) (* skoSC1 (+ (* skoMC1 (+ (- 2.) (* skoMC1 (- 3.)))) (* skoSC1 (+ (* skoMC1 (+ (/ 1. 6.) (* skoMC1 (- 1.)))) (* skoSC1 (* skoMC1 (/ 1. 4.))))))))) (* skoMC1 (+ (- 2.) (* skoMC1 (- 5.))))) (and (<= (* skoSC1 (+ (* skoMC1 (+ 1. (* skoMC1 (- 3.)))) (* skoSC1 (+ (* skoMC1 (+ 2. (* skoMC1 3.))) (* skoSC1 (+ (* skoMC1 skoMC1) (* skoSC1 (* skoMC1 (/ (- 1.) 12.))))))))) (* skoMC1 (+ 2. (* skoMC1 5.)))) (and (> (* skoSC1 (+ (* skoMC1 (+ (- 1.) (* skoMC1 3.))) (* skoSC1 (+ (* skoMC1 (+ (- 2.) (* skoMC1 (- 3.)))) (* skoSC1 (+ (* skoMC1 (* skoMC1 (- 1.))) (* skoSC1 (* skoMC1 (/ 1. 12.))))))))) (* skoMC1 (+ (- 2.) (* skoMC1 (- 5.))))) (and (<= (* skoSC1 (* skoMC1 (- 1.))) skoMC1) (and (> (* skoSC1 skoMC1) (* skoMC1 (- 1.))) (and (<= 0. skoMC1) (and (> skoMC1 0.) (and (<= 0. skoSC1) (and (<= 2. skoMC1) (and (<= skoSC1 (/ 5. 4.)) (and (> (* skoMC1 (* skoMC1 (* skoMC1 2.))) 0.) (and (<= (* skoMC1 (* skoMC1 (* skoMC1 (- 2.)))) 0.) (> (* skoSC1 (* skoMC1 (* skoMC1 skoMC1))) (* skoMC1 (* skoMC1 (* skoMC1 (- 1.))))))))))))))))))))))

% In GRF format:
(sequent " MetiTarski formula " (antecedent (<= (* skoSC1 (+ (* skoMC1 (+ 1. (* skoMC1 (- 3.)))) (* skoSC1 (+ (* skoMC1 (+ 2. (* skoMC1 3.))) (* skoSC1 (+ (* skoMC1 skoMC1) (* skoSC1 (+ (* skoMC1 (/ (- 1.) 12.)) (* skoSC1 (* skoSC1 (+ (* skoMC1 (/ 1. 360.)) (* skoSC1 (* skoSC1 (+ (* skoMC1 (/ (- 1.) 20160.)) (* skoSC1 (* skoSC1 (+ (* skoMC1 (/ 1. 1814400.)) (* skoSC1 (* skoSC1 (* skoMC1 (/ (- 1.) 239500800.))))))))))))))))))))) (* skoMC1 (+ 2. (* skoMC1 5.)))) (<= skoSC1 0.) (> skoMC1 0.) (<= (* skoSC1 (+ (* skoMC1 (+ 1. (* skoMC1 (- 3.)))) (* skoSC1 (+ (* skoMC1 (+ 2. (* skoMC1 3.))) (* skoSC1 (+ (* skoMC1 (+ (/ (- 1.) 6.) skoMC1)) (* skoSC1 (* skoMC1 (/ (- 1.) 4.))))))))) (* skoMC1 (+ 2. (* skoMC1 5.)))) (> (* skoSC1 (+ (* skoMC1 (+ (- 1.) (* skoMC1 3.))) (* skoSC1 (+ (* skoMC1 (+ (- 2.) (* skoMC1 (- 3.)))) (* skoSC1 (+ (* skoMC1 (+ (/ 1. 6.) (* skoMC1 (- 1.)))) (* skoSC1 (* skoMC1 (/ 1. 4.))))))))) (* skoMC1 (+ (- 2.) (* skoMC1 (- 5.))))) (<= (* skoSC1 (+ (* skoMC1 (+ 1. (* skoMC1 (- 3.)))) (* skoSC1 (+ (* skoMC1 (+ 2. (* skoMC1 3.))) (* skoSC1 (+ (* skoMC1 skoMC1) (* skoSC1 (* skoMC1 (/ (- 1.) 12.))))))))) (* skoMC1 (+ 2. (* skoMC1 5.)))) (> (* skoSC1 (+ (* skoMC1 (+ (- 1.) (* skoMC1 3.))) (* skoSC1 (+ (* skoMC1 (+ (- 2.) (* skoMC1 (- 3.)))) (* skoSC1 (+ (* skoMC1 (* skoMC1 (- 1.))) (* skoSC1 (* skoMC1 (/ 1. 12.))))))))) (* skoMC1 (+ (- 2.) (* skoMC1 (- 5.))))) (<= (* skoSC1 (* skoMC1 (- 1.))) skoMC1) (> (* skoSC1 skoMC1) (* skoMC1 (- 1.))) (<= 0. skoMC1) (> skoMC1 0.) (<= 0. skoSC1) (<= 2. skoMC1) (<= skoSC1 (/ 5. 4.)) (> (* skoMC1 (* skoMC1 (* skoMC1 2.))) 0.) (<= (* skoMC1 (* skoMC1 (* skoMC1 (- 2.)))) 0.)) (succedent (<= (* skoSC1 (* skoMC1 (* skoMC1 skoMC1))) (* skoMC1 (* skoMC1 (* skoMC1 (- 1.)))))))
-----[end problem]-----

-----[begin problem]-----
% In Mathematica format:
Timing[Resolve[Exists[{skoSC1,skoMC1}, And[skoSC1*(skoMC1*(1+skoMC1*-3)+skoSC1*(skoMC1*(2+skoMC1*3)+skoSC1*(skoMC1*skoMC1+skoSC1*(skoMC1*(-1/12)+skoSC1*skoSC1*(skoMC1*(1/360)+skoSC1*skoSC1*(skoMC1*(-1/20160)+skoSC1*skoSC1*(skoMC1*(1/1814400)+skoSC1*skoSC1*skoMC1*(-1/239500800))))))))>skoMC1*(2+skoMC1*5),skoMC1>0,skoSC1>0,skoSC1*(skoMC1*(1+skoMC1*-3)+skoSC1*(skoMC1*(2+skoMC1*3)+skoSC1*(skoMC1*((-1/6)+skoMC1)+skoSC1*skoMC1*(-1/4))))<=skoMC1*(2+skoMC1*5),skoSC1*(skoMC1*(-1+skoMC1*3)+skoSC1*(skoMC1*(-2+skoMC1*-3)+skoSC1*(skoMC1*((1/6)+skoMC1*-1)+skoSC1*skoMC1*(1/4))))>skoMC1*(-2+skoMC1*-5),skoSC1*(skoMC1*(1+skoMC1*-3)+skoSC1*(skoMC1*(2+skoMC1*3)+skoSC1*(skoMC1*skoMC1+skoSC1*skoMC1*(-1/12))))<=skoMC1*(2+skoMC1*5),skoSC1*(skoMC1*(-1+skoMC1*3)+skoSC1*(skoMC1*(-2+skoMC1*-3)+skoSC1*(skoMC1*skoMC1*-1+skoSC1*skoMC1*(1/12))))>skoMC1*(-2+skoMC1*-5),skoSC1*skoMC1*-1<=skoMC1,skoSC1*skoMC1>skoMC1*-1,0<=skoMC1,skoMC1>0,0<=skoSC1,2<=skoMC1,skoSC1<=(5/4),skoMC1*skoMC1*skoMC1*2>0,skoMC1*skoMC1*skoMC1*-2<=0,skoSC1*skoMC1*skoMC1*skoMC1>skoMC1*skoMC1*skoMC1*-1]], Reals]]

% In QepcadB format:
(E skoSC1) (E skoMC1) [[(skoMC1 (2+(skoMC1 (5))))<(skoSC1 ((skoMC1 (1+(skoMC1 (-3))))+(skoSC1 ((skoMC1 (2+(skoMC1 (3))))+(skoSC1 ((skoMC1 skoMC1)+(skoSC1 ((skoMC1 (-1/12))+(skoSC1 skoSC1 ((skoMC1 (1/360))+(skoSC1 skoSC1 ((skoMC1 (-1/20160))+(skoSC1 skoSC1 ((skoMC1 (1/1814400))+(skoSC1 skoSC1 skoMC1 (-1/239500800))))))))))))))))]/\[[0<skoMC1]/\[[0<skoSC1]/\[[(skoSC1 ((skoMC1 (1+(skoMC1 (-3))))+(skoSC1 ((skoMC1 (2+(skoMC1 (3))))+(skoSC1 ((skoMC1 (-1/6+skoMC1))+(skoSC1 skoMC1 (-1/4))))))))<=(skoMC1 (2+(skoMC1 (5))))]/\[[(skoMC1 (-2+(skoMC1 (-5))))<(skoSC1 ((skoMC1 (-1+(skoMC1 (3))))+(skoSC1 ((skoMC1 (-2+(skoMC1 (-3))))+(skoSC1 ((skoMC1 (1/6+(skoMC1 (-1))))+(skoSC1 skoMC1 (1/4))))))))]/\[[(skoSC1 ((skoMC1 (1+(skoMC1 (-3))))+(skoSC1 ((skoMC1 (2+(skoMC1 (3))))+(skoSC1 ((skoMC1 skoMC1)+(skoSC1 skoMC1 (-1/12))))))))<=(skoMC1 (2+(skoMC1 (5))))]/\[[(skoMC1 (-2+(skoMC1 (-5))))<(skoSC1 ((skoMC1 (-1+(skoMC1 (3))))+(skoSC1 ((skoMC1 (-2+(skoMC1 (-3))))+(skoSC1 ((skoMC1 skoMC1 (-1))+(skoSC1 skoMC1 (1/12))))))))]/\[[(skoSC1 skoMC1 (-1))<=skoMC1]/\[[(skoMC1 (-1))<(skoSC1 skoMC1)]/\[[0<=skoMC1]/\[[0<skoMC1]/\[[0<=skoSC1]/\[[2<=skoMC1]/\[[skoSC1<=5/4]/\[[0<(skoMC1 skoMC1 skoMC1 (2))]/\[[(skoMC1 skoMC1 skoMC1 (-2))<=0]/\[(skoMC1 skoMC1 skoMC1 (-1))<(skoSC1 skoMC1 skoMC1 skoMC1)]]]]]]]]]]]]]]]]].

% In SMTLib2 format:
(declare-fun skoSC1 () Real) (declare-fun skoMC1 () Real) (assert (and (> (* skoSC1 (+ (* skoMC1 (+ 1. (* skoMC1 (- 3.)))) (* skoSC1 (+ (* skoMC1 (+ 2. (* skoMC1 3.))) (* skoSC1 (+ (* skoMC1 skoMC1) (* skoSC1 (+ (* skoMC1 (/ (- 1.) 12.)) (* skoSC1 (* skoSC1 (+ (* skoMC1 (/ 1. 360.)) (* skoSC1 (* skoSC1 (+ (* skoMC1 (/ (- 1.) 20160.)) (* skoSC1 (* skoSC1 (+ (* skoMC1 (/ 1. 1814400.)) (* skoSC1 (* skoSC1 (* skoMC1 (/ (- 1.) 239500800.))))))))))))))))))))) (* skoMC1 (+ 2. (* skoMC1 5.)))) (and (> skoMC1 0.) (and (> skoSC1 0.) (and (<= (* skoSC1 (+ (* skoMC1 (+ 1. (* skoMC1 (- 3.)))) (* skoSC1 (+ (* skoMC1 (+ 2. (* skoMC1 3.))) (* skoSC1 (+ (* skoMC1 (+ (/ (- 1.) 6.) skoMC1)) (* skoSC1 (* skoMC1 (/ (- 1.) 4.))))))))) (* skoMC1 (+ 2. (* skoMC1 5.)))) (and (> (* skoSC1 (+ (* skoMC1 (+ (- 1.) (* skoMC1 3.))) (* skoSC1 (+ (* skoMC1 (+ (- 2.) (* skoMC1 (- 3.)))) (* skoSC1 (+ (* skoMC1 (+ (/ 1. 6.) (* skoMC1 (- 1.)))) (* skoSC1 (* skoMC1 (/ 1. 4.))))))))) (* skoMC1 (+ (- 2.) (* skoMC1 (- 5.))))) (and (<= (* skoSC1 (+ (* skoMC1 (+ 1. (* skoMC1 (- 3.)))) (* skoSC1 (+ (* skoMC1 (+ 2. (* skoMC1 3.))) (* skoSC1 (+ (* skoMC1 skoMC1) (* skoSC1 (* skoMC1 (/ (- 1.) 12.))))))))) (* skoMC1 (+ 2. (* skoMC1 5.)))) (and (> (* skoSC1 (+ (* skoMC1 (+ (- 1.) (* skoMC1 3.))) (* skoSC1 (+ (* skoMC1 (+ (- 2.) (* skoMC1 (- 3.)))) (* skoSC1 (+ (* skoMC1 (* skoMC1 (- 1.))) (* skoSC1 (* skoMC1 (/ 1. 12.))))))))) (* skoMC1 (+ (- 2.) (* skoMC1 (- 5.))))) (and (<= (* skoSC1 (* skoMC1 (- 1.))) skoMC1) (and (> (* skoSC1 skoMC1) (* skoMC1 (- 1.))) (and (<= 0. skoMC1) (and (> skoMC1 0.) (and (<= 0. skoSC1) (and (<= 2. skoMC1) (and (<= skoSC1 (/ 5. 4.)) (and (> (* skoMC1 (* skoMC1 (* skoMC1 2.))) 0.) (and (<= (* skoMC1 (* skoMC1 (* skoMC1 (- 2.)))) 0.) (> (* skoSC1 (* skoMC1 (* skoMC1 skoMC1))) (* skoMC1 (* skoMC1 (* skoMC1 (- 1.))))))))))))))))))))))

% In GRF format:
(sequent " MetiTarski formula " (antecedent (> (* skoSC1 (+ (* skoMC1 (+ 1. (* skoMC1 (- 3.)))) (* skoSC1 (+ (* skoMC1 (+ 2. (* skoMC1 3.))) (* skoSC1 (+ (* skoMC1 skoMC1) (* skoSC1 (+ (* skoMC1 (/ (- 1.) 12.)) (* skoSC1 (* skoSC1 (+ (* skoMC1 (/ 1. 360.)) (* skoSC1 (* skoSC1 (+ (* skoMC1 (/ (- 1.) 20160.)) (* skoSC1 (* skoSC1 (+ (* skoMC1 (/ 1. 1814400.)) (* skoSC1 (* skoSC1 (* skoMC1 (/ (- 1.) 239500800.))))))))))))))))))))) (* skoMC1 (+ 2. (* skoMC1 5.)))) (> skoMC1 0.) (> skoSC1 0.) (<= (* skoSC1 (+ (* skoMC1 (+ 1. (* skoMC1 (- 3.)))) (* skoSC1 (+ (* skoMC1 (+ 2. (* skoMC1 3.))) (* skoSC1 (+ (* skoMC1 (+ (/ (- 1.) 6.) skoMC1)) (* skoSC1 (* skoMC1 (/ (- 1.) 4.))))))))) (* skoMC1 (+ 2. (* skoMC1 5.)))) (> (* skoSC1 (+ (* skoMC1 (+ (- 1.) (* skoMC1 3.))) (* skoSC1 (+ (* skoMC1 (+ (- 2.) (* skoMC1 (- 3.)))) (* skoSC1 (+ (* skoMC1 (+ (/ 1. 6.) (* skoMC1 (- 1.)))) (* skoSC1 (* skoMC1 (/ 1. 4.))))))))) (* skoMC1 (+ (- 2.) (* skoMC1 (- 5.))))) (<= (* skoSC1 (+ (* skoMC1 (+ 1. (* skoMC1 (- 3.)))) (* skoSC1 (+ (* skoMC1 (+ 2. (* skoMC1 3.))) (* skoSC1 (+ (* skoMC1 skoMC1) (* skoSC1 (* skoMC1 (/ (- 1.) 12.))))))))) (* skoMC1 (+ 2. (* skoMC1 5.)))) (> (* skoSC1 (+ (* skoMC1 (+ (- 1.) (* skoMC1 3.))) (* skoSC1 (+ (* skoMC1 (+ (- 2.) (* skoMC1 (- 3.)))) (* skoSC1 (+ (* skoMC1 (* skoMC1 (- 1.))) (* skoSC1 (* skoMC1 (/ 1. 12.))))))))) (* skoMC1 (+ (- 2.) (* skoMC1 (- 5.))))) (<= (* skoSC1 (* skoMC1 (- 1.))) skoMC1) (> (* skoSC1 skoMC1) (* skoMC1 (- 1.))) (<= 0. skoMC1) (> skoMC1 0.) (<= 0. skoSC1) (<= 2. skoMC1) (<= skoSC1 (/ 5. 4.)) (> (* skoMC1 (* skoMC1 (* skoMC1 2.))) 0.) (<= (* skoMC1 (* skoMC1 (* skoMC1 (- 2.)))) 0.)) (succedent (<= (* skoSC1 (* skoMC1 (* skoMC1 skoMC1))) (* skoMC1 (* skoMC1 (* skoMC1 (- 1.)))))))
-----[end problem]-----

-----[begin problem]-----
% In Mathematica format:
Timing[Resolve[Exists[{skoSC1,skoMC1}, And[skoMC1<=0,skoSC1*(skoMC1*(1+skoMC1*-3)+skoSC1*(skoMC1*(2+skoMC1*3)+skoSC1*(skoMC1*skoMC1+skoSC1*(skoMC1*(-1/12)+skoSC1*skoSC1*(skoMC1*(1/360)+skoSC1*skoSC1*(skoMC1*(-1/20160)+skoSC1*skoSC1*(skoMC1*(1/1814400)+skoSC1*skoSC1*skoMC1*(-1/239500800))))))))>skoMC1*(2+skoMC1*5),skoSC1*(skoMC1*(1+skoMC1*-3)+skoSC1*(skoMC1*(2+skoMC1*3)+skoSC1*(skoMC1*((-1/6)+skoMC1)+skoSC1*skoMC1*(-1/4))))<=skoMC1*(2+skoMC1*5),skoSC1*(skoMC1*(-1+skoMC1*3)+skoSC1*(skoMC1*(-2+skoMC1*-3)+skoSC1*(skoMC1*((1/6)+skoMC1*-1)+skoSC1*skoMC1*(1/4))))>skoMC1*(-2+skoMC1*-5),skoSC1*(skoMC1*(1+skoMC1*-3)+skoSC1*(skoMC1*(2+skoMC1*3)+skoSC1*(skoMC1*skoMC1+skoSC1*skoMC1*(-1/12))))<=skoMC1*(2+skoMC1*5),skoSC1*(skoMC1*(-1+skoMC1*3)+skoSC1*(skoMC1*(-2+skoMC1*-3)+skoSC1*(skoMC1*skoMC1*-1+skoSC1*skoMC1*(1/12))))>skoMC1*(-2+skoMC1*-5),skoSC1*skoMC1*-1<=skoMC1,skoSC1*skoMC1>skoMC1*-1,0<=skoMC1,skoMC1>0,0<=skoSC1,2<=skoMC1,skoSC1<=(5/4),skoMC1*skoMC1*skoMC1*2>0,skoMC1*skoMC1*skoMC1*-2<=0,skoSC1*skoMC1*skoMC1*skoMC1>skoMC1*skoMC1*skoMC1*-1]], Reals]]

% In QepcadB format:
(E skoSC1) (E skoMC1) [[skoMC1<=0]/\[[(skoMC1 (2+(skoMC1 (5))))<(skoSC1 ((skoMC1 (1+(skoMC1 (-3))))+(skoSC1 ((skoMC1 (2+(skoMC1 (3))))+(skoSC1 ((skoMC1 skoMC1)+(skoSC1 ((skoMC1 (-1/12))+(skoSC1 skoSC1 ((skoMC1 (1/360))+(skoSC1 skoSC1 ((skoMC1 (-1/20160))+(skoSC1 skoSC1 ((skoMC1 (1/1814400))+(skoSC1 skoSC1 skoMC1 (-1/239500800))))))))))))))))]/\[[(skoSC1 ((skoMC1 (1+(skoMC1 (-3))))+(skoSC1 ((skoMC1 (2+(skoMC1 (3))))+(skoSC1 ((skoMC1 (-1/6+skoMC1))+(skoSC1 skoMC1 (-1/4))))))))<=(skoMC1 (2+(skoMC1 (5))))]/\[[(skoMC1 (-2+(skoMC1 (-5))))<(skoSC1 ((skoMC1 (-1+(skoMC1 (3))))+(skoSC1 ((skoMC1 (-2+(skoMC1 (-3))))+(skoSC1 ((skoMC1 (1/6+(skoMC1 (-1))))+(skoSC1 skoMC1 (1/4))))))))]/\[[(skoSC1 ((skoMC1 (1+(skoMC1 (-3))))+(skoSC1 ((skoMC1 (2+(skoMC1 (3))))+(skoSC1 ((skoMC1 skoMC1)+(skoSC1 skoMC1 (-1/12))))))))<=(skoMC1 (2+(skoMC1 (5))))]/\[[(skoMC1 (-2+(skoMC1 (-5))))<(skoSC1 ((skoMC1 (-1+(skoMC1 (3))))+(skoSC1 ((skoMC1 (-2+(skoMC1 (-3))))+(skoSC1 ((skoMC1 skoMC1 (-1))+(skoSC1 skoMC1 (1/12))))))))]/\[[(skoSC1 skoMC1 (-1))<=skoMC1]/\[[(skoMC1 (-1))<(skoSC1 skoMC1)]/\[[0<=skoMC1]/\[[0<skoMC1]/\[[0<=skoSC1]/\[[2<=skoMC1]/\[[skoSC1<=5/4]/\[[0<(skoMC1 skoMC1 skoMC1 (2))]/\[[(skoMC1 skoMC1 skoMC1 (-2))<=0]/\[(skoMC1 skoMC1 skoMC1 (-1))<(skoSC1 skoMC1 skoMC1 skoMC1)]]]]]]]]]]]]]]]].

% In SMTLib2 format:
(declare-fun skoSC1 () Real) (declare-fun skoMC1 () Real) (assert (and (<= skoMC1 0.) (and (> (* skoSC1 (+ (* skoMC1 (+ 1. (* skoMC1 (- 3.)))) (* skoSC1 (+ (* skoMC1 (+ 2. (* skoMC1 3.))) (* skoSC1 (+ (* skoMC1 skoMC1) (* skoSC1 (+ (* skoMC1 (/ (- 1.) 12.)) (* skoSC1 (* skoSC1 (+ (* skoMC1 (/ 1. 360.)) (* skoSC1 (* skoSC1 (+ (* skoMC1 (/ (- 1.) 20160.)) (* skoSC1 (* skoSC1 (+ (* skoMC1 (/ 1. 1814400.)) (* skoSC1 (* skoSC1 (* skoMC1 (/ (- 1.) 239500800.))))))))))))))))))))) (* skoMC1 (+ 2. (* skoMC1 5.)))) (and (<= (* skoSC1 (+ (* skoMC1 (+ 1. (* skoMC1 (- 3.)))) (* skoSC1 (+ (* skoMC1 (+ 2. (* skoMC1 3.))) (* skoSC1 (+ (* skoMC1 (+ (/ (- 1.) 6.) skoMC1)) (* skoSC1 (* skoMC1 (/ (- 1.) 4.))))))))) (* skoMC1 (+ 2. (* skoMC1 5.)))) (and (> (* skoSC1 (+ (* skoMC1 (+ (- 1.) (* skoMC1 3.))) (* skoSC1 (+ (* skoMC1 (+ (- 2.) (* skoMC1 (- 3.)))) (* skoSC1 (+ (* skoMC1 (+ (/ 1. 6.) (* skoMC1 (- 1.)))) (* skoSC1 (* skoMC1 (/ 1. 4.))))))))) (* skoMC1 (+ (- 2.) (* skoMC1 (- 5.))))) (and (<= (* skoSC1 (+ (* skoMC1 (+ 1. (* skoMC1 (- 3.)))) (* skoSC1 (+ (* skoMC1 (+ 2. (* skoMC1 3.))) (* skoSC1 (+ (* skoMC1 skoMC1) (* skoSC1 (* skoMC1 (/ (- 1.) 12.))))))))) (* skoMC1 (+ 2. (* skoMC1 5.)))) (and (> (* skoSC1 (+ (* skoMC1 (+ (- 1.) (* skoMC1 3.))) (* skoSC1 (+ (* skoMC1 (+ (- 2.) (* skoMC1 (- 3.)))) (* skoSC1 (+ (* skoMC1 (* skoMC1 (- 1.))) (* skoSC1 (* skoMC1 (/ 1. 12.))))))))) (* skoMC1 (+ (- 2.) (* skoMC1 (- 5.))))) (and (<= (* skoSC1 (* skoMC1 (- 1.))) skoMC1) (and (> (* skoSC1 skoMC1) (* skoMC1 (- 1.))) (and (<= 0. skoMC1) (and (> skoMC1 0.) (and (<= 0. skoSC1) (and (<= 2. skoMC1) (and (<= skoSC1 (/ 5. 4.)) (and (> (* skoMC1 (* skoMC1 (* skoMC1 2.))) 0.) (and (<= (* skoMC1 (* skoMC1 (* skoMC1 (- 2.)))) 0.) (> (* skoSC1 (* skoMC1 (* skoMC1 skoMC1))) (* skoMC1 (* skoMC1 (* skoMC1 (- 1.)))))))))))))))))))))

% In GRF format:
(sequent " MetiTarski formula " (antecedent (<= skoMC1 0.) (> (* skoSC1 (+ (* skoMC1 (+ 1. (* skoMC1 (- 3.)))) (* skoSC1 (+ (* skoMC1 (+ 2. (* skoMC1 3.))) (* skoSC1 (+ (* skoMC1 skoMC1) (* skoSC1 (+ (* skoMC1 (/ (- 1.) 12.)) (* skoSC1 (* skoSC1 (+ (* skoMC1 (/ 1. 360.)) (* skoSC1 (* skoSC1 (+ (* skoMC1 (/ (- 1.) 20160.)) (* skoSC1 (* skoSC1 (+ (* skoMC1 (/ 1. 1814400.)) (* skoSC1 (* skoSC1 (* skoMC1 (/ (- 1.) 239500800.))))))))))))))))))))) (* skoMC1 (+ 2. (* skoMC1 5.)))) (<= (* skoSC1 (+ (* skoMC1 (+ 1. (* skoMC1 (- 3.)))) (* skoSC1 (+ (* skoMC1 (+ 2. (* skoMC1 3.))) (* skoSC1 (+ (* skoMC1 (+ (/ (- 1.) 6.) skoMC1)) (* skoSC1 (* skoMC1 (/ (- 1.) 4.))))))))) (* skoMC1 (+ 2. (* skoMC1 5.)))) (> (* skoSC1 (+ (* skoMC1 (+ (- 1.) (* skoMC1 3.))) (* skoSC1 (+ (* skoMC1 (+ (- 2.) (* skoMC1 (- 3.)))) (* skoSC1 (+ (* skoMC1 (+ (/ 1. 6.) (* skoMC1 (- 1.)))) (* skoSC1 (* skoMC1 (/ 1. 4.))))))))) (* skoMC1 (+ (- 2.) (* skoMC1 (- 5.))))) (<= (* skoSC1 (+ (* skoMC1 (+ 1. (* skoMC1 (- 3.)))) (* skoSC1 (+ (* skoMC1 (+ 2. (* skoMC1 3.))) (* skoSC1 (+ (* skoMC1 skoMC1) (* skoSC1 (* skoMC1 (/ (- 1.) 12.))))))))) (* skoMC1 (+ 2. (* skoMC1 5.)))) (> (* skoSC1 (+ (* skoMC1 (+ (- 1.) (* skoMC1 3.))) (* skoSC1 (+ (* skoMC1 (+ (- 2.) (* skoMC1 (- 3.)))) (* skoSC1 (+ (* skoMC1 (* skoMC1 (- 1.))) (* skoSC1 (* skoMC1 (/ 1. 12.))))))))) (* skoMC1 (+ (- 2.) (* skoMC1 (- 5.))))) (<= (* skoSC1 (* skoMC1 (- 1.))) skoMC1) (> (* skoSC1 skoMC1) (* skoMC1 (- 1.))) (<= 0. skoMC1) (> skoMC1 0.) (<= 0. skoSC1) (<= 2. skoMC1) (<= skoSC1 (/ 5. 4.)) (> (* skoMC1 (* skoMC1 (* skoMC1 2.))) 0.) (<= (* skoMC1 (* skoMC1 (* skoMC1 (- 2.)))) 0.)) (succedent (<= (* skoSC1 (* skoMC1 (* skoMC1 skoMC1))) (* skoMC1 (* skoMC1 (* skoMC1 (- 1.)))))))
-----[end problem]-----

-----[begin problem]-----
% In Mathematica format:
Timing[Resolve[Exists[{skoSC1,skoMC1}, And[0<=skoMC1,skoSC1*(skoMC1*(1+skoMC1*-3)+skoSC1*(skoMC1*(2+skoMC1*3)+skoSC1*(skoMC1*((-1/6)+skoMC1)+skoSC1*skoMC1*(-1/4))))<=skoMC1*(2+skoMC1*5),skoSC1*(skoMC1*(-1+skoMC1*3)+skoSC1*(skoMC1*(-2+skoMC1*-3)+skoSC1*(skoMC1*((1/6)+skoMC1*-1)+skoSC1*skoMC1*(1/4))))>skoMC1*(-2+skoMC1*-5),skoSC1*(skoMC1*(1+skoMC1*-3)+skoSC1*(skoMC1*(2+skoMC1*3)+skoSC1*(skoMC1*skoMC1+skoSC1*skoMC1*(-1/12))))<=skoMC1*(2+skoMC1*5),skoSC1*(skoMC1*(-1+skoMC1*3)+skoSC1*(skoMC1*(-2+skoMC1*-3)+skoSC1*(skoMC1*skoMC1*-1+skoSC1*skoMC1*(1/12))))>skoMC1*(-2+skoMC1*-5),skoSC1*skoMC1*-1<=skoMC1,skoSC1*skoMC1>skoMC1*-1,0<=skoMC1,skoMC1>0,0<=skoSC1,2<=skoMC1,skoSC1<=(5/4),skoMC1*skoMC1*skoMC1*2>0,skoMC1*skoMC1*skoMC1*-2<=0,skoSC1*skoMC1*skoMC1*skoMC1>skoMC1*skoMC1*skoMC1*-1]], Reals]]

% In QepcadB format:
(E skoSC1) (E skoMC1) [[0<=skoMC1]/\[[(skoSC1 ((skoMC1 (1+(skoMC1 (-3))))+(skoSC1 ((skoMC1 (2+(skoMC1 (3))))+(skoSC1 ((skoMC1 (-1/6+skoMC1))+(skoSC1 skoMC1 (-1/4))))))))<=(skoMC1 (2+(skoMC1 (5))))]/\[[(skoMC1 (-2+(skoMC1 (-5))))<(skoSC1 ((skoMC1 (-1+(skoMC1 (3))))+(skoSC1 ((skoMC1 (-2+(skoMC1 (-3))))+(skoSC1 ((skoMC1 (1/6+(skoMC1 (-1))))+(skoSC1 skoMC1 (1/4))))))))]/\[[(skoSC1 ((skoMC1 (1+(skoMC1 (-3))))+(skoSC1 ((skoMC1 (2+(skoMC1 (3))))+(skoSC1 ((skoMC1 skoMC1)+(skoSC1 skoMC1 (-1/12))))))))<=(skoMC1 (2+(skoMC1 (5))))]/\[[(skoMC1 (-2+(skoMC1 (-5))))<(skoSC1 ((skoMC1 (-1+(skoMC1 (3))))+(skoSC1 ((skoMC1 (-2+(skoMC1 (-3))))+(skoSC1 ((skoMC1 skoMC1 (-1))+(skoSC1 skoMC1 (1/12))))))))]/\[[(skoSC1 skoMC1 (-1))<=skoMC1]/\[[(skoMC1 (-1))<(skoSC1 skoMC1)]/\[[0<=skoMC1]/\[[0<skoMC1]/\[[0<=skoSC1]/\[[2<=skoMC1]/\[[skoSC1<=5/4]/\[[0<(skoMC1 skoMC1 skoMC1 (2))]/\[[(skoMC1 skoMC1 skoMC1 (-2))<=0]/\[(skoMC1 skoMC1 skoMC1 (-1))<(skoSC1 skoMC1 skoMC1 skoMC1)]]]]]]]]]]]]]]].

% In SMTLib2 format:
(declare-fun skoSC1 () Real) (declare-fun skoMC1 () Real) (assert (and (<= 0. skoMC1) (and (<= (* skoSC1 (+ (* skoMC1 (+ 1. (* skoMC1 (- 3.)))) (* skoSC1 (+ (* skoMC1 (+ 2. (* skoMC1 3.))) (* skoSC1 (+ (* skoMC1 (+ (/ (- 1.) 6.) skoMC1)) (* skoSC1 (* skoMC1 (/ (- 1.) 4.))))))))) (* skoMC1 (+ 2. (* skoMC1 5.)))) (and (> (* skoSC1 (+ (* skoMC1 (+ (- 1.) (* skoMC1 3.))) (* skoSC1 (+ (* skoMC1 (+ (- 2.) (* skoMC1 (- 3.)))) (* skoSC1 (+ (* skoMC1 (+ (/ 1. 6.) (* skoMC1 (- 1.)))) (* skoSC1 (* skoMC1 (/ 1. 4.))))))))) (* skoMC1 (+ (- 2.) (* skoMC1 (- 5.))))) (and (<= (* skoSC1 (+ (* skoMC1 (+ 1. (* skoMC1 (- 3.)))) (* skoSC1 (+ (* skoMC1 (+ 2. (* skoMC1 3.))) (* skoSC1 (+ (* skoMC1 skoMC1) (* skoSC1 (* skoMC1 (/ (- 1.) 12.))))))))) (* skoMC1 (+ 2. (* skoMC1 5.)))) (and (> (* skoSC1 (+ (* skoMC1 (+ (- 1.) (* skoMC1 3.))) (* skoSC1 (+ (* skoMC1 (+ (- 2.) (* skoMC1 (- 3.)))) (* skoSC1 (+ (* skoMC1 (* skoMC1 (- 1.))) (* skoSC1 (* skoMC1 (/ 1. 12.))))))))) (* skoMC1 (+ (- 2.) (* skoMC1 (- 5.))))) (and (<= (* skoSC1 (* skoMC1 (- 1.))) skoMC1) (and (> (* skoSC1 skoMC1) (* skoMC1 (- 1.))) (and (<= 0. skoMC1) (and (> skoMC1 0.) (and (<= 0. skoSC1) (and (<= 2. skoMC1) (and (<= skoSC1 (/ 5. 4.)) (and (> (* skoMC1 (* skoMC1 (* skoMC1 2.))) 0.) (and (<= (* skoMC1 (* skoMC1 (* skoMC1 (- 2.)))) 0.) (> (* skoSC1 (* skoMC1 (* skoMC1 skoMC1))) (* skoMC1 (* skoMC1 (* skoMC1 (- 1.))))))))))))))))))))

% In GRF format:
(sequent " MetiTarski formula " (antecedent (<= 0. skoMC1) (<= (* skoSC1 (+ (* skoMC1 (+ 1. (* skoMC1 (- 3.)))) (* skoSC1 (+ (* skoMC1 (+ 2. (* skoMC1 3.))) (* skoSC1 (+ (* skoMC1 (+ (/ (- 1.) 6.) skoMC1)) (* skoSC1 (* skoMC1 (/ (- 1.) 4.))))))))) (* skoMC1 (+ 2. (* skoMC1 5.)))) (> (* skoSC1 (+ (* skoMC1 (+ (- 1.) (* skoMC1 3.))) (* skoSC1 (+ (* skoMC1 (+ (- 2.) (* skoMC1 (- 3.)))) (* skoSC1 (+ (* skoMC1 (+ (/ 1. 6.) (* skoMC1 (- 1.)))) (* skoSC1 (* skoMC1 (/ 1. 4.))))))))) (* skoMC1 (+ (- 2.) (* skoMC1 (- 5.))))) (<= (* skoSC1 (+ (* skoMC1 (+ 1. (* skoMC1 (- 3.)))) (* skoSC1 (+ (* skoMC1 (+ 2. (* skoMC1 3.))) (* skoSC1 (+ (* skoMC1 skoMC1) (* skoSC1 (* skoMC1 (/ (- 1.) 12.))))))))) (* skoMC1 (+ 2. (* skoMC1 5.)))) (> (* skoSC1 (+ (* skoMC1 (+ (- 1.) (* skoMC1 3.))) (* skoSC1 (+ (* skoMC1 (+ (- 2.) (* skoMC1 (- 3.)))) (* skoSC1 (+ (* skoMC1 (* skoMC1 (- 1.))) (* skoSC1 (* skoMC1 (/ 1. 12.))))))))) (* skoMC1 (+ (- 2.) (* skoMC1 (- 5.))))) (<= (* skoSC1 (* skoMC1 (- 1.))) skoMC1) (> (* skoSC1 skoMC1) (* skoMC1 (- 1.))) (<= 0. skoMC1) (> skoMC1 0.) (<= 0. skoSC1) (<= 2. skoMC1) (<= skoSC1 (/ 5. 4.)) (> (* skoMC1 (* skoMC1 (* skoMC1 2.))) 0.) (<= (* skoMC1 (* skoMC1 (* skoMC1 (- 2.)))) 0.)) (succedent (<= (* skoSC1 (* skoMC1 (* skoMC1 skoMC1))) (* skoMC1 (* skoMC1 (* skoMC1 (- 1.)))))))
-----[end problem]-----

-----[begin problem]-----
% In Mathematica format:
Timing[Resolve[Exists[{skoSC1,skoMC1}, And[0<=skoMC1,skoSC1*(skoMC1*(1+skoMC1*-3)+skoSC1*(skoMC1*(2+skoMC1*3)+skoSC1*(skoMC1*((-1/6)+skoMC1)+skoSC1*skoMC1*(-1/4))))<=skoMC1*(2+skoMC1*5),skoSC1*(skoMC1*(-1+skoMC1*3)+skoSC1*(skoMC1*(-2+skoMC1*-3)+skoSC1*(skoMC1*((1/6)+skoMC1*-1)+skoSC1*skoMC1*(1/4))))>skoMC1*(-2+skoMC1*-5),skoSC1*(skoMC1*(1+skoMC1*-3)+skoSC1*(skoMC1*(2+skoMC1*3)+skoSC1*(skoMC1*skoMC1+skoSC1*skoMC1*(-1/12))))<=skoMC1*(2+skoMC1*5),skoSC1*(skoMC1*(-1+skoMC1*3)+skoSC1*(skoMC1*(-2+skoMC1*-3)+skoSC1*(skoMC1*skoMC1*-1+skoSC1*skoMC1*(1/12))))>skoMC1*(-2+skoMC1*-5),skoSC1*skoMC1*-1<=skoMC1,skoSC1*skoMC1>skoMC1*-1,0<=skoMC1,skoMC1>0,0<=skoSC1,2<=skoMC1,skoSC1<=(5/4),skoMC1*skoMC1*skoMC1*2>0,skoMC1*skoMC1*skoMC1*-2<=0,skoSC1*skoMC1*skoMC1*skoMC1>skoMC1*skoMC1*skoMC1*-1]], Reals]]

% In QepcadB format:
(E skoSC1) (E skoMC1) [[0<=skoMC1]/\[[(skoSC1 ((skoMC1 (1+(skoMC1 (-3))))+(skoSC1 ((skoMC1 (2+(skoMC1 (3))))+(skoSC1 ((skoMC1 (-1/6+skoMC1))+(skoSC1 skoMC1 (-1/4))))))))<=(skoMC1 (2+(skoMC1 (5))))]/\[[(skoMC1 (-2+(skoMC1 (-5))))<(skoSC1 ((skoMC1 (-1+(skoMC1 (3))))+(skoSC1 ((skoMC1 (-2+(skoMC1 (-3))))+(skoSC1 ((skoMC1 (1/6+(skoMC1 (-1))))+(skoSC1 skoMC1 (1/4))))))))]/\[[(skoSC1 ((skoMC1 (1+(skoMC1 (-3))))+(skoSC1 ((skoMC1 (2+(skoMC1 (3))))+(skoSC1 ((skoMC1 skoMC1)+(skoSC1 skoMC1 (-1/12))))))))<=(skoMC1 (2+(skoMC1 (5))))]/\[[(skoMC1 (-2+(skoMC1 (-5))))<(skoSC1 ((skoMC1 (-1+(skoMC1 (3))))+(skoSC1 ((skoMC1 (-2+(skoMC1 (-3))))+(skoSC1 ((skoMC1 skoMC1 (-1))+(skoSC1 skoMC1 (1/12))))))))]/\[[(skoSC1 skoMC1 (-1))<=skoMC1]/\[[(skoMC1 (-1))<(skoSC1 skoMC1)]/\[[0<=skoMC1]/\[[0<skoMC1]/\[[0<=skoSC1]/\[[2<=skoMC1]/\[[skoSC1<=5/4]/\[[0<(skoMC1 skoMC1 skoMC1 (2))]/\[[(skoMC1 skoMC1 skoMC1 (-2))<=0]/\[(skoMC1 skoMC1 skoMC1 (-1))<(skoSC1 skoMC1 skoMC1 skoMC1)]]]]]]]]]]]]]]].

% In SMTLib2 format:
(declare-fun skoSC1 () Real) (declare-fun skoMC1 () Real) (assert (and (<= 0. skoMC1) (and (<= (* skoSC1 (+ (* skoMC1 (+ 1. (* skoMC1 (- 3.)))) (* skoSC1 (+ (* skoMC1 (+ 2. (* skoMC1 3.))) (* skoSC1 (+ (* skoMC1 (+ (/ (- 1.) 6.) skoMC1)) (* skoSC1 (* skoMC1 (/ (- 1.) 4.))))))))) (* skoMC1 (+ 2. (* skoMC1 5.)))) (and (> (* skoSC1 (+ (* skoMC1 (+ (- 1.) (* skoMC1 3.))) (* skoSC1 (+ (* skoMC1 (+ (- 2.) (* skoMC1 (- 3.)))) (* skoSC1 (+ (* skoMC1 (+ (/ 1. 6.) (* skoMC1 (- 1.)))) (* skoSC1 (* skoMC1 (/ 1. 4.))))))))) (* skoMC1 (+ (- 2.) (* skoMC1 (- 5.))))) (and (<= (* skoSC1 (+ (* skoMC1 (+ 1. (* skoMC1 (- 3.)))) (* skoSC1 (+ (* skoMC1 (+ 2. (* skoMC1 3.))) (* skoSC1 (+ (* skoMC1 skoMC1) (* skoSC1 (* skoMC1 (/ (- 1.) 12.))))))))) (* skoMC1 (+ 2. (* skoMC1 5.)))) (and (> (* skoSC1 (+ (* skoMC1 (+ (- 1.) (* skoMC1 3.))) (* skoSC1 (+ (* skoMC1 (+ (- 2.) (* skoMC1 (- 3.)))) (* skoSC1 (+ (* skoMC1 (* skoMC1 (- 1.))) (* skoSC1 (* skoMC1 (/ 1. 12.))))))))) (* skoMC1 (+ (- 2.) (* skoMC1 (- 5.))))) (and (<= (* skoSC1 (* skoMC1 (- 1.))) skoMC1) (and (> (* skoSC1 skoMC1) (* skoMC1 (- 1.))) (and (<= 0. skoMC1) (and (> skoMC1 0.) (and (<= 0. skoSC1) (and (<= 2. skoMC1) (and (<= skoSC1 (/ 5. 4.)) (and (> (* skoMC1 (* skoMC1 (* skoMC1 2.))) 0.) (and (<= (* skoMC1 (* skoMC1 (* skoMC1 (- 2.)))) 0.) (> (* skoSC1 (* skoMC1 (* skoMC1 skoMC1))) (* skoMC1 (* skoMC1 (* skoMC1 (- 1.))))))))))))))))))))

% In GRF format:
(sequent " MetiTarski formula " (antecedent (<= 0. skoMC1) (<= (* skoSC1 (+ (* skoMC1 (+ 1. (* skoMC1 (- 3.)))) (* skoSC1 (+ (* skoMC1 (+ 2. (* skoMC1 3.))) (* skoSC1 (+ (* skoMC1 (+ (/ (- 1.) 6.) skoMC1)) (* skoSC1 (* skoMC1 (/ (- 1.) 4.))))))))) (* skoMC1 (+ 2. (* skoMC1 5.)))) (> (* skoSC1 (+ (* skoMC1 (+ (- 1.) (* skoMC1 3.))) (* skoSC1 (+ (* skoMC1 (+ (- 2.) (* skoMC1 (- 3.)))) (* skoSC1 (+ (* skoMC1 (+ (/ 1. 6.) (* skoMC1 (- 1.)))) (* skoSC1 (* skoMC1 (/ 1. 4.))))))))) (* skoMC1 (+ (- 2.) (* skoMC1 (- 5.))))) (<= (* skoSC1 (+ (* skoMC1 (+ 1. (* skoMC1 (- 3.)))) (* skoSC1 (+ (* skoMC1 (+ 2. (* skoMC1 3.))) (* skoSC1 (+ (* skoMC1 skoMC1) (* skoSC1 (* skoMC1 (/ (- 1.) 12.))))))))) (* skoMC1 (+ 2. (* skoMC1 5.)))) (> (* skoSC1 (+ (* skoMC1 (+ (- 1.) (* skoMC1 3.))) (* skoSC1 (+ (* skoMC1 (+ (- 2.) (* skoMC1 (- 3.)))) (* skoSC1 (+ (* skoMC1 (* skoMC1 (- 1.))) (* skoSC1 (* skoMC1 (/ 1. 12.))))))))) (* skoMC1 (+ (- 2.) (* skoMC1 (- 5.))))) (<= (* skoSC1 (* skoMC1 (- 1.))) skoMC1) (> (* skoSC1 skoMC1) (* skoMC1 (- 1.))) (<= 0. skoMC1) (> skoMC1 0.) (<= 0. skoSC1) (<= 2. skoMC1) (<= skoSC1 (/ 5. 4.)) (> (* skoMC1 (* skoMC1 (* skoMC1 2.))) 0.) (<= (* skoMC1 (* skoMC1 (* skoMC1 (- 2.)))) 0.)) (succedent (<= (* skoSC1 (* skoMC1 (* skoMC1 skoMC1))) (* skoMC1 (* skoMC1 (* skoMC1 (- 1.)))))))
-----[end problem]-----

-----[begin problem]-----
% In Mathematica format:
Timing[Resolve[Exists[{skoSC1,skoMC1}, And[skoSC1*(skoMC1*(1+skoMC1*-3)+skoSC1*(skoMC1*(2+skoMC1*3)+skoSC1*(skoMC1*skoMC1+skoSC1*(skoMC1*(-1/12)+skoSC1*skoSC1*(skoMC1*(1/360)+skoSC1*skoSC1*(skoMC1*(-1/20160)+skoSC1*skoSC1*(skoMC1*(1/1814400)+skoSC1*skoSC1*skoMC1*(-1/239500800))))))))<=skoMC1*(2+skoMC1*5),skoSC1*(skoMC1*(1+skoMC1*-3)+skoSC1*(skoMC1*(2+skoMC1*3)+skoSC1*(skoMC1*((-1/6)+skoMC1)+skoSC1*skoMC1*(-1/4))))<=skoMC1*(2+skoMC1*5),skoSC1*(skoMC1*(-1+skoMC1*3)+skoSC1*(skoMC1*(-2+skoMC1*-3)+skoSC1*(skoMC1*((1/6)+skoMC1*-1)+skoSC1*skoMC1*(1/4))))>skoMC1*(-2+skoMC1*-5),skoSC1*(skoMC1*(1+skoMC1*-3)+skoSC1*(skoMC1*(2+skoMC1*3)+skoSC1*(skoMC1*skoMC1+skoSC1*skoMC1*(-1/12))))<=skoMC1*(2+skoMC1*5),skoSC1*(skoMC1*(-1+skoMC1*3)+skoSC1*(skoMC1*(-2+skoMC1*-3)+skoSC1*(skoMC1*skoMC1*-1+skoSC1*skoMC1*(1/12))))>skoMC1*(-2+skoMC1*-5),skoSC1*skoMC1*-1<=skoMC1,skoSC1*skoMC1>skoMC1*-1,0<=skoMC1,skoMC1>0,0<=skoSC1,2<=skoMC1,skoSC1<=(5/4),skoMC1*skoMC1*skoMC1*2>0,skoMC1*skoMC1*skoMC1*-2<=0,skoSC1*skoMC1*skoMC1*skoMC1>skoMC1*skoMC1*skoMC1*-1]], Reals]]

% In QepcadB format:
(E skoSC1) (E skoMC1) [[(skoSC1 ((skoMC1 (1+(skoMC1 (-3))))+(skoSC1 ((skoMC1 (2+(skoMC1 (3))))+(skoSC1 ((skoMC1 skoMC1)+(skoSC1 ((skoMC1 (-1/12))+(skoSC1 skoSC1 ((skoMC1 (1/360))+(skoSC1 skoSC1 ((skoMC1 (-1/20160))+(skoSC1 skoSC1 ((skoMC1 (1/1814400))+(skoSC1 skoSC1 skoMC1 (-1/239500800))))))))))))))))<=(skoMC1 (2+(skoMC1 (5))))]/\[[(skoSC1 ((skoMC1 (1+(skoMC1 (-3))))+(skoSC1 ((skoMC1 (2+(skoMC1 (3))))+(skoSC1 ((skoMC1 (-1/6+skoMC1))+(skoSC1 skoMC1 (-1/4))))))))<=(skoMC1 (2+(skoMC1 (5))))]/\[[(skoMC1 (-2+(skoMC1 (-5))))<(skoSC1 ((skoMC1 (-1+(skoMC1 (3))))+(skoSC1 ((skoMC1 (-2+(skoMC1 (-3))))+(skoSC1 ((skoMC1 (1/6+(skoMC1 (-1))))+(skoSC1 skoMC1 (1/4))))))))]/\[[(skoSC1 ((skoMC1 (1+(skoMC1 (-3))))+(skoSC1 ((skoMC1 (2+(skoMC1 (3))))+(skoSC1 ((skoMC1 skoMC1)+(skoSC1 skoMC1 (-1/12))))))))<=(skoMC1 (2+(skoMC1 (5))))]/\[[(skoMC1 (-2+(skoMC1 (-5))))<(skoSC1 ((skoMC1 (-1+(skoMC1 (3))))+(skoSC1 ((skoMC1 (-2+(skoMC1 (-3))))+(skoSC1 ((skoMC1 skoMC1 (-1))+(skoSC1 skoMC1 (1/12))))))))]/\[[(skoSC1 skoMC1 (-1))<=skoMC1]/\[[(skoMC1 (-1))<(skoSC1 skoMC1)]/\[[0<=skoMC1]/\[[0<skoMC1]/\[[0<=skoSC1]/\[[2<=skoMC1]/\[[skoSC1<=5/4]/\[[0<(skoMC1 skoMC1 skoMC1 (2))]/\[[(skoMC1 skoMC1 skoMC1 (-2))<=0]/\[(skoMC1 skoMC1 skoMC1 (-1))<(skoSC1 skoMC1 skoMC1 skoMC1)]]]]]]]]]]]]]]].

% In SMTLib2 format:
(declare-fun skoSC1 () Real) (declare-fun skoMC1 () Real) (assert (and (<= (* skoSC1 (+ (* skoMC1 (+ 1. (* skoMC1 (- 3.)))) (* skoSC1 (+ (* skoMC1 (+ 2. (* skoMC1 3.))) (* skoSC1 (+ (* skoMC1 skoMC1) (* skoSC1 (+ (* skoMC1 (/ (- 1.) 12.)) (* skoSC1 (* skoSC1 (+ (* skoMC1 (/ 1. 360.)) (* skoSC1 (* skoSC1 (+ (* skoMC1 (/ (- 1.) 20160.)) (* skoSC1 (* skoSC1 (+ (* skoMC1 (/ 1. 1814400.)) (* skoSC1 (* skoSC1 (* skoMC1 (/ (- 1.) 239500800.))))))))))))))))))))) (* skoMC1 (+ 2. (* skoMC1 5.)))) (and (<= (* skoSC1 (+ (* skoMC1 (+ 1. (* skoMC1 (- 3.)))) (* skoSC1 (+ (* skoMC1 (+ 2. (* skoMC1 3.))) (* skoSC1 (+ (* skoMC1 (+ (/ (- 1.) 6.) skoMC1)) (* skoSC1 (* skoMC1 (/ (- 1.) 4.))))))))) (* skoMC1 (+ 2. (* skoMC1 5.)))) (and (> (* skoSC1 (+ (* skoMC1 (+ (- 1.) (* skoMC1 3.))) (* skoSC1 (+ (* skoMC1 (+ (- 2.) (* skoMC1 (- 3.)))) (* skoSC1 (+ (* skoMC1 (+ (/ 1. 6.) (* skoMC1 (- 1.)))) (* skoSC1 (* skoMC1 (/ 1. 4.))))))))) (* skoMC1 (+ (- 2.) (* skoMC1 (- 5.))))) (and (<= (* skoSC1 (+ (* skoMC1 (+ 1. (* skoMC1 (- 3.)))) (* skoSC1 (+ (* skoMC1 (+ 2. (* skoMC1 3.))) (* skoSC1 (+ (* skoMC1 skoMC1) (* skoSC1 (* skoMC1 (/ (- 1.) 12.))))))))) (* skoMC1 (+ 2. (* skoMC1 5.)))) (and (> (* skoSC1 (+ (* skoMC1 (+ (- 1.) (* skoMC1 3.))) (* skoSC1 (+ (* skoMC1 (+ (- 2.) (* skoMC1 (- 3.)))) (* skoSC1 (+ (* skoMC1 (* skoMC1 (- 1.))) (* skoSC1 (* skoMC1 (/ 1. 12.))))))))) (* skoMC1 (+ (- 2.) (* skoMC1 (- 5.))))) (and (<= (* skoSC1 (* skoMC1 (- 1.))) skoMC1) (and (> (* skoSC1 skoMC1) (* skoMC1 (- 1.))) (and (<= 0. skoMC1) (and (> skoMC1 0.) (and (<= 0. skoSC1) (and (<= 2. skoMC1) (and (<= skoSC1 (/ 5. 4.)) (and (> (* skoMC1 (* skoMC1 (* skoMC1 2.))) 0.) (and (<= (* skoMC1 (* skoMC1 (* skoMC1 (- 2.)))) 0.) (> (* skoSC1 (* skoMC1 (* skoMC1 skoMC1))) (* skoMC1 (* skoMC1 (* skoMC1 (- 1.))))))))))))))))))))

% In GRF format:
(sequent " MetiTarski formula " (antecedent (<= (* skoSC1 (+ (* skoMC1 (+ 1. (* skoMC1 (- 3.)))) (* skoSC1 (+ (* skoMC1 (+ 2. (* skoMC1 3.))) (* skoSC1 (+ (* skoMC1 skoMC1) (* skoSC1 (+ (* skoMC1 (/ (- 1.) 12.)) (* skoSC1 (* skoSC1 (+ (* skoMC1 (/ 1. 360.)) (* skoSC1 (* skoSC1 (+ (* skoMC1 (/ (- 1.) 20160.)) (* skoSC1 (* skoSC1 (+ (* skoMC1 (/ 1. 1814400.)) (* skoSC1 (* skoSC1 (* skoMC1 (/ (- 1.) 239500800.))))))))))))))))))))) (* skoMC1 (+ 2. (* skoMC1 5.)))) (<= (* skoSC1 (+ (* skoMC1 (+ 1. (* skoMC1 (- 3.)))) (* skoSC1 (+ (* skoMC1 (+ 2. (* skoMC1 3.))) (* skoSC1 (+ (* skoMC1 (+ (/ (- 1.) 6.) skoMC1)) (* skoSC1 (* skoMC1 (/ (- 1.) 4.))))))))) (* skoMC1 (+ 2. (* skoMC1 5.)))) (> (* skoSC1 (+ (* skoMC1 (+ (- 1.) (* skoMC1 3.))) (* skoSC1 (+ (* skoMC1 (+ (- 2.) (* skoMC1 (- 3.)))) (* skoSC1 (+ (* skoMC1 (+ (/ 1. 6.) (* skoMC1 (- 1.)))) (* skoSC1 (* skoMC1 (/ 1. 4.))))))))) (* skoMC1 (+ (- 2.) (* skoMC1 (- 5.))))) (<= (* skoSC1 (+ (* skoMC1 (+ 1. (* skoMC1 (- 3.)))) (* skoSC1 (+ (* skoMC1 (+ 2. (* skoMC1 3.))) (* skoSC1 (+ (* skoMC1 skoMC1) (* skoSC1 (* skoMC1 (/ (- 1.) 12.))))))))) (* skoMC1 (+ 2. (* skoMC1 5.)))) (> (* skoSC1 (+ (* skoMC1 (+ (- 1.) (* skoMC1 3.))) (* skoSC1 (+ (* skoMC1 (+ (- 2.) (* skoMC1 (- 3.)))) (* skoSC1 (+ (* skoMC1 (* skoMC1 (- 1.))) (* skoSC1 (* skoMC1 (/ 1. 12.))))))))) (* skoMC1 (+ (- 2.) (* skoMC1 (- 5.))))) (<= (* skoSC1 (* skoMC1 (- 1.))) skoMC1) (> (* skoSC1 skoMC1) (* skoMC1 (- 1.))) (<= 0. skoMC1) (> skoMC1 0.) (<= 0. skoSC1) (<= 2. skoMC1) (<= skoSC1 (/ 5. 4.)) (> (* skoMC1 (* skoMC1 (* skoMC1 2.))) 0.) (<= (* skoMC1 (* skoMC1 (* skoMC1 (- 2.)))) 0.)) (succedent (<= (* skoSC1 (* skoMC1 (* skoMC1 skoMC1))) (* skoMC1 (* skoMC1 (* skoMC1 (- 1.)))))))
-----[end problem]-----

-----[begin problem]-----
% In Mathematica format:
Timing[Resolve[Exists[{skoSC1,skoMC1}, And[skoSC1*(skoMC1*(1+skoMC1*-3)+skoSC1*(skoMC1*(2+skoMC1*3)+skoSC1*(skoMC1*((-1/6)+skoMC1)+skoSC1*(skoMC1*(-1/4)+skoSC1*skoSC1*(skoMC1*(1/360)+skoSC1*skoSC1*(skoMC1*(-1/20160)+skoSC1*skoSC1*(skoMC1*(1/1814400)+skoSC1*skoSC1*skoMC1*(-1/239500800))))))))<=skoMC1*(2+skoMC1*5),skoMC1>0,skoSC1*(skoMC1*(1+skoMC1*-3)+skoSC1*(skoMC1*(2+skoMC1*3)+skoSC1*(skoMC1*((-1/6)+skoMC1)+skoSC1*skoMC1*(-1/4))))<=skoMC1*(2+skoMC1*5),skoSC1*(skoMC1*(-1+skoMC1*3)+skoSC1*(skoMC1*(-2+skoMC1*-3)+skoSC1*(skoMC1*((1/6)+skoMC1*-1)+skoSC1*skoMC1*(1/4))))>skoMC1*(-2+skoMC1*-5),skoSC1*(skoMC1*(1+skoMC1*-3)+skoSC1*(skoMC1*(2+skoMC1*3)+skoSC1*(skoMC1*skoMC1+skoSC1*skoMC1*(-1/12))))<=skoMC1*(2+skoMC1*5),skoSC1*(skoMC1*(-1+skoMC1*3)+skoSC1*(skoMC1*(-2+skoMC1*-3)+skoSC1*(skoMC1*skoMC1*-1+skoSC1*skoMC1*(1/12))))>skoMC1*(-2+skoMC1*-5),skoSC1*skoMC1*-1<=skoMC1,skoSC1*skoMC1>skoMC1*-1,0<=skoMC1,skoMC1>0,0<=skoSC1,2<=skoMC1,skoSC1<=(5/4),skoMC1*skoMC1*skoMC1*2>0,skoMC1*skoMC1*skoMC1*-2<=0,skoSC1*skoMC1*skoMC1*skoMC1>skoMC1*skoMC1*skoMC1*-1]], Reals]]

% In QepcadB format:
(E skoSC1) (E skoMC1) [[(skoSC1 ((skoMC1 (1+(skoMC1 (-3))))+(skoSC1 ((skoMC1 (2+(skoMC1 (3))))+(skoSC1 ((skoMC1 (-1/6+skoMC1))+(skoSC1 ((skoMC1 (-1/4))+(skoSC1 skoSC1 ((skoMC1 (1/360))+(skoSC1 skoSC1 ((skoMC1 (-1/20160))+(skoSC1 skoSC1 ((skoMC1 (1/1814400))+(skoSC1 skoSC1 skoMC1 (-1/239500800))))))))))))))))<=(skoMC1 (2+(skoMC1 (5))))]/\[[0<skoMC1]/\[[(skoSC1 ((skoMC1 (1+(skoMC1 (-3))))+(skoSC1 ((skoMC1 (2+(skoMC1 (3))))+(skoSC1 ((skoMC1 (-1/6+skoMC1))+(skoSC1 skoMC1 (-1/4))))))))<=(skoMC1 (2+(skoMC1 (5))))]/\[[(skoMC1 (-2+(skoMC1 (-5))))<(skoSC1 ((skoMC1 (-1+(skoMC1 (3))))+(skoSC1 ((skoMC1 (-2+(skoMC1 (-3))))+(skoSC1 ((skoMC1 (1/6+(skoMC1 (-1))))+(skoSC1 skoMC1 (1/4))))))))]/\[[(skoSC1 ((skoMC1 (1+(skoMC1 (-3))))+(skoSC1 ((skoMC1 (2+(skoMC1 (3))))+(skoSC1 ((skoMC1 skoMC1)+(skoSC1 skoMC1 (-1/12))))))))<=(skoMC1 (2+(skoMC1 (5))))]/\[[(skoMC1 (-2+(skoMC1 (-5))))<(skoSC1 ((skoMC1 (-1+(skoMC1 (3))))+(skoSC1 ((skoMC1 (-2+(skoMC1 (-3))))+(skoSC1 ((skoMC1 skoMC1 (-1))+(skoSC1 skoMC1 (1/12))))))))]/\[[(skoSC1 skoMC1 (-1))<=skoMC1]/\[[(skoMC1 (-1))<(skoSC1 skoMC1)]/\[[0<=skoMC1]/\[[0<skoMC1]/\[[0<=skoSC1]/\[[2<=skoMC1]/\[[skoSC1<=5/4]/\[[0<(skoMC1 skoMC1 skoMC1 (2))]/\[[(skoMC1 skoMC1 skoMC1 (-2))<=0]/\[(skoMC1 skoMC1 skoMC1 (-1))<(skoSC1 skoMC1 skoMC1 skoMC1)]]]]]]]]]]]]]]]].

% In SMTLib2 format:
(declare-fun skoSC1 () Real) (declare-fun skoMC1 () Real) (assert (and (<= (* skoSC1 (+ (* skoMC1 (+ 1. (* skoMC1 (- 3.)))) (* skoSC1 (+ (* skoMC1 (+ 2. (* skoMC1 3.))) (* skoSC1 (+ (* skoMC1 (+ (/ (- 1.) 6.) skoMC1)) (* skoSC1 (+ (* skoMC1 (/ (- 1.) 4.)) (* skoSC1 (* skoSC1 (+ (* skoMC1 (/ 1. 360.)) (* skoSC1 (* skoSC1 (+ (* skoMC1 (/ (- 1.) 20160.)) (* skoSC1 (* skoSC1 (+ (* skoMC1 (/ 1. 1814400.)) (* skoSC1 (* skoSC1 (* skoMC1 (/ (- 1.) 239500800.))))))))))))))))))))) (* skoMC1 (+ 2. (* skoMC1 5.)))) (and (> skoMC1 0.) (and (<= (* skoSC1 (+ (* skoMC1 (+ 1. (* skoMC1 (- 3.)))) (* skoSC1 (+ (* skoMC1 (+ 2. (* skoMC1 3.))) (* skoSC1 (+ (* skoMC1 (+ (/ (- 1.) 6.) skoMC1)) (* skoSC1 (* skoMC1 (/ (- 1.) 4.))))))))) (* skoMC1 (+ 2. (* skoMC1 5.)))) (and (> (* skoSC1 (+ (* skoMC1 (+ (- 1.) (* skoMC1 3.))) (* skoSC1 (+ (* skoMC1 (+ (- 2.) (* skoMC1 (- 3.)))) (* skoSC1 (+ (* skoMC1 (+ (/ 1. 6.) (* skoMC1 (- 1.)))) (* skoSC1 (* skoMC1 (/ 1. 4.))))))))) (* skoMC1 (+ (- 2.) (* skoMC1 (- 5.))))) (and (<= (* skoSC1 (+ (* skoMC1 (+ 1. (* skoMC1 (- 3.)))) (* skoSC1 (+ (* skoMC1 (+ 2. (* skoMC1 3.))) (* skoSC1 (+ (* skoMC1 skoMC1) (* skoSC1 (* skoMC1 (/ (- 1.) 12.))))))))) (* skoMC1 (+ 2. (* skoMC1 5.)))) (and (> (* skoSC1 (+ (* skoMC1 (+ (- 1.) (* skoMC1 3.))) (* skoSC1 (+ (* skoMC1 (+ (- 2.) (* skoMC1 (- 3.)))) (* skoSC1 (+ (* skoMC1 (* skoMC1 (- 1.))) (* skoSC1 (* skoMC1 (/ 1. 12.))))))))) (* skoMC1 (+ (- 2.) (* skoMC1 (- 5.))))) (and (<= (* skoSC1 (* skoMC1 (- 1.))) skoMC1) (and (> (* skoSC1 skoMC1) (* skoMC1 (- 1.))) (and (<= 0. skoMC1) (and (> skoMC1 0.) (and (<= 0. skoSC1) (and (<= 2. skoMC1) (and (<= skoSC1 (/ 5. 4.)) (and (> (* skoMC1 (* skoMC1 (* skoMC1 2.))) 0.) (and (<= (* skoMC1 (* skoMC1 (* skoMC1 (- 2.)))) 0.) (> (* skoSC1 (* skoMC1 (* skoMC1 skoMC1))) (* skoMC1 (* skoMC1 (* skoMC1 (- 1.)))))))))))))))))))))

% In GRF format:
(sequent " MetiTarski formula " (antecedent (<= (* skoSC1 (+ (* skoMC1 (+ 1. (* skoMC1 (- 3.)))) (* skoSC1 (+ (* skoMC1 (+ 2. (* skoMC1 3.))) (* skoSC1 (+ (* skoMC1 (+ (/ (- 1.) 6.) skoMC1)) (* skoSC1 (+ (* skoMC1 (/ (- 1.) 4.)) (* skoSC1 (* skoSC1 (+ (* skoMC1 (/ 1. 360.)) (* skoSC1 (* skoSC1 (+ (* skoMC1 (/ (- 1.) 20160.)) (* skoSC1 (* skoSC1 (+ (* skoMC1 (/ 1. 1814400.)) (* skoSC1 (* skoSC1 (* skoMC1 (/ (- 1.) 239500800.))))))))))))))))))))) (* skoMC1 (+ 2. (* skoMC1 5.)))) (> skoMC1 0.) (<= (* skoSC1 (+ (* skoMC1 (+ 1. (* skoMC1 (- 3.)))) (* skoSC1 (+ (* skoMC1 (+ 2. (* skoMC1 3.))) (* skoSC1 (+ (* skoMC1 (+ (/ (- 1.) 6.) skoMC1)) (* skoSC1 (* skoMC1 (/ (- 1.) 4.))))))))) (* skoMC1 (+ 2. (* skoMC1 5.)))) (> (* skoSC1 (+ (* skoMC1 (+ (- 1.) (* skoMC1 3.))) (* skoSC1 (+ (* skoMC1 (+ (- 2.) (* skoMC1 (- 3.)))) (* skoSC1 (+ (* skoMC1 (+ (/ 1. 6.) (* skoMC1 (- 1.)))) (* skoSC1 (* skoMC1 (/ 1. 4.))))))))) (* skoMC1 (+ (- 2.) (* skoMC1 (- 5.))))) (<= (* skoSC1 (+ (* skoMC1 (+ 1. (* skoMC1 (- 3.)))) (* skoSC1 (+ (* skoMC1 (+ 2. (* skoMC1 3.))) (* skoSC1 (+ (* skoMC1 skoMC1) (* skoSC1 (* skoMC1 (/ (- 1.) 12.))))))))) (* skoMC1 (+ 2. (* skoMC1 5.)))) (> (* skoSC1 (+ (* skoMC1 (+ (- 1.) (* skoMC1 3.))) (* skoSC1 (+ (* skoMC1 (+ (- 2.) (* skoMC1 (- 3.)))) (* skoSC1 (+ (* skoMC1 (* skoMC1 (- 1.))) (* skoSC1 (* skoMC1 (/ 1. 12.))))))))) (* skoMC1 (+ (- 2.) (* skoMC1 (- 5.))))) (<= (* skoSC1 (* skoMC1 (- 1.))) skoMC1) (> (* skoSC1 skoMC1) (* skoMC1 (- 1.))) (<= 0. skoMC1) (> skoMC1 0.) (<= 0. skoSC1) (<= 2. skoMC1) (<= skoSC1 (/ 5. 4.)) (> (* skoMC1 (* skoMC1 (* skoMC1 2.))) 0.) (<= (* skoMC1 (* skoMC1 (* skoMC1 (- 2.)))) 0.)) (succedent (<= (* skoSC1 (* skoMC1 (* skoMC1 skoMC1))) (* skoMC1 (* skoMC1 (* skoMC1 (- 1.)))))))
-----[end problem]-----

-----[begin problem]-----
% In Mathematica format:
Timing[Resolve[Exists[{skoSC1,skoMC1}, And[skoSC1*(skoMC1*(1+skoMC1*-3)+skoSC1*(skoMC1*(2+skoMC1*3)+skoSC1*(skoMC1*((-1/6)+skoMC1)+skoSC1*(skoMC1*(-1/4)+skoSC1*skoSC1*(skoMC1*(1/360)+skoSC1*skoSC1*(skoMC1*(-1/20160)+skoSC1*skoSC1*(skoMC1*(1/1814400)+skoSC1*skoSC1*skoMC1*(-1/239500800))))))))<=skoMC1*(2+skoMC1*5),skoSC1*(skoMC1*(1+skoMC1*-3)+skoSC1*(skoMC1*(2+skoMC1*3)+skoSC1*(skoMC1*((-1/6)+skoMC1)+skoSC1*skoMC1*(-1/4))))<=skoMC1*(2+skoMC1*5),skoSC1*(skoMC1*(-1+skoMC1*3)+skoSC1*(skoMC1*(-2+skoMC1*-3)+skoSC1*(skoMC1*((1/6)+skoMC1*-1)+skoSC1*skoMC1*(1/4))))>skoMC1*(-2+skoMC1*-5),skoSC1*(skoMC1*(1+skoMC1*-3)+skoSC1*(skoMC1*(2+skoMC1*3)+skoSC1*(skoMC1*skoMC1+skoSC1*skoMC1*(-1/12))))<=skoMC1*(2+skoMC1*5),skoSC1*(skoMC1*(-1+skoMC1*3)+skoSC1*(skoMC1*(-2+skoMC1*-3)+skoSC1*(skoMC1*skoMC1*-1+skoSC1*skoMC1*(1/12))))>skoMC1*(-2+skoMC1*-5),skoSC1*skoMC1*-1<=skoMC1,skoSC1*skoMC1>skoMC1*-1,0<=skoMC1,skoMC1>0,0<=skoSC1,2<=skoMC1,skoSC1<=(5/4),skoMC1*skoMC1*skoMC1*2>0,skoMC1*skoMC1*skoMC1*-2<=0,skoSC1*skoMC1*skoMC1*skoMC1>skoMC1*skoMC1*skoMC1*-1]], Reals]]

% In QepcadB format:
(E skoSC1) (E skoMC1) [[(skoSC1 ((skoMC1 (1+(skoMC1 (-3))))+(skoSC1 ((skoMC1 (2+(skoMC1 (3))))+(skoSC1 ((skoMC1 (-1/6+skoMC1))+(skoSC1 ((skoMC1 (-1/4))+(skoSC1 skoSC1 ((skoMC1 (1/360))+(skoSC1 skoSC1 ((skoMC1 (-1/20160))+(skoSC1 skoSC1 ((skoMC1 (1/1814400))+(skoSC1 skoSC1 skoMC1 (-1/239500800))))))))))))))))<=(skoMC1 (2+(skoMC1 (5))))]/\[[(skoSC1 ((skoMC1 (1+(skoMC1 (-3))))+(skoSC1 ((skoMC1 (2+(skoMC1 (3))))+(skoSC1 ((skoMC1 (-1/6+skoMC1))+(skoSC1 skoMC1 (-1/4))))))))<=(skoMC1 (2+(skoMC1 (5))))]/\[[(skoMC1 (-2+(skoMC1 (-5))))<(skoSC1 ((skoMC1 (-1+(skoMC1 (3))))+(skoSC1 ((skoMC1 (-2+(skoMC1 (-3))))+(skoSC1 ((skoMC1 (1/6+(skoMC1 (-1))))+(skoSC1 skoMC1 (1/4))))))))]/\[[(skoSC1 ((skoMC1 (1+(skoMC1 (-3))))+(skoSC1 ((skoMC1 (2+(skoMC1 (3))))+(skoSC1 ((skoMC1 skoMC1)+(skoSC1 skoMC1 (-1/12))))))))<=(skoMC1 (2+(skoMC1 (5))))]/\[[(skoMC1 (-2+(skoMC1 (-5))))<(skoSC1 ((skoMC1 (-1+(skoMC1 (3))))+(skoSC1 ((skoMC1 (-2+(skoMC1 (-3))))+(skoSC1 ((skoMC1 skoMC1 (-1))+(skoSC1 skoMC1 (1/12))))))))]/\[[(skoSC1 skoMC1 (-1))<=skoMC1]/\[[(skoMC1 (-1))<(skoSC1 skoMC1)]/\[[0<=skoMC1]/\[[0<skoMC1]/\[[0<=skoSC1]/\[[2<=skoMC1]/\[[skoSC1<=5/4]/\[[0<(skoMC1 skoMC1 skoMC1 (2))]/\[[(skoMC1 skoMC1 skoMC1 (-2))<=0]/\[(skoMC1 skoMC1 skoMC1 (-1))<(skoSC1 skoMC1 skoMC1 skoMC1)]]]]]]]]]]]]]]].

% In SMTLib2 format:
(declare-fun skoSC1 () Real) (declare-fun skoMC1 () Real) (assert (and (<= (* skoSC1 (+ (* skoMC1 (+ 1. (* skoMC1 (- 3.)))) (* skoSC1 (+ (* skoMC1 (+ 2. (* skoMC1 3.))) (* skoSC1 (+ (* skoMC1 (+ (/ (- 1.) 6.) skoMC1)) (* skoSC1 (+ (* skoMC1 (/ (- 1.) 4.)) (* skoSC1 (* skoSC1 (+ (* skoMC1 (/ 1. 360.)) (* skoSC1 (* skoSC1 (+ (* skoMC1 (/ (- 1.) 20160.)) (* skoSC1 (* skoSC1 (+ (* skoMC1 (/ 1. 1814400.)) (* skoSC1 (* skoSC1 (* skoMC1 (/ (- 1.) 239500800.))))))))))))))))))))) (* skoMC1 (+ 2. (* skoMC1 5.)))) (and (<= (* skoSC1 (+ (* skoMC1 (+ 1. (* skoMC1 (- 3.)))) (* skoSC1 (+ (* skoMC1 (+ 2. (* skoMC1 3.))) (* skoSC1 (+ (* skoMC1 (+ (/ (- 1.) 6.) skoMC1)) (* skoSC1 (* skoMC1 (/ (- 1.) 4.))))))))) (* skoMC1 (+ 2. (* skoMC1 5.)))) (and (> (* skoSC1 (+ (* skoMC1 (+ (- 1.) (* skoMC1 3.))) (* skoSC1 (+ (* skoMC1 (+ (- 2.) (* skoMC1 (- 3.)))) (* skoSC1 (+ (* skoMC1 (+ (/ 1. 6.) (* skoMC1 (- 1.)))) (* skoSC1 (* skoMC1 (/ 1. 4.))))))))) (* skoMC1 (+ (- 2.) (* skoMC1 (- 5.))))) (and (<= (* skoSC1 (+ (* skoMC1 (+ 1. (* skoMC1 (- 3.)))) (* skoSC1 (+ (* skoMC1 (+ 2. (* skoMC1 3.))) (* skoSC1 (+ (* skoMC1 skoMC1) (* skoSC1 (* skoMC1 (/ (- 1.) 12.))))))))) (* skoMC1 (+ 2. (* skoMC1 5.)))) (and (> (* skoSC1 (+ (* skoMC1 (+ (- 1.) (* skoMC1 3.))) (* skoSC1 (+ (* skoMC1 (+ (- 2.) (* skoMC1 (- 3.)))) (* skoSC1 (+ (* skoMC1 (* skoMC1 (- 1.))) (* skoSC1 (* skoMC1 (/ 1. 12.))))))))) (* skoMC1 (+ (- 2.) (* skoMC1 (- 5.))))) (and (<= (* skoSC1 (* skoMC1 (- 1.))) skoMC1) (and (> (* skoSC1 skoMC1) (* skoMC1 (- 1.))) (and (<= 0. skoMC1) (and (> skoMC1 0.) (and (<= 0. skoSC1) (and (<= 2. skoMC1) (and (<= skoSC1 (/ 5. 4.)) (and (> (* skoMC1 (* skoMC1 (* skoMC1 2.))) 0.) (and (<= (* skoMC1 (* skoMC1 (* skoMC1 (- 2.)))) 0.) (> (* skoSC1 (* skoMC1 (* skoMC1 skoMC1))) (* skoMC1 (* skoMC1 (* skoMC1 (- 1.))))))))))))))))))))

% In GRF format:
(sequent " MetiTarski formula " (antecedent (<= (* skoSC1 (+ (* skoMC1 (+ 1. (* skoMC1 (- 3.)))) (* skoSC1 (+ (* skoMC1 (+ 2. (* skoMC1 3.))) (* skoSC1 (+ (* skoMC1 (+ (/ (- 1.) 6.) skoMC1)) (* skoSC1 (+ (* skoMC1 (/ (- 1.) 4.)) (* skoSC1 (* skoSC1 (+ (* skoMC1 (/ 1. 360.)) (* skoSC1 (* skoSC1 (+ (* skoMC1 (/ (- 1.) 20160.)) (* skoSC1 (* skoSC1 (+ (* skoMC1 (/ 1. 1814400.)) (* skoSC1 (* skoSC1 (* skoMC1 (/ (- 1.) 239500800.))))))))))))))))))))) (* skoMC1 (+ 2. (* skoMC1 5.)))) (<= (* skoSC1 (+ (* skoMC1 (+ 1. (* skoMC1 (- 3.)))) (* skoSC1 (+ (* skoMC1 (+ 2. (* skoMC1 3.))) (* skoSC1 (+ (* skoMC1 (+ (/ (- 1.) 6.) skoMC1)) (* skoSC1 (* skoMC1 (/ (- 1.) 4.))))))))) (* skoMC1 (+ 2. (* skoMC1 5.)))) (> (* skoSC1 (+ (* skoMC1 (+ (- 1.) (* skoMC1 3.))) (* skoSC1 (+ (* skoMC1 (+ (- 2.) (* skoMC1 (- 3.)))) (* skoSC1 (+ (* skoMC1 (+ (/ 1. 6.) (* skoMC1 (- 1.)))) (* skoSC1 (* skoMC1 (/ 1. 4.))))))))) (* skoMC1 (+ (- 2.) (* skoMC1 (- 5.))))) (<= (* skoSC1 (+ (* skoMC1 (+ 1. (* skoMC1 (- 3.)))) (* skoSC1 (+ (* skoMC1 (+ 2. (* skoMC1 3.))) (* skoSC1 (+ (* skoMC1 skoMC1) (* skoSC1 (* skoMC1 (/ (- 1.) 12.))))))))) (* skoMC1 (+ 2. (* skoMC1 5.)))) (> (* skoSC1 (+ (* skoMC1 (+ (- 1.) (* skoMC1 3.))) (* skoSC1 (+ (* skoMC1 (+ (- 2.) (* skoMC1 (- 3.)))) (* skoSC1 (+ (* skoMC1 (* skoMC1 (- 1.))) (* skoSC1 (* skoMC1 (/ 1. 12.))))))))) (* skoMC1 (+ (- 2.) (* skoMC1 (- 5.))))) (<= (* skoSC1 (* skoMC1 (- 1.))) skoMC1) (> (* skoSC1 skoMC1) (* skoMC1 (- 1.))) (<= 0. skoMC1) (> skoMC1 0.) (<= 0. skoSC1) (<= 2. skoMC1) (<= skoSC1 (/ 5. 4.)) (> (* skoMC1 (* skoMC1 (* skoMC1 2.))) 0.) (<= (* skoMC1 (* skoMC1 (* skoMC1 (- 2.)))) 0.)) (succedent (<= (* skoSC1 (* skoMC1 (* skoMC1 skoMC1))) (* skoMC1 (* skoMC1 (* skoMC1 (- 1.)))))))
-----[end problem]-----

-----[begin problem]-----
% In Mathematica format:
Timing[Resolve[Exists[{skoSC1,skoMC1}, And[skoSC1*skoMC1*skoMC1*skoMC1*2<=skoMC1*skoMC1*skoMC1*-2,skoSC1*(skoMC1*(1+skoMC1*-3)+skoSC1*(skoMC1*(2+skoMC1*3)+skoSC1*(skoMC1*((-1/6)+skoMC1)+skoSC1*skoMC1*(-1/4))))<=skoMC1*(2+skoMC1*5),skoSC1*(skoMC1*(-1+skoMC1*3)+skoSC1*(skoMC1*(-2+skoMC1*-3)+skoSC1*(skoMC1*((1/6)+skoMC1*-1)+skoSC1*skoMC1*(1/4))))>skoMC1*(-2+skoMC1*-5),skoSC1*(skoMC1*(1+skoMC1*-3)+skoSC1*(skoMC1*(2+skoMC1*3)+skoSC1*(skoMC1*skoMC1+skoSC1*skoMC1*(-1/12))))<=skoMC1*(2+skoMC1*5),skoSC1*(skoMC1*(-1+skoMC1*3)+skoSC1*(skoMC1*(-2+skoMC1*-3)+skoSC1*(skoMC1*skoMC1*-1+skoSC1*skoMC1*(1/12))))>skoMC1*(-2+skoMC1*-5),skoSC1*skoMC1*-1<=skoMC1,skoSC1*skoMC1>skoMC1*-1,0<=skoMC1,skoMC1>0,0<=skoSC1,2<=skoMC1,skoSC1<=(5/4),skoMC1*skoMC1*skoMC1*2>0,skoMC1*skoMC1*skoMC1*-2<=0,skoSC1*skoMC1*skoMC1*skoMC1>skoMC1*skoMC1*skoMC1*-1]], Reals]]

% In QepcadB format:
(E skoSC1) (E skoMC1) [[(skoSC1 skoMC1 skoMC1 skoMC1 (2))<=(skoMC1 skoMC1 skoMC1 (-2))]/\[[(skoSC1 ((skoMC1 (1+(skoMC1 (-3))))+(skoSC1 ((skoMC1 (2+(skoMC1 (3))))+(skoSC1 ((skoMC1 (-1/6+skoMC1))+(skoSC1 skoMC1 (-1/4))))))))<=(skoMC1 (2+(skoMC1 (5))))]/\[[(skoMC1 (-2+(skoMC1 (-5))))<(skoSC1 ((skoMC1 (-1+(skoMC1 (3))))+(skoSC1 ((skoMC1 (-2+(skoMC1 (-3))))+(skoSC1 ((skoMC1 (1/6+(skoMC1 (-1))))+(skoSC1 skoMC1 (1/4))))))))]/\[[(skoSC1 ((skoMC1 (1+(skoMC1 (-3))))+(skoSC1 ((skoMC1 (2+(skoMC1 (3))))+(skoSC1 ((skoMC1 skoMC1)+(skoSC1 skoMC1 (-1/12))))))))<=(skoMC1 (2+(skoMC1 (5))))]/\[[(skoMC1 (-2+(skoMC1 (-5))))<(skoSC1 ((skoMC1 (-1+(skoMC1 (3))))+(skoSC1 ((skoMC1 (-2+(skoMC1 (-3))))+(skoSC1 ((skoMC1 skoMC1 (-1))+(skoSC1 skoMC1 (1/12))))))))]/\[[(skoSC1 skoMC1 (-1))<=skoMC1]/\[[(skoMC1 (-1))<(skoSC1 skoMC1)]/\[[0<=skoMC1]/\[[0<skoMC1]/\[[0<=skoSC1]/\[[2<=skoMC1]/\[[skoSC1<=5/4]/\[[0<(skoMC1 skoMC1 skoMC1 (2))]/\[[(skoMC1 skoMC1 skoMC1 (-2))<=0]/\[(skoMC1 skoMC1 skoMC1 (-1))<(skoSC1 skoMC1 skoMC1 skoMC1)]]]]]]]]]]]]]]].

% In SMTLib2 format:
(declare-fun skoSC1 () Real) (declare-fun skoMC1 () Real) (assert (and (<= (* skoSC1 (* skoMC1 (* skoMC1 (* skoMC1 2.)))) (* skoMC1 (* skoMC1 (* skoMC1 (- 2.))))) (and (<= (* skoSC1 (+ (* skoMC1 (+ 1. (* skoMC1 (- 3.)))) (* skoSC1 (+ (* skoMC1 (+ 2. (* skoMC1 3.))) (* skoSC1 (+ (* skoMC1 (+ (/ (- 1.) 6.) skoMC1)) (* skoSC1 (* skoMC1 (/ (- 1.) 4.))))))))) (* skoMC1 (+ 2. (* skoMC1 5.)))) (and (> (* skoSC1 (+ (* skoMC1 (+ (- 1.) (* skoMC1 3.))) (* skoSC1 (+ (* skoMC1 (+ (- 2.) (* skoMC1 (- 3.)))) (* skoSC1 (+ (* skoMC1 (+ (/ 1. 6.) (* skoMC1 (- 1.)))) (* skoSC1 (* skoMC1 (/ 1. 4.))))))))) (* skoMC1 (+ (- 2.) (* skoMC1 (- 5.))))) (and (<= (* skoSC1 (+ (* skoMC1 (+ 1. (* skoMC1 (- 3.)))) (* skoSC1 (+ (* skoMC1 (+ 2. (* skoMC1 3.))) (* skoSC1 (+ (* skoMC1 skoMC1) (* skoSC1 (* skoMC1 (/ (- 1.) 12.))))))))) (* skoMC1 (+ 2. (* skoMC1 5.)))) (and (> (* skoSC1 (+ (* skoMC1 (+ (- 1.) (* skoMC1 3.))) (* skoSC1 (+ (* skoMC1 (+ (- 2.) (* skoMC1 (- 3.)))) (* skoSC1 (+ (* skoMC1 (* skoMC1 (- 1.))) (* skoSC1 (* skoMC1 (/ 1. 12.))))))))) (* skoMC1 (+ (- 2.) (* skoMC1 (- 5.))))) (and (<= (* skoSC1 (* skoMC1 (- 1.))) skoMC1) (and (> (* skoSC1 skoMC1) (* skoMC1 (- 1.))) (and (<= 0. skoMC1) (and (> skoMC1 0.) (and (<= 0. skoSC1) (and (<= 2. skoMC1) (and (<= skoSC1 (/ 5. 4.)) (and (> (* skoMC1 (* skoMC1 (* skoMC1 2.))) 0.) (and (<= (* skoMC1 (* skoMC1 (* skoMC1 (- 2.)))) 0.) (> (* skoSC1 (* skoMC1 (* skoMC1 skoMC1))) (* skoMC1 (* skoMC1 (* skoMC1 (- 1.))))))))))))))))))))

% In GRF format:
(sequent " MetiTarski formula " (antecedent (<= (* skoSC1 (* skoMC1 (* skoMC1 (* skoMC1 2.)))) (* skoMC1 (* skoMC1 (* skoMC1 (- 2.))))) (<= (* skoSC1 (+ (* skoMC1 (+ 1. (* skoMC1 (- 3.)))) (* skoSC1 (+ (* skoMC1 (+ 2. (* skoMC1 3.))) (* skoSC1 (+ (* skoMC1 (+ (/ (- 1.) 6.) skoMC1)) (* skoSC1 (* skoMC1 (/ (- 1.) 4.))))))))) (* skoMC1 (+ 2. (* skoMC1 5.)))) (> (* skoSC1 (+ (* skoMC1 (+ (- 1.) (* skoMC1 3.))) (* skoSC1 (+ (* skoMC1 (+ (- 2.) (* skoMC1 (- 3.)))) (* skoSC1 (+ (* skoMC1 (+ (/ 1. 6.) (* skoMC1 (- 1.)))) (* skoSC1 (* skoMC1 (/ 1. 4.))))))))) (* skoMC1 (+ (- 2.) (* skoMC1 (- 5.))))) (<= (* skoSC1 (+ (* skoMC1 (+ 1. (* skoMC1 (- 3.)))) (* skoSC1 (+ (* skoMC1 (+ 2. (* skoMC1 3.))) (* skoSC1 (+ (* skoMC1 skoMC1) (* skoSC1 (* skoMC1 (/ (- 1.) 12.))))))))) (* skoMC1 (+ 2. (* skoMC1 5.)))) (> (* skoSC1 (+ (* skoMC1 (+ (- 1.) (* skoMC1 3.))) (* skoSC1 (+ (* skoMC1 (+ (- 2.) (* skoMC1 (- 3.)))) (* skoSC1 (+ (* skoMC1 (* skoMC1 (- 1.))) (* skoSC1 (* skoMC1 (/ 1. 12.))))))))) (* skoMC1 (+ (- 2.) (* skoMC1 (- 5.))))) (<= (* skoSC1 (* skoMC1 (- 1.))) skoMC1) (> (* skoSC1 skoMC1) (* skoMC1 (- 1.))) (<= 0. skoMC1) (> skoMC1 0.) (<= 0. skoSC1) (<= 2. skoMC1) (<= skoSC1 (/ 5. 4.)) (> (* skoMC1 (* skoMC1 (* skoMC1 2.))) 0.) (<= (* skoMC1 (* skoMC1 (* skoMC1 (- 2.)))) 0.)) (succedent (<= (* skoSC1 (* skoMC1 (* skoMC1 skoMC1))) (* skoMC1 (* skoMC1 (* skoMC1 (- 1.)))))))
-----[end problem]-----

-----[begin problem]-----
% In Mathematica format:
Timing[Resolve[Exists[{skoSC1,skoMC1}, And[skoSC1*skoMC1*skoMC1*skoMC1*-2<=skoMC1*skoMC1*skoMC1*2,skoSC1*(skoMC1*(1+skoMC1*-3)+skoSC1*(skoMC1*(2+skoMC1*3)+skoSC1*(skoMC1*((-1/6)+skoMC1)+skoSC1*skoMC1*(-1/4))))<=skoMC1*(2+skoMC1*5),skoSC1*(skoMC1*(-1+skoMC1*3)+skoSC1*(skoMC1*(-2+skoMC1*-3)+skoSC1*(skoMC1*((1/6)+skoMC1*-1)+skoSC1*skoMC1*(1/4))))>skoMC1*(-2+skoMC1*-5),skoSC1*(skoMC1*(1+skoMC1*-3)+skoSC1*(skoMC1*(2+skoMC1*3)+skoSC1*(skoMC1*skoMC1+skoSC1*skoMC1*(-1/12))))<=skoMC1*(2+skoMC1*5),skoSC1*(skoMC1*(-1+skoMC1*3)+skoSC1*(skoMC1*(-2+skoMC1*-3)+skoSC1*(skoMC1*skoMC1*-1+skoSC1*skoMC1*(1/12))))>skoMC1*(-2+skoMC1*-5),skoSC1*skoMC1*-1<=skoMC1,skoSC1*skoMC1>skoMC1*-1,0<=skoMC1,skoMC1>0,0<=skoSC1,2<=skoMC1,skoSC1<=(5/4),skoMC1*skoMC1*skoMC1*2>0,skoMC1*skoMC1*skoMC1*-2<=0,skoSC1*skoMC1*skoMC1*skoMC1>skoMC1*skoMC1*skoMC1*-1]], Reals]]

% In QepcadB format:
(E skoSC1) (E skoMC1) [[(skoSC1 skoMC1 skoMC1 skoMC1 (-2))<=(skoMC1 skoMC1 skoMC1 (2))]/\[[(skoSC1 ((skoMC1 (1+(skoMC1 (-3))))+(skoSC1 ((skoMC1 (2+(skoMC1 (3))))+(skoSC1 ((skoMC1 (-1/6+skoMC1))+(skoSC1 skoMC1 (-1/4))))))))<=(skoMC1 (2+(skoMC1 (5))))]/\[[(skoMC1 (-2+(skoMC1 (-5))))<(skoSC1 ((skoMC1 (-1+(skoMC1 (3))))+(skoSC1 ((skoMC1 (-2+(skoMC1 (-3))))+(skoSC1 ((skoMC1 (1/6+(skoMC1 (-1))))+(skoSC1 skoMC1 (1/4))))))))]/\[[(skoSC1 ((skoMC1 (1+(skoMC1 (-3))))+(skoSC1 ((skoMC1 (2+(skoMC1 (3))))+(skoSC1 ((skoMC1 skoMC1)+(skoSC1 skoMC1 (-1/12))))))))<=(skoMC1 (2+(skoMC1 (5))))]/\[[(skoMC1 (-2+(skoMC1 (-5))))<(skoSC1 ((skoMC1 (-1+(skoMC1 (3))))+(skoSC1 ((skoMC1 (-2+(skoMC1 (-3))))+(skoSC1 ((skoMC1 skoMC1 (-1))+(skoSC1 skoMC1 (1/12))))))))]/\[[(skoSC1 skoMC1 (-1))<=skoMC1]/\[[(skoMC1 (-1))<(skoSC1 skoMC1)]/\[[0<=skoMC1]/\[[0<skoMC1]/\[[0<=skoSC1]/\[[2<=skoMC1]/\[[skoSC1<=5/4]/\[[0<(skoMC1 skoMC1 skoMC1 (2))]/\[[(skoMC1 skoMC1 skoMC1 (-2))<=0]/\[(skoMC1 skoMC1 skoMC1 (-1))<(skoSC1 skoMC1 skoMC1 skoMC1)]]]]]]]]]]]]]]].

% In SMTLib2 format:
(declare-fun skoSC1 () Real) (declare-fun skoMC1 () Real) (assert (and (<= (* skoSC1 (* skoMC1 (* skoMC1 (* skoMC1 (- 2.))))) (* skoMC1 (* skoMC1 (* skoMC1 2.)))) (and (<= (* skoSC1 (+ (* skoMC1 (+ 1. (* skoMC1 (- 3.)))) (* skoSC1 (+ (* skoMC1 (+ 2. (* skoMC1 3.))) (* skoSC1 (+ (* skoMC1 (+ (/ (- 1.) 6.) skoMC1)) (* skoSC1 (* skoMC1 (/ (- 1.) 4.))))))))) (* skoMC1 (+ 2. (* skoMC1 5.)))) (and (> (* skoSC1 (+ (* skoMC1 (+ (- 1.) (* skoMC1 3.))) (* skoSC1 (+ (* skoMC1 (+ (- 2.) (* skoMC1 (- 3.)))) (* skoSC1 (+ (* skoMC1 (+ (/ 1. 6.) (* skoMC1 (- 1.)))) (* skoSC1 (* skoMC1 (/ 1. 4.))))))))) (* skoMC1 (+ (- 2.) (* skoMC1 (- 5.))))) (and (<= (* skoSC1 (+ (* skoMC1 (+ 1. (* skoMC1 (- 3.)))) (* skoSC1 (+ (* skoMC1 (+ 2. (* skoMC1 3.))) (* skoSC1 (+ (* skoMC1 skoMC1) (* skoSC1 (* skoMC1 (/ (- 1.) 12.))))))))) (* skoMC1 (+ 2. (* skoMC1 5.)))) (and (> (* skoSC1 (+ (* skoMC1 (+ (- 1.) (* skoMC1 3.))) (* skoSC1 (+ (* skoMC1 (+ (- 2.) (* skoMC1 (- 3.)))) (* skoSC1 (+ (* skoMC1 (* skoMC1 (- 1.))) (* skoSC1 (* skoMC1 (/ 1. 12.))))))))) (* skoMC1 (+ (- 2.) (* skoMC1 (- 5.))))) (and (<= (* skoSC1 (* skoMC1 (- 1.))) skoMC1) (and (> (* skoSC1 skoMC1) (* skoMC1 (- 1.))) (and (<= 0. skoMC1) (and (> skoMC1 0.) (and (<= 0. skoSC1) (and (<= 2. skoMC1) (and (<= skoSC1 (/ 5. 4.)) (and (> (* skoMC1 (* skoMC1 (* skoMC1 2.))) 0.) (and (<= (* skoMC1 (* skoMC1 (* skoMC1 (- 2.)))) 0.) (> (* skoSC1 (* skoMC1 (* skoMC1 skoMC1))) (* skoMC1 (* skoMC1 (* skoMC1 (- 1.))))))))))))))))))))

% In GRF format:
(sequent " MetiTarski formula " (antecedent (<= (* skoSC1 (* skoMC1 (* skoMC1 (* skoMC1 (- 2.))))) (* skoMC1 (* skoMC1 (* skoMC1 2.)))) (<= (* skoSC1 (+ (* skoMC1 (+ 1. (* skoMC1 (- 3.)))) (* skoSC1 (+ (* skoMC1 (+ 2. (* skoMC1 3.))) (* skoSC1 (+ (* skoMC1 (+ (/ (- 1.) 6.) skoMC1)) (* skoSC1 (* skoMC1 (/ (- 1.) 4.))))))))) (* skoMC1 (+ 2. (* skoMC1 5.)))) (> (* skoSC1 (+ (* skoMC1 (+ (- 1.) (* skoMC1 3.))) (* skoSC1 (+ (* skoMC1 (+ (- 2.) (* skoMC1 (- 3.)))) (* skoSC1 (+ (* skoMC1 (+ (/ 1. 6.) (* skoMC1 (- 1.)))) (* skoSC1 (* skoMC1 (/ 1. 4.))))))))) (* skoMC1 (+ (- 2.) (* skoMC1 (- 5.))))) (<= (* skoSC1 (+ (* skoMC1 (+ 1. (* skoMC1 (- 3.)))) (* skoSC1 (+ (* skoMC1 (+ 2. (* skoMC1 3.))) (* skoSC1 (+ (* skoMC1 skoMC1) (* skoSC1 (* skoMC1 (/ (- 1.) 12.))))))))) (* skoMC1 (+ 2. (* skoMC1 5.)))) (> (* skoSC1 (+ (* skoMC1 (+ (- 1.) (* skoMC1 3.))) (* skoSC1 (+ (* skoMC1 (+ (- 2.) (* skoMC1 (- 3.)))) (* skoSC1 (+ (* skoMC1 (* skoMC1 (- 1.))) (* skoSC1 (* skoMC1 (/ 1. 12.))))))))) (* skoMC1 (+ (- 2.) (* skoMC1 (- 5.))))) (<= (* skoSC1 (* skoMC1 (- 1.))) skoMC1) (> (* skoSC1 skoMC1) (* skoMC1 (- 1.))) (<= 0. skoMC1) (> skoMC1 0.) (<= 0. skoSC1) (<= 2. skoMC1) (<= skoSC1 (/ 5. 4.)) (> (* skoMC1 (* skoMC1 (* skoMC1 2.))) 0.) (<= (* skoMC1 (* skoMC1 (* skoMC1 (- 2.)))) 0.)) (succedent (<= (* skoSC1 (* skoMC1 (* skoMC1 skoMC1))) (* skoMC1 (* skoMC1 (* skoMC1 (- 1.)))))))
-----[end problem]-----

-----[begin problem]-----
% In Mathematica format:
Timing[Resolve[Exists[{skoSC1,skoMC1}, And[skoSC1*skoMC1*skoMC1*skoMC1*2>skoMC1*skoMC1*skoMC1*-2,skoSC1*(skoMC1*(1+skoMC1*-3)+skoSC1*(skoMC1*(2+skoMC1*3)+skoSC1*(skoMC1*((-1/6)+skoMC1)+skoSC1*skoMC1*(-1/4))))<=skoMC1*(2+skoMC1*5),skoSC1*(skoMC1*(-1+skoMC1*3)+skoSC1*(skoMC1*(-2+skoMC1*-3)+skoSC1*(skoMC1*((1/6)+skoMC1*-1)+skoSC1*skoMC1*(1/4))))>skoMC1*(-2+skoMC1*-5),skoSC1*(skoMC1*(1+skoMC1*-3)+skoSC1*(skoMC1*(2+skoMC1*3)+skoSC1*(skoMC1*skoMC1+skoSC1*skoMC1*(-1/12))))<=skoMC1*(2+skoMC1*5),skoSC1*(skoMC1*(-1+skoMC1*3)+skoSC1*(skoMC1*(-2+skoMC1*-3)+skoSC1*(skoMC1*skoMC1*-1+skoSC1*skoMC1*(1/12))))>skoMC1*(-2+skoMC1*-5),skoSC1*skoMC1*-1<=skoMC1,skoSC1*skoMC1>skoMC1*-1,0<=skoMC1,skoMC1>0,0<=skoSC1,2<=skoMC1,skoSC1<=(5/4),skoMC1*skoMC1*skoMC1*2>0,skoMC1*skoMC1*skoMC1*-2<=0,skoSC1*skoMC1*skoMC1*skoMC1>skoMC1*skoMC1*skoMC1*-1]], Reals]]

% In QepcadB format:
(E skoSC1) (E skoMC1) [[(skoMC1 skoMC1 skoMC1 (-2))<(skoSC1 skoMC1 skoMC1 skoMC1 (2))]/\[[(skoSC1 ((skoMC1 (1+(skoMC1 (-3))))+(skoSC1 ((skoMC1 (2+(skoMC1 (3))))+(skoSC1 ((skoMC1 (-1/6+skoMC1))+(skoSC1 skoMC1 (-1/4))))))))<=(skoMC1 (2+(skoMC1 (5))))]/\[[(skoMC1 (-2+(skoMC1 (-5))))<(skoSC1 ((skoMC1 (-1+(skoMC1 (3))))+(skoSC1 ((skoMC1 (-2+(skoMC1 (-3))))+(skoSC1 ((skoMC1 (1/6+(skoMC1 (-1))))+(skoSC1 skoMC1 (1/4))))))))]/\[[(skoSC1 ((skoMC1 (1+(skoMC1 (-3))))+(skoSC1 ((skoMC1 (2+(skoMC1 (3))))+(skoSC1 ((skoMC1 skoMC1)+(skoSC1 skoMC1 (-1/12))))))))<=(skoMC1 (2+(skoMC1 (5))))]/\[[(skoMC1 (-2+(skoMC1 (-5))))<(skoSC1 ((skoMC1 (-1+(skoMC1 (3))))+(skoSC1 ((skoMC1 (-2+(skoMC1 (-3))))+(skoSC1 ((skoMC1 skoMC1 (-1))+(skoSC1 skoMC1 (1/12))))))))]/\[[(skoSC1 skoMC1 (-1))<=skoMC1]/\[[(skoMC1 (-1))<(skoSC1 skoMC1)]/\[[0<=skoMC1]/\[[0<skoMC1]/\[[0<=skoSC1]/\[[2<=skoMC1]/\[[skoSC1<=5/4]/\[[0<(skoMC1 skoMC1 skoMC1 (2))]/\[[(skoMC1 skoMC1 skoMC1 (-2))<=0]/\[(skoMC1 skoMC1 skoMC1 (-1))<(skoSC1 skoMC1 skoMC1 skoMC1)]]]]]]]]]]]]]]].

% In SMTLib2 format:
(declare-fun skoSC1 () Real) (declare-fun skoMC1 () Real) (assert (and (> (* skoSC1 (* skoMC1 (* skoMC1 (* skoMC1 2.)))) (* skoMC1 (* skoMC1 (* skoMC1 (- 2.))))) (and (<= (* skoSC1 (+ (* skoMC1 (+ 1. (* skoMC1 (- 3.)))) (* skoSC1 (+ (* skoMC1 (+ 2. (* skoMC1 3.))) (* skoSC1 (+ (* skoMC1 (+ (/ (- 1.) 6.) skoMC1)) (* skoSC1 (* skoMC1 (/ (- 1.) 4.))))))))) (* skoMC1 (+ 2. (* skoMC1 5.)))) (and (> (* skoSC1 (+ (* skoMC1 (+ (- 1.) (* skoMC1 3.))) (* skoSC1 (+ (* skoMC1 (+ (- 2.) (* skoMC1 (- 3.)))) (* skoSC1 (+ (* skoMC1 (+ (/ 1. 6.) (* skoMC1 (- 1.)))) (* skoSC1 (* skoMC1 (/ 1. 4.))))))))) (* skoMC1 (+ (- 2.) (* skoMC1 (- 5.))))) (and (<= (* skoSC1 (+ (* skoMC1 (+ 1. (* skoMC1 (- 3.)))) (* skoSC1 (+ (* skoMC1 (+ 2. (* skoMC1 3.))) (* skoSC1 (+ (* skoMC1 skoMC1) (* skoSC1 (* skoMC1 (/ (- 1.) 12.))))))))) (* skoMC1 (+ 2. (* skoMC1 5.)))) (and (> (* skoSC1 (+ (* skoMC1 (+ (- 1.) (* skoMC1 3.))) (* skoSC1 (+ (* skoMC1 (+ (- 2.) (* skoMC1 (- 3.)))) (* skoSC1 (+ (* skoMC1 (* skoMC1 (- 1.))) (* skoSC1 (* skoMC1 (/ 1. 12.))))))))) (* skoMC1 (+ (- 2.) (* skoMC1 (- 5.))))) (and (<= (* skoSC1 (* skoMC1 (- 1.))) skoMC1) (and (> (* skoSC1 skoMC1) (* skoMC1 (- 1.))) (and (<= 0. skoMC1) (and (> skoMC1 0.) (and (<= 0. skoSC1) (and (<= 2. skoMC1) (and (<= skoSC1 (/ 5. 4.)) (and (> (* skoMC1 (* skoMC1 (* skoMC1 2.))) 0.) (and (<= (* skoMC1 (* skoMC1 (* skoMC1 (- 2.)))) 0.) (> (* skoSC1 (* skoMC1 (* skoMC1 skoMC1))) (* skoMC1 (* skoMC1 (* skoMC1 (- 1.))))))))))))))))))))

% In GRF format:
(sequent " MetiTarski formula " (antecedent (> (* skoSC1 (* skoMC1 (* skoMC1 (* skoMC1 2.)))) (* skoMC1 (* skoMC1 (* skoMC1 (- 2.))))) (<= (* skoSC1 (+ (* skoMC1 (+ 1. (* skoMC1 (- 3.)))) (* skoSC1 (+ (* skoMC1 (+ 2. (* skoMC1 3.))) (* skoSC1 (+ (* skoMC1 (+ (/ (- 1.) 6.) skoMC1)) (* skoSC1 (* skoMC1 (/ (- 1.) 4.))))))))) (* skoMC1 (+ 2. (* skoMC1 5.)))) (> (* skoSC1 (+ (* skoMC1 (+ (- 1.) (* skoMC1 3.))) (* skoSC1 (+ (* skoMC1 (+ (- 2.) (* skoMC1 (- 3.)))) (* skoSC1 (+ (* skoMC1 (+ (/ 1. 6.) (* skoMC1 (- 1.)))) (* skoSC1 (* skoMC1 (/ 1. 4.))))))))) (* skoMC1 (+ (- 2.) (* skoMC1 (- 5.))))) (<= (* skoSC1 (+ (* skoMC1 (+ 1. (* skoMC1 (- 3.)))) (* skoSC1 (+ (* skoMC1 (+ 2. (* skoMC1 3.))) (* skoSC1 (+ (* skoMC1 skoMC1) (* skoSC1 (* skoMC1 (/ (- 1.) 12.))))))))) (* skoMC1 (+ 2. (* skoMC1 5.)))) (> (* skoSC1 (+ (* skoMC1 (+ (- 1.) (* skoMC1 3.))) (* skoSC1 (+ (* skoMC1 (+ (- 2.) (* skoMC1 (- 3.)))) (* skoSC1 (+ (* skoMC1 (* skoMC1 (- 1.))) (* skoSC1 (* skoMC1 (/ 1. 12.))))))))) (* skoMC1 (+ (- 2.) (* skoMC1 (- 5.))))) (<= (* skoSC1 (* skoMC1 (- 1.))) skoMC1) (> (* skoSC1 skoMC1) (* skoMC1 (- 1.))) (<= 0. skoMC1) (> skoMC1 0.) (<= 0. skoSC1) (<= 2. skoMC1) (<= skoSC1 (/ 5. 4.)) (> (* skoMC1 (* skoMC1 (* skoMC1 2.))) 0.) (<= (* skoMC1 (* skoMC1 (* skoMC1 (- 2.)))) 0.)) (succedent (<= (* skoSC1 (* skoMC1 (* skoMC1 skoMC1))) (* skoMC1 (* skoMC1 (* skoMC1 (- 1.)))))))
-----[end problem]-----

-----[begin problem]-----
% In Mathematica format:
Timing[Resolve[Exists[{skoSC1,skoMC1}, And[skoSC1*skoMC1*skoMC1*skoMC1*2>skoMC1*skoMC1*skoMC1*-2,skoSC1*(skoMC1*(1+skoMC1*-3)+skoSC1*(skoMC1*(2+skoMC1*3)+skoSC1*(skoMC1*((-1/6)+skoMC1)+skoSC1*skoMC1*(-1/4))))<=skoMC1*(2+skoMC1*5),skoSC1*(skoMC1*(-1+skoMC1*3)+skoSC1*(skoMC1*(-2+skoMC1*-3)+skoSC1*(skoMC1*((1/6)+skoMC1*-1)+skoSC1*skoMC1*(1/4))))>skoMC1*(-2+skoMC1*-5),skoSC1*(skoMC1*(1+skoMC1*-3)+skoSC1*(skoMC1*(2+skoMC1*3)+skoSC1*(skoMC1*skoMC1+skoSC1*skoMC1*(-1/12))))<=skoMC1*(2+skoMC1*5),skoSC1*(skoMC1*(-1+skoMC1*3)+skoSC1*(skoMC1*(-2+skoMC1*-3)+skoSC1*(skoMC1*skoMC1*-1+skoSC1*skoMC1*(1/12))))>skoMC1*(-2+skoMC1*-5),skoSC1*skoMC1*-1<=skoMC1,skoSC1*skoMC1>skoMC1*-1,0<=skoMC1,skoMC1>0,0<=skoSC1,2<=skoMC1,skoSC1<=(5/4),skoMC1*skoMC1*skoMC1*2>0,skoMC1*skoMC1*skoMC1*-2<=0,skoSC1*skoMC1*skoMC1*skoMC1>skoMC1*skoMC1*skoMC1*-1]], Reals]]

% In QepcadB format:
(E skoSC1) (E skoMC1) [[(skoMC1 skoMC1 skoMC1 (-2))<(skoSC1 skoMC1 skoMC1 skoMC1 (2))]/\[[(skoSC1 ((skoMC1 (1+(skoMC1 (-3))))+(skoSC1 ((skoMC1 (2+(skoMC1 (3))))+(skoSC1 ((skoMC1 (-1/6+skoMC1))+(skoSC1 skoMC1 (-1/4))))))))<=(skoMC1 (2+(skoMC1 (5))))]/\[[(skoMC1 (-2+(skoMC1 (-5))))<(skoSC1 ((skoMC1 (-1+(skoMC1 (3))))+(skoSC1 ((skoMC1 (-2+(skoMC1 (-3))))+(skoSC1 ((skoMC1 (1/6+(skoMC1 (-1))))+(skoSC1 skoMC1 (1/4))))))))]/\[[(skoSC1 ((skoMC1 (1+(skoMC1 (-3))))+(skoSC1 ((skoMC1 (2+(skoMC1 (3))))+(skoSC1 ((skoMC1 skoMC1)+(skoSC1 skoMC1 (-1/12))))))))<=(skoMC1 (2+(skoMC1 (5))))]/\[[(skoMC1 (-2+(skoMC1 (-5))))<(skoSC1 ((skoMC1 (-1+(skoMC1 (3))))+(skoSC1 ((skoMC1 (-2+(skoMC1 (-3))))+(skoSC1 ((skoMC1 skoMC1 (-1))+(skoSC1 skoMC1 (1/12))))))))]/\[[(skoSC1 skoMC1 (-1))<=skoMC1]/\[[(skoMC1 (-1))<(skoSC1 skoMC1)]/\[[0<=skoMC1]/\[[0<skoMC1]/\[[0<=skoSC1]/\[[2<=skoMC1]/\[[skoSC1<=5/4]/\[[0<(skoMC1 skoMC1 skoMC1 (2))]/\[[(skoMC1 skoMC1 skoMC1 (-2))<=0]/\[(skoMC1 skoMC1 skoMC1 (-1))<(skoSC1 skoMC1 skoMC1 skoMC1)]]]]]]]]]]]]]]].

% In SMTLib2 format:
(declare-fun skoSC1 () Real) (declare-fun skoMC1 () Real) (assert (and (> (* skoSC1 (* skoMC1 (* skoMC1 (* skoMC1 2.)))) (* skoMC1 (* skoMC1 (* skoMC1 (- 2.))))) (and (<= (* skoSC1 (+ (* skoMC1 (+ 1. (* skoMC1 (- 3.)))) (* skoSC1 (+ (* skoMC1 (+ 2. (* skoMC1 3.))) (* skoSC1 (+ (* skoMC1 (+ (/ (- 1.) 6.) skoMC1)) (* skoSC1 (* skoMC1 (/ (- 1.) 4.))))))))) (* skoMC1 (+ 2. (* skoMC1 5.)))) (and (> (* skoSC1 (+ (* skoMC1 (+ (- 1.) (* skoMC1 3.))) (* skoSC1 (+ (* skoMC1 (+ (- 2.) (* skoMC1 (- 3.)))) (* skoSC1 (+ (* skoMC1 (+ (/ 1. 6.) (* skoMC1 (- 1.)))) (* skoSC1 (* skoMC1 (/ 1. 4.))))))))) (* skoMC1 (+ (- 2.) (* skoMC1 (- 5.))))) (and (<= (* skoSC1 (+ (* skoMC1 (+ 1. (* skoMC1 (- 3.)))) (* skoSC1 (+ (* skoMC1 (+ 2. (* skoMC1 3.))) (* skoSC1 (+ (* skoMC1 skoMC1) (* skoSC1 (* skoMC1 (/ (- 1.) 12.))))))))) (* skoMC1 (+ 2. (* skoMC1 5.)))) (and (> (* skoSC1 (+ (* skoMC1 (+ (- 1.) (* skoMC1 3.))) (* skoSC1 (+ (* skoMC1 (+ (- 2.) (* skoMC1 (- 3.)))) (* skoSC1 (+ (* skoMC1 (* skoMC1 (- 1.))) (* skoSC1 (* skoMC1 (/ 1. 12.))))))))) (* skoMC1 (+ (- 2.) (* skoMC1 (- 5.))))) (and (<= (* skoSC1 (* skoMC1 (- 1.))) skoMC1) (and (> (* skoSC1 skoMC1) (* skoMC1 (- 1.))) (and (<= 0. skoMC1) (and (> skoMC1 0.) (and (<= 0. skoSC1) (and (<= 2. skoMC1) (and (<= skoSC1 (/ 5. 4.)) (and (> (* skoMC1 (* skoMC1 (* skoMC1 2.))) 0.) (and (<= (* skoMC1 (* skoMC1 (* skoMC1 (- 2.)))) 0.) (> (* skoSC1 (* skoMC1 (* skoMC1 skoMC1))) (* skoMC1 (* skoMC1 (* skoMC1 (- 1.))))))))))))))))))))

% In GRF format:
(sequent " MetiTarski formula " (antecedent (> (* skoSC1 (* skoMC1 (* skoMC1 (* skoMC1 2.)))) (* skoMC1 (* skoMC1 (* skoMC1 (- 2.))))) (<= (* skoSC1 (+ (* skoMC1 (+ 1. (* skoMC1 (- 3.)))) (* skoSC1 (+ (* skoMC1 (+ 2. (* skoMC1 3.))) (* skoSC1 (+ (* skoMC1 (+ (/ (- 1.) 6.) skoMC1)) (* skoSC1 (* skoMC1 (/ (- 1.) 4.))))))))) (* skoMC1 (+ 2. (* skoMC1 5.)))) (> (* skoSC1 (+ (* skoMC1 (+ (- 1.) (* skoMC1 3.))) (* skoSC1 (+ (* skoMC1 (+ (- 2.) (* skoMC1 (- 3.)))) (* skoSC1 (+ (* skoMC1 (+ (/ 1. 6.) (* skoMC1 (- 1.)))) (* skoSC1 (* skoMC1 (/ 1. 4.))))))))) (* skoMC1 (+ (- 2.) (* skoMC1 (- 5.))))) (<= (* skoSC1 (+ (* skoMC1 (+ 1. (* skoMC1 (- 3.)))) (* skoSC1 (+ (* skoMC1 (+ 2. (* skoMC1 3.))) (* skoSC1 (+ (* skoMC1 skoMC1) (* skoSC1 (* skoMC1 (/ (- 1.) 12.))))))))) (* skoMC1 (+ 2. (* skoMC1 5.)))) (> (* skoSC1 (+ (* skoMC1 (+ (- 1.) (* skoMC1 3.))) (* skoSC1 (+ (* skoMC1 (+ (- 2.) (* skoMC1 (- 3.)))) (* skoSC1 (+ (* skoMC1 (* skoMC1 (- 1.))) (* skoSC1 (* skoMC1 (/ 1. 12.))))))))) (* skoMC1 (+ (- 2.) (* skoMC1 (- 5.))))) (<= (* skoSC1 (* skoMC1 (- 1.))) skoMC1) (> (* skoSC1 skoMC1) (* skoMC1 (- 1.))) (<= 0. skoMC1) (> skoMC1 0.) (<= 0. skoSC1) (<= 2. skoMC1) (<= skoSC1 (/ 5. 4.)) (> (* skoMC1 (* skoMC1 (* skoMC1 2.))) 0.) (<= (* skoMC1 (* skoMC1 (* skoMC1 (- 2.)))) 0.)) (succedent (<= (* skoSC1 (* skoMC1 (* skoMC1 skoMC1))) (* skoMC1 (* skoMC1 (* skoMC1 (- 1.)))))))
-----[end problem]-----

-----[begin problem]-----
% In Mathematica format:
Timing[Resolve[Exists[{skoSC1,skoMC1}, And[skoSC1*skoMC1*skoMC1*skoMC1*-2<=skoMC1*skoMC1*skoMC1*2,skoSC1*skoMC1*skoMC1*skoMC1*2>skoMC1*skoMC1*skoMC1*-2,skoSC1*(skoMC1*(1+skoMC1*-3)+skoSC1*(skoMC1*(2+skoMC1*3)+skoSC1*(skoMC1*((-1/6)+skoMC1)+skoSC1*skoMC1*(-1/4))))<=skoMC1*(2+skoMC1*5),skoSC1*(skoMC1*(-1+skoMC1*3)+skoSC1*(skoMC1*(-2+skoMC1*-3)+skoSC1*(skoMC1*((1/6)+skoMC1*-1)+skoSC1*skoMC1*(1/4))))>skoMC1*(-2+skoMC1*-5),skoSC1*(skoMC1*(1+skoMC1*-3)+skoSC1*(skoMC1*(2+skoMC1*3)+skoSC1*(skoMC1*skoMC1+skoSC1*skoMC1*(-1/12))))<=skoMC1*(2+skoMC1*5),skoSC1*(skoMC1*(-1+skoMC1*3)+skoSC1*(skoMC1*(-2+skoMC1*-3)+skoSC1*(skoMC1*skoMC1*-1+skoSC1*skoMC1*(1/12))))>skoMC1*(-2+skoMC1*-5),skoSC1*skoMC1*-1<=skoMC1,skoSC1*skoMC1>skoMC1*-1,0<=skoMC1,skoMC1>0,0<=skoSC1,2<=skoMC1,skoSC1<=(5/4),skoMC1*skoMC1*skoMC1*2>0,skoMC1*skoMC1*skoMC1*-2<=0,skoSC1*skoMC1*skoMC1*skoMC1>skoMC1*skoMC1*skoMC1*-1]], Reals]]

% In QepcadB format:
(E skoSC1) (E skoMC1) [[(skoSC1 skoMC1 skoMC1 skoMC1 (-2))<=(skoMC1 skoMC1 skoMC1 (2))]/\[[(skoMC1 skoMC1 skoMC1 (-2))<(skoSC1 skoMC1 skoMC1 skoMC1 (2))]/\[[(skoSC1 ((skoMC1 (1+(skoMC1 (-3))))+(skoSC1 ((skoMC1 (2+(skoMC1 (3))))+(skoSC1 ((skoMC1 (-1/6+skoMC1))+(skoSC1 skoMC1 (-1/4))))))))<=(skoMC1 (2+(skoMC1 (5))))]/\[[(skoMC1 (-2+(skoMC1 (-5))))<(skoSC1 ((skoMC1 (-1+(skoMC1 (3))))+(skoSC1 ((skoMC1 (-2+(skoMC1 (-3))))+(skoSC1 ((skoMC1 (1/6+(skoMC1 (-1))))+(skoSC1 skoMC1 (1/4))))))))]/\[[(skoSC1 ((skoMC1 (1+(skoMC1 (-3))))+(skoSC1 ((skoMC1 (2+(skoMC1 (3))))+(skoSC1 ((skoMC1 skoMC1)+(skoSC1 skoMC1 (-1/12))))))))<=(skoMC1 (2+(skoMC1 (5))))]/\[[(skoMC1 (-2+(skoMC1 (-5))))<(skoSC1 ((skoMC1 (-1+(skoMC1 (3))))+(skoSC1 ((skoMC1 (-2+(skoMC1 (-3))))+(skoSC1 ((skoMC1 skoMC1 (-1))+(skoSC1 skoMC1 (1/12))))))))]/\[[(skoSC1 skoMC1 (-1))<=skoMC1]/\[[(skoMC1 (-1))<(skoSC1 skoMC1)]/\[[0<=skoMC1]/\[[0<skoMC1]/\[[0<=skoSC1]/\[[2<=skoMC1]/\[[skoSC1<=5/4]/\[[0<(skoMC1 skoMC1 skoMC1 (2))]/\[[(skoMC1 skoMC1 skoMC1 (-2))<=0]/\[(skoMC1 skoMC1 skoMC1 (-1))<(skoSC1 skoMC1 skoMC1 skoMC1)]]]]]]]]]]]]]]]].

% In SMTLib2 format:
(declare-fun skoSC1 () Real) (declare-fun skoMC1 () Real) (assert (and (<= (* skoSC1 (* skoMC1 (* skoMC1 (* skoMC1 (- 2.))))) (* skoMC1 (* skoMC1 (* skoMC1 2.)))) (and (> (* skoSC1 (* skoMC1 (* skoMC1 (* skoMC1 2.)))) (* skoMC1 (* skoMC1 (* skoMC1 (- 2.))))) (and (<= (* skoSC1 (+ (* skoMC1 (+ 1. (* skoMC1 (- 3.)))) (* skoSC1 (+ (* skoMC1 (+ 2. (* skoMC1 3.))) (* skoSC1 (+ (* skoMC1 (+ (/ (- 1.) 6.) skoMC1)) (* skoSC1 (* skoMC1 (/ (- 1.) 4.))))))))) (* skoMC1 (+ 2. (* skoMC1 5.)))) (and (> (* skoSC1 (+ (* skoMC1 (+ (- 1.) (* skoMC1 3.))) (* skoSC1 (+ (* skoMC1 (+ (- 2.) (* skoMC1 (- 3.)))) (* skoSC1 (+ (* skoMC1 (+ (/ 1. 6.) (* skoMC1 (- 1.)))) (* skoSC1 (* skoMC1 (/ 1. 4.))))))))) (* skoMC1 (+ (- 2.) (* skoMC1 (- 5.))))) (and (<= (* skoSC1 (+ (* skoMC1 (+ 1. (* skoMC1 (- 3.)))) (* skoSC1 (+ (* skoMC1 (+ 2. (* skoMC1 3.))) (* skoSC1 (+ (* skoMC1 skoMC1) (* skoSC1 (* skoMC1 (/ (- 1.) 12.))))))))) (* skoMC1 (+ 2. (* skoMC1 5.)))) (and (> (* skoSC1 (+ (* skoMC1 (+ (- 1.) (* skoMC1 3.))) (* skoSC1 (+ (* skoMC1 (+ (- 2.) (* skoMC1 (- 3.)))) (* skoSC1 (+ (* skoMC1 (* skoMC1 (- 1.))) (* skoSC1 (* skoMC1 (/ 1. 12.))))))))) (* skoMC1 (+ (- 2.) (* skoMC1 (- 5.))))) (and (<= (* skoSC1 (* skoMC1 (- 1.))) skoMC1) (and (> (* skoSC1 skoMC1) (* skoMC1 (- 1.))) (and (<= 0. skoMC1) (and (> skoMC1 0.) (and (<= 0. skoSC1) (and (<= 2. skoMC1) (and (<= skoSC1 (/ 5. 4.)) (and (> (* skoMC1 (* skoMC1 (* skoMC1 2.))) 0.) (and (<= (* skoMC1 (* skoMC1 (* skoMC1 (- 2.)))) 0.) (> (* skoSC1 (* skoMC1 (* skoMC1 skoMC1))) (* skoMC1 (* skoMC1 (* skoMC1 (- 1.)))))))))))))))))))))

% In GRF format:
(sequent " MetiTarski formula " (antecedent (<= (* skoSC1 (* skoMC1 (* skoMC1 (* skoMC1 (- 2.))))) (* skoMC1 (* skoMC1 (* skoMC1 2.)))) (> (* skoSC1 (* skoMC1 (* skoMC1 (* skoMC1 2.)))) (* skoMC1 (* skoMC1 (* skoMC1 (- 2.))))) (<= (* skoSC1 (+ (* skoMC1 (+ 1. (* skoMC1 (- 3.)))) (* skoSC1 (+ (* skoMC1 (+ 2. (* skoMC1 3.))) (* skoSC1 (+ (* skoMC1 (+ (/ (- 1.) 6.) skoMC1)) (* skoSC1 (* skoMC1 (/ (- 1.) 4.))))))))) (* skoMC1 (+ 2. (* skoMC1 5.)))) (> (* skoSC1 (+ (* skoMC1 (+ (- 1.) (* skoMC1 3.))) (* skoSC1 (+ (* skoMC1 (+ (- 2.) (* skoMC1 (- 3.)))) (* skoSC1 (+ (* skoMC1 (+ (/ 1. 6.) (* skoMC1 (- 1.)))) (* skoSC1 (* skoMC1 (/ 1. 4.))))))))) (* skoMC1 (+ (- 2.) (* skoMC1 (- 5.))))) (<= (* skoSC1 (+ (* skoMC1 (+ 1. (* skoMC1 (- 3.)))) (* skoSC1 (+ (* skoMC1 (+ 2. (* skoMC1 3.))) (* skoSC1 (+ (* skoMC1 skoMC1) (* skoSC1 (* skoMC1 (/ (- 1.) 12.))))))))) (* skoMC1 (+ 2. (* skoMC1 5.)))) (> (* skoSC1 (+ (* skoMC1 (+ (- 1.) (* skoMC1 3.))) (* skoSC1 (+ (* skoMC1 (+ (- 2.) (* skoMC1 (- 3.)))) (* skoSC1 (+ (* skoMC1 (* skoMC1 (- 1.))) (* skoSC1 (* skoMC1 (/ 1. 12.))))))))) (* skoMC1 (+ (- 2.) (* skoMC1 (- 5.))))) (<= (* skoSC1 (* skoMC1 (- 1.))) skoMC1) (> (* skoSC1 skoMC1) (* skoMC1 (- 1.))) (<= 0. skoMC1) (> skoMC1 0.) (<= 0. skoSC1) (<= 2. skoMC1) (<= skoSC1 (/ 5. 4.)) (> (* skoMC1 (* skoMC1 (* skoMC1 2.))) 0.) (<= (* skoMC1 (* skoMC1 (* skoMC1 (- 2.)))) 0.)) (succedent (<= (* skoSC1 (* skoMC1 (* skoMC1 skoMC1))) (* skoMC1 (* skoMC1 (* skoMC1 (- 1.)))))))
-----[end problem]-----

-----[begin problem]-----
% In Mathematica format:
Timing[Resolve[Exists[{skoMC1,skoSC1}, And[skoSC1*skoMC1*skoMC1*skoMC1*2>skoMC1*skoMC1*skoMC1*-2,skoSC1*(skoMC1*skoMC1*skoMC1*(-2+skoMC1*-12)+skoSC1*(skoMC1*skoMC1*skoMC1*(1+skoMC1*-6)+skoSC1*skoMC1*skoMC1*skoMC1))>skoMC1*skoMC1*skoMC1*(2+skoMC1*6),skoSC1*skoMC1*skoMC1*skoMC1*2>skoMC1*skoMC1*skoMC1*-2,skoSC1*(skoMC1*(1+skoMC1*-3)+skoSC1*(skoMC1*(2+skoMC1*3)+skoSC1*(skoMC1*((-1/6)+skoMC1)+skoSC1*skoMC1*(-1/4))))<=skoMC1*(2+skoMC1*5),skoSC1*(skoMC1*(-1+skoMC1*3)+skoSC1*(skoMC1*(-2+skoMC1*-3)+skoSC1*(skoMC1*((1/6)+skoMC1*-1)+skoSC1*skoMC1*(1/4))))>skoMC1*(-2+skoMC1*-5),skoSC1*(skoMC1*(1+skoMC1*-3)+skoSC1*(skoMC1*(2+skoMC1*3)+skoSC1*(skoMC1*skoMC1+skoSC1*skoMC1*(-1/12))))<=skoMC1*(2+skoMC1*5),skoSC1*(skoMC1*(-1+skoMC1*3)+skoSC1*(skoMC1*(-2+skoMC1*-3)+skoSC1*(skoMC1*skoMC1*-1+skoSC1*skoMC1*(1/12))))>skoMC1*(-2+skoMC1*-5),skoSC1*skoMC1*-1<=skoMC1,skoSC1*skoMC1>skoMC1*-1,0<=skoMC1,skoMC1>0,0<=skoSC1,2<=skoMC1,skoSC1<=(5/4),skoMC1*skoMC1*skoMC1*2>0,skoMC1*skoMC1*skoMC1*-2<=0,skoSC1*skoMC1*skoMC1*skoMC1>skoMC1*skoMC1*skoMC1*-1]], Reals]]

% In QepcadB format:
(E skoMC1) (E skoSC1) [[(skoMC1 skoMC1 skoMC1 (-2))<(skoSC1 skoMC1 skoMC1 skoMC1 (2))]/\[[(skoMC1 skoMC1 skoMC1 (2+(skoMC1 (6))))<(skoSC1 ((skoMC1 skoMC1 skoMC1 (-2+(skoMC1 (-12))))+(skoSC1 ((skoMC1 skoMC1 skoMC1 (1+(skoMC1 (-6))))+(skoSC1 skoMC1 skoMC1 skoMC1)))))]/\[[(skoMC1 skoMC1 skoMC1 (-2))<(skoSC1 skoMC1 skoMC1 skoMC1 (2))]/\[[(skoSC1 ((skoMC1 (1+(skoMC1 (-3))))+(skoSC1 ((skoMC1 (2+(skoMC1 (3))))+(skoSC1 ((skoMC1 (-1/6+skoMC1))+(skoSC1 skoMC1 (-1/4))))))))<=(skoMC1 (2+(skoMC1 (5))))]/\[[(skoMC1 (-2+(skoMC1 (-5))))<(skoSC1 ((skoMC1 (-1+(skoMC1 (3))))+(skoSC1 ((skoMC1 (-2+(skoMC1 (-3))))+(skoSC1 ((skoMC1 (1/6+(skoMC1 (-1))))+(skoSC1 skoMC1 (1/4))))))))]/\[[(skoSC1 ((skoMC1 (1+(skoMC1 (-3))))+(skoSC1 ((skoMC1 (2+(skoMC1 (3))))+(skoSC1 ((skoMC1 skoMC1)+(skoSC1 skoMC1 (-1/12))))))))<=(skoMC1 (2+(skoMC1 (5))))]/\[[(skoMC1 (-2+(skoMC1 (-5))))<(skoSC1 ((skoMC1 (-1+(skoMC1 (3))))+(skoSC1 ((skoMC1 (-2+(skoMC1 (-3))))+(skoSC1 ((skoMC1 skoMC1 (-1))+(skoSC1 skoMC1 (1/12))))))))]/\[[(skoSC1 skoMC1 (-1))<=skoMC1]/\[[(skoMC1 (-1))<(skoSC1 skoMC1)]/\[[0<=skoMC1]/\[[0<skoMC1]/\[[0<=skoSC1]/\[[2<=skoMC1]/\[[skoSC1<=5/4]/\[[0<(skoMC1 skoMC1 skoMC1 (2))]/\[[(skoMC1 skoMC1 skoMC1 (-2))<=0]/\[(skoMC1 skoMC1 skoMC1 (-1))<(skoSC1 skoMC1 skoMC1 skoMC1)]]]]]]]]]]]]]]]]].

% In SMTLib2 format:
(declare-fun skoMC1 () Real) (declare-fun skoSC1 () Real) (assert (and (> (* skoSC1 (* skoMC1 (* skoMC1 (* skoMC1 2.)))) (* skoMC1 (* skoMC1 (* skoMC1 (- 2.))))) (and (> (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (+ (- 2.) (* skoMC1 (- 12.)))))) (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (+ 1. (* skoMC1 (- 6.)))))) (* skoSC1 (* skoMC1 (* skoMC1 skoMC1))))))) (* skoMC1 (* skoMC1 (* skoMC1 (+ 2. (* skoMC1 6.)))))) (and (> (* skoSC1 (* skoMC1 (* skoMC1 (* skoMC1 2.)))) (* skoMC1 (* skoMC1 (* skoMC1 (- 2.))))) (and (<= (* skoSC1 (+ (* skoMC1 (+ 1. (* skoMC1 (- 3.)))) (* skoSC1 (+ (* skoMC1 (+ 2. (* skoMC1 3.))) (* skoSC1 (+ (* skoMC1 (+ (/ (- 1.) 6.) skoMC1)) (* skoSC1 (* skoMC1 (/ (- 1.) 4.))))))))) (* skoMC1 (+ 2. (* skoMC1 5.)))) (and (> (* skoSC1 (+ (* skoMC1 (+ (- 1.) (* skoMC1 3.))) (* skoSC1 (+ (* skoMC1 (+ (- 2.) (* skoMC1 (- 3.)))) (* skoSC1 (+ (* skoMC1 (+ (/ 1. 6.) (* skoMC1 (- 1.)))) (* skoSC1 (* skoMC1 (/ 1. 4.))))))))) (* skoMC1 (+ (- 2.) (* skoMC1 (- 5.))))) (and (<= (* skoSC1 (+ (* skoMC1 (+ 1. (* skoMC1 (- 3.)))) (* skoSC1 (+ (* skoMC1 (+ 2. (* skoMC1 3.))) (* skoSC1 (+ (* skoMC1 skoMC1) (* skoSC1 (* skoMC1 (/ (- 1.) 12.))))))))) (* skoMC1 (+ 2. (* skoMC1 5.)))) (and (> (* skoSC1 (+ (* skoMC1 (+ (- 1.) (* skoMC1 3.))) (* skoSC1 (+ (* skoMC1 (+ (- 2.) (* skoMC1 (- 3.)))) (* skoSC1 (+ (* skoMC1 (* skoMC1 (- 1.))) (* skoSC1 (* skoMC1 (/ 1. 12.))))))))) (* skoMC1 (+ (- 2.) (* skoMC1 (- 5.))))) (and (<= (* skoSC1 (* skoMC1 (- 1.))) skoMC1) (and (> (* skoSC1 skoMC1) (* skoMC1 (- 1.))) (and (<= 0. skoMC1) (and (> skoMC1 0.) (and (<= 0. skoSC1) (and (<= 2. skoMC1) (and (<= skoSC1 (/ 5. 4.)) (and (> (* skoMC1 (* skoMC1 (* skoMC1 2.))) 0.) (and (<= (* skoMC1 (* skoMC1 (* skoMC1 (- 2.)))) 0.) (> (* skoSC1 (* skoMC1 (* skoMC1 skoMC1))) (* skoMC1 (* skoMC1 (* skoMC1 (- 1.))))))))))))))))))))))

% In GRF format:
(sequent " MetiTarski formula " (antecedent (> (* skoSC1 (* skoMC1 (* skoMC1 (* skoMC1 2.)))) (* skoMC1 (* skoMC1 (* skoMC1 (- 2.))))) (> (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (+ (- 2.) (* skoMC1 (- 12.)))))) (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (+ 1. (* skoMC1 (- 6.)))))) (* skoSC1 (* skoMC1 (* skoMC1 skoMC1))))))) (* skoMC1 (* skoMC1 (* skoMC1 (+ 2. (* skoMC1 6.)))))) (> (* skoSC1 (* skoMC1 (* skoMC1 (* skoMC1 2.)))) (* skoMC1 (* skoMC1 (* skoMC1 (- 2.))))) (<= (* skoSC1 (+ (* skoMC1 (+ 1. (* skoMC1 (- 3.)))) (* skoSC1 (+ (* skoMC1 (+ 2. (* skoMC1 3.))) (* skoSC1 (+ (* skoMC1 (+ (/ (- 1.) 6.) skoMC1)) (* skoSC1 (* skoMC1 (/ (- 1.) 4.))))))))) (* skoMC1 (+ 2. (* skoMC1 5.)))) (> (* skoSC1 (+ (* skoMC1 (+ (- 1.) (* skoMC1 3.))) (* skoSC1 (+ (* skoMC1 (+ (- 2.) (* skoMC1 (- 3.)))) (* skoSC1 (+ (* skoMC1 (+ (/ 1. 6.) (* skoMC1 (- 1.)))) (* skoSC1 (* skoMC1 (/ 1. 4.))))))))) (* skoMC1 (+ (- 2.) (* skoMC1 (- 5.))))) (<= (* skoSC1 (+ (* skoMC1 (+ 1. (* skoMC1 (- 3.)))) (* skoSC1 (+ (* skoMC1 (+ 2. (* skoMC1 3.))) (* skoSC1 (+ (* skoMC1 skoMC1) (* skoSC1 (* skoMC1 (/ (- 1.) 12.))))))))) (* skoMC1 (+ 2. (* skoMC1 5.)))) (> (* skoSC1 (+ (* skoMC1 (+ (- 1.) (* skoMC1 3.))) (* skoSC1 (+ (* skoMC1 (+ (- 2.) (* skoMC1 (- 3.)))) (* skoSC1 (+ (* skoMC1 (* skoMC1 (- 1.))) (* skoSC1 (* skoMC1 (/ 1. 12.))))))))) (* skoMC1 (+ (- 2.) (* skoMC1 (- 5.))))) (<= (* skoSC1 (* skoMC1 (- 1.))) skoMC1) (> (* skoSC1 skoMC1) (* skoMC1 (- 1.))) (<= 0. skoMC1) (> skoMC1 0.) (<= 0. skoSC1) (<= 2. skoMC1) (<= skoSC1 (/ 5. 4.)) (> (* skoMC1 (* skoMC1 (* skoMC1 2.))) 0.) (<= (* skoMC1 (* skoMC1 (* skoMC1 (- 2.)))) 0.)) (succedent (<= (* skoSC1 (* skoMC1 (* skoMC1 skoMC1))) (* skoMC1 (* skoMC1 (* skoMC1 (- 1.)))))))
-----[end problem]-----

-----[begin problem]-----
% In Mathematica format:
Timing[Resolve[Exists[{skoSC1,skoMC1}, And[skoMC1*skoMC1*skoMC1*-1<=0,skoSC1*skoMC1*skoMC1*skoMC1>skoMC1*skoMC1*skoMC1*-1,skoMC1*skoMC1*skoMC1*-2<=0,skoMC1*skoMC1*skoMC1*2>0,skoSC1<=(5/4),2<=skoMC1,0<=skoSC1,skoMC1>0,0<=skoMC1,skoSC1*skoMC1>skoMC1*-1,skoSC1*skoMC1*-1<=skoMC1,skoSC1*(skoMC1*(-1+skoMC1*3)+skoSC1*(skoMC1*(-2+skoMC1*-3)+skoSC1*(skoMC1*skoMC1*-1+skoSC1*skoMC1*(1/12))))>skoMC1*(-2+skoMC1*-5),skoSC1*(skoMC1*(1+skoMC1*-3)+skoSC1*(skoMC1*(2+skoMC1*3)+skoSC1*(skoMC1*skoMC1+skoSC1*skoMC1*(-1/12))))<=skoMC1*(2+skoMC1*5),skoSC1*(skoMC1*(-1+skoMC1*3)+skoSC1*(skoMC1*(-2+skoMC1*-3)+skoSC1*(skoMC1*((1/6)+skoMC1*-1)+skoSC1*skoMC1*(1/4))))>skoMC1*(-2+skoMC1*-5),skoSC1*(skoMC1*(1+skoMC1*-3)+skoSC1*(skoMC1*(2+skoMC1*3)+skoSC1*(skoMC1*((-1/6)+skoMC1)+skoSC1*skoMC1*(-1/4))))<=skoMC1*(2+skoMC1*5)]], Reals]]

% In QepcadB format:
(E skoSC1) (E skoMC1) [[(skoMC1 skoMC1 skoMC1 (-1))<=0]/\[[(skoMC1 skoMC1 skoMC1 (-1))<(skoSC1 skoMC1 skoMC1 skoMC1)]/\[[(skoMC1 skoMC1 skoMC1 (-2))<=0]/\[[0<(skoMC1 skoMC1 skoMC1 (2))]/\[[skoSC1<=5/4]/\[[2<=skoMC1]/\[[0<=skoSC1]/\[[0<skoMC1]/\[[0<=skoMC1]/\[[(skoMC1 (-1))<(skoSC1 skoMC1)]/\[[(skoSC1 skoMC1 (-1))<=skoMC1]/\[[(skoMC1 (-2+(skoMC1 (-5))))<(skoSC1 ((skoMC1 (-1+(skoMC1 (3))))+(skoSC1 ((skoMC1 (-2+(skoMC1 (-3))))+(skoSC1 ((skoMC1 skoMC1 (-1))+(skoSC1 skoMC1 (1/12))))))))]/\[[(skoSC1 ((skoMC1 (1+(skoMC1 (-3))))+(skoSC1 ((skoMC1 (2+(skoMC1 (3))))+(skoSC1 ((skoMC1 skoMC1)+(skoSC1 skoMC1 (-1/12))))))))<=(skoMC1 (2+(skoMC1 (5))))]/\[[(skoMC1 (-2+(skoMC1 (-5))))<(skoSC1 ((skoMC1 (-1+(skoMC1 (3))))+(skoSC1 ((skoMC1 (-2+(skoMC1 (-3))))+(skoSC1 ((skoMC1 (1/6+(skoMC1 (-1))))+(skoSC1 skoMC1 (1/4))))))))]/\[(skoSC1 ((skoMC1 (1+(skoMC1 (-3))))+(skoSC1 ((skoMC1 (2+(skoMC1 (3))))+(skoSC1 ((skoMC1 (-1/6+skoMC1))+(skoSC1 skoMC1 (-1/4))))))))<=(skoMC1 (2+(skoMC1 (5))))]]]]]]]]]]]]]]].

% In SMTLib2 format:
(declare-fun skoSC1 () Real) (declare-fun skoMC1 () Real) (assert (and (<= (* skoMC1 (* skoMC1 (* skoMC1 (- 1.)))) 0.) (and (> (* skoSC1 (* skoMC1 (* skoMC1 skoMC1))) (* skoMC1 (* skoMC1 (* skoMC1 (- 1.))))) (and (<= (* skoMC1 (* skoMC1 (* skoMC1 (- 2.)))) 0.) (and (> (* skoMC1 (* skoMC1 (* skoMC1 2.))) 0.) (and (<= skoSC1 (/ 5. 4.)) (and (<= 2. skoMC1) (and (<= 0. skoSC1) (and (> skoMC1 0.) (and (<= 0. skoMC1) (and (> (* skoSC1 skoMC1) (* skoMC1 (- 1.))) (and (<= (* skoSC1 (* skoMC1 (- 1.))) skoMC1) (and (> (* skoSC1 (+ (* skoMC1 (+ (- 1.) (* skoMC1 3.))) (* skoSC1 (+ (* skoMC1 (+ (- 2.) (* skoMC1 (- 3.)))) (* skoSC1 (+ (* skoMC1 (* skoMC1 (- 1.))) (* skoSC1 (* skoMC1 (/ 1. 12.))))))))) (* skoMC1 (+ (- 2.) (* skoMC1 (- 5.))))) (and (<= (* skoSC1 (+ (* skoMC1 (+ 1. (* skoMC1 (- 3.)))) (* skoSC1 (+ (* skoMC1 (+ 2. (* skoMC1 3.))) (* skoSC1 (+ (* skoMC1 skoMC1) (* skoSC1 (* skoMC1 (/ (- 1.) 12.))))))))) (* skoMC1 (+ 2. (* skoMC1 5.)))) (and (> (* skoSC1 (+ (* skoMC1 (+ (- 1.) (* skoMC1 3.))) (* skoSC1 (+ (* skoMC1 (+ (- 2.) (* skoMC1 (- 3.)))) (* skoSC1 (+ (* skoMC1 (+ (/ 1. 6.) (* skoMC1 (- 1.)))) (* skoSC1 (* skoMC1 (/ 1. 4.))))))))) (* skoMC1 (+ (- 2.) (* skoMC1 (- 5.))))) (<= (* skoSC1 (+ (* skoMC1 (+ 1. (* skoMC1 (- 3.)))) (* skoSC1 (+ (* skoMC1 (+ 2. (* skoMC1 3.))) (* skoSC1 (+ (* skoMC1 (+ (/ (- 1.) 6.) skoMC1)) (* skoSC1 (* skoMC1 (/ (- 1.) 4.))))))))) (* skoMC1 (+ 2. (* skoMC1 5.)))))))))))))))))))

% In GRF format:
(sequent " MetiTarski formula " (antecedent (<= (* skoMC1 (* skoMC1 (* skoMC1 (- 1.)))) 0.) (> (* skoSC1 (* skoMC1 (* skoMC1 skoMC1))) (* skoMC1 (* skoMC1 (* skoMC1 (- 1.))))) (<= (* skoMC1 (* skoMC1 (* skoMC1 (- 2.)))) 0.) (> (* skoMC1 (* skoMC1 (* skoMC1 2.))) 0.) (<= skoSC1 (/ 5. 4.)) (<= 2. skoMC1) (<= 0. skoSC1) (> skoMC1 0.) (<= 0. skoMC1) (> (* skoSC1 skoMC1) (* skoMC1 (- 1.))) (<= (* skoSC1 (* skoMC1 (- 1.))) skoMC1) (> (* skoSC1 (+ (* skoMC1 (+ (- 1.) (* skoMC1 3.))) (* skoSC1 (+ (* skoMC1 (+ (- 2.) (* skoMC1 (- 3.)))) (* skoSC1 (+ (* skoMC1 (* skoMC1 (- 1.))) (* skoSC1 (* skoMC1 (/ 1. 12.))))))))) (* skoMC1 (+ (- 2.) (* skoMC1 (- 5.))))) (<= (* skoSC1 (+ (* skoMC1 (+ 1. (* skoMC1 (- 3.)))) (* skoSC1 (+ (* skoMC1 (+ 2. (* skoMC1 3.))) (* skoSC1 (+ (* skoMC1 skoMC1) (* skoSC1 (* skoMC1 (/ (- 1.) 12.))))))))) (* skoMC1 (+ 2. (* skoMC1 5.)))) (> (* skoSC1 (+ (* skoMC1 (+ (- 1.) (* skoMC1 3.))) (* skoSC1 (+ (* skoMC1 (+ (- 2.) (* skoMC1 (- 3.)))) (* skoSC1 (+ (* skoMC1 (+ (/ 1. 6.) (* skoMC1 (- 1.)))) (* skoSC1 (* skoMC1 (/ 1. 4.))))))))) (* skoMC1 (+ (- 2.) (* skoMC1 (- 5.)))))) (succedent (> (* skoSC1 (+ (* skoMC1 (+ 1. (* skoMC1 (- 3.)))) (* skoSC1 (+ (* skoMC1 (+ 2. (* skoMC1 3.))) (* skoSC1 (+ (* skoMC1 (+ (/ (- 1.) 6.) skoMC1)) (* skoSC1 (* skoMC1 (/ (- 1.) 4.))))))))) (* skoMC1 (+ 2. (* skoMC1 5.))))))
-----[end problem]-----

-----[begin problem]-----
% In Mathematica format:
Timing[Resolve[Exists[{skoSC1,skoMC1}, And[skoMC1*skoMC1*skoMC1*-1<=0,skoSC1*skoMC1*skoMC1*skoMC1>skoMC1*skoMC1*skoMC1*-1,skoMC1*skoMC1*skoMC1*-2<=0,skoMC1*skoMC1*skoMC1*2>0,skoSC1<=(5/4),2<=skoMC1,0<=skoSC1,skoMC1>0,0<=skoMC1,skoSC1*skoMC1>skoMC1*-1,skoSC1*skoMC1*-1<=skoMC1,skoSC1*(skoMC1*(-1+skoMC1*3)+skoSC1*(skoMC1*(-2+skoMC1*-3)+skoSC1*(skoMC1*skoMC1*-1+skoSC1*skoMC1*(1/12))))>skoMC1*(-2+skoMC1*-5),skoSC1*(skoMC1*(1+skoMC1*-3)+skoSC1*(skoMC1*(2+skoMC1*3)+skoSC1*(skoMC1*skoMC1+skoSC1*skoMC1*(-1/12))))<=skoMC1*(2+skoMC1*5),skoSC1*(skoMC1*(-1+skoMC1*3)+skoSC1*(skoMC1*(-2+skoMC1*-3)+skoSC1*(skoMC1*((1/6)+skoMC1*-1)+skoSC1*skoMC1*(1/4))))>skoMC1*(-2+skoMC1*-5),skoSC1*(skoMC1*(1+skoMC1*-3)+skoSC1*(skoMC1*(2+skoMC1*3)+skoSC1*(skoMC1*((-1/6)+skoMC1)+skoSC1*skoMC1*(-1/4))))<=skoMC1*(2+skoMC1*5)]], Reals]]

% In QepcadB format:
(E skoSC1) (E skoMC1) [[(skoMC1 skoMC1 skoMC1 (-1))<=0]/\[[(skoMC1 skoMC1 skoMC1 (-1))<(skoSC1 skoMC1 skoMC1 skoMC1)]/\[[(skoMC1 skoMC1 skoMC1 (-2))<=0]/\[[0<(skoMC1 skoMC1 skoMC1 (2))]/\[[skoSC1<=5/4]/\[[2<=skoMC1]/\[[0<=skoSC1]/\[[0<skoMC1]/\[[0<=skoMC1]/\[[(skoMC1 (-1))<(skoSC1 skoMC1)]/\[[(skoSC1 skoMC1 (-1))<=skoMC1]/\[[(skoMC1 (-2+(skoMC1 (-5))))<(skoSC1 ((skoMC1 (-1+(skoMC1 (3))))+(skoSC1 ((skoMC1 (-2+(skoMC1 (-3))))+(skoSC1 ((skoMC1 skoMC1 (-1))+(skoSC1 skoMC1 (1/12))))))))]/\[[(skoSC1 ((skoMC1 (1+(skoMC1 (-3))))+(skoSC1 ((skoMC1 (2+(skoMC1 (3))))+(skoSC1 ((skoMC1 skoMC1)+(skoSC1 skoMC1 (-1/12))))))))<=(skoMC1 (2+(skoMC1 (5))))]/\[[(skoMC1 (-2+(skoMC1 (-5))))<(skoSC1 ((skoMC1 (-1+(skoMC1 (3))))+(skoSC1 ((skoMC1 (-2+(skoMC1 (-3))))+(skoSC1 ((skoMC1 (1/6+(skoMC1 (-1))))+(skoSC1 skoMC1 (1/4))))))))]/\[(skoSC1 ((skoMC1 (1+(skoMC1 (-3))))+(skoSC1 ((skoMC1 (2+(skoMC1 (3))))+(skoSC1 ((skoMC1 (-1/6+skoMC1))+(skoSC1 skoMC1 (-1/4))))))))<=(skoMC1 (2+(skoMC1 (5))))]]]]]]]]]]]]]]].

% In SMTLib2 format:
(declare-fun skoSC1 () Real) (declare-fun skoMC1 () Real) (assert (and (<= (* skoMC1 (* skoMC1 (* skoMC1 (- 1.)))) 0.) (and (> (* skoSC1 (* skoMC1 (* skoMC1 skoMC1))) (* skoMC1 (* skoMC1 (* skoMC1 (- 1.))))) (and (<= (* skoMC1 (* skoMC1 (* skoMC1 (- 2.)))) 0.) (and (> (* skoMC1 (* skoMC1 (* skoMC1 2.))) 0.) (and (<= skoSC1 (/ 5. 4.)) (and (<= 2. skoMC1) (and (<= 0. skoSC1) (and (> skoMC1 0.) (and (<= 0. skoMC1) (and (> (* skoSC1 skoMC1) (* skoMC1 (- 1.))) (and (<= (* skoSC1 (* skoMC1 (- 1.))) skoMC1) (and (> (* skoSC1 (+ (* skoMC1 (+ (- 1.) (* skoMC1 3.))) (* skoSC1 (+ (* skoMC1 (+ (- 2.) (* skoMC1 (- 3.)))) (* skoSC1 (+ (* skoMC1 (* skoMC1 (- 1.))) (* skoSC1 (* skoMC1 (/ 1. 12.))))))))) (* skoMC1 (+ (- 2.) (* skoMC1 (- 5.))))) (and (<= (* skoSC1 (+ (* skoMC1 (+ 1. (* skoMC1 (- 3.)))) (* skoSC1 (+ (* skoMC1 (+ 2. (* skoMC1 3.))) (* skoSC1 (+ (* skoMC1 skoMC1) (* skoSC1 (* skoMC1 (/ (- 1.) 12.))))))))) (* skoMC1 (+ 2. (* skoMC1 5.)))) (and (> (* skoSC1 (+ (* skoMC1 (+ (- 1.) (* skoMC1 3.))) (* skoSC1 (+ (* skoMC1 (+ (- 2.) (* skoMC1 (- 3.)))) (* skoSC1 (+ (* skoMC1 (+ (/ 1. 6.) (* skoMC1 (- 1.)))) (* skoSC1 (* skoMC1 (/ 1. 4.))))))))) (* skoMC1 (+ (- 2.) (* skoMC1 (- 5.))))) (<= (* skoSC1 (+ (* skoMC1 (+ 1. (* skoMC1 (- 3.)))) (* skoSC1 (+ (* skoMC1 (+ 2. (* skoMC1 3.))) (* skoSC1 (+ (* skoMC1 (+ (/ (- 1.) 6.) skoMC1)) (* skoSC1 (* skoMC1 (/ (- 1.) 4.))))))))) (* skoMC1 (+ 2. (* skoMC1 5.)))))))))))))))))))

% In GRF format:
(sequent " MetiTarski formula " (antecedent (<= (* skoMC1 (* skoMC1 (* skoMC1 (- 1.)))) 0.) (> (* skoSC1 (* skoMC1 (* skoMC1 skoMC1))) (* skoMC1 (* skoMC1 (* skoMC1 (- 1.))))) (<= (* skoMC1 (* skoMC1 (* skoMC1 (- 2.)))) 0.) (> (* skoMC1 (* skoMC1 (* skoMC1 2.))) 0.) (<= skoSC1 (/ 5. 4.)) (<= 2. skoMC1) (<= 0. skoSC1) (> skoMC1 0.) (<= 0. skoMC1) (> (* skoSC1 skoMC1) (* skoMC1 (- 1.))) (<= (* skoSC1 (* skoMC1 (- 1.))) skoMC1) (> (* skoSC1 (+ (* skoMC1 (+ (- 1.) (* skoMC1 3.))) (* skoSC1 (+ (* skoMC1 (+ (- 2.) (* skoMC1 (- 3.)))) (* skoSC1 (+ (* skoMC1 (* skoMC1 (- 1.))) (* skoSC1 (* skoMC1 (/ 1. 12.))))))))) (* skoMC1 (+ (- 2.) (* skoMC1 (- 5.))))) (<= (* skoSC1 (+ (* skoMC1 (+ 1. (* skoMC1 (- 3.)))) (* skoSC1 (+ (* skoMC1 (+ 2. (* skoMC1 3.))) (* skoSC1 (+ (* skoMC1 skoMC1) (* skoSC1 (* skoMC1 (/ (- 1.) 12.))))))))) (* skoMC1 (+ 2. (* skoMC1 5.)))) (> (* skoSC1 (+ (* skoMC1 (+ (- 1.) (* skoMC1 3.))) (* skoSC1 (+ (* skoMC1 (+ (- 2.) (* skoMC1 (- 3.)))) (* skoSC1 (+ (* skoMC1 (+ (/ 1. 6.) (* skoMC1 (- 1.)))) (* skoSC1 (* skoMC1 (/ 1. 4.))))))))) (* skoMC1 (+ (- 2.) (* skoMC1 (- 5.)))))) (succedent (> (* skoSC1 (+ (* skoMC1 (+ 1. (* skoMC1 (- 3.)))) (* skoSC1 (+ (* skoMC1 (+ 2. (* skoMC1 3.))) (* skoSC1 (+ (* skoMC1 (+ (/ (- 1.) 6.) skoMC1)) (* skoSC1 (* skoMC1 (/ (- 1.) 4.))))))))) (* skoMC1 (+ 2. (* skoMC1 5.))))))
-----[end problem]-----

-----[begin problem]-----
% In Mathematica format:
Timing[Resolve[Exists[{skoSC1,skoMC1}, And[skoSC1*skoMC1*skoMC1*skoMC1*-2<=skoMC1*skoMC1*skoMC1*2,skoMC1*skoMC1*skoMC1*-1<=0,skoSC1*skoMC1*skoMC1*skoMC1>skoMC1*skoMC1*skoMC1*-1,skoMC1*skoMC1*skoMC1*-2<=0,skoMC1*skoMC1*skoMC1*2>0,skoSC1<=(5/4),2<=skoMC1,0<=skoSC1,skoMC1>0,0<=skoMC1,skoSC1*skoMC1>skoMC1*-1,skoSC1*skoMC1*-1<=skoMC1,skoSC1*(skoMC1*(-1+skoMC1*3)+skoSC1*(skoMC1*(-2+skoMC1*-3)+skoSC1*(skoMC1*skoMC1*-1+skoSC1*skoMC1*(1/12))))>skoMC1*(-2+skoMC1*-5),skoSC1*(skoMC1*(1+skoMC1*-3)+skoSC1*(skoMC1*(2+skoMC1*3)+skoSC1*(skoMC1*skoMC1+skoSC1*skoMC1*(-1/12))))<=skoMC1*(2+skoMC1*5),skoSC1*(skoMC1*(-1+skoMC1*3)+skoSC1*(skoMC1*(-2+skoMC1*-3)+skoSC1*(skoMC1*((1/6)+skoMC1*-1)+skoSC1*skoMC1*(1/4))))>skoMC1*(-2+skoMC1*-5),skoSC1*(skoMC1*(1+skoMC1*-3)+skoSC1*(skoMC1*(2+skoMC1*3)+skoSC1*(skoMC1*((-1/6)+skoMC1)+skoSC1*skoMC1*(-1/4))))<=skoMC1*(2+skoMC1*5)]], Reals]]

% In QepcadB format:
(E skoSC1) (E skoMC1) [[(skoSC1 skoMC1 skoMC1 skoMC1 (-2))<=(skoMC1 skoMC1 skoMC1 (2))]/\[[(skoMC1 skoMC1 skoMC1 (-1))<=0]/\[[(skoMC1 skoMC1 skoMC1 (-1))<(skoSC1 skoMC1 skoMC1 skoMC1)]/\[[(skoMC1 skoMC1 skoMC1 (-2))<=0]/\[[0<(skoMC1 skoMC1 skoMC1 (2))]/\[[skoSC1<=5/4]/\[[2<=skoMC1]/\[[0<=skoSC1]/\[[0<skoMC1]/\[[0<=skoMC1]/\[[(skoMC1 (-1))<(skoSC1 skoMC1)]/\[[(skoSC1 skoMC1 (-1))<=skoMC1]/\[[(skoMC1 (-2+(skoMC1 (-5))))<(skoSC1 ((skoMC1 (-1+(skoMC1 (3))))+(skoSC1 ((skoMC1 (-2+(skoMC1 (-3))))+(skoSC1 ((skoMC1 skoMC1 (-1))+(skoSC1 skoMC1 (1/12))))))))]/\[[(skoSC1 ((skoMC1 (1+(skoMC1 (-3))))+(skoSC1 ((skoMC1 (2+(skoMC1 (3))))+(skoSC1 ((skoMC1 skoMC1)+(skoSC1 skoMC1 (-1/12))))))))<=(skoMC1 (2+(skoMC1 (5))))]/\[[(skoMC1 (-2+(skoMC1 (-5))))<(skoSC1 ((skoMC1 (-1+(skoMC1 (3))))+(skoSC1 ((skoMC1 (-2+(skoMC1 (-3))))+(skoSC1 ((skoMC1 (1/6+(skoMC1 (-1))))+(skoSC1 skoMC1 (1/4))))))))]/\[(skoSC1 ((skoMC1 (1+(skoMC1 (-3))))+(skoSC1 ((skoMC1 (2+(skoMC1 (3))))+(skoSC1 ((skoMC1 (-1/6+skoMC1))+(skoSC1 skoMC1 (-1/4))))))))<=(skoMC1 (2+(skoMC1 (5))))]]]]]]]]]]]]]]]].

% In SMTLib2 format:
(declare-fun skoSC1 () Real) (declare-fun skoMC1 () Real) (assert (and (<= (* skoSC1 (* skoMC1 (* skoMC1 (* skoMC1 (- 2.))))) (* skoMC1 (* skoMC1 (* skoMC1 2.)))) (and (<= (* skoMC1 (* skoMC1 (* skoMC1 (- 1.)))) 0.) (and (> (* skoSC1 (* skoMC1 (* skoMC1 skoMC1))) (* skoMC1 (* skoMC1 (* skoMC1 (- 1.))))) (and (<= (* skoMC1 (* skoMC1 (* skoMC1 (- 2.)))) 0.) (and (> (* skoMC1 (* skoMC1 (* skoMC1 2.))) 0.) (and (<= skoSC1 (/ 5. 4.)) (and (<= 2. skoMC1) (and (<= 0. skoSC1) (and (> skoMC1 0.) (and (<= 0. skoMC1) (and (> (* skoSC1 skoMC1) (* skoMC1 (- 1.))) (and (<= (* skoSC1 (* skoMC1 (- 1.))) skoMC1) (and (> (* skoSC1 (+ (* skoMC1 (+ (- 1.) (* skoMC1 3.))) (* skoSC1 (+ (* skoMC1 (+ (- 2.) (* skoMC1 (- 3.)))) (* skoSC1 (+ (* skoMC1 (* skoMC1 (- 1.))) (* skoSC1 (* skoMC1 (/ 1. 12.))))))))) (* skoMC1 (+ (- 2.) (* skoMC1 (- 5.))))) (and (<= (* skoSC1 (+ (* skoMC1 (+ 1. (* skoMC1 (- 3.)))) (* skoSC1 (+ (* skoMC1 (+ 2. (* skoMC1 3.))) (* skoSC1 (+ (* skoMC1 skoMC1) (* skoSC1 (* skoMC1 (/ (- 1.) 12.))))))))) (* skoMC1 (+ 2. (* skoMC1 5.)))) (and (> (* skoSC1 (+ (* skoMC1 (+ (- 1.) (* skoMC1 3.))) (* skoSC1 (+ (* skoMC1 (+ (- 2.) (* skoMC1 (- 3.)))) (* skoSC1 (+ (* skoMC1 (+ (/ 1. 6.) (* skoMC1 (- 1.)))) (* skoSC1 (* skoMC1 (/ 1. 4.))))))))) (* skoMC1 (+ (- 2.) (* skoMC1 (- 5.))))) (<= (* skoSC1 (+ (* skoMC1 (+ 1. (* skoMC1 (- 3.)))) (* skoSC1 (+ (* skoMC1 (+ 2. (* skoMC1 3.))) (* skoSC1 (+ (* skoMC1 (+ (/ (- 1.) 6.) skoMC1)) (* skoSC1 (* skoMC1 (/ (- 1.) 4.))))))))) (* skoMC1 (+ 2. (* skoMC1 5.))))))))))))))))))))

% In GRF format:
(sequent " MetiTarski formula " (antecedent (<= (* skoSC1 (* skoMC1 (* skoMC1 (* skoMC1 (- 2.))))) (* skoMC1 (* skoMC1 (* skoMC1 2.)))) (<= (* skoMC1 (* skoMC1 (* skoMC1 (- 1.)))) 0.) (> (* skoSC1 (* skoMC1 (* skoMC1 skoMC1))) (* skoMC1 (* skoMC1 (* skoMC1 (- 1.))))) (<= (* skoMC1 (* skoMC1 (* skoMC1 (- 2.)))) 0.) (> (* skoMC1 (* skoMC1 (* skoMC1 2.))) 0.) (<= skoSC1 (/ 5. 4.)) (<= 2. skoMC1) (<= 0. skoSC1) (> skoMC1 0.) (<= 0. skoMC1) (> (* skoSC1 skoMC1) (* skoMC1 (- 1.))) (<= (* skoSC1 (* skoMC1 (- 1.))) skoMC1) (> (* skoSC1 (+ (* skoMC1 (+ (- 1.) (* skoMC1 3.))) (* skoSC1 (+ (* skoMC1 (+ (- 2.) (* skoMC1 (- 3.)))) (* skoSC1 (+ (* skoMC1 (* skoMC1 (- 1.))) (* skoSC1 (* skoMC1 (/ 1. 12.))))))))) (* skoMC1 (+ (- 2.) (* skoMC1 (- 5.))))) (<= (* skoSC1 (+ (* skoMC1 (+ 1. (* skoMC1 (- 3.)))) (* skoSC1 (+ (* skoMC1 (+ 2. (* skoMC1 3.))) (* skoSC1 (+ (* skoMC1 skoMC1) (* skoSC1 (* skoMC1 (/ (- 1.) 12.))))))))) (* skoMC1 (+ 2. (* skoMC1 5.)))) (> (* skoSC1 (+ (* skoMC1 (+ (- 1.) (* skoMC1 3.))) (* skoSC1 (+ (* skoMC1 (+ (- 2.) (* skoMC1 (- 3.)))) (* skoSC1 (+ (* skoMC1 (+ (/ 1. 6.) (* skoMC1 (- 1.)))) (* skoSC1 (* skoMC1 (/ 1. 4.))))))))) (* skoMC1 (+ (- 2.) (* skoMC1 (- 5.)))))) (succedent (> (* skoSC1 (+ (* skoMC1 (+ 1. (* skoMC1 (- 3.)))) (* skoSC1 (+ (* skoMC1 (+ 2. (* skoMC1 3.))) (* skoSC1 (+ (* skoMC1 (+ (/ (- 1.) 6.) skoMC1)) (* skoSC1 (* skoMC1 (/ (- 1.) 4.))))))))) (* skoMC1 (+ 2. (* skoMC1 5.))))))
-----[end problem]-----

-----[begin problem]-----
% In Mathematica format:
Timing[Resolve[Exists[{skoMC1,skoSC1}, And[skoSC1*skoMC1*skoMC1*skoMC1*-2<=skoMC1*skoMC1*skoMC1*2,skoSC1*skoMC1*skoMC1*skoMC1*2<=skoMC1*skoMC1*skoMC1*-2,skoSC1*(skoMC1*skoMC1*skoMC1*skoMC1*-12+skoSC1*skoMC1*skoMC1*skoMC1*skoMC1*-6)<=skoMC1*skoMC1*skoMC1*skoMC1*6,skoMC1*skoMC1*skoMC1*-1<=0,skoSC1*skoMC1*skoMC1*skoMC1>skoMC1*skoMC1*skoMC1*-1,skoMC1*skoMC1*skoMC1*-2<=0,skoMC1*skoMC1*skoMC1*2>0,skoSC1<=(5/4),2<=skoMC1,0<=skoSC1,skoMC1>0,0<=skoMC1,skoSC1*skoMC1>skoMC1*-1,skoSC1*skoMC1*-1<=skoMC1,skoSC1*(skoMC1*(-1+skoMC1*3)+skoSC1*(skoMC1*(-2+skoMC1*-3)+skoSC1*(skoMC1*skoMC1*-1+skoSC1*skoMC1*(1/12))))>skoMC1*(-2+skoMC1*-5),skoSC1*(skoMC1*(1+skoMC1*-3)+skoSC1*(skoMC1*(2+skoMC1*3)+skoSC1*(skoMC1*skoMC1+skoSC1*skoMC1*(-1/12))))<=skoMC1*(2+skoMC1*5),skoSC1*(skoMC1*(-1+skoMC1*3)+skoSC1*(skoMC1*(-2+skoMC1*-3)+skoSC1*(skoMC1*((1/6)+skoMC1*-1)+skoSC1*skoMC1*(1/4))))>skoMC1*(-2+skoMC1*-5),skoSC1*(skoMC1*(1+skoMC1*-3)+skoSC1*(skoMC1*(2+skoMC1*3)+skoSC1*(skoMC1*((-1/6)+skoMC1)+skoSC1*skoMC1*(-1/4))))<=skoMC1*(2+skoMC1*5)]], Reals]]

% In QepcadB format:
(E skoMC1) (E skoSC1) [[(skoSC1 skoMC1 skoMC1 skoMC1 (-2))<=(skoMC1 skoMC1 skoMC1 (2))]/\[[(skoSC1 skoMC1 skoMC1 skoMC1 (2))<=(skoMC1 skoMC1 skoMC1 (-2))]/\[[(skoSC1 ((skoMC1 skoMC1 skoMC1 skoMC1 (-12))+(skoSC1 skoMC1 skoMC1 skoMC1 skoMC1 (-6))))<=(skoMC1 skoMC1 skoMC1 skoMC1 (6))]/\[[(skoMC1 skoMC1 skoMC1 (-1))<=0]/\[[(skoMC1 skoMC1 skoMC1 (-1))<(skoSC1 skoMC1 skoMC1 skoMC1)]/\[[(skoMC1 skoMC1 skoMC1 (-2))<=0]/\[[0<(skoMC1 skoMC1 skoMC1 (2))]/\[[skoSC1<=5/4]/\[[2<=skoMC1]/\[[0<=skoSC1]/\[[0<skoMC1]/\[[0<=skoMC1]/\[[(skoMC1 (-1))<(skoSC1 skoMC1)]/\[[(skoSC1 skoMC1 (-1))<=skoMC1]/\[[(skoMC1 (-2+(skoMC1 (-5))))<(skoSC1 ((skoMC1 (-1+(skoMC1 (3))))+(skoSC1 ((skoMC1 (-2+(skoMC1 (-3))))+(skoSC1 ((skoMC1 skoMC1 (-1))+(skoSC1 skoMC1 (1/12))))))))]/\[[(skoSC1 ((skoMC1 (1+(skoMC1 (-3))))+(skoSC1 ((skoMC1 (2+(skoMC1 (3))))+(skoSC1 ((skoMC1 skoMC1)+(skoSC1 skoMC1 (-1/12))))))))<=(skoMC1 (2+(skoMC1 (5))))]/\[[(skoMC1 (-2+(skoMC1 (-5))))<(skoSC1 ((skoMC1 (-1+(skoMC1 (3))))+(skoSC1 ((skoMC1 (-2+(skoMC1 (-3))))+(skoSC1 ((skoMC1 (1/6+(skoMC1 (-1))))+(skoSC1 skoMC1 (1/4))))))))]/\[(skoSC1 ((skoMC1 (1+(skoMC1 (-3))))+(skoSC1 ((skoMC1 (2+(skoMC1 (3))))+(skoSC1 ((skoMC1 (-1/6+skoMC1))+(skoSC1 skoMC1 (-1/4))))))))<=(skoMC1 (2+(skoMC1 (5))))]]]]]]]]]]]]]]]]]].

% In SMTLib2 format:
(declare-fun skoMC1 () Real) (declare-fun skoSC1 () Real) (assert (and (<= (* skoSC1 (* skoMC1 (* skoMC1 (* skoMC1 (- 2.))))) (* skoMC1 (* skoMC1 (* skoMC1 2.)))) (and (<= (* skoSC1 (* skoMC1 (* skoMC1 (* skoMC1 2.)))) (* skoMC1 (* skoMC1 (* skoMC1 (- 2.))))) (and (<= (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (* skoMC1 (- 12.))))) (* skoSC1 (* skoMC1 (* skoMC1 (* skoMC1 (* skoMC1 (- 6.)))))))) (* skoMC1 (* skoMC1 (* skoMC1 (* skoMC1 6.))))) (and (<= (* skoMC1 (* skoMC1 (* skoMC1 (- 1.)))) 0.) (and (> (* skoSC1 (* skoMC1 (* skoMC1 skoMC1))) (* skoMC1 (* skoMC1 (* skoMC1 (- 1.))))) (and (<= (* skoMC1 (* skoMC1 (* skoMC1 (- 2.)))) 0.) (and (> (* skoMC1 (* skoMC1 (* skoMC1 2.))) 0.) (and (<= skoSC1 (/ 5. 4.)) (and (<= 2. skoMC1) (and (<= 0. skoSC1) (and (> skoMC1 0.) (and (<= 0. skoMC1) (and (> (* skoSC1 skoMC1) (* skoMC1 (- 1.))) (and (<= (* skoSC1 (* skoMC1 (- 1.))) skoMC1) (and (> (* skoSC1 (+ (* skoMC1 (+ (- 1.) (* skoMC1 3.))) (* skoSC1 (+ (* skoMC1 (+ (- 2.) (* skoMC1 (- 3.)))) (* skoSC1 (+ (* skoMC1 (* skoMC1 (- 1.))) (* skoSC1 (* skoMC1 (/ 1. 12.))))))))) (* skoMC1 (+ (- 2.) (* skoMC1 (- 5.))))) (and (<= (* skoSC1 (+ (* skoMC1 (+ 1. (* skoMC1 (- 3.)))) (* skoSC1 (+ (* skoMC1 (+ 2. (* skoMC1 3.))) (* skoSC1 (+ (* skoMC1 skoMC1) (* skoSC1 (* skoMC1 (/ (- 1.) 12.))))))))) (* skoMC1 (+ 2. (* skoMC1 5.)))) (and (> (* skoSC1 (+ (* skoMC1 (+ (- 1.) (* skoMC1 3.))) (* skoSC1 (+ (* skoMC1 (+ (- 2.) (* skoMC1 (- 3.)))) (* skoSC1 (+ (* skoMC1 (+ (/ 1. 6.) (* skoMC1 (- 1.)))) (* skoSC1 (* skoMC1 (/ 1. 4.))))))))) (* skoMC1 (+ (- 2.) (* skoMC1 (- 5.))))) (<= (* skoSC1 (+ (* skoMC1 (+ 1. (* skoMC1 (- 3.)))) (* skoSC1 (+ (* skoMC1 (+ 2. (* skoMC1 3.))) (* skoSC1 (+ (* skoMC1 (+ (/ (- 1.) 6.) skoMC1)) (* skoSC1 (* skoMC1 (/ (- 1.) 4.))))))))) (* skoMC1 (+ 2. (* skoMC1 5.))))))))))))))))))))))

% In GRF format:
(sequent " MetiTarski formula " (antecedent (<= (* skoSC1 (* skoMC1 (* skoMC1 (* skoMC1 (- 2.))))) (* skoMC1 (* skoMC1 (* skoMC1 2.)))) (<= (* skoSC1 (* skoMC1 (* skoMC1 (* skoMC1 2.)))) (* skoMC1 (* skoMC1 (* skoMC1 (- 2.))))) (<= (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (* skoMC1 (- 12.))))) (* skoSC1 (* skoMC1 (* skoMC1 (* skoMC1 (* skoMC1 (- 6.)))))))) (* skoMC1 (* skoMC1 (* skoMC1 (* skoMC1 6.))))) (<= (* skoMC1 (* skoMC1 (* skoMC1 (- 1.)))) 0.) (> (* skoSC1 (* skoMC1 (* skoMC1 skoMC1))) (* skoMC1 (* skoMC1 (* skoMC1 (- 1.))))) (<= (* skoMC1 (* skoMC1 (* skoMC1 (- 2.)))) 0.) (> (* skoMC1 (* skoMC1 (* skoMC1 2.))) 0.) (<= skoSC1 (/ 5. 4.)) (<= 2. skoMC1) (<= 0. skoSC1) (> skoMC1 0.) (<= 0. skoMC1) (> (* skoSC1 skoMC1) (* skoMC1 (- 1.))) (<= (* skoSC1 (* skoMC1 (- 1.))) skoMC1) (> (* skoSC1 (+ (* skoMC1 (+ (- 1.) (* skoMC1 3.))) (* skoSC1 (+ (* skoMC1 (+ (- 2.) (* skoMC1 (- 3.)))) (* skoSC1 (+ (* skoMC1 (* skoMC1 (- 1.))) (* skoSC1 (* skoMC1 (/ 1. 12.))))))))) (* skoMC1 (+ (- 2.) (* skoMC1 (- 5.))))) (<= (* skoSC1 (+ (* skoMC1 (+ 1. (* skoMC1 (- 3.)))) (* skoSC1 (+ (* skoMC1 (+ 2. (* skoMC1 3.))) (* skoSC1 (+ (* skoMC1 skoMC1) (* skoSC1 (* skoMC1 (/ (- 1.) 12.))))))))) (* skoMC1 (+ 2. (* skoMC1 5.)))) (> (* skoSC1 (+ (* skoMC1 (+ (- 1.) (* skoMC1 3.))) (* skoSC1 (+ (* skoMC1 (+ (- 2.) (* skoMC1 (- 3.)))) (* skoSC1 (+ (* skoMC1 (+ (/ 1. 6.) (* skoMC1 (- 1.)))) (* skoSC1 (* skoMC1 (/ 1. 4.))))))))) (* skoMC1 (+ (- 2.) (* skoMC1 (- 5.)))))) (succedent (> (* skoSC1 (+ (* skoMC1 (+ 1. (* skoMC1 (- 3.)))) (* skoSC1 (+ (* skoMC1 (+ 2. (* skoMC1 3.))) (* skoSC1 (+ (* skoMC1 (+ (/ (- 1.) 6.) skoMC1)) (* skoSC1 (* skoMC1 (/ (- 1.) 4.))))))))) (* skoMC1 (+ 2. (* skoMC1 5.))))))
-----[end problem]-----

-----[begin problem]-----
% In Mathematica format:
Timing[Resolve[Exists[{skoSC1,skoMC1}, And[skoSC1*skoMC1*skoMC1*skoMC1*2>skoMC1*skoMC1*skoMC1*-2,skoMC1*skoMC1*skoMC1*-1<=0,skoSC1*skoMC1*skoMC1*skoMC1>skoMC1*skoMC1*skoMC1*-1,skoMC1*skoMC1*skoMC1*-2<=0,skoMC1*skoMC1*skoMC1*2>0,skoSC1<=(5/4),2<=skoMC1,0<=skoSC1,skoMC1>0,0<=skoMC1,skoSC1*skoMC1>skoMC1*-1,skoSC1*skoMC1*-1<=skoMC1,skoSC1*(skoMC1*(-1+skoMC1*3)+skoSC1*(skoMC1*(-2+skoMC1*-3)+skoSC1*(skoMC1*skoMC1*-1+skoSC1*skoMC1*(1/12))))>skoMC1*(-2+skoMC1*-5),skoSC1*(skoMC1*(1+skoMC1*-3)+skoSC1*(skoMC1*(2+skoMC1*3)+skoSC1*(skoMC1*skoMC1+skoSC1*skoMC1*(-1/12))))<=skoMC1*(2+skoMC1*5),skoSC1*(skoMC1*(-1+skoMC1*3)+skoSC1*(skoMC1*(-2+skoMC1*-3)+skoSC1*(skoMC1*((1/6)+skoMC1*-1)+skoSC1*skoMC1*(1/4))))>skoMC1*(-2+skoMC1*-5),skoSC1*(skoMC1*(1+skoMC1*-3)+skoSC1*(skoMC1*(2+skoMC1*3)+skoSC1*(skoMC1*((-1/6)+skoMC1)+skoSC1*skoMC1*(-1/4))))<=skoMC1*(2+skoMC1*5)]], Reals]]

% In QepcadB format:
(E skoSC1) (E skoMC1) [[(skoMC1 skoMC1 skoMC1 (-2))<(skoSC1 skoMC1 skoMC1 skoMC1 (2))]/\[[(skoMC1 skoMC1 skoMC1 (-1))<=0]/\[[(skoMC1 skoMC1 skoMC1 (-1))<(skoSC1 skoMC1 skoMC1 skoMC1)]/\[[(skoMC1 skoMC1 skoMC1 (-2))<=0]/\[[0<(skoMC1 skoMC1 skoMC1 (2))]/\[[skoSC1<=5/4]/\[[2<=skoMC1]/\[[0<=skoSC1]/\[[0<skoMC1]/\[[0<=skoMC1]/\[[(skoMC1 (-1))<(skoSC1 skoMC1)]/\[[(skoSC1 skoMC1 (-1))<=skoMC1]/\[[(skoMC1 (-2+(skoMC1 (-5))))<(skoSC1 ((skoMC1 (-1+(skoMC1 (3))))+(skoSC1 ((skoMC1 (-2+(skoMC1 (-3))))+(skoSC1 ((skoMC1 skoMC1 (-1))+(skoSC1 skoMC1 (1/12))))))))]/\[[(skoSC1 ((skoMC1 (1+(skoMC1 (-3))))+(skoSC1 ((skoMC1 (2+(skoMC1 (3))))+(skoSC1 ((skoMC1 skoMC1)+(skoSC1 skoMC1 (-1/12))))))))<=(skoMC1 (2+(skoMC1 (5))))]/\[[(skoMC1 (-2+(skoMC1 (-5))))<(skoSC1 ((skoMC1 (-1+(skoMC1 (3))))+(skoSC1 ((skoMC1 (-2+(skoMC1 (-3))))+(skoSC1 ((skoMC1 (1/6+(skoMC1 (-1))))+(skoSC1 skoMC1 (1/4))))))))]/\[(skoSC1 ((skoMC1 (1+(skoMC1 (-3))))+(skoSC1 ((skoMC1 (2+(skoMC1 (3))))+(skoSC1 ((skoMC1 (-1/6+skoMC1))+(skoSC1 skoMC1 (-1/4))))))))<=(skoMC1 (2+(skoMC1 (5))))]]]]]]]]]]]]]]]].

% In SMTLib2 format:
(declare-fun skoSC1 () Real) (declare-fun skoMC1 () Real) (assert (and (> (* skoSC1 (* skoMC1 (* skoMC1 (* skoMC1 2.)))) (* skoMC1 (* skoMC1 (* skoMC1 (- 2.))))) (and (<= (* skoMC1 (* skoMC1 (* skoMC1 (- 1.)))) 0.) (and (> (* skoSC1 (* skoMC1 (* skoMC1 skoMC1))) (* skoMC1 (* skoMC1 (* skoMC1 (- 1.))))) (and (<= (* skoMC1 (* skoMC1 (* skoMC1 (- 2.)))) 0.) (and (> (* skoMC1 (* skoMC1 (* skoMC1 2.))) 0.) (and (<= skoSC1 (/ 5. 4.)) (and (<= 2. skoMC1) (and (<= 0. skoSC1) (and (> skoMC1 0.) (and (<= 0. skoMC1) (and (> (* skoSC1 skoMC1) (* skoMC1 (- 1.))) (and (<= (* skoSC1 (* skoMC1 (- 1.))) skoMC1) (and (> (* skoSC1 (+ (* skoMC1 (+ (- 1.) (* skoMC1 3.))) (* skoSC1 (+ (* skoMC1 (+ (- 2.) (* skoMC1 (- 3.)))) (* skoSC1 (+ (* skoMC1 (* skoMC1 (- 1.))) (* skoSC1 (* skoMC1 (/ 1. 12.))))))))) (* skoMC1 (+ (- 2.) (* skoMC1 (- 5.))))) (and (<= (* skoSC1 (+ (* skoMC1 (+ 1. (* skoMC1 (- 3.)))) (* skoSC1 (+ (* skoMC1 (+ 2. (* skoMC1 3.))) (* skoSC1 (+ (* skoMC1 skoMC1) (* skoSC1 (* skoMC1 (/ (- 1.) 12.))))))))) (* skoMC1 (+ 2. (* skoMC1 5.)))) (and (> (* skoSC1 (+ (* skoMC1 (+ (- 1.) (* skoMC1 3.))) (* skoSC1 (+ (* skoMC1 (+ (- 2.) (* skoMC1 (- 3.)))) (* skoSC1 (+ (* skoMC1 (+ (/ 1. 6.) (* skoMC1 (- 1.)))) (* skoSC1 (* skoMC1 (/ 1. 4.))))))))) (* skoMC1 (+ (- 2.) (* skoMC1 (- 5.))))) (<= (* skoSC1 (+ (* skoMC1 (+ 1. (* skoMC1 (- 3.)))) (* skoSC1 (+ (* skoMC1 (+ 2. (* skoMC1 3.))) (* skoSC1 (+ (* skoMC1 (+ (/ (- 1.) 6.) skoMC1)) (* skoSC1 (* skoMC1 (/ (- 1.) 4.))))))))) (* skoMC1 (+ 2. (* skoMC1 5.))))))))))))))))))))

% In GRF format:
(sequent " MetiTarski formula " (antecedent (> (* skoSC1 (* skoMC1 (* skoMC1 (* skoMC1 2.)))) (* skoMC1 (* skoMC1 (* skoMC1 (- 2.))))) (<= (* skoMC1 (* skoMC1 (* skoMC1 (- 1.)))) 0.) (> (* skoSC1 (* skoMC1 (* skoMC1 skoMC1))) (* skoMC1 (* skoMC1 (* skoMC1 (- 1.))))) (<= (* skoMC1 (* skoMC1 (* skoMC1 (- 2.)))) 0.) (> (* skoMC1 (* skoMC1 (* skoMC1 2.))) 0.) (<= skoSC1 (/ 5. 4.)) (<= 2. skoMC1) (<= 0. skoSC1) (> skoMC1 0.) (<= 0. skoMC1) (> (* skoSC1 skoMC1) (* skoMC1 (- 1.))) (<= (* skoSC1 (* skoMC1 (- 1.))) skoMC1) (> (* skoSC1 (+ (* skoMC1 (+ (- 1.) (* skoMC1 3.))) (* skoSC1 (+ (* skoMC1 (+ (- 2.) (* skoMC1 (- 3.)))) (* skoSC1 (+ (* skoMC1 (* skoMC1 (- 1.))) (* skoSC1 (* skoMC1 (/ 1. 12.))))))))) (* skoMC1 (+ (- 2.) (* skoMC1 (- 5.))))) (<= (* skoSC1 (+ (* skoMC1 (+ 1. (* skoMC1 (- 3.)))) (* skoSC1 (+ (* skoMC1 (+ 2. (* skoMC1 3.))) (* skoSC1 (+ (* skoMC1 skoMC1) (* skoSC1 (* skoMC1 (/ (- 1.) 12.))))))))) (* skoMC1 (+ 2. (* skoMC1 5.)))) (> (* skoSC1 (+ (* skoMC1 (+ (- 1.) (* skoMC1 3.))) (* skoSC1 (+ (* skoMC1 (+ (- 2.) (* skoMC1 (- 3.)))) (* skoSC1 (+ (* skoMC1 (+ (/ 1. 6.) (* skoMC1 (- 1.)))) (* skoSC1 (* skoMC1 (/ 1. 4.))))))))) (* skoMC1 (+ (- 2.) (* skoMC1 (- 5.)))))) (succedent (> (* skoSC1 (+ (* skoMC1 (+ 1. (* skoMC1 (- 3.)))) (* skoSC1 (+ (* skoMC1 (+ 2. (* skoMC1 3.))) (* skoSC1 (+ (* skoMC1 (+ (/ (- 1.) 6.) skoMC1)) (* skoSC1 (* skoMC1 (/ (- 1.) 4.))))))))) (* skoMC1 (+ 2. (* skoMC1 5.))))))
-----[end problem]-----

-----[begin problem]-----
% In Mathematica format:
Timing[Resolve[Exists[{skoSC1,skoMC1}, And[skoSC1*skoMC1*skoMC1*skoMC1*2>skoMC1*skoMC1*skoMC1*-2,skoMC1*skoMC1*skoMC1*-1<=0,skoSC1*skoMC1*skoMC1*skoMC1>skoMC1*skoMC1*skoMC1*-1,skoMC1*skoMC1*skoMC1*-2<=0,skoMC1*skoMC1*skoMC1*2>0,skoSC1<=(5/4),2<=skoMC1,0<=skoSC1,skoMC1>0,0<=skoMC1,skoSC1*skoMC1>skoMC1*-1,skoSC1*skoMC1*-1<=skoMC1,skoSC1*(skoMC1*(-1+skoMC1*3)+skoSC1*(skoMC1*(-2+skoMC1*-3)+skoSC1*(skoMC1*skoMC1*-1+skoSC1*skoMC1*(1/12))))>skoMC1*(-2+skoMC1*-5),skoSC1*(skoMC1*(1+skoMC1*-3)+skoSC1*(skoMC1*(2+skoMC1*3)+skoSC1*(skoMC1*skoMC1+skoSC1*skoMC1*(-1/12))))<=skoMC1*(2+skoMC1*5),skoSC1*(skoMC1*(-1+skoMC1*3)+skoSC1*(skoMC1*(-2+skoMC1*-3)+skoSC1*(skoMC1*((1/6)+skoMC1*-1)+skoSC1*skoMC1*(1/4))))>skoMC1*(-2+skoMC1*-5),skoSC1*(skoMC1*(1+skoMC1*-3)+skoSC1*(skoMC1*(2+skoMC1*3)+skoSC1*(skoMC1*((-1/6)+skoMC1)+skoSC1*skoMC1*(-1/4))))<=skoMC1*(2+skoMC1*5)]], Reals]]

% In QepcadB format:
(E skoSC1) (E skoMC1) [[(skoMC1 skoMC1 skoMC1 (-2))<(skoSC1 skoMC1 skoMC1 skoMC1 (2))]/\[[(skoMC1 skoMC1 skoMC1 (-1))<=0]/\[[(skoMC1 skoMC1 skoMC1 (-1))<(skoSC1 skoMC1 skoMC1 skoMC1)]/\[[(skoMC1 skoMC1 skoMC1 (-2))<=0]/\[[0<(skoMC1 skoMC1 skoMC1 (2))]/\[[skoSC1<=5/4]/\[[2<=skoMC1]/\[[0<=skoSC1]/\[[0<skoMC1]/\[[0<=skoMC1]/\[[(skoMC1 (-1))<(skoSC1 skoMC1)]/\[[(skoSC1 skoMC1 (-1))<=skoMC1]/\[[(skoMC1 (-2+(skoMC1 (-5))))<(skoSC1 ((skoMC1 (-1+(skoMC1 (3))))+(skoSC1 ((skoMC1 (-2+(skoMC1 (-3))))+(skoSC1 ((skoMC1 skoMC1 (-1))+(skoSC1 skoMC1 (1/12))))))))]/\[[(skoSC1 ((skoMC1 (1+(skoMC1 (-3))))+(skoSC1 ((skoMC1 (2+(skoMC1 (3))))+(skoSC1 ((skoMC1 skoMC1)+(skoSC1 skoMC1 (-1/12))))))))<=(skoMC1 (2+(skoMC1 (5))))]/\[[(skoMC1 (-2+(skoMC1 (-5))))<(skoSC1 ((skoMC1 (-1+(skoMC1 (3))))+(skoSC1 ((skoMC1 (-2+(skoMC1 (-3))))+(skoSC1 ((skoMC1 (1/6+(skoMC1 (-1))))+(skoSC1 skoMC1 (1/4))))))))]/\[(skoSC1 ((skoMC1 (1+(skoMC1 (-3))))+(skoSC1 ((skoMC1 (2+(skoMC1 (3))))+(skoSC1 ((skoMC1 (-1/6+skoMC1))+(skoSC1 skoMC1 (-1/4))))))))<=(skoMC1 (2+(skoMC1 (5))))]]]]]]]]]]]]]]]].

% In SMTLib2 format:
(declare-fun skoSC1 () Real) (declare-fun skoMC1 () Real) (assert (and (> (* skoSC1 (* skoMC1 (* skoMC1 (* skoMC1 2.)))) (* skoMC1 (* skoMC1 (* skoMC1 (- 2.))))) (and (<= (* skoMC1 (* skoMC1 (* skoMC1 (- 1.)))) 0.) (and (> (* skoSC1 (* skoMC1 (* skoMC1 skoMC1))) (* skoMC1 (* skoMC1 (* skoMC1 (- 1.))))) (and (<= (* skoMC1 (* skoMC1 (* skoMC1 (- 2.)))) 0.) (and (> (* skoMC1 (* skoMC1 (* skoMC1 2.))) 0.) (and (<= skoSC1 (/ 5. 4.)) (and (<= 2. skoMC1) (and (<= 0. skoSC1) (and (> skoMC1 0.) (and (<= 0. skoMC1) (and (> (* skoSC1 skoMC1) (* skoMC1 (- 1.))) (and (<= (* skoSC1 (* skoMC1 (- 1.))) skoMC1) (and (> (* skoSC1 (+ (* skoMC1 (+ (- 1.) (* skoMC1 3.))) (* skoSC1 (+ (* skoMC1 (+ (- 2.) (* skoMC1 (- 3.)))) (* skoSC1 (+ (* skoMC1 (* skoMC1 (- 1.))) (* skoSC1 (* skoMC1 (/ 1. 12.))))))))) (* skoMC1 (+ (- 2.) (* skoMC1 (- 5.))))) (and (<= (* skoSC1 (+ (* skoMC1 (+ 1. (* skoMC1 (- 3.)))) (* skoSC1 (+ (* skoMC1 (+ 2. (* skoMC1 3.))) (* skoSC1 (+ (* skoMC1 skoMC1) (* skoSC1 (* skoMC1 (/ (- 1.) 12.))))))))) (* skoMC1 (+ 2. (* skoMC1 5.)))) (and (> (* skoSC1 (+ (* skoMC1 (+ (- 1.) (* skoMC1 3.))) (* skoSC1 (+ (* skoMC1 (+ (- 2.) (* skoMC1 (- 3.)))) (* skoSC1 (+ (* skoMC1 (+ (/ 1. 6.) (* skoMC1 (- 1.)))) (* skoSC1 (* skoMC1 (/ 1. 4.))))))))) (* skoMC1 (+ (- 2.) (* skoMC1 (- 5.))))) (<= (* skoSC1 (+ (* skoMC1 (+ 1. (* skoMC1 (- 3.)))) (* skoSC1 (+ (* skoMC1 (+ 2. (* skoMC1 3.))) (* skoSC1 (+ (* skoMC1 (+ (/ (- 1.) 6.) skoMC1)) (* skoSC1 (* skoMC1 (/ (- 1.) 4.))))))))) (* skoMC1 (+ 2. (* skoMC1 5.))))))))))))))))))))

% In GRF format:
(sequent " MetiTarski formula " (antecedent (> (* skoSC1 (* skoMC1 (* skoMC1 (* skoMC1 2.)))) (* skoMC1 (* skoMC1 (* skoMC1 (- 2.))))) (<= (* skoMC1 (* skoMC1 (* skoMC1 (- 1.)))) 0.) (> (* skoSC1 (* skoMC1 (* skoMC1 skoMC1))) (* skoMC1 (* skoMC1 (* skoMC1 (- 1.))))) (<= (* skoMC1 (* skoMC1 (* skoMC1 (- 2.)))) 0.) (> (* skoMC1 (* skoMC1 (* skoMC1 2.))) 0.) (<= skoSC1 (/ 5. 4.)) (<= 2. skoMC1) (<= 0. skoSC1) (> skoMC1 0.) (<= 0. skoMC1) (> (* skoSC1 skoMC1) (* skoMC1 (- 1.))) (<= (* skoSC1 (* skoMC1 (- 1.))) skoMC1) (> (* skoSC1 (+ (* skoMC1 (+ (- 1.) (* skoMC1 3.))) (* skoSC1 (+ (* skoMC1 (+ (- 2.) (* skoMC1 (- 3.)))) (* skoSC1 (+ (* skoMC1 (* skoMC1 (- 1.))) (* skoSC1 (* skoMC1 (/ 1. 12.))))))))) (* skoMC1 (+ (- 2.) (* skoMC1 (- 5.))))) (<= (* skoSC1 (+ (* skoMC1 (+ 1. (* skoMC1 (- 3.)))) (* skoSC1 (+ (* skoMC1 (+ 2. (* skoMC1 3.))) (* skoSC1 (+ (* skoMC1 skoMC1) (* skoSC1 (* skoMC1 (/ (- 1.) 12.))))))))) (* skoMC1 (+ 2. (* skoMC1 5.)))) (> (* skoSC1 (+ (* skoMC1 (+ (- 1.) (* skoMC1 3.))) (* skoSC1 (+ (* skoMC1 (+ (- 2.) (* skoMC1 (- 3.)))) (* skoSC1 (+ (* skoMC1 (+ (/ 1. 6.) (* skoMC1 (- 1.)))) (* skoSC1 (* skoMC1 (/ 1. 4.))))))))) (* skoMC1 (+ (- 2.) (* skoMC1 (- 5.)))))) (succedent (> (* skoSC1 (+ (* skoMC1 (+ 1. (* skoMC1 (- 3.)))) (* skoSC1 (+ (* skoMC1 (+ 2. (* skoMC1 3.))) (* skoSC1 (+ (* skoMC1 (+ (/ (- 1.) 6.) skoMC1)) (* skoSC1 (* skoMC1 (/ (- 1.) 4.))))))))) (* skoMC1 (+ 2. (* skoMC1 5.))))))
-----[end problem]-----

-----[begin problem]-----
% In Mathematica format:
Timing[Resolve[Exists[{skoSC1,skoMC1}, And[skoSC1*skoMC1*skoMC1*skoMC1*-2<=skoMC1*skoMC1*skoMC1*2,skoSC1*skoMC1*skoMC1*skoMC1*2>skoMC1*skoMC1*skoMC1*-2,skoMC1*skoMC1*skoMC1*-1<=0,skoSC1*skoMC1*skoMC1*skoMC1>skoMC1*skoMC1*skoMC1*-1,skoMC1*skoMC1*skoMC1*-2<=0,skoMC1*skoMC1*skoMC1*2>0,skoSC1<=(5/4),2<=skoMC1,0<=skoSC1,skoMC1>0,0<=skoMC1,skoSC1*skoMC1>skoMC1*-1,skoSC1*skoMC1*-1<=skoMC1,skoSC1*(skoMC1*(-1+skoMC1*3)+skoSC1*(skoMC1*(-2+skoMC1*-3)+skoSC1*(skoMC1*skoMC1*-1+skoSC1*skoMC1*(1/12))))>skoMC1*(-2+skoMC1*-5),skoSC1*(skoMC1*(1+skoMC1*-3)+skoSC1*(skoMC1*(2+skoMC1*3)+skoSC1*(skoMC1*skoMC1+skoSC1*skoMC1*(-1/12))))<=skoMC1*(2+skoMC1*5),skoSC1*(skoMC1*(-1+skoMC1*3)+skoSC1*(skoMC1*(-2+skoMC1*-3)+skoSC1*(skoMC1*((1/6)+skoMC1*-1)+skoSC1*skoMC1*(1/4))))>skoMC1*(-2+skoMC1*-5),skoSC1*(skoMC1*(1+skoMC1*-3)+skoSC1*(skoMC1*(2+skoMC1*3)+skoSC1*(skoMC1*((-1/6)+skoMC1)+skoSC1*skoMC1*(-1/4))))<=skoMC1*(2+skoMC1*5)]], Reals]]

% In QepcadB format:
(E skoSC1) (E skoMC1) [[(skoSC1 skoMC1 skoMC1 skoMC1 (-2))<=(skoMC1 skoMC1 skoMC1 (2))]/\[[(skoMC1 skoMC1 skoMC1 (-2))<(skoSC1 skoMC1 skoMC1 skoMC1 (2))]/\[[(skoMC1 skoMC1 skoMC1 (-1))<=0]/\[[(skoMC1 skoMC1 skoMC1 (-1))<(skoSC1 skoMC1 skoMC1 skoMC1)]/\[[(skoMC1 skoMC1 skoMC1 (-2))<=0]/\[[0<(skoMC1 skoMC1 skoMC1 (2))]/\[[skoSC1<=5/4]/\[[2<=skoMC1]/\[[0<=skoSC1]/\[[0<skoMC1]/\[[0<=skoMC1]/\[[(skoMC1 (-1))<(skoSC1 skoMC1)]/\[[(skoSC1 skoMC1 (-1))<=skoMC1]/\[[(skoMC1 (-2+(skoMC1 (-5))))<(skoSC1 ((skoMC1 (-1+(skoMC1 (3))))+(skoSC1 ((skoMC1 (-2+(skoMC1 (-3))))+(skoSC1 ((skoMC1 skoMC1 (-1))+(skoSC1 skoMC1 (1/12))))))))]/\[[(skoSC1 ((skoMC1 (1+(skoMC1 (-3))))+(skoSC1 ((skoMC1 (2+(skoMC1 (3))))+(skoSC1 ((skoMC1 skoMC1)+(skoSC1 skoMC1 (-1/12))))))))<=(skoMC1 (2+(skoMC1 (5))))]/\[[(skoMC1 (-2+(skoMC1 (-5))))<(skoSC1 ((skoMC1 (-1+(skoMC1 (3))))+(skoSC1 ((skoMC1 (-2+(skoMC1 (-3))))+(skoSC1 ((skoMC1 (1/6+(skoMC1 (-1))))+(skoSC1 skoMC1 (1/4))))))))]/\[(skoSC1 ((skoMC1 (1+(skoMC1 (-3))))+(skoSC1 ((skoMC1 (2+(skoMC1 (3))))+(skoSC1 ((skoMC1 (-1/6+skoMC1))+(skoSC1 skoMC1 (-1/4))))))))<=(skoMC1 (2+(skoMC1 (5))))]]]]]]]]]]]]]]]]].

% In SMTLib2 format:
(declare-fun skoSC1 () Real) (declare-fun skoMC1 () Real) (assert (and (<= (* skoSC1 (* skoMC1 (* skoMC1 (* skoMC1 (- 2.))))) (* skoMC1 (* skoMC1 (* skoMC1 2.)))) (and (> (* skoSC1 (* skoMC1 (* skoMC1 (* skoMC1 2.)))) (* skoMC1 (* skoMC1 (* skoMC1 (- 2.))))) (and (<= (* skoMC1 (* skoMC1 (* skoMC1 (- 1.)))) 0.) (and (> (* skoSC1 (* skoMC1 (* skoMC1 skoMC1))) (* skoMC1 (* skoMC1 (* skoMC1 (- 1.))))) (and (<= (* skoMC1 (* skoMC1 (* skoMC1 (- 2.)))) 0.) (and (> (* skoMC1 (* skoMC1 (* skoMC1 2.))) 0.) (and (<= skoSC1 (/ 5. 4.)) (and (<= 2. skoMC1) (and (<= 0. skoSC1) (and (> skoMC1 0.) (and (<= 0. skoMC1) (and (> (* skoSC1 skoMC1) (* skoMC1 (- 1.))) (and (<= (* skoSC1 (* skoMC1 (- 1.))) skoMC1) (and (> (* skoSC1 (+ (* skoMC1 (+ (- 1.) (* skoMC1 3.))) (* skoSC1 (+ (* skoMC1 (+ (- 2.) (* skoMC1 (- 3.)))) (* skoSC1 (+ (* skoMC1 (* skoMC1 (- 1.))) (* skoSC1 (* skoMC1 (/ 1. 12.))))))))) (* skoMC1 (+ (- 2.) (* skoMC1 (- 5.))))) (and (<= (* skoSC1 (+ (* skoMC1 (+ 1. (* skoMC1 (- 3.)))) (* skoSC1 (+ (* skoMC1 (+ 2. (* skoMC1 3.))) (* skoSC1 (+ (* skoMC1 skoMC1) (* skoSC1 (* skoMC1 (/ (- 1.) 12.))))))))) (* skoMC1 (+ 2. (* skoMC1 5.)))) (and (> (* skoSC1 (+ (* skoMC1 (+ (- 1.) (* skoMC1 3.))) (* skoSC1 (+ (* skoMC1 (+ (- 2.) (* skoMC1 (- 3.)))) (* skoSC1 (+ (* skoMC1 (+ (/ 1. 6.) (* skoMC1 (- 1.)))) (* skoSC1 (* skoMC1 (/ 1. 4.))))))))) (* skoMC1 (+ (- 2.) (* skoMC1 (- 5.))))) (<= (* skoSC1 (+ (* skoMC1 (+ 1. (* skoMC1 (- 3.)))) (* skoSC1 (+ (* skoMC1 (+ 2. (* skoMC1 3.))) (* skoSC1 (+ (* skoMC1 (+ (/ (- 1.) 6.) skoMC1)) (* skoSC1 (* skoMC1 (/ (- 1.) 4.))))))))) (* skoMC1 (+ 2. (* skoMC1 5.)))))))))))))))))))))

% In GRF format:
(sequent " MetiTarski formula " (antecedent (<= (* skoSC1 (* skoMC1 (* skoMC1 (* skoMC1 (- 2.))))) (* skoMC1 (* skoMC1 (* skoMC1 2.)))) (> (* skoSC1 (* skoMC1 (* skoMC1 (* skoMC1 2.)))) (* skoMC1 (* skoMC1 (* skoMC1 (- 2.))))) (<= (* skoMC1 (* skoMC1 (* skoMC1 (- 1.)))) 0.) (> (* skoSC1 (* skoMC1 (* skoMC1 skoMC1))) (* skoMC1 (* skoMC1 (* skoMC1 (- 1.))))) (<= (* skoMC1 (* skoMC1 (* skoMC1 (- 2.)))) 0.) (> (* skoMC1 (* skoMC1 (* skoMC1 2.))) 0.) (<= skoSC1 (/ 5. 4.)) (<= 2. skoMC1) (<= 0. skoSC1) (> skoMC1 0.) (<= 0. skoMC1) (> (* skoSC1 skoMC1) (* skoMC1 (- 1.))) (<= (* skoSC1 (* skoMC1 (- 1.))) skoMC1) (> (* skoSC1 (+ (* skoMC1 (+ (- 1.) (* skoMC1 3.))) (* skoSC1 (+ (* skoMC1 (+ (- 2.) (* skoMC1 (- 3.)))) (* skoSC1 (+ (* skoMC1 (* skoMC1 (- 1.))) (* skoSC1 (* skoMC1 (/ 1. 12.))))))))) (* skoMC1 (+ (- 2.) (* skoMC1 (- 5.))))) (<= (* skoSC1 (+ (* skoMC1 (+ 1. (* skoMC1 (- 3.)))) (* skoSC1 (+ (* skoMC1 (+ 2. (* skoMC1 3.))) (* skoSC1 (+ (* skoMC1 skoMC1) (* skoSC1 (* skoMC1 (/ (- 1.) 12.))))))))) (* skoMC1 (+ 2. (* skoMC1 5.)))) (> (* skoSC1 (+ (* skoMC1 (+ (- 1.) (* skoMC1 3.))) (* skoSC1 (+ (* skoMC1 (+ (- 2.) (* skoMC1 (- 3.)))) (* skoSC1 (+ (* skoMC1 (+ (/ 1. 6.) (* skoMC1 (- 1.)))) (* skoSC1 (* skoMC1 (/ 1. 4.))))))))) (* skoMC1 (+ (- 2.) (* skoMC1 (- 5.)))))) (succedent (> (* skoSC1 (+ (* skoMC1 (+ 1. (* skoMC1 (- 3.)))) (* skoSC1 (+ (* skoMC1 (+ 2. (* skoMC1 3.))) (* skoSC1 (+ (* skoMC1 (+ (/ (- 1.) 6.) skoMC1)) (* skoSC1 (* skoMC1 (/ (- 1.) 4.))))))))) (* skoMC1 (+ 2. (* skoMC1 5.))))))
-----[end problem]-----

-----[begin problem]-----
% In Mathematica format:
Timing[Resolve[Exists[{skoSC1,skoMC1}, And[skoSC1*(skoMC1*skoMC1*skoMC1*(-2+skoMC1*-12)+skoSC1*(skoMC1*skoMC1*skoMC1*(1+skoMC1*-6)+skoSC1*(skoMC1*skoMC1*skoMC1+skoSC1*(skoMC1*skoMC1*skoMC1*(-1/12)+skoSC1*skoMC1*skoMC1*skoMC1*(-1/12)))))<=skoMC1*skoMC1*skoMC1*(2+skoMC1*6),skoSC1*skoMC1*skoMC1*skoMC1*2>skoMC1*skoMC1*skoMC1*-2,skoSC1*skoMC1*skoMC1*skoMC1*2>skoMC1*skoMC1*skoMC1*-2,skoMC1*skoMC1*skoMC1*-1<=0,skoSC1*skoMC1*skoMC1*skoMC1>skoMC1*skoMC1*skoMC1*-1,skoMC1*skoMC1*skoMC1*-2<=0,skoMC1*skoMC1*skoMC1*2>0,skoSC1<=(5/4),2<=skoMC1,0<=skoSC1,skoMC1>0,0<=skoMC1,skoSC1*skoMC1>skoMC1*-1,skoSC1*skoMC1*-1<=skoMC1,skoSC1*(skoMC1*(-1+skoMC1*3)+skoSC1*(skoMC1*(-2+skoMC1*-3)+skoSC1*(skoMC1*skoMC1*-1+skoSC1*skoMC1*(1/12))))>skoMC1*(-2+skoMC1*-5),skoSC1*(skoMC1*(1+skoMC1*-3)+skoSC1*(skoMC1*(2+skoMC1*3)+skoSC1*(skoMC1*skoMC1+skoSC1*skoMC1*(-1/12))))<=skoMC1*(2+skoMC1*5),skoSC1*(skoMC1*(-1+skoMC1*3)+skoSC1*(skoMC1*(-2+skoMC1*-3)+skoSC1*(skoMC1*((1/6)+skoMC1*-1)+skoSC1*skoMC1*(1/4))))>skoMC1*(-2+skoMC1*-5),skoSC1*(skoMC1*(1+skoMC1*-3)+skoSC1*(skoMC1*(2+skoMC1*3)+skoSC1*(skoMC1*((-1/6)+skoMC1)+skoSC1*skoMC1*(-1/4))))<=skoMC1*(2+skoMC1*5)]], Reals]]

% In QepcadB format:
(E skoSC1) (E skoMC1) [[(skoSC1 ((skoMC1 skoMC1 skoMC1 (-2+(skoMC1 (-12))))+(skoSC1 ((skoMC1 skoMC1 skoMC1 (1+(skoMC1 (-6))))+(skoSC1 ((skoMC1 skoMC1 skoMC1)+(skoSC1 ((skoMC1 skoMC1 skoMC1 (-1/12))+(skoSC1 skoMC1 skoMC1 skoMC1 (-1/12))))))))))<=(skoMC1 skoMC1 skoMC1 (2+(skoMC1 (6))))]/\[[(skoMC1 skoMC1 skoMC1 (-2))<(skoSC1 skoMC1 skoMC1 skoMC1 (2))]/\[[(skoMC1 skoMC1 skoMC1 (-2))<(skoSC1 skoMC1 skoMC1 skoMC1 (2))]/\[[(skoMC1 skoMC1 skoMC1 (-1))<=0]/\[[(skoMC1 skoMC1 skoMC1 (-1))<(skoSC1 skoMC1 skoMC1 skoMC1)]/\[[(skoMC1 skoMC1 skoMC1 (-2))<=0]/\[[0<(skoMC1 skoMC1 skoMC1 (2))]/\[[skoSC1<=5/4]/\[[2<=skoMC1]/\[[0<=skoSC1]/\[[0<skoMC1]/\[[0<=skoMC1]/\[[(skoMC1 (-1))<(skoSC1 skoMC1)]/\[[(skoSC1 skoMC1 (-1))<=skoMC1]/\[[(skoMC1 (-2+(skoMC1 (-5))))<(skoSC1 ((skoMC1 (-1+(skoMC1 (3))))+(skoSC1 ((skoMC1 (-2+(skoMC1 (-3))))+(skoSC1 ((skoMC1 skoMC1 (-1))+(skoSC1 skoMC1 (1/12))))))))]/\[[(skoSC1 ((skoMC1 (1+(skoMC1 (-3))))+(skoSC1 ((skoMC1 (2+(skoMC1 (3))))+(skoSC1 ((skoMC1 skoMC1)+(skoSC1 skoMC1 (-1/12))))))))<=(skoMC1 (2+(skoMC1 (5))))]/\[[(skoMC1 (-2+(skoMC1 (-5))))<(skoSC1 ((skoMC1 (-1+(skoMC1 (3))))+(skoSC1 ((skoMC1 (-2+(skoMC1 (-3))))+(skoSC1 ((skoMC1 (1/6+(skoMC1 (-1))))+(skoSC1 skoMC1 (1/4))))))))]/\[(skoSC1 ((skoMC1 (1+(skoMC1 (-3))))+(skoSC1 ((skoMC1 (2+(skoMC1 (3))))+(skoSC1 ((skoMC1 (-1/6+skoMC1))+(skoSC1 skoMC1 (-1/4))))))))<=(skoMC1 (2+(skoMC1 (5))))]]]]]]]]]]]]]]]]]].

% In SMTLib2 format:
(declare-fun skoSC1 () Real) (declare-fun skoMC1 () Real) (assert (and (<= (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (+ (- 2.) (* skoMC1 (- 12.)))))) (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (+ 1. (* skoMC1 (- 6.)))))) (* skoSC1 (+ (* skoMC1 (* skoMC1 skoMC1)) (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (/ (- 1.) 12.)))) (* skoSC1 (* skoMC1 (* skoMC1 (* skoMC1 (/ (- 1.) 12.))))))))))))) (* skoMC1 (* skoMC1 (* skoMC1 (+ 2. (* skoMC1 6.)))))) (and (> (* skoSC1 (* skoMC1 (* skoMC1 (* skoMC1 2.)))) (* skoMC1 (* skoMC1 (* skoMC1 (- 2.))))) (and (> (* skoSC1 (* skoMC1 (* skoMC1 (* skoMC1 2.)))) (* skoMC1 (* skoMC1 (* skoMC1 (- 2.))))) (and (<= (* skoMC1 (* skoMC1 (* skoMC1 (- 1.)))) 0.) (and (> (* skoSC1 (* skoMC1 (* skoMC1 skoMC1))) (* skoMC1 (* skoMC1 (* skoMC1 (- 1.))))) (and (<= (* skoMC1 (* skoMC1 (* skoMC1 (- 2.)))) 0.) (and (> (* skoMC1 (* skoMC1 (* skoMC1 2.))) 0.) (and (<= skoSC1 (/ 5. 4.)) (and (<= 2. skoMC1) (and (<= 0. skoSC1) (and (> skoMC1 0.) (and (<= 0. skoMC1) (and (> (* skoSC1 skoMC1) (* skoMC1 (- 1.))) (and (<= (* skoSC1 (* skoMC1 (- 1.))) skoMC1) (and (> (* skoSC1 (+ (* skoMC1 (+ (- 1.) (* skoMC1 3.))) (* skoSC1 (+ (* skoMC1 (+ (- 2.) (* skoMC1 (- 3.)))) (* skoSC1 (+ (* skoMC1 (* skoMC1 (- 1.))) (* skoSC1 (* skoMC1 (/ 1. 12.))))))))) (* skoMC1 (+ (- 2.) (* skoMC1 (- 5.))))) (and (<= (* skoSC1 (+ (* skoMC1 (+ 1. (* skoMC1 (- 3.)))) (* skoSC1 (+ (* skoMC1 (+ 2. (* skoMC1 3.))) (* skoSC1 (+ (* skoMC1 skoMC1) (* skoSC1 (* skoMC1 (/ (- 1.) 12.))))))))) (* skoMC1 (+ 2. (* skoMC1 5.)))) (and (> (* skoSC1 (+ (* skoMC1 (+ (- 1.) (* skoMC1 3.))) (* skoSC1 (+ (* skoMC1 (+ (- 2.) (* skoMC1 (- 3.)))) (* skoSC1 (+ (* skoMC1 (+ (/ 1. 6.) (* skoMC1 (- 1.)))) (* skoSC1 (* skoMC1 (/ 1. 4.))))))))) (* skoMC1 (+ (- 2.) (* skoMC1 (- 5.))))) (<= (* skoSC1 (+ (* skoMC1 (+ 1. (* skoMC1 (- 3.)))) (* skoSC1 (+ (* skoMC1 (+ 2. (* skoMC1 3.))) (* skoSC1 (+ (* skoMC1 (+ (/ (- 1.) 6.) skoMC1)) (* skoSC1 (* skoMC1 (/ (- 1.) 4.))))))))) (* skoMC1 (+ 2. (* skoMC1 5.))))))))))))))))))))))

% In GRF format:
(sequent " MetiTarski formula " (antecedent (<= (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (+ (- 2.) (* skoMC1 (- 12.)))))) (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (+ 1. (* skoMC1 (- 6.)))))) (* skoSC1 (+ (* skoMC1 (* skoMC1 skoMC1)) (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (/ (- 1.) 12.)))) (* skoSC1 (* skoMC1 (* skoMC1 (* skoMC1 (/ (- 1.) 12.))))))))))))) (* skoMC1 (* skoMC1 (* skoMC1 (+ 2. (* skoMC1 6.)))))) (> (* skoSC1 (* skoMC1 (* skoMC1 (* skoMC1 2.)))) (* skoMC1 (* skoMC1 (* skoMC1 (- 2.))))) (> (* skoSC1 (* skoMC1 (* skoMC1 (* skoMC1 2.)))) (* skoMC1 (* skoMC1 (* skoMC1 (- 2.))))) (<= (* skoMC1 (* skoMC1 (* skoMC1 (- 1.)))) 0.) (> (* skoSC1 (* skoMC1 (* skoMC1 skoMC1))) (* skoMC1 (* skoMC1 (* skoMC1 (- 1.))))) (<= (* skoMC1 (* skoMC1 (* skoMC1 (- 2.)))) 0.) (> (* skoMC1 (* skoMC1 (* skoMC1 2.))) 0.) (<= skoSC1 (/ 5. 4.)) (<= 2. skoMC1) (<= 0. skoSC1) (> skoMC1 0.) (<= 0. skoMC1) (> (* skoSC1 skoMC1) (* skoMC1 (- 1.))) (<= (* skoSC1 (* skoMC1 (- 1.))) skoMC1) (> (* skoSC1 (+ (* skoMC1 (+ (- 1.) (* skoMC1 3.))) (* skoSC1 (+ (* skoMC1 (+ (- 2.) (* skoMC1 (- 3.)))) (* skoSC1 (+ (* skoMC1 (* skoMC1 (- 1.))) (* skoSC1 (* skoMC1 (/ 1. 12.))))))))) (* skoMC1 (+ (- 2.) (* skoMC1 (- 5.))))) (<= (* skoSC1 (+ (* skoMC1 (+ 1. (* skoMC1 (- 3.)))) (* skoSC1 (+ (* skoMC1 (+ 2. (* skoMC1 3.))) (* skoSC1 (+ (* skoMC1 skoMC1) (* skoSC1 (* skoMC1 (/ (- 1.) 12.))))))))) (* skoMC1 (+ 2. (* skoMC1 5.)))) (> (* skoSC1 (+ (* skoMC1 (+ (- 1.) (* skoMC1 3.))) (* skoSC1 (+ (* skoMC1 (+ (- 2.) (* skoMC1 (- 3.)))) (* skoSC1 (+ (* skoMC1 (+ (/ 1. 6.) (* skoMC1 (- 1.)))) (* skoSC1 (* skoMC1 (/ 1. 4.))))))))) (* skoMC1 (+ (- 2.) (* skoMC1 (- 5.)))))) (succedent (> (* skoSC1 (+ (* skoMC1 (+ 1. (* skoMC1 (- 3.)))) (* skoSC1 (+ (* skoMC1 (+ 2. (* skoMC1 3.))) (* skoSC1 (+ (* skoMC1 (+ (/ (- 1.) 6.) skoMC1)) (* skoSC1 (* skoMC1 (/ (- 1.) 4.))))))))) (* skoMC1 (+ 2. (* skoMC1 5.))))))
-----[end problem]-----

-----[begin problem]-----
% In Mathematica format:
Timing[Resolve[Exists[{skoSC1,skoMC1}, And[skoSC1*skoMC1*skoMC1*skoMC1*-2<=skoMC1*skoMC1*skoMC1*2,skoSC1*skoMC1*skoMC1*skoMC1*2>skoMC1*skoMC1*skoMC1*-2,skoMC1*skoMC1*skoMC1*-1<=0,skoSC1*skoMC1*skoMC1*skoMC1>skoMC1*skoMC1*skoMC1*-1,skoMC1*skoMC1*skoMC1*-2<=0,skoMC1*skoMC1*skoMC1*2>0,skoSC1<=(5/4),2<=skoMC1,0<=skoSC1,skoMC1>0,0<=skoMC1,skoSC1*skoMC1>skoMC1*-1,skoSC1*skoMC1*-1<=skoMC1,skoSC1*(skoMC1*(-1+skoMC1*3)+skoSC1*(skoMC1*(-2+skoMC1*-3)+skoSC1*(skoMC1*skoMC1*-1+skoSC1*skoMC1*(1/12))))>skoMC1*(-2+skoMC1*-5),skoSC1*(skoMC1*(1+skoMC1*-3)+skoSC1*(skoMC1*(2+skoMC1*3)+skoSC1*(skoMC1*skoMC1+skoSC1*skoMC1*(-1/12))))<=skoMC1*(2+skoMC1*5),skoSC1*(skoMC1*(-1+skoMC1*3)+skoSC1*(skoMC1*(-2+skoMC1*-3)+skoSC1*(skoMC1*((1/6)+skoMC1*-1)+skoSC1*skoMC1*(1/4))))>skoMC1*(-2+skoMC1*-5),skoSC1*(skoMC1*(1+skoMC1*-3)+skoSC1*(skoMC1*(2+skoMC1*3)+skoSC1*(skoMC1*((-1/6)+skoMC1)+skoSC1*skoMC1*(-1/4))))<=skoMC1*(2+skoMC1*5)]], Reals]]

% In QepcadB format:
(E skoSC1) (E skoMC1) [[(skoSC1 skoMC1 skoMC1 skoMC1 (-2))<=(skoMC1 skoMC1 skoMC1 (2))]/\[[(skoMC1 skoMC1 skoMC1 (-2))<(skoSC1 skoMC1 skoMC1 skoMC1 (2))]/\[[(skoMC1 skoMC1 skoMC1 (-1))<=0]/\[[(skoMC1 skoMC1 skoMC1 (-1))<(skoSC1 skoMC1 skoMC1 skoMC1)]/\[[(skoMC1 skoMC1 skoMC1 (-2))<=0]/\[[0<(skoMC1 skoMC1 skoMC1 (2))]/\[[skoSC1<=5/4]/\[[2<=skoMC1]/\[[0<=skoSC1]/\[[0<skoMC1]/\[[0<=skoMC1]/\[[(skoMC1 (-1))<(skoSC1 skoMC1)]/\[[(skoSC1 skoMC1 (-1))<=skoMC1]/\[[(skoMC1 (-2+(skoMC1 (-5))))<(skoSC1 ((skoMC1 (-1+(skoMC1 (3))))+(skoSC1 ((skoMC1 (-2+(skoMC1 (-3))))+(skoSC1 ((skoMC1 skoMC1 (-1))+(skoSC1 skoMC1 (1/12))))))))]/\[[(skoSC1 ((skoMC1 (1+(skoMC1 (-3))))+(skoSC1 ((skoMC1 (2+(skoMC1 (3))))+(skoSC1 ((skoMC1 skoMC1)+(skoSC1 skoMC1 (-1/12))))))))<=(skoMC1 (2+(skoMC1 (5))))]/\[[(skoMC1 (-2+(skoMC1 (-5))))<(skoSC1 ((skoMC1 (-1+(skoMC1 (3))))+(skoSC1 ((skoMC1 (-2+(skoMC1 (-3))))+(skoSC1 ((skoMC1 (1/6+(skoMC1 (-1))))+(skoSC1 skoMC1 (1/4))))))))]/\[(skoSC1 ((skoMC1 (1+(skoMC1 (-3))))+(skoSC1 ((skoMC1 (2+(skoMC1 (3))))+(skoSC1 ((skoMC1 (-1/6+skoMC1))+(skoSC1 skoMC1 (-1/4))))))))<=(skoMC1 (2+(skoMC1 (5))))]]]]]]]]]]]]]]]]].

% In SMTLib2 format:
(declare-fun skoSC1 () Real) (declare-fun skoMC1 () Real) (assert (and (<= (* skoSC1 (* skoMC1 (* skoMC1 (* skoMC1 (- 2.))))) (* skoMC1 (* skoMC1 (* skoMC1 2.)))) (and (> (* skoSC1 (* skoMC1 (* skoMC1 (* skoMC1 2.)))) (* skoMC1 (* skoMC1 (* skoMC1 (- 2.))))) (and (<= (* skoMC1 (* skoMC1 (* skoMC1 (- 1.)))) 0.) (and (> (* skoSC1 (* skoMC1 (* skoMC1 skoMC1))) (* skoMC1 (* skoMC1 (* skoMC1 (- 1.))))) (and (<= (* skoMC1 (* skoMC1 (* skoMC1 (- 2.)))) 0.) (and (> (* skoMC1 (* skoMC1 (* skoMC1 2.))) 0.) (and (<= skoSC1 (/ 5. 4.)) (and (<= 2. skoMC1) (and (<= 0. skoSC1) (and (> skoMC1 0.) (and (<= 0. skoMC1) (and (> (* skoSC1 skoMC1) (* skoMC1 (- 1.))) (and (<= (* skoSC1 (* skoMC1 (- 1.))) skoMC1) (and (> (* skoSC1 (+ (* skoMC1 (+ (- 1.) (* skoMC1 3.))) (* skoSC1 (+ (* skoMC1 (+ (- 2.) (* skoMC1 (- 3.)))) (* skoSC1 (+ (* skoMC1 (* skoMC1 (- 1.))) (* skoSC1 (* skoMC1 (/ 1. 12.))))))))) (* skoMC1 (+ (- 2.) (* skoMC1 (- 5.))))) (and (<= (* skoSC1 (+ (* skoMC1 (+ 1. (* skoMC1 (- 3.)))) (* skoSC1 (+ (* skoMC1 (+ 2. (* skoMC1 3.))) (* skoSC1 (+ (* skoMC1 skoMC1) (* skoSC1 (* skoMC1 (/ (- 1.) 12.))))))))) (* skoMC1 (+ 2. (* skoMC1 5.)))) (and (> (* skoSC1 (+ (* skoMC1 (+ (- 1.) (* skoMC1 3.))) (* skoSC1 (+ (* skoMC1 (+ (- 2.) (* skoMC1 (- 3.)))) (* skoSC1 (+ (* skoMC1 (+ (/ 1. 6.) (* skoMC1 (- 1.)))) (* skoSC1 (* skoMC1 (/ 1. 4.))))))))) (* skoMC1 (+ (- 2.) (* skoMC1 (- 5.))))) (<= (* skoSC1 (+ (* skoMC1 (+ 1. (* skoMC1 (- 3.)))) (* skoSC1 (+ (* skoMC1 (+ 2. (* skoMC1 3.))) (* skoSC1 (+ (* skoMC1 (+ (/ (- 1.) 6.) skoMC1)) (* skoSC1 (* skoMC1 (/ (- 1.) 4.))))))))) (* skoMC1 (+ 2. (* skoMC1 5.)))))))))))))))))))))

% In GRF format:
(sequent " MetiTarski formula " (antecedent (<= (* skoSC1 (* skoMC1 (* skoMC1 (* skoMC1 (- 2.))))) (* skoMC1 (* skoMC1 (* skoMC1 2.)))) (> (* skoSC1 (* skoMC1 (* skoMC1 (* skoMC1 2.)))) (* skoMC1 (* skoMC1 (* skoMC1 (- 2.))))) (<= (* skoMC1 (* skoMC1 (* skoMC1 (- 1.)))) 0.) (> (* skoSC1 (* skoMC1 (* skoMC1 skoMC1))) (* skoMC1 (* skoMC1 (* skoMC1 (- 1.))))) (<= (* skoMC1 (* skoMC1 (* skoMC1 (- 2.)))) 0.) (> (* skoMC1 (* skoMC1 (* skoMC1 2.))) 0.) (<= skoSC1 (/ 5. 4.)) (<= 2. skoMC1) (<= 0. skoSC1) (> skoMC1 0.) (<= 0. skoMC1) (> (* skoSC1 skoMC1) (* skoMC1 (- 1.))) (<= (* skoSC1 (* skoMC1 (- 1.))) skoMC1) (> (* skoSC1 (+ (* skoMC1 (+ (- 1.) (* skoMC1 3.))) (* skoSC1 (+ (* skoMC1 (+ (- 2.) (* skoMC1 (- 3.)))) (* skoSC1 (+ (* skoMC1 (* skoMC1 (- 1.))) (* skoSC1 (* skoMC1 (/ 1. 12.))))))))) (* skoMC1 (+ (- 2.) (* skoMC1 (- 5.))))) (<= (* skoSC1 (+ (* skoMC1 (+ 1. (* skoMC1 (- 3.)))) (* skoSC1 (+ (* skoMC1 (+ 2. (* skoMC1 3.))) (* skoSC1 (+ (* skoMC1 skoMC1) (* skoSC1 (* skoMC1 (/ (- 1.) 12.))))))))) (* skoMC1 (+ 2. (* skoMC1 5.)))) (> (* skoSC1 (+ (* skoMC1 (+ (- 1.) (* skoMC1 3.))) (* skoSC1 (+ (* skoMC1 (+ (- 2.) (* skoMC1 (- 3.)))) (* skoSC1 (+ (* skoMC1 (+ (/ 1. 6.) (* skoMC1 (- 1.)))) (* skoSC1 (* skoMC1 (/ 1. 4.))))))))) (* skoMC1 (+ (- 2.) (* skoMC1 (- 5.)))))) (succedent (> (* skoSC1 (+ (* skoMC1 (+ 1. (* skoMC1 (- 3.)))) (* skoSC1 (+ (* skoMC1 (+ 2. (* skoMC1 3.))) (* skoSC1 (+ (* skoMC1 (+ (/ (- 1.) 6.) skoMC1)) (* skoSC1 (* skoMC1 (/ (- 1.) 4.))))))))) (* skoMC1 (+ 2. (* skoMC1 5.))))))
-----[end problem]-----

-----[begin problem]-----
% In Mathematica format:
Timing[Resolve[Exists[{skoSC1,skoMC1}, And[skoSC1*(skoMC1*skoMC1*skoMC1*(-2+skoMC1*-12)+skoSC1*(skoMC1*skoMC1*skoMC1*(1+skoMC1*-6)+skoSC1*(skoMC1*skoMC1*skoMC1+skoSC1*(skoMC1*skoMC1*skoMC1*(-1/12)+skoSC1*skoMC1*skoMC1*skoMC1*(-1/12)))))<=skoMC1*skoMC1*skoMC1*(2+skoMC1*6),skoSC1*skoMC1*skoMC1*skoMC1*-2<=skoMC1*skoMC1*skoMC1*2,skoSC1*skoMC1*skoMC1*skoMC1*2>skoMC1*skoMC1*skoMC1*-2,skoMC1*skoMC1*skoMC1*-1<=0,skoSC1*skoMC1*skoMC1*skoMC1>skoMC1*skoMC1*skoMC1*-1,skoMC1*skoMC1*skoMC1*-2<=0,skoMC1*skoMC1*skoMC1*2>0,skoSC1<=(5/4),2<=skoMC1,0<=skoSC1,skoMC1>0,0<=skoMC1,skoSC1*skoMC1>skoMC1*-1,skoSC1*skoMC1*-1<=skoMC1,skoSC1*(skoMC1*(-1+skoMC1*3)+skoSC1*(skoMC1*(-2+skoMC1*-3)+skoSC1*(skoMC1*skoMC1*-1+skoSC1*skoMC1*(1/12))))>skoMC1*(-2+skoMC1*-5),skoSC1*(skoMC1*(1+skoMC1*-3)+skoSC1*(skoMC1*(2+skoMC1*3)+skoSC1*(skoMC1*skoMC1+skoSC1*skoMC1*(-1/12))))<=skoMC1*(2+skoMC1*5),skoSC1*(skoMC1*(-1+skoMC1*3)+skoSC1*(skoMC1*(-2+skoMC1*-3)+skoSC1*(skoMC1*((1/6)+skoMC1*-1)+skoSC1*skoMC1*(1/4))))>skoMC1*(-2+skoMC1*-5),skoSC1*(skoMC1*(1+skoMC1*-3)+skoSC1*(skoMC1*(2+skoMC1*3)+skoSC1*(skoMC1*((-1/6)+skoMC1)+skoSC1*skoMC1*(-1/4))))<=skoMC1*(2+skoMC1*5)]], Reals]]

% In QepcadB format:
(E skoSC1) (E skoMC1) [[(skoSC1 ((skoMC1 skoMC1 skoMC1 (-2+(skoMC1 (-12))))+(skoSC1 ((skoMC1 skoMC1 skoMC1 (1+(skoMC1 (-6))))+(skoSC1 ((skoMC1 skoMC1 skoMC1)+(skoSC1 ((skoMC1 skoMC1 skoMC1 (-1/12))+(skoSC1 skoMC1 skoMC1 skoMC1 (-1/12))))))))))<=(skoMC1 skoMC1 skoMC1 (2+(skoMC1 (6))))]/\[[(skoSC1 skoMC1 skoMC1 skoMC1 (-2))<=(skoMC1 skoMC1 skoMC1 (2))]/\[[(skoMC1 skoMC1 skoMC1 (-2))<(skoSC1 skoMC1 skoMC1 skoMC1 (2))]/\[[(skoMC1 skoMC1 skoMC1 (-1))<=0]/\[[(skoMC1 skoMC1 skoMC1 (-1))<(skoSC1 skoMC1 skoMC1 skoMC1)]/\[[(skoMC1 skoMC1 skoMC1 (-2))<=0]/\[[0<(skoMC1 skoMC1 skoMC1 (2))]/\[[skoSC1<=5/4]/\[[2<=skoMC1]/\[[0<=skoSC1]/\[[0<skoMC1]/\[[0<=skoMC1]/\[[(skoMC1 (-1))<(skoSC1 skoMC1)]/\[[(skoSC1 skoMC1 (-1))<=skoMC1]/\[[(skoMC1 (-2+(skoMC1 (-5))))<(skoSC1 ((skoMC1 (-1+(skoMC1 (3))))+(skoSC1 ((skoMC1 (-2+(skoMC1 (-3))))+(skoSC1 ((skoMC1 skoMC1 (-1))+(skoSC1 skoMC1 (1/12))))))))]/\[[(skoSC1 ((skoMC1 (1+(skoMC1 (-3))))+(skoSC1 ((skoMC1 (2+(skoMC1 (3))))+(skoSC1 ((skoMC1 skoMC1)+(skoSC1 skoMC1 (-1/12))))))))<=(skoMC1 (2+(skoMC1 (5))))]/\[[(skoMC1 (-2+(skoMC1 (-5))))<(skoSC1 ((skoMC1 (-1+(skoMC1 (3))))+(skoSC1 ((skoMC1 (-2+(skoMC1 (-3))))+(skoSC1 ((skoMC1 (1/6+(skoMC1 (-1))))+(skoSC1 skoMC1 (1/4))))))))]/\[(skoSC1 ((skoMC1 (1+(skoMC1 (-3))))+(skoSC1 ((skoMC1 (2+(skoMC1 (3))))+(skoSC1 ((skoMC1 (-1/6+skoMC1))+(skoSC1 skoMC1 (-1/4))))))))<=(skoMC1 (2+(skoMC1 (5))))]]]]]]]]]]]]]]]]]].

% In SMTLib2 format:
(declare-fun skoSC1 () Real) (declare-fun skoMC1 () Real) (assert (and (<= (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (+ (- 2.) (* skoMC1 (- 12.)))))) (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (+ 1. (* skoMC1 (- 6.)))))) (* skoSC1 (+ (* skoMC1 (* skoMC1 skoMC1)) (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (/ (- 1.) 12.)))) (* skoSC1 (* skoMC1 (* skoMC1 (* skoMC1 (/ (- 1.) 12.))))))))))))) (* skoMC1 (* skoMC1 (* skoMC1 (+ 2. (* skoMC1 6.)))))) (and (<= (* skoSC1 (* skoMC1 (* skoMC1 (* skoMC1 (- 2.))))) (* skoMC1 (* skoMC1 (* skoMC1 2.)))) (and (> (* skoSC1 (* skoMC1 (* skoMC1 (* skoMC1 2.)))) (* skoMC1 (* skoMC1 (* skoMC1 (- 2.))))) (and (<= (* skoMC1 (* skoMC1 (* skoMC1 (- 1.)))) 0.) (and (> (* skoSC1 (* skoMC1 (* skoMC1 skoMC1))) (* skoMC1 (* skoMC1 (* skoMC1 (- 1.))))) (and (<= (* skoMC1 (* skoMC1 (* skoMC1 (- 2.)))) 0.) (and (> (* skoMC1 (* skoMC1 (* skoMC1 2.))) 0.) (and (<= skoSC1 (/ 5. 4.)) (and (<= 2. skoMC1) (and (<= 0. skoSC1) (and (> skoMC1 0.) (and (<= 0. skoMC1) (and (> (* skoSC1 skoMC1) (* skoMC1 (- 1.))) (and (<= (* skoSC1 (* skoMC1 (- 1.))) skoMC1) (and (> (* skoSC1 (+ (* skoMC1 (+ (- 1.) (* skoMC1 3.))) (* skoSC1 (+ (* skoMC1 (+ (- 2.) (* skoMC1 (- 3.)))) (* skoSC1 (+ (* skoMC1 (* skoMC1 (- 1.))) (* skoSC1 (* skoMC1 (/ 1. 12.))))))))) (* skoMC1 (+ (- 2.) (* skoMC1 (- 5.))))) (and (<= (* skoSC1 (+ (* skoMC1 (+ 1. (* skoMC1 (- 3.)))) (* skoSC1 (+ (* skoMC1 (+ 2. (* skoMC1 3.))) (* skoSC1 (+ (* skoMC1 skoMC1) (* skoSC1 (* skoMC1 (/ (- 1.) 12.))))))))) (* skoMC1 (+ 2. (* skoMC1 5.)))) (and (> (* skoSC1 (+ (* skoMC1 (+ (- 1.) (* skoMC1 3.))) (* skoSC1 (+ (* skoMC1 (+ (- 2.) (* skoMC1 (- 3.)))) (* skoSC1 (+ (* skoMC1 (+ (/ 1. 6.) (* skoMC1 (- 1.)))) (* skoSC1 (* skoMC1 (/ 1. 4.))))))))) (* skoMC1 (+ (- 2.) (* skoMC1 (- 5.))))) (<= (* skoSC1 (+ (* skoMC1 (+ 1. (* skoMC1 (- 3.)))) (* skoSC1 (+ (* skoMC1 (+ 2. (* skoMC1 3.))) (* skoSC1 (+ (* skoMC1 (+ (/ (- 1.) 6.) skoMC1)) (* skoSC1 (* skoMC1 (/ (- 1.) 4.))))))))) (* skoMC1 (+ 2. (* skoMC1 5.))))))))))))))))))))))

% In GRF format:
(sequent " MetiTarski formula " (antecedent (<= (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (+ (- 2.) (* skoMC1 (- 12.)))))) (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (+ 1. (* skoMC1 (- 6.)))))) (* skoSC1 (+ (* skoMC1 (* skoMC1 skoMC1)) (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (/ (- 1.) 12.)))) (* skoSC1 (* skoMC1 (* skoMC1 (* skoMC1 (/ (- 1.) 12.))))))))))))) (* skoMC1 (* skoMC1 (* skoMC1 (+ 2. (* skoMC1 6.)))))) (<= (* skoSC1 (* skoMC1 (* skoMC1 (* skoMC1 (- 2.))))) (* skoMC1 (* skoMC1 (* skoMC1 2.)))) (> (* skoSC1 (* skoMC1 (* skoMC1 (* skoMC1 2.)))) (* skoMC1 (* skoMC1 (* skoMC1 (- 2.))))) (<= (* skoMC1 (* skoMC1 (* skoMC1 (- 1.)))) 0.) (> (* skoSC1 (* skoMC1 (* skoMC1 skoMC1))) (* skoMC1 (* skoMC1 (* skoMC1 (- 1.))))) (<= (* skoMC1 (* skoMC1 (* skoMC1 (- 2.)))) 0.) (> (* skoMC1 (* skoMC1 (* skoMC1 2.))) 0.) (<= skoSC1 (/ 5. 4.)) (<= 2. skoMC1) (<= 0. skoSC1) (> skoMC1 0.) (<= 0. skoMC1) (> (* skoSC1 skoMC1) (* skoMC1 (- 1.))) (<= (* skoSC1 (* skoMC1 (- 1.))) skoMC1) (> (* skoSC1 (+ (* skoMC1 (+ (- 1.) (* skoMC1 3.))) (* skoSC1 (+ (* skoMC1 (+ (- 2.) (* skoMC1 (- 3.)))) (* skoSC1 (+ (* skoMC1 (* skoMC1 (- 1.))) (* skoSC1 (* skoMC1 (/ 1. 12.))))))))) (* skoMC1 (+ (- 2.) (* skoMC1 (- 5.))))) (<= (* skoSC1 (+ (* skoMC1 (+ 1. (* skoMC1 (- 3.)))) (* skoSC1 (+ (* skoMC1 (+ 2. (* skoMC1 3.))) (* skoSC1 (+ (* skoMC1 skoMC1) (* skoSC1 (* skoMC1 (/ (- 1.) 12.))))))))) (* skoMC1 (+ 2. (* skoMC1 5.)))) (> (* skoSC1 (+ (* skoMC1 (+ (- 1.) (* skoMC1 3.))) (* skoSC1 (+ (* skoMC1 (+ (- 2.) (* skoMC1 (- 3.)))) (* skoSC1 (+ (* skoMC1 (+ (/ 1. 6.) (* skoMC1 (- 1.)))) (* skoSC1 (* skoMC1 (/ 1. 4.))))))))) (* skoMC1 (+ (- 2.) (* skoMC1 (- 5.)))))) (succedent (> (* skoSC1 (+ (* skoMC1 (+ 1. (* skoMC1 (- 3.)))) (* skoSC1 (+ (* skoMC1 (+ 2. (* skoMC1 3.))) (* skoSC1 (+ (* skoMC1 (+ (/ (- 1.) 6.) skoMC1)) (* skoSC1 (* skoMC1 (/ (- 1.) 4.))))))))) (* skoMC1 (+ 2. (* skoMC1 5.))))))
-----[end problem]-----

-----[begin problem]-----
% In Mathematica format:
Timing[Resolve[Exists[{skoSC1,skoMC1}, And[skoSC1*(skoMC1*skoMC1*skoMC1*(-2+skoMC1*-12)+skoSC1*(skoMC1*skoMC1*skoMC1*(1+skoMC1*-6)+skoSC1*(skoMC1*skoMC1*skoMC1+skoSC1*(skoMC1*skoMC1*skoMC1*(-1/12)+skoSC1*(skoMC1*skoMC1*skoMC1*(-1/12)+skoSC1*(skoMC1*skoMC1*skoMC1*(1/360)+skoSC1*(skoMC1*skoMC1*skoMC1*(1/360)+skoSC1*(skoMC1*skoMC1*skoMC1*(-1/20160)+skoSC1*(skoMC1*skoMC1*skoMC1*(-1/20160)+skoSC1*(skoMC1*skoMC1*skoMC1*(1/1814400)+skoSC1*(skoMC1*skoMC1*skoMC1*(1/1814400)+skoSC1*(skoMC1*skoMC1*skoMC1*(-1/239500800)+skoSC1*skoMC1*skoMC1*skoMC1*(-1/239500800)))))))))))))<=skoMC1*skoMC1*skoMC1*(2+skoMC1*6),skoSC1*skoMC1*skoMC1*skoMC1*2>skoMC1*skoMC1*skoMC1*-2,skoSC1*(skoMC1*skoMC1*skoMC1*(-2+skoMC1*-12)+skoSC1*(skoMC1*skoMC1*skoMC1*(1+skoMC1*-6)+skoSC1*(skoMC1*skoMC1*skoMC1+skoSC1*(skoMC1*skoMC1*skoMC1*(-1/12)+skoSC1*skoMC1*skoMC1*skoMC1*(-1/12)))))<=skoMC1*skoMC1*skoMC1*(2+skoMC1*6),skoSC1*skoMC1*skoMC1*skoMC1*-2<=skoMC1*skoMC1*skoMC1*2,skoSC1*skoMC1*skoMC1*skoMC1*2>skoMC1*skoMC1*skoMC1*-2,skoMC1*skoMC1*skoMC1*-1<=0,skoSC1*skoMC1*skoMC1*skoMC1>skoMC1*skoMC1*skoMC1*-1,skoMC1*skoMC1*skoMC1*-2<=0,skoMC1*skoMC1*skoMC1*2>0,skoSC1<=(5/4),2<=skoMC1,0<=skoSC1,skoMC1>0,0<=skoMC1,skoSC1*skoMC1>skoMC1*-1,skoSC1*skoMC1*-1<=skoMC1,skoSC1*(skoMC1*(-1+skoMC1*3)+skoSC1*(skoMC1*(-2+skoMC1*-3)+skoSC1*(skoMC1*skoMC1*-1+skoSC1*skoMC1*(1/12))))>skoMC1*(-2+skoMC1*-5),skoSC1*(skoMC1*(1+skoMC1*-3)+skoSC1*(skoMC1*(2+skoMC1*3)+skoSC1*(skoMC1*skoMC1+skoSC1*skoMC1*(-1/12))))<=skoMC1*(2+skoMC1*5),skoSC1*(skoMC1*(-1+skoMC1*3)+skoSC1*(skoMC1*(-2+skoMC1*-3)+skoSC1*(skoMC1*((1/6)+skoMC1*-1)+skoSC1*skoMC1*(1/4))))>skoMC1*(-2+skoMC1*-5),skoSC1*(skoMC1*(1+skoMC1*-3)+skoSC1*(skoMC1*(2+skoMC1*3)+skoSC1*(skoMC1*((-1/6)+skoMC1)+skoSC1*skoMC1*(-1/4))))<=skoMC1*(2+skoMC1*5)]], Reals]]

% In QepcadB format:
(E skoSC1) (E skoMC1) [[(skoSC1 ((skoMC1 skoMC1 skoMC1 (-2+(skoMC1 (-12))))+(skoSC1 ((skoMC1 skoMC1 skoMC1 (1+(skoMC1 (-6))))+(skoSC1 ((skoMC1 skoMC1 skoMC1)+(skoSC1 ((skoMC1 skoMC1 skoMC1 (-1/12))+(skoSC1 ((skoMC1 skoMC1 skoMC1 (-1/12))+(skoSC1 ((skoMC1 skoMC1 skoMC1 (1/360))+(skoSC1 ((skoMC1 skoMC1 skoMC1 (1/360))+(skoSC1 ((skoMC1 skoMC1 skoMC1 (-1/20160))+(skoSC1 ((skoMC1 skoMC1 skoMC1 (-1/20160))+(skoSC1 ((skoMC1 skoMC1 skoMC1 (1/1814400))+(skoSC1 ((skoMC1 skoMC1 skoMC1 (1/1814400))+(skoSC1 ((skoMC1 skoMC1 skoMC1 (-1/239500800))+(skoSC1 skoMC1 skoMC1 skoMC1 (-1/239500800))))))))))))))))))))))))))<=(skoMC1 skoMC1 skoMC1 (2+(skoMC1 (6))))]/\[[(skoMC1 skoMC1 skoMC1 (-2))<(skoSC1 skoMC1 skoMC1 skoMC1 (2))]/\[[(skoSC1 ((skoMC1 skoMC1 skoMC1 (-2+(skoMC1 (-12))))+(skoSC1 ((skoMC1 skoMC1 skoMC1 (1+(skoMC1 (-6))))+(skoSC1 ((skoMC1 skoMC1 skoMC1)+(skoSC1 ((skoMC1 skoMC1 skoMC1 (-1/12))+(skoSC1 skoMC1 skoMC1 skoMC1 (-1/12))))))))))<=(skoMC1 skoMC1 skoMC1 (2+(skoMC1 (6))))]/\[[(skoSC1 skoMC1 skoMC1 skoMC1 (-2))<=(skoMC1 skoMC1 skoMC1 (2))]/\[[(skoMC1 skoMC1 skoMC1 (-2))<(skoSC1 skoMC1 skoMC1 skoMC1 (2))]/\[[(skoMC1 skoMC1 skoMC1 (-1))<=0]/\[[(skoMC1 skoMC1 skoMC1 (-1))<(skoSC1 skoMC1 skoMC1 skoMC1)]/\[[(skoMC1 skoMC1 skoMC1 (-2))<=0]/\[[0<(skoMC1 skoMC1 skoMC1 (2))]/\[[skoSC1<=5/4]/\[[2<=skoMC1]/\[[0<=skoSC1]/\[[0<skoMC1]/\[[0<=skoMC1]/\[[(skoMC1 (-1))<(skoSC1 skoMC1)]/\[[(skoSC1 skoMC1 (-1))<=skoMC1]/\[[(skoMC1 (-2+(skoMC1 (-5))))<(skoSC1 ((skoMC1 (-1+(skoMC1 (3))))+(skoSC1 ((skoMC1 (-2+(skoMC1 (-3))))+(skoSC1 ((skoMC1 skoMC1 (-1))+(skoSC1 skoMC1 (1/12))))))))]/\[[(skoSC1 ((skoMC1 (1+(skoMC1 (-3))))+(skoSC1 ((skoMC1 (2+(skoMC1 (3))))+(skoSC1 ((skoMC1 skoMC1)+(skoSC1 skoMC1 (-1/12))))))))<=(skoMC1 (2+(skoMC1 (5))))]/\[[(skoMC1 (-2+(skoMC1 (-5))))<(skoSC1 ((skoMC1 (-1+(skoMC1 (3))))+(skoSC1 ((skoMC1 (-2+(skoMC1 (-3))))+(skoSC1 ((skoMC1 (1/6+(skoMC1 (-1))))+(skoSC1 skoMC1 (1/4))))))))]/\[(skoSC1 ((skoMC1 (1+(skoMC1 (-3))))+(skoSC1 ((skoMC1 (2+(skoMC1 (3))))+(skoSC1 ((skoMC1 (-1/6+skoMC1))+(skoSC1 skoMC1 (-1/4))))))))<=(skoMC1 (2+(skoMC1 (5))))]]]]]]]]]]]]]]]]]]]].

% In SMTLib2 format:
(declare-fun skoSC1 () Real) (declare-fun skoMC1 () Real) (assert (and (<= (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (+ (- 2.) (* skoMC1 (- 12.)))))) (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (+ 1. (* skoMC1 (- 6.)))))) (* skoSC1 (+ (* skoMC1 (* skoMC1 skoMC1)) (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (/ (- 1.) 12.)))) (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (/ (- 1.) 12.)))) (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (/ 1. 360.)))) (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (/ 1. 360.)))) (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (/ (- 1.) 20160.)))) (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (/ (- 1.) 20160.)))) (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (/ 1. 1814400.)))) (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (/ 1. 1814400.)))) (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (/ (- 1.) 239500800.)))) (* skoSC1 (* skoMC1 (* skoMC1 (* skoMC1 (/ (- 1.) 239500800.))))))))))))))))))))))))))))) (* skoMC1 (* skoMC1 (* skoMC1 (+ 2. (* skoMC1 6.)))))) (and (> (* skoSC1 (* skoMC1 (* skoMC1 (* skoMC1 2.)))) (* skoMC1 (* skoMC1 (* skoMC1 (- 2.))))) (and (<= (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (+ (- 2.) (* skoMC1 (- 12.)))))) (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (+ 1. (* skoMC1 (- 6.)))))) (* skoSC1 (+ (* skoMC1 (* skoMC1 skoMC1)) (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (/ (- 1.) 12.)))) (* skoSC1 (* skoMC1 (* skoMC1 (* skoMC1 (/ (- 1.) 12.))))))))))))) (* skoMC1 (* skoMC1 (* skoMC1 (+ 2. (* skoMC1 6.)))))) (and (<= (* skoSC1 (* skoMC1 (* skoMC1 (* skoMC1 (- 2.))))) (* skoMC1 (* skoMC1 (* skoMC1 2.)))) (and (> (* skoSC1 (* skoMC1 (* skoMC1 (* skoMC1 2.)))) (* skoMC1 (* skoMC1 (* skoMC1 (- 2.))))) (and (<= (* skoMC1 (* skoMC1 (* skoMC1 (- 1.)))) 0.) (and (> (* skoSC1 (* skoMC1 (* skoMC1 skoMC1))) (* skoMC1 (* skoMC1 (* skoMC1 (- 1.))))) (and (<= (* skoMC1 (* skoMC1 (* skoMC1 (- 2.)))) 0.) (and (> (* skoMC1 (* skoMC1 (* skoMC1 2.))) 0.) (and (<= skoSC1 (/ 5. 4.)) (and (<= 2. skoMC1) (and (<= 0. skoSC1) (and (> skoMC1 0.) (and (<= 0. skoMC1) (and (> (* skoSC1 skoMC1) (* skoMC1 (- 1.))) (and (<= (* skoSC1 (* skoMC1 (- 1.))) skoMC1) (and (> (* skoSC1 (+ (* skoMC1 (+ (- 1.) (* skoMC1 3.))) (* skoSC1 (+ (* skoMC1 (+ (- 2.) (* skoMC1 (- 3.)))) (* skoSC1 (+ (* skoMC1 (* skoMC1 (- 1.))) (* skoSC1 (* skoMC1 (/ 1. 12.))))))))) (* skoMC1 (+ (- 2.) (* skoMC1 (- 5.))))) (and (<= (* skoSC1 (+ (* skoMC1 (+ 1. (* skoMC1 (- 3.)))) (* skoSC1 (+ (* skoMC1 (+ 2. (* skoMC1 3.))) (* skoSC1 (+ (* skoMC1 skoMC1) (* skoSC1 (* skoMC1 (/ (- 1.) 12.))))))))) (* skoMC1 (+ 2. (* skoMC1 5.)))) (and (> (* skoSC1 (+ (* skoMC1 (+ (- 1.) (* skoMC1 3.))) (* skoSC1 (+ (* skoMC1 (+ (- 2.) (* skoMC1 (- 3.)))) (* skoSC1 (+ (* skoMC1 (+ (/ 1. 6.) (* skoMC1 (- 1.)))) (* skoSC1 (* skoMC1 (/ 1. 4.))))))))) (* skoMC1 (+ (- 2.) (* skoMC1 (- 5.))))) (<= (* skoSC1 (+ (* skoMC1 (+ 1. (* skoMC1 (- 3.)))) (* skoSC1 (+ (* skoMC1 (+ 2. (* skoMC1 3.))) (* skoSC1 (+ (* skoMC1 (+ (/ (- 1.) 6.) skoMC1)) (* skoSC1 (* skoMC1 (/ (- 1.) 4.))))))))) (* skoMC1 (+ 2. (* skoMC1 5.))))))))))))))))))))))))

% In GRF format:
(sequent " MetiTarski formula " (antecedent (<= (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (+ (- 2.) (* skoMC1 (- 12.)))))) (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (+ 1. (* skoMC1 (- 6.)))))) (* skoSC1 (+ (* skoMC1 (* skoMC1 skoMC1)) (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (/ (- 1.) 12.)))) (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (/ (- 1.) 12.)))) (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (/ 1. 360.)))) (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (/ 1. 360.)))) (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (/ (- 1.) 20160.)))) (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (/ (- 1.) 20160.)))) (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (/ 1. 1814400.)))) (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (/ 1. 1814400.)))) (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (/ (- 1.) 239500800.)))) (* skoSC1 (* skoMC1 (* skoMC1 (* skoMC1 (/ (- 1.) 239500800.))))))))))))))))))))))))))))) (* skoMC1 (* skoMC1 (* skoMC1 (+ 2. (* skoMC1 6.)))))) (> (* skoSC1 (* skoMC1 (* skoMC1 (* skoMC1 2.)))) (* skoMC1 (* skoMC1 (* skoMC1 (- 2.))))) (<= (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (+ (- 2.) (* skoMC1 (- 12.)))))) (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (+ 1. (* skoMC1 (- 6.)))))) (* skoSC1 (+ (* skoMC1 (* skoMC1 skoMC1)) (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (/ (- 1.) 12.)))) (* skoSC1 (* skoMC1 (* skoMC1 (* skoMC1 (/ (- 1.) 12.))))))))))))) (* skoMC1 (* skoMC1 (* skoMC1 (+ 2. (* skoMC1 6.)))))) (<= (* skoSC1 (* skoMC1 (* skoMC1 (* skoMC1 (- 2.))))) (* skoMC1 (* skoMC1 (* skoMC1 2.)))) (> (* skoSC1 (* skoMC1 (* skoMC1 (* skoMC1 2.)))) (* skoMC1 (* skoMC1 (* skoMC1 (- 2.))))) (<= (* skoMC1 (* skoMC1 (* skoMC1 (- 1.)))) 0.) (> (* skoSC1 (* skoMC1 (* skoMC1 skoMC1))) (* skoMC1 (* skoMC1 (* skoMC1 (- 1.))))) (<= (* skoMC1 (* skoMC1 (* skoMC1 (- 2.)))) 0.) (> (* skoMC1 (* skoMC1 (* skoMC1 2.))) 0.) (<= skoSC1 (/ 5. 4.)) (<= 2. skoMC1) (<= 0. skoSC1) (> skoMC1 0.) (<= 0. skoMC1) (> (* skoSC1 skoMC1) (* skoMC1 (- 1.))) (<= (* skoSC1 (* skoMC1 (- 1.))) skoMC1) (> (* skoSC1 (+ (* skoMC1 (+ (- 1.) (* skoMC1 3.))) (* skoSC1 (+ (* skoMC1 (+ (- 2.) (* skoMC1 (- 3.)))) (* skoSC1 (+ (* skoMC1 (* skoMC1 (- 1.))) (* skoSC1 (* skoMC1 (/ 1. 12.))))))))) (* skoMC1 (+ (- 2.) (* skoMC1 (- 5.))))) (<= (* skoSC1 (+ (* skoMC1 (+ 1. (* skoMC1 (- 3.)))) (* skoSC1 (+ (* skoMC1 (+ 2. (* skoMC1 3.))) (* skoSC1 (+ (* skoMC1 skoMC1) (* skoSC1 (* skoMC1 (/ (- 1.) 12.))))))))) (* skoMC1 (+ 2. (* skoMC1 5.)))) (> (* skoSC1 (+ (* skoMC1 (+ (- 1.) (* skoMC1 3.))) (* skoSC1 (+ (* skoMC1 (+ (- 2.) (* skoMC1 (- 3.)))) (* skoSC1 (+ (* skoMC1 (+ (/ 1. 6.) (* skoMC1 (- 1.)))) (* skoSC1 (* skoMC1 (/ 1. 4.))))))))) (* skoMC1 (+ (- 2.) (* skoMC1 (- 5.)))))) (succedent (> (* skoSC1 (+ (* skoMC1 (+ 1. (* skoMC1 (- 3.)))) (* skoSC1 (+ (* skoMC1 (+ 2. (* skoMC1 3.))) (* skoSC1 (+ (* skoMC1 (+ (/ (- 1.) 6.) skoMC1)) (* skoSC1 (* skoMC1 (/ (- 1.) 4.))))))))) (* skoMC1 (+ 2. (* skoMC1 5.))))))
-----[end problem]-----

-----[begin problem]-----
% In Mathematica format:
Timing[Resolve[Exists[{skoSC1,skoMC1}, And[skoSC1*skoMC1*skoMC1*skoMC1*-2<=skoMC1*skoMC1*skoMC1*2,skoSC1*(skoMC1*skoMC1*skoMC1*(-2+skoMC1*-12)+skoSC1*(skoMC1*skoMC1*skoMC1*(1+skoMC1*-6)+skoSC1*(skoMC1*skoMC1*skoMC1+skoSC1*(skoMC1*skoMC1*skoMC1*(-1/12)+skoSC1*skoMC1*skoMC1*skoMC1*(-1/12)))))<=skoMC1*skoMC1*skoMC1*(2+skoMC1*6),skoSC1*skoMC1*skoMC1*skoMC1*-2<=skoMC1*skoMC1*skoMC1*2,skoSC1*skoMC1*skoMC1*skoMC1*2>skoMC1*skoMC1*skoMC1*-2,skoMC1*skoMC1*skoMC1*-1<=0,skoSC1*skoMC1*skoMC1*skoMC1>skoMC1*skoMC1*skoMC1*-1,skoMC1*skoMC1*skoMC1*-2<=0,skoMC1*skoMC1*skoMC1*2>0,skoSC1<=(5/4),2<=skoMC1,0<=skoSC1,skoMC1>0,0<=skoMC1,skoSC1*skoMC1>skoMC1*-1,skoSC1*skoMC1*-1<=skoMC1,skoSC1*(skoMC1*(-1+skoMC1*3)+skoSC1*(skoMC1*(-2+skoMC1*-3)+skoSC1*(skoMC1*skoMC1*-1+skoSC1*skoMC1*(1/12))))>skoMC1*(-2+skoMC1*-5),skoSC1*(skoMC1*(1+skoMC1*-3)+skoSC1*(skoMC1*(2+skoMC1*3)+skoSC1*(skoMC1*skoMC1+skoSC1*skoMC1*(-1/12))))<=skoMC1*(2+skoMC1*5),skoSC1*(skoMC1*(-1+skoMC1*3)+skoSC1*(skoMC1*(-2+skoMC1*-3)+skoSC1*(skoMC1*((1/6)+skoMC1*-1)+skoSC1*skoMC1*(1/4))))>skoMC1*(-2+skoMC1*-5),skoSC1*(skoMC1*(1+skoMC1*-3)+skoSC1*(skoMC1*(2+skoMC1*3)+skoSC1*(skoMC1*((-1/6)+skoMC1)+skoSC1*skoMC1*(-1/4))))<=skoMC1*(2+skoMC1*5)]], Reals]]

% In QepcadB format:
(E skoSC1) (E skoMC1) [[(skoSC1 skoMC1 skoMC1 skoMC1 (-2))<=(skoMC1 skoMC1 skoMC1 (2))]/\[[(skoSC1 ((skoMC1 skoMC1 skoMC1 (-2+(skoMC1 (-12))))+(skoSC1 ((skoMC1 skoMC1 skoMC1 (1+(skoMC1 (-6))))+(skoSC1 ((skoMC1 skoMC1 skoMC1)+(skoSC1 ((skoMC1 skoMC1 skoMC1 (-1/12))+(skoSC1 skoMC1 skoMC1 skoMC1 (-1/12))))))))))<=(skoMC1 skoMC1 skoMC1 (2+(skoMC1 (6))))]/\[[(skoSC1 skoMC1 skoMC1 skoMC1 (-2))<=(skoMC1 skoMC1 skoMC1 (2))]/\[[(skoMC1 skoMC1 skoMC1 (-2))<(skoSC1 skoMC1 skoMC1 skoMC1 (2))]/\[[(skoMC1 skoMC1 skoMC1 (-1))<=0]/\[[(skoMC1 skoMC1 skoMC1 (-1))<(skoSC1 skoMC1 skoMC1 skoMC1)]/\[[(skoMC1 skoMC1 skoMC1 (-2))<=0]/\[[0<(skoMC1 skoMC1 skoMC1 (2))]/\[[skoSC1<=5/4]/\[[2<=skoMC1]/\[[0<=skoSC1]/\[[0<skoMC1]/\[[0<=skoMC1]/\[[(skoMC1 (-1))<(skoSC1 skoMC1)]/\[[(skoSC1 skoMC1 (-1))<=skoMC1]/\[[(skoMC1 (-2+(skoMC1 (-5))))<(skoSC1 ((skoMC1 (-1+(skoMC1 (3))))+(skoSC1 ((skoMC1 (-2+(skoMC1 (-3))))+(skoSC1 ((skoMC1 skoMC1 (-1))+(skoSC1 skoMC1 (1/12))))))))]/\[[(skoSC1 ((skoMC1 (1+(skoMC1 (-3))))+(skoSC1 ((skoMC1 (2+(skoMC1 (3))))+(skoSC1 ((skoMC1 skoMC1)+(skoSC1 skoMC1 (-1/12))))))))<=(skoMC1 (2+(skoMC1 (5))))]/\[[(skoMC1 (-2+(skoMC1 (-5))))<(skoSC1 ((skoMC1 (-1+(skoMC1 (3))))+(skoSC1 ((skoMC1 (-2+(skoMC1 (-3))))+(skoSC1 ((skoMC1 (1/6+(skoMC1 (-1))))+(skoSC1 skoMC1 (1/4))))))))]/\[(skoSC1 ((skoMC1 (1+(skoMC1 (-3))))+(skoSC1 ((skoMC1 (2+(skoMC1 (3))))+(skoSC1 ((skoMC1 (-1/6+skoMC1))+(skoSC1 skoMC1 (-1/4))))))))<=(skoMC1 (2+(skoMC1 (5))))]]]]]]]]]]]]]]]]]]].

% In SMTLib2 format:
(declare-fun skoSC1 () Real) (declare-fun skoMC1 () Real) (assert (and (<= (* skoSC1 (* skoMC1 (* skoMC1 (* skoMC1 (- 2.))))) (* skoMC1 (* skoMC1 (* skoMC1 2.)))) (and (<= (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (+ (- 2.) (* skoMC1 (- 12.)))))) (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (+ 1. (* skoMC1 (- 6.)))))) (* skoSC1 (+ (* skoMC1 (* skoMC1 skoMC1)) (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (/ (- 1.) 12.)))) (* skoSC1 (* skoMC1 (* skoMC1 (* skoMC1 (/ (- 1.) 12.))))))))))))) (* skoMC1 (* skoMC1 (* skoMC1 (+ 2. (* skoMC1 6.)))))) (and (<= (* skoSC1 (* skoMC1 (* skoMC1 (* skoMC1 (- 2.))))) (* skoMC1 (* skoMC1 (* skoMC1 2.)))) (and (> (* skoSC1 (* skoMC1 (* skoMC1 (* skoMC1 2.)))) (* skoMC1 (* skoMC1 (* skoMC1 (- 2.))))) (and (<= (* skoMC1 (* skoMC1 (* skoMC1 (- 1.)))) 0.) (and (> (* skoSC1 (* skoMC1 (* skoMC1 skoMC1))) (* skoMC1 (* skoMC1 (* skoMC1 (- 1.))))) (and (<= (* skoMC1 (* skoMC1 (* skoMC1 (- 2.)))) 0.) (and (> (* skoMC1 (* skoMC1 (* skoMC1 2.))) 0.) (and (<= skoSC1 (/ 5. 4.)) (and (<= 2. skoMC1) (and (<= 0. skoSC1) (and (> skoMC1 0.) (and (<= 0. skoMC1) (and (> (* skoSC1 skoMC1) (* skoMC1 (- 1.))) (and (<= (* skoSC1 (* skoMC1 (- 1.))) skoMC1) (and (> (* skoSC1 (+ (* skoMC1 (+ (- 1.) (* skoMC1 3.))) (* skoSC1 (+ (* skoMC1 (+ (- 2.) (* skoMC1 (- 3.)))) (* skoSC1 (+ (* skoMC1 (* skoMC1 (- 1.))) (* skoSC1 (* skoMC1 (/ 1. 12.))))))))) (* skoMC1 (+ (- 2.) (* skoMC1 (- 5.))))) (and (<= (* skoSC1 (+ (* skoMC1 (+ 1. (* skoMC1 (- 3.)))) (* skoSC1 (+ (* skoMC1 (+ 2. (* skoMC1 3.))) (* skoSC1 (+ (* skoMC1 skoMC1) (* skoSC1 (* skoMC1 (/ (- 1.) 12.))))))))) (* skoMC1 (+ 2. (* skoMC1 5.)))) (and (> (* skoSC1 (+ (* skoMC1 (+ (- 1.) (* skoMC1 3.))) (* skoSC1 (+ (* skoMC1 (+ (- 2.) (* skoMC1 (- 3.)))) (* skoSC1 (+ (* skoMC1 (+ (/ 1. 6.) (* skoMC1 (- 1.)))) (* skoSC1 (* skoMC1 (/ 1. 4.))))))))) (* skoMC1 (+ (- 2.) (* skoMC1 (- 5.))))) (<= (* skoSC1 (+ (* skoMC1 (+ 1. (* skoMC1 (- 3.)))) (* skoSC1 (+ (* skoMC1 (+ 2. (* skoMC1 3.))) (* skoSC1 (+ (* skoMC1 (+ (/ (- 1.) 6.) skoMC1)) (* skoSC1 (* skoMC1 (/ (- 1.) 4.))))))))) (* skoMC1 (+ 2. (* skoMC1 5.)))))))))))))))))))))))

% In GRF format:
(sequent " MetiTarski formula " (antecedent (<= (* skoSC1 (* skoMC1 (* skoMC1 (* skoMC1 (- 2.))))) (* skoMC1 (* skoMC1 (* skoMC1 2.)))) (<= (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (+ (- 2.) (* skoMC1 (- 12.)))))) (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (+ 1. (* skoMC1 (- 6.)))))) (* skoSC1 (+ (* skoMC1 (* skoMC1 skoMC1)) (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (/ (- 1.) 12.)))) (* skoSC1 (* skoMC1 (* skoMC1 (* skoMC1 (/ (- 1.) 12.))))))))))))) (* skoMC1 (* skoMC1 (* skoMC1 (+ 2. (* skoMC1 6.)))))) (<= (* skoSC1 (* skoMC1 (* skoMC1 (* skoMC1 (- 2.))))) (* skoMC1 (* skoMC1 (* skoMC1 2.)))) (> (* skoSC1 (* skoMC1 (* skoMC1 (* skoMC1 2.)))) (* skoMC1 (* skoMC1 (* skoMC1 (- 2.))))) (<= (* skoMC1 (* skoMC1 (* skoMC1 (- 1.)))) 0.) (> (* skoSC1 (* skoMC1 (* skoMC1 skoMC1))) (* skoMC1 (* skoMC1 (* skoMC1 (- 1.))))) (<= (* skoMC1 (* skoMC1 (* skoMC1 (- 2.)))) 0.) (> (* skoMC1 (* skoMC1 (* skoMC1 2.))) 0.) (<= skoSC1 (/ 5. 4.)) (<= 2. skoMC1) (<= 0. skoSC1) (> skoMC1 0.) (<= 0. skoMC1) (> (* skoSC1 skoMC1) (* skoMC1 (- 1.))) (<= (* skoSC1 (* skoMC1 (- 1.))) skoMC1) (> (* skoSC1 (+ (* skoMC1 (+ (- 1.) (* skoMC1 3.))) (* skoSC1 (+ (* skoMC1 (+ (- 2.) (* skoMC1 (- 3.)))) (* skoSC1 (+ (* skoMC1 (* skoMC1 (- 1.))) (* skoSC1 (* skoMC1 (/ 1. 12.))))))))) (* skoMC1 (+ (- 2.) (* skoMC1 (- 5.))))) (<= (* skoSC1 (+ (* skoMC1 (+ 1. (* skoMC1 (- 3.)))) (* skoSC1 (+ (* skoMC1 (+ 2. (* skoMC1 3.))) (* skoSC1 (+ (* skoMC1 skoMC1) (* skoSC1 (* skoMC1 (/ (- 1.) 12.))))))))) (* skoMC1 (+ 2. (* skoMC1 5.)))) (> (* skoSC1 (+ (* skoMC1 (+ (- 1.) (* skoMC1 3.))) (* skoSC1 (+ (* skoMC1 (+ (- 2.) (* skoMC1 (- 3.)))) (* skoSC1 (+ (* skoMC1 (+ (/ 1. 6.) (* skoMC1 (- 1.)))) (* skoSC1 (* skoMC1 (/ 1. 4.))))))))) (* skoMC1 (+ (- 2.) (* skoMC1 (- 5.)))))) (succedent (> (* skoSC1 (+ (* skoMC1 (+ 1. (* skoMC1 (- 3.)))) (* skoSC1 (+ (* skoMC1 (+ 2. (* skoMC1 3.))) (* skoSC1 (+ (* skoMC1 (+ (/ (- 1.) 6.) skoMC1)) (* skoSC1 (* skoMC1 (/ (- 1.) 4.))))))))) (* skoMC1 (+ 2. (* skoMC1 5.))))))
-----[end problem]-----

-----[begin problem]-----
% In Mathematica format:
Timing[Resolve[Exists[{skoSC1,skoMC1}, And[skoSC1*skoMC1*skoMC1*skoMC1*-2<=skoMC1*skoMC1*skoMC1*2,skoSC1*(skoMC1*skoMC1*skoMC1*(-2+skoMC1*-12)+skoSC1*(skoMC1*skoMC1*skoMC1*(1+skoMC1*-6)+skoSC1*(skoMC1*skoMC1*skoMC1+skoSC1*(skoMC1*skoMC1*skoMC1*(-1/12)+skoSC1*skoMC1*skoMC1*skoMC1*(-1/12)))))<=skoMC1*skoMC1*skoMC1*(2+skoMC1*6),skoSC1*skoMC1*skoMC1*skoMC1*-2<=skoMC1*skoMC1*skoMC1*2,skoSC1*skoMC1*skoMC1*skoMC1*2>skoMC1*skoMC1*skoMC1*-2,skoMC1*skoMC1*skoMC1*-1<=0,skoSC1*skoMC1*skoMC1*skoMC1>skoMC1*skoMC1*skoMC1*-1,skoMC1*skoMC1*skoMC1*-2<=0,skoMC1*skoMC1*skoMC1*2>0,skoSC1<=(5/4),2<=skoMC1,0<=skoSC1,skoMC1>0,0<=skoMC1,skoSC1*skoMC1>skoMC1*-1,skoSC1*skoMC1*-1<=skoMC1,skoSC1*(skoMC1*(-1+skoMC1*3)+skoSC1*(skoMC1*(-2+skoMC1*-3)+skoSC1*(skoMC1*skoMC1*-1+skoSC1*skoMC1*(1/12))))>skoMC1*(-2+skoMC1*-5),skoSC1*(skoMC1*(1+skoMC1*-3)+skoSC1*(skoMC1*(2+skoMC1*3)+skoSC1*(skoMC1*skoMC1+skoSC1*skoMC1*(-1/12))))<=skoMC1*(2+skoMC1*5),skoSC1*(skoMC1*(-1+skoMC1*3)+skoSC1*(skoMC1*(-2+skoMC1*-3)+skoSC1*(skoMC1*((1/6)+skoMC1*-1)+skoSC1*skoMC1*(1/4))))>skoMC1*(-2+skoMC1*-5),skoSC1*(skoMC1*(1+skoMC1*-3)+skoSC1*(skoMC1*(2+skoMC1*3)+skoSC1*(skoMC1*((-1/6)+skoMC1)+skoSC1*skoMC1*(-1/4))))<=skoMC1*(2+skoMC1*5)]], Reals]]

% In QepcadB format:
(E skoSC1) (E skoMC1) [[(skoSC1 skoMC1 skoMC1 skoMC1 (-2))<=(skoMC1 skoMC1 skoMC1 (2))]/\[[(skoSC1 ((skoMC1 skoMC1 skoMC1 (-2+(skoMC1 (-12))))+(skoSC1 ((skoMC1 skoMC1 skoMC1 (1+(skoMC1 (-6))))+(skoSC1 ((skoMC1 skoMC1 skoMC1)+(skoSC1 ((skoMC1 skoMC1 skoMC1 (-1/12))+(skoSC1 skoMC1 skoMC1 skoMC1 (-1/12))))))))))<=(skoMC1 skoMC1 skoMC1 (2+(skoMC1 (6))))]/\[[(skoSC1 skoMC1 skoMC1 skoMC1 (-2))<=(skoMC1 skoMC1 skoMC1 (2))]/\[[(skoMC1 skoMC1 skoMC1 (-2))<(skoSC1 skoMC1 skoMC1 skoMC1 (2))]/\[[(skoMC1 skoMC1 skoMC1 (-1))<=0]/\[[(skoMC1 skoMC1 skoMC1 (-1))<(skoSC1 skoMC1 skoMC1 skoMC1)]/\[[(skoMC1 skoMC1 skoMC1 (-2))<=0]/\[[0<(skoMC1 skoMC1 skoMC1 (2))]/\[[skoSC1<=5/4]/\[[2<=skoMC1]/\[[0<=skoSC1]/\[[0<skoMC1]/\[[0<=skoMC1]/\[[(skoMC1 (-1))<(skoSC1 skoMC1)]/\[[(skoSC1 skoMC1 (-1))<=skoMC1]/\[[(skoMC1 (-2+(skoMC1 (-5))))<(skoSC1 ((skoMC1 (-1+(skoMC1 (3))))+(skoSC1 ((skoMC1 (-2+(skoMC1 (-3))))+(skoSC1 ((skoMC1 skoMC1 (-1))+(skoSC1 skoMC1 (1/12))))))))]/\[[(skoSC1 ((skoMC1 (1+(skoMC1 (-3))))+(skoSC1 ((skoMC1 (2+(skoMC1 (3))))+(skoSC1 ((skoMC1 skoMC1)+(skoSC1 skoMC1 (-1/12))))))))<=(skoMC1 (2+(skoMC1 (5))))]/\[[(skoMC1 (-2+(skoMC1 (-5))))<(skoSC1 ((skoMC1 (-1+(skoMC1 (3))))+(skoSC1 ((skoMC1 (-2+(skoMC1 (-3))))+(skoSC1 ((skoMC1 (1/6+(skoMC1 (-1))))+(skoSC1 skoMC1 (1/4))))))))]/\[(skoSC1 ((skoMC1 (1+(skoMC1 (-3))))+(skoSC1 ((skoMC1 (2+(skoMC1 (3))))+(skoSC1 ((skoMC1 (-1/6+skoMC1))+(skoSC1 skoMC1 (-1/4))))))))<=(skoMC1 (2+(skoMC1 (5))))]]]]]]]]]]]]]]]]]]].

% In SMTLib2 format:
(declare-fun skoSC1 () Real) (declare-fun skoMC1 () Real) (assert (and (<= (* skoSC1 (* skoMC1 (* skoMC1 (* skoMC1 (- 2.))))) (* skoMC1 (* skoMC1 (* skoMC1 2.)))) (and (<= (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (+ (- 2.) (* skoMC1 (- 12.)))))) (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (+ 1. (* skoMC1 (- 6.)))))) (* skoSC1 (+ (* skoMC1 (* skoMC1 skoMC1)) (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (/ (- 1.) 12.)))) (* skoSC1 (* skoMC1 (* skoMC1 (* skoMC1 (/ (- 1.) 12.))))))))))))) (* skoMC1 (* skoMC1 (* skoMC1 (+ 2. (* skoMC1 6.)))))) (and (<= (* skoSC1 (* skoMC1 (* skoMC1 (* skoMC1 (- 2.))))) (* skoMC1 (* skoMC1 (* skoMC1 2.)))) (and (> (* skoSC1 (* skoMC1 (* skoMC1 (* skoMC1 2.)))) (* skoMC1 (* skoMC1 (* skoMC1 (- 2.))))) (and (<= (* skoMC1 (* skoMC1 (* skoMC1 (- 1.)))) 0.) (and (> (* skoSC1 (* skoMC1 (* skoMC1 skoMC1))) (* skoMC1 (* skoMC1 (* skoMC1 (- 1.))))) (and (<= (* skoMC1 (* skoMC1 (* skoMC1 (- 2.)))) 0.) (and (> (* skoMC1 (* skoMC1 (* skoMC1 2.))) 0.) (and (<= skoSC1 (/ 5. 4.)) (and (<= 2. skoMC1) (and (<= 0. skoSC1) (and (> skoMC1 0.) (and (<= 0. skoMC1) (and (> (* skoSC1 skoMC1) (* skoMC1 (- 1.))) (and (<= (* skoSC1 (* skoMC1 (- 1.))) skoMC1) (and (> (* skoSC1 (+ (* skoMC1 (+ (- 1.) (* skoMC1 3.))) (* skoSC1 (+ (* skoMC1 (+ (- 2.) (* skoMC1 (- 3.)))) (* skoSC1 (+ (* skoMC1 (* skoMC1 (- 1.))) (* skoSC1 (* skoMC1 (/ 1. 12.))))))))) (* skoMC1 (+ (- 2.) (* skoMC1 (- 5.))))) (and (<= (* skoSC1 (+ (* skoMC1 (+ 1. (* skoMC1 (- 3.)))) (* skoSC1 (+ (* skoMC1 (+ 2. (* skoMC1 3.))) (* skoSC1 (+ (* skoMC1 skoMC1) (* skoSC1 (* skoMC1 (/ (- 1.) 12.))))))))) (* skoMC1 (+ 2. (* skoMC1 5.)))) (and (> (* skoSC1 (+ (* skoMC1 (+ (- 1.) (* skoMC1 3.))) (* skoSC1 (+ (* skoMC1 (+ (- 2.) (* skoMC1 (- 3.)))) (* skoSC1 (+ (* skoMC1 (+ (/ 1. 6.) (* skoMC1 (- 1.)))) (* skoSC1 (* skoMC1 (/ 1. 4.))))))))) (* skoMC1 (+ (- 2.) (* skoMC1 (- 5.))))) (<= (* skoSC1 (+ (* skoMC1 (+ 1. (* skoMC1 (- 3.)))) (* skoSC1 (+ (* skoMC1 (+ 2. (* skoMC1 3.))) (* skoSC1 (+ (* skoMC1 (+ (/ (- 1.) 6.) skoMC1)) (* skoSC1 (* skoMC1 (/ (- 1.) 4.))))))))) (* skoMC1 (+ 2. (* skoMC1 5.)))))))))))))))))))))))

% In GRF format:
(sequent " MetiTarski formula " (antecedent (<= (* skoSC1 (* skoMC1 (* skoMC1 (* skoMC1 (- 2.))))) (* skoMC1 (* skoMC1 (* skoMC1 2.)))) (<= (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (+ (- 2.) (* skoMC1 (- 12.)))))) (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (+ 1. (* skoMC1 (- 6.)))))) (* skoSC1 (+ (* skoMC1 (* skoMC1 skoMC1)) (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (/ (- 1.) 12.)))) (* skoSC1 (* skoMC1 (* skoMC1 (* skoMC1 (/ (- 1.) 12.))))))))))))) (* skoMC1 (* skoMC1 (* skoMC1 (+ 2. (* skoMC1 6.)))))) (<= (* skoSC1 (* skoMC1 (* skoMC1 (* skoMC1 (- 2.))))) (* skoMC1 (* skoMC1 (* skoMC1 2.)))) (> (* skoSC1 (* skoMC1 (* skoMC1 (* skoMC1 2.)))) (* skoMC1 (* skoMC1 (* skoMC1 (- 2.))))) (<= (* skoMC1 (* skoMC1 (* skoMC1 (- 1.)))) 0.) (> (* skoSC1 (* skoMC1 (* skoMC1 skoMC1))) (* skoMC1 (* skoMC1 (* skoMC1 (- 1.))))) (<= (* skoMC1 (* skoMC1 (* skoMC1 (- 2.)))) 0.) (> (* skoMC1 (* skoMC1 (* skoMC1 2.))) 0.) (<= skoSC1 (/ 5. 4.)) (<= 2. skoMC1) (<= 0. skoSC1) (> skoMC1 0.) (<= 0. skoMC1) (> (* skoSC1 skoMC1) (* skoMC1 (- 1.))) (<= (* skoSC1 (* skoMC1 (- 1.))) skoMC1) (> (* skoSC1 (+ (* skoMC1 (+ (- 1.) (* skoMC1 3.))) (* skoSC1 (+ (* skoMC1 (+ (- 2.) (* skoMC1 (- 3.)))) (* skoSC1 (+ (* skoMC1 (* skoMC1 (- 1.))) (* skoSC1 (* skoMC1 (/ 1. 12.))))))))) (* skoMC1 (+ (- 2.) (* skoMC1 (- 5.))))) (<= (* skoSC1 (+ (* skoMC1 (+ 1. (* skoMC1 (- 3.)))) (* skoSC1 (+ (* skoMC1 (+ 2. (* skoMC1 3.))) (* skoSC1 (+ (* skoMC1 skoMC1) (* skoSC1 (* skoMC1 (/ (- 1.) 12.))))))))) (* skoMC1 (+ 2. (* skoMC1 5.)))) (> (* skoSC1 (+ (* skoMC1 (+ (- 1.) (* skoMC1 3.))) (* skoSC1 (+ (* skoMC1 (+ (- 2.) (* skoMC1 (- 3.)))) (* skoSC1 (+ (* skoMC1 (+ (/ 1. 6.) (* skoMC1 (- 1.)))) (* skoSC1 (* skoMC1 (/ 1. 4.))))))))) (* skoMC1 (+ (- 2.) (* skoMC1 (- 5.)))))) (succedent (> (* skoSC1 (+ (* skoMC1 (+ 1. (* skoMC1 (- 3.)))) (* skoSC1 (+ (* skoMC1 (+ 2. (* skoMC1 3.))) (* skoSC1 (+ (* skoMC1 (+ (/ (- 1.) 6.) skoMC1)) (* skoSC1 (* skoMC1 (/ (- 1.) 4.))))))))) (* skoMC1 (+ 2. (* skoMC1 5.))))))
-----[end problem]-----

-----[begin problem]-----
% In Mathematica format:
Timing[Resolve[Exists[{skoSC1,skoMC1}, And[skoSC1*skoMC1*skoMC1*skoMC1*-1<=skoMC1*skoMC1*skoMC1,skoSC1*(skoMC1*skoMC1*skoMC1*(-2+skoMC1*-12)+skoSC1*(skoMC1*skoMC1*skoMC1*(1+skoMC1*-6)+skoSC1*(skoMC1*skoMC1*skoMC1+skoSC1*(skoMC1*skoMC1*skoMC1*(-1/12)+skoSC1*skoMC1*skoMC1*skoMC1*(-1/12)))))<=skoMC1*skoMC1*skoMC1*(2+skoMC1*6),skoSC1*skoMC1*skoMC1*skoMC1*-2<=skoMC1*skoMC1*skoMC1*2,skoSC1*skoMC1*skoMC1*skoMC1*2>skoMC1*skoMC1*skoMC1*-2,skoMC1*skoMC1*skoMC1*-1<=0,skoSC1*skoMC1*skoMC1*skoMC1>skoMC1*skoMC1*skoMC1*-1,skoMC1*skoMC1*skoMC1*-2<=0,skoMC1*skoMC1*skoMC1*2>0,skoSC1<=(5/4),2<=skoMC1,0<=skoSC1,skoMC1>0,0<=skoMC1,skoSC1*skoMC1>skoMC1*-1,skoSC1*skoMC1*-1<=skoMC1,skoSC1*(skoMC1*(-1+skoMC1*3)+skoSC1*(skoMC1*(-2+skoMC1*-3)+skoSC1*(skoMC1*skoMC1*-1+skoSC1*skoMC1*(1/12))))>skoMC1*(-2+skoMC1*-5),skoSC1*(skoMC1*(1+skoMC1*-3)+skoSC1*(skoMC1*(2+skoMC1*3)+skoSC1*(skoMC1*skoMC1+skoSC1*skoMC1*(-1/12))))<=skoMC1*(2+skoMC1*5),skoSC1*(skoMC1*(-1+skoMC1*3)+skoSC1*(skoMC1*(-2+skoMC1*-3)+skoSC1*(skoMC1*((1/6)+skoMC1*-1)+skoSC1*skoMC1*(1/4))))>skoMC1*(-2+skoMC1*-5),skoSC1*(skoMC1*(1+skoMC1*-3)+skoSC1*(skoMC1*(2+skoMC1*3)+skoSC1*(skoMC1*((-1/6)+skoMC1)+skoSC1*skoMC1*(-1/4))))<=skoMC1*(2+skoMC1*5)]], Reals]]

% In QepcadB format:
(E skoSC1) (E skoMC1) [[(skoSC1 skoMC1 skoMC1 skoMC1 (-1))<=(skoMC1 skoMC1 skoMC1)]/\[[(skoSC1 ((skoMC1 skoMC1 skoMC1 (-2+(skoMC1 (-12))))+(skoSC1 ((skoMC1 skoMC1 skoMC1 (1+(skoMC1 (-6))))+(skoSC1 ((skoMC1 skoMC1 skoMC1)+(skoSC1 ((skoMC1 skoMC1 skoMC1 (-1/12))+(skoSC1 skoMC1 skoMC1 skoMC1 (-1/12))))))))))<=(skoMC1 skoMC1 skoMC1 (2+(skoMC1 (6))))]/\[[(skoSC1 skoMC1 skoMC1 skoMC1 (-2))<=(skoMC1 skoMC1 skoMC1 (2))]/\[[(skoMC1 skoMC1 skoMC1 (-2))<(skoSC1 skoMC1 skoMC1 skoMC1 (2))]/\[[(skoMC1 skoMC1 skoMC1 (-1))<=0]/\[[(skoMC1 skoMC1 skoMC1 (-1))<(skoSC1 skoMC1 skoMC1 skoMC1)]/\[[(skoMC1 skoMC1 skoMC1 (-2))<=0]/\[[0<(skoMC1 skoMC1 skoMC1 (2))]/\[[skoSC1<=5/4]/\[[2<=skoMC1]/\[[0<=skoSC1]/\[[0<skoMC1]/\[[0<=skoMC1]/\[[(skoMC1 (-1))<(skoSC1 skoMC1)]/\[[(skoSC1 skoMC1 (-1))<=skoMC1]/\[[(skoMC1 (-2+(skoMC1 (-5))))<(skoSC1 ((skoMC1 (-1+(skoMC1 (3))))+(skoSC1 ((skoMC1 (-2+(skoMC1 (-3))))+(skoSC1 ((skoMC1 skoMC1 (-1))+(skoSC1 skoMC1 (1/12))))))))]/\[[(skoSC1 ((skoMC1 (1+(skoMC1 (-3))))+(skoSC1 ((skoMC1 (2+(skoMC1 (3))))+(skoSC1 ((skoMC1 skoMC1)+(skoSC1 skoMC1 (-1/12))))))))<=(skoMC1 (2+(skoMC1 (5))))]/\[[(skoMC1 (-2+(skoMC1 (-5))))<(skoSC1 ((skoMC1 (-1+(skoMC1 (3))))+(skoSC1 ((skoMC1 (-2+(skoMC1 (-3))))+(skoSC1 ((skoMC1 (1/6+(skoMC1 (-1))))+(skoSC1 skoMC1 (1/4))))))))]/\[(skoSC1 ((skoMC1 (1+(skoMC1 (-3))))+(skoSC1 ((skoMC1 (2+(skoMC1 (3))))+(skoSC1 ((skoMC1 (-1/6+skoMC1))+(skoSC1 skoMC1 (-1/4))))))))<=(skoMC1 (2+(skoMC1 (5))))]]]]]]]]]]]]]]]]]]].

% In SMTLib2 format:
(declare-fun skoSC1 () Real) (declare-fun skoMC1 () Real) (assert (and (<= (* skoSC1 (* skoMC1 (* skoMC1 (* skoMC1 (- 1.))))) (* skoMC1 (* skoMC1 skoMC1))) (and (<= (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (+ (- 2.) (* skoMC1 (- 12.)))))) (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (+ 1. (* skoMC1 (- 6.)))))) (* skoSC1 (+ (* skoMC1 (* skoMC1 skoMC1)) (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (/ (- 1.) 12.)))) (* skoSC1 (* skoMC1 (* skoMC1 (* skoMC1 (/ (- 1.) 12.))))))))))))) (* skoMC1 (* skoMC1 (* skoMC1 (+ 2. (* skoMC1 6.)))))) (and (<= (* skoSC1 (* skoMC1 (* skoMC1 (* skoMC1 (- 2.))))) (* skoMC1 (* skoMC1 (* skoMC1 2.)))) (and (> (* skoSC1 (* skoMC1 (* skoMC1 (* skoMC1 2.)))) (* skoMC1 (* skoMC1 (* skoMC1 (- 2.))))) (and (<= (* skoMC1 (* skoMC1 (* skoMC1 (- 1.)))) 0.) (and (> (* skoSC1 (* skoMC1 (* skoMC1 skoMC1))) (* skoMC1 (* skoMC1 (* skoMC1 (- 1.))))) (and (<= (* skoMC1 (* skoMC1 (* skoMC1 (- 2.)))) 0.) (and (> (* skoMC1 (* skoMC1 (* skoMC1 2.))) 0.) (and (<= skoSC1 (/ 5. 4.)) (and (<= 2. skoMC1) (and (<= 0. skoSC1) (and (> skoMC1 0.) (and (<= 0. skoMC1) (and (> (* skoSC1 skoMC1) (* skoMC1 (- 1.))) (and (<= (* skoSC1 (* skoMC1 (- 1.))) skoMC1) (and (> (* skoSC1 (+ (* skoMC1 (+ (- 1.) (* skoMC1 3.))) (* skoSC1 (+ (* skoMC1 (+ (- 2.) (* skoMC1 (- 3.)))) (* skoSC1 (+ (* skoMC1 (* skoMC1 (- 1.))) (* skoSC1 (* skoMC1 (/ 1. 12.))))))))) (* skoMC1 (+ (- 2.) (* skoMC1 (- 5.))))) (and (<= (* skoSC1 (+ (* skoMC1 (+ 1. (* skoMC1 (- 3.)))) (* skoSC1 (+ (* skoMC1 (+ 2. (* skoMC1 3.))) (* skoSC1 (+ (* skoMC1 skoMC1) (* skoSC1 (* skoMC1 (/ (- 1.) 12.))))))))) (* skoMC1 (+ 2. (* skoMC1 5.)))) (and (> (* skoSC1 (+ (* skoMC1 (+ (- 1.) (* skoMC1 3.))) (* skoSC1 (+ (* skoMC1 (+ (- 2.) (* skoMC1 (- 3.)))) (* skoSC1 (+ (* skoMC1 (+ (/ 1. 6.) (* skoMC1 (- 1.)))) (* skoSC1 (* skoMC1 (/ 1. 4.))))))))) (* skoMC1 (+ (- 2.) (* skoMC1 (- 5.))))) (<= (* skoSC1 (+ (* skoMC1 (+ 1. (* skoMC1 (- 3.)))) (* skoSC1 (+ (* skoMC1 (+ 2. (* skoMC1 3.))) (* skoSC1 (+ (* skoMC1 (+ (/ (- 1.) 6.) skoMC1)) (* skoSC1 (* skoMC1 (/ (- 1.) 4.))))))))) (* skoMC1 (+ 2. (* skoMC1 5.)))))))))))))))))))))))

% In GRF format:
(sequent " MetiTarski formula " (antecedent (<= (* skoSC1 (* skoMC1 (* skoMC1 (* skoMC1 (- 1.))))) (* skoMC1 (* skoMC1 skoMC1))) (<= (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (+ (- 2.) (* skoMC1 (- 12.)))))) (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (+ 1. (* skoMC1 (- 6.)))))) (* skoSC1 (+ (* skoMC1 (* skoMC1 skoMC1)) (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (/ (- 1.) 12.)))) (* skoSC1 (* skoMC1 (* skoMC1 (* skoMC1 (/ (- 1.) 12.))))))))))))) (* skoMC1 (* skoMC1 (* skoMC1 (+ 2. (* skoMC1 6.)))))) (<= (* skoSC1 (* skoMC1 (* skoMC1 (* skoMC1 (- 2.))))) (* skoMC1 (* skoMC1 (* skoMC1 2.)))) (> (* skoSC1 (* skoMC1 (* skoMC1 (* skoMC1 2.)))) (* skoMC1 (* skoMC1 (* skoMC1 (- 2.))))) (<= (* skoMC1 (* skoMC1 (* skoMC1 (- 1.)))) 0.) (> (* skoSC1 (* skoMC1 (* skoMC1 skoMC1))) (* skoMC1 (* skoMC1 (* skoMC1 (- 1.))))) (<= (* skoMC1 (* skoMC1 (* skoMC1 (- 2.)))) 0.) (> (* skoMC1 (* skoMC1 (* skoMC1 2.))) 0.) (<= skoSC1 (/ 5. 4.)) (<= 2. skoMC1) (<= 0. skoSC1) (> skoMC1 0.) (<= 0. skoMC1) (> (* skoSC1 skoMC1) (* skoMC1 (- 1.))) (<= (* skoSC1 (* skoMC1 (- 1.))) skoMC1) (> (* skoSC1 (+ (* skoMC1 (+ (- 1.) (* skoMC1 3.))) (* skoSC1 (+ (* skoMC1 (+ (- 2.) (* skoMC1 (- 3.)))) (* skoSC1 (+ (* skoMC1 (* skoMC1 (- 1.))) (* skoSC1 (* skoMC1 (/ 1. 12.))))))))) (* skoMC1 (+ (- 2.) (* skoMC1 (- 5.))))) (<= (* skoSC1 (+ (* skoMC1 (+ 1. (* skoMC1 (- 3.)))) (* skoSC1 (+ (* skoMC1 (+ 2. (* skoMC1 3.))) (* skoSC1 (+ (* skoMC1 skoMC1) (* skoSC1 (* skoMC1 (/ (- 1.) 12.))))))))) (* skoMC1 (+ 2. (* skoMC1 5.)))) (> (* skoSC1 (+ (* skoMC1 (+ (- 1.) (* skoMC1 3.))) (* skoSC1 (+ (* skoMC1 (+ (- 2.) (* skoMC1 (- 3.)))) (* skoSC1 (+ (* skoMC1 (+ (/ 1. 6.) (* skoMC1 (- 1.)))) (* skoSC1 (* skoMC1 (/ 1. 4.))))))))) (* skoMC1 (+ (- 2.) (* skoMC1 (- 5.)))))) (succedent (> (* skoSC1 (+ (* skoMC1 (+ 1. (* skoMC1 (- 3.)))) (* skoSC1 (+ (* skoMC1 (+ 2. (* skoMC1 3.))) (* skoSC1 (+ (* skoMC1 (+ (/ (- 1.) 6.) skoMC1)) (* skoSC1 (* skoMC1 (/ (- 1.) 4.))))))))) (* skoMC1 (+ 2. (* skoMC1 5.))))))
-----[end problem]-----

-----[begin problem]-----
% In Mathematica format:
Timing[Resolve[Exists[{skoSC1,skoMC1}, And[skoSC1*skoMC1*skoMC1*skoMC1*-1<=skoMC1*skoMC1*skoMC1,skoSC1*skoMC1*skoMC1*skoMC1>skoMC1*skoMC1*skoMC1*-1,skoSC1*(skoMC1*skoMC1*skoMC1*(-2+skoMC1*-12)+skoSC1*(skoMC1*skoMC1*skoMC1*(1+skoMC1*-6)+skoSC1*(skoMC1*skoMC1*skoMC1+skoSC1*(skoMC1*skoMC1*skoMC1*(-1/12)+skoSC1*skoMC1*skoMC1*skoMC1*(-1/12)))))<=skoMC1*skoMC1*skoMC1*(2+skoMC1*6),skoSC1*skoMC1*skoMC1*skoMC1*-2<=skoMC1*skoMC1*skoMC1*2,skoSC1*skoMC1*skoMC1*skoMC1*2>skoMC1*skoMC1*skoMC1*-2,skoMC1*skoMC1*skoMC1*-1<=0,skoSC1*skoMC1*skoMC1*skoMC1>skoMC1*skoMC1*skoMC1*-1,skoMC1*skoMC1*skoMC1*-2<=0,skoMC1*skoMC1*skoMC1*2>0,skoSC1<=(5/4),2<=skoMC1,0<=skoSC1,skoMC1>0,0<=skoMC1,skoSC1*skoMC1>skoMC1*-1,skoSC1*skoMC1*-1<=skoMC1,skoSC1*(skoMC1*(-1+skoMC1*3)+skoSC1*(skoMC1*(-2+skoMC1*-3)+skoSC1*(skoMC1*skoMC1*-1+skoSC1*skoMC1*(1/12))))>skoMC1*(-2+skoMC1*-5),skoSC1*(skoMC1*(1+skoMC1*-3)+skoSC1*(skoMC1*(2+skoMC1*3)+skoSC1*(skoMC1*skoMC1+skoSC1*skoMC1*(-1/12))))<=skoMC1*(2+skoMC1*5),skoSC1*(skoMC1*(-1+skoMC1*3)+skoSC1*(skoMC1*(-2+skoMC1*-3)+skoSC1*(skoMC1*((1/6)+skoMC1*-1)+skoSC1*skoMC1*(1/4))))>skoMC1*(-2+skoMC1*-5),skoSC1*(skoMC1*(1+skoMC1*-3)+skoSC1*(skoMC1*(2+skoMC1*3)+skoSC1*(skoMC1*((-1/6)+skoMC1)+skoSC1*skoMC1*(-1/4))))<=skoMC1*(2+skoMC1*5)]], Reals]]

% In QepcadB format:
(E skoSC1) (E skoMC1) [[(skoSC1 skoMC1 skoMC1 skoMC1 (-1))<=(skoMC1 skoMC1 skoMC1)]/\[[(skoMC1 skoMC1 skoMC1 (-1))<(skoSC1 skoMC1 skoMC1 skoMC1)]/\[[(skoSC1 ((skoMC1 skoMC1 skoMC1 (-2+(skoMC1 (-12))))+(skoSC1 ((skoMC1 skoMC1 skoMC1 (1+(skoMC1 (-6))))+(skoSC1 ((skoMC1 skoMC1 skoMC1)+(skoSC1 ((skoMC1 skoMC1 skoMC1 (-1/12))+(skoSC1 skoMC1 skoMC1 skoMC1 (-1/12))))))))))<=(skoMC1 skoMC1 skoMC1 (2+(skoMC1 (6))))]/\[[(skoSC1 skoMC1 skoMC1 skoMC1 (-2))<=(skoMC1 skoMC1 skoMC1 (2))]/\[[(skoMC1 skoMC1 skoMC1 (-2))<(skoSC1 skoMC1 skoMC1 skoMC1 (2))]/\[[(skoMC1 skoMC1 skoMC1 (-1))<=0]/\[[(skoMC1 skoMC1 skoMC1 (-1))<(skoSC1 skoMC1 skoMC1 skoMC1)]/\[[(skoMC1 skoMC1 skoMC1 (-2))<=0]/\[[0<(skoMC1 skoMC1 skoMC1 (2))]/\[[skoSC1<=5/4]/\[[2<=skoMC1]/\[[0<=skoSC1]/\[[0<skoMC1]/\[[0<=skoMC1]/\[[(skoMC1 (-1))<(skoSC1 skoMC1)]/\[[(skoSC1 skoMC1 (-1))<=skoMC1]/\[[(skoMC1 (-2+(skoMC1 (-5))))<(skoSC1 ((skoMC1 (-1+(skoMC1 (3))))+(skoSC1 ((skoMC1 (-2+(skoMC1 (-3))))+(skoSC1 ((skoMC1 skoMC1 (-1))+(skoSC1 skoMC1 (1/12))))))))]/\[[(skoSC1 ((skoMC1 (1+(skoMC1 (-3))))+(skoSC1 ((skoMC1 (2+(skoMC1 (3))))+(skoSC1 ((skoMC1 skoMC1)+(skoSC1 skoMC1 (-1/12))))))))<=(skoMC1 (2+(skoMC1 (5))))]/\[[(skoMC1 (-2+(skoMC1 (-5))))<(skoSC1 ((skoMC1 (-1+(skoMC1 (3))))+(skoSC1 ((skoMC1 (-2+(skoMC1 (-3))))+(skoSC1 ((skoMC1 (1/6+(skoMC1 (-1))))+(skoSC1 skoMC1 (1/4))))))))]/\[(skoSC1 ((skoMC1 (1+(skoMC1 (-3))))+(skoSC1 ((skoMC1 (2+(skoMC1 (3))))+(skoSC1 ((skoMC1 (-1/6+skoMC1))+(skoSC1 skoMC1 (-1/4))))))))<=(skoMC1 (2+(skoMC1 (5))))]]]]]]]]]]]]]]]]]]]].

% In SMTLib2 format:
(declare-fun skoSC1 () Real) (declare-fun skoMC1 () Real) (assert (and (<= (* skoSC1 (* skoMC1 (* skoMC1 (* skoMC1 (- 1.))))) (* skoMC1 (* skoMC1 skoMC1))) (and (> (* skoSC1 (* skoMC1 (* skoMC1 skoMC1))) (* skoMC1 (* skoMC1 (* skoMC1 (- 1.))))) (and (<= (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (+ (- 2.) (* skoMC1 (- 12.)))))) (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (+ 1. (* skoMC1 (- 6.)))))) (* skoSC1 (+ (* skoMC1 (* skoMC1 skoMC1)) (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (/ (- 1.) 12.)))) (* skoSC1 (* skoMC1 (* skoMC1 (* skoMC1 (/ (- 1.) 12.))))))))))))) (* skoMC1 (* skoMC1 (* skoMC1 (+ 2. (* skoMC1 6.)))))) (and (<= (* skoSC1 (* skoMC1 (* skoMC1 (* skoMC1 (- 2.))))) (* skoMC1 (* skoMC1 (* skoMC1 2.)))) (and (> (* skoSC1 (* skoMC1 (* skoMC1 (* skoMC1 2.)))) (* skoMC1 (* skoMC1 (* skoMC1 (- 2.))))) (and (<= (* skoMC1 (* skoMC1 (* skoMC1 (- 1.)))) 0.) (and (> (* skoSC1 (* skoMC1 (* skoMC1 skoMC1))) (* skoMC1 (* skoMC1 (* skoMC1 (- 1.))))) (and (<= (* skoMC1 (* skoMC1 (* skoMC1 (- 2.)))) 0.) (and (> (* skoMC1 (* skoMC1 (* skoMC1 2.))) 0.) (and (<= skoSC1 (/ 5. 4.)) (and (<= 2. skoMC1) (and (<= 0. skoSC1) (and (> skoMC1 0.) (and (<= 0. skoMC1) (and (> (* skoSC1 skoMC1) (* skoMC1 (- 1.))) (and (<= (* skoSC1 (* skoMC1 (- 1.))) skoMC1) (and (> (* skoSC1 (+ (* skoMC1 (+ (- 1.) (* skoMC1 3.))) (* skoSC1 (+ (* skoMC1 (+ (- 2.) (* skoMC1 (- 3.)))) (* skoSC1 (+ (* skoMC1 (* skoMC1 (- 1.))) (* skoSC1 (* skoMC1 (/ 1. 12.))))))))) (* skoMC1 (+ (- 2.) (* skoMC1 (- 5.))))) (and (<= (* skoSC1 (+ (* skoMC1 (+ 1. (* skoMC1 (- 3.)))) (* skoSC1 (+ (* skoMC1 (+ 2. (* skoMC1 3.))) (* skoSC1 (+ (* skoMC1 skoMC1) (* skoSC1 (* skoMC1 (/ (- 1.) 12.))))))))) (* skoMC1 (+ 2. (* skoMC1 5.)))) (and (> (* skoSC1 (+ (* skoMC1 (+ (- 1.) (* skoMC1 3.))) (* skoSC1 (+ (* skoMC1 (+ (- 2.) (* skoMC1 (- 3.)))) (* skoSC1 (+ (* skoMC1 (+ (/ 1. 6.) (* skoMC1 (- 1.)))) (* skoSC1 (* skoMC1 (/ 1. 4.))))))))) (* skoMC1 (+ (- 2.) (* skoMC1 (- 5.))))) (<= (* skoSC1 (+ (* skoMC1 (+ 1. (* skoMC1 (- 3.)))) (* skoSC1 (+ (* skoMC1 (+ 2. (* skoMC1 3.))) (* skoSC1 (+ (* skoMC1 (+ (/ (- 1.) 6.) skoMC1)) (* skoSC1 (* skoMC1 (/ (- 1.) 4.))))))))) (* skoMC1 (+ 2. (* skoMC1 5.))))))))))))))))))))))))

% In GRF format:
(sequent " MetiTarski formula " (antecedent (<= (* skoSC1 (* skoMC1 (* skoMC1 (* skoMC1 (- 1.))))) (* skoMC1 (* skoMC1 skoMC1))) (> (* skoSC1 (* skoMC1 (* skoMC1 skoMC1))) (* skoMC1 (* skoMC1 (* skoMC1 (- 1.))))) (<= (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (+ (- 2.) (* skoMC1 (- 12.)))))) (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (+ 1. (* skoMC1 (- 6.)))))) (* skoSC1 (+ (* skoMC1 (* skoMC1 skoMC1)) (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (/ (- 1.) 12.)))) (* skoSC1 (* skoMC1 (* skoMC1 (* skoMC1 (/ (- 1.) 12.))))))))))))) (* skoMC1 (* skoMC1 (* skoMC1 (+ 2. (* skoMC1 6.)))))) (<= (* skoSC1 (* skoMC1 (* skoMC1 (* skoMC1 (- 2.))))) (* skoMC1 (* skoMC1 (* skoMC1 2.)))) (> (* skoSC1 (* skoMC1 (* skoMC1 (* skoMC1 2.)))) (* skoMC1 (* skoMC1 (* skoMC1 (- 2.))))) (<= (* skoMC1 (* skoMC1 (* skoMC1 (- 1.)))) 0.) (> (* skoSC1 (* skoMC1 (* skoMC1 skoMC1))) (* skoMC1 (* skoMC1 (* skoMC1 (- 1.))))) (<= (* skoMC1 (* skoMC1 (* skoMC1 (- 2.)))) 0.) (> (* skoMC1 (* skoMC1 (* skoMC1 2.))) 0.) (<= skoSC1 (/ 5. 4.)) (<= 2. skoMC1) (<= 0. skoSC1) (> skoMC1 0.) (<= 0. skoMC1) (> (* skoSC1 skoMC1) (* skoMC1 (- 1.))) (<= (* skoSC1 (* skoMC1 (- 1.))) skoMC1) (> (* skoSC1 (+ (* skoMC1 (+ (- 1.) (* skoMC1 3.))) (* skoSC1 (+ (* skoMC1 (+ (- 2.) (* skoMC1 (- 3.)))) (* skoSC1 (+ (* skoMC1 (* skoMC1 (- 1.))) (* skoSC1 (* skoMC1 (/ 1. 12.))))))))) (* skoMC1 (+ (- 2.) (* skoMC1 (- 5.))))) (<= (* skoSC1 (+ (* skoMC1 (+ 1. (* skoMC1 (- 3.)))) (* skoSC1 (+ (* skoMC1 (+ 2. (* skoMC1 3.))) (* skoSC1 (+ (* skoMC1 skoMC1) (* skoSC1 (* skoMC1 (/ (- 1.) 12.))))))))) (* skoMC1 (+ 2. (* skoMC1 5.)))) (> (* skoSC1 (+ (* skoMC1 (+ (- 1.) (* skoMC1 3.))) (* skoSC1 (+ (* skoMC1 (+ (- 2.) (* skoMC1 (- 3.)))) (* skoSC1 (+ (* skoMC1 (+ (/ 1. 6.) (* skoMC1 (- 1.)))) (* skoSC1 (* skoMC1 (/ 1. 4.))))))))) (* skoMC1 (+ (- 2.) (* skoMC1 (- 5.)))))) (succedent (> (* skoSC1 (+ (* skoMC1 (+ 1. (* skoMC1 (- 3.)))) (* skoSC1 (+ (* skoMC1 (+ 2. (* skoMC1 3.))) (* skoSC1 (+ (* skoMC1 (+ (/ (- 1.) 6.) skoMC1)) (* skoSC1 (* skoMC1 (/ (- 1.) 4.))))))))) (* skoMC1 (+ 2. (* skoMC1 5.))))))
-----[end problem]-----

-----[begin problem]-----
% In Mathematica format:
Timing[Resolve[Exists[{skoSC1,skoMC1}, And[skoSC1*skoMC1*skoMC1*skoMC1*-1<=skoMC1*skoMC1*skoMC1,skoMC1*skoMC1*skoMC1*2>0,skoSC1*(skoMC1*skoMC1*skoMC1*(-2+skoMC1*-12)+skoSC1*(skoMC1*skoMC1*skoMC1*(1+skoMC1*-6)+skoSC1*(skoMC1*skoMC1*skoMC1+skoSC1*(skoMC1*skoMC1*skoMC1*(-1/12)+skoSC1*skoMC1*skoMC1*skoMC1*(-1/12)))))<=skoMC1*skoMC1*skoMC1*(2+skoMC1*6),skoSC1*skoMC1*skoMC1*skoMC1*-2<=skoMC1*skoMC1*skoMC1*2,skoSC1*skoMC1*skoMC1*skoMC1*2>skoMC1*skoMC1*skoMC1*-2,skoMC1*skoMC1*skoMC1*-1<=0,skoSC1*skoMC1*skoMC1*skoMC1>skoMC1*skoMC1*skoMC1*-1,skoMC1*skoMC1*skoMC1*-2<=0,skoMC1*skoMC1*skoMC1*2>0,skoSC1<=(5/4),2<=skoMC1,0<=skoSC1,skoMC1>0,0<=skoMC1,skoSC1*skoMC1>skoMC1*-1,skoSC1*skoMC1*-1<=skoMC1,skoSC1*(skoMC1*(-1+skoMC1*3)+skoSC1*(skoMC1*(-2+skoMC1*-3)+skoSC1*(skoMC1*skoMC1*-1+skoSC1*skoMC1*(1/12))))>skoMC1*(-2+skoMC1*-5),skoSC1*(skoMC1*(1+skoMC1*-3)+skoSC1*(skoMC1*(2+skoMC1*3)+skoSC1*(skoMC1*skoMC1+skoSC1*skoMC1*(-1/12))))<=skoMC1*(2+skoMC1*5),skoSC1*(skoMC1*(-1+skoMC1*3)+skoSC1*(skoMC1*(-2+skoMC1*-3)+skoSC1*(skoMC1*((1/6)+skoMC1*-1)+skoSC1*skoMC1*(1/4))))>skoMC1*(-2+skoMC1*-5),skoSC1*(skoMC1*(1+skoMC1*-3)+skoSC1*(skoMC1*(2+skoMC1*3)+skoSC1*(skoMC1*((-1/6)+skoMC1)+skoSC1*skoMC1*(-1/4))))<=skoMC1*(2+skoMC1*5)]], Reals]]

% In QepcadB format:
(E skoSC1) (E skoMC1) [[(skoSC1 skoMC1 skoMC1 skoMC1 (-1))<=(skoMC1 skoMC1 skoMC1)]/\[[0<(skoMC1 skoMC1 skoMC1 (2))]/\[[(skoSC1 ((skoMC1 skoMC1 skoMC1 (-2+(skoMC1 (-12))))+(skoSC1 ((skoMC1 skoMC1 skoMC1 (1+(skoMC1 (-6))))+(skoSC1 ((skoMC1 skoMC1 skoMC1)+(skoSC1 ((skoMC1 skoMC1 skoMC1 (-1/12))+(skoSC1 skoMC1 skoMC1 skoMC1 (-1/12))))))))))<=(skoMC1 skoMC1 skoMC1 (2+(skoMC1 (6))))]/\[[(skoSC1 skoMC1 skoMC1 skoMC1 (-2))<=(skoMC1 skoMC1 skoMC1 (2))]/\[[(skoMC1 skoMC1 skoMC1 (-2))<(skoSC1 skoMC1 skoMC1 skoMC1 (2))]/\[[(skoMC1 skoMC1 skoMC1 (-1))<=0]/\[[(skoMC1 skoMC1 skoMC1 (-1))<(skoSC1 skoMC1 skoMC1 skoMC1)]/\[[(skoMC1 skoMC1 skoMC1 (-2))<=0]/\[[0<(skoMC1 skoMC1 skoMC1 (2))]/\[[skoSC1<=5/4]/\[[2<=skoMC1]/\[[0<=skoSC1]/\[[0<skoMC1]/\[[0<=skoMC1]/\[[(skoMC1 (-1))<(skoSC1 skoMC1)]/\[[(skoSC1 skoMC1 (-1))<=skoMC1]/\[[(skoMC1 (-2+(skoMC1 (-5))))<(skoSC1 ((skoMC1 (-1+(skoMC1 (3))))+(skoSC1 ((skoMC1 (-2+(skoMC1 (-3))))+(skoSC1 ((skoMC1 skoMC1 (-1))+(skoSC1 skoMC1 (1/12))))))))]/\[[(skoSC1 ((skoMC1 (1+(skoMC1 (-3))))+(skoSC1 ((skoMC1 (2+(skoMC1 (3))))+(skoSC1 ((skoMC1 skoMC1)+(skoSC1 skoMC1 (-1/12))))))))<=(skoMC1 (2+(skoMC1 (5))))]/\[[(skoMC1 (-2+(skoMC1 (-5))))<(skoSC1 ((skoMC1 (-1+(skoMC1 (3))))+(skoSC1 ((skoMC1 (-2+(skoMC1 (-3))))+(skoSC1 ((skoMC1 (1/6+(skoMC1 (-1))))+(skoSC1 skoMC1 (1/4))))))))]/\[(skoSC1 ((skoMC1 (1+(skoMC1 (-3))))+(skoSC1 ((skoMC1 (2+(skoMC1 (3))))+(skoSC1 ((skoMC1 (-1/6+skoMC1))+(skoSC1 skoMC1 (-1/4))))))))<=(skoMC1 (2+(skoMC1 (5))))]]]]]]]]]]]]]]]]]]]].

% In SMTLib2 format:
(declare-fun skoSC1 () Real) (declare-fun skoMC1 () Real) (assert (and (<= (* skoSC1 (* skoMC1 (* skoMC1 (* skoMC1 (- 1.))))) (* skoMC1 (* skoMC1 skoMC1))) (and (> (* skoMC1 (* skoMC1 (* skoMC1 2.))) 0.) (and (<= (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (+ (- 2.) (* skoMC1 (- 12.)))))) (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (+ 1. (* skoMC1 (- 6.)))))) (* skoSC1 (+ (* skoMC1 (* skoMC1 skoMC1)) (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (/ (- 1.) 12.)))) (* skoSC1 (* skoMC1 (* skoMC1 (* skoMC1 (/ (- 1.) 12.))))))))))))) (* skoMC1 (* skoMC1 (* skoMC1 (+ 2. (* skoMC1 6.)))))) (and (<= (* skoSC1 (* skoMC1 (* skoMC1 (* skoMC1 (- 2.))))) (* skoMC1 (* skoMC1 (* skoMC1 2.)))) (and (> (* skoSC1 (* skoMC1 (* skoMC1 (* skoMC1 2.)))) (* skoMC1 (* skoMC1 (* skoMC1 (- 2.))))) (and (<= (* skoMC1 (* skoMC1 (* skoMC1 (- 1.)))) 0.) (and (> (* skoSC1 (* skoMC1 (* skoMC1 skoMC1))) (* skoMC1 (* skoMC1 (* skoMC1 (- 1.))))) (and (<= (* skoMC1 (* skoMC1 (* skoMC1 (- 2.)))) 0.) (and (> (* skoMC1 (* skoMC1 (* skoMC1 2.))) 0.) (and (<= skoSC1 (/ 5. 4.)) (and (<= 2. skoMC1) (and (<= 0. skoSC1) (and (> skoMC1 0.) (and (<= 0. skoMC1) (and (> (* skoSC1 skoMC1) (* skoMC1 (- 1.))) (and (<= (* skoSC1 (* skoMC1 (- 1.))) skoMC1) (and (> (* skoSC1 (+ (* skoMC1 (+ (- 1.) (* skoMC1 3.))) (* skoSC1 (+ (* skoMC1 (+ (- 2.) (* skoMC1 (- 3.)))) (* skoSC1 (+ (* skoMC1 (* skoMC1 (- 1.))) (* skoSC1 (* skoMC1 (/ 1. 12.))))))))) (* skoMC1 (+ (- 2.) (* skoMC1 (- 5.))))) (and (<= (* skoSC1 (+ (* skoMC1 (+ 1. (* skoMC1 (- 3.)))) (* skoSC1 (+ (* skoMC1 (+ 2. (* skoMC1 3.))) (* skoSC1 (+ (* skoMC1 skoMC1) (* skoSC1 (* skoMC1 (/ (- 1.) 12.))))))))) (* skoMC1 (+ 2. (* skoMC1 5.)))) (and (> (* skoSC1 (+ (* skoMC1 (+ (- 1.) (* skoMC1 3.))) (* skoSC1 (+ (* skoMC1 (+ (- 2.) (* skoMC1 (- 3.)))) (* skoSC1 (+ (* skoMC1 (+ (/ 1. 6.) (* skoMC1 (- 1.)))) (* skoSC1 (* skoMC1 (/ 1. 4.))))))))) (* skoMC1 (+ (- 2.) (* skoMC1 (- 5.))))) (<= (* skoSC1 (+ (* skoMC1 (+ 1. (* skoMC1 (- 3.)))) (* skoSC1 (+ (* skoMC1 (+ 2. (* skoMC1 3.))) (* skoSC1 (+ (* skoMC1 (+ (/ (- 1.) 6.) skoMC1)) (* skoSC1 (* skoMC1 (/ (- 1.) 4.))))))))) (* skoMC1 (+ 2. (* skoMC1 5.))))))))))))))))))))))))

% In GRF format:
(sequent " MetiTarski formula " (antecedent (<= (* skoSC1 (* skoMC1 (* skoMC1 (* skoMC1 (- 1.))))) (* skoMC1 (* skoMC1 skoMC1))) (> (* skoMC1 (* skoMC1 (* skoMC1 2.))) 0.) (<= (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (+ (- 2.) (* skoMC1 (- 12.)))))) (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (+ 1. (* skoMC1 (- 6.)))))) (* skoSC1 (+ (* skoMC1 (* skoMC1 skoMC1)) (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (/ (- 1.) 12.)))) (* skoSC1 (* skoMC1 (* skoMC1 (* skoMC1 (/ (- 1.) 12.))))))))))))) (* skoMC1 (* skoMC1 (* skoMC1 (+ 2. (* skoMC1 6.)))))) (<= (* skoSC1 (* skoMC1 (* skoMC1 (* skoMC1 (- 2.))))) (* skoMC1 (* skoMC1 (* skoMC1 2.)))) (> (* skoSC1 (* skoMC1 (* skoMC1 (* skoMC1 2.)))) (* skoMC1 (* skoMC1 (* skoMC1 (- 2.))))) (<= (* skoMC1 (* skoMC1 (* skoMC1 (- 1.)))) 0.) (> (* skoSC1 (* skoMC1 (* skoMC1 skoMC1))) (* skoMC1 (* skoMC1 (* skoMC1 (- 1.))))) (<= (* skoMC1 (* skoMC1 (* skoMC1 (- 2.)))) 0.) (> (* skoMC1 (* skoMC1 (* skoMC1 2.))) 0.) (<= skoSC1 (/ 5. 4.)) (<= 2. skoMC1) (<= 0. skoSC1) (> skoMC1 0.) (<= 0. skoMC1) (> (* skoSC1 skoMC1) (* skoMC1 (- 1.))) (<= (* skoSC1 (* skoMC1 (- 1.))) skoMC1) (> (* skoSC1 (+ (* skoMC1 (+ (- 1.) (* skoMC1 3.))) (* skoSC1 (+ (* skoMC1 (+ (- 2.) (* skoMC1 (- 3.)))) (* skoSC1 (+ (* skoMC1 (* skoMC1 (- 1.))) (* skoSC1 (* skoMC1 (/ 1. 12.))))))))) (* skoMC1 (+ (- 2.) (* skoMC1 (- 5.))))) (<= (* skoSC1 (+ (* skoMC1 (+ 1. (* skoMC1 (- 3.)))) (* skoSC1 (+ (* skoMC1 (+ 2. (* skoMC1 3.))) (* skoSC1 (+ (* skoMC1 skoMC1) (* skoSC1 (* skoMC1 (/ (- 1.) 12.))))))))) (* skoMC1 (+ 2. (* skoMC1 5.)))) (> (* skoSC1 (+ (* skoMC1 (+ (- 1.) (* skoMC1 3.))) (* skoSC1 (+ (* skoMC1 (+ (- 2.) (* skoMC1 (- 3.)))) (* skoSC1 (+ (* skoMC1 (+ (/ 1. 6.) (* skoMC1 (- 1.)))) (* skoSC1 (* skoMC1 (/ 1. 4.))))))))) (* skoMC1 (+ (- 2.) (* skoMC1 (- 5.)))))) (succedent (> (* skoSC1 (+ (* skoMC1 (+ 1. (* skoMC1 (- 3.)))) (* skoSC1 (+ (* skoMC1 (+ 2. (* skoMC1 3.))) (* skoSC1 (+ (* skoMC1 (+ (/ (- 1.) 6.) skoMC1)) (* skoSC1 (* skoMC1 (/ (- 1.) 4.))))))))) (* skoMC1 (+ 2. (* skoMC1 5.))))))
-----[end problem]-----

-----[begin problem]-----
% In Mathematica format:
Timing[Resolve[Exists[{skoSC1,skoMC1}, And[skoMC1*skoMC1*skoMC1*-2<=0,skoSC1*(skoMC1*skoMC1*skoMC1*(-2+skoMC1*-12)+skoSC1*(skoMC1*skoMC1*skoMC1*(1+skoMC1*-6)+skoSC1*(skoMC1*skoMC1*skoMC1+skoSC1*(skoMC1*skoMC1*skoMC1*(-1/12)+skoSC1*skoMC1*skoMC1*skoMC1*(-1/12)))))<=skoMC1*skoMC1*skoMC1*(2+skoMC1*6),skoSC1*skoMC1*skoMC1*skoMC1*-2<=skoMC1*skoMC1*skoMC1*2,skoSC1*skoMC1*skoMC1*skoMC1*2>skoMC1*skoMC1*skoMC1*-2,skoMC1*skoMC1*skoMC1*-1<=0,skoSC1*skoMC1*skoMC1*skoMC1>skoMC1*skoMC1*skoMC1*-1,skoMC1*skoMC1*skoMC1*-2<=0,skoMC1*skoMC1*skoMC1*2>0,skoSC1<=(5/4),2<=skoMC1,0<=skoSC1,skoMC1>0,0<=skoMC1,skoSC1*skoMC1>skoMC1*-1,skoSC1*skoMC1*-1<=skoMC1,skoSC1*(skoMC1*(-1+skoMC1*3)+skoSC1*(skoMC1*(-2+skoMC1*-3)+skoSC1*(skoMC1*skoMC1*-1+skoSC1*skoMC1*(1/12))))>skoMC1*(-2+skoMC1*-5),skoSC1*(skoMC1*(1+skoMC1*-3)+skoSC1*(skoMC1*(2+skoMC1*3)+skoSC1*(skoMC1*skoMC1+skoSC1*skoMC1*(-1/12))))<=skoMC1*(2+skoMC1*5),skoSC1*(skoMC1*(-1+skoMC1*3)+skoSC1*(skoMC1*(-2+skoMC1*-3)+skoSC1*(skoMC1*((1/6)+skoMC1*-1)+skoSC1*skoMC1*(1/4))))>skoMC1*(-2+skoMC1*-5),skoSC1*(skoMC1*(1+skoMC1*-3)+skoSC1*(skoMC1*(2+skoMC1*3)+skoSC1*(skoMC1*((-1/6)+skoMC1)+skoSC1*skoMC1*(-1/4))))<=skoMC1*(2+skoMC1*5)]], Reals]]

% In QepcadB format:
(E skoSC1) (E skoMC1) [[(skoMC1 skoMC1 skoMC1 (-2))<=0]/\[[(skoSC1 ((skoMC1 skoMC1 skoMC1 (-2+(skoMC1 (-12))))+(skoSC1 ((skoMC1 skoMC1 skoMC1 (1+(skoMC1 (-6))))+(skoSC1 ((skoMC1 skoMC1 skoMC1)+(skoSC1 ((skoMC1 skoMC1 skoMC1 (-1/12))+(skoSC1 skoMC1 skoMC1 skoMC1 (-1/12))))))))))<=(skoMC1 skoMC1 skoMC1 (2+(skoMC1 (6))))]/\[[(skoSC1 skoMC1 skoMC1 skoMC1 (-2))<=(skoMC1 skoMC1 skoMC1 (2))]/\[[(skoMC1 skoMC1 skoMC1 (-2))<(skoSC1 skoMC1 skoMC1 skoMC1 (2))]/\[[(skoMC1 skoMC1 skoMC1 (-1))<=0]/\[[(skoMC1 skoMC1 skoMC1 (-1))<(skoSC1 skoMC1 skoMC1 skoMC1)]/\[[(skoMC1 skoMC1 skoMC1 (-2))<=0]/\[[0<(skoMC1 skoMC1 skoMC1 (2))]/\[[skoSC1<=5/4]/\[[2<=skoMC1]/\[[0<=skoSC1]/\[[0<skoMC1]/\[[0<=skoMC1]/\[[(skoMC1 (-1))<(skoSC1 skoMC1)]/\[[(skoSC1 skoMC1 (-1))<=skoMC1]/\[[(skoMC1 (-2+(skoMC1 (-5))))<(skoSC1 ((skoMC1 (-1+(skoMC1 (3))))+(skoSC1 ((skoMC1 (-2+(skoMC1 (-3))))+(skoSC1 ((skoMC1 skoMC1 (-1))+(skoSC1 skoMC1 (1/12))))))))]/\[[(skoSC1 ((skoMC1 (1+(skoMC1 (-3))))+(skoSC1 ((skoMC1 (2+(skoMC1 (3))))+(skoSC1 ((skoMC1 skoMC1)+(skoSC1 skoMC1 (-1/12))))))))<=(skoMC1 (2+(skoMC1 (5))))]/\[[(skoMC1 (-2+(skoMC1 (-5))))<(skoSC1 ((skoMC1 (-1+(skoMC1 (3))))+(skoSC1 ((skoMC1 (-2+(skoMC1 (-3))))+(skoSC1 ((skoMC1 (1/6+(skoMC1 (-1))))+(skoSC1 skoMC1 (1/4))))))))]/\[(skoSC1 ((skoMC1 (1+(skoMC1 (-3))))+(skoSC1 ((skoMC1 (2+(skoMC1 (3))))+(skoSC1 ((skoMC1 (-1/6+skoMC1))+(skoSC1 skoMC1 (-1/4))))))))<=(skoMC1 (2+(skoMC1 (5))))]]]]]]]]]]]]]]]]]]].

% In SMTLib2 format:
(declare-fun skoSC1 () Real) (declare-fun skoMC1 () Real) (assert (and (<= (* skoMC1 (* skoMC1 (* skoMC1 (- 2.)))) 0.) (and (<= (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (+ (- 2.) (* skoMC1 (- 12.)))))) (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (+ 1. (* skoMC1 (- 6.)))))) (* skoSC1 (+ (* skoMC1 (* skoMC1 skoMC1)) (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (/ (- 1.) 12.)))) (* skoSC1 (* skoMC1 (* skoMC1 (* skoMC1 (/ (- 1.) 12.))))))))))))) (* skoMC1 (* skoMC1 (* skoMC1 (+ 2. (* skoMC1 6.)))))) (and (<= (* skoSC1 (* skoMC1 (* skoMC1 (* skoMC1 (- 2.))))) (* skoMC1 (* skoMC1 (* skoMC1 2.)))) (and (> (* skoSC1 (* skoMC1 (* skoMC1 (* skoMC1 2.)))) (* skoMC1 (* skoMC1 (* skoMC1 (- 2.))))) (and (<= (* skoMC1 (* skoMC1 (* skoMC1 (- 1.)))) 0.) (and (> (* skoSC1 (* skoMC1 (* skoMC1 skoMC1))) (* skoMC1 (* skoMC1 (* skoMC1 (- 1.))))) (and (<= (* skoMC1 (* skoMC1 (* skoMC1 (- 2.)))) 0.) (and (> (* skoMC1 (* skoMC1 (* skoMC1 2.))) 0.) (and (<= skoSC1 (/ 5. 4.)) (and (<= 2. skoMC1) (and (<= 0. skoSC1) (and (> skoMC1 0.) (and (<= 0. skoMC1) (and (> (* skoSC1 skoMC1) (* skoMC1 (- 1.))) (and (<= (* skoSC1 (* skoMC1 (- 1.))) skoMC1) (and (> (* skoSC1 (+ (* skoMC1 (+ (- 1.) (* skoMC1 3.))) (* skoSC1 (+ (* skoMC1 (+ (- 2.) (* skoMC1 (- 3.)))) (* skoSC1 (+ (* skoMC1 (* skoMC1 (- 1.))) (* skoSC1 (* skoMC1 (/ 1. 12.))))))))) (* skoMC1 (+ (- 2.) (* skoMC1 (- 5.))))) (and (<= (* skoSC1 (+ (* skoMC1 (+ 1. (* skoMC1 (- 3.)))) (* skoSC1 (+ (* skoMC1 (+ 2. (* skoMC1 3.))) (* skoSC1 (+ (* skoMC1 skoMC1) (* skoSC1 (* skoMC1 (/ (- 1.) 12.))))))))) (* skoMC1 (+ 2. (* skoMC1 5.)))) (and (> (* skoSC1 (+ (* skoMC1 (+ (- 1.) (* skoMC1 3.))) (* skoSC1 (+ (* skoMC1 (+ (- 2.) (* skoMC1 (- 3.)))) (* skoSC1 (+ (* skoMC1 (+ (/ 1. 6.) (* skoMC1 (- 1.)))) (* skoSC1 (* skoMC1 (/ 1. 4.))))))))) (* skoMC1 (+ (- 2.) (* skoMC1 (- 5.))))) (<= (* skoSC1 (+ (* skoMC1 (+ 1. (* skoMC1 (- 3.)))) (* skoSC1 (+ (* skoMC1 (+ 2. (* skoMC1 3.))) (* skoSC1 (+ (* skoMC1 (+ (/ (- 1.) 6.) skoMC1)) (* skoSC1 (* skoMC1 (/ (- 1.) 4.))))))))) (* skoMC1 (+ 2. (* skoMC1 5.)))))))))))))))))))))))

% In GRF format:
(sequent " MetiTarski formula " (antecedent (<= (* skoMC1 (* skoMC1 (* skoMC1 (- 2.)))) 0.) (<= (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (+ (- 2.) (* skoMC1 (- 12.)))))) (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (+ 1. (* skoMC1 (- 6.)))))) (* skoSC1 (+ (* skoMC1 (* skoMC1 skoMC1)) (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (/ (- 1.) 12.)))) (* skoSC1 (* skoMC1 (* skoMC1 (* skoMC1 (/ (- 1.) 12.))))))))))))) (* skoMC1 (* skoMC1 (* skoMC1 (+ 2. (* skoMC1 6.)))))) (<= (* skoSC1 (* skoMC1 (* skoMC1 (* skoMC1 (- 2.))))) (* skoMC1 (* skoMC1 (* skoMC1 2.)))) (> (* skoSC1 (* skoMC1 (* skoMC1 (* skoMC1 2.)))) (* skoMC1 (* skoMC1 (* skoMC1 (- 2.))))) (<= (* skoMC1 (* skoMC1 (* skoMC1 (- 1.)))) 0.) (> (* skoSC1 (* skoMC1 (* skoMC1 skoMC1))) (* skoMC1 (* skoMC1 (* skoMC1 (- 1.))))) (<= (* skoMC1 (* skoMC1 (* skoMC1 (- 2.)))) 0.) (> (* skoMC1 (* skoMC1 (* skoMC1 2.))) 0.) (<= skoSC1 (/ 5. 4.)) (<= 2. skoMC1) (<= 0. skoSC1) (> skoMC1 0.) (<= 0. skoMC1) (> (* skoSC1 skoMC1) (* skoMC1 (- 1.))) (<= (* skoSC1 (* skoMC1 (- 1.))) skoMC1) (> (* skoSC1 (+ (* skoMC1 (+ (- 1.) (* skoMC1 3.))) (* skoSC1 (+ (* skoMC1 (+ (- 2.) (* skoMC1 (- 3.)))) (* skoSC1 (+ (* skoMC1 (* skoMC1 (- 1.))) (* skoSC1 (* skoMC1 (/ 1. 12.))))))))) (* skoMC1 (+ (- 2.) (* skoMC1 (- 5.))))) (<= (* skoSC1 (+ (* skoMC1 (+ 1. (* skoMC1 (- 3.)))) (* skoSC1 (+ (* skoMC1 (+ 2. (* skoMC1 3.))) (* skoSC1 (+ (* skoMC1 skoMC1) (* skoSC1 (* skoMC1 (/ (- 1.) 12.))))))))) (* skoMC1 (+ 2. (* skoMC1 5.)))) (> (* skoSC1 (+ (* skoMC1 (+ (- 1.) (* skoMC1 3.))) (* skoSC1 (+ (* skoMC1 (+ (- 2.) (* skoMC1 (- 3.)))) (* skoSC1 (+ (* skoMC1 (+ (/ 1. 6.) (* skoMC1 (- 1.)))) (* skoSC1 (* skoMC1 (/ 1. 4.))))))))) (* skoMC1 (+ (- 2.) (* skoMC1 (- 5.)))))) (succedent (> (* skoSC1 (+ (* skoMC1 (+ 1. (* skoMC1 (- 3.)))) (* skoSC1 (+ (* skoMC1 (+ 2. (* skoMC1 3.))) (* skoSC1 (+ (* skoMC1 (+ (/ (- 1.) 6.) skoMC1)) (* skoSC1 (* skoMC1 (/ (- 1.) 4.))))))))) (* skoMC1 (+ 2. (* skoMC1 5.))))))
-----[end problem]-----

-----[begin problem]-----
% In Mathematica format:
Timing[Resolve[Exists[{skoSC1,skoMC1}, And[skoMC1*skoMC1*skoMC1*-2<=0,skoSC1*(skoMC1*skoMC1*skoMC1*(-2+skoMC1*-12)+skoSC1*(skoMC1*skoMC1*skoMC1*(1+skoMC1*-6)+skoSC1*(skoMC1*skoMC1*skoMC1+skoSC1*(skoMC1*skoMC1*skoMC1*(-1/12)+skoSC1*skoMC1*skoMC1*skoMC1*(-1/12)))))<=skoMC1*skoMC1*skoMC1*(2+skoMC1*6),skoSC1*skoMC1*skoMC1*skoMC1*-2<=skoMC1*skoMC1*skoMC1*2,skoSC1*skoMC1*skoMC1*skoMC1*2>skoMC1*skoMC1*skoMC1*-2,skoMC1*skoMC1*skoMC1*-1<=0,skoSC1*skoMC1*skoMC1*skoMC1>skoMC1*skoMC1*skoMC1*-1,skoMC1*skoMC1*skoMC1*-2<=0,skoMC1*skoMC1*skoMC1*2>0,skoSC1<=(5/4),2<=skoMC1,0<=skoSC1,skoMC1>0,0<=skoMC1,skoSC1*skoMC1>skoMC1*-1,skoSC1*skoMC1*-1<=skoMC1,skoSC1*(skoMC1*(-1+skoMC1*3)+skoSC1*(skoMC1*(-2+skoMC1*-3)+skoSC1*(skoMC1*skoMC1*-1+skoSC1*skoMC1*(1/12))))>skoMC1*(-2+skoMC1*-5),skoSC1*(skoMC1*(1+skoMC1*-3)+skoSC1*(skoMC1*(2+skoMC1*3)+skoSC1*(skoMC1*skoMC1+skoSC1*skoMC1*(-1/12))))<=skoMC1*(2+skoMC1*5),skoSC1*(skoMC1*(-1+skoMC1*3)+skoSC1*(skoMC1*(-2+skoMC1*-3)+skoSC1*(skoMC1*((1/6)+skoMC1*-1)+skoSC1*skoMC1*(1/4))))>skoMC1*(-2+skoMC1*-5),skoSC1*(skoMC1*(1+skoMC1*-3)+skoSC1*(skoMC1*(2+skoMC1*3)+skoSC1*(skoMC1*((-1/6)+skoMC1)+skoSC1*skoMC1*(-1/4))))<=skoMC1*(2+skoMC1*5)]], Reals]]

% In QepcadB format:
(E skoSC1) (E skoMC1) [[(skoMC1 skoMC1 skoMC1 (-2))<=0]/\[[(skoSC1 ((skoMC1 skoMC1 skoMC1 (-2+(skoMC1 (-12))))+(skoSC1 ((skoMC1 skoMC1 skoMC1 (1+(skoMC1 (-6))))+(skoSC1 ((skoMC1 skoMC1 skoMC1)+(skoSC1 ((skoMC1 skoMC1 skoMC1 (-1/12))+(skoSC1 skoMC1 skoMC1 skoMC1 (-1/12))))))))))<=(skoMC1 skoMC1 skoMC1 (2+(skoMC1 (6))))]/\[[(skoSC1 skoMC1 skoMC1 skoMC1 (-2))<=(skoMC1 skoMC1 skoMC1 (2))]/\[[(skoMC1 skoMC1 skoMC1 (-2))<(skoSC1 skoMC1 skoMC1 skoMC1 (2))]/\[[(skoMC1 skoMC1 skoMC1 (-1))<=0]/\[[(skoMC1 skoMC1 skoMC1 (-1))<(skoSC1 skoMC1 skoMC1 skoMC1)]/\[[(skoMC1 skoMC1 skoMC1 (-2))<=0]/\[[0<(skoMC1 skoMC1 skoMC1 (2))]/\[[skoSC1<=5/4]/\[[2<=skoMC1]/\[[0<=skoSC1]/\[[0<skoMC1]/\[[0<=skoMC1]/\[[(skoMC1 (-1))<(skoSC1 skoMC1)]/\[[(skoSC1 skoMC1 (-1))<=skoMC1]/\[[(skoMC1 (-2+(skoMC1 (-5))))<(skoSC1 ((skoMC1 (-1+(skoMC1 (3))))+(skoSC1 ((skoMC1 (-2+(skoMC1 (-3))))+(skoSC1 ((skoMC1 skoMC1 (-1))+(skoSC1 skoMC1 (1/12))))))))]/\[[(skoSC1 ((skoMC1 (1+(skoMC1 (-3))))+(skoSC1 ((skoMC1 (2+(skoMC1 (3))))+(skoSC1 ((skoMC1 skoMC1)+(skoSC1 skoMC1 (-1/12))))))))<=(skoMC1 (2+(skoMC1 (5))))]/\[[(skoMC1 (-2+(skoMC1 (-5))))<(skoSC1 ((skoMC1 (-1+(skoMC1 (3))))+(skoSC1 ((skoMC1 (-2+(skoMC1 (-3))))+(skoSC1 ((skoMC1 (1/6+(skoMC1 (-1))))+(skoSC1 skoMC1 (1/4))))))))]/\[(skoSC1 ((skoMC1 (1+(skoMC1 (-3))))+(skoSC1 ((skoMC1 (2+(skoMC1 (3))))+(skoSC1 ((skoMC1 (-1/6+skoMC1))+(skoSC1 skoMC1 (-1/4))))))))<=(skoMC1 (2+(skoMC1 (5))))]]]]]]]]]]]]]]]]]]].

% In SMTLib2 format:
(declare-fun skoSC1 () Real) (declare-fun skoMC1 () Real) (assert (and (<= (* skoMC1 (* skoMC1 (* skoMC1 (- 2.)))) 0.) (and (<= (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (+ (- 2.) (* skoMC1 (- 12.)))))) (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (+ 1. (* skoMC1 (- 6.)))))) (* skoSC1 (+ (* skoMC1 (* skoMC1 skoMC1)) (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (/ (- 1.) 12.)))) (* skoSC1 (* skoMC1 (* skoMC1 (* skoMC1 (/ (- 1.) 12.))))))))))))) (* skoMC1 (* skoMC1 (* skoMC1 (+ 2. (* skoMC1 6.)))))) (and (<= (* skoSC1 (* skoMC1 (* skoMC1 (* skoMC1 (- 2.))))) (* skoMC1 (* skoMC1 (* skoMC1 2.)))) (and (> (* skoSC1 (* skoMC1 (* skoMC1 (* skoMC1 2.)))) (* skoMC1 (* skoMC1 (* skoMC1 (- 2.))))) (and (<= (* skoMC1 (* skoMC1 (* skoMC1 (- 1.)))) 0.) (and (> (* skoSC1 (* skoMC1 (* skoMC1 skoMC1))) (* skoMC1 (* skoMC1 (* skoMC1 (- 1.))))) (and (<= (* skoMC1 (* skoMC1 (* skoMC1 (- 2.)))) 0.) (and (> (* skoMC1 (* skoMC1 (* skoMC1 2.))) 0.) (and (<= skoSC1 (/ 5. 4.)) (and (<= 2. skoMC1) (and (<= 0. skoSC1) (and (> skoMC1 0.) (and (<= 0. skoMC1) (and (> (* skoSC1 skoMC1) (* skoMC1 (- 1.))) (and (<= (* skoSC1 (* skoMC1 (- 1.))) skoMC1) (and (> (* skoSC1 (+ (* skoMC1 (+ (- 1.) (* skoMC1 3.))) (* skoSC1 (+ (* skoMC1 (+ (- 2.) (* skoMC1 (- 3.)))) (* skoSC1 (+ (* skoMC1 (* skoMC1 (- 1.))) (* skoSC1 (* skoMC1 (/ 1. 12.))))))))) (* skoMC1 (+ (- 2.) (* skoMC1 (- 5.))))) (and (<= (* skoSC1 (+ (* skoMC1 (+ 1. (* skoMC1 (- 3.)))) (* skoSC1 (+ (* skoMC1 (+ 2. (* skoMC1 3.))) (* skoSC1 (+ (* skoMC1 skoMC1) (* skoSC1 (* skoMC1 (/ (- 1.) 12.))))))))) (* skoMC1 (+ 2. (* skoMC1 5.)))) (and (> (* skoSC1 (+ (* skoMC1 (+ (- 1.) (* skoMC1 3.))) (* skoSC1 (+ (* skoMC1 (+ (- 2.) (* skoMC1 (- 3.)))) (* skoSC1 (+ (* skoMC1 (+ (/ 1. 6.) (* skoMC1 (- 1.)))) (* skoSC1 (* skoMC1 (/ 1. 4.))))))))) (* skoMC1 (+ (- 2.) (* skoMC1 (- 5.))))) (<= (* skoSC1 (+ (* skoMC1 (+ 1. (* skoMC1 (- 3.)))) (* skoSC1 (+ (* skoMC1 (+ 2. (* skoMC1 3.))) (* skoSC1 (+ (* skoMC1 (+ (/ (- 1.) 6.) skoMC1)) (* skoSC1 (* skoMC1 (/ (- 1.) 4.))))))))) (* skoMC1 (+ 2. (* skoMC1 5.)))))))))))))))))))))))

% In GRF format:
(sequent " MetiTarski formula " (antecedent (<= (* skoMC1 (* skoMC1 (* skoMC1 (- 2.)))) 0.) (<= (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (+ (- 2.) (* skoMC1 (- 12.)))))) (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (+ 1. (* skoMC1 (- 6.)))))) (* skoSC1 (+ (* skoMC1 (* skoMC1 skoMC1)) (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (/ (- 1.) 12.)))) (* skoSC1 (* skoMC1 (* skoMC1 (* skoMC1 (/ (- 1.) 12.))))))))))))) (* skoMC1 (* skoMC1 (* skoMC1 (+ 2. (* skoMC1 6.)))))) (<= (* skoSC1 (* skoMC1 (* skoMC1 (* skoMC1 (- 2.))))) (* skoMC1 (* skoMC1 (* skoMC1 2.)))) (> (* skoSC1 (* skoMC1 (* skoMC1 (* skoMC1 2.)))) (* skoMC1 (* skoMC1 (* skoMC1 (- 2.))))) (<= (* skoMC1 (* skoMC1 (* skoMC1 (- 1.)))) 0.) (> (* skoSC1 (* skoMC1 (* skoMC1 skoMC1))) (* skoMC1 (* skoMC1 (* skoMC1 (- 1.))))) (<= (* skoMC1 (* skoMC1 (* skoMC1 (- 2.)))) 0.) (> (* skoMC1 (* skoMC1 (* skoMC1 2.))) 0.) (<= skoSC1 (/ 5. 4.)) (<= 2. skoMC1) (<= 0. skoSC1) (> skoMC1 0.) (<= 0. skoMC1) (> (* skoSC1 skoMC1) (* skoMC1 (- 1.))) (<= (* skoSC1 (* skoMC1 (- 1.))) skoMC1) (> (* skoSC1 (+ (* skoMC1 (+ (- 1.) (* skoMC1 3.))) (* skoSC1 (+ (* skoMC1 (+ (- 2.) (* skoMC1 (- 3.)))) (* skoSC1 (+ (* skoMC1 (* skoMC1 (- 1.))) (* skoSC1 (* skoMC1 (/ 1. 12.))))))))) (* skoMC1 (+ (- 2.) (* skoMC1 (- 5.))))) (<= (* skoSC1 (+ (* skoMC1 (+ 1. (* skoMC1 (- 3.)))) (* skoSC1 (+ (* skoMC1 (+ 2. (* skoMC1 3.))) (* skoSC1 (+ (* skoMC1 skoMC1) (* skoSC1 (* skoMC1 (/ (- 1.) 12.))))))))) (* skoMC1 (+ 2. (* skoMC1 5.)))) (> (* skoSC1 (+ (* skoMC1 (+ (- 1.) (* skoMC1 3.))) (* skoSC1 (+ (* skoMC1 (+ (- 2.) (* skoMC1 (- 3.)))) (* skoSC1 (+ (* skoMC1 (+ (/ 1. 6.) (* skoMC1 (- 1.)))) (* skoSC1 (* skoMC1 (/ 1. 4.))))))))) (* skoMC1 (+ (- 2.) (* skoMC1 (- 5.)))))) (succedent (> (* skoSC1 (+ (* skoMC1 (+ 1. (* skoMC1 (- 3.)))) (* skoSC1 (+ (* skoMC1 (+ 2. (* skoMC1 3.))) (* skoSC1 (+ (* skoMC1 (+ (/ (- 1.) 6.) skoMC1)) (* skoSC1 (* skoMC1 (/ (- 1.) 4.))))))))) (* skoMC1 (+ 2. (* skoMC1 5.))))))
-----[end problem]-----

-----[begin problem]-----
% In Mathematica format:
Timing[Resolve[Exists[{skoSC1,skoMC1}, And[skoSC1*skoMC1*skoMC1*skoMC1*-1<=skoMC1*skoMC1*skoMC1,skoSC1*(skoMC1*skoMC1*skoMC1*(-2+skoMC1*-12)+skoSC1*(skoMC1*skoMC1*skoMC1*(1+skoMC1*-6)+skoSC1*(skoMC1*skoMC1*skoMC1+skoSC1*(skoMC1*skoMC1*skoMC1*(-1/12)+skoSC1*skoMC1*skoMC1*skoMC1*(-1/12)))))<=skoMC1*skoMC1*skoMC1*(2+skoMC1*6),skoSC1*skoMC1*skoMC1*skoMC1*-2<=skoMC1*skoMC1*skoMC1*2,skoSC1*skoMC1*skoMC1*skoMC1*2>skoMC1*skoMC1*skoMC1*-2,skoMC1*skoMC1*skoMC1*-1<=0,skoSC1*skoMC1*skoMC1*skoMC1>skoMC1*skoMC1*skoMC1*-1,skoMC1*skoMC1*skoMC1*-2<=0,skoMC1*skoMC1*skoMC1*2>0,skoSC1<=(5/4),2<=skoMC1,0<=skoSC1,skoMC1>0,0<=skoMC1,skoSC1*skoMC1>skoMC1*-1,skoSC1*skoMC1*-1<=skoMC1,skoSC1*(skoMC1*(-1+skoMC1*3)+skoSC1*(skoMC1*(-2+skoMC1*-3)+skoSC1*(skoMC1*skoMC1*-1+skoSC1*skoMC1*(1/12))))>skoMC1*(-2+skoMC1*-5),skoSC1*(skoMC1*(1+skoMC1*-3)+skoSC1*(skoMC1*(2+skoMC1*3)+skoSC1*(skoMC1*skoMC1+skoSC1*skoMC1*(-1/12))))<=skoMC1*(2+skoMC1*5),skoSC1*(skoMC1*(-1+skoMC1*3)+skoSC1*(skoMC1*(-2+skoMC1*-3)+skoSC1*(skoMC1*((1/6)+skoMC1*-1)+skoSC1*skoMC1*(1/4))))>skoMC1*(-2+skoMC1*-5),skoSC1*(skoMC1*(1+skoMC1*-3)+skoSC1*(skoMC1*(2+skoMC1*3)+skoSC1*(skoMC1*((-1/6)+skoMC1)+skoSC1*skoMC1*(-1/4))))<=skoMC1*(2+skoMC1*5)]], Reals]]

% In QepcadB format:
(E skoSC1) (E skoMC1) [[(skoSC1 skoMC1 skoMC1 skoMC1 (-1))<=(skoMC1 skoMC1 skoMC1)]/\[[(skoSC1 ((skoMC1 skoMC1 skoMC1 (-2+(skoMC1 (-12))))+(skoSC1 ((skoMC1 skoMC1 skoMC1 (1+(skoMC1 (-6))))+(skoSC1 ((skoMC1 skoMC1 skoMC1)+(skoSC1 ((skoMC1 skoMC1 skoMC1 (-1/12))+(skoSC1 skoMC1 skoMC1 skoMC1 (-1/12))))))))))<=(skoMC1 skoMC1 skoMC1 (2+(skoMC1 (6))))]/\[[(skoSC1 skoMC1 skoMC1 skoMC1 (-2))<=(skoMC1 skoMC1 skoMC1 (2))]/\[[(skoMC1 skoMC1 skoMC1 (-2))<(skoSC1 skoMC1 skoMC1 skoMC1 (2))]/\[[(skoMC1 skoMC1 skoMC1 (-1))<=0]/\[[(skoMC1 skoMC1 skoMC1 (-1))<(skoSC1 skoMC1 skoMC1 skoMC1)]/\[[(skoMC1 skoMC1 skoMC1 (-2))<=0]/\[[0<(skoMC1 skoMC1 skoMC1 (2))]/\[[skoSC1<=5/4]/\[[2<=skoMC1]/\[[0<=skoSC1]/\[[0<skoMC1]/\[[0<=skoMC1]/\[[(skoMC1 (-1))<(skoSC1 skoMC1)]/\[[(skoSC1 skoMC1 (-1))<=skoMC1]/\[[(skoMC1 (-2+(skoMC1 (-5))))<(skoSC1 ((skoMC1 (-1+(skoMC1 (3))))+(skoSC1 ((skoMC1 (-2+(skoMC1 (-3))))+(skoSC1 ((skoMC1 skoMC1 (-1))+(skoSC1 skoMC1 (1/12))))))))]/\[[(skoSC1 ((skoMC1 (1+(skoMC1 (-3))))+(skoSC1 ((skoMC1 (2+(skoMC1 (3))))+(skoSC1 ((skoMC1 skoMC1)+(skoSC1 skoMC1 (-1/12))))))))<=(skoMC1 (2+(skoMC1 (5))))]/\[[(skoMC1 (-2+(skoMC1 (-5))))<(skoSC1 ((skoMC1 (-1+(skoMC1 (3))))+(skoSC1 ((skoMC1 (-2+(skoMC1 (-3))))+(skoSC1 ((skoMC1 (1/6+(skoMC1 (-1))))+(skoSC1 skoMC1 (1/4))))))))]/\[(skoSC1 ((skoMC1 (1+(skoMC1 (-3))))+(skoSC1 ((skoMC1 (2+(skoMC1 (3))))+(skoSC1 ((skoMC1 (-1/6+skoMC1))+(skoSC1 skoMC1 (-1/4))))))))<=(skoMC1 (2+(skoMC1 (5))))]]]]]]]]]]]]]]]]]]].

% In SMTLib2 format:
(declare-fun skoSC1 () Real) (declare-fun skoMC1 () Real) (assert (and (<= (* skoSC1 (* skoMC1 (* skoMC1 (* skoMC1 (- 1.))))) (* skoMC1 (* skoMC1 skoMC1))) (and (<= (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (+ (- 2.) (* skoMC1 (- 12.)))))) (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (+ 1. (* skoMC1 (- 6.)))))) (* skoSC1 (+ (* skoMC1 (* skoMC1 skoMC1)) (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (/ (- 1.) 12.)))) (* skoSC1 (* skoMC1 (* skoMC1 (* skoMC1 (/ (- 1.) 12.))))))))))))) (* skoMC1 (* skoMC1 (* skoMC1 (+ 2. (* skoMC1 6.)))))) (and (<= (* skoSC1 (* skoMC1 (* skoMC1 (* skoMC1 (- 2.))))) (* skoMC1 (* skoMC1 (* skoMC1 2.)))) (and (> (* skoSC1 (* skoMC1 (* skoMC1 (* skoMC1 2.)))) (* skoMC1 (* skoMC1 (* skoMC1 (- 2.))))) (and (<= (* skoMC1 (* skoMC1 (* skoMC1 (- 1.)))) 0.) (and (> (* skoSC1 (* skoMC1 (* skoMC1 skoMC1))) (* skoMC1 (* skoMC1 (* skoMC1 (- 1.))))) (and (<= (* skoMC1 (* skoMC1 (* skoMC1 (- 2.)))) 0.) (and (> (* skoMC1 (* skoMC1 (* skoMC1 2.))) 0.) (and (<= skoSC1 (/ 5. 4.)) (and (<= 2. skoMC1) (and (<= 0. skoSC1) (and (> skoMC1 0.) (and (<= 0. skoMC1) (and (> (* skoSC1 skoMC1) (* skoMC1 (- 1.))) (and (<= (* skoSC1 (* skoMC1 (- 1.))) skoMC1) (and (> (* skoSC1 (+ (* skoMC1 (+ (- 1.) (* skoMC1 3.))) (* skoSC1 (+ (* skoMC1 (+ (- 2.) (* skoMC1 (- 3.)))) (* skoSC1 (+ (* skoMC1 (* skoMC1 (- 1.))) (* skoSC1 (* skoMC1 (/ 1. 12.))))))))) (* skoMC1 (+ (- 2.) (* skoMC1 (- 5.))))) (and (<= (* skoSC1 (+ (* skoMC1 (+ 1. (* skoMC1 (- 3.)))) (* skoSC1 (+ (* skoMC1 (+ 2. (* skoMC1 3.))) (* skoSC1 (+ (* skoMC1 skoMC1) (* skoSC1 (* skoMC1 (/ (- 1.) 12.))))))))) (* skoMC1 (+ 2. (* skoMC1 5.)))) (and (> (* skoSC1 (+ (* skoMC1 (+ (- 1.) (* skoMC1 3.))) (* skoSC1 (+ (* skoMC1 (+ (- 2.) (* skoMC1 (- 3.)))) (* skoSC1 (+ (* skoMC1 (+ (/ 1. 6.) (* skoMC1 (- 1.)))) (* skoSC1 (* skoMC1 (/ 1. 4.))))))))) (* skoMC1 (+ (- 2.) (* skoMC1 (- 5.))))) (<= (* skoSC1 (+ (* skoMC1 (+ 1. (* skoMC1 (- 3.)))) (* skoSC1 (+ (* skoMC1 (+ 2. (* skoMC1 3.))) (* skoSC1 (+ (* skoMC1 (+ (/ (- 1.) 6.) skoMC1)) (* skoSC1 (* skoMC1 (/ (- 1.) 4.))))))))) (* skoMC1 (+ 2. (* skoMC1 5.)))))))))))))))))))))))

% In GRF format:
(sequent " MetiTarski formula " (antecedent (<= (* skoSC1 (* skoMC1 (* skoMC1 (* skoMC1 (- 1.))))) (* skoMC1 (* skoMC1 skoMC1))) (<= (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (+ (- 2.) (* skoMC1 (- 12.)))))) (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (+ 1. (* skoMC1 (- 6.)))))) (* skoSC1 (+ (* skoMC1 (* skoMC1 skoMC1)) (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (/ (- 1.) 12.)))) (* skoSC1 (* skoMC1 (* skoMC1 (* skoMC1 (/ (- 1.) 12.))))))))))))) (* skoMC1 (* skoMC1 (* skoMC1 (+ 2. (* skoMC1 6.)))))) (<= (* skoSC1 (* skoMC1 (* skoMC1 (* skoMC1 (- 2.))))) (* skoMC1 (* skoMC1 (* skoMC1 2.)))) (> (* skoSC1 (* skoMC1 (* skoMC1 (* skoMC1 2.)))) (* skoMC1 (* skoMC1 (* skoMC1 (- 2.))))) (<= (* skoMC1 (* skoMC1 (* skoMC1 (- 1.)))) 0.) (> (* skoSC1 (* skoMC1 (* skoMC1 skoMC1))) (* skoMC1 (* skoMC1 (* skoMC1 (- 1.))))) (<= (* skoMC1 (* skoMC1 (* skoMC1 (- 2.)))) 0.) (> (* skoMC1 (* skoMC1 (* skoMC1 2.))) 0.) (<= skoSC1 (/ 5. 4.)) (<= 2. skoMC1) (<= 0. skoSC1) (> skoMC1 0.) (<= 0. skoMC1) (> (* skoSC1 skoMC1) (* skoMC1 (- 1.))) (<= (* skoSC1 (* skoMC1 (- 1.))) skoMC1) (> (* skoSC1 (+ (* skoMC1 (+ (- 1.) (* skoMC1 3.))) (* skoSC1 (+ (* skoMC1 (+ (- 2.) (* skoMC1 (- 3.)))) (* skoSC1 (+ (* skoMC1 (* skoMC1 (- 1.))) (* skoSC1 (* skoMC1 (/ 1. 12.))))))))) (* skoMC1 (+ (- 2.) (* skoMC1 (- 5.))))) (<= (* skoSC1 (+ (* skoMC1 (+ 1. (* skoMC1 (- 3.)))) (* skoSC1 (+ (* skoMC1 (+ 2. (* skoMC1 3.))) (* skoSC1 (+ (* skoMC1 skoMC1) (* skoSC1 (* skoMC1 (/ (- 1.) 12.))))))))) (* skoMC1 (+ 2. (* skoMC1 5.)))) (> (* skoSC1 (+ (* skoMC1 (+ (- 1.) (* skoMC1 3.))) (* skoSC1 (+ (* skoMC1 (+ (- 2.) (* skoMC1 (- 3.)))) (* skoSC1 (+ (* skoMC1 (+ (/ 1. 6.) (* skoMC1 (- 1.)))) (* skoSC1 (* skoMC1 (/ 1. 4.))))))))) (* skoMC1 (+ (- 2.) (* skoMC1 (- 5.)))))) (succedent (> (* skoSC1 (+ (* skoMC1 (+ 1. (* skoMC1 (- 3.)))) (* skoSC1 (+ (* skoMC1 (+ 2. (* skoMC1 3.))) (* skoSC1 (+ (* skoMC1 (+ (/ (- 1.) 6.) skoMC1)) (* skoSC1 (* skoMC1 (/ (- 1.) 4.))))))))) (* skoMC1 (+ 2. (* skoMC1 5.))))))
-----[end problem]-----

-----[begin problem]-----
% In Mathematica format:
Timing[Resolve[Exists[{skoSC1,skoMC1}, And[skoSC1*skoMC1*skoMC1*skoMC1*-1<=skoMC1*skoMC1*skoMC1,skoSC1<=0,skoSC1*skoMC1*skoMC1*skoMC1>skoMC1*skoMC1*skoMC1*-1,skoSC1*skoMC1*skoMC1*skoMC1*-1<=skoMC1*skoMC1*skoMC1,skoSC1*(skoMC1*skoMC1*skoMC1*(-2+skoMC1*-12)+skoSC1*(skoMC1*skoMC1*skoMC1*(1+skoMC1*-6)+skoSC1*(skoMC1*skoMC1*skoMC1+skoSC1*(skoMC1*skoMC1*skoMC1*(-1/12)+skoSC1*skoMC1*skoMC1*skoMC1*(-1/12)))))<=skoMC1*skoMC1*skoMC1*(2+skoMC1*6),skoSC1*skoMC1*skoMC1*skoMC1*-2<=skoMC1*skoMC1*skoMC1*2,skoSC1*skoMC1*skoMC1*skoMC1*2>skoMC1*skoMC1*skoMC1*-2,skoMC1*skoMC1*skoMC1*-1<=0,skoSC1*skoMC1*skoMC1*skoMC1>skoMC1*skoMC1*skoMC1*-1,skoMC1*skoMC1*skoMC1*-2<=0,skoMC1*skoMC1*skoMC1*2>0,skoSC1<=(5/4),2<=skoMC1,0<=skoSC1,skoMC1>0,0<=skoMC1,skoSC1*skoMC1>skoMC1*-1,skoSC1*skoMC1*-1<=skoMC1,skoSC1*(skoMC1*(-1+skoMC1*3)+skoSC1*(skoMC1*(-2+skoMC1*-3)+skoSC1*(skoMC1*skoMC1*-1+skoSC1*skoMC1*(1/12))))>skoMC1*(-2+skoMC1*-5),skoSC1*(skoMC1*(1+skoMC1*-3)+skoSC1*(skoMC1*(2+skoMC1*3)+skoSC1*(skoMC1*skoMC1+skoSC1*skoMC1*(-1/12))))<=skoMC1*(2+skoMC1*5),skoSC1*(skoMC1*(-1+skoMC1*3)+skoSC1*(skoMC1*(-2+skoMC1*-3)+skoSC1*(skoMC1*((1/6)+skoMC1*-1)+skoSC1*skoMC1*(1/4))))>skoMC1*(-2+skoMC1*-5),skoSC1*(skoMC1*(1+skoMC1*-3)+skoSC1*(skoMC1*(2+skoMC1*3)+skoSC1*(skoMC1*((-1/6)+skoMC1)+skoSC1*skoMC1*(-1/4))))<=skoMC1*(2+skoMC1*5)]], Reals]]

% In QepcadB format:
(E skoSC1) (E skoMC1) [[(skoSC1 skoMC1 skoMC1 skoMC1 (-1))<=(skoMC1 skoMC1 skoMC1)]/\[[skoSC1<=0]/\[[(skoMC1 skoMC1 skoMC1 (-1))<(skoSC1 skoMC1 skoMC1 skoMC1)]/\[[(skoSC1 skoMC1 skoMC1 skoMC1 (-1))<=(skoMC1 skoMC1 skoMC1)]/\[[(skoSC1 ((skoMC1 skoMC1 skoMC1 (-2+(skoMC1 (-12))))+(skoSC1 ((skoMC1 skoMC1 skoMC1 (1+(skoMC1 (-6))))+(skoSC1 ((skoMC1 skoMC1 skoMC1)+(skoSC1 ((skoMC1 skoMC1 skoMC1 (-1/12))+(skoSC1 skoMC1 skoMC1 skoMC1 (-1/12))))))))))<=(skoMC1 skoMC1 skoMC1 (2+(skoMC1 (6))))]/\[[(skoSC1 skoMC1 skoMC1 skoMC1 (-2))<=(skoMC1 skoMC1 skoMC1 (2))]/\[[(skoMC1 skoMC1 skoMC1 (-2))<(skoSC1 skoMC1 skoMC1 skoMC1 (2))]/\[[(skoMC1 skoMC1 skoMC1 (-1))<=0]/\[[(skoMC1 skoMC1 skoMC1 (-1))<(skoSC1 skoMC1 skoMC1 skoMC1)]/\[[(skoMC1 skoMC1 skoMC1 (-2))<=0]/\[[0<(skoMC1 skoMC1 skoMC1 (2))]/\[[skoSC1<=5/4]/\[[2<=skoMC1]/\[[0<=skoSC1]/\[[0<skoMC1]/\[[0<=skoMC1]/\[[(skoMC1 (-1))<(skoSC1 skoMC1)]/\[[(skoSC1 skoMC1 (-1))<=skoMC1]/\[[(skoMC1 (-2+(skoMC1 (-5))))<(skoSC1 ((skoMC1 (-1+(skoMC1 (3))))+(skoSC1 ((skoMC1 (-2+(skoMC1 (-3))))+(skoSC1 ((skoMC1 skoMC1 (-1))+(skoSC1 skoMC1 (1/12))))))))]/\[[(skoSC1 ((skoMC1 (1+(skoMC1 (-3))))+(skoSC1 ((skoMC1 (2+(skoMC1 (3))))+(skoSC1 ((skoMC1 skoMC1)+(skoSC1 skoMC1 (-1/12))))))))<=(skoMC1 (2+(skoMC1 (5))))]/\[[(skoMC1 (-2+(skoMC1 (-5))))<(skoSC1 ((skoMC1 (-1+(skoMC1 (3))))+(skoSC1 ((skoMC1 (-2+(skoMC1 (-3))))+(skoSC1 ((skoMC1 (1/6+(skoMC1 (-1))))+(skoSC1 skoMC1 (1/4))))))))]/\[(skoSC1 ((skoMC1 (1+(skoMC1 (-3))))+(skoSC1 ((skoMC1 (2+(skoMC1 (3))))+(skoSC1 ((skoMC1 (-1/6+skoMC1))+(skoSC1 skoMC1 (-1/4))))))))<=(skoMC1 (2+(skoMC1 (5))))]]]]]]]]]]]]]]]]]]]]]].

% In SMTLib2 format:
(declare-fun skoSC1 () Real) (declare-fun skoMC1 () Real) (assert (and (<= (* skoSC1 (* skoMC1 (* skoMC1 (* skoMC1 (- 1.))))) (* skoMC1 (* skoMC1 skoMC1))) (and (<= skoSC1 0.) (and (> (* skoSC1 (* skoMC1 (* skoMC1 skoMC1))) (* skoMC1 (* skoMC1 (* skoMC1 (- 1.))))) (and (<= (* skoSC1 (* skoMC1 (* skoMC1 (* skoMC1 (- 1.))))) (* skoMC1 (* skoMC1 skoMC1))) (and (<= (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (+ (- 2.) (* skoMC1 (- 12.)))))) (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (+ 1. (* skoMC1 (- 6.)))))) (* skoSC1 (+ (* skoMC1 (* skoMC1 skoMC1)) (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (/ (- 1.) 12.)))) (* skoSC1 (* skoMC1 (* skoMC1 (* skoMC1 (/ (- 1.) 12.))))))))))))) (* skoMC1 (* skoMC1 (* skoMC1 (+ 2. (* skoMC1 6.)))))) (and (<= (* skoSC1 (* skoMC1 (* skoMC1 (* skoMC1 (- 2.))))) (* skoMC1 (* skoMC1 (* skoMC1 2.)))) (and (> (* skoSC1 (* skoMC1 (* skoMC1 (* skoMC1 2.)))) (* skoMC1 (* skoMC1 (* skoMC1 (- 2.))))) (and (<= (* skoMC1 (* skoMC1 (* skoMC1 (- 1.)))) 0.) (and (> (* skoSC1 (* skoMC1 (* skoMC1 skoMC1))) (* skoMC1 (* skoMC1 (* skoMC1 (- 1.))))) (and (<= (* skoMC1 (* skoMC1 (* skoMC1 (- 2.)))) 0.) (and (> (* skoMC1 (* skoMC1 (* skoMC1 2.))) 0.) (and (<= skoSC1 (/ 5. 4.)) (and (<= 2. skoMC1) (and (<= 0. skoSC1) (and (> skoMC1 0.) (and (<= 0. skoMC1) (and (> (* skoSC1 skoMC1) (* skoMC1 (- 1.))) (and (<= (* skoSC1 (* skoMC1 (- 1.))) skoMC1) (and (> (* skoSC1 (+ (* skoMC1 (+ (- 1.) (* skoMC1 3.))) (* skoSC1 (+ (* skoMC1 (+ (- 2.) (* skoMC1 (- 3.)))) (* skoSC1 (+ (* skoMC1 (* skoMC1 (- 1.))) (* skoSC1 (* skoMC1 (/ 1. 12.))))))))) (* skoMC1 (+ (- 2.) (* skoMC1 (- 5.))))) (and (<= (* skoSC1 (+ (* skoMC1 (+ 1. (* skoMC1 (- 3.)))) (* skoSC1 (+ (* skoMC1 (+ 2. (* skoMC1 3.))) (* skoSC1 (+ (* skoMC1 skoMC1) (* skoSC1 (* skoMC1 (/ (- 1.) 12.))))))))) (* skoMC1 (+ 2. (* skoMC1 5.)))) (and (> (* skoSC1 (+ (* skoMC1 (+ (- 1.) (* skoMC1 3.))) (* skoSC1 (+ (* skoMC1 (+ (- 2.) (* skoMC1 (- 3.)))) (* skoSC1 (+ (* skoMC1 (+ (/ 1. 6.) (* skoMC1 (- 1.)))) (* skoSC1 (* skoMC1 (/ 1. 4.))))))))) (* skoMC1 (+ (- 2.) (* skoMC1 (- 5.))))) (<= (* skoSC1 (+ (* skoMC1 (+ 1. (* skoMC1 (- 3.)))) (* skoSC1 (+ (* skoMC1 (+ 2. (* skoMC1 3.))) (* skoSC1 (+ (* skoMC1 (+ (/ (- 1.) 6.) skoMC1)) (* skoSC1 (* skoMC1 (/ (- 1.) 4.))))))))) (* skoMC1 (+ 2. (* skoMC1 5.))))))))))))))))))))))))))

% In GRF format:
(sequent " MetiTarski formula " (antecedent (<= (* skoSC1 (* skoMC1 (* skoMC1 (* skoMC1 (- 1.))))) (* skoMC1 (* skoMC1 skoMC1))) (<= skoSC1 0.) (> (* skoSC1 (* skoMC1 (* skoMC1 skoMC1))) (* skoMC1 (* skoMC1 (* skoMC1 (- 1.))))) (<= (* skoSC1 (* skoMC1 (* skoMC1 (* skoMC1 (- 1.))))) (* skoMC1 (* skoMC1 skoMC1))) (<= (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (+ (- 2.) (* skoMC1 (- 12.)))))) (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (+ 1. (* skoMC1 (- 6.)))))) (* skoSC1 (+ (* skoMC1 (* skoMC1 skoMC1)) (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (/ (- 1.) 12.)))) (* skoSC1 (* skoMC1 (* skoMC1 (* skoMC1 (/ (- 1.) 12.))))))))))))) (* skoMC1 (* skoMC1 (* skoMC1 (+ 2. (* skoMC1 6.)))))) (<= (* skoSC1 (* skoMC1 (* skoMC1 (* skoMC1 (- 2.))))) (* skoMC1 (* skoMC1 (* skoMC1 2.)))) (> (* skoSC1 (* skoMC1 (* skoMC1 (* skoMC1 2.)))) (* skoMC1 (* skoMC1 (* skoMC1 (- 2.))))) (<= (* skoMC1 (* skoMC1 (* skoMC1 (- 1.)))) 0.) (> (* skoSC1 (* skoMC1 (* skoMC1 skoMC1))) (* skoMC1 (* skoMC1 (* skoMC1 (- 1.))))) (<= (* skoMC1 (* skoMC1 (* skoMC1 (- 2.)))) 0.) (> (* skoMC1 (* skoMC1 (* skoMC1 2.))) 0.) (<= skoSC1 (/ 5. 4.)) (<= 2. skoMC1) (<= 0. skoSC1) (> skoMC1 0.) (<= 0. skoMC1) (> (* skoSC1 skoMC1) (* skoMC1 (- 1.))) (<= (* skoSC1 (* skoMC1 (- 1.))) skoMC1) (> (* skoSC1 (+ (* skoMC1 (+ (- 1.) (* skoMC1 3.))) (* skoSC1 (+ (* skoMC1 (+ (- 2.) (* skoMC1 (- 3.)))) (* skoSC1 (+ (* skoMC1 (* skoMC1 (- 1.))) (* skoSC1 (* skoMC1 (/ 1. 12.))))))))) (* skoMC1 (+ (- 2.) (* skoMC1 (- 5.))))) (<= (* skoSC1 (+ (* skoMC1 (+ 1. (* skoMC1 (- 3.)))) (* skoSC1 (+ (* skoMC1 (+ 2. (* skoMC1 3.))) (* skoSC1 (+ (* skoMC1 skoMC1) (* skoSC1 (* skoMC1 (/ (- 1.) 12.))))))))) (* skoMC1 (+ 2. (* skoMC1 5.)))) (> (* skoSC1 (+ (* skoMC1 (+ (- 1.) (* skoMC1 3.))) (* skoSC1 (+ (* skoMC1 (+ (- 2.) (* skoMC1 (- 3.)))) (* skoSC1 (+ (* skoMC1 (+ (/ 1. 6.) (* skoMC1 (- 1.)))) (* skoSC1 (* skoMC1 (/ 1. 4.))))))))) (* skoMC1 (+ (- 2.) (* skoMC1 (- 5.)))))) (succedent (> (* skoSC1 (+ (* skoMC1 (+ 1. (* skoMC1 (- 3.)))) (* skoSC1 (+ (* skoMC1 (+ 2. (* skoMC1 3.))) (* skoSC1 (+ (* skoMC1 (+ (/ (- 1.) 6.) skoMC1)) (* skoSC1 (* skoMC1 (/ (- 1.) 4.))))))))) (* skoMC1 (+ 2. (* skoMC1 5.))))))
-----[end problem]-----

-----[begin problem]-----
% In Mathematica format:
Timing[Resolve[Exists[{skoSC1,skoMC1}, And[skoSC1*skoMC1*skoMC1*skoMC1<=skoMC1*skoMC1*skoMC1*-1,skoSC1<=0,skoSC1*skoMC1*skoMC1*skoMC1*-1<=skoMC1*skoMC1*skoMC1,skoSC1*(skoMC1*skoMC1*skoMC1*(-2+skoMC1*-12)+skoSC1*(skoMC1*skoMC1*skoMC1*(1+skoMC1*-6)+skoSC1*(skoMC1*skoMC1*skoMC1+skoSC1*(skoMC1*skoMC1*skoMC1*(-1/12)+skoSC1*skoMC1*skoMC1*skoMC1*(-1/12)))))<=skoMC1*skoMC1*skoMC1*(2+skoMC1*6),skoSC1*skoMC1*skoMC1*skoMC1*-2<=skoMC1*skoMC1*skoMC1*2,skoSC1*skoMC1*skoMC1*skoMC1*2>skoMC1*skoMC1*skoMC1*-2,skoMC1*skoMC1*skoMC1*-1<=0,skoSC1*skoMC1*skoMC1*skoMC1>skoMC1*skoMC1*skoMC1*-1,skoMC1*skoMC1*skoMC1*-2<=0,skoMC1*skoMC1*skoMC1*2>0,skoSC1<=(5/4),2<=skoMC1,0<=skoSC1,skoMC1>0,0<=skoMC1,skoSC1*skoMC1>skoMC1*-1,skoSC1*skoMC1*-1<=skoMC1,skoSC1*(skoMC1*(-1+skoMC1*3)+skoSC1*(skoMC1*(-2+skoMC1*-3)+skoSC1*(skoMC1*skoMC1*-1+skoSC1*skoMC1*(1/12))))>skoMC1*(-2+skoMC1*-5),skoSC1*(skoMC1*(1+skoMC1*-3)+skoSC1*(skoMC1*(2+skoMC1*3)+skoSC1*(skoMC1*skoMC1+skoSC1*skoMC1*(-1/12))))<=skoMC1*(2+skoMC1*5),skoSC1*(skoMC1*(-1+skoMC1*3)+skoSC1*(skoMC1*(-2+skoMC1*-3)+skoSC1*(skoMC1*((1/6)+skoMC1*-1)+skoSC1*skoMC1*(1/4))))>skoMC1*(-2+skoMC1*-5),skoSC1*(skoMC1*(1+skoMC1*-3)+skoSC1*(skoMC1*(2+skoMC1*3)+skoSC1*(skoMC1*((-1/6)+skoMC1)+skoSC1*skoMC1*(-1/4))))<=skoMC1*(2+skoMC1*5)]], Reals]]

% In QepcadB format:
(E skoSC1) (E skoMC1) [[(skoSC1 skoMC1 skoMC1 skoMC1)<=(skoMC1 skoMC1 skoMC1 (-1))]/\[[skoSC1<=0]/\[[(skoSC1 skoMC1 skoMC1 skoMC1 (-1))<=(skoMC1 skoMC1 skoMC1)]/\[[(skoSC1 ((skoMC1 skoMC1 skoMC1 (-2+(skoMC1 (-12))))+(skoSC1 ((skoMC1 skoMC1 skoMC1 (1+(skoMC1 (-6))))+(skoSC1 ((skoMC1 skoMC1 skoMC1)+(skoSC1 ((skoMC1 skoMC1 skoMC1 (-1/12))+(skoSC1 skoMC1 skoMC1 skoMC1 (-1/12))))))))))<=(skoMC1 skoMC1 skoMC1 (2+(skoMC1 (6))))]/\[[(skoSC1 skoMC1 skoMC1 skoMC1 (-2))<=(skoMC1 skoMC1 skoMC1 (2))]/\[[(skoMC1 skoMC1 skoMC1 (-2))<(skoSC1 skoMC1 skoMC1 skoMC1 (2))]/\[[(skoMC1 skoMC1 skoMC1 (-1))<=0]/\[[(skoMC1 skoMC1 skoMC1 (-1))<(skoSC1 skoMC1 skoMC1 skoMC1)]/\[[(skoMC1 skoMC1 skoMC1 (-2))<=0]/\[[0<(skoMC1 skoMC1 skoMC1 (2))]/\[[skoSC1<=5/4]/\[[2<=skoMC1]/\[[0<=skoSC1]/\[[0<skoMC1]/\[[0<=skoMC1]/\[[(skoMC1 (-1))<(skoSC1 skoMC1)]/\[[(skoSC1 skoMC1 (-1))<=skoMC1]/\[[(skoMC1 (-2+(skoMC1 (-5))))<(skoSC1 ((skoMC1 (-1+(skoMC1 (3))))+(skoSC1 ((skoMC1 (-2+(skoMC1 (-3))))+(skoSC1 ((skoMC1 skoMC1 (-1))+(skoSC1 skoMC1 (1/12))))))))]/\[[(skoSC1 ((skoMC1 (1+(skoMC1 (-3))))+(skoSC1 ((skoMC1 (2+(skoMC1 (3))))+(skoSC1 ((skoMC1 skoMC1)+(skoSC1 skoMC1 (-1/12))))))))<=(skoMC1 (2+(skoMC1 (5))))]/\[[(skoMC1 (-2+(skoMC1 (-5))))<(skoSC1 ((skoMC1 (-1+(skoMC1 (3))))+(skoSC1 ((skoMC1 (-2+(skoMC1 (-3))))+(skoSC1 ((skoMC1 (1/6+(skoMC1 (-1))))+(skoSC1 skoMC1 (1/4))))))))]/\[(skoSC1 ((skoMC1 (1+(skoMC1 (-3))))+(skoSC1 ((skoMC1 (2+(skoMC1 (3))))+(skoSC1 ((skoMC1 (-1/6+skoMC1))+(skoSC1 skoMC1 (-1/4))))))))<=(skoMC1 (2+(skoMC1 (5))))]]]]]]]]]]]]]]]]]]]]].

% In SMTLib2 format:
(declare-fun skoSC1 () Real) (declare-fun skoMC1 () Real) (assert (and (<= (* skoSC1 (* skoMC1 (* skoMC1 skoMC1))) (* skoMC1 (* skoMC1 (* skoMC1 (- 1.))))) (and (<= skoSC1 0.) (and (<= (* skoSC1 (* skoMC1 (* skoMC1 (* skoMC1 (- 1.))))) (* skoMC1 (* skoMC1 skoMC1))) (and (<= (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (+ (- 2.) (* skoMC1 (- 12.)))))) (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (+ 1. (* skoMC1 (- 6.)))))) (* skoSC1 (+ (* skoMC1 (* skoMC1 skoMC1)) (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (/ (- 1.) 12.)))) (* skoSC1 (* skoMC1 (* skoMC1 (* skoMC1 (/ (- 1.) 12.))))))))))))) (* skoMC1 (* skoMC1 (* skoMC1 (+ 2. (* skoMC1 6.)))))) (and (<= (* skoSC1 (* skoMC1 (* skoMC1 (* skoMC1 (- 2.))))) (* skoMC1 (* skoMC1 (* skoMC1 2.)))) (and (> (* skoSC1 (* skoMC1 (* skoMC1 (* skoMC1 2.)))) (* skoMC1 (* skoMC1 (* skoMC1 (- 2.))))) (and (<= (* skoMC1 (* skoMC1 (* skoMC1 (- 1.)))) 0.) (and (> (* skoSC1 (* skoMC1 (* skoMC1 skoMC1))) (* skoMC1 (* skoMC1 (* skoMC1 (- 1.))))) (and (<= (* skoMC1 (* skoMC1 (* skoMC1 (- 2.)))) 0.) (and (> (* skoMC1 (* skoMC1 (* skoMC1 2.))) 0.) (and (<= skoSC1 (/ 5. 4.)) (and (<= 2. skoMC1) (and (<= 0. skoSC1) (and (> skoMC1 0.) (and (<= 0. skoMC1) (and (> (* skoSC1 skoMC1) (* skoMC1 (- 1.))) (and (<= (* skoSC1 (* skoMC1 (- 1.))) skoMC1) (and (> (* skoSC1 (+ (* skoMC1 (+ (- 1.) (* skoMC1 3.))) (* skoSC1 (+ (* skoMC1 (+ (- 2.) (* skoMC1 (- 3.)))) (* skoSC1 (+ (* skoMC1 (* skoMC1 (- 1.))) (* skoSC1 (* skoMC1 (/ 1. 12.))))))))) (* skoMC1 (+ (- 2.) (* skoMC1 (- 5.))))) (and (<= (* skoSC1 (+ (* skoMC1 (+ 1. (* skoMC1 (- 3.)))) (* skoSC1 (+ (* skoMC1 (+ 2. (* skoMC1 3.))) (* skoSC1 (+ (* skoMC1 skoMC1) (* skoSC1 (* skoMC1 (/ (- 1.) 12.))))))))) (* skoMC1 (+ 2. (* skoMC1 5.)))) (and (> (* skoSC1 (+ (* skoMC1 (+ (- 1.) (* skoMC1 3.))) (* skoSC1 (+ (* skoMC1 (+ (- 2.) (* skoMC1 (- 3.)))) (* skoSC1 (+ (* skoMC1 (+ (/ 1. 6.) (* skoMC1 (- 1.)))) (* skoSC1 (* skoMC1 (/ 1. 4.))))))))) (* skoMC1 (+ (- 2.) (* skoMC1 (- 5.))))) (<= (* skoSC1 (+ (* skoMC1 (+ 1. (* skoMC1 (- 3.)))) (* skoSC1 (+ (* skoMC1 (+ 2. (* skoMC1 3.))) (* skoSC1 (+ (* skoMC1 (+ (/ (- 1.) 6.) skoMC1)) (* skoSC1 (* skoMC1 (/ (- 1.) 4.))))))))) (* skoMC1 (+ 2. (* skoMC1 5.)))))))))))))))))))))))))

% In GRF format:
(sequent " MetiTarski formula " (antecedent (<= (* skoSC1 (* skoMC1 (* skoMC1 skoMC1))) (* skoMC1 (* skoMC1 (* skoMC1 (- 1.))))) (<= skoSC1 0.) (<= (* skoSC1 (* skoMC1 (* skoMC1 (* skoMC1 (- 1.))))) (* skoMC1 (* skoMC1 skoMC1))) (<= (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (+ (- 2.) (* skoMC1 (- 12.)))))) (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (+ 1. (* skoMC1 (- 6.)))))) (* skoSC1 (+ (* skoMC1 (* skoMC1 skoMC1)) (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (/ (- 1.) 12.)))) (* skoSC1 (* skoMC1 (* skoMC1 (* skoMC1 (/ (- 1.) 12.))))))))))))) (* skoMC1 (* skoMC1 (* skoMC1 (+ 2. (* skoMC1 6.)))))) (<= (* skoSC1 (* skoMC1 (* skoMC1 (* skoMC1 (- 2.))))) (* skoMC1 (* skoMC1 (* skoMC1 2.)))) (> (* skoSC1 (* skoMC1 (* skoMC1 (* skoMC1 2.)))) (* skoMC1 (* skoMC1 (* skoMC1 (- 2.))))) (<= (* skoMC1 (* skoMC1 (* skoMC1 (- 1.)))) 0.) (> (* skoSC1 (* skoMC1 (* skoMC1 skoMC1))) (* skoMC1 (* skoMC1 (* skoMC1 (- 1.))))) (<= (* skoMC1 (* skoMC1 (* skoMC1 (- 2.)))) 0.) (> (* skoMC1 (* skoMC1 (* skoMC1 2.))) 0.) (<= skoSC1 (/ 5. 4.)) (<= 2. skoMC1) (<= 0. skoSC1) (> skoMC1 0.) (<= 0. skoMC1) (> (* skoSC1 skoMC1) (* skoMC1 (- 1.))) (<= (* skoSC1 (* skoMC1 (- 1.))) skoMC1) (> (* skoSC1 (+ (* skoMC1 (+ (- 1.) (* skoMC1 3.))) (* skoSC1 (+ (* skoMC1 (+ (- 2.) (* skoMC1 (- 3.)))) (* skoSC1 (+ (* skoMC1 (* skoMC1 (- 1.))) (* skoSC1 (* skoMC1 (/ 1. 12.))))))))) (* skoMC1 (+ (- 2.) (* skoMC1 (- 5.))))) (<= (* skoSC1 (+ (* skoMC1 (+ 1. (* skoMC1 (- 3.)))) (* skoSC1 (+ (* skoMC1 (+ 2. (* skoMC1 3.))) (* skoSC1 (+ (* skoMC1 skoMC1) (* skoSC1 (* skoMC1 (/ (- 1.) 12.))))))))) (* skoMC1 (+ 2. (* skoMC1 5.)))) (> (* skoSC1 (+ (* skoMC1 (+ (- 1.) (* skoMC1 3.))) (* skoSC1 (+ (* skoMC1 (+ (- 2.) (* skoMC1 (- 3.)))) (* skoSC1 (+ (* skoMC1 (+ (/ 1. 6.) (* skoMC1 (- 1.)))) (* skoSC1 (* skoMC1 (/ 1. 4.))))))))) (* skoMC1 (+ (- 2.) (* skoMC1 (- 5.)))))) (succedent (> (* skoSC1 (+ (* skoMC1 (+ 1. (* skoMC1 (- 3.)))) (* skoSC1 (+ (* skoMC1 (+ 2. (* skoMC1 3.))) (* skoSC1 (+ (* skoMC1 (+ (/ (- 1.) 6.) skoMC1)) (* skoSC1 (* skoMC1 (/ (- 1.) 4.))))))))) (* skoMC1 (+ 2. (* skoMC1 5.))))))
-----[end problem]-----

-----[begin problem]-----
% In Mathematica format:
Timing[Resolve[Exists[{skoSC1,skoMC1}, And[skoSC1>0,skoSC1*skoMC1*skoMC1*skoMC1*-1<=skoMC1*skoMC1*skoMC1,skoSC1*(skoMC1*skoMC1*skoMC1*(-2+skoMC1*-12)+skoSC1*(skoMC1*skoMC1*skoMC1*(1+skoMC1*-6)+skoSC1*(skoMC1*skoMC1*skoMC1+skoSC1*(skoMC1*skoMC1*skoMC1*(-1/12)+skoSC1*skoMC1*skoMC1*skoMC1*(-1/12)))))<=skoMC1*skoMC1*skoMC1*(2+skoMC1*6),skoSC1*skoMC1*skoMC1*skoMC1*-2<=skoMC1*skoMC1*skoMC1*2,skoSC1*skoMC1*skoMC1*skoMC1*2>skoMC1*skoMC1*skoMC1*-2,skoMC1*skoMC1*skoMC1*-1<=0,skoSC1*skoMC1*skoMC1*skoMC1>skoMC1*skoMC1*skoMC1*-1,skoMC1*skoMC1*skoMC1*-2<=0,skoMC1*skoMC1*skoMC1*2>0,skoSC1<=(5/4),2<=skoMC1,0<=skoSC1,skoMC1>0,0<=skoMC1,skoSC1*skoMC1>skoMC1*-1,skoSC1*skoMC1*-1<=skoMC1,skoSC1*(skoMC1*(-1+skoMC1*3)+skoSC1*(skoMC1*(-2+skoMC1*-3)+skoSC1*(skoMC1*skoMC1*-1+skoSC1*skoMC1*(1/12))))>skoMC1*(-2+skoMC1*-5),skoSC1*(skoMC1*(1+skoMC1*-3)+skoSC1*(skoMC1*(2+skoMC1*3)+skoSC1*(skoMC1*skoMC1+skoSC1*skoMC1*(-1/12))))<=skoMC1*(2+skoMC1*5),skoSC1*(skoMC1*(-1+skoMC1*3)+skoSC1*(skoMC1*(-2+skoMC1*-3)+skoSC1*(skoMC1*((1/6)+skoMC1*-1)+skoSC1*skoMC1*(1/4))))>skoMC1*(-2+skoMC1*-5),skoSC1*(skoMC1*(1+skoMC1*-3)+skoSC1*(skoMC1*(2+skoMC1*3)+skoSC1*(skoMC1*((-1/6)+skoMC1)+skoSC1*skoMC1*(-1/4))))<=skoMC1*(2+skoMC1*5)]], Reals]]

% In QepcadB format:
(E skoSC1) (E skoMC1) [[0<skoSC1]/\[[(skoSC1 skoMC1 skoMC1 skoMC1 (-1))<=(skoMC1 skoMC1 skoMC1)]/\[[(skoSC1 ((skoMC1 skoMC1 skoMC1 (-2+(skoMC1 (-12))))+(skoSC1 ((skoMC1 skoMC1 skoMC1 (1+(skoMC1 (-6))))+(skoSC1 ((skoMC1 skoMC1 skoMC1)+(skoSC1 ((skoMC1 skoMC1 skoMC1 (-1/12))+(skoSC1 skoMC1 skoMC1 skoMC1 (-1/12))))))))))<=(skoMC1 skoMC1 skoMC1 (2+(skoMC1 (6))))]/\[[(skoSC1 skoMC1 skoMC1 skoMC1 (-2))<=(skoMC1 skoMC1 skoMC1 (2))]/\[[(skoMC1 skoMC1 skoMC1 (-2))<(skoSC1 skoMC1 skoMC1 skoMC1 (2))]/\[[(skoMC1 skoMC1 skoMC1 (-1))<=0]/\[[(skoMC1 skoMC1 skoMC1 (-1))<(skoSC1 skoMC1 skoMC1 skoMC1)]/\[[(skoMC1 skoMC1 skoMC1 (-2))<=0]/\[[0<(skoMC1 skoMC1 skoMC1 (2))]/\[[skoSC1<=5/4]/\[[2<=skoMC1]/\[[0<=skoSC1]/\[[0<skoMC1]/\[[0<=skoMC1]/\[[(skoMC1 (-1))<(skoSC1 skoMC1)]/\[[(skoSC1 skoMC1 (-1))<=skoMC1]/\[[(skoMC1 (-2+(skoMC1 (-5))))<(skoSC1 ((skoMC1 (-1+(skoMC1 (3))))+(skoSC1 ((skoMC1 (-2+(skoMC1 (-3))))+(skoSC1 ((skoMC1 skoMC1 (-1))+(skoSC1 skoMC1 (1/12))))))))]/\[[(skoSC1 ((skoMC1 (1+(skoMC1 (-3))))+(skoSC1 ((skoMC1 (2+(skoMC1 (3))))+(skoSC1 ((skoMC1 skoMC1)+(skoSC1 skoMC1 (-1/12))))))))<=(skoMC1 (2+(skoMC1 (5))))]/\[[(skoMC1 (-2+(skoMC1 (-5))))<(skoSC1 ((skoMC1 (-1+(skoMC1 (3))))+(skoSC1 ((skoMC1 (-2+(skoMC1 (-3))))+(skoSC1 ((skoMC1 (1/6+(skoMC1 (-1))))+(skoSC1 skoMC1 (1/4))))))))]/\[(skoSC1 ((skoMC1 (1+(skoMC1 (-3))))+(skoSC1 ((skoMC1 (2+(skoMC1 (3))))+(skoSC1 ((skoMC1 (-1/6+skoMC1))+(skoSC1 skoMC1 (-1/4))))))))<=(skoMC1 (2+(skoMC1 (5))))]]]]]]]]]]]]]]]]]]]].

% In SMTLib2 format:
(declare-fun skoSC1 () Real) (declare-fun skoMC1 () Real) (assert (and (> skoSC1 0.) (and (<= (* skoSC1 (* skoMC1 (* skoMC1 (* skoMC1 (- 1.))))) (* skoMC1 (* skoMC1 skoMC1))) (and (<= (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (+ (- 2.) (* skoMC1 (- 12.)))))) (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (+ 1. (* skoMC1 (- 6.)))))) (* skoSC1 (+ (* skoMC1 (* skoMC1 skoMC1)) (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (/ (- 1.) 12.)))) (* skoSC1 (* skoMC1 (* skoMC1 (* skoMC1 (/ (- 1.) 12.))))))))))))) (* skoMC1 (* skoMC1 (* skoMC1 (+ 2. (* skoMC1 6.)))))) (and (<= (* skoSC1 (* skoMC1 (* skoMC1 (* skoMC1 (- 2.))))) (* skoMC1 (* skoMC1 (* skoMC1 2.)))) (and (> (* skoSC1 (* skoMC1 (* skoMC1 (* skoMC1 2.)))) (* skoMC1 (* skoMC1 (* skoMC1 (- 2.))))) (and (<= (* skoMC1 (* skoMC1 (* skoMC1 (- 1.)))) 0.) (and (> (* skoSC1 (* skoMC1 (* skoMC1 skoMC1))) (* skoMC1 (* skoMC1 (* skoMC1 (- 1.))))) (and (<= (* skoMC1 (* skoMC1 (* skoMC1 (- 2.)))) 0.) (and (> (* skoMC1 (* skoMC1 (* skoMC1 2.))) 0.) (and (<= skoSC1 (/ 5. 4.)) (and (<= 2. skoMC1) (and (<= 0. skoSC1) (and (> skoMC1 0.) (and (<= 0. skoMC1) (and (> (* skoSC1 skoMC1) (* skoMC1 (- 1.))) (and (<= (* skoSC1 (* skoMC1 (- 1.))) skoMC1) (and (> (* skoSC1 (+ (* skoMC1 (+ (- 1.) (* skoMC1 3.))) (* skoSC1 (+ (* skoMC1 (+ (- 2.) (* skoMC1 (- 3.)))) (* skoSC1 (+ (* skoMC1 (* skoMC1 (- 1.))) (* skoSC1 (* skoMC1 (/ 1. 12.))))))))) (* skoMC1 (+ (- 2.) (* skoMC1 (- 5.))))) (and (<= (* skoSC1 (+ (* skoMC1 (+ 1. (* skoMC1 (- 3.)))) (* skoSC1 (+ (* skoMC1 (+ 2. (* skoMC1 3.))) (* skoSC1 (+ (* skoMC1 skoMC1) (* skoSC1 (* skoMC1 (/ (- 1.) 12.))))))))) (* skoMC1 (+ 2. (* skoMC1 5.)))) (and (> (* skoSC1 (+ (* skoMC1 (+ (- 1.) (* skoMC1 3.))) (* skoSC1 (+ (* skoMC1 (+ (- 2.) (* skoMC1 (- 3.)))) (* skoSC1 (+ (* skoMC1 (+ (/ 1. 6.) (* skoMC1 (- 1.)))) (* skoSC1 (* skoMC1 (/ 1. 4.))))))))) (* skoMC1 (+ (- 2.) (* skoMC1 (- 5.))))) (<= (* skoSC1 (+ (* skoMC1 (+ 1. (* skoMC1 (- 3.)))) (* skoSC1 (+ (* skoMC1 (+ 2. (* skoMC1 3.))) (* skoSC1 (+ (* skoMC1 (+ (/ (- 1.) 6.) skoMC1)) (* skoSC1 (* skoMC1 (/ (- 1.) 4.))))))))) (* skoMC1 (+ 2. (* skoMC1 5.))))))))))))))))))))))))

% In GRF format:
(sequent " MetiTarski formula " (antecedent (> skoSC1 0.) (<= (* skoSC1 (* skoMC1 (* skoMC1 (* skoMC1 (- 1.))))) (* skoMC1 (* skoMC1 skoMC1))) (<= (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (+ (- 2.) (* skoMC1 (- 12.)))))) (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (+ 1. (* skoMC1 (- 6.)))))) (* skoSC1 (+ (* skoMC1 (* skoMC1 skoMC1)) (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (/ (- 1.) 12.)))) (* skoSC1 (* skoMC1 (* skoMC1 (* skoMC1 (/ (- 1.) 12.))))))))))))) (* skoMC1 (* skoMC1 (* skoMC1 (+ 2. (* skoMC1 6.)))))) (<= (* skoSC1 (* skoMC1 (* skoMC1 (* skoMC1 (- 2.))))) (* skoMC1 (* skoMC1 (* skoMC1 2.)))) (> (* skoSC1 (* skoMC1 (* skoMC1 (* skoMC1 2.)))) (* skoMC1 (* skoMC1 (* skoMC1 (- 2.))))) (<= (* skoMC1 (* skoMC1 (* skoMC1 (- 1.)))) 0.) (> (* skoSC1 (* skoMC1 (* skoMC1 skoMC1))) (* skoMC1 (* skoMC1 (* skoMC1 (- 1.))))) (<= (* skoMC1 (* skoMC1 (* skoMC1 (- 2.)))) 0.) (> (* skoMC1 (* skoMC1 (* skoMC1 2.))) 0.) (<= skoSC1 (/ 5. 4.)) (<= 2. skoMC1) (<= 0. skoSC1) (> skoMC1 0.) (<= 0. skoMC1) (> (* skoSC1 skoMC1) (* skoMC1 (- 1.))) (<= (* skoSC1 (* skoMC1 (- 1.))) skoMC1) (> (* skoSC1 (+ (* skoMC1 (+ (- 1.) (* skoMC1 3.))) (* skoSC1 (+ (* skoMC1 (+ (- 2.) (* skoMC1 (- 3.)))) (* skoSC1 (+ (* skoMC1 (* skoMC1 (- 1.))) (* skoSC1 (* skoMC1 (/ 1. 12.))))))))) (* skoMC1 (+ (- 2.) (* skoMC1 (- 5.))))) (<= (* skoSC1 (+ (* skoMC1 (+ 1. (* skoMC1 (- 3.)))) (* skoSC1 (+ (* skoMC1 (+ 2. (* skoMC1 3.))) (* skoSC1 (+ (* skoMC1 skoMC1) (* skoSC1 (* skoMC1 (/ (- 1.) 12.))))))))) (* skoMC1 (+ 2. (* skoMC1 5.)))) (> (* skoSC1 (+ (* skoMC1 (+ (- 1.) (* skoMC1 3.))) (* skoSC1 (+ (* skoMC1 (+ (- 2.) (* skoMC1 (- 3.)))) (* skoSC1 (+ (* skoMC1 (+ (/ 1. 6.) (* skoMC1 (- 1.)))) (* skoSC1 (* skoMC1 (/ 1. 4.))))))))) (* skoMC1 (+ (- 2.) (* skoMC1 (- 5.)))))) (succedent (> (* skoSC1 (+ (* skoMC1 (+ 1. (* skoMC1 (- 3.)))) (* skoSC1 (+ (* skoMC1 (+ 2. (* skoMC1 3.))) (* skoSC1 (+ (* skoMC1 (+ (/ (- 1.) 6.) skoMC1)) (* skoSC1 (* skoMC1 (/ (- 1.) 4.))))))))) (* skoMC1 (+ 2. (* skoMC1 5.))))))
-----[end problem]-----

-----[begin problem]-----
% In Mathematica format:
Timing[Resolve[Exists[{skoSC1,skoMC1}, And[skoMC1*skoMC1*skoMC1*2<=0,skoSC1<=0,skoSC1*skoMC1*skoMC1*skoMC1*-1<=skoMC1*skoMC1*skoMC1,skoSC1*(skoMC1*skoMC1*skoMC1*(-2+skoMC1*-12)+skoSC1*(skoMC1*skoMC1*skoMC1*(1+skoMC1*-6)+skoSC1*(skoMC1*skoMC1*skoMC1+skoSC1*(skoMC1*skoMC1*skoMC1*(-1/12)+skoSC1*skoMC1*skoMC1*skoMC1*(-1/12)))))<=skoMC1*skoMC1*skoMC1*(2+skoMC1*6),skoSC1*skoMC1*skoMC1*skoMC1*-2<=skoMC1*skoMC1*skoMC1*2,skoSC1*skoMC1*skoMC1*skoMC1*2>skoMC1*skoMC1*skoMC1*-2,skoMC1*skoMC1*skoMC1*-1<=0,skoSC1*skoMC1*skoMC1*skoMC1>skoMC1*skoMC1*skoMC1*-1,skoMC1*skoMC1*skoMC1*-2<=0,skoMC1*skoMC1*skoMC1*2>0,skoSC1<=(5/4),2<=skoMC1,0<=skoSC1,skoMC1>0,0<=skoMC1,skoSC1*skoMC1>skoMC1*-1,skoSC1*skoMC1*-1<=skoMC1,skoSC1*(skoMC1*(-1+skoMC1*3)+skoSC1*(skoMC1*(-2+skoMC1*-3)+skoSC1*(skoMC1*skoMC1*-1+skoSC1*skoMC1*(1/12))))>skoMC1*(-2+skoMC1*-5),skoSC1*(skoMC1*(1+skoMC1*-3)+skoSC1*(skoMC1*(2+skoMC1*3)+skoSC1*(skoMC1*skoMC1+skoSC1*skoMC1*(-1/12))))<=skoMC1*(2+skoMC1*5),skoSC1*(skoMC1*(-1+skoMC1*3)+skoSC1*(skoMC1*(-2+skoMC1*-3)+skoSC1*(skoMC1*((1/6)+skoMC1*-1)+skoSC1*skoMC1*(1/4))))>skoMC1*(-2+skoMC1*-5),skoSC1*(skoMC1*(1+skoMC1*-3)+skoSC1*(skoMC1*(2+skoMC1*3)+skoSC1*(skoMC1*((-1/6)+skoMC1)+skoSC1*skoMC1*(-1/4))))<=skoMC1*(2+skoMC1*5)]], Reals]]

% In QepcadB format:
(E skoSC1) (E skoMC1) [[(skoMC1 skoMC1 skoMC1 (2))<=0]/\[[skoSC1<=0]/\[[(skoSC1 skoMC1 skoMC1 skoMC1 (-1))<=(skoMC1 skoMC1 skoMC1)]/\[[(skoSC1 ((skoMC1 skoMC1 skoMC1 (-2+(skoMC1 (-12))))+(skoSC1 ((skoMC1 skoMC1 skoMC1 (1+(skoMC1 (-6))))+(skoSC1 ((skoMC1 skoMC1 skoMC1)+(skoSC1 ((skoMC1 skoMC1 skoMC1 (-1/12))+(skoSC1 skoMC1 skoMC1 skoMC1 (-1/12))))))))))<=(skoMC1 skoMC1 skoMC1 (2+(skoMC1 (6))))]/\[[(skoSC1 skoMC1 skoMC1 skoMC1 (-2))<=(skoMC1 skoMC1 skoMC1 (2))]/\[[(skoMC1 skoMC1 skoMC1 (-2))<(skoSC1 skoMC1 skoMC1 skoMC1 (2))]/\[[(skoMC1 skoMC1 skoMC1 (-1))<=0]/\[[(skoMC1 skoMC1 skoMC1 (-1))<(skoSC1 skoMC1 skoMC1 skoMC1)]/\[[(skoMC1 skoMC1 skoMC1 (-2))<=0]/\[[0<(skoMC1 skoMC1 skoMC1 (2))]/\[[skoSC1<=5/4]/\[[2<=skoMC1]/\[[0<=skoSC1]/\[[0<skoMC1]/\[[0<=skoMC1]/\[[(skoMC1 (-1))<(skoSC1 skoMC1)]/\[[(skoSC1 skoMC1 (-1))<=skoMC1]/\[[(skoMC1 (-2+(skoMC1 (-5))))<(skoSC1 ((skoMC1 (-1+(skoMC1 (3))))+(skoSC1 ((skoMC1 (-2+(skoMC1 (-3))))+(skoSC1 ((skoMC1 skoMC1 (-1))+(skoSC1 skoMC1 (1/12))))))))]/\[[(skoSC1 ((skoMC1 (1+(skoMC1 (-3))))+(skoSC1 ((skoMC1 (2+(skoMC1 (3))))+(skoSC1 ((skoMC1 skoMC1)+(skoSC1 skoMC1 (-1/12))))))))<=(skoMC1 (2+(skoMC1 (5))))]/\[[(skoMC1 (-2+(skoMC1 (-5))))<(skoSC1 ((skoMC1 (-1+(skoMC1 (3))))+(skoSC1 ((skoMC1 (-2+(skoMC1 (-3))))+(skoSC1 ((skoMC1 (1/6+(skoMC1 (-1))))+(skoSC1 skoMC1 (1/4))))))))]/\[(skoSC1 ((skoMC1 (1+(skoMC1 (-3))))+(skoSC1 ((skoMC1 (2+(skoMC1 (3))))+(skoSC1 ((skoMC1 (-1/6+skoMC1))+(skoSC1 skoMC1 (-1/4))))))))<=(skoMC1 (2+(skoMC1 (5))))]]]]]]]]]]]]]]]]]]]]].

% In SMTLib2 format:
(declare-fun skoSC1 () Real) (declare-fun skoMC1 () Real) (assert (and (<= (* skoMC1 (* skoMC1 (* skoMC1 2.))) 0.) (and (<= skoSC1 0.) (and (<= (* skoSC1 (* skoMC1 (* skoMC1 (* skoMC1 (- 1.))))) (* skoMC1 (* skoMC1 skoMC1))) (and (<= (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (+ (- 2.) (* skoMC1 (- 12.)))))) (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (+ 1. (* skoMC1 (- 6.)))))) (* skoSC1 (+ (* skoMC1 (* skoMC1 skoMC1)) (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (/ (- 1.) 12.)))) (* skoSC1 (* skoMC1 (* skoMC1 (* skoMC1 (/ (- 1.) 12.))))))))))))) (* skoMC1 (* skoMC1 (* skoMC1 (+ 2. (* skoMC1 6.)))))) (and (<= (* skoSC1 (* skoMC1 (* skoMC1 (* skoMC1 (- 2.))))) (* skoMC1 (* skoMC1 (* skoMC1 2.)))) (and (> (* skoSC1 (* skoMC1 (* skoMC1 (* skoMC1 2.)))) (* skoMC1 (* skoMC1 (* skoMC1 (- 2.))))) (and (<= (* skoMC1 (* skoMC1 (* skoMC1 (- 1.)))) 0.) (and (> (* skoSC1 (* skoMC1 (* skoMC1 skoMC1))) (* skoMC1 (* skoMC1 (* skoMC1 (- 1.))))) (and (<= (* skoMC1 (* skoMC1 (* skoMC1 (- 2.)))) 0.) (and (> (* skoMC1 (* skoMC1 (* skoMC1 2.))) 0.) (and (<= skoSC1 (/ 5. 4.)) (and (<= 2. skoMC1) (and (<= 0. skoSC1) (and (> skoMC1 0.) (and (<= 0. skoMC1) (and (> (* skoSC1 skoMC1) (* skoMC1 (- 1.))) (and (<= (* skoSC1 (* skoMC1 (- 1.))) skoMC1) (and (> (* skoSC1 (+ (* skoMC1 (+ (- 1.) (* skoMC1 3.))) (* skoSC1 (+ (* skoMC1 (+ (- 2.) (* skoMC1 (- 3.)))) (* skoSC1 (+ (* skoMC1 (* skoMC1 (- 1.))) (* skoSC1 (* skoMC1 (/ 1. 12.))))))))) (* skoMC1 (+ (- 2.) (* skoMC1 (- 5.))))) (and (<= (* skoSC1 (+ (* skoMC1 (+ 1. (* skoMC1 (- 3.)))) (* skoSC1 (+ (* skoMC1 (+ 2. (* skoMC1 3.))) (* skoSC1 (+ (* skoMC1 skoMC1) (* skoSC1 (* skoMC1 (/ (- 1.) 12.))))))))) (* skoMC1 (+ 2. (* skoMC1 5.)))) (and (> (* skoSC1 (+ (* skoMC1 (+ (- 1.) (* skoMC1 3.))) (* skoSC1 (+ (* skoMC1 (+ (- 2.) (* skoMC1 (- 3.)))) (* skoSC1 (+ (* skoMC1 (+ (/ 1. 6.) (* skoMC1 (- 1.)))) (* skoSC1 (* skoMC1 (/ 1. 4.))))))))) (* skoMC1 (+ (- 2.) (* skoMC1 (- 5.))))) (<= (* skoSC1 (+ (* skoMC1 (+ 1. (* skoMC1 (- 3.)))) (* skoSC1 (+ (* skoMC1 (+ 2. (* skoMC1 3.))) (* skoSC1 (+ (* skoMC1 (+ (/ (- 1.) 6.) skoMC1)) (* skoSC1 (* skoMC1 (/ (- 1.) 4.))))))))) (* skoMC1 (+ 2. (* skoMC1 5.)))))))))))))))))))))))))

% In GRF format:
(sequent " MetiTarski formula " (antecedent (<= (* skoMC1 (* skoMC1 (* skoMC1 2.))) 0.) (<= skoSC1 0.) (<= (* skoSC1 (* skoMC1 (* skoMC1 (* skoMC1 (- 1.))))) (* skoMC1 (* skoMC1 skoMC1))) (<= (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (+ (- 2.) (* skoMC1 (- 12.)))))) (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (+ 1. (* skoMC1 (- 6.)))))) (* skoSC1 (+ (* skoMC1 (* skoMC1 skoMC1)) (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (/ (- 1.) 12.)))) (* skoSC1 (* skoMC1 (* skoMC1 (* skoMC1 (/ (- 1.) 12.))))))))))))) (* skoMC1 (* skoMC1 (* skoMC1 (+ 2. (* skoMC1 6.)))))) (<= (* skoSC1 (* skoMC1 (* skoMC1 (* skoMC1 (- 2.))))) (* skoMC1 (* skoMC1 (* skoMC1 2.)))) (> (* skoSC1 (* skoMC1 (* skoMC1 (* skoMC1 2.)))) (* skoMC1 (* skoMC1 (* skoMC1 (- 2.))))) (<= (* skoMC1 (* skoMC1 (* skoMC1 (- 1.)))) 0.) (> (* skoSC1 (* skoMC1 (* skoMC1 skoMC1))) (* skoMC1 (* skoMC1 (* skoMC1 (- 1.))))) (<= (* skoMC1 (* skoMC1 (* skoMC1 (- 2.)))) 0.) (> (* skoMC1 (* skoMC1 (* skoMC1 2.))) 0.) (<= skoSC1 (/ 5. 4.)) (<= 2. skoMC1) (<= 0. skoSC1) (> skoMC1 0.) (<= 0. skoMC1) (> (* skoSC1 skoMC1) (* skoMC1 (- 1.))) (<= (* skoSC1 (* skoMC1 (- 1.))) skoMC1) (> (* skoSC1 (+ (* skoMC1 (+ (- 1.) (* skoMC1 3.))) (* skoSC1 (+ (* skoMC1 (+ (- 2.) (* skoMC1 (- 3.)))) (* skoSC1 (+ (* skoMC1 (* skoMC1 (- 1.))) (* skoSC1 (* skoMC1 (/ 1. 12.))))))))) (* skoMC1 (+ (- 2.) (* skoMC1 (- 5.))))) (<= (* skoSC1 (+ (* skoMC1 (+ 1. (* skoMC1 (- 3.)))) (* skoSC1 (+ (* skoMC1 (+ 2. (* skoMC1 3.))) (* skoSC1 (+ (* skoMC1 skoMC1) (* skoSC1 (* skoMC1 (/ (- 1.) 12.))))))))) (* skoMC1 (+ 2. (* skoMC1 5.)))) (> (* skoSC1 (+ (* skoMC1 (+ (- 1.) (* skoMC1 3.))) (* skoSC1 (+ (* skoMC1 (+ (- 2.) (* skoMC1 (- 3.)))) (* skoSC1 (+ (* skoMC1 (+ (/ 1. 6.) (* skoMC1 (- 1.)))) (* skoSC1 (* skoMC1 (/ 1. 4.))))))))) (* skoMC1 (+ (- 2.) (* skoMC1 (- 5.)))))) (succedent (> (* skoSC1 (+ (* skoMC1 (+ 1. (* skoMC1 (- 3.)))) (* skoSC1 (+ (* skoMC1 (+ 2. (* skoMC1 3.))) (* skoSC1 (+ (* skoMC1 (+ (/ (- 1.) 6.) skoMC1)) (* skoSC1 (* skoMC1 (/ (- 1.) 4.))))))))) (* skoMC1 (+ 2. (* skoMC1 5.))))))
-----[end problem]-----

-----[begin problem]-----
% In Mathematica format:
Timing[Resolve[Exists[{skoSC1,skoMC1}, And[skoSC1*(skoMC1*skoMC1*skoMC1*(1+skoMC1*-3)+skoSC1*(skoMC1*skoMC1*skoMC1*(2+skoMC1*3)+skoSC1*(skoMC1*skoMC1*skoMC1*skoMC1+skoSC1*skoMC1*skoMC1*skoMC1*(-1/12))))<=skoMC1*skoMC1*skoMC1*(2+skoMC1*5),skoSC1<=0,skoMC1*skoMC1*skoMC1*2>0,skoSC1*skoMC1*skoMC1*skoMC1*-1<=skoMC1*skoMC1*skoMC1,skoSC1*(skoMC1*skoMC1*skoMC1*(-2+skoMC1*-12)+skoSC1*(skoMC1*skoMC1*skoMC1*(1+skoMC1*-6)+skoSC1*(skoMC1*skoMC1*skoMC1+skoSC1*(skoMC1*skoMC1*skoMC1*(-1/12)+skoSC1*skoMC1*skoMC1*skoMC1*(-1/12)))))<=skoMC1*skoMC1*skoMC1*(2+skoMC1*6),skoSC1*skoMC1*skoMC1*skoMC1*-2<=skoMC1*skoMC1*skoMC1*2,skoSC1*skoMC1*skoMC1*skoMC1*2>skoMC1*skoMC1*skoMC1*-2,skoMC1*skoMC1*skoMC1*-1<=0,skoSC1*skoMC1*skoMC1*skoMC1>skoMC1*skoMC1*skoMC1*-1,skoMC1*skoMC1*skoMC1*-2<=0,skoMC1*skoMC1*skoMC1*2>0,skoSC1<=(5/4),2<=skoMC1,0<=skoSC1,skoMC1>0,0<=skoMC1,skoSC1*skoMC1>skoMC1*-1,skoSC1*skoMC1*-1<=skoMC1,skoSC1*(skoMC1*(-1+skoMC1*3)+skoSC1*(skoMC1*(-2+skoMC1*-3)+skoSC1*(skoMC1*skoMC1*-1+skoSC1*skoMC1*(1/12))))>skoMC1*(-2+skoMC1*-5),skoSC1*(skoMC1*(1+skoMC1*-3)+skoSC1*(skoMC1*(2+skoMC1*3)+skoSC1*(skoMC1*skoMC1+skoSC1*skoMC1*(-1/12))))<=skoMC1*(2+skoMC1*5),skoSC1*(skoMC1*(-1+skoMC1*3)+skoSC1*(skoMC1*(-2+skoMC1*-3)+skoSC1*(skoMC1*((1/6)+skoMC1*-1)+skoSC1*skoMC1*(1/4))))>skoMC1*(-2+skoMC1*-5),skoSC1*(skoMC1*(1+skoMC1*-3)+skoSC1*(skoMC1*(2+skoMC1*3)+skoSC1*(skoMC1*((-1/6)+skoMC1)+skoSC1*skoMC1*(-1/4))))<=skoMC1*(2+skoMC1*5)]], Reals]]

% In QepcadB format:
(E skoSC1) (E skoMC1) [[(skoSC1 ((skoMC1 skoMC1 skoMC1 (1+(skoMC1 (-3))))+(skoSC1 ((skoMC1 skoMC1 skoMC1 (2+(skoMC1 (3))))+(skoSC1 ((skoMC1 skoMC1 skoMC1 skoMC1)+(skoSC1 skoMC1 skoMC1 skoMC1 (-1/12))))))))<=(skoMC1 skoMC1 skoMC1 (2+(skoMC1 (5))))]/\[[skoSC1<=0]/\[[0<(skoMC1 skoMC1 skoMC1 (2))]/\[[(skoSC1 skoMC1 skoMC1 skoMC1 (-1))<=(skoMC1 skoMC1 skoMC1)]/\[[(skoSC1 ((skoMC1 skoMC1 skoMC1 (-2+(skoMC1 (-12))))+(skoSC1 ((skoMC1 skoMC1 skoMC1 (1+(skoMC1 (-6))))+(skoSC1 ((skoMC1 skoMC1 skoMC1)+(skoSC1 ((skoMC1 skoMC1 skoMC1 (-1/12))+(skoSC1 skoMC1 skoMC1 skoMC1 (-1/12))))))))))<=(skoMC1 skoMC1 skoMC1 (2+(skoMC1 (6))))]/\[[(skoSC1 skoMC1 skoMC1 skoMC1 (-2))<=(skoMC1 skoMC1 skoMC1 (2))]/\[[(skoMC1 skoMC1 skoMC1 (-2))<(skoSC1 skoMC1 skoMC1 skoMC1 (2))]/\[[(skoMC1 skoMC1 skoMC1 (-1))<=0]/\[[(skoMC1 skoMC1 skoMC1 (-1))<(skoSC1 skoMC1 skoMC1 skoMC1)]/\[[(skoMC1 skoMC1 skoMC1 (-2))<=0]/\[[0<(skoMC1 skoMC1 skoMC1 (2))]/\[[skoSC1<=5/4]/\[[2<=skoMC1]/\[[0<=skoSC1]/\[[0<skoMC1]/\[[0<=skoMC1]/\[[(skoMC1 (-1))<(skoSC1 skoMC1)]/\[[(skoSC1 skoMC1 (-1))<=skoMC1]/\[[(skoMC1 (-2+(skoMC1 (-5))))<(skoSC1 ((skoMC1 (-1+(skoMC1 (3))))+(skoSC1 ((skoMC1 (-2+(skoMC1 (-3))))+(skoSC1 ((skoMC1 skoMC1 (-1))+(skoSC1 skoMC1 (1/12))))))))]/\[[(skoSC1 ((skoMC1 (1+(skoMC1 (-3))))+(skoSC1 ((skoMC1 (2+(skoMC1 (3))))+(skoSC1 ((skoMC1 skoMC1)+(skoSC1 skoMC1 (-1/12))))))))<=(skoMC1 (2+(skoMC1 (5))))]/\[[(skoMC1 (-2+(skoMC1 (-5))))<(skoSC1 ((skoMC1 (-1+(skoMC1 (3))))+(skoSC1 ((skoMC1 (-2+(skoMC1 (-3))))+(skoSC1 ((skoMC1 (1/6+(skoMC1 (-1))))+(skoSC1 skoMC1 (1/4))))))))]/\[(skoSC1 ((skoMC1 (1+(skoMC1 (-3))))+(skoSC1 ((skoMC1 (2+(skoMC1 (3))))+(skoSC1 ((skoMC1 (-1/6+skoMC1))+(skoSC1 skoMC1 (-1/4))))))))<=(skoMC1 (2+(skoMC1 (5))))]]]]]]]]]]]]]]]]]]]]]].

% In SMTLib2 format:
(declare-fun skoSC1 () Real) (declare-fun skoMC1 () Real) (assert (and (<= (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (+ 1. (* skoMC1 (- 3.)))))) (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (+ 2. (* skoMC1 3.))))) (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 skoMC1))) (* skoSC1 (* skoMC1 (* skoMC1 (* skoMC1 (/ (- 1.) 12.))))))))))) (* skoMC1 (* skoMC1 (* skoMC1 (+ 2. (* skoMC1 5.)))))) (and (<= skoSC1 0.) (and (> (* skoMC1 (* skoMC1 (* skoMC1 2.))) 0.) (and (<= (* skoSC1 (* skoMC1 (* skoMC1 (* skoMC1 (- 1.))))) (* skoMC1 (* skoMC1 skoMC1))) (and (<= (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (+ (- 2.) (* skoMC1 (- 12.)))))) (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (+ 1. (* skoMC1 (- 6.)))))) (* skoSC1 (+ (* skoMC1 (* skoMC1 skoMC1)) (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (/ (- 1.) 12.)))) (* skoSC1 (* skoMC1 (* skoMC1 (* skoMC1 (/ (- 1.) 12.))))))))))))) (* skoMC1 (* skoMC1 (* skoMC1 (+ 2. (* skoMC1 6.)))))) (and (<= (* skoSC1 (* skoMC1 (* skoMC1 (* skoMC1 (- 2.))))) (* skoMC1 (* skoMC1 (* skoMC1 2.)))) (and (> (* skoSC1 (* skoMC1 (* skoMC1 (* skoMC1 2.)))) (* skoMC1 (* skoMC1 (* skoMC1 (- 2.))))) (and (<= (* skoMC1 (* skoMC1 (* skoMC1 (- 1.)))) 0.) (and (> (* skoSC1 (* skoMC1 (* skoMC1 skoMC1))) (* skoMC1 (* skoMC1 (* skoMC1 (- 1.))))) (and (<= (* skoMC1 (* skoMC1 (* skoMC1 (- 2.)))) 0.) (and (> (* skoMC1 (* skoMC1 (* skoMC1 2.))) 0.) (and (<= skoSC1 (/ 5. 4.)) (and (<= 2. skoMC1) (and (<= 0. skoSC1) (and (> skoMC1 0.) (and (<= 0. skoMC1) (and (> (* skoSC1 skoMC1) (* skoMC1 (- 1.))) (and (<= (* skoSC1 (* skoMC1 (- 1.))) skoMC1) (and (> (* skoSC1 (+ (* skoMC1 (+ (- 1.) (* skoMC1 3.))) (* skoSC1 (+ (* skoMC1 (+ (- 2.) (* skoMC1 (- 3.)))) (* skoSC1 (+ (* skoMC1 (* skoMC1 (- 1.))) (* skoSC1 (* skoMC1 (/ 1. 12.))))))))) (* skoMC1 (+ (- 2.) (* skoMC1 (- 5.))))) (and (<= (* skoSC1 (+ (* skoMC1 (+ 1. (* skoMC1 (- 3.)))) (* skoSC1 (+ (* skoMC1 (+ 2. (* skoMC1 3.))) (* skoSC1 (+ (* skoMC1 skoMC1) (* skoSC1 (* skoMC1 (/ (- 1.) 12.))))))))) (* skoMC1 (+ 2. (* skoMC1 5.)))) (and (> (* skoSC1 (+ (* skoMC1 (+ (- 1.) (* skoMC1 3.))) (* skoSC1 (+ (* skoMC1 (+ (- 2.) (* skoMC1 (- 3.)))) (* skoSC1 (+ (* skoMC1 (+ (/ 1. 6.) (* skoMC1 (- 1.)))) (* skoSC1 (* skoMC1 (/ 1. 4.))))))))) (* skoMC1 (+ (- 2.) (* skoMC1 (- 5.))))) (<= (* skoSC1 (+ (* skoMC1 (+ 1. (* skoMC1 (- 3.)))) (* skoSC1 (+ (* skoMC1 (+ 2. (* skoMC1 3.))) (* skoSC1 (+ (* skoMC1 (+ (/ (- 1.) 6.) skoMC1)) (* skoSC1 (* skoMC1 (/ (- 1.) 4.))))))))) (* skoMC1 (+ 2. (* skoMC1 5.))))))))))))))))))))))))))

% In GRF format:
(sequent " MetiTarski formula " (antecedent (<= (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (+ 1. (* skoMC1 (- 3.)))))) (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (+ 2. (* skoMC1 3.))))) (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 skoMC1))) (* skoSC1 (* skoMC1 (* skoMC1 (* skoMC1 (/ (- 1.) 12.))))))))))) (* skoMC1 (* skoMC1 (* skoMC1 (+ 2. (* skoMC1 5.)))))) (<= skoSC1 0.) (> (* skoMC1 (* skoMC1 (* skoMC1 2.))) 0.) (<= (* skoSC1 (* skoMC1 (* skoMC1 (* skoMC1 (- 1.))))) (* skoMC1 (* skoMC1 skoMC1))) (<= (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (+ (- 2.) (* skoMC1 (- 12.)))))) (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (+ 1. (* skoMC1 (- 6.)))))) (* skoSC1 (+ (* skoMC1 (* skoMC1 skoMC1)) (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (/ (- 1.) 12.)))) (* skoSC1 (* skoMC1 (* skoMC1 (* skoMC1 (/ (- 1.) 12.))))))))))))) (* skoMC1 (* skoMC1 (* skoMC1 (+ 2. (* skoMC1 6.)))))) (<= (* skoSC1 (* skoMC1 (* skoMC1 (* skoMC1 (- 2.))))) (* skoMC1 (* skoMC1 (* skoMC1 2.)))) (> (* skoSC1 (* skoMC1 (* skoMC1 (* skoMC1 2.)))) (* skoMC1 (* skoMC1 (* skoMC1 (- 2.))))) (<= (* skoMC1 (* skoMC1 (* skoMC1 (- 1.)))) 0.) (> (* skoSC1 (* skoMC1 (* skoMC1 skoMC1))) (* skoMC1 (* skoMC1 (* skoMC1 (- 1.))))) (<= (* skoMC1 (* skoMC1 (* skoMC1 (- 2.)))) 0.) (> (* skoMC1 (* skoMC1 (* skoMC1 2.))) 0.) (<= skoSC1 (/ 5. 4.)) (<= 2. skoMC1) (<= 0. skoSC1) (> skoMC1 0.) (<= 0. skoMC1) (> (* skoSC1 skoMC1) (* skoMC1 (- 1.))) (<= (* skoSC1 (* skoMC1 (- 1.))) skoMC1) (> (* skoSC1 (+ (* skoMC1 (+ (- 1.) (* skoMC1 3.))) (* skoSC1 (+ (* skoMC1 (+ (- 2.) (* skoMC1 (- 3.)))) (* skoSC1 (+ (* skoMC1 (* skoMC1 (- 1.))) (* skoSC1 (* skoMC1 (/ 1. 12.))))))))) (* skoMC1 (+ (- 2.) (* skoMC1 (- 5.))))) (<= (* skoSC1 (+ (* skoMC1 (+ 1. (* skoMC1 (- 3.)))) (* skoSC1 (+ (* skoMC1 (+ 2. (* skoMC1 3.))) (* skoSC1 (+ (* skoMC1 skoMC1) (* skoSC1 (* skoMC1 (/ (- 1.) 12.))))))))) (* skoMC1 (+ 2. (* skoMC1 5.)))) (> (* skoSC1 (+ (* skoMC1 (+ (- 1.) (* skoMC1 3.))) (* skoSC1 (+ (* skoMC1 (+ (- 2.) (* skoMC1 (- 3.)))) (* skoSC1 (+ (* skoMC1 (+ (/ 1. 6.) (* skoMC1 (- 1.)))) (* skoSC1 (* skoMC1 (/ 1. 4.))))))))) (* skoMC1 (+ (- 2.) (* skoMC1 (- 5.)))))) (succedent (> (* skoSC1 (+ (* skoMC1 (+ 1. (* skoMC1 (- 3.)))) (* skoSC1 (+ (* skoMC1 (+ 2. (* skoMC1 3.))) (* skoSC1 (+ (* skoMC1 (+ (/ (- 1.) 6.) skoMC1)) (* skoSC1 (* skoMC1 (/ (- 1.) 4.))))))))) (* skoMC1 (+ 2. (* skoMC1 5.))))))
-----[end problem]-----

-----[begin problem]-----
% In Mathematica format:
Timing[Resolve[Exists[{skoSC1,skoMC1}, And[skoSC1*(skoMC1*skoMC1*skoMC1*(1+skoMC1*-3)+skoSC1*(skoMC1*skoMC1*skoMC1*(2+skoMC1*3)+skoSC1*(skoMC1*skoMC1*skoMC1*skoMC1+skoSC1*skoMC1*skoMC1*skoMC1*(-1/12))))<=skoMC1*skoMC1*skoMC1*(2+skoMC1*5),skoSC1*skoMC1*skoMC1*skoMC1*-1<=skoMC1*skoMC1*skoMC1,skoSC1*(skoMC1*skoMC1*skoMC1*(-2+skoMC1*-12)+skoSC1*(skoMC1*skoMC1*skoMC1*(1+skoMC1*-6)+skoSC1*(skoMC1*skoMC1*skoMC1+skoSC1*(skoMC1*skoMC1*skoMC1*(-1/12)+skoSC1*skoMC1*skoMC1*skoMC1*(-1/12)))))<=skoMC1*skoMC1*skoMC1*(2+skoMC1*6),skoSC1*skoMC1*skoMC1*skoMC1*-2<=skoMC1*skoMC1*skoMC1*2,skoSC1*skoMC1*skoMC1*skoMC1*2>skoMC1*skoMC1*skoMC1*-2,skoMC1*skoMC1*skoMC1*-1<=0,skoSC1*skoMC1*skoMC1*skoMC1>skoMC1*skoMC1*skoMC1*-1,skoMC1*skoMC1*skoMC1*-2<=0,skoMC1*skoMC1*skoMC1*2>0,skoSC1<=(5/4),2<=skoMC1,0<=skoSC1,skoMC1>0,0<=skoMC1,skoSC1*skoMC1>skoMC1*-1,skoSC1*skoMC1*-1<=skoMC1,skoSC1*(skoMC1*(-1+skoMC1*3)+skoSC1*(skoMC1*(-2+skoMC1*-3)+skoSC1*(skoMC1*skoMC1*-1+skoSC1*skoMC1*(1/12))))>skoMC1*(-2+skoMC1*-5),skoSC1*(skoMC1*(1+skoMC1*-3)+skoSC1*(skoMC1*(2+skoMC1*3)+skoSC1*(skoMC1*skoMC1+skoSC1*skoMC1*(-1/12))))<=skoMC1*(2+skoMC1*5),skoSC1*(skoMC1*(-1+skoMC1*3)+skoSC1*(skoMC1*(-2+skoMC1*-3)+skoSC1*(skoMC1*((1/6)+skoMC1*-1)+skoSC1*skoMC1*(1/4))))>skoMC1*(-2+skoMC1*-5),skoSC1*(skoMC1*(1+skoMC1*-3)+skoSC1*(skoMC1*(2+skoMC1*3)+skoSC1*(skoMC1*((-1/6)+skoMC1)+skoSC1*skoMC1*(-1/4))))<=skoMC1*(2+skoMC1*5)]], Reals]]

% In QepcadB format:
(E skoSC1) (E skoMC1) [[(skoSC1 ((skoMC1 skoMC1 skoMC1 (1+(skoMC1 (-3))))+(skoSC1 ((skoMC1 skoMC1 skoMC1 (2+(skoMC1 (3))))+(skoSC1 ((skoMC1 skoMC1 skoMC1 skoMC1)+(skoSC1 skoMC1 skoMC1 skoMC1 (-1/12))))))))<=(skoMC1 skoMC1 skoMC1 (2+(skoMC1 (5))))]/\[[(skoSC1 skoMC1 skoMC1 skoMC1 (-1))<=(skoMC1 skoMC1 skoMC1)]/\[[(skoSC1 ((skoMC1 skoMC1 skoMC1 (-2+(skoMC1 (-12))))+(skoSC1 ((skoMC1 skoMC1 skoMC1 (1+(skoMC1 (-6))))+(skoSC1 ((skoMC1 skoMC1 skoMC1)+(skoSC1 ((skoMC1 skoMC1 skoMC1 (-1/12))+(skoSC1 skoMC1 skoMC1 skoMC1 (-1/12))))))))))<=(skoMC1 skoMC1 skoMC1 (2+(skoMC1 (6))))]/\[[(skoSC1 skoMC1 skoMC1 skoMC1 (-2))<=(skoMC1 skoMC1 skoMC1 (2))]/\[[(skoMC1 skoMC1 skoMC1 (-2))<(skoSC1 skoMC1 skoMC1 skoMC1 (2))]/\[[(skoMC1 skoMC1 skoMC1 (-1))<=0]/\[[(skoMC1 skoMC1 skoMC1 (-1))<(skoSC1 skoMC1 skoMC1 skoMC1)]/\[[(skoMC1 skoMC1 skoMC1 (-2))<=0]/\[[0<(skoMC1 skoMC1 skoMC1 (2))]/\[[skoSC1<=5/4]/\[[2<=skoMC1]/\[[0<=skoSC1]/\[[0<skoMC1]/\[[0<=skoMC1]/\[[(skoMC1 (-1))<(skoSC1 skoMC1)]/\[[(skoSC1 skoMC1 (-1))<=skoMC1]/\[[(skoMC1 (-2+(skoMC1 (-5))))<(skoSC1 ((skoMC1 (-1+(skoMC1 (3))))+(skoSC1 ((skoMC1 (-2+(skoMC1 (-3))))+(skoSC1 ((skoMC1 skoMC1 (-1))+(skoSC1 skoMC1 (1/12))))))))]/\[[(skoSC1 ((skoMC1 (1+(skoMC1 (-3))))+(skoSC1 ((skoMC1 (2+(skoMC1 (3))))+(skoSC1 ((skoMC1 skoMC1)+(skoSC1 skoMC1 (-1/12))))))))<=(skoMC1 (2+(skoMC1 (5))))]/\[[(skoMC1 (-2+(skoMC1 (-5))))<(skoSC1 ((skoMC1 (-1+(skoMC1 (3))))+(skoSC1 ((skoMC1 (-2+(skoMC1 (-3))))+(skoSC1 ((skoMC1 (1/6+(skoMC1 (-1))))+(skoSC1 skoMC1 (1/4))))))))]/\[(skoSC1 ((skoMC1 (1+(skoMC1 (-3))))+(skoSC1 ((skoMC1 (2+(skoMC1 (3))))+(skoSC1 ((skoMC1 (-1/6+skoMC1))+(skoSC1 skoMC1 (-1/4))))))))<=(skoMC1 (2+(skoMC1 (5))))]]]]]]]]]]]]]]]]]]]].

% In SMTLib2 format:
(declare-fun skoSC1 () Real) (declare-fun skoMC1 () Real) (assert (and (<= (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (+ 1. (* skoMC1 (- 3.)))))) (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (+ 2. (* skoMC1 3.))))) (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 skoMC1))) (* skoSC1 (* skoMC1 (* skoMC1 (* skoMC1 (/ (- 1.) 12.))))))))))) (* skoMC1 (* skoMC1 (* skoMC1 (+ 2. (* skoMC1 5.)))))) (and (<= (* skoSC1 (* skoMC1 (* skoMC1 (* skoMC1 (- 1.))))) (* skoMC1 (* skoMC1 skoMC1))) (and (<= (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (+ (- 2.) (* skoMC1 (- 12.)))))) (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (+ 1. (* skoMC1 (- 6.)))))) (* skoSC1 (+ (* skoMC1 (* skoMC1 skoMC1)) (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (/ (- 1.) 12.)))) (* skoSC1 (* skoMC1 (* skoMC1 (* skoMC1 (/ (- 1.) 12.))))))))))))) (* skoMC1 (* skoMC1 (* skoMC1 (+ 2. (* skoMC1 6.)))))) (and (<= (* skoSC1 (* skoMC1 (* skoMC1 (* skoMC1 (- 2.))))) (* skoMC1 (* skoMC1 (* skoMC1 2.)))) (and (> (* skoSC1 (* skoMC1 (* skoMC1 (* skoMC1 2.)))) (* skoMC1 (* skoMC1 (* skoMC1 (- 2.))))) (and (<= (* skoMC1 (* skoMC1 (* skoMC1 (- 1.)))) 0.) (and (> (* skoSC1 (* skoMC1 (* skoMC1 skoMC1))) (* skoMC1 (* skoMC1 (* skoMC1 (- 1.))))) (and (<= (* skoMC1 (* skoMC1 (* skoMC1 (- 2.)))) 0.) (and (> (* skoMC1 (* skoMC1 (* skoMC1 2.))) 0.) (and (<= skoSC1 (/ 5. 4.)) (and (<= 2. skoMC1) (and (<= 0. skoSC1) (and (> skoMC1 0.) (and (<= 0. skoMC1) (and (> (* skoSC1 skoMC1) (* skoMC1 (- 1.))) (and (<= (* skoSC1 (* skoMC1 (- 1.))) skoMC1) (and (> (* skoSC1 (+ (* skoMC1 (+ (- 1.) (* skoMC1 3.))) (* skoSC1 (+ (* skoMC1 (+ (- 2.) (* skoMC1 (- 3.)))) (* skoSC1 (+ (* skoMC1 (* skoMC1 (- 1.))) (* skoSC1 (* skoMC1 (/ 1. 12.))))))))) (* skoMC1 (+ (- 2.) (* skoMC1 (- 5.))))) (and (<= (* skoSC1 (+ (* skoMC1 (+ 1. (* skoMC1 (- 3.)))) (* skoSC1 (+ (* skoMC1 (+ 2. (* skoMC1 3.))) (* skoSC1 (+ (* skoMC1 skoMC1) (* skoSC1 (* skoMC1 (/ (- 1.) 12.))))))))) (* skoMC1 (+ 2. (* skoMC1 5.)))) (and (> (* skoSC1 (+ (* skoMC1 (+ (- 1.) (* skoMC1 3.))) (* skoSC1 (+ (* skoMC1 (+ (- 2.) (* skoMC1 (- 3.)))) (* skoSC1 (+ (* skoMC1 (+ (/ 1. 6.) (* skoMC1 (- 1.)))) (* skoSC1 (* skoMC1 (/ 1. 4.))))))))) (* skoMC1 (+ (- 2.) (* skoMC1 (- 5.))))) (<= (* skoSC1 (+ (* skoMC1 (+ 1. (* skoMC1 (- 3.)))) (* skoSC1 (+ (* skoMC1 (+ 2. (* skoMC1 3.))) (* skoSC1 (+ (* skoMC1 (+ (/ (- 1.) 6.) skoMC1)) (* skoSC1 (* skoMC1 (/ (- 1.) 4.))))))))) (* skoMC1 (+ 2. (* skoMC1 5.))))))))))))))))))))))))

% In GRF format:
(sequent " MetiTarski formula " (antecedent (<= (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (+ 1. (* skoMC1 (- 3.)))))) (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (+ 2. (* skoMC1 3.))))) (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 skoMC1))) (* skoSC1 (* skoMC1 (* skoMC1 (* skoMC1 (/ (- 1.) 12.))))))))))) (* skoMC1 (* skoMC1 (* skoMC1 (+ 2. (* skoMC1 5.)))))) (<= (* skoSC1 (* skoMC1 (* skoMC1 (* skoMC1 (- 1.))))) (* skoMC1 (* skoMC1 skoMC1))) (<= (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (+ (- 2.) (* skoMC1 (- 12.)))))) (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (+ 1. (* skoMC1 (- 6.)))))) (* skoSC1 (+ (* skoMC1 (* skoMC1 skoMC1)) (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (/ (- 1.) 12.)))) (* skoSC1 (* skoMC1 (* skoMC1 (* skoMC1 (/ (- 1.) 12.))))))))))))) (* skoMC1 (* skoMC1 (* skoMC1 (+ 2. (* skoMC1 6.)))))) (<= (* skoSC1 (* skoMC1 (* skoMC1 (* skoMC1 (- 2.))))) (* skoMC1 (* skoMC1 (* skoMC1 2.)))) (> (* skoSC1 (* skoMC1 (* skoMC1 (* skoMC1 2.)))) (* skoMC1 (* skoMC1 (* skoMC1 (- 2.))))) (<= (* skoMC1 (* skoMC1 (* skoMC1 (- 1.)))) 0.) (> (* skoSC1 (* skoMC1 (* skoMC1 skoMC1))) (* skoMC1 (* skoMC1 (* skoMC1 (- 1.))))) (<= (* skoMC1 (* skoMC1 (* skoMC1 (- 2.)))) 0.) (> (* skoMC1 (* skoMC1 (* skoMC1 2.))) 0.) (<= skoSC1 (/ 5. 4.)) (<= 2. skoMC1) (<= 0. skoSC1) (> skoMC1 0.) (<= 0. skoMC1) (> (* skoSC1 skoMC1) (* skoMC1 (- 1.))) (<= (* skoSC1 (* skoMC1 (- 1.))) skoMC1) (> (* skoSC1 (+ (* skoMC1 (+ (- 1.) (* skoMC1 3.))) (* skoSC1 (+ (* skoMC1 (+ (- 2.) (* skoMC1 (- 3.)))) (* skoSC1 (+ (* skoMC1 (* skoMC1 (- 1.))) (* skoSC1 (* skoMC1 (/ 1. 12.))))))))) (* skoMC1 (+ (- 2.) (* skoMC1 (- 5.))))) (<= (* skoSC1 (+ (* skoMC1 (+ 1. (* skoMC1 (- 3.)))) (* skoSC1 (+ (* skoMC1 (+ 2. (* skoMC1 3.))) (* skoSC1 (+ (* skoMC1 skoMC1) (* skoSC1 (* skoMC1 (/ (- 1.) 12.))))))))) (* skoMC1 (+ 2. (* skoMC1 5.)))) (> (* skoSC1 (+ (* skoMC1 (+ (- 1.) (* skoMC1 3.))) (* skoSC1 (+ (* skoMC1 (+ (- 2.) (* skoMC1 (- 3.)))) (* skoSC1 (+ (* skoMC1 (+ (/ 1. 6.) (* skoMC1 (- 1.)))) (* skoSC1 (* skoMC1 (/ 1. 4.))))))))) (* skoMC1 (+ (- 2.) (* skoMC1 (- 5.)))))) (succedent (> (* skoSC1 (+ (* skoMC1 (+ 1. (* skoMC1 (- 3.)))) (* skoSC1 (+ (* skoMC1 (+ 2. (* skoMC1 3.))) (* skoSC1 (+ (* skoMC1 (+ (/ (- 1.) 6.) skoMC1)) (* skoSC1 (* skoMC1 (/ (- 1.) 4.))))))))) (* skoMC1 (+ 2. (* skoMC1 5.))))))
-----[end problem]-----

-----[begin problem]-----
% In Mathematica format:
Timing[Resolve[Exists[{skoSC1,skoMC1}, And[skoSC1*(skoMC1*skoMC1*skoMC1*(1+skoMC1*-3)+skoSC1*(skoMC1*skoMC1*skoMC1*(2+skoMC1*3)+skoSC1*(skoMC1*skoMC1*skoMC1*skoMC1+skoSC1*(skoMC1*skoMC1*skoMC1*(-1/12)+skoSC1*skoSC1*(skoMC1*skoMC1*skoMC1*(1/360)+skoSC1*skoSC1*(skoMC1*skoMC1*skoMC1*(-1/20160)+skoSC1*skoSC1*(skoMC1*skoMC1*skoMC1*(1/1814400)+skoSC1*skoSC1*skoMC1*skoMC1*skoMC1*(-1/239500800))))))))<=skoMC1*skoMC1*skoMC1*(2+skoMC1*5),skoSC1<=0,skoMC1*skoMC1*skoMC1*2>0,skoSC1*(skoMC1*skoMC1*skoMC1*(1+skoMC1*-3)+skoSC1*(skoMC1*skoMC1*skoMC1*(2+skoMC1*3)+skoSC1*(skoMC1*skoMC1*skoMC1*skoMC1+skoSC1*skoMC1*skoMC1*skoMC1*(-1/12))))<=skoMC1*skoMC1*skoMC1*(2+skoMC1*5),skoSC1*skoMC1*skoMC1*skoMC1*-1<=skoMC1*skoMC1*skoMC1,skoSC1*(skoMC1*skoMC1*skoMC1*(-2+skoMC1*-12)+skoSC1*(skoMC1*skoMC1*skoMC1*(1+skoMC1*-6)+skoSC1*(skoMC1*skoMC1*skoMC1+skoSC1*(skoMC1*skoMC1*skoMC1*(-1/12)+skoSC1*skoMC1*skoMC1*skoMC1*(-1/12)))))<=skoMC1*skoMC1*skoMC1*(2+skoMC1*6),skoSC1*skoMC1*skoMC1*skoMC1*-2<=skoMC1*skoMC1*skoMC1*2,skoSC1*skoMC1*skoMC1*skoMC1*2>skoMC1*skoMC1*skoMC1*-2,skoMC1*skoMC1*skoMC1*-1<=0,skoSC1*skoMC1*skoMC1*skoMC1>skoMC1*skoMC1*skoMC1*-1,skoMC1*skoMC1*skoMC1*-2<=0,skoMC1*skoMC1*skoMC1*2>0,skoSC1<=(5/4),2<=skoMC1,0<=skoSC1,skoMC1>0,0<=skoMC1,skoSC1*skoMC1>skoMC1*-1,skoSC1*skoMC1*-1<=skoMC1,skoSC1*(skoMC1*(-1+skoMC1*3)+skoSC1*(skoMC1*(-2+skoMC1*-3)+skoSC1*(skoMC1*skoMC1*-1+skoSC1*skoMC1*(1/12))))>skoMC1*(-2+skoMC1*-5),skoSC1*(skoMC1*(1+skoMC1*-3)+skoSC1*(skoMC1*(2+skoMC1*3)+skoSC1*(skoMC1*skoMC1+skoSC1*skoMC1*(-1/12))))<=skoMC1*(2+skoMC1*5),skoSC1*(skoMC1*(-1+skoMC1*3)+skoSC1*(skoMC1*(-2+skoMC1*-3)+skoSC1*(skoMC1*((1/6)+skoMC1*-1)+skoSC1*skoMC1*(1/4))))>skoMC1*(-2+skoMC1*-5),skoSC1*(skoMC1*(1+skoMC1*-3)+skoSC1*(skoMC1*(2+skoMC1*3)+skoSC1*(skoMC1*((-1/6)+skoMC1)+skoSC1*skoMC1*(-1/4))))<=skoMC1*(2+skoMC1*5)]], Reals]]

% In QepcadB format:
(E skoSC1) (E skoMC1) [[(skoSC1 ((skoMC1 skoMC1 skoMC1 (1+(skoMC1 (-3))))+(skoSC1 ((skoMC1 skoMC1 skoMC1 (2+(skoMC1 (3))))+(skoSC1 ((skoMC1 skoMC1 skoMC1 skoMC1)+(skoSC1 ((skoMC1 skoMC1 skoMC1 (-1/12))+(skoSC1 skoSC1 ((skoMC1 skoMC1 skoMC1 (1/360))+(skoSC1 skoSC1 ((skoMC1 skoMC1 skoMC1 (-1/20160))+(skoSC1 skoSC1 ((skoMC1 skoMC1 skoMC1 (1/1814400))+(skoSC1 skoSC1 skoMC1 skoMC1 skoMC1 (-1/239500800))))))))))))))))<=(skoMC1 skoMC1 skoMC1 (2+(skoMC1 (5))))]/\[[skoSC1<=0]/\[[0<(skoMC1 skoMC1 skoMC1 (2))]/\[[(skoSC1 ((skoMC1 skoMC1 skoMC1 (1+(skoMC1 (-3))))+(skoSC1 ((skoMC1 skoMC1 skoMC1 (2+(skoMC1 (3))))+(skoSC1 ((skoMC1 skoMC1 skoMC1 skoMC1)+(skoSC1 skoMC1 skoMC1 skoMC1 (-1/12))))))))<=(skoMC1 skoMC1 skoMC1 (2+(skoMC1 (5))))]/\[[(skoSC1 skoMC1 skoMC1 skoMC1 (-1))<=(skoMC1 skoMC1 skoMC1)]/\[[(skoSC1 ((skoMC1 skoMC1 skoMC1 (-2+(skoMC1 (-12))))+(skoSC1 ((skoMC1 skoMC1 skoMC1 (1+(skoMC1 (-6))))+(skoSC1 ((skoMC1 skoMC1 skoMC1)+(skoSC1 ((skoMC1 skoMC1 skoMC1 (-1/12))+(skoSC1 skoMC1 skoMC1 skoMC1 (-1/12))))))))))<=(skoMC1 skoMC1 skoMC1 (2+(skoMC1 (6))))]/\[[(skoSC1 skoMC1 skoMC1 skoMC1 (-2))<=(skoMC1 skoMC1 skoMC1 (2))]/\[[(skoMC1 skoMC1 skoMC1 (-2))<(skoSC1 skoMC1 skoMC1 skoMC1 (2))]/\[[(skoMC1 skoMC1 skoMC1 (-1))<=0]/\[[(skoMC1 skoMC1 skoMC1 (-1))<(skoSC1 skoMC1 skoMC1 skoMC1)]/\[[(skoMC1 skoMC1 skoMC1 (-2))<=0]/\[[0<(skoMC1 skoMC1 skoMC1 (2))]/\[[skoSC1<=5/4]/\[[2<=skoMC1]/\[[0<=skoSC1]/\[[0<skoMC1]/\[[0<=skoMC1]/\[[(skoMC1 (-1))<(skoSC1 skoMC1)]/\[[(skoSC1 skoMC1 (-1))<=skoMC1]/\[[(skoMC1 (-2+(skoMC1 (-5))))<(skoSC1 ((skoMC1 (-1+(skoMC1 (3))))+(skoSC1 ((skoMC1 (-2+(skoMC1 (-3))))+(skoSC1 ((skoMC1 skoMC1 (-1))+(skoSC1 skoMC1 (1/12))))))))]/\[[(skoSC1 ((skoMC1 (1+(skoMC1 (-3))))+(skoSC1 ((skoMC1 (2+(skoMC1 (3))))+(skoSC1 ((skoMC1 skoMC1)+(skoSC1 skoMC1 (-1/12))))))))<=(skoMC1 (2+(skoMC1 (5))))]/\[[(skoMC1 (-2+(skoMC1 (-5))))<(skoSC1 ((skoMC1 (-1+(skoMC1 (3))))+(skoSC1 ((skoMC1 (-2+(skoMC1 (-3))))+(skoSC1 ((skoMC1 (1/6+(skoMC1 (-1))))+(skoSC1 skoMC1 (1/4))))))))]/\[(skoSC1 ((skoMC1 (1+(skoMC1 (-3))))+(skoSC1 ((skoMC1 (2+(skoMC1 (3))))+(skoSC1 ((skoMC1 (-1/6+skoMC1))+(skoSC1 skoMC1 (-1/4))))))))<=(skoMC1 (2+(skoMC1 (5))))]]]]]]]]]]]]]]]]]]]]]]].

% In SMTLib2 format:
(declare-fun skoSC1 () Real) (declare-fun skoMC1 () Real) (assert (and (<= (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (+ 1. (* skoMC1 (- 3.)))))) (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (+ 2. (* skoMC1 3.))))) (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 skoMC1))) (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (/ (- 1.) 12.)))) (* skoSC1 (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (/ 1. 360.)))) (* skoSC1 (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (/ (- 1.) 20160.)))) (* skoSC1 (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (/ 1. 1814400.)))) (* skoSC1 (* skoSC1 (* skoMC1 (* skoMC1 (* skoMC1 (/ (- 1.) 239500800.))))))))))))))))))))))) (* skoMC1 (* skoMC1 (* skoMC1 (+ 2. (* skoMC1 5.)))))) (and (<= skoSC1 0.) (and (> (* skoMC1 (* skoMC1 (* skoMC1 2.))) 0.) (and (<= (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (+ 1. (* skoMC1 (- 3.)))))) (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (+ 2. (* skoMC1 3.))))) (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 skoMC1))) (* skoSC1 (* skoMC1 (* skoMC1 (* skoMC1 (/ (- 1.) 12.))))))))))) (* skoMC1 (* skoMC1 (* skoMC1 (+ 2. (* skoMC1 5.)))))) (and (<= (* skoSC1 (* skoMC1 (* skoMC1 (* skoMC1 (- 1.))))) (* skoMC1 (* skoMC1 skoMC1))) (and (<= (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (+ (- 2.) (* skoMC1 (- 12.)))))) (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (+ 1. (* skoMC1 (- 6.)))))) (* skoSC1 (+ (* skoMC1 (* skoMC1 skoMC1)) (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (/ (- 1.) 12.)))) (* skoSC1 (* skoMC1 (* skoMC1 (* skoMC1 (/ (- 1.) 12.))))))))))))) (* skoMC1 (* skoMC1 (* skoMC1 (+ 2. (* skoMC1 6.)))))) (and (<= (* skoSC1 (* skoMC1 (* skoMC1 (* skoMC1 (- 2.))))) (* skoMC1 (* skoMC1 (* skoMC1 2.)))) (and (> (* skoSC1 (* skoMC1 (* skoMC1 (* skoMC1 2.)))) (* skoMC1 (* skoMC1 (* skoMC1 (- 2.))))) (and (<= (* skoMC1 (* skoMC1 (* skoMC1 (- 1.)))) 0.) (and (> (* skoSC1 (* skoMC1 (* skoMC1 skoMC1))) (* skoMC1 (* skoMC1 (* skoMC1 (- 1.))))) (and (<= (* skoMC1 (* skoMC1 (* skoMC1 (- 2.)))) 0.) (and (> (* skoMC1 (* skoMC1 (* skoMC1 2.))) 0.) (and (<= skoSC1 (/ 5. 4.)) (and (<= 2. skoMC1) (and (<= 0. skoSC1) (and (> skoMC1 0.) (and (<= 0. skoMC1) (and (> (* skoSC1 skoMC1) (* skoMC1 (- 1.))) (and (<= (* skoSC1 (* skoMC1 (- 1.))) skoMC1) (and (> (* skoSC1 (+ (* skoMC1 (+ (- 1.) (* skoMC1 3.))) (* skoSC1 (+ (* skoMC1 (+ (- 2.) (* skoMC1 (- 3.)))) (* skoSC1 (+ (* skoMC1 (* skoMC1 (- 1.))) (* skoSC1 (* skoMC1 (/ 1. 12.))))))))) (* skoMC1 (+ (- 2.) (* skoMC1 (- 5.))))) (and (<= (* skoSC1 (+ (* skoMC1 (+ 1. (* skoMC1 (- 3.)))) (* skoSC1 (+ (* skoMC1 (+ 2. (* skoMC1 3.))) (* skoSC1 (+ (* skoMC1 skoMC1) (* skoSC1 (* skoMC1 (/ (- 1.) 12.))))))))) (* skoMC1 (+ 2. (* skoMC1 5.)))) (and (> (* skoSC1 (+ (* skoMC1 (+ (- 1.) (* skoMC1 3.))) (* skoSC1 (+ (* skoMC1 (+ (- 2.) (* skoMC1 (- 3.)))) (* skoSC1 (+ (* skoMC1 (+ (/ 1. 6.) (* skoMC1 (- 1.)))) (* skoSC1 (* skoMC1 (/ 1. 4.))))))))) (* skoMC1 (+ (- 2.) (* skoMC1 (- 5.))))) (<= (* skoSC1 (+ (* skoMC1 (+ 1. (* skoMC1 (- 3.)))) (* skoSC1 (+ (* skoMC1 (+ 2. (* skoMC1 3.))) (* skoSC1 (+ (* skoMC1 (+ (/ (- 1.) 6.) skoMC1)) (* skoSC1 (* skoMC1 (/ (- 1.) 4.))))))))) (* skoMC1 (+ 2. (* skoMC1 5.)))))))))))))))))))))))))))

% In GRF format:
(sequent " MetiTarski formula " (antecedent (<= (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (+ 1. (* skoMC1 (- 3.)))))) (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (+ 2. (* skoMC1 3.))))) (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 skoMC1))) (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (/ (- 1.) 12.)))) (* skoSC1 (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (/ 1. 360.)))) (* skoSC1 (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (/ (- 1.) 20160.)))) (* skoSC1 (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (/ 1. 1814400.)))) (* skoSC1 (* skoSC1 (* skoMC1 (* skoMC1 (* skoMC1 (/ (- 1.) 239500800.))))))))))))))))))))))) (* skoMC1 (* skoMC1 (* skoMC1 (+ 2. (* skoMC1 5.)))))) (<= skoSC1 0.) (> (* skoMC1 (* skoMC1 (* skoMC1 2.))) 0.) (<= (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (+ 1. (* skoMC1 (- 3.)))))) (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (+ 2. (* skoMC1 3.))))) (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 skoMC1))) (* skoSC1 (* skoMC1 (* skoMC1 (* skoMC1 (/ (- 1.) 12.))))))))))) (* skoMC1 (* skoMC1 (* skoMC1 (+ 2. (* skoMC1 5.)))))) (<= (* skoSC1 (* skoMC1 (* skoMC1 (* skoMC1 (- 1.))))) (* skoMC1 (* skoMC1 skoMC1))) (<= (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (+ (- 2.) (* skoMC1 (- 12.)))))) (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (+ 1. (* skoMC1 (- 6.)))))) (* skoSC1 (+ (* skoMC1 (* skoMC1 skoMC1)) (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (/ (- 1.) 12.)))) (* skoSC1 (* skoMC1 (* skoMC1 (* skoMC1 (/ (- 1.) 12.))))))))))))) (* skoMC1 (* skoMC1 (* skoMC1 (+ 2. (* skoMC1 6.)))))) (<= (* skoSC1 (* skoMC1 (* skoMC1 (* skoMC1 (- 2.))))) (* skoMC1 (* skoMC1 (* skoMC1 2.)))) (> (* skoSC1 (* skoMC1 (* skoMC1 (* skoMC1 2.)))) (* skoMC1 (* skoMC1 (* skoMC1 (- 2.))))) (<= (* skoMC1 (* skoMC1 (* skoMC1 (- 1.)))) 0.) (> (* skoSC1 (* skoMC1 (* skoMC1 skoMC1))) (* skoMC1 (* skoMC1 (* skoMC1 (- 1.))))) (<= (* skoMC1 (* skoMC1 (* skoMC1 (- 2.)))) 0.) (> (* skoMC1 (* skoMC1 (* skoMC1 2.))) 0.) (<= skoSC1 (/ 5. 4.)) (<= 2. skoMC1) (<= 0. skoSC1) (> skoMC1 0.) (<= 0. skoMC1) (> (* skoSC1 skoMC1) (* skoMC1 (- 1.))) (<= (* skoSC1 (* skoMC1 (- 1.))) skoMC1) (> (* skoSC1 (+ (* skoMC1 (+ (- 1.) (* skoMC1 3.))) (* skoSC1 (+ (* skoMC1 (+ (- 2.) (* skoMC1 (- 3.)))) (* skoSC1 (+ (* skoMC1 (* skoMC1 (- 1.))) (* skoSC1 (* skoMC1 (/ 1. 12.))))))))) (* skoMC1 (+ (- 2.) (* skoMC1 (- 5.))))) (<= (* skoSC1 (+ (* skoMC1 (+ 1. (* skoMC1 (- 3.)))) (* skoSC1 (+ (* skoMC1 (+ 2. (* skoMC1 3.))) (* skoSC1 (+ (* skoMC1 skoMC1) (* skoSC1 (* skoMC1 (/ (- 1.) 12.))))))))) (* skoMC1 (+ 2. (* skoMC1 5.)))) (> (* skoSC1 (+ (* skoMC1 (+ (- 1.) (* skoMC1 3.))) (* skoSC1 (+ (* skoMC1 (+ (- 2.) (* skoMC1 (- 3.)))) (* skoSC1 (+ (* skoMC1 (+ (/ 1. 6.) (* skoMC1 (- 1.)))) (* skoSC1 (* skoMC1 (/ 1. 4.))))))))) (* skoMC1 (+ (- 2.) (* skoMC1 (- 5.)))))) (succedent (> (* skoSC1 (+ (* skoMC1 (+ 1. (* skoMC1 (- 3.)))) (* skoSC1 (+ (* skoMC1 (+ 2. (* skoMC1 3.))) (* skoSC1 (+ (* skoMC1 (+ (/ (- 1.) 6.) skoMC1)) (* skoSC1 (* skoMC1 (/ (- 1.) 4.))))))))) (* skoMC1 (+ 2. (* skoMC1 5.))))))
-----[end problem]-----

-----[begin problem]-----
% In Mathematica format:
Timing[Resolve[Exists[{skoSC1,skoMC1}, And[skoMC1*skoMC1*skoMC1*2<=0,skoSC1<=0,skoSC1*(skoMC1*skoMC1*skoMC1*(1+skoMC1*-3)+skoSC1*(skoMC1*skoMC1*skoMC1*(2+skoMC1*3)+skoSC1*(skoMC1*skoMC1*skoMC1*skoMC1+skoSC1*(skoMC1*skoMC1*skoMC1*(-1/12)+skoSC1*skoSC1*(skoMC1*skoMC1*skoMC1*(1/360)+skoSC1*skoSC1*(skoMC1*skoMC1*skoMC1*(-1/20160)+skoSC1*skoSC1*(skoMC1*skoMC1*skoMC1*(1/1814400)+skoSC1*skoSC1*skoMC1*skoMC1*skoMC1*(-1/239500800))))))))>skoMC1*skoMC1*skoMC1*(2+skoMC1*5),skoSC1*(skoMC1*skoMC1*skoMC1*(1+skoMC1*-3)+skoSC1*(skoMC1*skoMC1*skoMC1*(2+skoMC1*3)+skoSC1*(skoMC1*skoMC1*skoMC1*skoMC1+skoSC1*skoMC1*skoMC1*skoMC1*(-1/12))))<=skoMC1*skoMC1*skoMC1*(2+skoMC1*5),skoSC1*skoMC1*skoMC1*skoMC1*-1<=skoMC1*skoMC1*skoMC1,skoSC1*(skoMC1*skoMC1*skoMC1*(-2+skoMC1*-12)+skoSC1*(skoMC1*skoMC1*skoMC1*(1+skoMC1*-6)+skoSC1*(skoMC1*skoMC1*skoMC1+skoSC1*(skoMC1*skoMC1*skoMC1*(-1/12)+skoSC1*skoMC1*skoMC1*skoMC1*(-1/12)))))<=skoMC1*skoMC1*skoMC1*(2+skoMC1*6),skoSC1*skoMC1*skoMC1*skoMC1*-2<=skoMC1*skoMC1*skoMC1*2,skoSC1*skoMC1*skoMC1*skoMC1*2>skoMC1*skoMC1*skoMC1*-2,skoMC1*skoMC1*skoMC1*-1<=0,skoSC1*skoMC1*skoMC1*skoMC1>skoMC1*skoMC1*skoMC1*-1,skoMC1*skoMC1*skoMC1*-2<=0,skoMC1*skoMC1*skoMC1*2>0,skoSC1<=(5/4),2<=skoMC1,0<=skoSC1,skoMC1>0,0<=skoMC1,skoSC1*skoMC1>skoMC1*-1,skoSC1*skoMC1*-1<=skoMC1,skoSC1*(skoMC1*(-1+skoMC1*3)+skoSC1*(skoMC1*(-2+skoMC1*-3)+skoSC1*(skoMC1*skoMC1*-1+skoSC1*skoMC1*(1/12))))>skoMC1*(-2+skoMC1*-5),skoSC1*(skoMC1*(1+skoMC1*-3)+skoSC1*(skoMC1*(2+skoMC1*3)+skoSC1*(skoMC1*skoMC1+skoSC1*skoMC1*(-1/12))))<=skoMC1*(2+skoMC1*5),skoSC1*(skoMC1*(-1+skoMC1*3)+skoSC1*(skoMC1*(-2+skoMC1*-3)+skoSC1*(skoMC1*((1/6)+skoMC1*-1)+skoSC1*skoMC1*(1/4))))>skoMC1*(-2+skoMC1*-5),skoSC1*(skoMC1*(1+skoMC1*-3)+skoSC1*(skoMC1*(2+skoMC1*3)+skoSC1*(skoMC1*((-1/6)+skoMC1)+skoSC1*skoMC1*(-1/4))))<=skoMC1*(2+skoMC1*5)]], Reals]]

% In QepcadB format:
(E skoSC1) (E skoMC1) [[(skoMC1 skoMC1 skoMC1 (2))<=0]/\[[skoSC1<=0]/\[[(skoMC1 skoMC1 skoMC1 (2+(skoMC1 (5))))<(skoSC1 ((skoMC1 skoMC1 skoMC1 (1+(skoMC1 (-3))))+(skoSC1 ((skoMC1 skoMC1 skoMC1 (2+(skoMC1 (3))))+(skoSC1 ((skoMC1 skoMC1 skoMC1 skoMC1)+(skoSC1 ((skoMC1 skoMC1 skoMC1 (-1/12))+(skoSC1 skoSC1 ((skoMC1 skoMC1 skoMC1 (1/360))+(skoSC1 skoSC1 ((skoMC1 skoMC1 skoMC1 (-1/20160))+(skoSC1 skoSC1 ((skoMC1 skoMC1 skoMC1 (1/1814400))+(skoSC1 skoSC1 skoMC1 skoMC1 skoMC1 (-1/239500800))))))))))))))))]/\[[(skoSC1 ((skoMC1 skoMC1 skoMC1 (1+(skoMC1 (-3))))+(skoSC1 ((skoMC1 skoMC1 skoMC1 (2+(skoMC1 (3))))+(skoSC1 ((skoMC1 skoMC1 skoMC1 skoMC1)+(skoSC1 skoMC1 skoMC1 skoMC1 (-1/12))))))))<=(skoMC1 skoMC1 skoMC1 (2+(skoMC1 (5))))]/\[[(skoSC1 skoMC1 skoMC1 skoMC1 (-1))<=(skoMC1 skoMC1 skoMC1)]/\[[(skoSC1 ((skoMC1 skoMC1 skoMC1 (-2+(skoMC1 (-12))))+(skoSC1 ((skoMC1 skoMC1 skoMC1 (1+(skoMC1 (-6))))+(skoSC1 ((skoMC1 skoMC1 skoMC1)+(skoSC1 ((skoMC1 skoMC1 skoMC1 (-1/12))+(skoSC1 skoMC1 skoMC1 skoMC1 (-1/12))))))))))<=(skoMC1 skoMC1 skoMC1 (2+(skoMC1 (6))))]/\[[(skoSC1 skoMC1 skoMC1 skoMC1 (-2))<=(skoMC1 skoMC1 skoMC1 (2))]/\[[(skoMC1 skoMC1 skoMC1 (-2))<(skoSC1 skoMC1 skoMC1 skoMC1 (2))]/\[[(skoMC1 skoMC1 skoMC1 (-1))<=0]/\[[(skoMC1 skoMC1 skoMC1 (-1))<(skoSC1 skoMC1 skoMC1 skoMC1)]/\[[(skoMC1 skoMC1 skoMC1 (-2))<=0]/\[[0<(skoMC1 skoMC1 skoMC1 (2))]/\[[skoSC1<=5/4]/\[[2<=skoMC1]/\[[0<=skoSC1]/\[[0<skoMC1]/\[[0<=skoMC1]/\[[(skoMC1 (-1))<(skoSC1 skoMC1)]/\[[(skoSC1 skoMC1 (-1))<=skoMC1]/\[[(skoMC1 (-2+(skoMC1 (-5))))<(skoSC1 ((skoMC1 (-1+(skoMC1 (3))))+(skoSC1 ((skoMC1 (-2+(skoMC1 (-3))))+(skoSC1 ((skoMC1 skoMC1 (-1))+(skoSC1 skoMC1 (1/12))))))))]/\[[(skoSC1 ((skoMC1 (1+(skoMC1 (-3))))+(skoSC1 ((skoMC1 (2+(skoMC1 (3))))+(skoSC1 ((skoMC1 skoMC1)+(skoSC1 skoMC1 (-1/12))))))))<=(skoMC1 (2+(skoMC1 (5))))]/\[[(skoMC1 (-2+(skoMC1 (-5))))<(skoSC1 ((skoMC1 (-1+(skoMC1 (3))))+(skoSC1 ((skoMC1 (-2+(skoMC1 (-3))))+(skoSC1 ((skoMC1 (1/6+(skoMC1 (-1))))+(skoSC1 skoMC1 (1/4))))))))]/\[(skoSC1 ((skoMC1 (1+(skoMC1 (-3))))+(skoSC1 ((skoMC1 (2+(skoMC1 (3))))+(skoSC1 ((skoMC1 (-1/6+skoMC1))+(skoSC1 skoMC1 (-1/4))))))))<=(skoMC1 (2+(skoMC1 (5))))]]]]]]]]]]]]]]]]]]]]]]].

% In SMTLib2 format:
(declare-fun skoSC1 () Real) (declare-fun skoMC1 () Real) (assert (and (<= (* skoMC1 (* skoMC1 (* skoMC1 2.))) 0.) (and (<= skoSC1 0.) (and (> (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (+ 1. (* skoMC1 (- 3.)))))) (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (+ 2. (* skoMC1 3.))))) (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 skoMC1))) (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (/ (- 1.) 12.)))) (* skoSC1 (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (/ 1. 360.)))) (* skoSC1 (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (/ (- 1.) 20160.)))) (* skoSC1 (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (/ 1. 1814400.)))) (* skoSC1 (* skoSC1 (* skoMC1 (* skoMC1 (* skoMC1 (/ (- 1.) 239500800.))))))))))))))))))))))) (* skoMC1 (* skoMC1 (* skoMC1 (+ 2. (* skoMC1 5.)))))) (and (<= (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (+ 1. (* skoMC1 (- 3.)))))) (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (+ 2. (* skoMC1 3.))))) (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 skoMC1))) (* skoSC1 (* skoMC1 (* skoMC1 (* skoMC1 (/ (- 1.) 12.))))))))))) (* skoMC1 (* skoMC1 (* skoMC1 (+ 2. (* skoMC1 5.)))))) (and (<= (* skoSC1 (* skoMC1 (* skoMC1 (* skoMC1 (- 1.))))) (* skoMC1 (* skoMC1 skoMC1))) (and (<= (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (+ (- 2.) (* skoMC1 (- 12.)))))) (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (+ 1. (* skoMC1 (- 6.)))))) (* skoSC1 (+ (* skoMC1 (* skoMC1 skoMC1)) (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (/ (- 1.) 12.)))) (* skoSC1 (* skoMC1 (* skoMC1 (* skoMC1 (/ (- 1.) 12.))))))))))))) (* skoMC1 (* skoMC1 (* skoMC1 (+ 2. (* skoMC1 6.)))))) (and (<= (* skoSC1 (* skoMC1 (* skoMC1 (* skoMC1 (- 2.))))) (* skoMC1 (* skoMC1 (* skoMC1 2.)))) (and (> (* skoSC1 (* skoMC1 (* skoMC1 (* skoMC1 2.)))) (* skoMC1 (* skoMC1 (* skoMC1 (- 2.))))) (and (<= (* skoMC1 (* skoMC1 (* skoMC1 (- 1.)))) 0.) (and (> (* skoSC1 (* skoMC1 (* skoMC1 skoMC1))) (* skoMC1 (* skoMC1 (* skoMC1 (- 1.))))) (and (<= (* skoMC1 (* skoMC1 (* skoMC1 (- 2.)))) 0.) (and (> (* skoMC1 (* skoMC1 (* skoMC1 2.))) 0.) (and (<= skoSC1 (/ 5. 4.)) (and (<= 2. skoMC1) (and (<= 0. skoSC1) (and (> skoMC1 0.) (and (<= 0. skoMC1) (and (> (* skoSC1 skoMC1) (* skoMC1 (- 1.))) (and (<= (* skoSC1 (* skoMC1 (- 1.))) skoMC1) (and (> (* skoSC1 (+ (* skoMC1 (+ (- 1.) (* skoMC1 3.))) (* skoSC1 (+ (* skoMC1 (+ (- 2.) (* skoMC1 (- 3.)))) (* skoSC1 (+ (* skoMC1 (* skoMC1 (- 1.))) (* skoSC1 (* skoMC1 (/ 1. 12.))))))))) (* skoMC1 (+ (- 2.) (* skoMC1 (- 5.))))) (and (<= (* skoSC1 (+ (* skoMC1 (+ 1. (* skoMC1 (- 3.)))) (* skoSC1 (+ (* skoMC1 (+ 2. (* skoMC1 3.))) (* skoSC1 (+ (* skoMC1 skoMC1) (* skoSC1 (* skoMC1 (/ (- 1.) 12.))))))))) (* skoMC1 (+ 2. (* skoMC1 5.)))) (and (> (* skoSC1 (+ (* skoMC1 (+ (- 1.) (* skoMC1 3.))) (* skoSC1 (+ (* skoMC1 (+ (- 2.) (* skoMC1 (- 3.)))) (* skoSC1 (+ (* skoMC1 (+ (/ 1. 6.) (* skoMC1 (- 1.)))) (* skoSC1 (* skoMC1 (/ 1. 4.))))))))) (* skoMC1 (+ (- 2.) (* skoMC1 (- 5.))))) (<= (* skoSC1 (+ (* skoMC1 (+ 1. (* skoMC1 (- 3.)))) (* skoSC1 (+ (* skoMC1 (+ 2. (* skoMC1 3.))) (* skoSC1 (+ (* skoMC1 (+ (/ (- 1.) 6.) skoMC1)) (* skoSC1 (* skoMC1 (/ (- 1.) 4.))))))))) (* skoMC1 (+ 2. (* skoMC1 5.)))))))))))))))))))))))))))

% In GRF format:
(sequent " MetiTarski formula " (antecedent (<= (* skoMC1 (* skoMC1 (* skoMC1 2.))) 0.) (<= skoSC1 0.) (> (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (+ 1. (* skoMC1 (- 3.)))))) (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (+ 2. (* skoMC1 3.))))) (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 skoMC1))) (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (/ (- 1.) 12.)))) (* skoSC1 (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (/ 1. 360.)))) (* skoSC1 (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (/ (- 1.) 20160.)))) (* skoSC1 (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (/ 1. 1814400.)))) (* skoSC1 (* skoSC1 (* skoMC1 (* skoMC1 (* skoMC1 (/ (- 1.) 239500800.))))))))))))))))))))))) (* skoMC1 (* skoMC1 (* skoMC1 (+ 2. (* skoMC1 5.)))))) (<= (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (+ 1. (* skoMC1 (- 3.)))))) (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (+ 2. (* skoMC1 3.))))) (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 skoMC1))) (* skoSC1 (* skoMC1 (* skoMC1 (* skoMC1 (/ (- 1.) 12.))))))))))) (* skoMC1 (* skoMC1 (* skoMC1 (+ 2. (* skoMC1 5.)))))) (<= (* skoSC1 (* skoMC1 (* skoMC1 (* skoMC1 (- 1.))))) (* skoMC1 (* skoMC1 skoMC1))) (<= (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (+ (- 2.) (* skoMC1 (- 12.)))))) (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (+ 1. (* skoMC1 (- 6.)))))) (* skoSC1 (+ (* skoMC1 (* skoMC1 skoMC1)) (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (/ (- 1.) 12.)))) (* skoSC1 (* skoMC1 (* skoMC1 (* skoMC1 (/ (- 1.) 12.))))))))))))) (* skoMC1 (* skoMC1 (* skoMC1 (+ 2. (* skoMC1 6.)))))) (<= (* skoSC1 (* skoMC1 (* skoMC1 (* skoMC1 (- 2.))))) (* skoMC1 (* skoMC1 (* skoMC1 2.)))) (> (* skoSC1 (* skoMC1 (* skoMC1 (* skoMC1 2.)))) (* skoMC1 (* skoMC1 (* skoMC1 (- 2.))))) (<= (* skoMC1 (* skoMC1 (* skoMC1 (- 1.)))) 0.) (> (* skoSC1 (* skoMC1 (* skoMC1 skoMC1))) (* skoMC1 (* skoMC1 (* skoMC1 (- 1.))))) (<= (* skoMC1 (* skoMC1 (* skoMC1 (- 2.)))) 0.) (> (* skoMC1 (* skoMC1 (* skoMC1 2.))) 0.) (<= skoSC1 (/ 5. 4.)) (<= 2. skoMC1) (<= 0. skoSC1) (> skoMC1 0.) (<= 0. skoMC1) (> (* skoSC1 skoMC1) (* skoMC1 (- 1.))) (<= (* skoSC1 (* skoMC1 (- 1.))) skoMC1) (> (* skoSC1 (+ (* skoMC1 (+ (- 1.) (* skoMC1 3.))) (* skoSC1 (+ (* skoMC1 (+ (- 2.) (* skoMC1 (- 3.)))) (* skoSC1 (+ (* skoMC1 (* skoMC1 (- 1.))) (* skoSC1 (* skoMC1 (/ 1. 12.))))))))) (* skoMC1 (+ (- 2.) (* skoMC1 (- 5.))))) (<= (* skoSC1 (+ (* skoMC1 (+ 1. (* skoMC1 (- 3.)))) (* skoSC1 (+ (* skoMC1 (+ 2. (* skoMC1 3.))) (* skoSC1 (+ (* skoMC1 skoMC1) (* skoSC1 (* skoMC1 (/ (- 1.) 12.))))))))) (* skoMC1 (+ 2. (* skoMC1 5.)))) (> (* skoSC1 (+ (* skoMC1 (+ (- 1.) (* skoMC1 3.))) (* skoSC1 (+ (* skoMC1 (+ (- 2.) (* skoMC1 (- 3.)))) (* skoSC1 (+ (* skoMC1 (+ (/ 1. 6.) (* skoMC1 (- 1.)))) (* skoSC1 (* skoMC1 (/ 1. 4.))))))))) (* skoMC1 (+ (- 2.) (* skoMC1 (- 5.)))))) (succedent (> (* skoSC1 (+ (* skoMC1 (+ 1. (* skoMC1 (- 3.)))) (* skoSC1 (+ (* skoMC1 (+ 2. (* skoMC1 3.))) (* skoSC1 (+ (* skoMC1 (+ (/ (- 1.) 6.) skoMC1)) (* skoSC1 (* skoMC1 (/ (- 1.) 4.))))))))) (* skoMC1 (+ 2. (* skoMC1 5.))))))
-----[end problem]-----

-----[begin problem]-----
% In Mathematica format:
Timing[Resolve[Exists[{skoSC1,skoMC1}, And[skoSC1*(skoMC1*skoMC1*skoMC1*(1+skoMC1*-3)+skoSC1*(skoMC1*skoMC1*skoMC1*(2+skoMC1*3)+skoSC1*(skoMC1*skoMC1*skoMC1*skoMC1+skoSC1*(skoMC1*skoMC1*skoMC1*(-1/12)+skoSC1*skoSC1*(skoMC1*skoMC1*skoMC1*(1/360)+skoSC1*skoSC1*(skoMC1*skoMC1*skoMC1*(-1/20160)+skoSC1*skoSC1*(skoMC1*skoMC1*skoMC1*(1/1814400)+skoSC1*skoSC1*skoMC1*skoMC1*skoMC1*(-1/239500800))))))))>skoMC1*skoMC1*skoMC1*(2+skoMC1*5),skoSC1>0,skoSC1*(skoMC1*skoMC1*skoMC1*(1+skoMC1*-3)+skoSC1*(skoMC1*skoMC1*skoMC1*(2+skoMC1*3)+skoSC1*(skoMC1*skoMC1*skoMC1*skoMC1+skoSC1*skoMC1*skoMC1*skoMC1*(-1/12))))<=skoMC1*skoMC1*skoMC1*(2+skoMC1*5),skoSC1*skoMC1*skoMC1*skoMC1*-1<=skoMC1*skoMC1*skoMC1,skoSC1*(skoMC1*skoMC1*skoMC1*(-2+skoMC1*-12)+skoSC1*(skoMC1*skoMC1*skoMC1*(1+skoMC1*-6)+skoSC1*(skoMC1*skoMC1*skoMC1+skoSC1*(skoMC1*skoMC1*skoMC1*(-1/12)+skoSC1*skoMC1*skoMC1*skoMC1*(-1/12)))))<=skoMC1*skoMC1*skoMC1*(2+skoMC1*6),skoSC1*skoMC1*skoMC1*skoMC1*-2<=skoMC1*skoMC1*skoMC1*2,skoSC1*skoMC1*skoMC1*skoMC1*2>skoMC1*skoMC1*skoMC1*-2,skoMC1*skoMC1*skoMC1*-1<=0,skoSC1*skoMC1*skoMC1*skoMC1>skoMC1*skoMC1*skoMC1*-1,skoMC1*skoMC1*skoMC1*-2<=0,skoMC1*skoMC1*skoMC1*2>0,skoSC1<=(5/4),2<=skoMC1,0<=skoSC1,skoMC1>0,0<=skoMC1,skoSC1*skoMC1>skoMC1*-1,skoSC1*skoMC1*-1<=skoMC1,skoSC1*(skoMC1*(-1+skoMC1*3)+skoSC1*(skoMC1*(-2+skoMC1*-3)+skoSC1*(skoMC1*skoMC1*-1+skoSC1*skoMC1*(1/12))))>skoMC1*(-2+skoMC1*-5),skoSC1*(skoMC1*(1+skoMC1*-3)+skoSC1*(skoMC1*(2+skoMC1*3)+skoSC1*(skoMC1*skoMC1+skoSC1*skoMC1*(-1/12))))<=skoMC1*(2+skoMC1*5),skoSC1*(skoMC1*(-1+skoMC1*3)+skoSC1*(skoMC1*(-2+skoMC1*-3)+skoSC1*(skoMC1*((1/6)+skoMC1*-1)+skoSC1*skoMC1*(1/4))))>skoMC1*(-2+skoMC1*-5),skoSC1*(skoMC1*(1+skoMC1*-3)+skoSC1*(skoMC1*(2+skoMC1*3)+skoSC1*(skoMC1*((-1/6)+skoMC1)+skoSC1*skoMC1*(-1/4))))<=skoMC1*(2+skoMC1*5)]], Reals]]

% In QepcadB format:
(E skoSC1) (E skoMC1) [[(skoMC1 skoMC1 skoMC1 (2+(skoMC1 (5))))<(skoSC1 ((skoMC1 skoMC1 skoMC1 (1+(skoMC1 (-3))))+(skoSC1 ((skoMC1 skoMC1 skoMC1 (2+(skoMC1 (3))))+(skoSC1 ((skoMC1 skoMC1 skoMC1 skoMC1)+(skoSC1 ((skoMC1 skoMC1 skoMC1 (-1/12))+(skoSC1 skoSC1 ((skoMC1 skoMC1 skoMC1 (1/360))+(skoSC1 skoSC1 ((skoMC1 skoMC1 skoMC1 (-1/20160))+(skoSC1 skoSC1 ((skoMC1 skoMC1 skoMC1 (1/1814400))+(skoSC1 skoSC1 skoMC1 skoMC1 skoMC1 (-1/239500800))))))))))))))))]/\[[0<skoSC1]/\[[(skoSC1 ((skoMC1 skoMC1 skoMC1 (1+(skoMC1 (-3))))+(skoSC1 ((skoMC1 skoMC1 skoMC1 (2+(skoMC1 (3))))+(skoSC1 ((skoMC1 skoMC1 skoMC1 skoMC1)+(skoSC1 skoMC1 skoMC1 skoMC1 (-1/12))))))))<=(skoMC1 skoMC1 skoMC1 (2+(skoMC1 (5))))]/\[[(skoSC1 skoMC1 skoMC1 skoMC1 (-1))<=(skoMC1 skoMC1 skoMC1)]/\[[(skoSC1 ((skoMC1 skoMC1 skoMC1 (-2+(skoMC1 (-12))))+(skoSC1 ((skoMC1 skoMC1 skoMC1 (1+(skoMC1 (-6))))+(skoSC1 ((skoMC1 skoMC1 skoMC1)+(skoSC1 ((skoMC1 skoMC1 skoMC1 (-1/12))+(skoSC1 skoMC1 skoMC1 skoMC1 (-1/12))))))))))<=(skoMC1 skoMC1 skoMC1 (2+(skoMC1 (6))))]/\[[(skoSC1 skoMC1 skoMC1 skoMC1 (-2))<=(skoMC1 skoMC1 skoMC1 (2))]/\[[(skoMC1 skoMC1 skoMC1 (-2))<(skoSC1 skoMC1 skoMC1 skoMC1 (2))]/\[[(skoMC1 skoMC1 skoMC1 (-1))<=0]/\[[(skoMC1 skoMC1 skoMC1 (-1))<(skoSC1 skoMC1 skoMC1 skoMC1)]/\[[(skoMC1 skoMC1 skoMC1 (-2))<=0]/\[[0<(skoMC1 skoMC1 skoMC1 (2))]/\[[skoSC1<=5/4]/\[[2<=skoMC1]/\[[0<=skoSC1]/\[[0<skoMC1]/\[[0<=skoMC1]/\[[(skoMC1 (-1))<(skoSC1 skoMC1)]/\[[(skoSC1 skoMC1 (-1))<=skoMC1]/\[[(skoMC1 (-2+(skoMC1 (-5))))<(skoSC1 ((skoMC1 (-1+(skoMC1 (3))))+(skoSC1 ((skoMC1 (-2+(skoMC1 (-3))))+(skoSC1 ((skoMC1 skoMC1 (-1))+(skoSC1 skoMC1 (1/12))))))))]/\[[(skoSC1 ((skoMC1 (1+(skoMC1 (-3))))+(skoSC1 ((skoMC1 (2+(skoMC1 (3))))+(skoSC1 ((skoMC1 skoMC1)+(skoSC1 skoMC1 (-1/12))))))))<=(skoMC1 (2+(skoMC1 (5))))]/\[[(skoMC1 (-2+(skoMC1 (-5))))<(skoSC1 ((skoMC1 (-1+(skoMC1 (3))))+(skoSC1 ((skoMC1 (-2+(skoMC1 (-3))))+(skoSC1 ((skoMC1 (1/6+(skoMC1 (-1))))+(skoSC1 skoMC1 (1/4))))))))]/\[(skoSC1 ((skoMC1 (1+(skoMC1 (-3))))+(skoSC1 ((skoMC1 (2+(skoMC1 (3))))+(skoSC1 ((skoMC1 (-1/6+skoMC1))+(skoSC1 skoMC1 (-1/4))))))))<=(skoMC1 (2+(skoMC1 (5))))]]]]]]]]]]]]]]]]]]]]]].

% In SMTLib2 format:
(declare-fun skoSC1 () Real) (declare-fun skoMC1 () Real) (assert (and (> (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (+ 1. (* skoMC1 (- 3.)))))) (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (+ 2. (* skoMC1 3.))))) (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 skoMC1))) (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (/ (- 1.) 12.)))) (* skoSC1 (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (/ 1. 360.)))) (* skoSC1 (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (/ (- 1.) 20160.)))) (* skoSC1 (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (/ 1. 1814400.)))) (* skoSC1 (* skoSC1 (* skoMC1 (* skoMC1 (* skoMC1 (/ (- 1.) 239500800.))))))))))))))))))))))) (* skoMC1 (* skoMC1 (* skoMC1 (+ 2. (* skoMC1 5.)))))) (and (> skoSC1 0.) (and (<= (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (+ 1. (* skoMC1 (- 3.)))))) (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (+ 2. (* skoMC1 3.))))) (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 skoMC1))) (* skoSC1 (* skoMC1 (* skoMC1 (* skoMC1 (/ (- 1.) 12.))))))))))) (* skoMC1 (* skoMC1 (* skoMC1 (+ 2. (* skoMC1 5.)))))) (and (<= (* skoSC1 (* skoMC1 (* skoMC1 (* skoMC1 (- 1.))))) (* skoMC1 (* skoMC1 skoMC1))) (and (<= (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (+ (- 2.) (* skoMC1 (- 12.)))))) (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (+ 1. (* skoMC1 (- 6.)))))) (* skoSC1 (+ (* skoMC1 (* skoMC1 skoMC1)) (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (/ (- 1.) 12.)))) (* skoSC1 (* skoMC1 (* skoMC1 (* skoMC1 (/ (- 1.) 12.))))))))))))) (* skoMC1 (* skoMC1 (* skoMC1 (+ 2. (* skoMC1 6.)))))) (and (<= (* skoSC1 (* skoMC1 (* skoMC1 (* skoMC1 (- 2.))))) (* skoMC1 (* skoMC1 (* skoMC1 2.)))) (and (> (* skoSC1 (* skoMC1 (* skoMC1 (* skoMC1 2.)))) (* skoMC1 (* skoMC1 (* skoMC1 (- 2.))))) (and (<= (* skoMC1 (* skoMC1 (* skoMC1 (- 1.)))) 0.) (and (> (* skoSC1 (* skoMC1 (* skoMC1 skoMC1))) (* skoMC1 (* skoMC1 (* skoMC1 (- 1.))))) (and (<= (* skoMC1 (* skoMC1 (* skoMC1 (- 2.)))) 0.) (and (> (* skoMC1 (* skoMC1 (* skoMC1 2.))) 0.) (and (<= skoSC1 (/ 5. 4.)) (and (<= 2. skoMC1) (and (<= 0. skoSC1) (and (> skoMC1 0.) (and (<= 0. skoMC1) (and (> (* skoSC1 skoMC1) (* skoMC1 (- 1.))) (and (<= (* skoSC1 (* skoMC1 (- 1.))) skoMC1) (and (> (* skoSC1 (+ (* skoMC1 (+ (- 1.) (* skoMC1 3.))) (* skoSC1 (+ (* skoMC1 (+ (- 2.) (* skoMC1 (- 3.)))) (* skoSC1 (+ (* skoMC1 (* skoMC1 (- 1.))) (* skoSC1 (* skoMC1 (/ 1. 12.))))))))) (* skoMC1 (+ (- 2.) (* skoMC1 (- 5.))))) (and (<= (* skoSC1 (+ (* skoMC1 (+ 1. (* skoMC1 (- 3.)))) (* skoSC1 (+ (* skoMC1 (+ 2. (* skoMC1 3.))) (* skoSC1 (+ (* skoMC1 skoMC1) (* skoSC1 (* skoMC1 (/ (- 1.) 12.))))))))) (* skoMC1 (+ 2. (* skoMC1 5.)))) (and (> (* skoSC1 (+ (* skoMC1 (+ (- 1.) (* skoMC1 3.))) (* skoSC1 (+ (* skoMC1 (+ (- 2.) (* skoMC1 (- 3.)))) (* skoSC1 (+ (* skoMC1 (+ (/ 1. 6.) (* skoMC1 (- 1.)))) (* skoSC1 (* skoMC1 (/ 1. 4.))))))))) (* skoMC1 (+ (- 2.) (* skoMC1 (- 5.))))) (<= (* skoSC1 (+ (* skoMC1 (+ 1. (* skoMC1 (- 3.)))) (* skoSC1 (+ (* skoMC1 (+ 2. (* skoMC1 3.))) (* skoSC1 (+ (* skoMC1 (+ (/ (- 1.) 6.) skoMC1)) (* skoSC1 (* skoMC1 (/ (- 1.) 4.))))))))) (* skoMC1 (+ 2. (* skoMC1 5.))))))))))))))))))))))))))

% In GRF format:
(sequent " MetiTarski formula " (antecedent (> (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (+ 1. (* skoMC1 (- 3.)))))) (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (+ 2. (* skoMC1 3.))))) (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 skoMC1))) (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (/ (- 1.) 12.)))) (* skoSC1 (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (/ 1. 360.)))) (* skoSC1 (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (/ (- 1.) 20160.)))) (* skoSC1 (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (/ 1. 1814400.)))) (* skoSC1 (* skoSC1 (* skoMC1 (* skoMC1 (* skoMC1 (/ (- 1.) 239500800.))))))))))))))))))))))) (* skoMC1 (* skoMC1 (* skoMC1 (+ 2. (* skoMC1 5.)))))) (> skoSC1 0.) (<= (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (+ 1. (* skoMC1 (- 3.)))))) (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (+ 2. (* skoMC1 3.))))) (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 skoMC1))) (* skoSC1 (* skoMC1 (* skoMC1 (* skoMC1 (/ (- 1.) 12.))))))))))) (* skoMC1 (* skoMC1 (* skoMC1 (+ 2. (* skoMC1 5.)))))) (<= (* skoSC1 (* skoMC1 (* skoMC1 (* skoMC1 (- 1.))))) (* skoMC1 (* skoMC1 skoMC1))) (<= (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (+ (- 2.) (* skoMC1 (- 12.)))))) (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (+ 1. (* skoMC1 (- 6.)))))) (* skoSC1 (+ (* skoMC1 (* skoMC1 skoMC1)) (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (/ (- 1.) 12.)))) (* skoSC1 (* skoMC1 (* skoMC1 (* skoMC1 (/ (- 1.) 12.))))))))))))) (* skoMC1 (* skoMC1 (* skoMC1 (+ 2. (* skoMC1 6.)))))) (<= (* skoSC1 (* skoMC1 (* skoMC1 (* skoMC1 (- 2.))))) (* skoMC1 (* skoMC1 (* skoMC1 2.)))) (> (* skoSC1 (* skoMC1 (* skoMC1 (* skoMC1 2.)))) (* skoMC1 (* skoMC1 (* skoMC1 (- 2.))))) (<= (* skoMC1 (* skoMC1 (* skoMC1 (- 1.)))) 0.) (> (* skoSC1 (* skoMC1 (* skoMC1 skoMC1))) (* skoMC1 (* skoMC1 (* skoMC1 (- 1.))))) (<= (* skoMC1 (* skoMC1 (* skoMC1 (- 2.)))) 0.) (> (* skoMC1 (* skoMC1 (* skoMC1 2.))) 0.) (<= skoSC1 (/ 5. 4.)) (<= 2. skoMC1) (<= 0. skoSC1) (> skoMC1 0.) (<= 0. skoMC1) (> (* skoSC1 skoMC1) (* skoMC1 (- 1.))) (<= (* skoSC1 (* skoMC1 (- 1.))) skoMC1) (> (* skoSC1 (+ (* skoMC1 (+ (- 1.) (* skoMC1 3.))) (* skoSC1 (+ (* skoMC1 (+ (- 2.) (* skoMC1 (- 3.)))) (* skoSC1 (+ (* skoMC1 (* skoMC1 (- 1.))) (* skoSC1 (* skoMC1 (/ 1. 12.))))))))) (* skoMC1 (+ (- 2.) (* skoMC1 (- 5.))))) (<= (* skoSC1 (+ (* skoMC1 (+ 1. (* skoMC1 (- 3.)))) (* skoSC1 (+ (* skoMC1 (+ 2. (* skoMC1 3.))) (* skoSC1 (+ (* skoMC1 skoMC1) (* skoSC1 (* skoMC1 (/ (- 1.) 12.))))))))) (* skoMC1 (+ 2. (* skoMC1 5.)))) (> (* skoSC1 (+ (* skoMC1 (+ (- 1.) (* skoMC1 3.))) (* skoSC1 (+ (* skoMC1 (+ (- 2.) (* skoMC1 (- 3.)))) (* skoSC1 (+ (* skoMC1 (+ (/ 1. 6.) (* skoMC1 (- 1.)))) (* skoSC1 (* skoMC1 (/ 1. 4.))))))))) (* skoMC1 (+ (- 2.) (* skoMC1 (- 5.)))))) (succedent (> (* skoSC1 (+ (* skoMC1 (+ 1. (* skoMC1 (- 3.)))) (* skoSC1 (+ (* skoMC1 (+ 2. (* skoMC1 3.))) (* skoSC1 (+ (* skoMC1 (+ (/ (- 1.) 6.) skoMC1)) (* skoSC1 (* skoMC1 (/ (- 1.) 4.))))))))) (* skoMC1 (+ 2. (* skoMC1 5.))))))
-----[end problem]-----

-----[begin problem]-----
% In Mathematica format:
Timing[Resolve[Exists[{skoSC1,skoMC1}, And[skoSC1*skoMC1*skoMC1*skoMC1*-1<=skoMC1*skoMC1*skoMC1,skoSC1*skoMC1*skoMC1*skoMC1>skoMC1*skoMC1*skoMC1*-1,skoSC1*(skoMC1*skoMC1*skoMC1*(1+skoMC1*-3)+skoSC1*(skoMC1*skoMC1*skoMC1*(2+skoMC1*3)+skoSC1*(skoMC1*skoMC1*skoMC1*skoMC1+skoSC1*skoMC1*skoMC1*skoMC1*(-1/12))))<=skoMC1*skoMC1*skoMC1*(2+skoMC1*5),skoSC1*skoMC1*skoMC1*skoMC1*-1<=skoMC1*skoMC1*skoMC1,skoSC1*(skoMC1*skoMC1*skoMC1*(-2+skoMC1*-12)+skoSC1*(skoMC1*skoMC1*skoMC1*(1+skoMC1*-6)+skoSC1*(skoMC1*skoMC1*skoMC1+skoSC1*(skoMC1*skoMC1*skoMC1*(-1/12)+skoSC1*skoMC1*skoMC1*skoMC1*(-1/12)))))<=skoMC1*skoMC1*skoMC1*(2+skoMC1*6),skoSC1*skoMC1*skoMC1*skoMC1*-2<=skoMC1*skoMC1*skoMC1*2,skoSC1*skoMC1*skoMC1*skoMC1*2>skoMC1*skoMC1*skoMC1*-2,skoMC1*skoMC1*skoMC1*-1<=0,skoSC1*skoMC1*skoMC1*skoMC1>skoMC1*skoMC1*skoMC1*-1,skoMC1*skoMC1*skoMC1*-2<=0,skoMC1*skoMC1*skoMC1*2>0,skoSC1<=(5/4),2<=skoMC1,0<=skoSC1,skoMC1>0,0<=skoMC1,skoSC1*skoMC1>skoMC1*-1,skoSC1*skoMC1*-1<=skoMC1,skoSC1*(skoMC1*(-1+skoMC1*3)+skoSC1*(skoMC1*(-2+skoMC1*-3)+skoSC1*(skoMC1*skoMC1*-1+skoSC1*skoMC1*(1/12))))>skoMC1*(-2+skoMC1*-5),skoSC1*(skoMC1*(1+skoMC1*-3)+skoSC1*(skoMC1*(2+skoMC1*3)+skoSC1*(skoMC1*skoMC1+skoSC1*skoMC1*(-1/12))))<=skoMC1*(2+skoMC1*5),skoSC1*(skoMC1*(-1+skoMC1*3)+skoSC1*(skoMC1*(-2+skoMC1*-3)+skoSC1*(skoMC1*((1/6)+skoMC1*-1)+skoSC1*skoMC1*(1/4))))>skoMC1*(-2+skoMC1*-5),skoSC1*(skoMC1*(1+skoMC1*-3)+skoSC1*(skoMC1*(2+skoMC1*3)+skoSC1*(skoMC1*((-1/6)+skoMC1)+skoSC1*skoMC1*(-1/4))))<=skoMC1*(2+skoMC1*5)]], Reals]]

% In QepcadB format:
(E skoSC1) (E skoMC1) [[(skoSC1 skoMC1 skoMC1 skoMC1 (-1))<=(skoMC1 skoMC1 skoMC1)]/\[[(skoMC1 skoMC1 skoMC1 (-1))<(skoSC1 skoMC1 skoMC1 skoMC1)]/\[[(skoSC1 ((skoMC1 skoMC1 skoMC1 (1+(skoMC1 (-3))))+(skoSC1 ((skoMC1 skoMC1 skoMC1 (2+(skoMC1 (3))))+(skoSC1 ((skoMC1 skoMC1 skoMC1 skoMC1)+(skoSC1 skoMC1 skoMC1 skoMC1 (-1/12))))))))<=(skoMC1 skoMC1 skoMC1 (2+(skoMC1 (5))))]/\[[(skoSC1 skoMC1 skoMC1 skoMC1 (-1))<=(skoMC1 skoMC1 skoMC1)]/\[[(skoSC1 ((skoMC1 skoMC1 skoMC1 (-2+(skoMC1 (-12))))+(skoSC1 ((skoMC1 skoMC1 skoMC1 (1+(skoMC1 (-6))))+(skoSC1 ((skoMC1 skoMC1 skoMC1)+(skoSC1 ((skoMC1 skoMC1 skoMC1 (-1/12))+(skoSC1 skoMC1 skoMC1 skoMC1 (-1/12))))))))))<=(skoMC1 skoMC1 skoMC1 (2+(skoMC1 (6))))]/\[[(skoSC1 skoMC1 skoMC1 skoMC1 (-2))<=(skoMC1 skoMC1 skoMC1 (2))]/\[[(skoMC1 skoMC1 skoMC1 (-2))<(skoSC1 skoMC1 skoMC1 skoMC1 (2))]/\[[(skoMC1 skoMC1 skoMC1 (-1))<=0]/\[[(skoMC1 skoMC1 skoMC1 (-1))<(skoSC1 skoMC1 skoMC1 skoMC1)]/\[[(skoMC1 skoMC1 skoMC1 (-2))<=0]/\[[0<(skoMC1 skoMC1 skoMC1 (2))]/\[[skoSC1<=5/4]/\[[2<=skoMC1]/\[[0<=skoSC1]/\[[0<skoMC1]/\[[0<=skoMC1]/\[[(skoMC1 (-1))<(skoSC1 skoMC1)]/\[[(skoSC1 skoMC1 (-1))<=skoMC1]/\[[(skoMC1 (-2+(skoMC1 (-5))))<(skoSC1 ((skoMC1 (-1+(skoMC1 (3))))+(skoSC1 ((skoMC1 (-2+(skoMC1 (-3))))+(skoSC1 ((skoMC1 skoMC1 (-1))+(skoSC1 skoMC1 (1/12))))))))]/\[[(skoSC1 ((skoMC1 (1+(skoMC1 (-3))))+(skoSC1 ((skoMC1 (2+(skoMC1 (3))))+(skoSC1 ((skoMC1 skoMC1)+(skoSC1 skoMC1 (-1/12))))))))<=(skoMC1 (2+(skoMC1 (5))))]/\[[(skoMC1 (-2+(skoMC1 (-5))))<(skoSC1 ((skoMC1 (-1+(skoMC1 (3))))+(skoSC1 ((skoMC1 (-2+(skoMC1 (-3))))+(skoSC1 ((skoMC1 (1/6+(skoMC1 (-1))))+(skoSC1 skoMC1 (1/4))))))))]/\[(skoSC1 ((skoMC1 (1+(skoMC1 (-3))))+(skoSC1 ((skoMC1 (2+(skoMC1 (3))))+(skoSC1 ((skoMC1 (-1/6+skoMC1))+(skoSC1 skoMC1 (-1/4))))))))<=(skoMC1 (2+(skoMC1 (5))))]]]]]]]]]]]]]]]]]]]]]].

% In SMTLib2 format:
(declare-fun skoSC1 () Real) (declare-fun skoMC1 () Real) (assert (and (<= (* skoSC1 (* skoMC1 (* skoMC1 (* skoMC1 (- 1.))))) (* skoMC1 (* skoMC1 skoMC1))) (and (> (* skoSC1 (* skoMC1 (* skoMC1 skoMC1))) (* skoMC1 (* skoMC1 (* skoMC1 (- 1.))))) (and (<= (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (+ 1. (* skoMC1 (- 3.)))))) (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (+ 2. (* skoMC1 3.))))) (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 skoMC1))) (* skoSC1 (* skoMC1 (* skoMC1 (* skoMC1 (/ (- 1.) 12.))))))))))) (* skoMC1 (* skoMC1 (* skoMC1 (+ 2. (* skoMC1 5.)))))) (and (<= (* skoSC1 (* skoMC1 (* skoMC1 (* skoMC1 (- 1.))))) (* skoMC1 (* skoMC1 skoMC1))) (and (<= (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (+ (- 2.) (* skoMC1 (- 12.)))))) (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (+ 1. (* skoMC1 (- 6.)))))) (* skoSC1 (+ (* skoMC1 (* skoMC1 skoMC1)) (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (/ (- 1.) 12.)))) (* skoSC1 (* skoMC1 (* skoMC1 (* skoMC1 (/ (- 1.) 12.))))))))))))) (* skoMC1 (* skoMC1 (* skoMC1 (+ 2. (* skoMC1 6.)))))) (and (<= (* skoSC1 (* skoMC1 (* skoMC1 (* skoMC1 (- 2.))))) (* skoMC1 (* skoMC1 (* skoMC1 2.)))) (and (> (* skoSC1 (* skoMC1 (* skoMC1 (* skoMC1 2.)))) (* skoMC1 (* skoMC1 (* skoMC1 (- 2.))))) (and (<= (* skoMC1 (* skoMC1 (* skoMC1 (- 1.)))) 0.) (and (> (* skoSC1 (* skoMC1 (* skoMC1 skoMC1))) (* skoMC1 (* skoMC1 (* skoMC1 (- 1.))))) (and (<= (* skoMC1 (* skoMC1 (* skoMC1 (- 2.)))) 0.) (and (> (* skoMC1 (* skoMC1 (* skoMC1 2.))) 0.) (and (<= skoSC1 (/ 5. 4.)) (and (<= 2. skoMC1) (and (<= 0. skoSC1) (and (> skoMC1 0.) (and (<= 0. skoMC1) (and (> (* skoSC1 skoMC1) (* skoMC1 (- 1.))) (and (<= (* skoSC1 (* skoMC1 (- 1.))) skoMC1) (and (> (* skoSC1 (+ (* skoMC1 (+ (- 1.) (* skoMC1 3.))) (* skoSC1 (+ (* skoMC1 (+ (- 2.) (* skoMC1 (- 3.)))) (* skoSC1 (+ (* skoMC1 (* skoMC1 (- 1.))) (* skoSC1 (* skoMC1 (/ 1. 12.))))))))) (* skoMC1 (+ (- 2.) (* skoMC1 (- 5.))))) (and (<= (* skoSC1 (+ (* skoMC1 (+ 1. (* skoMC1 (- 3.)))) (* skoSC1 (+ (* skoMC1 (+ 2. (* skoMC1 3.))) (* skoSC1 (+ (* skoMC1 skoMC1) (* skoSC1 (* skoMC1 (/ (- 1.) 12.))))))))) (* skoMC1 (+ 2. (* skoMC1 5.)))) (and (> (* skoSC1 (+ (* skoMC1 (+ (- 1.) (* skoMC1 3.))) (* skoSC1 (+ (* skoMC1 (+ (- 2.) (* skoMC1 (- 3.)))) (* skoSC1 (+ (* skoMC1 (+ (/ 1. 6.) (* skoMC1 (- 1.)))) (* skoSC1 (* skoMC1 (/ 1. 4.))))))))) (* skoMC1 (+ (- 2.) (* skoMC1 (- 5.))))) (<= (* skoSC1 (+ (* skoMC1 (+ 1. (* skoMC1 (- 3.)))) (* skoSC1 (+ (* skoMC1 (+ 2. (* skoMC1 3.))) (* skoSC1 (+ (* skoMC1 (+ (/ (- 1.) 6.) skoMC1)) (* skoSC1 (* skoMC1 (/ (- 1.) 4.))))))))) (* skoMC1 (+ 2. (* skoMC1 5.))))))))))))))))))))))))))

% In GRF format:
(sequent " MetiTarski formula " (antecedent (<= (* skoSC1 (* skoMC1 (* skoMC1 (* skoMC1 (- 1.))))) (* skoMC1 (* skoMC1 skoMC1))) (> (* skoSC1 (* skoMC1 (* skoMC1 skoMC1))) (* skoMC1 (* skoMC1 (* skoMC1 (- 1.))))) (<= (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (+ 1. (* skoMC1 (- 3.)))))) (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (+ 2. (* skoMC1 3.))))) (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 skoMC1))) (* skoSC1 (* skoMC1 (* skoMC1 (* skoMC1 (/ (- 1.) 12.))))))))))) (* skoMC1 (* skoMC1 (* skoMC1 (+ 2. (* skoMC1 5.)))))) (<= (* skoSC1 (* skoMC1 (* skoMC1 (* skoMC1 (- 1.))))) (* skoMC1 (* skoMC1 skoMC1))) (<= (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (+ (- 2.) (* skoMC1 (- 12.)))))) (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (+ 1. (* skoMC1 (- 6.)))))) (* skoSC1 (+ (* skoMC1 (* skoMC1 skoMC1)) (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (/ (- 1.) 12.)))) (* skoSC1 (* skoMC1 (* skoMC1 (* skoMC1 (/ (- 1.) 12.))))))))))))) (* skoMC1 (* skoMC1 (* skoMC1 (+ 2. (* skoMC1 6.)))))) (<= (* skoSC1 (* skoMC1 (* skoMC1 (* skoMC1 (- 2.))))) (* skoMC1 (* skoMC1 (* skoMC1 2.)))) (> (* skoSC1 (* skoMC1 (* skoMC1 (* skoMC1 2.)))) (* skoMC1 (* skoMC1 (* skoMC1 (- 2.))))) (<= (* skoMC1 (* skoMC1 (* skoMC1 (- 1.)))) 0.) (> (* skoSC1 (* skoMC1 (* skoMC1 skoMC1))) (* skoMC1 (* skoMC1 (* skoMC1 (- 1.))))) (<= (* skoMC1 (* skoMC1 (* skoMC1 (- 2.)))) 0.) (> (* skoMC1 (* skoMC1 (* skoMC1 2.))) 0.) (<= skoSC1 (/ 5. 4.)) (<= 2. skoMC1) (<= 0. skoSC1) (> skoMC1 0.) (<= 0. skoMC1) (> (* skoSC1 skoMC1) (* skoMC1 (- 1.))) (<= (* skoSC1 (* skoMC1 (- 1.))) skoMC1) (> (* skoSC1 (+ (* skoMC1 (+ (- 1.) (* skoMC1 3.))) (* skoSC1 (+ (* skoMC1 (+ (- 2.) (* skoMC1 (- 3.)))) (* skoSC1 (+ (* skoMC1 (* skoMC1 (- 1.))) (* skoSC1 (* skoMC1 (/ 1. 12.))))))))) (* skoMC1 (+ (- 2.) (* skoMC1 (- 5.))))) (<= (* skoSC1 (+ (* skoMC1 (+ 1. (* skoMC1 (- 3.)))) (* skoSC1 (+ (* skoMC1 (+ 2. (* skoMC1 3.))) (* skoSC1 (+ (* skoMC1 skoMC1) (* skoSC1 (* skoMC1 (/ (- 1.) 12.))))))))) (* skoMC1 (+ 2. (* skoMC1 5.)))) (> (* skoSC1 (+ (* skoMC1 (+ (- 1.) (* skoMC1 3.))) (* skoSC1 (+ (* skoMC1 (+ (- 2.) (* skoMC1 (- 3.)))) (* skoSC1 (+ (* skoMC1 (+ (/ 1. 6.) (* skoMC1 (- 1.)))) (* skoSC1 (* skoMC1 (/ 1. 4.))))))))) (* skoMC1 (+ (- 2.) (* skoMC1 (- 5.)))))) (succedent (> (* skoSC1 (+ (* skoMC1 (+ 1. (* skoMC1 (- 3.)))) (* skoSC1 (+ (* skoMC1 (+ 2. (* skoMC1 3.))) (* skoSC1 (+ (* skoMC1 (+ (/ (- 1.) 6.) skoMC1)) (* skoSC1 (* skoMC1 (/ (- 1.) 4.))))))))) (* skoMC1 (+ 2. (* skoMC1 5.))))))
-----[end problem]-----

-----[begin problem]-----
% In Mathematica format:
Timing[Resolve[Exists[{skoSC1,skoMC1}, And[skoSC1*(skoMC1*skoMC1*skoMC1*(1+skoMC1*-3)+skoSC1*(skoMC1*skoMC1*skoMC1*(2+skoMC1*3)+skoSC1*(skoMC1*skoMC1*skoMC1*((-1/6)+skoMC1)+skoSC1*skoMC1*skoMC1*skoMC1*(-1/4))))<=skoMC1*skoMC1*skoMC1*(2+skoMC1*5),skoMC1*skoMC1*skoMC1*2>0,skoSC1*(skoMC1*skoMC1*skoMC1*(1+skoMC1*-3)+skoSC1*(skoMC1*skoMC1*skoMC1*(2+skoMC1*3)+skoSC1*(skoMC1*skoMC1*skoMC1*skoMC1+skoSC1*skoMC1*skoMC1*skoMC1*(-1/12))))<=skoMC1*skoMC1*skoMC1*(2+skoMC1*5),skoSC1*skoMC1*skoMC1*skoMC1*-1<=skoMC1*skoMC1*skoMC1,skoSC1*(skoMC1*skoMC1*skoMC1*(-2+skoMC1*-12)+skoSC1*(skoMC1*skoMC1*skoMC1*(1+skoMC1*-6)+skoSC1*(skoMC1*skoMC1*skoMC1+skoSC1*(skoMC1*skoMC1*skoMC1*(-1/12)+skoSC1*skoMC1*skoMC1*skoMC1*(-1/12)))))<=skoMC1*skoMC1*skoMC1*(2+skoMC1*6),skoSC1*skoMC1*skoMC1*skoMC1*-2<=skoMC1*skoMC1*skoMC1*2,skoSC1*skoMC1*skoMC1*skoMC1*2>skoMC1*skoMC1*skoMC1*-2,skoMC1*skoMC1*skoMC1*-1<=0,skoSC1*skoMC1*skoMC1*skoMC1>skoMC1*skoMC1*skoMC1*-1,skoMC1*skoMC1*skoMC1*-2<=0,skoMC1*skoMC1*skoMC1*2>0,skoSC1<=(5/4),2<=skoMC1,0<=skoSC1,skoMC1>0,0<=skoMC1,skoSC1*skoMC1>skoMC1*-1,skoSC1*skoMC1*-1<=skoMC1,skoSC1*(skoMC1*(-1+skoMC1*3)+skoSC1*(skoMC1*(-2+skoMC1*-3)+skoSC1*(skoMC1*skoMC1*-1+skoSC1*skoMC1*(1/12))))>skoMC1*(-2+skoMC1*-5),skoSC1*(skoMC1*(1+skoMC1*-3)+skoSC1*(skoMC1*(2+skoMC1*3)+skoSC1*(skoMC1*skoMC1+skoSC1*skoMC1*(-1/12))))<=skoMC1*(2+skoMC1*5),skoSC1*(skoMC1*(-1+skoMC1*3)+skoSC1*(skoMC1*(-2+skoMC1*-3)+skoSC1*(skoMC1*((1/6)+skoMC1*-1)+skoSC1*skoMC1*(1/4))))>skoMC1*(-2+skoMC1*-5),skoSC1*(skoMC1*(1+skoMC1*-3)+skoSC1*(skoMC1*(2+skoMC1*3)+skoSC1*(skoMC1*((-1/6)+skoMC1)+skoSC1*skoMC1*(-1/4))))<=skoMC1*(2+skoMC1*5)]], Reals]]

% In QepcadB format:
(E skoSC1) (E skoMC1) [[(skoSC1 ((skoMC1 skoMC1 skoMC1 (1+(skoMC1 (-3))))+(skoSC1 ((skoMC1 skoMC1 skoMC1 (2+(skoMC1 (3))))+(skoSC1 ((skoMC1 skoMC1 skoMC1 (-1/6+skoMC1))+(skoSC1 skoMC1 skoMC1 skoMC1 (-1/4))))))))<=(skoMC1 skoMC1 skoMC1 (2+(skoMC1 (5))))]/\[[0<(skoMC1 skoMC1 skoMC1 (2))]/\[[(skoSC1 ((skoMC1 skoMC1 skoMC1 (1+(skoMC1 (-3))))+(skoSC1 ((skoMC1 skoMC1 skoMC1 (2+(skoMC1 (3))))+(skoSC1 ((skoMC1 skoMC1 skoMC1 skoMC1)+(skoSC1 skoMC1 skoMC1 skoMC1 (-1/12))))))))<=(skoMC1 skoMC1 skoMC1 (2+(skoMC1 (5))))]/\[[(skoSC1 skoMC1 skoMC1 skoMC1 (-1))<=(skoMC1 skoMC1 skoMC1)]/\[[(skoSC1 ((skoMC1 skoMC1 skoMC1 (-2+(skoMC1 (-12))))+(skoSC1 ((skoMC1 skoMC1 skoMC1 (1+(skoMC1 (-6))))+(skoSC1 ((skoMC1 skoMC1 skoMC1)+(skoSC1 ((skoMC1 skoMC1 skoMC1 (-1/12))+(skoSC1 skoMC1 skoMC1 skoMC1 (-1/12))))))))))<=(skoMC1 skoMC1 skoMC1 (2+(skoMC1 (6))))]/\[[(skoSC1 skoMC1 skoMC1 skoMC1 (-2))<=(skoMC1 skoMC1 skoMC1 (2))]/\[[(skoMC1 skoMC1 skoMC1 (-2))<(skoSC1 skoMC1 skoMC1 skoMC1 (2))]/\[[(skoMC1 skoMC1 skoMC1 (-1))<=0]/\[[(skoMC1 skoMC1 skoMC1 (-1))<(skoSC1 skoMC1 skoMC1 skoMC1)]/\[[(skoMC1 skoMC1 skoMC1 (-2))<=0]/\[[0<(skoMC1 skoMC1 skoMC1 (2))]/\[[skoSC1<=5/4]/\[[2<=skoMC1]/\[[0<=skoSC1]/\[[0<skoMC1]/\[[0<=skoMC1]/\[[(skoMC1 (-1))<(skoSC1 skoMC1)]/\[[(skoSC1 skoMC1 (-1))<=skoMC1]/\[[(skoMC1 (-2+(skoMC1 (-5))))<(skoSC1 ((skoMC1 (-1+(skoMC1 (3))))+(skoSC1 ((skoMC1 (-2+(skoMC1 (-3))))+(skoSC1 ((skoMC1 skoMC1 (-1))+(skoSC1 skoMC1 (1/12))))))))]/\[[(skoSC1 ((skoMC1 (1+(skoMC1 (-3))))+(skoSC1 ((skoMC1 (2+(skoMC1 (3))))+(skoSC1 ((skoMC1 skoMC1)+(skoSC1 skoMC1 (-1/12))))))))<=(skoMC1 (2+(skoMC1 (5))))]/\[[(skoMC1 (-2+(skoMC1 (-5))))<(skoSC1 ((skoMC1 (-1+(skoMC1 (3))))+(skoSC1 ((skoMC1 (-2+(skoMC1 (-3))))+(skoSC1 ((skoMC1 (1/6+(skoMC1 (-1))))+(skoSC1 skoMC1 (1/4))))))))]/\[(skoSC1 ((skoMC1 (1+(skoMC1 (-3))))+(skoSC1 ((skoMC1 (2+(skoMC1 (3))))+(skoSC1 ((skoMC1 (-1/6+skoMC1))+(skoSC1 skoMC1 (-1/4))))))))<=(skoMC1 (2+(skoMC1 (5))))]]]]]]]]]]]]]]]]]]]]]].

% In SMTLib2 format:
(declare-fun skoSC1 () Real) (declare-fun skoMC1 () Real) (assert (and (<= (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (+ 1. (* skoMC1 (- 3.)))))) (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (+ 2. (* skoMC1 3.))))) (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (+ (/ (- 1.) 6.) skoMC1)))) (* skoSC1 (* skoMC1 (* skoMC1 (* skoMC1 (/ (- 1.) 4.))))))))))) (* skoMC1 (* skoMC1 (* skoMC1 (+ 2. (* skoMC1 5.)))))) (and (> (* skoMC1 (* skoMC1 (* skoMC1 2.))) 0.) (and (<= (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (+ 1. (* skoMC1 (- 3.)))))) (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (+ 2. (* skoMC1 3.))))) (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 skoMC1))) (* skoSC1 (* skoMC1 (* skoMC1 (* skoMC1 (/ (- 1.) 12.))))))))))) (* skoMC1 (* skoMC1 (* skoMC1 (+ 2. (* skoMC1 5.)))))) (and (<= (* skoSC1 (* skoMC1 (* skoMC1 (* skoMC1 (- 1.))))) (* skoMC1 (* skoMC1 skoMC1))) (and (<= (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (+ (- 2.) (* skoMC1 (- 12.)))))) (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (+ 1. (* skoMC1 (- 6.)))))) (* skoSC1 (+ (* skoMC1 (* skoMC1 skoMC1)) (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (/ (- 1.) 12.)))) (* skoSC1 (* skoMC1 (* skoMC1 (* skoMC1 (/ (- 1.) 12.))))))))))))) (* skoMC1 (* skoMC1 (* skoMC1 (+ 2. (* skoMC1 6.)))))) (and (<= (* skoSC1 (* skoMC1 (* skoMC1 (* skoMC1 (- 2.))))) (* skoMC1 (* skoMC1 (* skoMC1 2.)))) (and (> (* skoSC1 (* skoMC1 (* skoMC1 (* skoMC1 2.)))) (* skoMC1 (* skoMC1 (* skoMC1 (- 2.))))) (and (<= (* skoMC1 (* skoMC1 (* skoMC1 (- 1.)))) 0.) (and (> (* skoSC1 (* skoMC1 (* skoMC1 skoMC1))) (* skoMC1 (* skoMC1 (* skoMC1 (- 1.))))) (and (<= (* skoMC1 (* skoMC1 (* skoMC1 (- 2.)))) 0.) (and (> (* skoMC1 (* skoMC1 (* skoMC1 2.))) 0.) (and (<= skoSC1 (/ 5. 4.)) (and (<= 2. skoMC1) (and (<= 0. skoSC1) (and (> skoMC1 0.) (and (<= 0. skoMC1) (and (> (* skoSC1 skoMC1) (* skoMC1 (- 1.))) (and (<= (* skoSC1 (* skoMC1 (- 1.))) skoMC1) (and (> (* skoSC1 (+ (* skoMC1 (+ (- 1.) (* skoMC1 3.))) (* skoSC1 (+ (* skoMC1 (+ (- 2.) (* skoMC1 (- 3.)))) (* skoSC1 (+ (* skoMC1 (* skoMC1 (- 1.))) (* skoSC1 (* skoMC1 (/ 1. 12.))))))))) (* skoMC1 (+ (- 2.) (* skoMC1 (- 5.))))) (and (<= (* skoSC1 (+ (* skoMC1 (+ 1. (* skoMC1 (- 3.)))) (* skoSC1 (+ (* skoMC1 (+ 2. (* skoMC1 3.))) (* skoSC1 (+ (* skoMC1 skoMC1) (* skoSC1 (* skoMC1 (/ (- 1.) 12.))))))))) (* skoMC1 (+ 2. (* skoMC1 5.)))) (and (> (* skoSC1 (+ (* skoMC1 (+ (- 1.) (* skoMC1 3.))) (* skoSC1 (+ (* skoMC1 (+ (- 2.) (* skoMC1 (- 3.)))) (* skoSC1 (+ (* skoMC1 (+ (/ 1. 6.) (* skoMC1 (- 1.)))) (* skoSC1 (* skoMC1 (/ 1. 4.))))))))) (* skoMC1 (+ (- 2.) (* skoMC1 (- 5.))))) (<= (* skoSC1 (+ (* skoMC1 (+ 1. (* skoMC1 (- 3.)))) (* skoSC1 (+ (* skoMC1 (+ 2. (* skoMC1 3.))) (* skoSC1 (+ (* skoMC1 (+ (/ (- 1.) 6.) skoMC1)) (* skoSC1 (* skoMC1 (/ (- 1.) 4.))))))))) (* skoMC1 (+ 2. (* skoMC1 5.))))))))))))))))))))))))))

% In GRF format:
(sequent " MetiTarski formula " (antecedent (<= (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (+ 1. (* skoMC1 (- 3.)))))) (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (+ 2. (* skoMC1 3.))))) (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (+ (/ (- 1.) 6.) skoMC1)))) (* skoSC1 (* skoMC1 (* skoMC1 (* skoMC1 (/ (- 1.) 4.))))))))))) (* skoMC1 (* skoMC1 (* skoMC1 (+ 2. (* skoMC1 5.)))))) (> (* skoMC1 (* skoMC1 (* skoMC1 2.))) 0.) (<= (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (+ 1. (* skoMC1 (- 3.)))))) (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (+ 2. (* skoMC1 3.))))) (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 skoMC1))) (* skoSC1 (* skoMC1 (* skoMC1 (* skoMC1 (/ (- 1.) 12.))))))))))) (* skoMC1 (* skoMC1 (* skoMC1 (+ 2. (* skoMC1 5.)))))) (<= (* skoSC1 (* skoMC1 (* skoMC1 (* skoMC1 (- 1.))))) (* skoMC1 (* skoMC1 skoMC1))) (<= (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (+ (- 2.) (* skoMC1 (- 12.)))))) (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (+ 1. (* skoMC1 (- 6.)))))) (* skoSC1 (+ (* skoMC1 (* skoMC1 skoMC1)) (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (/ (- 1.) 12.)))) (* skoSC1 (* skoMC1 (* skoMC1 (* skoMC1 (/ (- 1.) 12.))))))))))))) (* skoMC1 (* skoMC1 (* skoMC1 (+ 2. (* skoMC1 6.)))))) (<= (* skoSC1 (* skoMC1 (* skoMC1 (* skoMC1 (- 2.))))) (* skoMC1 (* skoMC1 (* skoMC1 2.)))) (> (* skoSC1 (* skoMC1 (* skoMC1 (* skoMC1 2.)))) (* skoMC1 (* skoMC1 (* skoMC1 (- 2.))))) (<= (* skoMC1 (* skoMC1 (* skoMC1 (- 1.)))) 0.) (> (* skoSC1 (* skoMC1 (* skoMC1 skoMC1))) (* skoMC1 (* skoMC1 (* skoMC1 (- 1.))))) (<= (* skoMC1 (* skoMC1 (* skoMC1 (- 2.)))) 0.) (> (* skoMC1 (* skoMC1 (* skoMC1 2.))) 0.) (<= skoSC1 (/ 5. 4.)) (<= 2. skoMC1) (<= 0. skoSC1) (> skoMC1 0.) (<= 0. skoMC1) (> (* skoSC1 skoMC1) (* skoMC1 (- 1.))) (<= (* skoSC1 (* skoMC1 (- 1.))) skoMC1) (> (* skoSC1 (+ (* skoMC1 (+ (- 1.) (* skoMC1 3.))) (* skoSC1 (+ (* skoMC1 (+ (- 2.) (* skoMC1 (- 3.)))) (* skoSC1 (+ (* skoMC1 (* skoMC1 (- 1.))) (* skoSC1 (* skoMC1 (/ 1. 12.))))))))) (* skoMC1 (+ (- 2.) (* skoMC1 (- 5.))))) (<= (* skoSC1 (+ (* skoMC1 (+ 1. (* skoMC1 (- 3.)))) (* skoSC1 (+ (* skoMC1 (+ 2. (* skoMC1 3.))) (* skoSC1 (+ (* skoMC1 skoMC1) (* skoSC1 (* skoMC1 (/ (- 1.) 12.))))))))) (* skoMC1 (+ 2. (* skoMC1 5.)))) (> (* skoSC1 (+ (* skoMC1 (+ (- 1.) (* skoMC1 3.))) (* skoSC1 (+ (* skoMC1 (+ (- 2.) (* skoMC1 (- 3.)))) (* skoSC1 (+ (* skoMC1 (+ (/ 1. 6.) (* skoMC1 (- 1.)))) (* skoSC1 (* skoMC1 (/ 1. 4.))))))))) (* skoMC1 (+ (- 2.) (* skoMC1 (- 5.)))))) (succedent (> (* skoSC1 (+ (* skoMC1 (+ 1. (* skoMC1 (- 3.)))) (* skoSC1 (+ (* skoMC1 (+ 2. (* skoMC1 3.))) (* skoSC1 (+ (* skoMC1 (+ (/ (- 1.) 6.) skoMC1)) (* skoSC1 (* skoMC1 (/ (- 1.) 4.))))))))) (* skoMC1 (+ 2. (* skoMC1 5.))))))
-----[end problem]-----

-----[begin problem]-----
% In Mathematica format:
Timing[Resolve[Exists[{skoSC1,skoMC1}, And[skoSC1*(skoMC1*skoMC1*skoMC1*(1+skoMC1*-3)+skoSC1*(skoMC1*skoMC1*skoMC1*(2+skoMC1*3)+skoSC1*(skoMC1*skoMC1*skoMC1*((-1/6)+skoMC1)+skoSC1*skoMC1*skoMC1*skoMC1*(-1/4))))<=skoMC1*skoMC1*skoMC1*(2+skoMC1*5),skoSC1*(skoMC1*skoMC1*skoMC1*(1+skoMC1*-3)+skoSC1*(skoMC1*skoMC1*skoMC1*(2+skoMC1*3)+skoSC1*(skoMC1*skoMC1*skoMC1*skoMC1+skoSC1*skoMC1*skoMC1*skoMC1*(-1/12))))<=skoMC1*skoMC1*skoMC1*(2+skoMC1*5),skoSC1*skoMC1*skoMC1*skoMC1*-1<=skoMC1*skoMC1*skoMC1,skoSC1*(skoMC1*skoMC1*skoMC1*(-2+skoMC1*-12)+skoSC1*(skoMC1*skoMC1*skoMC1*(1+skoMC1*-6)+skoSC1*(skoMC1*skoMC1*skoMC1+skoSC1*(skoMC1*skoMC1*skoMC1*(-1/12)+skoSC1*skoMC1*skoMC1*skoMC1*(-1/12)))))<=skoMC1*skoMC1*skoMC1*(2+skoMC1*6),skoSC1*skoMC1*skoMC1*skoMC1*-2<=skoMC1*skoMC1*skoMC1*2,skoSC1*skoMC1*skoMC1*skoMC1*2>skoMC1*skoMC1*skoMC1*-2,skoMC1*skoMC1*skoMC1*-1<=0,skoSC1*skoMC1*skoMC1*skoMC1>skoMC1*skoMC1*skoMC1*-1,skoMC1*skoMC1*skoMC1*-2<=0,skoMC1*skoMC1*skoMC1*2>0,skoSC1<=(5/4),2<=skoMC1,0<=skoSC1,skoMC1>0,0<=skoMC1,skoSC1*skoMC1>skoMC1*-1,skoSC1*skoMC1*-1<=skoMC1,skoSC1*(skoMC1*(-1+skoMC1*3)+skoSC1*(skoMC1*(-2+skoMC1*-3)+skoSC1*(skoMC1*skoMC1*-1+skoSC1*skoMC1*(1/12))))>skoMC1*(-2+skoMC1*-5),skoSC1*(skoMC1*(1+skoMC1*-3)+skoSC1*(skoMC1*(2+skoMC1*3)+skoSC1*(skoMC1*skoMC1+skoSC1*skoMC1*(-1/12))))<=skoMC1*(2+skoMC1*5),skoSC1*(skoMC1*(-1+skoMC1*3)+skoSC1*(skoMC1*(-2+skoMC1*-3)+skoSC1*(skoMC1*((1/6)+skoMC1*-1)+skoSC1*skoMC1*(1/4))))>skoMC1*(-2+skoMC1*-5),skoSC1*(skoMC1*(1+skoMC1*-3)+skoSC1*(skoMC1*(2+skoMC1*3)+skoSC1*(skoMC1*((-1/6)+skoMC1)+skoSC1*skoMC1*(-1/4))))<=skoMC1*(2+skoMC1*5)]], Reals]]

% In QepcadB format:
(E skoSC1) (E skoMC1) [[(skoSC1 ((skoMC1 skoMC1 skoMC1 (1+(skoMC1 (-3))))+(skoSC1 ((skoMC1 skoMC1 skoMC1 (2+(skoMC1 (3))))+(skoSC1 ((skoMC1 skoMC1 skoMC1 (-1/6+skoMC1))+(skoSC1 skoMC1 skoMC1 skoMC1 (-1/4))))))))<=(skoMC1 skoMC1 skoMC1 (2+(skoMC1 (5))))]/\[[(skoSC1 ((skoMC1 skoMC1 skoMC1 (1+(skoMC1 (-3))))+(skoSC1 ((skoMC1 skoMC1 skoMC1 (2+(skoMC1 (3))))+(skoSC1 ((skoMC1 skoMC1 skoMC1 skoMC1)+(skoSC1 skoMC1 skoMC1 skoMC1 (-1/12))))))))<=(skoMC1 skoMC1 skoMC1 (2+(skoMC1 (5))))]/\[[(skoSC1 skoMC1 skoMC1 skoMC1 (-1))<=(skoMC1 skoMC1 skoMC1)]/\[[(skoSC1 ((skoMC1 skoMC1 skoMC1 (-2+(skoMC1 (-12))))+(skoSC1 ((skoMC1 skoMC1 skoMC1 (1+(skoMC1 (-6))))+(skoSC1 ((skoMC1 skoMC1 skoMC1)+(skoSC1 ((skoMC1 skoMC1 skoMC1 (-1/12))+(skoSC1 skoMC1 skoMC1 skoMC1 (-1/12))))))))))<=(skoMC1 skoMC1 skoMC1 (2+(skoMC1 (6))))]/\[[(skoSC1 skoMC1 skoMC1 skoMC1 (-2))<=(skoMC1 skoMC1 skoMC1 (2))]/\[[(skoMC1 skoMC1 skoMC1 (-2))<(skoSC1 skoMC1 skoMC1 skoMC1 (2))]/\[[(skoMC1 skoMC1 skoMC1 (-1))<=0]/\[[(skoMC1 skoMC1 skoMC1 (-1))<(skoSC1 skoMC1 skoMC1 skoMC1)]/\[[(skoMC1 skoMC1 skoMC1 (-2))<=0]/\[[0<(skoMC1 skoMC1 skoMC1 (2))]/\[[skoSC1<=5/4]/\[[2<=skoMC1]/\[[0<=skoSC1]/\[[0<skoMC1]/\[[0<=skoMC1]/\[[(skoMC1 (-1))<(skoSC1 skoMC1)]/\[[(skoSC1 skoMC1 (-1))<=skoMC1]/\[[(skoMC1 (-2+(skoMC1 (-5))))<(skoSC1 ((skoMC1 (-1+(skoMC1 (3))))+(skoSC1 ((skoMC1 (-2+(skoMC1 (-3))))+(skoSC1 ((skoMC1 skoMC1 (-1))+(skoSC1 skoMC1 (1/12))))))))]/\[[(skoSC1 ((skoMC1 (1+(skoMC1 (-3))))+(skoSC1 ((skoMC1 (2+(skoMC1 (3))))+(skoSC1 ((skoMC1 skoMC1)+(skoSC1 skoMC1 (-1/12))))))))<=(skoMC1 (2+(skoMC1 (5))))]/\[[(skoMC1 (-2+(skoMC1 (-5))))<(skoSC1 ((skoMC1 (-1+(skoMC1 (3))))+(skoSC1 ((skoMC1 (-2+(skoMC1 (-3))))+(skoSC1 ((skoMC1 (1/6+(skoMC1 (-1))))+(skoSC1 skoMC1 (1/4))))))))]/\[(skoSC1 ((skoMC1 (1+(skoMC1 (-3))))+(skoSC1 ((skoMC1 (2+(skoMC1 (3))))+(skoSC1 ((skoMC1 (-1/6+skoMC1))+(skoSC1 skoMC1 (-1/4))))))))<=(skoMC1 (2+(skoMC1 (5))))]]]]]]]]]]]]]]]]]]]]].

% In SMTLib2 format:
(declare-fun skoSC1 () Real) (declare-fun skoMC1 () Real) (assert (and (<= (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (+ 1. (* skoMC1 (- 3.)))))) (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (+ 2. (* skoMC1 3.))))) (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (+ (/ (- 1.) 6.) skoMC1)))) (* skoSC1 (* skoMC1 (* skoMC1 (* skoMC1 (/ (- 1.) 4.))))))))))) (* skoMC1 (* skoMC1 (* skoMC1 (+ 2. (* skoMC1 5.)))))) (and (<= (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (+ 1. (* skoMC1 (- 3.)))))) (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (+ 2. (* skoMC1 3.))))) (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 skoMC1))) (* skoSC1 (* skoMC1 (* skoMC1 (* skoMC1 (/ (- 1.) 12.))))))))))) (* skoMC1 (* skoMC1 (* skoMC1 (+ 2. (* skoMC1 5.)))))) (and (<= (* skoSC1 (* skoMC1 (* skoMC1 (* skoMC1 (- 1.))))) (* skoMC1 (* skoMC1 skoMC1))) (and (<= (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (+ (- 2.) (* skoMC1 (- 12.)))))) (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (+ 1. (* skoMC1 (- 6.)))))) (* skoSC1 (+ (* skoMC1 (* skoMC1 skoMC1)) (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (/ (- 1.) 12.)))) (* skoSC1 (* skoMC1 (* skoMC1 (* skoMC1 (/ (- 1.) 12.))))))))))))) (* skoMC1 (* skoMC1 (* skoMC1 (+ 2. (* skoMC1 6.)))))) (and (<= (* skoSC1 (* skoMC1 (* skoMC1 (* skoMC1 (- 2.))))) (* skoMC1 (* skoMC1 (* skoMC1 2.)))) (and (> (* skoSC1 (* skoMC1 (* skoMC1 (* skoMC1 2.)))) (* skoMC1 (* skoMC1 (* skoMC1 (- 2.))))) (and (<= (* skoMC1 (* skoMC1 (* skoMC1 (- 1.)))) 0.) (and (> (* skoSC1 (* skoMC1 (* skoMC1 skoMC1))) (* skoMC1 (* skoMC1 (* skoMC1 (- 1.))))) (and (<= (* skoMC1 (* skoMC1 (* skoMC1 (- 2.)))) 0.) (and (> (* skoMC1 (* skoMC1 (* skoMC1 2.))) 0.) (and (<= skoSC1 (/ 5. 4.)) (and (<= 2. skoMC1) (and (<= 0. skoSC1) (and (> skoMC1 0.) (and (<= 0. skoMC1) (and (> (* skoSC1 skoMC1) (* skoMC1 (- 1.))) (and (<= (* skoSC1 (* skoMC1 (- 1.))) skoMC1) (and (> (* skoSC1 (+ (* skoMC1 (+ (- 1.) (* skoMC1 3.))) (* skoSC1 (+ (* skoMC1 (+ (- 2.) (* skoMC1 (- 3.)))) (* skoSC1 (+ (* skoMC1 (* skoMC1 (- 1.))) (* skoSC1 (* skoMC1 (/ 1. 12.))))))))) (* skoMC1 (+ (- 2.) (* skoMC1 (- 5.))))) (and (<= (* skoSC1 (+ (* skoMC1 (+ 1. (* skoMC1 (- 3.)))) (* skoSC1 (+ (* skoMC1 (+ 2. (* skoMC1 3.))) (* skoSC1 (+ (* skoMC1 skoMC1) (* skoSC1 (* skoMC1 (/ (- 1.) 12.))))))))) (* skoMC1 (+ 2. (* skoMC1 5.)))) (and (> (* skoSC1 (+ (* skoMC1 (+ (- 1.) (* skoMC1 3.))) (* skoSC1 (+ (* skoMC1 (+ (- 2.) (* skoMC1 (- 3.)))) (* skoSC1 (+ (* skoMC1 (+ (/ 1. 6.) (* skoMC1 (- 1.)))) (* skoSC1 (* skoMC1 (/ 1. 4.))))))))) (* skoMC1 (+ (- 2.) (* skoMC1 (- 5.))))) (<= (* skoSC1 (+ (* skoMC1 (+ 1. (* skoMC1 (- 3.)))) (* skoSC1 (+ (* skoMC1 (+ 2. (* skoMC1 3.))) (* skoSC1 (+ (* skoMC1 (+ (/ (- 1.) 6.) skoMC1)) (* skoSC1 (* skoMC1 (/ (- 1.) 4.))))))))) (* skoMC1 (+ 2. (* skoMC1 5.)))))))))))))))))))))))))

% In GRF format:
(sequent " MetiTarski formula " (antecedent (<= (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (+ 1. (* skoMC1 (- 3.)))))) (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (+ 2. (* skoMC1 3.))))) (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (+ (/ (- 1.) 6.) skoMC1)))) (* skoSC1 (* skoMC1 (* skoMC1 (* skoMC1 (/ (- 1.) 4.))))))))))) (* skoMC1 (* skoMC1 (* skoMC1 (+ 2. (* skoMC1 5.)))))) (<= (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (+ 1. (* skoMC1 (- 3.)))))) (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (+ 2. (* skoMC1 3.))))) (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 skoMC1))) (* skoSC1 (* skoMC1 (* skoMC1 (* skoMC1 (/ (- 1.) 12.))))))))))) (* skoMC1 (* skoMC1 (* skoMC1 (+ 2. (* skoMC1 5.)))))) (<= (* skoSC1 (* skoMC1 (* skoMC1 (* skoMC1 (- 1.))))) (* skoMC1 (* skoMC1 skoMC1))) (<= (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (+ (- 2.) (* skoMC1 (- 12.)))))) (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (+ 1. (* skoMC1 (- 6.)))))) (* skoSC1 (+ (* skoMC1 (* skoMC1 skoMC1)) (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (/ (- 1.) 12.)))) (* skoSC1 (* skoMC1 (* skoMC1 (* skoMC1 (/ (- 1.) 12.))))))))))))) (* skoMC1 (* skoMC1 (* skoMC1 (+ 2. (* skoMC1 6.)))))) (<= (* skoSC1 (* skoMC1 (* skoMC1 (* skoMC1 (- 2.))))) (* skoMC1 (* skoMC1 (* skoMC1 2.)))) (> (* skoSC1 (* skoMC1 (* skoMC1 (* skoMC1 2.)))) (* skoMC1 (* skoMC1 (* skoMC1 (- 2.))))) (<= (* skoMC1 (* skoMC1 (* skoMC1 (- 1.)))) 0.) (> (* skoSC1 (* skoMC1 (* skoMC1 skoMC1))) (* skoMC1 (* skoMC1 (* skoMC1 (- 1.))))) (<= (* skoMC1 (* skoMC1 (* skoMC1 (- 2.)))) 0.) (> (* skoMC1 (* skoMC1 (* skoMC1 2.))) 0.) (<= skoSC1 (/ 5. 4.)) (<= 2. skoMC1) (<= 0. skoSC1) (> skoMC1 0.) (<= 0. skoMC1) (> (* skoSC1 skoMC1) (* skoMC1 (- 1.))) (<= (* skoSC1 (* skoMC1 (- 1.))) skoMC1) (> (* skoSC1 (+ (* skoMC1 (+ (- 1.) (* skoMC1 3.))) (* skoSC1 (+ (* skoMC1 (+ (- 2.) (* skoMC1 (- 3.)))) (* skoSC1 (+ (* skoMC1 (* skoMC1 (- 1.))) (* skoSC1 (* skoMC1 (/ 1. 12.))))))))) (* skoMC1 (+ (- 2.) (* skoMC1 (- 5.))))) (<= (* skoSC1 (+ (* skoMC1 (+ 1. (* skoMC1 (- 3.)))) (* skoSC1 (+ (* skoMC1 (+ 2. (* skoMC1 3.))) (* skoSC1 (+ (* skoMC1 skoMC1) (* skoSC1 (* skoMC1 (/ (- 1.) 12.))))))))) (* skoMC1 (+ 2. (* skoMC1 5.)))) (> (* skoSC1 (+ (* skoMC1 (+ (- 1.) (* skoMC1 3.))) (* skoSC1 (+ (* skoMC1 (+ (- 2.) (* skoMC1 (- 3.)))) (* skoSC1 (+ (* skoMC1 (+ (/ 1. 6.) (* skoMC1 (- 1.)))) (* skoSC1 (* skoMC1 (/ 1. 4.))))))))) (* skoMC1 (+ (- 2.) (* skoMC1 (- 5.)))))) (succedent (> (* skoSC1 (+ (* skoMC1 (+ 1. (* skoMC1 (- 3.)))) (* skoSC1 (+ (* skoMC1 (+ 2. (* skoMC1 3.))) (* skoSC1 (+ (* skoMC1 (+ (/ (- 1.) 6.) skoMC1)) (* skoSC1 (* skoMC1 (/ (- 1.) 4.))))))))) (* skoMC1 (+ 2. (* skoMC1 5.))))))
-----[end problem]-----

-----[begin problem]-----
% In Mathematica format:
Timing[Resolve[Exists[{skoSC1,skoMC1}, And[skoSC1*(skoMC1*skoMC1*skoMC1*(1+skoMC1*-3)+skoSC1*(skoMC1*skoMC1*skoMC1*(2+skoMC1*3)+skoSC1*(skoMC1*skoMC1*skoMC1*((-1/6)+skoMC1)+skoSC1*(skoMC1*skoMC1*skoMC1*(-1/4)+skoSC1*skoSC1*(skoMC1*skoMC1*skoMC1*(1/360)+skoSC1*skoSC1*(skoMC1*skoMC1*skoMC1*(-1/20160)+skoSC1*skoSC1*(skoMC1*skoMC1*skoMC1*(1/1814400)+skoSC1*skoSC1*skoMC1*skoMC1*skoMC1*(-1/239500800))))))))<=skoMC1*skoMC1*skoMC1*(2+skoMC1*5),skoMC1*skoMC1*skoMC1*2>0,skoSC1*(skoMC1*skoMC1*skoMC1*(1+skoMC1*-3)+skoSC1*(skoMC1*skoMC1*skoMC1*(2+skoMC1*3)+skoSC1*(skoMC1*skoMC1*skoMC1*((-1/6)+skoMC1)+skoSC1*skoMC1*skoMC1*skoMC1*(-1/4))))<=skoMC1*skoMC1*skoMC1*(2+skoMC1*5),skoSC1*(skoMC1*skoMC1*skoMC1*(1+skoMC1*-3)+skoSC1*(skoMC1*skoMC1*skoMC1*(2+skoMC1*3)+skoSC1*(skoMC1*skoMC1*skoMC1*skoMC1+skoSC1*skoMC1*skoMC1*skoMC1*(-1/12))))<=skoMC1*skoMC1*skoMC1*(2+skoMC1*5),skoSC1*skoMC1*skoMC1*skoMC1*-1<=skoMC1*skoMC1*skoMC1,skoSC1*(skoMC1*skoMC1*skoMC1*(-2+skoMC1*-12)+skoSC1*(skoMC1*skoMC1*skoMC1*(1+skoMC1*-6)+skoSC1*(skoMC1*skoMC1*skoMC1+skoSC1*(skoMC1*skoMC1*skoMC1*(-1/12)+skoSC1*skoMC1*skoMC1*skoMC1*(-1/12)))))<=skoMC1*skoMC1*skoMC1*(2+skoMC1*6),skoSC1*skoMC1*skoMC1*skoMC1*-2<=skoMC1*skoMC1*skoMC1*2,skoSC1*skoMC1*skoMC1*skoMC1*2>skoMC1*skoMC1*skoMC1*-2,skoMC1*skoMC1*skoMC1*-1<=0,skoSC1*skoMC1*skoMC1*skoMC1>skoMC1*skoMC1*skoMC1*-1,skoMC1*skoMC1*skoMC1*-2<=0,skoMC1*skoMC1*skoMC1*2>0,skoSC1<=(5/4),2<=skoMC1,0<=skoSC1,skoMC1>0,0<=skoMC1,skoSC1*skoMC1>skoMC1*-1,skoSC1*skoMC1*-1<=skoMC1,skoSC1*(skoMC1*(-1+skoMC1*3)+skoSC1*(skoMC1*(-2+skoMC1*-3)+skoSC1*(skoMC1*skoMC1*-1+skoSC1*skoMC1*(1/12))))>skoMC1*(-2+skoMC1*-5),skoSC1*(skoMC1*(1+skoMC1*-3)+skoSC1*(skoMC1*(2+skoMC1*3)+skoSC1*(skoMC1*skoMC1+skoSC1*skoMC1*(-1/12))))<=skoMC1*(2+skoMC1*5),skoSC1*(skoMC1*(-1+skoMC1*3)+skoSC1*(skoMC1*(-2+skoMC1*-3)+skoSC1*(skoMC1*((1/6)+skoMC1*-1)+skoSC1*skoMC1*(1/4))))>skoMC1*(-2+skoMC1*-5),skoSC1*(skoMC1*(1+skoMC1*-3)+skoSC1*(skoMC1*(2+skoMC1*3)+skoSC1*(skoMC1*((-1/6)+skoMC1)+skoSC1*skoMC1*(-1/4))))<=skoMC1*(2+skoMC1*5)]], Reals]]

% In QepcadB format:
(E skoSC1) (E skoMC1) [[(skoSC1 ((skoMC1 skoMC1 skoMC1 (1+(skoMC1 (-3))))+(skoSC1 ((skoMC1 skoMC1 skoMC1 (2+(skoMC1 (3))))+(skoSC1 ((skoMC1 skoMC1 skoMC1 (-1/6+skoMC1))+(skoSC1 ((skoMC1 skoMC1 skoMC1 (-1/4))+(skoSC1 skoSC1 ((skoMC1 skoMC1 skoMC1 (1/360))+(skoSC1 skoSC1 ((skoMC1 skoMC1 skoMC1 (-1/20160))+(skoSC1 skoSC1 ((skoMC1 skoMC1 skoMC1 (1/1814400))+(skoSC1 skoSC1 skoMC1 skoMC1 skoMC1 (-1/239500800))))))))))))))))<=(skoMC1 skoMC1 skoMC1 (2+(skoMC1 (5))))]/\[[0<(skoMC1 skoMC1 skoMC1 (2))]/\[[(skoSC1 ((skoMC1 skoMC1 skoMC1 (1+(skoMC1 (-3))))+(skoSC1 ((skoMC1 skoMC1 skoMC1 (2+(skoMC1 (3))))+(skoSC1 ((skoMC1 skoMC1 skoMC1 (-1/6+skoMC1))+(skoSC1 skoMC1 skoMC1 skoMC1 (-1/4))))))))<=(skoMC1 skoMC1 skoMC1 (2+(skoMC1 (5))))]/\[[(skoSC1 ((skoMC1 skoMC1 skoMC1 (1+(skoMC1 (-3))))+(skoSC1 ((skoMC1 skoMC1 skoMC1 (2+(skoMC1 (3))))+(skoSC1 ((skoMC1 skoMC1 skoMC1 skoMC1)+(skoSC1 skoMC1 skoMC1 skoMC1 (-1/12))))))))<=(skoMC1 skoMC1 skoMC1 (2+(skoMC1 (5))))]/\[[(skoSC1 skoMC1 skoMC1 skoMC1 (-1))<=(skoMC1 skoMC1 skoMC1)]/\[[(skoSC1 ((skoMC1 skoMC1 skoMC1 (-2+(skoMC1 (-12))))+(skoSC1 ((skoMC1 skoMC1 skoMC1 (1+(skoMC1 (-6))))+(skoSC1 ((skoMC1 skoMC1 skoMC1)+(skoSC1 ((skoMC1 skoMC1 skoMC1 (-1/12))+(skoSC1 skoMC1 skoMC1 skoMC1 (-1/12))))))))))<=(skoMC1 skoMC1 skoMC1 (2+(skoMC1 (6))))]/\[[(skoSC1 skoMC1 skoMC1 skoMC1 (-2))<=(skoMC1 skoMC1 skoMC1 (2))]/\[[(skoMC1 skoMC1 skoMC1 (-2))<(skoSC1 skoMC1 skoMC1 skoMC1 (2))]/\[[(skoMC1 skoMC1 skoMC1 (-1))<=0]/\[[(skoMC1 skoMC1 skoMC1 (-1))<(skoSC1 skoMC1 skoMC1 skoMC1)]/\[[(skoMC1 skoMC1 skoMC1 (-2))<=0]/\[[0<(skoMC1 skoMC1 skoMC1 (2))]/\[[skoSC1<=5/4]/\[[2<=skoMC1]/\[[0<=skoSC1]/\[[0<skoMC1]/\[[0<=skoMC1]/\[[(skoMC1 (-1))<(skoSC1 skoMC1)]/\[[(skoSC1 skoMC1 (-1))<=skoMC1]/\[[(skoMC1 (-2+(skoMC1 (-5))))<(skoSC1 ((skoMC1 (-1+(skoMC1 (3))))+(skoSC1 ((skoMC1 (-2+(skoMC1 (-3))))+(skoSC1 ((skoMC1 skoMC1 (-1))+(skoSC1 skoMC1 (1/12))))))))]/\[[(skoSC1 ((skoMC1 (1+(skoMC1 (-3))))+(skoSC1 ((skoMC1 (2+(skoMC1 (3))))+(skoSC1 ((skoMC1 skoMC1)+(skoSC1 skoMC1 (-1/12))))))))<=(skoMC1 (2+(skoMC1 (5))))]/\[[(skoMC1 (-2+(skoMC1 (-5))))<(skoSC1 ((skoMC1 (-1+(skoMC1 (3))))+(skoSC1 ((skoMC1 (-2+(skoMC1 (-3))))+(skoSC1 ((skoMC1 (1/6+(skoMC1 (-1))))+(skoSC1 skoMC1 (1/4))))))))]/\[(skoSC1 ((skoMC1 (1+(skoMC1 (-3))))+(skoSC1 ((skoMC1 (2+(skoMC1 (3))))+(skoSC1 ((skoMC1 (-1/6+skoMC1))+(skoSC1 skoMC1 (-1/4))))))))<=(skoMC1 (2+(skoMC1 (5))))]]]]]]]]]]]]]]]]]]]]]]].

% In SMTLib2 format:
(declare-fun skoSC1 () Real) (declare-fun skoMC1 () Real) (assert (and (<= (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (+ 1. (* skoMC1 (- 3.)))))) (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (+ 2. (* skoMC1 3.))))) (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (+ (/ (- 1.) 6.) skoMC1)))) (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (/ (- 1.) 4.)))) (* skoSC1 (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (/ 1. 360.)))) (* skoSC1 (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (/ (- 1.) 20160.)))) (* skoSC1 (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (/ 1. 1814400.)))) (* skoSC1 (* skoSC1 (* skoMC1 (* skoMC1 (* skoMC1 (/ (- 1.) 239500800.))))))))))))))))))))))) (* skoMC1 (* skoMC1 (* skoMC1 (+ 2. (* skoMC1 5.)))))) (and (> (* skoMC1 (* skoMC1 (* skoMC1 2.))) 0.) (and (<= (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (+ 1. (* skoMC1 (- 3.)))))) (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (+ 2. (* skoMC1 3.))))) (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (+ (/ (- 1.) 6.) skoMC1)))) (* skoSC1 (* skoMC1 (* skoMC1 (* skoMC1 (/ (- 1.) 4.))))))))))) (* skoMC1 (* skoMC1 (* skoMC1 (+ 2. (* skoMC1 5.)))))) (and (<= (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (+ 1. (* skoMC1 (- 3.)))))) (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (+ 2. (* skoMC1 3.))))) (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 skoMC1))) (* skoSC1 (* skoMC1 (* skoMC1 (* skoMC1 (/ (- 1.) 12.))))))))))) (* skoMC1 (* skoMC1 (* skoMC1 (+ 2. (* skoMC1 5.)))))) (and (<= (* skoSC1 (* skoMC1 (* skoMC1 (* skoMC1 (- 1.))))) (* skoMC1 (* skoMC1 skoMC1))) (and (<= (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (+ (- 2.) (* skoMC1 (- 12.)))))) (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (+ 1. (* skoMC1 (- 6.)))))) (* skoSC1 (+ (* skoMC1 (* skoMC1 skoMC1)) (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (/ (- 1.) 12.)))) (* skoSC1 (* skoMC1 (* skoMC1 (* skoMC1 (/ (- 1.) 12.))))))))))))) (* skoMC1 (* skoMC1 (* skoMC1 (+ 2. (* skoMC1 6.)))))) (and (<= (* skoSC1 (* skoMC1 (* skoMC1 (* skoMC1 (- 2.))))) (* skoMC1 (* skoMC1 (* skoMC1 2.)))) (and (> (* skoSC1 (* skoMC1 (* skoMC1 (* skoMC1 2.)))) (* skoMC1 (* skoMC1 (* skoMC1 (- 2.))))) (and (<= (* skoMC1 (* skoMC1 (* skoMC1 (- 1.)))) 0.) (and (> (* skoSC1 (* skoMC1 (* skoMC1 skoMC1))) (* skoMC1 (* skoMC1 (* skoMC1 (- 1.))))) (and (<= (* skoMC1 (* skoMC1 (* skoMC1 (- 2.)))) 0.) (and (> (* skoMC1 (* skoMC1 (* skoMC1 2.))) 0.) (and (<= skoSC1 (/ 5. 4.)) (and (<= 2. skoMC1) (and (<= 0. skoSC1) (and (> skoMC1 0.) (and (<= 0. skoMC1) (and (> (* skoSC1 skoMC1) (* skoMC1 (- 1.))) (and (<= (* skoSC1 (* skoMC1 (- 1.))) skoMC1) (and (> (* skoSC1 (+ (* skoMC1 (+ (- 1.) (* skoMC1 3.))) (* skoSC1 (+ (* skoMC1 (+ (- 2.) (* skoMC1 (- 3.)))) (* skoSC1 (+ (* skoMC1 (* skoMC1 (- 1.))) (* skoSC1 (* skoMC1 (/ 1. 12.))))))))) (* skoMC1 (+ (- 2.) (* skoMC1 (- 5.))))) (and (<= (* skoSC1 (+ (* skoMC1 (+ 1. (* skoMC1 (- 3.)))) (* skoSC1 (+ (* skoMC1 (+ 2. (* skoMC1 3.))) (* skoSC1 (+ (* skoMC1 skoMC1) (* skoSC1 (* skoMC1 (/ (- 1.) 12.))))))))) (* skoMC1 (+ 2. (* skoMC1 5.)))) (and (> (* skoSC1 (+ (* skoMC1 (+ (- 1.) (* skoMC1 3.))) (* skoSC1 (+ (* skoMC1 (+ (- 2.) (* skoMC1 (- 3.)))) (* skoSC1 (+ (* skoMC1 (+ (/ 1. 6.) (* skoMC1 (- 1.)))) (* skoSC1 (* skoMC1 (/ 1. 4.))))))))) (* skoMC1 (+ (- 2.) (* skoMC1 (- 5.))))) (<= (* skoSC1 (+ (* skoMC1 (+ 1. (* skoMC1 (- 3.)))) (* skoSC1 (+ (* skoMC1 (+ 2. (* skoMC1 3.))) (* skoSC1 (+ (* skoMC1 (+ (/ (- 1.) 6.) skoMC1)) (* skoSC1 (* skoMC1 (/ (- 1.) 4.))))))))) (* skoMC1 (+ 2. (* skoMC1 5.)))))))))))))))))))))))))))

% In GRF format:
(sequent " MetiTarski formula " (antecedent (<= (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (+ 1. (* skoMC1 (- 3.)))))) (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (+ 2. (* skoMC1 3.))))) (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (+ (/ (- 1.) 6.) skoMC1)))) (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (/ (- 1.) 4.)))) (* skoSC1 (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (/ 1. 360.)))) (* skoSC1 (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (/ (- 1.) 20160.)))) (* skoSC1 (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (/ 1. 1814400.)))) (* skoSC1 (* skoSC1 (* skoMC1 (* skoMC1 (* skoMC1 (/ (- 1.) 239500800.))))))))))))))))))))))) (* skoMC1 (* skoMC1 (* skoMC1 (+ 2. (* skoMC1 5.)))))) (> (* skoMC1 (* skoMC1 (* skoMC1 2.))) 0.) (<= (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (+ 1. (* skoMC1 (- 3.)))))) (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (+ 2. (* skoMC1 3.))))) (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (+ (/ (- 1.) 6.) skoMC1)))) (* skoSC1 (* skoMC1 (* skoMC1 (* skoMC1 (/ (- 1.) 4.))))))))))) (* skoMC1 (* skoMC1 (* skoMC1 (+ 2. (* skoMC1 5.)))))) (<= (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (+ 1. (* skoMC1 (- 3.)))))) (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (+ 2. (* skoMC1 3.))))) (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 skoMC1))) (* skoSC1 (* skoMC1 (* skoMC1 (* skoMC1 (/ (- 1.) 12.))))))))))) (* skoMC1 (* skoMC1 (* skoMC1 (+ 2. (* skoMC1 5.)))))) (<= (* skoSC1 (* skoMC1 (* skoMC1 (* skoMC1 (- 1.))))) (* skoMC1 (* skoMC1 skoMC1))) (<= (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (+ (- 2.) (* skoMC1 (- 12.)))))) (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (+ 1. (* skoMC1 (- 6.)))))) (* skoSC1 (+ (* skoMC1 (* skoMC1 skoMC1)) (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (/ (- 1.) 12.)))) (* skoSC1 (* skoMC1 (* skoMC1 (* skoMC1 (/ (- 1.) 12.))))))))))))) (* skoMC1 (* skoMC1 (* skoMC1 (+ 2. (* skoMC1 6.)))))) (<= (* skoSC1 (* skoMC1 (* skoMC1 (* skoMC1 (- 2.))))) (* skoMC1 (* skoMC1 (* skoMC1 2.)))) (> (* skoSC1 (* skoMC1 (* skoMC1 (* skoMC1 2.)))) (* skoMC1 (* skoMC1 (* skoMC1 (- 2.))))) (<= (* skoMC1 (* skoMC1 (* skoMC1 (- 1.)))) 0.) (> (* skoSC1 (* skoMC1 (* skoMC1 skoMC1))) (* skoMC1 (* skoMC1 (* skoMC1 (- 1.))))) (<= (* skoMC1 (* skoMC1 (* skoMC1 (- 2.)))) 0.) (> (* skoMC1 (* skoMC1 (* skoMC1 2.))) 0.) (<= skoSC1 (/ 5. 4.)) (<= 2. skoMC1) (<= 0. skoSC1) (> skoMC1 0.) (<= 0. skoMC1) (> (* skoSC1 skoMC1) (* skoMC1 (- 1.))) (<= (* skoSC1 (* skoMC1 (- 1.))) skoMC1) (> (* skoSC1 (+ (* skoMC1 (+ (- 1.) (* skoMC1 3.))) (* skoSC1 (+ (* skoMC1 (+ (- 2.) (* skoMC1 (- 3.)))) (* skoSC1 (+ (* skoMC1 (* skoMC1 (- 1.))) (* skoSC1 (* skoMC1 (/ 1. 12.))))))))) (* skoMC1 (+ (- 2.) (* skoMC1 (- 5.))))) (<= (* skoSC1 (+ (* skoMC1 (+ 1. (* skoMC1 (- 3.)))) (* skoSC1 (+ (* skoMC1 (+ 2. (* skoMC1 3.))) (* skoSC1 (+ (* skoMC1 skoMC1) (* skoSC1 (* skoMC1 (/ (- 1.) 12.))))))))) (* skoMC1 (+ 2. (* skoMC1 5.)))) (> (* skoSC1 (+ (* skoMC1 (+ (- 1.) (* skoMC1 3.))) (* skoSC1 (+ (* skoMC1 (+ (- 2.) (* skoMC1 (- 3.)))) (* skoSC1 (+ (* skoMC1 (+ (/ 1. 6.) (* skoMC1 (- 1.)))) (* skoSC1 (* skoMC1 (/ 1. 4.))))))))) (* skoMC1 (+ (- 2.) (* skoMC1 (- 5.)))))) (succedent (> (* skoSC1 (+ (* skoMC1 (+ 1. (* skoMC1 (- 3.)))) (* skoSC1 (+ (* skoMC1 (+ 2. (* skoMC1 3.))) (* skoSC1 (+ (* skoMC1 (+ (/ (- 1.) 6.) skoMC1)) (* skoSC1 (* skoMC1 (/ (- 1.) 4.))))))))) (* skoMC1 (+ 2. (* skoMC1 5.))))))
-----[end problem]-----

-----[begin problem]-----
% In Mathematica format:
Timing[Resolve[Exists[{skoSC1,skoMC1}, And[skoSC1*(skoMC1*skoMC1*skoMC1*(1+skoMC1*-3)+skoSC1*(skoMC1*skoMC1*skoMC1*(2+skoMC1*3)+skoSC1*(skoMC1*skoMC1*skoMC1*skoMC1+skoSC1*(skoMC1*skoMC1*skoMC1*(-1/12)+skoSC1*skoSC1*(skoMC1*skoMC1*skoMC1*(1/360)+skoSC1*skoSC1*(skoMC1*skoMC1*skoMC1*(-1/20160)+skoSC1*skoSC1*(skoMC1*skoMC1*skoMC1*(1/1814400)+skoSC1*skoSC1*skoMC1*skoMC1*skoMC1*(-1/239500800))))))))<=skoMC1*skoMC1*skoMC1*(2+skoMC1*5),skoSC1*(skoMC1*skoMC1*skoMC1*(1+skoMC1*-3)+skoSC1*(skoMC1*skoMC1*skoMC1*(2+skoMC1*3)+skoSC1*(skoMC1*skoMC1*skoMC1*((-1/6)+skoMC1)+skoSC1*skoMC1*skoMC1*skoMC1*(-1/4))))<=skoMC1*skoMC1*skoMC1*(2+skoMC1*5),skoSC1*(skoMC1*skoMC1*skoMC1*(1+skoMC1*-3)+skoSC1*(skoMC1*skoMC1*skoMC1*(2+skoMC1*3)+skoSC1*(skoMC1*skoMC1*skoMC1*skoMC1+skoSC1*skoMC1*skoMC1*skoMC1*(-1/12))))<=skoMC1*skoMC1*skoMC1*(2+skoMC1*5),skoSC1*skoMC1*skoMC1*skoMC1*-1<=skoMC1*skoMC1*skoMC1,skoSC1*(skoMC1*skoMC1*skoMC1*(-2+skoMC1*-12)+skoSC1*(skoMC1*skoMC1*skoMC1*(1+skoMC1*-6)+skoSC1*(skoMC1*skoMC1*skoMC1+skoSC1*(skoMC1*skoMC1*skoMC1*(-1/12)+skoSC1*skoMC1*skoMC1*skoMC1*(-1/12)))))<=skoMC1*skoMC1*skoMC1*(2+skoMC1*6),skoSC1*skoMC1*skoMC1*skoMC1*-2<=skoMC1*skoMC1*skoMC1*2,skoSC1*skoMC1*skoMC1*skoMC1*2>skoMC1*skoMC1*skoMC1*-2,skoMC1*skoMC1*skoMC1*-1<=0,skoSC1*skoMC1*skoMC1*skoMC1>skoMC1*skoMC1*skoMC1*-1,skoMC1*skoMC1*skoMC1*-2<=0,skoMC1*skoMC1*skoMC1*2>0,skoSC1<=(5/4),2<=skoMC1,0<=skoSC1,skoMC1>0,0<=skoMC1,skoSC1*skoMC1>skoMC1*-1,skoSC1*skoMC1*-1<=skoMC1,skoSC1*(skoMC1*(-1+skoMC1*3)+skoSC1*(skoMC1*(-2+skoMC1*-3)+skoSC1*(skoMC1*skoMC1*-1+skoSC1*skoMC1*(1/12))))>skoMC1*(-2+skoMC1*-5),skoSC1*(skoMC1*(1+skoMC1*-3)+skoSC1*(skoMC1*(2+skoMC1*3)+skoSC1*(skoMC1*skoMC1+skoSC1*skoMC1*(-1/12))))<=skoMC1*(2+skoMC1*5),skoSC1*(skoMC1*(-1+skoMC1*3)+skoSC1*(skoMC1*(-2+skoMC1*-3)+skoSC1*(skoMC1*((1/6)+skoMC1*-1)+skoSC1*skoMC1*(1/4))))>skoMC1*(-2+skoMC1*-5),skoSC1*(skoMC1*(1+skoMC1*-3)+skoSC1*(skoMC1*(2+skoMC1*3)+skoSC1*(skoMC1*((-1/6)+skoMC1)+skoSC1*skoMC1*(-1/4))))<=skoMC1*(2+skoMC1*5)]], Reals]]

% In QepcadB format:
(E skoSC1) (E skoMC1) [[(skoSC1 ((skoMC1 skoMC1 skoMC1 (1+(skoMC1 (-3))))+(skoSC1 ((skoMC1 skoMC1 skoMC1 (2+(skoMC1 (3))))+(skoSC1 ((skoMC1 skoMC1 skoMC1 skoMC1)+(skoSC1 ((skoMC1 skoMC1 skoMC1 (-1/12))+(skoSC1 skoSC1 ((skoMC1 skoMC1 skoMC1 (1/360))+(skoSC1 skoSC1 ((skoMC1 skoMC1 skoMC1 (-1/20160))+(skoSC1 skoSC1 ((skoMC1 skoMC1 skoMC1 (1/1814400))+(skoSC1 skoSC1 skoMC1 skoMC1 skoMC1 (-1/239500800))))))))))))))))<=(skoMC1 skoMC1 skoMC1 (2+(skoMC1 (5))))]/\[[(skoSC1 ((skoMC1 skoMC1 skoMC1 (1+(skoMC1 (-3))))+(skoSC1 ((skoMC1 skoMC1 skoMC1 (2+(skoMC1 (3))))+(skoSC1 ((skoMC1 skoMC1 skoMC1 (-1/6+skoMC1))+(skoSC1 skoMC1 skoMC1 skoMC1 (-1/4))))))))<=(skoMC1 skoMC1 skoMC1 (2+(skoMC1 (5))))]/\[[(skoSC1 ((skoMC1 skoMC1 skoMC1 (1+(skoMC1 (-3))))+(skoSC1 ((skoMC1 skoMC1 skoMC1 (2+(skoMC1 (3))))+(skoSC1 ((skoMC1 skoMC1 skoMC1 skoMC1)+(skoSC1 skoMC1 skoMC1 skoMC1 (-1/12))))))))<=(skoMC1 skoMC1 skoMC1 (2+(skoMC1 (5))))]/\[[(skoSC1 skoMC1 skoMC1 skoMC1 (-1))<=(skoMC1 skoMC1 skoMC1)]/\[[(skoSC1 ((skoMC1 skoMC1 skoMC1 (-2+(skoMC1 (-12))))+(skoSC1 ((skoMC1 skoMC1 skoMC1 (1+(skoMC1 (-6))))+(skoSC1 ((skoMC1 skoMC1 skoMC1)+(skoSC1 ((skoMC1 skoMC1 skoMC1 (-1/12))+(skoSC1 skoMC1 skoMC1 skoMC1 (-1/12))))))))))<=(skoMC1 skoMC1 skoMC1 (2+(skoMC1 (6))))]/\[[(skoSC1 skoMC1 skoMC1 skoMC1 (-2))<=(skoMC1 skoMC1 skoMC1 (2))]/\[[(skoMC1 skoMC1 skoMC1 (-2))<(skoSC1 skoMC1 skoMC1 skoMC1 (2))]/\[[(skoMC1 skoMC1 skoMC1 (-1))<=0]/\[[(skoMC1 skoMC1 skoMC1 (-1))<(skoSC1 skoMC1 skoMC1 skoMC1)]/\[[(skoMC1 skoMC1 skoMC1 (-2))<=0]/\[[0<(skoMC1 skoMC1 skoMC1 (2))]/\[[skoSC1<=5/4]/\[[2<=skoMC1]/\[[0<=skoSC1]/\[[0<skoMC1]/\[[0<=skoMC1]/\[[(skoMC1 (-1))<(skoSC1 skoMC1)]/\[[(skoSC1 skoMC1 (-1))<=skoMC1]/\[[(skoMC1 (-2+(skoMC1 (-5))))<(skoSC1 ((skoMC1 (-1+(skoMC1 (3))))+(skoSC1 ((skoMC1 (-2+(skoMC1 (-3))))+(skoSC1 ((skoMC1 skoMC1 (-1))+(skoSC1 skoMC1 (1/12))))))))]/\[[(skoSC1 ((skoMC1 (1+(skoMC1 (-3))))+(skoSC1 ((skoMC1 (2+(skoMC1 (3))))+(skoSC1 ((skoMC1 skoMC1)+(skoSC1 skoMC1 (-1/12))))))))<=(skoMC1 (2+(skoMC1 (5))))]/\[[(skoMC1 (-2+(skoMC1 (-5))))<(skoSC1 ((skoMC1 (-1+(skoMC1 (3))))+(skoSC1 ((skoMC1 (-2+(skoMC1 (-3))))+(skoSC1 ((skoMC1 (1/6+(skoMC1 (-1))))+(skoSC1 skoMC1 (1/4))))))))]/\[(skoSC1 ((skoMC1 (1+(skoMC1 (-3))))+(skoSC1 ((skoMC1 (2+(skoMC1 (3))))+(skoSC1 ((skoMC1 (-1/6+skoMC1))+(skoSC1 skoMC1 (-1/4))))))))<=(skoMC1 (2+(skoMC1 (5))))]]]]]]]]]]]]]]]]]]]]]].

% In SMTLib2 format:
(declare-fun skoSC1 () Real) (declare-fun skoMC1 () Real) (assert (and (<= (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (+ 1. (* skoMC1 (- 3.)))))) (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (+ 2. (* skoMC1 3.))))) (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 skoMC1))) (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (/ (- 1.) 12.)))) (* skoSC1 (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (/ 1. 360.)))) (* skoSC1 (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (/ (- 1.) 20160.)))) (* skoSC1 (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (/ 1. 1814400.)))) (* skoSC1 (* skoSC1 (* skoMC1 (* skoMC1 (* skoMC1 (/ (- 1.) 239500800.))))))))))))))))))))))) (* skoMC1 (* skoMC1 (* skoMC1 (+ 2. (* skoMC1 5.)))))) (and (<= (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (+ 1. (* skoMC1 (- 3.)))))) (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (+ 2. (* skoMC1 3.))))) (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (+ (/ (- 1.) 6.) skoMC1)))) (* skoSC1 (* skoMC1 (* skoMC1 (* skoMC1 (/ (- 1.) 4.))))))))))) (* skoMC1 (* skoMC1 (* skoMC1 (+ 2. (* skoMC1 5.)))))) (and (<= (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (+ 1. (* skoMC1 (- 3.)))))) (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (+ 2. (* skoMC1 3.))))) (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 skoMC1))) (* skoSC1 (* skoMC1 (* skoMC1 (* skoMC1 (/ (- 1.) 12.))))))))))) (* skoMC1 (* skoMC1 (* skoMC1 (+ 2. (* skoMC1 5.)))))) (and (<= (* skoSC1 (* skoMC1 (* skoMC1 (* skoMC1 (- 1.))))) (* skoMC1 (* skoMC1 skoMC1))) (and (<= (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (+ (- 2.) (* skoMC1 (- 12.)))))) (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (+ 1. (* skoMC1 (- 6.)))))) (* skoSC1 (+ (* skoMC1 (* skoMC1 skoMC1)) (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (/ (- 1.) 12.)))) (* skoSC1 (* skoMC1 (* skoMC1 (* skoMC1 (/ (- 1.) 12.))))))))))))) (* skoMC1 (* skoMC1 (* skoMC1 (+ 2. (* skoMC1 6.)))))) (and (<= (* skoSC1 (* skoMC1 (* skoMC1 (* skoMC1 (- 2.))))) (* skoMC1 (* skoMC1 (* skoMC1 2.)))) (and (> (* skoSC1 (* skoMC1 (* skoMC1 (* skoMC1 2.)))) (* skoMC1 (* skoMC1 (* skoMC1 (- 2.))))) (and (<= (* skoMC1 (* skoMC1 (* skoMC1 (- 1.)))) 0.) (and (> (* skoSC1 (* skoMC1 (* skoMC1 skoMC1))) (* skoMC1 (* skoMC1 (* skoMC1 (- 1.))))) (and (<= (* skoMC1 (* skoMC1 (* skoMC1 (- 2.)))) 0.) (and (> (* skoMC1 (* skoMC1 (* skoMC1 2.))) 0.) (and (<= skoSC1 (/ 5. 4.)) (and (<= 2. skoMC1) (and (<= 0. skoSC1) (and (> skoMC1 0.) (and (<= 0. skoMC1) (and (> (* skoSC1 skoMC1) (* skoMC1 (- 1.))) (and (<= (* skoSC1 (* skoMC1 (- 1.))) skoMC1) (and (> (* skoSC1 (+ (* skoMC1 (+ (- 1.) (* skoMC1 3.))) (* skoSC1 (+ (* skoMC1 (+ (- 2.) (* skoMC1 (- 3.)))) (* skoSC1 (+ (* skoMC1 (* skoMC1 (- 1.))) (* skoSC1 (* skoMC1 (/ 1. 12.))))))))) (* skoMC1 (+ (- 2.) (* skoMC1 (- 5.))))) (and (<= (* skoSC1 (+ (* skoMC1 (+ 1. (* skoMC1 (- 3.)))) (* skoSC1 (+ (* skoMC1 (+ 2. (* skoMC1 3.))) (* skoSC1 (+ (* skoMC1 skoMC1) (* skoSC1 (* skoMC1 (/ (- 1.) 12.))))))))) (* skoMC1 (+ 2. (* skoMC1 5.)))) (and (> (* skoSC1 (+ (* skoMC1 (+ (- 1.) (* skoMC1 3.))) (* skoSC1 (+ (* skoMC1 (+ (- 2.) (* skoMC1 (- 3.)))) (* skoSC1 (+ (* skoMC1 (+ (/ 1. 6.) (* skoMC1 (- 1.)))) (* skoSC1 (* skoMC1 (/ 1. 4.))))))))) (* skoMC1 (+ (- 2.) (* skoMC1 (- 5.))))) (<= (* skoSC1 (+ (* skoMC1 (+ 1. (* skoMC1 (- 3.)))) (* skoSC1 (+ (* skoMC1 (+ 2. (* skoMC1 3.))) (* skoSC1 (+ (* skoMC1 (+ (/ (- 1.) 6.) skoMC1)) (* skoSC1 (* skoMC1 (/ (- 1.) 4.))))))))) (* skoMC1 (+ 2. (* skoMC1 5.))))))))))))))))))))))))))

% In GRF format:
(sequent " MetiTarski formula " (antecedent (<= (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (+ 1. (* skoMC1 (- 3.)))))) (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (+ 2. (* skoMC1 3.))))) (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 skoMC1))) (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (/ (- 1.) 12.)))) (* skoSC1 (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (/ 1. 360.)))) (* skoSC1 (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (/ (- 1.) 20160.)))) (* skoSC1 (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (/ 1. 1814400.)))) (* skoSC1 (* skoSC1 (* skoMC1 (* skoMC1 (* skoMC1 (/ (- 1.) 239500800.))))))))))))))))))))))) (* skoMC1 (* skoMC1 (* skoMC1 (+ 2. (* skoMC1 5.)))))) (<= (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (+ 1. (* skoMC1 (- 3.)))))) (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (+ 2. (* skoMC1 3.))))) (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (+ (/ (- 1.) 6.) skoMC1)))) (* skoSC1 (* skoMC1 (* skoMC1 (* skoMC1 (/ (- 1.) 4.))))))))))) (* skoMC1 (* skoMC1 (* skoMC1 (+ 2. (* skoMC1 5.)))))) (<= (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (+ 1. (* skoMC1 (- 3.)))))) (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (+ 2. (* skoMC1 3.))))) (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 skoMC1))) (* skoSC1 (* skoMC1 (* skoMC1 (* skoMC1 (/ (- 1.) 12.))))))))))) (* skoMC1 (* skoMC1 (* skoMC1 (+ 2. (* skoMC1 5.)))))) (<= (* skoSC1 (* skoMC1 (* skoMC1 (* skoMC1 (- 1.))))) (* skoMC1 (* skoMC1 skoMC1))) (<= (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (+ (- 2.) (* skoMC1 (- 12.)))))) (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (+ 1. (* skoMC1 (- 6.)))))) (* skoSC1 (+ (* skoMC1 (* skoMC1 skoMC1)) (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (/ (- 1.) 12.)))) (* skoSC1 (* skoMC1 (* skoMC1 (* skoMC1 (/ (- 1.) 12.))))))))))))) (* skoMC1 (* skoMC1 (* skoMC1 (+ 2. (* skoMC1 6.)))))) (<= (* skoSC1 (* skoMC1 (* skoMC1 (* skoMC1 (- 2.))))) (* skoMC1 (* skoMC1 (* skoMC1 2.)))) (> (* skoSC1 (* skoMC1 (* skoMC1 (* skoMC1 2.)))) (* skoMC1 (* skoMC1 (* skoMC1 (- 2.))))) (<= (* skoMC1 (* skoMC1 (* skoMC1 (- 1.)))) 0.) (> (* skoSC1 (* skoMC1 (* skoMC1 skoMC1))) (* skoMC1 (* skoMC1 (* skoMC1 (- 1.))))) (<= (* skoMC1 (* skoMC1 (* skoMC1 (- 2.)))) 0.) (> (* skoMC1 (* skoMC1 (* skoMC1 2.))) 0.) (<= skoSC1 (/ 5. 4.)) (<= 2. skoMC1) (<= 0. skoSC1) (> skoMC1 0.) (<= 0. skoMC1) (> (* skoSC1 skoMC1) (* skoMC1 (- 1.))) (<= (* skoSC1 (* skoMC1 (- 1.))) skoMC1) (> (* skoSC1 (+ (* skoMC1 (+ (- 1.) (* skoMC1 3.))) (* skoSC1 (+ (* skoMC1 (+ (- 2.) (* skoMC1 (- 3.)))) (* skoSC1 (+ (* skoMC1 (* skoMC1 (- 1.))) (* skoSC1 (* skoMC1 (/ 1. 12.))))))))) (* skoMC1 (+ (- 2.) (* skoMC1 (- 5.))))) (<= (* skoSC1 (+ (* skoMC1 (+ 1. (* skoMC1 (- 3.)))) (* skoSC1 (+ (* skoMC1 (+ 2. (* skoMC1 3.))) (* skoSC1 (+ (* skoMC1 skoMC1) (* skoSC1 (* skoMC1 (/ (- 1.) 12.))))))))) (* skoMC1 (+ 2. (* skoMC1 5.)))) (> (* skoSC1 (+ (* skoMC1 (+ (- 1.) (* skoMC1 3.))) (* skoSC1 (+ (* skoMC1 (+ (- 2.) (* skoMC1 (- 3.)))) (* skoSC1 (+ (* skoMC1 (+ (/ 1. 6.) (* skoMC1 (- 1.)))) (* skoSC1 (* skoMC1 (/ 1. 4.))))))))) (* skoMC1 (+ (- 2.) (* skoMC1 (- 5.)))))) (succedent (> (* skoSC1 (+ (* skoMC1 (+ 1. (* skoMC1 (- 3.)))) (* skoSC1 (+ (* skoMC1 (+ 2. (* skoMC1 3.))) (* skoSC1 (+ (* skoMC1 (+ (/ (- 1.) 6.) skoMC1)) (* skoSC1 (* skoMC1 (/ (- 1.) 4.))))))))) (* skoMC1 (+ 2. (* skoMC1 5.))))))
-----[end problem]-----

-----[begin problem]-----
% In Mathematica format:
Timing[Resolve[Exists[{skoSC1,skoMC1}, And[skoSC1*(skoMC1*skoMC1*skoMC1*(1+skoMC1*-3)+skoSC1*(skoMC1*skoMC1*skoMC1*(2+skoMC1*3)+skoSC1*(skoMC1*skoMC1*skoMC1*((-1/6)+skoMC1)+skoSC1*(skoMC1*skoMC1*skoMC1*(-1/4)+skoSC1*skoSC1*(skoMC1*skoMC1*skoMC1*(1/360)+skoSC1*skoSC1*(skoMC1*skoMC1*skoMC1*(-1/20160)+skoSC1*skoSC1*(skoMC1*skoMC1*skoMC1*(1/1814400)+skoSC1*skoSC1*skoMC1*skoMC1*skoMC1*(-1/239500800))))))))<=skoMC1*skoMC1*skoMC1*(2+skoMC1*5),skoSC1*(skoMC1*skoMC1*skoMC1*(1+skoMC1*-3)+skoSC1*(skoMC1*skoMC1*skoMC1*(2+skoMC1*3)+skoSC1*(skoMC1*skoMC1*skoMC1*((-1/6)+skoMC1)+skoSC1*skoMC1*skoMC1*skoMC1*(-1/4))))<=skoMC1*skoMC1*skoMC1*(2+skoMC1*5),skoSC1*(skoMC1*skoMC1*skoMC1*(1+skoMC1*-3)+skoSC1*(skoMC1*skoMC1*skoMC1*(2+skoMC1*3)+skoSC1*(skoMC1*skoMC1*skoMC1*skoMC1+skoSC1*skoMC1*skoMC1*skoMC1*(-1/12))))<=skoMC1*skoMC1*skoMC1*(2+skoMC1*5),skoSC1*skoMC1*skoMC1*skoMC1*-1<=skoMC1*skoMC1*skoMC1,skoSC1*(skoMC1*skoMC1*skoMC1*(-2+skoMC1*-12)+skoSC1*(skoMC1*skoMC1*skoMC1*(1+skoMC1*-6)+skoSC1*(skoMC1*skoMC1*skoMC1+skoSC1*(skoMC1*skoMC1*skoMC1*(-1/12)+skoSC1*skoMC1*skoMC1*skoMC1*(-1/12)))))<=skoMC1*skoMC1*skoMC1*(2+skoMC1*6),skoSC1*skoMC1*skoMC1*skoMC1*-2<=skoMC1*skoMC1*skoMC1*2,skoSC1*skoMC1*skoMC1*skoMC1*2>skoMC1*skoMC1*skoMC1*-2,skoMC1*skoMC1*skoMC1*-1<=0,skoSC1*skoMC1*skoMC1*skoMC1>skoMC1*skoMC1*skoMC1*-1,skoMC1*skoMC1*skoMC1*-2<=0,skoMC1*skoMC1*skoMC1*2>0,skoSC1<=(5/4),2<=skoMC1,0<=skoSC1,skoMC1>0,0<=skoMC1,skoSC1*skoMC1>skoMC1*-1,skoSC1*skoMC1*-1<=skoMC1,skoSC1*(skoMC1*(-1+skoMC1*3)+skoSC1*(skoMC1*(-2+skoMC1*-3)+skoSC1*(skoMC1*skoMC1*-1+skoSC1*skoMC1*(1/12))))>skoMC1*(-2+skoMC1*-5),skoSC1*(skoMC1*(1+skoMC1*-3)+skoSC1*(skoMC1*(2+skoMC1*3)+skoSC1*(skoMC1*skoMC1+skoSC1*skoMC1*(-1/12))))<=skoMC1*(2+skoMC1*5),skoSC1*(skoMC1*(-1+skoMC1*3)+skoSC1*(skoMC1*(-2+skoMC1*-3)+skoSC1*(skoMC1*((1/6)+skoMC1*-1)+skoSC1*skoMC1*(1/4))))>skoMC1*(-2+skoMC1*-5),skoSC1*(skoMC1*(1+skoMC1*-3)+skoSC1*(skoMC1*(2+skoMC1*3)+skoSC1*(skoMC1*((-1/6)+skoMC1)+skoSC1*skoMC1*(-1/4))))<=skoMC1*(2+skoMC1*5)]], Reals]]

% In QepcadB format:
(E skoSC1) (E skoMC1) [[(skoSC1 ((skoMC1 skoMC1 skoMC1 (1+(skoMC1 (-3))))+(skoSC1 ((skoMC1 skoMC1 skoMC1 (2+(skoMC1 (3))))+(skoSC1 ((skoMC1 skoMC1 skoMC1 (-1/6+skoMC1))+(skoSC1 ((skoMC1 skoMC1 skoMC1 (-1/4))+(skoSC1 skoSC1 ((skoMC1 skoMC1 skoMC1 (1/360))+(skoSC1 skoSC1 ((skoMC1 skoMC1 skoMC1 (-1/20160))+(skoSC1 skoSC1 ((skoMC1 skoMC1 skoMC1 (1/1814400))+(skoSC1 skoSC1 skoMC1 skoMC1 skoMC1 (-1/239500800))))))))))))))))<=(skoMC1 skoMC1 skoMC1 (2+(skoMC1 (5))))]/\[[(skoSC1 ((skoMC1 skoMC1 skoMC1 (1+(skoMC1 (-3))))+(skoSC1 ((skoMC1 skoMC1 skoMC1 (2+(skoMC1 (3))))+(skoSC1 ((skoMC1 skoMC1 skoMC1 (-1/6+skoMC1))+(skoSC1 skoMC1 skoMC1 skoMC1 (-1/4))))))))<=(skoMC1 skoMC1 skoMC1 (2+(skoMC1 (5))))]/\[[(skoSC1 ((skoMC1 skoMC1 skoMC1 (1+(skoMC1 (-3))))+(skoSC1 ((skoMC1 skoMC1 skoMC1 (2+(skoMC1 (3))))+(skoSC1 ((skoMC1 skoMC1 skoMC1 skoMC1)+(skoSC1 skoMC1 skoMC1 skoMC1 (-1/12))))))))<=(skoMC1 skoMC1 skoMC1 (2+(skoMC1 (5))))]/\[[(skoSC1 skoMC1 skoMC1 skoMC1 (-1))<=(skoMC1 skoMC1 skoMC1)]/\[[(skoSC1 ((skoMC1 skoMC1 skoMC1 (-2+(skoMC1 (-12))))+(skoSC1 ((skoMC1 skoMC1 skoMC1 (1+(skoMC1 (-6))))+(skoSC1 ((skoMC1 skoMC1 skoMC1)+(skoSC1 ((skoMC1 skoMC1 skoMC1 (-1/12))+(skoSC1 skoMC1 skoMC1 skoMC1 (-1/12))))))))))<=(skoMC1 skoMC1 skoMC1 (2+(skoMC1 (6))))]/\[[(skoSC1 skoMC1 skoMC1 skoMC1 (-2))<=(skoMC1 skoMC1 skoMC1 (2))]/\[[(skoMC1 skoMC1 skoMC1 (-2))<(skoSC1 skoMC1 skoMC1 skoMC1 (2))]/\[[(skoMC1 skoMC1 skoMC1 (-1))<=0]/\[[(skoMC1 skoMC1 skoMC1 (-1))<(skoSC1 skoMC1 skoMC1 skoMC1)]/\[[(skoMC1 skoMC1 skoMC1 (-2))<=0]/\[[0<(skoMC1 skoMC1 skoMC1 (2))]/\[[skoSC1<=5/4]/\[[2<=skoMC1]/\[[0<=skoSC1]/\[[0<skoMC1]/\[[0<=skoMC1]/\[[(skoMC1 (-1))<(skoSC1 skoMC1)]/\[[(skoSC1 skoMC1 (-1))<=skoMC1]/\[[(skoMC1 (-2+(skoMC1 (-5))))<(skoSC1 ((skoMC1 (-1+(skoMC1 (3))))+(skoSC1 ((skoMC1 (-2+(skoMC1 (-3))))+(skoSC1 ((skoMC1 skoMC1 (-1))+(skoSC1 skoMC1 (1/12))))))))]/\[[(skoSC1 ((skoMC1 (1+(skoMC1 (-3))))+(skoSC1 ((skoMC1 (2+(skoMC1 (3))))+(skoSC1 ((skoMC1 skoMC1)+(skoSC1 skoMC1 (-1/12))))))))<=(skoMC1 (2+(skoMC1 (5))))]/\[[(skoMC1 (-2+(skoMC1 (-5))))<(skoSC1 ((skoMC1 (-1+(skoMC1 (3))))+(skoSC1 ((skoMC1 (-2+(skoMC1 (-3))))+(skoSC1 ((skoMC1 (1/6+(skoMC1 (-1))))+(skoSC1 skoMC1 (1/4))))))))]/\[(skoSC1 ((skoMC1 (1+(skoMC1 (-3))))+(skoSC1 ((skoMC1 (2+(skoMC1 (3))))+(skoSC1 ((skoMC1 (-1/6+skoMC1))+(skoSC1 skoMC1 (-1/4))))))))<=(skoMC1 (2+(skoMC1 (5))))]]]]]]]]]]]]]]]]]]]]]].

% In SMTLib2 format:
(declare-fun skoSC1 () Real) (declare-fun skoMC1 () Real) (assert (and (<= (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (+ 1. (* skoMC1 (- 3.)))))) (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (+ 2. (* skoMC1 3.))))) (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (+ (/ (- 1.) 6.) skoMC1)))) (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (/ (- 1.) 4.)))) (* skoSC1 (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (/ 1. 360.)))) (* skoSC1 (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (/ (- 1.) 20160.)))) (* skoSC1 (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (/ 1. 1814400.)))) (* skoSC1 (* skoSC1 (* skoMC1 (* skoMC1 (* skoMC1 (/ (- 1.) 239500800.))))))))))))))))))))))) (* skoMC1 (* skoMC1 (* skoMC1 (+ 2. (* skoMC1 5.)))))) (and (<= (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (+ 1. (* skoMC1 (- 3.)))))) (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (+ 2. (* skoMC1 3.))))) (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (+ (/ (- 1.) 6.) skoMC1)))) (* skoSC1 (* skoMC1 (* skoMC1 (* skoMC1 (/ (- 1.) 4.))))))))))) (* skoMC1 (* skoMC1 (* skoMC1 (+ 2. (* skoMC1 5.)))))) (and (<= (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (+ 1. (* skoMC1 (- 3.)))))) (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (+ 2. (* skoMC1 3.))))) (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 skoMC1))) (* skoSC1 (* skoMC1 (* skoMC1 (* skoMC1 (/ (- 1.) 12.))))))))))) (* skoMC1 (* skoMC1 (* skoMC1 (+ 2. (* skoMC1 5.)))))) (and (<= (* skoSC1 (* skoMC1 (* skoMC1 (* skoMC1 (- 1.))))) (* skoMC1 (* skoMC1 skoMC1))) (and (<= (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (+ (- 2.) (* skoMC1 (- 12.)))))) (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (+ 1. (* skoMC1 (- 6.)))))) (* skoSC1 (+ (* skoMC1 (* skoMC1 skoMC1)) (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (/ (- 1.) 12.)))) (* skoSC1 (* skoMC1 (* skoMC1 (* skoMC1 (/ (- 1.) 12.))))))))))))) (* skoMC1 (* skoMC1 (* skoMC1 (+ 2. (* skoMC1 6.)))))) (and (<= (* skoSC1 (* skoMC1 (* skoMC1 (* skoMC1 (- 2.))))) (* skoMC1 (* skoMC1 (* skoMC1 2.)))) (and (> (* skoSC1 (* skoMC1 (* skoMC1 (* skoMC1 2.)))) (* skoMC1 (* skoMC1 (* skoMC1 (- 2.))))) (and (<= (* skoMC1 (* skoMC1 (* skoMC1 (- 1.)))) 0.) (and (> (* skoSC1 (* skoMC1 (* skoMC1 skoMC1))) (* skoMC1 (* skoMC1 (* skoMC1 (- 1.))))) (and (<= (* skoMC1 (* skoMC1 (* skoMC1 (- 2.)))) 0.) (and (> (* skoMC1 (* skoMC1 (* skoMC1 2.))) 0.) (and (<= skoSC1 (/ 5. 4.)) (and (<= 2. skoMC1) (and (<= 0. skoSC1) (and (> skoMC1 0.) (and (<= 0. skoMC1) (and (> (* skoSC1 skoMC1) (* skoMC1 (- 1.))) (and (<= (* skoSC1 (* skoMC1 (- 1.))) skoMC1) (and (> (* skoSC1 (+ (* skoMC1 (+ (- 1.) (* skoMC1 3.))) (* skoSC1 (+ (* skoMC1 (+ (- 2.) (* skoMC1 (- 3.)))) (* skoSC1 (+ (* skoMC1 (* skoMC1 (- 1.))) (* skoSC1 (* skoMC1 (/ 1. 12.))))))))) (* skoMC1 (+ (- 2.) (* skoMC1 (- 5.))))) (and (<= (* skoSC1 (+ (* skoMC1 (+ 1. (* skoMC1 (- 3.)))) (* skoSC1 (+ (* skoMC1 (+ 2. (* skoMC1 3.))) (* skoSC1 (+ (* skoMC1 skoMC1) (* skoSC1 (* skoMC1 (/ (- 1.) 12.))))))))) (* skoMC1 (+ 2. (* skoMC1 5.)))) (and (> (* skoSC1 (+ (* skoMC1 (+ (- 1.) (* skoMC1 3.))) (* skoSC1 (+ (* skoMC1 (+ (- 2.) (* skoMC1 (- 3.)))) (* skoSC1 (+ (* skoMC1 (+ (/ 1. 6.) (* skoMC1 (- 1.)))) (* skoSC1 (* skoMC1 (/ 1. 4.))))))))) (* skoMC1 (+ (- 2.) (* skoMC1 (- 5.))))) (<= (* skoSC1 (+ (* skoMC1 (+ 1. (* skoMC1 (- 3.)))) (* skoSC1 (+ (* skoMC1 (+ 2. (* skoMC1 3.))) (* skoSC1 (+ (* skoMC1 (+ (/ (- 1.) 6.) skoMC1)) (* skoSC1 (* skoMC1 (/ (- 1.) 4.))))))))) (* skoMC1 (+ 2. (* skoMC1 5.))))))))))))))))))))))))))

% In GRF format:
(sequent " MetiTarski formula " (antecedent (<= (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (+ 1. (* skoMC1 (- 3.)))))) (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (+ 2. (* skoMC1 3.))))) (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (+ (/ (- 1.) 6.) skoMC1)))) (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (/ (- 1.) 4.)))) (* skoSC1 (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (/ 1. 360.)))) (* skoSC1 (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (/ (- 1.) 20160.)))) (* skoSC1 (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (/ 1. 1814400.)))) (* skoSC1 (* skoSC1 (* skoMC1 (* skoMC1 (* skoMC1 (/ (- 1.) 239500800.))))))))))))))))))))))) (* skoMC1 (* skoMC1 (* skoMC1 (+ 2. (* skoMC1 5.)))))) (<= (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (+ 1. (* skoMC1 (- 3.)))))) (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (+ 2. (* skoMC1 3.))))) (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (+ (/ (- 1.) 6.) skoMC1)))) (* skoSC1 (* skoMC1 (* skoMC1 (* skoMC1 (/ (- 1.) 4.))))))))))) (* skoMC1 (* skoMC1 (* skoMC1 (+ 2. (* skoMC1 5.)))))) (<= (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (+ 1. (* skoMC1 (- 3.)))))) (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (+ 2. (* skoMC1 3.))))) (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 skoMC1))) (* skoSC1 (* skoMC1 (* skoMC1 (* skoMC1 (/ (- 1.) 12.))))))))))) (* skoMC1 (* skoMC1 (* skoMC1 (+ 2. (* skoMC1 5.)))))) (<= (* skoSC1 (* skoMC1 (* skoMC1 (* skoMC1 (- 1.))))) (* skoMC1 (* skoMC1 skoMC1))) (<= (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (+ (- 2.) (* skoMC1 (- 12.)))))) (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (+ 1. (* skoMC1 (- 6.)))))) (* skoSC1 (+ (* skoMC1 (* skoMC1 skoMC1)) (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (/ (- 1.) 12.)))) (* skoSC1 (* skoMC1 (* skoMC1 (* skoMC1 (/ (- 1.) 12.))))))))))))) (* skoMC1 (* skoMC1 (* skoMC1 (+ 2. (* skoMC1 6.)))))) (<= (* skoSC1 (* skoMC1 (* skoMC1 (* skoMC1 (- 2.))))) (* skoMC1 (* skoMC1 (* skoMC1 2.)))) (> (* skoSC1 (* skoMC1 (* skoMC1 (* skoMC1 2.)))) (* skoMC1 (* skoMC1 (* skoMC1 (- 2.))))) (<= (* skoMC1 (* skoMC1 (* skoMC1 (- 1.)))) 0.) (> (* skoSC1 (* skoMC1 (* skoMC1 skoMC1))) (* skoMC1 (* skoMC1 (* skoMC1 (- 1.))))) (<= (* skoMC1 (* skoMC1 (* skoMC1 (- 2.)))) 0.) (> (* skoMC1 (* skoMC1 (* skoMC1 2.))) 0.) (<= skoSC1 (/ 5. 4.)) (<= 2. skoMC1) (<= 0. skoSC1) (> skoMC1 0.) (<= 0. skoMC1) (> (* skoSC1 skoMC1) (* skoMC1 (- 1.))) (<= (* skoSC1 (* skoMC1 (- 1.))) skoMC1) (> (* skoSC1 (+ (* skoMC1 (+ (- 1.) (* skoMC1 3.))) (* skoSC1 (+ (* skoMC1 (+ (- 2.) (* skoMC1 (- 3.)))) (* skoSC1 (+ (* skoMC1 (* skoMC1 (- 1.))) (* skoSC1 (* skoMC1 (/ 1. 12.))))))))) (* skoMC1 (+ (- 2.) (* skoMC1 (- 5.))))) (<= (* skoSC1 (+ (* skoMC1 (+ 1. (* skoMC1 (- 3.)))) (* skoSC1 (+ (* skoMC1 (+ 2. (* skoMC1 3.))) (* skoSC1 (+ (* skoMC1 skoMC1) (* skoSC1 (* skoMC1 (/ (- 1.) 12.))))))))) (* skoMC1 (+ 2. (* skoMC1 5.)))) (> (* skoSC1 (+ (* skoMC1 (+ (- 1.) (* skoMC1 3.))) (* skoSC1 (+ (* skoMC1 (+ (- 2.) (* skoMC1 (- 3.)))) (* skoSC1 (+ (* skoMC1 (+ (/ 1. 6.) (* skoMC1 (- 1.)))) (* skoSC1 (* skoMC1 (/ 1. 4.))))))))) (* skoMC1 (+ (- 2.) (* skoMC1 (- 5.)))))) (succedent (> (* skoSC1 (+ (* skoMC1 (+ 1. (* skoMC1 (- 3.)))) (* skoSC1 (+ (* skoMC1 (+ 2. (* skoMC1 3.))) (* skoSC1 (+ (* skoMC1 (+ (/ (- 1.) 6.) skoMC1)) (* skoSC1 (* skoMC1 (/ (- 1.) 4.))))))))) (* skoMC1 (+ 2. (* skoMC1 5.))))))
-----[end problem]-----

-----[begin problem]-----
% In Mathematica format:
Timing[Resolve[Exists[{skoSC1,skoMC1}, And[skoSC1*(skoMC1*skoMC1*skoMC1*(-2+skoMC1*-12)+skoSC1*(skoMC1*skoMC1*skoMC1*(1+skoMC1*-6)+skoSC1*(skoMC1*skoMC1*skoMC1+skoSC1*(skoMC1*skoMC1*skoMC1*(-1/12)+skoSC1*(skoMC1*skoMC1*skoMC1*(-1/12)+skoSC1*(skoMC1*skoMC1*skoMC1*(1/360)+skoSC1*(skoMC1*skoMC1*skoMC1*(1/360)+skoSC1*(skoMC1*skoMC1*skoMC1*(-1/20160)+skoSC1*(skoMC1*skoMC1*skoMC1*(-1/20160)+skoSC1*(skoMC1*skoMC1*skoMC1*(1/1814400)+skoSC1*(skoMC1*skoMC1*skoMC1*(1/1814400)+skoSC1*(skoMC1*skoMC1*skoMC1*(-1/239500800)+skoSC1*skoMC1*skoMC1*skoMC1*(-1/239500800)))))))))))))<=skoMC1*skoMC1*skoMC1*(2+skoMC1*6),skoSC1*(skoMC1*skoMC1*skoMC1*(1+skoMC1*-3)+skoSC1*(skoMC1*skoMC1*skoMC1*(2+skoMC1*3)+skoSC1*(skoMC1*skoMC1*skoMC1*((-1/6)+skoMC1)+skoSC1*skoMC1*skoMC1*skoMC1*(-1/4))))<=skoMC1*skoMC1*skoMC1*(2+skoMC1*5),skoSC1*(skoMC1*skoMC1*skoMC1*(1+skoMC1*-3)+skoSC1*(skoMC1*skoMC1*skoMC1*(2+skoMC1*3)+skoSC1*(skoMC1*skoMC1*skoMC1*skoMC1+skoSC1*skoMC1*skoMC1*skoMC1*(-1/12))))<=skoMC1*skoMC1*skoMC1*(2+skoMC1*5),skoSC1*skoMC1*skoMC1*skoMC1*-1<=skoMC1*skoMC1*skoMC1,skoSC1*(skoMC1*skoMC1*skoMC1*(-2+skoMC1*-12)+skoSC1*(skoMC1*skoMC1*skoMC1*(1+skoMC1*-6)+skoSC1*(skoMC1*skoMC1*skoMC1+skoSC1*(skoMC1*skoMC1*skoMC1*(-1/12)+skoSC1*skoMC1*skoMC1*skoMC1*(-1/12)))))<=skoMC1*skoMC1*skoMC1*(2+skoMC1*6),skoSC1*skoMC1*skoMC1*skoMC1*-2<=skoMC1*skoMC1*skoMC1*2,skoSC1*skoMC1*skoMC1*skoMC1*2>skoMC1*skoMC1*skoMC1*-2,skoMC1*skoMC1*skoMC1*-1<=0,skoSC1*skoMC1*skoMC1*skoMC1>skoMC1*skoMC1*skoMC1*-1,skoMC1*skoMC1*skoMC1*-2<=0,skoMC1*skoMC1*skoMC1*2>0,skoSC1<=(5/4),2<=skoMC1,0<=skoSC1,skoMC1>0,0<=skoMC1,skoSC1*skoMC1>skoMC1*-1,skoSC1*skoMC1*-1<=skoMC1,skoSC1*(skoMC1*(-1+skoMC1*3)+skoSC1*(skoMC1*(-2+skoMC1*-3)+skoSC1*(skoMC1*skoMC1*-1+skoSC1*skoMC1*(1/12))))>skoMC1*(-2+skoMC1*-5),skoSC1*(skoMC1*(1+skoMC1*-3)+skoSC1*(skoMC1*(2+skoMC1*3)+skoSC1*(skoMC1*skoMC1+skoSC1*skoMC1*(-1/12))))<=skoMC1*(2+skoMC1*5),skoSC1*(skoMC1*(-1+skoMC1*3)+skoSC1*(skoMC1*(-2+skoMC1*-3)+skoSC1*(skoMC1*((1/6)+skoMC1*-1)+skoSC1*skoMC1*(1/4))))>skoMC1*(-2+skoMC1*-5),skoSC1*(skoMC1*(1+skoMC1*-3)+skoSC1*(skoMC1*(2+skoMC1*3)+skoSC1*(skoMC1*((-1/6)+skoMC1)+skoSC1*skoMC1*(-1/4))))<=skoMC1*(2+skoMC1*5)]], Reals]]

% In QepcadB format:
(E skoSC1) (E skoMC1) [[(skoSC1 ((skoMC1 skoMC1 skoMC1 (-2+(skoMC1 (-12))))+(skoSC1 ((skoMC1 skoMC1 skoMC1 (1+(skoMC1 (-6))))+(skoSC1 ((skoMC1 skoMC1 skoMC1)+(skoSC1 ((skoMC1 skoMC1 skoMC1 (-1/12))+(skoSC1 ((skoMC1 skoMC1 skoMC1 (-1/12))+(skoSC1 ((skoMC1 skoMC1 skoMC1 (1/360))+(skoSC1 ((skoMC1 skoMC1 skoMC1 (1/360))+(skoSC1 ((skoMC1 skoMC1 skoMC1 (-1/20160))+(skoSC1 ((skoMC1 skoMC1 skoMC1 (-1/20160))+(skoSC1 ((skoMC1 skoMC1 skoMC1 (1/1814400))+(skoSC1 ((skoMC1 skoMC1 skoMC1 (1/1814400))+(skoSC1 ((skoMC1 skoMC1 skoMC1 (-1/239500800))+(skoSC1 skoMC1 skoMC1 skoMC1 (-1/239500800))))))))))))))))))))))))))<=(skoMC1 skoMC1 skoMC1 (2+(skoMC1 (6))))]/\[[(skoSC1 ((skoMC1 skoMC1 skoMC1 (1+(skoMC1 (-3))))+(skoSC1 ((skoMC1 skoMC1 skoMC1 (2+(skoMC1 (3))))+(skoSC1 ((skoMC1 skoMC1 skoMC1 (-1/6+skoMC1))+(skoSC1 skoMC1 skoMC1 skoMC1 (-1/4))))))))<=(skoMC1 skoMC1 skoMC1 (2+(skoMC1 (5))))]/\[[(skoSC1 ((skoMC1 skoMC1 skoMC1 (1+(skoMC1 (-3))))+(skoSC1 ((skoMC1 skoMC1 skoMC1 (2+(skoMC1 (3))))+(skoSC1 ((skoMC1 skoMC1 skoMC1 skoMC1)+(skoSC1 skoMC1 skoMC1 skoMC1 (-1/12))))))))<=(skoMC1 skoMC1 skoMC1 (2+(skoMC1 (5))))]/\[[(skoSC1 skoMC1 skoMC1 skoMC1 (-1))<=(skoMC1 skoMC1 skoMC1)]/\[[(skoSC1 ((skoMC1 skoMC1 skoMC1 (-2+(skoMC1 (-12))))+(skoSC1 ((skoMC1 skoMC1 skoMC1 (1+(skoMC1 (-6))))+(skoSC1 ((skoMC1 skoMC1 skoMC1)+(skoSC1 ((skoMC1 skoMC1 skoMC1 (-1/12))+(skoSC1 skoMC1 skoMC1 skoMC1 (-1/12))))))))))<=(skoMC1 skoMC1 skoMC1 (2+(skoMC1 (6))))]/\[[(skoSC1 skoMC1 skoMC1 skoMC1 (-2))<=(skoMC1 skoMC1 skoMC1 (2))]/\[[(skoMC1 skoMC1 skoMC1 (-2))<(skoSC1 skoMC1 skoMC1 skoMC1 (2))]/\[[(skoMC1 skoMC1 skoMC1 (-1))<=0]/\[[(skoMC1 skoMC1 skoMC1 (-1))<(skoSC1 skoMC1 skoMC1 skoMC1)]/\[[(skoMC1 skoMC1 skoMC1 (-2))<=0]/\[[0<(skoMC1 skoMC1 skoMC1 (2))]/\[[skoSC1<=5/4]/\[[2<=skoMC1]/\[[0<=skoSC1]/\[[0<skoMC1]/\[[0<=skoMC1]/\[[(skoMC1 (-1))<(skoSC1 skoMC1)]/\[[(skoSC1 skoMC1 (-1))<=skoMC1]/\[[(skoMC1 (-2+(skoMC1 (-5))))<(skoSC1 ((skoMC1 (-1+(skoMC1 (3))))+(skoSC1 ((skoMC1 (-2+(skoMC1 (-3))))+(skoSC1 ((skoMC1 skoMC1 (-1))+(skoSC1 skoMC1 (1/12))))))))]/\[[(skoSC1 ((skoMC1 (1+(skoMC1 (-3))))+(skoSC1 ((skoMC1 (2+(skoMC1 (3))))+(skoSC1 ((skoMC1 skoMC1)+(skoSC1 skoMC1 (-1/12))))))))<=(skoMC1 (2+(skoMC1 (5))))]/\[[(skoMC1 (-2+(skoMC1 (-5))))<(skoSC1 ((skoMC1 (-1+(skoMC1 (3))))+(skoSC1 ((skoMC1 (-2+(skoMC1 (-3))))+(skoSC1 ((skoMC1 (1/6+(skoMC1 (-1))))+(skoSC1 skoMC1 (1/4))))))))]/\[(skoSC1 ((skoMC1 (1+(skoMC1 (-3))))+(skoSC1 ((skoMC1 (2+(skoMC1 (3))))+(skoSC1 ((skoMC1 (-1/6+skoMC1))+(skoSC1 skoMC1 (-1/4))))))))<=(skoMC1 (2+(skoMC1 (5))))]]]]]]]]]]]]]]]]]]]]]].

% In SMTLib2 format:
(declare-fun skoSC1 () Real) (declare-fun skoMC1 () Real) (assert (and (<= (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (+ (- 2.) (* skoMC1 (- 12.)))))) (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (+ 1. (* skoMC1 (- 6.)))))) (* skoSC1 (+ (* skoMC1 (* skoMC1 skoMC1)) (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (/ (- 1.) 12.)))) (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (/ (- 1.) 12.)))) (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (/ 1. 360.)))) (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (/ 1. 360.)))) (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (/ (- 1.) 20160.)))) (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (/ (- 1.) 20160.)))) (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (/ 1. 1814400.)))) (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (/ 1. 1814400.)))) (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (/ (- 1.) 239500800.)))) (* skoSC1 (* skoMC1 (* skoMC1 (* skoMC1 (/ (- 1.) 239500800.))))))))))))))))))))))))))))) (* skoMC1 (* skoMC1 (* skoMC1 (+ 2. (* skoMC1 6.)))))) (and (<= (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (+ 1. (* skoMC1 (- 3.)))))) (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (+ 2. (* skoMC1 3.))))) (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (+ (/ (- 1.) 6.) skoMC1)))) (* skoSC1 (* skoMC1 (* skoMC1 (* skoMC1 (/ (- 1.) 4.))))))))))) (* skoMC1 (* skoMC1 (* skoMC1 (+ 2. (* skoMC1 5.)))))) (and (<= (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (+ 1. (* skoMC1 (- 3.)))))) (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (+ 2. (* skoMC1 3.))))) (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 skoMC1))) (* skoSC1 (* skoMC1 (* skoMC1 (* skoMC1 (/ (- 1.) 12.))))))))))) (* skoMC1 (* skoMC1 (* skoMC1 (+ 2. (* skoMC1 5.)))))) (and (<= (* skoSC1 (* skoMC1 (* skoMC1 (* skoMC1 (- 1.))))) (* skoMC1 (* skoMC1 skoMC1))) (and (<= (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (+ (- 2.) (* skoMC1 (- 12.)))))) (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (+ 1. (* skoMC1 (- 6.)))))) (* skoSC1 (+ (* skoMC1 (* skoMC1 skoMC1)) (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (/ (- 1.) 12.)))) (* skoSC1 (* skoMC1 (* skoMC1 (* skoMC1 (/ (- 1.) 12.))))))))))))) (* skoMC1 (* skoMC1 (* skoMC1 (+ 2. (* skoMC1 6.)))))) (and (<= (* skoSC1 (* skoMC1 (* skoMC1 (* skoMC1 (- 2.))))) (* skoMC1 (* skoMC1 (* skoMC1 2.)))) (and (> (* skoSC1 (* skoMC1 (* skoMC1 (* skoMC1 2.)))) (* skoMC1 (* skoMC1 (* skoMC1 (- 2.))))) (and (<= (* skoMC1 (* skoMC1 (* skoMC1 (- 1.)))) 0.) (and (> (* skoSC1 (* skoMC1 (* skoMC1 skoMC1))) (* skoMC1 (* skoMC1 (* skoMC1 (- 1.))))) (and (<= (* skoMC1 (* skoMC1 (* skoMC1 (- 2.)))) 0.) (and (> (* skoMC1 (* skoMC1 (* skoMC1 2.))) 0.) (and (<= skoSC1 (/ 5. 4.)) (and (<= 2. skoMC1) (and (<= 0. skoSC1) (and (> skoMC1 0.) (and (<= 0. skoMC1) (and (> (* skoSC1 skoMC1) (* skoMC1 (- 1.))) (and (<= (* skoSC1 (* skoMC1 (- 1.))) skoMC1) (and (> (* skoSC1 (+ (* skoMC1 (+ (- 1.) (* skoMC1 3.))) (* skoSC1 (+ (* skoMC1 (+ (- 2.) (* skoMC1 (- 3.)))) (* skoSC1 (+ (* skoMC1 (* skoMC1 (- 1.))) (* skoSC1 (* skoMC1 (/ 1. 12.))))))))) (* skoMC1 (+ (- 2.) (* skoMC1 (- 5.))))) (and (<= (* skoSC1 (+ (* skoMC1 (+ 1. (* skoMC1 (- 3.)))) (* skoSC1 (+ (* skoMC1 (+ 2. (* skoMC1 3.))) (* skoSC1 (+ (* skoMC1 skoMC1) (* skoSC1 (* skoMC1 (/ (- 1.) 12.))))))))) (* skoMC1 (+ 2. (* skoMC1 5.)))) (and (> (* skoSC1 (+ (* skoMC1 (+ (- 1.) (* skoMC1 3.))) (* skoSC1 (+ (* skoMC1 (+ (- 2.) (* skoMC1 (- 3.)))) (* skoSC1 (+ (* skoMC1 (+ (/ 1. 6.) (* skoMC1 (- 1.)))) (* skoSC1 (* skoMC1 (/ 1. 4.))))))))) (* skoMC1 (+ (- 2.) (* skoMC1 (- 5.))))) (<= (* skoSC1 (+ (* skoMC1 (+ 1. (* skoMC1 (- 3.)))) (* skoSC1 (+ (* skoMC1 (+ 2. (* skoMC1 3.))) (* skoSC1 (+ (* skoMC1 (+ (/ (- 1.) 6.) skoMC1)) (* skoSC1 (* skoMC1 (/ (- 1.) 4.))))))))) (* skoMC1 (+ 2. (* skoMC1 5.))))))))))))))))))))))))))

% In GRF format:
(sequent " MetiTarski formula " (antecedent (<= (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (+ (- 2.) (* skoMC1 (- 12.)))))) (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (+ 1. (* skoMC1 (- 6.)))))) (* skoSC1 (+ (* skoMC1 (* skoMC1 skoMC1)) (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (/ (- 1.) 12.)))) (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (/ (- 1.) 12.)))) (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (/ 1. 360.)))) (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (/ 1. 360.)))) (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (/ (- 1.) 20160.)))) (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (/ (- 1.) 20160.)))) (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (/ 1. 1814400.)))) (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (/ 1. 1814400.)))) (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (/ (- 1.) 239500800.)))) (* skoSC1 (* skoMC1 (* skoMC1 (* skoMC1 (/ (- 1.) 239500800.))))))))))))))))))))))))))))) (* skoMC1 (* skoMC1 (* skoMC1 (+ 2. (* skoMC1 6.)))))) (<= (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (+ 1. (* skoMC1 (- 3.)))))) (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (+ 2. (* skoMC1 3.))))) (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (+ (/ (- 1.) 6.) skoMC1)))) (* skoSC1 (* skoMC1 (* skoMC1 (* skoMC1 (/ (- 1.) 4.))))))))))) (* skoMC1 (* skoMC1 (* skoMC1 (+ 2. (* skoMC1 5.)))))) (<= (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (+ 1. (* skoMC1 (- 3.)))))) (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (+ 2. (* skoMC1 3.))))) (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 skoMC1))) (* skoSC1 (* skoMC1 (* skoMC1 (* skoMC1 (/ (- 1.) 12.))))))))))) (* skoMC1 (* skoMC1 (* skoMC1 (+ 2. (* skoMC1 5.)))))) (<= (* skoSC1 (* skoMC1 (* skoMC1 (* skoMC1 (- 1.))))) (* skoMC1 (* skoMC1 skoMC1))) (<= (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (+ (- 2.) (* skoMC1 (- 12.)))))) (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (+ 1. (* skoMC1 (- 6.)))))) (* skoSC1 (+ (* skoMC1 (* skoMC1 skoMC1)) (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (/ (- 1.) 12.)))) (* skoSC1 (* skoMC1 (* skoMC1 (* skoMC1 (/ (- 1.) 12.))))))))))))) (* skoMC1 (* skoMC1 (* skoMC1 (+ 2. (* skoMC1 6.)))))) (<= (* skoSC1 (* skoMC1 (* skoMC1 (* skoMC1 (- 2.))))) (* skoMC1 (* skoMC1 (* skoMC1 2.)))) (> (* skoSC1 (* skoMC1 (* skoMC1 (* skoMC1 2.)))) (* skoMC1 (* skoMC1 (* skoMC1 (- 2.))))) (<= (* skoMC1 (* skoMC1 (* skoMC1 (- 1.)))) 0.) (> (* skoSC1 (* skoMC1 (* skoMC1 skoMC1))) (* skoMC1 (* skoMC1 (* skoMC1 (- 1.))))) (<= (* skoMC1 (* skoMC1 (* skoMC1 (- 2.)))) 0.) (> (* skoMC1 (* skoMC1 (* skoMC1 2.))) 0.) (<= skoSC1 (/ 5. 4.)) (<= 2. skoMC1) (<= 0. skoSC1) (> skoMC1 0.) (<= 0. skoMC1) (> (* skoSC1 skoMC1) (* skoMC1 (- 1.))) (<= (* skoSC1 (* skoMC1 (- 1.))) skoMC1) (> (* skoSC1 (+ (* skoMC1 (+ (- 1.) (* skoMC1 3.))) (* skoSC1 (+ (* skoMC1 (+ (- 2.) (* skoMC1 (- 3.)))) (* skoSC1 (+ (* skoMC1 (* skoMC1 (- 1.))) (* skoSC1 (* skoMC1 (/ 1. 12.))))))))) (* skoMC1 (+ (- 2.) (* skoMC1 (- 5.))))) (<= (* skoSC1 (+ (* skoMC1 (+ 1. (* skoMC1 (- 3.)))) (* skoSC1 (+ (* skoMC1 (+ 2. (* skoMC1 3.))) (* skoSC1 (+ (* skoMC1 skoMC1) (* skoSC1 (* skoMC1 (/ (- 1.) 12.))))))))) (* skoMC1 (+ 2. (* skoMC1 5.)))) (> (* skoSC1 (+ (* skoMC1 (+ (- 1.) (* skoMC1 3.))) (* skoSC1 (+ (* skoMC1 (+ (- 2.) (* skoMC1 (- 3.)))) (* skoSC1 (+ (* skoMC1 (+ (/ 1. 6.) (* skoMC1 (- 1.)))) (* skoSC1 (* skoMC1 (/ 1. 4.))))))))) (* skoMC1 (+ (- 2.) (* skoMC1 (- 5.)))))) (succedent (> (* skoSC1 (+ (* skoMC1 (+ 1. (* skoMC1 (- 3.)))) (* skoSC1 (+ (* skoMC1 (+ 2. (* skoMC1 3.))) (* skoSC1 (+ (* skoMC1 (+ (/ (- 1.) 6.) skoMC1)) (* skoSC1 (* skoMC1 (/ (- 1.) 4.))))))))) (* skoMC1 (+ 2. (* skoMC1 5.))))))
-----[end problem]-----

-----[begin problem]-----
% In Mathematica format:
Timing[Resolve[Exists[{skoSC1,skoMC1}, And[skoSC1>0,skoSC1*(skoMC1*skoMC1*skoMC1*(1+skoMC1*-3)+skoSC1*(skoMC1*skoMC1*skoMC1*(2+skoMC1*3)+skoSC1*(skoMC1*skoMC1*skoMC1*((-1/6)+skoMC1)+skoSC1*skoMC1*skoMC1*skoMC1*(-1/4))))<=skoMC1*skoMC1*skoMC1*(2+skoMC1*5),skoSC1*(skoMC1*skoMC1*skoMC1*(1+skoMC1*-3)+skoSC1*(skoMC1*skoMC1*skoMC1*(2+skoMC1*3)+skoSC1*(skoMC1*skoMC1*skoMC1*skoMC1+skoSC1*skoMC1*skoMC1*skoMC1*(-1/12))))<=skoMC1*skoMC1*skoMC1*(2+skoMC1*5),skoSC1*skoMC1*skoMC1*skoMC1*-1<=skoMC1*skoMC1*skoMC1,skoSC1*(skoMC1*skoMC1*skoMC1*(-2+skoMC1*-12)+skoSC1*(skoMC1*skoMC1*skoMC1*(1+skoMC1*-6)+skoSC1*(skoMC1*skoMC1*skoMC1+skoSC1*(skoMC1*skoMC1*skoMC1*(-1/12)+skoSC1*skoMC1*skoMC1*skoMC1*(-1/12)))))<=skoMC1*skoMC1*skoMC1*(2+skoMC1*6),skoSC1*skoMC1*skoMC1*skoMC1*-2<=skoMC1*skoMC1*skoMC1*2,skoSC1*skoMC1*skoMC1*skoMC1*2>skoMC1*skoMC1*skoMC1*-2,skoMC1*skoMC1*skoMC1*-1<=0,skoSC1*skoMC1*skoMC1*skoMC1>skoMC1*skoMC1*skoMC1*-1,skoMC1*skoMC1*skoMC1*-2<=0,skoMC1*skoMC1*skoMC1*2>0,skoSC1<=(5/4),2<=skoMC1,0<=skoSC1,skoMC1>0,0<=skoMC1,skoSC1*skoMC1>skoMC1*-1,skoSC1*skoMC1*-1<=skoMC1,skoSC1*(skoMC1*(-1+skoMC1*3)+skoSC1*(skoMC1*(-2+skoMC1*-3)+skoSC1*(skoMC1*skoMC1*-1+skoSC1*skoMC1*(1/12))))>skoMC1*(-2+skoMC1*-5),skoSC1*(skoMC1*(1+skoMC1*-3)+skoSC1*(skoMC1*(2+skoMC1*3)+skoSC1*(skoMC1*skoMC1+skoSC1*skoMC1*(-1/12))))<=skoMC1*(2+skoMC1*5),skoSC1*(skoMC1*(-1+skoMC1*3)+skoSC1*(skoMC1*(-2+skoMC1*-3)+skoSC1*(skoMC1*((1/6)+skoMC1*-1)+skoSC1*skoMC1*(1/4))))>skoMC1*(-2+skoMC1*-5),skoSC1*(skoMC1*(1+skoMC1*-3)+skoSC1*(skoMC1*(2+skoMC1*3)+skoSC1*(skoMC1*((-1/6)+skoMC1)+skoSC1*skoMC1*(-1/4))))<=skoMC1*(2+skoMC1*5)]], Reals]]

% In QepcadB format:
(E skoSC1) (E skoMC1) [[0<skoSC1]/\[[(skoSC1 ((skoMC1 skoMC1 skoMC1 (1+(skoMC1 (-3))))+(skoSC1 ((skoMC1 skoMC1 skoMC1 (2+(skoMC1 (3))))+(skoSC1 ((skoMC1 skoMC1 skoMC1 (-1/6+skoMC1))+(skoSC1 skoMC1 skoMC1 skoMC1 (-1/4))))))))<=(skoMC1 skoMC1 skoMC1 (2+(skoMC1 (5))))]/\[[(skoSC1 ((skoMC1 skoMC1 skoMC1 (1+(skoMC1 (-3))))+(skoSC1 ((skoMC1 skoMC1 skoMC1 (2+(skoMC1 (3))))+(skoSC1 ((skoMC1 skoMC1 skoMC1 skoMC1)+(skoSC1 skoMC1 skoMC1 skoMC1 (-1/12))))))))<=(skoMC1 skoMC1 skoMC1 (2+(skoMC1 (5))))]/\[[(skoSC1 skoMC1 skoMC1 skoMC1 (-1))<=(skoMC1 skoMC1 skoMC1)]/\[[(skoSC1 ((skoMC1 skoMC1 skoMC1 (-2+(skoMC1 (-12))))+(skoSC1 ((skoMC1 skoMC1 skoMC1 (1+(skoMC1 (-6))))+(skoSC1 ((skoMC1 skoMC1 skoMC1)+(skoSC1 ((skoMC1 skoMC1 skoMC1 (-1/12))+(skoSC1 skoMC1 skoMC1 skoMC1 (-1/12))))))))))<=(skoMC1 skoMC1 skoMC1 (2+(skoMC1 (6))))]/\[[(skoSC1 skoMC1 skoMC1 skoMC1 (-2))<=(skoMC1 skoMC1 skoMC1 (2))]/\[[(skoMC1 skoMC1 skoMC1 (-2))<(skoSC1 skoMC1 skoMC1 skoMC1 (2))]/\[[(skoMC1 skoMC1 skoMC1 (-1))<=0]/\[[(skoMC1 skoMC1 skoMC1 (-1))<(skoSC1 skoMC1 skoMC1 skoMC1)]/\[[(skoMC1 skoMC1 skoMC1 (-2))<=0]/\[[0<(skoMC1 skoMC1 skoMC1 (2))]/\[[skoSC1<=5/4]/\[[2<=skoMC1]/\[[0<=skoSC1]/\[[0<skoMC1]/\[[0<=skoMC1]/\[[(skoMC1 (-1))<(skoSC1 skoMC1)]/\[[(skoSC1 skoMC1 (-1))<=skoMC1]/\[[(skoMC1 (-2+(skoMC1 (-5))))<(skoSC1 ((skoMC1 (-1+(skoMC1 (3))))+(skoSC1 ((skoMC1 (-2+(skoMC1 (-3))))+(skoSC1 ((skoMC1 skoMC1 (-1))+(skoSC1 skoMC1 (1/12))))))))]/\[[(skoSC1 ((skoMC1 (1+(skoMC1 (-3))))+(skoSC1 ((skoMC1 (2+(skoMC1 (3))))+(skoSC1 ((skoMC1 skoMC1)+(skoSC1 skoMC1 (-1/12))))))))<=(skoMC1 (2+(skoMC1 (5))))]/\[[(skoMC1 (-2+(skoMC1 (-5))))<(skoSC1 ((skoMC1 (-1+(skoMC1 (3))))+(skoSC1 ((skoMC1 (-2+(skoMC1 (-3))))+(skoSC1 ((skoMC1 (1/6+(skoMC1 (-1))))+(skoSC1 skoMC1 (1/4))))))))]/\[(skoSC1 ((skoMC1 (1+(skoMC1 (-3))))+(skoSC1 ((skoMC1 (2+(skoMC1 (3))))+(skoSC1 ((skoMC1 (-1/6+skoMC1))+(skoSC1 skoMC1 (-1/4))))))))<=(skoMC1 (2+(skoMC1 (5))))]]]]]]]]]]]]]]]]]]]]]].

% In SMTLib2 format:
(declare-fun skoSC1 () Real) (declare-fun skoMC1 () Real) (assert (and (> skoSC1 0.) (and (<= (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (+ 1. (* skoMC1 (- 3.)))))) (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (+ 2. (* skoMC1 3.))))) (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (+ (/ (- 1.) 6.) skoMC1)))) (* skoSC1 (* skoMC1 (* skoMC1 (* skoMC1 (/ (- 1.) 4.))))))))))) (* skoMC1 (* skoMC1 (* skoMC1 (+ 2. (* skoMC1 5.)))))) (and (<= (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (+ 1. (* skoMC1 (- 3.)))))) (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (+ 2. (* skoMC1 3.))))) (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 skoMC1))) (* skoSC1 (* skoMC1 (* skoMC1 (* skoMC1 (/ (- 1.) 12.))))))))))) (* skoMC1 (* skoMC1 (* skoMC1 (+ 2. (* skoMC1 5.)))))) (and (<= (* skoSC1 (* skoMC1 (* skoMC1 (* skoMC1 (- 1.))))) (* skoMC1 (* skoMC1 skoMC1))) (and (<= (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (+ (- 2.) (* skoMC1 (- 12.)))))) (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (+ 1. (* skoMC1 (- 6.)))))) (* skoSC1 (+ (* skoMC1 (* skoMC1 skoMC1)) (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (/ (- 1.) 12.)))) (* skoSC1 (* skoMC1 (* skoMC1 (* skoMC1 (/ (- 1.) 12.))))))))))))) (* skoMC1 (* skoMC1 (* skoMC1 (+ 2. (* skoMC1 6.)))))) (and (<= (* skoSC1 (* skoMC1 (* skoMC1 (* skoMC1 (- 2.))))) (* skoMC1 (* skoMC1 (* skoMC1 2.)))) (and (> (* skoSC1 (* skoMC1 (* skoMC1 (* skoMC1 2.)))) (* skoMC1 (* skoMC1 (* skoMC1 (- 2.))))) (and (<= (* skoMC1 (* skoMC1 (* skoMC1 (- 1.)))) 0.) (and (> (* skoSC1 (* skoMC1 (* skoMC1 skoMC1))) (* skoMC1 (* skoMC1 (* skoMC1 (- 1.))))) (and (<= (* skoMC1 (* skoMC1 (* skoMC1 (- 2.)))) 0.) (and (> (* skoMC1 (* skoMC1 (* skoMC1 2.))) 0.) (and (<= skoSC1 (/ 5. 4.)) (and (<= 2. skoMC1) (and (<= 0. skoSC1) (and (> skoMC1 0.) (and (<= 0. skoMC1) (and (> (* skoSC1 skoMC1) (* skoMC1 (- 1.))) (and (<= (* skoSC1 (* skoMC1 (- 1.))) skoMC1) (and (> (* skoSC1 (+ (* skoMC1 (+ (- 1.) (* skoMC1 3.))) (* skoSC1 (+ (* skoMC1 (+ (- 2.) (* skoMC1 (- 3.)))) (* skoSC1 (+ (* skoMC1 (* skoMC1 (- 1.))) (* skoSC1 (* skoMC1 (/ 1. 12.))))))))) (* skoMC1 (+ (- 2.) (* skoMC1 (- 5.))))) (and (<= (* skoSC1 (+ (* skoMC1 (+ 1. (* skoMC1 (- 3.)))) (* skoSC1 (+ (* skoMC1 (+ 2. (* skoMC1 3.))) (* skoSC1 (+ (* skoMC1 skoMC1) (* skoSC1 (* skoMC1 (/ (- 1.) 12.))))))))) (* skoMC1 (+ 2. (* skoMC1 5.)))) (and (> (* skoSC1 (+ (* skoMC1 (+ (- 1.) (* skoMC1 3.))) (* skoSC1 (+ (* skoMC1 (+ (- 2.) (* skoMC1 (- 3.)))) (* skoSC1 (+ (* skoMC1 (+ (/ 1. 6.) (* skoMC1 (- 1.)))) (* skoSC1 (* skoMC1 (/ 1. 4.))))))))) (* skoMC1 (+ (- 2.) (* skoMC1 (- 5.))))) (<= (* skoSC1 (+ (* skoMC1 (+ 1. (* skoMC1 (- 3.)))) (* skoSC1 (+ (* skoMC1 (+ 2. (* skoMC1 3.))) (* skoSC1 (+ (* skoMC1 (+ (/ (- 1.) 6.) skoMC1)) (* skoSC1 (* skoMC1 (/ (- 1.) 4.))))))))) (* skoMC1 (+ 2. (* skoMC1 5.))))))))))))))))))))))))))

% In GRF format:
(sequent " MetiTarski formula " (antecedent (> skoSC1 0.) (<= (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (+ 1. (* skoMC1 (- 3.)))))) (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (+ 2. (* skoMC1 3.))))) (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (+ (/ (- 1.) 6.) skoMC1)))) (* skoSC1 (* skoMC1 (* skoMC1 (* skoMC1 (/ (- 1.) 4.))))))))))) (* skoMC1 (* skoMC1 (* skoMC1 (+ 2. (* skoMC1 5.)))))) (<= (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (+ 1. (* skoMC1 (- 3.)))))) (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (+ 2. (* skoMC1 3.))))) (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 skoMC1))) (* skoSC1 (* skoMC1 (* skoMC1 (* skoMC1 (/ (- 1.) 12.))))))))))) (* skoMC1 (* skoMC1 (* skoMC1 (+ 2. (* skoMC1 5.)))))) (<= (* skoSC1 (* skoMC1 (* skoMC1 (* skoMC1 (- 1.))))) (* skoMC1 (* skoMC1 skoMC1))) (<= (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (+ (- 2.) (* skoMC1 (- 12.)))))) (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (+ 1. (* skoMC1 (- 6.)))))) (* skoSC1 (+ (* skoMC1 (* skoMC1 skoMC1)) (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (/ (- 1.) 12.)))) (* skoSC1 (* skoMC1 (* skoMC1 (* skoMC1 (/ (- 1.) 12.))))))))))))) (* skoMC1 (* skoMC1 (* skoMC1 (+ 2. (* skoMC1 6.)))))) (<= (* skoSC1 (* skoMC1 (* skoMC1 (* skoMC1 (- 2.))))) (* skoMC1 (* skoMC1 (* skoMC1 2.)))) (> (* skoSC1 (* skoMC1 (* skoMC1 (* skoMC1 2.)))) (* skoMC1 (* skoMC1 (* skoMC1 (- 2.))))) (<= (* skoMC1 (* skoMC1 (* skoMC1 (- 1.)))) 0.) (> (* skoSC1 (* skoMC1 (* skoMC1 skoMC1))) (* skoMC1 (* skoMC1 (* skoMC1 (- 1.))))) (<= (* skoMC1 (* skoMC1 (* skoMC1 (- 2.)))) 0.) (> (* skoMC1 (* skoMC1 (* skoMC1 2.))) 0.) (<= skoSC1 (/ 5. 4.)) (<= 2. skoMC1) (<= 0. skoSC1) (> skoMC1 0.) (<= 0. skoMC1) (> (* skoSC1 skoMC1) (* skoMC1 (- 1.))) (<= (* skoSC1 (* skoMC1 (- 1.))) skoMC1) (> (* skoSC1 (+ (* skoMC1 (+ (- 1.) (* skoMC1 3.))) (* skoSC1 (+ (* skoMC1 (+ (- 2.) (* skoMC1 (- 3.)))) (* skoSC1 (+ (* skoMC1 (* skoMC1 (- 1.))) (* skoSC1 (* skoMC1 (/ 1. 12.))))))))) (* skoMC1 (+ (- 2.) (* skoMC1 (- 5.))))) (<= (* skoSC1 (+ (* skoMC1 (+ 1. (* skoMC1 (- 3.)))) (* skoSC1 (+ (* skoMC1 (+ 2. (* skoMC1 3.))) (* skoSC1 (+ (* skoMC1 skoMC1) (* skoSC1 (* skoMC1 (/ (- 1.) 12.))))))))) (* skoMC1 (+ 2. (* skoMC1 5.)))) (> (* skoSC1 (+ (* skoMC1 (+ (- 1.) (* skoMC1 3.))) (* skoSC1 (+ (* skoMC1 (+ (- 2.) (* skoMC1 (- 3.)))) (* skoSC1 (+ (* skoMC1 (+ (/ 1. 6.) (* skoMC1 (- 1.)))) (* skoSC1 (* skoMC1 (/ 1. 4.))))))))) (* skoMC1 (+ (- 2.) (* skoMC1 (- 5.)))))) (succedent (> (* skoSC1 (+ (* skoMC1 (+ 1. (* skoMC1 (- 3.)))) (* skoSC1 (+ (* skoMC1 (+ 2. (* skoMC1 3.))) (* skoSC1 (+ (* skoMC1 (+ (/ (- 1.) 6.) skoMC1)) (* skoSC1 (* skoMC1 (/ (- 1.) 4.))))))))) (* skoMC1 (+ 2. (* skoMC1 5.))))))
-----[end problem]-----

-----[begin problem]-----
% In Mathematica format:
Timing[Resolve[Exists[{skoSC1,skoMC1}, And[skoSC1*skoMC1*skoMC1*skoMC1*-1<=skoMC1*skoMC1*skoMC1,skoSC1*(skoMC1*skoMC1*skoMC1*(1+skoMC1*-3)+skoSC1*(skoMC1*skoMC1*skoMC1*(2+skoMC1*3)+skoSC1*(skoMC1*skoMC1*skoMC1*((-1/6)+skoMC1)+skoSC1*skoMC1*skoMC1*skoMC1*(-1/4))))<=skoMC1*skoMC1*skoMC1*(2+skoMC1*5),skoSC1*(skoMC1*skoMC1*skoMC1*(1+skoMC1*-3)+skoSC1*(skoMC1*skoMC1*skoMC1*(2+skoMC1*3)+skoSC1*(skoMC1*skoMC1*skoMC1*skoMC1+skoSC1*skoMC1*skoMC1*skoMC1*(-1/12))))<=skoMC1*skoMC1*skoMC1*(2+skoMC1*5),skoSC1*skoMC1*skoMC1*skoMC1*-1<=skoMC1*skoMC1*skoMC1,skoSC1*(skoMC1*skoMC1*skoMC1*(-2+skoMC1*-12)+skoSC1*(skoMC1*skoMC1*skoMC1*(1+skoMC1*-6)+skoSC1*(skoMC1*skoMC1*skoMC1+skoSC1*(skoMC1*skoMC1*skoMC1*(-1/12)+skoSC1*skoMC1*skoMC1*skoMC1*(-1/12)))))<=skoMC1*skoMC1*skoMC1*(2+skoMC1*6),skoSC1*skoMC1*skoMC1*skoMC1*-2<=skoMC1*skoMC1*skoMC1*2,skoSC1*skoMC1*skoMC1*skoMC1*2>skoMC1*skoMC1*skoMC1*-2,skoMC1*skoMC1*skoMC1*-1<=0,skoSC1*skoMC1*skoMC1*skoMC1>skoMC1*skoMC1*skoMC1*-1,skoMC1*skoMC1*skoMC1*-2<=0,skoMC1*skoMC1*skoMC1*2>0,skoSC1<=(5/4),2<=skoMC1,0<=skoSC1,skoMC1>0,0<=skoMC1,skoSC1*skoMC1>skoMC1*-1,skoSC1*skoMC1*-1<=skoMC1,skoSC1*(skoMC1*(-1+skoMC1*3)+skoSC1*(skoMC1*(-2+skoMC1*-3)+skoSC1*(skoMC1*skoMC1*-1+skoSC1*skoMC1*(1/12))))>skoMC1*(-2+skoMC1*-5),skoSC1*(skoMC1*(1+skoMC1*-3)+skoSC1*(skoMC1*(2+skoMC1*3)+skoSC1*(skoMC1*skoMC1+skoSC1*skoMC1*(-1/12))))<=skoMC1*(2+skoMC1*5),skoSC1*(skoMC1*(-1+skoMC1*3)+skoSC1*(skoMC1*(-2+skoMC1*-3)+skoSC1*(skoMC1*((1/6)+skoMC1*-1)+skoSC1*skoMC1*(1/4))))>skoMC1*(-2+skoMC1*-5),skoSC1*(skoMC1*(1+skoMC1*-3)+skoSC1*(skoMC1*(2+skoMC1*3)+skoSC1*(skoMC1*((-1/6)+skoMC1)+skoSC1*skoMC1*(-1/4))))<=skoMC1*(2+skoMC1*5)]], Reals]]

% In QepcadB format:
(E skoSC1) (E skoMC1) [[(skoSC1 skoMC1 skoMC1 skoMC1 (-1))<=(skoMC1 skoMC1 skoMC1)]/\[[(skoSC1 ((skoMC1 skoMC1 skoMC1 (1+(skoMC1 (-3))))+(skoSC1 ((skoMC1 skoMC1 skoMC1 (2+(skoMC1 (3))))+(skoSC1 ((skoMC1 skoMC1 skoMC1 (-1/6+skoMC1))+(skoSC1 skoMC1 skoMC1 skoMC1 (-1/4))))))))<=(skoMC1 skoMC1 skoMC1 (2+(skoMC1 (5))))]/\[[(skoSC1 ((skoMC1 skoMC1 skoMC1 (1+(skoMC1 (-3))))+(skoSC1 ((skoMC1 skoMC1 skoMC1 (2+(skoMC1 (3))))+(skoSC1 ((skoMC1 skoMC1 skoMC1 skoMC1)+(skoSC1 skoMC1 skoMC1 skoMC1 (-1/12))))))))<=(skoMC1 skoMC1 skoMC1 (2+(skoMC1 (5))))]/\[[(skoSC1 skoMC1 skoMC1 skoMC1 (-1))<=(skoMC1 skoMC1 skoMC1)]/\[[(skoSC1 ((skoMC1 skoMC1 skoMC1 (-2+(skoMC1 (-12))))+(skoSC1 ((skoMC1 skoMC1 skoMC1 (1+(skoMC1 (-6))))+(skoSC1 ((skoMC1 skoMC1 skoMC1)+(skoSC1 ((skoMC1 skoMC1 skoMC1 (-1/12))+(skoSC1 skoMC1 skoMC1 skoMC1 (-1/12))))))))))<=(skoMC1 skoMC1 skoMC1 (2+(skoMC1 (6))))]/\[[(skoSC1 skoMC1 skoMC1 skoMC1 (-2))<=(skoMC1 skoMC1 skoMC1 (2))]/\[[(skoMC1 skoMC1 skoMC1 (-2))<(skoSC1 skoMC1 skoMC1 skoMC1 (2))]/\[[(skoMC1 skoMC1 skoMC1 (-1))<=0]/\[[(skoMC1 skoMC1 skoMC1 (-1))<(skoSC1 skoMC1 skoMC1 skoMC1)]/\[[(skoMC1 skoMC1 skoMC1 (-2))<=0]/\[[0<(skoMC1 skoMC1 skoMC1 (2))]/\[[skoSC1<=5/4]/\[[2<=skoMC1]/\[[0<=skoSC1]/\[[0<skoMC1]/\[[0<=skoMC1]/\[[(skoMC1 (-1))<(skoSC1 skoMC1)]/\[[(skoSC1 skoMC1 (-1))<=skoMC1]/\[[(skoMC1 (-2+(skoMC1 (-5))))<(skoSC1 ((skoMC1 (-1+(skoMC1 (3))))+(skoSC1 ((skoMC1 (-2+(skoMC1 (-3))))+(skoSC1 ((skoMC1 skoMC1 (-1))+(skoSC1 skoMC1 (1/12))))))))]/\[[(skoSC1 ((skoMC1 (1+(skoMC1 (-3))))+(skoSC1 ((skoMC1 (2+(skoMC1 (3))))+(skoSC1 ((skoMC1 skoMC1)+(skoSC1 skoMC1 (-1/12))))))))<=(skoMC1 (2+(skoMC1 (5))))]/\[[(skoMC1 (-2+(skoMC1 (-5))))<(skoSC1 ((skoMC1 (-1+(skoMC1 (3))))+(skoSC1 ((skoMC1 (-2+(skoMC1 (-3))))+(skoSC1 ((skoMC1 (1/6+(skoMC1 (-1))))+(skoSC1 skoMC1 (1/4))))))))]/\[(skoSC1 ((skoMC1 (1+(skoMC1 (-3))))+(skoSC1 ((skoMC1 (2+(skoMC1 (3))))+(skoSC1 ((skoMC1 (-1/6+skoMC1))+(skoSC1 skoMC1 (-1/4))))))))<=(skoMC1 (2+(skoMC1 (5))))]]]]]]]]]]]]]]]]]]]]]].

% In SMTLib2 format:
(declare-fun skoSC1 () Real) (declare-fun skoMC1 () Real) (assert (and (<= (* skoSC1 (* skoMC1 (* skoMC1 (* skoMC1 (- 1.))))) (* skoMC1 (* skoMC1 skoMC1))) (and (<= (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (+ 1. (* skoMC1 (- 3.)))))) (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (+ 2. (* skoMC1 3.))))) (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (+ (/ (- 1.) 6.) skoMC1)))) (* skoSC1 (* skoMC1 (* skoMC1 (* skoMC1 (/ (- 1.) 4.))))))))))) (* skoMC1 (* skoMC1 (* skoMC1 (+ 2. (* skoMC1 5.)))))) (and (<= (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (+ 1. (* skoMC1 (- 3.)))))) (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (+ 2. (* skoMC1 3.))))) (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 skoMC1))) (* skoSC1 (* skoMC1 (* skoMC1 (* skoMC1 (/ (- 1.) 12.))))))))))) (* skoMC1 (* skoMC1 (* skoMC1 (+ 2. (* skoMC1 5.)))))) (and (<= (* skoSC1 (* skoMC1 (* skoMC1 (* skoMC1 (- 1.))))) (* skoMC1 (* skoMC1 skoMC1))) (and (<= (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (+ (- 2.) (* skoMC1 (- 12.)))))) (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (+ 1. (* skoMC1 (- 6.)))))) (* skoSC1 (+ (* skoMC1 (* skoMC1 skoMC1)) (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (/ (- 1.) 12.)))) (* skoSC1 (* skoMC1 (* skoMC1 (* skoMC1 (/ (- 1.) 12.))))))))))))) (* skoMC1 (* skoMC1 (* skoMC1 (+ 2. (* skoMC1 6.)))))) (and (<= (* skoSC1 (* skoMC1 (* skoMC1 (* skoMC1 (- 2.))))) (* skoMC1 (* skoMC1 (* skoMC1 2.)))) (and (> (* skoSC1 (* skoMC1 (* skoMC1 (* skoMC1 2.)))) (* skoMC1 (* skoMC1 (* skoMC1 (- 2.))))) (and (<= (* skoMC1 (* skoMC1 (* skoMC1 (- 1.)))) 0.) (and (> (* skoSC1 (* skoMC1 (* skoMC1 skoMC1))) (* skoMC1 (* skoMC1 (* skoMC1 (- 1.))))) (and (<= (* skoMC1 (* skoMC1 (* skoMC1 (- 2.)))) 0.) (and (> (* skoMC1 (* skoMC1 (* skoMC1 2.))) 0.) (and (<= skoSC1 (/ 5. 4.)) (and (<= 2. skoMC1) (and (<= 0. skoSC1) (and (> skoMC1 0.) (and (<= 0. skoMC1) (and (> (* skoSC1 skoMC1) (* skoMC1 (- 1.))) (and (<= (* skoSC1 (* skoMC1 (- 1.))) skoMC1) (and (> (* skoSC1 (+ (* skoMC1 (+ (- 1.) (* skoMC1 3.))) (* skoSC1 (+ (* skoMC1 (+ (- 2.) (* skoMC1 (- 3.)))) (* skoSC1 (+ (* skoMC1 (* skoMC1 (- 1.))) (* skoSC1 (* skoMC1 (/ 1. 12.))))))))) (* skoMC1 (+ (- 2.) (* skoMC1 (- 5.))))) (and (<= (* skoSC1 (+ (* skoMC1 (+ 1. (* skoMC1 (- 3.)))) (* skoSC1 (+ (* skoMC1 (+ 2. (* skoMC1 3.))) (* skoSC1 (+ (* skoMC1 skoMC1) (* skoSC1 (* skoMC1 (/ (- 1.) 12.))))))))) (* skoMC1 (+ 2. (* skoMC1 5.)))) (and (> (* skoSC1 (+ (* skoMC1 (+ (- 1.) (* skoMC1 3.))) (* skoSC1 (+ (* skoMC1 (+ (- 2.) (* skoMC1 (- 3.)))) (* skoSC1 (+ (* skoMC1 (+ (/ 1. 6.) (* skoMC1 (- 1.)))) (* skoSC1 (* skoMC1 (/ 1. 4.))))))))) (* skoMC1 (+ (- 2.) (* skoMC1 (- 5.))))) (<= (* skoSC1 (+ (* skoMC1 (+ 1. (* skoMC1 (- 3.)))) (* skoSC1 (+ (* skoMC1 (+ 2. (* skoMC1 3.))) (* skoSC1 (+ (* skoMC1 (+ (/ (- 1.) 6.) skoMC1)) (* skoSC1 (* skoMC1 (/ (- 1.) 4.))))))))) (* skoMC1 (+ 2. (* skoMC1 5.))))))))))))))))))))))))))

% In GRF format:
(sequent " MetiTarski formula " (antecedent (<= (* skoSC1 (* skoMC1 (* skoMC1 (* skoMC1 (- 1.))))) (* skoMC1 (* skoMC1 skoMC1))) (<= (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (+ 1. (* skoMC1 (- 3.)))))) (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (+ 2. (* skoMC1 3.))))) (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (+ (/ (- 1.) 6.) skoMC1)))) (* skoSC1 (* skoMC1 (* skoMC1 (* skoMC1 (/ (- 1.) 4.))))))))))) (* skoMC1 (* skoMC1 (* skoMC1 (+ 2. (* skoMC1 5.)))))) (<= (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (+ 1. (* skoMC1 (- 3.)))))) (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (+ 2. (* skoMC1 3.))))) (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 skoMC1))) (* skoSC1 (* skoMC1 (* skoMC1 (* skoMC1 (/ (- 1.) 12.))))))))))) (* skoMC1 (* skoMC1 (* skoMC1 (+ 2. (* skoMC1 5.)))))) (<= (* skoSC1 (* skoMC1 (* skoMC1 (* skoMC1 (- 1.))))) (* skoMC1 (* skoMC1 skoMC1))) (<= (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (+ (- 2.) (* skoMC1 (- 12.)))))) (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (+ 1. (* skoMC1 (- 6.)))))) (* skoSC1 (+ (* skoMC1 (* skoMC1 skoMC1)) (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (/ (- 1.) 12.)))) (* skoSC1 (* skoMC1 (* skoMC1 (* skoMC1 (/ (- 1.) 12.))))))))))))) (* skoMC1 (* skoMC1 (* skoMC1 (+ 2. (* skoMC1 6.)))))) (<= (* skoSC1 (* skoMC1 (* skoMC1 (* skoMC1 (- 2.))))) (* skoMC1 (* skoMC1 (* skoMC1 2.)))) (> (* skoSC1 (* skoMC1 (* skoMC1 (* skoMC1 2.)))) (* skoMC1 (* skoMC1 (* skoMC1 (- 2.))))) (<= (* skoMC1 (* skoMC1 (* skoMC1 (- 1.)))) 0.) (> (* skoSC1 (* skoMC1 (* skoMC1 skoMC1))) (* skoMC1 (* skoMC1 (* skoMC1 (- 1.))))) (<= (* skoMC1 (* skoMC1 (* skoMC1 (- 2.)))) 0.) (> (* skoMC1 (* skoMC1 (* skoMC1 2.))) 0.) (<= skoSC1 (/ 5. 4.)) (<= 2. skoMC1) (<= 0. skoSC1) (> skoMC1 0.) (<= 0. skoMC1) (> (* skoSC1 skoMC1) (* skoMC1 (- 1.))) (<= (* skoSC1 (* skoMC1 (- 1.))) skoMC1) (> (* skoSC1 (+ (* skoMC1 (+ (- 1.) (* skoMC1 3.))) (* skoSC1 (+ (* skoMC1 (+ (- 2.) (* skoMC1 (- 3.)))) (* skoSC1 (+ (* skoMC1 (* skoMC1 (- 1.))) (* skoSC1 (* skoMC1 (/ 1. 12.))))))))) (* skoMC1 (+ (- 2.) (* skoMC1 (- 5.))))) (<= (* skoSC1 (+ (* skoMC1 (+ 1. (* skoMC1 (- 3.)))) (* skoSC1 (+ (* skoMC1 (+ 2. (* skoMC1 3.))) (* skoSC1 (+ (* skoMC1 skoMC1) (* skoSC1 (* skoMC1 (/ (- 1.) 12.))))))))) (* skoMC1 (+ 2. (* skoMC1 5.)))) (> (* skoSC1 (+ (* skoMC1 (+ (- 1.) (* skoMC1 3.))) (* skoSC1 (+ (* skoMC1 (+ (- 2.) (* skoMC1 (- 3.)))) (* skoSC1 (+ (* skoMC1 (+ (/ 1. 6.) (* skoMC1 (- 1.)))) (* skoSC1 (* skoMC1 (/ 1. 4.))))))))) (* skoMC1 (+ (- 2.) (* skoMC1 (- 5.)))))) (succedent (> (* skoSC1 (+ (* skoMC1 (+ 1. (* skoMC1 (- 3.)))) (* skoSC1 (+ (* skoMC1 (+ 2. (* skoMC1 3.))) (* skoSC1 (+ (* skoMC1 (+ (/ (- 1.) 6.) skoMC1)) (* skoSC1 (* skoMC1 (/ (- 1.) 4.))))))))) (* skoMC1 (+ 2. (* skoMC1 5.))))))
-----[end problem]-----

-----[begin problem]-----
% In Mathematica format:
Timing[Resolve[Exists[{skoSC1,skoMC1}, And[skoMC1*skoMC1*skoMC1*-2<=0,skoSC1*(skoMC1*skoMC1*skoMC1*(1+skoMC1*-3)+skoSC1*(skoMC1*skoMC1*skoMC1*(2+skoMC1*3)+skoSC1*(skoMC1*skoMC1*skoMC1*((-1/6)+skoMC1)+skoSC1*skoMC1*skoMC1*skoMC1*(-1/4))))<=skoMC1*skoMC1*skoMC1*(2+skoMC1*5),skoSC1*(skoMC1*skoMC1*skoMC1*(1+skoMC1*-3)+skoSC1*(skoMC1*skoMC1*skoMC1*(2+skoMC1*3)+skoSC1*(skoMC1*skoMC1*skoMC1*skoMC1+skoSC1*skoMC1*skoMC1*skoMC1*(-1/12))))<=skoMC1*skoMC1*skoMC1*(2+skoMC1*5),skoSC1*skoMC1*skoMC1*skoMC1*-1<=skoMC1*skoMC1*skoMC1,skoSC1*(skoMC1*skoMC1*skoMC1*(-2+skoMC1*-12)+skoSC1*(skoMC1*skoMC1*skoMC1*(1+skoMC1*-6)+skoSC1*(skoMC1*skoMC1*skoMC1+skoSC1*(skoMC1*skoMC1*skoMC1*(-1/12)+skoSC1*skoMC1*skoMC1*skoMC1*(-1/12)))))<=skoMC1*skoMC1*skoMC1*(2+skoMC1*6),skoSC1*skoMC1*skoMC1*skoMC1*-2<=skoMC1*skoMC1*skoMC1*2,skoSC1*skoMC1*skoMC1*skoMC1*2>skoMC1*skoMC1*skoMC1*-2,skoMC1*skoMC1*skoMC1*-1<=0,skoSC1*skoMC1*skoMC1*skoMC1>skoMC1*skoMC1*skoMC1*-1,skoMC1*skoMC1*skoMC1*-2<=0,skoMC1*skoMC1*skoMC1*2>0,skoSC1<=(5/4),2<=skoMC1,0<=skoSC1,skoMC1>0,0<=skoMC1,skoSC1*skoMC1>skoMC1*-1,skoSC1*skoMC1*-1<=skoMC1,skoSC1*(skoMC1*(-1+skoMC1*3)+skoSC1*(skoMC1*(-2+skoMC1*-3)+skoSC1*(skoMC1*skoMC1*-1+skoSC1*skoMC1*(1/12))))>skoMC1*(-2+skoMC1*-5),skoSC1*(skoMC1*(1+skoMC1*-3)+skoSC1*(skoMC1*(2+skoMC1*3)+skoSC1*(skoMC1*skoMC1+skoSC1*skoMC1*(-1/12))))<=skoMC1*(2+skoMC1*5),skoSC1*(skoMC1*(-1+skoMC1*3)+skoSC1*(skoMC1*(-2+skoMC1*-3)+skoSC1*(skoMC1*((1/6)+skoMC1*-1)+skoSC1*skoMC1*(1/4))))>skoMC1*(-2+skoMC1*-5),skoSC1*(skoMC1*(1+skoMC1*-3)+skoSC1*(skoMC1*(2+skoMC1*3)+skoSC1*(skoMC1*((-1/6)+skoMC1)+skoSC1*skoMC1*(-1/4))))<=skoMC1*(2+skoMC1*5)]], Reals]]

% In QepcadB format:
(E skoSC1) (E skoMC1) [[(skoMC1 skoMC1 skoMC1 (-2))<=0]/\[[(skoSC1 ((skoMC1 skoMC1 skoMC1 (1+(skoMC1 (-3))))+(skoSC1 ((skoMC1 skoMC1 skoMC1 (2+(skoMC1 (3))))+(skoSC1 ((skoMC1 skoMC1 skoMC1 (-1/6+skoMC1))+(skoSC1 skoMC1 skoMC1 skoMC1 (-1/4))))))))<=(skoMC1 skoMC1 skoMC1 (2+(skoMC1 (5))))]/\[[(skoSC1 ((skoMC1 skoMC1 skoMC1 (1+(skoMC1 (-3))))+(skoSC1 ((skoMC1 skoMC1 skoMC1 (2+(skoMC1 (3))))+(skoSC1 ((skoMC1 skoMC1 skoMC1 skoMC1)+(skoSC1 skoMC1 skoMC1 skoMC1 (-1/12))))))))<=(skoMC1 skoMC1 skoMC1 (2+(skoMC1 (5))))]/\[[(skoSC1 skoMC1 skoMC1 skoMC1 (-1))<=(skoMC1 skoMC1 skoMC1)]/\[[(skoSC1 ((skoMC1 skoMC1 skoMC1 (-2+(skoMC1 (-12))))+(skoSC1 ((skoMC1 skoMC1 skoMC1 (1+(skoMC1 (-6))))+(skoSC1 ((skoMC1 skoMC1 skoMC1)+(skoSC1 ((skoMC1 skoMC1 skoMC1 (-1/12))+(skoSC1 skoMC1 skoMC1 skoMC1 (-1/12))))))))))<=(skoMC1 skoMC1 skoMC1 (2+(skoMC1 (6))))]/\[[(skoSC1 skoMC1 skoMC1 skoMC1 (-2))<=(skoMC1 skoMC1 skoMC1 (2))]/\[[(skoMC1 skoMC1 skoMC1 (-2))<(skoSC1 skoMC1 skoMC1 skoMC1 (2))]/\[[(skoMC1 skoMC1 skoMC1 (-1))<=0]/\[[(skoMC1 skoMC1 skoMC1 (-1))<(skoSC1 skoMC1 skoMC1 skoMC1)]/\[[(skoMC1 skoMC1 skoMC1 (-2))<=0]/\[[0<(skoMC1 skoMC1 skoMC1 (2))]/\[[skoSC1<=5/4]/\[[2<=skoMC1]/\[[0<=skoSC1]/\[[0<skoMC1]/\[[0<=skoMC1]/\[[(skoMC1 (-1))<(skoSC1 skoMC1)]/\[[(skoSC1 skoMC1 (-1))<=skoMC1]/\[[(skoMC1 (-2+(skoMC1 (-5))))<(skoSC1 ((skoMC1 (-1+(skoMC1 (3))))+(skoSC1 ((skoMC1 (-2+(skoMC1 (-3))))+(skoSC1 ((skoMC1 skoMC1 (-1))+(skoSC1 skoMC1 (1/12))))))))]/\[[(skoSC1 ((skoMC1 (1+(skoMC1 (-3))))+(skoSC1 ((skoMC1 (2+(skoMC1 (3))))+(skoSC1 ((skoMC1 skoMC1)+(skoSC1 skoMC1 (-1/12))))))))<=(skoMC1 (2+(skoMC1 (5))))]/\[[(skoMC1 (-2+(skoMC1 (-5))))<(skoSC1 ((skoMC1 (-1+(skoMC1 (3))))+(skoSC1 ((skoMC1 (-2+(skoMC1 (-3))))+(skoSC1 ((skoMC1 (1/6+(skoMC1 (-1))))+(skoSC1 skoMC1 (1/4))))))))]/\[(skoSC1 ((skoMC1 (1+(skoMC1 (-3))))+(skoSC1 ((skoMC1 (2+(skoMC1 (3))))+(skoSC1 ((skoMC1 (-1/6+skoMC1))+(skoSC1 skoMC1 (-1/4))))))))<=(skoMC1 (2+(skoMC1 (5))))]]]]]]]]]]]]]]]]]]]]]].

% In SMTLib2 format:
(declare-fun skoSC1 () Real) (declare-fun skoMC1 () Real) (assert (and (<= (* skoMC1 (* skoMC1 (* skoMC1 (- 2.)))) 0.) (and (<= (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (+ 1. (* skoMC1 (- 3.)))))) (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (+ 2. (* skoMC1 3.))))) (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (+ (/ (- 1.) 6.) skoMC1)))) (* skoSC1 (* skoMC1 (* skoMC1 (* skoMC1 (/ (- 1.) 4.))))))))))) (* skoMC1 (* skoMC1 (* skoMC1 (+ 2. (* skoMC1 5.)))))) (and (<= (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (+ 1. (* skoMC1 (- 3.)))))) (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (+ 2. (* skoMC1 3.))))) (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 skoMC1))) (* skoSC1 (* skoMC1 (* skoMC1 (* skoMC1 (/ (- 1.) 12.))))))))))) (* skoMC1 (* skoMC1 (* skoMC1 (+ 2. (* skoMC1 5.)))))) (and (<= (* skoSC1 (* skoMC1 (* skoMC1 (* skoMC1 (- 1.))))) (* skoMC1 (* skoMC1 skoMC1))) (and (<= (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (+ (- 2.) (* skoMC1 (- 12.)))))) (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (+ 1. (* skoMC1 (- 6.)))))) (* skoSC1 (+ (* skoMC1 (* skoMC1 skoMC1)) (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (/ (- 1.) 12.)))) (* skoSC1 (* skoMC1 (* skoMC1 (* skoMC1 (/ (- 1.) 12.))))))))))))) (* skoMC1 (* skoMC1 (* skoMC1 (+ 2. (* skoMC1 6.)))))) (and (<= (* skoSC1 (* skoMC1 (* skoMC1 (* skoMC1 (- 2.))))) (* skoMC1 (* skoMC1 (* skoMC1 2.)))) (and (> (* skoSC1 (* skoMC1 (* skoMC1 (* skoMC1 2.)))) (* skoMC1 (* skoMC1 (* skoMC1 (- 2.))))) (and (<= (* skoMC1 (* skoMC1 (* skoMC1 (- 1.)))) 0.) (and (> (* skoSC1 (* skoMC1 (* skoMC1 skoMC1))) (* skoMC1 (* skoMC1 (* skoMC1 (- 1.))))) (and (<= (* skoMC1 (* skoMC1 (* skoMC1 (- 2.)))) 0.) (and (> (* skoMC1 (* skoMC1 (* skoMC1 2.))) 0.) (and (<= skoSC1 (/ 5. 4.)) (and (<= 2. skoMC1) (and (<= 0. skoSC1) (and (> skoMC1 0.) (and (<= 0. skoMC1) (and (> (* skoSC1 skoMC1) (* skoMC1 (- 1.))) (and (<= (* skoSC1 (* skoMC1 (- 1.))) skoMC1) (and (> (* skoSC1 (+ (* skoMC1 (+ (- 1.) (* skoMC1 3.))) (* skoSC1 (+ (* skoMC1 (+ (- 2.) (* skoMC1 (- 3.)))) (* skoSC1 (+ (* skoMC1 (* skoMC1 (- 1.))) (* skoSC1 (* skoMC1 (/ 1. 12.))))))))) (* skoMC1 (+ (- 2.) (* skoMC1 (- 5.))))) (and (<= (* skoSC1 (+ (* skoMC1 (+ 1. (* skoMC1 (- 3.)))) (* skoSC1 (+ (* skoMC1 (+ 2. (* skoMC1 3.))) (* skoSC1 (+ (* skoMC1 skoMC1) (* skoSC1 (* skoMC1 (/ (- 1.) 12.))))))))) (* skoMC1 (+ 2. (* skoMC1 5.)))) (and (> (* skoSC1 (+ (* skoMC1 (+ (- 1.) (* skoMC1 3.))) (* skoSC1 (+ (* skoMC1 (+ (- 2.) (* skoMC1 (- 3.)))) (* skoSC1 (+ (* skoMC1 (+ (/ 1. 6.) (* skoMC1 (- 1.)))) (* skoSC1 (* skoMC1 (/ 1. 4.))))))))) (* skoMC1 (+ (- 2.) (* skoMC1 (- 5.))))) (<= (* skoSC1 (+ (* skoMC1 (+ 1. (* skoMC1 (- 3.)))) (* skoSC1 (+ (* skoMC1 (+ 2. (* skoMC1 3.))) (* skoSC1 (+ (* skoMC1 (+ (/ (- 1.) 6.) skoMC1)) (* skoSC1 (* skoMC1 (/ (- 1.) 4.))))))))) (* skoMC1 (+ 2. (* skoMC1 5.))))))))))))))))))))))))))

% In GRF format:
(sequent " MetiTarski formula " (antecedent (<= (* skoMC1 (* skoMC1 (* skoMC1 (- 2.)))) 0.) (<= (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (+ 1. (* skoMC1 (- 3.)))))) (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (+ 2. (* skoMC1 3.))))) (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (+ (/ (- 1.) 6.) skoMC1)))) (* skoSC1 (* skoMC1 (* skoMC1 (* skoMC1 (/ (- 1.) 4.))))))))))) (* skoMC1 (* skoMC1 (* skoMC1 (+ 2. (* skoMC1 5.)))))) (<= (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (+ 1. (* skoMC1 (- 3.)))))) (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (+ 2. (* skoMC1 3.))))) (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 skoMC1))) (* skoSC1 (* skoMC1 (* skoMC1 (* skoMC1 (/ (- 1.) 12.))))))))))) (* skoMC1 (* skoMC1 (* skoMC1 (+ 2. (* skoMC1 5.)))))) (<= (* skoSC1 (* skoMC1 (* skoMC1 (* skoMC1 (- 1.))))) (* skoMC1 (* skoMC1 skoMC1))) (<= (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (+ (- 2.) (* skoMC1 (- 12.)))))) (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (+ 1. (* skoMC1 (- 6.)))))) (* skoSC1 (+ (* skoMC1 (* skoMC1 skoMC1)) (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (/ (- 1.) 12.)))) (* skoSC1 (* skoMC1 (* skoMC1 (* skoMC1 (/ (- 1.) 12.))))))))))))) (* skoMC1 (* skoMC1 (* skoMC1 (+ 2. (* skoMC1 6.)))))) (<= (* skoSC1 (* skoMC1 (* skoMC1 (* skoMC1 (- 2.))))) (* skoMC1 (* skoMC1 (* skoMC1 2.)))) (> (* skoSC1 (* skoMC1 (* skoMC1 (* skoMC1 2.)))) (* skoMC1 (* skoMC1 (* skoMC1 (- 2.))))) (<= (* skoMC1 (* skoMC1 (* skoMC1 (- 1.)))) 0.) (> (* skoSC1 (* skoMC1 (* skoMC1 skoMC1))) (* skoMC1 (* skoMC1 (* skoMC1 (- 1.))))) (<= (* skoMC1 (* skoMC1 (* skoMC1 (- 2.)))) 0.) (> (* skoMC1 (* skoMC1 (* skoMC1 2.))) 0.) (<= skoSC1 (/ 5. 4.)) (<= 2. skoMC1) (<= 0. skoSC1) (> skoMC1 0.) (<= 0. skoMC1) (> (* skoSC1 skoMC1) (* skoMC1 (- 1.))) (<= (* skoSC1 (* skoMC1 (- 1.))) skoMC1) (> (* skoSC1 (+ (* skoMC1 (+ (- 1.) (* skoMC1 3.))) (* skoSC1 (+ (* skoMC1 (+ (- 2.) (* skoMC1 (- 3.)))) (* skoSC1 (+ (* skoMC1 (* skoMC1 (- 1.))) (* skoSC1 (* skoMC1 (/ 1. 12.))))))))) (* skoMC1 (+ (- 2.) (* skoMC1 (- 5.))))) (<= (* skoSC1 (+ (* skoMC1 (+ 1. (* skoMC1 (- 3.)))) (* skoSC1 (+ (* skoMC1 (+ 2. (* skoMC1 3.))) (* skoSC1 (+ (* skoMC1 skoMC1) (* skoSC1 (* skoMC1 (/ (- 1.) 12.))))))))) (* skoMC1 (+ 2. (* skoMC1 5.)))) (> (* skoSC1 (+ (* skoMC1 (+ (- 1.) (* skoMC1 3.))) (* skoSC1 (+ (* skoMC1 (+ (- 2.) (* skoMC1 (- 3.)))) (* skoSC1 (+ (* skoMC1 (+ (/ 1. 6.) (* skoMC1 (- 1.)))) (* skoSC1 (* skoMC1 (/ 1. 4.))))))))) (* skoMC1 (+ (- 2.) (* skoMC1 (- 5.)))))) (succedent (> (* skoSC1 (+ (* skoMC1 (+ 1. (* skoMC1 (- 3.)))) (* skoSC1 (+ (* skoMC1 (+ 2. (* skoMC1 3.))) (* skoSC1 (+ (* skoMC1 (+ (/ (- 1.) 6.) skoMC1)) (* skoSC1 (* skoMC1 (/ (- 1.) 4.))))))))) (* skoMC1 (+ 2. (* skoMC1 5.))))))
-----[end problem]-----

-----[begin problem]-----
% In Mathematica format:
Timing[Resolve[Exists[{skoSC1,skoMC1}, And[skoSC1*(skoMC1*skoMC1*skoMC1*(-1+skoMC1*3)+skoSC1*(skoMC1*skoMC1*skoMC1*(-2+skoMC1*-3)+skoSC1*skoMC1*skoMC1*skoMC1*skoMC1*-1))<=skoMC1*skoMC1*skoMC1*(-2+skoMC1*-5),skoMC1*skoMC1*skoMC1*2>0,skoSC1*(skoMC1*skoMC1*skoMC1*(1+skoMC1*-3)+skoSC1*(skoMC1*skoMC1*skoMC1*(2+skoMC1*3)+skoSC1*(skoMC1*skoMC1*skoMC1*((-1/6)+skoMC1)+skoSC1*skoMC1*skoMC1*skoMC1*(-1/4))))<=skoMC1*skoMC1*skoMC1*(2+skoMC1*5),skoSC1*(skoMC1*skoMC1*skoMC1*(1+skoMC1*-3)+skoSC1*(skoMC1*skoMC1*skoMC1*(2+skoMC1*3)+skoSC1*(skoMC1*skoMC1*skoMC1*skoMC1+skoSC1*skoMC1*skoMC1*skoMC1*(-1/12))))<=skoMC1*skoMC1*skoMC1*(2+skoMC1*5),skoSC1*skoMC1*skoMC1*skoMC1*-1<=skoMC1*skoMC1*skoMC1,skoSC1*(skoMC1*skoMC1*skoMC1*(-2+skoMC1*-12)+skoSC1*(skoMC1*skoMC1*skoMC1*(1+skoMC1*-6)+skoSC1*(skoMC1*skoMC1*skoMC1+skoSC1*(skoMC1*skoMC1*skoMC1*(-1/12)+skoSC1*skoMC1*skoMC1*skoMC1*(-1/12)))))<=skoMC1*skoMC1*skoMC1*(2+skoMC1*6),skoSC1*skoMC1*skoMC1*skoMC1*-2<=skoMC1*skoMC1*skoMC1*2,skoSC1*skoMC1*skoMC1*skoMC1*2>skoMC1*skoMC1*skoMC1*-2,skoMC1*skoMC1*skoMC1*-1<=0,skoSC1*skoMC1*skoMC1*skoMC1>skoMC1*skoMC1*skoMC1*-1,skoMC1*skoMC1*skoMC1*-2<=0,skoMC1*skoMC1*skoMC1*2>0,skoSC1<=(5/4),2<=skoMC1,0<=skoSC1,skoMC1>0,0<=skoMC1,skoSC1*skoMC1>skoMC1*-1,skoSC1*skoMC1*-1<=skoMC1,skoSC1*(skoMC1*(-1+skoMC1*3)+skoSC1*(skoMC1*(-2+skoMC1*-3)+skoSC1*(skoMC1*skoMC1*-1+skoSC1*skoMC1*(1/12))))>skoMC1*(-2+skoMC1*-5),skoSC1*(skoMC1*(1+skoMC1*-3)+skoSC1*(skoMC1*(2+skoMC1*3)+skoSC1*(skoMC1*skoMC1+skoSC1*skoMC1*(-1/12))))<=skoMC1*(2+skoMC1*5),skoSC1*(skoMC1*(-1+skoMC1*3)+skoSC1*(skoMC1*(-2+skoMC1*-3)+skoSC1*(skoMC1*((1/6)+skoMC1*-1)+skoSC1*skoMC1*(1/4))))>skoMC1*(-2+skoMC1*-5),skoSC1*(skoMC1*(1+skoMC1*-3)+skoSC1*(skoMC1*(2+skoMC1*3)+skoSC1*(skoMC1*((-1/6)+skoMC1)+skoSC1*skoMC1*(-1/4))))<=skoMC1*(2+skoMC1*5)]], Reals]]

% In QepcadB format:
(E skoSC1) (E skoMC1) [[(skoSC1 ((skoMC1 skoMC1 skoMC1 (-1+(skoMC1 (3))))+(skoSC1 ((skoMC1 skoMC1 skoMC1 (-2+(skoMC1 (-3))))+(skoSC1 skoMC1 skoMC1 skoMC1 skoMC1 (-1))))))<=(skoMC1 skoMC1 skoMC1 (-2+(skoMC1 (-5))))]/\[[0<(skoMC1 skoMC1 skoMC1 (2))]/\[[(skoSC1 ((skoMC1 skoMC1 skoMC1 (1+(skoMC1 (-3))))+(skoSC1 ((skoMC1 skoMC1 skoMC1 (2+(skoMC1 (3))))+(skoSC1 ((skoMC1 skoMC1 skoMC1 (-1/6+skoMC1))+(skoSC1 skoMC1 skoMC1 skoMC1 (-1/4))))))))<=(skoMC1 skoMC1 skoMC1 (2+(skoMC1 (5))))]/\[[(skoSC1 ((skoMC1 skoMC1 skoMC1 (1+(skoMC1 (-3))))+(skoSC1 ((skoMC1 skoMC1 skoMC1 (2+(skoMC1 (3))))+(skoSC1 ((skoMC1 skoMC1 skoMC1 skoMC1)+(skoSC1 skoMC1 skoMC1 skoMC1 (-1/12))))))))<=(skoMC1 skoMC1 skoMC1 (2+(skoMC1 (5))))]/\[[(skoSC1 skoMC1 skoMC1 skoMC1 (-1))<=(skoMC1 skoMC1 skoMC1)]/\[[(skoSC1 ((skoMC1 skoMC1 skoMC1 (-2+(skoMC1 (-12))))+(skoSC1 ((skoMC1 skoMC1 skoMC1 (1+(skoMC1 (-6))))+(skoSC1 ((skoMC1 skoMC1 skoMC1)+(skoSC1 ((skoMC1 skoMC1 skoMC1 (-1/12))+(skoSC1 skoMC1 skoMC1 skoMC1 (-1/12))))))))))<=(skoMC1 skoMC1 skoMC1 (2+(skoMC1 (6))))]/\[[(skoSC1 skoMC1 skoMC1 skoMC1 (-2))<=(skoMC1 skoMC1 skoMC1 (2))]/\[[(skoMC1 skoMC1 skoMC1 (-2))<(skoSC1 skoMC1 skoMC1 skoMC1 (2))]/\[[(skoMC1 skoMC1 skoMC1 (-1))<=0]/\[[(skoMC1 skoMC1 skoMC1 (-1))<(skoSC1 skoMC1 skoMC1 skoMC1)]/\[[(skoMC1 skoMC1 skoMC1 (-2))<=0]/\[[0<(skoMC1 skoMC1 skoMC1 (2))]/\[[skoSC1<=5/4]/\[[2<=skoMC1]/\[[0<=skoSC1]/\[[0<skoMC1]/\[[0<=skoMC1]/\[[(skoMC1 (-1))<(skoSC1 skoMC1)]/\[[(skoSC1 skoMC1 (-1))<=skoMC1]/\[[(skoMC1 (-2+(skoMC1 (-5))))<(skoSC1 ((skoMC1 (-1+(skoMC1 (3))))+(skoSC1 ((skoMC1 (-2+(skoMC1 (-3))))+(skoSC1 ((skoMC1 skoMC1 (-1))+(skoSC1 skoMC1 (1/12))))))))]/\[[(skoSC1 ((skoMC1 (1+(skoMC1 (-3))))+(skoSC1 ((skoMC1 (2+(skoMC1 (3))))+(skoSC1 ((skoMC1 skoMC1)+(skoSC1 skoMC1 (-1/12))))))))<=(skoMC1 (2+(skoMC1 (5))))]/\[[(skoMC1 (-2+(skoMC1 (-5))))<(skoSC1 ((skoMC1 (-1+(skoMC1 (3))))+(skoSC1 ((skoMC1 (-2+(skoMC1 (-3))))+(skoSC1 ((skoMC1 (1/6+(skoMC1 (-1))))+(skoSC1 skoMC1 (1/4))))))))]/\[(skoSC1 ((skoMC1 (1+(skoMC1 (-3))))+(skoSC1 ((skoMC1 (2+(skoMC1 (3))))+(skoSC1 ((skoMC1 (-1/6+skoMC1))+(skoSC1 skoMC1 (-1/4))))))))<=(skoMC1 (2+(skoMC1 (5))))]]]]]]]]]]]]]]]]]]]]]]].

% In SMTLib2 format:
(declare-fun skoSC1 () Real) (declare-fun skoMC1 () Real) (assert (and (<= (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (+ (- 1.) (* skoMC1 3.))))) (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (+ (- 2.) (* skoMC1 (- 3.)))))) (* skoSC1 (* skoMC1 (* skoMC1 (* skoMC1 (* skoMC1 (- 1.)))))))))) (* skoMC1 (* skoMC1 (* skoMC1 (+ (- 2.) (* skoMC1 (- 5.))))))) (and (> (* skoMC1 (* skoMC1 (* skoMC1 2.))) 0.) (and (<= (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (+ 1. (* skoMC1 (- 3.)))))) (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (+ 2. (* skoMC1 3.))))) (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (+ (/ (- 1.) 6.) skoMC1)))) (* skoSC1 (* skoMC1 (* skoMC1 (* skoMC1 (/ (- 1.) 4.))))))))))) (* skoMC1 (* skoMC1 (* skoMC1 (+ 2. (* skoMC1 5.)))))) (and (<= (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (+ 1. (* skoMC1 (- 3.)))))) (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (+ 2. (* skoMC1 3.))))) (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 skoMC1))) (* skoSC1 (* skoMC1 (* skoMC1 (* skoMC1 (/ (- 1.) 12.))))))))))) (* skoMC1 (* skoMC1 (* skoMC1 (+ 2. (* skoMC1 5.)))))) (and (<= (* skoSC1 (* skoMC1 (* skoMC1 (* skoMC1 (- 1.))))) (* skoMC1 (* skoMC1 skoMC1))) (and (<= (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (+ (- 2.) (* skoMC1 (- 12.)))))) (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (+ 1. (* skoMC1 (- 6.)))))) (* skoSC1 (+ (* skoMC1 (* skoMC1 skoMC1)) (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (/ (- 1.) 12.)))) (* skoSC1 (* skoMC1 (* skoMC1 (* skoMC1 (/ (- 1.) 12.))))))))))))) (* skoMC1 (* skoMC1 (* skoMC1 (+ 2. (* skoMC1 6.)))))) (and (<= (* skoSC1 (* skoMC1 (* skoMC1 (* skoMC1 (- 2.))))) (* skoMC1 (* skoMC1 (* skoMC1 2.)))) (and (> (* skoSC1 (* skoMC1 (* skoMC1 (* skoMC1 2.)))) (* skoMC1 (* skoMC1 (* skoMC1 (- 2.))))) (and (<= (* skoMC1 (* skoMC1 (* skoMC1 (- 1.)))) 0.) (and (> (* skoSC1 (* skoMC1 (* skoMC1 skoMC1))) (* skoMC1 (* skoMC1 (* skoMC1 (- 1.))))) (and (<= (* skoMC1 (* skoMC1 (* skoMC1 (- 2.)))) 0.) (and (> (* skoMC1 (* skoMC1 (* skoMC1 2.))) 0.) (and (<= skoSC1 (/ 5. 4.)) (and (<= 2. skoMC1) (and (<= 0. skoSC1) (and (> skoMC1 0.) (and (<= 0. skoMC1) (and (> (* skoSC1 skoMC1) (* skoMC1 (- 1.))) (and (<= (* skoSC1 (* skoMC1 (- 1.))) skoMC1) (and (> (* skoSC1 (+ (* skoMC1 (+ (- 1.) (* skoMC1 3.))) (* skoSC1 (+ (* skoMC1 (+ (- 2.) (* skoMC1 (- 3.)))) (* skoSC1 (+ (* skoMC1 (* skoMC1 (- 1.))) (* skoSC1 (* skoMC1 (/ 1. 12.))))))))) (* skoMC1 (+ (- 2.) (* skoMC1 (- 5.))))) (and (<= (* skoSC1 (+ (* skoMC1 (+ 1. (* skoMC1 (- 3.)))) (* skoSC1 (+ (* skoMC1 (+ 2. (* skoMC1 3.))) (* skoSC1 (+ (* skoMC1 skoMC1) (* skoSC1 (* skoMC1 (/ (- 1.) 12.))))))))) (* skoMC1 (+ 2. (* skoMC1 5.)))) (and (> (* skoSC1 (+ (* skoMC1 (+ (- 1.) (* skoMC1 3.))) (* skoSC1 (+ (* skoMC1 (+ (- 2.) (* skoMC1 (- 3.)))) (* skoSC1 (+ (* skoMC1 (+ (/ 1. 6.) (* skoMC1 (- 1.)))) (* skoSC1 (* skoMC1 (/ 1. 4.))))))))) (* skoMC1 (+ (- 2.) (* skoMC1 (- 5.))))) (<= (* skoSC1 (+ (* skoMC1 (+ 1. (* skoMC1 (- 3.)))) (* skoSC1 (+ (* skoMC1 (+ 2. (* skoMC1 3.))) (* skoSC1 (+ (* skoMC1 (+ (/ (- 1.) 6.) skoMC1)) (* skoSC1 (* skoMC1 (/ (- 1.) 4.))))))))) (* skoMC1 (+ 2. (* skoMC1 5.)))))))))))))))))))))))))))

% In GRF format:
(sequent " MetiTarski formula " (antecedent (<= (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (+ (- 1.) (* skoMC1 3.))))) (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (+ (- 2.) (* skoMC1 (- 3.)))))) (* skoSC1 (* skoMC1 (* skoMC1 (* skoMC1 (* skoMC1 (- 1.)))))))))) (* skoMC1 (* skoMC1 (* skoMC1 (+ (- 2.) (* skoMC1 (- 5.))))))) (> (* skoMC1 (* skoMC1 (* skoMC1 2.))) 0.) (<= (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (+ 1. (* skoMC1 (- 3.)))))) (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (+ 2. (* skoMC1 3.))))) (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (+ (/ (- 1.) 6.) skoMC1)))) (* skoSC1 (* skoMC1 (* skoMC1 (* skoMC1 (/ (- 1.) 4.))))))))))) (* skoMC1 (* skoMC1 (* skoMC1 (+ 2. (* skoMC1 5.)))))) (<= (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (+ 1. (* skoMC1 (- 3.)))))) (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (+ 2. (* skoMC1 3.))))) (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 skoMC1))) (* skoSC1 (* skoMC1 (* skoMC1 (* skoMC1 (/ (- 1.) 12.))))))))))) (* skoMC1 (* skoMC1 (* skoMC1 (+ 2. (* skoMC1 5.)))))) (<= (* skoSC1 (* skoMC1 (* skoMC1 (* skoMC1 (- 1.))))) (* skoMC1 (* skoMC1 skoMC1))) (<= (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (+ (- 2.) (* skoMC1 (- 12.)))))) (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (+ 1. (* skoMC1 (- 6.)))))) (* skoSC1 (+ (* skoMC1 (* skoMC1 skoMC1)) (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (/ (- 1.) 12.)))) (* skoSC1 (* skoMC1 (* skoMC1 (* skoMC1 (/ (- 1.) 12.))))))))))))) (* skoMC1 (* skoMC1 (* skoMC1 (+ 2. (* skoMC1 6.)))))) (<= (* skoSC1 (* skoMC1 (* skoMC1 (* skoMC1 (- 2.))))) (* skoMC1 (* skoMC1 (* skoMC1 2.)))) (> (* skoSC1 (* skoMC1 (* skoMC1 (* skoMC1 2.)))) (* skoMC1 (* skoMC1 (* skoMC1 (- 2.))))) (<= (* skoMC1 (* skoMC1 (* skoMC1 (- 1.)))) 0.) (> (* skoSC1 (* skoMC1 (* skoMC1 skoMC1))) (* skoMC1 (* skoMC1 (* skoMC1 (- 1.))))) (<= (* skoMC1 (* skoMC1 (* skoMC1 (- 2.)))) 0.) (> (* skoMC1 (* skoMC1 (* skoMC1 2.))) 0.) (<= skoSC1 (/ 5. 4.)) (<= 2. skoMC1) (<= 0. skoSC1) (> skoMC1 0.) (<= 0. skoMC1) (> (* skoSC1 skoMC1) (* skoMC1 (- 1.))) (<= (* skoSC1 (* skoMC1 (- 1.))) skoMC1) (> (* skoSC1 (+ (* skoMC1 (+ (- 1.) (* skoMC1 3.))) (* skoSC1 (+ (* skoMC1 (+ (- 2.) (* skoMC1 (- 3.)))) (* skoSC1 (+ (* skoMC1 (* skoMC1 (- 1.))) (* skoSC1 (* skoMC1 (/ 1. 12.))))))))) (* skoMC1 (+ (- 2.) (* skoMC1 (- 5.))))) (<= (* skoSC1 (+ (* skoMC1 (+ 1. (* skoMC1 (- 3.)))) (* skoSC1 (+ (* skoMC1 (+ 2. (* skoMC1 3.))) (* skoSC1 (+ (* skoMC1 skoMC1) (* skoSC1 (* skoMC1 (/ (- 1.) 12.))))))))) (* skoMC1 (+ 2. (* skoMC1 5.)))) (> (* skoSC1 (+ (* skoMC1 (+ (- 1.) (* skoMC1 3.))) (* skoSC1 (+ (* skoMC1 (+ (- 2.) (* skoMC1 (- 3.)))) (* skoSC1 (+ (* skoMC1 (+ (/ 1. 6.) (* skoMC1 (- 1.)))) (* skoSC1 (* skoMC1 (/ 1. 4.))))))))) (* skoMC1 (+ (- 2.) (* skoMC1 (- 5.)))))) (succedent (> (* skoSC1 (+ (* skoMC1 (+ 1. (* skoMC1 (- 3.)))) (* skoSC1 (+ (* skoMC1 (+ 2. (* skoMC1 3.))) (* skoSC1 (+ (* skoMC1 (+ (/ (- 1.) 6.) skoMC1)) (* skoSC1 (* skoMC1 (/ (- 1.) 4.))))))))) (* skoMC1 (+ 2. (* skoMC1 5.))))))
-----[end problem]-----

-----[begin problem]-----
% In Mathematica format:
Timing[Resolve[Exists[{skoSC1,skoMC1}, And[skoSC1*(skoMC1*(1+skoMC1*-3)+skoSC1*(skoMC1*(2+skoMC1*3)+skoSC1*(skoMC1*skoMC1+skoSC1*(skoMC1*(-1/12)+skoSC1*skoSC1*(skoMC1*(1/360)+skoSC1*skoSC1*(skoMC1*(-1/20160)+skoSC1*skoSC1*(skoMC1*(1/1814400)+skoSC1*skoSC1*skoMC1*(-1/239500800))))))))<=skoMC1*(2+skoMC1*5),skoSC1<=0,skoMC1>0,skoSC1*(skoMC1*(1+skoMC1*-3)+skoSC1*(skoMC1*(2+skoMC1*3)+skoSC1*(skoMC1*((-1/6)+skoMC1)+skoSC1*skoMC1*(-1/4))))<=skoMC1*(2+skoMC1*5),skoSC1*(skoMC1*(1+skoMC1*-3)+skoSC1*(skoMC1*(2+skoMC1*3)+skoSC1*(skoMC1*skoMC1+skoSC1*skoMC1*(-1/12))))<=skoMC1*(2+skoMC1*5),skoSC1*skoMC1*-1<=skoMC1,skoSC1*skoMC1>skoMC1*-1,0<=skoMC1,skoMC1>0,0<=skoSC1,2<=skoMC1,skoSC1<=(5/4)]], Reals]]

% In QepcadB format:
(E skoSC1) (E skoMC1) [[(skoSC1 ((skoMC1 (1+(skoMC1 (-3))))+(skoSC1 ((skoMC1 (2+(skoMC1 (3))))+(skoSC1 ((skoMC1 skoMC1)+(skoSC1 ((skoMC1 (-1/12))+(skoSC1 skoSC1 ((skoMC1 (1/360))+(skoSC1 skoSC1 ((skoMC1 (-1/20160))+(skoSC1 skoSC1 ((skoMC1 (1/1814400))+(skoSC1 skoSC1 skoMC1 (-1/239500800))))))))))))))))<=(skoMC1 (2+(skoMC1 (5))))]/\[[skoSC1<=0]/\[[0<skoMC1]/\[[(skoSC1 ((skoMC1 (1+(skoMC1 (-3))))+(skoSC1 ((skoMC1 (2+(skoMC1 (3))))+(skoSC1 ((skoMC1 (-1/6+skoMC1))+(skoSC1 skoMC1 (-1/4))))))))<=(skoMC1 (2+(skoMC1 (5))))]/\[[(skoSC1 ((skoMC1 (1+(skoMC1 (-3))))+(skoSC1 ((skoMC1 (2+(skoMC1 (3))))+(skoSC1 ((skoMC1 skoMC1)+(skoSC1 skoMC1 (-1/12))))))))<=(skoMC1 (2+(skoMC1 (5))))]/\[[(skoSC1 skoMC1 (-1))<=skoMC1]/\[[(skoMC1 (-1))<(skoSC1 skoMC1)]/\[[0<=skoMC1]/\[[0<skoMC1]/\[[0<=skoSC1]/\[[2<=skoMC1]/\[skoSC1<=5/4]]]]]]]]]]]].

% In SMTLib2 format:
(declare-fun skoSC1 () Real) (declare-fun skoMC1 () Real) (assert (and (<= (* skoSC1 (+ (* skoMC1 (+ 1. (* skoMC1 (- 3.)))) (* skoSC1 (+ (* skoMC1 (+ 2. (* skoMC1 3.))) (* skoSC1 (+ (* skoMC1 skoMC1) (* skoSC1 (+ (* skoMC1 (/ (- 1.) 12.)) (* skoSC1 (* skoSC1 (+ (* skoMC1 (/ 1. 360.)) (* skoSC1 (* skoSC1 (+ (* skoMC1 (/ (- 1.) 20160.)) (* skoSC1 (* skoSC1 (+ (* skoMC1 (/ 1. 1814400.)) (* skoSC1 (* skoSC1 (* skoMC1 (/ (- 1.) 239500800.))))))))))))))))))))) (* skoMC1 (+ 2. (* skoMC1 5.)))) (and (<= skoSC1 0.) (and (> skoMC1 0.) (and (<= (* skoSC1 (+ (* skoMC1 (+ 1. (* skoMC1 (- 3.)))) (* skoSC1 (+ (* skoMC1 (+ 2. (* skoMC1 3.))) (* skoSC1 (+ (* skoMC1 (+ (/ (- 1.) 6.) skoMC1)) (* skoSC1 (* skoMC1 (/ (- 1.) 4.))))))))) (* skoMC1 (+ 2. (* skoMC1 5.)))) (and (<= (* skoSC1 (+ (* skoMC1 (+ 1. (* skoMC1 (- 3.)))) (* skoSC1 (+ (* skoMC1 (+ 2. (* skoMC1 3.))) (* skoSC1 (+ (* skoMC1 skoMC1) (* skoSC1 (* skoMC1 (/ (- 1.) 12.))))))))) (* skoMC1 (+ 2. (* skoMC1 5.)))) (and (<= (* skoSC1 (* skoMC1 (- 1.))) skoMC1) (and (> (* skoSC1 skoMC1) (* skoMC1 (- 1.))) (and (<= 0. skoMC1) (and (> skoMC1 0.) (and (<= 0. skoSC1) (and (<= 2. skoMC1) (<= skoSC1 (/ 5. 4.))))))))))))))

% In GRF format:
(sequent " MetiTarski formula " (antecedent (<= (* skoSC1 (+ (* skoMC1 (+ 1. (* skoMC1 (- 3.)))) (* skoSC1 (+ (* skoMC1 (+ 2. (* skoMC1 3.))) (* skoSC1 (+ (* skoMC1 skoMC1) (* skoSC1 (+ (* skoMC1 (/ (- 1.) 12.)) (* skoSC1 (* skoSC1 (+ (* skoMC1 (/ 1. 360.)) (* skoSC1 (* skoSC1 (+ (* skoMC1 (/ (- 1.) 20160.)) (* skoSC1 (* skoSC1 (+ (* skoMC1 (/ 1. 1814400.)) (* skoSC1 (* skoSC1 (* skoMC1 (/ (- 1.) 239500800.))))))))))))))))))))) (* skoMC1 (+ 2. (* skoMC1 5.)))) (<= skoSC1 0.) (> skoMC1 0.) (<= (* skoSC1 (+ (* skoMC1 (+ 1. (* skoMC1 (- 3.)))) (* skoSC1 (+ (* skoMC1 (+ 2. (* skoMC1 3.))) (* skoSC1 (+ (* skoMC1 (+ (/ (- 1.) 6.) skoMC1)) (* skoSC1 (* skoMC1 (/ (- 1.) 4.))))))))) (* skoMC1 (+ 2. (* skoMC1 5.)))) (<= (* skoSC1 (+ (* skoMC1 (+ 1. (* skoMC1 (- 3.)))) (* skoSC1 (+ (* skoMC1 (+ 2. (* skoMC1 3.))) (* skoSC1 (+ (* skoMC1 skoMC1) (* skoSC1 (* skoMC1 (/ (- 1.) 12.))))))))) (* skoMC1 (+ 2. (* skoMC1 5.)))) (<= (* skoSC1 (* skoMC1 (- 1.))) skoMC1) (> (* skoSC1 skoMC1) (* skoMC1 (- 1.))) (<= 0. skoMC1) (> skoMC1 0.) (<= 0. skoSC1) (<= 2. skoMC1)) (succedent (> skoSC1 (/ 5. 4.))))
-----[end problem]-----

-----[begin problem]-----
% In Mathematica format:
Timing[Resolve[Exists[{skoSC1,skoMC1}, And[skoSC1*(skoMC1*(1+skoMC1*-3)+skoSC1*(skoMC1*(2+skoMC1*3)+skoSC1*(skoMC1*skoMC1+skoSC1*(skoMC1*(-1/12)+skoSC1*skoSC1*(skoMC1*(1/360)+skoSC1*skoSC1*(skoMC1*(-1/20160)+skoSC1*skoSC1*(skoMC1*(1/1814400)+skoSC1*skoSC1*skoMC1*(-1/239500800))))))))>skoMC1*(2+skoMC1*5),skoMC1>0,skoSC1>0,skoSC1*(skoMC1*(1+skoMC1*-3)+skoSC1*(skoMC1*(2+skoMC1*3)+skoSC1*(skoMC1*((-1/6)+skoMC1)+skoSC1*skoMC1*(-1/4))))<=skoMC1*(2+skoMC1*5),skoSC1*(skoMC1*(1+skoMC1*-3)+skoSC1*(skoMC1*(2+skoMC1*3)+skoSC1*(skoMC1*skoMC1+skoSC1*skoMC1*(-1/12))))<=skoMC1*(2+skoMC1*5),skoSC1*skoMC1*-1<=skoMC1,skoSC1*skoMC1>skoMC1*-1,0<=skoMC1,skoMC1>0,0<=skoSC1,2<=skoMC1,skoSC1<=(5/4)]], Reals]]

% In QepcadB format:
(E skoSC1) (E skoMC1) [[(skoMC1 (2+(skoMC1 (5))))<(skoSC1 ((skoMC1 (1+(skoMC1 (-3))))+(skoSC1 ((skoMC1 (2+(skoMC1 (3))))+(skoSC1 ((skoMC1 skoMC1)+(skoSC1 ((skoMC1 (-1/12))+(skoSC1 skoSC1 ((skoMC1 (1/360))+(skoSC1 skoSC1 ((skoMC1 (-1/20160))+(skoSC1 skoSC1 ((skoMC1 (1/1814400))+(skoSC1 skoSC1 skoMC1 (-1/239500800))))))))))))))))]/\[[0<skoMC1]/\[[0<skoSC1]/\[[(skoSC1 ((skoMC1 (1+(skoMC1 (-3))))+(skoSC1 ((skoMC1 (2+(skoMC1 (3))))+(skoSC1 ((skoMC1 (-1/6+skoMC1))+(skoSC1 skoMC1 (-1/4))))))))<=(skoMC1 (2+(skoMC1 (5))))]/\[[(skoSC1 ((skoMC1 (1+(skoMC1 (-3))))+(skoSC1 ((skoMC1 (2+(skoMC1 (3))))+(skoSC1 ((skoMC1 skoMC1)+(skoSC1 skoMC1 (-1/12))))))))<=(skoMC1 (2+(skoMC1 (5))))]/\[[(skoSC1 skoMC1 (-1))<=skoMC1]/\[[(skoMC1 (-1))<(skoSC1 skoMC1)]/\[[0<=skoMC1]/\[[0<skoMC1]/\[[0<=skoSC1]/\[[2<=skoMC1]/\[skoSC1<=5/4]]]]]]]]]]]].

% In SMTLib2 format:
(declare-fun skoSC1 () Real) (declare-fun skoMC1 () Real) (assert (and (> (* skoSC1 (+ (* skoMC1 (+ 1. (* skoMC1 (- 3.)))) (* skoSC1 (+ (* skoMC1 (+ 2. (* skoMC1 3.))) (* skoSC1 (+ (* skoMC1 skoMC1) (* skoSC1 (+ (* skoMC1 (/ (- 1.) 12.)) (* skoSC1 (* skoSC1 (+ (* skoMC1 (/ 1. 360.)) (* skoSC1 (* skoSC1 (+ (* skoMC1 (/ (- 1.) 20160.)) (* skoSC1 (* skoSC1 (+ (* skoMC1 (/ 1. 1814400.)) (* skoSC1 (* skoSC1 (* skoMC1 (/ (- 1.) 239500800.))))))))))))))))))))) (* skoMC1 (+ 2. (* skoMC1 5.)))) (and (> skoMC1 0.) (and (> skoSC1 0.) (and (<= (* skoSC1 (+ (* skoMC1 (+ 1. (* skoMC1 (- 3.)))) (* skoSC1 (+ (* skoMC1 (+ 2. (* skoMC1 3.))) (* skoSC1 (+ (* skoMC1 (+ (/ (- 1.) 6.) skoMC1)) (* skoSC1 (* skoMC1 (/ (- 1.) 4.))))))))) (* skoMC1 (+ 2. (* skoMC1 5.)))) (and (<= (* skoSC1 (+ (* skoMC1 (+ 1. (* skoMC1 (- 3.)))) (* skoSC1 (+ (* skoMC1 (+ 2. (* skoMC1 3.))) (* skoSC1 (+ (* skoMC1 skoMC1) (* skoSC1 (* skoMC1 (/ (- 1.) 12.))))))))) (* skoMC1 (+ 2. (* skoMC1 5.)))) (and (<= (* skoSC1 (* skoMC1 (- 1.))) skoMC1) (and (> (* skoSC1 skoMC1) (* skoMC1 (- 1.))) (and (<= 0. skoMC1) (and (> skoMC1 0.) (and (<= 0. skoSC1) (and (<= 2. skoMC1) (<= skoSC1 (/ 5. 4.))))))))))))))

% In GRF format:
(sequent " MetiTarski formula " (antecedent (> (* skoSC1 (+ (* skoMC1 (+ 1. (* skoMC1 (- 3.)))) (* skoSC1 (+ (* skoMC1 (+ 2. (* skoMC1 3.))) (* skoSC1 (+ (* skoMC1 skoMC1) (* skoSC1 (+ (* skoMC1 (/ (- 1.) 12.)) (* skoSC1 (* skoSC1 (+ (* skoMC1 (/ 1. 360.)) (* skoSC1 (* skoSC1 (+ (* skoMC1 (/ (- 1.) 20160.)) (* skoSC1 (* skoSC1 (+ (* skoMC1 (/ 1. 1814400.)) (* skoSC1 (* skoSC1 (* skoMC1 (/ (- 1.) 239500800.))))))))))))))))))))) (* skoMC1 (+ 2. (* skoMC1 5.)))) (> skoMC1 0.) (> skoSC1 0.) (<= (* skoSC1 (+ (* skoMC1 (+ 1. (* skoMC1 (- 3.)))) (* skoSC1 (+ (* skoMC1 (+ 2. (* skoMC1 3.))) (* skoSC1 (+ (* skoMC1 (+ (/ (- 1.) 6.) skoMC1)) (* skoSC1 (* skoMC1 (/ (- 1.) 4.))))))))) (* skoMC1 (+ 2. (* skoMC1 5.)))) (<= (* skoSC1 (+ (* skoMC1 (+ 1. (* skoMC1 (- 3.)))) (* skoSC1 (+ (* skoMC1 (+ 2. (* skoMC1 3.))) (* skoSC1 (+ (* skoMC1 skoMC1) (* skoSC1 (* skoMC1 (/ (- 1.) 12.))))))))) (* skoMC1 (+ 2. (* skoMC1 5.)))) (<= (* skoSC1 (* skoMC1 (- 1.))) skoMC1) (> (* skoSC1 skoMC1) (* skoMC1 (- 1.))) (<= 0. skoMC1) (> skoMC1 0.) (<= 0. skoSC1) (<= 2. skoMC1)) (succedent (> skoSC1 (/ 5. 4.))))
-----[end problem]-----

-----[begin problem]-----
% In Mathematica format:
Timing[Resolve[Exists[{skoSC1,skoMC1}, And[skoMC1<=0,skoSC1*(skoMC1*(1+skoMC1*-3)+skoSC1*(skoMC1*(2+skoMC1*3)+skoSC1*(skoMC1*skoMC1+skoSC1*(skoMC1*(-1/12)+skoSC1*skoSC1*(skoMC1*(1/360)+skoSC1*skoSC1*(skoMC1*(-1/20160)+skoSC1*skoSC1*(skoMC1*(1/1814400)+skoSC1*skoSC1*skoMC1*(-1/239500800))))))))>skoMC1*(2+skoMC1*5),skoSC1*(skoMC1*(1+skoMC1*-3)+skoSC1*(skoMC1*(2+skoMC1*3)+skoSC1*(skoMC1*((-1/6)+skoMC1)+skoSC1*skoMC1*(-1/4))))<=skoMC1*(2+skoMC1*5),skoSC1*(skoMC1*(1+skoMC1*-3)+skoSC1*(skoMC1*(2+skoMC1*3)+skoSC1*(skoMC1*skoMC1+skoSC1*skoMC1*(-1/12))))<=skoMC1*(2+skoMC1*5),skoSC1*skoMC1*-1<=skoMC1,skoSC1*skoMC1>skoMC1*-1,0<=skoMC1,skoMC1>0,0<=skoSC1,2<=skoMC1,skoSC1<=(5/4)]], Reals]]

% In QepcadB format:
(E skoSC1) (E skoMC1) [[skoMC1<=0]/\[[(skoMC1 (2+(skoMC1 (5))))<(skoSC1 ((skoMC1 (1+(skoMC1 (-3))))+(skoSC1 ((skoMC1 (2+(skoMC1 (3))))+(skoSC1 ((skoMC1 skoMC1)+(skoSC1 ((skoMC1 (-1/12))+(skoSC1 skoSC1 ((skoMC1 (1/360))+(skoSC1 skoSC1 ((skoMC1 (-1/20160))+(skoSC1 skoSC1 ((skoMC1 (1/1814400))+(skoSC1 skoSC1 skoMC1 (-1/239500800))))))))))))))))]/\[[(skoSC1 ((skoMC1 (1+(skoMC1 (-3))))+(skoSC1 ((skoMC1 (2+(skoMC1 (3))))+(skoSC1 ((skoMC1 (-1/6+skoMC1))+(skoSC1 skoMC1 (-1/4))))))))<=(skoMC1 (2+(skoMC1 (5))))]/\[[(skoSC1 ((skoMC1 (1+(skoMC1 (-3))))+(skoSC1 ((skoMC1 (2+(skoMC1 (3))))+(skoSC1 ((skoMC1 skoMC1)+(skoSC1 skoMC1 (-1/12))))))))<=(skoMC1 (2+(skoMC1 (5))))]/\[[(skoSC1 skoMC1 (-1))<=skoMC1]/\[[(skoMC1 (-1))<(skoSC1 skoMC1)]/\[[0<=skoMC1]/\[[0<skoMC1]/\[[0<=skoSC1]/\[[2<=skoMC1]/\[skoSC1<=5/4]]]]]]]]]]].

% In SMTLib2 format:
(declare-fun skoSC1 () Real) (declare-fun skoMC1 () Real) (assert (and (<= skoMC1 0.) (and (> (* skoSC1 (+ (* skoMC1 (+ 1. (* skoMC1 (- 3.)))) (* skoSC1 (+ (* skoMC1 (+ 2. (* skoMC1 3.))) (* skoSC1 (+ (* skoMC1 skoMC1) (* skoSC1 (+ (* skoMC1 (/ (- 1.) 12.)) (* skoSC1 (* skoSC1 (+ (* skoMC1 (/ 1. 360.)) (* skoSC1 (* skoSC1 (+ (* skoMC1 (/ (- 1.) 20160.)) (* skoSC1 (* skoSC1 (+ (* skoMC1 (/ 1. 1814400.)) (* skoSC1 (* skoSC1 (* skoMC1 (/ (- 1.) 239500800.))))))))))))))))))))) (* skoMC1 (+ 2. (* skoMC1 5.)))) (and (<= (* skoSC1 (+ (* skoMC1 (+ 1. (* skoMC1 (- 3.)))) (* skoSC1 (+ (* skoMC1 (+ 2. (* skoMC1 3.))) (* skoSC1 (+ (* skoMC1 (+ (/ (- 1.) 6.) skoMC1)) (* skoSC1 (* skoMC1 (/ (- 1.) 4.))))))))) (* skoMC1 (+ 2. (* skoMC1 5.)))) (and (<= (* skoSC1 (+ (* skoMC1 (+ 1. (* skoMC1 (- 3.)))) (* skoSC1 (+ (* skoMC1 (+ 2. (* skoMC1 3.))) (* skoSC1 (+ (* skoMC1 skoMC1) (* skoSC1 (* skoMC1 (/ (- 1.) 12.))))))))) (* skoMC1 (+ 2. (* skoMC1 5.)))) (and (<= (* skoSC1 (* skoMC1 (- 1.))) skoMC1) (and (> (* skoSC1 skoMC1) (* skoMC1 (- 1.))) (and (<= 0. skoMC1) (and (> skoMC1 0.) (and (<= 0. skoSC1) (and (<= 2. skoMC1) (<= skoSC1 (/ 5. 4.)))))))))))))

% In GRF format:
(sequent " MetiTarski formula " (antecedent (<= skoMC1 0.) (> (* skoSC1 (+ (* skoMC1 (+ 1. (* skoMC1 (- 3.)))) (* skoSC1 (+ (* skoMC1 (+ 2. (* skoMC1 3.))) (* skoSC1 (+ (* skoMC1 skoMC1) (* skoSC1 (+ (* skoMC1 (/ (- 1.) 12.)) (* skoSC1 (* skoSC1 (+ (* skoMC1 (/ 1. 360.)) (* skoSC1 (* skoSC1 (+ (* skoMC1 (/ (- 1.) 20160.)) (* skoSC1 (* skoSC1 (+ (* skoMC1 (/ 1. 1814400.)) (* skoSC1 (* skoSC1 (* skoMC1 (/ (- 1.) 239500800.))))))))))))))))))))) (* skoMC1 (+ 2. (* skoMC1 5.)))) (<= (* skoSC1 (+ (* skoMC1 (+ 1. (* skoMC1 (- 3.)))) (* skoSC1 (+ (* skoMC1 (+ 2. (* skoMC1 3.))) (* skoSC1 (+ (* skoMC1 (+ (/ (- 1.) 6.) skoMC1)) (* skoSC1 (* skoMC1 (/ (- 1.) 4.))))))))) (* skoMC1 (+ 2. (* skoMC1 5.)))) (<= (* skoSC1 (+ (* skoMC1 (+ 1. (* skoMC1 (- 3.)))) (* skoSC1 (+ (* skoMC1 (+ 2. (* skoMC1 3.))) (* skoSC1 (+ (* skoMC1 skoMC1) (* skoSC1 (* skoMC1 (/ (- 1.) 12.))))))))) (* skoMC1 (+ 2. (* skoMC1 5.)))) (<= (* skoSC1 (* skoMC1 (- 1.))) skoMC1) (> (* skoSC1 skoMC1) (* skoMC1 (- 1.))) (<= 0. skoMC1) (> skoMC1 0.) (<= 0. skoSC1) (<= 2. skoMC1)) (succedent (> skoSC1 (/ 5. 4.))))
-----[end problem]-----

-----[begin problem]-----
% In Mathematica format:
Timing[Resolve[Exists[{skoSC1,skoMC1}, And[skoSC1*(skoMC1*(1+skoMC1*-3)+skoSC1*(skoMC1*(2+skoMC1*3)+skoSC1*(skoMC1*((-1/6)+skoMC1)+skoSC1*(skoMC1*(-1/4)+skoSC1*skoSC1*(skoMC1*(1/360)+skoSC1*skoSC1*(skoMC1*(-1/20160)+skoSC1*skoSC1*(skoMC1*(1/1814400)+skoSC1*skoSC1*skoMC1*(-1/239500800))))))))<=skoMC1*(2+skoMC1*5),skoMC1>0,skoSC1*(skoMC1*(1+skoMC1*-3)+skoSC1*(skoMC1*(2+skoMC1*3)+skoSC1*(skoMC1*((-1/6)+skoMC1)+skoSC1*skoMC1*(-1/4))))<=skoMC1*(2+skoMC1*5),skoSC1*(skoMC1*(1+skoMC1*-3)+skoSC1*(skoMC1*(2+skoMC1*3)+skoSC1*(skoMC1*skoMC1+skoSC1*skoMC1*(-1/12))))<=skoMC1*(2+skoMC1*5),skoSC1*skoMC1*-1<=skoMC1,skoSC1*skoMC1>skoMC1*-1,0<=skoMC1,skoMC1>0,0<=skoSC1,2<=skoMC1,skoSC1<=(5/4)]], Reals]]

% In QepcadB format:
(E skoSC1) (E skoMC1) [[(skoSC1 ((skoMC1 (1+(skoMC1 (-3))))+(skoSC1 ((skoMC1 (2+(skoMC1 (3))))+(skoSC1 ((skoMC1 (-1/6+skoMC1))+(skoSC1 ((skoMC1 (-1/4))+(skoSC1 skoSC1 ((skoMC1 (1/360))+(skoSC1 skoSC1 ((skoMC1 (-1/20160))+(skoSC1 skoSC1 ((skoMC1 (1/1814400))+(skoSC1 skoSC1 skoMC1 (-1/239500800))))))))))))))))<=(skoMC1 (2+(skoMC1 (5))))]/\[[0<skoMC1]/\[[(skoSC1 ((skoMC1 (1+(skoMC1 (-3))))+(skoSC1 ((skoMC1 (2+(skoMC1 (3))))+(skoSC1 ((skoMC1 (-1/6+skoMC1))+(skoSC1 skoMC1 (-1/4))))))))<=(skoMC1 (2+(skoMC1 (5))))]/\[[(skoSC1 ((skoMC1 (1+(skoMC1 (-3))))+(skoSC1 ((skoMC1 (2+(skoMC1 (3))))+(skoSC1 ((skoMC1 skoMC1)+(skoSC1 skoMC1 (-1/12))))))))<=(skoMC1 (2+(skoMC1 (5))))]/\[[(skoSC1 skoMC1 (-1))<=skoMC1]/\[[(skoMC1 (-1))<(skoSC1 skoMC1)]/\[[0<=skoMC1]/\[[0<skoMC1]/\[[0<=skoSC1]/\[[2<=skoMC1]/\[skoSC1<=5/4]]]]]]]]]]].

% In SMTLib2 format:
(declare-fun skoSC1 () Real) (declare-fun skoMC1 () Real) (assert (and (<= (* skoSC1 (+ (* skoMC1 (+ 1. (* skoMC1 (- 3.)))) (* skoSC1 (+ (* skoMC1 (+ 2. (* skoMC1 3.))) (* skoSC1 (+ (* skoMC1 (+ (/ (- 1.) 6.) skoMC1)) (* skoSC1 (+ (* skoMC1 (/ (- 1.) 4.)) (* skoSC1 (* skoSC1 (+ (* skoMC1 (/ 1. 360.)) (* skoSC1 (* skoSC1 (+ (* skoMC1 (/ (- 1.) 20160.)) (* skoSC1 (* skoSC1 (+ (* skoMC1 (/ 1. 1814400.)) (* skoSC1 (* skoSC1 (* skoMC1 (/ (- 1.) 239500800.))))))))))))))))))))) (* skoMC1 (+ 2. (* skoMC1 5.)))) (and (> skoMC1 0.) (and (<= (* skoSC1 (+ (* skoMC1 (+ 1. (* skoMC1 (- 3.)))) (* skoSC1 (+ (* skoMC1 (+ 2. (* skoMC1 3.))) (* skoSC1 (+ (* skoMC1 (+ (/ (- 1.) 6.) skoMC1)) (* skoSC1 (* skoMC1 (/ (- 1.) 4.))))))))) (* skoMC1 (+ 2. (* skoMC1 5.)))) (and (<= (* skoSC1 (+ (* skoMC1 (+ 1. (* skoMC1 (- 3.)))) (* skoSC1 (+ (* skoMC1 (+ 2. (* skoMC1 3.))) (* skoSC1 (+ (* skoMC1 skoMC1) (* skoSC1 (* skoMC1 (/ (- 1.) 12.))))))))) (* skoMC1 (+ 2. (* skoMC1 5.)))) (and (<= (* skoSC1 (* skoMC1 (- 1.))) skoMC1) (and (> (* skoSC1 skoMC1) (* skoMC1 (- 1.))) (and (<= 0. skoMC1) (and (> skoMC1 0.) (and (<= 0. skoSC1) (and (<= 2. skoMC1) (<= skoSC1 (/ 5. 4.)))))))))))))

% In GRF format:
(sequent " MetiTarski formula " (antecedent (<= (* skoSC1 (+ (* skoMC1 (+ 1. (* skoMC1 (- 3.)))) (* skoSC1 (+ (* skoMC1 (+ 2. (* skoMC1 3.))) (* skoSC1 (+ (* skoMC1 (+ (/ (- 1.) 6.) skoMC1)) (* skoSC1 (+ (* skoMC1 (/ (- 1.) 4.)) (* skoSC1 (* skoSC1 (+ (* skoMC1 (/ 1. 360.)) (* skoSC1 (* skoSC1 (+ (* skoMC1 (/ (- 1.) 20160.)) (* skoSC1 (* skoSC1 (+ (* skoMC1 (/ 1. 1814400.)) (* skoSC1 (* skoSC1 (* skoMC1 (/ (- 1.) 239500800.))))))))))))))))))))) (* skoMC1 (+ 2. (* skoMC1 5.)))) (> skoMC1 0.) (<= (* skoSC1 (+ (* skoMC1 (+ 1. (* skoMC1 (- 3.)))) (* skoSC1 (+ (* skoMC1 (+ 2. (* skoMC1 3.))) (* skoSC1 (+ (* skoMC1 (+ (/ (- 1.) 6.) skoMC1)) (* skoSC1 (* skoMC1 (/ (- 1.) 4.))))))))) (* skoMC1 (+ 2. (* skoMC1 5.)))) (<= (* skoSC1 (+ (* skoMC1 (+ 1. (* skoMC1 (- 3.)))) (* skoSC1 (+ (* skoMC1 (+ 2. (* skoMC1 3.))) (* skoSC1 (+ (* skoMC1 skoMC1) (* skoSC1 (* skoMC1 (/ (- 1.) 12.))))))))) (* skoMC1 (+ 2. (* skoMC1 5.)))) (<= (* skoSC1 (* skoMC1 (- 1.))) skoMC1) (> (* skoSC1 skoMC1) (* skoMC1 (- 1.))) (<= 0. skoMC1) (> skoMC1 0.) (<= 0. skoSC1) (<= 2. skoMC1)) (succedent (> skoSC1 (/ 5. 4.))))
-----[end problem]-----

-----[begin problem]-----
% In Mathematica format:
Timing[Resolve[Exists[{skoSC1,skoMC1}, And[skoMC1<=0,skoSC1*(skoMC1*(1+skoMC1*-3)+skoSC1*(skoMC1*(2+skoMC1*3)+skoSC1*(skoMC1*((-1/6)+skoMC1)+skoSC1*(skoMC1*(-1/4)+skoSC1*skoSC1*(skoMC1*(1/360)+skoSC1*skoSC1*(skoMC1*(-1/20160)+skoSC1*skoSC1*(skoMC1*(1/1814400)+skoSC1*skoSC1*skoMC1*(-1/239500800))))))))>skoMC1*(2+skoMC1*5),skoSC1*(skoMC1*(1+skoMC1*-3)+skoSC1*(skoMC1*(2+skoMC1*3)+skoSC1*(skoMC1*((-1/6)+skoMC1)+skoSC1*skoMC1*(-1/4))))<=skoMC1*(2+skoMC1*5),skoSC1*(skoMC1*(1+skoMC1*-3)+skoSC1*(skoMC1*(2+skoMC1*3)+skoSC1*(skoMC1*skoMC1+skoSC1*skoMC1*(-1/12))))<=skoMC1*(2+skoMC1*5),skoSC1*skoMC1*-1<=skoMC1,skoSC1*skoMC1>skoMC1*-1,0<=skoMC1,skoMC1>0,0<=skoSC1,2<=skoMC1,skoSC1<=(5/4)]], Reals]]

% In QepcadB format:
(E skoSC1) (E skoMC1) [[skoMC1<=0]/\[[(skoMC1 (2+(skoMC1 (5))))<(skoSC1 ((skoMC1 (1+(skoMC1 (-3))))+(skoSC1 ((skoMC1 (2+(skoMC1 (3))))+(skoSC1 ((skoMC1 (-1/6+skoMC1))+(skoSC1 ((skoMC1 (-1/4))+(skoSC1 skoSC1 ((skoMC1 (1/360))+(skoSC1 skoSC1 ((skoMC1 (-1/20160))+(skoSC1 skoSC1 ((skoMC1 (1/1814400))+(skoSC1 skoSC1 skoMC1 (-1/239500800))))))))))))))))]/\[[(skoSC1 ((skoMC1 (1+(skoMC1 (-3))))+(skoSC1 ((skoMC1 (2+(skoMC1 (3))))+(skoSC1 ((skoMC1 (-1/6+skoMC1))+(skoSC1 skoMC1 (-1/4))))))))<=(skoMC1 (2+(skoMC1 (5))))]/\[[(skoSC1 ((skoMC1 (1+(skoMC1 (-3))))+(skoSC1 ((skoMC1 (2+(skoMC1 (3))))+(skoSC1 ((skoMC1 skoMC1)+(skoSC1 skoMC1 (-1/12))))))))<=(skoMC1 (2+(skoMC1 (5))))]/\[[(skoSC1 skoMC1 (-1))<=skoMC1]/\[[(skoMC1 (-1))<(skoSC1 skoMC1)]/\[[0<=skoMC1]/\[[0<skoMC1]/\[[0<=skoSC1]/\[[2<=skoMC1]/\[skoSC1<=5/4]]]]]]]]]]].

% In SMTLib2 format:
(declare-fun skoSC1 () Real) (declare-fun skoMC1 () Real) (assert (and (<= skoMC1 0.) (and (> (* skoSC1 (+ (* skoMC1 (+ 1. (* skoMC1 (- 3.)))) (* skoSC1 (+ (* skoMC1 (+ 2. (* skoMC1 3.))) (* skoSC1 (+ (* skoMC1 (+ (/ (- 1.) 6.) skoMC1)) (* skoSC1 (+ (* skoMC1 (/ (- 1.) 4.)) (* skoSC1 (* skoSC1 (+ (* skoMC1 (/ 1. 360.)) (* skoSC1 (* skoSC1 (+ (* skoMC1 (/ (- 1.) 20160.)) (* skoSC1 (* skoSC1 (+ (* skoMC1 (/ 1. 1814400.)) (* skoSC1 (* skoSC1 (* skoMC1 (/ (- 1.) 239500800.))))))))))))))))))))) (* skoMC1 (+ 2. (* skoMC1 5.)))) (and (<= (* skoSC1 (+ (* skoMC1 (+ 1. (* skoMC1 (- 3.)))) (* skoSC1 (+ (* skoMC1 (+ 2. (* skoMC1 3.))) (* skoSC1 (+ (* skoMC1 (+ (/ (- 1.) 6.) skoMC1)) (* skoSC1 (* skoMC1 (/ (- 1.) 4.))))))))) (* skoMC1 (+ 2. (* skoMC1 5.)))) (and (<= (* skoSC1 (+ (* skoMC1 (+ 1. (* skoMC1 (- 3.)))) (* skoSC1 (+ (* skoMC1 (+ 2. (* skoMC1 3.))) (* skoSC1 (+ (* skoMC1 skoMC1) (* skoSC1 (* skoMC1 (/ (- 1.) 12.))))))))) (* skoMC1 (+ 2. (* skoMC1 5.)))) (and (<= (* skoSC1 (* skoMC1 (- 1.))) skoMC1) (and (> (* skoSC1 skoMC1) (* skoMC1 (- 1.))) (and (<= 0. skoMC1) (and (> skoMC1 0.) (and (<= 0. skoSC1) (and (<= 2. skoMC1) (<= skoSC1 (/ 5. 4.)))))))))))))

% In GRF format:
(sequent " MetiTarski formula " (antecedent (<= skoMC1 0.) (> (* skoSC1 (+ (* skoMC1 (+ 1. (* skoMC1 (- 3.)))) (* skoSC1 (+ (* skoMC1 (+ 2. (* skoMC1 3.))) (* skoSC1 (+ (* skoMC1 (+ (/ (- 1.) 6.) skoMC1)) (* skoSC1 (+ (* skoMC1 (/ (- 1.) 4.)) (* skoSC1 (* skoSC1 (+ (* skoMC1 (/ 1. 360.)) (* skoSC1 (* skoSC1 (+ (* skoMC1 (/ (- 1.) 20160.)) (* skoSC1 (* skoSC1 (+ (* skoMC1 (/ 1. 1814400.)) (* skoSC1 (* skoSC1 (* skoMC1 (/ (- 1.) 239500800.))))))))))))))))))))) (* skoMC1 (+ 2. (* skoMC1 5.)))) (<= (* skoSC1 (+ (* skoMC1 (+ 1. (* skoMC1 (- 3.)))) (* skoSC1 (+ (* skoMC1 (+ 2. (* skoMC1 3.))) (* skoSC1 (+ (* skoMC1 (+ (/ (- 1.) 6.) skoMC1)) (* skoSC1 (* skoMC1 (/ (- 1.) 4.))))))))) (* skoMC1 (+ 2. (* skoMC1 5.)))) (<= (* skoSC1 (+ (* skoMC1 (+ 1. (* skoMC1 (- 3.)))) (* skoSC1 (+ (* skoMC1 (+ 2. (* skoMC1 3.))) (* skoSC1 (+ (* skoMC1 skoMC1) (* skoSC1 (* skoMC1 (/ (- 1.) 12.))))))))) (* skoMC1 (+ 2. (* skoMC1 5.)))) (<= (* skoSC1 (* skoMC1 (- 1.))) skoMC1) (> (* skoSC1 skoMC1) (* skoMC1 (- 1.))) (<= 0. skoMC1) (> skoMC1 0.) (<= 0. skoSC1) (<= 2. skoMC1)) (succedent (> skoSC1 (/ 5. 4.))))
-----[end problem]-----

-----[begin problem]-----
% In Mathematica format:
Timing[Resolve[Exists[{skoSC1,skoMC1}, And[skoSC1*skoMC1*skoMC1*skoMC1*-2<=skoMC1*skoMC1*skoMC1*2,skoSC1*skoMC1*skoMC1*skoMC1*2>skoMC1*skoMC1*skoMC1*-2,skoSC1*(skoMC1*(1+skoMC1*-3)+skoSC1*(skoMC1*(2+skoMC1*3)+skoSC1*(skoMC1*((-1/6)+skoMC1)+skoSC1*skoMC1*(-1/4))))<=skoMC1*(2+skoMC1*5),skoSC1*(skoMC1*(1+skoMC1*-3)+skoSC1*(skoMC1*(2+skoMC1*3)+skoSC1*(skoMC1*skoMC1+skoSC1*skoMC1*(-1/12))))<=skoMC1*(2+skoMC1*5),skoSC1*skoMC1*-1<=skoMC1,skoSC1*skoMC1>skoMC1*-1,0<=skoMC1,skoMC1>0,0<=skoSC1,2<=skoMC1,skoSC1<=(5/4)]], Reals]]

% In QepcadB format:
(E skoSC1) (E skoMC1) [[(skoSC1 skoMC1 skoMC1 skoMC1 (-2))<=(skoMC1 skoMC1 skoMC1 (2))]/\[[(skoMC1 skoMC1 skoMC1 (-2))<(skoSC1 skoMC1 skoMC1 skoMC1 (2))]/\[[(skoSC1 ((skoMC1 (1+(skoMC1 (-3))))+(skoSC1 ((skoMC1 (2+(skoMC1 (3))))+(skoSC1 ((skoMC1 (-1/6+skoMC1))+(skoSC1 skoMC1 (-1/4))))))))<=(skoMC1 (2+(skoMC1 (5))))]/\[[(skoSC1 ((skoMC1 (1+(skoMC1 (-3))))+(skoSC1 ((skoMC1 (2+(skoMC1 (3))))+(skoSC1 ((skoMC1 skoMC1)+(skoSC1 skoMC1 (-1/12))))))))<=(skoMC1 (2+(skoMC1 (5))))]/\[[(skoSC1 skoMC1 (-1))<=skoMC1]/\[[(skoMC1 (-1))<(skoSC1 skoMC1)]/\[[0<=skoMC1]/\[[0<skoMC1]/\[[0<=skoSC1]/\[[2<=skoMC1]/\[skoSC1<=5/4]]]]]]]]]]].

% In SMTLib2 format:
(declare-fun skoSC1 () Real) (declare-fun skoMC1 () Real) (assert (and (<= (* skoSC1 (* skoMC1 (* skoMC1 (* skoMC1 (- 2.))))) (* skoMC1 (* skoMC1 (* skoMC1 2.)))) (and (> (* skoSC1 (* skoMC1 (* skoMC1 (* skoMC1 2.)))) (* skoMC1 (* skoMC1 (* skoMC1 (- 2.))))) (and (<= (* skoSC1 (+ (* skoMC1 (+ 1. (* skoMC1 (- 3.)))) (* skoSC1 (+ (* skoMC1 (+ 2. (* skoMC1 3.))) (* skoSC1 (+ (* skoMC1 (+ (/ (- 1.) 6.) skoMC1)) (* skoSC1 (* skoMC1 (/ (- 1.) 4.))))))))) (* skoMC1 (+ 2. (* skoMC1 5.)))) (and (<= (* skoSC1 (+ (* skoMC1 (+ 1. (* skoMC1 (- 3.)))) (* skoSC1 (+ (* skoMC1 (+ 2. (* skoMC1 3.))) (* skoSC1 (+ (* skoMC1 skoMC1) (* skoSC1 (* skoMC1 (/ (- 1.) 12.))))))))) (* skoMC1 (+ 2. (* skoMC1 5.)))) (and (<= (* skoSC1 (* skoMC1 (- 1.))) skoMC1) (and (> (* skoSC1 skoMC1) (* skoMC1 (- 1.))) (and (<= 0. skoMC1) (and (> skoMC1 0.) (and (<= 0. skoSC1) (and (<= 2. skoMC1) (<= skoSC1 (/ 5. 4.)))))))))))))

% In GRF format:
(sequent " MetiTarski formula " (antecedent (<= (* skoSC1 (* skoMC1 (* skoMC1 (* skoMC1 (- 2.))))) (* skoMC1 (* skoMC1 (* skoMC1 2.)))) (> (* skoSC1 (* skoMC1 (* skoMC1 (* skoMC1 2.)))) (* skoMC1 (* skoMC1 (* skoMC1 (- 2.))))) (<= (* skoSC1 (+ (* skoMC1 (+ 1. (* skoMC1 (- 3.)))) (* skoSC1 (+ (* skoMC1 (+ 2. (* skoMC1 3.))) (* skoSC1 (+ (* skoMC1 (+ (/ (- 1.) 6.) skoMC1)) (* skoSC1 (* skoMC1 (/ (- 1.) 4.))))))))) (* skoMC1 (+ 2. (* skoMC1 5.)))) (<= (* skoSC1 (+ (* skoMC1 (+ 1. (* skoMC1 (- 3.)))) (* skoSC1 (+ (* skoMC1 (+ 2. (* skoMC1 3.))) (* skoSC1 (+ (* skoMC1 skoMC1) (* skoSC1 (* skoMC1 (/ (- 1.) 12.))))))))) (* skoMC1 (+ 2. (* skoMC1 5.)))) (<= (* skoSC1 (* skoMC1 (- 1.))) skoMC1) (> (* skoSC1 skoMC1) (* skoMC1 (- 1.))) (<= 0. skoMC1) (> skoMC1 0.) (<= 0. skoSC1) (<= 2. skoMC1)) (succedent (> skoSC1 (/ 5. 4.))))
-----[end problem]-----

-----[begin problem]-----
% In Mathematica format:
Timing[Resolve[Exists[{skoMC1,skoSC1}, And[skoSC1*skoMC1*skoMC1*skoMC1*2>skoMC1*skoMC1*skoMC1*-2,skoSC1*(skoMC1*skoMC1*skoMC1*(-2+skoMC1*-12)+skoSC1*(skoMC1*skoMC1*skoMC1*(1+skoMC1*-6)+skoSC1*skoMC1*skoMC1*skoMC1))>skoMC1*skoMC1*skoMC1*(2+skoMC1*6),skoSC1*skoMC1*skoMC1*skoMC1*2>skoMC1*skoMC1*skoMC1*-2,skoSC1*(skoMC1*(1+skoMC1*-3)+skoSC1*(skoMC1*(2+skoMC1*3)+skoSC1*(skoMC1*((-1/6)+skoMC1)+skoSC1*skoMC1*(-1/4))))<=skoMC1*(2+skoMC1*5),skoSC1*(skoMC1*(1+skoMC1*-3)+skoSC1*(skoMC1*(2+skoMC1*3)+skoSC1*(skoMC1*skoMC1+skoSC1*skoMC1*(-1/12))))<=skoMC1*(2+skoMC1*5),skoSC1*skoMC1*-1<=skoMC1,skoSC1*skoMC1>skoMC1*-1,0<=skoMC1,skoMC1>0,0<=skoSC1,2<=skoMC1,skoSC1<=(5/4)]], Reals]]

% In QepcadB format:
(E skoMC1) (E skoSC1) [[(skoMC1 skoMC1 skoMC1 (-2))<(skoSC1 skoMC1 skoMC1 skoMC1 (2))]/\[[(skoMC1 skoMC1 skoMC1 (2+(skoMC1 (6))))<(skoSC1 ((skoMC1 skoMC1 skoMC1 (-2+(skoMC1 (-12))))+(skoSC1 ((skoMC1 skoMC1 skoMC1 (1+(skoMC1 (-6))))+(skoSC1 skoMC1 skoMC1 skoMC1)))))]/\[[(skoMC1 skoMC1 skoMC1 (-2))<(skoSC1 skoMC1 skoMC1 skoMC1 (2))]/\[[(skoSC1 ((skoMC1 (1+(skoMC1 (-3))))+(skoSC1 ((skoMC1 (2+(skoMC1 (3))))+(skoSC1 ((skoMC1 (-1/6+skoMC1))+(skoSC1 skoMC1 (-1/4))))))))<=(skoMC1 (2+(skoMC1 (5))))]/\[[(skoSC1 ((skoMC1 (1+(skoMC1 (-3))))+(skoSC1 ((skoMC1 (2+(skoMC1 (3))))+(skoSC1 ((skoMC1 skoMC1)+(skoSC1 skoMC1 (-1/12))))))))<=(skoMC1 (2+(skoMC1 (5))))]/\[[(skoSC1 skoMC1 (-1))<=skoMC1]/\[[(skoMC1 (-1))<(skoSC1 skoMC1)]/\[[0<=skoMC1]/\[[0<skoMC1]/\[[0<=skoSC1]/\[[2<=skoMC1]/\[skoSC1<=5/4]]]]]]]]]]]].

% In SMTLib2 format:
(declare-fun skoMC1 () Real) (declare-fun skoSC1 () Real) (assert (and (> (* skoSC1 (* skoMC1 (* skoMC1 (* skoMC1 2.)))) (* skoMC1 (* skoMC1 (* skoMC1 (- 2.))))) (and (> (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (+ (- 2.) (* skoMC1 (- 12.)))))) (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (+ 1. (* skoMC1 (- 6.)))))) (* skoSC1 (* skoMC1 (* skoMC1 skoMC1))))))) (* skoMC1 (* skoMC1 (* skoMC1 (+ 2. (* skoMC1 6.)))))) (and (> (* skoSC1 (* skoMC1 (* skoMC1 (* skoMC1 2.)))) (* skoMC1 (* skoMC1 (* skoMC1 (- 2.))))) (and (<= (* skoSC1 (+ (* skoMC1 (+ 1. (* skoMC1 (- 3.)))) (* skoSC1 (+ (* skoMC1 (+ 2. (* skoMC1 3.))) (* skoSC1 (+ (* skoMC1 (+ (/ (- 1.) 6.) skoMC1)) (* skoSC1 (* skoMC1 (/ (- 1.) 4.))))))))) (* skoMC1 (+ 2. (* skoMC1 5.)))) (and (<= (* skoSC1 (+ (* skoMC1 (+ 1. (* skoMC1 (- 3.)))) (* skoSC1 (+ (* skoMC1 (+ 2. (* skoMC1 3.))) (* skoSC1 (+ (* skoMC1 skoMC1) (* skoSC1 (* skoMC1 (/ (- 1.) 12.))))))))) (* skoMC1 (+ 2. (* skoMC1 5.)))) (and (<= (* skoSC1 (* skoMC1 (- 1.))) skoMC1) (and (> (* skoSC1 skoMC1) (* skoMC1 (- 1.))) (and (<= 0. skoMC1) (and (> skoMC1 0.) (and (<= 0. skoSC1) (and (<= 2. skoMC1) (<= skoSC1 (/ 5. 4.))))))))))))))

% In GRF format:
(sequent " MetiTarski formula " (antecedent (> (* skoSC1 (* skoMC1 (* skoMC1 (* skoMC1 2.)))) (* skoMC1 (* skoMC1 (* skoMC1 (- 2.))))) (> (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (+ (- 2.) (* skoMC1 (- 12.)))))) (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (+ 1. (* skoMC1 (- 6.)))))) (* skoSC1 (* skoMC1 (* skoMC1 skoMC1))))))) (* skoMC1 (* skoMC1 (* skoMC1 (+ 2. (* skoMC1 6.)))))) (> (* skoSC1 (* skoMC1 (* skoMC1 (* skoMC1 2.)))) (* skoMC1 (* skoMC1 (* skoMC1 (- 2.))))) (<= (* skoSC1 (+ (* skoMC1 (+ 1. (* skoMC1 (- 3.)))) (* skoSC1 (+ (* skoMC1 (+ 2. (* skoMC1 3.))) (* skoSC1 (+ (* skoMC1 (+ (/ (- 1.) 6.) skoMC1)) (* skoSC1 (* skoMC1 (/ (- 1.) 4.))))))))) (* skoMC1 (+ 2. (* skoMC1 5.)))) (<= (* skoSC1 (+ (* skoMC1 (+ 1. (* skoMC1 (- 3.)))) (* skoSC1 (+ (* skoMC1 (+ 2. (* skoMC1 3.))) (* skoSC1 (+ (* skoMC1 skoMC1) (* skoSC1 (* skoMC1 (/ (- 1.) 12.))))))))) (* skoMC1 (+ 2. (* skoMC1 5.)))) (<= (* skoSC1 (* skoMC1 (- 1.))) skoMC1) (> (* skoSC1 skoMC1) (* skoMC1 (- 1.))) (<= 0. skoMC1) (> skoMC1 0.) (<= 0. skoSC1) (<= 2. skoMC1)) (succedent (> skoSC1 (/ 5. 4.))))
-----[end problem]-----

-----[begin problem]-----
% In Mathematica format:
Timing[Resolve[Exists[{skoMC1,skoSC1}, And[skoSC1*skoMC1*skoMC1*skoMC1*-2<=skoMC1*skoMC1*skoMC1*2,skoSC1*skoMC1*skoMC1*skoMC1*2<=skoMC1*skoMC1*skoMC1*-2,skoSC1*(skoMC1*skoMC1*skoMC1*skoMC1*12+skoSC1*skoMC1*skoMC1*skoMC1*skoMC1*6)>skoMC1*skoMC1*skoMC1*skoMC1*-6,skoSC1<=(5/4),2<=skoMC1,0<=skoSC1,skoMC1>0,0<=skoMC1,skoSC1*skoMC1>skoMC1*-1,skoSC1*skoMC1*-1<=skoMC1,skoSC1*(skoMC1*(1+skoMC1*-3)+skoSC1*(skoMC1*(2+skoMC1*3)+skoSC1*(skoMC1*skoMC1+skoSC1*skoMC1*(-1/12))))<=skoMC1*(2+skoMC1*5),skoSC1*(skoMC1*(1+skoMC1*-3)+skoSC1*(skoMC1*(2+skoMC1*3)+skoSC1*(skoMC1*((-1/6)+skoMC1)+skoSC1*skoMC1*(-1/4))))<=skoMC1*(2+skoMC1*5)]], Reals]]

% In QepcadB format:
(E skoMC1) (E skoSC1) [[(skoSC1 skoMC1 skoMC1 skoMC1 (-2))<=(skoMC1 skoMC1 skoMC1 (2))]/\[[(skoSC1 skoMC1 skoMC1 skoMC1 (2))<=(skoMC1 skoMC1 skoMC1 (-2))]/\[[(skoMC1 skoMC1 skoMC1 skoMC1 (-6))<(skoSC1 ((skoMC1 skoMC1 skoMC1 skoMC1 (12))+(skoSC1 skoMC1 skoMC1 skoMC1 skoMC1 (6))))]/\[[skoSC1<=5/4]/\[[2<=skoMC1]/\[[0<=skoSC1]/\[[0<skoMC1]/\[[0<=skoMC1]/\[[(skoMC1 (-1))<(skoSC1 skoMC1)]/\[[(skoSC1 skoMC1 (-1))<=skoMC1]/\[[(skoSC1 ((skoMC1 (1+(skoMC1 (-3))))+(skoSC1 ((skoMC1 (2+(skoMC1 (3))))+(skoSC1 ((skoMC1 skoMC1)+(skoSC1 skoMC1 (-1/12))))))))<=(skoMC1 (2+(skoMC1 (5))))]/\[(skoSC1 ((skoMC1 (1+(skoMC1 (-3))))+(skoSC1 ((skoMC1 (2+(skoMC1 (3))))+(skoSC1 ((skoMC1 (-1/6+skoMC1))+(skoSC1 skoMC1 (-1/4))))))))<=(skoMC1 (2+(skoMC1 (5))))]]]]]]]]]]]].

% In SMTLib2 format:
(declare-fun skoMC1 () Real) (declare-fun skoSC1 () Real) (assert (and (<= (* skoSC1 (* skoMC1 (* skoMC1 (* skoMC1 (- 2.))))) (* skoMC1 (* skoMC1 (* skoMC1 2.)))) (and (<= (* skoSC1 (* skoMC1 (* skoMC1 (* skoMC1 2.)))) (* skoMC1 (* skoMC1 (* skoMC1 (- 2.))))) (and (> (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (* skoMC1 12.)))) (* skoSC1 (* skoMC1 (* skoMC1 (* skoMC1 (* skoMC1 6.))))))) (* skoMC1 (* skoMC1 (* skoMC1 (* skoMC1 (- 6.)))))) (and (<= skoSC1 (/ 5. 4.)) (and (<= 2. skoMC1) (and (<= 0. skoSC1) (and (> skoMC1 0.) (and (<= 0. skoMC1) (and (> (* skoSC1 skoMC1) (* skoMC1 (- 1.))) (and (<= (* skoSC1 (* skoMC1 (- 1.))) skoMC1) (and (<= (* skoSC1 (+ (* skoMC1 (+ 1. (* skoMC1 (- 3.)))) (* skoSC1 (+ (* skoMC1 (+ 2. (* skoMC1 3.))) (* skoSC1 (+ (* skoMC1 skoMC1) (* skoSC1 (* skoMC1 (/ (- 1.) 12.))))))))) (* skoMC1 (+ 2. (* skoMC1 5.)))) (<= (* skoSC1 (+ (* skoMC1 (+ 1. (* skoMC1 (- 3.)))) (* skoSC1 (+ (* skoMC1 (+ 2. (* skoMC1 3.))) (* skoSC1 (+ (* skoMC1 (+ (/ (- 1.) 6.) skoMC1)) (* skoSC1 (* skoMC1 (/ (- 1.) 4.))))))))) (* skoMC1 (+ 2. (* skoMC1 5.))))))))))))))))

% In GRF format:
(sequent " MetiTarski formula " (antecedent (<= (* skoSC1 (* skoMC1 (* skoMC1 (* skoMC1 (- 2.))))) (* skoMC1 (* skoMC1 (* skoMC1 2.)))) (<= (* skoSC1 (* skoMC1 (* skoMC1 (* skoMC1 2.)))) (* skoMC1 (* skoMC1 (* skoMC1 (- 2.))))) (> (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (* skoMC1 12.)))) (* skoSC1 (* skoMC1 (* skoMC1 (* skoMC1 (* skoMC1 6.))))))) (* skoMC1 (* skoMC1 (* skoMC1 (* skoMC1 (- 6.)))))) (<= skoSC1 (/ 5. 4.)) (<= 2. skoMC1) (<= 0. skoSC1) (> skoMC1 0.) (<= 0. skoMC1) (> (* skoSC1 skoMC1) (* skoMC1 (- 1.))) (<= (* skoSC1 (* skoMC1 (- 1.))) skoMC1) (<= (* skoSC1 (+ (* skoMC1 (+ 1. (* skoMC1 (- 3.)))) (* skoSC1 (+ (* skoMC1 (+ 2. (* skoMC1 3.))) (* skoSC1 (+ (* skoMC1 skoMC1) (* skoSC1 (* skoMC1 (/ (- 1.) 12.))))))))) (* skoMC1 (+ 2. (* skoMC1 5.))))) (succedent (> (* skoSC1 (+ (* skoMC1 (+ 1. (* skoMC1 (- 3.)))) (* skoSC1 (+ (* skoMC1 (+ 2. (* skoMC1 3.))) (* skoSC1 (+ (* skoMC1 (+ (/ (- 1.) 6.) skoMC1)) (* skoSC1 (* skoMC1 (/ (- 1.) 4.))))))))) (* skoMC1 (+ 2. (* skoMC1 5.))))))
-----[end problem]-----

-----[begin problem]-----
% In Mathematica format:
Timing[Resolve[Exists[{skoSC1,skoMC1}, And[skoSC1*skoMC1*skoMC1*skoMC1*-2<=skoMC1*skoMC1*skoMC1*2,skoSC1*skoMC1*skoMC1*skoMC1*2>skoMC1*skoMC1*skoMC1*-2,skoSC1<=(5/4),2<=skoMC1,0<=skoSC1,skoMC1>0,0<=skoMC1,skoSC1*skoMC1>skoMC1*-1,skoSC1*skoMC1*-1<=skoMC1,skoSC1*(skoMC1*(1+skoMC1*-3)+skoSC1*(skoMC1*(2+skoMC1*3)+skoSC1*(skoMC1*skoMC1+skoSC1*skoMC1*(-1/12))))<=skoMC1*(2+skoMC1*5),skoSC1*(skoMC1*(1+skoMC1*-3)+skoSC1*(skoMC1*(2+skoMC1*3)+skoSC1*(skoMC1*((-1/6)+skoMC1)+skoSC1*skoMC1*(-1/4))))<=skoMC1*(2+skoMC1*5)]], Reals]]

% In QepcadB format:
(E skoSC1) (E skoMC1) [[(skoSC1 skoMC1 skoMC1 skoMC1 (-2))<=(skoMC1 skoMC1 skoMC1 (2))]/\[[(skoMC1 skoMC1 skoMC1 (-2))<(skoSC1 skoMC1 skoMC1 skoMC1 (2))]/\[[skoSC1<=5/4]/\[[2<=skoMC1]/\[[0<=skoSC1]/\[[0<skoMC1]/\[[0<=skoMC1]/\[[(skoMC1 (-1))<(skoSC1 skoMC1)]/\[[(skoSC1 skoMC1 (-1))<=skoMC1]/\[[(skoSC1 ((skoMC1 (1+(skoMC1 (-3))))+(skoSC1 ((skoMC1 (2+(skoMC1 (3))))+(skoSC1 ((skoMC1 skoMC1)+(skoSC1 skoMC1 (-1/12))))))))<=(skoMC1 (2+(skoMC1 (5))))]/\[(skoSC1 ((skoMC1 (1+(skoMC1 (-3))))+(skoSC1 ((skoMC1 (2+(skoMC1 (3))))+(skoSC1 ((skoMC1 (-1/6+skoMC1))+(skoSC1 skoMC1 (-1/4))))))))<=(skoMC1 (2+(skoMC1 (5))))]]]]]]]]]]].

% In SMTLib2 format:
(declare-fun skoSC1 () Real) (declare-fun skoMC1 () Real) (assert (and (<= (* skoSC1 (* skoMC1 (* skoMC1 (* skoMC1 (- 2.))))) (* skoMC1 (* skoMC1 (* skoMC1 2.)))) (and (> (* skoSC1 (* skoMC1 (* skoMC1 (* skoMC1 2.)))) (* skoMC1 (* skoMC1 (* skoMC1 (- 2.))))) (and (<= skoSC1 (/ 5. 4.)) (and (<= 2. skoMC1) (and (<= 0. skoSC1) (and (> skoMC1 0.) (and (<= 0. skoMC1) (and (> (* skoSC1 skoMC1) (* skoMC1 (- 1.))) (and (<= (* skoSC1 (* skoMC1 (- 1.))) skoMC1) (and (<= (* skoSC1 (+ (* skoMC1 (+ 1. (* skoMC1 (- 3.)))) (* skoSC1 (+ (* skoMC1 (+ 2. (* skoMC1 3.))) (* skoSC1 (+ (* skoMC1 skoMC1) (* skoSC1 (* skoMC1 (/ (- 1.) 12.))))))))) (* skoMC1 (+ 2. (* skoMC1 5.)))) (<= (* skoSC1 (+ (* skoMC1 (+ 1. (* skoMC1 (- 3.)))) (* skoSC1 (+ (* skoMC1 (+ 2. (* skoMC1 3.))) (* skoSC1 (+ (* skoMC1 (+ (/ (- 1.) 6.) skoMC1)) (* skoSC1 (* skoMC1 (/ (- 1.) 4.))))))))) (* skoMC1 (+ 2. (* skoMC1 5.)))))))))))))))

% In GRF format:
(sequent " MetiTarski formula " (antecedent (<= (* skoSC1 (* skoMC1 (* skoMC1 (* skoMC1 (- 2.))))) (* skoMC1 (* skoMC1 (* skoMC1 2.)))) (> (* skoSC1 (* skoMC1 (* skoMC1 (* skoMC1 2.)))) (* skoMC1 (* skoMC1 (* skoMC1 (- 2.))))) (<= skoSC1 (/ 5. 4.)) (<= 2. skoMC1) (<= 0. skoSC1) (> skoMC1 0.) (<= 0. skoMC1) (> (* skoSC1 skoMC1) (* skoMC1 (- 1.))) (<= (* skoSC1 (* skoMC1 (- 1.))) skoMC1) (<= (* skoSC1 (+ (* skoMC1 (+ 1. (* skoMC1 (- 3.)))) (* skoSC1 (+ (* skoMC1 (+ 2. (* skoMC1 3.))) (* skoSC1 (+ (* skoMC1 skoMC1) (* skoSC1 (* skoMC1 (/ (- 1.) 12.))))))))) (* skoMC1 (+ 2. (* skoMC1 5.))))) (succedent (> (* skoSC1 (+ (* skoMC1 (+ 1. (* skoMC1 (- 3.)))) (* skoSC1 (+ (* skoMC1 (+ 2. (* skoMC1 3.))) (* skoSC1 (+ (* skoMC1 (+ (/ (- 1.) 6.) skoMC1)) (* skoSC1 (* skoMC1 (/ (- 1.) 4.))))))))) (* skoMC1 (+ 2. (* skoMC1 5.))))))
-----[end problem]-----

-----[begin problem]-----
% In Mathematica format:
Timing[Resolve[Exists[{skoSC1,skoMC1}, And[skoSC1*skoMC1*skoMC1*skoMC1*2>skoMC1*skoMC1*skoMC1*-2,skoSC1*(skoMC1*skoMC1*skoMC1*(2+skoMC1*12)+skoSC1*(skoMC1*skoMC1*skoMC1*(-1+skoMC1*6)+skoSC1*(skoMC1*skoMC1*skoMC1*-1+skoSC1*(skoMC1*skoMC1*skoMC1*(1/12)+skoSC1*skoMC1*skoMC1*skoMC1*(1/12)))))>skoMC1*skoMC1*skoMC1*(-2+skoMC1*-6),skoSC1*skoMC1*skoMC1*skoMC1*2>skoMC1*skoMC1*skoMC1*-2,skoSC1<=(5/4),2<=skoMC1,0<=skoSC1,skoMC1>0,0<=skoMC1,skoSC1*skoMC1>skoMC1*-1,skoSC1*skoMC1*-1<=skoMC1,skoSC1*(skoMC1*(1+skoMC1*-3)+skoSC1*(skoMC1*(2+skoMC1*3)+skoSC1*(skoMC1*skoMC1+skoSC1*skoMC1*(-1/12))))<=skoMC1*(2+skoMC1*5),skoSC1*(skoMC1*(1+skoMC1*-3)+skoSC1*(skoMC1*(2+skoMC1*3)+skoSC1*(skoMC1*((-1/6)+skoMC1)+skoSC1*skoMC1*(-1/4))))<=skoMC1*(2+skoMC1*5)]], Reals]]

% In QepcadB format:
(E skoSC1) (E skoMC1) [[(skoMC1 skoMC1 skoMC1 (-2))<(skoSC1 skoMC1 skoMC1 skoMC1 (2))]/\[[(skoMC1 skoMC1 skoMC1 (-2+(skoMC1 (-6))))<(skoSC1 ((skoMC1 skoMC1 skoMC1 (2+(skoMC1 (12))))+(skoSC1 ((skoMC1 skoMC1 skoMC1 (-1+(skoMC1 (6))))+(skoSC1 ((skoMC1 skoMC1 skoMC1 (-1))+(skoSC1 ((skoMC1 skoMC1 skoMC1 (1/12))+(skoSC1 skoMC1 skoMC1 skoMC1 (1/12))))))))))]/\[[(skoMC1 skoMC1 skoMC1 (-2))<(skoSC1 skoMC1 skoMC1 skoMC1 (2))]/\[[skoSC1<=5/4]/\[[2<=skoMC1]/\[[0<=skoSC1]/\[[0<skoMC1]/\[[0<=skoMC1]/\[[(skoMC1 (-1))<(skoSC1 skoMC1)]/\[[(skoSC1 skoMC1 (-1))<=skoMC1]/\[[(skoSC1 ((skoMC1 (1+(skoMC1 (-3))))+(skoSC1 ((skoMC1 (2+(skoMC1 (3))))+(skoSC1 ((skoMC1 skoMC1)+(skoSC1 skoMC1 (-1/12))))))))<=(skoMC1 (2+(skoMC1 (5))))]/\[(skoSC1 ((skoMC1 (1+(skoMC1 (-3))))+(skoSC1 ((skoMC1 (2+(skoMC1 (3))))+(skoSC1 ((skoMC1 (-1/6+skoMC1))+(skoSC1 skoMC1 (-1/4))))))))<=(skoMC1 (2+(skoMC1 (5))))]]]]]]]]]]]].

% In SMTLib2 format:
(declare-fun skoSC1 () Real) (declare-fun skoMC1 () Real) (assert (and (> (* skoSC1 (* skoMC1 (* skoMC1 (* skoMC1 2.)))) (* skoMC1 (* skoMC1 (* skoMC1 (- 2.))))) (and (> (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (+ 2. (* skoMC1 12.))))) (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (+ (- 1.) (* skoMC1 6.))))) (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (- 1.)))) (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (/ 1. 12.)))) (* skoSC1 (* skoMC1 (* skoMC1 (* skoMC1 (/ 1. 12.))))))))))))) (* skoMC1 (* skoMC1 (* skoMC1 (+ (- 2.) (* skoMC1 (- 6.))))))) (and (> (* skoSC1 (* skoMC1 (* skoMC1 (* skoMC1 2.)))) (* skoMC1 (* skoMC1 (* skoMC1 (- 2.))))) (and (<= skoSC1 (/ 5. 4.)) (and (<= 2. skoMC1) (and (<= 0. skoSC1) (and (> skoMC1 0.) (and (<= 0. skoMC1) (and (> (* skoSC1 skoMC1) (* skoMC1 (- 1.))) (and (<= (* skoSC1 (* skoMC1 (- 1.))) skoMC1) (and (<= (* skoSC1 (+ (* skoMC1 (+ 1. (* skoMC1 (- 3.)))) (* skoSC1 (+ (* skoMC1 (+ 2. (* skoMC1 3.))) (* skoSC1 (+ (* skoMC1 skoMC1) (* skoSC1 (* skoMC1 (/ (- 1.) 12.))))))))) (* skoMC1 (+ 2. (* skoMC1 5.)))) (<= (* skoSC1 (+ (* skoMC1 (+ 1. (* skoMC1 (- 3.)))) (* skoSC1 (+ (* skoMC1 (+ 2. (* skoMC1 3.))) (* skoSC1 (+ (* skoMC1 (+ (/ (- 1.) 6.) skoMC1)) (* skoSC1 (* skoMC1 (/ (- 1.) 4.))))))))) (* skoMC1 (+ 2. (* skoMC1 5.))))))))))))))))

% In GRF format:
(sequent " MetiTarski formula " (antecedent (> (* skoSC1 (* skoMC1 (* skoMC1 (* skoMC1 2.)))) (* skoMC1 (* skoMC1 (* skoMC1 (- 2.))))) (> (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (+ 2. (* skoMC1 12.))))) (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (+ (- 1.) (* skoMC1 6.))))) (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (- 1.)))) (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (/ 1. 12.)))) (* skoSC1 (* skoMC1 (* skoMC1 (* skoMC1 (/ 1. 12.))))))))))))) (* skoMC1 (* skoMC1 (* skoMC1 (+ (- 2.) (* skoMC1 (- 6.))))))) (> (* skoSC1 (* skoMC1 (* skoMC1 (* skoMC1 2.)))) (* skoMC1 (* skoMC1 (* skoMC1 (- 2.))))) (<= skoSC1 (/ 5. 4.)) (<= 2. skoMC1) (<= 0. skoSC1) (> skoMC1 0.) (<= 0. skoMC1) (> (* skoSC1 skoMC1) (* skoMC1 (- 1.))) (<= (* skoSC1 (* skoMC1 (- 1.))) skoMC1) (<= (* skoSC1 (+ (* skoMC1 (+ 1. (* skoMC1 (- 3.)))) (* skoSC1 (+ (* skoMC1 (+ 2. (* skoMC1 3.))) (* skoSC1 (+ (* skoMC1 skoMC1) (* skoSC1 (* skoMC1 (/ (- 1.) 12.))))))))) (* skoMC1 (+ 2. (* skoMC1 5.))))) (succedent (> (* skoSC1 (+ (* skoMC1 (+ 1. (* skoMC1 (- 3.)))) (* skoSC1 (+ (* skoMC1 (+ 2. (* skoMC1 3.))) (* skoSC1 (+ (* skoMC1 (+ (/ (- 1.) 6.) skoMC1)) (* skoSC1 (* skoMC1 (/ (- 1.) 4.))))))))) (* skoMC1 (+ 2. (* skoMC1 5.))))))
-----[end problem]-----

-----[begin problem]-----
% In Mathematica format:
Timing[Resolve[Exists[{skoSC1,skoMC1}, And[skoSC1*skoMC1*skoMC1*skoMC1*2<=skoMC1*skoMC1*skoMC1*-2,skoSC1*(skoMC1*skoMC1*skoMC1*(2+skoMC1*12)+skoSC1*(skoMC1*skoMC1*skoMC1*(-1+skoMC1*6)+skoSC1*(skoMC1*skoMC1*skoMC1*-1+skoSC1*(skoMC1*skoMC1*skoMC1*(1/12)+skoSC1*skoMC1*skoMC1*skoMC1*(1/12)))))<=skoMC1*skoMC1*skoMC1*(-2+skoMC1*-6),skoSC1*skoMC1*skoMC1*skoMC1*2>skoMC1*skoMC1*skoMC1*-2,skoSC1<=(5/4),2<=skoMC1,0<=skoSC1,skoMC1>0,0<=skoMC1,skoSC1*skoMC1>skoMC1*-1,skoSC1*skoMC1*-1<=skoMC1,skoSC1*(skoMC1*(1+skoMC1*-3)+skoSC1*(skoMC1*(2+skoMC1*3)+skoSC1*(skoMC1*skoMC1+skoSC1*skoMC1*(-1/12))))<=skoMC1*(2+skoMC1*5),skoSC1*(skoMC1*(1+skoMC1*-3)+skoSC1*(skoMC1*(2+skoMC1*3)+skoSC1*(skoMC1*((-1/6)+skoMC1)+skoSC1*skoMC1*(-1/4))))<=skoMC1*(2+skoMC1*5)]], Reals]]

% In QepcadB format:
(E skoSC1) (E skoMC1) [[(skoSC1 skoMC1 skoMC1 skoMC1 (2))<=(skoMC1 skoMC1 skoMC1 (-2))]/\[[(skoSC1 ((skoMC1 skoMC1 skoMC1 (2+(skoMC1 (12))))+(skoSC1 ((skoMC1 skoMC1 skoMC1 (-1+(skoMC1 (6))))+(skoSC1 ((skoMC1 skoMC1 skoMC1 (-1))+(skoSC1 ((skoMC1 skoMC1 skoMC1 (1/12))+(skoSC1 skoMC1 skoMC1 skoMC1 (1/12))))))))))<=(skoMC1 skoMC1 skoMC1 (-2+(skoMC1 (-6))))]/\[[(skoMC1 skoMC1 skoMC1 (-2))<(skoSC1 skoMC1 skoMC1 skoMC1 (2))]/\[[skoSC1<=5/4]/\[[2<=skoMC1]/\[[0<=skoSC1]/\[[0<skoMC1]/\[[0<=skoMC1]/\[[(skoMC1 (-1))<(skoSC1 skoMC1)]/\[[(skoSC1 skoMC1 (-1))<=skoMC1]/\[[(skoSC1 ((skoMC1 (1+(skoMC1 (-3))))+(skoSC1 ((skoMC1 (2+(skoMC1 (3))))+(skoSC1 ((skoMC1 skoMC1)+(skoSC1 skoMC1 (-1/12))))))))<=(skoMC1 (2+(skoMC1 (5))))]/\[(skoSC1 ((skoMC1 (1+(skoMC1 (-3))))+(skoSC1 ((skoMC1 (2+(skoMC1 (3))))+(skoSC1 ((skoMC1 (-1/6+skoMC1))+(skoSC1 skoMC1 (-1/4))))))))<=(skoMC1 (2+(skoMC1 (5))))]]]]]]]]]]]].

% In SMTLib2 format:
(declare-fun skoSC1 () Real) (declare-fun skoMC1 () Real) (assert (and (<= (* skoSC1 (* skoMC1 (* skoMC1 (* skoMC1 2.)))) (* skoMC1 (* skoMC1 (* skoMC1 (- 2.))))) (and (<= (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (+ 2. (* skoMC1 12.))))) (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (+ (- 1.) (* skoMC1 6.))))) (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (- 1.)))) (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (/ 1. 12.)))) (* skoSC1 (* skoMC1 (* skoMC1 (* skoMC1 (/ 1. 12.))))))))))))) (* skoMC1 (* skoMC1 (* skoMC1 (+ (- 2.) (* skoMC1 (- 6.))))))) (and (> (* skoSC1 (* skoMC1 (* skoMC1 (* skoMC1 2.)))) (* skoMC1 (* skoMC1 (* skoMC1 (- 2.))))) (and (<= skoSC1 (/ 5. 4.)) (and (<= 2. skoMC1) (and (<= 0. skoSC1) (and (> skoMC1 0.) (and (<= 0. skoMC1) (and (> (* skoSC1 skoMC1) (* skoMC1 (- 1.))) (and (<= (* skoSC1 (* skoMC1 (- 1.))) skoMC1) (and (<= (* skoSC1 (+ (* skoMC1 (+ 1. (* skoMC1 (- 3.)))) (* skoSC1 (+ (* skoMC1 (+ 2. (* skoMC1 3.))) (* skoSC1 (+ (* skoMC1 skoMC1) (* skoSC1 (* skoMC1 (/ (- 1.) 12.))))))))) (* skoMC1 (+ 2. (* skoMC1 5.)))) (<= (* skoSC1 (+ (* skoMC1 (+ 1. (* skoMC1 (- 3.)))) (* skoSC1 (+ (* skoMC1 (+ 2. (* skoMC1 3.))) (* skoSC1 (+ (* skoMC1 (+ (/ (- 1.) 6.) skoMC1)) (* skoSC1 (* skoMC1 (/ (- 1.) 4.))))))))) (* skoMC1 (+ 2. (* skoMC1 5.))))))))))))))))

% In GRF format:
(sequent " MetiTarski formula " (antecedent (<= (* skoSC1 (* skoMC1 (* skoMC1 (* skoMC1 2.)))) (* skoMC1 (* skoMC1 (* skoMC1 (- 2.))))) (<= (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (+ 2. (* skoMC1 12.))))) (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (+ (- 1.) (* skoMC1 6.))))) (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (- 1.)))) (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (/ 1. 12.)))) (* skoSC1 (* skoMC1 (* skoMC1 (* skoMC1 (/ 1. 12.))))))))))))) (* skoMC1 (* skoMC1 (* skoMC1 (+ (- 2.) (* skoMC1 (- 6.))))))) (> (* skoSC1 (* skoMC1 (* skoMC1 (* skoMC1 2.)))) (* skoMC1 (* skoMC1 (* skoMC1 (- 2.))))) (<= skoSC1 (/ 5. 4.)) (<= 2. skoMC1) (<= 0. skoSC1) (> skoMC1 0.) (<= 0. skoMC1) (> (* skoSC1 skoMC1) (* skoMC1 (- 1.))) (<= (* skoSC1 (* skoMC1 (- 1.))) skoMC1) (<= (* skoSC1 (+ (* skoMC1 (+ 1. (* skoMC1 (- 3.)))) (* skoSC1 (+ (* skoMC1 (+ 2. (* skoMC1 3.))) (* skoSC1 (+ (* skoMC1 skoMC1) (* skoSC1 (* skoMC1 (/ (- 1.) 12.))))))))) (* skoMC1 (+ 2. (* skoMC1 5.))))) (succedent (> (* skoSC1 (+ (* skoMC1 (+ 1. (* skoMC1 (- 3.)))) (* skoSC1 (+ (* skoMC1 (+ 2. (* skoMC1 3.))) (* skoSC1 (+ (* skoMC1 (+ (/ (- 1.) 6.) skoMC1)) (* skoSC1 (* skoMC1 (/ (- 1.) 4.))))))))) (* skoMC1 (+ 2. (* skoMC1 5.))))))
-----[end problem]-----

-----[begin problem]-----
% In Mathematica format:
Timing[Resolve[Exists[{skoSC1,skoMC1}, And[skoSC1*skoMC1*skoMC1*skoMC1*-2<=skoMC1*skoMC1*skoMC1*2,skoSC1*skoMC1*skoMC1*skoMC1*2>skoMC1*skoMC1*skoMC1*-2,skoSC1<=(5/4),2<=skoMC1,0<=skoSC1,skoMC1>0,0<=skoMC1,skoSC1*skoMC1>skoMC1*-1,skoSC1*skoMC1*-1<=skoMC1,skoSC1*(skoMC1*(1+skoMC1*-3)+skoSC1*(skoMC1*(2+skoMC1*3)+skoSC1*(skoMC1*skoMC1+skoSC1*skoMC1*(-1/12))))<=skoMC1*(2+skoMC1*5),skoSC1*(skoMC1*(1+skoMC1*-3)+skoSC1*(skoMC1*(2+skoMC1*3)+skoSC1*(skoMC1*((-1/6)+skoMC1)+skoSC1*skoMC1*(-1/4))))<=skoMC1*(2+skoMC1*5)]], Reals]]

% In QepcadB format:
(E skoSC1) (E skoMC1) [[(skoSC1 skoMC1 skoMC1 skoMC1 (-2))<=(skoMC1 skoMC1 skoMC1 (2))]/\[[(skoMC1 skoMC1 skoMC1 (-2))<(skoSC1 skoMC1 skoMC1 skoMC1 (2))]/\[[skoSC1<=5/4]/\[[2<=skoMC1]/\[[0<=skoSC1]/\[[0<skoMC1]/\[[0<=skoMC1]/\[[(skoMC1 (-1))<(skoSC1 skoMC1)]/\[[(skoSC1 skoMC1 (-1))<=skoMC1]/\[[(skoSC1 ((skoMC1 (1+(skoMC1 (-3))))+(skoSC1 ((skoMC1 (2+(skoMC1 (3))))+(skoSC1 ((skoMC1 skoMC1)+(skoSC1 skoMC1 (-1/12))))))))<=(skoMC1 (2+(skoMC1 (5))))]/\[(skoSC1 ((skoMC1 (1+(skoMC1 (-3))))+(skoSC1 ((skoMC1 (2+(skoMC1 (3))))+(skoSC1 ((skoMC1 (-1/6+skoMC1))+(skoSC1 skoMC1 (-1/4))))))))<=(skoMC1 (2+(skoMC1 (5))))]]]]]]]]]]].

% In SMTLib2 format:
(declare-fun skoSC1 () Real) (declare-fun skoMC1 () Real) (assert (and (<= (* skoSC1 (* skoMC1 (* skoMC1 (* skoMC1 (- 2.))))) (* skoMC1 (* skoMC1 (* skoMC1 2.)))) (and (> (* skoSC1 (* skoMC1 (* skoMC1 (* skoMC1 2.)))) (* skoMC1 (* skoMC1 (* skoMC1 (- 2.))))) (and (<= skoSC1 (/ 5. 4.)) (and (<= 2. skoMC1) (and (<= 0. skoSC1) (and (> skoMC1 0.) (and (<= 0. skoMC1) (and (> (* skoSC1 skoMC1) (* skoMC1 (- 1.))) (and (<= (* skoSC1 (* skoMC1 (- 1.))) skoMC1) (and (<= (* skoSC1 (+ (* skoMC1 (+ 1. (* skoMC1 (- 3.)))) (* skoSC1 (+ (* skoMC1 (+ 2. (* skoMC1 3.))) (* skoSC1 (+ (* skoMC1 skoMC1) (* skoSC1 (* skoMC1 (/ (- 1.) 12.))))))))) (* skoMC1 (+ 2. (* skoMC1 5.)))) (<= (* skoSC1 (+ (* skoMC1 (+ 1. (* skoMC1 (- 3.)))) (* skoSC1 (+ (* skoMC1 (+ 2. (* skoMC1 3.))) (* skoSC1 (+ (* skoMC1 (+ (/ (- 1.) 6.) skoMC1)) (* skoSC1 (* skoMC1 (/ (- 1.) 4.))))))))) (* skoMC1 (+ 2. (* skoMC1 5.)))))))))))))))

% In GRF format:
(sequent " MetiTarski formula " (antecedent (<= (* skoSC1 (* skoMC1 (* skoMC1 (* skoMC1 (- 2.))))) (* skoMC1 (* skoMC1 (* skoMC1 2.)))) (> (* skoSC1 (* skoMC1 (* skoMC1 (* skoMC1 2.)))) (* skoMC1 (* skoMC1 (* skoMC1 (- 2.))))) (<= skoSC1 (/ 5. 4.)) (<= 2. skoMC1) (<= 0. skoSC1) (> skoMC1 0.) (<= 0. skoMC1) (> (* skoSC1 skoMC1) (* skoMC1 (- 1.))) (<= (* skoSC1 (* skoMC1 (- 1.))) skoMC1) (<= (* skoSC1 (+ (* skoMC1 (+ 1. (* skoMC1 (- 3.)))) (* skoSC1 (+ (* skoMC1 (+ 2. (* skoMC1 3.))) (* skoSC1 (+ (* skoMC1 skoMC1) (* skoSC1 (* skoMC1 (/ (- 1.) 12.))))))))) (* skoMC1 (+ 2. (* skoMC1 5.))))) (succedent (> (* skoSC1 (+ (* skoMC1 (+ 1. (* skoMC1 (- 3.)))) (* skoSC1 (+ (* skoMC1 (+ 2. (* skoMC1 3.))) (* skoSC1 (+ (* skoMC1 (+ (/ (- 1.) 6.) skoMC1)) (* skoSC1 (* skoMC1 (/ (- 1.) 4.))))))))) (* skoMC1 (+ 2. (* skoMC1 5.))))))
-----[end problem]-----

-----[begin problem]-----
% In Mathematica format:
Timing[Resolve[Exists[{skoSC1,skoMC1}, And[skoSC1*(skoMC1*skoMC1*skoMC1*(2+skoMC1*12)+skoSC1*(skoMC1*skoMC1*skoMC1*(-1+skoMC1*6)+skoSC1*(skoMC1*skoMC1*skoMC1*-1+skoSC1*(skoMC1*skoMC1*skoMC1*(1/12)+skoSC1*skoMC1*skoMC1*skoMC1*(1/12)))))>skoMC1*skoMC1*skoMC1*(-2+skoMC1*-6),skoSC1*skoMC1*skoMC1*skoMC1*-2<=skoMC1*skoMC1*skoMC1*2,skoSC1*skoMC1*skoMC1*skoMC1*2>skoMC1*skoMC1*skoMC1*-2,skoSC1<=(5/4),2<=skoMC1,0<=skoSC1,skoMC1>0,0<=skoMC1,skoSC1*skoMC1>skoMC1*-1,skoSC1*skoMC1*-1<=skoMC1,skoSC1*(skoMC1*(1+skoMC1*-3)+skoSC1*(skoMC1*(2+skoMC1*3)+skoSC1*(skoMC1*skoMC1+skoSC1*skoMC1*(-1/12))))<=skoMC1*(2+skoMC1*5),skoSC1*(skoMC1*(1+skoMC1*-3)+skoSC1*(skoMC1*(2+skoMC1*3)+skoSC1*(skoMC1*((-1/6)+skoMC1)+skoSC1*skoMC1*(-1/4))))<=skoMC1*(2+skoMC1*5)]], Reals]]

% In QepcadB format:
(E skoSC1) (E skoMC1) [[(skoMC1 skoMC1 skoMC1 (-2+(skoMC1 (-6))))<(skoSC1 ((skoMC1 skoMC1 skoMC1 (2+(skoMC1 (12))))+(skoSC1 ((skoMC1 skoMC1 skoMC1 (-1+(skoMC1 (6))))+(skoSC1 ((skoMC1 skoMC1 skoMC1 (-1))+(skoSC1 ((skoMC1 skoMC1 skoMC1 (1/12))+(skoSC1 skoMC1 skoMC1 skoMC1 (1/12))))))))))]/\[[(skoSC1 skoMC1 skoMC1 skoMC1 (-2))<=(skoMC1 skoMC1 skoMC1 (2))]/\[[(skoMC1 skoMC1 skoMC1 (-2))<(skoSC1 skoMC1 skoMC1 skoMC1 (2))]/\[[skoSC1<=5/4]/\[[2<=skoMC1]/\[[0<=skoSC1]/\[[0<skoMC1]/\[[0<=skoMC1]/\[[(skoMC1 (-1))<(skoSC1 skoMC1)]/\[[(skoSC1 skoMC1 (-1))<=skoMC1]/\[[(skoSC1 ((skoMC1 (1+(skoMC1 (-3))))+(skoSC1 ((skoMC1 (2+(skoMC1 (3))))+(skoSC1 ((skoMC1 skoMC1)+(skoSC1 skoMC1 (-1/12))))))))<=(skoMC1 (2+(skoMC1 (5))))]/\[(skoSC1 ((skoMC1 (1+(skoMC1 (-3))))+(skoSC1 ((skoMC1 (2+(skoMC1 (3))))+(skoSC1 ((skoMC1 (-1/6+skoMC1))+(skoSC1 skoMC1 (-1/4))))))))<=(skoMC1 (2+(skoMC1 (5))))]]]]]]]]]]]].

% In SMTLib2 format:
(declare-fun skoSC1 () Real) (declare-fun skoMC1 () Real) (assert (and (> (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (+ 2. (* skoMC1 12.))))) (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (+ (- 1.) (* skoMC1 6.))))) (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (- 1.)))) (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (/ 1. 12.)))) (* skoSC1 (* skoMC1 (* skoMC1 (* skoMC1 (/ 1. 12.))))))))))))) (* skoMC1 (* skoMC1 (* skoMC1 (+ (- 2.) (* skoMC1 (- 6.))))))) (and (<= (* skoSC1 (* skoMC1 (* skoMC1 (* skoMC1 (- 2.))))) (* skoMC1 (* skoMC1 (* skoMC1 2.)))) (and (> (* skoSC1 (* skoMC1 (* skoMC1 (* skoMC1 2.)))) (* skoMC1 (* skoMC1 (* skoMC1 (- 2.))))) (and (<= skoSC1 (/ 5. 4.)) (and (<= 2. skoMC1) (and (<= 0. skoSC1) (and (> skoMC1 0.) (and (<= 0. skoMC1) (and (> (* skoSC1 skoMC1) (* skoMC1 (- 1.))) (and (<= (* skoSC1 (* skoMC1 (- 1.))) skoMC1) (and (<= (* skoSC1 (+ (* skoMC1 (+ 1. (* skoMC1 (- 3.)))) (* skoSC1 (+ (* skoMC1 (+ 2. (* skoMC1 3.))) (* skoSC1 (+ (* skoMC1 skoMC1) (* skoSC1 (* skoMC1 (/ (- 1.) 12.))))))))) (* skoMC1 (+ 2. (* skoMC1 5.)))) (<= (* skoSC1 (+ (* skoMC1 (+ 1. (* skoMC1 (- 3.)))) (* skoSC1 (+ (* skoMC1 (+ 2. (* skoMC1 3.))) (* skoSC1 (+ (* skoMC1 (+ (/ (- 1.) 6.) skoMC1)) (* skoSC1 (* skoMC1 (/ (- 1.) 4.))))))))) (* skoMC1 (+ 2. (* skoMC1 5.))))))))))))))))

% In GRF format:
(sequent " MetiTarski formula " (antecedent (> (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (+ 2. (* skoMC1 12.))))) (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (+ (- 1.) (* skoMC1 6.))))) (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (- 1.)))) (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (/ 1. 12.)))) (* skoSC1 (* skoMC1 (* skoMC1 (* skoMC1 (/ 1. 12.))))))))))))) (* skoMC1 (* skoMC1 (* skoMC1 (+ (- 2.) (* skoMC1 (- 6.))))))) (<= (* skoSC1 (* skoMC1 (* skoMC1 (* skoMC1 (- 2.))))) (* skoMC1 (* skoMC1 (* skoMC1 2.)))) (> (* skoSC1 (* skoMC1 (* skoMC1 (* skoMC1 2.)))) (* skoMC1 (* skoMC1 (* skoMC1 (- 2.))))) (<= skoSC1 (/ 5. 4.)) (<= 2. skoMC1) (<= 0. skoSC1) (> skoMC1 0.) (<= 0. skoMC1) (> (* skoSC1 skoMC1) (* skoMC1 (- 1.))) (<= (* skoSC1 (* skoMC1 (- 1.))) skoMC1) (<= (* skoSC1 (+ (* skoMC1 (+ 1. (* skoMC1 (- 3.)))) (* skoSC1 (+ (* skoMC1 (+ 2. (* skoMC1 3.))) (* skoSC1 (+ (* skoMC1 skoMC1) (* skoSC1 (* skoMC1 (/ (- 1.) 12.))))))))) (* skoMC1 (+ 2. (* skoMC1 5.))))) (succedent (> (* skoSC1 (+ (* skoMC1 (+ 1. (* skoMC1 (- 3.)))) (* skoSC1 (+ (* skoMC1 (+ 2. (* skoMC1 3.))) (* skoSC1 (+ (* skoMC1 (+ (/ (- 1.) 6.) skoMC1)) (* skoSC1 (* skoMC1 (/ (- 1.) 4.))))))))) (* skoMC1 (+ 2. (* skoMC1 5.))))))
-----[end problem]-----

-----[begin problem]-----
% In Mathematica format:
Timing[Resolve[Exists[{skoSC1,skoMC1}, And[skoSC1*skoMC1*skoMC1*skoMC1*-2<=skoMC1*skoMC1*skoMC1*2,skoSC1*skoMC1*skoMC1*skoMC1*-2<=skoMC1*skoMC1*skoMC1*2,skoSC1*skoMC1*skoMC1*skoMC1*2>skoMC1*skoMC1*skoMC1*-2,skoSC1<=(5/4),2<=skoMC1,0<=skoSC1,skoMC1>0,0<=skoMC1,skoSC1*skoMC1>skoMC1*-1,skoSC1*skoMC1*-1<=skoMC1,skoSC1*(skoMC1*(1+skoMC1*-3)+skoSC1*(skoMC1*(2+skoMC1*3)+skoSC1*(skoMC1*skoMC1+skoSC1*skoMC1*(-1/12))))<=skoMC1*(2+skoMC1*5),skoSC1*(skoMC1*(1+skoMC1*-3)+skoSC1*(skoMC1*(2+skoMC1*3)+skoSC1*(skoMC1*((-1/6)+skoMC1)+skoSC1*skoMC1*(-1/4))))<=skoMC1*(2+skoMC1*5)]], Reals]]

% In QepcadB format:
(E skoSC1) (E skoMC1) [[(skoSC1 skoMC1 skoMC1 skoMC1 (-2))<=(skoMC1 skoMC1 skoMC1 (2))]/\[[(skoSC1 skoMC1 skoMC1 skoMC1 (-2))<=(skoMC1 skoMC1 skoMC1 (2))]/\[[(skoMC1 skoMC1 skoMC1 (-2))<(skoSC1 skoMC1 skoMC1 skoMC1 (2))]/\[[skoSC1<=5/4]/\[[2<=skoMC1]/\[[0<=skoSC1]/\[[0<skoMC1]/\[[0<=skoMC1]/\[[(skoMC1 (-1))<(skoSC1 skoMC1)]/\[[(skoSC1 skoMC1 (-1))<=skoMC1]/\[[(skoSC1 ((skoMC1 (1+(skoMC1 (-3))))+(skoSC1 ((skoMC1 (2+(skoMC1 (3))))+(skoSC1 ((skoMC1 skoMC1)+(skoSC1 skoMC1 (-1/12))))))))<=(skoMC1 (2+(skoMC1 (5))))]/\[(skoSC1 ((skoMC1 (1+(skoMC1 (-3))))+(skoSC1 ((skoMC1 (2+(skoMC1 (3))))+(skoSC1 ((skoMC1 (-1/6+skoMC1))+(skoSC1 skoMC1 (-1/4))))))))<=(skoMC1 (2+(skoMC1 (5))))]]]]]]]]]]]].

% In SMTLib2 format:
(declare-fun skoSC1 () Real) (declare-fun skoMC1 () Real) (assert (and (<= (* skoSC1 (* skoMC1 (* skoMC1 (* skoMC1 (- 2.))))) (* skoMC1 (* skoMC1 (* skoMC1 2.)))) (and (<= (* skoSC1 (* skoMC1 (* skoMC1 (* skoMC1 (- 2.))))) (* skoMC1 (* skoMC1 (* skoMC1 2.)))) (and (> (* skoSC1 (* skoMC1 (* skoMC1 (* skoMC1 2.)))) (* skoMC1 (* skoMC1 (* skoMC1 (- 2.))))) (and (<= skoSC1 (/ 5. 4.)) (and (<= 2. skoMC1) (and (<= 0. skoSC1) (and (> skoMC1 0.) (and (<= 0. skoMC1) (and (> (* skoSC1 skoMC1) (* skoMC1 (- 1.))) (and (<= (* skoSC1 (* skoMC1 (- 1.))) skoMC1) (and (<= (* skoSC1 (+ (* skoMC1 (+ 1. (* skoMC1 (- 3.)))) (* skoSC1 (+ (* skoMC1 (+ 2. (* skoMC1 3.))) (* skoSC1 (+ (* skoMC1 skoMC1) (* skoSC1 (* skoMC1 (/ (- 1.) 12.))))))))) (* skoMC1 (+ 2. (* skoMC1 5.)))) (<= (* skoSC1 (+ (* skoMC1 (+ 1. (* skoMC1 (- 3.)))) (* skoSC1 (+ (* skoMC1 (+ 2. (* skoMC1 3.))) (* skoSC1 (+ (* skoMC1 (+ (/ (- 1.) 6.) skoMC1)) (* skoSC1 (* skoMC1 (/ (- 1.) 4.))))))))) (* skoMC1 (+ 2. (* skoMC1 5.))))))))))))))))

% In GRF format:
(sequent " MetiTarski formula " (antecedent (<= (* skoSC1 (* skoMC1 (* skoMC1 (* skoMC1 (- 2.))))) (* skoMC1 (* skoMC1 (* skoMC1 2.)))) (<= (* skoSC1 (* skoMC1 (* skoMC1 (* skoMC1 (- 2.))))) (* skoMC1 (* skoMC1 (* skoMC1 2.)))) (> (* skoSC1 (* skoMC1 (* skoMC1 (* skoMC1 2.)))) (* skoMC1 (* skoMC1 (* skoMC1 (- 2.))))) (<= skoSC1 (/ 5. 4.)) (<= 2. skoMC1) (<= 0. skoSC1) (> skoMC1 0.) (<= 0. skoMC1) (> (* skoSC1 skoMC1) (* skoMC1 (- 1.))) (<= (* skoSC1 (* skoMC1 (- 1.))) skoMC1) (<= (* skoSC1 (+ (* skoMC1 (+ 1. (* skoMC1 (- 3.)))) (* skoSC1 (+ (* skoMC1 (+ 2. (* skoMC1 3.))) (* skoSC1 (+ (* skoMC1 skoMC1) (* skoSC1 (* skoMC1 (/ (- 1.) 12.))))))))) (* skoMC1 (+ 2. (* skoMC1 5.))))) (succedent (> (* skoSC1 (+ (* skoMC1 (+ 1. (* skoMC1 (- 3.)))) (* skoSC1 (+ (* skoMC1 (+ 2. (* skoMC1 3.))) (* skoSC1 (+ (* skoMC1 (+ (/ (- 1.) 6.) skoMC1)) (* skoSC1 (* skoMC1 (/ (- 1.) 4.))))))))) (* skoMC1 (+ 2. (* skoMC1 5.))))))
-----[end problem]-----

-----[begin problem]-----
% In Mathematica format:
Timing[Resolve[Exists[{skoSC1,skoMC1}, And[skoSC1*skoMC1*skoMC1*skoMC1*2>skoMC1*skoMC1*skoMC1*-2,skoSC1*(skoMC1*skoMC1*skoMC1*(2+skoMC1*12)+skoSC1*(skoMC1*skoMC1*skoMC1*(-1+skoMC1*6)+skoSC1*(skoMC1*skoMC1*skoMC1*-1+skoSC1*(skoMC1*skoMC1*skoMC1*(1/12)+skoSC1*(skoMC1*skoMC1*skoMC1*(1/12)+skoSC1*(skoMC1*skoMC1*skoMC1*(-1/360)+skoSC1*(skoMC1*skoMC1*skoMC1*(-1/360)+skoSC1*(skoMC1*skoMC1*skoMC1*(1/20160)+skoSC1*(skoMC1*skoMC1*skoMC1*(1/20160)+skoSC1*(skoMC1*skoMC1*skoMC1*(-1/1814400)+skoSC1*(skoMC1*skoMC1*skoMC1*(-1/1814400)+skoSC1*(skoMC1*skoMC1*skoMC1*(1/239500800)+skoSC1*skoMC1*skoMC1*skoMC1*(1/239500800)))))))))))))>skoMC1*skoMC1*skoMC1*(-2+skoMC1*-6),skoSC1*skoMC1*skoMC1*skoMC1*-2<=skoMC1*skoMC1*skoMC1*2,skoSC1*skoMC1*skoMC1*skoMC1*2>skoMC1*skoMC1*skoMC1*-2,skoSC1<=(5/4),2<=skoMC1,0<=skoSC1,skoMC1>0,0<=skoMC1,skoSC1*skoMC1>skoMC1*-1,skoSC1*skoMC1*-1<=skoMC1,skoSC1*(skoMC1*(1+skoMC1*-3)+skoSC1*(skoMC1*(2+skoMC1*3)+skoSC1*(skoMC1*skoMC1+skoSC1*skoMC1*(-1/12))))<=skoMC1*(2+skoMC1*5),skoSC1*(skoMC1*(1+skoMC1*-3)+skoSC1*(skoMC1*(2+skoMC1*3)+skoSC1*(skoMC1*((-1/6)+skoMC1)+skoSC1*skoMC1*(-1/4))))<=skoMC1*(2+skoMC1*5)]], Reals]]

% In QepcadB format:
(E skoSC1) (E skoMC1) [[(skoMC1 skoMC1 skoMC1 (-2))<(skoSC1 skoMC1 skoMC1 skoMC1 (2))]/\[[(skoMC1 skoMC1 skoMC1 (-2+(skoMC1 (-6))))<(skoSC1 ((skoMC1 skoMC1 skoMC1 (2+(skoMC1 (12))))+(skoSC1 ((skoMC1 skoMC1 skoMC1 (-1+(skoMC1 (6))))+(skoSC1 ((skoMC1 skoMC1 skoMC1 (-1))+(skoSC1 ((skoMC1 skoMC1 skoMC1 (1/12))+(skoSC1 ((skoMC1 skoMC1 skoMC1 (1/12))+(skoSC1 ((skoMC1 skoMC1 skoMC1 (-1/360))+(skoSC1 ((skoMC1 skoMC1 skoMC1 (-1/360))+(skoSC1 ((skoMC1 skoMC1 skoMC1 (1/20160))+(skoSC1 ((skoMC1 skoMC1 skoMC1 (1/20160))+(skoSC1 ((skoMC1 skoMC1 skoMC1 (-1/1814400))+(skoSC1 ((skoMC1 skoMC1 skoMC1 (-1/1814400))+(skoSC1 ((skoMC1 skoMC1 skoMC1 (1/239500800))+(skoSC1 skoMC1 skoMC1 skoMC1 (1/239500800))))))))))))))))))))))))))]/\[[(skoSC1 skoMC1 skoMC1 skoMC1 (-2))<=(skoMC1 skoMC1 skoMC1 (2))]/\[[(skoMC1 skoMC1 skoMC1 (-2))<(skoSC1 skoMC1 skoMC1 skoMC1 (2))]/\[[skoSC1<=5/4]/\[[2<=skoMC1]/\[[0<=skoSC1]/\[[0<skoMC1]/\[[0<=skoMC1]/\[[(skoMC1 (-1))<(skoSC1 skoMC1)]/\[[(skoSC1 skoMC1 (-1))<=skoMC1]/\[[(skoSC1 ((skoMC1 (1+(skoMC1 (-3))))+(skoSC1 ((skoMC1 (2+(skoMC1 (3))))+(skoSC1 ((skoMC1 skoMC1)+(skoSC1 skoMC1 (-1/12))))))))<=(skoMC1 (2+(skoMC1 (5))))]/\[(skoSC1 ((skoMC1 (1+(skoMC1 (-3))))+(skoSC1 ((skoMC1 (2+(skoMC1 (3))))+(skoSC1 ((skoMC1 (-1/6+skoMC1))+(skoSC1 skoMC1 (-1/4))))))))<=(skoMC1 (2+(skoMC1 (5))))]]]]]]]]]]]]].

% In SMTLib2 format:
(declare-fun skoSC1 () Real) (declare-fun skoMC1 () Real) (assert (and (> (* skoSC1 (* skoMC1 (* skoMC1 (* skoMC1 2.)))) (* skoMC1 (* skoMC1 (* skoMC1 (- 2.))))) (and (> (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (+ 2. (* skoMC1 12.))))) (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (+ (- 1.) (* skoMC1 6.))))) (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (- 1.)))) (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (/ 1. 12.)))) (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (/ 1. 12.)))) (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (/ (- 1.) 360.)))) (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (/ (- 1.) 360.)))) (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (/ 1. 20160.)))) (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (/ 1. 20160.)))) (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (/ (- 1.) 1814400.)))) (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (/ (- 1.) 1814400.)))) (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (/ 1. 239500800.)))) (* skoSC1 (* skoMC1 (* skoMC1 (* skoMC1 (/ 1. 239500800.))))))))))))))))))))))))))))) (* skoMC1 (* skoMC1 (* skoMC1 (+ (- 2.) (* skoMC1 (- 6.))))))) (and (<= (* skoSC1 (* skoMC1 (* skoMC1 (* skoMC1 (- 2.))))) (* skoMC1 (* skoMC1 (* skoMC1 2.)))) (and (> (* skoSC1 (* skoMC1 (* skoMC1 (* skoMC1 2.)))) (* skoMC1 (* skoMC1 (* skoMC1 (- 2.))))) (and (<= skoSC1 (/ 5. 4.)) (and (<= 2. skoMC1) (and (<= 0. skoSC1) (and (> skoMC1 0.) (and (<= 0. skoMC1) (and (> (* skoSC1 skoMC1) (* skoMC1 (- 1.))) (and (<= (* skoSC1 (* skoMC1 (- 1.))) skoMC1) (and (<= (* skoSC1 (+ (* skoMC1 (+ 1. (* skoMC1 (- 3.)))) (* skoSC1 (+ (* skoMC1 (+ 2. (* skoMC1 3.))) (* skoSC1 (+ (* skoMC1 skoMC1) (* skoSC1 (* skoMC1 (/ (- 1.) 12.))))))))) (* skoMC1 (+ 2. (* skoMC1 5.)))) (<= (* skoSC1 (+ (* skoMC1 (+ 1. (* skoMC1 (- 3.)))) (* skoSC1 (+ (* skoMC1 (+ 2. (* skoMC1 3.))) (* skoSC1 (+ (* skoMC1 (+ (/ (- 1.) 6.) skoMC1)) (* skoSC1 (* skoMC1 (/ (- 1.) 4.))))))))) (* skoMC1 (+ 2. (* skoMC1 5.)))))))))))))))))

% In GRF format:
(sequent " MetiTarski formula " (antecedent (> (* skoSC1 (* skoMC1 (* skoMC1 (* skoMC1 2.)))) (* skoMC1 (* skoMC1 (* skoMC1 (- 2.))))) (> (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (+ 2. (* skoMC1 12.))))) (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (+ (- 1.) (* skoMC1 6.))))) (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (- 1.)))) (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (/ 1. 12.)))) (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (/ 1. 12.)))) (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (/ (- 1.) 360.)))) (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (/ (- 1.) 360.)))) (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (/ 1. 20160.)))) (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (/ 1. 20160.)))) (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (/ (- 1.) 1814400.)))) (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (/ (- 1.) 1814400.)))) (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (/ 1. 239500800.)))) (* skoSC1 (* skoMC1 (* skoMC1 (* skoMC1 (/ 1. 239500800.))))))))))))))))))))))))))))) (* skoMC1 (* skoMC1 (* skoMC1 (+ (- 2.) (* skoMC1 (- 6.))))))) (<= (* skoSC1 (* skoMC1 (* skoMC1 (* skoMC1 (- 2.))))) (* skoMC1 (* skoMC1 (* skoMC1 2.)))) (> (* skoSC1 (* skoMC1 (* skoMC1 (* skoMC1 2.)))) (* skoMC1 (* skoMC1 (* skoMC1 (- 2.))))) (<= skoSC1 (/ 5. 4.)) (<= 2. skoMC1) (<= 0. skoSC1) (> skoMC1 0.) (<= 0. skoMC1) (> (* skoSC1 skoMC1) (* skoMC1 (- 1.))) (<= (* skoSC1 (* skoMC1 (- 1.))) skoMC1) (<= (* skoSC1 (+ (* skoMC1 (+ 1. (* skoMC1 (- 3.)))) (* skoSC1 (+ (* skoMC1 (+ 2. (* skoMC1 3.))) (* skoSC1 (+ (* skoMC1 skoMC1) (* skoSC1 (* skoMC1 (/ (- 1.) 12.))))))))) (* skoMC1 (+ 2. (* skoMC1 5.))))) (succedent (> (* skoSC1 (+ (* skoMC1 (+ 1. (* skoMC1 (- 3.)))) (* skoSC1 (+ (* skoMC1 (+ 2. (* skoMC1 3.))) (* skoSC1 (+ (* skoMC1 (+ (/ (- 1.) 6.) skoMC1)) (* skoSC1 (* skoMC1 (/ (- 1.) 4.))))))))) (* skoMC1 (+ 2. (* skoMC1 5.))))))
-----[end problem]-----

-----[begin problem]-----
% In Mathematica format:
Timing[Resolve[Exists[{skoSC1,skoMC1}, And[skoSC1*skoMC1*skoMC1*skoMC1*2<=skoMC1*skoMC1*skoMC1*-2,skoSC1*(skoMC1*skoMC1*skoMC1*(2+skoMC1*12)+skoSC1*(skoMC1*skoMC1*skoMC1*(-1+skoMC1*6)+skoSC1*(skoMC1*skoMC1*skoMC1*-1+skoSC1*(skoMC1*skoMC1*skoMC1*(1/12)+skoSC1*(skoMC1*skoMC1*skoMC1*(1/12)+skoSC1*(skoMC1*skoMC1*skoMC1*(-1/360)+skoSC1*(skoMC1*skoMC1*skoMC1*(-1/360)+skoSC1*(skoMC1*skoMC1*skoMC1*(1/20160)+skoSC1*(skoMC1*skoMC1*skoMC1*(1/20160)+skoSC1*(skoMC1*skoMC1*skoMC1*(-1/1814400)+skoSC1*(skoMC1*skoMC1*skoMC1*(-1/1814400)+skoSC1*(skoMC1*skoMC1*skoMC1*(1/239500800)+skoSC1*skoMC1*skoMC1*skoMC1*(1/239500800)))))))))))))<=skoMC1*skoMC1*skoMC1*(-2+skoMC1*-6),skoSC1*skoMC1*skoMC1*skoMC1*-2<=skoMC1*skoMC1*skoMC1*2,skoSC1*skoMC1*skoMC1*skoMC1*2>skoMC1*skoMC1*skoMC1*-2,skoSC1<=(5/4),2<=skoMC1,0<=skoSC1,skoMC1>0,0<=skoMC1,skoSC1*skoMC1>skoMC1*-1,skoSC1*skoMC1*-1<=skoMC1,skoSC1*(skoMC1*(1+skoMC1*-3)+skoSC1*(skoMC1*(2+skoMC1*3)+skoSC1*(skoMC1*skoMC1+skoSC1*skoMC1*(-1/12))))<=skoMC1*(2+skoMC1*5),skoSC1*(skoMC1*(1+skoMC1*-3)+skoSC1*(skoMC1*(2+skoMC1*3)+skoSC1*(skoMC1*((-1/6)+skoMC1)+skoSC1*skoMC1*(-1/4))))<=skoMC1*(2+skoMC1*5)]], Reals]]

% In QepcadB format:
(E skoSC1) (E skoMC1) [[(skoSC1 skoMC1 skoMC1 skoMC1 (2))<=(skoMC1 skoMC1 skoMC1 (-2))]/\[[(skoSC1 ((skoMC1 skoMC1 skoMC1 (2+(skoMC1 (12))))+(skoSC1 ((skoMC1 skoMC1 skoMC1 (-1+(skoMC1 (6))))+(skoSC1 ((skoMC1 skoMC1 skoMC1 (-1))+(skoSC1 ((skoMC1 skoMC1 skoMC1 (1/12))+(skoSC1 ((skoMC1 skoMC1 skoMC1 (1/12))+(skoSC1 ((skoMC1 skoMC1 skoMC1 (-1/360))+(skoSC1 ((skoMC1 skoMC1 skoMC1 (-1/360))+(skoSC1 ((skoMC1 skoMC1 skoMC1 (1/20160))+(skoSC1 ((skoMC1 skoMC1 skoMC1 (1/20160))+(skoSC1 ((skoMC1 skoMC1 skoMC1 (-1/1814400))+(skoSC1 ((skoMC1 skoMC1 skoMC1 (-1/1814400))+(skoSC1 ((skoMC1 skoMC1 skoMC1 (1/239500800))+(skoSC1 skoMC1 skoMC1 skoMC1 (1/239500800))))))))))))))))))))))))))<=(skoMC1 skoMC1 skoMC1 (-2+(skoMC1 (-6))))]/\[[(skoSC1 skoMC1 skoMC1 skoMC1 (-2))<=(skoMC1 skoMC1 skoMC1 (2))]/\[[(skoMC1 skoMC1 skoMC1 (-2))<(skoSC1 skoMC1 skoMC1 skoMC1 (2))]/\[[skoSC1<=5/4]/\[[2<=skoMC1]/\[[0<=skoSC1]/\[[0<skoMC1]/\[[0<=skoMC1]/\[[(skoMC1 (-1))<(skoSC1 skoMC1)]/\[[(skoSC1 skoMC1 (-1))<=skoMC1]/\[[(skoSC1 ((skoMC1 (1+(skoMC1 (-3))))+(skoSC1 ((skoMC1 (2+(skoMC1 (3))))+(skoSC1 ((skoMC1 skoMC1)+(skoSC1 skoMC1 (-1/12))))))))<=(skoMC1 (2+(skoMC1 (5))))]/\[(skoSC1 ((skoMC1 (1+(skoMC1 (-3))))+(skoSC1 ((skoMC1 (2+(skoMC1 (3))))+(skoSC1 ((skoMC1 (-1/6+skoMC1))+(skoSC1 skoMC1 (-1/4))))))))<=(skoMC1 (2+(skoMC1 (5))))]]]]]]]]]]]]].

% In SMTLib2 format:
(declare-fun skoSC1 () Real) (declare-fun skoMC1 () Real) (assert (and (<= (* skoSC1 (* skoMC1 (* skoMC1 (* skoMC1 2.)))) (* skoMC1 (* skoMC1 (* skoMC1 (- 2.))))) (and (<= (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (+ 2. (* skoMC1 12.))))) (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (+ (- 1.) (* skoMC1 6.))))) (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (- 1.)))) (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (/ 1. 12.)))) (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (/ 1. 12.)))) (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (/ (- 1.) 360.)))) (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (/ (- 1.) 360.)))) (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (/ 1. 20160.)))) (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (/ 1. 20160.)))) (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (/ (- 1.) 1814400.)))) (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (/ (- 1.) 1814400.)))) (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (/ 1. 239500800.)))) (* skoSC1 (* skoMC1 (* skoMC1 (* skoMC1 (/ 1. 239500800.))))))))))))))))))))))))))))) (* skoMC1 (* skoMC1 (* skoMC1 (+ (- 2.) (* skoMC1 (- 6.))))))) (and (<= (* skoSC1 (* skoMC1 (* skoMC1 (* skoMC1 (- 2.))))) (* skoMC1 (* skoMC1 (* skoMC1 2.)))) (and (> (* skoSC1 (* skoMC1 (* skoMC1 (* skoMC1 2.)))) (* skoMC1 (* skoMC1 (* skoMC1 (- 2.))))) (and (<= skoSC1 (/ 5. 4.)) (and (<= 2. skoMC1) (and (<= 0. skoSC1) (and (> skoMC1 0.) (and (<= 0. skoMC1) (and (> (* skoSC1 skoMC1) (* skoMC1 (- 1.))) (and (<= (* skoSC1 (* skoMC1 (- 1.))) skoMC1) (and (<= (* skoSC1 (+ (* skoMC1 (+ 1. (* skoMC1 (- 3.)))) (* skoSC1 (+ (* skoMC1 (+ 2. (* skoMC1 3.))) (* skoSC1 (+ (* skoMC1 skoMC1) (* skoSC1 (* skoMC1 (/ (- 1.) 12.))))))))) (* skoMC1 (+ 2. (* skoMC1 5.)))) (<= (* skoSC1 (+ (* skoMC1 (+ 1. (* skoMC1 (- 3.)))) (* skoSC1 (+ (* skoMC1 (+ 2. (* skoMC1 3.))) (* skoSC1 (+ (* skoMC1 (+ (/ (- 1.) 6.) skoMC1)) (* skoSC1 (* skoMC1 (/ (- 1.) 4.))))))))) (* skoMC1 (+ 2. (* skoMC1 5.)))))))))))))))))

% In GRF format:
(sequent " MetiTarski formula " (antecedent (<= (* skoSC1 (* skoMC1 (* skoMC1 (* skoMC1 2.)))) (* skoMC1 (* skoMC1 (* skoMC1 (- 2.))))) (<= (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (+ 2. (* skoMC1 12.))))) (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (+ (- 1.) (* skoMC1 6.))))) (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (- 1.)))) (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (/ 1. 12.)))) (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (/ 1. 12.)))) (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (/ (- 1.) 360.)))) (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (/ (- 1.) 360.)))) (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (/ 1. 20160.)))) (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (/ 1. 20160.)))) (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (/ (- 1.) 1814400.)))) (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (/ (- 1.) 1814400.)))) (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (/ 1. 239500800.)))) (* skoSC1 (* skoMC1 (* skoMC1 (* skoMC1 (/ 1. 239500800.))))))))))))))))))))))))))))) (* skoMC1 (* skoMC1 (* skoMC1 (+ (- 2.) (* skoMC1 (- 6.))))))) (<= (* skoSC1 (* skoMC1 (* skoMC1 (* skoMC1 (- 2.))))) (* skoMC1 (* skoMC1 (* skoMC1 2.)))) (> (* skoSC1 (* skoMC1 (* skoMC1 (* skoMC1 2.)))) (* skoMC1 (* skoMC1 (* skoMC1 (- 2.))))) (<= skoSC1 (/ 5. 4.)) (<= 2. skoMC1) (<= 0. skoSC1) (> skoMC1 0.) (<= 0. skoMC1) (> (* skoSC1 skoMC1) (* skoMC1 (- 1.))) (<= (* skoSC1 (* skoMC1 (- 1.))) skoMC1) (<= (* skoSC1 (+ (* skoMC1 (+ 1. (* skoMC1 (- 3.)))) (* skoSC1 (+ (* skoMC1 (+ 2. (* skoMC1 3.))) (* skoSC1 (+ (* skoMC1 skoMC1) (* skoSC1 (* skoMC1 (/ (- 1.) 12.))))))))) (* skoMC1 (+ 2. (* skoMC1 5.))))) (succedent (> (* skoSC1 (+ (* skoMC1 (+ 1. (* skoMC1 (- 3.)))) (* skoSC1 (+ (* skoMC1 (+ 2. (* skoMC1 3.))) (* skoSC1 (+ (* skoMC1 (+ (/ (- 1.) 6.) skoMC1)) (* skoSC1 (* skoMC1 (/ (- 1.) 4.))))))))) (* skoMC1 (+ 2. (* skoMC1 5.))))))
-----[end problem]-----

-----[begin problem]-----
% In Mathematica format:
Timing[Resolve[Exists[{skoSC1,skoMC1}, And[skoSC1*skoMC1*skoMC1*skoMC1*-2<=skoMC1*skoMC1*skoMC1*2,skoSC1*skoMC1*skoMC1*skoMC1*-2<=skoMC1*skoMC1*skoMC1*2,skoSC1*skoMC1*skoMC1*skoMC1*2>skoMC1*skoMC1*skoMC1*-2,skoSC1<=(5/4),2<=skoMC1,0<=skoSC1,skoMC1>0,0<=skoMC1,skoSC1*skoMC1>skoMC1*-1,skoSC1*skoMC1*-1<=skoMC1,skoSC1*(skoMC1*(1+skoMC1*-3)+skoSC1*(skoMC1*(2+skoMC1*3)+skoSC1*(skoMC1*skoMC1+skoSC1*skoMC1*(-1/12))))<=skoMC1*(2+skoMC1*5),skoSC1*(skoMC1*(1+skoMC1*-3)+skoSC1*(skoMC1*(2+skoMC1*3)+skoSC1*(skoMC1*((-1/6)+skoMC1)+skoSC1*skoMC1*(-1/4))))<=skoMC1*(2+skoMC1*5)]], Reals]]

% In QepcadB format:
(E skoSC1) (E skoMC1) [[(skoSC1 skoMC1 skoMC1 skoMC1 (-2))<=(skoMC1 skoMC1 skoMC1 (2))]/\[[(skoSC1 skoMC1 skoMC1 skoMC1 (-2))<=(skoMC1 skoMC1 skoMC1 (2))]/\[[(skoMC1 skoMC1 skoMC1 (-2))<(skoSC1 skoMC1 skoMC1 skoMC1 (2))]/\[[skoSC1<=5/4]/\[[2<=skoMC1]/\[[0<=skoSC1]/\[[0<skoMC1]/\[[0<=skoMC1]/\[[(skoMC1 (-1))<(skoSC1 skoMC1)]/\[[(skoSC1 skoMC1 (-1))<=skoMC1]/\[[(skoSC1 ((skoMC1 (1+(skoMC1 (-3))))+(skoSC1 ((skoMC1 (2+(skoMC1 (3))))+(skoSC1 ((skoMC1 skoMC1)+(skoSC1 skoMC1 (-1/12))))))))<=(skoMC1 (2+(skoMC1 (5))))]/\[(skoSC1 ((skoMC1 (1+(skoMC1 (-3))))+(skoSC1 ((skoMC1 (2+(skoMC1 (3))))+(skoSC1 ((skoMC1 (-1/6+skoMC1))+(skoSC1 skoMC1 (-1/4))))))))<=(skoMC1 (2+(skoMC1 (5))))]]]]]]]]]]]].

% In SMTLib2 format:
(declare-fun skoSC1 () Real) (declare-fun skoMC1 () Real) (assert (and (<= (* skoSC1 (* skoMC1 (* skoMC1 (* skoMC1 (- 2.))))) (* skoMC1 (* skoMC1 (* skoMC1 2.)))) (and (<= (* skoSC1 (* skoMC1 (* skoMC1 (* skoMC1 (- 2.))))) (* skoMC1 (* skoMC1 (* skoMC1 2.)))) (and (> (* skoSC1 (* skoMC1 (* skoMC1 (* skoMC1 2.)))) (* skoMC1 (* skoMC1 (* skoMC1 (- 2.))))) (and (<= skoSC1 (/ 5. 4.)) (and (<= 2. skoMC1) (and (<= 0. skoSC1) (and (> skoMC1 0.) (and (<= 0. skoMC1) (and (> (* skoSC1 skoMC1) (* skoMC1 (- 1.))) (and (<= (* skoSC1 (* skoMC1 (- 1.))) skoMC1) (and (<= (* skoSC1 (+ (* skoMC1 (+ 1. (* skoMC1 (- 3.)))) (* skoSC1 (+ (* skoMC1 (+ 2. (* skoMC1 3.))) (* skoSC1 (+ (* skoMC1 skoMC1) (* skoSC1 (* skoMC1 (/ (- 1.) 12.))))))))) (* skoMC1 (+ 2. (* skoMC1 5.)))) (<= (* skoSC1 (+ (* skoMC1 (+ 1. (* skoMC1 (- 3.)))) (* skoSC1 (+ (* skoMC1 (+ 2. (* skoMC1 3.))) (* skoSC1 (+ (* skoMC1 (+ (/ (- 1.) 6.) skoMC1)) (* skoSC1 (* skoMC1 (/ (- 1.) 4.))))))))) (* skoMC1 (+ 2. (* skoMC1 5.))))))))))))))))

% In GRF format:
(sequent " MetiTarski formula " (antecedent (<= (* skoSC1 (* skoMC1 (* skoMC1 (* skoMC1 (- 2.))))) (* skoMC1 (* skoMC1 (* skoMC1 2.)))) (<= (* skoSC1 (* skoMC1 (* skoMC1 (* skoMC1 (- 2.))))) (* skoMC1 (* skoMC1 (* skoMC1 2.)))) (> (* skoSC1 (* skoMC1 (* skoMC1 (* skoMC1 2.)))) (* skoMC1 (* skoMC1 (* skoMC1 (- 2.))))) (<= skoSC1 (/ 5. 4.)) (<= 2. skoMC1) (<= 0. skoSC1) (> skoMC1 0.) (<= 0. skoMC1) (> (* skoSC1 skoMC1) (* skoMC1 (- 1.))) (<= (* skoSC1 (* skoMC1 (- 1.))) skoMC1) (<= (* skoSC1 (+ (* skoMC1 (+ 1. (* skoMC1 (- 3.)))) (* skoSC1 (+ (* skoMC1 (+ 2. (* skoMC1 3.))) (* skoSC1 (+ (* skoMC1 skoMC1) (* skoSC1 (* skoMC1 (/ (- 1.) 12.))))))))) (* skoMC1 (+ 2. (* skoMC1 5.))))) (succedent (> (* skoSC1 (+ (* skoMC1 (+ 1. (* skoMC1 (- 3.)))) (* skoSC1 (+ (* skoMC1 (+ 2. (* skoMC1 3.))) (* skoSC1 (+ (* skoMC1 (+ (/ (- 1.) 6.) skoMC1)) (* skoSC1 (* skoMC1 (/ (- 1.) 4.))))))))) (* skoMC1 (+ 2. (* skoMC1 5.))))))
-----[end problem]-----

-----[begin problem]-----
% In Mathematica format:
Timing[Resolve[Exists[{skoSC1,skoMC1}, And[skoSC1*(skoMC1*skoMC1*skoMC1*(-2+skoMC1*-12)+skoSC1*(skoMC1*skoMC1*skoMC1*(1+skoMC1*-6)+skoSC1*(skoMC1*skoMC1*skoMC1+skoSC1*(skoMC1*skoMC1*skoMC1*(-1/12)+skoSC1*skoMC1*skoMC1*skoMC1*(-1/12)))))<=skoMC1*skoMC1*skoMC1*(2+skoMC1*6),skoSC1*skoMC1*skoMC1*skoMC1*2>skoMC1*skoMC1*skoMC1*-2,skoSC1*skoMC1*skoMC1*skoMC1*-2<=skoMC1*skoMC1*skoMC1*2,skoSC1*skoMC1*skoMC1*skoMC1*2>skoMC1*skoMC1*skoMC1*-2,skoSC1<=(5/4),2<=skoMC1,0<=skoSC1,skoMC1>0,0<=skoMC1,skoSC1*skoMC1>skoMC1*-1,skoSC1*skoMC1*-1<=skoMC1,skoSC1*(skoMC1*(1+skoMC1*-3)+skoSC1*(skoMC1*(2+skoMC1*3)+skoSC1*(skoMC1*skoMC1+skoSC1*skoMC1*(-1/12))))<=skoMC1*(2+skoMC1*5),skoSC1*(skoMC1*(1+skoMC1*-3)+skoSC1*(skoMC1*(2+skoMC1*3)+skoSC1*(skoMC1*((-1/6)+skoMC1)+skoSC1*skoMC1*(-1/4))))<=skoMC1*(2+skoMC1*5)]], Reals]]

% In QepcadB format:
(E skoSC1) (E skoMC1) [[(skoSC1 ((skoMC1 skoMC1 skoMC1 (-2+(skoMC1 (-12))))+(skoSC1 ((skoMC1 skoMC1 skoMC1 (1+(skoMC1 (-6))))+(skoSC1 ((skoMC1 skoMC1 skoMC1)+(skoSC1 ((skoMC1 skoMC1 skoMC1 (-1/12))+(skoSC1 skoMC1 skoMC1 skoMC1 (-1/12))))))))))<=(skoMC1 skoMC1 skoMC1 (2+(skoMC1 (6))))]/\[[(skoMC1 skoMC1 skoMC1 (-2))<(skoSC1 skoMC1 skoMC1 skoMC1 (2))]/\[[(skoSC1 skoMC1 skoMC1 skoMC1 (-2))<=(skoMC1 skoMC1 skoMC1 (2))]/\[[(skoMC1 skoMC1 skoMC1 (-2))<(skoSC1 skoMC1 skoMC1 skoMC1 (2))]/\[[skoSC1<=5/4]/\[[2<=skoMC1]/\[[0<=skoSC1]/\[[0<skoMC1]/\[[0<=skoMC1]/\[[(skoMC1 (-1))<(skoSC1 skoMC1)]/\[[(skoSC1 skoMC1 (-1))<=skoMC1]/\[[(skoSC1 ((skoMC1 (1+(skoMC1 (-3))))+(skoSC1 ((skoMC1 (2+(skoMC1 (3))))+(skoSC1 ((skoMC1 skoMC1)+(skoSC1 skoMC1 (-1/12))))))))<=(skoMC1 (2+(skoMC1 (5))))]/\[(skoSC1 ((skoMC1 (1+(skoMC1 (-3))))+(skoSC1 ((skoMC1 (2+(skoMC1 (3))))+(skoSC1 ((skoMC1 (-1/6+skoMC1))+(skoSC1 skoMC1 (-1/4))))))))<=(skoMC1 (2+(skoMC1 (5))))]]]]]]]]]]]]].

% In SMTLib2 format:
(declare-fun skoSC1 () Real) (declare-fun skoMC1 () Real) (assert (and (<= (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (+ (- 2.) (* skoMC1 (- 12.)))))) (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (+ 1. (* skoMC1 (- 6.)))))) (* skoSC1 (+ (* skoMC1 (* skoMC1 skoMC1)) (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (/ (- 1.) 12.)))) (* skoSC1 (* skoMC1 (* skoMC1 (* skoMC1 (/ (- 1.) 12.))))))))))))) (* skoMC1 (* skoMC1 (* skoMC1 (+ 2. (* skoMC1 6.)))))) (and (> (* skoSC1 (* skoMC1 (* skoMC1 (* skoMC1 2.)))) (* skoMC1 (* skoMC1 (* skoMC1 (- 2.))))) (and (<= (* skoSC1 (* skoMC1 (* skoMC1 (* skoMC1 (- 2.))))) (* skoMC1 (* skoMC1 (* skoMC1 2.)))) (and (> (* skoSC1 (* skoMC1 (* skoMC1 (* skoMC1 2.)))) (* skoMC1 (* skoMC1 (* skoMC1 (- 2.))))) (and (<= skoSC1 (/ 5. 4.)) (and (<= 2. skoMC1) (and (<= 0. skoSC1) (and (> skoMC1 0.) (and (<= 0. skoMC1) (and (> (* skoSC1 skoMC1) (* skoMC1 (- 1.))) (and (<= (* skoSC1 (* skoMC1 (- 1.))) skoMC1) (and (<= (* skoSC1 (+ (* skoMC1 (+ 1. (* skoMC1 (- 3.)))) (* skoSC1 (+ (* skoMC1 (+ 2. (* skoMC1 3.))) (* skoSC1 (+ (* skoMC1 skoMC1) (* skoSC1 (* skoMC1 (/ (- 1.) 12.))))))))) (* skoMC1 (+ 2. (* skoMC1 5.)))) (<= (* skoSC1 (+ (* skoMC1 (+ 1. (* skoMC1 (- 3.)))) (* skoSC1 (+ (* skoMC1 (+ 2. (* skoMC1 3.))) (* skoSC1 (+ (* skoMC1 (+ (/ (- 1.) 6.) skoMC1)) (* skoSC1 (* skoMC1 (/ (- 1.) 4.))))))))) (* skoMC1 (+ 2. (* skoMC1 5.)))))))))))))))))

% In GRF format:
(sequent " MetiTarski formula " (antecedent (<= (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (+ (- 2.) (* skoMC1 (- 12.)))))) (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (+ 1. (* skoMC1 (- 6.)))))) (* skoSC1 (+ (* skoMC1 (* skoMC1 skoMC1)) (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (/ (- 1.) 12.)))) (* skoSC1 (* skoMC1 (* skoMC1 (* skoMC1 (/ (- 1.) 12.))))))))))))) (* skoMC1 (* skoMC1 (* skoMC1 (+ 2. (* skoMC1 6.)))))) (> (* skoSC1 (* skoMC1 (* skoMC1 (* skoMC1 2.)))) (* skoMC1 (* skoMC1 (* skoMC1 (- 2.))))) (<= (* skoSC1 (* skoMC1 (* skoMC1 (* skoMC1 (- 2.))))) (* skoMC1 (* skoMC1 (* skoMC1 2.)))) (> (* skoSC1 (* skoMC1 (* skoMC1 (* skoMC1 2.)))) (* skoMC1 (* skoMC1 (* skoMC1 (- 2.))))) (<= skoSC1 (/ 5. 4.)) (<= 2. skoMC1) (<= 0. skoSC1) (> skoMC1 0.) (<= 0. skoMC1) (> (* skoSC1 skoMC1) (* skoMC1 (- 1.))) (<= (* skoSC1 (* skoMC1 (- 1.))) skoMC1) (<= (* skoSC1 (+ (* skoMC1 (+ 1. (* skoMC1 (- 3.)))) (* skoSC1 (+ (* skoMC1 (+ 2. (* skoMC1 3.))) (* skoSC1 (+ (* skoMC1 skoMC1) (* skoSC1 (* skoMC1 (/ (- 1.) 12.))))))))) (* skoMC1 (+ 2. (* skoMC1 5.))))) (succedent (> (* skoSC1 (+ (* skoMC1 (+ 1. (* skoMC1 (- 3.)))) (* skoSC1 (+ (* skoMC1 (+ 2. (* skoMC1 3.))) (* skoSC1 (+ (* skoMC1 (+ (/ (- 1.) 6.) skoMC1)) (* skoSC1 (* skoMC1 (/ (- 1.) 4.))))))))) (* skoMC1 (+ 2. (* skoMC1 5.))))))
-----[end problem]-----

-----[begin problem]-----
% In Mathematica format:
Timing[Resolve[Exists[{skoSC1,skoMC1}, And[skoSC1*skoMC1*skoMC1*skoMC1*2<=skoMC1*skoMC1*skoMC1*-2,skoSC1*(skoMC1*skoMC1*skoMC1*(-2+skoMC1*-12)+skoSC1*(skoMC1*skoMC1*skoMC1*(1+skoMC1*-6)+skoSC1*(skoMC1*skoMC1*skoMC1+skoSC1*(skoMC1*skoMC1*skoMC1*(-1/12)+skoSC1*skoMC1*skoMC1*skoMC1*(-1/12)))))>skoMC1*skoMC1*skoMC1*(2+skoMC1*6),skoSC1*skoMC1*skoMC1*skoMC1*-2<=skoMC1*skoMC1*skoMC1*2,skoSC1*skoMC1*skoMC1*skoMC1*2>skoMC1*skoMC1*skoMC1*-2,skoSC1<=(5/4),2<=skoMC1,0<=skoSC1,skoMC1>0,0<=skoMC1,skoSC1*skoMC1>skoMC1*-1,skoSC1*skoMC1*-1<=skoMC1,skoSC1*(skoMC1*(1+skoMC1*-3)+skoSC1*(skoMC1*(2+skoMC1*3)+skoSC1*(skoMC1*skoMC1+skoSC1*skoMC1*(-1/12))))<=skoMC1*(2+skoMC1*5),skoSC1*(skoMC1*(1+skoMC1*-3)+skoSC1*(skoMC1*(2+skoMC1*3)+skoSC1*(skoMC1*((-1/6)+skoMC1)+skoSC1*skoMC1*(-1/4))))<=skoMC1*(2+skoMC1*5)]], Reals]]

% In QepcadB format:
(E skoSC1) (E skoMC1) [[(skoSC1 skoMC1 skoMC1 skoMC1 (2))<=(skoMC1 skoMC1 skoMC1 (-2))]/\[[(skoMC1 skoMC1 skoMC1 (2+(skoMC1 (6))))<(skoSC1 ((skoMC1 skoMC1 skoMC1 (-2+(skoMC1 (-12))))+(skoSC1 ((skoMC1 skoMC1 skoMC1 (1+(skoMC1 (-6))))+(skoSC1 ((skoMC1 skoMC1 skoMC1)+(skoSC1 ((skoMC1 skoMC1 skoMC1 (-1/12))+(skoSC1 skoMC1 skoMC1 skoMC1 (-1/12))))))))))]/\[[(skoSC1 skoMC1 skoMC1 skoMC1 (-2))<=(skoMC1 skoMC1 skoMC1 (2))]/\[[(skoMC1 skoMC1 skoMC1 (-2))<(skoSC1 skoMC1 skoMC1 skoMC1 (2))]/\[[skoSC1<=5/4]/\[[2<=skoMC1]/\[[0<=skoSC1]/\[[0<skoMC1]/\[[0<=skoMC1]/\[[(skoMC1 (-1))<(skoSC1 skoMC1)]/\[[(skoSC1 skoMC1 (-1))<=skoMC1]/\[[(skoSC1 ((skoMC1 (1+(skoMC1 (-3))))+(skoSC1 ((skoMC1 (2+(skoMC1 (3))))+(skoSC1 ((skoMC1 skoMC1)+(skoSC1 skoMC1 (-1/12))))))))<=(skoMC1 (2+(skoMC1 (5))))]/\[(skoSC1 ((skoMC1 (1+(skoMC1 (-3))))+(skoSC1 ((skoMC1 (2+(skoMC1 (3))))+(skoSC1 ((skoMC1 (-1/6+skoMC1))+(skoSC1 skoMC1 (-1/4))))))))<=(skoMC1 (2+(skoMC1 (5))))]]]]]]]]]]]]].

% In SMTLib2 format:
(declare-fun skoSC1 () Real) (declare-fun skoMC1 () Real) (assert (and (<= (* skoSC1 (* skoMC1 (* skoMC1 (* skoMC1 2.)))) (* skoMC1 (* skoMC1 (* skoMC1 (- 2.))))) (and (> (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (+ (- 2.) (* skoMC1 (- 12.)))))) (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (+ 1. (* skoMC1 (- 6.)))))) (* skoSC1 (+ (* skoMC1 (* skoMC1 skoMC1)) (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (/ (- 1.) 12.)))) (* skoSC1 (* skoMC1 (* skoMC1 (* skoMC1 (/ (- 1.) 12.))))))))))))) (* skoMC1 (* skoMC1 (* skoMC1 (+ 2. (* skoMC1 6.)))))) (and (<= (* skoSC1 (* skoMC1 (* skoMC1 (* skoMC1 (- 2.))))) (* skoMC1 (* skoMC1 (* skoMC1 2.)))) (and (> (* skoSC1 (* skoMC1 (* skoMC1 (* skoMC1 2.)))) (* skoMC1 (* skoMC1 (* skoMC1 (- 2.))))) (and (<= skoSC1 (/ 5. 4.)) (and (<= 2. skoMC1) (and (<= 0. skoSC1) (and (> skoMC1 0.) (and (<= 0. skoMC1) (and (> (* skoSC1 skoMC1) (* skoMC1 (- 1.))) (and (<= (* skoSC1 (* skoMC1 (- 1.))) skoMC1) (and (<= (* skoSC1 (+ (* skoMC1 (+ 1. (* skoMC1 (- 3.)))) (* skoSC1 (+ (* skoMC1 (+ 2. (* skoMC1 3.))) (* skoSC1 (+ (* skoMC1 skoMC1) (* skoSC1 (* skoMC1 (/ (- 1.) 12.))))))))) (* skoMC1 (+ 2. (* skoMC1 5.)))) (<= (* skoSC1 (+ (* skoMC1 (+ 1. (* skoMC1 (- 3.)))) (* skoSC1 (+ (* skoMC1 (+ 2. (* skoMC1 3.))) (* skoSC1 (+ (* skoMC1 (+ (/ (- 1.) 6.) skoMC1)) (* skoSC1 (* skoMC1 (/ (- 1.) 4.))))))))) (* skoMC1 (+ 2. (* skoMC1 5.)))))))))))))))))

% In GRF format:
(sequent " MetiTarski formula " (antecedent (<= (* skoSC1 (* skoMC1 (* skoMC1 (* skoMC1 2.)))) (* skoMC1 (* skoMC1 (* skoMC1 (- 2.))))) (> (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (+ (- 2.) (* skoMC1 (- 12.)))))) (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (+ 1. (* skoMC1 (- 6.)))))) (* skoSC1 (+ (* skoMC1 (* skoMC1 skoMC1)) (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (/ (- 1.) 12.)))) (* skoSC1 (* skoMC1 (* skoMC1 (* skoMC1 (/ (- 1.) 12.))))))))))))) (* skoMC1 (* skoMC1 (* skoMC1 (+ 2. (* skoMC1 6.)))))) (<= (* skoSC1 (* skoMC1 (* skoMC1 (* skoMC1 (- 2.))))) (* skoMC1 (* skoMC1 (* skoMC1 2.)))) (> (* skoSC1 (* skoMC1 (* skoMC1 (* skoMC1 2.)))) (* skoMC1 (* skoMC1 (* skoMC1 (- 2.))))) (<= skoSC1 (/ 5. 4.)) (<= 2. skoMC1) (<= 0. skoSC1) (> skoMC1 0.) (<= 0. skoMC1) (> (* skoSC1 skoMC1) (* skoMC1 (- 1.))) (<= (* skoSC1 (* skoMC1 (- 1.))) skoMC1) (<= (* skoSC1 (+ (* skoMC1 (+ 1. (* skoMC1 (- 3.)))) (* skoSC1 (+ (* skoMC1 (+ 2. (* skoMC1 3.))) (* skoSC1 (+ (* skoMC1 skoMC1) (* skoSC1 (* skoMC1 (/ (- 1.) 12.))))))))) (* skoMC1 (+ 2. (* skoMC1 5.))))) (succedent (> (* skoSC1 (+ (* skoMC1 (+ 1. (* skoMC1 (- 3.)))) (* skoSC1 (+ (* skoMC1 (+ 2. (* skoMC1 3.))) (* skoSC1 (+ (* skoMC1 (+ (/ (- 1.) 6.) skoMC1)) (* skoSC1 (* skoMC1 (/ (- 1.) 4.))))))))) (* skoMC1 (+ 2. (* skoMC1 5.))))))
-----[end problem]-----

-----[begin problem]-----
% In Mathematica format:
Timing[Resolve[Exists[{skoSC1,skoMC1}, And[skoSC1*(skoMC1*skoMC1*skoMC1*(-2+skoMC1*-12)+skoSC1*(skoMC1*skoMC1*skoMC1*(1+skoMC1*-6)+skoSC1*(skoMC1*skoMC1*skoMC1+skoSC1*(skoMC1*skoMC1*skoMC1*(-1/12)+skoSC1*skoMC1*skoMC1*skoMC1*(-1/12)))))<=skoMC1*skoMC1*skoMC1*(2+skoMC1*6),skoSC1*skoMC1*skoMC1*skoMC1*-2<=skoMC1*skoMC1*skoMC1*2,skoSC1*skoMC1*skoMC1*skoMC1*2>skoMC1*skoMC1*skoMC1*-2,skoSC1<=(5/4),2<=skoMC1,0<=skoSC1,skoMC1>0,0<=skoMC1,skoSC1*skoMC1>skoMC1*-1,skoSC1*skoMC1*-1<=skoMC1,skoSC1*(skoMC1*(1+skoMC1*-3)+skoSC1*(skoMC1*(2+skoMC1*3)+skoSC1*(skoMC1*skoMC1+skoSC1*skoMC1*(-1/12))))<=skoMC1*(2+skoMC1*5),skoSC1*(skoMC1*(1+skoMC1*-3)+skoSC1*(skoMC1*(2+skoMC1*3)+skoSC1*(skoMC1*((-1/6)+skoMC1)+skoSC1*skoMC1*(-1/4))))<=skoMC1*(2+skoMC1*5)]], Reals]]

% In QepcadB format:
(E skoSC1) (E skoMC1) [[(skoSC1 ((skoMC1 skoMC1 skoMC1 (-2+(skoMC1 (-12))))+(skoSC1 ((skoMC1 skoMC1 skoMC1 (1+(skoMC1 (-6))))+(skoSC1 ((skoMC1 skoMC1 skoMC1)+(skoSC1 ((skoMC1 skoMC1 skoMC1 (-1/12))+(skoSC1 skoMC1 skoMC1 skoMC1 (-1/12))))))))))<=(skoMC1 skoMC1 skoMC1 (2+(skoMC1 (6))))]/\[[(skoSC1 skoMC1 skoMC1 skoMC1 (-2))<=(skoMC1 skoMC1 skoMC1 (2))]/\[[(skoMC1 skoMC1 skoMC1 (-2))<(skoSC1 skoMC1 skoMC1 skoMC1 (2))]/\[[skoSC1<=5/4]/\[[2<=skoMC1]/\[[0<=skoSC1]/\[[0<skoMC1]/\[[0<=skoMC1]/\[[(skoMC1 (-1))<(skoSC1 skoMC1)]/\[[(skoSC1 skoMC1 (-1))<=skoMC1]/\[[(skoSC1 ((skoMC1 (1+(skoMC1 (-3))))+(skoSC1 ((skoMC1 (2+(skoMC1 (3))))+(skoSC1 ((skoMC1 skoMC1)+(skoSC1 skoMC1 (-1/12))))))))<=(skoMC1 (2+(skoMC1 (5))))]/\[(skoSC1 ((skoMC1 (1+(skoMC1 (-3))))+(skoSC1 ((skoMC1 (2+(skoMC1 (3))))+(skoSC1 ((skoMC1 (-1/6+skoMC1))+(skoSC1 skoMC1 (-1/4))))))))<=(skoMC1 (2+(skoMC1 (5))))]]]]]]]]]]]].

% In SMTLib2 format:
(declare-fun skoSC1 () Real) (declare-fun skoMC1 () Real) (assert (and (<= (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (+ (- 2.) (* skoMC1 (- 12.)))))) (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (+ 1. (* skoMC1 (- 6.)))))) (* skoSC1 (+ (* skoMC1 (* skoMC1 skoMC1)) (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (/ (- 1.) 12.)))) (* skoSC1 (* skoMC1 (* skoMC1 (* skoMC1 (/ (- 1.) 12.))))))))))))) (* skoMC1 (* skoMC1 (* skoMC1 (+ 2. (* skoMC1 6.)))))) (and (<= (* skoSC1 (* skoMC1 (* skoMC1 (* skoMC1 (- 2.))))) (* skoMC1 (* skoMC1 (* skoMC1 2.)))) (and (> (* skoSC1 (* skoMC1 (* skoMC1 (* skoMC1 2.)))) (* skoMC1 (* skoMC1 (* skoMC1 (- 2.))))) (and (<= skoSC1 (/ 5. 4.)) (and (<= 2. skoMC1) (and (<= 0. skoSC1) (and (> skoMC1 0.) (and (<= 0. skoMC1) (and (> (* skoSC1 skoMC1) (* skoMC1 (- 1.))) (and (<= (* skoSC1 (* skoMC1 (- 1.))) skoMC1) (and (<= (* skoSC1 (+ (* skoMC1 (+ 1. (* skoMC1 (- 3.)))) (* skoSC1 (+ (* skoMC1 (+ 2. (* skoMC1 3.))) (* skoSC1 (+ (* skoMC1 skoMC1) (* skoSC1 (* skoMC1 (/ (- 1.) 12.))))))))) (* skoMC1 (+ 2. (* skoMC1 5.)))) (<= (* skoSC1 (+ (* skoMC1 (+ 1. (* skoMC1 (- 3.)))) (* skoSC1 (+ (* skoMC1 (+ 2. (* skoMC1 3.))) (* skoSC1 (+ (* skoMC1 (+ (/ (- 1.) 6.) skoMC1)) (* skoSC1 (* skoMC1 (/ (- 1.) 4.))))))))) (* skoMC1 (+ 2. (* skoMC1 5.))))))))))))))))

% In GRF format:
(sequent " MetiTarski formula " (antecedent (<= (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (+ (- 2.) (* skoMC1 (- 12.)))))) (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (+ 1. (* skoMC1 (- 6.)))))) (* skoSC1 (+ (* skoMC1 (* skoMC1 skoMC1)) (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (/ (- 1.) 12.)))) (* skoSC1 (* skoMC1 (* skoMC1 (* skoMC1 (/ (- 1.) 12.))))))))))))) (* skoMC1 (* skoMC1 (* skoMC1 (+ 2. (* skoMC1 6.)))))) (<= (* skoSC1 (* skoMC1 (* skoMC1 (* skoMC1 (- 2.))))) (* skoMC1 (* skoMC1 (* skoMC1 2.)))) (> (* skoSC1 (* skoMC1 (* skoMC1 (* skoMC1 2.)))) (* skoMC1 (* skoMC1 (* skoMC1 (- 2.))))) (<= skoSC1 (/ 5. 4.)) (<= 2. skoMC1) (<= 0. skoSC1) (> skoMC1 0.) (<= 0. skoMC1) (> (* skoSC1 skoMC1) (* skoMC1 (- 1.))) (<= (* skoSC1 (* skoMC1 (- 1.))) skoMC1) (<= (* skoSC1 (+ (* skoMC1 (+ 1. (* skoMC1 (- 3.)))) (* skoSC1 (+ (* skoMC1 (+ 2. (* skoMC1 3.))) (* skoSC1 (+ (* skoMC1 skoMC1) (* skoSC1 (* skoMC1 (/ (- 1.) 12.))))))))) (* skoMC1 (+ 2. (* skoMC1 5.))))) (succedent (> (* skoSC1 (+ (* skoMC1 (+ 1. (* skoMC1 (- 3.)))) (* skoSC1 (+ (* skoMC1 (+ 2. (* skoMC1 3.))) (* skoSC1 (+ (* skoMC1 (+ (/ (- 1.) 6.) skoMC1)) (* skoSC1 (* skoMC1 (/ (- 1.) 4.))))))))) (* skoMC1 (+ 2. (* skoMC1 5.))))))
-----[end problem]-----

-----[begin problem]-----
% In Mathematica format:
Timing[Resolve[Exists[{skoSC1,skoMC1}, And[skoSC1*(skoMC1*skoMC1*skoMC1*(-2+skoMC1*-12)+skoSC1*(skoMC1*skoMC1*skoMC1*(1+skoMC1*-6)+skoSC1*(skoMC1*skoMC1*skoMC1+skoSC1*(skoMC1*skoMC1*skoMC1*(-1/12)+skoSC1*(skoMC1*skoMC1*skoMC1*(-1/12)+skoSC1*(skoMC1*skoMC1*skoMC1*(1/360)+skoSC1*(skoMC1*skoMC1*skoMC1*(1/360)+skoSC1*(skoMC1*skoMC1*skoMC1*(-1/20160)+skoSC1*(skoMC1*skoMC1*skoMC1*(-1/20160)+skoSC1*(skoMC1*skoMC1*skoMC1*(1/1814400)+skoSC1*(skoMC1*skoMC1*skoMC1*(1/1814400)+skoSC1*(skoMC1*skoMC1*skoMC1*(-1/239500800)+skoSC1*skoMC1*skoMC1*skoMC1*(-1/239500800)))))))))))))<=skoMC1*skoMC1*skoMC1*(2+skoMC1*6),skoSC1*skoMC1*skoMC1*skoMC1*2>skoMC1*skoMC1*skoMC1*-2,skoSC1*(skoMC1*skoMC1*skoMC1*(-2+skoMC1*-12)+skoSC1*(skoMC1*skoMC1*skoMC1*(1+skoMC1*-6)+skoSC1*(skoMC1*skoMC1*skoMC1+skoSC1*(skoMC1*skoMC1*skoMC1*(-1/12)+skoSC1*skoMC1*skoMC1*skoMC1*(-1/12)))))<=skoMC1*skoMC1*skoMC1*(2+skoMC1*6),skoSC1*skoMC1*skoMC1*skoMC1*-2<=skoMC1*skoMC1*skoMC1*2,skoSC1*skoMC1*skoMC1*skoMC1*2>skoMC1*skoMC1*skoMC1*-2,skoSC1<=(5/4),2<=skoMC1,0<=skoSC1,skoMC1>0,0<=skoMC1,skoSC1*skoMC1>skoMC1*-1,skoSC1*skoMC1*-1<=skoMC1,skoSC1*(skoMC1*(1+skoMC1*-3)+skoSC1*(skoMC1*(2+skoMC1*3)+skoSC1*(skoMC1*skoMC1+skoSC1*skoMC1*(-1/12))))<=skoMC1*(2+skoMC1*5),skoSC1*(skoMC1*(1+skoMC1*-3)+skoSC1*(skoMC1*(2+skoMC1*3)+skoSC1*(skoMC1*((-1/6)+skoMC1)+skoSC1*skoMC1*(-1/4))))<=skoMC1*(2+skoMC1*5)]], Reals]]

% In QepcadB format:
(E skoSC1) (E skoMC1) [[(skoSC1 ((skoMC1 skoMC1 skoMC1 (-2+(skoMC1 (-12))))+(skoSC1 ((skoMC1 skoMC1 skoMC1 (1+(skoMC1 (-6))))+(skoSC1 ((skoMC1 skoMC1 skoMC1)+(skoSC1 ((skoMC1 skoMC1 skoMC1 (-1/12))+(skoSC1 ((skoMC1 skoMC1 skoMC1 (-1/12))+(skoSC1 ((skoMC1 skoMC1 skoMC1 (1/360))+(skoSC1 ((skoMC1 skoMC1 skoMC1 (1/360))+(skoSC1 ((skoMC1 skoMC1 skoMC1 (-1/20160))+(skoSC1 ((skoMC1 skoMC1 skoMC1 (-1/20160))+(skoSC1 ((skoMC1 skoMC1 skoMC1 (1/1814400))+(skoSC1 ((skoMC1 skoMC1 skoMC1 (1/1814400))+(skoSC1 ((skoMC1 skoMC1 skoMC1 (-1/239500800))+(skoSC1 skoMC1 skoMC1 skoMC1 (-1/239500800))))))))))))))))))))))))))<=(skoMC1 skoMC1 skoMC1 (2+(skoMC1 (6))))]/\[[(skoMC1 skoMC1 skoMC1 (-2))<(skoSC1 skoMC1 skoMC1 skoMC1 (2))]/\[[(skoSC1 ((skoMC1 skoMC1 skoMC1 (-2+(skoMC1 (-12))))+(skoSC1 ((skoMC1 skoMC1 skoMC1 (1+(skoMC1 (-6))))+(skoSC1 ((skoMC1 skoMC1 skoMC1)+(skoSC1 ((skoMC1 skoMC1 skoMC1 (-1/12))+(skoSC1 skoMC1 skoMC1 skoMC1 (-1/12))))))))))<=(skoMC1 skoMC1 skoMC1 (2+(skoMC1 (6))))]/\[[(skoSC1 skoMC1 skoMC1 skoMC1 (-2))<=(skoMC1 skoMC1 skoMC1 (2))]/\[[(skoMC1 skoMC1 skoMC1 (-2))<(skoSC1 skoMC1 skoMC1 skoMC1 (2))]/\[[skoSC1<=5/4]/\[[2<=skoMC1]/\[[0<=skoSC1]/\[[0<skoMC1]/\[[0<=skoMC1]/\[[(skoMC1 (-1))<(skoSC1 skoMC1)]/\[[(skoSC1 skoMC1 (-1))<=skoMC1]/\[[(skoSC1 ((skoMC1 (1+(skoMC1 (-3))))+(skoSC1 ((skoMC1 (2+(skoMC1 (3))))+(skoSC1 ((skoMC1 skoMC1)+(skoSC1 skoMC1 (-1/12))))))))<=(skoMC1 (2+(skoMC1 (5))))]/\[(skoSC1 ((skoMC1 (1+(skoMC1 (-3))))+(skoSC1 ((skoMC1 (2+(skoMC1 (3))))+(skoSC1 ((skoMC1 (-1/6+skoMC1))+(skoSC1 skoMC1 (-1/4))))))))<=(skoMC1 (2+(skoMC1 (5))))]]]]]]]]]]]]]].

% In SMTLib2 format:
(declare-fun skoSC1 () Real) (declare-fun skoMC1 () Real) (assert (and (<= (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (+ (- 2.) (* skoMC1 (- 12.)))))) (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (+ 1. (* skoMC1 (- 6.)))))) (* skoSC1 (+ (* skoMC1 (* skoMC1 skoMC1)) (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (/ (- 1.) 12.)))) (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (/ (- 1.) 12.)))) (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (/ 1. 360.)))) (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (/ 1. 360.)))) (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (/ (- 1.) 20160.)))) (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (/ (- 1.) 20160.)))) (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (/ 1. 1814400.)))) (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (/ 1. 1814400.)))) (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (/ (- 1.) 239500800.)))) (* skoSC1 (* skoMC1 (* skoMC1 (* skoMC1 (/ (- 1.) 239500800.))))))))))))))))))))))))))))) (* skoMC1 (* skoMC1 (* skoMC1 (+ 2. (* skoMC1 6.)))))) (and (> (* skoSC1 (* skoMC1 (* skoMC1 (* skoMC1 2.)))) (* skoMC1 (* skoMC1 (* skoMC1 (- 2.))))) (and (<= (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (+ (- 2.) (* skoMC1 (- 12.)))))) (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (+ 1. (* skoMC1 (- 6.)))))) (* skoSC1 (+ (* skoMC1 (* skoMC1 skoMC1)) (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (/ (- 1.) 12.)))) (* skoSC1 (* skoMC1 (* skoMC1 (* skoMC1 (/ (- 1.) 12.))))))))))))) (* skoMC1 (* skoMC1 (* skoMC1 (+ 2. (* skoMC1 6.)))))) (and (<= (* skoSC1 (* skoMC1 (* skoMC1 (* skoMC1 (- 2.))))) (* skoMC1 (* skoMC1 (* skoMC1 2.)))) (and (> (* skoSC1 (* skoMC1 (* skoMC1 (* skoMC1 2.)))) (* skoMC1 (* skoMC1 (* skoMC1 (- 2.))))) (and (<= skoSC1 (/ 5. 4.)) (and (<= 2. skoMC1) (and (<= 0. skoSC1) (and (> skoMC1 0.) (and (<= 0. skoMC1) (and (> (* skoSC1 skoMC1) (* skoMC1 (- 1.))) (and (<= (* skoSC1 (* skoMC1 (- 1.))) skoMC1) (and (<= (* skoSC1 (+ (* skoMC1 (+ 1. (* skoMC1 (- 3.)))) (* skoSC1 (+ (* skoMC1 (+ 2. (* skoMC1 3.))) (* skoSC1 (+ (* skoMC1 skoMC1) (* skoSC1 (* skoMC1 (/ (- 1.) 12.))))))))) (* skoMC1 (+ 2. (* skoMC1 5.)))) (<= (* skoSC1 (+ (* skoMC1 (+ 1. (* skoMC1 (- 3.)))) (* skoSC1 (+ (* skoMC1 (+ 2. (* skoMC1 3.))) (* skoSC1 (+ (* skoMC1 (+ (/ (- 1.) 6.) skoMC1)) (* skoSC1 (* skoMC1 (/ (- 1.) 4.))))))))) (* skoMC1 (+ 2. (* skoMC1 5.))))))))))))))))))

% In GRF format:
(sequent " MetiTarski formula " (antecedent (<= (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (+ (- 2.) (* skoMC1 (- 12.)))))) (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (+ 1. (* skoMC1 (- 6.)))))) (* skoSC1 (+ (* skoMC1 (* skoMC1 skoMC1)) (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (/ (- 1.) 12.)))) (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (/ (- 1.) 12.)))) (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (/ 1. 360.)))) (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (/ 1. 360.)))) (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (/ (- 1.) 20160.)))) (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (/ (- 1.) 20160.)))) (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (/ 1. 1814400.)))) (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (/ 1. 1814400.)))) (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (/ (- 1.) 239500800.)))) (* skoSC1 (* skoMC1 (* skoMC1 (* skoMC1 (/ (- 1.) 239500800.))))))))))))))))))))))))))))) (* skoMC1 (* skoMC1 (* skoMC1 (+ 2. (* skoMC1 6.)))))) (> (* skoSC1 (* skoMC1 (* skoMC1 (* skoMC1 2.)))) (* skoMC1 (* skoMC1 (* skoMC1 (- 2.))))) (<= (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (+ (- 2.) (* skoMC1 (- 12.)))))) (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (+ 1. (* skoMC1 (- 6.)))))) (* skoSC1 (+ (* skoMC1 (* skoMC1 skoMC1)) (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (/ (- 1.) 12.)))) (* skoSC1 (* skoMC1 (* skoMC1 (* skoMC1 (/ (- 1.) 12.))))))))))))) (* skoMC1 (* skoMC1 (* skoMC1 (+ 2. (* skoMC1 6.)))))) (<= (* skoSC1 (* skoMC1 (* skoMC1 (* skoMC1 (- 2.))))) (* skoMC1 (* skoMC1 (* skoMC1 2.)))) (> (* skoSC1 (* skoMC1 (* skoMC1 (* skoMC1 2.)))) (* skoMC1 (* skoMC1 (* skoMC1 (- 2.))))) (<= skoSC1 (/ 5. 4.)) (<= 2. skoMC1) (<= 0. skoSC1) (> skoMC1 0.) (<= 0. skoMC1) (> (* skoSC1 skoMC1) (* skoMC1 (- 1.))) (<= (* skoSC1 (* skoMC1 (- 1.))) skoMC1) (<= (* skoSC1 (+ (* skoMC1 (+ 1. (* skoMC1 (- 3.)))) (* skoSC1 (+ (* skoMC1 (+ 2. (* skoMC1 3.))) (* skoSC1 (+ (* skoMC1 skoMC1) (* skoSC1 (* skoMC1 (/ (- 1.) 12.))))))))) (* skoMC1 (+ 2. (* skoMC1 5.))))) (succedent (> (* skoSC1 (+ (* skoMC1 (+ 1. (* skoMC1 (- 3.)))) (* skoSC1 (+ (* skoMC1 (+ 2. (* skoMC1 3.))) (* skoSC1 (+ (* skoMC1 (+ (/ (- 1.) 6.) skoMC1)) (* skoSC1 (* skoMC1 (/ (- 1.) 4.))))))))) (* skoMC1 (+ 2. (* skoMC1 5.))))))
-----[end problem]-----

-----[begin problem]-----
% In Mathematica format:
Timing[Resolve[Exists[{skoSC1,skoMC1}, And[skoSC1*skoMC1*skoMC1*skoMC1*2<=skoMC1*skoMC1*skoMC1*-2,skoSC1*(skoMC1*skoMC1*skoMC1*(-2+skoMC1*-12)+skoSC1*(skoMC1*skoMC1*skoMC1*(1+skoMC1*-6)+skoSC1*(skoMC1*skoMC1*skoMC1+skoSC1*(skoMC1*skoMC1*skoMC1*(-1/12)+skoSC1*(skoMC1*skoMC1*skoMC1*(-1/12)+skoSC1*(skoMC1*skoMC1*skoMC1*(1/360)+skoSC1*(skoMC1*skoMC1*skoMC1*(1/360)+skoSC1*(skoMC1*skoMC1*skoMC1*(-1/20160)+skoSC1*(skoMC1*skoMC1*skoMC1*(-1/20160)+skoSC1*(skoMC1*skoMC1*skoMC1*(1/1814400)+skoSC1*(skoMC1*skoMC1*skoMC1*(1/1814400)+skoSC1*(skoMC1*skoMC1*skoMC1*(-1/239500800)+skoSC1*skoMC1*skoMC1*skoMC1*(-1/239500800)))))))))))))>skoMC1*skoMC1*skoMC1*(2+skoMC1*6),skoSC1*(skoMC1*skoMC1*skoMC1*(-2+skoMC1*-12)+skoSC1*(skoMC1*skoMC1*skoMC1*(1+skoMC1*-6)+skoSC1*(skoMC1*skoMC1*skoMC1+skoSC1*(skoMC1*skoMC1*skoMC1*(-1/12)+skoSC1*skoMC1*skoMC1*skoMC1*(-1/12)))))<=skoMC1*skoMC1*skoMC1*(2+skoMC1*6),skoSC1*skoMC1*skoMC1*skoMC1*-2<=skoMC1*skoMC1*skoMC1*2,skoSC1*skoMC1*skoMC1*skoMC1*2>skoMC1*skoMC1*skoMC1*-2,skoSC1<=(5/4),2<=skoMC1,0<=skoSC1,skoMC1>0,0<=skoMC1,skoSC1*skoMC1>skoMC1*-1,skoSC1*skoMC1*-1<=skoMC1,skoSC1*(skoMC1*(1+skoMC1*-3)+skoSC1*(skoMC1*(2+skoMC1*3)+skoSC1*(skoMC1*skoMC1+skoSC1*skoMC1*(-1/12))))<=skoMC1*(2+skoMC1*5),skoSC1*(skoMC1*(1+skoMC1*-3)+skoSC1*(skoMC1*(2+skoMC1*3)+skoSC1*(skoMC1*((-1/6)+skoMC1)+skoSC1*skoMC1*(-1/4))))<=skoMC1*(2+skoMC1*5)]], Reals]]

% In QepcadB format:
(E skoSC1) (E skoMC1) [[(skoSC1 skoMC1 skoMC1 skoMC1 (2))<=(skoMC1 skoMC1 skoMC1 (-2))]/\[[(skoMC1 skoMC1 skoMC1 (2+(skoMC1 (6))))<(skoSC1 ((skoMC1 skoMC1 skoMC1 (-2+(skoMC1 (-12))))+(skoSC1 ((skoMC1 skoMC1 skoMC1 (1+(skoMC1 (-6))))+(skoSC1 ((skoMC1 skoMC1 skoMC1)+(skoSC1 ((skoMC1 skoMC1 skoMC1 (-1/12))+(skoSC1 ((skoMC1 skoMC1 skoMC1 (-1/12))+(skoSC1 ((skoMC1 skoMC1 skoMC1 (1/360))+(skoSC1 ((skoMC1 skoMC1 skoMC1 (1/360))+(skoSC1 ((skoMC1 skoMC1 skoMC1 (-1/20160))+(skoSC1 ((skoMC1 skoMC1 skoMC1 (-1/20160))+(skoSC1 ((skoMC1 skoMC1 skoMC1 (1/1814400))+(skoSC1 ((skoMC1 skoMC1 skoMC1 (1/1814400))+(skoSC1 ((skoMC1 skoMC1 skoMC1 (-1/239500800))+(skoSC1 skoMC1 skoMC1 skoMC1 (-1/239500800))))))))))))))))))))))))))]/\[[(skoSC1 ((skoMC1 skoMC1 skoMC1 (-2+(skoMC1 (-12))))+(skoSC1 ((skoMC1 skoMC1 skoMC1 (1+(skoMC1 (-6))))+(skoSC1 ((skoMC1 skoMC1 skoMC1)+(skoSC1 ((skoMC1 skoMC1 skoMC1 (-1/12))+(skoSC1 skoMC1 skoMC1 skoMC1 (-1/12))))))))))<=(skoMC1 skoMC1 skoMC1 (2+(skoMC1 (6))))]/\[[(skoSC1 skoMC1 skoMC1 skoMC1 (-2))<=(skoMC1 skoMC1 skoMC1 (2))]/\[[(skoMC1 skoMC1 skoMC1 (-2))<(skoSC1 skoMC1 skoMC1 skoMC1 (2))]/\[[skoSC1<=5/4]/\[[2<=skoMC1]/\[[0<=skoSC1]/\[[0<skoMC1]/\[[0<=skoMC1]/\[[(skoMC1 (-1))<(skoSC1 skoMC1)]/\[[(skoSC1 skoMC1 (-1))<=skoMC1]/\[[(skoSC1 ((skoMC1 (1+(skoMC1 (-3))))+(skoSC1 ((skoMC1 (2+(skoMC1 (3))))+(skoSC1 ((skoMC1 skoMC1)+(skoSC1 skoMC1 (-1/12))))))))<=(skoMC1 (2+(skoMC1 (5))))]/\[(skoSC1 ((skoMC1 (1+(skoMC1 (-3))))+(skoSC1 ((skoMC1 (2+(skoMC1 (3))))+(skoSC1 ((skoMC1 (-1/6+skoMC1))+(skoSC1 skoMC1 (-1/4))))))))<=(skoMC1 (2+(skoMC1 (5))))]]]]]]]]]]]]]].

% In SMTLib2 format:
(declare-fun skoSC1 () Real) (declare-fun skoMC1 () Real) (assert (and (<= (* skoSC1 (* skoMC1 (* skoMC1 (* skoMC1 2.)))) (* skoMC1 (* skoMC1 (* skoMC1 (- 2.))))) (and (> (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (+ (- 2.) (* skoMC1 (- 12.)))))) (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (+ 1. (* skoMC1 (- 6.)))))) (* skoSC1 (+ (* skoMC1 (* skoMC1 skoMC1)) (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (/ (- 1.) 12.)))) (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (/ (- 1.) 12.)))) (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (/ 1. 360.)))) (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (/ 1. 360.)))) (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (/ (- 1.) 20160.)))) (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (/ (- 1.) 20160.)))) (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (/ 1. 1814400.)))) (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (/ 1. 1814400.)))) (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (/ (- 1.) 239500800.)))) (* skoSC1 (* skoMC1 (* skoMC1 (* skoMC1 (/ (- 1.) 239500800.))))))))))))))))))))))))))))) (* skoMC1 (* skoMC1 (* skoMC1 (+ 2. (* skoMC1 6.)))))) (and (<= (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (+ (- 2.) (* skoMC1 (- 12.)))))) (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (+ 1. (* skoMC1 (- 6.)))))) (* skoSC1 (+ (* skoMC1 (* skoMC1 skoMC1)) (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (/ (- 1.) 12.)))) (* skoSC1 (* skoMC1 (* skoMC1 (* skoMC1 (/ (- 1.) 12.))))))))))))) (* skoMC1 (* skoMC1 (* skoMC1 (+ 2. (* skoMC1 6.)))))) (and (<= (* skoSC1 (* skoMC1 (* skoMC1 (* skoMC1 (- 2.))))) (* skoMC1 (* skoMC1 (* skoMC1 2.)))) (and (> (* skoSC1 (* skoMC1 (* skoMC1 (* skoMC1 2.)))) (* skoMC1 (* skoMC1 (* skoMC1 (- 2.))))) (and (<= skoSC1 (/ 5. 4.)) (and (<= 2. skoMC1) (and (<= 0. skoSC1) (and (> skoMC1 0.) (and (<= 0. skoMC1) (and (> (* skoSC1 skoMC1) (* skoMC1 (- 1.))) (and (<= (* skoSC1 (* skoMC1 (- 1.))) skoMC1) (and (<= (* skoSC1 (+ (* skoMC1 (+ 1. (* skoMC1 (- 3.)))) (* skoSC1 (+ (* skoMC1 (+ 2. (* skoMC1 3.))) (* skoSC1 (+ (* skoMC1 skoMC1) (* skoSC1 (* skoMC1 (/ (- 1.) 12.))))))))) (* skoMC1 (+ 2. (* skoMC1 5.)))) (<= (* skoSC1 (+ (* skoMC1 (+ 1. (* skoMC1 (- 3.)))) (* skoSC1 (+ (* skoMC1 (+ 2. (* skoMC1 3.))) (* skoSC1 (+ (* skoMC1 (+ (/ (- 1.) 6.) skoMC1)) (* skoSC1 (* skoMC1 (/ (- 1.) 4.))))))))) (* skoMC1 (+ 2. (* skoMC1 5.))))))))))))))))))

% In GRF format:
(sequent " MetiTarski formula " (antecedent (<= (* skoSC1 (* skoMC1 (* skoMC1 (* skoMC1 2.)))) (* skoMC1 (* skoMC1 (* skoMC1 (- 2.))))) (> (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (+ (- 2.) (* skoMC1 (- 12.)))))) (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (+ 1. (* skoMC1 (- 6.)))))) (* skoSC1 (+ (* skoMC1 (* skoMC1 skoMC1)) (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (/ (- 1.) 12.)))) (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (/ (- 1.) 12.)))) (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (/ 1. 360.)))) (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (/ 1. 360.)))) (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (/ (- 1.) 20160.)))) (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (/ (- 1.) 20160.)))) (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (/ 1. 1814400.)))) (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (/ 1. 1814400.)))) (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (/ (- 1.) 239500800.)))) (* skoSC1 (* skoMC1 (* skoMC1 (* skoMC1 (/ (- 1.) 239500800.))))))))))))))))))))))))))))) (* skoMC1 (* skoMC1 (* skoMC1 (+ 2. (* skoMC1 6.)))))) (<= (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (+ (- 2.) (* skoMC1 (- 12.)))))) (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (+ 1. (* skoMC1 (- 6.)))))) (* skoSC1 (+ (* skoMC1 (* skoMC1 skoMC1)) (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (/ (- 1.) 12.)))) (* skoSC1 (* skoMC1 (* skoMC1 (* skoMC1 (/ (- 1.) 12.))))))))))))) (* skoMC1 (* skoMC1 (* skoMC1 (+ 2. (* skoMC1 6.)))))) (<= (* skoSC1 (* skoMC1 (* skoMC1 (* skoMC1 (- 2.))))) (* skoMC1 (* skoMC1 (* skoMC1 2.)))) (> (* skoSC1 (* skoMC1 (* skoMC1 (* skoMC1 2.)))) (* skoMC1 (* skoMC1 (* skoMC1 (- 2.))))) (<= skoSC1 (/ 5. 4.)) (<= 2. skoMC1) (<= 0. skoSC1) (> skoMC1 0.) (<= 0. skoMC1) (> (* skoSC1 skoMC1) (* skoMC1 (- 1.))) (<= (* skoSC1 (* skoMC1 (- 1.))) skoMC1) (<= (* skoSC1 (+ (* skoMC1 (+ 1. (* skoMC1 (- 3.)))) (* skoSC1 (+ (* skoMC1 (+ 2. (* skoMC1 3.))) (* skoSC1 (+ (* skoMC1 skoMC1) (* skoSC1 (* skoMC1 (/ (- 1.) 12.))))))))) (* skoMC1 (+ 2. (* skoMC1 5.))))) (succedent (> (* skoSC1 (+ (* skoMC1 (+ 1. (* skoMC1 (- 3.)))) (* skoSC1 (+ (* skoMC1 (+ 2. (* skoMC1 3.))) (* skoSC1 (+ (* skoMC1 (+ (/ (- 1.) 6.) skoMC1)) (* skoSC1 (* skoMC1 (/ (- 1.) 4.))))))))) (* skoMC1 (+ 2. (* skoMC1 5.))))))
-----[end problem]-----

-----[begin problem]-----
% In Mathematica format:
Timing[Resolve[Exists[{skoSC1,skoMC1}, And[skoSC1*skoMC1*skoMC1*skoMC1*-2<=skoMC1*skoMC1*skoMC1*2,skoSC1*(skoMC1*skoMC1*skoMC1*(-2+skoMC1*-12)+skoSC1*(skoMC1*skoMC1*skoMC1*(1+skoMC1*-6)+skoSC1*(skoMC1*skoMC1*skoMC1+skoSC1*(skoMC1*skoMC1*skoMC1*(-1/12)+skoSC1*skoMC1*skoMC1*skoMC1*(-1/12)))))<=skoMC1*skoMC1*skoMC1*(2+skoMC1*6),skoSC1*skoMC1*skoMC1*skoMC1*-2<=skoMC1*skoMC1*skoMC1*2,skoSC1*skoMC1*skoMC1*skoMC1*2>skoMC1*skoMC1*skoMC1*-2,skoSC1<=(5/4),2<=skoMC1,0<=skoSC1,skoMC1>0,0<=skoMC1,skoSC1*skoMC1>skoMC1*-1,skoSC1*skoMC1*-1<=skoMC1,skoSC1*(skoMC1*(1+skoMC1*-3)+skoSC1*(skoMC1*(2+skoMC1*3)+skoSC1*(skoMC1*skoMC1+skoSC1*skoMC1*(-1/12))))<=skoMC1*(2+skoMC1*5),skoSC1*(skoMC1*(1+skoMC1*-3)+skoSC1*(skoMC1*(2+skoMC1*3)+skoSC1*(skoMC1*((-1/6)+skoMC1)+skoSC1*skoMC1*(-1/4))))<=skoMC1*(2+skoMC1*5)]], Reals]]

% In QepcadB format:
(E skoSC1) (E skoMC1) [[(skoSC1 skoMC1 skoMC1 skoMC1 (-2))<=(skoMC1 skoMC1 skoMC1 (2))]/\[[(skoSC1 ((skoMC1 skoMC1 skoMC1 (-2+(skoMC1 (-12))))+(skoSC1 ((skoMC1 skoMC1 skoMC1 (1+(skoMC1 (-6))))+(skoSC1 ((skoMC1 skoMC1 skoMC1)+(skoSC1 ((skoMC1 skoMC1 skoMC1 (-1/12))+(skoSC1 skoMC1 skoMC1 skoMC1 (-1/12))))))))))<=(skoMC1 skoMC1 skoMC1 (2+(skoMC1 (6))))]/\[[(skoSC1 skoMC1 skoMC1 skoMC1 (-2))<=(skoMC1 skoMC1 skoMC1 (2))]/\[[(skoMC1 skoMC1 skoMC1 (-2))<(skoSC1 skoMC1 skoMC1 skoMC1 (2))]/\[[skoSC1<=5/4]/\[[2<=skoMC1]/\[[0<=skoSC1]/\[[0<skoMC1]/\[[0<=skoMC1]/\[[(skoMC1 (-1))<(skoSC1 skoMC1)]/\[[(skoSC1 skoMC1 (-1))<=skoMC1]/\[[(skoSC1 ((skoMC1 (1+(skoMC1 (-3))))+(skoSC1 ((skoMC1 (2+(skoMC1 (3))))+(skoSC1 ((skoMC1 skoMC1)+(skoSC1 skoMC1 (-1/12))))))))<=(skoMC1 (2+(skoMC1 (5))))]/\[(skoSC1 ((skoMC1 (1+(skoMC1 (-3))))+(skoSC1 ((skoMC1 (2+(skoMC1 (3))))+(skoSC1 ((skoMC1 (-1/6+skoMC1))+(skoSC1 skoMC1 (-1/4))))))))<=(skoMC1 (2+(skoMC1 (5))))]]]]]]]]]]]]].

% In SMTLib2 format:
(declare-fun skoSC1 () Real) (declare-fun skoMC1 () Real) (assert (and (<= (* skoSC1 (* skoMC1 (* skoMC1 (* skoMC1 (- 2.))))) (* skoMC1 (* skoMC1 (* skoMC1 2.)))) (and (<= (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (+ (- 2.) (* skoMC1 (- 12.)))))) (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (+ 1. (* skoMC1 (- 6.)))))) (* skoSC1 (+ (* skoMC1 (* skoMC1 skoMC1)) (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (/ (- 1.) 12.)))) (* skoSC1 (* skoMC1 (* skoMC1 (* skoMC1 (/ (- 1.) 12.))))))))))))) (* skoMC1 (* skoMC1 (* skoMC1 (+ 2. (* skoMC1 6.)))))) (and (<= (* skoSC1 (* skoMC1 (* skoMC1 (* skoMC1 (- 2.))))) (* skoMC1 (* skoMC1 (* skoMC1 2.)))) (and (> (* skoSC1 (* skoMC1 (* skoMC1 (* skoMC1 2.)))) (* skoMC1 (* skoMC1 (* skoMC1 (- 2.))))) (and (<= skoSC1 (/ 5. 4.)) (and (<= 2. skoMC1) (and (<= 0. skoSC1) (and (> skoMC1 0.) (and (<= 0. skoMC1) (and (> (* skoSC1 skoMC1) (* skoMC1 (- 1.))) (and (<= (* skoSC1 (* skoMC1 (- 1.))) skoMC1) (and (<= (* skoSC1 (+ (* skoMC1 (+ 1. (* skoMC1 (- 3.)))) (* skoSC1 (+ (* skoMC1 (+ 2. (* skoMC1 3.))) (* skoSC1 (+ (* skoMC1 skoMC1) (* skoSC1 (* skoMC1 (/ (- 1.) 12.))))))))) (* skoMC1 (+ 2. (* skoMC1 5.)))) (<= (* skoSC1 (+ (* skoMC1 (+ 1. (* skoMC1 (- 3.)))) (* skoSC1 (+ (* skoMC1 (+ 2. (* skoMC1 3.))) (* skoSC1 (+ (* skoMC1 (+ (/ (- 1.) 6.) skoMC1)) (* skoSC1 (* skoMC1 (/ (- 1.) 4.))))))))) (* skoMC1 (+ 2. (* skoMC1 5.)))))))))))))))))

% In GRF format:
(sequent " MetiTarski formula " (antecedent (<= (* skoSC1 (* skoMC1 (* skoMC1 (* skoMC1 (- 2.))))) (* skoMC1 (* skoMC1 (* skoMC1 2.)))) (<= (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (+ (- 2.) (* skoMC1 (- 12.)))))) (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (+ 1. (* skoMC1 (- 6.)))))) (* skoSC1 (+ (* skoMC1 (* skoMC1 skoMC1)) (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (/ (- 1.) 12.)))) (* skoSC1 (* skoMC1 (* skoMC1 (* skoMC1 (/ (- 1.) 12.))))))))))))) (* skoMC1 (* skoMC1 (* skoMC1 (+ 2. (* skoMC1 6.)))))) (<= (* skoSC1 (* skoMC1 (* skoMC1 (* skoMC1 (- 2.))))) (* skoMC1 (* skoMC1 (* skoMC1 2.)))) (> (* skoSC1 (* skoMC1 (* skoMC1 (* skoMC1 2.)))) (* skoMC1 (* skoMC1 (* skoMC1 (- 2.))))) (<= skoSC1 (/ 5. 4.)) (<= 2. skoMC1) (<= 0. skoSC1) (> skoMC1 0.) (<= 0. skoMC1) (> (* skoSC1 skoMC1) (* skoMC1 (- 1.))) (<= (* skoSC1 (* skoMC1 (- 1.))) skoMC1) (<= (* skoSC1 (+ (* skoMC1 (+ 1. (* skoMC1 (- 3.)))) (* skoSC1 (+ (* skoMC1 (+ 2. (* skoMC1 3.))) (* skoSC1 (+ (* skoMC1 skoMC1) (* skoSC1 (* skoMC1 (/ (- 1.) 12.))))))))) (* skoMC1 (+ 2. (* skoMC1 5.))))) (succedent (> (* skoSC1 (+ (* skoMC1 (+ 1. (* skoMC1 (- 3.)))) (* skoSC1 (+ (* skoMC1 (+ 2. (* skoMC1 3.))) (* skoSC1 (+ (* skoMC1 (+ (/ (- 1.) 6.) skoMC1)) (* skoSC1 (* skoMC1 (/ (- 1.) 4.))))))))) (* skoMC1 (+ 2. (* skoMC1 5.))))))
-----[end problem]-----

-----[begin problem]-----
% In Mathematica format:
Timing[Resolve[Exists[{skoSC1,skoMC1}, And[skoSC1*skoMC1*skoMC1*skoMC1*-2<=skoMC1*skoMC1*skoMC1*2,skoSC1*(skoMC1*skoMC1*skoMC1*(-2+skoMC1*-12)+skoSC1*(skoMC1*skoMC1*skoMC1*(1+skoMC1*-6)+skoSC1*(skoMC1*skoMC1*skoMC1+skoSC1*(skoMC1*skoMC1*skoMC1*(-1/12)+skoSC1*skoMC1*skoMC1*skoMC1*(-1/12)))))<=skoMC1*skoMC1*skoMC1*(2+skoMC1*6),skoSC1*skoMC1*skoMC1*skoMC1*-2<=skoMC1*skoMC1*skoMC1*2,skoSC1*skoMC1*skoMC1*skoMC1*2>skoMC1*skoMC1*skoMC1*-2,skoSC1<=(5/4),2<=skoMC1,0<=skoSC1,skoMC1>0,0<=skoMC1,skoSC1*skoMC1>skoMC1*-1,skoSC1*skoMC1*-1<=skoMC1,skoSC1*(skoMC1*(1+skoMC1*-3)+skoSC1*(skoMC1*(2+skoMC1*3)+skoSC1*(skoMC1*skoMC1+skoSC1*skoMC1*(-1/12))))<=skoMC1*(2+skoMC1*5),skoSC1*(skoMC1*(1+skoMC1*-3)+skoSC1*(skoMC1*(2+skoMC1*3)+skoSC1*(skoMC1*((-1/6)+skoMC1)+skoSC1*skoMC1*(-1/4))))<=skoMC1*(2+skoMC1*5)]], Reals]]

% In QepcadB format:
(E skoSC1) (E skoMC1) [[(skoSC1 skoMC1 skoMC1 skoMC1 (-2))<=(skoMC1 skoMC1 skoMC1 (2))]/\[[(skoSC1 ((skoMC1 skoMC1 skoMC1 (-2+(skoMC1 (-12))))+(skoSC1 ((skoMC1 skoMC1 skoMC1 (1+(skoMC1 (-6))))+(skoSC1 ((skoMC1 skoMC1 skoMC1)+(skoSC1 ((skoMC1 skoMC1 skoMC1 (-1/12))+(skoSC1 skoMC1 skoMC1 skoMC1 (-1/12))))))))))<=(skoMC1 skoMC1 skoMC1 (2+(skoMC1 (6))))]/\[[(skoSC1 skoMC1 skoMC1 skoMC1 (-2))<=(skoMC1 skoMC1 skoMC1 (2))]/\[[(skoMC1 skoMC1 skoMC1 (-2))<(skoSC1 skoMC1 skoMC1 skoMC1 (2))]/\[[skoSC1<=5/4]/\[[2<=skoMC1]/\[[0<=skoSC1]/\[[0<skoMC1]/\[[0<=skoMC1]/\[[(skoMC1 (-1))<(skoSC1 skoMC1)]/\[[(skoSC1 skoMC1 (-1))<=skoMC1]/\[[(skoSC1 ((skoMC1 (1+(skoMC1 (-3))))+(skoSC1 ((skoMC1 (2+(skoMC1 (3))))+(skoSC1 ((skoMC1 skoMC1)+(skoSC1 skoMC1 (-1/12))))))))<=(skoMC1 (2+(skoMC1 (5))))]/\[(skoSC1 ((skoMC1 (1+(skoMC1 (-3))))+(skoSC1 ((skoMC1 (2+(skoMC1 (3))))+(skoSC1 ((skoMC1 (-1/6+skoMC1))+(skoSC1 skoMC1 (-1/4))))))))<=(skoMC1 (2+(skoMC1 (5))))]]]]]]]]]]]]].

% In SMTLib2 format:
(declare-fun skoSC1 () Real) (declare-fun skoMC1 () Real) (assert (and (<= (* skoSC1 (* skoMC1 (* skoMC1 (* skoMC1 (- 2.))))) (* skoMC1 (* skoMC1 (* skoMC1 2.)))) (and (<= (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (+ (- 2.) (* skoMC1 (- 12.)))))) (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (+ 1. (* skoMC1 (- 6.)))))) (* skoSC1 (+ (* skoMC1 (* skoMC1 skoMC1)) (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (/ (- 1.) 12.)))) (* skoSC1 (* skoMC1 (* skoMC1 (* skoMC1 (/ (- 1.) 12.))))))))))))) (* skoMC1 (* skoMC1 (* skoMC1 (+ 2. (* skoMC1 6.)))))) (and (<= (* skoSC1 (* skoMC1 (* skoMC1 (* skoMC1 (- 2.))))) (* skoMC1 (* skoMC1 (* skoMC1 2.)))) (and (> (* skoSC1 (* skoMC1 (* skoMC1 (* skoMC1 2.)))) (* skoMC1 (* skoMC1 (* skoMC1 (- 2.))))) (and (<= skoSC1 (/ 5. 4.)) (and (<= 2. skoMC1) (and (<= 0. skoSC1) (and (> skoMC1 0.) (and (<= 0. skoMC1) (and (> (* skoSC1 skoMC1) (* skoMC1 (- 1.))) (and (<= (* skoSC1 (* skoMC1 (- 1.))) skoMC1) (and (<= (* skoSC1 (+ (* skoMC1 (+ 1. (* skoMC1 (- 3.)))) (* skoSC1 (+ (* skoMC1 (+ 2. (* skoMC1 3.))) (* skoSC1 (+ (* skoMC1 skoMC1) (* skoSC1 (* skoMC1 (/ (- 1.) 12.))))))))) (* skoMC1 (+ 2. (* skoMC1 5.)))) (<= (* skoSC1 (+ (* skoMC1 (+ 1. (* skoMC1 (- 3.)))) (* skoSC1 (+ (* skoMC1 (+ 2. (* skoMC1 3.))) (* skoSC1 (+ (* skoMC1 (+ (/ (- 1.) 6.) skoMC1)) (* skoSC1 (* skoMC1 (/ (- 1.) 4.))))))))) (* skoMC1 (+ 2. (* skoMC1 5.)))))))))))))))))

% In GRF format:
(sequent " MetiTarski formula " (antecedent (<= (* skoSC1 (* skoMC1 (* skoMC1 (* skoMC1 (- 2.))))) (* skoMC1 (* skoMC1 (* skoMC1 2.)))) (<= (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (+ (- 2.) (* skoMC1 (- 12.)))))) (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (+ 1. (* skoMC1 (- 6.)))))) (* skoSC1 (+ (* skoMC1 (* skoMC1 skoMC1)) (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (/ (- 1.) 12.)))) (* skoSC1 (* skoMC1 (* skoMC1 (* skoMC1 (/ (- 1.) 12.))))))))))))) (* skoMC1 (* skoMC1 (* skoMC1 (+ 2. (* skoMC1 6.)))))) (<= (* skoSC1 (* skoMC1 (* skoMC1 (* skoMC1 (- 2.))))) (* skoMC1 (* skoMC1 (* skoMC1 2.)))) (> (* skoSC1 (* skoMC1 (* skoMC1 (* skoMC1 2.)))) (* skoMC1 (* skoMC1 (* skoMC1 (- 2.))))) (<= skoSC1 (/ 5. 4.)) (<= 2. skoMC1) (<= 0. skoSC1) (> skoMC1 0.) (<= 0. skoMC1) (> (* skoSC1 skoMC1) (* skoMC1 (- 1.))) (<= (* skoSC1 (* skoMC1 (- 1.))) skoMC1) (<= (* skoSC1 (+ (* skoMC1 (+ 1. (* skoMC1 (- 3.)))) (* skoSC1 (+ (* skoMC1 (+ 2. (* skoMC1 3.))) (* skoSC1 (+ (* skoMC1 skoMC1) (* skoSC1 (* skoMC1 (/ (- 1.) 12.))))))))) (* skoMC1 (+ 2. (* skoMC1 5.))))) (succedent (> (* skoSC1 (+ (* skoMC1 (+ 1. (* skoMC1 (- 3.)))) (* skoSC1 (+ (* skoMC1 (+ 2. (* skoMC1 3.))) (* skoSC1 (+ (* skoMC1 (+ (/ (- 1.) 6.) skoMC1)) (* skoSC1 (* skoMC1 (/ (- 1.) 4.))))))))) (* skoMC1 (+ 2. (* skoMC1 5.))))))
-----[end problem]-----

-----[begin problem]-----
% In Mathematica format:
Timing[Resolve[Exists[{skoSC1,skoMC1}, And[skoSC1*(skoMC1*skoMC1*skoMC1*(2+skoMC1*12)+skoSC1*(skoMC1*skoMC1*skoMC1*(-1+skoMC1*6)+skoSC1*(skoMC1*skoMC1*skoMC1*-1+skoSC1*(skoMC1*skoMC1*skoMC1*(1/12)+skoSC1*(skoMC1*skoMC1*skoMC1*(1/12)+skoSC1*(skoMC1*skoMC1*skoMC1*(-1/360)+skoSC1*(skoMC1*skoMC1*skoMC1*(-1/360)+skoSC1*(skoMC1*skoMC1*skoMC1*(1/20160)+skoSC1*(skoMC1*skoMC1*skoMC1*(1/20160)+skoSC1*(skoMC1*skoMC1*skoMC1*(-1/1814400)+skoSC1*(skoMC1*skoMC1*skoMC1*(-1/1814400)+skoSC1*(skoMC1*skoMC1*skoMC1*(1/239500800)+skoSC1*skoMC1*skoMC1*skoMC1*(1/239500800)))))))))))))>skoMC1*skoMC1*skoMC1*(-2+skoMC1*-6),skoSC1*(skoMC1*skoMC1*skoMC1*(-2+skoMC1*-12)+skoSC1*(skoMC1*skoMC1*skoMC1*(1+skoMC1*-6)+skoSC1*(skoMC1*skoMC1*skoMC1+skoSC1*(skoMC1*skoMC1*skoMC1*(-1/12)+skoSC1*skoMC1*skoMC1*skoMC1*(-1/12)))))<=skoMC1*skoMC1*skoMC1*(2+skoMC1*6),skoSC1*skoMC1*skoMC1*skoMC1*-2<=skoMC1*skoMC1*skoMC1*2,skoSC1*skoMC1*skoMC1*skoMC1*2>skoMC1*skoMC1*skoMC1*-2,skoSC1<=(5/4),2<=skoMC1,0<=skoSC1,skoMC1>0,0<=skoMC1,skoSC1*skoMC1>skoMC1*-1,skoSC1*skoMC1*-1<=skoMC1,skoSC1*(skoMC1*(1+skoMC1*-3)+skoSC1*(skoMC1*(2+skoMC1*3)+skoSC1*(skoMC1*skoMC1+skoSC1*skoMC1*(-1/12))))<=skoMC1*(2+skoMC1*5),skoSC1*(skoMC1*(1+skoMC1*-3)+skoSC1*(skoMC1*(2+skoMC1*3)+skoSC1*(skoMC1*((-1/6)+skoMC1)+skoSC1*skoMC1*(-1/4))))<=skoMC1*(2+skoMC1*5)]], Reals]]

% In QepcadB format:
(E skoSC1) (E skoMC1) [[(skoMC1 skoMC1 skoMC1 (-2+(skoMC1 (-6))))<(skoSC1 ((skoMC1 skoMC1 skoMC1 (2+(skoMC1 (12))))+(skoSC1 ((skoMC1 skoMC1 skoMC1 (-1+(skoMC1 (6))))+(skoSC1 ((skoMC1 skoMC1 skoMC1 (-1))+(skoSC1 ((skoMC1 skoMC1 skoMC1 (1/12))+(skoSC1 ((skoMC1 skoMC1 skoMC1 (1/12))+(skoSC1 ((skoMC1 skoMC1 skoMC1 (-1/360))+(skoSC1 ((skoMC1 skoMC1 skoMC1 (-1/360))+(skoSC1 ((skoMC1 skoMC1 skoMC1 (1/20160))+(skoSC1 ((skoMC1 skoMC1 skoMC1 (1/20160))+(skoSC1 ((skoMC1 skoMC1 skoMC1 (-1/1814400))+(skoSC1 ((skoMC1 skoMC1 skoMC1 (-1/1814400))+(skoSC1 ((skoMC1 skoMC1 skoMC1 (1/239500800))+(skoSC1 skoMC1 skoMC1 skoMC1 (1/239500800))))))))))))))))))))))))))]/\[[(skoSC1 ((skoMC1 skoMC1 skoMC1 (-2+(skoMC1 (-12))))+(skoSC1 ((skoMC1 skoMC1 skoMC1 (1+(skoMC1 (-6))))+(skoSC1 ((skoMC1 skoMC1 skoMC1)+(skoSC1 ((skoMC1 skoMC1 skoMC1 (-1/12))+(skoSC1 skoMC1 skoMC1 skoMC1 (-1/12))))))))))<=(skoMC1 skoMC1 skoMC1 (2+(skoMC1 (6))))]/\[[(skoSC1 skoMC1 skoMC1 skoMC1 (-2))<=(skoMC1 skoMC1 skoMC1 (2))]/\[[(skoMC1 skoMC1 skoMC1 (-2))<(skoSC1 skoMC1 skoMC1 skoMC1 (2))]/\[[skoSC1<=5/4]/\[[2<=skoMC1]/\[[0<=skoSC1]/\[[0<skoMC1]/\[[0<=skoMC1]/\[[(skoMC1 (-1))<(skoSC1 skoMC1)]/\[[(skoSC1 skoMC1 (-1))<=skoMC1]/\[[(skoSC1 ((skoMC1 (1+(skoMC1 (-3))))+(skoSC1 ((skoMC1 (2+(skoMC1 (3))))+(skoSC1 ((skoMC1 skoMC1)+(skoSC1 skoMC1 (-1/12))))))))<=(skoMC1 (2+(skoMC1 (5))))]/\[(skoSC1 ((skoMC1 (1+(skoMC1 (-3))))+(skoSC1 ((skoMC1 (2+(skoMC1 (3))))+(skoSC1 ((skoMC1 (-1/6+skoMC1))+(skoSC1 skoMC1 (-1/4))))))))<=(skoMC1 (2+(skoMC1 (5))))]]]]]]]]]]]]].

% In SMTLib2 format:
(declare-fun skoSC1 () Real) (declare-fun skoMC1 () Real) (assert (and (> (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (+ 2. (* skoMC1 12.))))) (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (+ (- 1.) (* skoMC1 6.))))) (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (- 1.)))) (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (/ 1. 12.)))) (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (/ 1. 12.)))) (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (/ (- 1.) 360.)))) (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (/ (- 1.) 360.)))) (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (/ 1. 20160.)))) (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (/ 1. 20160.)))) (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (/ (- 1.) 1814400.)))) (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (/ (- 1.) 1814400.)))) (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (/ 1. 239500800.)))) (* skoSC1 (* skoMC1 (* skoMC1 (* skoMC1 (/ 1. 239500800.))))))))))))))))))))))))))))) (* skoMC1 (* skoMC1 (* skoMC1 (+ (- 2.) (* skoMC1 (- 6.))))))) (and (<= (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (+ (- 2.) (* skoMC1 (- 12.)))))) (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (+ 1. (* skoMC1 (- 6.)))))) (* skoSC1 (+ (* skoMC1 (* skoMC1 skoMC1)) (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (/ (- 1.) 12.)))) (* skoSC1 (* skoMC1 (* skoMC1 (* skoMC1 (/ (- 1.) 12.))))))))))))) (* skoMC1 (* skoMC1 (* skoMC1 (+ 2. (* skoMC1 6.)))))) (and (<= (* skoSC1 (* skoMC1 (* skoMC1 (* skoMC1 (- 2.))))) (* skoMC1 (* skoMC1 (* skoMC1 2.)))) (and (> (* skoSC1 (* skoMC1 (* skoMC1 (* skoMC1 2.)))) (* skoMC1 (* skoMC1 (* skoMC1 (- 2.))))) (and (<= skoSC1 (/ 5. 4.)) (and (<= 2. skoMC1) (and (<= 0. skoSC1) (and (> skoMC1 0.) (and (<= 0. skoMC1) (and (> (* skoSC1 skoMC1) (* skoMC1 (- 1.))) (and (<= (* skoSC1 (* skoMC1 (- 1.))) skoMC1) (and (<= (* skoSC1 (+ (* skoMC1 (+ 1. (* skoMC1 (- 3.)))) (* skoSC1 (+ (* skoMC1 (+ 2. (* skoMC1 3.))) (* skoSC1 (+ (* skoMC1 skoMC1) (* skoSC1 (* skoMC1 (/ (- 1.) 12.))))))))) (* skoMC1 (+ 2. (* skoMC1 5.)))) (<= (* skoSC1 (+ (* skoMC1 (+ 1. (* skoMC1 (- 3.)))) (* skoSC1 (+ (* skoMC1 (+ 2. (* skoMC1 3.))) (* skoSC1 (+ (* skoMC1 (+ (/ (- 1.) 6.) skoMC1)) (* skoSC1 (* skoMC1 (/ (- 1.) 4.))))))))) (* skoMC1 (+ 2. (* skoMC1 5.)))))))))))))))))

% In GRF format:
(sequent " MetiTarski formula " (antecedent (> (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (+ 2. (* skoMC1 12.))))) (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (+ (- 1.) (* skoMC1 6.))))) (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (- 1.)))) (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (/ 1. 12.)))) (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (/ 1. 12.)))) (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (/ (- 1.) 360.)))) (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (/ (- 1.) 360.)))) (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (/ 1. 20160.)))) (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (/ 1. 20160.)))) (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (/ (- 1.) 1814400.)))) (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (/ (- 1.) 1814400.)))) (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (/ 1. 239500800.)))) (* skoSC1 (* skoMC1 (* skoMC1 (* skoMC1 (/ 1. 239500800.))))))))))))))))))))))))))))) (* skoMC1 (* skoMC1 (* skoMC1 (+ (- 2.) (* skoMC1 (- 6.))))))) (<= (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (+ (- 2.) (* skoMC1 (- 12.)))))) (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (+ 1. (* skoMC1 (- 6.)))))) (* skoSC1 (+ (* skoMC1 (* skoMC1 skoMC1)) (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (/ (- 1.) 12.)))) (* skoSC1 (* skoMC1 (* skoMC1 (* skoMC1 (/ (- 1.) 12.))))))))))))) (* skoMC1 (* skoMC1 (* skoMC1 (+ 2. (* skoMC1 6.)))))) (<= (* skoSC1 (* skoMC1 (* skoMC1 (* skoMC1 (- 2.))))) (* skoMC1 (* skoMC1 (* skoMC1 2.)))) (> (* skoSC1 (* skoMC1 (* skoMC1 (* skoMC1 2.)))) (* skoMC1 (* skoMC1 (* skoMC1 (- 2.))))) (<= skoSC1 (/ 5. 4.)) (<= 2. skoMC1) (<= 0. skoSC1) (> skoMC1 0.) (<= 0. skoMC1) (> (* skoSC1 skoMC1) (* skoMC1 (- 1.))) (<= (* skoSC1 (* skoMC1 (- 1.))) skoMC1) (<= (* skoSC1 (+ (* skoMC1 (+ 1. (* skoMC1 (- 3.)))) (* skoSC1 (+ (* skoMC1 (+ 2. (* skoMC1 3.))) (* skoSC1 (+ (* skoMC1 skoMC1) (* skoSC1 (* skoMC1 (/ (- 1.) 12.))))))))) (* skoMC1 (+ 2. (* skoMC1 5.))))) (succedent (> (* skoSC1 (+ (* skoMC1 (+ 1. (* skoMC1 (- 3.)))) (* skoSC1 (+ (* skoMC1 (+ 2. (* skoMC1 3.))) (* skoSC1 (+ (* skoMC1 (+ (/ (- 1.) 6.) skoMC1)) (* skoSC1 (* skoMC1 (/ (- 1.) 4.))))))))) (* skoMC1 (+ 2. (* skoMC1 5.))))))
-----[end problem]-----

-----[begin problem]-----
% In Mathematica format:
Timing[Resolve[Exists[{skoSC1,skoMC1}, And[skoMC1*skoMC1*skoMC1*-1<=0,skoMC1*skoMC1>0,skoMC1*skoMC1!=0,skoMC1!=0,skoSC1*(skoMC1*skoMC1*skoMC1*(-2+skoMC1*-12)+skoSC1*(skoMC1*skoMC1*skoMC1*(1+skoMC1*-6)+skoSC1*(skoMC1*skoMC1*skoMC1+skoSC1*(skoMC1*skoMC1*skoMC1*(-1/12)+skoSC1*skoMC1*skoMC1*skoMC1*(-1/12)))))<=skoMC1*skoMC1*skoMC1*(2+skoMC1*6),skoSC1*skoMC1*skoMC1*skoMC1*-2<=skoMC1*skoMC1*skoMC1*2,skoSC1*skoMC1*skoMC1*skoMC1*2>skoMC1*skoMC1*skoMC1*-2,skoSC1<=(5/4),2<=skoMC1,0<=skoSC1,skoMC1>0,0<=skoMC1,skoSC1*skoMC1>skoMC1*-1,skoSC1*skoMC1*-1<=skoMC1,skoSC1*(skoMC1*(1+skoMC1*-3)+skoSC1*(skoMC1*(2+skoMC1*3)+skoSC1*(skoMC1*skoMC1+skoSC1*skoMC1*(-1/12))))<=skoMC1*(2+skoMC1*5),skoSC1*(skoMC1*(1+skoMC1*-3)+skoSC1*(skoMC1*(2+skoMC1*3)+skoSC1*(skoMC1*((-1/6)+skoMC1)+skoSC1*skoMC1*(-1/4))))<=skoMC1*(2+skoMC1*5)]], Reals]]

% In QepcadB format:
(E skoSC1) (E skoMC1) [[(skoMC1 skoMC1 skoMC1 (-1))<=0]/\[[0<(skoMC1 skoMC1)]/\[[(skoMC1 skoMC1) /=0]/\[[skoMC1 /=0]/\[[(skoSC1 ((skoMC1 skoMC1 skoMC1 (-2+(skoMC1 (-12))))+(skoSC1 ((skoMC1 skoMC1 skoMC1 (1+(skoMC1 (-6))))+(skoSC1 ((skoMC1 skoMC1 skoMC1)+(skoSC1 ((skoMC1 skoMC1 skoMC1 (-1/12))+(skoSC1 skoMC1 skoMC1 skoMC1 (-1/12))))))))))<=(skoMC1 skoMC1 skoMC1 (2+(skoMC1 (6))))]/\[[(skoSC1 skoMC1 skoMC1 skoMC1 (-2))<=(skoMC1 skoMC1 skoMC1 (2))]/\[[(skoMC1 skoMC1 skoMC1 (-2))<(skoSC1 skoMC1 skoMC1 skoMC1 (2))]/\[[skoSC1<=5/4]/\[[2<=skoMC1]/\[[0<=skoSC1]/\[[0<skoMC1]/\[[0<=skoMC1]/\[[(skoMC1 (-1))<(skoSC1 skoMC1)]/\[[(skoSC1 skoMC1 (-1))<=skoMC1]/\[[(skoSC1 ((skoMC1 (1+(skoMC1 (-3))))+(skoSC1 ((skoMC1 (2+(skoMC1 (3))))+(skoSC1 ((skoMC1 skoMC1)+(skoSC1 skoMC1 (-1/12))))))))<=(skoMC1 (2+(skoMC1 (5))))]/\[(skoSC1 ((skoMC1 (1+(skoMC1 (-3))))+(skoSC1 ((skoMC1 (2+(skoMC1 (3))))+(skoSC1 ((skoMC1 (-1/6+skoMC1))+(skoSC1 skoMC1 (-1/4))))))))<=(skoMC1 (2+(skoMC1 (5))))]]]]]]]]]]]]]]]].

% In SMTLib2 format:
(declare-fun skoSC1 () Real) (declare-fun skoMC1 () Real) (assert (and (<= (* skoMC1 (* skoMC1 (* skoMC1 (- 1.)))) 0.) (and (> (* skoMC1 skoMC1) 0.) (and (!= (* skoMC1 skoMC1) 0.) (and (!= skoMC1 0.) (and (<= (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (+ (- 2.) (* skoMC1 (- 12.)))))) (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (+ 1. (* skoMC1 (- 6.)))))) (* skoSC1 (+ (* skoMC1 (* skoMC1 skoMC1)) (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (/ (- 1.) 12.)))) (* skoSC1 (* skoMC1 (* skoMC1 (* skoMC1 (/ (- 1.) 12.))))))))))))) (* skoMC1 (* skoMC1 (* skoMC1 (+ 2. (* skoMC1 6.)))))) (and (<= (* skoSC1 (* skoMC1 (* skoMC1 (* skoMC1 (- 2.))))) (* skoMC1 (* skoMC1 (* skoMC1 2.)))) (and (> (* skoSC1 (* skoMC1 (* skoMC1 (* skoMC1 2.)))) (* skoMC1 (* skoMC1 (* skoMC1 (- 2.))))) (and (<= skoSC1 (/ 5. 4.)) (and (<= 2. skoMC1) (and (<= 0. skoSC1) (and (> skoMC1 0.) (and (<= 0. skoMC1) (and (> (* skoSC1 skoMC1) (* skoMC1 (- 1.))) (and (<= (* skoSC1 (* skoMC1 (- 1.))) skoMC1) (and (<= (* skoSC1 (+ (* skoMC1 (+ 1. (* skoMC1 (- 3.)))) (* skoSC1 (+ (* skoMC1 (+ 2. (* skoMC1 3.))) (* skoSC1 (+ (* skoMC1 skoMC1) (* skoSC1 (* skoMC1 (/ (- 1.) 12.))))))))) (* skoMC1 (+ 2. (* skoMC1 5.)))) (<= (* skoSC1 (+ (* skoMC1 (+ 1. (* skoMC1 (- 3.)))) (* skoSC1 (+ (* skoMC1 (+ 2. (* skoMC1 3.))) (* skoSC1 (+ (* skoMC1 (+ (/ (- 1.) 6.) skoMC1)) (* skoSC1 (* skoMC1 (/ (- 1.) 4.))))))))) (* skoMC1 (+ 2. (* skoMC1 5.))))))))))))))))))))

% In GRF format:
(sequent " MetiTarski formula " (antecedent (<= (* skoMC1 (* skoMC1 (* skoMC1 (- 1.)))) 0.) (> (* skoMC1 skoMC1) 0.) (!= (* skoMC1 skoMC1) 0.) (!= skoMC1 0.) (<= (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (+ (- 2.) (* skoMC1 (- 12.)))))) (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (+ 1. (* skoMC1 (- 6.)))))) (* skoSC1 (+ (* skoMC1 (* skoMC1 skoMC1)) (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (/ (- 1.) 12.)))) (* skoSC1 (* skoMC1 (* skoMC1 (* skoMC1 (/ (- 1.) 12.))))))))))))) (* skoMC1 (* skoMC1 (* skoMC1 (+ 2. (* skoMC1 6.)))))) (<= (* skoSC1 (* skoMC1 (* skoMC1 (* skoMC1 (- 2.))))) (* skoMC1 (* skoMC1 (* skoMC1 2.)))) (> (* skoSC1 (* skoMC1 (* skoMC1 (* skoMC1 2.)))) (* skoMC1 (* skoMC1 (* skoMC1 (- 2.))))) (<= skoSC1 (/ 5. 4.)) (<= 2. skoMC1) (<= 0. skoSC1) (> skoMC1 0.) (<= 0. skoMC1) (> (* skoSC1 skoMC1) (* skoMC1 (- 1.))) (<= (* skoSC1 (* skoMC1 (- 1.))) skoMC1) (<= (* skoSC1 (+ (* skoMC1 (+ 1. (* skoMC1 (- 3.)))) (* skoSC1 (+ (* skoMC1 (+ 2. (* skoMC1 3.))) (* skoSC1 (+ (* skoMC1 skoMC1) (* skoSC1 (* skoMC1 (/ (- 1.) 12.))))))))) (* skoMC1 (+ 2. (* skoMC1 5.))))) (succedent (> (* skoSC1 (+ (* skoMC1 (+ 1. (* skoMC1 (- 3.)))) (* skoSC1 (+ (* skoMC1 (+ 2. (* skoMC1 3.))) (* skoSC1 (+ (* skoMC1 (+ (/ (- 1.) 6.) skoMC1)) (* skoSC1 (* skoMC1 (/ (- 1.) 4.))))))))) (* skoMC1 (+ 2. (* skoMC1 5.))))))
-----[end problem]-----

-----[begin problem]-----
% In Mathematica format:
Timing[Resolve[Exists[{skoSC1,skoMC1}, And[skoSC1>0,skoSC1*(skoMC1*(1+skoMC1*-3)+skoSC1*(skoMC1*(2+skoMC1*3)+skoSC1*(skoMC1*((-1/6)+skoMC1)+skoSC1*skoMC1*(-1/4))))<=skoMC1*(2+skoMC1*5),skoSC1*(skoMC1*(1+skoMC1*-3)+skoSC1*(skoMC1*(2+skoMC1*3)+skoSC1*(skoMC1*skoMC1+skoSC1*skoMC1*(-1/12))))<=skoMC1*(2+skoMC1*5),skoSC1*skoMC1*-1<=skoMC1,skoSC1*skoMC1>skoMC1*-1,0<=skoMC1,skoMC1>0,0<=skoSC1,2<=skoMC1,skoSC1<=(5/4),skoSC1*skoMC1*skoMC1*skoMC1*2>skoMC1*skoMC1*skoMC1*-2,skoSC1*skoMC1*skoMC1*skoMC1*-2<=skoMC1*skoMC1*skoMC1*2,skoSC1*(skoMC1*skoMC1*skoMC1*(-2+skoMC1*-12)+skoSC1*(skoMC1*skoMC1*skoMC1*(1+skoMC1*-6)+skoSC1*(skoMC1*skoMC1*skoMC1+skoSC1*(skoMC1*skoMC1*skoMC1*(-1/12)+skoSC1*skoMC1*skoMC1*skoMC1*(-1/12)))))<=skoMC1*skoMC1*skoMC1*(2+skoMC1*6)]], Reals]]

% In QepcadB format:
(E skoSC1) (E skoMC1) [[0<skoSC1]/\[[(skoSC1 ((skoMC1 (1+(skoMC1 (-3))))+(skoSC1 ((skoMC1 (2+(skoMC1 (3))))+(skoSC1 ((skoMC1 (-1/6+skoMC1))+(skoSC1 skoMC1 (-1/4))))))))<=(skoMC1 (2+(skoMC1 (5))))]/\[[(skoSC1 ((skoMC1 (1+(skoMC1 (-3))))+(skoSC1 ((skoMC1 (2+(skoMC1 (3))))+(skoSC1 ((skoMC1 skoMC1)+(skoSC1 skoMC1 (-1/12))))))))<=(skoMC1 (2+(skoMC1 (5))))]/\[[(skoSC1 skoMC1 (-1))<=skoMC1]/\[[(skoMC1 (-1))<(skoSC1 skoMC1)]/\[[0<=skoMC1]/\[[0<skoMC1]/\[[0<=skoSC1]/\[[2<=skoMC1]/\[[skoSC1<=5/4]/\[[(skoMC1 skoMC1 skoMC1 (-2))<(skoSC1 skoMC1 skoMC1 skoMC1 (2))]/\[[(skoSC1 skoMC1 skoMC1 skoMC1 (-2))<=(skoMC1 skoMC1 skoMC1 (2))]/\[(skoSC1 ((skoMC1 skoMC1 skoMC1 (-2+(skoMC1 (-12))))+(skoSC1 ((skoMC1 skoMC1 skoMC1 (1+(skoMC1 (-6))))+(skoSC1 ((skoMC1 skoMC1 skoMC1)+(skoSC1 ((skoMC1 skoMC1 skoMC1 (-1/12))+(skoSC1 skoMC1 skoMC1 skoMC1 (-1/12))))))))))<=(skoMC1 skoMC1 skoMC1 (2+(skoMC1 (6))))]]]]]]]]]]]]].

% In SMTLib2 format:
(declare-fun skoSC1 () Real) (declare-fun skoMC1 () Real) (assert (and (> skoSC1 0.) (and (<= (* skoSC1 (+ (* skoMC1 (+ 1. (* skoMC1 (- 3.)))) (* skoSC1 (+ (* skoMC1 (+ 2. (* skoMC1 3.))) (* skoSC1 (+ (* skoMC1 (+ (/ (- 1.) 6.) skoMC1)) (* skoSC1 (* skoMC1 (/ (- 1.) 4.))))))))) (* skoMC1 (+ 2. (* skoMC1 5.)))) (and (<= (* skoSC1 (+ (* skoMC1 (+ 1. (* skoMC1 (- 3.)))) (* skoSC1 (+ (* skoMC1 (+ 2. (* skoMC1 3.))) (* skoSC1 (+ (* skoMC1 skoMC1) (* skoSC1 (* skoMC1 (/ (- 1.) 12.))))))))) (* skoMC1 (+ 2. (* skoMC1 5.)))) (and (<= (* skoSC1 (* skoMC1 (- 1.))) skoMC1) (and (> (* skoSC1 skoMC1) (* skoMC1 (- 1.))) (and (<= 0. skoMC1) (and (> skoMC1 0.) (and (<= 0. skoSC1) (and (<= 2. skoMC1) (and (<= skoSC1 (/ 5. 4.)) (and (> (* skoSC1 (* skoMC1 (* skoMC1 (* skoMC1 2.)))) (* skoMC1 (* skoMC1 (* skoMC1 (- 2.))))) (and (<= (* skoSC1 (* skoMC1 (* skoMC1 (* skoMC1 (- 2.))))) (* skoMC1 (* skoMC1 (* skoMC1 2.)))) (<= (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (+ (- 2.) (* skoMC1 (- 12.)))))) (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (+ 1. (* skoMC1 (- 6.)))))) (* skoSC1 (+ (* skoMC1 (* skoMC1 skoMC1)) (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (/ (- 1.) 12.)))) (* skoSC1 (* skoMC1 (* skoMC1 (* skoMC1 (/ (- 1.) 12.))))))))))))) (* skoMC1 (* skoMC1 (* skoMC1 (+ 2. (* skoMC1 6.)))))))))))))))))))

% In GRF format:
(sequent " MetiTarski formula " (antecedent (> skoSC1 0.) (<= (* skoSC1 (+ (* skoMC1 (+ 1. (* skoMC1 (- 3.)))) (* skoSC1 (+ (* skoMC1 (+ 2. (* skoMC1 3.))) (* skoSC1 (+ (* skoMC1 (+ (/ (- 1.) 6.) skoMC1)) (* skoSC1 (* skoMC1 (/ (- 1.) 4.))))))))) (* skoMC1 (+ 2. (* skoMC1 5.)))) (<= (* skoSC1 (+ (* skoMC1 (+ 1. (* skoMC1 (- 3.)))) (* skoSC1 (+ (* skoMC1 (+ 2. (* skoMC1 3.))) (* skoSC1 (+ (* skoMC1 skoMC1) (* skoSC1 (* skoMC1 (/ (- 1.) 12.))))))))) (* skoMC1 (+ 2. (* skoMC1 5.)))) (<= (* skoSC1 (* skoMC1 (- 1.))) skoMC1) (> (* skoSC1 skoMC1) (* skoMC1 (- 1.))) (<= 0. skoMC1) (> skoMC1 0.) (<= 0. skoSC1) (<= 2. skoMC1) (<= skoSC1 (/ 5. 4.)) (> (* skoSC1 (* skoMC1 (* skoMC1 (* skoMC1 2.)))) (* skoMC1 (* skoMC1 (* skoMC1 (- 2.))))) (<= (* skoSC1 (* skoMC1 (* skoMC1 (* skoMC1 (- 2.))))) (* skoMC1 (* skoMC1 (* skoMC1 2.))))) (succedent (> (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (+ (- 2.) (* skoMC1 (- 12.)))))) (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (+ 1. (* skoMC1 (- 6.)))))) (* skoSC1 (+ (* skoMC1 (* skoMC1 skoMC1)) (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (/ (- 1.) 12.)))) (* skoSC1 (* skoMC1 (* skoMC1 (* skoMC1 (/ (- 1.) 12.))))))))))))) (* skoMC1 (* skoMC1 (* skoMC1 (+ 2. (* skoMC1 6.))))))))
-----[end problem]-----

-----[begin problem]-----
% In Mathematica format:
Timing[Resolve[Exists[{skoSC1,skoMC1}, And[skoSC1*skoMC1*-1<=skoMC1,skoSC1*(skoMC1*(1+skoMC1*-3)+skoSC1*(skoMC1*(2+skoMC1*3)+skoSC1*(skoMC1*((-1/6)+skoMC1)+skoSC1*skoMC1*(-1/4))))<=skoMC1*(2+skoMC1*5),skoSC1*(skoMC1*(1+skoMC1*-3)+skoSC1*(skoMC1*(2+skoMC1*3)+skoSC1*(skoMC1*skoMC1+skoSC1*skoMC1*(-1/12))))<=skoMC1*(2+skoMC1*5),skoSC1*skoMC1*-1<=skoMC1,skoSC1*skoMC1>skoMC1*-1,0<=skoMC1,skoMC1>0,0<=skoSC1,2<=skoMC1,skoSC1<=(5/4),skoSC1*skoMC1*skoMC1*skoMC1*2>skoMC1*skoMC1*skoMC1*-2,skoSC1*skoMC1*skoMC1*skoMC1*-2<=skoMC1*skoMC1*skoMC1*2,skoSC1*(skoMC1*skoMC1*skoMC1*(-2+skoMC1*-12)+skoSC1*(skoMC1*skoMC1*skoMC1*(1+skoMC1*-6)+skoSC1*(skoMC1*skoMC1*skoMC1+skoSC1*(skoMC1*skoMC1*skoMC1*(-1/12)+skoSC1*skoMC1*skoMC1*skoMC1*(-1/12)))))<=skoMC1*skoMC1*skoMC1*(2+skoMC1*6)]], Reals]]

% In QepcadB format:
(E skoSC1) (E skoMC1) [[(skoSC1 skoMC1 (-1))<=skoMC1]/\[[(skoSC1 ((skoMC1 (1+(skoMC1 (-3))))+(skoSC1 ((skoMC1 (2+(skoMC1 (3))))+(skoSC1 ((skoMC1 (-1/6+skoMC1))+(skoSC1 skoMC1 (-1/4))))))))<=(skoMC1 (2+(skoMC1 (5))))]/\[[(skoSC1 ((skoMC1 (1+(skoMC1 (-3))))+(skoSC1 ((skoMC1 (2+(skoMC1 (3))))+(skoSC1 ((skoMC1 skoMC1)+(skoSC1 skoMC1 (-1/12))))))))<=(skoMC1 (2+(skoMC1 (5))))]/\[[(skoSC1 skoMC1 (-1))<=skoMC1]/\[[(skoMC1 (-1))<(skoSC1 skoMC1)]/\[[0<=skoMC1]/\[[0<skoMC1]/\[[0<=skoSC1]/\[[2<=skoMC1]/\[[skoSC1<=5/4]/\[[(skoMC1 skoMC1 skoMC1 (-2))<(skoSC1 skoMC1 skoMC1 skoMC1 (2))]/\[[(skoSC1 skoMC1 skoMC1 skoMC1 (-2))<=(skoMC1 skoMC1 skoMC1 (2))]/\[(skoSC1 ((skoMC1 skoMC1 skoMC1 (-2+(skoMC1 (-12))))+(skoSC1 ((skoMC1 skoMC1 skoMC1 (1+(skoMC1 (-6))))+(skoSC1 ((skoMC1 skoMC1 skoMC1)+(skoSC1 ((skoMC1 skoMC1 skoMC1 (-1/12))+(skoSC1 skoMC1 skoMC1 skoMC1 (-1/12))))))))))<=(skoMC1 skoMC1 skoMC1 (2+(skoMC1 (6))))]]]]]]]]]]]]].

% In SMTLib2 format:
(declare-fun skoSC1 () Real) (declare-fun skoMC1 () Real) (assert (and (<= (* skoSC1 (* skoMC1 (- 1.))) skoMC1) (and (<= (* skoSC1 (+ (* skoMC1 (+ 1. (* skoMC1 (- 3.)))) (* skoSC1 (+ (* skoMC1 (+ 2. (* skoMC1 3.))) (* skoSC1 (+ (* skoMC1 (+ (/ (- 1.) 6.) skoMC1)) (* skoSC1 (* skoMC1 (/ (- 1.) 4.))))))))) (* skoMC1 (+ 2. (* skoMC1 5.)))) (and (<= (* skoSC1 (+ (* skoMC1 (+ 1. (* skoMC1 (- 3.)))) (* skoSC1 (+ (* skoMC1 (+ 2. (* skoMC1 3.))) (* skoSC1 (+ (* skoMC1 skoMC1) (* skoSC1 (* skoMC1 (/ (- 1.) 12.))))))))) (* skoMC1 (+ 2. (* skoMC1 5.)))) (and (<= (* skoSC1 (* skoMC1 (- 1.))) skoMC1) (and (> (* skoSC1 skoMC1) (* skoMC1 (- 1.))) (and (<= 0. skoMC1) (and (> skoMC1 0.) (and (<= 0. skoSC1) (and (<= 2. skoMC1) (and (<= skoSC1 (/ 5. 4.)) (and (> (* skoSC1 (* skoMC1 (* skoMC1 (* skoMC1 2.)))) (* skoMC1 (* skoMC1 (* skoMC1 (- 2.))))) (and (<= (* skoSC1 (* skoMC1 (* skoMC1 (* skoMC1 (- 2.))))) (* skoMC1 (* skoMC1 (* skoMC1 2.)))) (<= (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (+ (- 2.) (* skoMC1 (- 12.)))))) (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (+ 1. (* skoMC1 (- 6.)))))) (* skoSC1 (+ (* skoMC1 (* skoMC1 skoMC1)) (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (/ (- 1.) 12.)))) (* skoSC1 (* skoMC1 (* skoMC1 (* skoMC1 (/ (- 1.) 12.))))))))))))) (* skoMC1 (* skoMC1 (* skoMC1 (+ 2. (* skoMC1 6.)))))))))))))))))))

% In GRF format:
(sequent " MetiTarski formula " (antecedent (<= (* skoSC1 (* skoMC1 (- 1.))) skoMC1) (<= (* skoSC1 (+ (* skoMC1 (+ 1. (* skoMC1 (- 3.)))) (* skoSC1 (+ (* skoMC1 (+ 2. (* skoMC1 3.))) (* skoSC1 (+ (* skoMC1 (+ (/ (- 1.) 6.) skoMC1)) (* skoSC1 (* skoMC1 (/ (- 1.) 4.))))))))) (* skoMC1 (+ 2. (* skoMC1 5.)))) (<= (* skoSC1 (+ (* skoMC1 (+ 1. (* skoMC1 (- 3.)))) (* skoSC1 (+ (* skoMC1 (+ 2. (* skoMC1 3.))) (* skoSC1 (+ (* skoMC1 skoMC1) (* skoSC1 (* skoMC1 (/ (- 1.) 12.))))))))) (* skoMC1 (+ 2. (* skoMC1 5.)))) (<= (* skoSC1 (* skoMC1 (- 1.))) skoMC1) (> (* skoSC1 skoMC1) (* skoMC1 (- 1.))) (<= 0. skoMC1) (> skoMC1 0.) (<= 0. skoSC1) (<= 2. skoMC1) (<= skoSC1 (/ 5. 4.)) (> (* skoSC1 (* skoMC1 (* skoMC1 (* skoMC1 2.)))) (* skoMC1 (* skoMC1 (* skoMC1 (- 2.))))) (<= (* skoSC1 (* skoMC1 (* skoMC1 (* skoMC1 (- 2.))))) (* skoMC1 (* skoMC1 (* skoMC1 2.))))) (succedent (> (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (+ (- 2.) (* skoMC1 (- 12.)))))) (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (+ 1. (* skoMC1 (- 6.)))))) (* skoSC1 (+ (* skoMC1 (* skoMC1 skoMC1)) (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (/ (- 1.) 12.)))) (* skoSC1 (* skoMC1 (* skoMC1 (* skoMC1 (/ (- 1.) 12.))))))))))))) (* skoMC1 (* skoMC1 (* skoMC1 (+ 2. (* skoMC1 6.))))))))
-----[end problem]-----

-----[begin problem]-----
% In Mathematica format:
Timing[Resolve[Exists[{skoSC1,skoMC1}, And[skoSC1*skoMC1*-1<=skoMC1,skoSC1<=0,skoSC1*(skoMC1*(1+skoMC1*-3)+skoSC1*(skoMC1*(2+skoMC1*3)+skoSC1*(skoMC1*((-1/6)+skoMC1)+skoSC1*skoMC1*(-1/4))))<=skoMC1*(2+skoMC1*5),skoSC1*(skoMC1*(1+skoMC1*-3)+skoSC1*(skoMC1*(2+skoMC1*3)+skoSC1*(skoMC1*skoMC1+skoSC1*skoMC1*(-1/12))))<=skoMC1*(2+skoMC1*5),skoSC1*skoMC1*-1<=skoMC1,skoSC1*skoMC1>skoMC1*-1,0<=skoMC1,skoMC1>0,0<=skoSC1,2<=skoMC1,skoSC1<=(5/4),skoSC1*skoMC1*skoMC1*skoMC1*2>skoMC1*skoMC1*skoMC1*-2,skoSC1*skoMC1*skoMC1*skoMC1*-2<=skoMC1*skoMC1*skoMC1*2,skoSC1*(skoMC1*skoMC1*skoMC1*(-2+skoMC1*-12)+skoSC1*(skoMC1*skoMC1*skoMC1*(1+skoMC1*-6)+skoSC1*(skoMC1*skoMC1*skoMC1+skoSC1*(skoMC1*skoMC1*skoMC1*(-1/12)+skoSC1*skoMC1*skoMC1*skoMC1*(-1/12)))))<=skoMC1*skoMC1*skoMC1*(2+skoMC1*6)]], Reals]]

% In QepcadB format:
(E skoSC1) (E skoMC1) [[(skoSC1 skoMC1 (-1))<=skoMC1]/\[[skoSC1<=0]/\[[(skoSC1 ((skoMC1 (1+(skoMC1 (-3))))+(skoSC1 ((skoMC1 (2+(skoMC1 (3))))+(skoSC1 ((skoMC1 (-1/6+skoMC1))+(skoSC1 skoMC1 (-1/4))))))))<=(skoMC1 (2+(skoMC1 (5))))]/\[[(skoSC1 ((skoMC1 (1+(skoMC1 (-3))))+(skoSC1 ((skoMC1 (2+(skoMC1 (3))))+(skoSC1 ((skoMC1 skoMC1)+(skoSC1 skoMC1 (-1/12))))))))<=(skoMC1 (2+(skoMC1 (5))))]/\[[(skoSC1 skoMC1 (-1))<=skoMC1]/\[[(skoMC1 (-1))<(skoSC1 skoMC1)]/\[[0<=skoMC1]/\[[0<skoMC1]/\[[0<=skoSC1]/\[[2<=skoMC1]/\[[skoSC1<=5/4]/\[[(skoMC1 skoMC1 skoMC1 (-2))<(skoSC1 skoMC1 skoMC1 skoMC1 (2))]/\[[(skoSC1 skoMC1 skoMC1 skoMC1 (-2))<=(skoMC1 skoMC1 skoMC1 (2))]/\[(skoSC1 ((skoMC1 skoMC1 skoMC1 (-2+(skoMC1 (-12))))+(skoSC1 ((skoMC1 skoMC1 skoMC1 (1+(skoMC1 (-6))))+(skoSC1 ((skoMC1 skoMC1 skoMC1)+(skoSC1 ((skoMC1 skoMC1 skoMC1 (-1/12))+(skoSC1 skoMC1 skoMC1 skoMC1 (-1/12))))))))))<=(skoMC1 skoMC1 skoMC1 (2+(skoMC1 (6))))]]]]]]]]]]]]]].

% In SMTLib2 format:
(declare-fun skoSC1 () Real) (declare-fun skoMC1 () Real) (assert (and (<= (* skoSC1 (* skoMC1 (- 1.))) skoMC1) (and (<= skoSC1 0.) (and (<= (* skoSC1 (+ (* skoMC1 (+ 1. (* skoMC1 (- 3.)))) (* skoSC1 (+ (* skoMC1 (+ 2. (* skoMC1 3.))) (* skoSC1 (+ (* skoMC1 (+ (/ (- 1.) 6.) skoMC1)) (* skoSC1 (* skoMC1 (/ (- 1.) 4.))))))))) (* skoMC1 (+ 2. (* skoMC1 5.)))) (and (<= (* skoSC1 (+ (* skoMC1 (+ 1. (* skoMC1 (- 3.)))) (* skoSC1 (+ (* skoMC1 (+ 2. (* skoMC1 3.))) (* skoSC1 (+ (* skoMC1 skoMC1) (* skoSC1 (* skoMC1 (/ (- 1.) 12.))))))))) (* skoMC1 (+ 2. (* skoMC1 5.)))) (and (<= (* skoSC1 (* skoMC1 (- 1.))) skoMC1) (and (> (* skoSC1 skoMC1) (* skoMC1 (- 1.))) (and (<= 0. skoMC1) (and (> skoMC1 0.) (and (<= 0. skoSC1) (and (<= 2. skoMC1) (and (<= skoSC1 (/ 5. 4.)) (and (> (* skoSC1 (* skoMC1 (* skoMC1 (* skoMC1 2.)))) (* skoMC1 (* skoMC1 (* skoMC1 (- 2.))))) (and (<= (* skoSC1 (* skoMC1 (* skoMC1 (* skoMC1 (- 2.))))) (* skoMC1 (* skoMC1 (* skoMC1 2.)))) (<= (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (+ (- 2.) (* skoMC1 (- 12.)))))) (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (+ 1. (* skoMC1 (- 6.)))))) (* skoSC1 (+ (* skoMC1 (* skoMC1 skoMC1)) (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (/ (- 1.) 12.)))) (* skoSC1 (* skoMC1 (* skoMC1 (* skoMC1 (/ (- 1.) 12.))))))))))))) (* skoMC1 (* skoMC1 (* skoMC1 (+ 2. (* skoMC1 6.))))))))))))))))))))

% In GRF format:
(sequent " MetiTarski formula " (antecedent (<= (* skoSC1 (* skoMC1 (- 1.))) skoMC1) (<= skoSC1 0.) (<= (* skoSC1 (+ (* skoMC1 (+ 1. (* skoMC1 (- 3.)))) (* skoSC1 (+ (* skoMC1 (+ 2. (* skoMC1 3.))) (* skoSC1 (+ (* skoMC1 (+ (/ (- 1.) 6.) skoMC1)) (* skoSC1 (* skoMC1 (/ (- 1.) 4.))))))))) (* skoMC1 (+ 2. (* skoMC1 5.)))) (<= (* skoSC1 (+ (* skoMC1 (+ 1. (* skoMC1 (- 3.)))) (* skoSC1 (+ (* skoMC1 (+ 2. (* skoMC1 3.))) (* skoSC1 (+ (* skoMC1 skoMC1) (* skoSC1 (* skoMC1 (/ (- 1.) 12.))))))))) (* skoMC1 (+ 2. (* skoMC1 5.)))) (<= (* skoSC1 (* skoMC1 (- 1.))) skoMC1) (> (* skoSC1 skoMC1) (* skoMC1 (- 1.))) (<= 0. skoMC1) (> skoMC1 0.) (<= 0. skoSC1) (<= 2. skoMC1) (<= skoSC1 (/ 5. 4.)) (> (* skoSC1 (* skoMC1 (* skoMC1 (* skoMC1 2.)))) (* skoMC1 (* skoMC1 (* skoMC1 (- 2.))))) (<= (* skoSC1 (* skoMC1 (* skoMC1 (* skoMC1 (- 2.))))) (* skoMC1 (* skoMC1 (* skoMC1 2.))))) (succedent (> (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (+ (- 2.) (* skoMC1 (- 12.)))))) (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (+ 1. (* skoMC1 (- 6.)))))) (* skoSC1 (+ (* skoMC1 (* skoMC1 skoMC1)) (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (/ (- 1.) 12.)))) (* skoSC1 (* skoMC1 (* skoMC1 (* skoMC1 (/ (- 1.) 12.))))))))))))) (* skoMC1 (* skoMC1 (* skoMC1 (+ 2. (* skoMC1 6.))))))))
-----[end problem]-----

-----[begin problem]-----
% In Mathematica format:
Timing[Resolve[Exists[{skoSC1,skoMC1}, And[skoMC1>0,skoSC1>0,skoSC1*(skoMC1*(1+skoMC1*-3)+skoSC1*(skoMC1*(2+skoMC1*3)+skoSC1*(skoMC1*((-1/6)+skoMC1)+skoSC1*skoMC1*(-1/4))))<=skoMC1*(2+skoMC1*5),skoSC1*(skoMC1*(1+skoMC1*-3)+skoSC1*(skoMC1*(2+skoMC1*3)+skoSC1*(skoMC1*skoMC1+skoSC1*skoMC1*(-1/12))))<=skoMC1*(2+skoMC1*5),skoSC1*skoMC1*-1<=skoMC1,skoSC1*skoMC1>skoMC1*-1,0<=skoMC1,skoMC1>0,0<=skoSC1,2<=skoMC1,skoSC1<=(5/4),skoSC1*skoMC1*skoMC1*skoMC1*2>skoMC1*skoMC1*skoMC1*-2,skoSC1*skoMC1*skoMC1*skoMC1*-2<=skoMC1*skoMC1*skoMC1*2,skoSC1*(skoMC1*skoMC1*skoMC1*(-2+skoMC1*-12)+skoSC1*(skoMC1*skoMC1*skoMC1*(1+skoMC1*-6)+skoSC1*(skoMC1*skoMC1*skoMC1+skoSC1*(skoMC1*skoMC1*skoMC1*(-1/12)+skoSC1*skoMC1*skoMC1*skoMC1*(-1/12)))))<=skoMC1*skoMC1*skoMC1*(2+skoMC1*6)]], Reals]]

% In QepcadB format:
(E skoSC1) (E skoMC1) [[0<skoMC1]/\[[0<skoSC1]/\[[(skoSC1 ((skoMC1 (1+(skoMC1 (-3))))+(skoSC1 ((skoMC1 (2+(skoMC1 (3))))+(skoSC1 ((skoMC1 (-1/6+skoMC1))+(skoSC1 skoMC1 (-1/4))))))))<=(skoMC1 (2+(skoMC1 (5))))]/\[[(skoSC1 ((skoMC1 (1+(skoMC1 (-3))))+(skoSC1 ((skoMC1 (2+(skoMC1 (3))))+(skoSC1 ((skoMC1 skoMC1)+(skoSC1 skoMC1 (-1/12))))))))<=(skoMC1 (2+(skoMC1 (5))))]/\[[(skoSC1 skoMC1 (-1))<=skoMC1]/\[[(skoMC1 (-1))<(skoSC1 skoMC1)]/\[[0<=skoMC1]/\[[0<skoMC1]/\[[0<=skoSC1]/\[[2<=skoMC1]/\[[skoSC1<=5/4]/\[[(skoMC1 skoMC1 skoMC1 (-2))<(skoSC1 skoMC1 skoMC1 skoMC1 (2))]/\[[(skoSC1 skoMC1 skoMC1 skoMC1 (-2))<=(skoMC1 skoMC1 skoMC1 (2))]/\[(skoSC1 ((skoMC1 skoMC1 skoMC1 (-2+(skoMC1 (-12))))+(skoSC1 ((skoMC1 skoMC1 skoMC1 (1+(skoMC1 (-6))))+(skoSC1 ((skoMC1 skoMC1 skoMC1)+(skoSC1 ((skoMC1 skoMC1 skoMC1 (-1/12))+(skoSC1 skoMC1 skoMC1 skoMC1 (-1/12))))))))))<=(skoMC1 skoMC1 skoMC1 (2+(skoMC1 (6))))]]]]]]]]]]]]]].

% In SMTLib2 format:
(declare-fun skoSC1 () Real) (declare-fun skoMC1 () Real) (assert (and (> skoMC1 0.) (and (> skoSC1 0.) (and (<= (* skoSC1 (+ (* skoMC1 (+ 1. (* skoMC1 (- 3.)))) (* skoSC1 (+ (* skoMC1 (+ 2. (* skoMC1 3.))) (* skoSC1 (+ (* skoMC1 (+ (/ (- 1.) 6.) skoMC1)) (* skoSC1 (* skoMC1 (/ (- 1.) 4.))))))))) (* skoMC1 (+ 2. (* skoMC1 5.)))) (and (<= (* skoSC1 (+ (* skoMC1 (+ 1. (* skoMC1 (- 3.)))) (* skoSC1 (+ (* skoMC1 (+ 2. (* skoMC1 3.))) (* skoSC1 (+ (* skoMC1 skoMC1) (* skoSC1 (* skoMC1 (/ (- 1.) 12.))))))))) (* skoMC1 (+ 2. (* skoMC1 5.)))) (and (<= (* skoSC1 (* skoMC1 (- 1.))) skoMC1) (and (> (* skoSC1 skoMC1) (* skoMC1 (- 1.))) (and (<= 0. skoMC1) (and (> skoMC1 0.) (and (<= 0. skoSC1) (and (<= 2. skoMC1) (and (<= skoSC1 (/ 5. 4.)) (and (> (* skoSC1 (* skoMC1 (* skoMC1 (* skoMC1 2.)))) (* skoMC1 (* skoMC1 (* skoMC1 (- 2.))))) (and (<= (* skoSC1 (* skoMC1 (* skoMC1 (* skoMC1 (- 2.))))) (* skoMC1 (* skoMC1 (* skoMC1 2.)))) (<= (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (+ (- 2.) (* skoMC1 (- 12.)))))) (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (+ 1. (* skoMC1 (- 6.)))))) (* skoSC1 (+ (* skoMC1 (* skoMC1 skoMC1)) (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (/ (- 1.) 12.)))) (* skoSC1 (* skoMC1 (* skoMC1 (* skoMC1 (/ (- 1.) 12.))))))))))))) (* skoMC1 (* skoMC1 (* skoMC1 (+ 2. (* skoMC1 6.))))))))))))))))))))

% In GRF format:
(sequent " MetiTarski formula " (antecedent (> skoMC1 0.) (> skoSC1 0.) (<= (* skoSC1 (+ (* skoMC1 (+ 1. (* skoMC1 (- 3.)))) (* skoSC1 (+ (* skoMC1 (+ 2. (* skoMC1 3.))) (* skoSC1 (+ (* skoMC1 (+ (/ (- 1.) 6.) skoMC1)) (* skoSC1 (* skoMC1 (/ (- 1.) 4.))))))))) (* skoMC1 (+ 2. (* skoMC1 5.)))) (<= (* skoSC1 (+ (* skoMC1 (+ 1. (* skoMC1 (- 3.)))) (* skoSC1 (+ (* skoMC1 (+ 2. (* skoMC1 3.))) (* skoSC1 (+ (* skoMC1 skoMC1) (* skoSC1 (* skoMC1 (/ (- 1.) 12.))))))))) (* skoMC1 (+ 2. (* skoMC1 5.)))) (<= (* skoSC1 (* skoMC1 (- 1.))) skoMC1) (> (* skoSC1 skoMC1) (* skoMC1 (- 1.))) (<= 0. skoMC1) (> skoMC1 0.) (<= 0. skoSC1) (<= 2. skoMC1) (<= skoSC1 (/ 5. 4.)) (> (* skoSC1 (* skoMC1 (* skoMC1 (* skoMC1 2.)))) (* skoMC1 (* skoMC1 (* skoMC1 (- 2.))))) (<= (* skoSC1 (* skoMC1 (* skoMC1 (* skoMC1 (- 2.))))) (* skoMC1 (* skoMC1 (* skoMC1 2.))))) (succedent (> (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (+ (- 2.) (* skoMC1 (- 12.)))))) (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (+ 1. (* skoMC1 (- 6.)))))) (* skoSC1 (+ (* skoMC1 (* skoMC1 skoMC1)) (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (/ (- 1.) 12.)))) (* skoSC1 (* skoMC1 (* skoMC1 (* skoMC1 (/ (- 1.) 12.))))))))))))) (* skoMC1 (* skoMC1 (* skoMC1 (+ 2. (* skoMC1 6.))))))))
-----[end problem]-----

-----[begin problem]-----
% In Mathematica format:
Timing[Resolve[Exists[{skoSC1,skoMC1}, And[0<=skoMC1,skoSC1*(skoMC1*(1+skoMC1*-3)+skoSC1*(skoMC1*(2+skoMC1*3)+skoSC1*(skoMC1*((-1/6)+skoMC1)+skoSC1*skoMC1*(-1/4))))<=skoMC1*(2+skoMC1*5),skoSC1*(skoMC1*(1+skoMC1*-3)+skoSC1*(skoMC1*(2+skoMC1*3)+skoSC1*(skoMC1*skoMC1+skoSC1*skoMC1*(-1/12))))<=skoMC1*(2+skoMC1*5),skoSC1*skoMC1*-1<=skoMC1,skoSC1*skoMC1>skoMC1*-1,0<=skoMC1,skoMC1>0,0<=skoSC1,2<=skoMC1,skoSC1<=(5/4),skoSC1*skoMC1*skoMC1*skoMC1*2>skoMC1*skoMC1*skoMC1*-2,skoSC1*skoMC1*skoMC1*skoMC1*-2<=skoMC1*skoMC1*skoMC1*2,skoSC1*(skoMC1*skoMC1*skoMC1*(-2+skoMC1*-12)+skoSC1*(skoMC1*skoMC1*skoMC1*(1+skoMC1*-6)+skoSC1*(skoMC1*skoMC1*skoMC1+skoSC1*(skoMC1*skoMC1*skoMC1*(-1/12)+skoSC1*skoMC1*skoMC1*skoMC1*(-1/12)))))<=skoMC1*skoMC1*skoMC1*(2+skoMC1*6)]], Reals]]

% In QepcadB format:
(E skoSC1) (E skoMC1) [[0<=skoMC1]/\[[(skoSC1 ((skoMC1 (1+(skoMC1 (-3))))+(skoSC1 ((skoMC1 (2+(skoMC1 (3))))+(skoSC1 ((skoMC1 (-1/6+skoMC1))+(skoSC1 skoMC1 (-1/4))))))))<=(skoMC1 (2+(skoMC1 (5))))]/\[[(skoSC1 ((skoMC1 (1+(skoMC1 (-3))))+(skoSC1 ((skoMC1 (2+(skoMC1 (3))))+(skoSC1 ((skoMC1 skoMC1)+(skoSC1 skoMC1 (-1/12))))))))<=(skoMC1 (2+(skoMC1 (5))))]/\[[(skoSC1 skoMC1 (-1))<=skoMC1]/\[[(skoMC1 (-1))<(skoSC1 skoMC1)]/\[[0<=skoMC1]/\[[0<skoMC1]/\[[0<=skoSC1]/\[[2<=skoMC1]/\[[skoSC1<=5/4]/\[[(skoMC1 skoMC1 skoMC1 (-2))<(skoSC1 skoMC1 skoMC1 skoMC1 (2))]/\[[(skoSC1 skoMC1 skoMC1 skoMC1 (-2))<=(skoMC1 skoMC1 skoMC1 (2))]/\[(skoSC1 ((skoMC1 skoMC1 skoMC1 (-2+(skoMC1 (-12))))+(skoSC1 ((skoMC1 skoMC1 skoMC1 (1+(skoMC1 (-6))))+(skoSC1 ((skoMC1 skoMC1 skoMC1)+(skoSC1 ((skoMC1 skoMC1 skoMC1 (-1/12))+(skoSC1 skoMC1 skoMC1 skoMC1 (-1/12))))))))))<=(skoMC1 skoMC1 skoMC1 (2+(skoMC1 (6))))]]]]]]]]]]]]].

% In SMTLib2 format:
(declare-fun skoSC1 () Real) (declare-fun skoMC1 () Real) (assert (and (<= 0. skoMC1) (and (<= (* skoSC1 (+ (* skoMC1 (+ 1. (* skoMC1 (- 3.)))) (* skoSC1 (+ (* skoMC1 (+ 2. (* skoMC1 3.))) (* skoSC1 (+ (* skoMC1 (+ (/ (- 1.) 6.) skoMC1)) (* skoSC1 (* skoMC1 (/ (- 1.) 4.))))))))) (* skoMC1 (+ 2. (* skoMC1 5.)))) (and (<= (* skoSC1 (+ (* skoMC1 (+ 1. (* skoMC1 (- 3.)))) (* skoSC1 (+ (* skoMC1 (+ 2. (* skoMC1 3.))) (* skoSC1 (+ (* skoMC1 skoMC1) (* skoSC1 (* skoMC1 (/ (- 1.) 12.))))))))) (* skoMC1 (+ 2. (* skoMC1 5.)))) (and (<= (* skoSC1 (* skoMC1 (- 1.))) skoMC1) (and (> (* skoSC1 skoMC1) (* skoMC1 (- 1.))) (and (<= 0. skoMC1) (and (> skoMC1 0.) (and (<= 0. skoSC1) (and (<= 2. skoMC1) (and (<= skoSC1 (/ 5. 4.)) (and (> (* skoSC1 (* skoMC1 (* skoMC1 (* skoMC1 2.)))) (* skoMC1 (* skoMC1 (* skoMC1 (- 2.))))) (and (<= (* skoSC1 (* skoMC1 (* skoMC1 (* skoMC1 (- 2.))))) (* skoMC1 (* skoMC1 (* skoMC1 2.)))) (<= (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (+ (- 2.) (* skoMC1 (- 12.)))))) (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (+ 1. (* skoMC1 (- 6.)))))) (* skoSC1 (+ (* skoMC1 (* skoMC1 skoMC1)) (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (/ (- 1.) 12.)))) (* skoSC1 (* skoMC1 (* skoMC1 (* skoMC1 (/ (- 1.) 12.))))))))))))) (* skoMC1 (* skoMC1 (* skoMC1 (+ 2. (* skoMC1 6.)))))))))))))))))))

% In GRF format:
(sequent " MetiTarski formula " (antecedent (<= 0. skoMC1) (<= (* skoSC1 (+ (* skoMC1 (+ 1. (* skoMC1 (- 3.)))) (* skoSC1 (+ (* skoMC1 (+ 2. (* skoMC1 3.))) (* skoSC1 (+ (* skoMC1 (+ (/ (- 1.) 6.) skoMC1)) (* skoSC1 (* skoMC1 (/ (- 1.) 4.))))))))) (* skoMC1 (+ 2. (* skoMC1 5.)))) (<= (* skoSC1 (+ (* skoMC1 (+ 1. (* skoMC1 (- 3.)))) (* skoSC1 (+ (* skoMC1 (+ 2. (* skoMC1 3.))) (* skoSC1 (+ (* skoMC1 skoMC1) (* skoSC1 (* skoMC1 (/ (- 1.) 12.))))))))) (* skoMC1 (+ 2. (* skoMC1 5.)))) (<= (* skoSC1 (* skoMC1 (- 1.))) skoMC1) (> (* skoSC1 skoMC1) (* skoMC1 (- 1.))) (<= 0. skoMC1) (> skoMC1 0.) (<= 0. skoSC1) (<= 2. skoMC1) (<= skoSC1 (/ 5. 4.)) (> (* skoSC1 (* skoMC1 (* skoMC1 (* skoMC1 2.)))) (* skoMC1 (* skoMC1 (* skoMC1 (- 2.))))) (<= (* skoSC1 (* skoMC1 (* skoMC1 (* skoMC1 (- 2.))))) (* skoMC1 (* skoMC1 (* skoMC1 2.))))) (succedent (> (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (+ (- 2.) (* skoMC1 (- 12.)))))) (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (+ 1. (* skoMC1 (- 6.)))))) (* skoSC1 (+ (* skoMC1 (* skoMC1 skoMC1)) (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (/ (- 1.) 12.)))) (* skoSC1 (* skoMC1 (* skoMC1 (* skoMC1 (/ (- 1.) 12.))))))))))))) (* skoMC1 (* skoMC1 (* skoMC1 (+ 2. (* skoMC1 6.))))))))
-----[end problem]-----

-----[begin problem]-----
% In Mathematica format:
Timing[Resolve[Exists[{skoSC1,skoMC1}, And[skoSC1<=0,skoSC1*(skoMC1*(-1+skoMC1*3)+skoSC1*(skoMC1*(-2+skoMC1*-3)+skoSC1*(skoMC1*skoMC1*-1+skoSC1*skoMC1*(1/12))))>skoMC1*(-2+skoMC1*-5),skoMC1>0,skoSC1*(skoMC1*(1+skoMC1*-3)+skoSC1*(skoMC1*(2+skoMC1*3)+skoSC1*(skoMC1*((-1/6)+skoMC1)+skoSC1*skoMC1*(-1/4))))<=skoMC1*(2+skoMC1*5),skoSC1*(skoMC1*(1+skoMC1*-3)+skoSC1*(skoMC1*(2+skoMC1*3)+skoSC1*(skoMC1*skoMC1+skoSC1*skoMC1*(-1/12))))<=skoMC1*(2+skoMC1*5),skoSC1*skoMC1*-1<=skoMC1,skoSC1*skoMC1>skoMC1*-1,0<=skoMC1,skoMC1>0,0<=skoSC1,2<=skoMC1,skoSC1<=(5/4),skoSC1*skoMC1*skoMC1*skoMC1*2>skoMC1*skoMC1*skoMC1*-2,skoSC1*skoMC1*skoMC1*skoMC1*-2<=skoMC1*skoMC1*skoMC1*2,skoSC1*(skoMC1*skoMC1*skoMC1*(-2+skoMC1*-12)+skoSC1*(skoMC1*skoMC1*skoMC1*(1+skoMC1*-6)+skoSC1*(skoMC1*skoMC1*skoMC1+skoSC1*(skoMC1*skoMC1*skoMC1*(-1/12)+skoSC1*skoMC1*skoMC1*skoMC1*(-1/12)))))<=skoMC1*skoMC1*skoMC1*(2+skoMC1*6)]], Reals]]

% In QepcadB format:
(E skoSC1) (E skoMC1) [[skoSC1<=0]/\[[(skoMC1 (-2+(skoMC1 (-5))))<(skoSC1 ((skoMC1 (-1+(skoMC1 (3))))+(skoSC1 ((skoMC1 (-2+(skoMC1 (-3))))+(skoSC1 ((skoMC1 skoMC1 (-1))+(skoSC1 skoMC1 (1/12))))))))]/\[[0<skoMC1]/\[[(skoSC1 ((skoMC1 (1+(skoMC1 (-3))))+(skoSC1 ((skoMC1 (2+(skoMC1 (3))))+(skoSC1 ((skoMC1 (-1/6+skoMC1))+(skoSC1 skoMC1 (-1/4))))))))<=(skoMC1 (2+(skoMC1 (5))))]/\[[(skoSC1 ((skoMC1 (1+(skoMC1 (-3))))+(skoSC1 ((skoMC1 (2+(skoMC1 (3))))+(skoSC1 ((skoMC1 skoMC1)+(skoSC1 skoMC1 (-1/12))))))))<=(skoMC1 (2+(skoMC1 (5))))]/\[[(skoSC1 skoMC1 (-1))<=skoMC1]/\[[(skoMC1 (-1))<(skoSC1 skoMC1)]/\[[0<=skoMC1]/\[[0<skoMC1]/\[[0<=skoSC1]/\[[2<=skoMC1]/\[[skoSC1<=5/4]/\[[(skoMC1 skoMC1 skoMC1 (-2))<(skoSC1 skoMC1 skoMC1 skoMC1 (2))]/\[[(skoSC1 skoMC1 skoMC1 skoMC1 (-2))<=(skoMC1 skoMC1 skoMC1 (2))]/\[(skoSC1 ((skoMC1 skoMC1 skoMC1 (-2+(skoMC1 (-12))))+(skoSC1 ((skoMC1 skoMC1 skoMC1 (1+(skoMC1 (-6))))+(skoSC1 ((skoMC1 skoMC1 skoMC1)+(skoSC1 ((skoMC1 skoMC1 skoMC1 (-1/12))+(skoSC1 skoMC1 skoMC1 skoMC1 (-1/12))))))))))<=(skoMC1 skoMC1 skoMC1 (2+(skoMC1 (6))))]]]]]]]]]]]]]]].

% In SMTLib2 format:
(declare-fun skoSC1 () Real) (declare-fun skoMC1 () Real) (assert (and (<= skoSC1 0.) (and (> (* skoSC1 (+ (* skoMC1 (+ (- 1.) (* skoMC1 3.))) (* skoSC1 (+ (* skoMC1 (+ (- 2.) (* skoMC1 (- 3.)))) (* skoSC1 (+ (* skoMC1 (* skoMC1 (- 1.))) (* skoSC1 (* skoMC1 (/ 1. 12.))))))))) (* skoMC1 (+ (- 2.) (* skoMC1 (- 5.))))) (and (> skoMC1 0.) (and (<= (* skoSC1 (+ (* skoMC1 (+ 1. (* skoMC1 (- 3.)))) (* skoSC1 (+ (* skoMC1 (+ 2. (* skoMC1 3.))) (* skoSC1 (+ (* skoMC1 (+ (/ (- 1.) 6.) skoMC1)) (* skoSC1 (* skoMC1 (/ (- 1.) 4.))))))))) (* skoMC1 (+ 2. (* skoMC1 5.)))) (and (<= (* skoSC1 (+ (* skoMC1 (+ 1. (* skoMC1 (- 3.)))) (* skoSC1 (+ (* skoMC1 (+ 2. (* skoMC1 3.))) (* skoSC1 (+ (* skoMC1 skoMC1) (* skoSC1 (* skoMC1 (/ (- 1.) 12.))))))))) (* skoMC1 (+ 2. (* skoMC1 5.)))) (and (<= (* skoSC1 (* skoMC1 (- 1.))) skoMC1) (and (> (* skoSC1 skoMC1) (* skoMC1 (- 1.))) (and (<= 0. skoMC1) (and (> skoMC1 0.) (and (<= 0. skoSC1) (and (<= 2. skoMC1) (and (<= skoSC1 (/ 5. 4.)) (and (> (* skoSC1 (* skoMC1 (* skoMC1 (* skoMC1 2.)))) (* skoMC1 (* skoMC1 (* skoMC1 (- 2.))))) (and (<= (* skoSC1 (* skoMC1 (* skoMC1 (* skoMC1 (- 2.))))) (* skoMC1 (* skoMC1 (* skoMC1 2.)))) (<= (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (+ (- 2.) (* skoMC1 (- 12.)))))) (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (+ 1. (* skoMC1 (- 6.)))))) (* skoSC1 (+ (* skoMC1 (* skoMC1 skoMC1)) (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (/ (- 1.) 12.)))) (* skoSC1 (* skoMC1 (* skoMC1 (* skoMC1 (/ (- 1.) 12.))))))))))))) (* skoMC1 (* skoMC1 (* skoMC1 (+ 2. (* skoMC1 6.)))))))))))))))))))))

% In GRF format:
(sequent " MetiTarski formula " (antecedent (<= skoSC1 0.) (> (* skoSC1 (+ (* skoMC1 (+ (- 1.) (* skoMC1 3.))) (* skoSC1 (+ (* skoMC1 (+ (- 2.) (* skoMC1 (- 3.)))) (* skoSC1 (+ (* skoMC1 (* skoMC1 (- 1.))) (* skoSC1 (* skoMC1 (/ 1. 12.))))))))) (* skoMC1 (+ (- 2.) (* skoMC1 (- 5.))))) (> skoMC1 0.) (<= (* skoSC1 (+ (* skoMC1 (+ 1. (* skoMC1 (- 3.)))) (* skoSC1 (+ (* skoMC1 (+ 2. (* skoMC1 3.))) (* skoSC1 (+ (* skoMC1 (+ (/ (- 1.) 6.) skoMC1)) (* skoSC1 (* skoMC1 (/ (- 1.) 4.))))))))) (* skoMC1 (+ 2. (* skoMC1 5.)))) (<= (* skoSC1 (+ (* skoMC1 (+ 1. (* skoMC1 (- 3.)))) (* skoSC1 (+ (* skoMC1 (+ 2. (* skoMC1 3.))) (* skoSC1 (+ (* skoMC1 skoMC1) (* skoSC1 (* skoMC1 (/ (- 1.) 12.))))))))) (* skoMC1 (+ 2. (* skoMC1 5.)))) (<= (* skoSC1 (* skoMC1 (- 1.))) skoMC1) (> (* skoSC1 skoMC1) (* skoMC1 (- 1.))) (<= 0. skoMC1) (> skoMC1 0.) (<= 0. skoSC1) (<= 2. skoMC1) (<= skoSC1 (/ 5. 4.)) (> (* skoSC1 (* skoMC1 (* skoMC1 (* skoMC1 2.)))) (* skoMC1 (* skoMC1 (* skoMC1 (- 2.))))) (<= (* skoSC1 (* skoMC1 (* skoMC1 (* skoMC1 (- 2.))))) (* skoMC1 (* skoMC1 (* skoMC1 2.))))) (succedent (> (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (+ (- 2.) (* skoMC1 (- 12.)))))) (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (+ 1. (* skoMC1 (- 6.)))))) (* skoSC1 (+ (* skoMC1 (* skoMC1 skoMC1)) (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (/ (- 1.) 12.)))) (* skoSC1 (* skoMC1 (* skoMC1 (* skoMC1 (/ (- 1.) 12.))))))))))))) (* skoMC1 (* skoMC1 (* skoMC1 (+ 2. (* skoMC1 6.))))))))
-----[end problem]-----

-----[begin problem]-----
% In Mathematica format:
Timing[Resolve[Exists[{skoSC1,skoMC1}, And[skoSC1*(skoMC1*(-1+skoMC1*3)+skoSC1*(skoMC1*(-2+skoMC1*-3)+skoSC1*(skoMC1*skoMC1*-1+skoSC1*skoMC1*(1/12))))<=skoMC1*(-2+skoMC1*-5),skoMC1>0,skoSC1>0,skoSC1*(skoMC1*(1+skoMC1*-3)+skoSC1*(skoMC1*(2+skoMC1*3)+skoSC1*(skoMC1*((-1/6)+skoMC1)+skoSC1*skoMC1*(-1/4))))<=skoMC1*(2+skoMC1*5),skoSC1*(skoMC1*(1+skoMC1*-3)+skoSC1*(skoMC1*(2+skoMC1*3)+skoSC1*(skoMC1*skoMC1+skoSC1*skoMC1*(-1/12))))<=skoMC1*(2+skoMC1*5),skoSC1*skoMC1*-1<=skoMC1,skoSC1*skoMC1>skoMC1*-1,0<=skoMC1,skoMC1>0,0<=skoSC1,2<=skoMC1,skoSC1<=(5/4),skoSC1*skoMC1*skoMC1*skoMC1*2>skoMC1*skoMC1*skoMC1*-2,skoSC1*skoMC1*skoMC1*skoMC1*-2<=skoMC1*skoMC1*skoMC1*2,skoSC1*(skoMC1*skoMC1*skoMC1*(-2+skoMC1*-12)+skoSC1*(skoMC1*skoMC1*skoMC1*(1+skoMC1*-6)+skoSC1*(skoMC1*skoMC1*skoMC1+skoSC1*(skoMC1*skoMC1*skoMC1*(-1/12)+skoSC1*skoMC1*skoMC1*skoMC1*(-1/12)))))<=skoMC1*skoMC1*skoMC1*(2+skoMC1*6)]], Reals]]

% In QepcadB format:
(E skoSC1) (E skoMC1) [[(skoSC1 ((skoMC1 (-1+(skoMC1 (3))))+(skoSC1 ((skoMC1 (-2+(skoMC1 (-3))))+(skoSC1 ((skoMC1 skoMC1 (-1))+(skoSC1 skoMC1 (1/12))))))))<=(skoMC1 (-2+(skoMC1 (-5))))]/\[[0<skoMC1]/\[[0<skoSC1]/\[[(skoSC1 ((skoMC1 (1+(skoMC1 (-3))))+(skoSC1 ((skoMC1 (2+(skoMC1 (3))))+(skoSC1 ((skoMC1 (-1/6+skoMC1))+(skoSC1 skoMC1 (-1/4))))))))<=(skoMC1 (2+(skoMC1 (5))))]/\[[(skoSC1 ((skoMC1 (1+(skoMC1 (-3))))+(skoSC1 ((skoMC1 (2+(skoMC1 (3))))+(skoSC1 ((skoMC1 skoMC1)+(skoSC1 skoMC1 (-1/12))))))))<=(skoMC1 (2+(skoMC1 (5))))]/\[[(skoSC1 skoMC1 (-1))<=skoMC1]/\[[(skoMC1 (-1))<(skoSC1 skoMC1)]/\[[0<=skoMC1]/\[[0<skoMC1]/\[[0<=skoSC1]/\[[2<=skoMC1]/\[[skoSC1<=5/4]/\[[(skoMC1 skoMC1 skoMC1 (-2))<(skoSC1 skoMC1 skoMC1 skoMC1 (2))]/\[[(skoSC1 skoMC1 skoMC1 skoMC1 (-2))<=(skoMC1 skoMC1 skoMC1 (2))]/\[(skoSC1 ((skoMC1 skoMC1 skoMC1 (-2+(skoMC1 (-12))))+(skoSC1 ((skoMC1 skoMC1 skoMC1 (1+(skoMC1 (-6))))+(skoSC1 ((skoMC1 skoMC1 skoMC1)+(skoSC1 ((skoMC1 skoMC1 skoMC1 (-1/12))+(skoSC1 skoMC1 skoMC1 skoMC1 (-1/12))))))))))<=(skoMC1 skoMC1 skoMC1 (2+(skoMC1 (6))))]]]]]]]]]]]]]]].

% In SMTLib2 format:
(declare-fun skoSC1 () Real) (declare-fun skoMC1 () Real) (assert (and (<= (* skoSC1 (+ (* skoMC1 (+ (- 1.) (* skoMC1 3.))) (* skoSC1 (+ (* skoMC1 (+ (- 2.) (* skoMC1 (- 3.)))) (* skoSC1 (+ (* skoMC1 (* skoMC1 (- 1.))) (* skoSC1 (* skoMC1 (/ 1. 12.))))))))) (* skoMC1 (+ (- 2.) (* skoMC1 (- 5.))))) (and (> skoMC1 0.) (and (> skoSC1 0.) (and (<= (* skoSC1 (+ (* skoMC1 (+ 1. (* skoMC1 (- 3.)))) (* skoSC1 (+ (* skoMC1 (+ 2. (* skoMC1 3.))) (* skoSC1 (+ (* skoMC1 (+ (/ (- 1.) 6.) skoMC1)) (* skoSC1 (* skoMC1 (/ (- 1.) 4.))))))))) (* skoMC1 (+ 2. (* skoMC1 5.)))) (and (<= (* skoSC1 (+ (* skoMC1 (+ 1. (* skoMC1 (- 3.)))) (* skoSC1 (+ (* skoMC1 (+ 2. (* skoMC1 3.))) (* skoSC1 (+ (* skoMC1 skoMC1) (* skoSC1 (* skoMC1 (/ (- 1.) 12.))))))))) (* skoMC1 (+ 2. (* skoMC1 5.)))) (and (<= (* skoSC1 (* skoMC1 (- 1.))) skoMC1) (and (> (* skoSC1 skoMC1) (* skoMC1 (- 1.))) (and (<= 0. skoMC1) (and (> skoMC1 0.) (and (<= 0. skoSC1) (and (<= 2. skoMC1) (and (<= skoSC1 (/ 5. 4.)) (and (> (* skoSC1 (* skoMC1 (* skoMC1 (* skoMC1 2.)))) (* skoMC1 (* skoMC1 (* skoMC1 (- 2.))))) (and (<= (* skoSC1 (* skoMC1 (* skoMC1 (* skoMC1 (- 2.))))) (* skoMC1 (* skoMC1 (* skoMC1 2.)))) (<= (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (+ (- 2.) (* skoMC1 (- 12.)))))) (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (+ 1. (* skoMC1 (- 6.)))))) (* skoSC1 (+ (* skoMC1 (* skoMC1 skoMC1)) (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (/ (- 1.) 12.)))) (* skoSC1 (* skoMC1 (* skoMC1 (* skoMC1 (/ (- 1.) 12.))))))))))))) (* skoMC1 (* skoMC1 (* skoMC1 (+ 2. (* skoMC1 6.)))))))))))))))))))))

% In GRF format:
(sequent " MetiTarski formula " (antecedent (<= (* skoSC1 (+ (* skoMC1 (+ (- 1.) (* skoMC1 3.))) (* skoSC1 (+ (* skoMC1 (+ (- 2.) (* skoMC1 (- 3.)))) (* skoSC1 (+ (* skoMC1 (* skoMC1 (- 1.))) (* skoSC1 (* skoMC1 (/ 1. 12.))))))))) (* skoMC1 (+ (- 2.) (* skoMC1 (- 5.))))) (> skoMC1 0.) (> skoSC1 0.) (<= (* skoSC1 (+ (* skoMC1 (+ 1. (* skoMC1 (- 3.)))) (* skoSC1 (+ (* skoMC1 (+ 2. (* skoMC1 3.))) (* skoSC1 (+ (* skoMC1 (+ (/ (- 1.) 6.) skoMC1)) (* skoSC1 (* skoMC1 (/ (- 1.) 4.))))))))) (* skoMC1 (+ 2. (* skoMC1 5.)))) (<= (* skoSC1 (+ (* skoMC1 (+ 1. (* skoMC1 (- 3.)))) (* skoSC1 (+ (* skoMC1 (+ 2. (* skoMC1 3.))) (* skoSC1 (+ (* skoMC1 skoMC1) (* skoSC1 (* skoMC1 (/ (- 1.) 12.))))))))) (* skoMC1 (+ 2. (* skoMC1 5.)))) (<= (* skoSC1 (* skoMC1 (- 1.))) skoMC1) (> (* skoSC1 skoMC1) (* skoMC1 (- 1.))) (<= 0. skoMC1) (> skoMC1 0.) (<= 0. skoSC1) (<= 2. skoMC1) (<= skoSC1 (/ 5. 4.)) (> (* skoSC1 (* skoMC1 (* skoMC1 (* skoMC1 2.)))) (* skoMC1 (* skoMC1 (* skoMC1 (- 2.))))) (<= (* skoSC1 (* skoMC1 (* skoMC1 (* skoMC1 (- 2.))))) (* skoMC1 (* skoMC1 (* skoMC1 2.))))) (succedent (> (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (+ (- 2.) (* skoMC1 (- 12.)))))) (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (+ 1. (* skoMC1 (- 6.)))))) (* skoSC1 (+ (* skoMC1 (* skoMC1 skoMC1)) (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (/ (- 1.) 12.)))) (* skoSC1 (* skoMC1 (* skoMC1 (* skoMC1 (/ (- 1.) 12.))))))))))))) (* skoMC1 (* skoMC1 (* skoMC1 (+ 2. (* skoMC1 6.))))))))
-----[end problem]-----

-----[begin problem]-----
% In Mathematica format:
Timing[Resolve[Exists[{skoSC1,skoMC1}, And[skoSC1*(skoMC1*(-1+skoMC1*3)+skoSC1*(skoMC1*(-2+skoMC1*-3)+skoSC1*(skoMC1*skoMC1*-1+skoSC1*skoMC1*(1/12))))<=skoMC1*(-2+skoMC1*-5),skoMC1<=0,skoSC1*(skoMC1*(1+skoMC1*-3)+skoSC1*(skoMC1*(2+skoMC1*3)+skoSC1*(skoMC1*((-1/6)+skoMC1)+skoSC1*skoMC1*(-1/4))))<=skoMC1*(2+skoMC1*5),skoSC1*(skoMC1*(1+skoMC1*-3)+skoSC1*(skoMC1*(2+skoMC1*3)+skoSC1*(skoMC1*skoMC1+skoSC1*skoMC1*(-1/12))))<=skoMC1*(2+skoMC1*5),skoSC1*skoMC1*-1<=skoMC1,skoSC1*skoMC1>skoMC1*-1,0<=skoMC1,skoMC1>0,0<=skoSC1,2<=skoMC1,skoSC1<=(5/4),skoSC1*skoMC1*skoMC1*skoMC1*2>skoMC1*skoMC1*skoMC1*-2,skoSC1*skoMC1*skoMC1*skoMC1*-2<=skoMC1*skoMC1*skoMC1*2,skoSC1*(skoMC1*skoMC1*skoMC1*(-2+skoMC1*-12)+skoSC1*(skoMC1*skoMC1*skoMC1*(1+skoMC1*-6)+skoSC1*(skoMC1*skoMC1*skoMC1+skoSC1*(skoMC1*skoMC1*skoMC1*(-1/12)+skoSC1*skoMC1*skoMC1*skoMC1*(-1/12)))))<=skoMC1*skoMC1*skoMC1*(2+skoMC1*6)]], Reals]]

% In QepcadB format:
(E skoSC1) (E skoMC1) [[(skoSC1 ((skoMC1 (-1+(skoMC1 (3))))+(skoSC1 ((skoMC1 (-2+(skoMC1 (-3))))+(skoSC1 ((skoMC1 skoMC1 (-1))+(skoSC1 skoMC1 (1/12))))))))<=(skoMC1 (-2+(skoMC1 (-5))))]/\[[skoMC1<=0]/\[[(skoSC1 ((skoMC1 (1+(skoMC1 (-3))))+(skoSC1 ((skoMC1 (2+(skoMC1 (3))))+(skoSC1 ((skoMC1 (-1/6+skoMC1))+(skoSC1 skoMC1 (-1/4))))))))<=(skoMC1 (2+(skoMC1 (5))))]/\[[(skoSC1 ((skoMC1 (1+(skoMC1 (-3))))+(skoSC1 ((skoMC1 (2+(skoMC1 (3))))+(skoSC1 ((skoMC1 skoMC1)+(skoSC1 skoMC1 (-1/12))))))))<=(skoMC1 (2+(skoMC1 (5))))]/\[[(skoSC1 skoMC1 (-1))<=skoMC1]/\[[(skoMC1 (-1))<(skoSC1 skoMC1)]/\[[0<=skoMC1]/\[[0<skoMC1]/\[[0<=skoSC1]/\[[2<=skoMC1]/\[[skoSC1<=5/4]/\[[(skoMC1 skoMC1 skoMC1 (-2))<(skoSC1 skoMC1 skoMC1 skoMC1 (2))]/\[[(skoSC1 skoMC1 skoMC1 skoMC1 (-2))<=(skoMC1 skoMC1 skoMC1 (2))]/\[(skoSC1 ((skoMC1 skoMC1 skoMC1 (-2+(skoMC1 (-12))))+(skoSC1 ((skoMC1 skoMC1 skoMC1 (1+(skoMC1 (-6))))+(skoSC1 ((skoMC1 skoMC1 skoMC1)+(skoSC1 ((skoMC1 skoMC1 skoMC1 (-1/12))+(skoSC1 skoMC1 skoMC1 skoMC1 (-1/12))))))))))<=(skoMC1 skoMC1 skoMC1 (2+(skoMC1 (6))))]]]]]]]]]]]]]].

% In SMTLib2 format:
(declare-fun skoSC1 () Real) (declare-fun skoMC1 () Real) (assert (and (<= (* skoSC1 (+ (* skoMC1 (+ (- 1.) (* skoMC1 3.))) (* skoSC1 (+ (* skoMC1 (+ (- 2.) (* skoMC1 (- 3.)))) (* skoSC1 (+ (* skoMC1 (* skoMC1 (- 1.))) (* skoSC1 (* skoMC1 (/ 1. 12.))))))))) (* skoMC1 (+ (- 2.) (* skoMC1 (- 5.))))) (and (<= skoMC1 0.) (and (<= (* skoSC1 (+ (* skoMC1 (+ 1. (* skoMC1 (- 3.)))) (* skoSC1 (+ (* skoMC1 (+ 2. (* skoMC1 3.))) (* skoSC1 (+ (* skoMC1 (+ (/ (- 1.) 6.) skoMC1)) (* skoSC1 (* skoMC1 (/ (- 1.) 4.))))))))) (* skoMC1 (+ 2. (* skoMC1 5.)))) (and (<= (* skoSC1 (+ (* skoMC1 (+ 1. (* skoMC1 (- 3.)))) (* skoSC1 (+ (* skoMC1 (+ 2. (* skoMC1 3.))) (* skoSC1 (+ (* skoMC1 skoMC1) (* skoSC1 (* skoMC1 (/ (- 1.) 12.))))))))) (* skoMC1 (+ 2. (* skoMC1 5.)))) (and (<= (* skoSC1 (* skoMC1 (- 1.))) skoMC1) (and (> (* skoSC1 skoMC1) (* skoMC1 (- 1.))) (and (<= 0. skoMC1) (and (> skoMC1 0.) (and (<= 0. skoSC1) (and (<= 2. skoMC1) (and (<= skoSC1 (/ 5. 4.)) (and (> (* skoSC1 (* skoMC1 (* skoMC1 (* skoMC1 2.)))) (* skoMC1 (* skoMC1 (* skoMC1 (- 2.))))) (and (<= (* skoSC1 (* skoMC1 (* skoMC1 (* skoMC1 (- 2.))))) (* skoMC1 (* skoMC1 (* skoMC1 2.)))) (<= (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (+ (- 2.) (* skoMC1 (- 12.)))))) (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (+ 1. (* skoMC1 (- 6.)))))) (* skoSC1 (+ (* skoMC1 (* skoMC1 skoMC1)) (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (/ (- 1.) 12.)))) (* skoSC1 (* skoMC1 (* skoMC1 (* skoMC1 (/ (- 1.) 12.))))))))))))) (* skoMC1 (* skoMC1 (* skoMC1 (+ 2. (* skoMC1 6.))))))))))))))))))))

% In GRF format:
(sequent " MetiTarski formula " (antecedent (<= (* skoSC1 (+ (* skoMC1 (+ (- 1.) (* skoMC1 3.))) (* skoSC1 (+ (* skoMC1 (+ (- 2.) (* skoMC1 (- 3.)))) (* skoSC1 (+ (* skoMC1 (* skoMC1 (- 1.))) (* skoSC1 (* skoMC1 (/ 1. 12.))))))))) (* skoMC1 (+ (- 2.) (* skoMC1 (- 5.))))) (<= skoMC1 0.) (<= (* skoSC1 (+ (* skoMC1 (+ 1. (* skoMC1 (- 3.)))) (* skoSC1 (+ (* skoMC1 (+ 2. (* skoMC1 3.))) (* skoSC1 (+ (* skoMC1 (+ (/ (- 1.) 6.) skoMC1)) (* skoSC1 (* skoMC1 (/ (- 1.) 4.))))))))) (* skoMC1 (+ 2. (* skoMC1 5.)))) (<= (* skoSC1 (+ (* skoMC1 (+ 1. (* skoMC1 (- 3.)))) (* skoSC1 (+ (* skoMC1 (+ 2. (* skoMC1 3.))) (* skoSC1 (+ (* skoMC1 skoMC1) (* skoSC1 (* skoMC1 (/ (- 1.) 12.))))))))) (* skoMC1 (+ 2. (* skoMC1 5.)))) (<= (* skoSC1 (* skoMC1 (- 1.))) skoMC1) (> (* skoSC1 skoMC1) (* skoMC1 (- 1.))) (<= 0. skoMC1) (> skoMC1 0.) (<= 0. skoSC1) (<= 2. skoMC1) (<= skoSC1 (/ 5. 4.)) (> (* skoSC1 (* skoMC1 (* skoMC1 (* skoMC1 2.)))) (* skoMC1 (* skoMC1 (* skoMC1 (- 2.))))) (<= (* skoSC1 (* skoMC1 (* skoMC1 (* skoMC1 (- 2.))))) (* skoMC1 (* skoMC1 (* skoMC1 2.))))) (succedent (> (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (+ (- 2.) (* skoMC1 (- 12.)))))) (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (+ 1. (* skoMC1 (- 6.)))))) (* skoSC1 (+ (* skoMC1 (* skoMC1 skoMC1)) (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (/ (- 1.) 12.)))) (* skoSC1 (* skoMC1 (* skoMC1 (* skoMC1 (/ (- 1.) 12.))))))))))))) (* skoMC1 (* skoMC1 (* skoMC1 (+ 2. (* skoMC1 6.))))))))
-----[end problem]-----

-----[begin problem]-----
% In Mathematica format:
Timing[Resolve[Exists[{skoSC1,skoMC1}, And[0<=skoMC1,skoSC1*(skoMC1*(1+skoMC1*-3)+skoSC1*(skoMC1*(2+skoMC1*3)+skoSC1*(skoMC1*((-1/6)+skoMC1)+skoSC1*skoMC1*(-1/4))))<=skoMC1*(2+skoMC1*5),skoSC1*(skoMC1*(1+skoMC1*-3)+skoSC1*(skoMC1*(2+skoMC1*3)+skoSC1*(skoMC1*skoMC1+skoSC1*skoMC1*(-1/12))))<=skoMC1*(2+skoMC1*5),skoSC1*skoMC1*-1<=skoMC1,skoSC1*skoMC1>skoMC1*-1,0<=skoMC1,skoMC1>0,0<=skoSC1,2<=skoMC1,skoSC1<=(5/4),skoSC1*skoMC1*skoMC1*skoMC1*2>skoMC1*skoMC1*skoMC1*-2,skoSC1*skoMC1*skoMC1*skoMC1*-2<=skoMC1*skoMC1*skoMC1*2,skoSC1*(skoMC1*skoMC1*skoMC1*(-2+skoMC1*-12)+skoSC1*(skoMC1*skoMC1*skoMC1*(1+skoMC1*-6)+skoSC1*(skoMC1*skoMC1*skoMC1+skoSC1*(skoMC1*skoMC1*skoMC1*(-1/12)+skoSC1*skoMC1*skoMC1*skoMC1*(-1/12)))))<=skoMC1*skoMC1*skoMC1*(2+skoMC1*6)]], Reals]]

% In QepcadB format:
(E skoSC1) (E skoMC1) [[0<=skoMC1]/\[[(skoSC1 ((skoMC1 (1+(skoMC1 (-3))))+(skoSC1 ((skoMC1 (2+(skoMC1 (3))))+(skoSC1 ((skoMC1 (-1/6+skoMC1))+(skoSC1 skoMC1 (-1/4))))))))<=(skoMC1 (2+(skoMC1 (5))))]/\[[(skoSC1 ((skoMC1 (1+(skoMC1 (-3))))+(skoSC1 ((skoMC1 (2+(skoMC1 (3))))+(skoSC1 ((skoMC1 skoMC1)+(skoSC1 skoMC1 (-1/12))))))))<=(skoMC1 (2+(skoMC1 (5))))]/\[[(skoSC1 skoMC1 (-1))<=skoMC1]/\[[(skoMC1 (-1))<(skoSC1 skoMC1)]/\[[0<=skoMC1]/\[[0<skoMC1]/\[[0<=skoSC1]/\[[2<=skoMC1]/\[[skoSC1<=5/4]/\[[(skoMC1 skoMC1 skoMC1 (-2))<(skoSC1 skoMC1 skoMC1 skoMC1 (2))]/\[[(skoSC1 skoMC1 skoMC1 skoMC1 (-2))<=(skoMC1 skoMC1 skoMC1 (2))]/\[(skoSC1 ((skoMC1 skoMC1 skoMC1 (-2+(skoMC1 (-12))))+(skoSC1 ((skoMC1 skoMC1 skoMC1 (1+(skoMC1 (-6))))+(skoSC1 ((skoMC1 skoMC1 skoMC1)+(skoSC1 ((skoMC1 skoMC1 skoMC1 (-1/12))+(skoSC1 skoMC1 skoMC1 skoMC1 (-1/12))))))))))<=(skoMC1 skoMC1 skoMC1 (2+(skoMC1 (6))))]]]]]]]]]]]]].

% In SMTLib2 format:
(declare-fun skoSC1 () Real) (declare-fun skoMC1 () Real) (assert (and (<= 0. skoMC1) (and (<= (* skoSC1 (+ (* skoMC1 (+ 1. (* skoMC1 (- 3.)))) (* skoSC1 (+ (* skoMC1 (+ 2. (* skoMC1 3.))) (* skoSC1 (+ (* skoMC1 (+ (/ (- 1.) 6.) skoMC1)) (* skoSC1 (* skoMC1 (/ (- 1.) 4.))))))))) (* skoMC1 (+ 2. (* skoMC1 5.)))) (and (<= (* skoSC1 (+ (* skoMC1 (+ 1. (* skoMC1 (- 3.)))) (* skoSC1 (+ (* skoMC1 (+ 2. (* skoMC1 3.))) (* skoSC1 (+ (* skoMC1 skoMC1) (* skoSC1 (* skoMC1 (/ (- 1.) 12.))))))))) (* skoMC1 (+ 2. (* skoMC1 5.)))) (and (<= (* skoSC1 (* skoMC1 (- 1.))) skoMC1) (and (> (* skoSC1 skoMC1) (* skoMC1 (- 1.))) (and (<= 0. skoMC1) (and (> skoMC1 0.) (and (<= 0. skoSC1) (and (<= 2. skoMC1) (and (<= skoSC1 (/ 5. 4.)) (and (> (* skoSC1 (* skoMC1 (* skoMC1 (* skoMC1 2.)))) (* skoMC1 (* skoMC1 (* skoMC1 (- 2.))))) (and (<= (* skoSC1 (* skoMC1 (* skoMC1 (* skoMC1 (- 2.))))) (* skoMC1 (* skoMC1 (* skoMC1 2.)))) (<= (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (+ (- 2.) (* skoMC1 (- 12.)))))) (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (+ 1. (* skoMC1 (- 6.)))))) (* skoSC1 (+ (* skoMC1 (* skoMC1 skoMC1)) (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (/ (- 1.) 12.)))) (* skoSC1 (* skoMC1 (* skoMC1 (* skoMC1 (/ (- 1.) 12.))))))))))))) (* skoMC1 (* skoMC1 (* skoMC1 (+ 2. (* skoMC1 6.)))))))))))))))))))

% In GRF format:
(sequent " MetiTarski formula " (antecedent (<= 0. skoMC1) (<= (* skoSC1 (+ (* skoMC1 (+ 1. (* skoMC1 (- 3.)))) (* skoSC1 (+ (* skoMC1 (+ 2. (* skoMC1 3.))) (* skoSC1 (+ (* skoMC1 (+ (/ (- 1.) 6.) skoMC1)) (* skoSC1 (* skoMC1 (/ (- 1.) 4.))))))))) (* skoMC1 (+ 2. (* skoMC1 5.)))) (<= (* skoSC1 (+ (* skoMC1 (+ 1. (* skoMC1 (- 3.)))) (* skoSC1 (+ (* skoMC1 (+ 2. (* skoMC1 3.))) (* skoSC1 (+ (* skoMC1 skoMC1) (* skoSC1 (* skoMC1 (/ (- 1.) 12.))))))))) (* skoMC1 (+ 2. (* skoMC1 5.)))) (<= (* skoSC1 (* skoMC1 (- 1.))) skoMC1) (> (* skoSC1 skoMC1) (* skoMC1 (- 1.))) (<= 0. skoMC1) (> skoMC1 0.) (<= 0. skoSC1) (<= 2. skoMC1) (<= skoSC1 (/ 5. 4.)) (> (* skoSC1 (* skoMC1 (* skoMC1 (* skoMC1 2.)))) (* skoMC1 (* skoMC1 (* skoMC1 (- 2.))))) (<= (* skoSC1 (* skoMC1 (* skoMC1 (* skoMC1 (- 2.))))) (* skoMC1 (* skoMC1 (* skoMC1 2.))))) (succedent (> (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (+ (- 2.) (* skoMC1 (- 12.)))))) (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (+ 1. (* skoMC1 (- 6.)))))) (* skoSC1 (+ (* skoMC1 (* skoMC1 skoMC1)) (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (/ (- 1.) 12.)))) (* skoSC1 (* skoMC1 (* skoMC1 (* skoMC1 (/ (- 1.) 12.))))))))))))) (* skoMC1 (* skoMC1 (* skoMC1 (+ 2. (* skoMC1 6.))))))))
-----[end problem]-----

-----[begin problem]-----
% In Mathematica format:
Timing[Resolve[Exists[{skoSC1,skoMC1}, And[skoSC1*(skoMC1*(-1+skoMC1*3)+skoSC1*(skoMC1*(-2+skoMC1*-3)+skoSC1*(skoMC1*skoMC1*-1+skoSC1*skoMC1*(1/12))))>skoMC1*(-2+skoMC1*-5),skoSC1*(skoMC1*(1+skoMC1*-3)+skoSC1*(skoMC1*(2+skoMC1*3)+skoSC1*(skoMC1*((-1/6)+skoMC1)+skoSC1*skoMC1*(-1/4))))<=skoMC1*(2+skoMC1*5),skoSC1*(skoMC1*(1+skoMC1*-3)+skoSC1*(skoMC1*(2+skoMC1*3)+skoSC1*(skoMC1*skoMC1+skoSC1*skoMC1*(-1/12))))<=skoMC1*(2+skoMC1*5),skoSC1*skoMC1*-1<=skoMC1,skoSC1*skoMC1>skoMC1*-1,0<=skoMC1,skoMC1>0,0<=skoSC1,2<=skoMC1,skoSC1<=(5/4),skoSC1*skoMC1*skoMC1*skoMC1*2>skoMC1*skoMC1*skoMC1*-2,skoSC1*skoMC1*skoMC1*skoMC1*-2<=skoMC1*skoMC1*skoMC1*2,skoSC1*(skoMC1*skoMC1*skoMC1*(-2+skoMC1*-12)+skoSC1*(skoMC1*skoMC1*skoMC1*(1+skoMC1*-6)+skoSC1*(skoMC1*skoMC1*skoMC1+skoSC1*(skoMC1*skoMC1*skoMC1*(-1/12)+skoSC1*skoMC1*skoMC1*skoMC1*(-1/12)))))<=skoMC1*skoMC1*skoMC1*(2+skoMC1*6)]], Reals]]

% In QepcadB format:
(E skoSC1) (E skoMC1) [[(skoMC1 (-2+(skoMC1 (-5))))<(skoSC1 ((skoMC1 (-1+(skoMC1 (3))))+(skoSC1 ((skoMC1 (-2+(skoMC1 (-3))))+(skoSC1 ((skoMC1 skoMC1 (-1))+(skoSC1 skoMC1 (1/12))))))))]/\[[(skoSC1 ((skoMC1 (1+(skoMC1 (-3))))+(skoSC1 ((skoMC1 (2+(skoMC1 (3))))+(skoSC1 ((skoMC1 (-1/6+skoMC1))+(skoSC1 skoMC1 (-1/4))))))))<=(skoMC1 (2+(skoMC1 (5))))]/\[[(skoSC1 ((skoMC1 (1+(skoMC1 (-3))))+(skoSC1 ((skoMC1 (2+(skoMC1 (3))))+(skoSC1 ((skoMC1 skoMC1)+(skoSC1 skoMC1 (-1/12))))))))<=(skoMC1 (2+(skoMC1 (5))))]/\[[(skoSC1 skoMC1 (-1))<=skoMC1]/\[[(skoMC1 (-1))<(skoSC1 skoMC1)]/\[[0<=skoMC1]/\[[0<skoMC1]/\[[0<=skoSC1]/\[[2<=skoMC1]/\[[skoSC1<=5/4]/\[[(skoMC1 skoMC1 skoMC1 (-2))<(skoSC1 skoMC1 skoMC1 skoMC1 (2))]/\[[(skoSC1 skoMC1 skoMC1 skoMC1 (-2))<=(skoMC1 skoMC1 skoMC1 (2))]/\[(skoSC1 ((skoMC1 skoMC1 skoMC1 (-2+(skoMC1 (-12))))+(skoSC1 ((skoMC1 skoMC1 skoMC1 (1+(skoMC1 (-6))))+(skoSC1 ((skoMC1 skoMC1 skoMC1)+(skoSC1 ((skoMC1 skoMC1 skoMC1 (-1/12))+(skoSC1 skoMC1 skoMC1 skoMC1 (-1/12))))))))))<=(skoMC1 skoMC1 skoMC1 (2+(skoMC1 (6))))]]]]]]]]]]]]].

% In SMTLib2 format:
(declare-fun skoSC1 () Real) (declare-fun skoMC1 () Real) (assert (and (> (* skoSC1 (+ (* skoMC1 (+ (- 1.) (* skoMC1 3.))) (* skoSC1 (+ (* skoMC1 (+ (- 2.) (* skoMC1 (- 3.)))) (* skoSC1 (+ (* skoMC1 (* skoMC1 (- 1.))) (* skoSC1 (* skoMC1 (/ 1. 12.))))))))) (* skoMC1 (+ (- 2.) (* skoMC1 (- 5.))))) (and (<= (* skoSC1 (+ (* skoMC1 (+ 1. (* skoMC1 (- 3.)))) (* skoSC1 (+ (* skoMC1 (+ 2. (* skoMC1 3.))) (* skoSC1 (+ (* skoMC1 (+ (/ (- 1.) 6.) skoMC1)) (* skoSC1 (* skoMC1 (/ (- 1.) 4.))))))))) (* skoMC1 (+ 2. (* skoMC1 5.)))) (and (<= (* skoSC1 (+ (* skoMC1 (+ 1. (* skoMC1 (- 3.)))) (* skoSC1 (+ (* skoMC1 (+ 2. (* skoMC1 3.))) (* skoSC1 (+ (* skoMC1 skoMC1) (* skoSC1 (* skoMC1 (/ (- 1.) 12.))))))))) (* skoMC1 (+ 2. (* skoMC1 5.)))) (and (<= (* skoSC1 (* skoMC1 (- 1.))) skoMC1) (and (> (* skoSC1 skoMC1) (* skoMC1 (- 1.))) (and (<= 0. skoMC1) (and (> skoMC1 0.) (and (<= 0. skoSC1) (and (<= 2. skoMC1) (and (<= skoSC1 (/ 5. 4.)) (and (> (* skoSC1 (* skoMC1 (* skoMC1 (* skoMC1 2.)))) (* skoMC1 (* skoMC1 (* skoMC1 (- 2.))))) (and (<= (* skoSC1 (* skoMC1 (* skoMC1 (* skoMC1 (- 2.))))) (* skoMC1 (* skoMC1 (* skoMC1 2.)))) (<= (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (+ (- 2.) (* skoMC1 (- 12.)))))) (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (+ 1. (* skoMC1 (- 6.)))))) (* skoSC1 (+ (* skoMC1 (* skoMC1 skoMC1)) (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (/ (- 1.) 12.)))) (* skoSC1 (* skoMC1 (* skoMC1 (* skoMC1 (/ (- 1.) 12.))))))))))))) (* skoMC1 (* skoMC1 (* skoMC1 (+ 2. (* skoMC1 6.)))))))))))))))))))

% In GRF format:
(sequent " MetiTarski formula " (antecedent (> (* skoSC1 (+ (* skoMC1 (+ (- 1.) (* skoMC1 3.))) (* skoSC1 (+ (* skoMC1 (+ (- 2.) (* skoMC1 (- 3.)))) (* skoSC1 (+ (* skoMC1 (* skoMC1 (- 1.))) (* skoSC1 (* skoMC1 (/ 1. 12.))))))))) (* skoMC1 (+ (- 2.) (* skoMC1 (- 5.))))) (<= (* skoSC1 (+ (* skoMC1 (+ 1. (* skoMC1 (- 3.)))) (* skoSC1 (+ (* skoMC1 (+ 2. (* skoMC1 3.))) (* skoSC1 (+ (* skoMC1 (+ (/ (- 1.) 6.) skoMC1)) (* skoSC1 (* skoMC1 (/ (- 1.) 4.))))))))) (* skoMC1 (+ 2. (* skoMC1 5.)))) (<= (* skoSC1 (+ (* skoMC1 (+ 1. (* skoMC1 (- 3.)))) (* skoSC1 (+ (* skoMC1 (+ 2. (* skoMC1 3.))) (* skoSC1 (+ (* skoMC1 skoMC1) (* skoSC1 (* skoMC1 (/ (- 1.) 12.))))))))) (* skoMC1 (+ 2. (* skoMC1 5.)))) (<= (* skoSC1 (* skoMC1 (- 1.))) skoMC1) (> (* skoSC1 skoMC1) (* skoMC1 (- 1.))) (<= 0. skoMC1) (> skoMC1 0.) (<= 0. skoSC1) (<= 2. skoMC1) (<= skoSC1 (/ 5. 4.)) (> (* skoSC1 (* skoMC1 (* skoMC1 (* skoMC1 2.)))) (* skoMC1 (* skoMC1 (* skoMC1 (- 2.))))) (<= (* skoSC1 (* skoMC1 (* skoMC1 (* skoMC1 (- 2.))))) (* skoMC1 (* skoMC1 (* skoMC1 2.))))) (succedent (> (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (+ (- 2.) (* skoMC1 (- 12.)))))) (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (+ 1. (* skoMC1 (- 6.)))))) (* skoSC1 (+ (* skoMC1 (* skoMC1 skoMC1)) (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (/ (- 1.) 12.)))) (* skoSC1 (* skoMC1 (* skoMC1 (* skoMC1 (/ (- 1.) 12.))))))))))))) (* skoMC1 (* skoMC1 (* skoMC1 (+ 2. (* skoMC1 6.))))))))
-----[end problem]-----

-----[begin problem]-----
% In Mathematica format:
Timing[Resolve[Exists[{skoSC1,skoMC1}, And[0<=skoMC1,skoSC1*(skoMC1*(-1+skoMC1*3)+skoSC1*(skoMC1*(-2+skoMC1*-3)+skoSC1*(skoMC1*skoMC1*-1+skoSC1*skoMC1*(1/12))))>skoMC1*(-2+skoMC1*-5),skoSC1*(skoMC1*(1+skoMC1*-3)+skoSC1*(skoMC1*(2+skoMC1*3)+skoSC1*(skoMC1*((-1/6)+skoMC1)+skoSC1*skoMC1*(-1/4))))<=skoMC1*(2+skoMC1*5),skoSC1*(skoMC1*(1+skoMC1*-3)+skoSC1*(skoMC1*(2+skoMC1*3)+skoSC1*(skoMC1*skoMC1+skoSC1*skoMC1*(-1/12))))<=skoMC1*(2+skoMC1*5),skoSC1*skoMC1*-1<=skoMC1,skoSC1*skoMC1>skoMC1*-1,0<=skoMC1,skoMC1>0,0<=skoSC1,2<=skoMC1,skoSC1<=(5/4),skoSC1*skoMC1*skoMC1*skoMC1*2>skoMC1*skoMC1*skoMC1*-2,skoSC1*skoMC1*skoMC1*skoMC1*-2<=skoMC1*skoMC1*skoMC1*2,skoSC1*(skoMC1*skoMC1*skoMC1*(-2+skoMC1*-12)+skoSC1*(skoMC1*skoMC1*skoMC1*(1+skoMC1*-6)+skoSC1*(skoMC1*skoMC1*skoMC1+skoSC1*(skoMC1*skoMC1*skoMC1*(-1/12)+skoSC1*skoMC1*skoMC1*skoMC1*(-1/12)))))<=skoMC1*skoMC1*skoMC1*(2+skoMC1*6)]], Reals]]

% In QepcadB format:
(E skoSC1) (E skoMC1) [[0<=skoMC1]/\[[(skoMC1 (-2+(skoMC1 (-5))))<(skoSC1 ((skoMC1 (-1+(skoMC1 (3))))+(skoSC1 ((skoMC1 (-2+(skoMC1 (-3))))+(skoSC1 ((skoMC1 skoMC1 (-1))+(skoSC1 skoMC1 (1/12))))))))]/\[[(skoSC1 ((skoMC1 (1+(skoMC1 (-3))))+(skoSC1 ((skoMC1 (2+(skoMC1 (3))))+(skoSC1 ((skoMC1 (-1/6+skoMC1))+(skoSC1 skoMC1 (-1/4))))))))<=(skoMC1 (2+(skoMC1 (5))))]/\[[(skoSC1 ((skoMC1 (1+(skoMC1 (-3))))+(skoSC1 ((skoMC1 (2+(skoMC1 (3))))+(skoSC1 ((skoMC1 skoMC1)+(skoSC1 skoMC1 (-1/12))))))))<=(skoMC1 (2+(skoMC1 (5))))]/\[[(skoSC1 skoMC1 (-1))<=skoMC1]/\[[(skoMC1 (-1))<(skoSC1 skoMC1)]/\[[0<=skoMC1]/\[[0<skoMC1]/\[[0<=skoSC1]/\[[2<=skoMC1]/\[[skoSC1<=5/4]/\[[(skoMC1 skoMC1 skoMC1 (-2))<(skoSC1 skoMC1 skoMC1 skoMC1 (2))]/\[[(skoSC1 skoMC1 skoMC1 skoMC1 (-2))<=(skoMC1 skoMC1 skoMC1 (2))]/\[(skoSC1 ((skoMC1 skoMC1 skoMC1 (-2+(skoMC1 (-12))))+(skoSC1 ((skoMC1 skoMC1 skoMC1 (1+(skoMC1 (-6))))+(skoSC1 ((skoMC1 skoMC1 skoMC1)+(skoSC1 ((skoMC1 skoMC1 skoMC1 (-1/12))+(skoSC1 skoMC1 skoMC1 skoMC1 (-1/12))))))))))<=(skoMC1 skoMC1 skoMC1 (2+(skoMC1 (6))))]]]]]]]]]]]]]].

% In SMTLib2 format:
(declare-fun skoSC1 () Real) (declare-fun skoMC1 () Real) (assert (and (<= 0. skoMC1) (and (> (* skoSC1 (+ (* skoMC1 (+ (- 1.) (* skoMC1 3.))) (* skoSC1 (+ (* skoMC1 (+ (- 2.) (* skoMC1 (- 3.)))) (* skoSC1 (+ (* skoMC1 (* skoMC1 (- 1.))) (* skoSC1 (* skoMC1 (/ 1. 12.))))))))) (* skoMC1 (+ (- 2.) (* skoMC1 (- 5.))))) (and (<= (* skoSC1 (+ (* skoMC1 (+ 1. (* skoMC1 (- 3.)))) (* skoSC1 (+ (* skoMC1 (+ 2. (* skoMC1 3.))) (* skoSC1 (+ (* skoMC1 (+ (/ (- 1.) 6.) skoMC1)) (* skoSC1 (* skoMC1 (/ (- 1.) 4.))))))))) (* skoMC1 (+ 2. (* skoMC1 5.)))) (and (<= (* skoSC1 (+ (* skoMC1 (+ 1. (* skoMC1 (- 3.)))) (* skoSC1 (+ (* skoMC1 (+ 2. (* skoMC1 3.))) (* skoSC1 (+ (* skoMC1 skoMC1) (* skoSC1 (* skoMC1 (/ (- 1.) 12.))))))))) (* skoMC1 (+ 2. (* skoMC1 5.)))) (and (<= (* skoSC1 (* skoMC1 (- 1.))) skoMC1) (and (> (* skoSC1 skoMC1) (* skoMC1 (- 1.))) (and (<= 0. skoMC1) (and (> skoMC1 0.) (and (<= 0. skoSC1) (and (<= 2. skoMC1) (and (<= skoSC1 (/ 5. 4.)) (and (> (* skoSC1 (* skoMC1 (* skoMC1 (* skoMC1 2.)))) (* skoMC1 (* skoMC1 (* skoMC1 (- 2.))))) (and (<= (* skoSC1 (* skoMC1 (* skoMC1 (* skoMC1 (- 2.))))) (* skoMC1 (* skoMC1 (* skoMC1 2.)))) (<= (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (+ (- 2.) (* skoMC1 (- 12.)))))) (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (+ 1. (* skoMC1 (- 6.)))))) (* skoSC1 (+ (* skoMC1 (* skoMC1 skoMC1)) (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (/ (- 1.) 12.)))) (* skoSC1 (* skoMC1 (* skoMC1 (* skoMC1 (/ (- 1.) 12.))))))))))))) (* skoMC1 (* skoMC1 (* skoMC1 (+ 2. (* skoMC1 6.))))))))))))))))))))

% In GRF format:
(sequent " MetiTarski formula " (antecedent (<= 0. skoMC1) (> (* skoSC1 (+ (* skoMC1 (+ (- 1.) (* skoMC1 3.))) (* skoSC1 (+ (* skoMC1 (+ (- 2.) (* skoMC1 (- 3.)))) (* skoSC1 (+ (* skoMC1 (* skoMC1 (- 1.))) (* skoSC1 (* skoMC1 (/ 1. 12.))))))))) (* skoMC1 (+ (- 2.) (* skoMC1 (- 5.))))) (<= (* skoSC1 (+ (* skoMC1 (+ 1. (* skoMC1 (- 3.)))) (* skoSC1 (+ (* skoMC1 (+ 2. (* skoMC1 3.))) (* skoSC1 (+ (* skoMC1 (+ (/ (- 1.) 6.) skoMC1)) (* skoSC1 (* skoMC1 (/ (- 1.) 4.))))))))) (* skoMC1 (+ 2. (* skoMC1 5.)))) (<= (* skoSC1 (+ (* skoMC1 (+ 1. (* skoMC1 (- 3.)))) (* skoSC1 (+ (* skoMC1 (+ 2. (* skoMC1 3.))) (* skoSC1 (+ (* skoMC1 skoMC1) (* skoSC1 (* skoMC1 (/ (- 1.) 12.))))))))) (* skoMC1 (+ 2. (* skoMC1 5.)))) (<= (* skoSC1 (* skoMC1 (- 1.))) skoMC1) (> (* skoSC1 skoMC1) (* skoMC1 (- 1.))) (<= 0. skoMC1) (> skoMC1 0.) (<= 0. skoSC1) (<= 2. skoMC1) (<= skoSC1 (/ 5. 4.)) (> (* skoSC1 (* skoMC1 (* skoMC1 (* skoMC1 2.)))) (* skoMC1 (* skoMC1 (* skoMC1 (- 2.))))) (<= (* skoSC1 (* skoMC1 (* skoMC1 (* skoMC1 (- 2.))))) (* skoMC1 (* skoMC1 (* skoMC1 2.))))) (succedent (> (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (+ (- 2.) (* skoMC1 (- 12.)))))) (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (+ 1. (* skoMC1 (- 6.)))))) (* skoSC1 (+ (* skoMC1 (* skoMC1 skoMC1)) (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (/ (- 1.) 12.)))) (* skoSC1 (* skoMC1 (* skoMC1 (* skoMC1 (/ (- 1.) 12.))))))))))))) (* skoMC1 (* skoMC1 (* skoMC1 (+ 2. (* skoMC1 6.))))))))
-----[end problem]-----

-----[begin problem]-----
% In Mathematica format:
Timing[Resolve[Exists[{skoSC1,skoMC1}, And[skoSC1*(skoMC1*(-1+skoMC1*3)+skoSC1*(skoMC1*(-2+skoMC1*-3)+skoSC1*(skoMC1*((1/6)+skoMC1*-1)+skoSC1*skoMC1*(1/4))))>skoMC1*(-2+skoMC1*-5),skoMC1>0,skoSC1*(skoMC1*(-1+skoMC1*3)+skoSC1*(skoMC1*(-2+skoMC1*-3)+skoSC1*(skoMC1*skoMC1*-1+skoSC1*skoMC1*(1/12))))>skoMC1*(-2+skoMC1*-5),skoSC1*(skoMC1*(1+skoMC1*-3)+skoSC1*(skoMC1*(2+skoMC1*3)+skoSC1*(skoMC1*((-1/6)+skoMC1)+skoSC1*skoMC1*(-1/4))))<=skoMC1*(2+skoMC1*5),skoSC1*(skoMC1*(1+skoMC1*-3)+skoSC1*(skoMC1*(2+skoMC1*3)+skoSC1*(skoMC1*skoMC1+skoSC1*skoMC1*(-1/12))))<=skoMC1*(2+skoMC1*5),skoSC1*skoMC1*-1<=skoMC1,skoSC1*skoMC1>skoMC1*-1,0<=skoMC1,skoMC1>0,0<=skoSC1,2<=skoMC1,skoSC1<=(5/4),skoSC1*skoMC1*skoMC1*skoMC1*2>skoMC1*skoMC1*skoMC1*-2,skoSC1*skoMC1*skoMC1*skoMC1*-2<=skoMC1*skoMC1*skoMC1*2,skoSC1*(skoMC1*skoMC1*skoMC1*(-2+skoMC1*-12)+skoSC1*(skoMC1*skoMC1*skoMC1*(1+skoMC1*-6)+skoSC1*(skoMC1*skoMC1*skoMC1+skoSC1*(skoMC1*skoMC1*skoMC1*(-1/12)+skoSC1*skoMC1*skoMC1*skoMC1*(-1/12)))))<=skoMC1*skoMC1*skoMC1*(2+skoMC1*6)]], Reals]]

% In QepcadB format:
(E skoSC1) (E skoMC1) [[(skoMC1 (-2+(skoMC1 (-5))))<(skoSC1 ((skoMC1 (-1+(skoMC1 (3))))+(skoSC1 ((skoMC1 (-2+(skoMC1 (-3))))+(skoSC1 ((skoMC1 (1/6+(skoMC1 (-1))))+(skoSC1 skoMC1 (1/4))))))))]/\[[0<skoMC1]/\[[(skoMC1 (-2+(skoMC1 (-5))))<(skoSC1 ((skoMC1 (-1+(skoMC1 (3))))+(skoSC1 ((skoMC1 (-2+(skoMC1 (-3))))+(skoSC1 ((skoMC1 skoMC1 (-1))+(skoSC1 skoMC1 (1/12))))))))]/\[[(skoSC1 ((skoMC1 (1+(skoMC1 (-3))))+(skoSC1 ((skoMC1 (2+(skoMC1 (3))))+(skoSC1 ((skoMC1 (-1/6+skoMC1))+(skoSC1 skoMC1 (-1/4))))))))<=(skoMC1 (2+(skoMC1 (5))))]/\[[(skoSC1 ((skoMC1 (1+(skoMC1 (-3))))+(skoSC1 ((skoMC1 (2+(skoMC1 (3))))+(skoSC1 ((skoMC1 skoMC1)+(skoSC1 skoMC1 (-1/12))))))))<=(skoMC1 (2+(skoMC1 (5))))]/\[[(skoSC1 skoMC1 (-1))<=skoMC1]/\[[(skoMC1 (-1))<(skoSC1 skoMC1)]/\[[0<=skoMC1]/\[[0<skoMC1]/\[[0<=skoSC1]/\[[2<=skoMC1]/\[[skoSC1<=5/4]/\[[(skoMC1 skoMC1 skoMC1 (-2))<(skoSC1 skoMC1 skoMC1 skoMC1 (2))]/\[[(skoSC1 skoMC1 skoMC1 skoMC1 (-2))<=(skoMC1 skoMC1 skoMC1 (2))]/\[(skoSC1 ((skoMC1 skoMC1 skoMC1 (-2+(skoMC1 (-12))))+(skoSC1 ((skoMC1 skoMC1 skoMC1 (1+(skoMC1 (-6))))+(skoSC1 ((skoMC1 skoMC1 skoMC1)+(skoSC1 ((skoMC1 skoMC1 skoMC1 (-1/12))+(skoSC1 skoMC1 skoMC1 skoMC1 (-1/12))))))))))<=(skoMC1 skoMC1 skoMC1 (2+(skoMC1 (6))))]]]]]]]]]]]]]]].

% In SMTLib2 format:
(declare-fun skoSC1 () Real) (declare-fun skoMC1 () Real) (assert (and (> (* skoSC1 (+ (* skoMC1 (+ (- 1.) (* skoMC1 3.))) (* skoSC1 (+ (* skoMC1 (+ (- 2.) (* skoMC1 (- 3.)))) (* skoSC1 (+ (* skoMC1 (+ (/ 1. 6.) (* skoMC1 (- 1.)))) (* skoSC1 (* skoMC1 (/ 1. 4.))))))))) (* skoMC1 (+ (- 2.) (* skoMC1 (- 5.))))) (and (> skoMC1 0.) (and (> (* skoSC1 (+ (* skoMC1 (+ (- 1.) (* skoMC1 3.))) (* skoSC1 (+ (* skoMC1 (+ (- 2.) (* skoMC1 (- 3.)))) (* skoSC1 (+ (* skoMC1 (* skoMC1 (- 1.))) (* skoSC1 (* skoMC1 (/ 1. 12.))))))))) (* skoMC1 (+ (- 2.) (* skoMC1 (- 5.))))) (and (<= (* skoSC1 (+ (* skoMC1 (+ 1. (* skoMC1 (- 3.)))) (* skoSC1 (+ (* skoMC1 (+ 2. (* skoMC1 3.))) (* skoSC1 (+ (* skoMC1 (+ (/ (- 1.) 6.) skoMC1)) (* skoSC1 (* skoMC1 (/ (- 1.) 4.))))))))) (* skoMC1 (+ 2. (* skoMC1 5.)))) (and (<= (* skoSC1 (+ (* skoMC1 (+ 1. (* skoMC1 (- 3.)))) (* skoSC1 (+ (* skoMC1 (+ 2. (* skoMC1 3.))) (* skoSC1 (+ (* skoMC1 skoMC1) (* skoSC1 (* skoMC1 (/ (- 1.) 12.))))))))) (* skoMC1 (+ 2. (* skoMC1 5.)))) (and (<= (* skoSC1 (* skoMC1 (- 1.))) skoMC1) (and (> (* skoSC1 skoMC1) (* skoMC1 (- 1.))) (and (<= 0. skoMC1) (and (> skoMC1 0.) (and (<= 0. skoSC1) (and (<= 2. skoMC1) (and (<= skoSC1 (/ 5. 4.)) (and (> (* skoSC1 (* skoMC1 (* skoMC1 (* skoMC1 2.)))) (* skoMC1 (* skoMC1 (* skoMC1 (- 2.))))) (and (<= (* skoSC1 (* skoMC1 (* skoMC1 (* skoMC1 (- 2.))))) (* skoMC1 (* skoMC1 (* skoMC1 2.)))) (<= (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (+ (- 2.) (* skoMC1 (- 12.)))))) (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (+ 1. (* skoMC1 (- 6.)))))) (* skoSC1 (+ (* skoMC1 (* skoMC1 skoMC1)) (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (/ (- 1.) 12.)))) (* skoSC1 (* skoMC1 (* skoMC1 (* skoMC1 (/ (- 1.) 12.))))))))))))) (* skoMC1 (* skoMC1 (* skoMC1 (+ 2. (* skoMC1 6.)))))))))))))))))))))

% In GRF format:
(sequent " MetiTarski formula " (antecedent (> (* skoSC1 (+ (* skoMC1 (+ (- 1.) (* skoMC1 3.))) (* skoSC1 (+ (* skoMC1 (+ (- 2.) (* skoMC1 (- 3.)))) (* skoSC1 (+ (* skoMC1 (+ (/ 1. 6.) (* skoMC1 (- 1.)))) (* skoSC1 (* skoMC1 (/ 1. 4.))))))))) (* skoMC1 (+ (- 2.) (* skoMC1 (- 5.))))) (> skoMC1 0.) (> (* skoSC1 (+ (* skoMC1 (+ (- 1.) (* skoMC1 3.))) (* skoSC1 (+ (* skoMC1 (+ (- 2.) (* skoMC1 (- 3.)))) (* skoSC1 (+ (* skoMC1 (* skoMC1 (- 1.))) (* skoSC1 (* skoMC1 (/ 1. 12.))))))))) (* skoMC1 (+ (- 2.) (* skoMC1 (- 5.))))) (<= (* skoSC1 (+ (* skoMC1 (+ 1. (* skoMC1 (- 3.)))) (* skoSC1 (+ (* skoMC1 (+ 2. (* skoMC1 3.))) (* skoSC1 (+ (* skoMC1 (+ (/ (- 1.) 6.) skoMC1)) (* skoSC1 (* skoMC1 (/ (- 1.) 4.))))))))) (* skoMC1 (+ 2. (* skoMC1 5.)))) (<= (* skoSC1 (+ (* skoMC1 (+ 1. (* skoMC1 (- 3.)))) (* skoSC1 (+ (* skoMC1 (+ 2. (* skoMC1 3.))) (* skoSC1 (+ (* skoMC1 skoMC1) (* skoSC1 (* skoMC1 (/ (- 1.) 12.))))))))) (* skoMC1 (+ 2. (* skoMC1 5.)))) (<= (* skoSC1 (* skoMC1 (- 1.))) skoMC1) (> (* skoSC1 skoMC1) (* skoMC1 (- 1.))) (<= 0. skoMC1) (> skoMC1 0.) (<= 0. skoSC1) (<= 2. skoMC1) (<= skoSC1 (/ 5. 4.)) (> (* skoSC1 (* skoMC1 (* skoMC1 (* skoMC1 2.)))) (* skoMC1 (* skoMC1 (* skoMC1 (- 2.))))) (<= (* skoSC1 (* skoMC1 (* skoMC1 (* skoMC1 (- 2.))))) (* skoMC1 (* skoMC1 (* skoMC1 2.))))) (succedent (> (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (+ (- 2.) (* skoMC1 (- 12.)))))) (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (+ 1. (* skoMC1 (- 6.)))))) (* skoSC1 (+ (* skoMC1 (* skoMC1 skoMC1)) (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (/ (- 1.) 12.)))) (* skoSC1 (* skoMC1 (* skoMC1 (* skoMC1 (/ (- 1.) 12.))))))))))))) (* skoMC1 (* skoMC1 (* skoMC1 (+ 2. (* skoMC1 6.))))))))
-----[end problem]-----

-----[begin problem]-----
% In Mathematica format:
Timing[Resolve[Exists[{skoSC1,skoMC1}, And[skoSC1*(skoMC1*(-1+skoMC1*3)+skoSC1*(skoMC1*(-2+skoMC1*-3)+skoSC1*(skoMC1*((1/6)+skoMC1*-1)+skoSC1*skoMC1*(1/4))))<=skoMC1*(-2+skoMC1*-5),skoMC1<=0,skoSC1*(skoMC1*(-1+skoMC1*3)+skoSC1*(skoMC1*(-2+skoMC1*-3)+skoSC1*(skoMC1*skoMC1*-1+skoSC1*skoMC1*(1/12))))>skoMC1*(-2+skoMC1*-5),skoSC1*(skoMC1*(1+skoMC1*-3)+skoSC1*(skoMC1*(2+skoMC1*3)+skoSC1*(skoMC1*((-1/6)+skoMC1)+skoSC1*skoMC1*(-1/4))))<=skoMC1*(2+skoMC1*5),skoSC1*(skoMC1*(1+skoMC1*-3)+skoSC1*(skoMC1*(2+skoMC1*3)+skoSC1*(skoMC1*skoMC1+skoSC1*skoMC1*(-1/12))))<=skoMC1*(2+skoMC1*5),skoSC1*skoMC1*-1<=skoMC1,skoSC1*skoMC1>skoMC1*-1,0<=skoMC1,skoMC1>0,0<=skoSC1,2<=skoMC1,skoSC1<=(5/4),skoSC1*skoMC1*skoMC1*skoMC1*2>skoMC1*skoMC1*skoMC1*-2,skoSC1*skoMC1*skoMC1*skoMC1*-2<=skoMC1*skoMC1*skoMC1*2,skoSC1*(skoMC1*skoMC1*skoMC1*(-2+skoMC1*-12)+skoSC1*(skoMC1*skoMC1*skoMC1*(1+skoMC1*-6)+skoSC1*(skoMC1*skoMC1*skoMC1+skoSC1*(skoMC1*skoMC1*skoMC1*(-1/12)+skoSC1*skoMC1*skoMC1*skoMC1*(-1/12)))))<=skoMC1*skoMC1*skoMC1*(2+skoMC1*6)]], Reals]]

% In QepcadB format:
(E skoSC1) (E skoMC1) [[(skoSC1 ((skoMC1 (-1+(skoMC1 (3))))+(skoSC1 ((skoMC1 (-2+(skoMC1 (-3))))+(skoSC1 ((skoMC1 (1/6+(skoMC1 (-1))))+(skoSC1 skoMC1 (1/4))))))))<=(skoMC1 (-2+(skoMC1 (-5))))]/\[[skoMC1<=0]/\[[(skoMC1 (-2+(skoMC1 (-5))))<(skoSC1 ((skoMC1 (-1+(skoMC1 (3))))+(skoSC1 ((skoMC1 (-2+(skoMC1 (-3))))+(skoSC1 ((skoMC1 skoMC1 (-1))+(skoSC1 skoMC1 (1/12))))))))]/\[[(skoSC1 ((skoMC1 (1+(skoMC1 (-3))))+(skoSC1 ((skoMC1 (2+(skoMC1 (3))))+(skoSC1 ((skoMC1 (-1/6+skoMC1))+(skoSC1 skoMC1 (-1/4))))))))<=(skoMC1 (2+(skoMC1 (5))))]/\[[(skoSC1 ((skoMC1 (1+(skoMC1 (-3))))+(skoSC1 ((skoMC1 (2+(skoMC1 (3))))+(skoSC1 ((skoMC1 skoMC1)+(skoSC1 skoMC1 (-1/12))))))))<=(skoMC1 (2+(skoMC1 (5))))]/\[[(skoSC1 skoMC1 (-1))<=skoMC1]/\[[(skoMC1 (-1))<(skoSC1 skoMC1)]/\[[0<=skoMC1]/\[[0<skoMC1]/\[[0<=skoSC1]/\[[2<=skoMC1]/\[[skoSC1<=5/4]/\[[(skoMC1 skoMC1 skoMC1 (-2))<(skoSC1 skoMC1 skoMC1 skoMC1 (2))]/\[[(skoSC1 skoMC1 skoMC1 skoMC1 (-2))<=(skoMC1 skoMC1 skoMC1 (2))]/\[(skoSC1 ((skoMC1 skoMC1 skoMC1 (-2+(skoMC1 (-12))))+(skoSC1 ((skoMC1 skoMC1 skoMC1 (1+(skoMC1 (-6))))+(skoSC1 ((skoMC1 skoMC1 skoMC1)+(skoSC1 ((skoMC1 skoMC1 skoMC1 (-1/12))+(skoSC1 skoMC1 skoMC1 skoMC1 (-1/12))))))))))<=(skoMC1 skoMC1 skoMC1 (2+(skoMC1 (6))))]]]]]]]]]]]]]]].

% In SMTLib2 format:
(declare-fun skoSC1 () Real) (declare-fun skoMC1 () Real) (assert (and (<= (* skoSC1 (+ (* skoMC1 (+ (- 1.) (* skoMC1 3.))) (* skoSC1 (+ (* skoMC1 (+ (- 2.) (* skoMC1 (- 3.)))) (* skoSC1 (+ (* skoMC1 (+ (/ 1. 6.) (* skoMC1 (- 1.)))) (* skoSC1 (* skoMC1 (/ 1. 4.))))))))) (* skoMC1 (+ (- 2.) (* skoMC1 (- 5.))))) (and (<= skoMC1 0.) (and (> (* skoSC1 (+ (* skoMC1 (+ (- 1.) (* skoMC1 3.))) (* skoSC1 (+ (* skoMC1 (+ (- 2.) (* skoMC1 (- 3.)))) (* skoSC1 (+ (* skoMC1 (* skoMC1 (- 1.))) (* skoSC1 (* skoMC1 (/ 1. 12.))))))))) (* skoMC1 (+ (- 2.) (* skoMC1 (- 5.))))) (and (<= (* skoSC1 (+ (* skoMC1 (+ 1. (* skoMC1 (- 3.)))) (* skoSC1 (+ (* skoMC1 (+ 2. (* skoMC1 3.))) (* skoSC1 (+ (* skoMC1 (+ (/ (- 1.) 6.) skoMC1)) (* skoSC1 (* skoMC1 (/ (- 1.) 4.))))))))) (* skoMC1 (+ 2. (* skoMC1 5.)))) (and (<= (* skoSC1 (+ (* skoMC1 (+ 1. (* skoMC1 (- 3.)))) (* skoSC1 (+ (* skoMC1 (+ 2. (* skoMC1 3.))) (* skoSC1 (+ (* skoMC1 skoMC1) (* skoSC1 (* skoMC1 (/ (- 1.) 12.))))))))) (* skoMC1 (+ 2. (* skoMC1 5.)))) (and (<= (* skoSC1 (* skoMC1 (- 1.))) skoMC1) (and (> (* skoSC1 skoMC1) (* skoMC1 (- 1.))) (and (<= 0. skoMC1) (and (> skoMC1 0.) (and (<= 0. skoSC1) (and (<= 2. skoMC1) (and (<= skoSC1 (/ 5. 4.)) (and (> (* skoSC1 (* skoMC1 (* skoMC1 (* skoMC1 2.)))) (* skoMC1 (* skoMC1 (* skoMC1 (- 2.))))) (and (<= (* skoSC1 (* skoMC1 (* skoMC1 (* skoMC1 (- 2.))))) (* skoMC1 (* skoMC1 (* skoMC1 2.)))) (<= (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (+ (- 2.) (* skoMC1 (- 12.)))))) (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (+ 1. (* skoMC1 (- 6.)))))) (* skoSC1 (+ (* skoMC1 (* skoMC1 skoMC1)) (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (/ (- 1.) 12.)))) (* skoSC1 (* skoMC1 (* skoMC1 (* skoMC1 (/ (- 1.) 12.))))))))))))) (* skoMC1 (* skoMC1 (* skoMC1 (+ 2. (* skoMC1 6.)))))))))))))))))))))

% In GRF format:
(sequent " MetiTarski formula " (antecedent (<= (* skoSC1 (+ (* skoMC1 (+ (- 1.) (* skoMC1 3.))) (* skoSC1 (+ (* skoMC1 (+ (- 2.) (* skoMC1 (- 3.)))) (* skoSC1 (+ (* skoMC1 (+ (/ 1. 6.) (* skoMC1 (- 1.)))) (* skoSC1 (* skoMC1 (/ 1. 4.))))))))) (* skoMC1 (+ (- 2.) (* skoMC1 (- 5.))))) (<= skoMC1 0.) (> (* skoSC1 (+ (* skoMC1 (+ (- 1.) (* skoMC1 3.))) (* skoSC1 (+ (* skoMC1 (+ (- 2.) (* skoMC1 (- 3.)))) (* skoSC1 (+ (* skoMC1 (* skoMC1 (- 1.))) (* skoSC1 (* skoMC1 (/ 1. 12.))))))))) (* skoMC1 (+ (- 2.) (* skoMC1 (- 5.))))) (<= (* skoSC1 (+ (* skoMC1 (+ 1. (* skoMC1 (- 3.)))) (* skoSC1 (+ (* skoMC1 (+ 2. (* skoMC1 3.))) (* skoSC1 (+ (* skoMC1 (+ (/ (- 1.) 6.) skoMC1)) (* skoSC1 (* skoMC1 (/ (- 1.) 4.))))))))) (* skoMC1 (+ 2. (* skoMC1 5.)))) (<= (* skoSC1 (+ (* skoMC1 (+ 1. (* skoMC1 (- 3.)))) (* skoSC1 (+ (* skoMC1 (+ 2. (* skoMC1 3.))) (* skoSC1 (+ (* skoMC1 skoMC1) (* skoSC1 (* skoMC1 (/ (- 1.) 12.))))))))) (* skoMC1 (+ 2. (* skoMC1 5.)))) (<= (* skoSC1 (* skoMC1 (- 1.))) skoMC1) (> (* skoSC1 skoMC1) (* skoMC1 (- 1.))) (<= 0. skoMC1) (> skoMC1 0.) (<= 0. skoSC1) (<= 2. skoMC1) (<= skoSC1 (/ 5. 4.)) (> (* skoSC1 (* skoMC1 (* skoMC1 (* skoMC1 2.)))) (* skoMC1 (* skoMC1 (* skoMC1 (- 2.))))) (<= (* skoSC1 (* skoMC1 (* skoMC1 (* skoMC1 (- 2.))))) (* skoMC1 (* skoMC1 (* skoMC1 2.))))) (succedent (> (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (+ (- 2.) (* skoMC1 (- 12.)))))) (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (+ 1. (* skoMC1 (- 6.)))))) (* skoSC1 (+ (* skoMC1 (* skoMC1 skoMC1)) (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (/ (- 1.) 12.)))) (* skoSC1 (* skoMC1 (* skoMC1 (* skoMC1 (/ (- 1.) 12.))))))))))))) (* skoMC1 (* skoMC1 (* skoMC1 (+ 2. (* skoMC1 6.))))))))
-----[end problem]-----

-----[begin problem]-----
% In Mathematica format:
Timing[Resolve[Exists[{skoSC1,skoMC1}, And[0<=skoMC1,skoSC1*(skoMC1*(-1+skoMC1*3)+skoSC1*(skoMC1*(-2+skoMC1*-3)+skoSC1*(skoMC1*skoMC1*-1+skoSC1*skoMC1*(1/12))))>skoMC1*(-2+skoMC1*-5),skoSC1*(skoMC1*(1+skoMC1*-3)+skoSC1*(skoMC1*(2+skoMC1*3)+skoSC1*(skoMC1*((-1/6)+skoMC1)+skoSC1*skoMC1*(-1/4))))<=skoMC1*(2+skoMC1*5),skoSC1*(skoMC1*(1+skoMC1*-3)+skoSC1*(skoMC1*(2+skoMC1*3)+skoSC1*(skoMC1*skoMC1+skoSC1*skoMC1*(-1/12))))<=skoMC1*(2+skoMC1*5),skoSC1*skoMC1*-1<=skoMC1,skoSC1*skoMC1>skoMC1*-1,0<=skoMC1,skoMC1>0,0<=skoSC1,2<=skoMC1,skoSC1<=(5/4),skoSC1*skoMC1*skoMC1*skoMC1*2>skoMC1*skoMC1*skoMC1*-2,skoSC1*skoMC1*skoMC1*skoMC1*-2<=skoMC1*skoMC1*skoMC1*2,skoSC1*(skoMC1*skoMC1*skoMC1*(-2+skoMC1*-12)+skoSC1*(skoMC1*skoMC1*skoMC1*(1+skoMC1*-6)+skoSC1*(skoMC1*skoMC1*skoMC1+skoSC1*(skoMC1*skoMC1*skoMC1*(-1/12)+skoSC1*skoMC1*skoMC1*skoMC1*(-1/12)))))<=skoMC1*skoMC1*skoMC1*(2+skoMC1*6)]], Reals]]

% In QepcadB format:
(E skoSC1) (E skoMC1) [[0<=skoMC1]/\[[(skoMC1 (-2+(skoMC1 (-5))))<(skoSC1 ((skoMC1 (-1+(skoMC1 (3))))+(skoSC1 ((skoMC1 (-2+(skoMC1 (-3))))+(skoSC1 ((skoMC1 skoMC1 (-1))+(skoSC1 skoMC1 (1/12))))))))]/\[[(skoSC1 ((skoMC1 (1+(skoMC1 (-3))))+(skoSC1 ((skoMC1 (2+(skoMC1 (3))))+(skoSC1 ((skoMC1 (-1/6+skoMC1))+(skoSC1 skoMC1 (-1/4))))))))<=(skoMC1 (2+(skoMC1 (5))))]/\[[(skoSC1 ((skoMC1 (1+(skoMC1 (-3))))+(skoSC1 ((skoMC1 (2+(skoMC1 (3))))+(skoSC1 ((skoMC1 skoMC1)+(skoSC1 skoMC1 (-1/12))))))))<=(skoMC1 (2+(skoMC1 (5))))]/\[[(skoSC1 skoMC1 (-1))<=skoMC1]/\[[(skoMC1 (-1))<(skoSC1 skoMC1)]/\[[0<=skoMC1]/\[[0<skoMC1]/\[[0<=skoSC1]/\[[2<=skoMC1]/\[[skoSC1<=5/4]/\[[(skoMC1 skoMC1 skoMC1 (-2))<(skoSC1 skoMC1 skoMC1 skoMC1 (2))]/\[[(skoSC1 skoMC1 skoMC1 skoMC1 (-2))<=(skoMC1 skoMC1 skoMC1 (2))]/\[(skoSC1 ((skoMC1 skoMC1 skoMC1 (-2+(skoMC1 (-12))))+(skoSC1 ((skoMC1 skoMC1 skoMC1 (1+(skoMC1 (-6))))+(skoSC1 ((skoMC1 skoMC1 skoMC1)+(skoSC1 ((skoMC1 skoMC1 skoMC1 (-1/12))+(skoSC1 skoMC1 skoMC1 skoMC1 (-1/12))))))))))<=(skoMC1 skoMC1 skoMC1 (2+(skoMC1 (6))))]]]]]]]]]]]]]].

% In SMTLib2 format:
(declare-fun skoSC1 () Real) (declare-fun skoMC1 () Real) (assert (and (<= 0. skoMC1) (and (> (* skoSC1 (+ (* skoMC1 (+ (- 1.) (* skoMC1 3.))) (* skoSC1 (+ (* skoMC1 (+ (- 2.) (* skoMC1 (- 3.)))) (* skoSC1 (+ (* skoMC1 (* skoMC1 (- 1.))) (* skoSC1 (* skoMC1 (/ 1. 12.))))))))) (* skoMC1 (+ (- 2.) (* skoMC1 (- 5.))))) (and (<= (* skoSC1 (+ (* skoMC1 (+ 1. (* skoMC1 (- 3.)))) (* skoSC1 (+ (* skoMC1 (+ 2. (* skoMC1 3.))) (* skoSC1 (+ (* skoMC1 (+ (/ (- 1.) 6.) skoMC1)) (* skoSC1 (* skoMC1 (/ (- 1.) 4.))))))))) (* skoMC1 (+ 2. (* skoMC1 5.)))) (and (<= (* skoSC1 (+ (* skoMC1 (+ 1. (* skoMC1 (- 3.)))) (* skoSC1 (+ (* skoMC1 (+ 2. (* skoMC1 3.))) (* skoSC1 (+ (* skoMC1 skoMC1) (* skoSC1 (* skoMC1 (/ (- 1.) 12.))))))))) (* skoMC1 (+ 2. (* skoMC1 5.)))) (and (<= (* skoSC1 (* skoMC1 (- 1.))) skoMC1) (and (> (* skoSC1 skoMC1) (* skoMC1 (- 1.))) (and (<= 0. skoMC1) (and (> skoMC1 0.) (and (<= 0. skoSC1) (and (<= 2. skoMC1) (and (<= skoSC1 (/ 5. 4.)) (and (> (* skoSC1 (* skoMC1 (* skoMC1 (* skoMC1 2.)))) (* skoMC1 (* skoMC1 (* skoMC1 (- 2.))))) (and (<= (* skoSC1 (* skoMC1 (* skoMC1 (* skoMC1 (- 2.))))) (* skoMC1 (* skoMC1 (* skoMC1 2.)))) (<= (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (+ (- 2.) (* skoMC1 (- 12.)))))) (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (+ 1. (* skoMC1 (- 6.)))))) (* skoSC1 (+ (* skoMC1 (* skoMC1 skoMC1)) (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (/ (- 1.) 12.)))) (* skoSC1 (* skoMC1 (* skoMC1 (* skoMC1 (/ (- 1.) 12.))))))))))))) (* skoMC1 (* skoMC1 (* skoMC1 (+ 2. (* skoMC1 6.))))))))))))))))))))

% In GRF format:
(sequent " MetiTarski formula " (antecedent (<= 0. skoMC1) (> (* skoSC1 (+ (* skoMC1 (+ (- 1.) (* skoMC1 3.))) (* skoSC1 (+ (* skoMC1 (+ (- 2.) (* skoMC1 (- 3.)))) (* skoSC1 (+ (* skoMC1 (* skoMC1 (- 1.))) (* skoSC1 (* skoMC1 (/ 1. 12.))))))))) (* skoMC1 (+ (- 2.) (* skoMC1 (- 5.))))) (<= (* skoSC1 (+ (* skoMC1 (+ 1. (* skoMC1 (- 3.)))) (* skoSC1 (+ (* skoMC1 (+ 2. (* skoMC1 3.))) (* skoSC1 (+ (* skoMC1 (+ (/ (- 1.) 6.) skoMC1)) (* skoSC1 (* skoMC1 (/ (- 1.) 4.))))))))) (* skoMC1 (+ 2. (* skoMC1 5.)))) (<= (* skoSC1 (+ (* skoMC1 (+ 1. (* skoMC1 (- 3.)))) (* skoSC1 (+ (* skoMC1 (+ 2. (* skoMC1 3.))) (* skoSC1 (+ (* skoMC1 skoMC1) (* skoSC1 (* skoMC1 (/ (- 1.) 12.))))))))) (* skoMC1 (+ 2. (* skoMC1 5.)))) (<= (* skoSC1 (* skoMC1 (- 1.))) skoMC1) (> (* skoSC1 skoMC1) (* skoMC1 (- 1.))) (<= 0. skoMC1) (> skoMC1 0.) (<= 0. skoSC1) (<= 2. skoMC1) (<= skoSC1 (/ 5. 4.)) (> (* skoSC1 (* skoMC1 (* skoMC1 (* skoMC1 2.)))) (* skoMC1 (* skoMC1 (* skoMC1 (- 2.))))) (<= (* skoSC1 (* skoMC1 (* skoMC1 (* skoMC1 (- 2.))))) (* skoMC1 (* skoMC1 (* skoMC1 2.))))) (succedent (> (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (+ (- 2.) (* skoMC1 (- 12.)))))) (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (+ 1. (* skoMC1 (- 6.)))))) (* skoSC1 (+ (* skoMC1 (* skoMC1 skoMC1)) (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (/ (- 1.) 12.)))) (* skoSC1 (* skoMC1 (* skoMC1 (* skoMC1 (/ (- 1.) 12.))))))))))))) (* skoMC1 (* skoMC1 (* skoMC1 (+ 2. (* skoMC1 6.))))))))
-----[end problem]-----

-----[begin problem]-----
% In Mathematica format:
Timing[Resolve[Exists[{skoSC1,skoMC1}, And[skoSC1*(skoMC1*(-1+skoMC1*3)+skoSC1*(skoMC1*(-2+skoMC1*-3)+skoSC1*(skoMC1*((1/6)+skoMC1*-1)+skoSC1*skoMC1*(1/4))))>skoMC1*(-2+skoMC1*-5),skoSC1*(skoMC1*(-1+skoMC1*3)+skoSC1*(skoMC1*(-2+skoMC1*-3)+skoSC1*(skoMC1*skoMC1*-1+skoSC1*skoMC1*(1/12))))>skoMC1*(-2+skoMC1*-5),skoSC1*(skoMC1*(1+skoMC1*-3)+skoSC1*(skoMC1*(2+skoMC1*3)+skoSC1*(skoMC1*((-1/6)+skoMC1)+skoSC1*skoMC1*(-1/4))))<=skoMC1*(2+skoMC1*5),skoSC1*(skoMC1*(1+skoMC1*-3)+skoSC1*(skoMC1*(2+skoMC1*3)+skoSC1*(skoMC1*skoMC1+skoSC1*skoMC1*(-1/12))))<=skoMC1*(2+skoMC1*5),skoSC1*skoMC1*-1<=skoMC1,skoSC1*skoMC1>skoMC1*-1,0<=skoMC1,skoMC1>0,0<=skoSC1,2<=skoMC1,skoSC1<=(5/4),skoSC1*skoMC1*skoMC1*skoMC1*2>skoMC1*skoMC1*skoMC1*-2,skoSC1*skoMC1*skoMC1*skoMC1*-2<=skoMC1*skoMC1*skoMC1*2,skoSC1*(skoMC1*skoMC1*skoMC1*(-2+skoMC1*-12)+skoSC1*(skoMC1*skoMC1*skoMC1*(1+skoMC1*-6)+skoSC1*(skoMC1*skoMC1*skoMC1+skoSC1*(skoMC1*skoMC1*skoMC1*(-1/12)+skoSC1*skoMC1*skoMC1*skoMC1*(-1/12)))))<=skoMC1*skoMC1*skoMC1*(2+skoMC1*6)]], Reals]]

% In QepcadB format:
(E skoSC1) (E skoMC1) [[(skoMC1 (-2+(skoMC1 (-5))))<(skoSC1 ((skoMC1 (-1+(skoMC1 (3))))+(skoSC1 ((skoMC1 (-2+(skoMC1 (-3))))+(skoSC1 ((skoMC1 (1/6+(skoMC1 (-1))))+(skoSC1 skoMC1 (1/4))))))))]/\[[(skoMC1 (-2+(skoMC1 (-5))))<(skoSC1 ((skoMC1 (-1+(skoMC1 (3))))+(skoSC1 ((skoMC1 (-2+(skoMC1 (-3))))+(skoSC1 ((skoMC1 skoMC1 (-1))+(skoSC1 skoMC1 (1/12))))))))]/\[[(skoSC1 ((skoMC1 (1+(skoMC1 (-3))))+(skoSC1 ((skoMC1 (2+(skoMC1 (3))))+(skoSC1 ((skoMC1 (-1/6+skoMC1))+(skoSC1 skoMC1 (-1/4))))))))<=(skoMC1 (2+(skoMC1 (5))))]/\[[(skoSC1 ((skoMC1 (1+(skoMC1 (-3))))+(skoSC1 ((skoMC1 (2+(skoMC1 (3))))+(skoSC1 ((skoMC1 skoMC1)+(skoSC1 skoMC1 (-1/12))))))))<=(skoMC1 (2+(skoMC1 (5))))]/\[[(skoSC1 skoMC1 (-1))<=skoMC1]/\[[(skoMC1 (-1))<(skoSC1 skoMC1)]/\[[0<=skoMC1]/\[[0<skoMC1]/\[[0<=skoSC1]/\[[2<=skoMC1]/\[[skoSC1<=5/4]/\[[(skoMC1 skoMC1 skoMC1 (-2))<(skoSC1 skoMC1 skoMC1 skoMC1 (2))]/\[[(skoSC1 skoMC1 skoMC1 skoMC1 (-2))<=(skoMC1 skoMC1 skoMC1 (2))]/\[(skoSC1 ((skoMC1 skoMC1 skoMC1 (-2+(skoMC1 (-12))))+(skoSC1 ((skoMC1 skoMC1 skoMC1 (1+(skoMC1 (-6))))+(skoSC1 ((skoMC1 skoMC1 skoMC1)+(skoSC1 ((skoMC1 skoMC1 skoMC1 (-1/12))+(skoSC1 skoMC1 skoMC1 skoMC1 (-1/12))))))))))<=(skoMC1 skoMC1 skoMC1 (2+(skoMC1 (6))))]]]]]]]]]]]]]].

% In SMTLib2 format:
(declare-fun skoSC1 () Real) (declare-fun skoMC1 () Real) (assert (and (> (* skoSC1 (+ (* skoMC1 (+ (- 1.) (* skoMC1 3.))) (* skoSC1 (+ (* skoMC1 (+ (- 2.) (* skoMC1 (- 3.)))) (* skoSC1 (+ (* skoMC1 (+ (/ 1. 6.) (* skoMC1 (- 1.)))) (* skoSC1 (* skoMC1 (/ 1. 4.))))))))) (* skoMC1 (+ (- 2.) (* skoMC1 (- 5.))))) (and (> (* skoSC1 (+ (* skoMC1 (+ (- 1.) (* skoMC1 3.))) (* skoSC1 (+ (* skoMC1 (+ (- 2.) (* skoMC1 (- 3.)))) (* skoSC1 (+ (* skoMC1 (* skoMC1 (- 1.))) (* skoSC1 (* skoMC1 (/ 1. 12.))))))))) (* skoMC1 (+ (- 2.) (* skoMC1 (- 5.))))) (and (<= (* skoSC1 (+ (* skoMC1 (+ 1. (* skoMC1 (- 3.)))) (* skoSC1 (+ (* skoMC1 (+ 2. (* skoMC1 3.))) (* skoSC1 (+ (* skoMC1 (+ (/ (- 1.) 6.) skoMC1)) (* skoSC1 (* skoMC1 (/ (- 1.) 4.))))))))) (* skoMC1 (+ 2. (* skoMC1 5.)))) (and (<= (* skoSC1 (+ (* skoMC1 (+ 1. (* skoMC1 (- 3.)))) (* skoSC1 (+ (* skoMC1 (+ 2. (* skoMC1 3.))) (* skoSC1 (+ (* skoMC1 skoMC1) (* skoSC1 (* skoMC1 (/ (- 1.) 12.))))))))) (* skoMC1 (+ 2. (* skoMC1 5.)))) (and (<= (* skoSC1 (* skoMC1 (- 1.))) skoMC1) (and (> (* skoSC1 skoMC1) (* skoMC1 (- 1.))) (and (<= 0. skoMC1) (and (> skoMC1 0.) (and (<= 0. skoSC1) (and (<= 2. skoMC1) (and (<= skoSC1 (/ 5. 4.)) (and (> (* skoSC1 (* skoMC1 (* skoMC1 (* skoMC1 2.)))) (* skoMC1 (* skoMC1 (* skoMC1 (- 2.))))) (and (<= (* skoSC1 (* skoMC1 (* skoMC1 (* skoMC1 (- 2.))))) (* skoMC1 (* skoMC1 (* skoMC1 2.)))) (<= (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (+ (- 2.) (* skoMC1 (- 12.)))))) (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (+ 1. (* skoMC1 (- 6.)))))) (* skoSC1 (+ (* skoMC1 (* skoMC1 skoMC1)) (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (/ (- 1.) 12.)))) (* skoSC1 (* skoMC1 (* skoMC1 (* skoMC1 (/ (- 1.) 12.))))))))))))) (* skoMC1 (* skoMC1 (* skoMC1 (+ 2. (* skoMC1 6.))))))))))))))))))))

% In GRF format:
(sequent " MetiTarski formula " (antecedent (> (* skoSC1 (+ (* skoMC1 (+ (- 1.) (* skoMC1 3.))) (* skoSC1 (+ (* skoMC1 (+ (- 2.) (* skoMC1 (- 3.)))) (* skoSC1 (+ (* skoMC1 (+ (/ 1. 6.) (* skoMC1 (- 1.)))) (* skoSC1 (* skoMC1 (/ 1. 4.))))))))) (* skoMC1 (+ (- 2.) (* skoMC1 (- 5.))))) (> (* skoSC1 (+ (* skoMC1 (+ (- 1.) (* skoMC1 3.))) (* skoSC1 (+ (* skoMC1 (+ (- 2.) (* skoMC1 (- 3.)))) (* skoSC1 (+ (* skoMC1 (* skoMC1 (- 1.))) (* skoSC1 (* skoMC1 (/ 1. 12.))))))))) (* skoMC1 (+ (- 2.) (* skoMC1 (- 5.))))) (<= (* skoSC1 (+ (* skoMC1 (+ 1. (* skoMC1 (- 3.)))) (* skoSC1 (+ (* skoMC1 (+ 2. (* skoMC1 3.))) (* skoSC1 (+ (* skoMC1 (+ (/ (- 1.) 6.) skoMC1)) (* skoSC1 (* skoMC1 (/ (- 1.) 4.))))))))) (* skoMC1 (+ 2. (* skoMC1 5.)))) (<= (* skoSC1 (+ (* skoMC1 (+ 1. (* skoMC1 (- 3.)))) (* skoSC1 (+ (* skoMC1 (+ 2. (* skoMC1 3.))) (* skoSC1 (+ (* skoMC1 skoMC1) (* skoSC1 (* skoMC1 (/ (- 1.) 12.))))))))) (* skoMC1 (+ 2. (* skoMC1 5.)))) (<= (* skoSC1 (* skoMC1 (- 1.))) skoMC1) (> (* skoSC1 skoMC1) (* skoMC1 (- 1.))) (<= 0. skoMC1) (> skoMC1 0.) (<= 0. skoSC1) (<= 2. skoMC1) (<= skoSC1 (/ 5. 4.)) (> (* skoSC1 (* skoMC1 (* skoMC1 (* skoMC1 2.)))) (* skoMC1 (* skoMC1 (* skoMC1 (- 2.))))) (<= (* skoSC1 (* skoMC1 (* skoMC1 (* skoMC1 (- 2.))))) (* skoMC1 (* skoMC1 (* skoMC1 2.))))) (succedent (> (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (+ (- 2.) (* skoMC1 (- 12.)))))) (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (+ 1. (* skoMC1 (- 6.)))))) (* skoSC1 (+ (* skoMC1 (* skoMC1 skoMC1)) (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (/ (- 1.) 12.)))) (* skoSC1 (* skoMC1 (* skoMC1 (* skoMC1 (/ (- 1.) 12.))))))))))))) (* skoMC1 (* skoMC1 (* skoMC1 (+ 2. (* skoMC1 6.))))))))
-----[end problem]-----

-----[begin problem]-----
% In Mathematica format:
Timing[Resolve[Exists[{skoSC1,skoMC1}, And[0<=skoMC1,skoSC1*(skoMC1*(-1+skoMC1*3)+skoSC1*(skoMC1*(-2+skoMC1*-3)+skoSC1*(skoMC1*((1/6)+skoMC1*-1)+skoSC1*skoMC1*(1/4))))>skoMC1*(-2+skoMC1*-5),skoSC1*(skoMC1*(-1+skoMC1*3)+skoSC1*(skoMC1*(-2+skoMC1*-3)+skoSC1*(skoMC1*skoMC1*-1+skoSC1*skoMC1*(1/12))))>skoMC1*(-2+skoMC1*-5),skoSC1*(skoMC1*(1+skoMC1*-3)+skoSC1*(skoMC1*(2+skoMC1*3)+skoSC1*(skoMC1*((-1/6)+skoMC1)+skoSC1*skoMC1*(-1/4))))<=skoMC1*(2+skoMC1*5),skoSC1*(skoMC1*(1+skoMC1*-3)+skoSC1*(skoMC1*(2+skoMC1*3)+skoSC1*(skoMC1*skoMC1+skoSC1*skoMC1*(-1/12))))<=skoMC1*(2+skoMC1*5),skoSC1*skoMC1*-1<=skoMC1,skoSC1*skoMC1>skoMC1*-1,0<=skoMC1,skoMC1>0,0<=skoSC1,2<=skoMC1,skoSC1<=(5/4),skoSC1*skoMC1*skoMC1*skoMC1*2>skoMC1*skoMC1*skoMC1*-2,skoSC1*skoMC1*skoMC1*skoMC1*-2<=skoMC1*skoMC1*skoMC1*2,skoSC1*(skoMC1*skoMC1*skoMC1*(-2+skoMC1*-12)+skoSC1*(skoMC1*skoMC1*skoMC1*(1+skoMC1*-6)+skoSC1*(skoMC1*skoMC1*skoMC1+skoSC1*(skoMC1*skoMC1*skoMC1*(-1/12)+skoSC1*skoMC1*skoMC1*skoMC1*(-1/12)))))<=skoMC1*skoMC1*skoMC1*(2+skoMC1*6)]], Reals]]

% In QepcadB format:
(E skoSC1) (E skoMC1) [[0<=skoMC1]/\[[(skoMC1 (-2+(skoMC1 (-5))))<(skoSC1 ((skoMC1 (-1+(skoMC1 (3))))+(skoSC1 ((skoMC1 (-2+(skoMC1 (-3))))+(skoSC1 ((skoMC1 (1/6+(skoMC1 (-1))))+(skoSC1 skoMC1 (1/4))))))))]/\[[(skoMC1 (-2+(skoMC1 (-5))))<(skoSC1 ((skoMC1 (-1+(skoMC1 (3))))+(skoSC1 ((skoMC1 (-2+(skoMC1 (-3))))+(skoSC1 ((skoMC1 skoMC1 (-1))+(skoSC1 skoMC1 (1/12))))))))]/\[[(skoSC1 ((skoMC1 (1+(skoMC1 (-3))))+(skoSC1 ((skoMC1 (2+(skoMC1 (3))))+(skoSC1 ((skoMC1 (-1/6+skoMC1))+(skoSC1 skoMC1 (-1/4))))))))<=(skoMC1 (2+(skoMC1 (5))))]/\[[(skoSC1 ((skoMC1 (1+(skoMC1 (-3))))+(skoSC1 ((skoMC1 (2+(skoMC1 (3))))+(skoSC1 ((skoMC1 skoMC1)+(skoSC1 skoMC1 (-1/12))))))))<=(skoMC1 (2+(skoMC1 (5))))]/\[[(skoSC1 skoMC1 (-1))<=skoMC1]/\[[(skoMC1 (-1))<(skoSC1 skoMC1)]/\[[0<=skoMC1]/\[[0<skoMC1]/\[[0<=skoSC1]/\[[2<=skoMC1]/\[[skoSC1<=5/4]/\[[(skoMC1 skoMC1 skoMC1 (-2))<(skoSC1 skoMC1 skoMC1 skoMC1 (2))]/\[[(skoSC1 skoMC1 skoMC1 skoMC1 (-2))<=(skoMC1 skoMC1 skoMC1 (2))]/\[(skoSC1 ((skoMC1 skoMC1 skoMC1 (-2+(skoMC1 (-12))))+(skoSC1 ((skoMC1 skoMC1 skoMC1 (1+(skoMC1 (-6))))+(skoSC1 ((skoMC1 skoMC1 skoMC1)+(skoSC1 ((skoMC1 skoMC1 skoMC1 (-1/12))+(skoSC1 skoMC1 skoMC1 skoMC1 (-1/12))))))))))<=(skoMC1 skoMC1 skoMC1 (2+(skoMC1 (6))))]]]]]]]]]]]]]]].

% In SMTLib2 format:
(declare-fun skoSC1 () Real) (declare-fun skoMC1 () Real) (assert (and (<= 0. skoMC1) (and (> (* skoSC1 (+ (* skoMC1 (+ (- 1.) (* skoMC1 3.))) (* skoSC1 (+ (* skoMC1 (+ (- 2.) (* skoMC1 (- 3.)))) (* skoSC1 (+ (* skoMC1 (+ (/ 1. 6.) (* skoMC1 (- 1.)))) (* skoSC1 (* skoMC1 (/ 1. 4.))))))))) (* skoMC1 (+ (- 2.) (* skoMC1 (- 5.))))) (and (> (* skoSC1 (+ (* skoMC1 (+ (- 1.) (* skoMC1 3.))) (* skoSC1 (+ (* skoMC1 (+ (- 2.) (* skoMC1 (- 3.)))) (* skoSC1 (+ (* skoMC1 (* skoMC1 (- 1.))) (* skoSC1 (* skoMC1 (/ 1. 12.))))))))) (* skoMC1 (+ (- 2.) (* skoMC1 (- 5.))))) (and (<= (* skoSC1 (+ (* skoMC1 (+ 1. (* skoMC1 (- 3.)))) (* skoSC1 (+ (* skoMC1 (+ 2. (* skoMC1 3.))) (* skoSC1 (+ (* skoMC1 (+ (/ (- 1.) 6.) skoMC1)) (* skoSC1 (* skoMC1 (/ (- 1.) 4.))))))))) (* skoMC1 (+ 2. (* skoMC1 5.)))) (and (<= (* skoSC1 (+ (* skoMC1 (+ 1. (* skoMC1 (- 3.)))) (* skoSC1 (+ (* skoMC1 (+ 2. (* skoMC1 3.))) (* skoSC1 (+ (* skoMC1 skoMC1) (* skoSC1 (* skoMC1 (/ (- 1.) 12.))))))))) (* skoMC1 (+ 2. (* skoMC1 5.)))) (and (<= (* skoSC1 (* skoMC1 (- 1.))) skoMC1) (and (> (* skoSC1 skoMC1) (* skoMC1 (- 1.))) (and (<= 0. skoMC1) (and (> skoMC1 0.) (and (<= 0. skoSC1) (and (<= 2. skoMC1) (and (<= skoSC1 (/ 5. 4.)) (and (> (* skoSC1 (* skoMC1 (* skoMC1 (* skoMC1 2.)))) (* skoMC1 (* skoMC1 (* skoMC1 (- 2.))))) (and (<= (* skoSC1 (* skoMC1 (* skoMC1 (* skoMC1 (- 2.))))) (* skoMC1 (* skoMC1 (* skoMC1 2.)))) (<= (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (+ (- 2.) (* skoMC1 (- 12.)))))) (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (+ 1. (* skoMC1 (- 6.)))))) (* skoSC1 (+ (* skoMC1 (* skoMC1 skoMC1)) (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (/ (- 1.) 12.)))) (* skoSC1 (* skoMC1 (* skoMC1 (* skoMC1 (/ (- 1.) 12.))))))))))))) (* skoMC1 (* skoMC1 (* skoMC1 (+ 2. (* skoMC1 6.)))))))))))))))))))))

% In GRF format:
(sequent " MetiTarski formula " (antecedent (<= 0. skoMC1) (> (* skoSC1 (+ (* skoMC1 (+ (- 1.) (* skoMC1 3.))) (* skoSC1 (+ (* skoMC1 (+ (- 2.) (* skoMC1 (- 3.)))) (* skoSC1 (+ (* skoMC1 (+ (/ 1. 6.) (* skoMC1 (- 1.)))) (* skoSC1 (* skoMC1 (/ 1. 4.))))))))) (* skoMC1 (+ (- 2.) (* skoMC1 (- 5.))))) (> (* skoSC1 (+ (* skoMC1 (+ (- 1.) (* skoMC1 3.))) (* skoSC1 (+ (* skoMC1 (+ (- 2.) (* skoMC1 (- 3.)))) (* skoSC1 (+ (* skoMC1 (* skoMC1 (- 1.))) (* skoSC1 (* skoMC1 (/ 1. 12.))))))))) (* skoMC1 (+ (- 2.) (* skoMC1 (- 5.))))) (<= (* skoSC1 (+ (* skoMC1 (+ 1. (* skoMC1 (- 3.)))) (* skoSC1 (+ (* skoMC1 (+ 2. (* skoMC1 3.))) (* skoSC1 (+ (* skoMC1 (+ (/ (- 1.) 6.) skoMC1)) (* skoSC1 (* skoMC1 (/ (- 1.) 4.))))))))) (* skoMC1 (+ 2. (* skoMC1 5.)))) (<= (* skoSC1 (+ (* skoMC1 (+ 1. (* skoMC1 (- 3.)))) (* skoSC1 (+ (* skoMC1 (+ 2. (* skoMC1 3.))) (* skoSC1 (+ (* skoMC1 skoMC1) (* skoSC1 (* skoMC1 (/ (- 1.) 12.))))))))) (* skoMC1 (+ 2. (* skoMC1 5.)))) (<= (* skoSC1 (* skoMC1 (- 1.))) skoMC1) (> (* skoSC1 skoMC1) (* skoMC1 (- 1.))) (<= 0. skoMC1) (> skoMC1 0.) (<= 0. skoSC1) (<= 2. skoMC1) (<= skoSC1 (/ 5. 4.)) (> (* skoSC1 (* skoMC1 (* skoMC1 (* skoMC1 2.)))) (* skoMC1 (* skoMC1 (* skoMC1 (- 2.))))) (<= (* skoSC1 (* skoMC1 (* skoMC1 (* skoMC1 (- 2.))))) (* skoMC1 (* skoMC1 (* skoMC1 2.))))) (succedent (> (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (+ (- 2.) (* skoMC1 (- 12.)))))) (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (+ 1. (* skoMC1 (- 6.)))))) (* skoSC1 (+ (* skoMC1 (* skoMC1 skoMC1)) (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (/ (- 1.) 12.)))) (* skoSC1 (* skoMC1 (* skoMC1 (* skoMC1 (/ (- 1.) 12.))))))))))))) (* skoMC1 (* skoMC1 (* skoMC1 (+ 2. (* skoMC1 6.))))))))
-----[end problem]-----

-----[begin problem]-----
% In Mathematica format:
Timing[Resolve[Exists[{skoSC1,skoMC1}, And[skoSC1<=0,skoSC1*(skoMC1*(-1+skoMC1*3)+skoSC1*(skoMC1*(-2+skoMC1*-3)+skoSC1*(skoMC1*skoMC1*-1+skoSC1*(skoMC1*(1/12)+skoSC1*skoSC1*(skoMC1*(-1/360)+skoSC1*skoSC1*(skoMC1*(1/20160)+skoSC1*skoSC1*(skoMC1*(-1/1814400)+skoSC1*skoSC1*skoMC1*(1/239500800))))))))>skoMC1*(-2+skoMC1*-5),skoMC1>0,skoSC1*(skoMC1*(-1+skoMC1*3)+skoSC1*(skoMC1*(-2+skoMC1*-3)+skoSC1*(skoMC1*((1/6)+skoMC1*-1)+skoSC1*skoMC1*(1/4))))>skoMC1*(-2+skoMC1*-5),skoSC1*(skoMC1*(-1+skoMC1*3)+skoSC1*(skoMC1*(-2+skoMC1*-3)+skoSC1*(skoMC1*skoMC1*-1+skoSC1*skoMC1*(1/12))))>skoMC1*(-2+skoMC1*-5),skoSC1*(skoMC1*(1+skoMC1*-3)+skoSC1*(skoMC1*(2+skoMC1*3)+skoSC1*(skoMC1*((-1/6)+skoMC1)+skoSC1*skoMC1*(-1/4))))<=skoMC1*(2+skoMC1*5),skoSC1*(skoMC1*(1+skoMC1*-3)+skoSC1*(skoMC1*(2+skoMC1*3)+skoSC1*(skoMC1*skoMC1+skoSC1*skoMC1*(-1/12))))<=skoMC1*(2+skoMC1*5),skoSC1*skoMC1*-1<=skoMC1,skoSC1*skoMC1>skoMC1*-1,0<=skoMC1,skoMC1>0,0<=skoSC1,2<=skoMC1,skoSC1<=(5/4),skoSC1*skoMC1*skoMC1*skoMC1*2>skoMC1*skoMC1*skoMC1*-2,skoSC1*skoMC1*skoMC1*skoMC1*-2<=skoMC1*skoMC1*skoMC1*2,skoSC1*(skoMC1*skoMC1*skoMC1*(-2+skoMC1*-12)+skoSC1*(skoMC1*skoMC1*skoMC1*(1+skoMC1*-6)+skoSC1*(skoMC1*skoMC1*skoMC1+skoSC1*(skoMC1*skoMC1*skoMC1*(-1/12)+skoSC1*skoMC1*skoMC1*skoMC1*(-1/12)))))<=skoMC1*skoMC1*skoMC1*(2+skoMC1*6)]], Reals]]

% In QepcadB format:
(E skoSC1) (E skoMC1) [[skoSC1<=0]/\[[(skoMC1 (-2+(skoMC1 (-5))))<(skoSC1 ((skoMC1 (-1+(skoMC1 (3))))+(skoSC1 ((skoMC1 (-2+(skoMC1 (-3))))+(skoSC1 ((skoMC1 skoMC1 (-1))+(skoSC1 ((skoMC1 (1/12))+(skoSC1 skoSC1 ((skoMC1 (-1/360))+(skoSC1 skoSC1 ((skoMC1 (1/20160))+(skoSC1 skoSC1 ((skoMC1 (-1/1814400))+(skoSC1 skoSC1 skoMC1 (1/239500800))))))))))))))))]/\[[0<skoMC1]/\[[(skoMC1 (-2+(skoMC1 (-5))))<(skoSC1 ((skoMC1 (-1+(skoMC1 (3))))+(skoSC1 ((skoMC1 (-2+(skoMC1 (-3))))+(skoSC1 ((skoMC1 (1/6+(skoMC1 (-1))))+(skoSC1 skoMC1 (1/4))))))))]/\[[(skoMC1 (-2+(skoMC1 (-5))))<(skoSC1 ((skoMC1 (-1+(skoMC1 (3))))+(skoSC1 ((skoMC1 (-2+(skoMC1 (-3))))+(skoSC1 ((skoMC1 skoMC1 (-1))+(skoSC1 skoMC1 (1/12))))))))]/\[[(skoSC1 ((skoMC1 (1+(skoMC1 (-3))))+(skoSC1 ((skoMC1 (2+(skoMC1 (3))))+(skoSC1 ((skoMC1 (-1/6+skoMC1))+(skoSC1 skoMC1 (-1/4))))))))<=(skoMC1 (2+(skoMC1 (5))))]/\[[(skoSC1 ((skoMC1 (1+(skoMC1 (-3))))+(skoSC1 ((skoMC1 (2+(skoMC1 (3))))+(skoSC1 ((skoMC1 skoMC1)+(skoSC1 skoMC1 (-1/12))))))))<=(skoMC1 (2+(skoMC1 (5))))]/\[[(skoSC1 skoMC1 (-1))<=skoMC1]/\[[(skoMC1 (-1))<(skoSC1 skoMC1)]/\[[0<=skoMC1]/\[[0<skoMC1]/\[[0<=skoSC1]/\[[2<=skoMC1]/\[[skoSC1<=5/4]/\[[(skoMC1 skoMC1 skoMC1 (-2))<(skoSC1 skoMC1 skoMC1 skoMC1 (2))]/\[[(skoSC1 skoMC1 skoMC1 skoMC1 (-2))<=(skoMC1 skoMC1 skoMC1 (2))]/\[(skoSC1 ((skoMC1 skoMC1 skoMC1 (-2+(skoMC1 (-12))))+(skoSC1 ((skoMC1 skoMC1 skoMC1 (1+(skoMC1 (-6))))+(skoSC1 ((skoMC1 skoMC1 skoMC1)+(skoSC1 ((skoMC1 skoMC1 skoMC1 (-1/12))+(skoSC1 skoMC1 skoMC1 skoMC1 (-1/12))))))))))<=(skoMC1 skoMC1 skoMC1 (2+(skoMC1 (6))))]]]]]]]]]]]]]]]]].

% In SMTLib2 format:
(declare-fun skoSC1 () Real) (declare-fun skoMC1 () Real) (assert (and (<= skoSC1 0.) (and (> (* skoSC1 (+ (* skoMC1 (+ (- 1.) (* skoMC1 3.))) (* skoSC1 (+ (* skoMC1 (+ (- 2.) (* skoMC1 (- 3.)))) (* skoSC1 (+ (* skoMC1 (* skoMC1 (- 1.))) (* skoSC1 (+ (* skoMC1 (/ 1. 12.)) (* skoSC1 (* skoSC1 (+ (* skoMC1 (/ (- 1.) 360.)) (* skoSC1 (* skoSC1 (+ (* skoMC1 (/ 1. 20160.)) (* skoSC1 (* skoSC1 (+ (* skoMC1 (/ (- 1.) 1814400.)) (* skoSC1 (* skoSC1 (* skoMC1 (/ 1. 239500800.))))))))))))))))))))) (* skoMC1 (+ (- 2.) (* skoMC1 (- 5.))))) (and (> skoMC1 0.) (and (> (* skoSC1 (+ (* skoMC1 (+ (- 1.) (* skoMC1 3.))) (* skoSC1 (+ (* skoMC1 (+ (- 2.) (* skoMC1 (- 3.)))) (* skoSC1 (+ (* skoMC1 (+ (/ 1. 6.) (* skoMC1 (- 1.)))) (* skoSC1 (* skoMC1 (/ 1. 4.))))))))) (* skoMC1 (+ (- 2.) (* skoMC1 (- 5.))))) (and (> (* skoSC1 (+ (* skoMC1 (+ (- 1.) (* skoMC1 3.))) (* skoSC1 (+ (* skoMC1 (+ (- 2.) (* skoMC1 (- 3.)))) (* skoSC1 (+ (* skoMC1 (* skoMC1 (- 1.))) (* skoSC1 (* skoMC1 (/ 1. 12.))))))))) (* skoMC1 (+ (- 2.) (* skoMC1 (- 5.))))) (and (<= (* skoSC1 (+ (* skoMC1 (+ 1. (* skoMC1 (- 3.)))) (* skoSC1 (+ (* skoMC1 (+ 2. (* skoMC1 3.))) (* skoSC1 (+ (* skoMC1 (+ (/ (- 1.) 6.) skoMC1)) (* skoSC1 (* skoMC1 (/ (- 1.) 4.))))))))) (* skoMC1 (+ 2. (* skoMC1 5.)))) (and (<= (* skoSC1 (+ (* skoMC1 (+ 1. (* skoMC1 (- 3.)))) (* skoSC1 (+ (* skoMC1 (+ 2. (* skoMC1 3.))) (* skoSC1 (+ (* skoMC1 skoMC1) (* skoSC1 (* skoMC1 (/ (- 1.) 12.))))))))) (* skoMC1 (+ 2. (* skoMC1 5.)))) (and (<= (* skoSC1 (* skoMC1 (- 1.))) skoMC1) (and (> (* skoSC1 skoMC1) (* skoMC1 (- 1.))) (and (<= 0. skoMC1) (and (> skoMC1 0.) (and (<= 0. skoSC1) (and (<= 2. skoMC1) (and (<= skoSC1 (/ 5. 4.)) (and (> (* skoSC1 (* skoMC1 (* skoMC1 (* skoMC1 2.)))) (* skoMC1 (* skoMC1 (* skoMC1 (- 2.))))) (and (<= (* skoSC1 (* skoMC1 (* skoMC1 (* skoMC1 (- 2.))))) (* skoMC1 (* skoMC1 (* skoMC1 2.)))) (<= (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (+ (- 2.) (* skoMC1 (- 12.)))))) (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (+ 1. (* skoMC1 (- 6.)))))) (* skoSC1 (+ (* skoMC1 (* skoMC1 skoMC1)) (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (/ (- 1.) 12.)))) (* skoSC1 (* skoMC1 (* skoMC1 (* skoMC1 (/ (- 1.) 12.))))))))))))) (* skoMC1 (* skoMC1 (* skoMC1 (+ 2. (* skoMC1 6.)))))))))))))))))))))))

% In GRF format:
(sequent " MetiTarski formula " (antecedent (<= skoSC1 0.) (> (* skoSC1 (+ (* skoMC1 (+ (- 1.) (* skoMC1 3.))) (* skoSC1 (+ (* skoMC1 (+ (- 2.) (* skoMC1 (- 3.)))) (* skoSC1 (+ (* skoMC1 (* skoMC1 (- 1.))) (* skoSC1 (+ (* skoMC1 (/ 1. 12.)) (* skoSC1 (* skoSC1 (+ (* skoMC1 (/ (- 1.) 360.)) (* skoSC1 (* skoSC1 (+ (* skoMC1 (/ 1. 20160.)) (* skoSC1 (* skoSC1 (+ (* skoMC1 (/ (- 1.) 1814400.)) (* skoSC1 (* skoSC1 (* skoMC1 (/ 1. 239500800.))))))))))))))))))))) (* skoMC1 (+ (- 2.) (* skoMC1 (- 5.))))) (> skoMC1 0.) (> (* skoSC1 (+ (* skoMC1 (+ (- 1.) (* skoMC1 3.))) (* skoSC1 (+ (* skoMC1 (+ (- 2.) (* skoMC1 (- 3.)))) (* skoSC1 (+ (* skoMC1 (+ (/ 1. 6.) (* skoMC1 (- 1.)))) (* skoSC1 (* skoMC1 (/ 1. 4.))))))))) (* skoMC1 (+ (- 2.) (* skoMC1 (- 5.))))) (> (* skoSC1 (+ (* skoMC1 (+ (- 1.) (* skoMC1 3.))) (* skoSC1 (+ (* skoMC1 (+ (- 2.) (* skoMC1 (- 3.)))) (* skoSC1 (+ (* skoMC1 (* skoMC1 (- 1.))) (* skoSC1 (* skoMC1 (/ 1. 12.))))))))) (* skoMC1 (+ (- 2.) (* skoMC1 (- 5.))))) (<= (* skoSC1 (+ (* skoMC1 (+ 1. (* skoMC1 (- 3.)))) (* skoSC1 (+ (* skoMC1 (+ 2. (* skoMC1 3.))) (* skoSC1 (+ (* skoMC1 (+ (/ (- 1.) 6.) skoMC1)) (* skoSC1 (* skoMC1 (/ (- 1.) 4.))))))))) (* skoMC1 (+ 2. (* skoMC1 5.)))) (<= (* skoSC1 (+ (* skoMC1 (+ 1. (* skoMC1 (- 3.)))) (* skoSC1 (+ (* skoMC1 (+ 2. (* skoMC1 3.))) (* skoSC1 (+ (* skoMC1 skoMC1) (* skoSC1 (* skoMC1 (/ (- 1.) 12.))))))))) (* skoMC1 (+ 2. (* skoMC1 5.)))) (<= (* skoSC1 (* skoMC1 (- 1.))) skoMC1) (> (* skoSC1 skoMC1) (* skoMC1 (- 1.))) (<= 0. skoMC1) (> skoMC1 0.) (<= 0. skoSC1) (<= 2. skoMC1) (<= skoSC1 (/ 5. 4.)) (> (* skoSC1 (* skoMC1 (* skoMC1 (* skoMC1 2.)))) (* skoMC1 (* skoMC1 (* skoMC1 (- 2.))))) (<= (* skoSC1 (* skoMC1 (* skoMC1 (* skoMC1 (- 2.))))) (* skoMC1 (* skoMC1 (* skoMC1 2.))))) (succedent (> (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (+ (- 2.) (* skoMC1 (- 12.)))))) (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (+ 1. (* skoMC1 (- 6.)))))) (* skoSC1 (+ (* skoMC1 (* skoMC1 skoMC1)) (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (/ (- 1.) 12.)))) (* skoSC1 (* skoMC1 (* skoMC1 (* skoMC1 (/ (- 1.) 12.))))))))))))) (* skoMC1 (* skoMC1 (* skoMC1 (+ 2. (* skoMC1 6.))))))))
-----[end problem]-----

-----[begin problem]-----
% In Mathematica format:
Timing[Resolve[Exists[{skoSC1,skoMC1}, And[skoSC1*(skoMC1*(-1+skoMC1*3)+skoSC1*(skoMC1*(-2+skoMC1*-3)+skoSC1*(skoMC1*skoMC1*-1+skoSC1*(skoMC1*(1/12)+skoSC1*skoSC1*(skoMC1*(-1/360)+skoSC1*skoSC1*(skoMC1*(1/20160)+skoSC1*skoSC1*(skoMC1*(-1/1814400)+skoSC1*skoSC1*skoMC1*(1/239500800))))))))<=skoMC1*(-2+skoMC1*-5),skoMC1>0,skoSC1>0,skoSC1*(skoMC1*(-1+skoMC1*3)+skoSC1*(skoMC1*(-2+skoMC1*-3)+skoSC1*(skoMC1*((1/6)+skoMC1*-1)+skoSC1*skoMC1*(1/4))))>skoMC1*(-2+skoMC1*-5),skoSC1*(skoMC1*(-1+skoMC1*3)+skoSC1*(skoMC1*(-2+skoMC1*-3)+skoSC1*(skoMC1*skoMC1*-1+skoSC1*skoMC1*(1/12))))>skoMC1*(-2+skoMC1*-5),skoSC1*(skoMC1*(1+skoMC1*-3)+skoSC1*(skoMC1*(2+skoMC1*3)+skoSC1*(skoMC1*((-1/6)+skoMC1)+skoSC1*skoMC1*(-1/4))))<=skoMC1*(2+skoMC1*5),skoSC1*(skoMC1*(1+skoMC1*-3)+skoSC1*(skoMC1*(2+skoMC1*3)+skoSC1*(skoMC1*skoMC1+skoSC1*skoMC1*(-1/12))))<=skoMC1*(2+skoMC1*5),skoSC1*skoMC1*-1<=skoMC1,skoSC1*skoMC1>skoMC1*-1,0<=skoMC1,skoMC1>0,0<=skoSC1,2<=skoMC1,skoSC1<=(5/4),skoSC1*skoMC1*skoMC1*skoMC1*2>skoMC1*skoMC1*skoMC1*-2,skoSC1*skoMC1*skoMC1*skoMC1*-2<=skoMC1*skoMC1*skoMC1*2,skoSC1*(skoMC1*skoMC1*skoMC1*(-2+skoMC1*-12)+skoSC1*(skoMC1*skoMC1*skoMC1*(1+skoMC1*-6)+skoSC1*(skoMC1*skoMC1*skoMC1+skoSC1*(skoMC1*skoMC1*skoMC1*(-1/12)+skoSC1*skoMC1*skoMC1*skoMC1*(-1/12)))))<=skoMC1*skoMC1*skoMC1*(2+skoMC1*6)]], Reals]]

% In QepcadB format:
(E skoSC1) (E skoMC1) [[(skoSC1 ((skoMC1 (-1+(skoMC1 (3))))+(skoSC1 ((skoMC1 (-2+(skoMC1 (-3))))+(skoSC1 ((skoMC1 skoMC1 (-1))+(skoSC1 ((skoMC1 (1/12))+(skoSC1 skoSC1 ((skoMC1 (-1/360))+(skoSC1 skoSC1 ((skoMC1 (1/20160))+(skoSC1 skoSC1 ((skoMC1 (-1/1814400))+(skoSC1 skoSC1 skoMC1 (1/239500800))))))))))))))))<=(skoMC1 (-2+(skoMC1 (-5))))]/\[[0<skoMC1]/\[[0<skoSC1]/\[[(skoMC1 (-2+(skoMC1 (-5))))<(skoSC1 ((skoMC1 (-1+(skoMC1 (3))))+(skoSC1 ((skoMC1 (-2+(skoMC1 (-3))))+(skoSC1 ((skoMC1 (1/6+(skoMC1 (-1))))+(skoSC1 skoMC1 (1/4))))))))]/\[[(skoMC1 (-2+(skoMC1 (-5))))<(skoSC1 ((skoMC1 (-1+(skoMC1 (3))))+(skoSC1 ((skoMC1 (-2+(skoMC1 (-3))))+(skoSC1 ((skoMC1 skoMC1 (-1))+(skoSC1 skoMC1 (1/12))))))))]/\[[(skoSC1 ((skoMC1 (1+(skoMC1 (-3))))+(skoSC1 ((skoMC1 (2+(skoMC1 (3))))+(skoSC1 ((skoMC1 (-1/6+skoMC1))+(skoSC1 skoMC1 (-1/4))))))))<=(skoMC1 (2+(skoMC1 (5))))]/\[[(skoSC1 ((skoMC1 (1+(skoMC1 (-3))))+(skoSC1 ((skoMC1 (2+(skoMC1 (3))))+(skoSC1 ((skoMC1 skoMC1)+(skoSC1 skoMC1 (-1/12))))))))<=(skoMC1 (2+(skoMC1 (5))))]/\[[(skoSC1 skoMC1 (-1))<=skoMC1]/\[[(skoMC1 (-1))<(skoSC1 skoMC1)]/\[[0<=skoMC1]/\[[0<skoMC1]/\[[0<=skoSC1]/\[[2<=skoMC1]/\[[skoSC1<=5/4]/\[[(skoMC1 skoMC1 skoMC1 (-2))<(skoSC1 skoMC1 skoMC1 skoMC1 (2))]/\[[(skoSC1 skoMC1 skoMC1 skoMC1 (-2))<=(skoMC1 skoMC1 skoMC1 (2))]/\[(skoSC1 ((skoMC1 skoMC1 skoMC1 (-2+(skoMC1 (-12))))+(skoSC1 ((skoMC1 skoMC1 skoMC1 (1+(skoMC1 (-6))))+(skoSC1 ((skoMC1 skoMC1 skoMC1)+(skoSC1 ((skoMC1 skoMC1 skoMC1 (-1/12))+(skoSC1 skoMC1 skoMC1 skoMC1 (-1/12))))))))))<=(skoMC1 skoMC1 skoMC1 (2+(skoMC1 (6))))]]]]]]]]]]]]]]]]].

% In SMTLib2 format:
(declare-fun skoSC1 () Real) (declare-fun skoMC1 () Real) (assert (and (<= (* skoSC1 (+ (* skoMC1 (+ (- 1.) (* skoMC1 3.))) (* skoSC1 (+ (* skoMC1 (+ (- 2.) (* skoMC1 (- 3.)))) (* skoSC1 (+ (* skoMC1 (* skoMC1 (- 1.))) (* skoSC1 (+ (* skoMC1 (/ 1. 12.)) (* skoSC1 (* skoSC1 (+ (* skoMC1 (/ (- 1.) 360.)) (* skoSC1 (* skoSC1 (+ (* skoMC1 (/ 1. 20160.)) (* skoSC1 (* skoSC1 (+ (* skoMC1 (/ (- 1.) 1814400.)) (* skoSC1 (* skoSC1 (* skoMC1 (/ 1. 239500800.))))))))))))))))))))) (* skoMC1 (+ (- 2.) (* skoMC1 (- 5.))))) (and (> skoMC1 0.) (and (> skoSC1 0.) (and (> (* skoSC1 (+ (* skoMC1 (+ (- 1.) (* skoMC1 3.))) (* skoSC1 (+ (* skoMC1 (+ (- 2.) (* skoMC1 (- 3.)))) (* skoSC1 (+ (* skoMC1 (+ (/ 1. 6.) (* skoMC1 (- 1.)))) (* skoSC1 (* skoMC1 (/ 1. 4.))))))))) (* skoMC1 (+ (- 2.) (* skoMC1 (- 5.))))) (and (> (* skoSC1 (+ (* skoMC1 (+ (- 1.) (* skoMC1 3.))) (* skoSC1 (+ (* skoMC1 (+ (- 2.) (* skoMC1 (- 3.)))) (* skoSC1 (+ (* skoMC1 (* skoMC1 (- 1.))) (* skoSC1 (* skoMC1 (/ 1. 12.))))))))) (* skoMC1 (+ (- 2.) (* skoMC1 (- 5.))))) (and (<= (* skoSC1 (+ (* skoMC1 (+ 1. (* skoMC1 (- 3.)))) (* skoSC1 (+ (* skoMC1 (+ 2. (* skoMC1 3.))) (* skoSC1 (+ (* skoMC1 (+ (/ (- 1.) 6.) skoMC1)) (* skoSC1 (* skoMC1 (/ (- 1.) 4.))))))))) (* skoMC1 (+ 2. (* skoMC1 5.)))) (and (<= (* skoSC1 (+ (* skoMC1 (+ 1. (* skoMC1 (- 3.)))) (* skoSC1 (+ (* skoMC1 (+ 2. (* skoMC1 3.))) (* skoSC1 (+ (* skoMC1 skoMC1) (* skoSC1 (* skoMC1 (/ (- 1.) 12.))))))))) (* skoMC1 (+ 2. (* skoMC1 5.)))) (and (<= (* skoSC1 (* skoMC1 (- 1.))) skoMC1) (and (> (* skoSC1 skoMC1) (* skoMC1 (- 1.))) (and (<= 0. skoMC1) (and (> skoMC1 0.) (and (<= 0. skoSC1) (and (<= 2. skoMC1) (and (<= skoSC1 (/ 5. 4.)) (and (> (* skoSC1 (* skoMC1 (* skoMC1 (* skoMC1 2.)))) (* skoMC1 (* skoMC1 (* skoMC1 (- 2.))))) (and (<= (* skoSC1 (* skoMC1 (* skoMC1 (* skoMC1 (- 2.))))) (* skoMC1 (* skoMC1 (* skoMC1 2.)))) (<= (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (+ (- 2.) (* skoMC1 (- 12.)))))) (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (+ 1. (* skoMC1 (- 6.)))))) (* skoSC1 (+ (* skoMC1 (* skoMC1 skoMC1)) (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (/ (- 1.) 12.)))) (* skoSC1 (* skoMC1 (* skoMC1 (* skoMC1 (/ (- 1.) 12.))))))))))))) (* skoMC1 (* skoMC1 (* skoMC1 (+ 2. (* skoMC1 6.)))))))))))))))))))))))

% In GRF format:
(sequent " MetiTarski formula " (antecedent (<= (* skoSC1 (+ (* skoMC1 (+ (- 1.) (* skoMC1 3.))) (* skoSC1 (+ (* skoMC1 (+ (- 2.) (* skoMC1 (- 3.)))) (* skoSC1 (+ (* skoMC1 (* skoMC1 (- 1.))) (* skoSC1 (+ (* skoMC1 (/ 1. 12.)) (* skoSC1 (* skoSC1 (+ (* skoMC1 (/ (- 1.) 360.)) (* skoSC1 (* skoSC1 (+ (* skoMC1 (/ 1. 20160.)) (* skoSC1 (* skoSC1 (+ (* skoMC1 (/ (- 1.) 1814400.)) (* skoSC1 (* skoSC1 (* skoMC1 (/ 1. 239500800.))))))))))))))))))))) (* skoMC1 (+ (- 2.) (* skoMC1 (- 5.))))) (> skoMC1 0.) (> skoSC1 0.) (> (* skoSC1 (+ (* skoMC1 (+ (- 1.) (* skoMC1 3.))) (* skoSC1 (+ (* skoMC1 (+ (- 2.) (* skoMC1 (- 3.)))) (* skoSC1 (+ (* skoMC1 (+ (/ 1. 6.) (* skoMC1 (- 1.)))) (* skoSC1 (* skoMC1 (/ 1. 4.))))))))) (* skoMC1 (+ (- 2.) (* skoMC1 (- 5.))))) (> (* skoSC1 (+ (* skoMC1 (+ (- 1.) (* skoMC1 3.))) (* skoSC1 (+ (* skoMC1 (+ (- 2.) (* skoMC1 (- 3.)))) (* skoSC1 (+ (* skoMC1 (* skoMC1 (- 1.))) (* skoSC1 (* skoMC1 (/ 1. 12.))))))))) (* skoMC1 (+ (- 2.) (* skoMC1 (- 5.))))) (<= (* skoSC1 (+ (* skoMC1 (+ 1. (* skoMC1 (- 3.)))) (* skoSC1 (+ (* skoMC1 (+ 2. (* skoMC1 3.))) (* skoSC1 (+ (* skoMC1 (+ (/ (- 1.) 6.) skoMC1)) (* skoSC1 (* skoMC1 (/ (- 1.) 4.))))))))) (* skoMC1 (+ 2. (* skoMC1 5.)))) (<= (* skoSC1 (+ (* skoMC1 (+ 1. (* skoMC1 (- 3.)))) (* skoSC1 (+ (* skoMC1 (+ 2. (* skoMC1 3.))) (* skoSC1 (+ (* skoMC1 skoMC1) (* skoSC1 (* skoMC1 (/ (- 1.) 12.))))))))) (* skoMC1 (+ 2. (* skoMC1 5.)))) (<= (* skoSC1 (* skoMC1 (- 1.))) skoMC1) (> (* skoSC1 skoMC1) (* skoMC1 (- 1.))) (<= 0. skoMC1) (> skoMC1 0.) (<= 0. skoSC1) (<= 2. skoMC1) (<= skoSC1 (/ 5. 4.)) (> (* skoSC1 (* skoMC1 (* skoMC1 (* skoMC1 2.)))) (* skoMC1 (* skoMC1 (* skoMC1 (- 2.))))) (<= (* skoSC1 (* skoMC1 (* skoMC1 (* skoMC1 (- 2.))))) (* skoMC1 (* skoMC1 (* skoMC1 2.))))) (succedent (> (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (+ (- 2.) (* skoMC1 (- 12.)))))) (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (+ 1. (* skoMC1 (- 6.)))))) (* skoSC1 (+ (* skoMC1 (* skoMC1 skoMC1)) (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (/ (- 1.) 12.)))) (* skoSC1 (* skoMC1 (* skoMC1 (* skoMC1 (/ (- 1.) 12.))))))))))))) (* skoMC1 (* skoMC1 (* skoMC1 (+ 2. (* skoMC1 6.))))))))
-----[end problem]-----

-----[begin problem]-----
% In Mathematica format:
Timing[Resolve[Exists[{skoSC1,skoMC1}, And[skoSC1*(skoMC1*(-1+skoMC1*3)+skoSC1*(skoMC1*(-2+skoMC1*-3)+skoSC1*(skoMC1*skoMC1*-1+skoSC1*(skoMC1*(1/12)+skoSC1*skoSC1*(skoMC1*(-1/360)+skoSC1*skoSC1*(skoMC1*(1/20160)+skoSC1*skoSC1*(skoMC1*(-1/1814400)+skoSC1*skoSC1*skoMC1*(1/239500800))))))))<=skoMC1*(-2+skoMC1*-5),skoMC1<=0,skoSC1*(skoMC1*(-1+skoMC1*3)+skoSC1*(skoMC1*(-2+skoMC1*-3)+skoSC1*(skoMC1*((1/6)+skoMC1*-1)+skoSC1*skoMC1*(1/4))))>skoMC1*(-2+skoMC1*-5),skoSC1*(skoMC1*(-1+skoMC1*3)+skoSC1*(skoMC1*(-2+skoMC1*-3)+skoSC1*(skoMC1*skoMC1*-1+skoSC1*skoMC1*(1/12))))>skoMC1*(-2+skoMC1*-5),skoSC1*(skoMC1*(1+skoMC1*-3)+skoSC1*(skoMC1*(2+skoMC1*3)+skoSC1*(skoMC1*((-1/6)+skoMC1)+skoSC1*skoMC1*(-1/4))))<=skoMC1*(2+skoMC1*5),skoSC1*(skoMC1*(1+skoMC1*-3)+skoSC1*(skoMC1*(2+skoMC1*3)+skoSC1*(skoMC1*skoMC1+skoSC1*skoMC1*(-1/12))))<=skoMC1*(2+skoMC1*5),skoSC1*skoMC1*-1<=skoMC1,skoSC1*skoMC1>skoMC1*-1,0<=skoMC1,skoMC1>0,0<=skoSC1,2<=skoMC1,skoSC1<=(5/4),skoSC1*skoMC1*skoMC1*skoMC1*2>skoMC1*skoMC1*skoMC1*-2,skoSC1*skoMC1*skoMC1*skoMC1*-2<=skoMC1*skoMC1*skoMC1*2,skoSC1*(skoMC1*skoMC1*skoMC1*(-2+skoMC1*-12)+skoSC1*(skoMC1*skoMC1*skoMC1*(1+skoMC1*-6)+skoSC1*(skoMC1*skoMC1*skoMC1+skoSC1*(skoMC1*skoMC1*skoMC1*(-1/12)+skoSC1*skoMC1*skoMC1*skoMC1*(-1/12)))))<=skoMC1*skoMC1*skoMC1*(2+skoMC1*6)]], Reals]]

% In QepcadB format:
(E skoSC1) (E skoMC1) [[(skoSC1 ((skoMC1 (-1+(skoMC1 (3))))+(skoSC1 ((skoMC1 (-2+(skoMC1 (-3))))+(skoSC1 ((skoMC1 skoMC1 (-1))+(skoSC1 ((skoMC1 (1/12))+(skoSC1 skoSC1 ((skoMC1 (-1/360))+(skoSC1 skoSC1 ((skoMC1 (1/20160))+(skoSC1 skoSC1 ((skoMC1 (-1/1814400))+(skoSC1 skoSC1 skoMC1 (1/239500800))))))))))))))))<=(skoMC1 (-2+(skoMC1 (-5))))]/\[[skoMC1<=0]/\[[(skoMC1 (-2+(skoMC1 (-5))))<(skoSC1 ((skoMC1 (-1+(skoMC1 (3))))+(skoSC1 ((skoMC1 (-2+(skoMC1 (-3))))+(skoSC1 ((skoMC1 (1/6+(skoMC1 (-1))))+(skoSC1 skoMC1 (1/4))))))))]/\[[(skoMC1 (-2+(skoMC1 (-5))))<(skoSC1 ((skoMC1 (-1+(skoMC1 (3))))+(skoSC1 ((skoMC1 (-2+(skoMC1 (-3))))+(skoSC1 ((skoMC1 skoMC1 (-1))+(skoSC1 skoMC1 (1/12))))))))]/\[[(skoSC1 ((skoMC1 (1+(skoMC1 (-3))))+(skoSC1 ((skoMC1 (2+(skoMC1 (3))))+(skoSC1 ((skoMC1 (-1/6+skoMC1))+(skoSC1 skoMC1 (-1/4))))))))<=(skoMC1 (2+(skoMC1 (5))))]/\[[(skoSC1 ((skoMC1 (1+(skoMC1 (-3))))+(skoSC1 ((skoMC1 (2+(skoMC1 (3))))+(skoSC1 ((skoMC1 skoMC1)+(skoSC1 skoMC1 (-1/12))))))))<=(skoMC1 (2+(skoMC1 (5))))]/\[[(skoSC1 skoMC1 (-1))<=skoMC1]/\[[(skoMC1 (-1))<(skoSC1 skoMC1)]/\[[0<=skoMC1]/\[[0<skoMC1]/\[[0<=skoSC1]/\[[2<=skoMC1]/\[[skoSC1<=5/4]/\[[(skoMC1 skoMC1 skoMC1 (-2))<(skoSC1 skoMC1 skoMC1 skoMC1 (2))]/\[[(skoSC1 skoMC1 skoMC1 skoMC1 (-2))<=(skoMC1 skoMC1 skoMC1 (2))]/\[(skoSC1 ((skoMC1 skoMC1 skoMC1 (-2+(skoMC1 (-12))))+(skoSC1 ((skoMC1 skoMC1 skoMC1 (1+(skoMC1 (-6))))+(skoSC1 ((skoMC1 skoMC1 skoMC1)+(skoSC1 ((skoMC1 skoMC1 skoMC1 (-1/12))+(skoSC1 skoMC1 skoMC1 skoMC1 (-1/12))))))))))<=(skoMC1 skoMC1 skoMC1 (2+(skoMC1 (6))))]]]]]]]]]]]]]]]].

% In SMTLib2 format:
(declare-fun skoSC1 () Real) (declare-fun skoMC1 () Real) (assert (and (<= (* skoSC1 (+ (* skoMC1 (+ (- 1.) (* skoMC1 3.))) (* skoSC1 (+ (* skoMC1 (+ (- 2.) (* skoMC1 (- 3.)))) (* skoSC1 (+ (* skoMC1 (* skoMC1 (- 1.))) (* skoSC1 (+ (* skoMC1 (/ 1. 12.)) (* skoSC1 (* skoSC1 (+ (* skoMC1 (/ (- 1.) 360.)) (* skoSC1 (* skoSC1 (+ (* skoMC1 (/ 1. 20160.)) (* skoSC1 (* skoSC1 (+ (* skoMC1 (/ (- 1.) 1814400.)) (* skoSC1 (* skoSC1 (* skoMC1 (/ 1. 239500800.))))))))))))))))))))) (* skoMC1 (+ (- 2.) (* skoMC1 (- 5.))))) (and (<= skoMC1 0.) (and (> (* skoSC1 (+ (* skoMC1 (+ (- 1.) (* skoMC1 3.))) (* skoSC1 (+ (* skoMC1 (+ (- 2.) (* skoMC1 (- 3.)))) (* skoSC1 (+ (* skoMC1 (+ (/ 1. 6.) (* skoMC1 (- 1.)))) (* skoSC1 (* skoMC1 (/ 1. 4.))))))))) (* skoMC1 (+ (- 2.) (* skoMC1 (- 5.))))) (and (> (* skoSC1 (+ (* skoMC1 (+ (- 1.) (* skoMC1 3.))) (* skoSC1 (+ (* skoMC1 (+ (- 2.) (* skoMC1 (- 3.)))) (* skoSC1 (+ (* skoMC1 (* skoMC1 (- 1.))) (* skoSC1 (* skoMC1 (/ 1. 12.))))))))) (* skoMC1 (+ (- 2.) (* skoMC1 (- 5.))))) (and (<= (* skoSC1 (+ (* skoMC1 (+ 1. (* skoMC1 (- 3.)))) (* skoSC1 (+ (* skoMC1 (+ 2. (* skoMC1 3.))) (* skoSC1 (+ (* skoMC1 (+ (/ (- 1.) 6.) skoMC1)) (* skoSC1 (* skoMC1 (/ (- 1.) 4.))))))))) (* skoMC1 (+ 2. (* skoMC1 5.)))) (and (<= (* skoSC1 (+ (* skoMC1 (+ 1. (* skoMC1 (- 3.)))) (* skoSC1 (+ (* skoMC1 (+ 2. (* skoMC1 3.))) (* skoSC1 (+ (* skoMC1 skoMC1) (* skoSC1 (* skoMC1 (/ (- 1.) 12.))))))))) (* skoMC1 (+ 2. (* skoMC1 5.)))) (and (<= (* skoSC1 (* skoMC1 (- 1.))) skoMC1) (and (> (* skoSC1 skoMC1) (* skoMC1 (- 1.))) (and (<= 0. skoMC1) (and (> skoMC1 0.) (and (<= 0. skoSC1) (and (<= 2. skoMC1) (and (<= skoSC1 (/ 5. 4.)) (and (> (* skoSC1 (* skoMC1 (* skoMC1 (* skoMC1 2.)))) (* skoMC1 (* skoMC1 (* skoMC1 (- 2.))))) (and (<= (* skoSC1 (* skoMC1 (* skoMC1 (* skoMC1 (- 2.))))) (* skoMC1 (* skoMC1 (* skoMC1 2.)))) (<= (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (+ (- 2.) (* skoMC1 (- 12.)))))) (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (+ 1. (* skoMC1 (- 6.)))))) (* skoSC1 (+ (* skoMC1 (* skoMC1 skoMC1)) (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (/ (- 1.) 12.)))) (* skoSC1 (* skoMC1 (* skoMC1 (* skoMC1 (/ (- 1.) 12.))))))))))))) (* skoMC1 (* skoMC1 (* skoMC1 (+ 2. (* skoMC1 6.))))))))))))))))))))))

% In GRF format:
(sequent " MetiTarski formula " (antecedent (<= (* skoSC1 (+ (* skoMC1 (+ (- 1.) (* skoMC1 3.))) (* skoSC1 (+ (* skoMC1 (+ (- 2.) (* skoMC1 (- 3.)))) (* skoSC1 (+ (* skoMC1 (* skoMC1 (- 1.))) (* skoSC1 (+ (* skoMC1 (/ 1. 12.)) (* skoSC1 (* skoSC1 (+ (* skoMC1 (/ (- 1.) 360.)) (* skoSC1 (* skoSC1 (+ (* skoMC1 (/ 1. 20160.)) (* skoSC1 (* skoSC1 (+ (* skoMC1 (/ (- 1.) 1814400.)) (* skoSC1 (* skoSC1 (* skoMC1 (/ 1. 239500800.))))))))))))))))))))) (* skoMC1 (+ (- 2.) (* skoMC1 (- 5.))))) (<= skoMC1 0.) (> (* skoSC1 (+ (* skoMC1 (+ (- 1.) (* skoMC1 3.))) (* skoSC1 (+ (* skoMC1 (+ (- 2.) (* skoMC1 (- 3.)))) (* skoSC1 (+ (* skoMC1 (+ (/ 1. 6.) (* skoMC1 (- 1.)))) (* skoSC1 (* skoMC1 (/ 1. 4.))))))))) (* skoMC1 (+ (- 2.) (* skoMC1 (- 5.))))) (> (* skoSC1 (+ (* skoMC1 (+ (- 1.) (* skoMC1 3.))) (* skoSC1 (+ (* skoMC1 (+ (- 2.) (* skoMC1 (- 3.)))) (* skoSC1 (+ (* skoMC1 (* skoMC1 (- 1.))) (* skoSC1 (* skoMC1 (/ 1. 12.))))))))) (* skoMC1 (+ (- 2.) (* skoMC1 (- 5.))))) (<= (* skoSC1 (+ (* skoMC1 (+ 1. (* skoMC1 (- 3.)))) (* skoSC1 (+ (* skoMC1 (+ 2. (* skoMC1 3.))) (* skoSC1 (+ (* skoMC1 (+ (/ (- 1.) 6.) skoMC1)) (* skoSC1 (* skoMC1 (/ (- 1.) 4.))))))))) (* skoMC1 (+ 2. (* skoMC1 5.)))) (<= (* skoSC1 (+ (* skoMC1 (+ 1. (* skoMC1 (- 3.)))) (* skoSC1 (+ (* skoMC1 (+ 2. (* skoMC1 3.))) (* skoSC1 (+ (* skoMC1 skoMC1) (* skoSC1 (* skoMC1 (/ (- 1.) 12.))))))))) (* skoMC1 (+ 2. (* skoMC1 5.)))) (<= (* skoSC1 (* skoMC1 (- 1.))) skoMC1) (> (* skoSC1 skoMC1) (* skoMC1 (- 1.))) (<= 0. skoMC1) (> skoMC1 0.) (<= 0. skoSC1) (<= 2. skoMC1) (<= skoSC1 (/ 5. 4.)) (> (* skoSC1 (* skoMC1 (* skoMC1 (* skoMC1 2.)))) (* skoMC1 (* skoMC1 (* skoMC1 (- 2.))))) (<= (* skoSC1 (* skoMC1 (* skoMC1 (* skoMC1 (- 2.))))) (* skoMC1 (* skoMC1 (* skoMC1 2.))))) (succedent (> (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (+ (- 2.) (* skoMC1 (- 12.)))))) (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (+ 1. (* skoMC1 (- 6.)))))) (* skoSC1 (+ (* skoMC1 (* skoMC1 skoMC1)) (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (/ (- 1.) 12.)))) (* skoSC1 (* skoMC1 (* skoMC1 (* skoMC1 (/ (- 1.) 12.))))))))))))) (* skoMC1 (* skoMC1 (* skoMC1 (+ 2. (* skoMC1 6.))))))))
-----[end problem]-----

-----[begin problem]-----
% In Mathematica format:
Timing[Resolve[Exists[{skoSC1,skoMC1}, And[0<=skoMC1,skoSC1*(skoMC1*(-1+skoMC1*3)+skoSC1*(skoMC1*(-2+skoMC1*-3)+skoSC1*(skoMC1*((1/6)+skoMC1*-1)+skoSC1*skoMC1*(1/4))))>skoMC1*(-2+skoMC1*-5),skoSC1*(skoMC1*(-1+skoMC1*3)+skoSC1*(skoMC1*(-2+skoMC1*-3)+skoSC1*(skoMC1*skoMC1*-1+skoSC1*skoMC1*(1/12))))>skoMC1*(-2+skoMC1*-5),skoSC1*(skoMC1*(1+skoMC1*-3)+skoSC1*(skoMC1*(2+skoMC1*3)+skoSC1*(skoMC1*((-1/6)+skoMC1)+skoSC1*skoMC1*(-1/4))))<=skoMC1*(2+skoMC1*5),skoSC1*(skoMC1*(1+skoMC1*-3)+skoSC1*(skoMC1*(2+skoMC1*3)+skoSC1*(skoMC1*skoMC1+skoSC1*skoMC1*(-1/12))))<=skoMC1*(2+skoMC1*5),skoSC1*skoMC1*-1<=skoMC1,skoSC1*skoMC1>skoMC1*-1,0<=skoMC1,skoMC1>0,0<=skoSC1,2<=skoMC1,skoSC1<=(5/4),skoSC1*skoMC1*skoMC1*skoMC1*2>skoMC1*skoMC1*skoMC1*-2,skoSC1*skoMC1*skoMC1*skoMC1*-2<=skoMC1*skoMC1*skoMC1*2,skoSC1*(skoMC1*skoMC1*skoMC1*(-2+skoMC1*-12)+skoSC1*(skoMC1*skoMC1*skoMC1*(1+skoMC1*-6)+skoSC1*(skoMC1*skoMC1*skoMC1+skoSC1*(skoMC1*skoMC1*skoMC1*(-1/12)+skoSC1*skoMC1*skoMC1*skoMC1*(-1/12)))))<=skoMC1*skoMC1*skoMC1*(2+skoMC1*6)]], Reals]]

% In QepcadB format:
(E skoSC1) (E skoMC1) [[0<=skoMC1]/\[[(skoMC1 (-2+(skoMC1 (-5))))<(skoSC1 ((skoMC1 (-1+(skoMC1 (3))))+(skoSC1 ((skoMC1 (-2+(skoMC1 (-3))))+(skoSC1 ((skoMC1 (1/6+(skoMC1 (-1))))+(skoSC1 skoMC1 (1/4))))))))]/\[[(skoMC1 (-2+(skoMC1 (-5))))<(skoSC1 ((skoMC1 (-1+(skoMC1 (3))))+(skoSC1 ((skoMC1 (-2+(skoMC1 (-3))))+(skoSC1 ((skoMC1 skoMC1 (-1))+(skoSC1 skoMC1 (1/12))))))))]/\[[(skoSC1 ((skoMC1 (1+(skoMC1 (-3))))+(skoSC1 ((skoMC1 (2+(skoMC1 (3))))+(skoSC1 ((skoMC1 (-1/6+skoMC1))+(skoSC1 skoMC1 (-1/4))))))))<=(skoMC1 (2+(skoMC1 (5))))]/\[[(skoSC1 ((skoMC1 (1+(skoMC1 (-3))))+(skoSC1 ((skoMC1 (2+(skoMC1 (3))))+(skoSC1 ((skoMC1 skoMC1)+(skoSC1 skoMC1 (-1/12))))))))<=(skoMC1 (2+(skoMC1 (5))))]/\[[(skoSC1 skoMC1 (-1))<=skoMC1]/\[[(skoMC1 (-1))<(skoSC1 skoMC1)]/\[[0<=skoMC1]/\[[0<skoMC1]/\[[0<=skoSC1]/\[[2<=skoMC1]/\[[skoSC1<=5/4]/\[[(skoMC1 skoMC1 skoMC1 (-2))<(skoSC1 skoMC1 skoMC1 skoMC1 (2))]/\[[(skoSC1 skoMC1 skoMC1 skoMC1 (-2))<=(skoMC1 skoMC1 skoMC1 (2))]/\[(skoSC1 ((skoMC1 skoMC1 skoMC1 (-2+(skoMC1 (-12))))+(skoSC1 ((skoMC1 skoMC1 skoMC1 (1+(skoMC1 (-6))))+(skoSC1 ((skoMC1 skoMC1 skoMC1)+(skoSC1 ((skoMC1 skoMC1 skoMC1 (-1/12))+(skoSC1 skoMC1 skoMC1 skoMC1 (-1/12))))))))))<=(skoMC1 skoMC1 skoMC1 (2+(skoMC1 (6))))]]]]]]]]]]]]]]].

% In SMTLib2 format:
(declare-fun skoSC1 () Real) (declare-fun skoMC1 () Real) (assert (and (<= 0. skoMC1) (and (> (* skoSC1 (+ (* skoMC1 (+ (- 1.) (* skoMC1 3.))) (* skoSC1 (+ (* skoMC1 (+ (- 2.) (* skoMC1 (- 3.)))) (* skoSC1 (+ (* skoMC1 (+ (/ 1. 6.) (* skoMC1 (- 1.)))) (* skoSC1 (* skoMC1 (/ 1. 4.))))))))) (* skoMC1 (+ (- 2.) (* skoMC1 (- 5.))))) (and (> (* skoSC1 (+ (* skoMC1 (+ (- 1.) (* skoMC1 3.))) (* skoSC1 (+ (* skoMC1 (+ (- 2.) (* skoMC1 (- 3.)))) (* skoSC1 (+ (* skoMC1 (* skoMC1 (- 1.))) (* skoSC1 (* skoMC1 (/ 1. 12.))))))))) (* skoMC1 (+ (- 2.) (* skoMC1 (- 5.))))) (and (<= (* skoSC1 (+ (* skoMC1 (+ 1. (* skoMC1 (- 3.)))) (* skoSC1 (+ (* skoMC1 (+ 2. (* skoMC1 3.))) (* skoSC1 (+ (* skoMC1 (+ (/ (- 1.) 6.) skoMC1)) (* skoSC1 (* skoMC1 (/ (- 1.) 4.))))))))) (* skoMC1 (+ 2. (* skoMC1 5.)))) (and (<= (* skoSC1 (+ (* skoMC1 (+ 1. (* skoMC1 (- 3.)))) (* skoSC1 (+ (* skoMC1 (+ 2. (* skoMC1 3.))) (* skoSC1 (+ (* skoMC1 skoMC1) (* skoSC1 (* skoMC1 (/ (- 1.) 12.))))))))) (* skoMC1 (+ 2. (* skoMC1 5.)))) (and (<= (* skoSC1 (* skoMC1 (- 1.))) skoMC1) (and (> (* skoSC1 skoMC1) (* skoMC1 (- 1.))) (and (<= 0. skoMC1) (and (> skoMC1 0.) (and (<= 0. skoSC1) (and (<= 2. skoMC1) (and (<= skoSC1 (/ 5. 4.)) (and (> (* skoSC1 (* skoMC1 (* skoMC1 (* skoMC1 2.)))) (* skoMC1 (* skoMC1 (* skoMC1 (- 2.))))) (and (<= (* skoSC1 (* skoMC1 (* skoMC1 (* skoMC1 (- 2.))))) (* skoMC1 (* skoMC1 (* skoMC1 2.)))) (<= (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (+ (- 2.) (* skoMC1 (- 12.)))))) (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (+ 1. (* skoMC1 (- 6.)))))) (* skoSC1 (+ (* skoMC1 (* skoMC1 skoMC1)) (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (/ (- 1.) 12.)))) (* skoSC1 (* skoMC1 (* skoMC1 (* skoMC1 (/ (- 1.) 12.))))))))))))) (* skoMC1 (* skoMC1 (* skoMC1 (+ 2. (* skoMC1 6.)))))))))))))))))))))

% In GRF format:
(sequent " MetiTarski formula " (antecedent (<= 0. skoMC1) (> (* skoSC1 (+ (* skoMC1 (+ (- 1.) (* skoMC1 3.))) (* skoSC1 (+ (* skoMC1 (+ (- 2.) (* skoMC1 (- 3.)))) (* skoSC1 (+ (* skoMC1 (+ (/ 1. 6.) (* skoMC1 (- 1.)))) (* skoSC1 (* skoMC1 (/ 1. 4.))))))))) (* skoMC1 (+ (- 2.) (* skoMC1 (- 5.))))) (> (* skoSC1 (+ (* skoMC1 (+ (- 1.) (* skoMC1 3.))) (* skoSC1 (+ (* skoMC1 (+ (- 2.) (* skoMC1 (- 3.)))) (* skoSC1 (+ (* skoMC1 (* skoMC1 (- 1.))) (* skoSC1 (* skoMC1 (/ 1. 12.))))))))) (* skoMC1 (+ (- 2.) (* skoMC1 (- 5.))))) (<= (* skoSC1 (+ (* skoMC1 (+ 1. (* skoMC1 (- 3.)))) (* skoSC1 (+ (* skoMC1 (+ 2. (* skoMC1 3.))) (* skoSC1 (+ (* skoMC1 (+ (/ (- 1.) 6.) skoMC1)) (* skoSC1 (* skoMC1 (/ (- 1.) 4.))))))))) (* skoMC1 (+ 2. (* skoMC1 5.)))) (<= (* skoSC1 (+ (* skoMC1 (+ 1. (* skoMC1 (- 3.)))) (* skoSC1 (+ (* skoMC1 (+ 2. (* skoMC1 3.))) (* skoSC1 (+ (* skoMC1 skoMC1) (* skoSC1 (* skoMC1 (/ (- 1.) 12.))))))))) (* skoMC1 (+ 2. (* skoMC1 5.)))) (<= (* skoSC1 (* skoMC1 (- 1.))) skoMC1) (> (* skoSC1 skoMC1) (* skoMC1 (- 1.))) (<= 0. skoMC1) (> skoMC1 0.) (<= 0. skoSC1) (<= 2. skoMC1) (<= skoSC1 (/ 5. 4.)) (> (* skoSC1 (* skoMC1 (* skoMC1 (* skoMC1 2.)))) (* skoMC1 (* skoMC1 (* skoMC1 (- 2.))))) (<= (* skoSC1 (* skoMC1 (* skoMC1 (* skoMC1 (- 2.))))) (* skoMC1 (* skoMC1 (* skoMC1 2.))))) (succedent (> (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (+ (- 2.) (* skoMC1 (- 12.)))))) (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (+ 1. (* skoMC1 (- 6.)))))) (* skoSC1 (+ (* skoMC1 (* skoMC1 skoMC1)) (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (/ (- 1.) 12.)))) (* skoSC1 (* skoMC1 (* skoMC1 (* skoMC1 (/ (- 1.) 12.))))))))))))) (* skoMC1 (* skoMC1 (* skoMC1 (+ 2. (* skoMC1 6.))))))))
-----[end problem]-----

-----[begin problem]-----
% In Mathematica format:
Timing[Resolve[Exists[{skoSC1,skoMC1}, And[skoSC1*(skoMC1*(-1+skoMC1*3)+skoSC1*(skoMC1*(-2+skoMC1*-3)+skoSC1*(skoMC1*skoMC1*-1+skoSC1*(skoMC1*(1/12)+skoSC1*skoSC1*(skoMC1*(-1/360)+skoSC1*skoSC1*(skoMC1*(1/20160)+skoSC1*skoSC1*(skoMC1*(-1/1814400)+skoSC1*skoSC1*skoMC1*(1/239500800))))))))>skoMC1*(-2+skoMC1*-5),skoSC1*(skoMC1*(-1+skoMC1*3)+skoSC1*(skoMC1*(-2+skoMC1*-3)+skoSC1*(skoMC1*((1/6)+skoMC1*-1)+skoSC1*skoMC1*(1/4))))>skoMC1*(-2+skoMC1*-5),skoSC1*(skoMC1*(-1+skoMC1*3)+skoSC1*(skoMC1*(-2+skoMC1*-3)+skoSC1*(skoMC1*skoMC1*-1+skoSC1*skoMC1*(1/12))))>skoMC1*(-2+skoMC1*-5),skoSC1*(skoMC1*(1+skoMC1*-3)+skoSC1*(skoMC1*(2+skoMC1*3)+skoSC1*(skoMC1*((-1/6)+skoMC1)+skoSC1*skoMC1*(-1/4))))<=skoMC1*(2+skoMC1*5),skoSC1*(skoMC1*(1+skoMC1*-3)+skoSC1*(skoMC1*(2+skoMC1*3)+skoSC1*(skoMC1*skoMC1+skoSC1*skoMC1*(-1/12))))<=skoMC1*(2+skoMC1*5),skoSC1*skoMC1*-1<=skoMC1,skoSC1*skoMC1>skoMC1*-1,0<=skoMC1,skoMC1>0,0<=skoSC1,2<=skoMC1,skoSC1<=(5/4),skoSC1*skoMC1*skoMC1*skoMC1*2>skoMC1*skoMC1*skoMC1*-2,skoSC1*skoMC1*skoMC1*skoMC1*-2<=skoMC1*skoMC1*skoMC1*2,skoSC1*(skoMC1*skoMC1*skoMC1*(-2+skoMC1*-12)+skoSC1*(skoMC1*skoMC1*skoMC1*(1+skoMC1*-6)+skoSC1*(skoMC1*skoMC1*skoMC1+skoSC1*(skoMC1*skoMC1*skoMC1*(-1/12)+skoSC1*skoMC1*skoMC1*skoMC1*(-1/12)))))<=skoMC1*skoMC1*skoMC1*(2+skoMC1*6)]], Reals]]

% In QepcadB format:
(E skoSC1) (E skoMC1) [[(skoMC1 (-2+(skoMC1 (-5))))<(skoSC1 ((skoMC1 (-1+(skoMC1 (3))))+(skoSC1 ((skoMC1 (-2+(skoMC1 (-3))))+(skoSC1 ((skoMC1 skoMC1 (-1))+(skoSC1 ((skoMC1 (1/12))+(skoSC1 skoSC1 ((skoMC1 (-1/360))+(skoSC1 skoSC1 ((skoMC1 (1/20160))+(skoSC1 skoSC1 ((skoMC1 (-1/1814400))+(skoSC1 skoSC1 skoMC1 (1/239500800))))))))))))))))]/\[[(skoMC1 (-2+(skoMC1 (-5))))<(skoSC1 ((skoMC1 (-1+(skoMC1 (3))))+(skoSC1 ((skoMC1 (-2+(skoMC1 (-3))))+(skoSC1 ((skoMC1 (1/6+(skoMC1 (-1))))+(skoSC1 skoMC1 (1/4))))))))]/\[[(skoMC1 (-2+(skoMC1 (-5))))<(skoSC1 ((skoMC1 (-1+(skoMC1 (3))))+(skoSC1 ((skoMC1 (-2+(skoMC1 (-3))))+(skoSC1 ((skoMC1 skoMC1 (-1))+(skoSC1 skoMC1 (1/12))))))))]/\[[(skoSC1 ((skoMC1 (1+(skoMC1 (-3))))+(skoSC1 ((skoMC1 (2+(skoMC1 (3))))+(skoSC1 ((skoMC1 (-1/6+skoMC1))+(skoSC1 skoMC1 (-1/4))))))))<=(skoMC1 (2+(skoMC1 (5))))]/\[[(skoSC1 ((skoMC1 (1+(skoMC1 (-3))))+(skoSC1 ((skoMC1 (2+(skoMC1 (3))))+(skoSC1 ((skoMC1 skoMC1)+(skoSC1 skoMC1 (-1/12))))))))<=(skoMC1 (2+(skoMC1 (5))))]/\[[(skoSC1 skoMC1 (-1))<=skoMC1]/\[[(skoMC1 (-1))<(skoSC1 skoMC1)]/\[[0<=skoMC1]/\[[0<skoMC1]/\[[0<=skoSC1]/\[[2<=skoMC1]/\[[skoSC1<=5/4]/\[[(skoMC1 skoMC1 skoMC1 (-2))<(skoSC1 skoMC1 skoMC1 skoMC1 (2))]/\[[(skoSC1 skoMC1 skoMC1 skoMC1 (-2))<=(skoMC1 skoMC1 skoMC1 (2))]/\[(skoSC1 ((skoMC1 skoMC1 skoMC1 (-2+(skoMC1 (-12))))+(skoSC1 ((skoMC1 skoMC1 skoMC1 (1+(skoMC1 (-6))))+(skoSC1 ((skoMC1 skoMC1 skoMC1)+(skoSC1 ((skoMC1 skoMC1 skoMC1 (-1/12))+(skoSC1 skoMC1 skoMC1 skoMC1 (-1/12))))))))))<=(skoMC1 skoMC1 skoMC1 (2+(skoMC1 (6))))]]]]]]]]]]]]]]].

% In SMTLib2 format:
(declare-fun skoSC1 () Real) (declare-fun skoMC1 () Real) (assert (and (> (* skoSC1 (+ (* skoMC1 (+ (- 1.) (* skoMC1 3.))) (* skoSC1 (+ (* skoMC1 (+ (- 2.) (* skoMC1 (- 3.)))) (* skoSC1 (+ (* skoMC1 (* skoMC1 (- 1.))) (* skoSC1 (+ (* skoMC1 (/ 1. 12.)) (* skoSC1 (* skoSC1 (+ (* skoMC1 (/ (- 1.) 360.)) (* skoSC1 (* skoSC1 (+ (* skoMC1 (/ 1. 20160.)) (* skoSC1 (* skoSC1 (+ (* skoMC1 (/ (- 1.) 1814400.)) (* skoSC1 (* skoSC1 (* skoMC1 (/ 1. 239500800.))))))))))))))))))))) (* skoMC1 (+ (- 2.) (* skoMC1 (- 5.))))) (and (> (* skoSC1 (+ (* skoMC1 (+ (- 1.) (* skoMC1 3.))) (* skoSC1 (+ (* skoMC1 (+ (- 2.) (* skoMC1 (- 3.)))) (* skoSC1 (+ (* skoMC1 (+ (/ 1. 6.) (* skoMC1 (- 1.)))) (* skoSC1 (* skoMC1 (/ 1. 4.))))))))) (* skoMC1 (+ (- 2.) (* skoMC1 (- 5.))))) (and (> (* skoSC1 (+ (* skoMC1 (+ (- 1.) (* skoMC1 3.))) (* skoSC1 (+ (* skoMC1 (+ (- 2.) (* skoMC1 (- 3.)))) (* skoSC1 (+ (* skoMC1 (* skoMC1 (- 1.))) (* skoSC1 (* skoMC1 (/ 1. 12.))))))))) (* skoMC1 (+ (- 2.) (* skoMC1 (- 5.))))) (and (<= (* skoSC1 (+ (* skoMC1 (+ 1. (* skoMC1 (- 3.)))) (* skoSC1 (+ (* skoMC1 (+ 2. (* skoMC1 3.))) (* skoSC1 (+ (* skoMC1 (+ (/ (- 1.) 6.) skoMC1)) (* skoSC1 (* skoMC1 (/ (- 1.) 4.))))))))) (* skoMC1 (+ 2. (* skoMC1 5.)))) (and (<= (* skoSC1 (+ (* skoMC1 (+ 1. (* skoMC1 (- 3.)))) (* skoSC1 (+ (* skoMC1 (+ 2. (* skoMC1 3.))) (* skoSC1 (+ (* skoMC1 skoMC1) (* skoSC1 (* skoMC1 (/ (- 1.) 12.))))))))) (* skoMC1 (+ 2. (* skoMC1 5.)))) (and (<= (* skoSC1 (* skoMC1 (- 1.))) skoMC1) (and (> (* skoSC1 skoMC1) (* skoMC1 (- 1.))) (and (<= 0. skoMC1) (and (> skoMC1 0.) (and (<= 0. skoSC1) (and (<= 2. skoMC1) (and (<= skoSC1 (/ 5. 4.)) (and (> (* skoSC1 (* skoMC1 (* skoMC1 (* skoMC1 2.)))) (* skoMC1 (* skoMC1 (* skoMC1 (- 2.))))) (and (<= (* skoSC1 (* skoMC1 (* skoMC1 (* skoMC1 (- 2.))))) (* skoMC1 (* skoMC1 (* skoMC1 2.)))) (<= (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (+ (- 2.) (* skoMC1 (- 12.)))))) (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (+ 1. (* skoMC1 (- 6.)))))) (* skoSC1 (+ (* skoMC1 (* skoMC1 skoMC1)) (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (/ (- 1.) 12.)))) (* skoSC1 (* skoMC1 (* skoMC1 (* skoMC1 (/ (- 1.) 12.))))))))))))) (* skoMC1 (* skoMC1 (* skoMC1 (+ 2. (* skoMC1 6.)))))))))))))))))))))

% In GRF format:
(sequent " MetiTarski formula " (antecedent (> (* skoSC1 (+ (* skoMC1 (+ (- 1.) (* skoMC1 3.))) (* skoSC1 (+ (* skoMC1 (+ (- 2.) (* skoMC1 (- 3.)))) (* skoSC1 (+ (* skoMC1 (* skoMC1 (- 1.))) (* skoSC1 (+ (* skoMC1 (/ 1. 12.)) (* skoSC1 (* skoSC1 (+ (* skoMC1 (/ (- 1.) 360.)) (* skoSC1 (* skoSC1 (+ (* skoMC1 (/ 1. 20160.)) (* skoSC1 (* skoSC1 (+ (* skoMC1 (/ (- 1.) 1814400.)) (* skoSC1 (* skoSC1 (* skoMC1 (/ 1. 239500800.))))))))))))))))))))) (* skoMC1 (+ (- 2.) (* skoMC1 (- 5.))))) (> (* skoSC1 (+ (* skoMC1 (+ (- 1.) (* skoMC1 3.))) (* skoSC1 (+ (* skoMC1 (+ (- 2.) (* skoMC1 (- 3.)))) (* skoSC1 (+ (* skoMC1 (+ (/ 1. 6.) (* skoMC1 (- 1.)))) (* skoSC1 (* skoMC1 (/ 1. 4.))))))))) (* skoMC1 (+ (- 2.) (* skoMC1 (- 5.))))) (> (* skoSC1 (+ (* skoMC1 (+ (- 1.) (* skoMC1 3.))) (* skoSC1 (+ (* skoMC1 (+ (- 2.) (* skoMC1 (- 3.)))) (* skoSC1 (+ (* skoMC1 (* skoMC1 (- 1.))) (* skoSC1 (* skoMC1 (/ 1. 12.))))))))) (* skoMC1 (+ (- 2.) (* skoMC1 (- 5.))))) (<= (* skoSC1 (+ (* skoMC1 (+ 1. (* skoMC1 (- 3.)))) (* skoSC1 (+ (* skoMC1 (+ 2. (* skoMC1 3.))) (* skoSC1 (+ (* skoMC1 (+ (/ (- 1.) 6.) skoMC1)) (* skoSC1 (* skoMC1 (/ (- 1.) 4.))))))))) (* skoMC1 (+ 2. (* skoMC1 5.)))) (<= (* skoSC1 (+ (* skoMC1 (+ 1. (* skoMC1 (- 3.)))) (* skoSC1 (+ (* skoMC1 (+ 2. (* skoMC1 3.))) (* skoSC1 (+ (* skoMC1 skoMC1) (* skoSC1 (* skoMC1 (/ (- 1.) 12.))))))))) (* skoMC1 (+ 2. (* skoMC1 5.)))) (<= (* skoSC1 (* skoMC1 (- 1.))) skoMC1) (> (* skoSC1 skoMC1) (* skoMC1 (- 1.))) (<= 0. skoMC1) (> skoMC1 0.) (<= 0. skoSC1) (<= 2. skoMC1) (<= skoSC1 (/ 5. 4.)) (> (* skoSC1 (* skoMC1 (* skoMC1 (* skoMC1 2.)))) (* skoMC1 (* skoMC1 (* skoMC1 (- 2.))))) (<= (* skoSC1 (* skoMC1 (* skoMC1 (* skoMC1 (- 2.))))) (* skoMC1 (* skoMC1 (* skoMC1 2.))))) (succedent (> (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (+ (- 2.) (* skoMC1 (- 12.)))))) (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (+ 1. (* skoMC1 (- 6.)))))) (* skoSC1 (+ (* skoMC1 (* skoMC1 skoMC1)) (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (/ (- 1.) 12.)))) (* skoSC1 (* skoMC1 (* skoMC1 (* skoMC1 (/ (- 1.) 12.))))))))))))) (* skoMC1 (* skoMC1 (* skoMC1 (+ 2. (* skoMC1 6.))))))))
-----[end problem]-----

-----[begin problem]-----
% In Mathematica format:
Timing[Resolve[Exists[{skoSC1,skoMC1}, And[skoSC1*(skoMC1*(-1+skoMC1*3)+skoSC1*(skoMC1*(-2+skoMC1*-3)+skoSC1*(skoMC1*((1/6)+skoMC1*-1)+skoSC1*(skoMC1*(1/4)+skoSC1*skoSC1*(skoMC1*(-1/360)+skoSC1*skoSC1*(skoMC1*(1/20160)+skoSC1*skoSC1*(skoMC1*(-1/1814400)+skoSC1*skoSC1*skoMC1*(1/239500800))))))))>skoMC1*(-2+skoMC1*-5),skoMC1>0,skoSC1*(skoMC1*(-1+skoMC1*3)+skoSC1*(skoMC1*(-2+skoMC1*-3)+skoSC1*(skoMC1*((1/6)+skoMC1*-1)+skoSC1*skoMC1*(1/4))))>skoMC1*(-2+skoMC1*-5),skoSC1*(skoMC1*(-1+skoMC1*3)+skoSC1*(skoMC1*(-2+skoMC1*-3)+skoSC1*(skoMC1*skoMC1*-1+skoSC1*skoMC1*(1/12))))>skoMC1*(-2+skoMC1*-5),skoSC1*(skoMC1*(1+skoMC1*-3)+skoSC1*(skoMC1*(2+skoMC1*3)+skoSC1*(skoMC1*((-1/6)+skoMC1)+skoSC1*skoMC1*(-1/4))))<=skoMC1*(2+skoMC1*5),skoSC1*(skoMC1*(1+skoMC1*-3)+skoSC1*(skoMC1*(2+skoMC1*3)+skoSC1*(skoMC1*skoMC1+skoSC1*skoMC1*(-1/12))))<=skoMC1*(2+skoMC1*5),skoSC1*skoMC1*-1<=skoMC1,skoSC1*skoMC1>skoMC1*-1,0<=skoMC1,skoMC1>0,0<=skoSC1,2<=skoMC1,skoSC1<=(5/4),skoSC1*skoMC1*skoMC1*skoMC1*2>skoMC1*skoMC1*skoMC1*-2,skoSC1*skoMC1*skoMC1*skoMC1*-2<=skoMC1*skoMC1*skoMC1*2,skoSC1*(skoMC1*skoMC1*skoMC1*(-2+skoMC1*-12)+skoSC1*(skoMC1*skoMC1*skoMC1*(1+skoMC1*-6)+skoSC1*(skoMC1*skoMC1*skoMC1+skoSC1*(skoMC1*skoMC1*skoMC1*(-1/12)+skoSC1*skoMC1*skoMC1*skoMC1*(-1/12)))))<=skoMC1*skoMC1*skoMC1*(2+skoMC1*6)]], Reals]]

% In QepcadB format:
(E skoSC1) (E skoMC1) [[(skoMC1 (-2+(skoMC1 (-5))))<(skoSC1 ((skoMC1 (-1+(skoMC1 (3))))+(skoSC1 ((skoMC1 (-2+(skoMC1 (-3))))+(skoSC1 ((skoMC1 (1/6+(skoMC1 (-1))))+(skoSC1 ((skoMC1 (1/4))+(skoSC1 skoSC1 ((skoMC1 (-1/360))+(skoSC1 skoSC1 ((skoMC1 (1/20160))+(skoSC1 skoSC1 ((skoMC1 (-1/1814400))+(skoSC1 skoSC1 skoMC1 (1/239500800))))))))))))))))]/\[[0<skoMC1]/\[[(skoMC1 (-2+(skoMC1 (-5))))<(skoSC1 ((skoMC1 (-1+(skoMC1 (3))))+(skoSC1 ((skoMC1 (-2+(skoMC1 (-3))))+(skoSC1 ((skoMC1 (1/6+(skoMC1 (-1))))+(skoSC1 skoMC1 (1/4))))))))]/\[[(skoMC1 (-2+(skoMC1 (-5))))<(skoSC1 ((skoMC1 (-1+(skoMC1 (3))))+(skoSC1 ((skoMC1 (-2+(skoMC1 (-3))))+(skoSC1 ((skoMC1 skoMC1 (-1))+(skoSC1 skoMC1 (1/12))))))))]/\[[(skoSC1 ((skoMC1 (1+(skoMC1 (-3))))+(skoSC1 ((skoMC1 (2+(skoMC1 (3))))+(skoSC1 ((skoMC1 (-1/6+skoMC1))+(skoSC1 skoMC1 (-1/4))))))))<=(skoMC1 (2+(skoMC1 (5))))]/\[[(skoSC1 ((skoMC1 (1+(skoMC1 (-3))))+(skoSC1 ((skoMC1 (2+(skoMC1 (3))))+(skoSC1 ((skoMC1 skoMC1)+(skoSC1 skoMC1 (-1/12))))))))<=(skoMC1 (2+(skoMC1 (5))))]/\[[(skoSC1 skoMC1 (-1))<=skoMC1]/\[[(skoMC1 (-1))<(skoSC1 skoMC1)]/\[[0<=skoMC1]/\[[0<skoMC1]/\[[0<=skoSC1]/\[[2<=skoMC1]/\[[skoSC1<=5/4]/\[[(skoMC1 skoMC1 skoMC1 (-2))<(skoSC1 skoMC1 skoMC1 skoMC1 (2))]/\[[(skoSC1 skoMC1 skoMC1 skoMC1 (-2))<=(skoMC1 skoMC1 skoMC1 (2))]/\[(skoSC1 ((skoMC1 skoMC1 skoMC1 (-2+(skoMC1 (-12))))+(skoSC1 ((skoMC1 skoMC1 skoMC1 (1+(skoMC1 (-6))))+(skoSC1 ((skoMC1 skoMC1 skoMC1)+(skoSC1 ((skoMC1 skoMC1 skoMC1 (-1/12))+(skoSC1 skoMC1 skoMC1 skoMC1 (-1/12))))))))))<=(skoMC1 skoMC1 skoMC1 (2+(skoMC1 (6))))]]]]]]]]]]]]]]]].

% In SMTLib2 format:
(declare-fun skoSC1 () Real) (declare-fun skoMC1 () Real) (assert (and (> (* skoSC1 (+ (* skoMC1 (+ (- 1.) (* skoMC1 3.))) (* skoSC1 (+ (* skoMC1 (+ (- 2.) (* skoMC1 (- 3.)))) (* skoSC1 (+ (* skoMC1 (+ (/ 1. 6.) (* skoMC1 (- 1.)))) (* skoSC1 (+ (* skoMC1 (/ 1. 4.)) (* skoSC1 (* skoSC1 (+ (* skoMC1 (/ (- 1.) 360.)) (* skoSC1 (* skoSC1 (+ (* skoMC1 (/ 1. 20160.)) (* skoSC1 (* skoSC1 (+ (* skoMC1 (/ (- 1.) 1814400.)) (* skoSC1 (* skoSC1 (* skoMC1 (/ 1. 239500800.))))))))))))))))))))) (* skoMC1 (+ (- 2.) (* skoMC1 (- 5.))))) (and (> skoMC1 0.) (and (> (* skoSC1 (+ (* skoMC1 (+ (- 1.) (* skoMC1 3.))) (* skoSC1 (+ (* skoMC1 (+ (- 2.) (* skoMC1 (- 3.)))) (* skoSC1 (+ (* skoMC1 (+ (/ 1. 6.) (* skoMC1 (- 1.)))) (* skoSC1 (* skoMC1 (/ 1. 4.))))))))) (* skoMC1 (+ (- 2.) (* skoMC1 (- 5.))))) (and (> (* skoSC1 (+ (* skoMC1 (+ (- 1.) (* skoMC1 3.))) (* skoSC1 (+ (* skoMC1 (+ (- 2.) (* skoMC1 (- 3.)))) (* skoSC1 (+ (* skoMC1 (* skoMC1 (- 1.))) (* skoSC1 (* skoMC1 (/ 1. 12.))))))))) (* skoMC1 (+ (- 2.) (* skoMC1 (- 5.))))) (and (<= (* skoSC1 (+ (* skoMC1 (+ 1. (* skoMC1 (- 3.)))) (* skoSC1 (+ (* skoMC1 (+ 2. (* skoMC1 3.))) (* skoSC1 (+ (* skoMC1 (+ (/ (- 1.) 6.) skoMC1)) (* skoSC1 (* skoMC1 (/ (- 1.) 4.))))))))) (* skoMC1 (+ 2. (* skoMC1 5.)))) (and (<= (* skoSC1 (+ (* skoMC1 (+ 1. (* skoMC1 (- 3.)))) (* skoSC1 (+ (* skoMC1 (+ 2. (* skoMC1 3.))) (* skoSC1 (+ (* skoMC1 skoMC1) (* skoSC1 (* skoMC1 (/ (- 1.) 12.))))))))) (* skoMC1 (+ 2. (* skoMC1 5.)))) (and (<= (* skoSC1 (* skoMC1 (- 1.))) skoMC1) (and (> (* skoSC1 skoMC1) (* skoMC1 (- 1.))) (and (<= 0. skoMC1) (and (> skoMC1 0.) (and (<= 0. skoSC1) (and (<= 2. skoMC1) (and (<= skoSC1 (/ 5. 4.)) (and (> (* skoSC1 (* skoMC1 (* skoMC1 (* skoMC1 2.)))) (* skoMC1 (* skoMC1 (* skoMC1 (- 2.))))) (and (<= (* skoSC1 (* skoMC1 (* skoMC1 (* skoMC1 (- 2.))))) (* skoMC1 (* skoMC1 (* skoMC1 2.)))) (<= (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (+ (- 2.) (* skoMC1 (- 12.)))))) (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (+ 1. (* skoMC1 (- 6.)))))) (* skoSC1 (+ (* skoMC1 (* skoMC1 skoMC1)) (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (/ (- 1.) 12.)))) (* skoSC1 (* skoMC1 (* skoMC1 (* skoMC1 (/ (- 1.) 12.))))))))))))) (* skoMC1 (* skoMC1 (* skoMC1 (+ 2. (* skoMC1 6.))))))))))))))))))))))

% In GRF format:
(sequent " MetiTarski formula " (antecedent (> (* skoSC1 (+ (* skoMC1 (+ (- 1.) (* skoMC1 3.))) (* skoSC1 (+ (* skoMC1 (+ (- 2.) (* skoMC1 (- 3.)))) (* skoSC1 (+ (* skoMC1 (+ (/ 1. 6.) (* skoMC1 (- 1.)))) (* skoSC1 (+ (* skoMC1 (/ 1. 4.)) (* skoSC1 (* skoSC1 (+ (* skoMC1 (/ (- 1.) 360.)) (* skoSC1 (* skoSC1 (+ (* skoMC1 (/ 1. 20160.)) (* skoSC1 (* skoSC1 (+ (* skoMC1 (/ (- 1.) 1814400.)) (* skoSC1 (* skoSC1 (* skoMC1 (/ 1. 239500800.))))))))))))))))))))) (* skoMC1 (+ (- 2.) (* skoMC1 (- 5.))))) (> skoMC1 0.) (> (* skoSC1 (+ (* skoMC1 (+ (- 1.) (* skoMC1 3.))) (* skoSC1 (+ (* skoMC1 (+ (- 2.) (* skoMC1 (- 3.)))) (* skoSC1 (+ (* skoMC1 (+ (/ 1. 6.) (* skoMC1 (- 1.)))) (* skoSC1 (* skoMC1 (/ 1. 4.))))))))) (* skoMC1 (+ (- 2.) (* skoMC1 (- 5.))))) (> (* skoSC1 (+ (* skoMC1 (+ (- 1.) (* skoMC1 3.))) (* skoSC1 (+ (* skoMC1 (+ (- 2.) (* skoMC1 (- 3.)))) (* skoSC1 (+ (* skoMC1 (* skoMC1 (- 1.))) (* skoSC1 (* skoMC1 (/ 1. 12.))))))))) (* skoMC1 (+ (- 2.) (* skoMC1 (- 5.))))) (<= (* skoSC1 (+ (* skoMC1 (+ 1. (* skoMC1 (- 3.)))) (* skoSC1 (+ (* skoMC1 (+ 2. (* skoMC1 3.))) (* skoSC1 (+ (* skoMC1 (+ (/ (- 1.) 6.) skoMC1)) (* skoSC1 (* skoMC1 (/ (- 1.) 4.))))))))) (* skoMC1 (+ 2. (* skoMC1 5.)))) (<= (* skoSC1 (+ (* skoMC1 (+ 1. (* skoMC1 (- 3.)))) (* skoSC1 (+ (* skoMC1 (+ 2. (* skoMC1 3.))) (* skoSC1 (+ (* skoMC1 skoMC1) (* skoSC1 (* skoMC1 (/ (- 1.) 12.))))))))) (* skoMC1 (+ 2. (* skoMC1 5.)))) (<= (* skoSC1 (* skoMC1 (- 1.))) skoMC1) (> (* skoSC1 skoMC1) (* skoMC1 (- 1.))) (<= 0. skoMC1) (> skoMC1 0.) (<= 0. skoSC1) (<= 2. skoMC1) (<= skoSC1 (/ 5. 4.)) (> (* skoSC1 (* skoMC1 (* skoMC1 (* skoMC1 2.)))) (* skoMC1 (* skoMC1 (* skoMC1 (- 2.))))) (<= (* skoSC1 (* skoMC1 (* skoMC1 (* skoMC1 (- 2.))))) (* skoMC1 (* skoMC1 (* skoMC1 2.))))) (succedent (> (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (+ (- 2.) (* skoMC1 (- 12.)))))) (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (+ 1. (* skoMC1 (- 6.)))))) (* skoSC1 (+ (* skoMC1 (* skoMC1 skoMC1)) (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (/ (- 1.) 12.)))) (* skoSC1 (* skoMC1 (* skoMC1 (* skoMC1 (/ (- 1.) 12.))))))))))))) (* skoMC1 (* skoMC1 (* skoMC1 (+ 2. (* skoMC1 6.))))))))
-----[end problem]-----

-----[begin problem]-----
% In Mathematica format:
Timing[Resolve[Exists[{skoSC1,skoMC1}, And[skoSC1*(skoMC1*(-1+skoMC1*3)+skoSC1*(skoMC1*(-2+skoMC1*-3)+skoSC1*(skoMC1*((1/6)+skoMC1*-1)+skoSC1*(skoMC1*(1/4)+skoSC1*skoSC1*(skoMC1*(-1/360)+skoSC1*skoSC1*(skoMC1*(1/20160)+skoSC1*skoSC1*(skoMC1*(-1/1814400)+skoSC1*skoSC1*skoMC1*(1/239500800))))))))<=skoMC1*(-2+skoMC1*-5),skoMC1<=0,skoSC1*(skoMC1*(-1+skoMC1*3)+skoSC1*(skoMC1*(-2+skoMC1*-3)+skoSC1*(skoMC1*((1/6)+skoMC1*-1)+skoSC1*skoMC1*(1/4))))>skoMC1*(-2+skoMC1*-5),skoSC1*(skoMC1*(-1+skoMC1*3)+skoSC1*(skoMC1*(-2+skoMC1*-3)+skoSC1*(skoMC1*skoMC1*-1+skoSC1*skoMC1*(1/12))))>skoMC1*(-2+skoMC1*-5),skoSC1*(skoMC1*(1+skoMC1*-3)+skoSC1*(skoMC1*(2+skoMC1*3)+skoSC1*(skoMC1*((-1/6)+skoMC1)+skoSC1*skoMC1*(-1/4))))<=skoMC1*(2+skoMC1*5),skoSC1*(skoMC1*(1+skoMC1*-3)+skoSC1*(skoMC1*(2+skoMC1*3)+skoSC1*(skoMC1*skoMC1+skoSC1*skoMC1*(-1/12))))<=skoMC1*(2+skoMC1*5),skoSC1*skoMC1*-1<=skoMC1,skoSC1*skoMC1>skoMC1*-1,0<=skoMC1,skoMC1>0,0<=skoSC1,2<=skoMC1,skoSC1<=(5/4),skoSC1*skoMC1*skoMC1*skoMC1*2>skoMC1*skoMC1*skoMC1*-2,skoSC1*skoMC1*skoMC1*skoMC1*-2<=skoMC1*skoMC1*skoMC1*2,skoSC1*(skoMC1*skoMC1*skoMC1*(-2+skoMC1*-12)+skoSC1*(skoMC1*skoMC1*skoMC1*(1+skoMC1*-6)+skoSC1*(skoMC1*skoMC1*skoMC1+skoSC1*(skoMC1*skoMC1*skoMC1*(-1/12)+skoSC1*skoMC1*skoMC1*skoMC1*(-1/12)))))<=skoMC1*skoMC1*skoMC1*(2+skoMC1*6)]], Reals]]

% In QepcadB format:
(E skoSC1) (E skoMC1) [[(skoSC1 ((skoMC1 (-1+(skoMC1 (3))))+(skoSC1 ((skoMC1 (-2+(skoMC1 (-3))))+(skoSC1 ((skoMC1 (1/6+(skoMC1 (-1))))+(skoSC1 ((skoMC1 (1/4))+(skoSC1 skoSC1 ((skoMC1 (-1/360))+(skoSC1 skoSC1 ((skoMC1 (1/20160))+(skoSC1 skoSC1 ((skoMC1 (-1/1814400))+(skoSC1 skoSC1 skoMC1 (1/239500800))))))))))))))))<=(skoMC1 (-2+(skoMC1 (-5))))]/\[[skoMC1<=0]/\[[(skoMC1 (-2+(skoMC1 (-5))))<(skoSC1 ((skoMC1 (-1+(skoMC1 (3))))+(skoSC1 ((skoMC1 (-2+(skoMC1 (-3))))+(skoSC1 ((skoMC1 (1/6+(skoMC1 (-1))))+(skoSC1 skoMC1 (1/4))))))))]/\[[(skoMC1 (-2+(skoMC1 (-5))))<(skoSC1 ((skoMC1 (-1+(skoMC1 (3))))+(skoSC1 ((skoMC1 (-2+(skoMC1 (-3))))+(skoSC1 ((skoMC1 skoMC1 (-1))+(skoSC1 skoMC1 (1/12))))))))]/\[[(skoSC1 ((skoMC1 (1+(skoMC1 (-3))))+(skoSC1 ((skoMC1 (2+(skoMC1 (3))))+(skoSC1 ((skoMC1 (-1/6+skoMC1))+(skoSC1 skoMC1 (-1/4))))))))<=(skoMC1 (2+(skoMC1 (5))))]/\[[(skoSC1 ((skoMC1 (1+(skoMC1 (-3))))+(skoSC1 ((skoMC1 (2+(skoMC1 (3))))+(skoSC1 ((skoMC1 skoMC1)+(skoSC1 skoMC1 (-1/12))))))))<=(skoMC1 (2+(skoMC1 (5))))]/\[[(skoSC1 skoMC1 (-1))<=skoMC1]/\[[(skoMC1 (-1))<(skoSC1 skoMC1)]/\[[0<=skoMC1]/\[[0<skoMC1]/\[[0<=skoSC1]/\[[2<=skoMC1]/\[[skoSC1<=5/4]/\[[(skoMC1 skoMC1 skoMC1 (-2))<(skoSC1 skoMC1 skoMC1 skoMC1 (2))]/\[[(skoSC1 skoMC1 skoMC1 skoMC1 (-2))<=(skoMC1 skoMC1 skoMC1 (2))]/\[(skoSC1 ((skoMC1 skoMC1 skoMC1 (-2+(skoMC1 (-12))))+(skoSC1 ((skoMC1 skoMC1 skoMC1 (1+(skoMC1 (-6))))+(skoSC1 ((skoMC1 skoMC1 skoMC1)+(skoSC1 ((skoMC1 skoMC1 skoMC1 (-1/12))+(skoSC1 skoMC1 skoMC1 skoMC1 (-1/12))))))))))<=(skoMC1 skoMC1 skoMC1 (2+(skoMC1 (6))))]]]]]]]]]]]]]]]].

% In SMTLib2 format:
(declare-fun skoSC1 () Real) (declare-fun skoMC1 () Real) (assert (and (<= (* skoSC1 (+ (* skoMC1 (+ (- 1.) (* skoMC1 3.))) (* skoSC1 (+ (* skoMC1 (+ (- 2.) (* skoMC1 (- 3.)))) (* skoSC1 (+ (* skoMC1 (+ (/ 1. 6.) (* skoMC1 (- 1.)))) (* skoSC1 (+ (* skoMC1 (/ 1. 4.)) (* skoSC1 (* skoSC1 (+ (* skoMC1 (/ (- 1.) 360.)) (* skoSC1 (* skoSC1 (+ (* skoMC1 (/ 1. 20160.)) (* skoSC1 (* skoSC1 (+ (* skoMC1 (/ (- 1.) 1814400.)) (* skoSC1 (* skoSC1 (* skoMC1 (/ 1. 239500800.))))))))))))))))))))) (* skoMC1 (+ (- 2.) (* skoMC1 (- 5.))))) (and (<= skoMC1 0.) (and (> (* skoSC1 (+ (* skoMC1 (+ (- 1.) (* skoMC1 3.))) (* skoSC1 (+ (* skoMC1 (+ (- 2.) (* skoMC1 (- 3.)))) (* skoSC1 (+ (* skoMC1 (+ (/ 1. 6.) (* skoMC1 (- 1.)))) (* skoSC1 (* skoMC1 (/ 1. 4.))))))))) (* skoMC1 (+ (- 2.) (* skoMC1 (- 5.))))) (and (> (* skoSC1 (+ (* skoMC1 (+ (- 1.) (* skoMC1 3.))) (* skoSC1 (+ (* skoMC1 (+ (- 2.) (* skoMC1 (- 3.)))) (* skoSC1 (+ (* skoMC1 (* skoMC1 (- 1.))) (* skoSC1 (* skoMC1 (/ 1. 12.))))))))) (* skoMC1 (+ (- 2.) (* skoMC1 (- 5.))))) (and (<= (* skoSC1 (+ (* skoMC1 (+ 1. (* skoMC1 (- 3.)))) (* skoSC1 (+ (* skoMC1 (+ 2. (* skoMC1 3.))) (* skoSC1 (+ (* skoMC1 (+ (/ (- 1.) 6.) skoMC1)) (* skoSC1 (* skoMC1 (/ (- 1.) 4.))))))))) (* skoMC1 (+ 2. (* skoMC1 5.)))) (and (<= (* skoSC1 (+ (* skoMC1 (+ 1. (* skoMC1 (- 3.)))) (* skoSC1 (+ (* skoMC1 (+ 2. (* skoMC1 3.))) (* skoSC1 (+ (* skoMC1 skoMC1) (* skoSC1 (* skoMC1 (/ (- 1.) 12.))))))))) (* skoMC1 (+ 2. (* skoMC1 5.)))) (and (<= (* skoSC1 (* skoMC1 (- 1.))) skoMC1) (and (> (* skoSC1 skoMC1) (* skoMC1 (- 1.))) (and (<= 0. skoMC1) (and (> skoMC1 0.) (and (<= 0. skoSC1) (and (<= 2. skoMC1) (and (<= skoSC1 (/ 5. 4.)) (and (> (* skoSC1 (* skoMC1 (* skoMC1 (* skoMC1 2.)))) (* skoMC1 (* skoMC1 (* skoMC1 (- 2.))))) (and (<= (* skoSC1 (* skoMC1 (* skoMC1 (* skoMC1 (- 2.))))) (* skoMC1 (* skoMC1 (* skoMC1 2.)))) (<= (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (+ (- 2.) (* skoMC1 (- 12.)))))) (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (+ 1. (* skoMC1 (- 6.)))))) (* skoSC1 (+ (* skoMC1 (* skoMC1 skoMC1)) (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (/ (- 1.) 12.)))) (* skoSC1 (* skoMC1 (* skoMC1 (* skoMC1 (/ (- 1.) 12.))))))))))))) (* skoMC1 (* skoMC1 (* skoMC1 (+ 2. (* skoMC1 6.))))))))))))))))))))))

% In GRF format:
(sequent " MetiTarski formula " (antecedent (<= (* skoSC1 (+ (* skoMC1 (+ (- 1.) (* skoMC1 3.))) (* skoSC1 (+ (* skoMC1 (+ (- 2.) (* skoMC1 (- 3.)))) (* skoSC1 (+ (* skoMC1 (+ (/ 1. 6.) (* skoMC1 (- 1.)))) (* skoSC1 (+ (* skoMC1 (/ 1. 4.)) (* skoSC1 (* skoSC1 (+ (* skoMC1 (/ (- 1.) 360.)) (* skoSC1 (* skoSC1 (+ (* skoMC1 (/ 1. 20160.)) (* skoSC1 (* skoSC1 (+ (* skoMC1 (/ (- 1.) 1814400.)) (* skoSC1 (* skoSC1 (* skoMC1 (/ 1. 239500800.))))))))))))))))))))) (* skoMC1 (+ (- 2.) (* skoMC1 (- 5.))))) (<= skoMC1 0.) (> (* skoSC1 (+ (* skoMC1 (+ (- 1.) (* skoMC1 3.))) (* skoSC1 (+ (* skoMC1 (+ (- 2.) (* skoMC1 (- 3.)))) (* skoSC1 (+ (* skoMC1 (+ (/ 1. 6.) (* skoMC1 (- 1.)))) (* skoSC1 (* skoMC1 (/ 1. 4.))))))))) (* skoMC1 (+ (- 2.) (* skoMC1 (- 5.))))) (> (* skoSC1 (+ (* skoMC1 (+ (- 1.) (* skoMC1 3.))) (* skoSC1 (+ (* skoMC1 (+ (- 2.) (* skoMC1 (- 3.)))) (* skoSC1 (+ (* skoMC1 (* skoMC1 (- 1.))) (* skoSC1 (* skoMC1 (/ 1. 12.))))))))) (* skoMC1 (+ (- 2.) (* skoMC1 (- 5.))))) (<= (* skoSC1 (+ (* skoMC1 (+ 1. (* skoMC1 (- 3.)))) (* skoSC1 (+ (* skoMC1 (+ 2. (* skoMC1 3.))) (* skoSC1 (+ (* skoMC1 (+ (/ (- 1.) 6.) skoMC1)) (* skoSC1 (* skoMC1 (/ (- 1.) 4.))))))))) (* skoMC1 (+ 2. (* skoMC1 5.)))) (<= (* skoSC1 (+ (* skoMC1 (+ 1. (* skoMC1 (- 3.)))) (* skoSC1 (+ (* skoMC1 (+ 2. (* skoMC1 3.))) (* skoSC1 (+ (* skoMC1 skoMC1) (* skoSC1 (* skoMC1 (/ (- 1.) 12.))))))))) (* skoMC1 (+ 2. (* skoMC1 5.)))) (<= (* skoSC1 (* skoMC1 (- 1.))) skoMC1) (> (* skoSC1 skoMC1) (* skoMC1 (- 1.))) (<= 0. skoMC1) (> skoMC1 0.) (<= 0. skoSC1) (<= 2. skoMC1) (<= skoSC1 (/ 5. 4.)) (> (* skoSC1 (* skoMC1 (* skoMC1 (* skoMC1 2.)))) (* skoMC1 (* skoMC1 (* skoMC1 (- 2.))))) (<= (* skoSC1 (* skoMC1 (* skoMC1 (* skoMC1 (- 2.))))) (* skoMC1 (* skoMC1 (* skoMC1 2.))))) (succedent (> (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (+ (- 2.) (* skoMC1 (- 12.)))))) (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (+ 1. (* skoMC1 (- 6.)))))) (* skoSC1 (+ (* skoMC1 (* skoMC1 skoMC1)) (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (/ (- 1.) 12.)))) (* skoSC1 (* skoMC1 (* skoMC1 (* skoMC1 (/ (- 1.) 12.))))))))))))) (* skoMC1 (* skoMC1 (* skoMC1 (+ 2. (* skoMC1 6.))))))))
-----[end problem]-----

-----[begin problem]-----
% In Mathematica format:
Timing[Resolve[Exists[{skoSC1,skoMC1}, And[skoSC1*(skoMC1*(-1+skoMC1*3)+skoSC1*(skoMC1*(-2+skoMC1*-3)+skoSC1*(skoMC1*((1/6)+skoMC1*-1)+skoSC1*(skoMC1*(1/4)+skoSC1*skoSC1*(skoMC1*(-1/360)+skoSC1*skoSC1*(skoMC1*(1/20160)+skoSC1*skoSC1*(skoMC1*(-1/1814400)+skoSC1*skoSC1*skoMC1*(1/239500800))))))))>skoMC1*(-2+skoMC1*-5),skoSC1*(skoMC1*(-1+skoMC1*3)+skoSC1*(skoMC1*(-2+skoMC1*-3)+skoSC1*(skoMC1*((1/6)+skoMC1*-1)+skoSC1*skoMC1*(1/4))))>skoMC1*(-2+skoMC1*-5),skoSC1*(skoMC1*(-1+skoMC1*3)+skoSC1*(skoMC1*(-2+skoMC1*-3)+skoSC1*(skoMC1*skoMC1*-1+skoSC1*skoMC1*(1/12))))>skoMC1*(-2+skoMC1*-5),skoSC1*(skoMC1*(1+skoMC1*-3)+skoSC1*(skoMC1*(2+skoMC1*3)+skoSC1*(skoMC1*((-1/6)+skoMC1)+skoSC1*skoMC1*(-1/4))))<=skoMC1*(2+skoMC1*5),skoSC1*(skoMC1*(1+skoMC1*-3)+skoSC1*(skoMC1*(2+skoMC1*3)+skoSC1*(skoMC1*skoMC1+skoSC1*skoMC1*(-1/12))))<=skoMC1*(2+skoMC1*5),skoSC1*skoMC1*-1<=skoMC1,skoSC1*skoMC1>skoMC1*-1,0<=skoMC1,skoMC1>0,0<=skoSC1,2<=skoMC1,skoSC1<=(5/4),skoSC1*skoMC1*skoMC1*skoMC1*2>skoMC1*skoMC1*skoMC1*-2,skoSC1*skoMC1*skoMC1*skoMC1*-2<=skoMC1*skoMC1*skoMC1*2,skoSC1*(skoMC1*skoMC1*skoMC1*(-2+skoMC1*-12)+skoSC1*(skoMC1*skoMC1*skoMC1*(1+skoMC1*-6)+skoSC1*(skoMC1*skoMC1*skoMC1+skoSC1*(skoMC1*skoMC1*skoMC1*(-1/12)+skoSC1*skoMC1*skoMC1*skoMC1*(-1/12)))))<=skoMC1*skoMC1*skoMC1*(2+skoMC1*6)]], Reals]]

% In QepcadB format:
(E skoSC1) (E skoMC1) [[(skoMC1 (-2+(skoMC1 (-5))))<(skoSC1 ((skoMC1 (-1+(skoMC1 (3))))+(skoSC1 ((skoMC1 (-2+(skoMC1 (-3))))+(skoSC1 ((skoMC1 (1/6+(skoMC1 (-1))))+(skoSC1 ((skoMC1 (1/4))+(skoSC1 skoSC1 ((skoMC1 (-1/360))+(skoSC1 skoSC1 ((skoMC1 (1/20160))+(skoSC1 skoSC1 ((skoMC1 (-1/1814400))+(skoSC1 skoSC1 skoMC1 (1/239500800))))))))))))))))]/\[[(skoMC1 (-2+(skoMC1 (-5))))<(skoSC1 ((skoMC1 (-1+(skoMC1 (3))))+(skoSC1 ((skoMC1 (-2+(skoMC1 (-3))))+(skoSC1 ((skoMC1 (1/6+(skoMC1 (-1))))+(skoSC1 skoMC1 (1/4))))))))]/\[[(skoMC1 (-2+(skoMC1 (-5))))<(skoSC1 ((skoMC1 (-1+(skoMC1 (3))))+(skoSC1 ((skoMC1 (-2+(skoMC1 (-3))))+(skoSC1 ((skoMC1 skoMC1 (-1))+(skoSC1 skoMC1 (1/12))))))))]/\[[(skoSC1 ((skoMC1 (1+(skoMC1 (-3))))+(skoSC1 ((skoMC1 (2+(skoMC1 (3))))+(skoSC1 ((skoMC1 (-1/6+skoMC1))+(skoSC1 skoMC1 (-1/4))))))))<=(skoMC1 (2+(skoMC1 (5))))]/\[[(skoSC1 ((skoMC1 (1+(skoMC1 (-3))))+(skoSC1 ((skoMC1 (2+(skoMC1 (3))))+(skoSC1 ((skoMC1 skoMC1)+(skoSC1 skoMC1 (-1/12))))))))<=(skoMC1 (2+(skoMC1 (5))))]/\[[(skoSC1 skoMC1 (-1))<=skoMC1]/\[[(skoMC1 (-1))<(skoSC1 skoMC1)]/\[[0<=skoMC1]/\[[0<skoMC1]/\[[0<=skoSC1]/\[[2<=skoMC1]/\[[skoSC1<=5/4]/\[[(skoMC1 skoMC1 skoMC1 (-2))<(skoSC1 skoMC1 skoMC1 skoMC1 (2))]/\[[(skoSC1 skoMC1 skoMC1 skoMC1 (-2))<=(skoMC1 skoMC1 skoMC1 (2))]/\[(skoSC1 ((skoMC1 skoMC1 skoMC1 (-2+(skoMC1 (-12))))+(skoSC1 ((skoMC1 skoMC1 skoMC1 (1+(skoMC1 (-6))))+(skoSC1 ((skoMC1 skoMC1 skoMC1)+(skoSC1 ((skoMC1 skoMC1 skoMC1 (-1/12))+(skoSC1 skoMC1 skoMC1 skoMC1 (-1/12))))))))))<=(skoMC1 skoMC1 skoMC1 (2+(skoMC1 (6))))]]]]]]]]]]]]]]].

% In SMTLib2 format:
(declare-fun skoSC1 () Real) (declare-fun skoMC1 () Real) (assert (and (> (* skoSC1 (+ (* skoMC1 (+ (- 1.) (* skoMC1 3.))) (* skoSC1 (+ (* skoMC1 (+ (- 2.) (* skoMC1 (- 3.)))) (* skoSC1 (+ (* skoMC1 (+ (/ 1. 6.) (* skoMC1 (- 1.)))) (* skoSC1 (+ (* skoMC1 (/ 1. 4.)) (* skoSC1 (* skoSC1 (+ (* skoMC1 (/ (- 1.) 360.)) (* skoSC1 (* skoSC1 (+ (* skoMC1 (/ 1. 20160.)) (* skoSC1 (* skoSC1 (+ (* skoMC1 (/ (- 1.) 1814400.)) (* skoSC1 (* skoSC1 (* skoMC1 (/ 1. 239500800.))))))))))))))))))))) (* skoMC1 (+ (- 2.) (* skoMC1 (- 5.))))) (and (> (* skoSC1 (+ (* skoMC1 (+ (- 1.) (* skoMC1 3.))) (* skoSC1 (+ (* skoMC1 (+ (- 2.) (* skoMC1 (- 3.)))) (* skoSC1 (+ (* skoMC1 (+ (/ 1. 6.) (* skoMC1 (- 1.)))) (* skoSC1 (* skoMC1 (/ 1. 4.))))))))) (* skoMC1 (+ (- 2.) (* skoMC1 (- 5.))))) (and (> (* skoSC1 (+ (* skoMC1 (+ (- 1.) (* skoMC1 3.))) (* skoSC1 (+ (* skoMC1 (+ (- 2.) (* skoMC1 (- 3.)))) (* skoSC1 (+ (* skoMC1 (* skoMC1 (- 1.))) (* skoSC1 (* skoMC1 (/ 1. 12.))))))))) (* skoMC1 (+ (- 2.) (* skoMC1 (- 5.))))) (and (<= (* skoSC1 (+ (* skoMC1 (+ 1. (* skoMC1 (- 3.)))) (* skoSC1 (+ (* skoMC1 (+ 2. (* skoMC1 3.))) (* skoSC1 (+ (* skoMC1 (+ (/ (- 1.) 6.) skoMC1)) (* skoSC1 (* skoMC1 (/ (- 1.) 4.))))))))) (* skoMC1 (+ 2. (* skoMC1 5.)))) (and (<= (* skoSC1 (+ (* skoMC1 (+ 1. (* skoMC1 (- 3.)))) (* skoSC1 (+ (* skoMC1 (+ 2. (* skoMC1 3.))) (* skoSC1 (+ (* skoMC1 skoMC1) (* skoSC1 (* skoMC1 (/ (- 1.) 12.))))))))) (* skoMC1 (+ 2. (* skoMC1 5.)))) (and (<= (* skoSC1 (* skoMC1 (- 1.))) skoMC1) (and (> (* skoSC1 skoMC1) (* skoMC1 (- 1.))) (and (<= 0. skoMC1) (and (> skoMC1 0.) (and (<= 0. skoSC1) (and (<= 2. skoMC1) (and (<= skoSC1 (/ 5. 4.)) (and (> (* skoSC1 (* skoMC1 (* skoMC1 (* skoMC1 2.)))) (* skoMC1 (* skoMC1 (* skoMC1 (- 2.))))) (and (<= (* skoSC1 (* skoMC1 (* skoMC1 (* skoMC1 (- 2.))))) (* skoMC1 (* skoMC1 (* skoMC1 2.)))) (<= (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (+ (- 2.) (* skoMC1 (- 12.)))))) (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (+ 1. (* skoMC1 (- 6.)))))) (* skoSC1 (+ (* skoMC1 (* skoMC1 skoMC1)) (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (/ (- 1.) 12.)))) (* skoSC1 (* skoMC1 (* skoMC1 (* skoMC1 (/ (- 1.) 12.))))))))))))) (* skoMC1 (* skoMC1 (* skoMC1 (+ 2. (* skoMC1 6.)))))))))))))))))))))

% In GRF format:
(sequent " MetiTarski formula " (antecedent (> (* skoSC1 (+ (* skoMC1 (+ (- 1.) (* skoMC1 3.))) (* skoSC1 (+ (* skoMC1 (+ (- 2.) (* skoMC1 (- 3.)))) (* skoSC1 (+ (* skoMC1 (+ (/ 1. 6.) (* skoMC1 (- 1.)))) (* skoSC1 (+ (* skoMC1 (/ 1. 4.)) (* skoSC1 (* skoSC1 (+ (* skoMC1 (/ (- 1.) 360.)) (* skoSC1 (* skoSC1 (+ (* skoMC1 (/ 1. 20160.)) (* skoSC1 (* skoSC1 (+ (* skoMC1 (/ (- 1.) 1814400.)) (* skoSC1 (* skoSC1 (* skoMC1 (/ 1. 239500800.))))))))))))))))))))) (* skoMC1 (+ (- 2.) (* skoMC1 (- 5.))))) (> (* skoSC1 (+ (* skoMC1 (+ (- 1.) (* skoMC1 3.))) (* skoSC1 (+ (* skoMC1 (+ (- 2.) (* skoMC1 (- 3.)))) (* skoSC1 (+ (* skoMC1 (+ (/ 1. 6.) (* skoMC1 (- 1.)))) (* skoSC1 (* skoMC1 (/ 1. 4.))))))))) (* skoMC1 (+ (- 2.) (* skoMC1 (- 5.))))) (> (* skoSC1 (+ (* skoMC1 (+ (- 1.) (* skoMC1 3.))) (* skoSC1 (+ (* skoMC1 (+ (- 2.) (* skoMC1 (- 3.)))) (* skoSC1 (+ (* skoMC1 (* skoMC1 (- 1.))) (* skoSC1 (* skoMC1 (/ 1. 12.))))))))) (* skoMC1 (+ (- 2.) (* skoMC1 (- 5.))))) (<= (* skoSC1 (+ (* skoMC1 (+ 1. (* skoMC1 (- 3.)))) (* skoSC1 (+ (* skoMC1 (+ 2. (* skoMC1 3.))) (* skoSC1 (+ (* skoMC1 (+ (/ (- 1.) 6.) skoMC1)) (* skoSC1 (* skoMC1 (/ (- 1.) 4.))))))))) (* skoMC1 (+ 2. (* skoMC1 5.)))) (<= (* skoSC1 (+ (* skoMC1 (+ 1. (* skoMC1 (- 3.)))) (* skoSC1 (+ (* skoMC1 (+ 2. (* skoMC1 3.))) (* skoSC1 (+ (* skoMC1 skoMC1) (* skoSC1 (* skoMC1 (/ (- 1.) 12.))))))))) (* skoMC1 (+ 2. (* skoMC1 5.)))) (<= (* skoSC1 (* skoMC1 (- 1.))) skoMC1) (> (* skoSC1 skoMC1) (* skoMC1 (- 1.))) (<= 0. skoMC1) (> skoMC1 0.) (<= 0. skoSC1) (<= 2. skoMC1) (<= skoSC1 (/ 5. 4.)) (> (* skoSC1 (* skoMC1 (* skoMC1 (* skoMC1 2.)))) (* skoMC1 (* skoMC1 (* skoMC1 (- 2.))))) (<= (* skoSC1 (* skoMC1 (* skoMC1 (* skoMC1 (- 2.))))) (* skoMC1 (* skoMC1 (* skoMC1 2.))))) (succedent (> (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (+ (- 2.) (* skoMC1 (- 12.)))))) (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (+ 1. (* skoMC1 (- 6.)))))) (* skoSC1 (+ (* skoMC1 (* skoMC1 skoMC1)) (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (/ (- 1.) 12.)))) (* skoSC1 (* skoMC1 (* skoMC1 (* skoMC1 (/ (- 1.) 12.))))))))))))) (* skoMC1 (* skoMC1 (* skoMC1 (+ 2. (* skoMC1 6.))))))))
-----[end problem]-----

-----[begin problem]-----
% In Mathematica format:
Timing[Resolve[Exists[{skoSC1,skoMC1}, And[skoMC1*skoMC1*skoMC1*-1<=0,skoMC1*skoMC1!=0,skoMC1!=0,skoSC1*(skoMC1*skoMC1*skoMC1*(-2+skoMC1*-12)+skoSC1*(skoMC1*skoMC1*skoMC1*(1+skoMC1*-6)+skoSC1*(skoMC1*skoMC1*skoMC1+skoSC1*(skoMC1*skoMC1*skoMC1*(-1/12)+skoSC1*skoMC1*skoMC1*skoMC1*(-1/12)))))<=skoMC1*skoMC1*skoMC1*(2+skoMC1*6),skoSC1*skoMC1*skoMC1*skoMC1*-2<=skoMC1*skoMC1*skoMC1*2,skoSC1*skoMC1*skoMC1*skoMC1*2>skoMC1*skoMC1*skoMC1*-2,skoSC1<=(5/4),2<=skoMC1,0<=skoSC1,skoMC1>0,0<=skoMC1,skoSC1*skoMC1>skoMC1*-1,skoSC1*skoMC1*-1<=skoMC1,skoSC1*(skoMC1*(1+skoMC1*-3)+skoSC1*(skoMC1*(2+skoMC1*3)+skoSC1*(skoMC1*skoMC1+skoSC1*skoMC1*(-1/12))))<=skoMC1*(2+skoMC1*5),skoSC1*(skoMC1*(1+skoMC1*-3)+skoSC1*(skoMC1*(2+skoMC1*3)+skoSC1*(skoMC1*((-1/6)+skoMC1)+skoSC1*skoMC1*(-1/4))))<=skoMC1*(2+skoMC1*5),skoSC1*(skoMC1*(-1+skoMC1*3)+skoSC1*(skoMC1*(-2+skoMC1*-3)+skoSC1*(skoMC1*skoMC1*-1+skoSC1*skoMC1*(1/12))))>skoMC1*(-2+skoMC1*-5),skoSC1*(skoMC1*(-1+skoMC1*3)+skoSC1*(skoMC1*(-2+skoMC1*-3)+skoSC1*(skoMC1*((1/6)+skoMC1*-1)+skoSC1*skoMC1*(1/4))))>skoMC1*(-2+skoMC1*-5)]], Reals]]

% In QepcadB format:
(E skoSC1) (E skoMC1) [[(skoMC1 skoMC1 skoMC1 (-1))<=0]/\[[(skoMC1 skoMC1) /=0]/\[[skoMC1 /=0]/\[[(skoSC1 ((skoMC1 skoMC1 skoMC1 (-2+(skoMC1 (-12))))+(skoSC1 ((skoMC1 skoMC1 skoMC1 (1+(skoMC1 (-6))))+(skoSC1 ((skoMC1 skoMC1 skoMC1)+(skoSC1 ((skoMC1 skoMC1 skoMC1 (-1/12))+(skoSC1 skoMC1 skoMC1 skoMC1 (-1/12))))))))))<=(skoMC1 skoMC1 skoMC1 (2+(skoMC1 (6))))]/\[[(skoSC1 skoMC1 skoMC1 skoMC1 (-2))<=(skoMC1 skoMC1 skoMC1 (2))]/\[[(skoMC1 skoMC1 skoMC1 (-2))<(skoSC1 skoMC1 skoMC1 skoMC1 (2))]/\[[skoSC1<=5/4]/\[[2<=skoMC1]/\[[0<=skoSC1]/\[[0<skoMC1]/\[[0<=skoMC1]/\[[(skoMC1 (-1))<(skoSC1 skoMC1)]/\[[(skoSC1 skoMC1 (-1))<=skoMC1]/\[[(skoSC1 ((skoMC1 (1+(skoMC1 (-3))))+(skoSC1 ((skoMC1 (2+(skoMC1 (3))))+(skoSC1 ((skoMC1 skoMC1)+(skoSC1 skoMC1 (-1/12))))))))<=(skoMC1 (2+(skoMC1 (5))))]/\[[(skoSC1 ((skoMC1 (1+(skoMC1 (-3))))+(skoSC1 ((skoMC1 (2+(skoMC1 (3))))+(skoSC1 ((skoMC1 (-1/6+skoMC1))+(skoSC1 skoMC1 (-1/4))))))))<=(skoMC1 (2+(skoMC1 (5))))]/\[[(skoMC1 (-2+(skoMC1 (-5))))<(skoSC1 ((skoMC1 (-1+(skoMC1 (3))))+(skoSC1 ((skoMC1 (-2+(skoMC1 (-3))))+(skoSC1 ((skoMC1 skoMC1 (-1))+(skoSC1 skoMC1 (1/12))))))))]/\[(skoMC1 (-2+(skoMC1 (-5))))<(skoSC1 ((skoMC1 (-1+(skoMC1 (3))))+(skoSC1 ((skoMC1 (-2+(skoMC1 (-3))))+(skoSC1 ((skoMC1 (1/6+(skoMC1 (-1))))+(skoSC1 skoMC1 (1/4))))))))]]]]]]]]]]]]]]]]].

% In SMTLib2 format:
(declare-fun skoSC1 () Real) (declare-fun skoMC1 () Real) (assert (and (<= (* skoMC1 (* skoMC1 (* skoMC1 (- 1.)))) 0.) (and (!= (* skoMC1 skoMC1) 0.) (and (!= skoMC1 0.) (and (<= (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (+ (- 2.) (* skoMC1 (- 12.)))))) (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (+ 1. (* skoMC1 (- 6.)))))) (* skoSC1 (+ (* skoMC1 (* skoMC1 skoMC1)) (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (/ (- 1.) 12.)))) (* skoSC1 (* skoMC1 (* skoMC1 (* skoMC1 (/ (- 1.) 12.))))))))))))) (* skoMC1 (* skoMC1 (* skoMC1 (+ 2. (* skoMC1 6.)))))) (and (<= (* skoSC1 (* skoMC1 (* skoMC1 (* skoMC1 (- 2.))))) (* skoMC1 (* skoMC1 (* skoMC1 2.)))) (and (> (* skoSC1 (* skoMC1 (* skoMC1 (* skoMC1 2.)))) (* skoMC1 (* skoMC1 (* skoMC1 (- 2.))))) (and (<= skoSC1 (/ 5. 4.)) (and (<= 2. skoMC1) (and (<= 0. skoSC1) (and (> skoMC1 0.) (and (<= 0. skoMC1) (and (> (* skoSC1 skoMC1) (* skoMC1 (- 1.))) (and (<= (* skoSC1 (* skoMC1 (- 1.))) skoMC1) (and (<= (* skoSC1 (+ (* skoMC1 (+ 1. (* skoMC1 (- 3.)))) (* skoSC1 (+ (* skoMC1 (+ 2. (* skoMC1 3.))) (* skoSC1 (+ (* skoMC1 skoMC1) (* skoSC1 (* skoMC1 (/ (- 1.) 12.))))))))) (* skoMC1 (+ 2. (* skoMC1 5.)))) (and (<= (* skoSC1 (+ (* skoMC1 (+ 1. (* skoMC1 (- 3.)))) (* skoSC1 (+ (* skoMC1 (+ 2. (* skoMC1 3.))) (* skoSC1 (+ (* skoMC1 (+ (/ (- 1.) 6.) skoMC1)) (* skoSC1 (* skoMC1 (/ (- 1.) 4.))))))))) (* skoMC1 (+ 2. (* skoMC1 5.)))) (and (> (* skoSC1 (+ (* skoMC1 (+ (- 1.) (* skoMC1 3.))) (* skoSC1 (+ (* skoMC1 (+ (- 2.) (* skoMC1 (- 3.)))) (* skoSC1 (+ (* skoMC1 (* skoMC1 (- 1.))) (* skoSC1 (* skoMC1 (/ 1. 12.))))))))) (* skoMC1 (+ (- 2.) (* skoMC1 (- 5.))))) (> (* skoSC1 (+ (* skoMC1 (+ (- 1.) (* skoMC1 3.))) (* skoSC1 (+ (* skoMC1 (+ (- 2.) (* skoMC1 (- 3.)))) (* skoSC1 (+ (* skoMC1 (+ (/ 1. 6.) (* skoMC1 (- 1.)))) (* skoSC1 (* skoMC1 (/ 1. 4.))))))))) (* skoMC1 (+ (- 2.) (* skoMC1 (- 5.))))))))))))))))))))))

% In GRF format:
(sequent " MetiTarski formula " (antecedent (<= (* skoMC1 (* skoMC1 (* skoMC1 (- 1.)))) 0.) (!= (* skoMC1 skoMC1) 0.) (!= skoMC1 0.) (<= (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (+ (- 2.) (* skoMC1 (- 12.)))))) (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (+ 1. (* skoMC1 (- 6.)))))) (* skoSC1 (+ (* skoMC1 (* skoMC1 skoMC1)) (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (/ (- 1.) 12.)))) (* skoSC1 (* skoMC1 (* skoMC1 (* skoMC1 (/ (- 1.) 12.))))))))))))) (* skoMC1 (* skoMC1 (* skoMC1 (+ 2. (* skoMC1 6.)))))) (<= (* skoSC1 (* skoMC1 (* skoMC1 (* skoMC1 (- 2.))))) (* skoMC1 (* skoMC1 (* skoMC1 2.)))) (> (* skoSC1 (* skoMC1 (* skoMC1 (* skoMC1 2.)))) (* skoMC1 (* skoMC1 (* skoMC1 (- 2.))))) (<= skoSC1 (/ 5. 4.)) (<= 2. skoMC1) (<= 0. skoSC1) (> skoMC1 0.) (<= 0. skoMC1) (> (* skoSC1 skoMC1) (* skoMC1 (- 1.))) (<= (* skoSC1 (* skoMC1 (- 1.))) skoMC1) (<= (* skoSC1 (+ (* skoMC1 (+ 1. (* skoMC1 (- 3.)))) (* skoSC1 (+ (* skoMC1 (+ 2. (* skoMC1 3.))) (* skoSC1 (+ (* skoMC1 skoMC1) (* skoSC1 (* skoMC1 (/ (- 1.) 12.))))))))) (* skoMC1 (+ 2. (* skoMC1 5.)))) (<= (* skoSC1 (+ (* skoMC1 (+ 1. (* skoMC1 (- 3.)))) (* skoSC1 (+ (* skoMC1 (+ 2. (* skoMC1 3.))) (* skoSC1 (+ (* skoMC1 (+ (/ (- 1.) 6.) skoMC1)) (* skoSC1 (* skoMC1 (/ (- 1.) 4.))))))))) (* skoMC1 (+ 2. (* skoMC1 5.)))) (> (* skoSC1 (+ (* skoMC1 (+ (- 1.) (* skoMC1 3.))) (* skoSC1 (+ (* skoMC1 (+ (- 2.) (* skoMC1 (- 3.)))) (* skoSC1 (+ (* skoMC1 (* skoMC1 (- 1.))) (* skoSC1 (* skoMC1 (/ 1. 12.))))))))) (* skoMC1 (+ (- 2.) (* skoMC1 (- 5.)))))) (succedent (<= (* skoSC1 (+ (* skoMC1 (+ (- 1.) (* skoMC1 3.))) (* skoSC1 (+ (* skoMC1 (+ (- 2.) (* skoMC1 (- 3.)))) (* skoSC1 (+ (* skoMC1 (+ (/ 1. 6.) (* skoMC1 (- 1.)))) (* skoSC1 (* skoMC1 (/ 1. 4.))))))))) (* skoMC1 (+ (- 2.) (* skoMC1 (- 5.)))))))
-----[end problem]-----

-----[begin problem]-----
% In Mathematica format:
Timing[Resolve[Exists[{skoSC1,skoMC1}, And[skoMC1*skoMC1*skoMC1*-1<=0,skoSC1<=0,skoMC1*skoMC1!=0,skoMC1!=0,skoSC1*(skoMC1*skoMC1*skoMC1*(-2+skoMC1*-12)+skoSC1*(skoMC1*skoMC1*skoMC1*(1+skoMC1*-6)+skoSC1*(skoMC1*skoMC1*skoMC1+skoSC1*(skoMC1*skoMC1*skoMC1*(-1/12)+skoSC1*skoMC1*skoMC1*skoMC1*(-1/12)))))<=skoMC1*skoMC1*skoMC1*(2+skoMC1*6),skoSC1*skoMC1*skoMC1*skoMC1*-2<=skoMC1*skoMC1*skoMC1*2,skoSC1*skoMC1*skoMC1*skoMC1*2>skoMC1*skoMC1*skoMC1*-2,skoSC1<=(5/4),2<=skoMC1,0<=skoSC1,skoMC1>0,0<=skoMC1,skoSC1*skoMC1>skoMC1*-1,skoSC1*skoMC1*-1<=skoMC1,skoSC1*(skoMC1*(1+skoMC1*-3)+skoSC1*(skoMC1*(2+skoMC1*3)+skoSC1*(skoMC1*skoMC1+skoSC1*skoMC1*(-1/12))))<=skoMC1*(2+skoMC1*5),skoSC1*(skoMC1*(1+skoMC1*-3)+skoSC1*(skoMC1*(2+skoMC1*3)+skoSC1*(skoMC1*((-1/6)+skoMC1)+skoSC1*skoMC1*(-1/4))))<=skoMC1*(2+skoMC1*5),skoSC1*(skoMC1*(-1+skoMC1*3)+skoSC1*(skoMC1*(-2+skoMC1*-3)+skoSC1*(skoMC1*skoMC1*-1+skoSC1*skoMC1*(1/12))))>skoMC1*(-2+skoMC1*-5),skoSC1*(skoMC1*(-1+skoMC1*3)+skoSC1*(skoMC1*(-2+skoMC1*-3)+skoSC1*(skoMC1*((1/6)+skoMC1*-1)+skoSC1*skoMC1*(1/4))))>skoMC1*(-2+skoMC1*-5)]], Reals]]

% In QepcadB format:
(E skoSC1) (E skoMC1) [[(skoMC1 skoMC1 skoMC1 (-1))<=0]/\[[skoSC1<=0]/\[[(skoMC1 skoMC1) /=0]/\[[skoMC1 /=0]/\[[(skoSC1 ((skoMC1 skoMC1 skoMC1 (-2+(skoMC1 (-12))))+(skoSC1 ((skoMC1 skoMC1 skoMC1 (1+(skoMC1 (-6))))+(skoSC1 ((skoMC1 skoMC1 skoMC1)+(skoSC1 ((skoMC1 skoMC1 skoMC1 (-1/12))+(skoSC1 skoMC1 skoMC1 skoMC1 (-1/12))))))))))<=(skoMC1 skoMC1 skoMC1 (2+(skoMC1 (6))))]/\[[(skoSC1 skoMC1 skoMC1 skoMC1 (-2))<=(skoMC1 skoMC1 skoMC1 (2))]/\[[(skoMC1 skoMC1 skoMC1 (-2))<(skoSC1 skoMC1 skoMC1 skoMC1 (2))]/\[[skoSC1<=5/4]/\[[2<=skoMC1]/\[[0<=skoSC1]/\[[0<skoMC1]/\[[0<=skoMC1]/\[[(skoMC1 (-1))<(skoSC1 skoMC1)]/\[[(skoSC1 skoMC1 (-1))<=skoMC1]/\[[(skoSC1 ((skoMC1 (1+(skoMC1 (-3))))+(skoSC1 ((skoMC1 (2+(skoMC1 (3))))+(skoSC1 ((skoMC1 skoMC1)+(skoSC1 skoMC1 (-1/12))))))))<=(skoMC1 (2+(skoMC1 (5))))]/\[[(skoSC1 ((skoMC1 (1+(skoMC1 (-3))))+(skoSC1 ((skoMC1 (2+(skoMC1 (3))))+(skoSC1 ((skoMC1 (-1/6+skoMC1))+(skoSC1 skoMC1 (-1/4))))))))<=(skoMC1 (2+(skoMC1 (5))))]/\[[(skoMC1 (-2+(skoMC1 (-5))))<(skoSC1 ((skoMC1 (-1+(skoMC1 (3))))+(skoSC1 ((skoMC1 (-2+(skoMC1 (-3))))+(skoSC1 ((skoMC1 skoMC1 (-1))+(skoSC1 skoMC1 (1/12))))))))]/\[(skoMC1 (-2+(skoMC1 (-5))))<(skoSC1 ((skoMC1 (-1+(skoMC1 (3))))+(skoSC1 ((skoMC1 (-2+(skoMC1 (-3))))+(skoSC1 ((skoMC1 (1/6+(skoMC1 (-1))))+(skoSC1 skoMC1 (1/4))))))))]]]]]]]]]]]]]]]]]].

% In SMTLib2 format:
(declare-fun skoSC1 () Real) (declare-fun skoMC1 () Real) (assert (and (<= (* skoMC1 (* skoMC1 (* skoMC1 (- 1.)))) 0.) (and (<= skoSC1 0.) (and (!= (* skoMC1 skoMC1) 0.) (and (!= skoMC1 0.) (and (<= (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (+ (- 2.) (* skoMC1 (- 12.)))))) (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (+ 1. (* skoMC1 (- 6.)))))) (* skoSC1 (+ (* skoMC1 (* skoMC1 skoMC1)) (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (/ (- 1.) 12.)))) (* skoSC1 (* skoMC1 (* skoMC1 (* skoMC1 (/ (- 1.) 12.))))))))))))) (* skoMC1 (* skoMC1 (* skoMC1 (+ 2. (* skoMC1 6.)))))) (and (<= (* skoSC1 (* skoMC1 (* skoMC1 (* skoMC1 (- 2.))))) (* skoMC1 (* skoMC1 (* skoMC1 2.)))) (and (> (* skoSC1 (* skoMC1 (* skoMC1 (* skoMC1 2.)))) (* skoMC1 (* skoMC1 (* skoMC1 (- 2.))))) (and (<= skoSC1 (/ 5. 4.)) (and (<= 2. skoMC1) (and (<= 0. skoSC1) (and (> skoMC1 0.) (and (<= 0. skoMC1) (and (> (* skoSC1 skoMC1) (* skoMC1 (- 1.))) (and (<= (* skoSC1 (* skoMC1 (- 1.))) skoMC1) (and (<= (* skoSC1 (+ (* skoMC1 (+ 1. (* skoMC1 (- 3.)))) (* skoSC1 (+ (* skoMC1 (+ 2. (* skoMC1 3.))) (* skoSC1 (+ (* skoMC1 skoMC1) (* skoSC1 (* skoMC1 (/ (- 1.) 12.))))))))) (* skoMC1 (+ 2. (* skoMC1 5.)))) (and (<= (* skoSC1 (+ (* skoMC1 (+ 1. (* skoMC1 (- 3.)))) (* skoSC1 (+ (* skoMC1 (+ 2. (* skoMC1 3.))) (* skoSC1 (+ (* skoMC1 (+ (/ (- 1.) 6.) skoMC1)) (* skoSC1 (* skoMC1 (/ (- 1.) 4.))))))))) (* skoMC1 (+ 2. (* skoMC1 5.)))) (and (> (* skoSC1 (+ (* skoMC1 (+ (- 1.) (* skoMC1 3.))) (* skoSC1 (+ (* skoMC1 (+ (- 2.) (* skoMC1 (- 3.)))) (* skoSC1 (+ (* skoMC1 (* skoMC1 (- 1.))) (* skoSC1 (* skoMC1 (/ 1. 12.))))))))) (* skoMC1 (+ (- 2.) (* skoMC1 (- 5.))))) (> (* skoSC1 (+ (* skoMC1 (+ (- 1.) (* skoMC1 3.))) (* skoSC1 (+ (* skoMC1 (+ (- 2.) (* skoMC1 (- 3.)))) (* skoSC1 (+ (* skoMC1 (+ (/ 1. 6.) (* skoMC1 (- 1.)))) (* skoSC1 (* skoMC1 (/ 1. 4.))))))))) (* skoMC1 (+ (- 2.) (* skoMC1 (- 5.)))))))))))))))))))))))

% In GRF format:
(sequent " MetiTarski formula " (antecedent (<= (* skoMC1 (* skoMC1 (* skoMC1 (- 1.)))) 0.) (<= skoSC1 0.) (!= (* skoMC1 skoMC1) 0.) (!= skoMC1 0.) (<= (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (+ (- 2.) (* skoMC1 (- 12.)))))) (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (+ 1. (* skoMC1 (- 6.)))))) (* skoSC1 (+ (* skoMC1 (* skoMC1 skoMC1)) (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (/ (- 1.) 12.)))) (* skoSC1 (* skoMC1 (* skoMC1 (* skoMC1 (/ (- 1.) 12.))))))))))))) (* skoMC1 (* skoMC1 (* skoMC1 (+ 2. (* skoMC1 6.)))))) (<= (* skoSC1 (* skoMC1 (* skoMC1 (* skoMC1 (- 2.))))) (* skoMC1 (* skoMC1 (* skoMC1 2.)))) (> (* skoSC1 (* skoMC1 (* skoMC1 (* skoMC1 2.)))) (* skoMC1 (* skoMC1 (* skoMC1 (- 2.))))) (<= skoSC1 (/ 5. 4.)) (<= 2. skoMC1) (<= 0. skoSC1) (> skoMC1 0.) (<= 0. skoMC1) (> (* skoSC1 skoMC1) (* skoMC1 (- 1.))) (<= (* skoSC1 (* skoMC1 (- 1.))) skoMC1) (<= (* skoSC1 (+ (* skoMC1 (+ 1. (* skoMC1 (- 3.)))) (* skoSC1 (+ (* skoMC1 (+ 2. (* skoMC1 3.))) (* skoSC1 (+ (* skoMC1 skoMC1) (* skoSC1 (* skoMC1 (/ (- 1.) 12.))))))))) (* skoMC1 (+ 2. (* skoMC1 5.)))) (<= (* skoSC1 (+ (* skoMC1 (+ 1. (* skoMC1 (- 3.)))) (* skoSC1 (+ (* skoMC1 (+ 2. (* skoMC1 3.))) (* skoSC1 (+ (* skoMC1 (+ (/ (- 1.) 6.) skoMC1)) (* skoSC1 (* skoMC1 (/ (- 1.) 4.))))))))) (* skoMC1 (+ 2. (* skoMC1 5.)))) (> (* skoSC1 (+ (* skoMC1 (+ (- 1.) (* skoMC1 3.))) (* skoSC1 (+ (* skoMC1 (+ (- 2.) (* skoMC1 (- 3.)))) (* skoSC1 (+ (* skoMC1 (* skoMC1 (- 1.))) (* skoSC1 (* skoMC1 (/ 1. 12.))))))))) (* skoMC1 (+ (- 2.) (* skoMC1 (- 5.)))))) (succedent (<= (* skoSC1 (+ (* skoMC1 (+ (- 1.) (* skoMC1 3.))) (* skoSC1 (+ (* skoMC1 (+ (- 2.) (* skoMC1 (- 3.)))) (* skoSC1 (+ (* skoMC1 (+ (/ 1. 6.) (* skoMC1 (- 1.)))) (* skoSC1 (* skoMC1 (/ 1. 4.))))))))) (* skoMC1 (+ (- 2.) (* skoMC1 (- 5.)))))))
-----[end problem]-----

-----[begin problem]-----
% In Mathematica format:
Timing[Resolve[Exists[{skoSC1,skoMC1}, And[skoMC1*skoMC1*skoMC1*-1<=0,skoSC1*(skoMC1*skoMC1*skoMC1*(-2+skoMC1*-12)+skoSC1*(skoMC1*skoMC1*skoMC1*(1+skoMC1*-6)+skoSC1*(skoMC1*skoMC1*skoMC1+skoSC1*(skoMC1*skoMC1*skoMC1*(-1/12)+skoSC1*skoMC1*skoMC1*skoMC1*(-1/12)))))<=skoMC1*skoMC1*skoMC1*(2+skoMC1*6),skoSC1*skoMC1*skoMC1*skoMC1*-2<=skoMC1*skoMC1*skoMC1*2,skoSC1*skoMC1*skoMC1*skoMC1*2>skoMC1*skoMC1*skoMC1*-2,skoSC1<=(5/4),2<=skoMC1,0<=skoSC1,skoMC1>0,0<=skoMC1,skoSC1*skoMC1>skoMC1*-1,skoSC1*skoMC1*-1<=skoMC1,skoSC1*(skoMC1*(1+skoMC1*-3)+skoSC1*(skoMC1*(2+skoMC1*3)+skoSC1*(skoMC1*skoMC1+skoSC1*skoMC1*(-1/12))))<=skoMC1*(2+skoMC1*5),skoSC1*(skoMC1*(1+skoMC1*-3)+skoSC1*(skoMC1*(2+skoMC1*3)+skoSC1*(skoMC1*((-1/6)+skoMC1)+skoSC1*skoMC1*(-1/4))))<=skoMC1*(2+skoMC1*5),skoSC1*(skoMC1*(-1+skoMC1*3)+skoSC1*(skoMC1*(-2+skoMC1*-3)+skoSC1*(skoMC1*skoMC1*-1+skoSC1*skoMC1*(1/12))))>skoMC1*(-2+skoMC1*-5),skoSC1*(skoMC1*(-1+skoMC1*3)+skoSC1*(skoMC1*(-2+skoMC1*-3)+skoSC1*(skoMC1*((1/6)+skoMC1*-1)+skoSC1*skoMC1*(1/4))))>skoMC1*(-2+skoMC1*-5)]], Reals]]

% In QepcadB format:
(E skoSC1) (E skoMC1) [[(skoMC1 skoMC1 skoMC1 (-1))<=0]/\[[(skoSC1 ((skoMC1 skoMC1 skoMC1 (-2+(skoMC1 (-12))))+(skoSC1 ((skoMC1 skoMC1 skoMC1 (1+(skoMC1 (-6))))+(skoSC1 ((skoMC1 skoMC1 skoMC1)+(skoSC1 ((skoMC1 skoMC1 skoMC1 (-1/12))+(skoSC1 skoMC1 skoMC1 skoMC1 (-1/12))))))))))<=(skoMC1 skoMC1 skoMC1 (2+(skoMC1 (6))))]/\[[(skoSC1 skoMC1 skoMC1 skoMC1 (-2))<=(skoMC1 skoMC1 skoMC1 (2))]/\[[(skoMC1 skoMC1 skoMC1 (-2))<(skoSC1 skoMC1 skoMC1 skoMC1 (2))]/\[[skoSC1<=5/4]/\[[2<=skoMC1]/\[[0<=skoSC1]/\[[0<skoMC1]/\[[0<=skoMC1]/\[[(skoMC1 (-1))<(skoSC1 skoMC1)]/\[[(skoSC1 skoMC1 (-1))<=skoMC1]/\[[(skoSC1 ((skoMC1 (1+(skoMC1 (-3))))+(skoSC1 ((skoMC1 (2+(skoMC1 (3))))+(skoSC1 ((skoMC1 skoMC1)+(skoSC1 skoMC1 (-1/12))))))))<=(skoMC1 (2+(skoMC1 (5))))]/\[[(skoSC1 ((skoMC1 (1+(skoMC1 (-3))))+(skoSC1 ((skoMC1 (2+(skoMC1 (3))))+(skoSC1 ((skoMC1 (-1/6+skoMC1))+(skoSC1 skoMC1 (-1/4))))))))<=(skoMC1 (2+(skoMC1 (5))))]/\[[(skoMC1 (-2+(skoMC1 (-5))))<(skoSC1 ((skoMC1 (-1+(skoMC1 (3))))+(skoSC1 ((skoMC1 (-2+(skoMC1 (-3))))+(skoSC1 ((skoMC1 skoMC1 (-1))+(skoSC1 skoMC1 (1/12))))))))]/\[(skoMC1 (-2+(skoMC1 (-5))))<(skoSC1 ((skoMC1 (-1+(skoMC1 (3))))+(skoSC1 ((skoMC1 (-2+(skoMC1 (-3))))+(skoSC1 ((skoMC1 (1/6+(skoMC1 (-1))))+(skoSC1 skoMC1 (1/4))))))))]]]]]]]]]]]]]]].

% In SMTLib2 format:
(declare-fun skoSC1 () Real) (declare-fun skoMC1 () Real) (assert (and (<= (* skoMC1 (* skoMC1 (* skoMC1 (- 1.)))) 0.) (and (<= (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (+ (- 2.) (* skoMC1 (- 12.)))))) (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (+ 1. (* skoMC1 (- 6.)))))) (* skoSC1 (+ (* skoMC1 (* skoMC1 skoMC1)) (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (/ (- 1.) 12.)))) (* skoSC1 (* skoMC1 (* skoMC1 (* skoMC1 (/ (- 1.) 12.))))))))))))) (* skoMC1 (* skoMC1 (* skoMC1 (+ 2. (* skoMC1 6.)))))) (and (<= (* skoSC1 (* skoMC1 (* skoMC1 (* skoMC1 (- 2.))))) (* skoMC1 (* skoMC1 (* skoMC1 2.)))) (and (> (* skoSC1 (* skoMC1 (* skoMC1 (* skoMC1 2.)))) (* skoMC1 (* skoMC1 (* skoMC1 (- 2.))))) (and (<= skoSC1 (/ 5. 4.)) (and (<= 2. skoMC1) (and (<= 0. skoSC1) (and (> skoMC1 0.) (and (<= 0. skoMC1) (and (> (* skoSC1 skoMC1) (* skoMC1 (- 1.))) (and (<= (* skoSC1 (* skoMC1 (- 1.))) skoMC1) (and (<= (* skoSC1 (+ (* skoMC1 (+ 1. (* skoMC1 (- 3.)))) (* skoSC1 (+ (* skoMC1 (+ 2. (* skoMC1 3.))) (* skoSC1 (+ (* skoMC1 skoMC1) (* skoSC1 (* skoMC1 (/ (- 1.) 12.))))))))) (* skoMC1 (+ 2. (* skoMC1 5.)))) (and (<= (* skoSC1 (+ (* skoMC1 (+ 1. (* skoMC1 (- 3.)))) (* skoSC1 (+ (* skoMC1 (+ 2. (* skoMC1 3.))) (* skoSC1 (+ (* skoMC1 (+ (/ (- 1.) 6.) skoMC1)) (* skoSC1 (* skoMC1 (/ (- 1.) 4.))))))))) (* skoMC1 (+ 2. (* skoMC1 5.)))) (and (> (* skoSC1 (+ (* skoMC1 (+ (- 1.) (* skoMC1 3.))) (* skoSC1 (+ (* skoMC1 (+ (- 2.) (* skoMC1 (- 3.)))) (* skoSC1 (+ (* skoMC1 (* skoMC1 (- 1.))) (* skoSC1 (* skoMC1 (/ 1. 12.))))))))) (* skoMC1 (+ (- 2.) (* skoMC1 (- 5.))))) (> (* skoSC1 (+ (* skoMC1 (+ (- 1.) (* skoMC1 3.))) (* skoSC1 (+ (* skoMC1 (+ (- 2.) (* skoMC1 (- 3.)))) (* skoSC1 (+ (* skoMC1 (+ (/ 1. 6.) (* skoMC1 (- 1.)))) (* skoSC1 (* skoMC1 (/ 1. 4.))))))))) (* skoMC1 (+ (- 2.) (* skoMC1 (- 5.))))))))))))))))))))

% In GRF format:
(sequent " MetiTarski formula " (antecedent (<= (* skoMC1 (* skoMC1 (* skoMC1 (- 1.)))) 0.) (<= (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (+ (- 2.) (* skoMC1 (- 12.)))))) (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (+ 1. (* skoMC1 (- 6.)))))) (* skoSC1 (+ (* skoMC1 (* skoMC1 skoMC1)) (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (/ (- 1.) 12.)))) (* skoSC1 (* skoMC1 (* skoMC1 (* skoMC1 (/ (- 1.) 12.))))))))))))) (* skoMC1 (* skoMC1 (* skoMC1 (+ 2. (* skoMC1 6.)))))) (<= (* skoSC1 (* skoMC1 (* skoMC1 (* skoMC1 (- 2.))))) (* skoMC1 (* skoMC1 (* skoMC1 2.)))) (> (* skoSC1 (* skoMC1 (* skoMC1 (* skoMC1 2.)))) (* skoMC1 (* skoMC1 (* skoMC1 (- 2.))))) (<= skoSC1 (/ 5. 4.)) (<= 2. skoMC1) (<= 0. skoSC1) (> skoMC1 0.) (<= 0. skoMC1) (> (* skoSC1 skoMC1) (* skoMC1 (- 1.))) (<= (* skoSC1 (* skoMC1 (- 1.))) skoMC1) (<= (* skoSC1 (+ (* skoMC1 (+ 1. (* skoMC1 (- 3.)))) (* skoSC1 (+ (* skoMC1 (+ 2. (* skoMC1 3.))) (* skoSC1 (+ (* skoMC1 skoMC1) (* skoSC1 (* skoMC1 (/ (- 1.) 12.))))))))) (* skoMC1 (+ 2. (* skoMC1 5.)))) (<= (* skoSC1 (+ (* skoMC1 (+ 1. (* skoMC1 (- 3.)))) (* skoSC1 (+ (* skoMC1 (+ 2. (* skoMC1 3.))) (* skoSC1 (+ (* skoMC1 (+ (/ (- 1.) 6.) skoMC1)) (* skoSC1 (* skoMC1 (/ (- 1.) 4.))))))))) (* skoMC1 (+ 2. (* skoMC1 5.)))) (> (* skoSC1 (+ (* skoMC1 (+ (- 1.) (* skoMC1 3.))) (* skoSC1 (+ (* skoMC1 (+ (- 2.) (* skoMC1 (- 3.)))) (* skoSC1 (+ (* skoMC1 (* skoMC1 (- 1.))) (* skoSC1 (* skoMC1 (/ 1. 12.))))))))) (* skoMC1 (+ (- 2.) (* skoMC1 (- 5.)))))) (succedent (<= (* skoSC1 (+ (* skoMC1 (+ (- 1.) (* skoMC1 3.))) (* skoSC1 (+ (* skoMC1 (+ (- 2.) (* skoMC1 (- 3.)))) (* skoSC1 (+ (* skoMC1 (+ (/ 1. 6.) (* skoMC1 (- 1.)))) (* skoSC1 (* skoMC1 (/ 1. 4.))))))))) (* skoMC1 (+ (- 2.) (* skoMC1 (- 5.)))))))
-----[end problem]-----

-----[begin problem]-----
% In Mathematica format:
Timing[Resolve[Exists[{skoSC1,skoMC1}, And[skoSC1*skoMC1*skoMC1*skoMC1*-1<=skoMC1*skoMC1*skoMC1,skoSC1*(skoMC1*skoMC1*skoMC1*(-2+skoMC1*-12)+skoSC1*(skoMC1*skoMC1*skoMC1*(1+skoMC1*-6)+skoSC1*(skoMC1*skoMC1*skoMC1+skoSC1*(skoMC1*skoMC1*skoMC1*(-1/12)+skoSC1*skoMC1*skoMC1*skoMC1*(-1/12)))))<=skoMC1*skoMC1*skoMC1*(2+skoMC1*6),skoSC1*skoMC1*skoMC1*skoMC1*-2<=skoMC1*skoMC1*skoMC1*2,skoSC1*skoMC1*skoMC1*skoMC1*2>skoMC1*skoMC1*skoMC1*-2,skoSC1<=(5/4),2<=skoMC1,0<=skoSC1,skoMC1>0,0<=skoMC1,skoSC1*skoMC1>skoMC1*-1,skoSC1*skoMC1*-1<=skoMC1,skoSC1*(skoMC1*(1+skoMC1*-3)+skoSC1*(skoMC1*(2+skoMC1*3)+skoSC1*(skoMC1*skoMC1+skoSC1*skoMC1*(-1/12))))<=skoMC1*(2+skoMC1*5),skoSC1*(skoMC1*(1+skoMC1*-3)+skoSC1*(skoMC1*(2+skoMC1*3)+skoSC1*(skoMC1*((-1/6)+skoMC1)+skoSC1*skoMC1*(-1/4))))<=skoMC1*(2+skoMC1*5),skoSC1*(skoMC1*(-1+skoMC1*3)+skoSC1*(skoMC1*(-2+skoMC1*-3)+skoSC1*(skoMC1*skoMC1*-1+skoSC1*skoMC1*(1/12))))>skoMC1*(-2+skoMC1*-5),skoSC1*(skoMC1*(-1+skoMC1*3)+skoSC1*(skoMC1*(-2+skoMC1*-3)+skoSC1*(skoMC1*((1/6)+skoMC1*-1)+skoSC1*skoMC1*(1/4))))>skoMC1*(-2+skoMC1*-5)]], Reals]]

% In QepcadB format:
(E skoSC1) (E skoMC1) [[(skoSC1 skoMC1 skoMC1 skoMC1 (-1))<=(skoMC1 skoMC1 skoMC1)]/\[[(skoSC1 ((skoMC1 skoMC1 skoMC1 (-2+(skoMC1 (-12))))+(skoSC1 ((skoMC1 skoMC1 skoMC1 (1+(skoMC1 (-6))))+(skoSC1 ((skoMC1 skoMC1 skoMC1)+(skoSC1 ((skoMC1 skoMC1 skoMC1 (-1/12))+(skoSC1 skoMC1 skoMC1 skoMC1 (-1/12))))))))))<=(skoMC1 skoMC1 skoMC1 (2+(skoMC1 (6))))]/\[[(skoSC1 skoMC1 skoMC1 skoMC1 (-2))<=(skoMC1 skoMC1 skoMC1 (2))]/\[[(skoMC1 skoMC1 skoMC1 (-2))<(skoSC1 skoMC1 skoMC1 skoMC1 (2))]/\[[skoSC1<=5/4]/\[[2<=skoMC1]/\[[0<=skoSC1]/\[[0<skoMC1]/\[[0<=skoMC1]/\[[(skoMC1 (-1))<(skoSC1 skoMC1)]/\[[(skoSC1 skoMC1 (-1))<=skoMC1]/\[[(skoSC1 ((skoMC1 (1+(skoMC1 (-3))))+(skoSC1 ((skoMC1 (2+(skoMC1 (3))))+(skoSC1 ((skoMC1 skoMC1)+(skoSC1 skoMC1 (-1/12))))))))<=(skoMC1 (2+(skoMC1 (5))))]/\[[(skoSC1 ((skoMC1 (1+(skoMC1 (-3))))+(skoSC1 ((skoMC1 (2+(skoMC1 (3))))+(skoSC1 ((skoMC1 (-1/6+skoMC1))+(skoSC1 skoMC1 (-1/4))))))))<=(skoMC1 (2+(skoMC1 (5))))]/\[[(skoMC1 (-2+(skoMC1 (-5))))<(skoSC1 ((skoMC1 (-1+(skoMC1 (3))))+(skoSC1 ((skoMC1 (-2+(skoMC1 (-3))))+(skoSC1 ((skoMC1 skoMC1 (-1))+(skoSC1 skoMC1 (1/12))))))))]/\[(skoMC1 (-2+(skoMC1 (-5))))<(skoSC1 ((skoMC1 (-1+(skoMC1 (3))))+(skoSC1 ((skoMC1 (-2+(skoMC1 (-3))))+(skoSC1 ((skoMC1 (1/6+(skoMC1 (-1))))+(skoSC1 skoMC1 (1/4))))))))]]]]]]]]]]]]]]].

% In SMTLib2 format:
(declare-fun skoSC1 () Real) (declare-fun skoMC1 () Real) (assert (and (<= (* skoSC1 (* skoMC1 (* skoMC1 (* skoMC1 (- 1.))))) (* skoMC1 (* skoMC1 skoMC1))) (and (<= (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (+ (- 2.) (* skoMC1 (- 12.)))))) (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (+ 1. (* skoMC1 (- 6.)))))) (* skoSC1 (+ (* skoMC1 (* skoMC1 skoMC1)) (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (/ (- 1.) 12.)))) (* skoSC1 (* skoMC1 (* skoMC1 (* skoMC1 (/ (- 1.) 12.))))))))))))) (* skoMC1 (* skoMC1 (* skoMC1 (+ 2. (* skoMC1 6.)))))) (and (<= (* skoSC1 (* skoMC1 (* skoMC1 (* skoMC1 (- 2.))))) (* skoMC1 (* skoMC1 (* skoMC1 2.)))) (and (> (* skoSC1 (* skoMC1 (* skoMC1 (* skoMC1 2.)))) (* skoMC1 (* skoMC1 (* skoMC1 (- 2.))))) (and (<= skoSC1 (/ 5. 4.)) (and (<= 2. skoMC1) (and (<= 0. skoSC1) (and (> skoMC1 0.) (and (<= 0. skoMC1) (and (> (* skoSC1 skoMC1) (* skoMC1 (- 1.))) (and (<= (* skoSC1 (* skoMC1 (- 1.))) skoMC1) (and (<= (* skoSC1 (+ (* skoMC1 (+ 1. (* skoMC1 (- 3.)))) (* skoSC1 (+ (* skoMC1 (+ 2. (* skoMC1 3.))) (* skoSC1 (+ (* skoMC1 skoMC1) (* skoSC1 (* skoMC1 (/ (- 1.) 12.))))))))) (* skoMC1 (+ 2. (* skoMC1 5.)))) (and (<= (* skoSC1 (+ (* skoMC1 (+ 1. (* skoMC1 (- 3.)))) (* skoSC1 (+ (* skoMC1 (+ 2. (* skoMC1 3.))) (* skoSC1 (+ (* skoMC1 (+ (/ (- 1.) 6.) skoMC1)) (* skoSC1 (* skoMC1 (/ (- 1.) 4.))))))))) (* skoMC1 (+ 2. (* skoMC1 5.)))) (and (> (* skoSC1 (+ (* skoMC1 (+ (- 1.) (* skoMC1 3.))) (* skoSC1 (+ (* skoMC1 (+ (- 2.) (* skoMC1 (- 3.)))) (* skoSC1 (+ (* skoMC1 (* skoMC1 (- 1.))) (* skoSC1 (* skoMC1 (/ 1. 12.))))))))) (* skoMC1 (+ (- 2.) (* skoMC1 (- 5.))))) (> (* skoSC1 (+ (* skoMC1 (+ (- 1.) (* skoMC1 3.))) (* skoSC1 (+ (* skoMC1 (+ (- 2.) (* skoMC1 (- 3.)))) (* skoSC1 (+ (* skoMC1 (+ (/ 1. 6.) (* skoMC1 (- 1.)))) (* skoSC1 (* skoMC1 (/ 1. 4.))))))))) (* skoMC1 (+ (- 2.) (* skoMC1 (- 5.))))))))))))))))))))

% In GRF format:
(sequent " MetiTarski formula " (antecedent (<= (* skoSC1 (* skoMC1 (* skoMC1 (* skoMC1 (- 1.))))) (* skoMC1 (* skoMC1 skoMC1))) (<= (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (+ (- 2.) (* skoMC1 (- 12.)))))) (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (+ 1. (* skoMC1 (- 6.)))))) (* skoSC1 (+ (* skoMC1 (* skoMC1 skoMC1)) (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (/ (- 1.) 12.)))) (* skoSC1 (* skoMC1 (* skoMC1 (* skoMC1 (/ (- 1.) 12.))))))))))))) (* skoMC1 (* skoMC1 (* skoMC1 (+ 2. (* skoMC1 6.)))))) (<= (* skoSC1 (* skoMC1 (* skoMC1 (* skoMC1 (- 2.))))) (* skoMC1 (* skoMC1 (* skoMC1 2.)))) (> (* skoSC1 (* skoMC1 (* skoMC1 (* skoMC1 2.)))) (* skoMC1 (* skoMC1 (* skoMC1 (- 2.))))) (<= skoSC1 (/ 5. 4.)) (<= 2. skoMC1) (<= 0. skoSC1) (> skoMC1 0.) (<= 0. skoMC1) (> (* skoSC1 skoMC1) (* skoMC1 (- 1.))) (<= (* skoSC1 (* skoMC1 (- 1.))) skoMC1) (<= (* skoSC1 (+ (* skoMC1 (+ 1. (* skoMC1 (- 3.)))) (* skoSC1 (+ (* skoMC1 (+ 2. (* skoMC1 3.))) (* skoSC1 (+ (* skoMC1 skoMC1) (* skoSC1 (* skoMC1 (/ (- 1.) 12.))))))))) (* skoMC1 (+ 2. (* skoMC1 5.)))) (<= (* skoSC1 (+ (* skoMC1 (+ 1. (* skoMC1 (- 3.)))) (* skoSC1 (+ (* skoMC1 (+ 2. (* skoMC1 3.))) (* skoSC1 (+ (* skoMC1 (+ (/ (- 1.) 6.) skoMC1)) (* skoSC1 (* skoMC1 (/ (- 1.) 4.))))))))) (* skoMC1 (+ 2. (* skoMC1 5.)))) (> (* skoSC1 (+ (* skoMC1 (+ (- 1.) (* skoMC1 3.))) (* skoSC1 (+ (* skoMC1 (+ (- 2.) (* skoMC1 (- 3.)))) (* skoSC1 (+ (* skoMC1 (* skoMC1 (- 1.))) (* skoSC1 (* skoMC1 (/ 1. 12.))))))))) (* skoMC1 (+ (- 2.) (* skoMC1 (- 5.)))))) (succedent (<= (* skoSC1 (+ (* skoMC1 (+ (- 1.) (* skoMC1 3.))) (* skoSC1 (+ (* skoMC1 (+ (- 2.) (* skoMC1 (- 3.)))) (* skoSC1 (+ (* skoMC1 (+ (/ 1. 6.) (* skoMC1 (- 1.)))) (* skoSC1 (* skoMC1 (/ 1. 4.))))))))) (* skoMC1 (+ (- 2.) (* skoMC1 (- 5.)))))))
-----[end problem]-----

-----[begin problem]-----
% In Mathematica format:
Timing[Resolve[Exists[{skoSC1,skoMC1}, And[skoSC1*skoMC1*skoMC1*skoMC1>skoMC1*skoMC1*skoMC1*-1,skoSC1*(skoMC1*skoMC1*skoMC1*(-2+skoMC1*-12)+skoSC1*(skoMC1*skoMC1*skoMC1*(1+skoMC1*-6)+skoSC1*(skoMC1*skoMC1*skoMC1+skoSC1*(skoMC1*skoMC1*skoMC1*(-1/12)+skoSC1*skoMC1*skoMC1*skoMC1*(-1/12)))))<=skoMC1*skoMC1*skoMC1*(2+skoMC1*6),skoSC1*skoMC1*skoMC1*skoMC1*-2<=skoMC1*skoMC1*skoMC1*2,skoSC1*skoMC1*skoMC1*skoMC1*2>skoMC1*skoMC1*skoMC1*-2,skoSC1<=(5/4),2<=skoMC1,0<=skoSC1,skoMC1>0,0<=skoMC1,skoSC1*skoMC1>skoMC1*-1,skoSC1*skoMC1*-1<=skoMC1,skoSC1*(skoMC1*(1+skoMC1*-3)+skoSC1*(skoMC1*(2+skoMC1*3)+skoSC1*(skoMC1*skoMC1+skoSC1*skoMC1*(-1/12))))<=skoMC1*(2+skoMC1*5),skoSC1*(skoMC1*(1+skoMC1*-3)+skoSC1*(skoMC1*(2+skoMC1*3)+skoSC1*(skoMC1*((-1/6)+skoMC1)+skoSC1*skoMC1*(-1/4))))<=skoMC1*(2+skoMC1*5),skoSC1*(skoMC1*(-1+skoMC1*3)+skoSC1*(skoMC1*(-2+skoMC1*-3)+skoSC1*(skoMC1*skoMC1*-1+skoSC1*skoMC1*(1/12))))>skoMC1*(-2+skoMC1*-5),skoSC1*(skoMC1*(-1+skoMC1*3)+skoSC1*(skoMC1*(-2+skoMC1*-3)+skoSC1*(skoMC1*((1/6)+skoMC1*-1)+skoSC1*skoMC1*(1/4))))>skoMC1*(-2+skoMC1*-5)]], Reals]]

% In QepcadB format:
(E skoSC1) (E skoMC1) [[(skoMC1 skoMC1 skoMC1 (-1))<(skoSC1 skoMC1 skoMC1 skoMC1)]/\[[(skoSC1 ((skoMC1 skoMC1 skoMC1 (-2+(skoMC1 (-12))))+(skoSC1 ((skoMC1 skoMC1 skoMC1 (1+(skoMC1 (-6))))+(skoSC1 ((skoMC1 skoMC1 skoMC1)+(skoSC1 ((skoMC1 skoMC1 skoMC1 (-1/12))+(skoSC1 skoMC1 skoMC1 skoMC1 (-1/12))))))))))<=(skoMC1 skoMC1 skoMC1 (2+(skoMC1 (6))))]/\[[(skoSC1 skoMC1 skoMC1 skoMC1 (-2))<=(skoMC1 skoMC1 skoMC1 (2))]/\[[(skoMC1 skoMC1 skoMC1 (-2))<(skoSC1 skoMC1 skoMC1 skoMC1 (2))]/\[[skoSC1<=5/4]/\[[2<=skoMC1]/\[[0<=skoSC1]/\[[0<skoMC1]/\[[0<=skoMC1]/\[[(skoMC1 (-1))<(skoSC1 skoMC1)]/\[[(skoSC1 skoMC1 (-1))<=skoMC1]/\[[(skoSC1 ((skoMC1 (1+(skoMC1 (-3))))+(skoSC1 ((skoMC1 (2+(skoMC1 (3))))+(skoSC1 ((skoMC1 skoMC1)+(skoSC1 skoMC1 (-1/12))))))))<=(skoMC1 (2+(skoMC1 (5))))]/\[[(skoSC1 ((skoMC1 (1+(skoMC1 (-3))))+(skoSC1 ((skoMC1 (2+(skoMC1 (3))))+(skoSC1 ((skoMC1 (-1/6+skoMC1))+(skoSC1 skoMC1 (-1/4))))))))<=(skoMC1 (2+(skoMC1 (5))))]/\[[(skoMC1 (-2+(skoMC1 (-5))))<(skoSC1 ((skoMC1 (-1+(skoMC1 (3))))+(skoSC1 ((skoMC1 (-2+(skoMC1 (-3))))+(skoSC1 ((skoMC1 skoMC1 (-1))+(skoSC1 skoMC1 (1/12))))))))]/\[(skoMC1 (-2+(skoMC1 (-5))))<(skoSC1 ((skoMC1 (-1+(skoMC1 (3))))+(skoSC1 ((skoMC1 (-2+(skoMC1 (-3))))+(skoSC1 ((skoMC1 (1/6+(skoMC1 (-1))))+(skoSC1 skoMC1 (1/4))))))))]]]]]]]]]]]]]]].

% In SMTLib2 format:
(declare-fun skoSC1 () Real) (declare-fun skoMC1 () Real) (assert (and (> (* skoSC1 (* skoMC1 (* skoMC1 skoMC1))) (* skoMC1 (* skoMC1 (* skoMC1 (- 1.))))) (and (<= (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (+ (- 2.) (* skoMC1 (- 12.)))))) (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (+ 1. (* skoMC1 (- 6.)))))) (* skoSC1 (+ (* skoMC1 (* skoMC1 skoMC1)) (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (/ (- 1.) 12.)))) (* skoSC1 (* skoMC1 (* skoMC1 (* skoMC1 (/ (- 1.) 12.))))))))))))) (* skoMC1 (* skoMC1 (* skoMC1 (+ 2. (* skoMC1 6.)))))) (and (<= (* skoSC1 (* skoMC1 (* skoMC1 (* skoMC1 (- 2.))))) (* skoMC1 (* skoMC1 (* skoMC1 2.)))) (and (> (* skoSC1 (* skoMC1 (* skoMC1 (* skoMC1 2.)))) (* skoMC1 (* skoMC1 (* skoMC1 (- 2.))))) (and (<= skoSC1 (/ 5. 4.)) (and (<= 2. skoMC1) (and (<= 0. skoSC1) (and (> skoMC1 0.) (and (<= 0. skoMC1) (and (> (* skoSC1 skoMC1) (* skoMC1 (- 1.))) (and (<= (* skoSC1 (* skoMC1 (- 1.))) skoMC1) (and (<= (* skoSC1 (+ (* skoMC1 (+ 1. (* skoMC1 (- 3.)))) (* skoSC1 (+ (* skoMC1 (+ 2. (* skoMC1 3.))) (* skoSC1 (+ (* skoMC1 skoMC1) (* skoSC1 (* skoMC1 (/ (- 1.) 12.))))))))) (* skoMC1 (+ 2. (* skoMC1 5.)))) (and (<= (* skoSC1 (+ (* skoMC1 (+ 1. (* skoMC1 (- 3.)))) (* skoSC1 (+ (* skoMC1 (+ 2. (* skoMC1 3.))) (* skoSC1 (+ (* skoMC1 (+ (/ (- 1.) 6.) skoMC1)) (* skoSC1 (* skoMC1 (/ (- 1.) 4.))))))))) (* skoMC1 (+ 2. (* skoMC1 5.)))) (and (> (* skoSC1 (+ (* skoMC1 (+ (- 1.) (* skoMC1 3.))) (* skoSC1 (+ (* skoMC1 (+ (- 2.) (* skoMC1 (- 3.)))) (* skoSC1 (+ (* skoMC1 (* skoMC1 (- 1.))) (* skoSC1 (* skoMC1 (/ 1. 12.))))))))) (* skoMC1 (+ (- 2.) (* skoMC1 (- 5.))))) (> (* skoSC1 (+ (* skoMC1 (+ (- 1.) (* skoMC1 3.))) (* skoSC1 (+ (* skoMC1 (+ (- 2.) (* skoMC1 (- 3.)))) (* skoSC1 (+ (* skoMC1 (+ (/ 1. 6.) (* skoMC1 (- 1.)))) (* skoSC1 (* skoMC1 (/ 1. 4.))))))))) (* skoMC1 (+ (- 2.) (* skoMC1 (- 5.))))))))))))))))))))

% In GRF format:
(sequent " MetiTarski formula " (antecedent (> (* skoSC1 (* skoMC1 (* skoMC1 skoMC1))) (* skoMC1 (* skoMC1 (* skoMC1 (- 1.))))) (<= (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (+ (- 2.) (* skoMC1 (- 12.)))))) (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (+ 1. (* skoMC1 (- 6.)))))) (* skoSC1 (+ (* skoMC1 (* skoMC1 skoMC1)) (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (/ (- 1.) 12.)))) (* skoSC1 (* skoMC1 (* skoMC1 (* skoMC1 (/ (- 1.) 12.))))))))))))) (* skoMC1 (* skoMC1 (* skoMC1 (+ 2. (* skoMC1 6.)))))) (<= (* skoSC1 (* skoMC1 (* skoMC1 (* skoMC1 (- 2.))))) (* skoMC1 (* skoMC1 (* skoMC1 2.)))) (> (* skoSC1 (* skoMC1 (* skoMC1 (* skoMC1 2.)))) (* skoMC1 (* skoMC1 (* skoMC1 (- 2.))))) (<= skoSC1 (/ 5. 4.)) (<= 2. skoMC1) (<= 0. skoSC1) (> skoMC1 0.) (<= 0. skoMC1) (> (* skoSC1 skoMC1) (* skoMC1 (- 1.))) (<= (* skoSC1 (* skoMC1 (- 1.))) skoMC1) (<= (* skoSC1 (+ (* skoMC1 (+ 1. (* skoMC1 (- 3.)))) (* skoSC1 (+ (* skoMC1 (+ 2. (* skoMC1 3.))) (* skoSC1 (+ (* skoMC1 skoMC1) (* skoSC1 (* skoMC1 (/ (- 1.) 12.))))))))) (* skoMC1 (+ 2. (* skoMC1 5.)))) (<= (* skoSC1 (+ (* skoMC1 (+ 1. (* skoMC1 (- 3.)))) (* skoSC1 (+ (* skoMC1 (+ 2. (* skoMC1 3.))) (* skoSC1 (+ (* skoMC1 (+ (/ (- 1.) 6.) skoMC1)) (* skoSC1 (* skoMC1 (/ (- 1.) 4.))))))))) (* skoMC1 (+ 2. (* skoMC1 5.)))) (> (* skoSC1 (+ (* skoMC1 (+ (- 1.) (* skoMC1 3.))) (* skoSC1 (+ (* skoMC1 (+ (- 2.) (* skoMC1 (- 3.)))) (* skoSC1 (+ (* skoMC1 (* skoMC1 (- 1.))) (* skoSC1 (* skoMC1 (/ 1. 12.))))))))) (* skoMC1 (+ (- 2.) (* skoMC1 (- 5.)))))) (succedent (<= (* skoSC1 (+ (* skoMC1 (+ (- 1.) (* skoMC1 3.))) (* skoSC1 (+ (* skoMC1 (+ (- 2.) (* skoMC1 (- 3.)))) (* skoSC1 (+ (* skoMC1 (+ (/ 1. 6.) (* skoMC1 (- 1.)))) (* skoSC1 (* skoMC1 (/ 1. 4.))))))))) (* skoMC1 (+ (- 2.) (* skoMC1 (- 5.)))))))
-----[end problem]-----

-----[begin problem]-----
% In Mathematica format:
Timing[Resolve[Exists[{skoSC1,skoMC1}, And[skoMC1*skoMC1*skoMC1*2>0,skoSC1*skoMC1*skoMC1*skoMC1>skoMC1*skoMC1*skoMC1*-1,skoSC1*(skoMC1*skoMC1*skoMC1*(-2+skoMC1*-12)+skoSC1*(skoMC1*skoMC1*skoMC1*(1+skoMC1*-6)+skoSC1*(skoMC1*skoMC1*skoMC1+skoSC1*(skoMC1*skoMC1*skoMC1*(-1/12)+skoSC1*skoMC1*skoMC1*skoMC1*(-1/12)))))<=skoMC1*skoMC1*skoMC1*(2+skoMC1*6),skoSC1*skoMC1*skoMC1*skoMC1*-2<=skoMC1*skoMC1*skoMC1*2,skoSC1*skoMC1*skoMC1*skoMC1*2>skoMC1*skoMC1*skoMC1*-2,skoSC1<=(5/4),2<=skoMC1,0<=skoSC1,skoMC1>0,0<=skoMC1,skoSC1*skoMC1>skoMC1*-1,skoSC1*skoMC1*-1<=skoMC1,skoSC1*(skoMC1*(1+skoMC1*-3)+skoSC1*(skoMC1*(2+skoMC1*3)+skoSC1*(skoMC1*skoMC1+skoSC1*skoMC1*(-1/12))))<=skoMC1*(2+skoMC1*5),skoSC1*(skoMC1*(1+skoMC1*-3)+skoSC1*(skoMC1*(2+skoMC1*3)+skoSC1*(skoMC1*((-1/6)+skoMC1)+skoSC1*skoMC1*(-1/4))))<=skoMC1*(2+skoMC1*5),skoSC1*(skoMC1*(-1+skoMC1*3)+skoSC1*(skoMC1*(-2+skoMC1*-3)+skoSC1*(skoMC1*skoMC1*-1+skoSC1*skoMC1*(1/12))))>skoMC1*(-2+skoMC1*-5),skoSC1*(skoMC1*(-1+skoMC1*3)+skoSC1*(skoMC1*(-2+skoMC1*-3)+skoSC1*(skoMC1*((1/6)+skoMC1*-1)+skoSC1*skoMC1*(1/4))))>skoMC1*(-2+skoMC1*-5)]], Reals]]

% In QepcadB format:
(E skoSC1) (E skoMC1) [[0<(skoMC1 skoMC1 skoMC1 (2))]/\[[(skoMC1 skoMC1 skoMC1 (-1))<(skoSC1 skoMC1 skoMC1 skoMC1)]/\[[(skoSC1 ((skoMC1 skoMC1 skoMC1 (-2+(skoMC1 (-12))))+(skoSC1 ((skoMC1 skoMC1 skoMC1 (1+(skoMC1 (-6))))+(skoSC1 ((skoMC1 skoMC1 skoMC1)+(skoSC1 ((skoMC1 skoMC1 skoMC1 (-1/12))+(skoSC1 skoMC1 skoMC1 skoMC1 (-1/12))))))))))<=(skoMC1 skoMC1 skoMC1 (2+(skoMC1 (6))))]/\[[(skoSC1 skoMC1 skoMC1 skoMC1 (-2))<=(skoMC1 skoMC1 skoMC1 (2))]/\[[(skoMC1 skoMC1 skoMC1 (-2))<(skoSC1 skoMC1 skoMC1 skoMC1 (2))]/\[[skoSC1<=5/4]/\[[2<=skoMC1]/\[[0<=skoSC1]/\[[0<skoMC1]/\[[0<=skoMC1]/\[[(skoMC1 (-1))<(skoSC1 skoMC1)]/\[[(skoSC1 skoMC1 (-1))<=skoMC1]/\[[(skoSC1 ((skoMC1 (1+(skoMC1 (-3))))+(skoSC1 ((skoMC1 (2+(skoMC1 (3))))+(skoSC1 ((skoMC1 skoMC1)+(skoSC1 skoMC1 (-1/12))))))))<=(skoMC1 (2+(skoMC1 (5))))]/\[[(skoSC1 ((skoMC1 (1+(skoMC1 (-3))))+(skoSC1 ((skoMC1 (2+(skoMC1 (3))))+(skoSC1 ((skoMC1 (-1/6+skoMC1))+(skoSC1 skoMC1 (-1/4))))))))<=(skoMC1 (2+(skoMC1 (5))))]/\[[(skoMC1 (-2+(skoMC1 (-5))))<(skoSC1 ((skoMC1 (-1+(skoMC1 (3))))+(skoSC1 ((skoMC1 (-2+(skoMC1 (-3))))+(skoSC1 ((skoMC1 skoMC1 (-1))+(skoSC1 skoMC1 (1/12))))))))]/\[(skoMC1 (-2+(skoMC1 (-5))))<(skoSC1 ((skoMC1 (-1+(skoMC1 (3))))+(skoSC1 ((skoMC1 (-2+(skoMC1 (-3))))+(skoSC1 ((skoMC1 (1/6+(skoMC1 (-1))))+(skoSC1 skoMC1 (1/4))))))))]]]]]]]]]]]]]]]].

% In SMTLib2 format:
(declare-fun skoSC1 () Real) (declare-fun skoMC1 () Real) (assert (and (> (* skoMC1 (* skoMC1 (* skoMC1 2.))) 0.) (and (> (* skoSC1 (* skoMC1 (* skoMC1 skoMC1))) (* skoMC1 (* skoMC1 (* skoMC1 (- 1.))))) (and (<= (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (+ (- 2.) (* skoMC1 (- 12.)))))) (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (+ 1. (* skoMC1 (- 6.)))))) (* skoSC1 (+ (* skoMC1 (* skoMC1 skoMC1)) (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (/ (- 1.) 12.)))) (* skoSC1 (* skoMC1 (* skoMC1 (* skoMC1 (/ (- 1.) 12.))))))))))))) (* skoMC1 (* skoMC1 (* skoMC1 (+ 2. (* skoMC1 6.)))))) (and (<= (* skoSC1 (* skoMC1 (* skoMC1 (* skoMC1 (- 2.))))) (* skoMC1 (* skoMC1 (* skoMC1 2.)))) (and (> (* skoSC1 (* skoMC1 (* skoMC1 (* skoMC1 2.)))) (* skoMC1 (* skoMC1 (* skoMC1 (- 2.))))) (and (<= skoSC1 (/ 5. 4.)) (and (<= 2. skoMC1) (and (<= 0. skoSC1) (and (> skoMC1 0.) (and (<= 0. skoMC1) (and (> (* skoSC1 skoMC1) (* skoMC1 (- 1.))) (and (<= (* skoSC1 (* skoMC1 (- 1.))) skoMC1) (and (<= (* skoSC1 (+ (* skoMC1 (+ 1. (* skoMC1 (- 3.)))) (* skoSC1 (+ (* skoMC1 (+ 2. (* skoMC1 3.))) (* skoSC1 (+ (* skoMC1 skoMC1) (* skoSC1 (* skoMC1 (/ (- 1.) 12.))))))))) (* skoMC1 (+ 2. (* skoMC1 5.)))) (and (<= (* skoSC1 (+ (* skoMC1 (+ 1. (* skoMC1 (- 3.)))) (* skoSC1 (+ (* skoMC1 (+ 2. (* skoMC1 3.))) (* skoSC1 (+ (* skoMC1 (+ (/ (- 1.) 6.) skoMC1)) (* skoSC1 (* skoMC1 (/ (- 1.) 4.))))))))) (* skoMC1 (+ 2. (* skoMC1 5.)))) (and (> (* skoSC1 (+ (* skoMC1 (+ (- 1.) (* skoMC1 3.))) (* skoSC1 (+ (* skoMC1 (+ (- 2.) (* skoMC1 (- 3.)))) (* skoSC1 (+ (* skoMC1 (* skoMC1 (- 1.))) (* skoSC1 (* skoMC1 (/ 1. 12.))))))))) (* skoMC1 (+ (- 2.) (* skoMC1 (- 5.))))) (> (* skoSC1 (+ (* skoMC1 (+ (- 1.) (* skoMC1 3.))) (* skoSC1 (+ (* skoMC1 (+ (- 2.) (* skoMC1 (- 3.)))) (* skoSC1 (+ (* skoMC1 (+ (/ 1. 6.) (* skoMC1 (- 1.)))) (* skoSC1 (* skoMC1 (/ 1. 4.))))))))) (* skoMC1 (+ (- 2.) (* skoMC1 (- 5.)))))))))))))))))))))

% In GRF format:
(sequent " MetiTarski formula " (antecedent (> (* skoMC1 (* skoMC1 (* skoMC1 2.))) 0.) (> (* skoSC1 (* skoMC1 (* skoMC1 skoMC1))) (* skoMC1 (* skoMC1 (* skoMC1 (- 1.))))) (<= (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (+ (- 2.) (* skoMC1 (- 12.)))))) (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (+ 1. (* skoMC1 (- 6.)))))) (* skoSC1 (+ (* skoMC1 (* skoMC1 skoMC1)) (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (/ (- 1.) 12.)))) (* skoSC1 (* skoMC1 (* skoMC1 (* skoMC1 (/ (- 1.) 12.))))))))))))) (* skoMC1 (* skoMC1 (* skoMC1 (+ 2. (* skoMC1 6.)))))) (<= (* skoSC1 (* skoMC1 (* skoMC1 (* skoMC1 (- 2.))))) (* skoMC1 (* skoMC1 (* skoMC1 2.)))) (> (* skoSC1 (* skoMC1 (* skoMC1 (* skoMC1 2.)))) (* skoMC1 (* skoMC1 (* skoMC1 (- 2.))))) (<= skoSC1 (/ 5. 4.)) (<= 2. skoMC1) (<= 0. skoSC1) (> skoMC1 0.) (<= 0. skoMC1) (> (* skoSC1 skoMC1) (* skoMC1 (- 1.))) (<= (* skoSC1 (* skoMC1 (- 1.))) skoMC1) (<= (* skoSC1 (+ (* skoMC1 (+ 1. (* skoMC1 (- 3.)))) (* skoSC1 (+ (* skoMC1 (+ 2. (* skoMC1 3.))) (* skoSC1 (+ (* skoMC1 skoMC1) (* skoSC1 (* skoMC1 (/ (- 1.) 12.))))))))) (* skoMC1 (+ 2. (* skoMC1 5.)))) (<= (* skoSC1 (+ (* skoMC1 (+ 1. (* skoMC1 (- 3.)))) (* skoSC1 (+ (* skoMC1 (+ 2. (* skoMC1 3.))) (* skoSC1 (+ (* skoMC1 (+ (/ (- 1.) 6.) skoMC1)) (* skoSC1 (* skoMC1 (/ (- 1.) 4.))))))))) (* skoMC1 (+ 2. (* skoMC1 5.)))) (> (* skoSC1 (+ (* skoMC1 (+ (- 1.) (* skoMC1 3.))) (* skoSC1 (+ (* skoMC1 (+ (- 2.) (* skoMC1 (- 3.)))) (* skoSC1 (+ (* skoMC1 (* skoMC1 (- 1.))) (* skoSC1 (* skoMC1 (/ 1. 12.))))))))) (* skoMC1 (+ (- 2.) (* skoMC1 (- 5.)))))) (succedent (<= (* skoSC1 (+ (* skoMC1 (+ (- 1.) (* skoMC1 3.))) (* skoSC1 (+ (* skoMC1 (+ (- 2.) (* skoMC1 (- 3.)))) (* skoSC1 (+ (* skoMC1 (+ (/ 1. 6.) (* skoMC1 (- 1.)))) (* skoSC1 (* skoMC1 (/ 1. 4.))))))))) (* skoMC1 (+ (- 2.) (* skoMC1 (- 5.)))))))
-----[end problem]-----

-----[begin problem]-----
% In Mathematica format:
Timing[Resolve[Exists[{skoSC1,skoMC1}, And[skoMC1*skoMC1*skoMC1*-2<=0,skoSC1*(skoMC1*skoMC1*skoMC1*(-2+skoMC1*-12)+skoSC1*(skoMC1*skoMC1*skoMC1*(1+skoMC1*-6)+skoSC1*(skoMC1*skoMC1*skoMC1+skoSC1*(skoMC1*skoMC1*skoMC1*(-1/12)+skoSC1*skoMC1*skoMC1*skoMC1*(-1/12)))))<=skoMC1*skoMC1*skoMC1*(2+skoMC1*6),skoSC1*skoMC1*skoMC1*skoMC1*-2<=skoMC1*skoMC1*skoMC1*2,skoSC1*skoMC1*skoMC1*skoMC1*2>skoMC1*skoMC1*skoMC1*-2,skoSC1<=(5/4),2<=skoMC1,0<=skoSC1,skoMC1>0,0<=skoMC1,skoSC1*skoMC1>skoMC1*-1,skoSC1*skoMC1*-1<=skoMC1,skoSC1*(skoMC1*(1+skoMC1*-3)+skoSC1*(skoMC1*(2+skoMC1*3)+skoSC1*(skoMC1*skoMC1+skoSC1*skoMC1*(-1/12))))<=skoMC1*(2+skoMC1*5),skoSC1*(skoMC1*(1+skoMC1*-3)+skoSC1*(skoMC1*(2+skoMC1*3)+skoSC1*(skoMC1*((-1/6)+skoMC1)+skoSC1*skoMC1*(-1/4))))<=skoMC1*(2+skoMC1*5),skoSC1*(skoMC1*(-1+skoMC1*3)+skoSC1*(skoMC1*(-2+skoMC1*-3)+skoSC1*(skoMC1*skoMC1*-1+skoSC1*skoMC1*(1/12))))>skoMC1*(-2+skoMC1*-5),skoSC1*(skoMC1*(-1+skoMC1*3)+skoSC1*(skoMC1*(-2+skoMC1*-3)+skoSC1*(skoMC1*((1/6)+skoMC1*-1)+skoSC1*skoMC1*(1/4))))>skoMC1*(-2+skoMC1*-5)]], Reals]]

% In QepcadB format:
(E skoSC1) (E skoMC1) [[(skoMC1 skoMC1 skoMC1 (-2))<=0]/\[[(skoSC1 ((skoMC1 skoMC1 skoMC1 (-2+(skoMC1 (-12))))+(skoSC1 ((skoMC1 skoMC1 skoMC1 (1+(skoMC1 (-6))))+(skoSC1 ((skoMC1 skoMC1 skoMC1)+(skoSC1 ((skoMC1 skoMC1 skoMC1 (-1/12))+(skoSC1 skoMC1 skoMC1 skoMC1 (-1/12))))))))))<=(skoMC1 skoMC1 skoMC1 (2+(skoMC1 (6))))]/\[[(skoSC1 skoMC1 skoMC1 skoMC1 (-2))<=(skoMC1 skoMC1 skoMC1 (2))]/\[[(skoMC1 skoMC1 skoMC1 (-2))<(skoSC1 skoMC1 skoMC1 skoMC1 (2))]/\[[skoSC1<=5/4]/\[[2<=skoMC1]/\[[0<=skoSC1]/\[[0<skoMC1]/\[[0<=skoMC1]/\[[(skoMC1 (-1))<(skoSC1 skoMC1)]/\[[(skoSC1 skoMC1 (-1))<=skoMC1]/\[[(skoSC1 ((skoMC1 (1+(skoMC1 (-3))))+(skoSC1 ((skoMC1 (2+(skoMC1 (3))))+(skoSC1 ((skoMC1 skoMC1)+(skoSC1 skoMC1 (-1/12))))))))<=(skoMC1 (2+(skoMC1 (5))))]/\[[(skoSC1 ((skoMC1 (1+(skoMC1 (-3))))+(skoSC1 ((skoMC1 (2+(skoMC1 (3))))+(skoSC1 ((skoMC1 (-1/6+skoMC1))+(skoSC1 skoMC1 (-1/4))))))))<=(skoMC1 (2+(skoMC1 (5))))]/\[[(skoMC1 (-2+(skoMC1 (-5))))<(skoSC1 ((skoMC1 (-1+(skoMC1 (3))))+(skoSC1 ((skoMC1 (-2+(skoMC1 (-3))))+(skoSC1 ((skoMC1 skoMC1 (-1))+(skoSC1 skoMC1 (1/12))))))))]/\[(skoMC1 (-2+(skoMC1 (-5))))<(skoSC1 ((skoMC1 (-1+(skoMC1 (3))))+(skoSC1 ((skoMC1 (-2+(skoMC1 (-3))))+(skoSC1 ((skoMC1 (1/6+(skoMC1 (-1))))+(skoSC1 skoMC1 (1/4))))))))]]]]]]]]]]]]]]].

% In SMTLib2 format:
(declare-fun skoSC1 () Real) (declare-fun skoMC1 () Real) (assert (and (<= (* skoMC1 (* skoMC1 (* skoMC1 (- 2.)))) 0.) (and (<= (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (+ (- 2.) (* skoMC1 (- 12.)))))) (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (+ 1. (* skoMC1 (- 6.)))))) (* skoSC1 (+ (* skoMC1 (* skoMC1 skoMC1)) (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (/ (- 1.) 12.)))) (* skoSC1 (* skoMC1 (* skoMC1 (* skoMC1 (/ (- 1.) 12.))))))))))))) (* skoMC1 (* skoMC1 (* skoMC1 (+ 2. (* skoMC1 6.)))))) (and (<= (* skoSC1 (* skoMC1 (* skoMC1 (* skoMC1 (- 2.))))) (* skoMC1 (* skoMC1 (* skoMC1 2.)))) (and (> (* skoSC1 (* skoMC1 (* skoMC1 (* skoMC1 2.)))) (* skoMC1 (* skoMC1 (* skoMC1 (- 2.))))) (and (<= skoSC1 (/ 5. 4.)) (and (<= 2. skoMC1) (and (<= 0. skoSC1) (and (> skoMC1 0.) (and (<= 0. skoMC1) (and (> (* skoSC1 skoMC1) (* skoMC1 (- 1.))) (and (<= (* skoSC1 (* skoMC1 (- 1.))) skoMC1) (and (<= (* skoSC1 (+ (* skoMC1 (+ 1. (* skoMC1 (- 3.)))) (* skoSC1 (+ (* skoMC1 (+ 2. (* skoMC1 3.))) (* skoSC1 (+ (* skoMC1 skoMC1) (* skoSC1 (* skoMC1 (/ (- 1.) 12.))))))))) (* skoMC1 (+ 2. (* skoMC1 5.)))) (and (<= (* skoSC1 (+ (* skoMC1 (+ 1. (* skoMC1 (- 3.)))) (* skoSC1 (+ (* skoMC1 (+ 2. (* skoMC1 3.))) (* skoSC1 (+ (* skoMC1 (+ (/ (- 1.) 6.) skoMC1)) (* skoSC1 (* skoMC1 (/ (- 1.) 4.))))))))) (* skoMC1 (+ 2. (* skoMC1 5.)))) (and (> (* skoSC1 (+ (* skoMC1 (+ (- 1.) (* skoMC1 3.))) (* skoSC1 (+ (* skoMC1 (+ (- 2.) (* skoMC1 (- 3.)))) (* skoSC1 (+ (* skoMC1 (* skoMC1 (- 1.))) (* skoSC1 (* skoMC1 (/ 1. 12.))))))))) (* skoMC1 (+ (- 2.) (* skoMC1 (- 5.))))) (> (* skoSC1 (+ (* skoMC1 (+ (- 1.) (* skoMC1 3.))) (* skoSC1 (+ (* skoMC1 (+ (- 2.) (* skoMC1 (- 3.)))) (* skoSC1 (+ (* skoMC1 (+ (/ 1. 6.) (* skoMC1 (- 1.)))) (* skoSC1 (* skoMC1 (/ 1. 4.))))))))) (* skoMC1 (+ (- 2.) (* skoMC1 (- 5.))))))))))))))))))))

% In GRF format:
(sequent " MetiTarski formula " (antecedent (<= (* skoMC1 (* skoMC1 (* skoMC1 (- 2.)))) 0.) (<= (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (+ (- 2.) (* skoMC1 (- 12.)))))) (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (+ 1. (* skoMC1 (- 6.)))))) (* skoSC1 (+ (* skoMC1 (* skoMC1 skoMC1)) (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (/ (- 1.) 12.)))) (* skoSC1 (* skoMC1 (* skoMC1 (* skoMC1 (/ (- 1.) 12.))))))))))))) (* skoMC1 (* skoMC1 (* skoMC1 (+ 2. (* skoMC1 6.)))))) (<= (* skoSC1 (* skoMC1 (* skoMC1 (* skoMC1 (- 2.))))) (* skoMC1 (* skoMC1 (* skoMC1 2.)))) (> (* skoSC1 (* skoMC1 (* skoMC1 (* skoMC1 2.)))) (* skoMC1 (* skoMC1 (* skoMC1 (- 2.))))) (<= skoSC1 (/ 5. 4.)) (<= 2. skoMC1) (<= 0. skoSC1) (> skoMC1 0.) (<= 0. skoMC1) (> (* skoSC1 skoMC1) (* skoMC1 (- 1.))) (<= (* skoSC1 (* skoMC1 (- 1.))) skoMC1) (<= (* skoSC1 (+ (* skoMC1 (+ 1. (* skoMC1 (- 3.)))) (* skoSC1 (+ (* skoMC1 (+ 2. (* skoMC1 3.))) (* skoSC1 (+ (* skoMC1 skoMC1) (* skoSC1 (* skoMC1 (/ (- 1.) 12.))))))))) (* skoMC1 (+ 2. (* skoMC1 5.)))) (<= (* skoSC1 (+ (* skoMC1 (+ 1. (* skoMC1 (- 3.)))) (* skoSC1 (+ (* skoMC1 (+ 2. (* skoMC1 3.))) (* skoSC1 (+ (* skoMC1 (+ (/ (- 1.) 6.) skoMC1)) (* skoSC1 (* skoMC1 (/ (- 1.) 4.))))))))) (* skoMC1 (+ 2. (* skoMC1 5.)))) (> (* skoSC1 (+ (* skoMC1 (+ (- 1.) (* skoMC1 3.))) (* skoSC1 (+ (* skoMC1 (+ (- 2.) (* skoMC1 (- 3.)))) (* skoSC1 (+ (* skoMC1 (* skoMC1 (- 1.))) (* skoSC1 (* skoMC1 (/ 1. 12.))))))))) (* skoMC1 (+ (- 2.) (* skoMC1 (- 5.)))))) (succedent (<= (* skoSC1 (+ (* skoMC1 (+ (- 1.) (* skoMC1 3.))) (* skoSC1 (+ (* skoMC1 (+ (- 2.) (* skoMC1 (- 3.)))) (* skoSC1 (+ (* skoMC1 (+ (/ 1. 6.) (* skoMC1 (- 1.)))) (* skoSC1 (* skoMC1 (/ 1. 4.))))))))) (* skoMC1 (+ (- 2.) (* skoMC1 (- 5.)))))))
-----[end problem]-----

-----[begin problem]-----
% In Mathematica format:
Timing[Resolve[Exists[{skoSC1,skoMC1}, And[skoMC1*skoMC1*skoMC1*2>0,skoSC1*(skoMC1*skoMC1*skoMC1*(-2+skoMC1*-12)+skoSC1*(skoMC1*skoMC1*skoMC1*(1+skoMC1*-6)+skoSC1*(skoMC1*skoMC1*skoMC1+skoSC1*(skoMC1*skoMC1*skoMC1*(-1/12)+skoSC1*skoMC1*skoMC1*skoMC1*(-1/12)))))<=skoMC1*skoMC1*skoMC1*(2+skoMC1*6),skoSC1*skoMC1*skoMC1*skoMC1*-2<=skoMC1*skoMC1*skoMC1*2,skoSC1*skoMC1*skoMC1*skoMC1*2>skoMC1*skoMC1*skoMC1*-2,skoSC1<=(5/4),2<=skoMC1,0<=skoSC1,skoMC1>0,0<=skoMC1,skoSC1*skoMC1>skoMC1*-1,skoSC1*skoMC1*-1<=skoMC1,skoSC1*(skoMC1*(1+skoMC1*-3)+skoSC1*(skoMC1*(2+skoMC1*3)+skoSC1*(skoMC1*skoMC1+skoSC1*skoMC1*(-1/12))))<=skoMC1*(2+skoMC1*5),skoSC1*(skoMC1*(1+skoMC1*-3)+skoSC1*(skoMC1*(2+skoMC1*3)+skoSC1*(skoMC1*((-1/6)+skoMC1)+skoSC1*skoMC1*(-1/4))))<=skoMC1*(2+skoMC1*5),skoSC1*(skoMC1*(-1+skoMC1*3)+skoSC1*(skoMC1*(-2+skoMC1*-3)+skoSC1*(skoMC1*skoMC1*-1+skoSC1*skoMC1*(1/12))))>skoMC1*(-2+skoMC1*-5),skoSC1*(skoMC1*(-1+skoMC1*3)+skoSC1*(skoMC1*(-2+skoMC1*-3)+skoSC1*(skoMC1*((1/6)+skoMC1*-1)+skoSC1*skoMC1*(1/4))))>skoMC1*(-2+skoMC1*-5)]], Reals]]

% In QepcadB format:
(E skoSC1) (E skoMC1) [[0<(skoMC1 skoMC1 skoMC1 (2))]/\[[(skoSC1 ((skoMC1 skoMC1 skoMC1 (-2+(skoMC1 (-12))))+(skoSC1 ((skoMC1 skoMC1 skoMC1 (1+(skoMC1 (-6))))+(skoSC1 ((skoMC1 skoMC1 skoMC1)+(skoSC1 ((skoMC1 skoMC1 skoMC1 (-1/12))+(skoSC1 skoMC1 skoMC1 skoMC1 (-1/12))))))))))<=(skoMC1 skoMC1 skoMC1 (2+(skoMC1 (6))))]/\[[(skoSC1 skoMC1 skoMC1 skoMC1 (-2))<=(skoMC1 skoMC1 skoMC1 (2))]/\[[(skoMC1 skoMC1 skoMC1 (-2))<(skoSC1 skoMC1 skoMC1 skoMC1 (2))]/\[[skoSC1<=5/4]/\[[2<=skoMC1]/\[[0<=skoSC1]/\[[0<skoMC1]/\[[0<=skoMC1]/\[[(skoMC1 (-1))<(skoSC1 skoMC1)]/\[[(skoSC1 skoMC1 (-1))<=skoMC1]/\[[(skoSC1 ((skoMC1 (1+(skoMC1 (-3))))+(skoSC1 ((skoMC1 (2+(skoMC1 (3))))+(skoSC1 ((skoMC1 skoMC1)+(skoSC1 skoMC1 (-1/12))))))))<=(skoMC1 (2+(skoMC1 (5))))]/\[[(skoSC1 ((skoMC1 (1+(skoMC1 (-3))))+(skoSC1 ((skoMC1 (2+(skoMC1 (3))))+(skoSC1 ((skoMC1 (-1/6+skoMC1))+(skoSC1 skoMC1 (-1/4))))))))<=(skoMC1 (2+(skoMC1 (5))))]/\[[(skoMC1 (-2+(skoMC1 (-5))))<(skoSC1 ((skoMC1 (-1+(skoMC1 (3))))+(skoSC1 ((skoMC1 (-2+(skoMC1 (-3))))+(skoSC1 ((skoMC1 skoMC1 (-1))+(skoSC1 skoMC1 (1/12))))))))]/\[(skoMC1 (-2+(skoMC1 (-5))))<(skoSC1 ((skoMC1 (-1+(skoMC1 (3))))+(skoSC1 ((skoMC1 (-2+(skoMC1 (-3))))+(skoSC1 ((skoMC1 (1/6+(skoMC1 (-1))))+(skoSC1 skoMC1 (1/4))))))))]]]]]]]]]]]]]]].

% In SMTLib2 format:
(declare-fun skoSC1 () Real) (declare-fun skoMC1 () Real) (assert (and (> (* skoMC1 (* skoMC1 (* skoMC1 2.))) 0.) (and (<= (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (+ (- 2.) (* skoMC1 (- 12.)))))) (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (+ 1. (* skoMC1 (- 6.)))))) (* skoSC1 (+ (* skoMC1 (* skoMC1 skoMC1)) (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (/ (- 1.) 12.)))) (* skoSC1 (* skoMC1 (* skoMC1 (* skoMC1 (/ (- 1.) 12.))))))))))))) (* skoMC1 (* skoMC1 (* skoMC1 (+ 2. (* skoMC1 6.)))))) (and (<= (* skoSC1 (* skoMC1 (* skoMC1 (* skoMC1 (- 2.))))) (* skoMC1 (* skoMC1 (* skoMC1 2.)))) (and (> (* skoSC1 (* skoMC1 (* skoMC1 (* skoMC1 2.)))) (* skoMC1 (* skoMC1 (* skoMC1 (- 2.))))) (and (<= skoSC1 (/ 5. 4.)) (and (<= 2. skoMC1) (and (<= 0. skoSC1) (and (> skoMC1 0.) (and (<= 0. skoMC1) (and (> (* skoSC1 skoMC1) (* skoMC1 (- 1.))) (and (<= (* skoSC1 (* skoMC1 (- 1.))) skoMC1) (and (<= (* skoSC1 (+ (* skoMC1 (+ 1. (* skoMC1 (- 3.)))) (* skoSC1 (+ (* skoMC1 (+ 2. (* skoMC1 3.))) (* skoSC1 (+ (* skoMC1 skoMC1) (* skoSC1 (* skoMC1 (/ (- 1.) 12.))))))))) (* skoMC1 (+ 2. (* skoMC1 5.)))) (and (<= (* skoSC1 (+ (* skoMC1 (+ 1. (* skoMC1 (- 3.)))) (* skoSC1 (+ (* skoMC1 (+ 2. (* skoMC1 3.))) (* skoSC1 (+ (* skoMC1 (+ (/ (- 1.) 6.) skoMC1)) (* skoSC1 (* skoMC1 (/ (- 1.) 4.))))))))) (* skoMC1 (+ 2. (* skoMC1 5.)))) (and (> (* skoSC1 (+ (* skoMC1 (+ (- 1.) (* skoMC1 3.))) (* skoSC1 (+ (* skoMC1 (+ (- 2.) (* skoMC1 (- 3.)))) (* skoSC1 (+ (* skoMC1 (* skoMC1 (- 1.))) (* skoSC1 (* skoMC1 (/ 1. 12.))))))))) (* skoMC1 (+ (- 2.) (* skoMC1 (- 5.))))) (> (* skoSC1 (+ (* skoMC1 (+ (- 1.) (* skoMC1 3.))) (* skoSC1 (+ (* skoMC1 (+ (- 2.) (* skoMC1 (- 3.)))) (* skoSC1 (+ (* skoMC1 (+ (/ 1. 6.) (* skoMC1 (- 1.)))) (* skoSC1 (* skoMC1 (/ 1. 4.))))))))) (* skoMC1 (+ (- 2.) (* skoMC1 (- 5.))))))))))))))))))))

% In GRF format:
(sequent " MetiTarski formula " (antecedent (> (* skoMC1 (* skoMC1 (* skoMC1 2.))) 0.) (<= (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (+ (- 2.) (* skoMC1 (- 12.)))))) (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (+ 1. (* skoMC1 (- 6.)))))) (* skoSC1 (+ (* skoMC1 (* skoMC1 skoMC1)) (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (/ (- 1.) 12.)))) (* skoSC1 (* skoMC1 (* skoMC1 (* skoMC1 (/ (- 1.) 12.))))))))))))) (* skoMC1 (* skoMC1 (* skoMC1 (+ 2. (* skoMC1 6.)))))) (<= (* skoSC1 (* skoMC1 (* skoMC1 (* skoMC1 (- 2.))))) (* skoMC1 (* skoMC1 (* skoMC1 2.)))) (> (* skoSC1 (* skoMC1 (* skoMC1 (* skoMC1 2.)))) (* skoMC1 (* skoMC1 (* skoMC1 (- 2.))))) (<= skoSC1 (/ 5. 4.)) (<= 2. skoMC1) (<= 0. skoSC1) (> skoMC1 0.) (<= 0. skoMC1) (> (* skoSC1 skoMC1) (* skoMC1 (- 1.))) (<= (* skoSC1 (* skoMC1 (- 1.))) skoMC1) (<= (* skoSC1 (+ (* skoMC1 (+ 1. (* skoMC1 (- 3.)))) (* skoSC1 (+ (* skoMC1 (+ 2. (* skoMC1 3.))) (* skoSC1 (+ (* skoMC1 skoMC1) (* skoSC1 (* skoMC1 (/ (- 1.) 12.))))))))) (* skoMC1 (+ 2. (* skoMC1 5.)))) (<= (* skoSC1 (+ (* skoMC1 (+ 1. (* skoMC1 (- 3.)))) (* skoSC1 (+ (* skoMC1 (+ 2. (* skoMC1 3.))) (* skoSC1 (+ (* skoMC1 (+ (/ (- 1.) 6.) skoMC1)) (* skoSC1 (* skoMC1 (/ (- 1.) 4.))))))))) (* skoMC1 (+ 2. (* skoMC1 5.)))) (> (* skoSC1 (+ (* skoMC1 (+ (- 1.) (* skoMC1 3.))) (* skoSC1 (+ (* skoMC1 (+ (- 2.) (* skoMC1 (- 3.)))) (* skoSC1 (+ (* skoMC1 (* skoMC1 (- 1.))) (* skoSC1 (* skoMC1 (/ 1. 12.))))))))) (* skoMC1 (+ (- 2.) (* skoMC1 (- 5.)))))) (succedent (<= (* skoSC1 (+ (* skoMC1 (+ (- 1.) (* skoMC1 3.))) (* skoSC1 (+ (* skoMC1 (+ (- 2.) (* skoMC1 (- 3.)))) (* skoSC1 (+ (* skoMC1 (+ (/ 1. 6.) (* skoMC1 (- 1.)))) (* skoSC1 (* skoMC1 (/ 1. 4.))))))))) (* skoMC1 (+ (- 2.) (* skoMC1 (- 5.)))))))
-----[end problem]-----

-----[begin problem]-----
% In Mathematica format:
Timing[Resolve[Exists[{skoSC1,skoMC1}, And[skoMC1*skoMC1*skoMC1*2>0,skoSC1*(skoMC1*skoMC1*skoMC1*(-2+skoMC1*-12)+skoSC1*(skoMC1*skoMC1*skoMC1*(1+skoMC1*-6)+skoSC1*(skoMC1*skoMC1*skoMC1+skoSC1*(skoMC1*skoMC1*skoMC1*(-1/12)+skoSC1*skoMC1*skoMC1*skoMC1*(-1/12)))))<=skoMC1*skoMC1*skoMC1*(2+skoMC1*6),skoSC1*skoMC1*skoMC1*skoMC1*-2<=skoMC1*skoMC1*skoMC1*2,skoSC1*skoMC1*skoMC1*skoMC1*2>skoMC1*skoMC1*skoMC1*-2,skoSC1<=(5/4),2<=skoMC1,0<=skoSC1,skoMC1>0,0<=skoMC1,skoSC1*skoMC1>skoMC1*-1,skoSC1*skoMC1*-1<=skoMC1,skoSC1*(skoMC1*(1+skoMC1*-3)+skoSC1*(skoMC1*(2+skoMC1*3)+skoSC1*(skoMC1*skoMC1+skoSC1*skoMC1*(-1/12))))<=skoMC1*(2+skoMC1*5),skoSC1*(skoMC1*(1+skoMC1*-3)+skoSC1*(skoMC1*(2+skoMC1*3)+skoSC1*(skoMC1*((-1/6)+skoMC1)+skoSC1*skoMC1*(-1/4))))<=skoMC1*(2+skoMC1*5),skoSC1*(skoMC1*(-1+skoMC1*3)+skoSC1*(skoMC1*(-2+skoMC1*-3)+skoSC1*(skoMC1*skoMC1*-1+skoSC1*skoMC1*(1/12))))>skoMC1*(-2+skoMC1*-5),skoSC1*(skoMC1*(-1+skoMC1*3)+skoSC1*(skoMC1*(-2+skoMC1*-3)+skoSC1*(skoMC1*((1/6)+skoMC1*-1)+skoSC1*skoMC1*(1/4))))>skoMC1*(-2+skoMC1*-5)]], Reals]]

% In QepcadB format:
(E skoSC1) (E skoMC1) [[0<(skoMC1 skoMC1 skoMC1 (2))]/\[[(skoSC1 ((skoMC1 skoMC1 skoMC1 (-2+(skoMC1 (-12))))+(skoSC1 ((skoMC1 skoMC1 skoMC1 (1+(skoMC1 (-6))))+(skoSC1 ((skoMC1 skoMC1 skoMC1)+(skoSC1 ((skoMC1 skoMC1 skoMC1 (-1/12))+(skoSC1 skoMC1 skoMC1 skoMC1 (-1/12))))))))))<=(skoMC1 skoMC1 skoMC1 (2+(skoMC1 (6))))]/\[[(skoSC1 skoMC1 skoMC1 skoMC1 (-2))<=(skoMC1 skoMC1 skoMC1 (2))]/\[[(skoMC1 skoMC1 skoMC1 (-2))<(skoSC1 skoMC1 skoMC1 skoMC1 (2))]/\[[skoSC1<=5/4]/\[[2<=skoMC1]/\[[0<=skoSC1]/\[[0<skoMC1]/\[[0<=skoMC1]/\[[(skoMC1 (-1))<(skoSC1 skoMC1)]/\[[(skoSC1 skoMC1 (-1))<=skoMC1]/\[[(skoSC1 ((skoMC1 (1+(skoMC1 (-3))))+(skoSC1 ((skoMC1 (2+(skoMC1 (3))))+(skoSC1 ((skoMC1 skoMC1)+(skoSC1 skoMC1 (-1/12))))))))<=(skoMC1 (2+(skoMC1 (5))))]/\[[(skoSC1 ((skoMC1 (1+(skoMC1 (-3))))+(skoSC1 ((skoMC1 (2+(skoMC1 (3))))+(skoSC1 ((skoMC1 (-1/6+skoMC1))+(skoSC1 skoMC1 (-1/4))))))))<=(skoMC1 (2+(skoMC1 (5))))]/\[[(skoMC1 (-2+(skoMC1 (-5))))<(skoSC1 ((skoMC1 (-1+(skoMC1 (3))))+(skoSC1 ((skoMC1 (-2+(skoMC1 (-3))))+(skoSC1 ((skoMC1 skoMC1 (-1))+(skoSC1 skoMC1 (1/12))))))))]/\[(skoMC1 (-2+(skoMC1 (-5))))<(skoSC1 ((skoMC1 (-1+(skoMC1 (3))))+(skoSC1 ((skoMC1 (-2+(skoMC1 (-3))))+(skoSC1 ((skoMC1 (1/6+(skoMC1 (-1))))+(skoSC1 skoMC1 (1/4))))))))]]]]]]]]]]]]]]].

% In SMTLib2 format:
(declare-fun skoSC1 () Real) (declare-fun skoMC1 () Real) (assert (and (> (* skoMC1 (* skoMC1 (* skoMC1 2.))) 0.) (and (<= (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (+ (- 2.) (* skoMC1 (- 12.)))))) (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (+ 1. (* skoMC1 (- 6.)))))) (* skoSC1 (+ (* skoMC1 (* skoMC1 skoMC1)) (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (/ (- 1.) 12.)))) (* skoSC1 (* skoMC1 (* skoMC1 (* skoMC1 (/ (- 1.) 12.))))))))))))) (* skoMC1 (* skoMC1 (* skoMC1 (+ 2. (* skoMC1 6.)))))) (and (<= (* skoSC1 (* skoMC1 (* skoMC1 (* skoMC1 (- 2.))))) (* skoMC1 (* skoMC1 (* skoMC1 2.)))) (and (> (* skoSC1 (* skoMC1 (* skoMC1 (* skoMC1 2.)))) (* skoMC1 (* skoMC1 (* skoMC1 (- 2.))))) (and (<= skoSC1 (/ 5. 4.)) (and (<= 2. skoMC1) (and (<= 0. skoSC1) (and (> skoMC1 0.) (and (<= 0. skoMC1) (and (> (* skoSC1 skoMC1) (* skoMC1 (- 1.))) (and (<= (* skoSC1 (* skoMC1 (- 1.))) skoMC1) (and (<= (* skoSC1 (+ (* skoMC1 (+ 1. (* skoMC1 (- 3.)))) (* skoSC1 (+ (* skoMC1 (+ 2. (* skoMC1 3.))) (* skoSC1 (+ (* skoMC1 skoMC1) (* skoSC1 (* skoMC1 (/ (- 1.) 12.))))))))) (* skoMC1 (+ 2. (* skoMC1 5.)))) (and (<= (* skoSC1 (+ (* skoMC1 (+ 1. (* skoMC1 (- 3.)))) (* skoSC1 (+ (* skoMC1 (+ 2. (* skoMC1 3.))) (* skoSC1 (+ (* skoMC1 (+ (/ (- 1.) 6.) skoMC1)) (* skoSC1 (* skoMC1 (/ (- 1.) 4.))))))))) (* skoMC1 (+ 2. (* skoMC1 5.)))) (and (> (* skoSC1 (+ (* skoMC1 (+ (- 1.) (* skoMC1 3.))) (* skoSC1 (+ (* skoMC1 (+ (- 2.) (* skoMC1 (- 3.)))) (* skoSC1 (+ (* skoMC1 (* skoMC1 (- 1.))) (* skoSC1 (* skoMC1 (/ 1. 12.))))))))) (* skoMC1 (+ (- 2.) (* skoMC1 (- 5.))))) (> (* skoSC1 (+ (* skoMC1 (+ (- 1.) (* skoMC1 3.))) (* skoSC1 (+ (* skoMC1 (+ (- 2.) (* skoMC1 (- 3.)))) (* skoSC1 (+ (* skoMC1 (+ (/ 1. 6.) (* skoMC1 (- 1.)))) (* skoSC1 (* skoMC1 (/ 1. 4.))))))))) (* skoMC1 (+ (- 2.) (* skoMC1 (- 5.))))))))))))))))))))

% In GRF format:
(sequent " MetiTarski formula " (antecedent (> (* skoMC1 (* skoMC1 (* skoMC1 2.))) 0.) (<= (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (+ (- 2.) (* skoMC1 (- 12.)))))) (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (+ 1. (* skoMC1 (- 6.)))))) (* skoSC1 (+ (* skoMC1 (* skoMC1 skoMC1)) (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (/ (- 1.) 12.)))) (* skoSC1 (* skoMC1 (* skoMC1 (* skoMC1 (/ (- 1.) 12.))))))))))))) (* skoMC1 (* skoMC1 (* skoMC1 (+ 2. (* skoMC1 6.)))))) (<= (* skoSC1 (* skoMC1 (* skoMC1 (* skoMC1 (- 2.))))) (* skoMC1 (* skoMC1 (* skoMC1 2.)))) (> (* skoSC1 (* skoMC1 (* skoMC1 (* skoMC1 2.)))) (* skoMC1 (* skoMC1 (* skoMC1 (- 2.))))) (<= skoSC1 (/ 5. 4.)) (<= 2. skoMC1) (<= 0. skoSC1) (> skoMC1 0.) (<= 0. skoMC1) (> (* skoSC1 skoMC1) (* skoMC1 (- 1.))) (<= (* skoSC1 (* skoMC1 (- 1.))) skoMC1) (<= (* skoSC1 (+ (* skoMC1 (+ 1. (* skoMC1 (- 3.)))) (* skoSC1 (+ (* skoMC1 (+ 2. (* skoMC1 3.))) (* skoSC1 (+ (* skoMC1 skoMC1) (* skoSC1 (* skoMC1 (/ (- 1.) 12.))))))))) (* skoMC1 (+ 2. (* skoMC1 5.)))) (<= (* skoSC1 (+ (* skoMC1 (+ 1. (* skoMC1 (- 3.)))) (* skoSC1 (+ (* skoMC1 (+ 2. (* skoMC1 3.))) (* skoSC1 (+ (* skoMC1 (+ (/ (- 1.) 6.) skoMC1)) (* skoSC1 (* skoMC1 (/ (- 1.) 4.))))))))) (* skoMC1 (+ 2. (* skoMC1 5.)))) (> (* skoSC1 (+ (* skoMC1 (+ (- 1.) (* skoMC1 3.))) (* skoSC1 (+ (* skoMC1 (+ (- 2.) (* skoMC1 (- 3.)))) (* skoSC1 (+ (* skoMC1 (* skoMC1 (- 1.))) (* skoSC1 (* skoMC1 (/ 1. 12.))))))))) (* skoMC1 (+ (- 2.) (* skoMC1 (- 5.)))))) (succedent (<= (* skoSC1 (+ (* skoMC1 (+ (- 1.) (* skoMC1 3.))) (* skoSC1 (+ (* skoMC1 (+ (- 2.) (* skoMC1 (- 3.)))) (* skoSC1 (+ (* skoMC1 (+ (/ 1. 6.) (* skoMC1 (- 1.)))) (* skoSC1 (* skoMC1 (/ 1. 4.))))))))) (* skoMC1 (+ (- 2.) (* skoMC1 (- 5.)))))))
-----[end problem]-----

-----[begin problem]-----
% In Mathematica format:
Timing[Resolve[Exists[{skoSC1,skoMC1}, And[skoMC1*skoMC1*skoMC1*-2<=0,skoMC1*skoMC1*skoMC1*2>0,skoSC1*(skoMC1*skoMC1*skoMC1*(-2+skoMC1*-12)+skoSC1*(skoMC1*skoMC1*skoMC1*(1+skoMC1*-6)+skoSC1*(skoMC1*skoMC1*skoMC1+skoSC1*(skoMC1*skoMC1*skoMC1*(-1/12)+skoSC1*skoMC1*skoMC1*skoMC1*(-1/12)))))<=skoMC1*skoMC1*skoMC1*(2+skoMC1*6),skoSC1*skoMC1*skoMC1*skoMC1*-2<=skoMC1*skoMC1*skoMC1*2,skoSC1*skoMC1*skoMC1*skoMC1*2>skoMC1*skoMC1*skoMC1*-2,skoSC1<=(5/4),2<=skoMC1,0<=skoSC1,skoMC1>0,0<=skoMC1,skoSC1*skoMC1>skoMC1*-1,skoSC1*skoMC1*-1<=skoMC1,skoSC1*(skoMC1*(1+skoMC1*-3)+skoSC1*(skoMC1*(2+skoMC1*3)+skoSC1*(skoMC1*skoMC1+skoSC1*skoMC1*(-1/12))))<=skoMC1*(2+skoMC1*5),skoSC1*(skoMC1*(1+skoMC1*-3)+skoSC1*(skoMC1*(2+skoMC1*3)+skoSC1*(skoMC1*((-1/6)+skoMC1)+skoSC1*skoMC1*(-1/4))))<=skoMC1*(2+skoMC1*5),skoSC1*(skoMC1*(-1+skoMC1*3)+skoSC1*(skoMC1*(-2+skoMC1*-3)+skoSC1*(skoMC1*skoMC1*-1+skoSC1*skoMC1*(1/12))))>skoMC1*(-2+skoMC1*-5),skoSC1*(skoMC1*(-1+skoMC1*3)+skoSC1*(skoMC1*(-2+skoMC1*-3)+skoSC1*(skoMC1*((1/6)+skoMC1*-1)+skoSC1*skoMC1*(1/4))))>skoMC1*(-2+skoMC1*-5)]], Reals]]

% In QepcadB format:
(E skoSC1) (E skoMC1) [[(skoMC1 skoMC1 skoMC1 (-2))<=0]/\[[0<(skoMC1 skoMC1 skoMC1 (2))]/\[[(skoSC1 ((skoMC1 skoMC1 skoMC1 (-2+(skoMC1 (-12))))+(skoSC1 ((skoMC1 skoMC1 skoMC1 (1+(skoMC1 (-6))))+(skoSC1 ((skoMC1 skoMC1 skoMC1)+(skoSC1 ((skoMC1 skoMC1 skoMC1 (-1/12))+(skoSC1 skoMC1 skoMC1 skoMC1 (-1/12))))))))))<=(skoMC1 skoMC1 skoMC1 (2+(skoMC1 (6))))]/\[[(skoSC1 skoMC1 skoMC1 skoMC1 (-2))<=(skoMC1 skoMC1 skoMC1 (2))]/\[[(skoMC1 skoMC1 skoMC1 (-2))<(skoSC1 skoMC1 skoMC1 skoMC1 (2))]/\[[skoSC1<=5/4]/\[[2<=skoMC1]/\[[0<=skoSC1]/\[[0<skoMC1]/\[[0<=skoMC1]/\[[(skoMC1 (-1))<(skoSC1 skoMC1)]/\[[(skoSC1 skoMC1 (-1))<=skoMC1]/\[[(skoSC1 ((skoMC1 (1+(skoMC1 (-3))))+(skoSC1 ((skoMC1 (2+(skoMC1 (3))))+(skoSC1 ((skoMC1 skoMC1)+(skoSC1 skoMC1 (-1/12))))))))<=(skoMC1 (2+(skoMC1 (5))))]/\[[(skoSC1 ((skoMC1 (1+(skoMC1 (-3))))+(skoSC1 ((skoMC1 (2+(skoMC1 (3))))+(skoSC1 ((skoMC1 (-1/6+skoMC1))+(skoSC1 skoMC1 (-1/4))))))))<=(skoMC1 (2+(skoMC1 (5))))]/\[[(skoMC1 (-2+(skoMC1 (-5))))<(skoSC1 ((skoMC1 (-1+(skoMC1 (3))))+(skoSC1 ((skoMC1 (-2+(skoMC1 (-3))))+(skoSC1 ((skoMC1 skoMC1 (-1))+(skoSC1 skoMC1 (1/12))))))))]/\[(skoMC1 (-2+(skoMC1 (-5))))<(skoSC1 ((skoMC1 (-1+(skoMC1 (3))))+(skoSC1 ((skoMC1 (-2+(skoMC1 (-3))))+(skoSC1 ((skoMC1 (1/6+(skoMC1 (-1))))+(skoSC1 skoMC1 (1/4))))))))]]]]]]]]]]]]]]]].

% In SMTLib2 format:
(declare-fun skoSC1 () Real) (declare-fun skoMC1 () Real) (assert (and (<= (* skoMC1 (* skoMC1 (* skoMC1 (- 2.)))) 0.) (and (> (* skoMC1 (* skoMC1 (* skoMC1 2.))) 0.) (and (<= (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (+ (- 2.) (* skoMC1 (- 12.)))))) (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (+ 1. (* skoMC1 (- 6.)))))) (* skoSC1 (+ (* skoMC1 (* skoMC1 skoMC1)) (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (/ (- 1.) 12.)))) (* skoSC1 (* skoMC1 (* skoMC1 (* skoMC1 (/ (- 1.) 12.))))))))))))) (* skoMC1 (* skoMC1 (* skoMC1 (+ 2. (* skoMC1 6.)))))) (and (<= (* skoSC1 (* skoMC1 (* skoMC1 (* skoMC1 (- 2.))))) (* skoMC1 (* skoMC1 (* skoMC1 2.)))) (and (> (* skoSC1 (* skoMC1 (* skoMC1 (* skoMC1 2.)))) (* skoMC1 (* skoMC1 (* skoMC1 (- 2.))))) (and (<= skoSC1 (/ 5. 4.)) (and (<= 2. skoMC1) (and (<= 0. skoSC1) (and (> skoMC1 0.) (and (<= 0. skoMC1) (and (> (* skoSC1 skoMC1) (* skoMC1 (- 1.))) (and (<= (* skoSC1 (* skoMC1 (- 1.))) skoMC1) (and (<= (* skoSC1 (+ (* skoMC1 (+ 1. (* skoMC1 (- 3.)))) (* skoSC1 (+ (* skoMC1 (+ 2. (* skoMC1 3.))) (* skoSC1 (+ (* skoMC1 skoMC1) (* skoSC1 (* skoMC1 (/ (- 1.) 12.))))))))) (* skoMC1 (+ 2. (* skoMC1 5.)))) (and (<= (* skoSC1 (+ (* skoMC1 (+ 1. (* skoMC1 (- 3.)))) (* skoSC1 (+ (* skoMC1 (+ 2. (* skoMC1 3.))) (* skoSC1 (+ (* skoMC1 (+ (/ (- 1.) 6.) skoMC1)) (* skoSC1 (* skoMC1 (/ (- 1.) 4.))))))))) (* skoMC1 (+ 2. (* skoMC1 5.)))) (and (> (* skoSC1 (+ (* skoMC1 (+ (- 1.) (* skoMC1 3.))) (* skoSC1 (+ (* skoMC1 (+ (- 2.) (* skoMC1 (- 3.)))) (* skoSC1 (+ (* skoMC1 (* skoMC1 (- 1.))) (* skoSC1 (* skoMC1 (/ 1. 12.))))))))) (* skoMC1 (+ (- 2.) (* skoMC1 (- 5.))))) (> (* skoSC1 (+ (* skoMC1 (+ (- 1.) (* skoMC1 3.))) (* skoSC1 (+ (* skoMC1 (+ (- 2.) (* skoMC1 (- 3.)))) (* skoSC1 (+ (* skoMC1 (+ (/ 1. 6.) (* skoMC1 (- 1.)))) (* skoSC1 (* skoMC1 (/ 1. 4.))))))))) (* skoMC1 (+ (- 2.) (* skoMC1 (- 5.)))))))))))))))))))))

% In GRF format:
(sequent " MetiTarski formula " (antecedent (<= (* skoMC1 (* skoMC1 (* skoMC1 (- 2.)))) 0.) (> (* skoMC1 (* skoMC1 (* skoMC1 2.))) 0.) (<= (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (+ (- 2.) (* skoMC1 (- 12.)))))) (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (+ 1. (* skoMC1 (- 6.)))))) (* skoSC1 (+ (* skoMC1 (* skoMC1 skoMC1)) (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (/ (- 1.) 12.)))) (* skoSC1 (* skoMC1 (* skoMC1 (* skoMC1 (/ (- 1.) 12.))))))))))))) (* skoMC1 (* skoMC1 (* skoMC1 (+ 2. (* skoMC1 6.)))))) (<= (* skoSC1 (* skoMC1 (* skoMC1 (* skoMC1 (- 2.))))) (* skoMC1 (* skoMC1 (* skoMC1 2.)))) (> (* skoSC1 (* skoMC1 (* skoMC1 (* skoMC1 2.)))) (* skoMC1 (* skoMC1 (* skoMC1 (- 2.))))) (<= skoSC1 (/ 5. 4.)) (<= 2. skoMC1) (<= 0. skoSC1) (> skoMC1 0.) (<= 0. skoMC1) (> (* skoSC1 skoMC1) (* skoMC1 (- 1.))) (<= (* skoSC1 (* skoMC1 (- 1.))) skoMC1) (<= (* skoSC1 (+ (* skoMC1 (+ 1. (* skoMC1 (- 3.)))) (* skoSC1 (+ (* skoMC1 (+ 2. (* skoMC1 3.))) (* skoSC1 (+ (* skoMC1 skoMC1) (* skoSC1 (* skoMC1 (/ (- 1.) 12.))))))))) (* skoMC1 (+ 2. (* skoMC1 5.)))) (<= (* skoSC1 (+ (* skoMC1 (+ 1. (* skoMC1 (- 3.)))) (* skoSC1 (+ (* skoMC1 (+ 2. (* skoMC1 3.))) (* skoSC1 (+ (* skoMC1 (+ (/ (- 1.) 6.) skoMC1)) (* skoSC1 (* skoMC1 (/ (- 1.) 4.))))))))) (* skoMC1 (+ 2. (* skoMC1 5.)))) (> (* skoSC1 (+ (* skoMC1 (+ (- 1.) (* skoMC1 3.))) (* skoSC1 (+ (* skoMC1 (+ (- 2.) (* skoMC1 (- 3.)))) (* skoSC1 (+ (* skoMC1 (* skoMC1 (- 1.))) (* skoSC1 (* skoMC1 (/ 1. 12.))))))))) (* skoMC1 (+ (- 2.) (* skoMC1 (- 5.)))))) (succedent (<= (* skoSC1 (+ (* skoMC1 (+ (- 1.) (* skoMC1 3.))) (* skoSC1 (+ (* skoMC1 (+ (- 2.) (* skoMC1 (- 3.)))) (* skoSC1 (+ (* skoMC1 (+ (/ 1. 6.) (* skoMC1 (- 1.)))) (* skoSC1 (* skoMC1 (/ 1. 4.))))))))) (* skoMC1 (+ (- 2.) (* skoMC1 (- 5.)))))))
-----[end problem]-----

-----[begin problem]-----
% In Mathematica format:
Timing[Resolve[Exists[{skoSC1,skoMC1}, And[skoSC1*skoMC1*skoMC1*skoMC1>skoMC1*skoMC1*skoMC1*-1,skoMC1*skoMC1*skoMC1*2>0,skoSC1*(skoMC1*skoMC1*skoMC1*(-2+skoMC1*-12)+skoSC1*(skoMC1*skoMC1*skoMC1*(1+skoMC1*-6)+skoSC1*(skoMC1*skoMC1*skoMC1+skoSC1*(skoMC1*skoMC1*skoMC1*(-1/12)+skoSC1*skoMC1*skoMC1*skoMC1*(-1/12)))))<=skoMC1*skoMC1*skoMC1*(2+skoMC1*6),skoSC1*skoMC1*skoMC1*skoMC1*-2<=skoMC1*skoMC1*skoMC1*2,skoSC1*skoMC1*skoMC1*skoMC1*2>skoMC1*skoMC1*skoMC1*-2,skoSC1<=(5/4),2<=skoMC1,0<=skoSC1,skoMC1>0,0<=skoMC1,skoSC1*skoMC1>skoMC1*-1,skoSC1*skoMC1*-1<=skoMC1,skoSC1*(skoMC1*(1+skoMC1*-3)+skoSC1*(skoMC1*(2+skoMC1*3)+skoSC1*(skoMC1*skoMC1+skoSC1*skoMC1*(-1/12))))<=skoMC1*(2+skoMC1*5),skoSC1*(skoMC1*(1+skoMC1*-3)+skoSC1*(skoMC1*(2+skoMC1*3)+skoSC1*(skoMC1*((-1/6)+skoMC1)+skoSC1*skoMC1*(-1/4))))<=skoMC1*(2+skoMC1*5),skoSC1*(skoMC1*(-1+skoMC1*3)+skoSC1*(skoMC1*(-2+skoMC1*-3)+skoSC1*(skoMC1*skoMC1*-1+skoSC1*skoMC1*(1/12))))>skoMC1*(-2+skoMC1*-5),skoSC1*(skoMC1*(-1+skoMC1*3)+skoSC1*(skoMC1*(-2+skoMC1*-3)+skoSC1*(skoMC1*((1/6)+skoMC1*-1)+skoSC1*skoMC1*(1/4))))>skoMC1*(-2+skoMC1*-5)]], Reals]]

% In QepcadB format:
(E skoSC1) (E skoMC1) [[(skoMC1 skoMC1 skoMC1 (-1))<(skoSC1 skoMC1 skoMC1 skoMC1)]/\[[0<(skoMC1 skoMC1 skoMC1 (2))]/\[[(skoSC1 ((skoMC1 skoMC1 skoMC1 (-2+(skoMC1 (-12))))+(skoSC1 ((skoMC1 skoMC1 skoMC1 (1+(skoMC1 (-6))))+(skoSC1 ((skoMC1 skoMC1 skoMC1)+(skoSC1 ((skoMC1 skoMC1 skoMC1 (-1/12))+(skoSC1 skoMC1 skoMC1 skoMC1 (-1/12))))))))))<=(skoMC1 skoMC1 skoMC1 (2+(skoMC1 (6))))]/\[[(skoSC1 skoMC1 skoMC1 skoMC1 (-2))<=(skoMC1 skoMC1 skoMC1 (2))]/\[[(skoMC1 skoMC1 skoMC1 (-2))<(skoSC1 skoMC1 skoMC1 skoMC1 (2))]/\[[skoSC1<=5/4]/\[[2<=skoMC1]/\[[0<=skoSC1]/\[[0<skoMC1]/\[[0<=skoMC1]/\[[(skoMC1 (-1))<(skoSC1 skoMC1)]/\[[(skoSC1 skoMC1 (-1))<=skoMC1]/\[[(skoSC1 ((skoMC1 (1+(skoMC1 (-3))))+(skoSC1 ((skoMC1 (2+(skoMC1 (3))))+(skoSC1 ((skoMC1 skoMC1)+(skoSC1 skoMC1 (-1/12))))))))<=(skoMC1 (2+(skoMC1 (5))))]/\[[(skoSC1 ((skoMC1 (1+(skoMC1 (-3))))+(skoSC1 ((skoMC1 (2+(skoMC1 (3))))+(skoSC1 ((skoMC1 (-1/6+skoMC1))+(skoSC1 skoMC1 (-1/4))))))))<=(skoMC1 (2+(skoMC1 (5))))]/\[[(skoMC1 (-2+(skoMC1 (-5))))<(skoSC1 ((skoMC1 (-1+(skoMC1 (3))))+(skoSC1 ((skoMC1 (-2+(skoMC1 (-3))))+(skoSC1 ((skoMC1 skoMC1 (-1))+(skoSC1 skoMC1 (1/12))))))))]/\[(skoMC1 (-2+(skoMC1 (-5))))<(skoSC1 ((skoMC1 (-1+(skoMC1 (3))))+(skoSC1 ((skoMC1 (-2+(skoMC1 (-3))))+(skoSC1 ((skoMC1 (1/6+(skoMC1 (-1))))+(skoSC1 skoMC1 (1/4))))))))]]]]]]]]]]]]]]]].

% In SMTLib2 format:
(declare-fun skoSC1 () Real) (declare-fun skoMC1 () Real) (assert (and (> (* skoSC1 (* skoMC1 (* skoMC1 skoMC1))) (* skoMC1 (* skoMC1 (* skoMC1 (- 1.))))) (and (> (* skoMC1 (* skoMC1 (* skoMC1 2.))) 0.) (and (<= (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (+ (- 2.) (* skoMC1 (- 12.)))))) (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (+ 1. (* skoMC1 (- 6.)))))) (* skoSC1 (+ (* skoMC1 (* skoMC1 skoMC1)) (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (/ (- 1.) 12.)))) (* skoSC1 (* skoMC1 (* skoMC1 (* skoMC1 (/ (- 1.) 12.))))))))))))) (* skoMC1 (* skoMC1 (* skoMC1 (+ 2. (* skoMC1 6.)))))) (and (<= (* skoSC1 (* skoMC1 (* skoMC1 (* skoMC1 (- 2.))))) (* skoMC1 (* skoMC1 (* skoMC1 2.)))) (and (> (* skoSC1 (* skoMC1 (* skoMC1 (* skoMC1 2.)))) (* skoMC1 (* skoMC1 (* skoMC1 (- 2.))))) (and (<= skoSC1 (/ 5. 4.)) (and (<= 2. skoMC1) (and (<= 0. skoSC1) (and (> skoMC1 0.) (and (<= 0. skoMC1) (and (> (* skoSC1 skoMC1) (* skoMC1 (- 1.))) (and (<= (* skoSC1 (* skoMC1 (- 1.))) skoMC1) (and (<= (* skoSC1 (+ (* skoMC1 (+ 1. (* skoMC1 (- 3.)))) (* skoSC1 (+ (* skoMC1 (+ 2. (* skoMC1 3.))) (* skoSC1 (+ (* skoMC1 skoMC1) (* skoSC1 (* skoMC1 (/ (- 1.) 12.))))))))) (* skoMC1 (+ 2. (* skoMC1 5.)))) (and (<= (* skoSC1 (+ (* skoMC1 (+ 1. (* skoMC1 (- 3.)))) (* skoSC1 (+ (* skoMC1 (+ 2. (* skoMC1 3.))) (* skoSC1 (+ (* skoMC1 (+ (/ (- 1.) 6.) skoMC1)) (* skoSC1 (* skoMC1 (/ (- 1.) 4.))))))))) (* skoMC1 (+ 2. (* skoMC1 5.)))) (and (> (* skoSC1 (+ (* skoMC1 (+ (- 1.) (* skoMC1 3.))) (* skoSC1 (+ (* skoMC1 (+ (- 2.) (* skoMC1 (- 3.)))) (* skoSC1 (+ (* skoMC1 (* skoMC1 (- 1.))) (* skoSC1 (* skoMC1 (/ 1. 12.))))))))) (* skoMC1 (+ (- 2.) (* skoMC1 (- 5.))))) (> (* skoSC1 (+ (* skoMC1 (+ (- 1.) (* skoMC1 3.))) (* skoSC1 (+ (* skoMC1 (+ (- 2.) (* skoMC1 (- 3.)))) (* skoSC1 (+ (* skoMC1 (+ (/ 1. 6.) (* skoMC1 (- 1.)))) (* skoSC1 (* skoMC1 (/ 1. 4.))))))))) (* skoMC1 (+ (- 2.) (* skoMC1 (- 5.)))))))))))))))))))))

% In GRF format:
(sequent " MetiTarski formula " (antecedent (> (* skoSC1 (* skoMC1 (* skoMC1 skoMC1))) (* skoMC1 (* skoMC1 (* skoMC1 (- 1.))))) (> (* skoMC1 (* skoMC1 (* skoMC1 2.))) 0.) (<= (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (+ (- 2.) (* skoMC1 (- 12.)))))) (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (+ 1. (* skoMC1 (- 6.)))))) (* skoSC1 (+ (* skoMC1 (* skoMC1 skoMC1)) (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (/ (- 1.) 12.)))) (* skoSC1 (* skoMC1 (* skoMC1 (* skoMC1 (/ (- 1.) 12.))))))))))))) (* skoMC1 (* skoMC1 (* skoMC1 (+ 2. (* skoMC1 6.)))))) (<= (* skoSC1 (* skoMC1 (* skoMC1 (* skoMC1 (- 2.))))) (* skoMC1 (* skoMC1 (* skoMC1 2.)))) (> (* skoSC1 (* skoMC1 (* skoMC1 (* skoMC1 2.)))) (* skoMC1 (* skoMC1 (* skoMC1 (- 2.))))) (<= skoSC1 (/ 5. 4.)) (<= 2. skoMC1) (<= 0. skoSC1) (> skoMC1 0.) (<= 0. skoMC1) (> (* skoSC1 skoMC1) (* skoMC1 (- 1.))) (<= (* skoSC1 (* skoMC1 (- 1.))) skoMC1) (<= (* skoSC1 (+ (* skoMC1 (+ 1. (* skoMC1 (- 3.)))) (* skoSC1 (+ (* skoMC1 (+ 2. (* skoMC1 3.))) (* skoSC1 (+ (* skoMC1 skoMC1) (* skoSC1 (* skoMC1 (/ (- 1.) 12.))))))))) (* skoMC1 (+ 2. (* skoMC1 5.)))) (<= (* skoSC1 (+ (* skoMC1 (+ 1. (* skoMC1 (- 3.)))) (* skoSC1 (+ (* skoMC1 (+ 2. (* skoMC1 3.))) (* skoSC1 (+ (* skoMC1 (+ (/ (- 1.) 6.) skoMC1)) (* skoSC1 (* skoMC1 (/ (- 1.) 4.))))))))) (* skoMC1 (+ 2. (* skoMC1 5.)))) (> (* skoSC1 (+ (* skoMC1 (+ (- 1.) (* skoMC1 3.))) (* skoSC1 (+ (* skoMC1 (+ (- 2.) (* skoMC1 (- 3.)))) (* skoSC1 (+ (* skoMC1 (* skoMC1 (- 1.))) (* skoSC1 (* skoMC1 (/ 1. 12.))))))))) (* skoMC1 (+ (- 2.) (* skoMC1 (- 5.)))))) (succedent (<= (* skoSC1 (+ (* skoMC1 (+ (- 1.) (* skoMC1 3.))) (* skoSC1 (+ (* skoMC1 (+ (- 2.) (* skoMC1 (- 3.)))) (* skoSC1 (+ (* skoMC1 (+ (/ 1. 6.) (* skoMC1 (- 1.)))) (* skoSC1 (* skoMC1 (/ 1. 4.))))))))) (* skoMC1 (+ (- 2.) (* skoMC1 (- 5.)))))))
-----[end problem]-----

-----[begin problem]-----
% In Mathematica format:
Timing[Resolve[Exists[{skoSC1,skoMC1}, And[skoSC1*skoMC1*skoMC1*skoMC1*-1<=skoMC1*skoMC1*skoMC1,skoMC1*skoMC1*skoMC1*2>0,skoSC1*(skoMC1*skoMC1*skoMC1*(-2+skoMC1*-12)+skoSC1*(skoMC1*skoMC1*skoMC1*(1+skoMC1*-6)+skoSC1*(skoMC1*skoMC1*skoMC1+skoSC1*(skoMC1*skoMC1*skoMC1*(-1/12)+skoSC1*skoMC1*skoMC1*skoMC1*(-1/12)))))<=skoMC1*skoMC1*skoMC1*(2+skoMC1*6),skoSC1*skoMC1*skoMC1*skoMC1*-2<=skoMC1*skoMC1*skoMC1*2,skoSC1*skoMC1*skoMC1*skoMC1*2>skoMC1*skoMC1*skoMC1*-2,skoSC1<=(5/4),2<=skoMC1,0<=skoSC1,skoMC1>0,0<=skoMC1,skoSC1*skoMC1>skoMC1*-1,skoSC1*skoMC1*-1<=skoMC1,skoSC1*(skoMC1*(1+skoMC1*-3)+skoSC1*(skoMC1*(2+skoMC1*3)+skoSC1*(skoMC1*skoMC1+skoSC1*skoMC1*(-1/12))))<=skoMC1*(2+skoMC1*5),skoSC1*(skoMC1*(1+skoMC1*-3)+skoSC1*(skoMC1*(2+skoMC1*3)+skoSC1*(skoMC1*((-1/6)+skoMC1)+skoSC1*skoMC1*(-1/4))))<=skoMC1*(2+skoMC1*5),skoSC1*(skoMC1*(-1+skoMC1*3)+skoSC1*(skoMC1*(-2+skoMC1*-3)+skoSC1*(skoMC1*skoMC1*-1+skoSC1*skoMC1*(1/12))))>skoMC1*(-2+skoMC1*-5),skoSC1*(skoMC1*(-1+skoMC1*3)+skoSC1*(skoMC1*(-2+skoMC1*-3)+skoSC1*(skoMC1*((1/6)+skoMC1*-1)+skoSC1*skoMC1*(1/4))))>skoMC1*(-2+skoMC1*-5)]], Reals]]

% In QepcadB format:
(E skoSC1) (E skoMC1) [[(skoSC1 skoMC1 skoMC1 skoMC1 (-1))<=(skoMC1 skoMC1 skoMC1)]/\[[0<(skoMC1 skoMC1 skoMC1 (2))]/\[[(skoSC1 ((skoMC1 skoMC1 skoMC1 (-2+(skoMC1 (-12))))+(skoSC1 ((skoMC1 skoMC1 skoMC1 (1+(skoMC1 (-6))))+(skoSC1 ((skoMC1 skoMC1 skoMC1)+(skoSC1 ((skoMC1 skoMC1 skoMC1 (-1/12))+(skoSC1 skoMC1 skoMC1 skoMC1 (-1/12))))))))))<=(skoMC1 skoMC1 skoMC1 (2+(skoMC1 (6))))]/\[[(skoSC1 skoMC1 skoMC1 skoMC1 (-2))<=(skoMC1 skoMC1 skoMC1 (2))]/\[[(skoMC1 skoMC1 skoMC1 (-2))<(skoSC1 skoMC1 skoMC1 skoMC1 (2))]/\[[skoSC1<=5/4]/\[[2<=skoMC1]/\[[0<=skoSC1]/\[[0<skoMC1]/\[[0<=skoMC1]/\[[(skoMC1 (-1))<(skoSC1 skoMC1)]/\[[(skoSC1 skoMC1 (-1))<=skoMC1]/\[[(skoSC1 ((skoMC1 (1+(skoMC1 (-3))))+(skoSC1 ((skoMC1 (2+(skoMC1 (3))))+(skoSC1 ((skoMC1 skoMC1)+(skoSC1 skoMC1 (-1/12))))))))<=(skoMC1 (2+(skoMC1 (5))))]/\[[(skoSC1 ((skoMC1 (1+(skoMC1 (-3))))+(skoSC1 ((skoMC1 (2+(skoMC1 (3))))+(skoSC1 ((skoMC1 (-1/6+skoMC1))+(skoSC1 skoMC1 (-1/4))))))))<=(skoMC1 (2+(skoMC1 (5))))]/\[[(skoMC1 (-2+(skoMC1 (-5))))<(skoSC1 ((skoMC1 (-1+(skoMC1 (3))))+(skoSC1 ((skoMC1 (-2+(skoMC1 (-3))))+(skoSC1 ((skoMC1 skoMC1 (-1))+(skoSC1 skoMC1 (1/12))))))))]/\[(skoMC1 (-2+(skoMC1 (-5))))<(skoSC1 ((skoMC1 (-1+(skoMC1 (3))))+(skoSC1 ((skoMC1 (-2+(skoMC1 (-3))))+(skoSC1 ((skoMC1 (1/6+(skoMC1 (-1))))+(skoSC1 skoMC1 (1/4))))))))]]]]]]]]]]]]]]]].

% In SMTLib2 format:
(declare-fun skoSC1 () Real) (declare-fun skoMC1 () Real) (assert (and (<= (* skoSC1 (* skoMC1 (* skoMC1 (* skoMC1 (- 1.))))) (* skoMC1 (* skoMC1 skoMC1))) (and (> (* skoMC1 (* skoMC1 (* skoMC1 2.))) 0.) (and (<= (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (+ (- 2.) (* skoMC1 (- 12.)))))) (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (+ 1. (* skoMC1 (- 6.)))))) (* skoSC1 (+ (* skoMC1 (* skoMC1 skoMC1)) (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (/ (- 1.) 12.)))) (* skoSC1 (* skoMC1 (* skoMC1 (* skoMC1 (/ (- 1.) 12.))))))))))))) (* skoMC1 (* skoMC1 (* skoMC1 (+ 2. (* skoMC1 6.)))))) (and (<= (* skoSC1 (* skoMC1 (* skoMC1 (* skoMC1 (- 2.))))) (* skoMC1 (* skoMC1 (* skoMC1 2.)))) (and (> (* skoSC1 (* skoMC1 (* skoMC1 (* skoMC1 2.)))) (* skoMC1 (* skoMC1 (* skoMC1 (- 2.))))) (and (<= skoSC1 (/ 5. 4.)) (and (<= 2. skoMC1) (and (<= 0. skoSC1) (and (> skoMC1 0.) (and (<= 0. skoMC1) (and (> (* skoSC1 skoMC1) (* skoMC1 (- 1.))) (and (<= (* skoSC1 (* skoMC1 (- 1.))) skoMC1) (and (<= (* skoSC1 (+ (* skoMC1 (+ 1. (* skoMC1 (- 3.)))) (* skoSC1 (+ (* skoMC1 (+ 2. (* skoMC1 3.))) (* skoSC1 (+ (* skoMC1 skoMC1) (* skoSC1 (* skoMC1 (/ (- 1.) 12.))))))))) (* skoMC1 (+ 2. (* skoMC1 5.)))) (and (<= (* skoSC1 (+ (* skoMC1 (+ 1. (* skoMC1 (- 3.)))) (* skoSC1 (+ (* skoMC1 (+ 2. (* skoMC1 3.))) (* skoSC1 (+ (* skoMC1 (+ (/ (- 1.) 6.) skoMC1)) (* skoSC1 (* skoMC1 (/ (- 1.) 4.))))))))) (* skoMC1 (+ 2. (* skoMC1 5.)))) (and (> (* skoSC1 (+ (* skoMC1 (+ (- 1.) (* skoMC1 3.))) (* skoSC1 (+ (* skoMC1 (+ (- 2.) (* skoMC1 (- 3.)))) (* skoSC1 (+ (* skoMC1 (* skoMC1 (- 1.))) (* skoSC1 (* skoMC1 (/ 1. 12.))))))))) (* skoMC1 (+ (- 2.) (* skoMC1 (- 5.))))) (> (* skoSC1 (+ (* skoMC1 (+ (- 1.) (* skoMC1 3.))) (* skoSC1 (+ (* skoMC1 (+ (- 2.) (* skoMC1 (- 3.)))) (* skoSC1 (+ (* skoMC1 (+ (/ 1. 6.) (* skoMC1 (- 1.)))) (* skoSC1 (* skoMC1 (/ 1. 4.))))))))) (* skoMC1 (+ (- 2.) (* skoMC1 (- 5.)))))))))))))))))))))

% In GRF format:
(sequent " MetiTarski formula " (antecedent (<= (* skoSC1 (* skoMC1 (* skoMC1 (* skoMC1 (- 1.))))) (* skoMC1 (* skoMC1 skoMC1))) (> (* skoMC1 (* skoMC1 (* skoMC1 2.))) 0.) (<= (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (+ (- 2.) (* skoMC1 (- 12.)))))) (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (+ 1. (* skoMC1 (- 6.)))))) (* skoSC1 (+ (* skoMC1 (* skoMC1 skoMC1)) (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (/ (- 1.) 12.)))) (* skoSC1 (* skoMC1 (* skoMC1 (* skoMC1 (/ (- 1.) 12.))))))))))))) (* skoMC1 (* skoMC1 (* skoMC1 (+ 2. (* skoMC1 6.)))))) (<= (* skoSC1 (* skoMC1 (* skoMC1 (* skoMC1 (- 2.))))) (* skoMC1 (* skoMC1 (* skoMC1 2.)))) (> (* skoSC1 (* skoMC1 (* skoMC1 (* skoMC1 2.)))) (* skoMC1 (* skoMC1 (* skoMC1 (- 2.))))) (<= skoSC1 (/ 5. 4.)) (<= 2. skoMC1) (<= 0. skoSC1) (> skoMC1 0.) (<= 0. skoMC1) (> (* skoSC1 skoMC1) (* skoMC1 (- 1.))) (<= (* skoSC1 (* skoMC1 (- 1.))) skoMC1) (<= (* skoSC1 (+ (* skoMC1 (+ 1. (* skoMC1 (- 3.)))) (* skoSC1 (+ (* skoMC1 (+ 2. (* skoMC1 3.))) (* skoSC1 (+ (* skoMC1 skoMC1) (* skoSC1 (* skoMC1 (/ (- 1.) 12.))))))))) (* skoMC1 (+ 2. (* skoMC1 5.)))) (<= (* skoSC1 (+ (* skoMC1 (+ 1. (* skoMC1 (- 3.)))) (* skoSC1 (+ (* skoMC1 (+ 2. (* skoMC1 3.))) (* skoSC1 (+ (* skoMC1 (+ (/ (- 1.) 6.) skoMC1)) (* skoSC1 (* skoMC1 (/ (- 1.) 4.))))))))) (* skoMC1 (+ 2. (* skoMC1 5.)))) (> (* skoSC1 (+ (* skoMC1 (+ (- 1.) (* skoMC1 3.))) (* skoSC1 (+ (* skoMC1 (+ (- 2.) (* skoMC1 (- 3.)))) (* skoSC1 (+ (* skoMC1 (* skoMC1 (- 1.))) (* skoSC1 (* skoMC1 (/ 1. 12.))))))))) (* skoMC1 (+ (- 2.) (* skoMC1 (- 5.)))))) (succedent (<= (* skoSC1 (+ (* skoMC1 (+ (- 1.) (* skoMC1 3.))) (* skoSC1 (+ (* skoMC1 (+ (- 2.) (* skoMC1 (- 3.)))) (* skoSC1 (+ (* skoMC1 (+ (/ 1. 6.) (* skoMC1 (- 1.)))) (* skoSC1 (* skoMC1 (/ 1. 4.))))))))) (* skoMC1 (+ (- 2.) (* skoMC1 (- 5.)))))))
-----[end problem]-----

-----[begin problem]-----
% In Mathematica format:
Timing[Resolve[Exists[{skoSC1,skoMC1}, And[skoSC1>0,skoMC1*skoMC1*skoMC1*2>0,skoSC1*(skoMC1*skoMC1*skoMC1*(-2+skoMC1*-12)+skoSC1*(skoMC1*skoMC1*skoMC1*(1+skoMC1*-6)+skoSC1*(skoMC1*skoMC1*skoMC1+skoSC1*(skoMC1*skoMC1*skoMC1*(-1/12)+skoSC1*skoMC1*skoMC1*skoMC1*(-1/12)))))<=skoMC1*skoMC1*skoMC1*(2+skoMC1*6),skoSC1*skoMC1*skoMC1*skoMC1*-2<=skoMC1*skoMC1*skoMC1*2,skoSC1*skoMC1*skoMC1*skoMC1*2>skoMC1*skoMC1*skoMC1*-2,skoSC1<=(5/4),2<=skoMC1,0<=skoSC1,skoMC1>0,0<=skoMC1,skoSC1*skoMC1>skoMC1*-1,skoSC1*skoMC1*-1<=skoMC1,skoSC1*(skoMC1*(1+skoMC1*-3)+skoSC1*(skoMC1*(2+skoMC1*3)+skoSC1*(skoMC1*skoMC1+skoSC1*skoMC1*(-1/12))))<=skoMC1*(2+skoMC1*5),skoSC1*(skoMC1*(1+skoMC1*-3)+skoSC1*(skoMC1*(2+skoMC1*3)+skoSC1*(skoMC1*((-1/6)+skoMC1)+skoSC1*skoMC1*(-1/4))))<=skoMC1*(2+skoMC1*5),skoSC1*(skoMC1*(-1+skoMC1*3)+skoSC1*(skoMC1*(-2+skoMC1*-3)+skoSC1*(skoMC1*skoMC1*-1+skoSC1*skoMC1*(1/12))))>skoMC1*(-2+skoMC1*-5),skoSC1*(skoMC1*(-1+skoMC1*3)+skoSC1*(skoMC1*(-2+skoMC1*-3)+skoSC1*(skoMC1*((1/6)+skoMC1*-1)+skoSC1*skoMC1*(1/4))))>skoMC1*(-2+skoMC1*-5)]], Reals]]

% In QepcadB format:
(E skoSC1) (E skoMC1) [[0<skoSC1]/\[[0<(skoMC1 skoMC1 skoMC1 (2))]/\[[(skoSC1 ((skoMC1 skoMC1 skoMC1 (-2+(skoMC1 (-12))))+(skoSC1 ((skoMC1 skoMC1 skoMC1 (1+(skoMC1 (-6))))+(skoSC1 ((skoMC1 skoMC1 skoMC1)+(skoSC1 ((skoMC1 skoMC1 skoMC1 (-1/12))+(skoSC1 skoMC1 skoMC1 skoMC1 (-1/12))))))))))<=(skoMC1 skoMC1 skoMC1 (2+(skoMC1 (6))))]/\[[(skoSC1 skoMC1 skoMC1 skoMC1 (-2))<=(skoMC1 skoMC1 skoMC1 (2))]/\[[(skoMC1 skoMC1 skoMC1 (-2))<(skoSC1 skoMC1 skoMC1 skoMC1 (2))]/\[[skoSC1<=5/4]/\[[2<=skoMC1]/\[[0<=skoSC1]/\[[0<skoMC1]/\[[0<=skoMC1]/\[[(skoMC1 (-1))<(skoSC1 skoMC1)]/\[[(skoSC1 skoMC1 (-1))<=skoMC1]/\[[(skoSC1 ((skoMC1 (1+(skoMC1 (-3))))+(skoSC1 ((skoMC1 (2+(skoMC1 (3))))+(skoSC1 ((skoMC1 skoMC1)+(skoSC1 skoMC1 (-1/12))))))))<=(skoMC1 (2+(skoMC1 (5))))]/\[[(skoSC1 ((skoMC1 (1+(skoMC1 (-3))))+(skoSC1 ((skoMC1 (2+(skoMC1 (3))))+(skoSC1 ((skoMC1 (-1/6+skoMC1))+(skoSC1 skoMC1 (-1/4))))))))<=(skoMC1 (2+(skoMC1 (5))))]/\[[(skoMC1 (-2+(skoMC1 (-5))))<(skoSC1 ((skoMC1 (-1+(skoMC1 (3))))+(skoSC1 ((skoMC1 (-2+(skoMC1 (-3))))+(skoSC1 ((skoMC1 skoMC1 (-1))+(skoSC1 skoMC1 (1/12))))))))]/\[(skoMC1 (-2+(skoMC1 (-5))))<(skoSC1 ((skoMC1 (-1+(skoMC1 (3))))+(skoSC1 ((skoMC1 (-2+(skoMC1 (-3))))+(skoSC1 ((skoMC1 (1/6+(skoMC1 (-1))))+(skoSC1 skoMC1 (1/4))))))))]]]]]]]]]]]]]]]].

% In SMTLib2 format:
(declare-fun skoSC1 () Real) (declare-fun skoMC1 () Real) (assert (and (> skoSC1 0.) (and (> (* skoMC1 (* skoMC1 (* skoMC1 2.))) 0.) (and (<= (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (+ (- 2.) (* skoMC1 (- 12.)))))) (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (+ 1. (* skoMC1 (- 6.)))))) (* skoSC1 (+ (* skoMC1 (* skoMC1 skoMC1)) (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (/ (- 1.) 12.)))) (* skoSC1 (* skoMC1 (* skoMC1 (* skoMC1 (/ (- 1.) 12.))))))))))))) (* skoMC1 (* skoMC1 (* skoMC1 (+ 2. (* skoMC1 6.)))))) (and (<= (* skoSC1 (* skoMC1 (* skoMC1 (* skoMC1 (- 2.))))) (* skoMC1 (* skoMC1 (* skoMC1 2.)))) (and (> (* skoSC1 (* skoMC1 (* skoMC1 (* skoMC1 2.)))) (* skoMC1 (* skoMC1 (* skoMC1 (- 2.))))) (and (<= skoSC1 (/ 5. 4.)) (and (<= 2. skoMC1) (and (<= 0. skoSC1) (and (> skoMC1 0.) (and (<= 0. skoMC1) (and (> (* skoSC1 skoMC1) (* skoMC1 (- 1.))) (and (<= (* skoSC1 (* skoMC1 (- 1.))) skoMC1) (and (<= (* skoSC1 (+ (* skoMC1 (+ 1. (* skoMC1 (- 3.)))) (* skoSC1 (+ (* skoMC1 (+ 2. (* skoMC1 3.))) (* skoSC1 (+ (* skoMC1 skoMC1) (* skoSC1 (* skoMC1 (/ (- 1.) 12.))))))))) (* skoMC1 (+ 2. (* skoMC1 5.)))) (and (<= (* skoSC1 (+ (* skoMC1 (+ 1. (* skoMC1 (- 3.)))) (* skoSC1 (+ (* skoMC1 (+ 2. (* skoMC1 3.))) (* skoSC1 (+ (* skoMC1 (+ (/ (- 1.) 6.) skoMC1)) (* skoSC1 (* skoMC1 (/ (- 1.) 4.))))))))) (* skoMC1 (+ 2. (* skoMC1 5.)))) (and (> (* skoSC1 (+ (* skoMC1 (+ (- 1.) (* skoMC1 3.))) (* skoSC1 (+ (* skoMC1 (+ (- 2.) (* skoMC1 (- 3.)))) (* skoSC1 (+ (* skoMC1 (* skoMC1 (- 1.))) (* skoSC1 (* skoMC1 (/ 1. 12.))))))))) (* skoMC1 (+ (- 2.) (* skoMC1 (- 5.))))) (> (* skoSC1 (+ (* skoMC1 (+ (- 1.) (* skoMC1 3.))) (* skoSC1 (+ (* skoMC1 (+ (- 2.) (* skoMC1 (- 3.)))) (* skoSC1 (+ (* skoMC1 (+ (/ 1. 6.) (* skoMC1 (- 1.)))) (* skoSC1 (* skoMC1 (/ 1. 4.))))))))) (* skoMC1 (+ (- 2.) (* skoMC1 (- 5.)))))))))))))))))))))

% In GRF format:
(sequent " MetiTarski formula " (antecedent (> skoSC1 0.) (> (* skoMC1 (* skoMC1 (* skoMC1 2.))) 0.) (<= (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (+ (- 2.) (* skoMC1 (- 12.)))))) (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (+ 1. (* skoMC1 (- 6.)))))) (* skoSC1 (+ (* skoMC1 (* skoMC1 skoMC1)) (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (/ (- 1.) 12.)))) (* skoSC1 (* skoMC1 (* skoMC1 (* skoMC1 (/ (- 1.) 12.))))))))))))) (* skoMC1 (* skoMC1 (* skoMC1 (+ 2. (* skoMC1 6.)))))) (<= (* skoSC1 (* skoMC1 (* skoMC1 (* skoMC1 (- 2.))))) (* skoMC1 (* skoMC1 (* skoMC1 2.)))) (> (* skoSC1 (* skoMC1 (* skoMC1 (* skoMC1 2.)))) (* skoMC1 (* skoMC1 (* skoMC1 (- 2.))))) (<= skoSC1 (/ 5. 4.)) (<= 2. skoMC1) (<= 0. skoSC1) (> skoMC1 0.) (<= 0. skoMC1) (> (* skoSC1 skoMC1) (* skoMC1 (- 1.))) (<= (* skoSC1 (* skoMC1 (- 1.))) skoMC1) (<= (* skoSC1 (+ (* skoMC1 (+ 1. (* skoMC1 (- 3.)))) (* skoSC1 (+ (* skoMC1 (+ 2. (* skoMC1 3.))) (* skoSC1 (+ (* skoMC1 skoMC1) (* skoSC1 (* skoMC1 (/ (- 1.) 12.))))))))) (* skoMC1 (+ 2. (* skoMC1 5.)))) (<= (* skoSC1 (+ (* skoMC1 (+ 1. (* skoMC1 (- 3.)))) (* skoSC1 (+ (* skoMC1 (+ 2. (* skoMC1 3.))) (* skoSC1 (+ (* skoMC1 (+ (/ (- 1.) 6.) skoMC1)) (* skoSC1 (* skoMC1 (/ (- 1.) 4.))))))))) (* skoMC1 (+ 2. (* skoMC1 5.)))) (> (* skoSC1 (+ (* skoMC1 (+ (- 1.) (* skoMC1 3.))) (* skoSC1 (+ (* skoMC1 (+ (- 2.) (* skoMC1 (- 3.)))) (* skoSC1 (+ (* skoMC1 (* skoMC1 (- 1.))) (* skoSC1 (* skoMC1 (/ 1. 12.))))))))) (* skoMC1 (+ (- 2.) (* skoMC1 (- 5.)))))) (succedent (<= (* skoSC1 (+ (* skoMC1 (+ (- 1.) (* skoMC1 3.))) (* skoSC1 (+ (* skoMC1 (+ (- 2.) (* skoMC1 (- 3.)))) (* skoSC1 (+ (* skoMC1 (+ (/ 1. 6.) (* skoMC1 (- 1.)))) (* skoSC1 (* skoMC1 (/ 1. 4.))))))))) (* skoMC1 (+ (- 2.) (* skoMC1 (- 5.)))))))
-----[end problem]-----

-----[begin problem]-----
% In Mathematica format:
Timing[Resolve[Exists[{skoSC1,skoMC1}, And[skoMC1*skoMC1*skoMC1*-2<=0,skoMC1*skoMC1*skoMC1*2>0,skoSC1*(skoMC1*skoMC1*skoMC1*(-2+skoMC1*-12)+skoSC1*(skoMC1*skoMC1*skoMC1*(1+skoMC1*-6)+skoSC1*(skoMC1*skoMC1*skoMC1+skoSC1*(skoMC1*skoMC1*skoMC1*(-1/12)+skoSC1*skoMC1*skoMC1*skoMC1*(-1/12)))))<=skoMC1*skoMC1*skoMC1*(2+skoMC1*6),skoSC1*skoMC1*skoMC1*skoMC1*-2<=skoMC1*skoMC1*skoMC1*2,skoSC1*skoMC1*skoMC1*skoMC1*2>skoMC1*skoMC1*skoMC1*-2,skoSC1<=(5/4),2<=skoMC1,0<=skoSC1,skoMC1>0,0<=skoMC1,skoSC1*skoMC1>skoMC1*-1,skoSC1*skoMC1*-1<=skoMC1,skoSC1*(skoMC1*(1+skoMC1*-3)+skoSC1*(skoMC1*(2+skoMC1*3)+skoSC1*(skoMC1*skoMC1+skoSC1*skoMC1*(-1/12))))<=skoMC1*(2+skoMC1*5),skoSC1*(skoMC1*(1+skoMC1*-3)+skoSC1*(skoMC1*(2+skoMC1*3)+skoSC1*(skoMC1*((-1/6)+skoMC1)+skoSC1*skoMC1*(-1/4))))<=skoMC1*(2+skoMC1*5),skoSC1*(skoMC1*(-1+skoMC1*3)+skoSC1*(skoMC1*(-2+skoMC1*-3)+skoSC1*(skoMC1*skoMC1*-1+skoSC1*skoMC1*(1/12))))>skoMC1*(-2+skoMC1*-5),skoSC1*(skoMC1*(-1+skoMC1*3)+skoSC1*(skoMC1*(-2+skoMC1*-3)+skoSC1*(skoMC1*((1/6)+skoMC1*-1)+skoSC1*skoMC1*(1/4))))>skoMC1*(-2+skoMC1*-5)]], Reals]]

% In QepcadB format:
(E skoSC1) (E skoMC1) [[(skoMC1 skoMC1 skoMC1 (-2))<=0]/\[[0<(skoMC1 skoMC1 skoMC1 (2))]/\[[(skoSC1 ((skoMC1 skoMC1 skoMC1 (-2+(skoMC1 (-12))))+(skoSC1 ((skoMC1 skoMC1 skoMC1 (1+(skoMC1 (-6))))+(skoSC1 ((skoMC1 skoMC1 skoMC1)+(skoSC1 ((skoMC1 skoMC1 skoMC1 (-1/12))+(skoSC1 skoMC1 skoMC1 skoMC1 (-1/12))))))))))<=(skoMC1 skoMC1 skoMC1 (2+(skoMC1 (6))))]/\[[(skoSC1 skoMC1 skoMC1 skoMC1 (-2))<=(skoMC1 skoMC1 skoMC1 (2))]/\[[(skoMC1 skoMC1 skoMC1 (-2))<(skoSC1 skoMC1 skoMC1 skoMC1 (2))]/\[[skoSC1<=5/4]/\[[2<=skoMC1]/\[[0<=skoSC1]/\[[0<skoMC1]/\[[0<=skoMC1]/\[[(skoMC1 (-1))<(skoSC1 skoMC1)]/\[[(skoSC1 skoMC1 (-1))<=skoMC1]/\[[(skoSC1 ((skoMC1 (1+(skoMC1 (-3))))+(skoSC1 ((skoMC1 (2+(skoMC1 (3))))+(skoSC1 ((skoMC1 skoMC1)+(skoSC1 skoMC1 (-1/12))))))))<=(skoMC1 (2+(skoMC1 (5))))]/\[[(skoSC1 ((skoMC1 (1+(skoMC1 (-3))))+(skoSC1 ((skoMC1 (2+(skoMC1 (3))))+(skoSC1 ((skoMC1 (-1/6+skoMC1))+(skoSC1 skoMC1 (-1/4))))))))<=(skoMC1 (2+(skoMC1 (5))))]/\[[(skoMC1 (-2+(skoMC1 (-5))))<(skoSC1 ((skoMC1 (-1+(skoMC1 (3))))+(skoSC1 ((skoMC1 (-2+(skoMC1 (-3))))+(skoSC1 ((skoMC1 skoMC1 (-1))+(skoSC1 skoMC1 (1/12))))))))]/\[(skoMC1 (-2+(skoMC1 (-5))))<(skoSC1 ((skoMC1 (-1+(skoMC1 (3))))+(skoSC1 ((skoMC1 (-2+(skoMC1 (-3))))+(skoSC1 ((skoMC1 (1/6+(skoMC1 (-1))))+(skoSC1 skoMC1 (1/4))))))))]]]]]]]]]]]]]]]].

% In SMTLib2 format:
(declare-fun skoSC1 () Real) (declare-fun skoMC1 () Real) (assert (and (<= (* skoMC1 (* skoMC1 (* skoMC1 (- 2.)))) 0.) (and (> (* skoMC1 (* skoMC1 (* skoMC1 2.))) 0.) (and (<= (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (+ (- 2.) (* skoMC1 (- 12.)))))) (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (+ 1. (* skoMC1 (- 6.)))))) (* skoSC1 (+ (* skoMC1 (* skoMC1 skoMC1)) (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (/ (- 1.) 12.)))) (* skoSC1 (* skoMC1 (* skoMC1 (* skoMC1 (/ (- 1.) 12.))))))))))))) (* skoMC1 (* skoMC1 (* skoMC1 (+ 2. (* skoMC1 6.)))))) (and (<= (* skoSC1 (* skoMC1 (* skoMC1 (* skoMC1 (- 2.))))) (* skoMC1 (* skoMC1 (* skoMC1 2.)))) (and (> (* skoSC1 (* skoMC1 (* skoMC1 (* skoMC1 2.)))) (* skoMC1 (* skoMC1 (* skoMC1 (- 2.))))) (and (<= skoSC1 (/ 5. 4.)) (and (<= 2. skoMC1) (and (<= 0. skoSC1) (and (> skoMC1 0.) (and (<= 0. skoMC1) (and (> (* skoSC1 skoMC1) (* skoMC1 (- 1.))) (and (<= (* skoSC1 (* skoMC1 (- 1.))) skoMC1) (and (<= (* skoSC1 (+ (* skoMC1 (+ 1. (* skoMC1 (- 3.)))) (* skoSC1 (+ (* skoMC1 (+ 2. (* skoMC1 3.))) (* skoSC1 (+ (* skoMC1 skoMC1) (* skoSC1 (* skoMC1 (/ (- 1.) 12.))))))))) (* skoMC1 (+ 2. (* skoMC1 5.)))) (and (<= (* skoSC1 (+ (* skoMC1 (+ 1. (* skoMC1 (- 3.)))) (* skoSC1 (+ (* skoMC1 (+ 2. (* skoMC1 3.))) (* skoSC1 (+ (* skoMC1 (+ (/ (- 1.) 6.) skoMC1)) (* skoSC1 (* skoMC1 (/ (- 1.) 4.))))))))) (* skoMC1 (+ 2. (* skoMC1 5.)))) (and (> (* skoSC1 (+ (* skoMC1 (+ (- 1.) (* skoMC1 3.))) (* skoSC1 (+ (* skoMC1 (+ (- 2.) (* skoMC1 (- 3.)))) (* skoSC1 (+ (* skoMC1 (* skoMC1 (- 1.))) (* skoSC1 (* skoMC1 (/ 1. 12.))))))))) (* skoMC1 (+ (- 2.) (* skoMC1 (- 5.))))) (> (* skoSC1 (+ (* skoMC1 (+ (- 1.) (* skoMC1 3.))) (* skoSC1 (+ (* skoMC1 (+ (- 2.) (* skoMC1 (- 3.)))) (* skoSC1 (+ (* skoMC1 (+ (/ 1. 6.) (* skoMC1 (- 1.)))) (* skoSC1 (* skoMC1 (/ 1. 4.))))))))) (* skoMC1 (+ (- 2.) (* skoMC1 (- 5.)))))))))))))))))))))

% In GRF format:
(sequent " MetiTarski formula " (antecedent (<= (* skoMC1 (* skoMC1 (* skoMC1 (- 2.)))) 0.) (> (* skoMC1 (* skoMC1 (* skoMC1 2.))) 0.) (<= (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (+ (- 2.) (* skoMC1 (- 12.)))))) (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (+ 1. (* skoMC1 (- 6.)))))) (* skoSC1 (+ (* skoMC1 (* skoMC1 skoMC1)) (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (/ (- 1.) 12.)))) (* skoSC1 (* skoMC1 (* skoMC1 (* skoMC1 (/ (- 1.) 12.))))))))))))) (* skoMC1 (* skoMC1 (* skoMC1 (+ 2. (* skoMC1 6.)))))) (<= (* skoSC1 (* skoMC1 (* skoMC1 (* skoMC1 (- 2.))))) (* skoMC1 (* skoMC1 (* skoMC1 2.)))) (> (* skoSC1 (* skoMC1 (* skoMC1 (* skoMC1 2.)))) (* skoMC1 (* skoMC1 (* skoMC1 (- 2.))))) (<= skoSC1 (/ 5. 4.)) (<= 2. skoMC1) (<= 0. skoSC1) (> skoMC1 0.) (<= 0. skoMC1) (> (* skoSC1 skoMC1) (* skoMC1 (- 1.))) (<= (* skoSC1 (* skoMC1 (- 1.))) skoMC1) (<= (* skoSC1 (+ (* skoMC1 (+ 1. (* skoMC1 (- 3.)))) (* skoSC1 (+ (* skoMC1 (+ 2. (* skoMC1 3.))) (* skoSC1 (+ (* skoMC1 skoMC1) (* skoSC1 (* skoMC1 (/ (- 1.) 12.))))))))) (* skoMC1 (+ 2. (* skoMC1 5.)))) (<= (* skoSC1 (+ (* skoMC1 (+ 1. (* skoMC1 (- 3.)))) (* skoSC1 (+ (* skoMC1 (+ 2. (* skoMC1 3.))) (* skoSC1 (+ (* skoMC1 (+ (/ (- 1.) 6.) skoMC1)) (* skoSC1 (* skoMC1 (/ (- 1.) 4.))))))))) (* skoMC1 (+ 2. (* skoMC1 5.)))) (> (* skoSC1 (+ (* skoMC1 (+ (- 1.) (* skoMC1 3.))) (* skoSC1 (+ (* skoMC1 (+ (- 2.) (* skoMC1 (- 3.)))) (* skoSC1 (+ (* skoMC1 (* skoMC1 (- 1.))) (* skoSC1 (* skoMC1 (/ 1. 12.))))))))) (* skoMC1 (+ (- 2.) (* skoMC1 (- 5.)))))) (succedent (<= (* skoSC1 (+ (* skoMC1 (+ (- 1.) (* skoMC1 3.))) (* skoSC1 (+ (* skoMC1 (+ (- 2.) (* skoMC1 (- 3.)))) (* skoSC1 (+ (* skoMC1 (+ (/ 1. 6.) (* skoMC1 (- 1.)))) (* skoSC1 (* skoMC1 (/ 1. 4.))))))))) (* skoMC1 (+ (- 2.) (* skoMC1 (- 5.)))))))
-----[end problem]-----

-----[begin problem]-----
% In Mathematica format:
Timing[Resolve[Exists[{skoSC1,skoMC1}, And[skoMC1*skoMC1*skoMC1*2>0,skoSC1*skoMC1*skoMC1*skoMC1>skoMC1*skoMC1*skoMC1*-1,skoMC1*skoMC1*skoMC1*-2<=0,skoMC1*skoMC1*skoMC1*2>0,skoSC1*(skoMC1*skoMC1*skoMC1*(-2+skoMC1*-12)+skoSC1*(skoMC1*skoMC1*skoMC1*(1+skoMC1*-6)+skoSC1*(skoMC1*skoMC1*skoMC1+skoSC1*(skoMC1*skoMC1*skoMC1*(-1/12)+skoSC1*skoMC1*skoMC1*skoMC1*(-1/12)))))<=skoMC1*skoMC1*skoMC1*(2+skoMC1*6),skoSC1*skoMC1*skoMC1*skoMC1*-2<=skoMC1*skoMC1*skoMC1*2,skoSC1*skoMC1*skoMC1*skoMC1*2>skoMC1*skoMC1*skoMC1*-2,skoSC1<=(5/4),2<=skoMC1,0<=skoSC1,skoMC1>0,0<=skoMC1,skoSC1*skoMC1>skoMC1*-1,skoSC1*skoMC1*-1<=skoMC1,skoSC1*(skoMC1*(1+skoMC1*-3)+skoSC1*(skoMC1*(2+skoMC1*3)+skoSC1*(skoMC1*skoMC1+skoSC1*skoMC1*(-1/12))))<=skoMC1*(2+skoMC1*5),skoSC1*(skoMC1*(1+skoMC1*-3)+skoSC1*(skoMC1*(2+skoMC1*3)+skoSC1*(skoMC1*((-1/6)+skoMC1)+skoSC1*skoMC1*(-1/4))))<=skoMC1*(2+skoMC1*5),skoSC1*(skoMC1*(-1+skoMC1*3)+skoSC1*(skoMC1*(-2+skoMC1*-3)+skoSC1*(skoMC1*skoMC1*-1+skoSC1*skoMC1*(1/12))))>skoMC1*(-2+skoMC1*-5),skoSC1*(skoMC1*(-1+skoMC1*3)+skoSC1*(skoMC1*(-2+skoMC1*-3)+skoSC1*(skoMC1*((1/6)+skoMC1*-1)+skoSC1*skoMC1*(1/4))))>skoMC1*(-2+skoMC1*-5)]], Reals]]

% In QepcadB format:
(E skoSC1) (E skoMC1) [[0<(skoMC1 skoMC1 skoMC1 (2))]/\[[(skoMC1 skoMC1 skoMC1 (-1))<(skoSC1 skoMC1 skoMC1 skoMC1)]/\[[(skoMC1 skoMC1 skoMC1 (-2))<=0]/\[[0<(skoMC1 skoMC1 skoMC1 (2))]/\[[(skoSC1 ((skoMC1 skoMC1 skoMC1 (-2+(skoMC1 (-12))))+(skoSC1 ((skoMC1 skoMC1 skoMC1 (1+(skoMC1 (-6))))+(skoSC1 ((skoMC1 skoMC1 skoMC1)+(skoSC1 ((skoMC1 skoMC1 skoMC1 (-1/12))+(skoSC1 skoMC1 skoMC1 skoMC1 (-1/12))))))))))<=(skoMC1 skoMC1 skoMC1 (2+(skoMC1 (6))))]/\[[(skoSC1 skoMC1 skoMC1 skoMC1 (-2))<=(skoMC1 skoMC1 skoMC1 (2))]/\[[(skoMC1 skoMC1 skoMC1 (-2))<(skoSC1 skoMC1 skoMC1 skoMC1 (2))]/\[[skoSC1<=5/4]/\[[2<=skoMC1]/\[[0<=skoSC1]/\[[0<skoMC1]/\[[0<=skoMC1]/\[[(skoMC1 (-1))<(skoSC1 skoMC1)]/\[[(skoSC1 skoMC1 (-1))<=skoMC1]/\[[(skoSC1 ((skoMC1 (1+(skoMC1 (-3))))+(skoSC1 ((skoMC1 (2+(skoMC1 (3))))+(skoSC1 ((skoMC1 skoMC1)+(skoSC1 skoMC1 (-1/12))))))))<=(skoMC1 (2+(skoMC1 (5))))]/\[[(skoSC1 ((skoMC1 (1+(skoMC1 (-3))))+(skoSC1 ((skoMC1 (2+(skoMC1 (3))))+(skoSC1 ((skoMC1 (-1/6+skoMC1))+(skoSC1 skoMC1 (-1/4))))))))<=(skoMC1 (2+(skoMC1 (5))))]/\[[(skoMC1 (-2+(skoMC1 (-5))))<(skoSC1 ((skoMC1 (-1+(skoMC1 (3))))+(skoSC1 ((skoMC1 (-2+(skoMC1 (-3))))+(skoSC1 ((skoMC1 skoMC1 (-1))+(skoSC1 skoMC1 (1/12))))))))]/\[(skoMC1 (-2+(skoMC1 (-5))))<(skoSC1 ((skoMC1 (-1+(skoMC1 (3))))+(skoSC1 ((skoMC1 (-2+(skoMC1 (-3))))+(skoSC1 ((skoMC1 (1/6+(skoMC1 (-1))))+(skoSC1 skoMC1 (1/4))))))))]]]]]]]]]]]]]]]]]].

% In SMTLib2 format:
(declare-fun skoSC1 () Real) (declare-fun skoMC1 () Real) (assert (and (> (* skoMC1 (* skoMC1 (* skoMC1 2.))) 0.) (and (> (* skoSC1 (* skoMC1 (* skoMC1 skoMC1))) (* skoMC1 (* skoMC1 (* skoMC1 (- 1.))))) (and (<= (* skoMC1 (* skoMC1 (* skoMC1 (- 2.)))) 0.) (and (> (* skoMC1 (* skoMC1 (* skoMC1 2.))) 0.) (and (<= (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (+ (- 2.) (* skoMC1 (- 12.)))))) (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (+ 1. (* skoMC1 (- 6.)))))) (* skoSC1 (+ (* skoMC1 (* skoMC1 skoMC1)) (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (/ (- 1.) 12.)))) (* skoSC1 (* skoMC1 (* skoMC1 (* skoMC1 (/ (- 1.) 12.))))))))))))) (* skoMC1 (* skoMC1 (* skoMC1 (+ 2. (* skoMC1 6.)))))) (and (<= (* skoSC1 (* skoMC1 (* skoMC1 (* skoMC1 (- 2.))))) (* skoMC1 (* skoMC1 (* skoMC1 2.)))) (and (> (* skoSC1 (* skoMC1 (* skoMC1 (* skoMC1 2.)))) (* skoMC1 (* skoMC1 (* skoMC1 (- 2.))))) (and (<= skoSC1 (/ 5. 4.)) (and (<= 2. skoMC1) (and (<= 0. skoSC1) (and (> skoMC1 0.) (and (<= 0. skoMC1) (and (> (* skoSC1 skoMC1) (* skoMC1 (- 1.))) (and (<= (* skoSC1 (* skoMC1 (- 1.))) skoMC1) (and (<= (* skoSC1 (+ (* skoMC1 (+ 1. (* skoMC1 (- 3.)))) (* skoSC1 (+ (* skoMC1 (+ 2. (* skoMC1 3.))) (* skoSC1 (+ (* skoMC1 skoMC1) (* skoSC1 (* skoMC1 (/ (- 1.) 12.))))))))) (* skoMC1 (+ 2. (* skoMC1 5.)))) (and (<= (* skoSC1 (+ (* skoMC1 (+ 1. (* skoMC1 (- 3.)))) (* skoSC1 (+ (* skoMC1 (+ 2. (* skoMC1 3.))) (* skoSC1 (+ (* skoMC1 (+ (/ (- 1.) 6.) skoMC1)) (* skoSC1 (* skoMC1 (/ (- 1.) 4.))))))))) (* skoMC1 (+ 2. (* skoMC1 5.)))) (and (> (* skoSC1 (+ (* skoMC1 (+ (- 1.) (* skoMC1 3.))) (* skoSC1 (+ (* skoMC1 (+ (- 2.) (* skoMC1 (- 3.)))) (* skoSC1 (+ (* skoMC1 (* skoMC1 (- 1.))) (* skoSC1 (* skoMC1 (/ 1. 12.))))))))) (* skoMC1 (+ (- 2.) (* skoMC1 (- 5.))))) (> (* skoSC1 (+ (* skoMC1 (+ (- 1.) (* skoMC1 3.))) (* skoSC1 (+ (* skoMC1 (+ (- 2.) (* skoMC1 (- 3.)))) (* skoSC1 (+ (* skoMC1 (+ (/ 1. 6.) (* skoMC1 (- 1.)))) (* skoSC1 (* skoMC1 (/ 1. 4.))))))))) (* skoMC1 (+ (- 2.) (* skoMC1 (- 5.)))))))))))))))))))))))

% In GRF format:
(sequent " MetiTarski formula " (antecedent (> (* skoMC1 (* skoMC1 (* skoMC1 2.))) 0.) (> (* skoSC1 (* skoMC1 (* skoMC1 skoMC1))) (* skoMC1 (* skoMC1 (* skoMC1 (- 1.))))) (<= (* skoMC1 (* skoMC1 (* skoMC1 (- 2.)))) 0.) (> (* skoMC1 (* skoMC1 (* skoMC1 2.))) 0.) (<= (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (+ (- 2.) (* skoMC1 (- 12.)))))) (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (+ 1. (* skoMC1 (- 6.)))))) (* skoSC1 (+ (* skoMC1 (* skoMC1 skoMC1)) (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (/ (- 1.) 12.)))) (* skoSC1 (* skoMC1 (* skoMC1 (* skoMC1 (/ (- 1.) 12.))))))))))))) (* skoMC1 (* skoMC1 (* skoMC1 (+ 2. (* skoMC1 6.)))))) (<= (* skoSC1 (* skoMC1 (* skoMC1 (* skoMC1 (- 2.))))) (* skoMC1 (* skoMC1 (* skoMC1 2.)))) (> (* skoSC1 (* skoMC1 (* skoMC1 (* skoMC1 2.)))) (* skoMC1 (* skoMC1 (* skoMC1 (- 2.))))) (<= skoSC1 (/ 5. 4.)) (<= 2. skoMC1) (<= 0. skoSC1) (> skoMC1 0.) (<= 0. skoMC1) (> (* skoSC1 skoMC1) (* skoMC1 (- 1.))) (<= (* skoSC1 (* skoMC1 (- 1.))) skoMC1) (<= (* skoSC1 (+ (* skoMC1 (+ 1. (* skoMC1 (- 3.)))) (* skoSC1 (+ (* skoMC1 (+ 2. (* skoMC1 3.))) (* skoSC1 (+ (* skoMC1 skoMC1) (* skoSC1 (* skoMC1 (/ (- 1.) 12.))))))))) (* skoMC1 (+ 2. (* skoMC1 5.)))) (<= (* skoSC1 (+ (* skoMC1 (+ 1. (* skoMC1 (- 3.)))) (* skoSC1 (+ (* skoMC1 (+ 2. (* skoMC1 3.))) (* skoSC1 (+ (* skoMC1 (+ (/ (- 1.) 6.) skoMC1)) (* skoSC1 (* skoMC1 (/ (- 1.) 4.))))))))) (* skoMC1 (+ 2. (* skoMC1 5.)))) (> (* skoSC1 (+ (* skoMC1 (+ (- 1.) (* skoMC1 3.))) (* skoSC1 (+ (* skoMC1 (+ (- 2.) (* skoMC1 (- 3.)))) (* skoSC1 (+ (* skoMC1 (* skoMC1 (- 1.))) (* skoSC1 (* skoMC1 (/ 1. 12.))))))))) (* skoMC1 (+ (- 2.) (* skoMC1 (- 5.)))))) (succedent (<= (* skoSC1 (+ (* skoMC1 (+ (- 1.) (* skoMC1 3.))) (* skoSC1 (+ (* skoMC1 (+ (- 2.) (* skoMC1 (- 3.)))) (* skoSC1 (+ (* skoMC1 (+ (/ 1. 6.) (* skoMC1 (- 1.)))) (* skoSC1 (* skoMC1 (/ 1. 4.))))))))) (* skoMC1 (+ (- 2.) (* skoMC1 (- 5.)))))))
-----[end problem]-----

-----[begin problem]-----
% In Mathematica format:
Timing[Resolve[Exists[{skoSC1,skoMC1}, And[skoSC1*skoMC1*skoMC1*skoMC1>skoMC1*skoMC1*skoMC1*-1,skoMC1*skoMC1*skoMC1*-2<=0,skoMC1*skoMC1*skoMC1*2>0,skoSC1*(skoMC1*skoMC1*skoMC1*(-2+skoMC1*-12)+skoSC1*(skoMC1*skoMC1*skoMC1*(1+skoMC1*-6)+skoSC1*(skoMC1*skoMC1*skoMC1+skoSC1*(skoMC1*skoMC1*skoMC1*(-1/12)+skoSC1*skoMC1*skoMC1*skoMC1*(-1/12)))))<=skoMC1*skoMC1*skoMC1*(2+skoMC1*6),skoSC1*skoMC1*skoMC1*skoMC1*-2<=skoMC1*skoMC1*skoMC1*2,skoSC1*skoMC1*skoMC1*skoMC1*2>skoMC1*skoMC1*skoMC1*-2,skoSC1<=(5/4),2<=skoMC1,0<=skoSC1,skoMC1>0,0<=skoMC1,skoSC1*skoMC1>skoMC1*-1,skoSC1*skoMC1*-1<=skoMC1,skoSC1*(skoMC1*(1+skoMC1*-3)+skoSC1*(skoMC1*(2+skoMC1*3)+skoSC1*(skoMC1*skoMC1+skoSC1*skoMC1*(-1/12))))<=skoMC1*(2+skoMC1*5),skoSC1*(skoMC1*(1+skoMC1*-3)+skoSC1*(skoMC1*(2+skoMC1*3)+skoSC1*(skoMC1*((-1/6)+skoMC1)+skoSC1*skoMC1*(-1/4))))<=skoMC1*(2+skoMC1*5),skoSC1*(skoMC1*(-1+skoMC1*3)+skoSC1*(skoMC1*(-2+skoMC1*-3)+skoSC1*(skoMC1*skoMC1*-1+skoSC1*skoMC1*(1/12))))>skoMC1*(-2+skoMC1*-5),skoSC1*(skoMC1*(-1+skoMC1*3)+skoSC1*(skoMC1*(-2+skoMC1*-3)+skoSC1*(skoMC1*((1/6)+skoMC1*-1)+skoSC1*skoMC1*(1/4))))>skoMC1*(-2+skoMC1*-5)]], Reals]]

% In QepcadB format:
(E skoSC1) (E skoMC1) [[(skoMC1 skoMC1 skoMC1 (-1))<(skoSC1 skoMC1 skoMC1 skoMC1)]/\[[(skoMC1 skoMC1 skoMC1 (-2))<=0]/\[[0<(skoMC1 skoMC1 skoMC1 (2))]/\[[(skoSC1 ((skoMC1 skoMC1 skoMC1 (-2+(skoMC1 (-12))))+(skoSC1 ((skoMC1 skoMC1 skoMC1 (1+(skoMC1 (-6))))+(skoSC1 ((skoMC1 skoMC1 skoMC1)+(skoSC1 ((skoMC1 skoMC1 skoMC1 (-1/12))+(skoSC1 skoMC1 skoMC1 skoMC1 (-1/12))))))))))<=(skoMC1 skoMC1 skoMC1 (2+(skoMC1 (6))))]/\[[(skoSC1 skoMC1 skoMC1 skoMC1 (-2))<=(skoMC1 skoMC1 skoMC1 (2))]/\[[(skoMC1 skoMC1 skoMC1 (-2))<(skoSC1 skoMC1 skoMC1 skoMC1 (2))]/\[[skoSC1<=5/4]/\[[2<=skoMC1]/\[[0<=skoSC1]/\[[0<skoMC1]/\[[0<=skoMC1]/\[[(skoMC1 (-1))<(skoSC1 skoMC1)]/\[[(skoSC1 skoMC1 (-1))<=skoMC1]/\[[(skoSC1 ((skoMC1 (1+(skoMC1 (-3))))+(skoSC1 ((skoMC1 (2+(skoMC1 (3))))+(skoSC1 ((skoMC1 skoMC1)+(skoSC1 skoMC1 (-1/12))))))))<=(skoMC1 (2+(skoMC1 (5))))]/\[[(skoSC1 ((skoMC1 (1+(skoMC1 (-3))))+(skoSC1 ((skoMC1 (2+(skoMC1 (3))))+(skoSC1 ((skoMC1 (-1/6+skoMC1))+(skoSC1 skoMC1 (-1/4))))))))<=(skoMC1 (2+(skoMC1 (5))))]/\[[(skoMC1 (-2+(skoMC1 (-5))))<(skoSC1 ((skoMC1 (-1+(skoMC1 (3))))+(skoSC1 ((skoMC1 (-2+(skoMC1 (-3))))+(skoSC1 ((skoMC1 skoMC1 (-1))+(skoSC1 skoMC1 (1/12))))))))]/\[(skoMC1 (-2+(skoMC1 (-5))))<(skoSC1 ((skoMC1 (-1+(skoMC1 (3))))+(skoSC1 ((skoMC1 (-2+(skoMC1 (-3))))+(skoSC1 ((skoMC1 (1/6+(skoMC1 (-1))))+(skoSC1 skoMC1 (1/4))))))))]]]]]]]]]]]]]]]]].

% In SMTLib2 format:
(declare-fun skoSC1 () Real) (declare-fun skoMC1 () Real) (assert (and (> (* skoSC1 (* skoMC1 (* skoMC1 skoMC1))) (* skoMC1 (* skoMC1 (* skoMC1 (- 1.))))) (and (<= (* skoMC1 (* skoMC1 (* skoMC1 (- 2.)))) 0.) (and (> (* skoMC1 (* skoMC1 (* skoMC1 2.))) 0.) (and (<= (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (+ (- 2.) (* skoMC1 (- 12.)))))) (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (+ 1. (* skoMC1 (- 6.)))))) (* skoSC1 (+ (* skoMC1 (* skoMC1 skoMC1)) (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (/ (- 1.) 12.)))) (* skoSC1 (* skoMC1 (* skoMC1 (* skoMC1 (/ (- 1.) 12.))))))))))))) (* skoMC1 (* skoMC1 (* skoMC1 (+ 2. (* skoMC1 6.)))))) (and (<= (* skoSC1 (* skoMC1 (* skoMC1 (* skoMC1 (- 2.))))) (* skoMC1 (* skoMC1 (* skoMC1 2.)))) (and (> (* skoSC1 (* skoMC1 (* skoMC1 (* skoMC1 2.)))) (* skoMC1 (* skoMC1 (* skoMC1 (- 2.))))) (and (<= skoSC1 (/ 5. 4.)) (and (<= 2. skoMC1) (and (<= 0. skoSC1) (and (> skoMC1 0.) (and (<= 0. skoMC1) (and (> (* skoSC1 skoMC1) (* skoMC1 (- 1.))) (and (<= (* skoSC1 (* skoMC1 (- 1.))) skoMC1) (and (<= (* skoSC1 (+ (* skoMC1 (+ 1. (* skoMC1 (- 3.)))) (* skoSC1 (+ (* skoMC1 (+ 2. (* skoMC1 3.))) (* skoSC1 (+ (* skoMC1 skoMC1) (* skoSC1 (* skoMC1 (/ (- 1.) 12.))))))))) (* skoMC1 (+ 2. (* skoMC1 5.)))) (and (<= (* skoSC1 (+ (* skoMC1 (+ 1. (* skoMC1 (- 3.)))) (* skoSC1 (+ (* skoMC1 (+ 2. (* skoMC1 3.))) (* skoSC1 (+ (* skoMC1 (+ (/ (- 1.) 6.) skoMC1)) (* skoSC1 (* skoMC1 (/ (- 1.) 4.))))))))) (* skoMC1 (+ 2. (* skoMC1 5.)))) (and (> (* skoSC1 (+ (* skoMC1 (+ (- 1.) (* skoMC1 3.))) (* skoSC1 (+ (* skoMC1 (+ (- 2.) (* skoMC1 (- 3.)))) (* skoSC1 (+ (* skoMC1 (* skoMC1 (- 1.))) (* skoSC1 (* skoMC1 (/ 1. 12.))))))))) (* skoMC1 (+ (- 2.) (* skoMC1 (- 5.))))) (> (* skoSC1 (+ (* skoMC1 (+ (- 1.) (* skoMC1 3.))) (* skoSC1 (+ (* skoMC1 (+ (- 2.) (* skoMC1 (- 3.)))) (* skoSC1 (+ (* skoMC1 (+ (/ 1. 6.) (* skoMC1 (- 1.)))) (* skoSC1 (* skoMC1 (/ 1. 4.))))))))) (* skoMC1 (+ (- 2.) (* skoMC1 (- 5.))))))))))))))))))))))

% In GRF format:
(sequent " MetiTarski formula " (antecedent (> (* skoSC1 (* skoMC1 (* skoMC1 skoMC1))) (* skoMC1 (* skoMC1 (* skoMC1 (- 1.))))) (<= (* skoMC1 (* skoMC1 (* skoMC1 (- 2.)))) 0.) (> (* skoMC1 (* skoMC1 (* skoMC1 2.))) 0.) (<= (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (+ (- 2.) (* skoMC1 (- 12.)))))) (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (+ 1. (* skoMC1 (- 6.)))))) (* skoSC1 (+ (* skoMC1 (* skoMC1 skoMC1)) (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (/ (- 1.) 12.)))) (* skoSC1 (* skoMC1 (* skoMC1 (* skoMC1 (/ (- 1.) 12.))))))))))))) (* skoMC1 (* skoMC1 (* skoMC1 (+ 2. (* skoMC1 6.)))))) (<= (* skoSC1 (* skoMC1 (* skoMC1 (* skoMC1 (- 2.))))) (* skoMC1 (* skoMC1 (* skoMC1 2.)))) (> (* skoSC1 (* skoMC1 (* skoMC1 (* skoMC1 2.)))) (* skoMC1 (* skoMC1 (* skoMC1 (- 2.))))) (<= skoSC1 (/ 5. 4.)) (<= 2. skoMC1) (<= 0. skoSC1) (> skoMC1 0.) (<= 0. skoMC1) (> (* skoSC1 skoMC1) (* skoMC1 (- 1.))) (<= (* skoSC1 (* skoMC1 (- 1.))) skoMC1) (<= (* skoSC1 (+ (* skoMC1 (+ 1. (* skoMC1 (- 3.)))) (* skoSC1 (+ (* skoMC1 (+ 2. (* skoMC1 3.))) (* skoSC1 (+ (* skoMC1 skoMC1) (* skoSC1 (* skoMC1 (/ (- 1.) 12.))))))))) (* skoMC1 (+ 2. (* skoMC1 5.)))) (<= (* skoSC1 (+ (* skoMC1 (+ 1. (* skoMC1 (- 3.)))) (* skoSC1 (+ (* skoMC1 (+ 2. (* skoMC1 3.))) (* skoSC1 (+ (* skoMC1 (+ (/ (- 1.) 6.) skoMC1)) (* skoSC1 (* skoMC1 (/ (- 1.) 4.))))))))) (* skoMC1 (+ 2. (* skoMC1 5.)))) (> (* skoSC1 (+ (* skoMC1 (+ (- 1.) (* skoMC1 3.))) (* skoSC1 (+ (* skoMC1 (+ (- 2.) (* skoMC1 (- 3.)))) (* skoSC1 (+ (* skoMC1 (* skoMC1 (- 1.))) (* skoSC1 (* skoMC1 (/ 1. 12.))))))))) (* skoMC1 (+ (- 2.) (* skoMC1 (- 5.)))))) (succedent (<= (* skoSC1 (+ (* skoMC1 (+ (- 1.) (* skoMC1 3.))) (* skoSC1 (+ (* skoMC1 (+ (- 2.) (* skoMC1 (- 3.)))) (* skoSC1 (+ (* skoMC1 (+ (/ 1. 6.) (* skoMC1 (- 1.)))) (* skoSC1 (* skoMC1 (/ 1. 4.))))))))) (* skoMC1 (+ (- 2.) (* skoMC1 (- 5.)))))))
-----[end problem]-----

-----[begin problem]-----
% In Mathematica format:
Timing[Resolve[Exists[{skoSC1,skoMC1}, And[skoSC1*skoMC1*skoMC1*skoMC1*-1<=skoMC1*skoMC1*skoMC1,skoSC1*skoMC1*skoMC1*skoMC1>skoMC1*skoMC1*skoMC1*-1,skoMC1*skoMC1*skoMC1*-2<=0,skoMC1*skoMC1*skoMC1*2>0,skoSC1*(skoMC1*skoMC1*skoMC1*(-2+skoMC1*-12)+skoSC1*(skoMC1*skoMC1*skoMC1*(1+skoMC1*-6)+skoSC1*(skoMC1*skoMC1*skoMC1+skoSC1*(skoMC1*skoMC1*skoMC1*(-1/12)+skoSC1*skoMC1*skoMC1*skoMC1*(-1/12)))))<=skoMC1*skoMC1*skoMC1*(2+skoMC1*6),skoSC1*skoMC1*skoMC1*skoMC1*-2<=skoMC1*skoMC1*skoMC1*2,skoSC1*skoMC1*skoMC1*skoMC1*2>skoMC1*skoMC1*skoMC1*-2,skoSC1<=(5/4),2<=skoMC1,0<=skoSC1,skoMC1>0,0<=skoMC1,skoSC1*skoMC1>skoMC1*-1,skoSC1*skoMC1*-1<=skoMC1,skoSC1*(skoMC1*(1+skoMC1*-3)+skoSC1*(skoMC1*(2+skoMC1*3)+skoSC1*(skoMC1*skoMC1+skoSC1*skoMC1*(-1/12))))<=skoMC1*(2+skoMC1*5),skoSC1*(skoMC1*(1+skoMC1*-3)+skoSC1*(skoMC1*(2+skoMC1*3)+skoSC1*(skoMC1*((-1/6)+skoMC1)+skoSC1*skoMC1*(-1/4))))<=skoMC1*(2+skoMC1*5),skoSC1*(skoMC1*(-1+skoMC1*3)+skoSC1*(skoMC1*(-2+skoMC1*-3)+skoSC1*(skoMC1*skoMC1*-1+skoSC1*skoMC1*(1/12))))>skoMC1*(-2+skoMC1*-5),skoSC1*(skoMC1*(-1+skoMC1*3)+skoSC1*(skoMC1*(-2+skoMC1*-3)+skoSC1*(skoMC1*((1/6)+skoMC1*-1)+skoSC1*skoMC1*(1/4))))>skoMC1*(-2+skoMC1*-5)]], Reals]]

% In QepcadB format:
(E skoSC1) (E skoMC1) [[(skoSC1 skoMC1 skoMC1 skoMC1 (-1))<=(skoMC1 skoMC1 skoMC1)]/\[[(skoMC1 skoMC1 skoMC1 (-1))<(skoSC1 skoMC1 skoMC1 skoMC1)]/\[[(skoMC1 skoMC1 skoMC1 (-2))<=0]/\[[0<(skoMC1 skoMC1 skoMC1 (2))]/\[[(skoSC1 ((skoMC1 skoMC1 skoMC1 (-2+(skoMC1 (-12))))+(skoSC1 ((skoMC1 skoMC1 skoMC1 (1+(skoMC1 (-6))))+(skoSC1 ((skoMC1 skoMC1 skoMC1)+(skoSC1 ((skoMC1 skoMC1 skoMC1 (-1/12))+(skoSC1 skoMC1 skoMC1 skoMC1 (-1/12))))))))))<=(skoMC1 skoMC1 skoMC1 (2+(skoMC1 (6))))]/\[[(skoSC1 skoMC1 skoMC1 skoMC1 (-2))<=(skoMC1 skoMC1 skoMC1 (2))]/\[[(skoMC1 skoMC1 skoMC1 (-2))<(skoSC1 skoMC1 skoMC1 skoMC1 (2))]/\[[skoSC1<=5/4]/\[[2<=skoMC1]/\[[0<=skoSC1]/\[[0<skoMC1]/\[[0<=skoMC1]/\[[(skoMC1 (-1))<(skoSC1 skoMC1)]/\[[(skoSC1 skoMC1 (-1))<=skoMC1]/\[[(skoSC1 ((skoMC1 (1+(skoMC1 (-3))))+(skoSC1 ((skoMC1 (2+(skoMC1 (3))))+(skoSC1 ((skoMC1 skoMC1)+(skoSC1 skoMC1 (-1/12))))))))<=(skoMC1 (2+(skoMC1 (5))))]/\[[(skoSC1 ((skoMC1 (1+(skoMC1 (-3))))+(skoSC1 ((skoMC1 (2+(skoMC1 (3))))+(skoSC1 ((skoMC1 (-1/6+skoMC1))+(skoSC1 skoMC1 (-1/4))))))))<=(skoMC1 (2+(skoMC1 (5))))]/\[[(skoMC1 (-2+(skoMC1 (-5))))<(skoSC1 ((skoMC1 (-1+(skoMC1 (3))))+(skoSC1 ((skoMC1 (-2+(skoMC1 (-3))))+(skoSC1 ((skoMC1 skoMC1 (-1))+(skoSC1 skoMC1 (1/12))))))))]/\[(skoMC1 (-2+(skoMC1 (-5))))<(skoSC1 ((skoMC1 (-1+(skoMC1 (3))))+(skoSC1 ((skoMC1 (-2+(skoMC1 (-3))))+(skoSC1 ((skoMC1 (1/6+(skoMC1 (-1))))+(skoSC1 skoMC1 (1/4))))))))]]]]]]]]]]]]]]]]]].

% In SMTLib2 format:
(declare-fun skoSC1 () Real) (declare-fun skoMC1 () Real) (assert (and (<= (* skoSC1 (* skoMC1 (* skoMC1 (* skoMC1 (- 1.))))) (* skoMC1 (* skoMC1 skoMC1))) (and (> (* skoSC1 (* skoMC1 (* skoMC1 skoMC1))) (* skoMC1 (* skoMC1 (* skoMC1 (- 1.))))) (and (<= (* skoMC1 (* skoMC1 (* skoMC1 (- 2.)))) 0.) (and (> (* skoMC1 (* skoMC1 (* skoMC1 2.))) 0.) (and (<= (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (+ (- 2.) (* skoMC1 (- 12.)))))) (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (+ 1. (* skoMC1 (- 6.)))))) (* skoSC1 (+ (* skoMC1 (* skoMC1 skoMC1)) (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (/ (- 1.) 12.)))) (* skoSC1 (* skoMC1 (* skoMC1 (* skoMC1 (/ (- 1.) 12.))))))))))))) (* skoMC1 (* skoMC1 (* skoMC1 (+ 2. (* skoMC1 6.)))))) (and (<= (* skoSC1 (* skoMC1 (* skoMC1 (* skoMC1 (- 2.))))) (* skoMC1 (* skoMC1 (* skoMC1 2.)))) (and (> (* skoSC1 (* skoMC1 (* skoMC1 (* skoMC1 2.)))) (* skoMC1 (* skoMC1 (* skoMC1 (- 2.))))) (and (<= skoSC1 (/ 5. 4.)) (and (<= 2. skoMC1) (and (<= 0. skoSC1) (and (> skoMC1 0.) (and (<= 0. skoMC1) (and (> (* skoSC1 skoMC1) (* skoMC1 (- 1.))) (and (<= (* skoSC1 (* skoMC1 (- 1.))) skoMC1) (and (<= (* skoSC1 (+ (* skoMC1 (+ 1. (* skoMC1 (- 3.)))) (* skoSC1 (+ (* skoMC1 (+ 2. (* skoMC1 3.))) (* skoSC1 (+ (* skoMC1 skoMC1) (* skoSC1 (* skoMC1 (/ (- 1.) 12.))))))))) (* skoMC1 (+ 2. (* skoMC1 5.)))) (and (<= (* skoSC1 (+ (* skoMC1 (+ 1. (* skoMC1 (- 3.)))) (* skoSC1 (+ (* skoMC1 (+ 2. (* skoMC1 3.))) (* skoSC1 (+ (* skoMC1 (+ (/ (- 1.) 6.) skoMC1)) (* skoSC1 (* skoMC1 (/ (- 1.) 4.))))))))) (* skoMC1 (+ 2. (* skoMC1 5.)))) (and (> (* skoSC1 (+ (* skoMC1 (+ (- 1.) (* skoMC1 3.))) (* skoSC1 (+ (* skoMC1 (+ (- 2.) (* skoMC1 (- 3.)))) (* skoSC1 (+ (* skoMC1 (* skoMC1 (- 1.))) (* skoSC1 (* skoMC1 (/ 1. 12.))))))))) (* skoMC1 (+ (- 2.) (* skoMC1 (- 5.))))) (> (* skoSC1 (+ (* skoMC1 (+ (- 1.) (* skoMC1 3.))) (* skoSC1 (+ (* skoMC1 (+ (- 2.) (* skoMC1 (- 3.)))) (* skoSC1 (+ (* skoMC1 (+ (/ 1. 6.) (* skoMC1 (- 1.)))) (* skoSC1 (* skoMC1 (/ 1. 4.))))))))) (* skoMC1 (+ (- 2.) (* skoMC1 (- 5.)))))))))))))))))))))))

% In GRF format:
(sequent " MetiTarski formula " (antecedent (<= (* skoSC1 (* skoMC1 (* skoMC1 (* skoMC1 (- 1.))))) (* skoMC1 (* skoMC1 skoMC1))) (> (* skoSC1 (* skoMC1 (* skoMC1 skoMC1))) (* skoMC1 (* skoMC1 (* skoMC1 (- 1.))))) (<= (* skoMC1 (* skoMC1 (* skoMC1 (- 2.)))) 0.) (> (* skoMC1 (* skoMC1 (* skoMC1 2.))) 0.) (<= (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (+ (- 2.) (* skoMC1 (- 12.)))))) (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (+ 1. (* skoMC1 (- 6.)))))) (* skoSC1 (+ (* skoMC1 (* skoMC1 skoMC1)) (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (/ (- 1.) 12.)))) (* skoSC1 (* skoMC1 (* skoMC1 (* skoMC1 (/ (- 1.) 12.))))))))))))) (* skoMC1 (* skoMC1 (* skoMC1 (+ 2. (* skoMC1 6.)))))) (<= (* skoSC1 (* skoMC1 (* skoMC1 (* skoMC1 (- 2.))))) (* skoMC1 (* skoMC1 (* skoMC1 2.)))) (> (* skoSC1 (* skoMC1 (* skoMC1 (* skoMC1 2.)))) (* skoMC1 (* skoMC1 (* skoMC1 (- 2.))))) (<= skoSC1 (/ 5. 4.)) (<= 2. skoMC1) (<= 0. skoSC1) (> skoMC1 0.) (<= 0. skoMC1) (> (* skoSC1 skoMC1) (* skoMC1 (- 1.))) (<= (* skoSC1 (* skoMC1 (- 1.))) skoMC1) (<= (* skoSC1 (+ (* skoMC1 (+ 1. (* skoMC1 (- 3.)))) (* skoSC1 (+ (* skoMC1 (+ 2. (* skoMC1 3.))) (* skoSC1 (+ (* skoMC1 skoMC1) (* skoSC1 (* skoMC1 (/ (- 1.) 12.))))))))) (* skoMC1 (+ 2. (* skoMC1 5.)))) (<= (* skoSC1 (+ (* skoMC1 (+ 1. (* skoMC1 (- 3.)))) (* skoSC1 (+ (* skoMC1 (+ 2. (* skoMC1 3.))) (* skoSC1 (+ (* skoMC1 (+ (/ (- 1.) 6.) skoMC1)) (* skoSC1 (* skoMC1 (/ (- 1.) 4.))))))))) (* skoMC1 (+ 2. (* skoMC1 5.)))) (> (* skoSC1 (+ (* skoMC1 (+ (- 1.) (* skoMC1 3.))) (* skoSC1 (+ (* skoMC1 (+ (- 2.) (* skoMC1 (- 3.)))) (* skoSC1 (+ (* skoMC1 (* skoMC1 (- 1.))) (* skoSC1 (* skoMC1 (/ 1. 12.))))))))) (* skoMC1 (+ (- 2.) (* skoMC1 (- 5.)))))) (succedent (<= (* skoSC1 (+ (* skoMC1 (+ (- 1.) (* skoMC1 3.))) (* skoSC1 (+ (* skoMC1 (+ (- 2.) (* skoMC1 (- 3.)))) (* skoSC1 (+ (* skoMC1 (+ (/ 1. 6.) (* skoMC1 (- 1.)))) (* skoSC1 (* skoMC1 (/ 1. 4.))))))))) (* skoMC1 (+ (- 2.) (* skoMC1 (- 5.)))))))
-----[end problem]-----

-----[begin problem]-----
% In Mathematica format:
Timing[Resolve[Exists[{skoSC1,skoMC1}, And[skoSC1*skoMC1*skoMC1*skoMC1*-1<=skoMC1*skoMC1*skoMC1,skoSC1*(skoMC1*(-1+skoMC1*3)+skoSC1*(skoMC1*(-2+skoMC1*-3)+skoSC1*(skoMC1*((1/6)+skoMC1*-1)+skoSC1*skoMC1*(1/4))))>skoMC1*(-2+skoMC1*-5),skoSC1*(skoMC1*(-1+skoMC1*3)+skoSC1*(skoMC1*(-2+skoMC1*-3)+skoSC1*(skoMC1*skoMC1*-1+skoSC1*skoMC1*(1/12))))>skoMC1*(-2+skoMC1*-5),skoSC1*(skoMC1*(1+skoMC1*-3)+skoSC1*(skoMC1*(2+skoMC1*3)+skoSC1*(skoMC1*((-1/6)+skoMC1)+skoSC1*skoMC1*(-1/4))))<=skoMC1*(2+skoMC1*5),skoSC1*(skoMC1*(1+skoMC1*-3)+skoSC1*(skoMC1*(2+skoMC1*3)+skoSC1*(skoMC1*skoMC1+skoSC1*skoMC1*(-1/12))))<=skoMC1*(2+skoMC1*5),skoSC1*skoMC1*-1<=skoMC1,skoSC1*skoMC1>skoMC1*-1,0<=skoMC1,skoMC1>0,0<=skoSC1,2<=skoMC1,skoSC1<=(5/4),skoSC1*skoMC1*skoMC1*skoMC1*2>skoMC1*skoMC1*skoMC1*-2,skoSC1*skoMC1*skoMC1*skoMC1*-2<=skoMC1*skoMC1*skoMC1*2,skoSC1*(skoMC1*skoMC1*skoMC1*(-2+skoMC1*-12)+skoSC1*(skoMC1*skoMC1*skoMC1*(1+skoMC1*-6)+skoSC1*(skoMC1*skoMC1*skoMC1+skoSC1*(skoMC1*skoMC1*skoMC1*(-1/12)+skoSC1*skoMC1*skoMC1*skoMC1*(-1/12)))))<=skoMC1*skoMC1*skoMC1*(2+skoMC1*6)]], Reals]]

% In QepcadB format:
(E skoSC1) (E skoMC1) [[(skoSC1 skoMC1 skoMC1 skoMC1 (-1))<=(skoMC1 skoMC1 skoMC1)]/\[[(skoMC1 (-2+(skoMC1 (-5))))<(skoSC1 ((skoMC1 (-1+(skoMC1 (3))))+(skoSC1 ((skoMC1 (-2+(skoMC1 (-3))))+(skoSC1 ((skoMC1 (1/6+(skoMC1 (-1))))+(skoSC1 skoMC1 (1/4))))))))]/\[[(skoMC1 (-2+(skoMC1 (-5))))<(skoSC1 ((skoMC1 (-1+(skoMC1 (3))))+(skoSC1 ((skoMC1 (-2+(skoMC1 (-3))))+(skoSC1 ((skoMC1 skoMC1 (-1))+(skoSC1 skoMC1 (1/12))))))))]/\[[(skoSC1 ((skoMC1 (1+(skoMC1 (-3))))+(skoSC1 ((skoMC1 (2+(skoMC1 (3))))+(skoSC1 ((skoMC1 (-1/6+skoMC1))+(skoSC1 skoMC1 (-1/4))))))))<=(skoMC1 (2+(skoMC1 (5))))]/\[[(skoSC1 ((skoMC1 (1+(skoMC1 (-3))))+(skoSC1 ((skoMC1 (2+(skoMC1 (3))))+(skoSC1 ((skoMC1 skoMC1)+(skoSC1 skoMC1 (-1/12))))))))<=(skoMC1 (2+(skoMC1 (5))))]/\[[(skoSC1 skoMC1 (-1))<=skoMC1]/\[[(skoMC1 (-1))<(skoSC1 skoMC1)]/\[[0<=skoMC1]/\[[0<skoMC1]/\[[0<=skoSC1]/\[[2<=skoMC1]/\[[skoSC1<=5/4]/\[[(skoMC1 skoMC1 skoMC1 (-2))<(skoSC1 skoMC1 skoMC1 skoMC1 (2))]/\[[(skoSC1 skoMC1 skoMC1 skoMC1 (-2))<=(skoMC1 skoMC1 skoMC1 (2))]/\[(skoSC1 ((skoMC1 skoMC1 skoMC1 (-2+(skoMC1 (-12))))+(skoSC1 ((skoMC1 skoMC1 skoMC1 (1+(skoMC1 (-6))))+(skoSC1 ((skoMC1 skoMC1 skoMC1)+(skoSC1 ((skoMC1 skoMC1 skoMC1 (-1/12))+(skoSC1 skoMC1 skoMC1 skoMC1 (-1/12))))))))))<=(skoMC1 skoMC1 skoMC1 (2+(skoMC1 (6))))]]]]]]]]]]]]]]].

% In SMTLib2 format:
(declare-fun skoSC1 () Real) (declare-fun skoMC1 () Real) (assert (and (<= (* skoSC1 (* skoMC1 (* skoMC1 (* skoMC1 (- 1.))))) (* skoMC1 (* skoMC1 skoMC1))) (and (> (* skoSC1 (+ (* skoMC1 (+ (- 1.) (* skoMC1 3.))) (* skoSC1 (+ (* skoMC1 (+ (- 2.) (* skoMC1 (- 3.)))) (* skoSC1 (+ (* skoMC1 (+ (/ 1. 6.) (* skoMC1 (- 1.)))) (* skoSC1 (* skoMC1 (/ 1. 4.))))))))) (* skoMC1 (+ (- 2.) (* skoMC1 (- 5.))))) (and (> (* skoSC1 (+ (* skoMC1 (+ (- 1.) (* skoMC1 3.))) (* skoSC1 (+ (* skoMC1 (+ (- 2.) (* skoMC1 (- 3.)))) (* skoSC1 (+ (* skoMC1 (* skoMC1 (- 1.))) (* skoSC1 (* skoMC1 (/ 1. 12.))))))))) (* skoMC1 (+ (- 2.) (* skoMC1 (- 5.))))) (and (<= (* skoSC1 (+ (* skoMC1 (+ 1. (* skoMC1 (- 3.)))) (* skoSC1 (+ (* skoMC1 (+ 2. (* skoMC1 3.))) (* skoSC1 (+ (* skoMC1 (+ (/ (- 1.) 6.) skoMC1)) (* skoSC1 (* skoMC1 (/ (- 1.) 4.))))))))) (* skoMC1 (+ 2. (* skoMC1 5.)))) (and (<= (* skoSC1 (+ (* skoMC1 (+ 1. (* skoMC1 (- 3.)))) (* skoSC1 (+ (* skoMC1 (+ 2. (* skoMC1 3.))) (* skoSC1 (+ (* skoMC1 skoMC1) (* skoSC1 (* skoMC1 (/ (- 1.) 12.))))))))) (* skoMC1 (+ 2. (* skoMC1 5.)))) (and (<= (* skoSC1 (* skoMC1 (- 1.))) skoMC1) (and (> (* skoSC1 skoMC1) (* skoMC1 (- 1.))) (and (<= 0. skoMC1) (and (> skoMC1 0.) (and (<= 0. skoSC1) (and (<= 2. skoMC1) (and (<= skoSC1 (/ 5. 4.)) (and (> (* skoSC1 (* skoMC1 (* skoMC1 (* skoMC1 2.)))) (* skoMC1 (* skoMC1 (* skoMC1 (- 2.))))) (and (<= (* skoSC1 (* skoMC1 (* skoMC1 (* skoMC1 (- 2.))))) (* skoMC1 (* skoMC1 (* skoMC1 2.)))) (<= (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (+ (- 2.) (* skoMC1 (- 12.)))))) (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (+ 1. (* skoMC1 (- 6.)))))) (* skoSC1 (+ (* skoMC1 (* skoMC1 skoMC1)) (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (/ (- 1.) 12.)))) (* skoSC1 (* skoMC1 (* skoMC1 (* skoMC1 (/ (- 1.) 12.))))))))))))) (* skoMC1 (* skoMC1 (* skoMC1 (+ 2. (* skoMC1 6.)))))))))))))))))))))

% In GRF format:
(sequent " MetiTarski formula " (antecedent (<= (* skoSC1 (* skoMC1 (* skoMC1 (* skoMC1 (- 1.))))) (* skoMC1 (* skoMC1 skoMC1))) (> (* skoSC1 (+ (* skoMC1 (+ (- 1.) (* skoMC1 3.))) (* skoSC1 (+ (* skoMC1 (+ (- 2.) (* skoMC1 (- 3.)))) (* skoSC1 (+ (* skoMC1 (+ (/ 1. 6.) (* skoMC1 (- 1.)))) (* skoSC1 (* skoMC1 (/ 1. 4.))))))))) (* skoMC1 (+ (- 2.) (* skoMC1 (- 5.))))) (> (* skoSC1 (+ (* skoMC1 (+ (- 1.) (* skoMC1 3.))) (* skoSC1 (+ (* skoMC1 (+ (- 2.) (* skoMC1 (- 3.)))) (* skoSC1 (+ (* skoMC1 (* skoMC1 (- 1.))) (* skoSC1 (* skoMC1 (/ 1. 12.))))))))) (* skoMC1 (+ (- 2.) (* skoMC1 (- 5.))))) (<= (* skoSC1 (+ (* skoMC1 (+ 1. (* skoMC1 (- 3.)))) (* skoSC1 (+ (* skoMC1 (+ 2. (* skoMC1 3.))) (* skoSC1 (+ (* skoMC1 (+ (/ (- 1.) 6.) skoMC1)) (* skoSC1 (* skoMC1 (/ (- 1.) 4.))))))))) (* skoMC1 (+ 2. (* skoMC1 5.)))) (<= (* skoSC1 (+ (* skoMC1 (+ 1. (* skoMC1 (- 3.)))) (* skoSC1 (+ (* skoMC1 (+ 2. (* skoMC1 3.))) (* skoSC1 (+ (* skoMC1 skoMC1) (* skoSC1 (* skoMC1 (/ (- 1.) 12.))))))))) (* skoMC1 (+ 2. (* skoMC1 5.)))) (<= (* skoSC1 (* skoMC1 (- 1.))) skoMC1) (> (* skoSC1 skoMC1) (* skoMC1 (- 1.))) (<= 0. skoMC1) (> skoMC1 0.) (<= 0. skoSC1) (<= 2. skoMC1) (<= skoSC1 (/ 5. 4.)) (> (* skoSC1 (* skoMC1 (* skoMC1 (* skoMC1 2.)))) (* skoMC1 (* skoMC1 (* skoMC1 (- 2.))))) (<= (* skoSC1 (* skoMC1 (* skoMC1 (* skoMC1 (- 2.))))) (* skoMC1 (* skoMC1 (* skoMC1 2.))))) (succedent (> (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (+ (- 2.) (* skoMC1 (- 12.)))))) (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (+ 1. (* skoMC1 (- 6.)))))) (* skoSC1 (+ (* skoMC1 (* skoMC1 skoMC1)) (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (/ (- 1.) 12.)))) (* skoSC1 (* skoMC1 (* skoMC1 (* skoMC1 (/ (- 1.) 12.))))))))))))) (* skoMC1 (* skoMC1 (* skoMC1 (+ 2. (* skoMC1 6.))))))))
-----[end problem]-----

-----[begin problem]-----
% In Mathematica format:
Timing[Resolve[Exists[{skoSC1,skoMC1}, And[skoSC1*skoMC1*skoMC1*skoMC1>skoMC1*skoMC1*skoMC1*-1,skoSC1*(skoMC1*(-1+skoMC1*3)+skoSC1*(skoMC1*(-2+skoMC1*-3)+skoSC1*(skoMC1*((1/6)+skoMC1*-1)+skoSC1*skoMC1*(1/4))))>skoMC1*(-2+skoMC1*-5),skoSC1*(skoMC1*(-1+skoMC1*3)+skoSC1*(skoMC1*(-2+skoMC1*-3)+skoSC1*(skoMC1*skoMC1*-1+skoSC1*skoMC1*(1/12))))>skoMC1*(-2+skoMC1*-5),skoSC1*(skoMC1*(1+skoMC1*-3)+skoSC1*(skoMC1*(2+skoMC1*3)+skoSC1*(skoMC1*((-1/6)+skoMC1)+skoSC1*skoMC1*(-1/4))))<=skoMC1*(2+skoMC1*5),skoSC1*(skoMC1*(1+skoMC1*-3)+skoSC1*(skoMC1*(2+skoMC1*3)+skoSC1*(skoMC1*skoMC1+skoSC1*skoMC1*(-1/12))))<=skoMC1*(2+skoMC1*5),skoSC1*skoMC1*-1<=skoMC1,skoSC1*skoMC1>skoMC1*-1,0<=skoMC1,skoMC1>0,0<=skoSC1,2<=skoMC1,skoSC1<=(5/4),skoSC1*skoMC1*skoMC1*skoMC1*2>skoMC1*skoMC1*skoMC1*-2,skoSC1*skoMC1*skoMC1*skoMC1*-2<=skoMC1*skoMC1*skoMC1*2,skoSC1*(skoMC1*skoMC1*skoMC1*(-2+skoMC1*-12)+skoSC1*(skoMC1*skoMC1*skoMC1*(1+skoMC1*-6)+skoSC1*(skoMC1*skoMC1*skoMC1+skoSC1*(skoMC1*skoMC1*skoMC1*(-1/12)+skoSC1*skoMC1*skoMC1*skoMC1*(-1/12)))))<=skoMC1*skoMC1*skoMC1*(2+skoMC1*6)]], Reals]]

% In QepcadB format:
(E skoSC1) (E skoMC1) [[(skoMC1 skoMC1 skoMC1 (-1))<(skoSC1 skoMC1 skoMC1 skoMC1)]/\[[(skoMC1 (-2+(skoMC1 (-5))))<(skoSC1 ((skoMC1 (-1+(skoMC1 (3))))+(skoSC1 ((skoMC1 (-2+(skoMC1 (-3))))+(skoSC1 ((skoMC1 (1/6+(skoMC1 (-1))))+(skoSC1 skoMC1 (1/4))))))))]/\[[(skoMC1 (-2+(skoMC1 (-5))))<(skoSC1 ((skoMC1 (-1+(skoMC1 (3))))+(skoSC1 ((skoMC1 (-2+(skoMC1 (-3))))+(skoSC1 ((skoMC1 skoMC1 (-1))+(skoSC1 skoMC1 (1/12))))))))]/\[[(skoSC1 ((skoMC1 (1+(skoMC1 (-3))))+(skoSC1 ((skoMC1 (2+(skoMC1 (3))))+(skoSC1 ((skoMC1 (-1/6+skoMC1))+(skoSC1 skoMC1 (-1/4))))))))<=(skoMC1 (2+(skoMC1 (5))))]/\[[(skoSC1 ((skoMC1 (1+(skoMC1 (-3))))+(skoSC1 ((skoMC1 (2+(skoMC1 (3))))+(skoSC1 ((skoMC1 skoMC1)+(skoSC1 skoMC1 (-1/12))))))))<=(skoMC1 (2+(skoMC1 (5))))]/\[[(skoSC1 skoMC1 (-1))<=skoMC1]/\[[(skoMC1 (-1))<(skoSC1 skoMC1)]/\[[0<=skoMC1]/\[[0<skoMC1]/\[[0<=skoSC1]/\[[2<=skoMC1]/\[[skoSC1<=5/4]/\[[(skoMC1 skoMC1 skoMC1 (-2))<(skoSC1 skoMC1 skoMC1 skoMC1 (2))]/\[[(skoSC1 skoMC1 skoMC1 skoMC1 (-2))<=(skoMC1 skoMC1 skoMC1 (2))]/\[(skoSC1 ((skoMC1 skoMC1 skoMC1 (-2+(skoMC1 (-12))))+(skoSC1 ((skoMC1 skoMC1 skoMC1 (1+(skoMC1 (-6))))+(skoSC1 ((skoMC1 skoMC1 skoMC1)+(skoSC1 ((skoMC1 skoMC1 skoMC1 (-1/12))+(skoSC1 skoMC1 skoMC1 skoMC1 (-1/12))))))))))<=(skoMC1 skoMC1 skoMC1 (2+(skoMC1 (6))))]]]]]]]]]]]]]]].

% In SMTLib2 format:
(declare-fun skoSC1 () Real) (declare-fun skoMC1 () Real) (assert (and (> (* skoSC1 (* skoMC1 (* skoMC1 skoMC1))) (* skoMC1 (* skoMC1 (* skoMC1 (- 1.))))) (and (> (* skoSC1 (+ (* skoMC1 (+ (- 1.) (* skoMC1 3.))) (* skoSC1 (+ (* skoMC1 (+ (- 2.) (* skoMC1 (- 3.)))) (* skoSC1 (+ (* skoMC1 (+ (/ 1. 6.) (* skoMC1 (- 1.)))) (* skoSC1 (* skoMC1 (/ 1. 4.))))))))) (* skoMC1 (+ (- 2.) (* skoMC1 (- 5.))))) (and (> (* skoSC1 (+ (* skoMC1 (+ (- 1.) (* skoMC1 3.))) (* skoSC1 (+ (* skoMC1 (+ (- 2.) (* skoMC1 (- 3.)))) (* skoSC1 (+ (* skoMC1 (* skoMC1 (- 1.))) (* skoSC1 (* skoMC1 (/ 1. 12.))))))))) (* skoMC1 (+ (- 2.) (* skoMC1 (- 5.))))) (and (<= (* skoSC1 (+ (* skoMC1 (+ 1. (* skoMC1 (- 3.)))) (* skoSC1 (+ (* skoMC1 (+ 2. (* skoMC1 3.))) (* skoSC1 (+ (* skoMC1 (+ (/ (- 1.) 6.) skoMC1)) (* skoSC1 (* skoMC1 (/ (- 1.) 4.))))))))) (* skoMC1 (+ 2. (* skoMC1 5.)))) (and (<= (* skoSC1 (+ (* skoMC1 (+ 1. (* skoMC1 (- 3.)))) (* skoSC1 (+ (* skoMC1 (+ 2. (* skoMC1 3.))) (* skoSC1 (+ (* skoMC1 skoMC1) (* skoSC1 (* skoMC1 (/ (- 1.) 12.))))))))) (* skoMC1 (+ 2. (* skoMC1 5.)))) (and (<= (* skoSC1 (* skoMC1 (- 1.))) skoMC1) (and (> (* skoSC1 skoMC1) (* skoMC1 (- 1.))) (and (<= 0. skoMC1) (and (> skoMC1 0.) (and (<= 0. skoSC1) (and (<= 2. skoMC1) (and (<= skoSC1 (/ 5. 4.)) (and (> (* skoSC1 (* skoMC1 (* skoMC1 (* skoMC1 2.)))) (* skoMC1 (* skoMC1 (* skoMC1 (- 2.))))) (and (<= (* skoSC1 (* skoMC1 (* skoMC1 (* skoMC1 (- 2.))))) (* skoMC1 (* skoMC1 (* skoMC1 2.)))) (<= (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (+ (- 2.) (* skoMC1 (- 12.)))))) (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (+ 1. (* skoMC1 (- 6.)))))) (* skoSC1 (+ (* skoMC1 (* skoMC1 skoMC1)) (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (/ (- 1.) 12.)))) (* skoSC1 (* skoMC1 (* skoMC1 (* skoMC1 (/ (- 1.) 12.))))))))))))) (* skoMC1 (* skoMC1 (* skoMC1 (+ 2. (* skoMC1 6.)))))))))))))))))))))

% In GRF format:
(sequent " MetiTarski formula " (antecedent (> (* skoSC1 (* skoMC1 (* skoMC1 skoMC1))) (* skoMC1 (* skoMC1 (* skoMC1 (- 1.))))) (> (* skoSC1 (+ (* skoMC1 (+ (- 1.) (* skoMC1 3.))) (* skoSC1 (+ (* skoMC1 (+ (- 2.) (* skoMC1 (- 3.)))) (* skoSC1 (+ (* skoMC1 (+ (/ 1. 6.) (* skoMC1 (- 1.)))) (* skoSC1 (* skoMC1 (/ 1. 4.))))))))) (* skoMC1 (+ (- 2.) (* skoMC1 (- 5.))))) (> (* skoSC1 (+ (* skoMC1 (+ (- 1.) (* skoMC1 3.))) (* skoSC1 (+ (* skoMC1 (+ (- 2.) (* skoMC1 (- 3.)))) (* skoSC1 (+ (* skoMC1 (* skoMC1 (- 1.))) (* skoSC1 (* skoMC1 (/ 1. 12.))))))))) (* skoMC1 (+ (- 2.) (* skoMC1 (- 5.))))) (<= (* skoSC1 (+ (* skoMC1 (+ 1. (* skoMC1 (- 3.)))) (* skoSC1 (+ (* skoMC1 (+ 2. (* skoMC1 3.))) (* skoSC1 (+ (* skoMC1 (+ (/ (- 1.) 6.) skoMC1)) (* skoSC1 (* skoMC1 (/ (- 1.) 4.))))))))) (* skoMC1 (+ 2. (* skoMC1 5.)))) (<= (* skoSC1 (+ (* skoMC1 (+ 1. (* skoMC1 (- 3.)))) (* skoSC1 (+ (* skoMC1 (+ 2. (* skoMC1 3.))) (* skoSC1 (+ (* skoMC1 skoMC1) (* skoSC1 (* skoMC1 (/ (- 1.) 12.))))))))) (* skoMC1 (+ 2. (* skoMC1 5.)))) (<= (* skoSC1 (* skoMC1 (- 1.))) skoMC1) (> (* skoSC1 skoMC1) (* skoMC1 (- 1.))) (<= 0. skoMC1) (> skoMC1 0.) (<= 0. skoSC1) (<= 2. skoMC1) (<= skoSC1 (/ 5. 4.)) (> (* skoSC1 (* skoMC1 (* skoMC1 (* skoMC1 2.)))) (* skoMC1 (* skoMC1 (* skoMC1 (- 2.))))) (<= (* skoSC1 (* skoMC1 (* skoMC1 (* skoMC1 (- 2.))))) (* skoMC1 (* skoMC1 (* skoMC1 2.))))) (succedent (> (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (+ (- 2.) (* skoMC1 (- 12.)))))) (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (+ 1. (* skoMC1 (- 6.)))))) (* skoSC1 (+ (* skoMC1 (* skoMC1 skoMC1)) (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (/ (- 1.) 12.)))) (* skoSC1 (* skoMC1 (* skoMC1 (* skoMC1 (/ (- 1.) 12.))))))))))))) (* skoMC1 (* skoMC1 (* skoMC1 (+ 2. (* skoMC1 6.))))))))
-----[end problem]-----

-----[begin problem]-----
% In Mathematica format:
Timing[Resolve[Exists[{skoSC1,skoMC1}, And[skoMC1*skoMC1*skoMC1*-2<=0,skoSC1*(skoMC1*(-1+skoMC1*3)+skoSC1*(skoMC1*(-2+skoMC1*-3)+skoSC1*(skoMC1*((1/6)+skoMC1*-1)+skoSC1*skoMC1*(1/4))))>skoMC1*(-2+skoMC1*-5),skoSC1*(skoMC1*(-1+skoMC1*3)+skoSC1*(skoMC1*(-2+skoMC1*-3)+skoSC1*(skoMC1*skoMC1*-1+skoSC1*skoMC1*(1/12))))>skoMC1*(-2+skoMC1*-5),skoSC1*(skoMC1*(1+skoMC1*-3)+skoSC1*(skoMC1*(2+skoMC1*3)+skoSC1*(skoMC1*((-1/6)+skoMC1)+skoSC1*skoMC1*(-1/4))))<=skoMC1*(2+skoMC1*5),skoSC1*(skoMC1*(1+skoMC1*-3)+skoSC1*(skoMC1*(2+skoMC1*3)+skoSC1*(skoMC1*skoMC1+skoSC1*skoMC1*(-1/12))))<=skoMC1*(2+skoMC1*5),skoSC1*skoMC1*-1<=skoMC1,skoSC1*skoMC1>skoMC1*-1,0<=skoMC1,skoMC1>0,0<=skoSC1,2<=skoMC1,skoSC1<=(5/4),skoSC1*skoMC1*skoMC1*skoMC1*2>skoMC1*skoMC1*skoMC1*-2,skoSC1*skoMC1*skoMC1*skoMC1*-2<=skoMC1*skoMC1*skoMC1*2,skoSC1*(skoMC1*skoMC1*skoMC1*(-2+skoMC1*-12)+skoSC1*(skoMC1*skoMC1*skoMC1*(1+skoMC1*-6)+skoSC1*(skoMC1*skoMC1*skoMC1+skoSC1*(skoMC1*skoMC1*skoMC1*(-1/12)+skoSC1*skoMC1*skoMC1*skoMC1*(-1/12)))))<=skoMC1*skoMC1*skoMC1*(2+skoMC1*6)]], Reals]]

% In QepcadB format:
(E skoSC1) (E skoMC1) [[(skoMC1 skoMC1 skoMC1 (-2))<=0]/\[[(skoMC1 (-2+(skoMC1 (-5))))<(skoSC1 ((skoMC1 (-1+(skoMC1 (3))))+(skoSC1 ((skoMC1 (-2+(skoMC1 (-3))))+(skoSC1 ((skoMC1 (1/6+(skoMC1 (-1))))+(skoSC1 skoMC1 (1/4))))))))]/\[[(skoMC1 (-2+(skoMC1 (-5))))<(skoSC1 ((skoMC1 (-1+(skoMC1 (3))))+(skoSC1 ((skoMC1 (-2+(skoMC1 (-3))))+(skoSC1 ((skoMC1 skoMC1 (-1))+(skoSC1 skoMC1 (1/12))))))))]/\[[(skoSC1 ((skoMC1 (1+(skoMC1 (-3))))+(skoSC1 ((skoMC1 (2+(skoMC1 (3))))+(skoSC1 ((skoMC1 (-1/6+skoMC1))+(skoSC1 skoMC1 (-1/4))))))))<=(skoMC1 (2+(skoMC1 (5))))]/\[[(skoSC1 ((skoMC1 (1+(skoMC1 (-3))))+(skoSC1 ((skoMC1 (2+(skoMC1 (3))))+(skoSC1 ((skoMC1 skoMC1)+(skoSC1 skoMC1 (-1/12))))))))<=(skoMC1 (2+(skoMC1 (5))))]/\[[(skoSC1 skoMC1 (-1))<=skoMC1]/\[[(skoMC1 (-1))<(skoSC1 skoMC1)]/\[[0<=skoMC1]/\[[0<skoMC1]/\[[0<=skoSC1]/\[[2<=skoMC1]/\[[skoSC1<=5/4]/\[[(skoMC1 skoMC1 skoMC1 (-2))<(skoSC1 skoMC1 skoMC1 skoMC1 (2))]/\[[(skoSC1 skoMC1 skoMC1 skoMC1 (-2))<=(skoMC1 skoMC1 skoMC1 (2))]/\[(skoSC1 ((skoMC1 skoMC1 skoMC1 (-2+(skoMC1 (-12))))+(skoSC1 ((skoMC1 skoMC1 skoMC1 (1+(skoMC1 (-6))))+(skoSC1 ((skoMC1 skoMC1 skoMC1)+(skoSC1 ((skoMC1 skoMC1 skoMC1 (-1/12))+(skoSC1 skoMC1 skoMC1 skoMC1 (-1/12))))))))))<=(skoMC1 skoMC1 skoMC1 (2+(skoMC1 (6))))]]]]]]]]]]]]]]].

% In SMTLib2 format:
(declare-fun skoSC1 () Real) (declare-fun skoMC1 () Real) (assert (and (<= (* skoMC1 (* skoMC1 (* skoMC1 (- 2.)))) 0.) (and (> (* skoSC1 (+ (* skoMC1 (+ (- 1.) (* skoMC1 3.))) (* skoSC1 (+ (* skoMC1 (+ (- 2.) (* skoMC1 (- 3.)))) (* skoSC1 (+ (* skoMC1 (+ (/ 1. 6.) (* skoMC1 (- 1.)))) (* skoSC1 (* skoMC1 (/ 1. 4.))))))))) (* skoMC1 (+ (- 2.) (* skoMC1 (- 5.))))) (and (> (* skoSC1 (+ (* skoMC1 (+ (- 1.) (* skoMC1 3.))) (* skoSC1 (+ (* skoMC1 (+ (- 2.) (* skoMC1 (- 3.)))) (* skoSC1 (+ (* skoMC1 (* skoMC1 (- 1.))) (* skoSC1 (* skoMC1 (/ 1. 12.))))))))) (* skoMC1 (+ (- 2.) (* skoMC1 (- 5.))))) (and (<= (* skoSC1 (+ (* skoMC1 (+ 1. (* skoMC1 (- 3.)))) (* skoSC1 (+ (* skoMC1 (+ 2. (* skoMC1 3.))) (* skoSC1 (+ (* skoMC1 (+ (/ (- 1.) 6.) skoMC1)) (* skoSC1 (* skoMC1 (/ (- 1.) 4.))))))))) (* skoMC1 (+ 2. (* skoMC1 5.)))) (and (<= (* skoSC1 (+ (* skoMC1 (+ 1. (* skoMC1 (- 3.)))) (* skoSC1 (+ (* skoMC1 (+ 2. (* skoMC1 3.))) (* skoSC1 (+ (* skoMC1 skoMC1) (* skoSC1 (* skoMC1 (/ (- 1.) 12.))))))))) (* skoMC1 (+ 2. (* skoMC1 5.)))) (and (<= (* skoSC1 (* skoMC1 (- 1.))) skoMC1) (and (> (* skoSC1 skoMC1) (* skoMC1 (- 1.))) (and (<= 0. skoMC1) (and (> skoMC1 0.) (and (<= 0. skoSC1) (and (<= 2. skoMC1) (and (<= skoSC1 (/ 5. 4.)) (and (> (* skoSC1 (* skoMC1 (* skoMC1 (* skoMC1 2.)))) (* skoMC1 (* skoMC1 (* skoMC1 (- 2.))))) (and (<= (* skoSC1 (* skoMC1 (* skoMC1 (* skoMC1 (- 2.))))) (* skoMC1 (* skoMC1 (* skoMC1 2.)))) (<= (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (+ (- 2.) (* skoMC1 (- 12.)))))) (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (+ 1. (* skoMC1 (- 6.)))))) (* skoSC1 (+ (* skoMC1 (* skoMC1 skoMC1)) (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (/ (- 1.) 12.)))) (* skoSC1 (* skoMC1 (* skoMC1 (* skoMC1 (/ (- 1.) 12.))))))))))))) (* skoMC1 (* skoMC1 (* skoMC1 (+ 2. (* skoMC1 6.)))))))))))))))))))))

% In GRF format:
(sequent " MetiTarski formula " (antecedent (<= (* skoMC1 (* skoMC1 (* skoMC1 (- 2.)))) 0.) (> (* skoSC1 (+ (* skoMC1 (+ (- 1.) (* skoMC1 3.))) (* skoSC1 (+ (* skoMC1 (+ (- 2.) (* skoMC1 (- 3.)))) (* skoSC1 (+ (* skoMC1 (+ (/ 1. 6.) (* skoMC1 (- 1.)))) (* skoSC1 (* skoMC1 (/ 1. 4.))))))))) (* skoMC1 (+ (- 2.) (* skoMC1 (- 5.))))) (> (* skoSC1 (+ (* skoMC1 (+ (- 1.) (* skoMC1 3.))) (* skoSC1 (+ (* skoMC1 (+ (- 2.) (* skoMC1 (- 3.)))) (* skoSC1 (+ (* skoMC1 (* skoMC1 (- 1.))) (* skoSC1 (* skoMC1 (/ 1. 12.))))))))) (* skoMC1 (+ (- 2.) (* skoMC1 (- 5.))))) (<= (* skoSC1 (+ (* skoMC1 (+ 1. (* skoMC1 (- 3.)))) (* skoSC1 (+ (* skoMC1 (+ 2. (* skoMC1 3.))) (* skoSC1 (+ (* skoMC1 (+ (/ (- 1.) 6.) skoMC1)) (* skoSC1 (* skoMC1 (/ (- 1.) 4.))))))))) (* skoMC1 (+ 2. (* skoMC1 5.)))) (<= (* skoSC1 (+ (* skoMC1 (+ 1. (* skoMC1 (- 3.)))) (* skoSC1 (+ (* skoMC1 (+ 2. (* skoMC1 3.))) (* skoSC1 (+ (* skoMC1 skoMC1) (* skoSC1 (* skoMC1 (/ (- 1.) 12.))))))))) (* skoMC1 (+ 2. (* skoMC1 5.)))) (<= (* skoSC1 (* skoMC1 (- 1.))) skoMC1) (> (* skoSC1 skoMC1) (* skoMC1 (- 1.))) (<= 0. skoMC1) (> skoMC1 0.) (<= 0. skoSC1) (<= 2. skoMC1) (<= skoSC1 (/ 5. 4.)) (> (* skoSC1 (* skoMC1 (* skoMC1 (* skoMC1 2.)))) (* skoMC1 (* skoMC1 (* skoMC1 (- 2.))))) (<= (* skoSC1 (* skoMC1 (* skoMC1 (* skoMC1 (- 2.))))) (* skoMC1 (* skoMC1 (* skoMC1 2.))))) (succedent (> (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (+ (- 2.) (* skoMC1 (- 12.)))))) (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (+ 1. (* skoMC1 (- 6.)))))) (* skoSC1 (+ (* skoMC1 (* skoMC1 skoMC1)) (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (/ (- 1.) 12.)))) (* skoSC1 (* skoMC1 (* skoMC1 (* skoMC1 (/ (- 1.) 12.))))))))))))) (* skoMC1 (* skoMC1 (* skoMC1 (+ 2. (* skoMC1 6.))))))))
-----[end problem]-----

-----[begin problem]-----
% In Mathematica format:
Timing[Resolve[Exists[{skoSC1,skoMC1}, And[skoMC1*skoMC1*skoMC1*2>0,skoSC1*skoMC1*skoMC1*skoMC1>skoMC1*skoMC1*skoMC1*-1,skoSC1*(skoMC1*(-1+skoMC1*3)+skoSC1*(skoMC1*(-2+skoMC1*-3)+skoSC1*(skoMC1*((1/6)+skoMC1*-1)+skoSC1*skoMC1*(1/4))))>skoMC1*(-2+skoMC1*-5),skoSC1*(skoMC1*(-1+skoMC1*3)+skoSC1*(skoMC1*(-2+skoMC1*-3)+skoSC1*(skoMC1*skoMC1*-1+skoSC1*skoMC1*(1/12))))>skoMC1*(-2+skoMC1*-5),skoSC1*(skoMC1*(1+skoMC1*-3)+skoSC1*(skoMC1*(2+skoMC1*3)+skoSC1*(skoMC1*((-1/6)+skoMC1)+skoSC1*skoMC1*(-1/4))))<=skoMC1*(2+skoMC1*5),skoSC1*(skoMC1*(1+skoMC1*-3)+skoSC1*(skoMC1*(2+skoMC1*3)+skoSC1*(skoMC1*skoMC1+skoSC1*skoMC1*(-1/12))))<=skoMC1*(2+skoMC1*5),skoSC1*skoMC1*-1<=skoMC1,skoSC1*skoMC1>skoMC1*-1,0<=skoMC1,skoMC1>0,0<=skoSC1,2<=skoMC1,skoSC1<=(5/4),skoSC1*skoMC1*skoMC1*skoMC1*2>skoMC1*skoMC1*skoMC1*-2,skoSC1*skoMC1*skoMC1*skoMC1*-2<=skoMC1*skoMC1*skoMC1*2,skoSC1*(skoMC1*skoMC1*skoMC1*(-2+skoMC1*-12)+skoSC1*(skoMC1*skoMC1*skoMC1*(1+skoMC1*-6)+skoSC1*(skoMC1*skoMC1*skoMC1+skoSC1*(skoMC1*skoMC1*skoMC1*(-1/12)+skoSC1*skoMC1*skoMC1*skoMC1*(-1/12)))))<=skoMC1*skoMC1*skoMC1*(2+skoMC1*6)]], Reals]]

% In QepcadB format:
(E skoSC1) (E skoMC1) [[0<(skoMC1 skoMC1 skoMC1 (2))]/\[[(skoMC1 skoMC1 skoMC1 (-1))<(skoSC1 skoMC1 skoMC1 skoMC1)]/\[[(skoMC1 (-2+(skoMC1 (-5))))<(skoSC1 ((skoMC1 (-1+(skoMC1 (3))))+(skoSC1 ((skoMC1 (-2+(skoMC1 (-3))))+(skoSC1 ((skoMC1 (1/6+(skoMC1 (-1))))+(skoSC1 skoMC1 (1/4))))))))]/\[[(skoMC1 (-2+(skoMC1 (-5))))<(skoSC1 ((skoMC1 (-1+(skoMC1 (3))))+(skoSC1 ((skoMC1 (-2+(skoMC1 (-3))))+(skoSC1 ((skoMC1 skoMC1 (-1))+(skoSC1 skoMC1 (1/12))))))))]/\[[(skoSC1 ((skoMC1 (1+(skoMC1 (-3))))+(skoSC1 ((skoMC1 (2+(skoMC1 (3))))+(skoSC1 ((skoMC1 (-1/6+skoMC1))+(skoSC1 skoMC1 (-1/4))))))))<=(skoMC1 (2+(skoMC1 (5))))]/\[[(skoSC1 ((skoMC1 (1+(skoMC1 (-3))))+(skoSC1 ((skoMC1 (2+(skoMC1 (3))))+(skoSC1 ((skoMC1 skoMC1)+(skoSC1 skoMC1 (-1/12))))))))<=(skoMC1 (2+(skoMC1 (5))))]/\[[(skoSC1 skoMC1 (-1))<=skoMC1]/\[[(skoMC1 (-1))<(skoSC1 skoMC1)]/\[[0<=skoMC1]/\[[0<skoMC1]/\[[0<=skoSC1]/\[[2<=skoMC1]/\[[skoSC1<=5/4]/\[[(skoMC1 skoMC1 skoMC1 (-2))<(skoSC1 skoMC1 skoMC1 skoMC1 (2))]/\[[(skoSC1 skoMC1 skoMC1 skoMC1 (-2))<=(skoMC1 skoMC1 skoMC1 (2))]/\[(skoSC1 ((skoMC1 skoMC1 skoMC1 (-2+(skoMC1 (-12))))+(skoSC1 ((skoMC1 skoMC1 skoMC1 (1+(skoMC1 (-6))))+(skoSC1 ((skoMC1 skoMC1 skoMC1)+(skoSC1 ((skoMC1 skoMC1 skoMC1 (-1/12))+(skoSC1 skoMC1 skoMC1 skoMC1 (-1/12))))))))))<=(skoMC1 skoMC1 skoMC1 (2+(skoMC1 (6))))]]]]]]]]]]]]]]]].

% In SMTLib2 format:
(declare-fun skoSC1 () Real) (declare-fun skoMC1 () Real) (assert (and (> (* skoMC1 (* skoMC1 (* skoMC1 2.))) 0.) (and (> (* skoSC1 (* skoMC1 (* skoMC1 skoMC1))) (* skoMC1 (* skoMC1 (* skoMC1 (- 1.))))) (and (> (* skoSC1 (+ (* skoMC1 (+ (- 1.) (* skoMC1 3.))) (* skoSC1 (+ (* skoMC1 (+ (- 2.) (* skoMC1 (- 3.)))) (* skoSC1 (+ (* skoMC1 (+ (/ 1. 6.) (* skoMC1 (- 1.)))) (* skoSC1 (* skoMC1 (/ 1. 4.))))))))) (* skoMC1 (+ (- 2.) (* skoMC1 (- 5.))))) (and (> (* skoSC1 (+ (* skoMC1 (+ (- 1.) (* skoMC1 3.))) (* skoSC1 (+ (* skoMC1 (+ (- 2.) (* skoMC1 (- 3.)))) (* skoSC1 (+ (* skoMC1 (* skoMC1 (- 1.))) (* skoSC1 (* skoMC1 (/ 1. 12.))))))))) (* skoMC1 (+ (- 2.) (* skoMC1 (- 5.))))) (and (<= (* skoSC1 (+ (* skoMC1 (+ 1. (* skoMC1 (- 3.)))) (* skoSC1 (+ (* skoMC1 (+ 2. (* skoMC1 3.))) (* skoSC1 (+ (* skoMC1 (+ (/ (- 1.) 6.) skoMC1)) (* skoSC1 (* skoMC1 (/ (- 1.) 4.))))))))) (* skoMC1 (+ 2. (* skoMC1 5.)))) (and (<= (* skoSC1 (+ (* skoMC1 (+ 1. (* skoMC1 (- 3.)))) (* skoSC1 (+ (* skoMC1 (+ 2. (* skoMC1 3.))) (* skoSC1 (+ (* skoMC1 skoMC1) (* skoSC1 (* skoMC1 (/ (- 1.) 12.))))))))) (* skoMC1 (+ 2. (* skoMC1 5.)))) (and (<= (* skoSC1 (* skoMC1 (- 1.))) skoMC1) (and (> (* skoSC1 skoMC1) (* skoMC1 (- 1.))) (and (<= 0. skoMC1) (and (> skoMC1 0.) (and (<= 0. skoSC1) (and (<= 2. skoMC1) (and (<= skoSC1 (/ 5. 4.)) (and (> (* skoSC1 (* skoMC1 (* skoMC1 (* skoMC1 2.)))) (* skoMC1 (* skoMC1 (* skoMC1 (- 2.))))) (and (<= (* skoSC1 (* skoMC1 (* skoMC1 (* skoMC1 (- 2.))))) (* skoMC1 (* skoMC1 (* skoMC1 2.)))) (<= (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (+ (- 2.) (* skoMC1 (- 12.)))))) (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (+ 1. (* skoMC1 (- 6.)))))) (* skoSC1 (+ (* skoMC1 (* skoMC1 skoMC1)) (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (/ (- 1.) 12.)))) (* skoSC1 (* skoMC1 (* skoMC1 (* skoMC1 (/ (- 1.) 12.))))))))))))) (* skoMC1 (* skoMC1 (* skoMC1 (+ 2. (* skoMC1 6.))))))))))))))))))))))

% In GRF format:
(sequent " MetiTarski formula " (antecedent (> (* skoMC1 (* skoMC1 (* skoMC1 2.))) 0.) (> (* skoSC1 (* skoMC1 (* skoMC1 skoMC1))) (* skoMC1 (* skoMC1 (* skoMC1 (- 1.))))) (> (* skoSC1 (+ (* skoMC1 (+ (- 1.) (* skoMC1 3.))) (* skoSC1 (+ (* skoMC1 (+ (- 2.) (* skoMC1 (- 3.)))) (* skoSC1 (+ (* skoMC1 (+ (/ 1. 6.) (* skoMC1 (- 1.)))) (* skoSC1 (* skoMC1 (/ 1. 4.))))))))) (* skoMC1 (+ (- 2.) (* skoMC1 (- 5.))))) (> (* skoSC1 (+ (* skoMC1 (+ (- 1.) (* skoMC1 3.))) (* skoSC1 (+ (* skoMC1 (+ (- 2.) (* skoMC1 (- 3.)))) (* skoSC1 (+ (* skoMC1 (* skoMC1 (- 1.))) (* skoSC1 (* skoMC1 (/ 1. 12.))))))))) (* skoMC1 (+ (- 2.) (* skoMC1 (- 5.))))) (<= (* skoSC1 (+ (* skoMC1 (+ 1. (* skoMC1 (- 3.)))) (* skoSC1 (+ (* skoMC1 (+ 2. (* skoMC1 3.))) (* skoSC1 (+ (* skoMC1 (+ (/ (- 1.) 6.) skoMC1)) (* skoSC1 (* skoMC1 (/ (- 1.) 4.))))))))) (* skoMC1 (+ 2. (* skoMC1 5.)))) (<= (* skoSC1 (+ (* skoMC1 (+ 1. (* skoMC1 (- 3.)))) (* skoSC1 (+ (* skoMC1 (+ 2. (* skoMC1 3.))) (* skoSC1 (+ (* skoMC1 skoMC1) (* skoSC1 (* skoMC1 (/ (- 1.) 12.))))))))) (* skoMC1 (+ 2. (* skoMC1 5.)))) (<= (* skoSC1 (* skoMC1 (- 1.))) skoMC1) (> (* skoSC1 skoMC1) (* skoMC1 (- 1.))) (<= 0. skoMC1) (> skoMC1 0.) (<= 0. skoSC1) (<= 2. skoMC1) (<= skoSC1 (/ 5. 4.)) (> (* skoSC1 (* skoMC1 (* skoMC1 (* skoMC1 2.)))) (* skoMC1 (* skoMC1 (* skoMC1 (- 2.))))) (<= (* skoSC1 (* skoMC1 (* skoMC1 (* skoMC1 (- 2.))))) (* skoMC1 (* skoMC1 (* skoMC1 2.))))) (succedent (> (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (+ (- 2.) (* skoMC1 (- 12.)))))) (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (+ 1. (* skoMC1 (- 6.)))))) (* skoSC1 (+ (* skoMC1 (* skoMC1 skoMC1)) (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (/ (- 1.) 12.)))) (* skoSC1 (* skoMC1 (* skoMC1 (* skoMC1 (/ (- 1.) 12.))))))))))))) (* skoMC1 (* skoMC1 (* skoMC1 (+ 2. (* skoMC1 6.))))))))
-----[end problem]-----

-----[begin problem]-----
% In Mathematica format:
Timing[Resolve[Exists[{skoSC1,skoMC1}, And[skoMC1*skoMC1*skoMC1*2>0,skoSC1*(skoMC1*(-1+skoMC1*3)+skoSC1*(skoMC1*(-2+skoMC1*-3)+skoSC1*(skoMC1*((1/6)+skoMC1*-1)+skoSC1*skoMC1*(1/4))))>skoMC1*(-2+skoMC1*-5),skoSC1*(skoMC1*(-1+skoMC1*3)+skoSC1*(skoMC1*(-2+skoMC1*-3)+skoSC1*(skoMC1*skoMC1*-1+skoSC1*skoMC1*(1/12))))>skoMC1*(-2+skoMC1*-5),skoSC1*(skoMC1*(1+skoMC1*-3)+skoSC1*(skoMC1*(2+skoMC1*3)+skoSC1*(skoMC1*((-1/6)+skoMC1)+skoSC1*skoMC1*(-1/4))))<=skoMC1*(2+skoMC1*5),skoSC1*(skoMC1*(1+skoMC1*-3)+skoSC1*(skoMC1*(2+skoMC1*3)+skoSC1*(skoMC1*skoMC1+skoSC1*skoMC1*(-1/12))))<=skoMC1*(2+skoMC1*5),skoSC1*skoMC1*-1<=skoMC1,skoSC1*skoMC1>skoMC1*-1,0<=skoMC1,skoMC1>0,0<=skoSC1,2<=skoMC1,skoSC1<=(5/4),skoSC1*skoMC1*skoMC1*skoMC1*2>skoMC1*skoMC1*skoMC1*-2,skoSC1*skoMC1*skoMC1*skoMC1*-2<=skoMC1*skoMC1*skoMC1*2,skoSC1*(skoMC1*skoMC1*skoMC1*(-2+skoMC1*-12)+skoSC1*(skoMC1*skoMC1*skoMC1*(1+skoMC1*-6)+skoSC1*(skoMC1*skoMC1*skoMC1+skoSC1*(skoMC1*skoMC1*skoMC1*(-1/12)+skoSC1*skoMC1*skoMC1*skoMC1*(-1/12)))))<=skoMC1*skoMC1*skoMC1*(2+skoMC1*6)]], Reals]]

% In QepcadB format:
(E skoSC1) (E skoMC1) [[0<(skoMC1 skoMC1 skoMC1 (2))]/\[[(skoMC1 (-2+(skoMC1 (-5))))<(skoSC1 ((skoMC1 (-1+(skoMC1 (3))))+(skoSC1 ((skoMC1 (-2+(skoMC1 (-3))))+(skoSC1 ((skoMC1 (1/6+(skoMC1 (-1))))+(skoSC1 skoMC1 (1/4))))))))]/\[[(skoMC1 (-2+(skoMC1 (-5))))<(skoSC1 ((skoMC1 (-1+(skoMC1 (3))))+(skoSC1 ((skoMC1 (-2+(skoMC1 (-3))))+(skoSC1 ((skoMC1 skoMC1 (-1))+(skoSC1 skoMC1 (1/12))))))))]/\[[(skoSC1 ((skoMC1 (1+(skoMC1 (-3))))+(skoSC1 ((skoMC1 (2+(skoMC1 (3))))+(skoSC1 ((skoMC1 (-1/6+skoMC1))+(skoSC1 skoMC1 (-1/4))))))))<=(skoMC1 (2+(skoMC1 (5))))]/\[[(skoSC1 ((skoMC1 (1+(skoMC1 (-3))))+(skoSC1 ((skoMC1 (2+(skoMC1 (3))))+(skoSC1 ((skoMC1 skoMC1)+(skoSC1 skoMC1 (-1/12))))))))<=(skoMC1 (2+(skoMC1 (5))))]/\[[(skoSC1 skoMC1 (-1))<=skoMC1]/\[[(skoMC1 (-1))<(skoSC1 skoMC1)]/\[[0<=skoMC1]/\[[0<skoMC1]/\[[0<=skoSC1]/\[[2<=skoMC1]/\[[skoSC1<=5/4]/\[[(skoMC1 skoMC1 skoMC1 (-2))<(skoSC1 skoMC1 skoMC1 skoMC1 (2))]/\[[(skoSC1 skoMC1 skoMC1 skoMC1 (-2))<=(skoMC1 skoMC1 skoMC1 (2))]/\[(skoSC1 ((skoMC1 skoMC1 skoMC1 (-2+(skoMC1 (-12))))+(skoSC1 ((skoMC1 skoMC1 skoMC1 (1+(skoMC1 (-6))))+(skoSC1 ((skoMC1 skoMC1 skoMC1)+(skoSC1 ((skoMC1 skoMC1 skoMC1 (-1/12))+(skoSC1 skoMC1 skoMC1 skoMC1 (-1/12))))))))))<=(skoMC1 skoMC1 skoMC1 (2+(skoMC1 (6))))]]]]]]]]]]]]]]].

% In SMTLib2 format:
(declare-fun skoSC1 () Real) (declare-fun skoMC1 () Real) (assert (and (> (* skoMC1 (* skoMC1 (* skoMC1 2.))) 0.) (and (> (* skoSC1 (+ (* skoMC1 (+ (- 1.) (* skoMC1 3.))) (* skoSC1 (+ (* skoMC1 (+ (- 2.) (* skoMC1 (- 3.)))) (* skoSC1 (+ (* skoMC1 (+ (/ 1. 6.) (* skoMC1 (- 1.)))) (* skoSC1 (* skoMC1 (/ 1. 4.))))))))) (* skoMC1 (+ (- 2.) (* skoMC1 (- 5.))))) (and (> (* skoSC1 (+ (* skoMC1 (+ (- 1.) (* skoMC1 3.))) (* skoSC1 (+ (* skoMC1 (+ (- 2.) (* skoMC1 (- 3.)))) (* skoSC1 (+ (* skoMC1 (* skoMC1 (- 1.))) (* skoSC1 (* skoMC1 (/ 1. 12.))))))))) (* skoMC1 (+ (- 2.) (* skoMC1 (- 5.))))) (and (<= (* skoSC1 (+ (* skoMC1 (+ 1. (* skoMC1 (- 3.)))) (* skoSC1 (+ (* skoMC1 (+ 2. (* skoMC1 3.))) (* skoSC1 (+ (* skoMC1 (+ (/ (- 1.) 6.) skoMC1)) (* skoSC1 (* skoMC1 (/ (- 1.) 4.))))))))) (* skoMC1 (+ 2. (* skoMC1 5.)))) (and (<= (* skoSC1 (+ (* skoMC1 (+ 1. (* skoMC1 (- 3.)))) (* skoSC1 (+ (* skoMC1 (+ 2. (* skoMC1 3.))) (* skoSC1 (+ (* skoMC1 skoMC1) (* skoSC1 (* skoMC1 (/ (- 1.) 12.))))))))) (* skoMC1 (+ 2. (* skoMC1 5.)))) (and (<= (* skoSC1 (* skoMC1 (- 1.))) skoMC1) (and (> (* skoSC1 skoMC1) (* skoMC1 (- 1.))) (and (<= 0. skoMC1) (and (> skoMC1 0.) (and (<= 0. skoSC1) (and (<= 2. skoMC1) (and (<= skoSC1 (/ 5. 4.)) (and (> (* skoSC1 (* skoMC1 (* skoMC1 (* skoMC1 2.)))) (* skoMC1 (* skoMC1 (* skoMC1 (- 2.))))) (and (<= (* skoSC1 (* skoMC1 (* skoMC1 (* skoMC1 (- 2.))))) (* skoMC1 (* skoMC1 (* skoMC1 2.)))) (<= (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (+ (- 2.) (* skoMC1 (- 12.)))))) (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (+ 1. (* skoMC1 (- 6.)))))) (* skoSC1 (+ (* skoMC1 (* skoMC1 skoMC1)) (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (/ (- 1.) 12.)))) (* skoSC1 (* skoMC1 (* skoMC1 (* skoMC1 (/ (- 1.) 12.))))))))))))) (* skoMC1 (* skoMC1 (* skoMC1 (+ 2. (* skoMC1 6.)))))))))))))))))))))

% In GRF format:
(sequent " MetiTarski formula " (antecedent (> (* skoMC1 (* skoMC1 (* skoMC1 2.))) 0.) (> (* skoSC1 (+ (* skoMC1 (+ (- 1.) (* skoMC1 3.))) (* skoSC1 (+ (* skoMC1 (+ (- 2.) (* skoMC1 (- 3.)))) (* skoSC1 (+ (* skoMC1 (+ (/ 1. 6.) (* skoMC1 (- 1.)))) (* skoSC1 (* skoMC1 (/ 1. 4.))))))))) (* skoMC1 (+ (- 2.) (* skoMC1 (- 5.))))) (> (* skoSC1 (+ (* skoMC1 (+ (- 1.) (* skoMC1 3.))) (* skoSC1 (+ (* skoMC1 (+ (- 2.) (* skoMC1 (- 3.)))) (* skoSC1 (+ (* skoMC1 (* skoMC1 (- 1.))) (* skoSC1 (* skoMC1 (/ 1. 12.))))))))) (* skoMC1 (+ (- 2.) (* skoMC1 (- 5.))))) (<= (* skoSC1 (+ (* skoMC1 (+ 1. (* skoMC1 (- 3.)))) (* skoSC1 (+ (* skoMC1 (+ 2. (* skoMC1 3.))) (* skoSC1 (+ (* skoMC1 (+ (/ (- 1.) 6.) skoMC1)) (* skoSC1 (* skoMC1 (/ (- 1.) 4.))))))))) (* skoMC1 (+ 2. (* skoMC1 5.)))) (<= (* skoSC1 (+ (* skoMC1 (+ 1. (* skoMC1 (- 3.)))) (* skoSC1 (+ (* skoMC1 (+ 2. (* skoMC1 3.))) (* skoSC1 (+ (* skoMC1 skoMC1) (* skoSC1 (* skoMC1 (/ (- 1.) 12.))))))))) (* skoMC1 (+ 2. (* skoMC1 5.)))) (<= (* skoSC1 (* skoMC1 (- 1.))) skoMC1) (> (* skoSC1 skoMC1) (* skoMC1 (- 1.))) (<= 0. skoMC1) (> skoMC1 0.) (<= 0. skoSC1) (<= 2. skoMC1) (<= skoSC1 (/ 5. 4.)) (> (* skoSC1 (* skoMC1 (* skoMC1 (* skoMC1 2.)))) (* skoMC1 (* skoMC1 (* skoMC1 (- 2.))))) (<= (* skoSC1 (* skoMC1 (* skoMC1 (* skoMC1 (- 2.))))) (* skoMC1 (* skoMC1 (* skoMC1 2.))))) (succedent (> (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (+ (- 2.) (* skoMC1 (- 12.)))))) (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (+ 1. (* skoMC1 (- 6.)))))) (* skoSC1 (+ (* skoMC1 (* skoMC1 skoMC1)) (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (/ (- 1.) 12.)))) (* skoSC1 (* skoMC1 (* skoMC1 (* skoMC1 (/ (- 1.) 12.))))))))))))) (* skoMC1 (* skoMC1 (* skoMC1 (+ 2. (* skoMC1 6.))))))))
-----[end problem]-----

-----[begin problem]-----
% In Mathematica format:
Timing[Resolve[Exists[{skoSC1,skoMC1}, And[skoMC1*skoMC1*skoMC1*2>0,skoSC1*(skoMC1*(-1+skoMC1*3)+skoSC1*(skoMC1*(-2+skoMC1*-3)+skoSC1*(skoMC1*((1/6)+skoMC1*-1)+skoSC1*skoMC1*(1/4))))>skoMC1*(-2+skoMC1*-5),skoSC1*(skoMC1*(-1+skoMC1*3)+skoSC1*(skoMC1*(-2+skoMC1*-3)+skoSC1*(skoMC1*skoMC1*-1+skoSC1*skoMC1*(1/12))))>skoMC1*(-2+skoMC1*-5),skoSC1*(skoMC1*(1+skoMC1*-3)+skoSC1*(skoMC1*(2+skoMC1*3)+skoSC1*(skoMC1*((-1/6)+skoMC1)+skoSC1*skoMC1*(-1/4))))<=skoMC1*(2+skoMC1*5),skoSC1*(skoMC1*(1+skoMC1*-3)+skoSC1*(skoMC1*(2+skoMC1*3)+skoSC1*(skoMC1*skoMC1+skoSC1*skoMC1*(-1/12))))<=skoMC1*(2+skoMC1*5),skoSC1*skoMC1*-1<=skoMC1,skoSC1*skoMC1>skoMC1*-1,0<=skoMC1,skoMC1>0,0<=skoSC1,2<=skoMC1,skoSC1<=(5/4),skoSC1*skoMC1*skoMC1*skoMC1*2>skoMC1*skoMC1*skoMC1*-2,skoSC1*skoMC1*skoMC1*skoMC1*-2<=skoMC1*skoMC1*skoMC1*2,skoSC1*(skoMC1*skoMC1*skoMC1*(-2+skoMC1*-12)+skoSC1*(skoMC1*skoMC1*skoMC1*(1+skoMC1*-6)+skoSC1*(skoMC1*skoMC1*skoMC1+skoSC1*(skoMC1*skoMC1*skoMC1*(-1/12)+skoSC1*skoMC1*skoMC1*skoMC1*(-1/12)))))<=skoMC1*skoMC1*skoMC1*(2+skoMC1*6)]], Reals]]

% In QepcadB format:
(E skoSC1) (E skoMC1) [[0<(skoMC1 skoMC1 skoMC1 (2))]/\[[(skoMC1 (-2+(skoMC1 (-5))))<(skoSC1 ((skoMC1 (-1+(skoMC1 (3))))+(skoSC1 ((skoMC1 (-2+(skoMC1 (-3))))+(skoSC1 ((skoMC1 (1/6+(skoMC1 (-1))))+(skoSC1 skoMC1 (1/4))))))))]/\[[(skoMC1 (-2+(skoMC1 (-5))))<(skoSC1 ((skoMC1 (-1+(skoMC1 (3))))+(skoSC1 ((skoMC1 (-2+(skoMC1 (-3))))+(skoSC1 ((skoMC1 skoMC1 (-1))+(skoSC1 skoMC1 (1/12))))))))]/\[[(skoSC1 ((skoMC1 (1+(skoMC1 (-3))))+(skoSC1 ((skoMC1 (2+(skoMC1 (3))))+(skoSC1 ((skoMC1 (-1/6+skoMC1))+(skoSC1 skoMC1 (-1/4))))))))<=(skoMC1 (2+(skoMC1 (5))))]/\[[(skoSC1 ((skoMC1 (1+(skoMC1 (-3))))+(skoSC1 ((skoMC1 (2+(skoMC1 (3))))+(skoSC1 ((skoMC1 skoMC1)+(skoSC1 skoMC1 (-1/12))))))))<=(skoMC1 (2+(skoMC1 (5))))]/\[[(skoSC1 skoMC1 (-1))<=skoMC1]/\[[(skoMC1 (-1))<(skoSC1 skoMC1)]/\[[0<=skoMC1]/\[[0<skoMC1]/\[[0<=skoSC1]/\[[2<=skoMC1]/\[[skoSC1<=5/4]/\[[(skoMC1 skoMC1 skoMC1 (-2))<(skoSC1 skoMC1 skoMC1 skoMC1 (2))]/\[[(skoSC1 skoMC1 skoMC1 skoMC1 (-2))<=(skoMC1 skoMC1 skoMC1 (2))]/\[(skoSC1 ((skoMC1 skoMC1 skoMC1 (-2+(skoMC1 (-12))))+(skoSC1 ((skoMC1 skoMC1 skoMC1 (1+(skoMC1 (-6))))+(skoSC1 ((skoMC1 skoMC1 skoMC1)+(skoSC1 ((skoMC1 skoMC1 skoMC1 (-1/12))+(skoSC1 skoMC1 skoMC1 skoMC1 (-1/12))))))))))<=(skoMC1 skoMC1 skoMC1 (2+(skoMC1 (6))))]]]]]]]]]]]]]]].

% In SMTLib2 format:
(declare-fun skoSC1 () Real) (declare-fun skoMC1 () Real) (assert (and (> (* skoMC1 (* skoMC1 (* skoMC1 2.))) 0.) (and (> (* skoSC1 (+ (* skoMC1 (+ (- 1.) (* skoMC1 3.))) (* skoSC1 (+ (* skoMC1 (+ (- 2.) (* skoMC1 (- 3.)))) (* skoSC1 (+ (* skoMC1 (+ (/ 1. 6.) (* skoMC1 (- 1.)))) (* skoSC1 (* skoMC1 (/ 1. 4.))))))))) (* skoMC1 (+ (- 2.) (* skoMC1 (- 5.))))) (and (> (* skoSC1 (+ (* skoMC1 (+ (- 1.) (* skoMC1 3.))) (* skoSC1 (+ (* skoMC1 (+ (- 2.) (* skoMC1 (- 3.)))) (* skoSC1 (+ (* skoMC1 (* skoMC1 (- 1.))) (* skoSC1 (* skoMC1 (/ 1. 12.))))))))) (* skoMC1 (+ (- 2.) (* skoMC1 (- 5.))))) (and (<= (* skoSC1 (+ (* skoMC1 (+ 1. (* skoMC1 (- 3.)))) (* skoSC1 (+ (* skoMC1 (+ 2. (* skoMC1 3.))) (* skoSC1 (+ (* skoMC1 (+ (/ (- 1.) 6.) skoMC1)) (* skoSC1 (* skoMC1 (/ (- 1.) 4.))))))))) (* skoMC1 (+ 2. (* skoMC1 5.)))) (and (<= (* skoSC1 (+ (* skoMC1 (+ 1. (* skoMC1 (- 3.)))) (* skoSC1 (+ (* skoMC1 (+ 2. (* skoMC1 3.))) (* skoSC1 (+ (* skoMC1 skoMC1) (* skoSC1 (* skoMC1 (/ (- 1.) 12.))))))))) (* skoMC1 (+ 2. (* skoMC1 5.)))) (and (<= (* skoSC1 (* skoMC1 (- 1.))) skoMC1) (and (> (* skoSC1 skoMC1) (* skoMC1 (- 1.))) (and (<= 0. skoMC1) (and (> skoMC1 0.) (and (<= 0. skoSC1) (and (<= 2. skoMC1) (and (<= skoSC1 (/ 5. 4.)) (and (> (* skoSC1 (* skoMC1 (* skoMC1 (* skoMC1 2.)))) (* skoMC1 (* skoMC1 (* skoMC1 (- 2.))))) (and (<= (* skoSC1 (* skoMC1 (* skoMC1 (* skoMC1 (- 2.))))) (* skoMC1 (* skoMC1 (* skoMC1 2.)))) (<= (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (+ (- 2.) (* skoMC1 (- 12.)))))) (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (+ 1. (* skoMC1 (- 6.)))))) (* skoSC1 (+ (* skoMC1 (* skoMC1 skoMC1)) (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (/ (- 1.) 12.)))) (* skoSC1 (* skoMC1 (* skoMC1 (* skoMC1 (/ (- 1.) 12.))))))))))))) (* skoMC1 (* skoMC1 (* skoMC1 (+ 2. (* skoMC1 6.)))))))))))))))))))))

% In GRF format:
(sequent " MetiTarski formula " (antecedent (> (* skoMC1 (* skoMC1 (* skoMC1 2.))) 0.) (> (* skoSC1 (+ (* skoMC1 (+ (- 1.) (* skoMC1 3.))) (* skoSC1 (+ (* skoMC1 (+ (- 2.) (* skoMC1 (- 3.)))) (* skoSC1 (+ (* skoMC1 (+ (/ 1. 6.) (* skoMC1 (- 1.)))) (* skoSC1 (* skoMC1 (/ 1. 4.))))))))) (* skoMC1 (+ (- 2.) (* skoMC1 (- 5.))))) (> (* skoSC1 (+ (* skoMC1 (+ (- 1.) (* skoMC1 3.))) (* skoSC1 (+ (* skoMC1 (+ (- 2.) (* skoMC1 (- 3.)))) (* skoSC1 (+ (* skoMC1 (* skoMC1 (- 1.))) (* skoSC1 (* skoMC1 (/ 1. 12.))))))))) (* skoMC1 (+ (- 2.) (* skoMC1 (- 5.))))) (<= (* skoSC1 (+ (* skoMC1 (+ 1. (* skoMC1 (- 3.)))) (* skoSC1 (+ (* skoMC1 (+ 2. (* skoMC1 3.))) (* skoSC1 (+ (* skoMC1 (+ (/ (- 1.) 6.) skoMC1)) (* skoSC1 (* skoMC1 (/ (- 1.) 4.))))))))) (* skoMC1 (+ 2. (* skoMC1 5.)))) (<= (* skoSC1 (+ (* skoMC1 (+ 1. (* skoMC1 (- 3.)))) (* skoSC1 (+ (* skoMC1 (+ 2. (* skoMC1 3.))) (* skoSC1 (+ (* skoMC1 skoMC1) (* skoSC1 (* skoMC1 (/ (- 1.) 12.))))))))) (* skoMC1 (+ 2. (* skoMC1 5.)))) (<= (* skoSC1 (* skoMC1 (- 1.))) skoMC1) (> (* skoSC1 skoMC1) (* skoMC1 (- 1.))) (<= 0. skoMC1) (> skoMC1 0.) (<= 0. skoSC1) (<= 2. skoMC1) (<= skoSC1 (/ 5. 4.)) (> (* skoSC1 (* skoMC1 (* skoMC1 (* skoMC1 2.)))) (* skoMC1 (* skoMC1 (* skoMC1 (- 2.))))) (<= (* skoSC1 (* skoMC1 (* skoMC1 (* skoMC1 (- 2.))))) (* skoMC1 (* skoMC1 (* skoMC1 2.))))) (succedent (> (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (+ (- 2.) (* skoMC1 (- 12.)))))) (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (+ 1. (* skoMC1 (- 6.)))))) (* skoSC1 (+ (* skoMC1 (* skoMC1 skoMC1)) (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (/ (- 1.) 12.)))) (* skoSC1 (* skoMC1 (* skoMC1 (* skoMC1 (/ (- 1.) 12.))))))))))))) (* skoMC1 (* skoMC1 (* skoMC1 (+ 2. (* skoMC1 6.))))))))
-----[end problem]-----

-----[begin problem]-----
% In Mathematica format:
Timing[Resolve[Exists[{skoSC1,skoMC1}, And[skoMC1*skoMC1*skoMC1*-2<=0,skoMC1*skoMC1*skoMC1*2>0,skoSC1*(skoMC1*(-1+skoMC1*3)+skoSC1*(skoMC1*(-2+skoMC1*-3)+skoSC1*(skoMC1*((1/6)+skoMC1*-1)+skoSC1*skoMC1*(1/4))))>skoMC1*(-2+skoMC1*-5),skoSC1*(skoMC1*(-1+skoMC1*3)+skoSC1*(skoMC1*(-2+skoMC1*-3)+skoSC1*(skoMC1*skoMC1*-1+skoSC1*skoMC1*(1/12))))>skoMC1*(-2+skoMC1*-5),skoSC1*(skoMC1*(1+skoMC1*-3)+skoSC1*(skoMC1*(2+skoMC1*3)+skoSC1*(skoMC1*((-1/6)+skoMC1)+skoSC1*skoMC1*(-1/4))))<=skoMC1*(2+skoMC1*5),skoSC1*(skoMC1*(1+skoMC1*-3)+skoSC1*(skoMC1*(2+skoMC1*3)+skoSC1*(skoMC1*skoMC1+skoSC1*skoMC1*(-1/12))))<=skoMC1*(2+skoMC1*5),skoSC1*skoMC1*-1<=skoMC1,skoSC1*skoMC1>skoMC1*-1,0<=skoMC1,skoMC1>0,0<=skoSC1,2<=skoMC1,skoSC1<=(5/4),skoSC1*skoMC1*skoMC1*skoMC1*2>skoMC1*skoMC1*skoMC1*-2,skoSC1*skoMC1*skoMC1*skoMC1*-2<=skoMC1*skoMC1*skoMC1*2,skoSC1*(skoMC1*skoMC1*skoMC1*(-2+skoMC1*-12)+skoSC1*(skoMC1*skoMC1*skoMC1*(1+skoMC1*-6)+skoSC1*(skoMC1*skoMC1*skoMC1+skoSC1*(skoMC1*skoMC1*skoMC1*(-1/12)+skoSC1*skoMC1*skoMC1*skoMC1*(-1/12)))))<=skoMC1*skoMC1*skoMC1*(2+skoMC1*6)]], Reals]]

% In QepcadB format:
(E skoSC1) (E skoMC1) [[(skoMC1 skoMC1 skoMC1 (-2))<=0]/\[[0<(skoMC1 skoMC1 skoMC1 (2))]/\[[(skoMC1 (-2+(skoMC1 (-5))))<(skoSC1 ((skoMC1 (-1+(skoMC1 (3))))+(skoSC1 ((skoMC1 (-2+(skoMC1 (-3))))+(skoSC1 ((skoMC1 (1/6+(skoMC1 (-1))))+(skoSC1 skoMC1 (1/4))))))))]/\[[(skoMC1 (-2+(skoMC1 (-5))))<(skoSC1 ((skoMC1 (-1+(skoMC1 (3))))+(skoSC1 ((skoMC1 (-2+(skoMC1 (-3))))+(skoSC1 ((skoMC1 skoMC1 (-1))+(skoSC1 skoMC1 (1/12))))))))]/\[[(skoSC1 ((skoMC1 (1+(skoMC1 (-3))))+(skoSC1 ((skoMC1 (2+(skoMC1 (3))))+(skoSC1 ((skoMC1 (-1/6+skoMC1))+(skoSC1 skoMC1 (-1/4))))))))<=(skoMC1 (2+(skoMC1 (5))))]/\[[(skoSC1 ((skoMC1 (1+(skoMC1 (-3))))+(skoSC1 ((skoMC1 (2+(skoMC1 (3))))+(skoSC1 ((skoMC1 skoMC1)+(skoSC1 skoMC1 (-1/12))))))))<=(skoMC1 (2+(skoMC1 (5))))]/\[[(skoSC1 skoMC1 (-1))<=skoMC1]/\[[(skoMC1 (-1))<(skoSC1 skoMC1)]/\[[0<=skoMC1]/\[[0<skoMC1]/\[[0<=skoSC1]/\[[2<=skoMC1]/\[[skoSC1<=5/4]/\[[(skoMC1 skoMC1 skoMC1 (-2))<(skoSC1 skoMC1 skoMC1 skoMC1 (2))]/\[[(skoSC1 skoMC1 skoMC1 skoMC1 (-2))<=(skoMC1 skoMC1 skoMC1 (2))]/\[(skoSC1 ((skoMC1 skoMC1 skoMC1 (-2+(skoMC1 (-12))))+(skoSC1 ((skoMC1 skoMC1 skoMC1 (1+(skoMC1 (-6))))+(skoSC1 ((skoMC1 skoMC1 skoMC1)+(skoSC1 ((skoMC1 skoMC1 skoMC1 (-1/12))+(skoSC1 skoMC1 skoMC1 skoMC1 (-1/12))))))))))<=(skoMC1 skoMC1 skoMC1 (2+(skoMC1 (6))))]]]]]]]]]]]]]]]].

% In SMTLib2 format:
(declare-fun skoSC1 () Real) (declare-fun skoMC1 () Real) (assert (and (<= (* skoMC1 (* skoMC1 (* skoMC1 (- 2.)))) 0.) (and (> (* skoMC1 (* skoMC1 (* skoMC1 2.))) 0.) (and (> (* skoSC1 (+ (* skoMC1 (+ (- 1.) (* skoMC1 3.))) (* skoSC1 (+ (* skoMC1 (+ (- 2.) (* skoMC1 (- 3.)))) (* skoSC1 (+ (* skoMC1 (+ (/ 1. 6.) (* skoMC1 (- 1.)))) (* skoSC1 (* skoMC1 (/ 1. 4.))))))))) (* skoMC1 (+ (- 2.) (* skoMC1 (- 5.))))) (and (> (* skoSC1 (+ (* skoMC1 (+ (- 1.) (* skoMC1 3.))) (* skoSC1 (+ (* skoMC1 (+ (- 2.) (* skoMC1 (- 3.)))) (* skoSC1 (+ (* skoMC1 (* skoMC1 (- 1.))) (* skoSC1 (* skoMC1 (/ 1. 12.))))))))) (* skoMC1 (+ (- 2.) (* skoMC1 (- 5.))))) (and (<= (* skoSC1 (+ (* skoMC1 (+ 1. (* skoMC1 (- 3.)))) (* skoSC1 (+ (* skoMC1 (+ 2. (* skoMC1 3.))) (* skoSC1 (+ (* skoMC1 (+ (/ (- 1.) 6.) skoMC1)) (* skoSC1 (* skoMC1 (/ (- 1.) 4.))))))))) (* skoMC1 (+ 2. (* skoMC1 5.)))) (and (<= (* skoSC1 (+ (* skoMC1 (+ 1. (* skoMC1 (- 3.)))) (* skoSC1 (+ (* skoMC1 (+ 2. (* skoMC1 3.))) (* skoSC1 (+ (* skoMC1 skoMC1) (* skoSC1 (* skoMC1 (/ (- 1.) 12.))))))))) (* skoMC1 (+ 2. (* skoMC1 5.)))) (and (<= (* skoSC1 (* skoMC1 (- 1.))) skoMC1) (and (> (* skoSC1 skoMC1) (* skoMC1 (- 1.))) (and (<= 0. skoMC1) (and (> skoMC1 0.) (and (<= 0. skoSC1) (and (<= 2. skoMC1) (and (<= skoSC1 (/ 5. 4.)) (and (> (* skoSC1 (* skoMC1 (* skoMC1 (* skoMC1 2.)))) (* skoMC1 (* skoMC1 (* skoMC1 (- 2.))))) (and (<= (* skoSC1 (* skoMC1 (* skoMC1 (* skoMC1 (- 2.))))) (* skoMC1 (* skoMC1 (* skoMC1 2.)))) (<= (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (+ (- 2.) (* skoMC1 (- 12.)))))) (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (+ 1. (* skoMC1 (- 6.)))))) (* skoSC1 (+ (* skoMC1 (* skoMC1 skoMC1)) (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (/ (- 1.) 12.)))) (* skoSC1 (* skoMC1 (* skoMC1 (* skoMC1 (/ (- 1.) 12.))))))))))))) (* skoMC1 (* skoMC1 (* skoMC1 (+ 2. (* skoMC1 6.))))))))))))))))))))))

% In GRF format:
(sequent " MetiTarski formula " (antecedent (<= (* skoMC1 (* skoMC1 (* skoMC1 (- 2.)))) 0.) (> (* skoMC1 (* skoMC1 (* skoMC1 2.))) 0.) (> (* skoSC1 (+ (* skoMC1 (+ (- 1.) (* skoMC1 3.))) (* skoSC1 (+ (* skoMC1 (+ (- 2.) (* skoMC1 (- 3.)))) (* skoSC1 (+ (* skoMC1 (+ (/ 1. 6.) (* skoMC1 (- 1.)))) (* skoSC1 (* skoMC1 (/ 1. 4.))))))))) (* skoMC1 (+ (- 2.) (* skoMC1 (- 5.))))) (> (* skoSC1 (+ (* skoMC1 (+ (- 1.) (* skoMC1 3.))) (* skoSC1 (+ (* skoMC1 (+ (- 2.) (* skoMC1 (- 3.)))) (* skoSC1 (+ (* skoMC1 (* skoMC1 (- 1.))) (* skoSC1 (* skoMC1 (/ 1. 12.))))))))) (* skoMC1 (+ (- 2.) (* skoMC1 (- 5.))))) (<= (* skoSC1 (+ (* skoMC1 (+ 1. (* skoMC1 (- 3.)))) (* skoSC1 (+ (* skoMC1 (+ 2. (* skoMC1 3.))) (* skoSC1 (+ (* skoMC1 (+ (/ (- 1.) 6.) skoMC1)) (* skoSC1 (* skoMC1 (/ (- 1.) 4.))))))))) (* skoMC1 (+ 2. (* skoMC1 5.)))) (<= (* skoSC1 (+ (* skoMC1 (+ 1. (* skoMC1 (- 3.)))) (* skoSC1 (+ (* skoMC1 (+ 2. (* skoMC1 3.))) (* skoSC1 (+ (* skoMC1 skoMC1) (* skoSC1 (* skoMC1 (/ (- 1.) 12.))))))))) (* skoMC1 (+ 2. (* skoMC1 5.)))) (<= (* skoSC1 (* skoMC1 (- 1.))) skoMC1) (> (* skoSC1 skoMC1) (* skoMC1 (- 1.))) (<= 0. skoMC1) (> skoMC1 0.) (<= 0. skoSC1) (<= 2. skoMC1) (<= skoSC1 (/ 5. 4.)) (> (* skoSC1 (* skoMC1 (* skoMC1 (* skoMC1 2.)))) (* skoMC1 (* skoMC1 (* skoMC1 (- 2.))))) (<= (* skoSC1 (* skoMC1 (* skoMC1 (* skoMC1 (- 2.))))) (* skoMC1 (* skoMC1 (* skoMC1 2.))))) (succedent (> (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (+ (- 2.) (* skoMC1 (- 12.)))))) (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (+ 1. (* skoMC1 (- 6.)))))) (* skoSC1 (+ (* skoMC1 (* skoMC1 skoMC1)) (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (/ (- 1.) 12.)))) (* skoSC1 (* skoMC1 (* skoMC1 (* skoMC1 (/ (- 1.) 12.))))))))))))) (* skoMC1 (* skoMC1 (* skoMC1 (+ 2. (* skoMC1 6.))))))))
-----[end problem]-----

-----[begin problem]-----
% In Mathematica format:
Timing[Resolve[Exists[{skoSC1,skoMC1}, And[skoMC1*skoMC1*skoMC1*-2<=0,skoMC1*skoMC1*skoMC1*2>0,skoMC1*skoMC1*skoMC1*2>0,skoSC1*(skoMC1*(-1+skoMC1*3)+skoSC1*(skoMC1*(-2+skoMC1*-3)+skoSC1*(skoMC1*((1/6)+skoMC1*-1)+skoSC1*skoMC1*(1/4))))>skoMC1*(-2+skoMC1*-5),skoSC1*(skoMC1*(-1+skoMC1*3)+skoSC1*(skoMC1*(-2+skoMC1*-3)+skoSC1*(skoMC1*skoMC1*-1+skoSC1*skoMC1*(1/12))))>skoMC1*(-2+skoMC1*-5),skoSC1*(skoMC1*(1+skoMC1*-3)+skoSC1*(skoMC1*(2+skoMC1*3)+skoSC1*(skoMC1*((-1/6)+skoMC1)+skoSC1*skoMC1*(-1/4))))<=skoMC1*(2+skoMC1*5),skoSC1*(skoMC1*(1+skoMC1*-3)+skoSC1*(skoMC1*(2+skoMC1*3)+skoSC1*(skoMC1*skoMC1+skoSC1*skoMC1*(-1/12))))<=skoMC1*(2+skoMC1*5),skoSC1*skoMC1*-1<=skoMC1,skoSC1*skoMC1>skoMC1*-1,0<=skoMC1,skoMC1>0,0<=skoSC1,2<=skoMC1,skoSC1<=(5/4),skoSC1*skoMC1*skoMC1*skoMC1*2>skoMC1*skoMC1*skoMC1*-2,skoSC1*skoMC1*skoMC1*skoMC1*-2<=skoMC1*skoMC1*skoMC1*2,skoSC1*(skoMC1*skoMC1*skoMC1*(-2+skoMC1*-12)+skoSC1*(skoMC1*skoMC1*skoMC1*(1+skoMC1*-6)+skoSC1*(skoMC1*skoMC1*skoMC1+skoSC1*(skoMC1*skoMC1*skoMC1*(-1/12)+skoSC1*skoMC1*skoMC1*skoMC1*(-1/12)))))<=skoMC1*skoMC1*skoMC1*(2+skoMC1*6)]], Reals]]

% In QepcadB format:
(E skoSC1) (E skoMC1) [[(skoMC1 skoMC1 skoMC1 (-2))<=0]/\[[0<(skoMC1 skoMC1 skoMC1 (2))]/\[[0<(skoMC1 skoMC1 skoMC1 (2))]/\[[(skoMC1 (-2+(skoMC1 (-5))))<(skoSC1 ((skoMC1 (-1+(skoMC1 (3))))+(skoSC1 ((skoMC1 (-2+(skoMC1 (-3))))+(skoSC1 ((skoMC1 (1/6+(skoMC1 (-1))))+(skoSC1 skoMC1 (1/4))))))))]/\[[(skoMC1 (-2+(skoMC1 (-5))))<(skoSC1 ((skoMC1 (-1+(skoMC1 (3))))+(skoSC1 ((skoMC1 (-2+(skoMC1 (-3))))+(skoSC1 ((skoMC1 skoMC1 (-1))+(skoSC1 skoMC1 (1/12))))))))]/\[[(skoSC1 ((skoMC1 (1+(skoMC1 (-3))))+(skoSC1 ((skoMC1 (2+(skoMC1 (3))))+(skoSC1 ((skoMC1 (-1/6+skoMC1))+(skoSC1 skoMC1 (-1/4))))))))<=(skoMC1 (2+(skoMC1 (5))))]/\[[(skoSC1 ((skoMC1 (1+(skoMC1 (-3))))+(skoSC1 ((skoMC1 (2+(skoMC1 (3))))+(skoSC1 ((skoMC1 skoMC1)+(skoSC1 skoMC1 (-1/12))))))))<=(skoMC1 (2+(skoMC1 (5))))]/\[[(skoSC1 skoMC1 (-1))<=skoMC1]/\[[(skoMC1 (-1))<(skoSC1 skoMC1)]/\[[0<=skoMC1]/\[[0<skoMC1]/\[[0<=skoSC1]/\[[2<=skoMC1]/\[[skoSC1<=5/4]/\[[(skoMC1 skoMC1 skoMC1 (-2))<(skoSC1 skoMC1 skoMC1 skoMC1 (2))]/\[[(skoSC1 skoMC1 skoMC1 skoMC1 (-2))<=(skoMC1 skoMC1 skoMC1 (2))]/\[(skoSC1 ((skoMC1 skoMC1 skoMC1 (-2+(skoMC1 (-12))))+(skoSC1 ((skoMC1 skoMC1 skoMC1 (1+(skoMC1 (-6))))+(skoSC1 ((skoMC1 skoMC1 skoMC1)+(skoSC1 ((skoMC1 skoMC1 skoMC1 (-1/12))+(skoSC1 skoMC1 skoMC1 skoMC1 (-1/12))))))))))<=(skoMC1 skoMC1 skoMC1 (2+(skoMC1 (6))))]]]]]]]]]]]]]]]]].

% In SMTLib2 format:
(declare-fun skoSC1 () Real) (declare-fun skoMC1 () Real) (assert (and (<= (* skoMC1 (* skoMC1 (* skoMC1 (- 2.)))) 0.) (and (> (* skoMC1 (* skoMC1 (* skoMC1 2.))) 0.) (and (> (* skoMC1 (* skoMC1 (* skoMC1 2.))) 0.) (and (> (* skoSC1 (+ (* skoMC1 (+ (- 1.) (* skoMC1 3.))) (* skoSC1 (+ (* skoMC1 (+ (- 2.) (* skoMC1 (- 3.)))) (* skoSC1 (+ (* skoMC1 (+ (/ 1. 6.) (* skoMC1 (- 1.)))) (* skoSC1 (* skoMC1 (/ 1. 4.))))))))) (* skoMC1 (+ (- 2.) (* skoMC1 (- 5.))))) (and (> (* skoSC1 (+ (* skoMC1 (+ (- 1.) (* skoMC1 3.))) (* skoSC1 (+ (* skoMC1 (+ (- 2.) (* skoMC1 (- 3.)))) (* skoSC1 (+ (* skoMC1 (* skoMC1 (- 1.))) (* skoSC1 (* skoMC1 (/ 1. 12.))))))))) (* skoMC1 (+ (- 2.) (* skoMC1 (- 5.))))) (and (<= (* skoSC1 (+ (* skoMC1 (+ 1. (* skoMC1 (- 3.)))) (* skoSC1 (+ (* skoMC1 (+ 2. (* skoMC1 3.))) (* skoSC1 (+ (* skoMC1 (+ (/ (- 1.) 6.) skoMC1)) (* skoSC1 (* skoMC1 (/ (- 1.) 4.))))))))) (* skoMC1 (+ 2. (* skoMC1 5.)))) (and (<= (* skoSC1 (+ (* skoMC1 (+ 1. (* skoMC1 (- 3.)))) (* skoSC1 (+ (* skoMC1 (+ 2. (* skoMC1 3.))) (* skoSC1 (+ (* skoMC1 skoMC1) (* skoSC1 (* skoMC1 (/ (- 1.) 12.))))))))) (* skoMC1 (+ 2. (* skoMC1 5.)))) (and (<= (* skoSC1 (* skoMC1 (- 1.))) skoMC1) (and (> (* skoSC1 skoMC1) (* skoMC1 (- 1.))) (and (<= 0. skoMC1) (and (> skoMC1 0.) (and (<= 0. skoSC1) (and (<= 2. skoMC1) (and (<= skoSC1 (/ 5. 4.)) (and (> (* skoSC1 (* skoMC1 (* skoMC1 (* skoMC1 2.)))) (* skoMC1 (* skoMC1 (* skoMC1 (- 2.))))) (and (<= (* skoSC1 (* skoMC1 (* skoMC1 (* skoMC1 (- 2.))))) (* skoMC1 (* skoMC1 (* skoMC1 2.)))) (<= (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (+ (- 2.) (* skoMC1 (- 12.)))))) (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (+ 1. (* skoMC1 (- 6.)))))) (* skoSC1 (+ (* skoMC1 (* skoMC1 skoMC1)) (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (/ (- 1.) 12.)))) (* skoSC1 (* skoMC1 (* skoMC1 (* skoMC1 (/ (- 1.) 12.))))))))))))) (* skoMC1 (* skoMC1 (* skoMC1 (+ 2. (* skoMC1 6.)))))))))))))))))))))))

% In GRF format:
(sequent " MetiTarski formula " (antecedent (<= (* skoMC1 (* skoMC1 (* skoMC1 (- 2.)))) 0.) (> (* skoMC1 (* skoMC1 (* skoMC1 2.))) 0.) (> (* skoMC1 (* skoMC1 (* skoMC1 2.))) 0.) (> (* skoSC1 (+ (* skoMC1 (+ (- 1.) (* skoMC1 3.))) (* skoSC1 (+ (* skoMC1 (+ (- 2.) (* skoMC1 (- 3.)))) (* skoSC1 (+ (* skoMC1 (+ (/ 1. 6.) (* skoMC1 (- 1.)))) (* skoSC1 (* skoMC1 (/ 1. 4.))))))))) (* skoMC1 (+ (- 2.) (* skoMC1 (- 5.))))) (> (* skoSC1 (+ (* skoMC1 (+ (- 1.) (* skoMC1 3.))) (* skoSC1 (+ (* skoMC1 (+ (- 2.) (* skoMC1 (- 3.)))) (* skoSC1 (+ (* skoMC1 (* skoMC1 (- 1.))) (* skoSC1 (* skoMC1 (/ 1. 12.))))))))) (* skoMC1 (+ (- 2.) (* skoMC1 (- 5.))))) (<= (* skoSC1 (+ (* skoMC1 (+ 1. (* skoMC1 (- 3.)))) (* skoSC1 (+ (* skoMC1 (+ 2. (* skoMC1 3.))) (* skoSC1 (+ (* skoMC1 (+ (/ (- 1.) 6.) skoMC1)) (* skoSC1 (* skoMC1 (/ (- 1.) 4.))))))))) (* skoMC1 (+ 2. (* skoMC1 5.)))) (<= (* skoSC1 (+ (* skoMC1 (+ 1. (* skoMC1 (- 3.)))) (* skoSC1 (+ (* skoMC1 (+ 2. (* skoMC1 3.))) (* skoSC1 (+ (* skoMC1 skoMC1) (* skoSC1 (* skoMC1 (/ (- 1.) 12.))))))))) (* skoMC1 (+ 2. (* skoMC1 5.)))) (<= (* skoSC1 (* skoMC1 (- 1.))) skoMC1) (> (* skoSC1 skoMC1) (* skoMC1 (- 1.))) (<= 0. skoMC1) (> skoMC1 0.) (<= 0. skoSC1) (<= 2. skoMC1) (<= skoSC1 (/ 5. 4.)) (> (* skoSC1 (* skoMC1 (* skoMC1 (* skoMC1 2.)))) (* skoMC1 (* skoMC1 (* skoMC1 (- 2.))))) (<= (* skoSC1 (* skoMC1 (* skoMC1 (* skoMC1 (- 2.))))) (* skoMC1 (* skoMC1 (* skoMC1 2.))))) (succedent (> (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (+ (- 2.) (* skoMC1 (- 12.)))))) (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (+ 1. (* skoMC1 (- 6.)))))) (* skoSC1 (+ (* skoMC1 (* skoMC1 skoMC1)) (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (/ (- 1.) 12.)))) (* skoSC1 (* skoMC1 (* skoMC1 (* skoMC1 (/ (- 1.) 12.))))))))))))) (* skoMC1 (* skoMC1 (* skoMC1 (+ 2. (* skoMC1 6.))))))))
-----[end problem]-----

-----[begin problem]-----
% In Mathematica format:
Timing[Resolve[Exists[{skoSC1,skoMC1}, And[skoMC1*skoMC1*skoMC1*-2<=0,skoMC1*skoMC1*skoMC1*2>0,skoSC1*(skoMC1*(-1+skoMC1*3)+skoSC1*(skoMC1*(-2+skoMC1*-3)+skoSC1*(skoMC1*((1/6)+skoMC1*-1)+skoSC1*skoMC1*(1/4))))>skoMC1*(-2+skoMC1*-5),skoSC1*(skoMC1*(-1+skoMC1*3)+skoSC1*(skoMC1*(-2+skoMC1*-3)+skoSC1*(skoMC1*skoMC1*-1+skoSC1*skoMC1*(1/12))))>skoMC1*(-2+skoMC1*-5),skoSC1*(skoMC1*(1+skoMC1*-3)+skoSC1*(skoMC1*(2+skoMC1*3)+skoSC1*(skoMC1*((-1/6)+skoMC1)+skoSC1*skoMC1*(-1/4))))<=skoMC1*(2+skoMC1*5),skoSC1*(skoMC1*(1+skoMC1*-3)+skoSC1*(skoMC1*(2+skoMC1*3)+skoSC1*(skoMC1*skoMC1+skoSC1*skoMC1*(-1/12))))<=skoMC1*(2+skoMC1*5),skoSC1*skoMC1*-1<=skoMC1,skoSC1*skoMC1>skoMC1*-1,0<=skoMC1,skoMC1>0,0<=skoSC1,2<=skoMC1,skoSC1<=(5/4),skoSC1*skoMC1*skoMC1*skoMC1*2>skoMC1*skoMC1*skoMC1*-2,skoSC1*skoMC1*skoMC1*skoMC1*-2<=skoMC1*skoMC1*skoMC1*2,skoSC1*(skoMC1*skoMC1*skoMC1*(-2+skoMC1*-12)+skoSC1*(skoMC1*skoMC1*skoMC1*(1+skoMC1*-6)+skoSC1*(skoMC1*skoMC1*skoMC1+skoSC1*(skoMC1*skoMC1*skoMC1*(-1/12)+skoSC1*skoMC1*skoMC1*skoMC1*(-1/12)))))<=skoMC1*skoMC1*skoMC1*(2+skoMC1*6)]], Reals]]

% In QepcadB format:
(E skoSC1) (E skoMC1) [[(skoMC1 skoMC1 skoMC1 (-2))<=0]/\[[0<(skoMC1 skoMC1 skoMC1 (2))]/\[[(skoMC1 (-2+(skoMC1 (-5))))<(skoSC1 ((skoMC1 (-1+(skoMC1 (3))))+(skoSC1 ((skoMC1 (-2+(skoMC1 (-3))))+(skoSC1 ((skoMC1 (1/6+(skoMC1 (-1))))+(skoSC1 skoMC1 (1/4))))))))]/\[[(skoMC1 (-2+(skoMC1 (-5))))<(skoSC1 ((skoMC1 (-1+(skoMC1 (3))))+(skoSC1 ((skoMC1 (-2+(skoMC1 (-3))))+(skoSC1 ((skoMC1 skoMC1 (-1))+(skoSC1 skoMC1 (1/12))))))))]/\[[(skoSC1 ((skoMC1 (1+(skoMC1 (-3))))+(skoSC1 ((skoMC1 (2+(skoMC1 (3))))+(skoSC1 ((skoMC1 (-1/6+skoMC1))+(skoSC1 skoMC1 (-1/4))))))))<=(skoMC1 (2+(skoMC1 (5))))]/\[[(skoSC1 ((skoMC1 (1+(skoMC1 (-3))))+(skoSC1 ((skoMC1 (2+(skoMC1 (3))))+(skoSC1 ((skoMC1 skoMC1)+(skoSC1 skoMC1 (-1/12))))))))<=(skoMC1 (2+(skoMC1 (5))))]/\[[(skoSC1 skoMC1 (-1))<=skoMC1]/\[[(skoMC1 (-1))<(skoSC1 skoMC1)]/\[[0<=skoMC1]/\[[0<skoMC1]/\[[0<=skoSC1]/\[[2<=skoMC1]/\[[skoSC1<=5/4]/\[[(skoMC1 skoMC1 skoMC1 (-2))<(skoSC1 skoMC1 skoMC1 skoMC1 (2))]/\[[(skoSC1 skoMC1 skoMC1 skoMC1 (-2))<=(skoMC1 skoMC1 skoMC1 (2))]/\[(skoSC1 ((skoMC1 skoMC1 skoMC1 (-2+(skoMC1 (-12))))+(skoSC1 ((skoMC1 skoMC1 skoMC1 (1+(skoMC1 (-6))))+(skoSC1 ((skoMC1 skoMC1 skoMC1)+(skoSC1 ((skoMC1 skoMC1 skoMC1 (-1/12))+(skoSC1 skoMC1 skoMC1 skoMC1 (-1/12))))))))))<=(skoMC1 skoMC1 skoMC1 (2+(skoMC1 (6))))]]]]]]]]]]]]]]]].

% In SMTLib2 format:
(declare-fun skoSC1 () Real) (declare-fun skoMC1 () Real) (assert (and (<= (* skoMC1 (* skoMC1 (* skoMC1 (- 2.)))) 0.) (and (> (* skoMC1 (* skoMC1 (* skoMC1 2.))) 0.) (and (> (* skoSC1 (+ (* skoMC1 (+ (- 1.) (* skoMC1 3.))) (* skoSC1 (+ (* skoMC1 (+ (- 2.) (* skoMC1 (- 3.)))) (* skoSC1 (+ (* skoMC1 (+ (/ 1. 6.) (* skoMC1 (- 1.)))) (* skoSC1 (* skoMC1 (/ 1. 4.))))))))) (* skoMC1 (+ (- 2.) (* skoMC1 (- 5.))))) (and (> (* skoSC1 (+ (* skoMC1 (+ (- 1.) (* skoMC1 3.))) (* skoSC1 (+ (* skoMC1 (+ (- 2.) (* skoMC1 (- 3.)))) (* skoSC1 (+ (* skoMC1 (* skoMC1 (- 1.))) (* skoSC1 (* skoMC1 (/ 1. 12.))))))))) (* skoMC1 (+ (- 2.) (* skoMC1 (- 5.))))) (and (<= (* skoSC1 (+ (* skoMC1 (+ 1. (* skoMC1 (- 3.)))) (* skoSC1 (+ (* skoMC1 (+ 2. (* skoMC1 3.))) (* skoSC1 (+ (* skoMC1 (+ (/ (- 1.) 6.) skoMC1)) (* skoSC1 (* skoMC1 (/ (- 1.) 4.))))))))) (* skoMC1 (+ 2. (* skoMC1 5.)))) (and (<= (* skoSC1 (+ (* skoMC1 (+ 1. (* skoMC1 (- 3.)))) (* skoSC1 (+ (* skoMC1 (+ 2. (* skoMC1 3.))) (* skoSC1 (+ (* skoMC1 skoMC1) (* skoSC1 (* skoMC1 (/ (- 1.) 12.))))))))) (* skoMC1 (+ 2. (* skoMC1 5.)))) (and (<= (* skoSC1 (* skoMC1 (- 1.))) skoMC1) (and (> (* skoSC1 skoMC1) (* skoMC1 (- 1.))) (and (<= 0. skoMC1) (and (> skoMC1 0.) (and (<= 0. skoSC1) (and (<= 2. skoMC1) (and (<= skoSC1 (/ 5. 4.)) (and (> (* skoSC1 (* skoMC1 (* skoMC1 (* skoMC1 2.)))) (* skoMC1 (* skoMC1 (* skoMC1 (- 2.))))) (and (<= (* skoSC1 (* skoMC1 (* skoMC1 (* skoMC1 (- 2.))))) (* skoMC1 (* skoMC1 (* skoMC1 2.)))) (<= (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (+ (- 2.) (* skoMC1 (- 12.)))))) (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (+ 1. (* skoMC1 (- 6.)))))) (* skoSC1 (+ (* skoMC1 (* skoMC1 skoMC1)) (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (/ (- 1.) 12.)))) (* skoSC1 (* skoMC1 (* skoMC1 (* skoMC1 (/ (- 1.) 12.))))))))))))) (* skoMC1 (* skoMC1 (* skoMC1 (+ 2. (* skoMC1 6.))))))))))))))))))))))

% In GRF format:
(sequent " MetiTarski formula " (antecedent (<= (* skoMC1 (* skoMC1 (* skoMC1 (- 2.)))) 0.) (> (* skoMC1 (* skoMC1 (* skoMC1 2.))) 0.) (> (* skoSC1 (+ (* skoMC1 (+ (- 1.) (* skoMC1 3.))) (* skoSC1 (+ (* skoMC1 (+ (- 2.) (* skoMC1 (- 3.)))) (* skoSC1 (+ (* skoMC1 (+ (/ 1. 6.) (* skoMC1 (- 1.)))) (* skoSC1 (* skoMC1 (/ 1. 4.))))))))) (* skoMC1 (+ (- 2.) (* skoMC1 (- 5.))))) (> (* skoSC1 (+ (* skoMC1 (+ (- 1.) (* skoMC1 3.))) (* skoSC1 (+ (* skoMC1 (+ (- 2.) (* skoMC1 (- 3.)))) (* skoSC1 (+ (* skoMC1 (* skoMC1 (- 1.))) (* skoSC1 (* skoMC1 (/ 1. 12.))))))))) (* skoMC1 (+ (- 2.) (* skoMC1 (- 5.))))) (<= (* skoSC1 (+ (* skoMC1 (+ 1. (* skoMC1 (- 3.)))) (* skoSC1 (+ (* skoMC1 (+ 2. (* skoMC1 3.))) (* skoSC1 (+ (* skoMC1 (+ (/ (- 1.) 6.) skoMC1)) (* skoSC1 (* skoMC1 (/ (- 1.) 4.))))))))) (* skoMC1 (+ 2. (* skoMC1 5.)))) (<= (* skoSC1 (+ (* skoMC1 (+ 1. (* skoMC1 (- 3.)))) (* skoSC1 (+ (* skoMC1 (+ 2. (* skoMC1 3.))) (* skoSC1 (+ (* skoMC1 skoMC1) (* skoSC1 (* skoMC1 (/ (- 1.) 12.))))))))) (* skoMC1 (+ 2. (* skoMC1 5.)))) (<= (* skoSC1 (* skoMC1 (- 1.))) skoMC1) (> (* skoSC1 skoMC1) (* skoMC1 (- 1.))) (<= 0. skoMC1) (> skoMC1 0.) (<= 0. skoSC1) (<= 2. skoMC1) (<= skoSC1 (/ 5. 4.)) (> (* skoSC1 (* skoMC1 (* skoMC1 (* skoMC1 2.)))) (* skoMC1 (* skoMC1 (* skoMC1 (- 2.))))) (<= (* skoSC1 (* skoMC1 (* skoMC1 (* skoMC1 (- 2.))))) (* skoMC1 (* skoMC1 (* skoMC1 2.))))) (succedent (> (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (+ (- 2.) (* skoMC1 (- 12.)))))) (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (+ 1. (* skoMC1 (- 6.)))))) (* skoSC1 (+ (* skoMC1 (* skoMC1 skoMC1)) (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (/ (- 1.) 12.)))) (* skoSC1 (* skoMC1 (* skoMC1 (* skoMC1 (/ (- 1.) 12.))))))))))))) (* skoMC1 (* skoMC1 (* skoMC1 (+ 2. (* skoMC1 6.))))))))
-----[end problem]-----

-----[begin problem]-----
% In Mathematica format:
Timing[Resolve[Exists[{skoSC1,skoMC1}, And[skoMC1*skoMC1*skoMC1*-2<=0,skoMC1*skoMC1*skoMC1*-2<=0,skoMC1*skoMC1*skoMC1*2>0,skoSC1*(skoMC1*(-1+skoMC1*3)+skoSC1*(skoMC1*(-2+skoMC1*-3)+skoSC1*(skoMC1*((1/6)+skoMC1*-1)+skoSC1*skoMC1*(1/4))))>skoMC1*(-2+skoMC1*-5),skoSC1*(skoMC1*(-1+skoMC1*3)+skoSC1*(skoMC1*(-2+skoMC1*-3)+skoSC1*(skoMC1*skoMC1*-1+skoSC1*skoMC1*(1/12))))>skoMC1*(-2+skoMC1*-5),skoSC1*(skoMC1*(1+skoMC1*-3)+skoSC1*(skoMC1*(2+skoMC1*3)+skoSC1*(skoMC1*((-1/6)+skoMC1)+skoSC1*skoMC1*(-1/4))))<=skoMC1*(2+skoMC1*5),skoSC1*(skoMC1*(1+skoMC1*-3)+skoSC1*(skoMC1*(2+skoMC1*3)+skoSC1*(skoMC1*skoMC1+skoSC1*skoMC1*(-1/12))))<=skoMC1*(2+skoMC1*5),skoSC1*skoMC1*-1<=skoMC1,skoSC1*skoMC1>skoMC1*-1,0<=skoMC1,skoMC1>0,0<=skoSC1,2<=skoMC1,skoSC1<=(5/4),skoSC1*skoMC1*skoMC1*skoMC1*2>skoMC1*skoMC1*skoMC1*-2,skoSC1*skoMC1*skoMC1*skoMC1*-2<=skoMC1*skoMC1*skoMC1*2,skoSC1*(skoMC1*skoMC1*skoMC1*(-2+skoMC1*-12)+skoSC1*(skoMC1*skoMC1*skoMC1*(1+skoMC1*-6)+skoSC1*(skoMC1*skoMC1*skoMC1+skoSC1*(skoMC1*skoMC1*skoMC1*(-1/12)+skoSC1*skoMC1*skoMC1*skoMC1*(-1/12)))))<=skoMC1*skoMC1*skoMC1*(2+skoMC1*6)]], Reals]]

% In QepcadB format:
(E skoSC1) (E skoMC1) [[(skoMC1 skoMC1 skoMC1 (-2))<=0]/\[[(skoMC1 skoMC1 skoMC1 (-2))<=0]/\[[0<(skoMC1 skoMC1 skoMC1 (2))]/\[[(skoMC1 (-2+(skoMC1 (-5))))<(skoSC1 ((skoMC1 (-1+(skoMC1 (3))))+(skoSC1 ((skoMC1 (-2+(skoMC1 (-3))))+(skoSC1 ((skoMC1 (1/6+(skoMC1 (-1))))+(skoSC1 skoMC1 (1/4))))))))]/\[[(skoMC1 (-2+(skoMC1 (-5))))<(skoSC1 ((skoMC1 (-1+(skoMC1 (3))))+(skoSC1 ((skoMC1 (-2+(skoMC1 (-3))))+(skoSC1 ((skoMC1 skoMC1 (-1))+(skoSC1 skoMC1 (1/12))))))))]/\[[(skoSC1 ((skoMC1 (1+(skoMC1 (-3))))+(skoSC1 ((skoMC1 (2+(skoMC1 (3))))+(skoSC1 ((skoMC1 (-1/6+skoMC1))+(skoSC1 skoMC1 (-1/4))))))))<=(skoMC1 (2+(skoMC1 (5))))]/\[[(skoSC1 ((skoMC1 (1+(skoMC1 (-3))))+(skoSC1 ((skoMC1 (2+(skoMC1 (3))))+(skoSC1 ((skoMC1 skoMC1)+(skoSC1 skoMC1 (-1/12))))))))<=(skoMC1 (2+(skoMC1 (5))))]/\[[(skoSC1 skoMC1 (-1))<=skoMC1]/\[[(skoMC1 (-1))<(skoSC1 skoMC1)]/\[[0<=skoMC1]/\[[0<skoMC1]/\[[0<=skoSC1]/\[[2<=skoMC1]/\[[skoSC1<=5/4]/\[[(skoMC1 skoMC1 skoMC1 (-2))<(skoSC1 skoMC1 skoMC1 skoMC1 (2))]/\[[(skoSC1 skoMC1 skoMC1 skoMC1 (-2))<=(skoMC1 skoMC1 skoMC1 (2))]/\[(skoSC1 ((skoMC1 skoMC1 skoMC1 (-2+(skoMC1 (-12))))+(skoSC1 ((skoMC1 skoMC1 skoMC1 (1+(skoMC1 (-6))))+(skoSC1 ((skoMC1 skoMC1 skoMC1)+(skoSC1 ((skoMC1 skoMC1 skoMC1 (-1/12))+(skoSC1 skoMC1 skoMC1 skoMC1 (-1/12))))))))))<=(skoMC1 skoMC1 skoMC1 (2+(skoMC1 (6))))]]]]]]]]]]]]]]]]].

% In SMTLib2 format:
(declare-fun skoSC1 () Real) (declare-fun skoMC1 () Real) (assert (and (<= (* skoMC1 (* skoMC1 (* skoMC1 (- 2.)))) 0.) (and (<= (* skoMC1 (* skoMC1 (* skoMC1 (- 2.)))) 0.) (and (> (* skoMC1 (* skoMC1 (* skoMC1 2.))) 0.) (and (> (* skoSC1 (+ (* skoMC1 (+ (- 1.) (* skoMC1 3.))) (* skoSC1 (+ (* skoMC1 (+ (- 2.) (* skoMC1 (- 3.)))) (* skoSC1 (+ (* skoMC1 (+ (/ 1. 6.) (* skoMC1 (- 1.)))) (* skoSC1 (* skoMC1 (/ 1. 4.))))))))) (* skoMC1 (+ (- 2.) (* skoMC1 (- 5.))))) (and (> (* skoSC1 (+ (* skoMC1 (+ (- 1.) (* skoMC1 3.))) (* skoSC1 (+ (* skoMC1 (+ (- 2.) (* skoMC1 (- 3.)))) (* skoSC1 (+ (* skoMC1 (* skoMC1 (- 1.))) (* skoSC1 (* skoMC1 (/ 1. 12.))))))))) (* skoMC1 (+ (- 2.) (* skoMC1 (- 5.))))) (and (<= (* skoSC1 (+ (* skoMC1 (+ 1. (* skoMC1 (- 3.)))) (* skoSC1 (+ (* skoMC1 (+ 2. (* skoMC1 3.))) (* skoSC1 (+ (* skoMC1 (+ (/ (- 1.) 6.) skoMC1)) (* skoSC1 (* skoMC1 (/ (- 1.) 4.))))))))) (* skoMC1 (+ 2. (* skoMC1 5.)))) (and (<= (* skoSC1 (+ (* skoMC1 (+ 1. (* skoMC1 (- 3.)))) (* skoSC1 (+ (* skoMC1 (+ 2. (* skoMC1 3.))) (* skoSC1 (+ (* skoMC1 skoMC1) (* skoSC1 (* skoMC1 (/ (- 1.) 12.))))))))) (* skoMC1 (+ 2. (* skoMC1 5.)))) (and (<= (* skoSC1 (* skoMC1 (- 1.))) skoMC1) (and (> (* skoSC1 skoMC1) (* skoMC1 (- 1.))) (and (<= 0. skoMC1) (and (> skoMC1 0.) (and (<= 0. skoSC1) (and (<= 2. skoMC1) (and (<= skoSC1 (/ 5. 4.)) (and (> (* skoSC1 (* skoMC1 (* skoMC1 (* skoMC1 2.)))) (* skoMC1 (* skoMC1 (* skoMC1 (- 2.))))) (and (<= (* skoSC1 (* skoMC1 (* skoMC1 (* skoMC1 (- 2.))))) (* skoMC1 (* skoMC1 (* skoMC1 2.)))) (<= (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (+ (- 2.) (* skoMC1 (- 12.)))))) (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (+ 1. (* skoMC1 (- 6.)))))) (* skoSC1 (+ (* skoMC1 (* skoMC1 skoMC1)) (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (/ (- 1.) 12.)))) (* skoSC1 (* skoMC1 (* skoMC1 (* skoMC1 (/ (- 1.) 12.))))))))))))) (* skoMC1 (* skoMC1 (* skoMC1 (+ 2. (* skoMC1 6.)))))))))))))))))))))))

% In GRF format:
(sequent " MetiTarski formula " (antecedent (<= (* skoMC1 (* skoMC1 (* skoMC1 (- 2.)))) 0.) (<= (* skoMC1 (* skoMC1 (* skoMC1 (- 2.)))) 0.) (> (* skoMC1 (* skoMC1 (* skoMC1 2.))) 0.) (> (* skoSC1 (+ (* skoMC1 (+ (- 1.) (* skoMC1 3.))) (* skoSC1 (+ (* skoMC1 (+ (- 2.) (* skoMC1 (- 3.)))) (* skoSC1 (+ (* skoMC1 (+ (/ 1. 6.) (* skoMC1 (- 1.)))) (* skoSC1 (* skoMC1 (/ 1. 4.))))))))) (* skoMC1 (+ (- 2.) (* skoMC1 (- 5.))))) (> (* skoSC1 (+ (* skoMC1 (+ (- 1.) (* skoMC1 3.))) (* skoSC1 (+ (* skoMC1 (+ (- 2.) (* skoMC1 (- 3.)))) (* skoSC1 (+ (* skoMC1 (* skoMC1 (- 1.))) (* skoSC1 (* skoMC1 (/ 1. 12.))))))))) (* skoMC1 (+ (- 2.) (* skoMC1 (- 5.))))) (<= (* skoSC1 (+ (* skoMC1 (+ 1. (* skoMC1 (- 3.)))) (* skoSC1 (+ (* skoMC1 (+ 2. (* skoMC1 3.))) (* skoSC1 (+ (* skoMC1 (+ (/ (- 1.) 6.) skoMC1)) (* skoSC1 (* skoMC1 (/ (- 1.) 4.))))))))) (* skoMC1 (+ 2. (* skoMC1 5.)))) (<= (* skoSC1 (+ (* skoMC1 (+ 1. (* skoMC1 (- 3.)))) (* skoSC1 (+ (* skoMC1 (+ 2. (* skoMC1 3.))) (* skoSC1 (+ (* skoMC1 skoMC1) (* skoSC1 (* skoMC1 (/ (- 1.) 12.))))))))) (* skoMC1 (+ 2. (* skoMC1 5.)))) (<= (* skoSC1 (* skoMC1 (- 1.))) skoMC1) (> (* skoSC1 skoMC1) (* skoMC1 (- 1.))) (<= 0. skoMC1) (> skoMC1 0.) (<= 0. skoSC1) (<= 2. skoMC1) (<= skoSC1 (/ 5. 4.)) (> (* skoSC1 (* skoMC1 (* skoMC1 (* skoMC1 2.)))) (* skoMC1 (* skoMC1 (* skoMC1 (- 2.))))) (<= (* skoSC1 (* skoMC1 (* skoMC1 (* skoMC1 (- 2.))))) (* skoMC1 (* skoMC1 (* skoMC1 2.))))) (succedent (> (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (+ (- 2.) (* skoMC1 (- 12.)))))) (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (+ 1. (* skoMC1 (- 6.)))))) (* skoSC1 (+ (* skoMC1 (* skoMC1 skoMC1)) (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (/ (- 1.) 12.)))) (* skoSC1 (* skoMC1 (* skoMC1 (* skoMC1 (/ (- 1.) 12.))))))))))))) (* skoMC1 (* skoMC1 (* skoMC1 (+ 2. (* skoMC1 6.))))))))
-----[end problem]-----

-----[begin problem]-----
% In Mathematica format:
Timing[Resolve[Exists[{skoSC1,skoMC1}, And[skoSC1*skoMC1*skoMC1*skoMC1>skoMC1*skoMC1*skoMC1*-1,skoMC1*skoMC1*skoMC1*-2<=0,skoMC1*skoMC1*skoMC1*2>0,skoSC1*(skoMC1*(-1+skoMC1*3)+skoSC1*(skoMC1*(-2+skoMC1*-3)+skoSC1*(skoMC1*((1/6)+skoMC1*-1)+skoSC1*skoMC1*(1/4))))>skoMC1*(-2+skoMC1*-5),skoSC1*(skoMC1*(-1+skoMC1*3)+skoSC1*(skoMC1*(-2+skoMC1*-3)+skoSC1*(skoMC1*skoMC1*-1+skoSC1*skoMC1*(1/12))))>skoMC1*(-2+skoMC1*-5),skoSC1*(skoMC1*(1+skoMC1*-3)+skoSC1*(skoMC1*(2+skoMC1*3)+skoSC1*(skoMC1*((-1/6)+skoMC1)+skoSC1*skoMC1*(-1/4))))<=skoMC1*(2+skoMC1*5),skoSC1*(skoMC1*(1+skoMC1*-3)+skoSC1*(skoMC1*(2+skoMC1*3)+skoSC1*(skoMC1*skoMC1+skoSC1*skoMC1*(-1/12))))<=skoMC1*(2+skoMC1*5),skoSC1*skoMC1*-1<=skoMC1,skoSC1*skoMC1>skoMC1*-1,0<=skoMC1,skoMC1>0,0<=skoSC1,2<=skoMC1,skoSC1<=(5/4),skoSC1*skoMC1*skoMC1*skoMC1*2>skoMC1*skoMC1*skoMC1*-2,skoSC1*skoMC1*skoMC1*skoMC1*-2<=skoMC1*skoMC1*skoMC1*2,skoSC1*(skoMC1*skoMC1*skoMC1*(-2+skoMC1*-12)+skoSC1*(skoMC1*skoMC1*skoMC1*(1+skoMC1*-6)+skoSC1*(skoMC1*skoMC1*skoMC1+skoSC1*(skoMC1*skoMC1*skoMC1*(-1/12)+skoSC1*skoMC1*skoMC1*skoMC1*(-1/12)))))<=skoMC1*skoMC1*skoMC1*(2+skoMC1*6)]], Reals]]

% In QepcadB format:
(E skoSC1) (E skoMC1) [[(skoMC1 skoMC1 skoMC1 (-1))<(skoSC1 skoMC1 skoMC1 skoMC1)]/\[[(skoMC1 skoMC1 skoMC1 (-2))<=0]/\[[0<(skoMC1 skoMC1 skoMC1 (2))]/\[[(skoMC1 (-2+(skoMC1 (-5))))<(skoSC1 ((skoMC1 (-1+(skoMC1 (3))))+(skoSC1 ((skoMC1 (-2+(skoMC1 (-3))))+(skoSC1 ((skoMC1 (1/6+(skoMC1 (-1))))+(skoSC1 skoMC1 (1/4))))))))]/\[[(skoMC1 (-2+(skoMC1 (-5))))<(skoSC1 ((skoMC1 (-1+(skoMC1 (3))))+(skoSC1 ((skoMC1 (-2+(skoMC1 (-3))))+(skoSC1 ((skoMC1 skoMC1 (-1))+(skoSC1 skoMC1 (1/12))))))))]/\[[(skoSC1 ((skoMC1 (1+(skoMC1 (-3))))+(skoSC1 ((skoMC1 (2+(skoMC1 (3))))+(skoSC1 ((skoMC1 (-1/6+skoMC1))+(skoSC1 skoMC1 (-1/4))))))))<=(skoMC1 (2+(skoMC1 (5))))]/\[[(skoSC1 ((skoMC1 (1+(skoMC1 (-3))))+(skoSC1 ((skoMC1 (2+(skoMC1 (3))))+(skoSC1 ((skoMC1 skoMC1)+(skoSC1 skoMC1 (-1/12))))))))<=(skoMC1 (2+(skoMC1 (5))))]/\[[(skoSC1 skoMC1 (-1))<=skoMC1]/\[[(skoMC1 (-1))<(skoSC1 skoMC1)]/\[[0<=skoMC1]/\[[0<skoMC1]/\[[0<=skoSC1]/\[[2<=skoMC1]/\[[skoSC1<=5/4]/\[[(skoMC1 skoMC1 skoMC1 (-2))<(skoSC1 skoMC1 skoMC1 skoMC1 (2))]/\[[(skoSC1 skoMC1 skoMC1 skoMC1 (-2))<=(skoMC1 skoMC1 skoMC1 (2))]/\[(skoSC1 ((skoMC1 skoMC1 skoMC1 (-2+(skoMC1 (-12))))+(skoSC1 ((skoMC1 skoMC1 skoMC1 (1+(skoMC1 (-6))))+(skoSC1 ((skoMC1 skoMC1 skoMC1)+(skoSC1 ((skoMC1 skoMC1 skoMC1 (-1/12))+(skoSC1 skoMC1 skoMC1 skoMC1 (-1/12))))))))))<=(skoMC1 skoMC1 skoMC1 (2+(skoMC1 (6))))]]]]]]]]]]]]]]]]].

% In SMTLib2 format:
(declare-fun skoSC1 () Real) (declare-fun skoMC1 () Real) (assert (and (> (* skoSC1 (* skoMC1 (* skoMC1 skoMC1))) (* skoMC1 (* skoMC1 (* skoMC1 (- 1.))))) (and (<= (* skoMC1 (* skoMC1 (* skoMC1 (- 2.)))) 0.) (and (> (* skoMC1 (* skoMC1 (* skoMC1 2.))) 0.) (and (> (* skoSC1 (+ (* skoMC1 (+ (- 1.) (* skoMC1 3.))) (* skoSC1 (+ (* skoMC1 (+ (- 2.) (* skoMC1 (- 3.)))) (* skoSC1 (+ (* skoMC1 (+ (/ 1. 6.) (* skoMC1 (- 1.)))) (* skoSC1 (* skoMC1 (/ 1. 4.))))))))) (* skoMC1 (+ (- 2.) (* skoMC1 (- 5.))))) (and (> (* skoSC1 (+ (* skoMC1 (+ (- 1.) (* skoMC1 3.))) (* skoSC1 (+ (* skoMC1 (+ (- 2.) (* skoMC1 (- 3.)))) (* skoSC1 (+ (* skoMC1 (* skoMC1 (- 1.))) (* skoSC1 (* skoMC1 (/ 1. 12.))))))))) (* skoMC1 (+ (- 2.) (* skoMC1 (- 5.))))) (and (<= (* skoSC1 (+ (* skoMC1 (+ 1. (* skoMC1 (- 3.)))) (* skoSC1 (+ (* skoMC1 (+ 2. (* skoMC1 3.))) (* skoSC1 (+ (* skoMC1 (+ (/ (- 1.) 6.) skoMC1)) (* skoSC1 (* skoMC1 (/ (- 1.) 4.))))))))) (* skoMC1 (+ 2. (* skoMC1 5.)))) (and (<= (* skoSC1 (+ (* skoMC1 (+ 1. (* skoMC1 (- 3.)))) (* skoSC1 (+ (* skoMC1 (+ 2. (* skoMC1 3.))) (* skoSC1 (+ (* skoMC1 skoMC1) (* skoSC1 (* skoMC1 (/ (- 1.) 12.))))))))) (* skoMC1 (+ 2. (* skoMC1 5.)))) (and (<= (* skoSC1 (* skoMC1 (- 1.))) skoMC1) (and (> (* skoSC1 skoMC1) (* skoMC1 (- 1.))) (and (<= 0. skoMC1) (and (> skoMC1 0.) (and (<= 0. skoSC1) (and (<= 2. skoMC1) (and (<= skoSC1 (/ 5. 4.)) (and (> (* skoSC1 (* skoMC1 (* skoMC1 (* skoMC1 2.)))) (* skoMC1 (* skoMC1 (* skoMC1 (- 2.))))) (and (<= (* skoSC1 (* skoMC1 (* skoMC1 (* skoMC1 (- 2.))))) (* skoMC1 (* skoMC1 (* skoMC1 2.)))) (<= (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (+ (- 2.) (* skoMC1 (- 12.)))))) (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (+ 1. (* skoMC1 (- 6.)))))) (* skoSC1 (+ (* skoMC1 (* skoMC1 skoMC1)) (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (/ (- 1.) 12.)))) (* skoSC1 (* skoMC1 (* skoMC1 (* skoMC1 (/ (- 1.) 12.))))))))))))) (* skoMC1 (* skoMC1 (* skoMC1 (+ 2. (* skoMC1 6.)))))))))))))))))))))))

% In GRF format:
(sequent " MetiTarski formula " (antecedent (> (* skoSC1 (* skoMC1 (* skoMC1 skoMC1))) (* skoMC1 (* skoMC1 (* skoMC1 (- 1.))))) (<= (* skoMC1 (* skoMC1 (* skoMC1 (- 2.)))) 0.) (> (* skoMC1 (* skoMC1 (* skoMC1 2.))) 0.) (> (* skoSC1 (+ (* skoMC1 (+ (- 1.) (* skoMC1 3.))) (* skoSC1 (+ (* skoMC1 (+ (- 2.) (* skoMC1 (- 3.)))) (* skoSC1 (+ (* skoMC1 (+ (/ 1. 6.) (* skoMC1 (- 1.)))) (* skoSC1 (* skoMC1 (/ 1. 4.))))))))) (* skoMC1 (+ (- 2.) (* skoMC1 (- 5.))))) (> (* skoSC1 (+ (* skoMC1 (+ (- 1.) (* skoMC1 3.))) (* skoSC1 (+ (* skoMC1 (+ (- 2.) (* skoMC1 (- 3.)))) (* skoSC1 (+ (* skoMC1 (* skoMC1 (- 1.))) (* skoSC1 (* skoMC1 (/ 1. 12.))))))))) (* skoMC1 (+ (- 2.) (* skoMC1 (- 5.))))) (<= (* skoSC1 (+ (* skoMC1 (+ 1. (* skoMC1 (- 3.)))) (* skoSC1 (+ (* skoMC1 (+ 2. (* skoMC1 3.))) (* skoSC1 (+ (* skoMC1 (+ (/ (- 1.) 6.) skoMC1)) (* skoSC1 (* skoMC1 (/ (- 1.) 4.))))))))) (* skoMC1 (+ 2. (* skoMC1 5.)))) (<= (* skoSC1 (+ (* skoMC1 (+ 1. (* skoMC1 (- 3.)))) (* skoSC1 (+ (* skoMC1 (+ 2. (* skoMC1 3.))) (* skoSC1 (+ (* skoMC1 skoMC1) (* skoSC1 (* skoMC1 (/ (- 1.) 12.))))))))) (* skoMC1 (+ 2. (* skoMC1 5.)))) (<= (* skoSC1 (* skoMC1 (- 1.))) skoMC1) (> (* skoSC1 skoMC1) (* skoMC1 (- 1.))) (<= 0. skoMC1) (> skoMC1 0.) (<= 0. skoSC1) (<= 2. skoMC1) (<= skoSC1 (/ 5. 4.)) (> (* skoSC1 (* skoMC1 (* skoMC1 (* skoMC1 2.)))) (* skoMC1 (* skoMC1 (* skoMC1 (- 2.))))) (<= (* skoSC1 (* skoMC1 (* skoMC1 (* skoMC1 (- 2.))))) (* skoMC1 (* skoMC1 (* skoMC1 2.))))) (succedent (> (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (+ (- 2.) (* skoMC1 (- 12.)))))) (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (+ 1. (* skoMC1 (- 6.)))))) (* skoSC1 (+ (* skoMC1 (* skoMC1 skoMC1)) (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (/ (- 1.) 12.)))) (* skoSC1 (* skoMC1 (* skoMC1 (* skoMC1 (/ (- 1.) 12.))))))))))))) (* skoMC1 (* skoMC1 (* skoMC1 (+ 2. (* skoMC1 6.))))))))
-----[end problem]-----

-----[begin problem]-----
% In Mathematica format:
Timing[Resolve[Exists[{skoSC1,skoMC1}, And[skoMC1*skoMC1*skoMC1*-2<=0,skoMC1*skoMC1*skoMC1*-2<=0,skoMC1*skoMC1*skoMC1*2>0,skoSC1*(skoMC1*(-1+skoMC1*3)+skoSC1*(skoMC1*(-2+skoMC1*-3)+skoSC1*(skoMC1*((1/6)+skoMC1*-1)+skoSC1*skoMC1*(1/4))))>skoMC1*(-2+skoMC1*-5),skoSC1*(skoMC1*(-1+skoMC1*3)+skoSC1*(skoMC1*(-2+skoMC1*-3)+skoSC1*(skoMC1*skoMC1*-1+skoSC1*skoMC1*(1/12))))>skoMC1*(-2+skoMC1*-5),skoSC1*(skoMC1*(1+skoMC1*-3)+skoSC1*(skoMC1*(2+skoMC1*3)+skoSC1*(skoMC1*((-1/6)+skoMC1)+skoSC1*skoMC1*(-1/4))))<=skoMC1*(2+skoMC1*5),skoSC1*(skoMC1*(1+skoMC1*-3)+skoSC1*(skoMC1*(2+skoMC1*3)+skoSC1*(skoMC1*skoMC1+skoSC1*skoMC1*(-1/12))))<=skoMC1*(2+skoMC1*5),skoSC1*skoMC1*-1<=skoMC1,skoSC1*skoMC1>skoMC1*-1,0<=skoMC1,skoMC1>0,0<=skoSC1,2<=skoMC1,skoSC1<=(5/4),skoSC1*skoMC1*skoMC1*skoMC1*2>skoMC1*skoMC1*skoMC1*-2,skoSC1*skoMC1*skoMC1*skoMC1*-2<=skoMC1*skoMC1*skoMC1*2,skoSC1*(skoMC1*skoMC1*skoMC1*(-2+skoMC1*-12)+skoSC1*(skoMC1*skoMC1*skoMC1*(1+skoMC1*-6)+skoSC1*(skoMC1*skoMC1*skoMC1+skoSC1*(skoMC1*skoMC1*skoMC1*(-1/12)+skoSC1*skoMC1*skoMC1*skoMC1*(-1/12)))))<=skoMC1*skoMC1*skoMC1*(2+skoMC1*6)]], Reals]]

% In QepcadB format:
(E skoSC1) (E skoMC1) [[(skoMC1 skoMC1 skoMC1 (-2))<=0]/\[[(skoMC1 skoMC1 skoMC1 (-2))<=0]/\[[0<(skoMC1 skoMC1 skoMC1 (2))]/\[[(skoMC1 (-2+(skoMC1 (-5))))<(skoSC1 ((skoMC1 (-1+(skoMC1 (3))))+(skoSC1 ((skoMC1 (-2+(skoMC1 (-3))))+(skoSC1 ((skoMC1 (1/6+(skoMC1 (-1))))+(skoSC1 skoMC1 (1/4))))))))]/\[[(skoMC1 (-2+(skoMC1 (-5))))<(skoSC1 ((skoMC1 (-1+(skoMC1 (3))))+(skoSC1 ((skoMC1 (-2+(skoMC1 (-3))))+(skoSC1 ((skoMC1 skoMC1 (-1))+(skoSC1 skoMC1 (1/12))))))))]/\[[(skoSC1 ((skoMC1 (1+(skoMC1 (-3))))+(skoSC1 ((skoMC1 (2+(skoMC1 (3))))+(skoSC1 ((skoMC1 (-1/6+skoMC1))+(skoSC1 skoMC1 (-1/4))))))))<=(skoMC1 (2+(skoMC1 (5))))]/\[[(skoSC1 ((skoMC1 (1+(skoMC1 (-3))))+(skoSC1 ((skoMC1 (2+(skoMC1 (3))))+(skoSC1 ((skoMC1 skoMC1)+(skoSC1 skoMC1 (-1/12))))))))<=(skoMC1 (2+(skoMC1 (5))))]/\[[(skoSC1 skoMC1 (-1))<=skoMC1]/\[[(skoMC1 (-1))<(skoSC1 skoMC1)]/\[[0<=skoMC1]/\[[0<skoMC1]/\[[0<=skoSC1]/\[[2<=skoMC1]/\[[skoSC1<=5/4]/\[[(skoMC1 skoMC1 skoMC1 (-2))<(skoSC1 skoMC1 skoMC1 skoMC1 (2))]/\[[(skoSC1 skoMC1 skoMC1 skoMC1 (-2))<=(skoMC1 skoMC1 skoMC1 (2))]/\[(skoSC1 ((skoMC1 skoMC1 skoMC1 (-2+(skoMC1 (-12))))+(skoSC1 ((skoMC1 skoMC1 skoMC1 (1+(skoMC1 (-6))))+(skoSC1 ((skoMC1 skoMC1 skoMC1)+(skoSC1 ((skoMC1 skoMC1 skoMC1 (-1/12))+(skoSC1 skoMC1 skoMC1 skoMC1 (-1/12))))))))))<=(skoMC1 skoMC1 skoMC1 (2+(skoMC1 (6))))]]]]]]]]]]]]]]]]].

% In SMTLib2 format:
(declare-fun skoSC1 () Real) (declare-fun skoMC1 () Real) (assert (and (<= (* skoMC1 (* skoMC1 (* skoMC1 (- 2.)))) 0.) (and (<= (* skoMC1 (* skoMC1 (* skoMC1 (- 2.)))) 0.) (and (> (* skoMC1 (* skoMC1 (* skoMC1 2.))) 0.) (and (> (* skoSC1 (+ (* skoMC1 (+ (- 1.) (* skoMC1 3.))) (* skoSC1 (+ (* skoMC1 (+ (- 2.) (* skoMC1 (- 3.)))) (* skoSC1 (+ (* skoMC1 (+ (/ 1. 6.) (* skoMC1 (- 1.)))) (* skoSC1 (* skoMC1 (/ 1. 4.))))))))) (* skoMC1 (+ (- 2.) (* skoMC1 (- 5.))))) (and (> (* skoSC1 (+ (* skoMC1 (+ (- 1.) (* skoMC1 3.))) (* skoSC1 (+ (* skoMC1 (+ (- 2.) (* skoMC1 (- 3.)))) (* skoSC1 (+ (* skoMC1 (* skoMC1 (- 1.))) (* skoSC1 (* skoMC1 (/ 1. 12.))))))))) (* skoMC1 (+ (- 2.) (* skoMC1 (- 5.))))) (and (<= (* skoSC1 (+ (* skoMC1 (+ 1. (* skoMC1 (- 3.)))) (* skoSC1 (+ (* skoMC1 (+ 2. (* skoMC1 3.))) (* skoSC1 (+ (* skoMC1 (+ (/ (- 1.) 6.) skoMC1)) (* skoSC1 (* skoMC1 (/ (- 1.) 4.))))))))) (* skoMC1 (+ 2. (* skoMC1 5.)))) (and (<= (* skoSC1 (+ (* skoMC1 (+ 1. (* skoMC1 (- 3.)))) (* skoSC1 (+ (* skoMC1 (+ 2. (* skoMC1 3.))) (* skoSC1 (+ (* skoMC1 skoMC1) (* skoSC1 (* skoMC1 (/ (- 1.) 12.))))))))) (* skoMC1 (+ 2. (* skoMC1 5.)))) (and (<= (* skoSC1 (* skoMC1 (- 1.))) skoMC1) (and (> (* skoSC1 skoMC1) (* skoMC1 (- 1.))) (and (<= 0. skoMC1) (and (> skoMC1 0.) (and (<= 0. skoSC1) (and (<= 2. skoMC1) (and (<= skoSC1 (/ 5. 4.)) (and (> (* skoSC1 (* skoMC1 (* skoMC1 (* skoMC1 2.)))) (* skoMC1 (* skoMC1 (* skoMC1 (- 2.))))) (and (<= (* skoSC1 (* skoMC1 (* skoMC1 (* skoMC1 (- 2.))))) (* skoMC1 (* skoMC1 (* skoMC1 2.)))) (<= (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (+ (- 2.) (* skoMC1 (- 12.)))))) (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (+ 1. (* skoMC1 (- 6.)))))) (* skoSC1 (+ (* skoMC1 (* skoMC1 skoMC1)) (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (/ (- 1.) 12.)))) (* skoSC1 (* skoMC1 (* skoMC1 (* skoMC1 (/ (- 1.) 12.))))))))))))) (* skoMC1 (* skoMC1 (* skoMC1 (+ 2. (* skoMC1 6.)))))))))))))))))))))))

% In GRF format:
(sequent " MetiTarski formula " (antecedent (<= (* skoMC1 (* skoMC1 (* skoMC1 (- 2.)))) 0.) (<= (* skoMC1 (* skoMC1 (* skoMC1 (- 2.)))) 0.) (> (* skoMC1 (* skoMC1 (* skoMC1 2.))) 0.) (> (* skoSC1 (+ (* skoMC1 (+ (- 1.) (* skoMC1 3.))) (* skoSC1 (+ (* skoMC1 (+ (- 2.) (* skoMC1 (- 3.)))) (* skoSC1 (+ (* skoMC1 (+ (/ 1. 6.) (* skoMC1 (- 1.)))) (* skoSC1 (* skoMC1 (/ 1. 4.))))))))) (* skoMC1 (+ (- 2.) (* skoMC1 (- 5.))))) (> (* skoSC1 (+ (* skoMC1 (+ (- 1.) (* skoMC1 3.))) (* skoSC1 (+ (* skoMC1 (+ (- 2.) (* skoMC1 (- 3.)))) (* skoSC1 (+ (* skoMC1 (* skoMC1 (- 1.))) (* skoSC1 (* skoMC1 (/ 1. 12.))))))))) (* skoMC1 (+ (- 2.) (* skoMC1 (- 5.))))) (<= (* skoSC1 (+ (* skoMC1 (+ 1. (* skoMC1 (- 3.)))) (* skoSC1 (+ (* skoMC1 (+ 2. (* skoMC1 3.))) (* skoSC1 (+ (* skoMC1 (+ (/ (- 1.) 6.) skoMC1)) (* skoSC1 (* skoMC1 (/ (- 1.) 4.))))))))) (* skoMC1 (+ 2. (* skoMC1 5.)))) (<= (* skoSC1 (+ (* skoMC1 (+ 1. (* skoMC1 (- 3.)))) (* skoSC1 (+ (* skoMC1 (+ 2. (* skoMC1 3.))) (* skoSC1 (+ (* skoMC1 skoMC1) (* skoSC1 (* skoMC1 (/ (- 1.) 12.))))))))) (* skoMC1 (+ 2. (* skoMC1 5.)))) (<= (* skoSC1 (* skoMC1 (- 1.))) skoMC1) (> (* skoSC1 skoMC1) (* skoMC1 (- 1.))) (<= 0. skoMC1) (> skoMC1 0.) (<= 0. skoSC1) (<= 2. skoMC1) (<= skoSC1 (/ 5. 4.)) (> (* skoSC1 (* skoMC1 (* skoMC1 (* skoMC1 2.)))) (* skoMC1 (* skoMC1 (* skoMC1 (- 2.))))) (<= (* skoSC1 (* skoMC1 (* skoMC1 (* skoMC1 (- 2.))))) (* skoMC1 (* skoMC1 (* skoMC1 2.))))) (succedent (> (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (+ (- 2.) (* skoMC1 (- 12.)))))) (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (+ 1. (* skoMC1 (- 6.)))))) (* skoSC1 (+ (* skoMC1 (* skoMC1 skoMC1)) (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (/ (- 1.) 12.)))) (* skoSC1 (* skoMC1 (* skoMC1 (* skoMC1 (/ (- 1.) 12.))))))))))))) (* skoMC1 (* skoMC1 (* skoMC1 (+ 2. (* skoMC1 6.))))))))
-----[end problem]-----

-----[begin problem]-----
% In Mathematica format:
Timing[Resolve[Exists[{skoSC1,skoMC1}, And[skoSC1>0,skoMC1*skoMC1*skoMC1*-2<=0,skoMC1*skoMC1*skoMC1*2>0,skoSC1*(skoMC1*(-1+skoMC1*3)+skoSC1*(skoMC1*(-2+skoMC1*-3)+skoSC1*(skoMC1*((1/6)+skoMC1*-1)+skoSC1*skoMC1*(1/4))))>skoMC1*(-2+skoMC1*-5),skoSC1*(skoMC1*(-1+skoMC1*3)+skoSC1*(skoMC1*(-2+skoMC1*-3)+skoSC1*(skoMC1*skoMC1*-1+skoSC1*skoMC1*(1/12))))>skoMC1*(-2+skoMC1*-5),skoSC1*(skoMC1*(1+skoMC1*-3)+skoSC1*(skoMC1*(2+skoMC1*3)+skoSC1*(skoMC1*((-1/6)+skoMC1)+skoSC1*skoMC1*(-1/4))))<=skoMC1*(2+skoMC1*5),skoSC1*(skoMC1*(1+skoMC1*-3)+skoSC1*(skoMC1*(2+skoMC1*3)+skoSC1*(skoMC1*skoMC1+skoSC1*skoMC1*(-1/12))))<=skoMC1*(2+skoMC1*5),skoSC1*skoMC1*-1<=skoMC1,skoSC1*skoMC1>skoMC1*-1,0<=skoMC1,skoMC1>0,0<=skoSC1,2<=skoMC1,skoSC1<=(5/4),skoSC1*skoMC1*skoMC1*skoMC1*2>skoMC1*skoMC1*skoMC1*-2,skoSC1*skoMC1*skoMC1*skoMC1*-2<=skoMC1*skoMC1*skoMC1*2,skoSC1*(skoMC1*skoMC1*skoMC1*(-2+skoMC1*-12)+skoSC1*(skoMC1*skoMC1*skoMC1*(1+skoMC1*-6)+skoSC1*(skoMC1*skoMC1*skoMC1+skoSC1*(skoMC1*skoMC1*skoMC1*(-1/12)+skoSC1*skoMC1*skoMC1*skoMC1*(-1/12)))))<=skoMC1*skoMC1*skoMC1*(2+skoMC1*6)]], Reals]]

% In QepcadB format:
(E skoSC1) (E skoMC1) [[0<skoSC1]/\[[(skoMC1 skoMC1 skoMC1 (-2))<=0]/\[[0<(skoMC1 skoMC1 skoMC1 (2))]/\[[(skoMC1 (-2+(skoMC1 (-5))))<(skoSC1 ((skoMC1 (-1+(skoMC1 (3))))+(skoSC1 ((skoMC1 (-2+(skoMC1 (-3))))+(skoSC1 ((skoMC1 (1/6+(skoMC1 (-1))))+(skoSC1 skoMC1 (1/4))))))))]/\[[(skoMC1 (-2+(skoMC1 (-5))))<(skoSC1 ((skoMC1 (-1+(skoMC1 (3))))+(skoSC1 ((skoMC1 (-2+(skoMC1 (-3))))+(skoSC1 ((skoMC1 skoMC1 (-1))+(skoSC1 skoMC1 (1/12))))))))]/\[[(skoSC1 ((skoMC1 (1+(skoMC1 (-3))))+(skoSC1 ((skoMC1 (2+(skoMC1 (3))))+(skoSC1 ((skoMC1 (-1/6+skoMC1))+(skoSC1 skoMC1 (-1/4))))))))<=(skoMC1 (2+(skoMC1 (5))))]/\[[(skoSC1 ((skoMC1 (1+(skoMC1 (-3))))+(skoSC1 ((skoMC1 (2+(skoMC1 (3))))+(skoSC1 ((skoMC1 skoMC1)+(skoSC1 skoMC1 (-1/12))))))))<=(skoMC1 (2+(skoMC1 (5))))]/\[[(skoSC1 skoMC1 (-1))<=skoMC1]/\[[(skoMC1 (-1))<(skoSC1 skoMC1)]/\[[0<=skoMC1]/\[[0<skoMC1]/\[[0<=skoSC1]/\[[2<=skoMC1]/\[[skoSC1<=5/4]/\[[(skoMC1 skoMC1 skoMC1 (-2))<(skoSC1 skoMC1 skoMC1 skoMC1 (2))]/\[[(skoSC1 skoMC1 skoMC1 skoMC1 (-2))<=(skoMC1 skoMC1 skoMC1 (2))]/\[(skoSC1 ((skoMC1 skoMC1 skoMC1 (-2+(skoMC1 (-12))))+(skoSC1 ((skoMC1 skoMC1 skoMC1 (1+(skoMC1 (-6))))+(skoSC1 ((skoMC1 skoMC1 skoMC1)+(skoSC1 ((skoMC1 skoMC1 skoMC1 (-1/12))+(skoSC1 skoMC1 skoMC1 skoMC1 (-1/12))))))))))<=(skoMC1 skoMC1 skoMC1 (2+(skoMC1 (6))))]]]]]]]]]]]]]]]]].

% In SMTLib2 format:
(declare-fun skoSC1 () Real) (declare-fun skoMC1 () Real) (assert (and (> skoSC1 0.) (and (<= (* skoMC1 (* skoMC1 (* skoMC1 (- 2.)))) 0.) (and (> (* skoMC1 (* skoMC1 (* skoMC1 2.))) 0.) (and (> (* skoSC1 (+ (* skoMC1 (+ (- 1.) (* skoMC1 3.))) (* skoSC1 (+ (* skoMC1 (+ (- 2.) (* skoMC1 (- 3.)))) (* skoSC1 (+ (* skoMC1 (+ (/ 1. 6.) (* skoMC1 (- 1.)))) (* skoSC1 (* skoMC1 (/ 1. 4.))))))))) (* skoMC1 (+ (- 2.) (* skoMC1 (- 5.))))) (and (> (* skoSC1 (+ (* skoMC1 (+ (- 1.) (* skoMC1 3.))) (* skoSC1 (+ (* skoMC1 (+ (- 2.) (* skoMC1 (- 3.)))) (* skoSC1 (+ (* skoMC1 (* skoMC1 (- 1.))) (* skoSC1 (* skoMC1 (/ 1. 12.))))))))) (* skoMC1 (+ (- 2.) (* skoMC1 (- 5.))))) (and (<= (* skoSC1 (+ (* skoMC1 (+ 1. (* skoMC1 (- 3.)))) (* skoSC1 (+ (* skoMC1 (+ 2. (* skoMC1 3.))) (* skoSC1 (+ (* skoMC1 (+ (/ (- 1.) 6.) skoMC1)) (* skoSC1 (* skoMC1 (/ (- 1.) 4.))))))))) (* skoMC1 (+ 2. (* skoMC1 5.)))) (and (<= (* skoSC1 (+ (* skoMC1 (+ 1. (* skoMC1 (- 3.)))) (* skoSC1 (+ (* skoMC1 (+ 2. (* skoMC1 3.))) (* skoSC1 (+ (* skoMC1 skoMC1) (* skoSC1 (* skoMC1 (/ (- 1.) 12.))))))))) (* skoMC1 (+ 2. (* skoMC1 5.)))) (and (<= (* skoSC1 (* skoMC1 (- 1.))) skoMC1) (and (> (* skoSC1 skoMC1) (* skoMC1 (- 1.))) (and (<= 0. skoMC1) (and (> skoMC1 0.) (and (<= 0. skoSC1) (and (<= 2. skoMC1) (and (<= skoSC1 (/ 5. 4.)) (and (> (* skoSC1 (* skoMC1 (* skoMC1 (* skoMC1 2.)))) (* skoMC1 (* skoMC1 (* skoMC1 (- 2.))))) (and (<= (* skoSC1 (* skoMC1 (* skoMC1 (* skoMC1 (- 2.))))) (* skoMC1 (* skoMC1 (* skoMC1 2.)))) (<= (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (+ (- 2.) (* skoMC1 (- 12.)))))) (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (+ 1. (* skoMC1 (- 6.)))))) (* skoSC1 (+ (* skoMC1 (* skoMC1 skoMC1)) (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (/ (- 1.) 12.)))) (* skoSC1 (* skoMC1 (* skoMC1 (* skoMC1 (/ (- 1.) 12.))))))))))))) (* skoMC1 (* skoMC1 (* skoMC1 (+ 2. (* skoMC1 6.)))))))))))))))))))))))

% In GRF format:
(sequent " MetiTarski formula " (antecedent (> skoSC1 0.) (<= (* skoMC1 (* skoMC1 (* skoMC1 (- 2.)))) 0.) (> (* skoMC1 (* skoMC1 (* skoMC1 2.))) 0.) (> (* skoSC1 (+ (* skoMC1 (+ (- 1.) (* skoMC1 3.))) (* skoSC1 (+ (* skoMC1 (+ (- 2.) (* skoMC1 (- 3.)))) (* skoSC1 (+ (* skoMC1 (+ (/ 1. 6.) (* skoMC1 (- 1.)))) (* skoSC1 (* skoMC1 (/ 1. 4.))))))))) (* skoMC1 (+ (- 2.) (* skoMC1 (- 5.))))) (> (* skoSC1 (+ (* skoMC1 (+ (- 1.) (* skoMC1 3.))) (* skoSC1 (+ (* skoMC1 (+ (- 2.) (* skoMC1 (- 3.)))) (* skoSC1 (+ (* skoMC1 (* skoMC1 (- 1.))) (* skoSC1 (* skoMC1 (/ 1. 12.))))))))) (* skoMC1 (+ (- 2.) (* skoMC1 (- 5.))))) (<= (* skoSC1 (+ (* skoMC1 (+ 1. (* skoMC1 (- 3.)))) (* skoSC1 (+ (* skoMC1 (+ 2. (* skoMC1 3.))) (* skoSC1 (+ (* skoMC1 (+ (/ (- 1.) 6.) skoMC1)) (* skoSC1 (* skoMC1 (/ (- 1.) 4.))))))))) (* skoMC1 (+ 2. (* skoMC1 5.)))) (<= (* skoSC1 (+ (* skoMC1 (+ 1. (* skoMC1 (- 3.)))) (* skoSC1 (+ (* skoMC1 (+ 2. (* skoMC1 3.))) (* skoSC1 (+ (* skoMC1 skoMC1) (* skoSC1 (* skoMC1 (/ (- 1.) 12.))))))))) (* skoMC1 (+ 2. (* skoMC1 5.)))) (<= (* skoSC1 (* skoMC1 (- 1.))) skoMC1) (> (* skoSC1 skoMC1) (* skoMC1 (- 1.))) (<= 0. skoMC1) (> skoMC1 0.) (<= 0. skoSC1) (<= 2. skoMC1) (<= skoSC1 (/ 5. 4.)) (> (* skoSC1 (* skoMC1 (* skoMC1 (* skoMC1 2.)))) (* skoMC1 (* skoMC1 (* skoMC1 (- 2.))))) (<= (* skoSC1 (* skoMC1 (* skoMC1 (* skoMC1 (- 2.))))) (* skoMC1 (* skoMC1 (* skoMC1 2.))))) (succedent (> (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (+ (- 2.) (* skoMC1 (- 12.)))))) (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (+ 1. (* skoMC1 (- 6.)))))) (* skoSC1 (+ (* skoMC1 (* skoMC1 skoMC1)) (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (/ (- 1.) 12.)))) (* skoSC1 (* skoMC1 (* skoMC1 (* skoMC1 (/ (- 1.) 12.))))))))))))) (* skoMC1 (* skoMC1 (* skoMC1 (+ 2. (* skoMC1 6.))))))))
-----[end problem]-----

-----[begin problem]-----
% In Mathematica format:
Timing[Resolve[Exists[{skoSC1,skoMC1}, And[skoSC1*skoMC1*skoMC1*skoMC1*-1<=skoMC1*skoMC1*skoMC1,skoMC1*skoMC1*skoMC1*-2<=0,skoMC1*skoMC1*skoMC1*2>0,skoSC1*(skoMC1*(-1+skoMC1*3)+skoSC1*(skoMC1*(-2+skoMC1*-3)+skoSC1*(skoMC1*((1/6)+skoMC1*-1)+skoSC1*skoMC1*(1/4))))>skoMC1*(-2+skoMC1*-5),skoSC1*(skoMC1*(-1+skoMC1*3)+skoSC1*(skoMC1*(-2+skoMC1*-3)+skoSC1*(skoMC1*skoMC1*-1+skoSC1*skoMC1*(1/12))))>skoMC1*(-2+skoMC1*-5),skoSC1*(skoMC1*(1+skoMC1*-3)+skoSC1*(skoMC1*(2+skoMC1*3)+skoSC1*(skoMC1*((-1/6)+skoMC1)+skoSC1*skoMC1*(-1/4))))<=skoMC1*(2+skoMC1*5),skoSC1*(skoMC1*(1+skoMC1*-3)+skoSC1*(skoMC1*(2+skoMC1*3)+skoSC1*(skoMC1*skoMC1+skoSC1*skoMC1*(-1/12))))<=skoMC1*(2+skoMC1*5),skoSC1*skoMC1*-1<=skoMC1,skoSC1*skoMC1>skoMC1*-1,0<=skoMC1,skoMC1>0,0<=skoSC1,2<=skoMC1,skoSC1<=(5/4),skoSC1*skoMC1*skoMC1*skoMC1*2>skoMC1*skoMC1*skoMC1*-2,skoSC1*skoMC1*skoMC1*skoMC1*-2<=skoMC1*skoMC1*skoMC1*2,skoSC1*(skoMC1*skoMC1*skoMC1*(-2+skoMC1*-12)+skoSC1*(skoMC1*skoMC1*skoMC1*(1+skoMC1*-6)+skoSC1*(skoMC1*skoMC1*skoMC1+skoSC1*(skoMC1*skoMC1*skoMC1*(-1/12)+skoSC1*skoMC1*skoMC1*skoMC1*(-1/12)))))<=skoMC1*skoMC1*skoMC1*(2+skoMC1*6)]], Reals]]

% In QepcadB format:
(E skoSC1) (E skoMC1) [[(skoSC1 skoMC1 skoMC1 skoMC1 (-1))<=(skoMC1 skoMC1 skoMC1)]/\[[(skoMC1 skoMC1 skoMC1 (-2))<=0]/\[[0<(skoMC1 skoMC1 skoMC1 (2))]/\[[(skoMC1 (-2+(skoMC1 (-5))))<(skoSC1 ((skoMC1 (-1+(skoMC1 (3))))+(skoSC1 ((skoMC1 (-2+(skoMC1 (-3))))+(skoSC1 ((skoMC1 (1/6+(skoMC1 (-1))))+(skoSC1 skoMC1 (1/4))))))))]/\[[(skoMC1 (-2+(skoMC1 (-5))))<(skoSC1 ((skoMC1 (-1+(skoMC1 (3))))+(skoSC1 ((skoMC1 (-2+(skoMC1 (-3))))+(skoSC1 ((skoMC1 skoMC1 (-1))+(skoSC1 skoMC1 (1/12))))))))]/\[[(skoSC1 ((skoMC1 (1+(skoMC1 (-3))))+(skoSC1 ((skoMC1 (2+(skoMC1 (3))))+(skoSC1 ((skoMC1 (-1/6+skoMC1))+(skoSC1 skoMC1 (-1/4))))))))<=(skoMC1 (2+(skoMC1 (5))))]/\[[(skoSC1 ((skoMC1 (1+(skoMC1 (-3))))+(skoSC1 ((skoMC1 (2+(skoMC1 (3))))+(skoSC1 ((skoMC1 skoMC1)+(skoSC1 skoMC1 (-1/12))))))))<=(skoMC1 (2+(skoMC1 (5))))]/\[[(skoSC1 skoMC1 (-1))<=skoMC1]/\[[(skoMC1 (-1))<(skoSC1 skoMC1)]/\[[0<=skoMC1]/\[[0<skoMC1]/\[[0<=skoSC1]/\[[2<=skoMC1]/\[[skoSC1<=5/4]/\[[(skoMC1 skoMC1 skoMC1 (-2))<(skoSC1 skoMC1 skoMC1 skoMC1 (2))]/\[[(skoSC1 skoMC1 skoMC1 skoMC1 (-2))<=(skoMC1 skoMC1 skoMC1 (2))]/\[(skoSC1 ((skoMC1 skoMC1 skoMC1 (-2+(skoMC1 (-12))))+(skoSC1 ((skoMC1 skoMC1 skoMC1 (1+(skoMC1 (-6))))+(skoSC1 ((skoMC1 skoMC1 skoMC1)+(skoSC1 ((skoMC1 skoMC1 skoMC1 (-1/12))+(skoSC1 skoMC1 skoMC1 skoMC1 (-1/12))))))))))<=(skoMC1 skoMC1 skoMC1 (2+(skoMC1 (6))))]]]]]]]]]]]]]]]]].

% In SMTLib2 format:
(declare-fun skoSC1 () Real) (declare-fun skoMC1 () Real) (assert (and (<= (* skoSC1 (* skoMC1 (* skoMC1 (* skoMC1 (- 1.))))) (* skoMC1 (* skoMC1 skoMC1))) (and (<= (* skoMC1 (* skoMC1 (* skoMC1 (- 2.)))) 0.) (and (> (* skoMC1 (* skoMC1 (* skoMC1 2.))) 0.) (and (> (* skoSC1 (+ (* skoMC1 (+ (- 1.) (* skoMC1 3.))) (* skoSC1 (+ (* skoMC1 (+ (- 2.) (* skoMC1 (- 3.)))) (* skoSC1 (+ (* skoMC1 (+ (/ 1. 6.) (* skoMC1 (- 1.)))) (* skoSC1 (* skoMC1 (/ 1. 4.))))))))) (* skoMC1 (+ (- 2.) (* skoMC1 (- 5.))))) (and (> (* skoSC1 (+ (* skoMC1 (+ (- 1.) (* skoMC1 3.))) (* skoSC1 (+ (* skoMC1 (+ (- 2.) (* skoMC1 (- 3.)))) (* skoSC1 (+ (* skoMC1 (* skoMC1 (- 1.))) (* skoSC1 (* skoMC1 (/ 1. 12.))))))))) (* skoMC1 (+ (- 2.) (* skoMC1 (- 5.))))) (and (<= (* skoSC1 (+ (* skoMC1 (+ 1. (* skoMC1 (- 3.)))) (* skoSC1 (+ (* skoMC1 (+ 2. (* skoMC1 3.))) (* skoSC1 (+ (* skoMC1 (+ (/ (- 1.) 6.) skoMC1)) (* skoSC1 (* skoMC1 (/ (- 1.) 4.))))))))) (* skoMC1 (+ 2. (* skoMC1 5.)))) (and (<= (* skoSC1 (+ (* skoMC1 (+ 1. (* skoMC1 (- 3.)))) (* skoSC1 (+ (* skoMC1 (+ 2. (* skoMC1 3.))) (* skoSC1 (+ (* skoMC1 skoMC1) (* skoSC1 (* skoMC1 (/ (- 1.) 12.))))))))) (* skoMC1 (+ 2. (* skoMC1 5.)))) (and (<= (* skoSC1 (* skoMC1 (- 1.))) skoMC1) (and (> (* skoSC1 skoMC1) (* skoMC1 (- 1.))) (and (<= 0. skoMC1) (and (> skoMC1 0.) (and (<= 0. skoSC1) (and (<= 2. skoMC1) (and (<= skoSC1 (/ 5. 4.)) (and (> (* skoSC1 (* skoMC1 (* skoMC1 (* skoMC1 2.)))) (* skoMC1 (* skoMC1 (* skoMC1 (- 2.))))) (and (<= (* skoSC1 (* skoMC1 (* skoMC1 (* skoMC1 (- 2.))))) (* skoMC1 (* skoMC1 (* skoMC1 2.)))) (<= (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (+ (- 2.) (* skoMC1 (- 12.)))))) (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (+ 1. (* skoMC1 (- 6.)))))) (* skoSC1 (+ (* skoMC1 (* skoMC1 skoMC1)) (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (/ (- 1.) 12.)))) (* skoSC1 (* skoMC1 (* skoMC1 (* skoMC1 (/ (- 1.) 12.))))))))))))) (* skoMC1 (* skoMC1 (* skoMC1 (+ 2. (* skoMC1 6.)))))))))))))))))))))))

% In GRF format:
(sequent " MetiTarski formula " (antecedent (<= (* skoSC1 (* skoMC1 (* skoMC1 (* skoMC1 (- 1.))))) (* skoMC1 (* skoMC1 skoMC1))) (<= (* skoMC1 (* skoMC1 (* skoMC1 (- 2.)))) 0.) (> (* skoMC1 (* skoMC1 (* skoMC1 2.))) 0.) (> (* skoSC1 (+ (* skoMC1 (+ (- 1.) (* skoMC1 3.))) (* skoSC1 (+ (* skoMC1 (+ (- 2.) (* skoMC1 (- 3.)))) (* skoSC1 (+ (* skoMC1 (+ (/ 1. 6.) (* skoMC1 (- 1.)))) (* skoSC1 (* skoMC1 (/ 1. 4.))))))))) (* skoMC1 (+ (- 2.) (* skoMC1 (- 5.))))) (> (* skoSC1 (+ (* skoMC1 (+ (- 1.) (* skoMC1 3.))) (* skoSC1 (+ (* skoMC1 (+ (- 2.) (* skoMC1 (- 3.)))) (* skoSC1 (+ (* skoMC1 (* skoMC1 (- 1.))) (* skoSC1 (* skoMC1 (/ 1. 12.))))))))) (* skoMC1 (+ (- 2.) (* skoMC1 (- 5.))))) (<= (* skoSC1 (+ (* skoMC1 (+ 1. (* skoMC1 (- 3.)))) (* skoSC1 (+ (* skoMC1 (+ 2. (* skoMC1 3.))) (* skoSC1 (+ (* skoMC1 (+ (/ (- 1.) 6.) skoMC1)) (* skoSC1 (* skoMC1 (/ (- 1.) 4.))))))))) (* skoMC1 (+ 2. (* skoMC1 5.)))) (<= (* skoSC1 (+ (* skoMC1 (+ 1. (* skoMC1 (- 3.)))) (* skoSC1 (+ (* skoMC1 (+ 2. (* skoMC1 3.))) (* skoSC1 (+ (* skoMC1 skoMC1) (* skoSC1 (* skoMC1 (/ (- 1.) 12.))))))))) (* skoMC1 (+ 2. (* skoMC1 5.)))) (<= (* skoSC1 (* skoMC1 (- 1.))) skoMC1) (> (* skoSC1 skoMC1) (* skoMC1 (- 1.))) (<= 0. skoMC1) (> skoMC1 0.) (<= 0. skoSC1) (<= 2. skoMC1) (<= skoSC1 (/ 5. 4.)) (> (* skoSC1 (* skoMC1 (* skoMC1 (* skoMC1 2.)))) (* skoMC1 (* skoMC1 (* skoMC1 (- 2.))))) (<= (* skoSC1 (* skoMC1 (* skoMC1 (* skoMC1 (- 2.))))) (* skoMC1 (* skoMC1 (* skoMC1 2.))))) (succedent (> (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (+ (- 2.) (* skoMC1 (- 12.)))))) (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (+ 1. (* skoMC1 (- 6.)))))) (* skoSC1 (+ (* skoMC1 (* skoMC1 skoMC1)) (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (/ (- 1.) 12.)))) (* skoSC1 (* skoMC1 (* skoMC1 (* skoMC1 (/ (- 1.) 12.))))))))))))) (* skoMC1 (* skoMC1 (* skoMC1 (+ 2. (* skoMC1 6.))))))))
-----[end problem]-----

-----[begin problem]-----
% In Mathematica format:
Timing[Resolve[Exists[{skoSC1,skoMC1}, And[skoMC1*skoMC1*skoMC1*2>0,skoSC1*skoMC1*skoMC1*skoMC1>skoMC1*skoMC1*skoMC1*-1,skoMC1*skoMC1*skoMC1*-2<=0,skoMC1*skoMC1*skoMC1*2>0,skoSC1*(skoMC1*(-1+skoMC1*3)+skoSC1*(skoMC1*(-2+skoMC1*-3)+skoSC1*(skoMC1*((1/6)+skoMC1*-1)+skoSC1*skoMC1*(1/4))))>skoMC1*(-2+skoMC1*-5),skoSC1*(skoMC1*(-1+skoMC1*3)+skoSC1*(skoMC1*(-2+skoMC1*-3)+skoSC1*(skoMC1*skoMC1*-1+skoSC1*skoMC1*(1/12))))>skoMC1*(-2+skoMC1*-5),skoSC1*(skoMC1*(1+skoMC1*-3)+skoSC1*(skoMC1*(2+skoMC1*3)+skoSC1*(skoMC1*((-1/6)+skoMC1)+skoSC1*skoMC1*(-1/4))))<=skoMC1*(2+skoMC1*5),skoSC1*(skoMC1*(1+skoMC1*-3)+skoSC1*(skoMC1*(2+skoMC1*3)+skoSC1*(skoMC1*skoMC1+skoSC1*skoMC1*(-1/12))))<=skoMC1*(2+skoMC1*5),skoSC1*skoMC1*-1<=skoMC1,skoSC1*skoMC1>skoMC1*-1,0<=skoMC1,skoMC1>0,0<=skoSC1,2<=skoMC1,skoSC1<=(5/4),skoSC1*skoMC1*skoMC1*skoMC1*2>skoMC1*skoMC1*skoMC1*-2,skoSC1*skoMC1*skoMC1*skoMC1*-2<=skoMC1*skoMC1*skoMC1*2,skoSC1*(skoMC1*skoMC1*skoMC1*(-2+skoMC1*-12)+skoSC1*(skoMC1*skoMC1*skoMC1*(1+skoMC1*-6)+skoSC1*(skoMC1*skoMC1*skoMC1+skoSC1*(skoMC1*skoMC1*skoMC1*(-1/12)+skoSC1*skoMC1*skoMC1*skoMC1*(-1/12)))))<=skoMC1*skoMC1*skoMC1*(2+skoMC1*6)]], Reals]]

% In QepcadB format:
(E skoSC1) (E skoMC1) [[0<(skoMC1 skoMC1 skoMC1 (2))]/\[[(skoMC1 skoMC1 skoMC1 (-1))<(skoSC1 skoMC1 skoMC1 skoMC1)]/\[[(skoMC1 skoMC1 skoMC1 (-2))<=0]/\[[0<(skoMC1 skoMC1 skoMC1 (2))]/\[[(skoMC1 (-2+(skoMC1 (-5))))<(skoSC1 ((skoMC1 (-1+(skoMC1 (3))))+(skoSC1 ((skoMC1 (-2+(skoMC1 (-3))))+(skoSC1 ((skoMC1 (1/6+(skoMC1 (-1))))+(skoSC1 skoMC1 (1/4))))))))]/\[[(skoMC1 (-2+(skoMC1 (-5))))<(skoSC1 ((skoMC1 (-1+(skoMC1 (3))))+(skoSC1 ((skoMC1 (-2+(skoMC1 (-3))))+(skoSC1 ((skoMC1 skoMC1 (-1))+(skoSC1 skoMC1 (1/12))))))))]/\[[(skoSC1 ((skoMC1 (1+(skoMC1 (-3))))+(skoSC1 ((skoMC1 (2+(skoMC1 (3))))+(skoSC1 ((skoMC1 (-1/6+skoMC1))+(skoSC1 skoMC1 (-1/4))))))))<=(skoMC1 (2+(skoMC1 (5))))]/\[[(skoSC1 ((skoMC1 (1+(skoMC1 (-3))))+(skoSC1 ((skoMC1 (2+(skoMC1 (3))))+(skoSC1 ((skoMC1 skoMC1)+(skoSC1 skoMC1 (-1/12))))))))<=(skoMC1 (2+(skoMC1 (5))))]/\[[(skoSC1 skoMC1 (-1))<=skoMC1]/\[[(skoMC1 (-1))<(skoSC1 skoMC1)]/\[[0<=skoMC1]/\[[0<skoMC1]/\[[0<=skoSC1]/\[[2<=skoMC1]/\[[skoSC1<=5/4]/\[[(skoMC1 skoMC1 skoMC1 (-2))<(skoSC1 skoMC1 skoMC1 skoMC1 (2))]/\[[(skoSC1 skoMC1 skoMC1 skoMC1 (-2))<=(skoMC1 skoMC1 skoMC1 (2))]/\[(skoSC1 ((skoMC1 skoMC1 skoMC1 (-2+(skoMC1 (-12))))+(skoSC1 ((skoMC1 skoMC1 skoMC1 (1+(skoMC1 (-6))))+(skoSC1 ((skoMC1 skoMC1 skoMC1)+(skoSC1 ((skoMC1 skoMC1 skoMC1 (-1/12))+(skoSC1 skoMC1 skoMC1 skoMC1 (-1/12))))))))))<=(skoMC1 skoMC1 skoMC1 (2+(skoMC1 (6))))]]]]]]]]]]]]]]]]]].

% In SMTLib2 format:
(declare-fun skoSC1 () Real) (declare-fun skoMC1 () Real) (assert (and (> (* skoMC1 (* skoMC1 (* skoMC1 2.))) 0.) (and (> (* skoSC1 (* skoMC1 (* skoMC1 skoMC1))) (* skoMC1 (* skoMC1 (* skoMC1 (- 1.))))) (and (<= (* skoMC1 (* skoMC1 (* skoMC1 (- 2.)))) 0.) (and (> (* skoMC1 (* skoMC1 (* skoMC1 2.))) 0.) (and (> (* skoSC1 (+ (* skoMC1 (+ (- 1.) (* skoMC1 3.))) (* skoSC1 (+ (* skoMC1 (+ (- 2.) (* skoMC1 (- 3.)))) (* skoSC1 (+ (* skoMC1 (+ (/ 1. 6.) (* skoMC1 (- 1.)))) (* skoSC1 (* skoMC1 (/ 1. 4.))))))))) (* skoMC1 (+ (- 2.) (* skoMC1 (- 5.))))) (and (> (* skoSC1 (+ (* skoMC1 (+ (- 1.) (* skoMC1 3.))) (* skoSC1 (+ (* skoMC1 (+ (- 2.) (* skoMC1 (- 3.)))) (* skoSC1 (+ (* skoMC1 (* skoMC1 (- 1.))) (* skoSC1 (* skoMC1 (/ 1. 12.))))))))) (* skoMC1 (+ (- 2.) (* skoMC1 (- 5.))))) (and (<= (* skoSC1 (+ (* skoMC1 (+ 1. (* skoMC1 (- 3.)))) (* skoSC1 (+ (* skoMC1 (+ 2. (* skoMC1 3.))) (* skoSC1 (+ (* skoMC1 (+ (/ (- 1.) 6.) skoMC1)) (* skoSC1 (* skoMC1 (/ (- 1.) 4.))))))))) (* skoMC1 (+ 2. (* skoMC1 5.)))) (and (<= (* skoSC1 (+ (* skoMC1 (+ 1. (* skoMC1 (- 3.)))) (* skoSC1 (+ (* skoMC1 (+ 2. (* skoMC1 3.))) (* skoSC1 (+ (* skoMC1 skoMC1) (* skoSC1 (* skoMC1 (/ (- 1.) 12.))))))))) (* skoMC1 (+ 2. (* skoMC1 5.)))) (and (<= (* skoSC1 (* skoMC1 (- 1.))) skoMC1) (and (> (* skoSC1 skoMC1) (* skoMC1 (- 1.))) (and (<= 0. skoMC1) (and (> skoMC1 0.) (and (<= 0. skoSC1) (and (<= 2. skoMC1) (and (<= skoSC1 (/ 5. 4.)) (and (> (* skoSC1 (* skoMC1 (* skoMC1 (* skoMC1 2.)))) (* skoMC1 (* skoMC1 (* skoMC1 (- 2.))))) (and (<= (* skoSC1 (* skoMC1 (* skoMC1 (* skoMC1 (- 2.))))) (* skoMC1 (* skoMC1 (* skoMC1 2.)))) (<= (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (+ (- 2.) (* skoMC1 (- 12.)))))) (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (+ 1. (* skoMC1 (- 6.)))))) (* skoSC1 (+ (* skoMC1 (* skoMC1 skoMC1)) (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (/ (- 1.) 12.)))) (* skoSC1 (* skoMC1 (* skoMC1 (* skoMC1 (/ (- 1.) 12.))))))))))))) (* skoMC1 (* skoMC1 (* skoMC1 (+ 2. (* skoMC1 6.))))))))))))))))))))))))

% In GRF format:
(sequent " MetiTarski formula " (antecedent (> (* skoMC1 (* skoMC1 (* skoMC1 2.))) 0.) (> (* skoSC1 (* skoMC1 (* skoMC1 skoMC1))) (* skoMC1 (* skoMC1 (* skoMC1 (- 1.))))) (<= (* skoMC1 (* skoMC1 (* skoMC1 (- 2.)))) 0.) (> (* skoMC1 (* skoMC1 (* skoMC1 2.))) 0.) (> (* skoSC1 (+ (* skoMC1 (+ (- 1.) (* skoMC1 3.))) (* skoSC1 (+ (* skoMC1 (+ (- 2.) (* skoMC1 (- 3.)))) (* skoSC1 (+ (* skoMC1 (+ (/ 1. 6.) (* skoMC1 (- 1.)))) (* skoSC1 (* skoMC1 (/ 1. 4.))))))))) (* skoMC1 (+ (- 2.) (* skoMC1 (- 5.))))) (> (* skoSC1 (+ (* skoMC1 (+ (- 1.) (* skoMC1 3.))) (* skoSC1 (+ (* skoMC1 (+ (- 2.) (* skoMC1 (- 3.)))) (* skoSC1 (+ (* skoMC1 (* skoMC1 (- 1.))) (* skoSC1 (* skoMC1 (/ 1. 12.))))))))) (* skoMC1 (+ (- 2.) (* skoMC1 (- 5.))))) (<= (* skoSC1 (+ (* skoMC1 (+ 1. (* skoMC1 (- 3.)))) (* skoSC1 (+ (* skoMC1 (+ 2. (* skoMC1 3.))) (* skoSC1 (+ (* skoMC1 (+ (/ (- 1.) 6.) skoMC1)) (* skoSC1 (* skoMC1 (/ (- 1.) 4.))))))))) (* skoMC1 (+ 2. (* skoMC1 5.)))) (<= (* skoSC1 (+ (* skoMC1 (+ 1. (* skoMC1 (- 3.)))) (* skoSC1 (+ (* skoMC1 (+ 2. (* skoMC1 3.))) (* skoSC1 (+ (* skoMC1 skoMC1) (* skoSC1 (* skoMC1 (/ (- 1.) 12.))))))))) (* skoMC1 (+ 2. (* skoMC1 5.)))) (<= (* skoSC1 (* skoMC1 (- 1.))) skoMC1) (> (* skoSC1 skoMC1) (* skoMC1 (- 1.))) (<= 0. skoMC1) (> skoMC1 0.) (<= 0. skoSC1) (<= 2. skoMC1) (<= skoSC1 (/ 5. 4.)) (> (* skoSC1 (* skoMC1 (* skoMC1 (* skoMC1 2.)))) (* skoMC1 (* skoMC1 (* skoMC1 (- 2.))))) (<= (* skoSC1 (* skoMC1 (* skoMC1 (* skoMC1 (- 2.))))) (* skoMC1 (* skoMC1 (* skoMC1 2.))))) (succedent (> (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (+ (- 2.) (* skoMC1 (- 12.)))))) (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (+ 1. (* skoMC1 (- 6.)))))) (* skoSC1 (+ (* skoMC1 (* skoMC1 skoMC1)) (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (/ (- 1.) 12.)))) (* skoSC1 (* skoMC1 (* skoMC1 (* skoMC1 (/ (- 1.) 12.))))))))))))) (* skoMC1 (* skoMC1 (* skoMC1 (+ 2. (* skoMC1 6.))))))))
-----[end problem]-----

-----[begin problem]-----
% In Mathematica format:
Timing[Resolve[Exists[{skoSC1,skoMC1}, And[skoSC1*skoMC1*skoMC1*skoMC1>skoMC1*skoMC1*skoMC1*-1,skoMC1*skoMC1*skoMC1*-2<=0,skoMC1*skoMC1*skoMC1*2>0,skoSC1*(skoMC1*(-1+skoMC1*3)+skoSC1*(skoMC1*(-2+skoMC1*-3)+skoSC1*(skoMC1*((1/6)+skoMC1*-1)+skoSC1*skoMC1*(1/4))))>skoMC1*(-2+skoMC1*-5),skoSC1*(skoMC1*(-1+skoMC1*3)+skoSC1*(skoMC1*(-2+skoMC1*-3)+skoSC1*(skoMC1*skoMC1*-1+skoSC1*skoMC1*(1/12))))>skoMC1*(-2+skoMC1*-5),skoSC1*(skoMC1*(1+skoMC1*-3)+skoSC1*(skoMC1*(2+skoMC1*3)+skoSC1*(skoMC1*((-1/6)+skoMC1)+skoSC1*skoMC1*(-1/4))))<=skoMC1*(2+skoMC1*5),skoSC1*(skoMC1*(1+skoMC1*-3)+skoSC1*(skoMC1*(2+skoMC1*3)+skoSC1*(skoMC1*skoMC1+skoSC1*skoMC1*(-1/12))))<=skoMC1*(2+skoMC1*5),skoSC1*skoMC1*-1<=skoMC1,skoSC1*skoMC1>skoMC1*-1,0<=skoMC1,skoMC1>0,0<=skoSC1,2<=skoMC1,skoSC1<=(5/4),skoSC1*skoMC1*skoMC1*skoMC1*2>skoMC1*skoMC1*skoMC1*-2,skoSC1*skoMC1*skoMC1*skoMC1*-2<=skoMC1*skoMC1*skoMC1*2,skoSC1*(skoMC1*skoMC1*skoMC1*(-2+skoMC1*-12)+skoSC1*(skoMC1*skoMC1*skoMC1*(1+skoMC1*-6)+skoSC1*(skoMC1*skoMC1*skoMC1+skoSC1*(skoMC1*skoMC1*skoMC1*(-1/12)+skoSC1*skoMC1*skoMC1*skoMC1*(-1/12)))))<=skoMC1*skoMC1*skoMC1*(2+skoMC1*6)]], Reals]]

% In QepcadB format:
(E skoSC1) (E skoMC1) [[(skoMC1 skoMC1 skoMC1 (-1))<(skoSC1 skoMC1 skoMC1 skoMC1)]/\[[(skoMC1 skoMC1 skoMC1 (-2))<=0]/\[[0<(skoMC1 skoMC1 skoMC1 (2))]/\[[(skoMC1 (-2+(skoMC1 (-5))))<(skoSC1 ((skoMC1 (-1+(skoMC1 (3))))+(skoSC1 ((skoMC1 (-2+(skoMC1 (-3))))+(skoSC1 ((skoMC1 (1/6+(skoMC1 (-1))))+(skoSC1 skoMC1 (1/4))))))))]/\[[(skoMC1 (-2+(skoMC1 (-5))))<(skoSC1 ((skoMC1 (-1+(skoMC1 (3))))+(skoSC1 ((skoMC1 (-2+(skoMC1 (-3))))+(skoSC1 ((skoMC1 skoMC1 (-1))+(skoSC1 skoMC1 (1/12))))))))]/\[[(skoSC1 ((skoMC1 (1+(skoMC1 (-3))))+(skoSC1 ((skoMC1 (2+(skoMC1 (3))))+(skoSC1 ((skoMC1 (-1/6+skoMC1))+(skoSC1 skoMC1 (-1/4))))))))<=(skoMC1 (2+(skoMC1 (5))))]/\[[(skoSC1 ((skoMC1 (1+(skoMC1 (-3))))+(skoSC1 ((skoMC1 (2+(skoMC1 (3))))+(skoSC1 ((skoMC1 skoMC1)+(skoSC1 skoMC1 (-1/12))))))))<=(skoMC1 (2+(skoMC1 (5))))]/\[[(skoSC1 skoMC1 (-1))<=skoMC1]/\[[(skoMC1 (-1))<(skoSC1 skoMC1)]/\[[0<=skoMC1]/\[[0<skoMC1]/\[[0<=skoSC1]/\[[2<=skoMC1]/\[[skoSC1<=5/4]/\[[(skoMC1 skoMC1 skoMC1 (-2))<(skoSC1 skoMC1 skoMC1 skoMC1 (2))]/\[[(skoSC1 skoMC1 skoMC1 skoMC1 (-2))<=(skoMC1 skoMC1 skoMC1 (2))]/\[(skoSC1 ((skoMC1 skoMC1 skoMC1 (-2+(skoMC1 (-12))))+(skoSC1 ((skoMC1 skoMC1 skoMC1 (1+(skoMC1 (-6))))+(skoSC1 ((skoMC1 skoMC1 skoMC1)+(skoSC1 ((skoMC1 skoMC1 skoMC1 (-1/12))+(skoSC1 skoMC1 skoMC1 skoMC1 (-1/12))))))))))<=(skoMC1 skoMC1 skoMC1 (2+(skoMC1 (6))))]]]]]]]]]]]]]]]]].

% In SMTLib2 format:
(declare-fun skoSC1 () Real) (declare-fun skoMC1 () Real) (assert (and (> (* skoSC1 (* skoMC1 (* skoMC1 skoMC1))) (* skoMC1 (* skoMC1 (* skoMC1 (- 1.))))) (and (<= (* skoMC1 (* skoMC1 (* skoMC1 (- 2.)))) 0.) (and (> (* skoMC1 (* skoMC1 (* skoMC1 2.))) 0.) (and (> (* skoSC1 (+ (* skoMC1 (+ (- 1.) (* skoMC1 3.))) (* skoSC1 (+ (* skoMC1 (+ (- 2.) (* skoMC1 (- 3.)))) (* skoSC1 (+ (* skoMC1 (+ (/ 1. 6.) (* skoMC1 (- 1.)))) (* skoSC1 (* skoMC1 (/ 1. 4.))))))))) (* skoMC1 (+ (- 2.) (* skoMC1 (- 5.))))) (and (> (* skoSC1 (+ (* skoMC1 (+ (- 1.) (* skoMC1 3.))) (* skoSC1 (+ (* skoMC1 (+ (- 2.) (* skoMC1 (- 3.)))) (* skoSC1 (+ (* skoMC1 (* skoMC1 (- 1.))) (* skoSC1 (* skoMC1 (/ 1. 12.))))))))) (* skoMC1 (+ (- 2.) (* skoMC1 (- 5.))))) (and (<= (* skoSC1 (+ (* skoMC1 (+ 1. (* skoMC1 (- 3.)))) (* skoSC1 (+ (* skoMC1 (+ 2. (* skoMC1 3.))) (* skoSC1 (+ (* skoMC1 (+ (/ (- 1.) 6.) skoMC1)) (* skoSC1 (* skoMC1 (/ (- 1.) 4.))))))))) (* skoMC1 (+ 2. (* skoMC1 5.)))) (and (<= (* skoSC1 (+ (* skoMC1 (+ 1. (* skoMC1 (- 3.)))) (* skoSC1 (+ (* skoMC1 (+ 2. (* skoMC1 3.))) (* skoSC1 (+ (* skoMC1 skoMC1) (* skoSC1 (* skoMC1 (/ (- 1.) 12.))))))))) (* skoMC1 (+ 2. (* skoMC1 5.)))) (and (<= (* skoSC1 (* skoMC1 (- 1.))) skoMC1) (and (> (* skoSC1 skoMC1) (* skoMC1 (- 1.))) (and (<= 0. skoMC1) (and (> skoMC1 0.) (and (<= 0. skoSC1) (and (<= 2. skoMC1) (and (<= skoSC1 (/ 5. 4.)) (and (> (* skoSC1 (* skoMC1 (* skoMC1 (* skoMC1 2.)))) (* skoMC1 (* skoMC1 (* skoMC1 (- 2.))))) (and (<= (* skoSC1 (* skoMC1 (* skoMC1 (* skoMC1 (- 2.))))) (* skoMC1 (* skoMC1 (* skoMC1 2.)))) (<= (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (+ (- 2.) (* skoMC1 (- 12.)))))) (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (+ 1. (* skoMC1 (- 6.)))))) (* skoSC1 (+ (* skoMC1 (* skoMC1 skoMC1)) (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (/ (- 1.) 12.)))) (* skoSC1 (* skoMC1 (* skoMC1 (* skoMC1 (/ (- 1.) 12.))))))))))))) (* skoMC1 (* skoMC1 (* skoMC1 (+ 2. (* skoMC1 6.)))))))))))))))))))))))

% In GRF format:
(sequent " MetiTarski formula " (antecedent (> (* skoSC1 (* skoMC1 (* skoMC1 skoMC1))) (* skoMC1 (* skoMC1 (* skoMC1 (- 1.))))) (<= (* skoMC1 (* skoMC1 (* skoMC1 (- 2.)))) 0.) (> (* skoMC1 (* skoMC1 (* skoMC1 2.))) 0.) (> (* skoSC1 (+ (* skoMC1 (+ (- 1.) (* skoMC1 3.))) (* skoSC1 (+ (* skoMC1 (+ (- 2.) (* skoMC1 (- 3.)))) (* skoSC1 (+ (* skoMC1 (+ (/ 1. 6.) (* skoMC1 (- 1.)))) (* skoSC1 (* skoMC1 (/ 1. 4.))))))))) (* skoMC1 (+ (- 2.) (* skoMC1 (- 5.))))) (> (* skoSC1 (+ (* skoMC1 (+ (- 1.) (* skoMC1 3.))) (* skoSC1 (+ (* skoMC1 (+ (- 2.) (* skoMC1 (- 3.)))) (* skoSC1 (+ (* skoMC1 (* skoMC1 (- 1.))) (* skoSC1 (* skoMC1 (/ 1. 12.))))))))) (* skoMC1 (+ (- 2.) (* skoMC1 (- 5.))))) (<= (* skoSC1 (+ (* skoMC1 (+ 1. (* skoMC1 (- 3.)))) (* skoSC1 (+ (* skoMC1 (+ 2. (* skoMC1 3.))) (* skoSC1 (+ (* skoMC1 (+ (/ (- 1.) 6.) skoMC1)) (* skoSC1 (* skoMC1 (/ (- 1.) 4.))))))))) (* skoMC1 (+ 2. (* skoMC1 5.)))) (<= (* skoSC1 (+ (* skoMC1 (+ 1. (* skoMC1 (- 3.)))) (* skoSC1 (+ (* skoMC1 (+ 2. (* skoMC1 3.))) (* skoSC1 (+ (* skoMC1 skoMC1) (* skoSC1 (* skoMC1 (/ (- 1.) 12.))))))))) (* skoMC1 (+ 2. (* skoMC1 5.)))) (<= (* skoSC1 (* skoMC1 (- 1.))) skoMC1) (> (* skoSC1 skoMC1) (* skoMC1 (- 1.))) (<= 0. skoMC1) (> skoMC1 0.) (<= 0. skoSC1) (<= 2. skoMC1) (<= skoSC1 (/ 5. 4.)) (> (* skoSC1 (* skoMC1 (* skoMC1 (* skoMC1 2.)))) (* skoMC1 (* skoMC1 (* skoMC1 (- 2.))))) (<= (* skoSC1 (* skoMC1 (* skoMC1 (* skoMC1 (- 2.))))) (* skoMC1 (* skoMC1 (* skoMC1 2.))))) (succedent (> (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (+ (- 2.) (* skoMC1 (- 12.)))))) (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (+ 1. (* skoMC1 (- 6.)))))) (* skoSC1 (+ (* skoMC1 (* skoMC1 skoMC1)) (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (/ (- 1.) 12.)))) (* skoSC1 (* skoMC1 (* skoMC1 (* skoMC1 (/ (- 1.) 12.))))))))))))) (* skoMC1 (* skoMC1 (* skoMC1 (+ 2. (* skoMC1 6.))))))))
-----[end problem]-----

-----[begin problem]-----
% In Mathematica format:
Timing[Resolve[Exists[{skoSC1,skoMC1}, And[skoSC1*skoMC1*skoMC1*skoMC1*-1<=skoMC1*skoMC1*skoMC1,skoSC1*skoMC1*skoMC1*skoMC1>skoMC1*skoMC1*skoMC1*-1,skoSC1*skoMC1*skoMC1*skoMC1>skoMC1*skoMC1*skoMC1*-1,skoMC1*skoMC1*skoMC1*-2<=0,skoMC1*skoMC1*skoMC1*2>0,skoSC1*(skoMC1*(-1+skoMC1*3)+skoSC1*(skoMC1*(-2+skoMC1*-3)+skoSC1*(skoMC1*((1/6)+skoMC1*-1)+skoSC1*skoMC1*(1/4))))>skoMC1*(-2+skoMC1*-5),skoSC1*(skoMC1*(-1+skoMC1*3)+skoSC1*(skoMC1*(-2+skoMC1*-3)+skoSC1*(skoMC1*skoMC1*-1+skoSC1*skoMC1*(1/12))))>skoMC1*(-2+skoMC1*-5),skoSC1*(skoMC1*(1+skoMC1*-3)+skoSC1*(skoMC1*(2+skoMC1*3)+skoSC1*(skoMC1*((-1/6)+skoMC1)+skoSC1*skoMC1*(-1/4))))<=skoMC1*(2+skoMC1*5),skoSC1*(skoMC1*(1+skoMC1*-3)+skoSC1*(skoMC1*(2+skoMC1*3)+skoSC1*(skoMC1*skoMC1+skoSC1*skoMC1*(-1/12))))<=skoMC1*(2+skoMC1*5),skoSC1*skoMC1*-1<=skoMC1,skoSC1*skoMC1>skoMC1*-1,0<=skoMC1,skoMC1>0,0<=skoSC1,2<=skoMC1,skoSC1<=(5/4),skoSC1*skoMC1*skoMC1*skoMC1*2>skoMC1*skoMC1*skoMC1*-2,skoSC1*skoMC1*skoMC1*skoMC1*-2<=skoMC1*skoMC1*skoMC1*2,skoSC1*(skoMC1*skoMC1*skoMC1*(-2+skoMC1*-12)+skoSC1*(skoMC1*skoMC1*skoMC1*(1+skoMC1*-6)+skoSC1*(skoMC1*skoMC1*skoMC1+skoSC1*(skoMC1*skoMC1*skoMC1*(-1/12)+skoSC1*skoMC1*skoMC1*skoMC1*(-1/12)))))<=skoMC1*skoMC1*skoMC1*(2+skoMC1*6)]], Reals]]

% In QepcadB format:
(E skoSC1) (E skoMC1) [[(skoSC1 skoMC1 skoMC1 skoMC1 (-1))<=(skoMC1 skoMC1 skoMC1)]/\[[(skoMC1 skoMC1 skoMC1 (-1))<(skoSC1 skoMC1 skoMC1 skoMC1)]/\[[(skoMC1 skoMC1 skoMC1 (-1))<(skoSC1 skoMC1 skoMC1 skoMC1)]/\[[(skoMC1 skoMC1 skoMC1 (-2))<=0]/\[[0<(skoMC1 skoMC1 skoMC1 (2))]/\[[(skoMC1 (-2+(skoMC1 (-5))))<(skoSC1 ((skoMC1 (-1+(skoMC1 (3))))+(skoSC1 ((skoMC1 (-2+(skoMC1 (-3))))+(skoSC1 ((skoMC1 (1/6+(skoMC1 (-1))))+(skoSC1 skoMC1 (1/4))))))))]/\[[(skoMC1 (-2+(skoMC1 (-5))))<(skoSC1 ((skoMC1 (-1+(skoMC1 (3))))+(skoSC1 ((skoMC1 (-2+(skoMC1 (-3))))+(skoSC1 ((skoMC1 skoMC1 (-1))+(skoSC1 skoMC1 (1/12))))))))]/\[[(skoSC1 ((skoMC1 (1+(skoMC1 (-3))))+(skoSC1 ((skoMC1 (2+(skoMC1 (3))))+(skoSC1 ((skoMC1 (-1/6+skoMC1))+(skoSC1 skoMC1 (-1/4))))))))<=(skoMC1 (2+(skoMC1 (5))))]/\[[(skoSC1 ((skoMC1 (1+(skoMC1 (-3))))+(skoSC1 ((skoMC1 (2+(skoMC1 (3))))+(skoSC1 ((skoMC1 skoMC1)+(skoSC1 skoMC1 (-1/12))))))))<=(skoMC1 (2+(skoMC1 (5))))]/\[[(skoSC1 skoMC1 (-1))<=skoMC1]/\[[(skoMC1 (-1))<(skoSC1 skoMC1)]/\[[0<=skoMC1]/\[[0<skoMC1]/\[[0<=skoSC1]/\[[2<=skoMC1]/\[[skoSC1<=5/4]/\[[(skoMC1 skoMC1 skoMC1 (-2))<(skoSC1 skoMC1 skoMC1 skoMC1 (2))]/\[[(skoSC1 skoMC1 skoMC1 skoMC1 (-2))<=(skoMC1 skoMC1 skoMC1 (2))]/\[(skoSC1 ((skoMC1 skoMC1 skoMC1 (-2+(skoMC1 (-12))))+(skoSC1 ((skoMC1 skoMC1 skoMC1 (1+(skoMC1 (-6))))+(skoSC1 ((skoMC1 skoMC1 skoMC1)+(skoSC1 ((skoMC1 skoMC1 skoMC1 (-1/12))+(skoSC1 skoMC1 skoMC1 skoMC1 (-1/12))))))))))<=(skoMC1 skoMC1 skoMC1 (2+(skoMC1 (6))))]]]]]]]]]]]]]]]]]]].

% In SMTLib2 format:
(declare-fun skoSC1 () Real) (declare-fun skoMC1 () Real) (assert (and (<= (* skoSC1 (* skoMC1 (* skoMC1 (* skoMC1 (- 1.))))) (* skoMC1 (* skoMC1 skoMC1))) (and (> (* skoSC1 (* skoMC1 (* skoMC1 skoMC1))) (* skoMC1 (* skoMC1 (* skoMC1 (- 1.))))) (and (> (* skoSC1 (* skoMC1 (* skoMC1 skoMC1))) (* skoMC1 (* skoMC1 (* skoMC1 (- 1.))))) (and (<= (* skoMC1 (* skoMC1 (* skoMC1 (- 2.)))) 0.) (and (> (* skoMC1 (* skoMC1 (* skoMC1 2.))) 0.) (and (> (* skoSC1 (+ (* skoMC1 (+ (- 1.) (* skoMC1 3.))) (* skoSC1 (+ (* skoMC1 (+ (- 2.) (* skoMC1 (- 3.)))) (* skoSC1 (+ (* skoMC1 (+ (/ 1. 6.) (* skoMC1 (- 1.)))) (* skoSC1 (* skoMC1 (/ 1. 4.))))))))) (* skoMC1 (+ (- 2.) (* skoMC1 (- 5.))))) (and (> (* skoSC1 (+ (* skoMC1 (+ (- 1.) (* skoMC1 3.))) (* skoSC1 (+ (* skoMC1 (+ (- 2.) (* skoMC1 (- 3.)))) (* skoSC1 (+ (* skoMC1 (* skoMC1 (- 1.))) (* skoSC1 (* skoMC1 (/ 1. 12.))))))))) (* skoMC1 (+ (- 2.) (* skoMC1 (- 5.))))) (and (<= (* skoSC1 (+ (* skoMC1 (+ 1. (* skoMC1 (- 3.)))) (* skoSC1 (+ (* skoMC1 (+ 2. (* skoMC1 3.))) (* skoSC1 (+ (* skoMC1 (+ (/ (- 1.) 6.) skoMC1)) (* skoSC1 (* skoMC1 (/ (- 1.) 4.))))))))) (* skoMC1 (+ 2. (* skoMC1 5.)))) (and (<= (* skoSC1 (+ (* skoMC1 (+ 1. (* skoMC1 (- 3.)))) (* skoSC1 (+ (* skoMC1 (+ 2. (* skoMC1 3.))) (* skoSC1 (+ (* skoMC1 skoMC1) (* skoSC1 (* skoMC1 (/ (- 1.) 12.))))))))) (* skoMC1 (+ 2. (* skoMC1 5.)))) (and (<= (* skoSC1 (* skoMC1 (- 1.))) skoMC1) (and (> (* skoSC1 skoMC1) (* skoMC1 (- 1.))) (and (<= 0. skoMC1) (and (> skoMC1 0.) (and (<= 0. skoSC1) (and (<= 2. skoMC1) (and (<= skoSC1 (/ 5. 4.)) (and (> (* skoSC1 (* skoMC1 (* skoMC1 (* skoMC1 2.)))) (* skoMC1 (* skoMC1 (* skoMC1 (- 2.))))) (and (<= (* skoSC1 (* skoMC1 (* skoMC1 (* skoMC1 (- 2.))))) (* skoMC1 (* skoMC1 (* skoMC1 2.)))) (<= (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (+ (- 2.) (* skoMC1 (- 12.)))))) (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (+ 1. (* skoMC1 (- 6.)))))) (* skoSC1 (+ (* skoMC1 (* skoMC1 skoMC1)) (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (/ (- 1.) 12.)))) (* skoSC1 (* skoMC1 (* skoMC1 (* skoMC1 (/ (- 1.) 12.))))))))))))) (* skoMC1 (* skoMC1 (* skoMC1 (+ 2. (* skoMC1 6.)))))))))))))))))))))))))

% In GRF format:
(sequent " MetiTarski formula " (antecedent (<= (* skoSC1 (* skoMC1 (* skoMC1 (* skoMC1 (- 1.))))) (* skoMC1 (* skoMC1 skoMC1))) (> (* skoSC1 (* skoMC1 (* skoMC1 skoMC1))) (* skoMC1 (* skoMC1 (* skoMC1 (- 1.))))) (> (* skoSC1 (* skoMC1 (* skoMC1 skoMC1))) (* skoMC1 (* skoMC1 (* skoMC1 (- 1.))))) (<= (* skoMC1 (* skoMC1 (* skoMC1 (- 2.)))) 0.) (> (* skoMC1 (* skoMC1 (* skoMC1 2.))) 0.) (> (* skoSC1 (+ (* skoMC1 (+ (- 1.) (* skoMC1 3.))) (* skoSC1 (+ (* skoMC1 (+ (- 2.) (* skoMC1 (- 3.)))) (* skoSC1 (+ (* skoMC1 (+ (/ 1. 6.) (* skoMC1 (- 1.)))) (* skoSC1 (* skoMC1 (/ 1. 4.))))))))) (* skoMC1 (+ (- 2.) (* skoMC1 (- 5.))))) (> (* skoSC1 (+ (* skoMC1 (+ (- 1.) (* skoMC1 3.))) (* skoSC1 (+ (* skoMC1 (+ (- 2.) (* skoMC1 (- 3.)))) (* skoSC1 (+ (* skoMC1 (* skoMC1 (- 1.))) (* skoSC1 (* skoMC1 (/ 1. 12.))))))))) (* skoMC1 (+ (- 2.) (* skoMC1 (- 5.))))) (<= (* skoSC1 (+ (* skoMC1 (+ 1. (* skoMC1 (- 3.)))) (* skoSC1 (+ (* skoMC1 (+ 2. (* skoMC1 3.))) (* skoSC1 (+ (* skoMC1 (+ (/ (- 1.) 6.) skoMC1)) (* skoSC1 (* skoMC1 (/ (- 1.) 4.))))))))) (* skoMC1 (+ 2. (* skoMC1 5.)))) (<= (* skoSC1 (+ (* skoMC1 (+ 1. (* skoMC1 (- 3.)))) (* skoSC1 (+ (* skoMC1 (+ 2. (* skoMC1 3.))) (* skoSC1 (+ (* skoMC1 skoMC1) (* skoSC1 (* skoMC1 (/ (- 1.) 12.))))))))) (* skoMC1 (+ 2. (* skoMC1 5.)))) (<= (* skoSC1 (* skoMC1 (- 1.))) skoMC1) (> (* skoSC1 skoMC1) (* skoMC1 (- 1.))) (<= 0. skoMC1) (> skoMC1 0.) (<= 0. skoSC1) (<= 2. skoMC1) (<= skoSC1 (/ 5. 4.)) (> (* skoSC1 (* skoMC1 (* skoMC1 (* skoMC1 2.)))) (* skoMC1 (* skoMC1 (* skoMC1 (- 2.))))) (<= (* skoSC1 (* skoMC1 (* skoMC1 (* skoMC1 (- 2.))))) (* skoMC1 (* skoMC1 (* skoMC1 2.))))) (succedent (> (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (+ (- 2.) (* skoMC1 (- 12.)))))) (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (+ 1. (* skoMC1 (- 6.)))))) (* skoSC1 (+ (* skoMC1 (* skoMC1 skoMC1)) (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (/ (- 1.) 12.)))) (* skoSC1 (* skoMC1 (* skoMC1 (* skoMC1 (/ (- 1.) 12.))))))))))))) (* skoMC1 (* skoMC1 (* skoMC1 (+ 2. (* skoMC1 6.))))))))
-----[end problem]-----

-----[begin problem]-----
% In Mathematica format:
Timing[Resolve[Exists[{skoSC1,skoMC1}, And[skoSC1*skoMC1*skoMC1*skoMC1*-1<=skoMC1*skoMC1*skoMC1,skoSC1<=0,skoSC1*skoMC1*skoMC1*skoMC1>skoMC1*skoMC1*skoMC1*-1,skoMC1*skoMC1*skoMC1*-2<=0,skoMC1*skoMC1*skoMC1*2>0,skoSC1*(skoMC1*(-1+skoMC1*3)+skoSC1*(skoMC1*(-2+skoMC1*-3)+skoSC1*(skoMC1*((1/6)+skoMC1*-1)+skoSC1*skoMC1*(1/4))))>skoMC1*(-2+skoMC1*-5),skoSC1*(skoMC1*(-1+skoMC1*3)+skoSC1*(skoMC1*(-2+skoMC1*-3)+skoSC1*(skoMC1*skoMC1*-1+skoSC1*skoMC1*(1/12))))>skoMC1*(-2+skoMC1*-5),skoSC1*(skoMC1*(1+skoMC1*-3)+skoSC1*(skoMC1*(2+skoMC1*3)+skoSC1*(skoMC1*((-1/6)+skoMC1)+skoSC1*skoMC1*(-1/4))))<=skoMC1*(2+skoMC1*5),skoSC1*(skoMC1*(1+skoMC1*-3)+skoSC1*(skoMC1*(2+skoMC1*3)+skoSC1*(skoMC1*skoMC1+skoSC1*skoMC1*(-1/12))))<=skoMC1*(2+skoMC1*5),skoSC1*skoMC1*-1<=skoMC1,skoSC1*skoMC1>skoMC1*-1,0<=skoMC1,skoMC1>0,0<=skoSC1,2<=skoMC1,skoSC1<=(5/4),skoSC1*skoMC1*skoMC1*skoMC1*2>skoMC1*skoMC1*skoMC1*-2,skoSC1*skoMC1*skoMC1*skoMC1*-2<=skoMC1*skoMC1*skoMC1*2,skoSC1*(skoMC1*skoMC1*skoMC1*(-2+skoMC1*-12)+skoSC1*(skoMC1*skoMC1*skoMC1*(1+skoMC1*-6)+skoSC1*(skoMC1*skoMC1*skoMC1+skoSC1*(skoMC1*skoMC1*skoMC1*(-1/12)+skoSC1*skoMC1*skoMC1*skoMC1*(-1/12)))))<=skoMC1*skoMC1*skoMC1*(2+skoMC1*6)]], Reals]]

% In QepcadB format:
(E skoSC1) (E skoMC1) [[(skoSC1 skoMC1 skoMC1 skoMC1 (-1))<=(skoMC1 skoMC1 skoMC1)]/\[[skoSC1<=0]/\[[(skoMC1 skoMC1 skoMC1 (-1))<(skoSC1 skoMC1 skoMC1 skoMC1)]/\[[(skoMC1 skoMC1 skoMC1 (-2))<=0]/\[[0<(skoMC1 skoMC1 skoMC1 (2))]/\[[(skoMC1 (-2+(skoMC1 (-5))))<(skoSC1 ((skoMC1 (-1+(skoMC1 (3))))+(skoSC1 ((skoMC1 (-2+(skoMC1 (-3))))+(skoSC1 ((skoMC1 (1/6+(skoMC1 (-1))))+(skoSC1 skoMC1 (1/4))))))))]/\[[(skoMC1 (-2+(skoMC1 (-5))))<(skoSC1 ((skoMC1 (-1+(skoMC1 (3))))+(skoSC1 ((skoMC1 (-2+(skoMC1 (-3))))+(skoSC1 ((skoMC1 skoMC1 (-1))+(skoSC1 skoMC1 (1/12))))))))]/\[[(skoSC1 ((skoMC1 (1+(skoMC1 (-3))))+(skoSC1 ((skoMC1 (2+(skoMC1 (3))))+(skoSC1 ((skoMC1 (-1/6+skoMC1))+(skoSC1 skoMC1 (-1/4))))))))<=(skoMC1 (2+(skoMC1 (5))))]/\[[(skoSC1 ((skoMC1 (1+(skoMC1 (-3))))+(skoSC1 ((skoMC1 (2+(skoMC1 (3))))+(skoSC1 ((skoMC1 skoMC1)+(skoSC1 skoMC1 (-1/12))))))))<=(skoMC1 (2+(skoMC1 (5))))]/\[[(skoSC1 skoMC1 (-1))<=skoMC1]/\[[(skoMC1 (-1))<(skoSC1 skoMC1)]/\[[0<=skoMC1]/\[[0<skoMC1]/\[[0<=skoSC1]/\[[2<=skoMC1]/\[[skoSC1<=5/4]/\[[(skoMC1 skoMC1 skoMC1 (-2))<(skoSC1 skoMC1 skoMC1 skoMC1 (2))]/\[[(skoSC1 skoMC1 skoMC1 skoMC1 (-2))<=(skoMC1 skoMC1 skoMC1 (2))]/\[(skoSC1 ((skoMC1 skoMC1 skoMC1 (-2+(skoMC1 (-12))))+(skoSC1 ((skoMC1 skoMC1 skoMC1 (1+(skoMC1 (-6))))+(skoSC1 ((skoMC1 skoMC1 skoMC1)+(skoSC1 ((skoMC1 skoMC1 skoMC1 (-1/12))+(skoSC1 skoMC1 skoMC1 skoMC1 (-1/12))))))))))<=(skoMC1 skoMC1 skoMC1 (2+(skoMC1 (6))))]]]]]]]]]]]]]]]]]]].

% In SMTLib2 format:
(declare-fun skoSC1 () Real) (declare-fun skoMC1 () Real) (assert (and (<= (* skoSC1 (* skoMC1 (* skoMC1 (* skoMC1 (- 1.))))) (* skoMC1 (* skoMC1 skoMC1))) (and (<= skoSC1 0.) (and (> (* skoSC1 (* skoMC1 (* skoMC1 skoMC1))) (* skoMC1 (* skoMC1 (* skoMC1 (- 1.))))) (and (<= (* skoMC1 (* skoMC1 (* skoMC1 (- 2.)))) 0.) (and (> (* skoMC1 (* skoMC1 (* skoMC1 2.))) 0.) (and (> (* skoSC1 (+ (* skoMC1 (+ (- 1.) (* skoMC1 3.))) (* skoSC1 (+ (* skoMC1 (+ (- 2.) (* skoMC1 (- 3.)))) (* skoSC1 (+ (* skoMC1 (+ (/ 1. 6.) (* skoMC1 (- 1.)))) (* skoSC1 (* skoMC1 (/ 1. 4.))))))))) (* skoMC1 (+ (- 2.) (* skoMC1 (- 5.))))) (and (> (* skoSC1 (+ (* skoMC1 (+ (- 1.) (* skoMC1 3.))) (* skoSC1 (+ (* skoMC1 (+ (- 2.) (* skoMC1 (- 3.)))) (* skoSC1 (+ (* skoMC1 (* skoMC1 (- 1.))) (* skoSC1 (* skoMC1 (/ 1. 12.))))))))) (* skoMC1 (+ (- 2.) (* skoMC1 (- 5.))))) (and (<= (* skoSC1 (+ (* skoMC1 (+ 1. (* skoMC1 (- 3.)))) (* skoSC1 (+ (* skoMC1 (+ 2. (* skoMC1 3.))) (* skoSC1 (+ (* skoMC1 (+ (/ (- 1.) 6.) skoMC1)) (* skoSC1 (* skoMC1 (/ (- 1.) 4.))))))))) (* skoMC1 (+ 2. (* skoMC1 5.)))) (and (<= (* skoSC1 (+ (* skoMC1 (+ 1. (* skoMC1 (- 3.)))) (* skoSC1 (+ (* skoMC1 (+ 2. (* skoMC1 3.))) (* skoSC1 (+ (* skoMC1 skoMC1) (* skoSC1 (* skoMC1 (/ (- 1.) 12.))))))))) (* skoMC1 (+ 2. (* skoMC1 5.)))) (and (<= (* skoSC1 (* skoMC1 (- 1.))) skoMC1) (and (> (* skoSC1 skoMC1) (* skoMC1 (- 1.))) (and (<= 0. skoMC1) (and (> skoMC1 0.) (and (<= 0. skoSC1) (and (<= 2. skoMC1) (and (<= skoSC1 (/ 5. 4.)) (and (> (* skoSC1 (* skoMC1 (* skoMC1 (* skoMC1 2.)))) (* skoMC1 (* skoMC1 (* skoMC1 (- 2.))))) (and (<= (* skoSC1 (* skoMC1 (* skoMC1 (* skoMC1 (- 2.))))) (* skoMC1 (* skoMC1 (* skoMC1 2.)))) (<= (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (+ (- 2.) (* skoMC1 (- 12.)))))) (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (+ 1. (* skoMC1 (- 6.)))))) (* skoSC1 (+ (* skoMC1 (* skoMC1 skoMC1)) (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (/ (- 1.) 12.)))) (* skoSC1 (* skoMC1 (* skoMC1 (* skoMC1 (/ (- 1.) 12.))))))))))))) (* skoMC1 (* skoMC1 (* skoMC1 (+ 2. (* skoMC1 6.)))))))))))))))))))))))))

% In GRF format:
(sequent " MetiTarski formula " (antecedent (<= (* skoSC1 (* skoMC1 (* skoMC1 (* skoMC1 (- 1.))))) (* skoMC1 (* skoMC1 skoMC1))) (<= skoSC1 0.) (> (* skoSC1 (* skoMC1 (* skoMC1 skoMC1))) (* skoMC1 (* skoMC1 (* skoMC1 (- 1.))))) (<= (* skoMC1 (* skoMC1 (* skoMC1 (- 2.)))) 0.) (> (* skoMC1 (* skoMC1 (* skoMC1 2.))) 0.) (> (* skoSC1 (+ (* skoMC1 (+ (- 1.) (* skoMC1 3.))) (* skoSC1 (+ (* skoMC1 (+ (- 2.) (* skoMC1 (- 3.)))) (* skoSC1 (+ (* skoMC1 (+ (/ 1. 6.) (* skoMC1 (- 1.)))) (* skoSC1 (* skoMC1 (/ 1. 4.))))))))) (* skoMC1 (+ (- 2.) (* skoMC1 (- 5.))))) (> (* skoSC1 (+ (* skoMC1 (+ (- 1.) (* skoMC1 3.))) (* skoSC1 (+ (* skoMC1 (+ (- 2.) (* skoMC1 (- 3.)))) (* skoSC1 (+ (* skoMC1 (* skoMC1 (- 1.))) (* skoSC1 (* skoMC1 (/ 1. 12.))))))))) (* skoMC1 (+ (- 2.) (* skoMC1 (- 5.))))) (<= (* skoSC1 (+ (* skoMC1 (+ 1. (* skoMC1 (- 3.)))) (* skoSC1 (+ (* skoMC1 (+ 2. (* skoMC1 3.))) (* skoSC1 (+ (* skoMC1 (+ (/ (- 1.) 6.) skoMC1)) (* skoSC1 (* skoMC1 (/ (- 1.) 4.))))))))) (* skoMC1 (+ 2. (* skoMC1 5.)))) (<= (* skoSC1 (+ (* skoMC1 (+ 1. (* skoMC1 (- 3.)))) (* skoSC1 (+ (* skoMC1 (+ 2. (* skoMC1 3.))) (* skoSC1 (+ (* skoMC1 skoMC1) (* skoSC1 (* skoMC1 (/ (- 1.) 12.))))))))) (* skoMC1 (+ 2. (* skoMC1 5.)))) (<= (* skoSC1 (* skoMC1 (- 1.))) skoMC1) (> (* skoSC1 skoMC1) (* skoMC1 (- 1.))) (<= 0. skoMC1) (> skoMC1 0.) (<= 0. skoSC1) (<= 2. skoMC1) (<= skoSC1 (/ 5. 4.)) (> (* skoSC1 (* skoMC1 (* skoMC1 (* skoMC1 2.)))) (* skoMC1 (* skoMC1 (* skoMC1 (- 2.))))) (<= (* skoSC1 (* skoMC1 (* skoMC1 (* skoMC1 (- 2.))))) (* skoMC1 (* skoMC1 (* skoMC1 2.))))) (succedent (> (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (+ (- 2.) (* skoMC1 (- 12.)))))) (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (+ 1. (* skoMC1 (- 6.)))))) (* skoSC1 (+ (* skoMC1 (* skoMC1 skoMC1)) (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (/ (- 1.) 12.)))) (* skoSC1 (* skoMC1 (* skoMC1 (* skoMC1 (/ (- 1.) 12.))))))))))))) (* skoMC1 (* skoMC1 (* skoMC1 (+ 2. (* skoMC1 6.))))))))
-----[end problem]-----

-----[begin problem]-----
% In Mathematica format:
Timing[Resolve[Exists[{skoSC1,skoMC1}, And[skoSC1*skoMC1*skoMC1*skoMC1*-1<=skoMC1*skoMC1*skoMC1,skoSC1*skoMC1*skoMC1*skoMC1>skoMC1*skoMC1*skoMC1*-1,skoMC1*skoMC1*skoMC1*-2<=0,skoMC1*skoMC1*skoMC1*2>0,skoSC1*(skoMC1*(-1+skoMC1*3)+skoSC1*(skoMC1*(-2+skoMC1*-3)+skoSC1*(skoMC1*((1/6)+skoMC1*-1)+skoSC1*skoMC1*(1/4))))>skoMC1*(-2+skoMC1*-5),skoSC1*(skoMC1*(-1+skoMC1*3)+skoSC1*(skoMC1*(-2+skoMC1*-3)+skoSC1*(skoMC1*skoMC1*-1+skoSC1*skoMC1*(1/12))))>skoMC1*(-2+skoMC1*-5),skoSC1*(skoMC1*(1+skoMC1*-3)+skoSC1*(skoMC1*(2+skoMC1*3)+skoSC1*(skoMC1*((-1/6)+skoMC1)+skoSC1*skoMC1*(-1/4))))<=skoMC1*(2+skoMC1*5),skoSC1*(skoMC1*(1+skoMC1*-3)+skoSC1*(skoMC1*(2+skoMC1*3)+skoSC1*(skoMC1*skoMC1+skoSC1*skoMC1*(-1/12))))<=skoMC1*(2+skoMC1*5),skoSC1*skoMC1*-1<=skoMC1,skoSC1*skoMC1>skoMC1*-1,0<=skoMC1,skoMC1>0,0<=skoSC1,2<=skoMC1,skoSC1<=(5/4),skoSC1*skoMC1*skoMC1*skoMC1*2>skoMC1*skoMC1*skoMC1*-2,skoSC1*skoMC1*skoMC1*skoMC1*-2<=skoMC1*skoMC1*skoMC1*2,skoSC1*(skoMC1*skoMC1*skoMC1*(-2+skoMC1*-12)+skoSC1*(skoMC1*skoMC1*skoMC1*(1+skoMC1*-6)+skoSC1*(skoMC1*skoMC1*skoMC1+skoSC1*(skoMC1*skoMC1*skoMC1*(-1/12)+skoSC1*skoMC1*skoMC1*skoMC1*(-1/12)))))<=skoMC1*skoMC1*skoMC1*(2+skoMC1*6)]], Reals]]

% In QepcadB format:
(E skoSC1) (E skoMC1) [[(skoSC1 skoMC1 skoMC1 skoMC1 (-1))<=(skoMC1 skoMC1 skoMC1)]/\[[(skoMC1 skoMC1 skoMC1 (-1))<(skoSC1 skoMC1 skoMC1 skoMC1)]/\[[(skoMC1 skoMC1 skoMC1 (-2))<=0]/\[[0<(skoMC1 skoMC1 skoMC1 (2))]/\[[(skoMC1 (-2+(skoMC1 (-5))))<(skoSC1 ((skoMC1 (-1+(skoMC1 (3))))+(skoSC1 ((skoMC1 (-2+(skoMC1 (-3))))+(skoSC1 ((skoMC1 (1/6+(skoMC1 (-1))))+(skoSC1 skoMC1 (1/4))))))))]/\[[(skoMC1 (-2+(skoMC1 (-5))))<(skoSC1 ((skoMC1 (-1+(skoMC1 (3))))+(skoSC1 ((skoMC1 (-2+(skoMC1 (-3))))+(skoSC1 ((skoMC1 skoMC1 (-1))+(skoSC1 skoMC1 (1/12))))))))]/\[[(skoSC1 ((skoMC1 (1+(skoMC1 (-3))))+(skoSC1 ((skoMC1 (2+(skoMC1 (3))))+(skoSC1 ((skoMC1 (-1/6+skoMC1))+(skoSC1 skoMC1 (-1/4))))))))<=(skoMC1 (2+(skoMC1 (5))))]/\[[(skoSC1 ((skoMC1 (1+(skoMC1 (-3))))+(skoSC1 ((skoMC1 (2+(skoMC1 (3))))+(skoSC1 ((skoMC1 skoMC1)+(skoSC1 skoMC1 (-1/12))))))))<=(skoMC1 (2+(skoMC1 (5))))]/\[[(skoSC1 skoMC1 (-1))<=skoMC1]/\[[(skoMC1 (-1))<(skoSC1 skoMC1)]/\[[0<=skoMC1]/\[[0<skoMC1]/\[[0<=skoSC1]/\[[2<=skoMC1]/\[[skoSC1<=5/4]/\[[(skoMC1 skoMC1 skoMC1 (-2))<(skoSC1 skoMC1 skoMC1 skoMC1 (2))]/\[[(skoSC1 skoMC1 skoMC1 skoMC1 (-2))<=(skoMC1 skoMC1 skoMC1 (2))]/\[(skoSC1 ((skoMC1 skoMC1 skoMC1 (-2+(skoMC1 (-12))))+(skoSC1 ((skoMC1 skoMC1 skoMC1 (1+(skoMC1 (-6))))+(skoSC1 ((skoMC1 skoMC1 skoMC1)+(skoSC1 ((skoMC1 skoMC1 skoMC1 (-1/12))+(skoSC1 skoMC1 skoMC1 skoMC1 (-1/12))))))))))<=(skoMC1 skoMC1 skoMC1 (2+(skoMC1 (6))))]]]]]]]]]]]]]]]]]].

% In SMTLib2 format:
(declare-fun skoSC1 () Real) (declare-fun skoMC1 () Real) (assert (and (<= (* skoSC1 (* skoMC1 (* skoMC1 (* skoMC1 (- 1.))))) (* skoMC1 (* skoMC1 skoMC1))) (and (> (* skoSC1 (* skoMC1 (* skoMC1 skoMC1))) (* skoMC1 (* skoMC1 (* skoMC1 (- 1.))))) (and (<= (* skoMC1 (* skoMC1 (* skoMC1 (- 2.)))) 0.) (and (> (* skoMC1 (* skoMC1 (* skoMC1 2.))) 0.) (and (> (* skoSC1 (+ (* skoMC1 (+ (- 1.) (* skoMC1 3.))) (* skoSC1 (+ (* skoMC1 (+ (- 2.) (* skoMC1 (- 3.)))) (* skoSC1 (+ (* skoMC1 (+ (/ 1. 6.) (* skoMC1 (- 1.)))) (* skoSC1 (* skoMC1 (/ 1. 4.))))))))) (* skoMC1 (+ (- 2.) (* skoMC1 (- 5.))))) (and (> (* skoSC1 (+ (* skoMC1 (+ (- 1.) (* skoMC1 3.))) (* skoSC1 (+ (* skoMC1 (+ (- 2.) (* skoMC1 (- 3.)))) (* skoSC1 (+ (* skoMC1 (* skoMC1 (- 1.))) (* skoSC1 (* skoMC1 (/ 1. 12.))))))))) (* skoMC1 (+ (- 2.) (* skoMC1 (- 5.))))) (and (<= (* skoSC1 (+ (* skoMC1 (+ 1. (* skoMC1 (- 3.)))) (* skoSC1 (+ (* skoMC1 (+ 2. (* skoMC1 3.))) (* skoSC1 (+ (* skoMC1 (+ (/ (- 1.) 6.) skoMC1)) (* skoSC1 (* skoMC1 (/ (- 1.) 4.))))))))) (* skoMC1 (+ 2. (* skoMC1 5.)))) (and (<= (* skoSC1 (+ (* skoMC1 (+ 1. (* skoMC1 (- 3.)))) (* skoSC1 (+ (* skoMC1 (+ 2. (* skoMC1 3.))) (* skoSC1 (+ (* skoMC1 skoMC1) (* skoSC1 (* skoMC1 (/ (- 1.) 12.))))))))) (* skoMC1 (+ 2. (* skoMC1 5.)))) (and (<= (* skoSC1 (* skoMC1 (- 1.))) skoMC1) (and (> (* skoSC1 skoMC1) (* skoMC1 (- 1.))) (and (<= 0. skoMC1) (and (> skoMC1 0.) (and (<= 0. skoSC1) (and (<= 2. skoMC1) (and (<= skoSC1 (/ 5. 4.)) (and (> (* skoSC1 (* skoMC1 (* skoMC1 (* skoMC1 2.)))) (* skoMC1 (* skoMC1 (* skoMC1 (- 2.))))) (and (<= (* skoSC1 (* skoMC1 (* skoMC1 (* skoMC1 (- 2.))))) (* skoMC1 (* skoMC1 (* skoMC1 2.)))) (<= (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (+ (- 2.) (* skoMC1 (- 12.)))))) (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (+ 1. (* skoMC1 (- 6.)))))) (* skoSC1 (+ (* skoMC1 (* skoMC1 skoMC1)) (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (/ (- 1.) 12.)))) (* skoSC1 (* skoMC1 (* skoMC1 (* skoMC1 (/ (- 1.) 12.))))))))))))) (* skoMC1 (* skoMC1 (* skoMC1 (+ 2. (* skoMC1 6.))))))))))))))))))))))))

% In GRF format:
(sequent " MetiTarski formula " (antecedent (<= (* skoSC1 (* skoMC1 (* skoMC1 (* skoMC1 (- 1.))))) (* skoMC1 (* skoMC1 skoMC1))) (> (* skoSC1 (* skoMC1 (* skoMC1 skoMC1))) (* skoMC1 (* skoMC1 (* skoMC1 (- 1.))))) (<= (* skoMC1 (* skoMC1 (* skoMC1 (- 2.)))) 0.) (> (* skoMC1 (* skoMC1 (* skoMC1 2.))) 0.) (> (* skoSC1 (+ (* skoMC1 (+ (- 1.) (* skoMC1 3.))) (* skoSC1 (+ (* skoMC1 (+ (- 2.) (* skoMC1 (- 3.)))) (* skoSC1 (+ (* skoMC1 (+ (/ 1. 6.) (* skoMC1 (- 1.)))) (* skoSC1 (* skoMC1 (/ 1. 4.))))))))) (* skoMC1 (+ (- 2.) (* skoMC1 (- 5.))))) (> (* skoSC1 (+ (* skoMC1 (+ (- 1.) (* skoMC1 3.))) (* skoSC1 (+ (* skoMC1 (+ (- 2.) (* skoMC1 (- 3.)))) (* skoSC1 (+ (* skoMC1 (* skoMC1 (- 1.))) (* skoSC1 (* skoMC1 (/ 1. 12.))))))))) (* skoMC1 (+ (- 2.) (* skoMC1 (- 5.))))) (<= (* skoSC1 (+ (* skoMC1 (+ 1. (* skoMC1 (- 3.)))) (* skoSC1 (+ (* skoMC1 (+ 2. (* skoMC1 3.))) (* skoSC1 (+ (* skoMC1 (+ (/ (- 1.) 6.) skoMC1)) (* skoSC1 (* skoMC1 (/ (- 1.) 4.))))))))) (* skoMC1 (+ 2. (* skoMC1 5.)))) (<= (* skoSC1 (+ (* skoMC1 (+ 1. (* skoMC1 (- 3.)))) (* skoSC1 (+ (* skoMC1 (+ 2. (* skoMC1 3.))) (* skoSC1 (+ (* skoMC1 skoMC1) (* skoSC1 (* skoMC1 (/ (- 1.) 12.))))))))) (* skoMC1 (+ 2. (* skoMC1 5.)))) (<= (* skoSC1 (* skoMC1 (- 1.))) skoMC1) (> (* skoSC1 skoMC1) (* skoMC1 (- 1.))) (<= 0. skoMC1) (> skoMC1 0.) (<= 0. skoSC1) (<= 2. skoMC1) (<= skoSC1 (/ 5. 4.)) (> (* skoSC1 (* skoMC1 (* skoMC1 (* skoMC1 2.)))) (* skoMC1 (* skoMC1 (* skoMC1 (- 2.))))) (<= (* skoSC1 (* skoMC1 (* skoMC1 (* skoMC1 (- 2.))))) (* skoMC1 (* skoMC1 (* skoMC1 2.))))) (succedent (> (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (+ (- 2.) (* skoMC1 (- 12.)))))) (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (+ 1. (* skoMC1 (- 6.)))))) (* skoSC1 (+ (* skoMC1 (* skoMC1 skoMC1)) (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (/ (- 1.) 12.)))) (* skoSC1 (* skoMC1 (* skoMC1 (* skoMC1 (/ (- 1.) 12.))))))))))))) (* skoMC1 (* skoMC1 (* skoMC1 (+ 2. (* skoMC1 6.))))))))
-----[end problem]-----

-----[begin problem]-----
% In Mathematica format:
Timing[Resolve[Exists[{skoSC1,skoMC1}, And[skoMC1*skoMC1*skoMC1*-2<=0,skoSC1*skoMC1*skoMC1*skoMC1>skoMC1*skoMC1*skoMC1*-1,skoMC1*skoMC1*skoMC1*-2<=0,skoMC1*skoMC1*skoMC1*2>0,skoSC1*(skoMC1*(-1+skoMC1*3)+skoSC1*(skoMC1*(-2+skoMC1*-3)+skoSC1*(skoMC1*((1/6)+skoMC1*-1)+skoSC1*skoMC1*(1/4))))>skoMC1*(-2+skoMC1*-5),skoSC1*(skoMC1*(-1+skoMC1*3)+skoSC1*(skoMC1*(-2+skoMC1*-3)+skoSC1*(skoMC1*skoMC1*-1+skoSC1*skoMC1*(1/12))))>skoMC1*(-2+skoMC1*-5),skoSC1*(skoMC1*(1+skoMC1*-3)+skoSC1*(skoMC1*(2+skoMC1*3)+skoSC1*(skoMC1*((-1/6)+skoMC1)+skoSC1*skoMC1*(-1/4))))<=skoMC1*(2+skoMC1*5),skoSC1*(skoMC1*(1+skoMC1*-3)+skoSC1*(skoMC1*(2+skoMC1*3)+skoSC1*(skoMC1*skoMC1+skoSC1*skoMC1*(-1/12))))<=skoMC1*(2+skoMC1*5),skoSC1*skoMC1*-1<=skoMC1,skoSC1*skoMC1>skoMC1*-1,0<=skoMC1,skoMC1>0,0<=skoSC1,2<=skoMC1,skoSC1<=(5/4),skoSC1*skoMC1*skoMC1*skoMC1*2>skoMC1*skoMC1*skoMC1*-2,skoSC1*skoMC1*skoMC1*skoMC1*-2<=skoMC1*skoMC1*skoMC1*2,skoSC1*(skoMC1*skoMC1*skoMC1*(-2+skoMC1*-12)+skoSC1*(skoMC1*skoMC1*skoMC1*(1+skoMC1*-6)+skoSC1*(skoMC1*skoMC1*skoMC1+skoSC1*(skoMC1*skoMC1*skoMC1*(-1/12)+skoSC1*skoMC1*skoMC1*skoMC1*(-1/12)))))<=skoMC1*skoMC1*skoMC1*(2+skoMC1*6)]], Reals]]

% In QepcadB format:
(E skoSC1) (E skoMC1) [[(skoMC1 skoMC1 skoMC1 (-2))<=0]/\[[(skoMC1 skoMC1 skoMC1 (-1))<(skoSC1 skoMC1 skoMC1 skoMC1)]/\[[(skoMC1 skoMC1 skoMC1 (-2))<=0]/\[[0<(skoMC1 skoMC1 skoMC1 (2))]/\[[(skoMC1 (-2+(skoMC1 (-5))))<(skoSC1 ((skoMC1 (-1+(skoMC1 (3))))+(skoSC1 ((skoMC1 (-2+(skoMC1 (-3))))+(skoSC1 ((skoMC1 (1/6+(skoMC1 (-1))))+(skoSC1 skoMC1 (1/4))))))))]/\[[(skoMC1 (-2+(skoMC1 (-5))))<(skoSC1 ((skoMC1 (-1+(skoMC1 (3))))+(skoSC1 ((skoMC1 (-2+(skoMC1 (-3))))+(skoSC1 ((skoMC1 skoMC1 (-1))+(skoSC1 skoMC1 (1/12))))))))]/\[[(skoSC1 ((skoMC1 (1+(skoMC1 (-3))))+(skoSC1 ((skoMC1 (2+(skoMC1 (3))))+(skoSC1 ((skoMC1 (-1/6+skoMC1))+(skoSC1 skoMC1 (-1/4))))))))<=(skoMC1 (2+(skoMC1 (5))))]/\[[(skoSC1 ((skoMC1 (1+(skoMC1 (-3))))+(skoSC1 ((skoMC1 (2+(skoMC1 (3))))+(skoSC1 ((skoMC1 skoMC1)+(skoSC1 skoMC1 (-1/12))))))))<=(skoMC1 (2+(skoMC1 (5))))]/\[[(skoSC1 skoMC1 (-1))<=skoMC1]/\[[(skoMC1 (-1))<(skoSC1 skoMC1)]/\[[0<=skoMC1]/\[[0<skoMC1]/\[[0<=skoSC1]/\[[2<=skoMC1]/\[[skoSC1<=5/4]/\[[(skoMC1 skoMC1 skoMC1 (-2))<(skoSC1 skoMC1 skoMC1 skoMC1 (2))]/\[[(skoSC1 skoMC1 skoMC1 skoMC1 (-2))<=(skoMC1 skoMC1 skoMC1 (2))]/\[(skoSC1 ((skoMC1 skoMC1 skoMC1 (-2+(skoMC1 (-12))))+(skoSC1 ((skoMC1 skoMC1 skoMC1 (1+(skoMC1 (-6))))+(skoSC1 ((skoMC1 skoMC1 skoMC1)+(skoSC1 ((skoMC1 skoMC1 skoMC1 (-1/12))+(skoSC1 skoMC1 skoMC1 skoMC1 (-1/12))))))))))<=(skoMC1 skoMC1 skoMC1 (2+(skoMC1 (6))))]]]]]]]]]]]]]]]]]].

% In SMTLib2 format:
(declare-fun skoSC1 () Real) (declare-fun skoMC1 () Real) (assert (and (<= (* skoMC1 (* skoMC1 (* skoMC1 (- 2.)))) 0.) (and (> (* skoSC1 (* skoMC1 (* skoMC1 skoMC1))) (* skoMC1 (* skoMC1 (* skoMC1 (- 1.))))) (and (<= (* skoMC1 (* skoMC1 (* skoMC1 (- 2.)))) 0.) (and (> (* skoMC1 (* skoMC1 (* skoMC1 2.))) 0.) (and (> (* skoSC1 (+ (* skoMC1 (+ (- 1.) (* skoMC1 3.))) (* skoSC1 (+ (* skoMC1 (+ (- 2.) (* skoMC1 (- 3.)))) (* skoSC1 (+ (* skoMC1 (+ (/ 1. 6.) (* skoMC1 (- 1.)))) (* skoSC1 (* skoMC1 (/ 1. 4.))))))))) (* skoMC1 (+ (- 2.) (* skoMC1 (- 5.))))) (and (> (* skoSC1 (+ (* skoMC1 (+ (- 1.) (* skoMC1 3.))) (* skoSC1 (+ (* skoMC1 (+ (- 2.) (* skoMC1 (- 3.)))) (* skoSC1 (+ (* skoMC1 (* skoMC1 (- 1.))) (* skoSC1 (* skoMC1 (/ 1. 12.))))))))) (* skoMC1 (+ (- 2.) (* skoMC1 (- 5.))))) (and (<= (* skoSC1 (+ (* skoMC1 (+ 1. (* skoMC1 (- 3.)))) (* skoSC1 (+ (* skoMC1 (+ 2. (* skoMC1 3.))) (* skoSC1 (+ (* skoMC1 (+ (/ (- 1.) 6.) skoMC1)) (* skoSC1 (* skoMC1 (/ (- 1.) 4.))))))))) (* skoMC1 (+ 2. (* skoMC1 5.)))) (and (<= (* skoSC1 (+ (* skoMC1 (+ 1. (* skoMC1 (- 3.)))) (* skoSC1 (+ (* skoMC1 (+ 2. (* skoMC1 3.))) (* skoSC1 (+ (* skoMC1 skoMC1) (* skoSC1 (* skoMC1 (/ (- 1.) 12.))))))))) (* skoMC1 (+ 2. (* skoMC1 5.)))) (and (<= (* skoSC1 (* skoMC1 (- 1.))) skoMC1) (and (> (* skoSC1 skoMC1) (* skoMC1 (- 1.))) (and (<= 0. skoMC1) (and (> skoMC1 0.) (and (<= 0. skoSC1) (and (<= 2. skoMC1) (and (<= skoSC1 (/ 5. 4.)) (and (> (* skoSC1 (* skoMC1 (* skoMC1 (* skoMC1 2.)))) (* skoMC1 (* skoMC1 (* skoMC1 (- 2.))))) (and (<= (* skoSC1 (* skoMC1 (* skoMC1 (* skoMC1 (- 2.))))) (* skoMC1 (* skoMC1 (* skoMC1 2.)))) (<= (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (+ (- 2.) (* skoMC1 (- 12.)))))) (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (+ 1. (* skoMC1 (- 6.)))))) (* skoSC1 (+ (* skoMC1 (* skoMC1 skoMC1)) (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (/ (- 1.) 12.)))) (* skoSC1 (* skoMC1 (* skoMC1 (* skoMC1 (/ (- 1.) 12.))))))))))))) (* skoMC1 (* skoMC1 (* skoMC1 (+ 2. (* skoMC1 6.))))))))))))))))))))))))

% In GRF format:
(sequent " MetiTarski formula " (antecedent (<= (* skoMC1 (* skoMC1 (* skoMC1 (- 2.)))) 0.) (> (* skoSC1 (* skoMC1 (* skoMC1 skoMC1))) (* skoMC1 (* skoMC1 (* skoMC1 (- 1.))))) (<= (* skoMC1 (* skoMC1 (* skoMC1 (- 2.)))) 0.) (> (* skoMC1 (* skoMC1 (* skoMC1 2.))) 0.) (> (* skoSC1 (+ (* skoMC1 (+ (- 1.) (* skoMC1 3.))) (* skoSC1 (+ (* skoMC1 (+ (- 2.) (* skoMC1 (- 3.)))) (* skoSC1 (+ (* skoMC1 (+ (/ 1. 6.) (* skoMC1 (- 1.)))) (* skoSC1 (* skoMC1 (/ 1. 4.))))))))) (* skoMC1 (+ (- 2.) (* skoMC1 (- 5.))))) (> (* skoSC1 (+ (* skoMC1 (+ (- 1.) (* skoMC1 3.))) (* skoSC1 (+ (* skoMC1 (+ (- 2.) (* skoMC1 (- 3.)))) (* skoSC1 (+ (* skoMC1 (* skoMC1 (- 1.))) (* skoSC1 (* skoMC1 (/ 1. 12.))))))))) (* skoMC1 (+ (- 2.) (* skoMC1 (- 5.))))) (<= (* skoSC1 (+ (* skoMC1 (+ 1. (* skoMC1 (- 3.)))) (* skoSC1 (+ (* skoMC1 (+ 2. (* skoMC1 3.))) (* skoSC1 (+ (* skoMC1 (+ (/ (- 1.) 6.) skoMC1)) (* skoSC1 (* skoMC1 (/ (- 1.) 4.))))))))) (* skoMC1 (+ 2. (* skoMC1 5.)))) (<= (* skoSC1 (+ (* skoMC1 (+ 1. (* skoMC1 (- 3.)))) (* skoSC1 (+ (* skoMC1 (+ 2. (* skoMC1 3.))) (* skoSC1 (+ (* skoMC1 skoMC1) (* skoSC1 (* skoMC1 (/ (- 1.) 12.))))))))) (* skoMC1 (+ 2. (* skoMC1 5.)))) (<= (* skoSC1 (* skoMC1 (- 1.))) skoMC1) (> (* skoSC1 skoMC1) (* skoMC1 (- 1.))) (<= 0. skoMC1) (> skoMC1 0.) (<= 0. skoSC1) (<= 2. skoMC1) (<= skoSC1 (/ 5. 4.)) (> (* skoSC1 (* skoMC1 (* skoMC1 (* skoMC1 2.)))) (* skoMC1 (* skoMC1 (* skoMC1 (- 2.))))) (<= (* skoSC1 (* skoMC1 (* skoMC1 (* skoMC1 (- 2.))))) (* skoMC1 (* skoMC1 (* skoMC1 2.))))) (succedent (> (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (+ (- 2.) (* skoMC1 (- 12.)))))) (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (+ 1. (* skoMC1 (- 6.)))))) (* skoSC1 (+ (* skoMC1 (* skoMC1 skoMC1)) (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (/ (- 1.) 12.)))) (* skoSC1 (* skoMC1 (* skoMC1 (* skoMC1 (/ (- 1.) 12.))))))))))))) (* skoMC1 (* skoMC1 (* skoMC1 (+ 2. (* skoMC1 6.))))))))
-----[end problem]-----

-----[begin problem]-----
% In Mathematica format:
Timing[Resolve[Exists[{skoSC1,skoMC1}, And[skoMC1*skoMC1*skoMC1*2>0,skoSC1*(skoMC1*skoMC1*skoMC1*(-1+skoMC1*3)+skoSC1*(skoMC1*skoMC1*skoMC1*(-2+skoMC1*-3)+skoSC1*(skoMC1*skoMC1*skoMC1*((1/6)+skoMC1*-1)+skoSC1*skoMC1*skoMC1*skoMC1*(1/4))))>skoMC1*skoMC1*skoMC1*(-2+skoMC1*-5),skoSC1*skoMC1*skoMC1*skoMC1>skoMC1*skoMC1*skoMC1*-1,skoMC1*skoMC1*skoMC1*-2<=0,skoMC1*skoMC1*skoMC1*2>0,skoSC1*(skoMC1*(-1+skoMC1*3)+skoSC1*(skoMC1*(-2+skoMC1*-3)+skoSC1*(skoMC1*((1/6)+skoMC1*-1)+skoSC1*skoMC1*(1/4))))>skoMC1*(-2+skoMC1*-5),skoSC1*(skoMC1*(-1+skoMC1*3)+skoSC1*(skoMC1*(-2+skoMC1*-3)+skoSC1*(skoMC1*skoMC1*-1+skoSC1*skoMC1*(1/12))))>skoMC1*(-2+skoMC1*-5),skoSC1*(skoMC1*(1+skoMC1*-3)+skoSC1*(skoMC1*(2+skoMC1*3)+skoSC1*(skoMC1*((-1/6)+skoMC1)+skoSC1*skoMC1*(-1/4))))<=skoMC1*(2+skoMC1*5),skoSC1*(skoMC1*(1+skoMC1*-3)+skoSC1*(skoMC1*(2+skoMC1*3)+skoSC1*(skoMC1*skoMC1+skoSC1*skoMC1*(-1/12))))<=skoMC1*(2+skoMC1*5),skoSC1*skoMC1*-1<=skoMC1,skoSC1*skoMC1>skoMC1*-1,0<=skoMC1,skoMC1>0,0<=skoSC1,2<=skoMC1,skoSC1<=(5/4),skoSC1*skoMC1*skoMC1*skoMC1*2>skoMC1*skoMC1*skoMC1*-2,skoSC1*skoMC1*skoMC1*skoMC1*-2<=skoMC1*skoMC1*skoMC1*2,skoSC1*(skoMC1*skoMC1*skoMC1*(-2+skoMC1*-12)+skoSC1*(skoMC1*skoMC1*skoMC1*(1+skoMC1*-6)+skoSC1*(skoMC1*skoMC1*skoMC1+skoSC1*(skoMC1*skoMC1*skoMC1*(-1/12)+skoSC1*skoMC1*skoMC1*skoMC1*(-1/12)))))<=skoMC1*skoMC1*skoMC1*(2+skoMC1*6)]], Reals]]

% In QepcadB format:
(E skoSC1) (E skoMC1) [[0<(skoMC1 skoMC1 skoMC1 (2))]/\[[(skoMC1 skoMC1 skoMC1 (-2+(skoMC1 (-5))))<(skoSC1 ((skoMC1 skoMC1 skoMC1 (-1+(skoMC1 (3))))+(skoSC1 ((skoMC1 skoMC1 skoMC1 (-2+(skoMC1 (-3))))+(skoSC1 ((skoMC1 skoMC1 skoMC1 (1/6+(skoMC1 (-1))))+(skoSC1 skoMC1 skoMC1 skoMC1 (1/4))))))))]/\[[(skoMC1 skoMC1 skoMC1 (-1))<(skoSC1 skoMC1 skoMC1 skoMC1)]/\[[(skoMC1 skoMC1 skoMC1 (-2))<=0]/\[[0<(skoMC1 skoMC1 skoMC1 (2))]/\[[(skoMC1 (-2+(skoMC1 (-5))))<(skoSC1 ((skoMC1 (-1+(skoMC1 (3))))+(skoSC1 ((skoMC1 (-2+(skoMC1 (-3))))+(skoSC1 ((skoMC1 (1/6+(skoMC1 (-1))))+(skoSC1 skoMC1 (1/4))))))))]/\[[(skoMC1 (-2+(skoMC1 (-5))))<(skoSC1 ((skoMC1 (-1+(skoMC1 (3))))+(skoSC1 ((skoMC1 (-2+(skoMC1 (-3))))+(skoSC1 ((skoMC1 skoMC1 (-1))+(skoSC1 skoMC1 (1/12))))))))]/\[[(skoSC1 ((skoMC1 (1+(skoMC1 (-3))))+(skoSC1 ((skoMC1 (2+(skoMC1 (3))))+(skoSC1 ((skoMC1 (-1/6+skoMC1))+(skoSC1 skoMC1 (-1/4))))))))<=(skoMC1 (2+(skoMC1 (5))))]/\[[(skoSC1 ((skoMC1 (1+(skoMC1 (-3))))+(skoSC1 ((skoMC1 (2+(skoMC1 (3))))+(skoSC1 ((skoMC1 skoMC1)+(skoSC1 skoMC1 (-1/12))))))))<=(skoMC1 (2+(skoMC1 (5))))]/\[[(skoSC1 skoMC1 (-1))<=skoMC1]/\[[(skoMC1 (-1))<(skoSC1 skoMC1)]/\[[0<=skoMC1]/\[[0<skoMC1]/\[[0<=skoSC1]/\[[2<=skoMC1]/\[[skoSC1<=5/4]/\[[(skoMC1 skoMC1 skoMC1 (-2))<(skoSC1 skoMC1 skoMC1 skoMC1 (2))]/\[[(skoSC1 skoMC1 skoMC1 skoMC1 (-2))<=(skoMC1 skoMC1 skoMC1 (2))]/\[(skoSC1 ((skoMC1 skoMC1 skoMC1 (-2+(skoMC1 (-12))))+(skoSC1 ((skoMC1 skoMC1 skoMC1 (1+(skoMC1 (-6))))+(skoSC1 ((skoMC1 skoMC1 skoMC1)+(skoSC1 ((skoMC1 skoMC1 skoMC1 (-1/12))+(skoSC1 skoMC1 skoMC1 skoMC1 (-1/12))))))))))<=(skoMC1 skoMC1 skoMC1 (2+(skoMC1 (6))))]]]]]]]]]]]]]]]]]]].

% In SMTLib2 format:
(declare-fun skoSC1 () Real) (declare-fun skoMC1 () Real) (assert (and (> (* skoMC1 (* skoMC1 (* skoMC1 2.))) 0.) (and (> (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (+ (- 1.) (* skoMC1 3.))))) (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (+ (- 2.) (* skoMC1 (- 3.)))))) (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (+ (/ 1. 6.) (* skoMC1 (- 1.)))))) (* skoSC1 (* skoMC1 (* skoMC1 (* skoMC1 (/ 1. 4.))))))))))) (* skoMC1 (* skoMC1 (* skoMC1 (+ (- 2.) (* skoMC1 (- 5.))))))) (and (> (* skoSC1 (* skoMC1 (* skoMC1 skoMC1))) (* skoMC1 (* skoMC1 (* skoMC1 (- 1.))))) (and (<= (* skoMC1 (* skoMC1 (* skoMC1 (- 2.)))) 0.) (and (> (* skoMC1 (* skoMC1 (* skoMC1 2.))) 0.) (and (> (* skoSC1 (+ (* skoMC1 (+ (- 1.) (* skoMC1 3.))) (* skoSC1 (+ (* skoMC1 (+ (- 2.) (* skoMC1 (- 3.)))) (* skoSC1 (+ (* skoMC1 (+ (/ 1. 6.) (* skoMC1 (- 1.)))) (* skoSC1 (* skoMC1 (/ 1. 4.))))))))) (* skoMC1 (+ (- 2.) (* skoMC1 (- 5.))))) (and (> (* skoSC1 (+ (* skoMC1 (+ (- 1.) (* skoMC1 3.))) (* skoSC1 (+ (* skoMC1 (+ (- 2.) (* skoMC1 (- 3.)))) (* skoSC1 (+ (* skoMC1 (* skoMC1 (- 1.))) (* skoSC1 (* skoMC1 (/ 1. 12.))))))))) (* skoMC1 (+ (- 2.) (* skoMC1 (- 5.))))) (and (<= (* skoSC1 (+ (* skoMC1 (+ 1. (* skoMC1 (- 3.)))) (* skoSC1 (+ (* skoMC1 (+ 2. (* skoMC1 3.))) (* skoSC1 (+ (* skoMC1 (+ (/ (- 1.) 6.) skoMC1)) (* skoSC1 (* skoMC1 (/ (- 1.) 4.))))))))) (* skoMC1 (+ 2. (* skoMC1 5.)))) (and (<= (* skoSC1 (+ (* skoMC1 (+ 1. (* skoMC1 (- 3.)))) (* skoSC1 (+ (* skoMC1 (+ 2. (* skoMC1 3.))) (* skoSC1 (+ (* skoMC1 skoMC1) (* skoSC1 (* skoMC1 (/ (- 1.) 12.))))))))) (* skoMC1 (+ 2. (* skoMC1 5.)))) (and (<= (* skoSC1 (* skoMC1 (- 1.))) skoMC1) (and (> (* skoSC1 skoMC1) (* skoMC1 (- 1.))) (and (<= 0. skoMC1) (and (> skoMC1 0.) (and (<= 0. skoSC1) (and (<= 2. skoMC1) (and (<= skoSC1 (/ 5. 4.)) (and (> (* skoSC1 (* skoMC1 (* skoMC1 (* skoMC1 2.)))) (* skoMC1 (* skoMC1 (* skoMC1 (- 2.))))) (and (<= (* skoSC1 (* skoMC1 (* skoMC1 (* skoMC1 (- 2.))))) (* skoMC1 (* skoMC1 (* skoMC1 2.)))) (<= (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (+ (- 2.) (* skoMC1 (- 12.)))))) (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (+ 1. (* skoMC1 (- 6.)))))) (* skoSC1 (+ (* skoMC1 (* skoMC1 skoMC1)) (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (/ (- 1.) 12.)))) (* skoSC1 (* skoMC1 (* skoMC1 (* skoMC1 (/ (- 1.) 12.))))))))))))) (* skoMC1 (* skoMC1 (* skoMC1 (+ 2. (* skoMC1 6.)))))))))))))))))))))))))

% In GRF format:
(sequent " MetiTarski formula " (antecedent (> (* skoMC1 (* skoMC1 (* skoMC1 2.))) 0.) (> (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (+ (- 1.) (* skoMC1 3.))))) (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (+ (- 2.) (* skoMC1 (- 3.)))))) (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (+ (/ 1. 6.) (* skoMC1 (- 1.)))))) (* skoSC1 (* skoMC1 (* skoMC1 (* skoMC1 (/ 1. 4.))))))))))) (* skoMC1 (* skoMC1 (* skoMC1 (+ (- 2.) (* skoMC1 (- 5.))))))) (> (* skoSC1 (* skoMC1 (* skoMC1 skoMC1))) (* skoMC1 (* skoMC1 (* skoMC1 (- 1.))))) (<= (* skoMC1 (* skoMC1 (* skoMC1 (- 2.)))) 0.) (> (* skoMC1 (* skoMC1 (* skoMC1 2.))) 0.) (> (* skoSC1 (+ (* skoMC1 (+ (- 1.) (* skoMC1 3.))) (* skoSC1 (+ (* skoMC1 (+ (- 2.) (* skoMC1 (- 3.)))) (* skoSC1 (+ (* skoMC1 (+ (/ 1. 6.) (* skoMC1 (- 1.)))) (* skoSC1 (* skoMC1 (/ 1. 4.))))))))) (* skoMC1 (+ (- 2.) (* skoMC1 (- 5.))))) (> (* skoSC1 (+ (* skoMC1 (+ (- 1.) (* skoMC1 3.))) (* skoSC1 (+ (* skoMC1 (+ (- 2.) (* skoMC1 (- 3.)))) (* skoSC1 (+ (* skoMC1 (* skoMC1 (- 1.))) (* skoSC1 (* skoMC1 (/ 1. 12.))))))))) (* skoMC1 (+ (- 2.) (* skoMC1 (- 5.))))) (<= (* skoSC1 (+ (* skoMC1 (+ 1. (* skoMC1 (- 3.)))) (* skoSC1 (+ (* skoMC1 (+ 2. (* skoMC1 3.))) (* skoSC1 (+ (* skoMC1 (+ (/ (- 1.) 6.) skoMC1)) (* skoSC1 (* skoMC1 (/ (- 1.) 4.))))))))) (* skoMC1 (+ 2. (* skoMC1 5.)))) (<= (* skoSC1 (+ (* skoMC1 (+ 1. (* skoMC1 (- 3.)))) (* skoSC1 (+ (* skoMC1 (+ 2. (* skoMC1 3.))) (* skoSC1 (+ (* skoMC1 skoMC1) (* skoSC1 (* skoMC1 (/ (- 1.) 12.))))))))) (* skoMC1 (+ 2. (* skoMC1 5.)))) (<= (* skoSC1 (* skoMC1 (- 1.))) skoMC1) (> (* skoSC1 skoMC1) (* skoMC1 (- 1.))) (<= 0. skoMC1) (> skoMC1 0.) (<= 0. skoSC1) (<= 2. skoMC1) (<= skoSC1 (/ 5. 4.)) (> (* skoSC1 (* skoMC1 (* skoMC1 (* skoMC1 2.)))) (* skoMC1 (* skoMC1 (* skoMC1 (- 2.))))) (<= (* skoSC1 (* skoMC1 (* skoMC1 (* skoMC1 (- 2.))))) (* skoMC1 (* skoMC1 (* skoMC1 2.))))) (succedent (> (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (+ (- 2.) (* skoMC1 (- 12.)))))) (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (+ 1. (* skoMC1 (- 6.)))))) (* skoSC1 (+ (* skoMC1 (* skoMC1 skoMC1)) (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (/ (- 1.) 12.)))) (* skoSC1 (* skoMC1 (* skoMC1 (* skoMC1 (/ (- 1.) 12.))))))))))))) (* skoMC1 (* skoMC1 (* skoMC1 (+ 2. (* skoMC1 6.))))))))
-----[end problem]-----

-----[begin problem]-----
% In Mathematica format:
Timing[Resolve[Exists[{skoSC1,skoMC1}, And[skoMC1*skoMC1*skoMC1*2<=0,skoSC1*(skoMC1*skoMC1*skoMC1*(-1+skoMC1*3)+skoSC1*(skoMC1*skoMC1*skoMC1*(-2+skoMC1*-3)+skoSC1*(skoMC1*skoMC1*skoMC1*((1/6)+skoMC1*-1)+skoSC1*skoMC1*skoMC1*skoMC1*(1/4))))<=skoMC1*skoMC1*skoMC1*(-2+skoMC1*-5),skoSC1*skoMC1*skoMC1*skoMC1>skoMC1*skoMC1*skoMC1*-1,skoMC1*skoMC1*skoMC1*-2<=0,skoMC1*skoMC1*skoMC1*2>0,skoSC1*(skoMC1*(-1+skoMC1*3)+skoSC1*(skoMC1*(-2+skoMC1*-3)+skoSC1*(skoMC1*((1/6)+skoMC1*-1)+skoSC1*skoMC1*(1/4))))>skoMC1*(-2+skoMC1*-5),skoSC1*(skoMC1*(-1+skoMC1*3)+skoSC1*(skoMC1*(-2+skoMC1*-3)+skoSC1*(skoMC1*skoMC1*-1+skoSC1*skoMC1*(1/12))))>skoMC1*(-2+skoMC1*-5),skoSC1*(skoMC1*(1+skoMC1*-3)+skoSC1*(skoMC1*(2+skoMC1*3)+skoSC1*(skoMC1*((-1/6)+skoMC1)+skoSC1*skoMC1*(-1/4))))<=skoMC1*(2+skoMC1*5),skoSC1*(skoMC1*(1+skoMC1*-3)+skoSC1*(skoMC1*(2+skoMC1*3)+skoSC1*(skoMC1*skoMC1+skoSC1*skoMC1*(-1/12))))<=skoMC1*(2+skoMC1*5),skoSC1*skoMC1*-1<=skoMC1,skoSC1*skoMC1>skoMC1*-1,0<=skoMC1,skoMC1>0,0<=skoSC1,2<=skoMC1,skoSC1<=(5/4),skoSC1*skoMC1*skoMC1*skoMC1*2>skoMC1*skoMC1*skoMC1*-2,skoSC1*skoMC1*skoMC1*skoMC1*-2<=skoMC1*skoMC1*skoMC1*2,skoSC1*(skoMC1*skoMC1*skoMC1*(-2+skoMC1*-12)+skoSC1*(skoMC1*skoMC1*skoMC1*(1+skoMC1*-6)+skoSC1*(skoMC1*skoMC1*skoMC1+skoSC1*(skoMC1*skoMC1*skoMC1*(-1/12)+skoSC1*skoMC1*skoMC1*skoMC1*(-1/12)))))<=skoMC1*skoMC1*skoMC1*(2+skoMC1*6)]], Reals]]

% In QepcadB format:
(E skoSC1) (E skoMC1) [[(skoMC1 skoMC1 skoMC1 (2))<=0]/\[[(skoSC1 ((skoMC1 skoMC1 skoMC1 (-1+(skoMC1 (3))))+(skoSC1 ((skoMC1 skoMC1 skoMC1 (-2+(skoMC1 (-3))))+(skoSC1 ((skoMC1 skoMC1 skoMC1 (1/6+(skoMC1 (-1))))+(skoSC1 skoMC1 skoMC1 skoMC1 (1/4))))))))<=(skoMC1 skoMC1 skoMC1 (-2+(skoMC1 (-5))))]/\[[(skoMC1 skoMC1 skoMC1 (-1))<(skoSC1 skoMC1 skoMC1 skoMC1)]/\[[(skoMC1 skoMC1 skoMC1 (-2))<=0]/\[[0<(skoMC1 skoMC1 skoMC1 (2))]/\[[(skoMC1 (-2+(skoMC1 (-5))))<(skoSC1 ((skoMC1 (-1+(skoMC1 (3))))+(skoSC1 ((skoMC1 (-2+(skoMC1 (-3))))+(skoSC1 ((skoMC1 (1/6+(skoMC1 (-1))))+(skoSC1 skoMC1 (1/4))))))))]/\[[(skoMC1 (-2+(skoMC1 (-5))))<(skoSC1 ((skoMC1 (-1+(skoMC1 (3))))+(skoSC1 ((skoMC1 (-2+(skoMC1 (-3))))+(skoSC1 ((skoMC1 skoMC1 (-1))+(skoSC1 skoMC1 (1/12))))))))]/\[[(skoSC1 ((skoMC1 (1+(skoMC1 (-3))))+(skoSC1 ((skoMC1 (2+(skoMC1 (3))))+(skoSC1 ((skoMC1 (-1/6+skoMC1))+(skoSC1 skoMC1 (-1/4))))))))<=(skoMC1 (2+(skoMC1 (5))))]/\[[(skoSC1 ((skoMC1 (1+(skoMC1 (-3))))+(skoSC1 ((skoMC1 (2+(skoMC1 (3))))+(skoSC1 ((skoMC1 skoMC1)+(skoSC1 skoMC1 (-1/12))))))))<=(skoMC1 (2+(skoMC1 (5))))]/\[[(skoSC1 skoMC1 (-1))<=skoMC1]/\[[(skoMC1 (-1))<(skoSC1 skoMC1)]/\[[0<=skoMC1]/\[[0<skoMC1]/\[[0<=skoSC1]/\[[2<=skoMC1]/\[[skoSC1<=5/4]/\[[(skoMC1 skoMC1 skoMC1 (-2))<(skoSC1 skoMC1 skoMC1 skoMC1 (2))]/\[[(skoSC1 skoMC1 skoMC1 skoMC1 (-2))<=(skoMC1 skoMC1 skoMC1 (2))]/\[(skoSC1 ((skoMC1 skoMC1 skoMC1 (-2+(skoMC1 (-12))))+(skoSC1 ((skoMC1 skoMC1 skoMC1 (1+(skoMC1 (-6))))+(skoSC1 ((skoMC1 skoMC1 skoMC1)+(skoSC1 ((skoMC1 skoMC1 skoMC1 (-1/12))+(skoSC1 skoMC1 skoMC1 skoMC1 (-1/12))))))))))<=(skoMC1 skoMC1 skoMC1 (2+(skoMC1 (6))))]]]]]]]]]]]]]]]]]]].

% In SMTLib2 format:
(declare-fun skoSC1 () Real) (declare-fun skoMC1 () Real) (assert (and (<= (* skoMC1 (* skoMC1 (* skoMC1 2.))) 0.) (and (<= (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (+ (- 1.) (* skoMC1 3.))))) (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (+ (- 2.) (* skoMC1 (- 3.)))))) (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (+ (/ 1. 6.) (* skoMC1 (- 1.)))))) (* skoSC1 (* skoMC1 (* skoMC1 (* skoMC1 (/ 1. 4.))))))))))) (* skoMC1 (* skoMC1 (* skoMC1 (+ (- 2.) (* skoMC1 (- 5.))))))) (and (> (* skoSC1 (* skoMC1 (* skoMC1 skoMC1))) (* skoMC1 (* skoMC1 (* skoMC1 (- 1.))))) (and (<= (* skoMC1 (* skoMC1 (* skoMC1 (- 2.)))) 0.) (and (> (* skoMC1 (* skoMC1 (* skoMC1 2.))) 0.) (and (> (* skoSC1 (+ (* skoMC1 (+ (- 1.) (* skoMC1 3.))) (* skoSC1 (+ (* skoMC1 (+ (- 2.) (* skoMC1 (- 3.)))) (* skoSC1 (+ (* skoMC1 (+ (/ 1. 6.) (* skoMC1 (- 1.)))) (* skoSC1 (* skoMC1 (/ 1. 4.))))))))) (* skoMC1 (+ (- 2.) (* skoMC1 (- 5.))))) (and (> (* skoSC1 (+ (* skoMC1 (+ (- 1.) (* skoMC1 3.))) (* skoSC1 (+ (* skoMC1 (+ (- 2.) (* skoMC1 (- 3.)))) (* skoSC1 (+ (* skoMC1 (* skoMC1 (- 1.))) (* skoSC1 (* skoMC1 (/ 1. 12.))))))))) (* skoMC1 (+ (- 2.) (* skoMC1 (- 5.))))) (and (<= (* skoSC1 (+ (* skoMC1 (+ 1. (* skoMC1 (- 3.)))) (* skoSC1 (+ (* skoMC1 (+ 2. (* skoMC1 3.))) (* skoSC1 (+ (* skoMC1 (+ (/ (- 1.) 6.) skoMC1)) (* skoSC1 (* skoMC1 (/ (- 1.) 4.))))))))) (* skoMC1 (+ 2. (* skoMC1 5.)))) (and (<= (* skoSC1 (+ (* skoMC1 (+ 1. (* skoMC1 (- 3.)))) (* skoSC1 (+ (* skoMC1 (+ 2. (* skoMC1 3.))) (* skoSC1 (+ (* skoMC1 skoMC1) (* skoSC1 (* skoMC1 (/ (- 1.) 12.))))))))) (* skoMC1 (+ 2. (* skoMC1 5.)))) (and (<= (* skoSC1 (* skoMC1 (- 1.))) skoMC1) (and (> (* skoSC1 skoMC1) (* skoMC1 (- 1.))) (and (<= 0. skoMC1) (and (> skoMC1 0.) (and (<= 0. skoSC1) (and (<= 2. skoMC1) (and (<= skoSC1 (/ 5. 4.)) (and (> (* skoSC1 (* skoMC1 (* skoMC1 (* skoMC1 2.)))) (* skoMC1 (* skoMC1 (* skoMC1 (- 2.))))) (and (<= (* skoSC1 (* skoMC1 (* skoMC1 (* skoMC1 (- 2.))))) (* skoMC1 (* skoMC1 (* skoMC1 2.)))) (<= (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (+ (- 2.) (* skoMC1 (- 12.)))))) (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (+ 1. (* skoMC1 (- 6.)))))) (* skoSC1 (+ (* skoMC1 (* skoMC1 skoMC1)) (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (/ (- 1.) 12.)))) (* skoSC1 (* skoMC1 (* skoMC1 (* skoMC1 (/ (- 1.) 12.))))))))))))) (* skoMC1 (* skoMC1 (* skoMC1 (+ 2. (* skoMC1 6.)))))))))))))))))))))))))

% In GRF format:
(sequent " MetiTarski formula " (antecedent (<= (* skoMC1 (* skoMC1 (* skoMC1 2.))) 0.) (<= (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (+ (- 1.) (* skoMC1 3.))))) (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (+ (- 2.) (* skoMC1 (- 3.)))))) (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (+ (/ 1. 6.) (* skoMC1 (- 1.)))))) (* skoSC1 (* skoMC1 (* skoMC1 (* skoMC1 (/ 1. 4.))))))))))) (* skoMC1 (* skoMC1 (* skoMC1 (+ (- 2.) (* skoMC1 (- 5.))))))) (> (* skoSC1 (* skoMC1 (* skoMC1 skoMC1))) (* skoMC1 (* skoMC1 (* skoMC1 (- 1.))))) (<= (* skoMC1 (* skoMC1 (* skoMC1 (- 2.)))) 0.) (> (* skoMC1 (* skoMC1 (* skoMC1 2.))) 0.) (> (* skoSC1 (+ (* skoMC1 (+ (- 1.) (* skoMC1 3.))) (* skoSC1 (+ (* skoMC1 (+ (- 2.) (* skoMC1 (- 3.)))) (* skoSC1 (+ (* skoMC1 (+ (/ 1. 6.) (* skoMC1 (- 1.)))) (* skoSC1 (* skoMC1 (/ 1. 4.))))))))) (* skoMC1 (+ (- 2.) (* skoMC1 (- 5.))))) (> (* skoSC1 (+ (* skoMC1 (+ (- 1.) (* skoMC1 3.))) (* skoSC1 (+ (* skoMC1 (+ (- 2.) (* skoMC1 (- 3.)))) (* skoSC1 (+ (* skoMC1 (* skoMC1 (- 1.))) (* skoSC1 (* skoMC1 (/ 1. 12.))))))))) (* skoMC1 (+ (- 2.) (* skoMC1 (- 5.))))) (<= (* skoSC1 (+ (* skoMC1 (+ 1. (* skoMC1 (- 3.)))) (* skoSC1 (+ (* skoMC1 (+ 2. (* skoMC1 3.))) (* skoSC1 (+ (* skoMC1 (+ (/ (- 1.) 6.) skoMC1)) (* skoSC1 (* skoMC1 (/ (- 1.) 4.))))))))) (* skoMC1 (+ 2. (* skoMC1 5.)))) (<= (* skoSC1 (+ (* skoMC1 (+ 1. (* skoMC1 (- 3.)))) (* skoSC1 (+ (* skoMC1 (+ 2. (* skoMC1 3.))) (* skoSC1 (+ (* skoMC1 skoMC1) (* skoSC1 (* skoMC1 (/ (- 1.) 12.))))))))) (* skoMC1 (+ 2. (* skoMC1 5.)))) (<= (* skoSC1 (* skoMC1 (- 1.))) skoMC1) (> (* skoSC1 skoMC1) (* skoMC1 (- 1.))) (<= 0. skoMC1) (> skoMC1 0.) (<= 0. skoSC1) (<= 2. skoMC1) (<= skoSC1 (/ 5. 4.)) (> (* skoSC1 (* skoMC1 (* skoMC1 (* skoMC1 2.)))) (* skoMC1 (* skoMC1 (* skoMC1 (- 2.))))) (<= (* skoSC1 (* skoMC1 (* skoMC1 (* skoMC1 (- 2.))))) (* skoMC1 (* skoMC1 (* skoMC1 2.))))) (succedent (> (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (+ (- 2.) (* skoMC1 (- 12.)))))) (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (+ 1. (* skoMC1 (- 6.)))))) (* skoSC1 (+ (* skoMC1 (* skoMC1 skoMC1)) (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (/ (- 1.) 12.)))) (* skoSC1 (* skoMC1 (* skoMC1 (* skoMC1 (/ (- 1.) 12.))))))))))))) (* skoMC1 (* skoMC1 (* skoMC1 (+ 2. (* skoMC1 6.))))))))
-----[end problem]-----

-----[begin problem]-----
% In Mathematica format:
Timing[Resolve[Exists[{skoSC1,skoMC1}, And[skoMC1*skoMC1*skoMC1*-2<=0,skoSC1*skoMC1*skoMC1*skoMC1>skoMC1*skoMC1*skoMC1*-1,skoMC1*skoMC1*skoMC1*-2<=0,skoMC1*skoMC1*skoMC1*2>0,skoSC1*(skoMC1*(-1+skoMC1*3)+skoSC1*(skoMC1*(-2+skoMC1*-3)+skoSC1*(skoMC1*((1/6)+skoMC1*-1)+skoSC1*skoMC1*(1/4))))>skoMC1*(-2+skoMC1*-5),skoSC1*(skoMC1*(-1+skoMC1*3)+skoSC1*(skoMC1*(-2+skoMC1*-3)+skoSC1*(skoMC1*skoMC1*-1+skoSC1*skoMC1*(1/12))))>skoMC1*(-2+skoMC1*-5),skoSC1*(skoMC1*(1+skoMC1*-3)+skoSC1*(skoMC1*(2+skoMC1*3)+skoSC1*(skoMC1*((-1/6)+skoMC1)+skoSC1*skoMC1*(-1/4))))<=skoMC1*(2+skoMC1*5),skoSC1*(skoMC1*(1+skoMC1*-3)+skoSC1*(skoMC1*(2+skoMC1*3)+skoSC1*(skoMC1*skoMC1+skoSC1*skoMC1*(-1/12))))<=skoMC1*(2+skoMC1*5),skoSC1*skoMC1*-1<=skoMC1,skoSC1*skoMC1>skoMC1*-1,0<=skoMC1,skoMC1>0,0<=skoSC1,2<=skoMC1,skoSC1<=(5/4),skoSC1*skoMC1*skoMC1*skoMC1*2>skoMC1*skoMC1*skoMC1*-2,skoSC1*skoMC1*skoMC1*skoMC1*-2<=skoMC1*skoMC1*skoMC1*2,skoSC1*(skoMC1*skoMC1*skoMC1*(-2+skoMC1*-12)+skoSC1*(skoMC1*skoMC1*skoMC1*(1+skoMC1*-6)+skoSC1*(skoMC1*skoMC1*skoMC1+skoSC1*(skoMC1*skoMC1*skoMC1*(-1/12)+skoSC1*skoMC1*skoMC1*skoMC1*(-1/12)))))<=skoMC1*skoMC1*skoMC1*(2+skoMC1*6)]], Reals]]

% In QepcadB format:
(E skoSC1) (E skoMC1) [[(skoMC1 skoMC1 skoMC1 (-2))<=0]/\[[(skoMC1 skoMC1 skoMC1 (-1))<(skoSC1 skoMC1 skoMC1 skoMC1)]/\[[(skoMC1 skoMC1 skoMC1 (-2))<=0]/\[[0<(skoMC1 skoMC1 skoMC1 (2))]/\[[(skoMC1 (-2+(skoMC1 (-5))))<(skoSC1 ((skoMC1 (-1+(skoMC1 (3))))+(skoSC1 ((skoMC1 (-2+(skoMC1 (-3))))+(skoSC1 ((skoMC1 (1/6+(skoMC1 (-1))))+(skoSC1 skoMC1 (1/4))))))))]/\[[(skoMC1 (-2+(skoMC1 (-5))))<(skoSC1 ((skoMC1 (-1+(skoMC1 (3))))+(skoSC1 ((skoMC1 (-2+(skoMC1 (-3))))+(skoSC1 ((skoMC1 skoMC1 (-1))+(skoSC1 skoMC1 (1/12))))))))]/\[[(skoSC1 ((skoMC1 (1+(skoMC1 (-3))))+(skoSC1 ((skoMC1 (2+(skoMC1 (3))))+(skoSC1 ((skoMC1 (-1/6+skoMC1))+(skoSC1 skoMC1 (-1/4))))))))<=(skoMC1 (2+(skoMC1 (5))))]/\[[(skoSC1 ((skoMC1 (1+(skoMC1 (-3))))+(skoSC1 ((skoMC1 (2+(skoMC1 (3))))+(skoSC1 ((skoMC1 skoMC1)+(skoSC1 skoMC1 (-1/12))))))))<=(skoMC1 (2+(skoMC1 (5))))]/\[[(skoSC1 skoMC1 (-1))<=skoMC1]/\[[(skoMC1 (-1))<(skoSC1 skoMC1)]/\[[0<=skoMC1]/\[[0<skoMC1]/\[[0<=skoSC1]/\[[2<=skoMC1]/\[[skoSC1<=5/4]/\[[(skoMC1 skoMC1 skoMC1 (-2))<(skoSC1 skoMC1 skoMC1 skoMC1 (2))]/\[[(skoSC1 skoMC1 skoMC1 skoMC1 (-2))<=(skoMC1 skoMC1 skoMC1 (2))]/\[(skoSC1 ((skoMC1 skoMC1 skoMC1 (-2+(skoMC1 (-12))))+(skoSC1 ((skoMC1 skoMC1 skoMC1 (1+(skoMC1 (-6))))+(skoSC1 ((skoMC1 skoMC1 skoMC1)+(skoSC1 ((skoMC1 skoMC1 skoMC1 (-1/12))+(skoSC1 skoMC1 skoMC1 skoMC1 (-1/12))))))))))<=(skoMC1 skoMC1 skoMC1 (2+(skoMC1 (6))))]]]]]]]]]]]]]]]]]].

% In SMTLib2 format:
(declare-fun skoSC1 () Real) (declare-fun skoMC1 () Real) (assert (and (<= (* skoMC1 (* skoMC1 (* skoMC1 (- 2.)))) 0.) (and (> (* skoSC1 (* skoMC1 (* skoMC1 skoMC1))) (* skoMC1 (* skoMC1 (* skoMC1 (- 1.))))) (and (<= (* skoMC1 (* skoMC1 (* skoMC1 (- 2.)))) 0.) (and (> (* skoMC1 (* skoMC1 (* skoMC1 2.))) 0.) (and (> (* skoSC1 (+ (* skoMC1 (+ (- 1.) (* skoMC1 3.))) (* skoSC1 (+ (* skoMC1 (+ (- 2.) (* skoMC1 (- 3.)))) (* skoSC1 (+ (* skoMC1 (+ (/ 1. 6.) (* skoMC1 (- 1.)))) (* skoSC1 (* skoMC1 (/ 1. 4.))))))))) (* skoMC1 (+ (- 2.) (* skoMC1 (- 5.))))) (and (> (* skoSC1 (+ (* skoMC1 (+ (- 1.) (* skoMC1 3.))) (* skoSC1 (+ (* skoMC1 (+ (- 2.) (* skoMC1 (- 3.)))) (* skoSC1 (+ (* skoMC1 (* skoMC1 (- 1.))) (* skoSC1 (* skoMC1 (/ 1. 12.))))))))) (* skoMC1 (+ (- 2.) (* skoMC1 (- 5.))))) (and (<= (* skoSC1 (+ (* skoMC1 (+ 1. (* skoMC1 (- 3.)))) (* skoSC1 (+ (* skoMC1 (+ 2. (* skoMC1 3.))) (* skoSC1 (+ (* skoMC1 (+ (/ (- 1.) 6.) skoMC1)) (* skoSC1 (* skoMC1 (/ (- 1.) 4.))))))))) (* skoMC1 (+ 2. (* skoMC1 5.)))) (and (<= (* skoSC1 (+ (* skoMC1 (+ 1. (* skoMC1 (- 3.)))) (* skoSC1 (+ (* skoMC1 (+ 2. (* skoMC1 3.))) (* skoSC1 (+ (* skoMC1 skoMC1) (* skoSC1 (* skoMC1 (/ (- 1.) 12.))))))))) (* skoMC1 (+ 2. (* skoMC1 5.)))) (and (<= (* skoSC1 (* skoMC1 (- 1.))) skoMC1) (and (> (* skoSC1 skoMC1) (* skoMC1 (- 1.))) (and (<= 0. skoMC1) (and (> skoMC1 0.) (and (<= 0. skoSC1) (and (<= 2. skoMC1) (and (<= skoSC1 (/ 5. 4.)) (and (> (* skoSC1 (* skoMC1 (* skoMC1 (* skoMC1 2.)))) (* skoMC1 (* skoMC1 (* skoMC1 (- 2.))))) (and (<= (* skoSC1 (* skoMC1 (* skoMC1 (* skoMC1 (- 2.))))) (* skoMC1 (* skoMC1 (* skoMC1 2.)))) (<= (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (+ (- 2.) (* skoMC1 (- 12.)))))) (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (+ 1. (* skoMC1 (- 6.)))))) (* skoSC1 (+ (* skoMC1 (* skoMC1 skoMC1)) (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (/ (- 1.) 12.)))) (* skoSC1 (* skoMC1 (* skoMC1 (* skoMC1 (/ (- 1.) 12.))))))))))))) (* skoMC1 (* skoMC1 (* skoMC1 (+ 2. (* skoMC1 6.))))))))))))))))))))))))

% In GRF format:
(sequent " MetiTarski formula " (antecedent (<= (* skoMC1 (* skoMC1 (* skoMC1 (- 2.)))) 0.) (> (* skoSC1 (* skoMC1 (* skoMC1 skoMC1))) (* skoMC1 (* skoMC1 (* skoMC1 (- 1.))))) (<= (* skoMC1 (* skoMC1 (* skoMC1 (- 2.)))) 0.) (> (* skoMC1 (* skoMC1 (* skoMC1 2.))) 0.) (> (* skoSC1 (+ (* skoMC1 (+ (- 1.) (* skoMC1 3.))) (* skoSC1 (+ (* skoMC1 (+ (- 2.) (* skoMC1 (- 3.)))) (* skoSC1 (+ (* skoMC1 (+ (/ 1. 6.) (* skoMC1 (- 1.)))) (* skoSC1 (* skoMC1 (/ 1. 4.))))))))) (* skoMC1 (+ (- 2.) (* skoMC1 (- 5.))))) (> (* skoSC1 (+ (* skoMC1 (+ (- 1.) (* skoMC1 3.))) (* skoSC1 (+ (* skoMC1 (+ (- 2.) (* skoMC1 (- 3.)))) (* skoSC1 (+ (* skoMC1 (* skoMC1 (- 1.))) (* skoSC1 (* skoMC1 (/ 1. 12.))))))))) (* skoMC1 (+ (- 2.) (* skoMC1 (- 5.))))) (<= (* skoSC1 (+ (* skoMC1 (+ 1. (* skoMC1 (- 3.)))) (* skoSC1 (+ (* skoMC1 (+ 2. (* skoMC1 3.))) (* skoSC1 (+ (* skoMC1 (+ (/ (- 1.) 6.) skoMC1)) (* skoSC1 (* skoMC1 (/ (- 1.) 4.))))))))) (* skoMC1 (+ 2. (* skoMC1 5.)))) (<= (* skoSC1 (+ (* skoMC1 (+ 1. (* skoMC1 (- 3.)))) (* skoSC1 (+ (* skoMC1 (+ 2. (* skoMC1 3.))) (* skoSC1 (+ (* skoMC1 skoMC1) (* skoSC1 (* skoMC1 (/ (- 1.) 12.))))))))) (* skoMC1 (+ 2. (* skoMC1 5.)))) (<= (* skoSC1 (* skoMC1 (- 1.))) skoMC1) (> (* skoSC1 skoMC1) (* skoMC1 (- 1.))) (<= 0. skoMC1) (> skoMC1 0.) (<= 0. skoSC1) (<= 2. skoMC1) (<= skoSC1 (/ 5. 4.)) (> (* skoSC1 (* skoMC1 (* skoMC1 (* skoMC1 2.)))) (* skoMC1 (* skoMC1 (* skoMC1 (- 2.))))) (<= (* skoSC1 (* skoMC1 (* skoMC1 (* skoMC1 (- 2.))))) (* skoMC1 (* skoMC1 (* skoMC1 2.))))) (succedent (> (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (+ (- 2.) (* skoMC1 (- 12.)))))) (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (+ 1. (* skoMC1 (- 6.)))))) (* skoSC1 (+ (* skoMC1 (* skoMC1 skoMC1)) (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (/ (- 1.) 12.)))) (* skoSC1 (* skoMC1 (* skoMC1 (* skoMC1 (/ (- 1.) 12.))))))))))))) (* skoMC1 (* skoMC1 (* skoMC1 (+ 2. (* skoMC1 6.))))))))
-----[end problem]-----

-----[begin problem]-----
% In Mathematica format:
Timing[Resolve[Exists[{skoSC1,skoMC1}, And[skoSC1*(skoMC1*skoMC1*skoMC1*(-1+skoMC1*3)+skoSC1*(skoMC1*skoMC1*skoMC1*(-2+skoMC1*-3)+skoSC1*(skoMC1*skoMC1*skoMC1*((1/6)+skoMC1*-1)+skoSC1*skoMC1*skoMC1*skoMC1*(1/4))))>skoMC1*skoMC1*skoMC1*(-2+skoMC1*-5),skoSC1*skoMC1*skoMC1*skoMC1>skoMC1*skoMC1*skoMC1*-1,skoMC1*skoMC1*skoMC1*-2<=0,skoMC1*skoMC1*skoMC1*2>0,skoSC1*(skoMC1*(-1+skoMC1*3)+skoSC1*(skoMC1*(-2+skoMC1*-3)+skoSC1*(skoMC1*((1/6)+skoMC1*-1)+skoSC1*skoMC1*(1/4))))>skoMC1*(-2+skoMC1*-5),skoSC1*(skoMC1*(-1+skoMC1*3)+skoSC1*(skoMC1*(-2+skoMC1*-3)+skoSC1*(skoMC1*skoMC1*-1+skoSC1*skoMC1*(1/12))))>skoMC1*(-2+skoMC1*-5),skoSC1*(skoMC1*(1+skoMC1*-3)+skoSC1*(skoMC1*(2+skoMC1*3)+skoSC1*(skoMC1*((-1/6)+skoMC1)+skoSC1*skoMC1*(-1/4))))<=skoMC1*(2+skoMC1*5),skoSC1*(skoMC1*(1+skoMC1*-3)+skoSC1*(skoMC1*(2+skoMC1*3)+skoSC1*(skoMC1*skoMC1+skoSC1*skoMC1*(-1/12))))<=skoMC1*(2+skoMC1*5),skoSC1*skoMC1*-1<=skoMC1,skoSC1*skoMC1>skoMC1*-1,0<=skoMC1,skoMC1>0,0<=skoSC1,2<=skoMC1,skoSC1<=(5/4),skoSC1*skoMC1*skoMC1*skoMC1*2>skoMC1*skoMC1*skoMC1*-2,skoSC1*skoMC1*skoMC1*skoMC1*-2<=skoMC1*skoMC1*skoMC1*2,skoSC1*(skoMC1*skoMC1*skoMC1*(-2+skoMC1*-12)+skoSC1*(skoMC1*skoMC1*skoMC1*(1+skoMC1*-6)+skoSC1*(skoMC1*skoMC1*skoMC1+skoSC1*(skoMC1*skoMC1*skoMC1*(-1/12)+skoSC1*skoMC1*skoMC1*skoMC1*(-1/12)))))<=skoMC1*skoMC1*skoMC1*(2+skoMC1*6)]], Reals]]

% In QepcadB format:
(E skoSC1) (E skoMC1) [[(skoMC1 skoMC1 skoMC1 (-2+(skoMC1 (-5))))<(skoSC1 ((skoMC1 skoMC1 skoMC1 (-1+(skoMC1 (3))))+(skoSC1 ((skoMC1 skoMC1 skoMC1 (-2+(skoMC1 (-3))))+(skoSC1 ((skoMC1 skoMC1 skoMC1 (1/6+(skoMC1 (-1))))+(skoSC1 skoMC1 skoMC1 skoMC1 (1/4))))))))]/\[[(skoMC1 skoMC1 skoMC1 (-1))<(skoSC1 skoMC1 skoMC1 skoMC1)]/\[[(skoMC1 skoMC1 skoMC1 (-2))<=0]/\[[0<(skoMC1 skoMC1 skoMC1 (2))]/\[[(skoMC1 (-2+(skoMC1 (-5))))<(skoSC1 ((skoMC1 (-1+(skoMC1 (3))))+(skoSC1 ((skoMC1 (-2+(skoMC1 (-3))))+(skoSC1 ((skoMC1 (1/6+(skoMC1 (-1))))+(skoSC1 skoMC1 (1/4))))))))]/\[[(skoMC1 (-2+(skoMC1 (-5))))<(skoSC1 ((skoMC1 (-1+(skoMC1 (3))))+(skoSC1 ((skoMC1 (-2+(skoMC1 (-3))))+(skoSC1 ((skoMC1 skoMC1 (-1))+(skoSC1 skoMC1 (1/12))))))))]/\[[(skoSC1 ((skoMC1 (1+(skoMC1 (-3))))+(skoSC1 ((skoMC1 (2+(skoMC1 (3))))+(skoSC1 ((skoMC1 (-1/6+skoMC1))+(skoSC1 skoMC1 (-1/4))))))))<=(skoMC1 (2+(skoMC1 (5))))]/\[[(skoSC1 ((skoMC1 (1+(skoMC1 (-3))))+(skoSC1 ((skoMC1 (2+(skoMC1 (3))))+(skoSC1 ((skoMC1 skoMC1)+(skoSC1 skoMC1 (-1/12))))))))<=(skoMC1 (2+(skoMC1 (5))))]/\[[(skoSC1 skoMC1 (-1))<=skoMC1]/\[[(skoMC1 (-1))<(skoSC1 skoMC1)]/\[[0<=skoMC1]/\[[0<skoMC1]/\[[0<=skoSC1]/\[[2<=skoMC1]/\[[skoSC1<=5/4]/\[[(skoMC1 skoMC1 skoMC1 (-2))<(skoSC1 skoMC1 skoMC1 skoMC1 (2))]/\[[(skoSC1 skoMC1 skoMC1 skoMC1 (-2))<=(skoMC1 skoMC1 skoMC1 (2))]/\[(skoSC1 ((skoMC1 skoMC1 skoMC1 (-2+(skoMC1 (-12))))+(skoSC1 ((skoMC1 skoMC1 skoMC1 (1+(skoMC1 (-6))))+(skoSC1 ((skoMC1 skoMC1 skoMC1)+(skoSC1 ((skoMC1 skoMC1 skoMC1 (-1/12))+(skoSC1 skoMC1 skoMC1 skoMC1 (-1/12))))))))))<=(skoMC1 skoMC1 skoMC1 (2+(skoMC1 (6))))]]]]]]]]]]]]]]]]]].

% In SMTLib2 format:
(declare-fun skoSC1 () Real) (declare-fun skoMC1 () Real) (assert (and (> (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (+ (- 1.) (* skoMC1 3.))))) (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (+ (- 2.) (* skoMC1 (- 3.)))))) (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (+ (/ 1. 6.) (* skoMC1 (- 1.)))))) (* skoSC1 (* skoMC1 (* skoMC1 (* skoMC1 (/ 1. 4.))))))))))) (* skoMC1 (* skoMC1 (* skoMC1 (+ (- 2.) (* skoMC1 (- 5.))))))) (and (> (* skoSC1 (* skoMC1 (* skoMC1 skoMC1))) (* skoMC1 (* skoMC1 (* skoMC1 (- 1.))))) (and (<= (* skoMC1 (* skoMC1 (* skoMC1 (- 2.)))) 0.) (and (> (* skoMC1 (* skoMC1 (* skoMC1 2.))) 0.) (and (> (* skoSC1 (+ (* skoMC1 (+ (- 1.) (* skoMC1 3.))) (* skoSC1 (+ (* skoMC1 (+ (- 2.) (* skoMC1 (- 3.)))) (* skoSC1 (+ (* skoMC1 (+ (/ 1. 6.) (* skoMC1 (- 1.)))) (* skoSC1 (* skoMC1 (/ 1. 4.))))))))) (* skoMC1 (+ (- 2.) (* skoMC1 (- 5.))))) (and (> (* skoSC1 (+ (* skoMC1 (+ (- 1.) (* skoMC1 3.))) (* skoSC1 (+ (* skoMC1 (+ (- 2.) (* skoMC1 (- 3.)))) (* skoSC1 (+ (* skoMC1 (* skoMC1 (- 1.))) (* skoSC1 (* skoMC1 (/ 1. 12.))))))))) (* skoMC1 (+ (- 2.) (* skoMC1 (- 5.))))) (and (<= (* skoSC1 (+ (* skoMC1 (+ 1. (* skoMC1 (- 3.)))) (* skoSC1 (+ (* skoMC1 (+ 2. (* skoMC1 3.))) (* skoSC1 (+ (* skoMC1 (+ (/ (- 1.) 6.) skoMC1)) (* skoSC1 (* skoMC1 (/ (- 1.) 4.))))))))) (* skoMC1 (+ 2. (* skoMC1 5.)))) (and (<= (* skoSC1 (+ (* skoMC1 (+ 1. (* skoMC1 (- 3.)))) (* skoSC1 (+ (* skoMC1 (+ 2. (* skoMC1 3.))) (* skoSC1 (+ (* skoMC1 skoMC1) (* skoSC1 (* skoMC1 (/ (- 1.) 12.))))))))) (* skoMC1 (+ 2. (* skoMC1 5.)))) (and (<= (* skoSC1 (* skoMC1 (- 1.))) skoMC1) (and (> (* skoSC1 skoMC1) (* skoMC1 (- 1.))) (and (<= 0. skoMC1) (and (> skoMC1 0.) (and (<= 0. skoSC1) (and (<= 2. skoMC1) (and (<= skoSC1 (/ 5. 4.)) (and (> (* skoSC1 (* skoMC1 (* skoMC1 (* skoMC1 2.)))) (* skoMC1 (* skoMC1 (* skoMC1 (- 2.))))) (and (<= (* skoSC1 (* skoMC1 (* skoMC1 (* skoMC1 (- 2.))))) (* skoMC1 (* skoMC1 (* skoMC1 2.)))) (<= (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (+ (- 2.) (* skoMC1 (- 12.)))))) (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (+ 1. (* skoMC1 (- 6.)))))) (* skoSC1 (+ (* skoMC1 (* skoMC1 skoMC1)) (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (/ (- 1.) 12.)))) (* skoSC1 (* skoMC1 (* skoMC1 (* skoMC1 (/ (- 1.) 12.))))))))))))) (* skoMC1 (* skoMC1 (* skoMC1 (+ 2. (* skoMC1 6.))))))))))))))))))))))))

% In GRF format:
(sequent " MetiTarski formula " (antecedent (> (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (+ (- 1.) (* skoMC1 3.))))) (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (+ (- 2.) (* skoMC1 (- 3.)))))) (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (+ (/ 1. 6.) (* skoMC1 (- 1.)))))) (* skoSC1 (* skoMC1 (* skoMC1 (* skoMC1 (/ 1. 4.))))))))))) (* skoMC1 (* skoMC1 (* skoMC1 (+ (- 2.) (* skoMC1 (- 5.))))))) (> (* skoSC1 (* skoMC1 (* skoMC1 skoMC1))) (* skoMC1 (* skoMC1 (* skoMC1 (- 1.))))) (<= (* skoMC1 (* skoMC1 (* skoMC1 (- 2.)))) 0.) (> (* skoMC1 (* skoMC1 (* skoMC1 2.))) 0.) (> (* skoSC1 (+ (* skoMC1 (+ (- 1.) (* skoMC1 3.))) (* skoSC1 (+ (* skoMC1 (+ (- 2.) (* skoMC1 (- 3.)))) (* skoSC1 (+ (* skoMC1 (+ (/ 1. 6.) (* skoMC1 (- 1.)))) (* skoSC1 (* skoMC1 (/ 1. 4.))))))))) (* skoMC1 (+ (- 2.) (* skoMC1 (- 5.))))) (> (* skoSC1 (+ (* skoMC1 (+ (- 1.) (* skoMC1 3.))) (* skoSC1 (+ (* skoMC1 (+ (- 2.) (* skoMC1 (- 3.)))) (* skoSC1 (+ (* skoMC1 (* skoMC1 (- 1.))) (* skoSC1 (* skoMC1 (/ 1. 12.))))))))) (* skoMC1 (+ (- 2.) (* skoMC1 (- 5.))))) (<= (* skoSC1 (+ (* skoMC1 (+ 1. (* skoMC1 (- 3.)))) (* skoSC1 (+ (* skoMC1 (+ 2. (* skoMC1 3.))) (* skoSC1 (+ (* skoMC1 (+ (/ (- 1.) 6.) skoMC1)) (* skoSC1 (* skoMC1 (/ (- 1.) 4.))))))))) (* skoMC1 (+ 2. (* skoMC1 5.)))) (<= (* skoSC1 (+ (* skoMC1 (+ 1. (* skoMC1 (- 3.)))) (* skoSC1 (+ (* skoMC1 (+ 2. (* skoMC1 3.))) (* skoSC1 (+ (* skoMC1 skoMC1) (* skoSC1 (* skoMC1 (/ (- 1.) 12.))))))))) (* skoMC1 (+ 2. (* skoMC1 5.)))) (<= (* skoSC1 (* skoMC1 (- 1.))) skoMC1) (> (* skoSC1 skoMC1) (* skoMC1 (- 1.))) (<= 0. skoMC1) (> skoMC1 0.) (<= 0. skoSC1) (<= 2. skoMC1) (<= skoSC1 (/ 5. 4.)) (> (* skoSC1 (* skoMC1 (* skoMC1 (* skoMC1 2.)))) (* skoMC1 (* skoMC1 (* skoMC1 (- 2.))))) (<= (* skoSC1 (* skoMC1 (* skoMC1 (* skoMC1 (- 2.))))) (* skoMC1 (* skoMC1 (* skoMC1 2.))))) (succedent (> (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (+ (- 2.) (* skoMC1 (- 12.)))))) (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (+ 1. (* skoMC1 (- 6.)))))) (* skoSC1 (+ (* skoMC1 (* skoMC1 skoMC1)) (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (/ (- 1.) 12.)))) (* skoSC1 (* skoMC1 (* skoMC1 (* skoMC1 (/ (- 1.) 12.))))))))))))) (* skoMC1 (* skoMC1 (* skoMC1 (+ 2. (* skoMC1 6.))))))))
-----[end problem]-----

-----[begin problem]-----
% In Mathematica format:
Timing[Resolve[Exists[{skoSC1,skoMC1}, And[skoSC1*skoMC1*skoMC1*skoMC1<=skoMC1*skoMC1*skoMC1*-1,skoSC1<=0,skoSC1*(skoMC1*skoMC1*skoMC1*(-1+skoMC1*3)+skoSC1*(skoMC1*skoMC1*skoMC1*(-2+skoMC1*-3)+skoSC1*(skoMC1*skoMC1*skoMC1*((1/6)+skoMC1*-1)+skoSC1*skoMC1*skoMC1*skoMC1*(1/4))))>skoMC1*skoMC1*skoMC1*(-2+skoMC1*-5),skoSC1*skoMC1*skoMC1*skoMC1>skoMC1*skoMC1*skoMC1*-1,skoMC1*skoMC1*skoMC1*-2<=0,skoMC1*skoMC1*skoMC1*2>0,skoSC1*(skoMC1*(-1+skoMC1*3)+skoSC1*(skoMC1*(-2+skoMC1*-3)+skoSC1*(skoMC1*((1/6)+skoMC1*-1)+skoSC1*skoMC1*(1/4))))>skoMC1*(-2+skoMC1*-5),skoSC1*(skoMC1*(-1+skoMC1*3)+skoSC1*(skoMC1*(-2+skoMC1*-3)+skoSC1*(skoMC1*skoMC1*-1+skoSC1*skoMC1*(1/12))))>skoMC1*(-2+skoMC1*-5),skoSC1*(skoMC1*(1+skoMC1*-3)+skoSC1*(skoMC1*(2+skoMC1*3)+skoSC1*(skoMC1*((-1/6)+skoMC1)+skoSC1*skoMC1*(-1/4))))<=skoMC1*(2+skoMC1*5),skoSC1*(skoMC1*(1+skoMC1*-3)+skoSC1*(skoMC1*(2+skoMC1*3)+skoSC1*(skoMC1*skoMC1+skoSC1*skoMC1*(-1/12))))<=skoMC1*(2+skoMC1*5),skoSC1*skoMC1*-1<=skoMC1,skoSC1*skoMC1>skoMC1*-1,0<=skoMC1,skoMC1>0,0<=skoSC1,2<=skoMC1,skoSC1<=(5/4),skoSC1*skoMC1*skoMC1*skoMC1*2>skoMC1*skoMC1*skoMC1*-2,skoSC1*skoMC1*skoMC1*skoMC1*-2<=skoMC1*skoMC1*skoMC1*2,skoSC1*(skoMC1*skoMC1*skoMC1*(-2+skoMC1*-12)+skoSC1*(skoMC1*skoMC1*skoMC1*(1+skoMC1*-6)+skoSC1*(skoMC1*skoMC1*skoMC1+skoSC1*(skoMC1*skoMC1*skoMC1*(-1/12)+skoSC1*skoMC1*skoMC1*skoMC1*(-1/12)))))<=skoMC1*skoMC1*skoMC1*(2+skoMC1*6)]], Reals]]

% In QepcadB format:
(E skoSC1) (E skoMC1) [[(skoSC1 skoMC1 skoMC1 skoMC1)<=(skoMC1 skoMC1 skoMC1 (-1))]/\[[skoSC1<=0]/\[[(skoMC1 skoMC1 skoMC1 (-2+(skoMC1 (-5))))<(skoSC1 ((skoMC1 skoMC1 skoMC1 (-1+(skoMC1 (3))))+(skoSC1 ((skoMC1 skoMC1 skoMC1 (-2+(skoMC1 (-3))))+(skoSC1 ((skoMC1 skoMC1 skoMC1 (1/6+(skoMC1 (-1))))+(skoSC1 skoMC1 skoMC1 skoMC1 (1/4))))))))]/\[[(skoMC1 skoMC1 skoMC1 (-1))<(skoSC1 skoMC1 skoMC1 skoMC1)]/\[[(skoMC1 skoMC1 skoMC1 (-2))<=0]/\[[0<(skoMC1 skoMC1 skoMC1 (2))]/\[[(skoMC1 (-2+(skoMC1 (-5))))<(skoSC1 ((skoMC1 (-1+(skoMC1 (3))))+(skoSC1 ((skoMC1 (-2+(skoMC1 (-3))))+(skoSC1 ((skoMC1 (1/6+(skoMC1 (-1))))+(skoSC1 skoMC1 (1/4))))))))]/\[[(skoMC1 (-2+(skoMC1 (-5))))<(skoSC1 ((skoMC1 (-1+(skoMC1 (3))))+(skoSC1 ((skoMC1 (-2+(skoMC1 (-3))))+(skoSC1 ((skoMC1 skoMC1 (-1))+(skoSC1 skoMC1 (1/12))))))))]/\[[(skoSC1 ((skoMC1 (1+(skoMC1 (-3))))+(skoSC1 ((skoMC1 (2+(skoMC1 (3))))+(skoSC1 ((skoMC1 (-1/6+skoMC1))+(skoSC1 skoMC1 (-1/4))))))))<=(skoMC1 (2+(skoMC1 (5))))]/\[[(skoSC1 ((skoMC1 (1+(skoMC1 (-3))))+(skoSC1 ((skoMC1 (2+(skoMC1 (3))))+(skoSC1 ((skoMC1 skoMC1)+(skoSC1 skoMC1 (-1/12))))))))<=(skoMC1 (2+(skoMC1 (5))))]/\[[(skoSC1 skoMC1 (-1))<=skoMC1]/\[[(skoMC1 (-1))<(skoSC1 skoMC1)]/\[[0<=skoMC1]/\[[0<skoMC1]/\[[0<=skoSC1]/\[[2<=skoMC1]/\[[skoSC1<=5/4]/\[[(skoMC1 skoMC1 skoMC1 (-2))<(skoSC1 skoMC1 skoMC1 skoMC1 (2))]/\[[(skoSC1 skoMC1 skoMC1 skoMC1 (-2))<=(skoMC1 skoMC1 skoMC1 (2))]/\[(skoSC1 ((skoMC1 skoMC1 skoMC1 (-2+(skoMC1 (-12))))+(skoSC1 ((skoMC1 skoMC1 skoMC1 (1+(skoMC1 (-6))))+(skoSC1 ((skoMC1 skoMC1 skoMC1)+(skoSC1 ((skoMC1 skoMC1 skoMC1 (-1/12))+(skoSC1 skoMC1 skoMC1 skoMC1 (-1/12))))))))))<=(skoMC1 skoMC1 skoMC1 (2+(skoMC1 (6))))]]]]]]]]]]]]]]]]]]]].

% In SMTLib2 format:
(declare-fun skoSC1 () Real) (declare-fun skoMC1 () Real) (assert (and (<= (* skoSC1 (* skoMC1 (* skoMC1 skoMC1))) (* skoMC1 (* skoMC1 (* skoMC1 (- 1.))))) (and (<= skoSC1 0.) (and (> (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (+ (- 1.) (* skoMC1 3.))))) (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (+ (- 2.) (* skoMC1 (- 3.)))))) (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (+ (/ 1. 6.) (* skoMC1 (- 1.)))))) (* skoSC1 (* skoMC1 (* skoMC1 (* skoMC1 (/ 1. 4.))))))))))) (* skoMC1 (* skoMC1 (* skoMC1 (+ (- 2.) (* skoMC1 (- 5.))))))) (and (> (* skoSC1 (* skoMC1 (* skoMC1 skoMC1))) (* skoMC1 (* skoMC1 (* skoMC1 (- 1.))))) (and (<= (* skoMC1 (* skoMC1 (* skoMC1 (- 2.)))) 0.) (and (> (* skoMC1 (* skoMC1 (* skoMC1 2.))) 0.) (and (> (* skoSC1 (+ (* skoMC1 (+ (- 1.) (* skoMC1 3.))) (* skoSC1 (+ (* skoMC1 (+ (- 2.) (* skoMC1 (- 3.)))) (* skoSC1 (+ (* skoMC1 (+ (/ 1. 6.) (* skoMC1 (- 1.)))) (* skoSC1 (* skoMC1 (/ 1. 4.))))))))) (* skoMC1 (+ (- 2.) (* skoMC1 (- 5.))))) (and (> (* skoSC1 (+ (* skoMC1 (+ (- 1.) (* skoMC1 3.))) (* skoSC1 (+ (* skoMC1 (+ (- 2.) (* skoMC1 (- 3.)))) (* skoSC1 (+ (* skoMC1 (* skoMC1 (- 1.))) (* skoSC1 (* skoMC1 (/ 1. 12.))))))))) (* skoMC1 (+ (- 2.) (* skoMC1 (- 5.))))) (and (<= (* skoSC1 (+ (* skoMC1 (+ 1. (* skoMC1 (- 3.)))) (* skoSC1 (+ (* skoMC1 (+ 2. (* skoMC1 3.))) (* skoSC1 (+ (* skoMC1 (+ (/ (- 1.) 6.) skoMC1)) (* skoSC1 (* skoMC1 (/ (- 1.) 4.))))))))) (* skoMC1 (+ 2. (* skoMC1 5.)))) (and (<= (* skoSC1 (+ (* skoMC1 (+ 1. (* skoMC1 (- 3.)))) (* skoSC1 (+ (* skoMC1 (+ 2. (* skoMC1 3.))) (* skoSC1 (+ (* skoMC1 skoMC1) (* skoSC1 (* skoMC1 (/ (- 1.) 12.))))))))) (* skoMC1 (+ 2. (* skoMC1 5.)))) (and (<= (* skoSC1 (* skoMC1 (- 1.))) skoMC1) (and (> (* skoSC1 skoMC1) (* skoMC1 (- 1.))) (and (<= 0. skoMC1) (and (> skoMC1 0.) (and (<= 0. skoSC1) (and (<= 2. skoMC1) (and (<= skoSC1 (/ 5. 4.)) (and (> (* skoSC1 (* skoMC1 (* skoMC1 (* skoMC1 2.)))) (* skoMC1 (* skoMC1 (* skoMC1 (- 2.))))) (and (<= (* skoSC1 (* skoMC1 (* skoMC1 (* skoMC1 (- 2.))))) (* skoMC1 (* skoMC1 (* skoMC1 2.)))) (<= (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (+ (- 2.) (* skoMC1 (- 12.)))))) (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (+ 1. (* skoMC1 (- 6.)))))) (* skoSC1 (+ (* skoMC1 (* skoMC1 skoMC1)) (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (/ (- 1.) 12.)))) (* skoSC1 (* skoMC1 (* skoMC1 (* skoMC1 (/ (- 1.) 12.))))))))))))) (* skoMC1 (* skoMC1 (* skoMC1 (+ 2. (* skoMC1 6.))))))))))))))))))))))))))

% In GRF format:
(sequent " MetiTarski formula " (antecedent (<= (* skoSC1 (* skoMC1 (* skoMC1 skoMC1))) (* skoMC1 (* skoMC1 (* skoMC1 (- 1.))))) (<= skoSC1 0.) (> (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (+ (- 1.) (* skoMC1 3.))))) (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (+ (- 2.) (* skoMC1 (- 3.)))))) (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (+ (/ 1. 6.) (* skoMC1 (- 1.)))))) (* skoSC1 (* skoMC1 (* skoMC1 (* skoMC1 (/ 1. 4.))))))))))) (* skoMC1 (* skoMC1 (* skoMC1 (+ (- 2.) (* skoMC1 (- 5.))))))) (> (* skoSC1 (* skoMC1 (* skoMC1 skoMC1))) (* skoMC1 (* skoMC1 (* skoMC1 (- 1.))))) (<= (* skoMC1 (* skoMC1 (* skoMC1 (- 2.)))) 0.) (> (* skoMC1 (* skoMC1 (* skoMC1 2.))) 0.) (> (* skoSC1 (+ (* skoMC1 (+ (- 1.) (* skoMC1 3.))) (* skoSC1 (+ (* skoMC1 (+ (- 2.) (* skoMC1 (- 3.)))) (* skoSC1 (+ (* skoMC1 (+ (/ 1. 6.) (* skoMC1 (- 1.)))) (* skoSC1 (* skoMC1 (/ 1. 4.))))))))) (* skoMC1 (+ (- 2.) (* skoMC1 (- 5.))))) (> (* skoSC1 (+ (* skoMC1 (+ (- 1.) (* skoMC1 3.))) (* skoSC1 (+ (* skoMC1 (+ (- 2.) (* skoMC1 (- 3.)))) (* skoSC1 (+ (* skoMC1 (* skoMC1 (- 1.))) (* skoSC1 (* skoMC1 (/ 1. 12.))))))))) (* skoMC1 (+ (- 2.) (* skoMC1 (- 5.))))) (<= (* skoSC1 (+ (* skoMC1 (+ 1. (* skoMC1 (- 3.)))) (* skoSC1 (+ (* skoMC1 (+ 2. (* skoMC1 3.))) (* skoSC1 (+ (* skoMC1 (+ (/ (- 1.) 6.) skoMC1)) (* skoSC1 (* skoMC1 (/ (- 1.) 4.))))))))) (* skoMC1 (+ 2. (* skoMC1 5.)))) (<= (* skoSC1 (+ (* skoMC1 (+ 1. (* skoMC1 (- 3.)))) (* skoSC1 (+ (* skoMC1 (+ 2. (* skoMC1 3.))) (* skoSC1 (+ (* skoMC1 skoMC1) (* skoSC1 (* skoMC1 (/ (- 1.) 12.))))))))) (* skoMC1 (+ 2. (* skoMC1 5.)))) (<= (* skoSC1 (* skoMC1 (- 1.))) skoMC1) (> (* skoSC1 skoMC1) (* skoMC1 (- 1.))) (<= 0. skoMC1) (> skoMC1 0.) (<= 0. skoSC1) (<= 2. skoMC1) (<= skoSC1 (/ 5. 4.)) (> (* skoSC1 (* skoMC1 (* skoMC1 (* skoMC1 2.)))) (* skoMC1 (* skoMC1 (* skoMC1 (- 2.))))) (<= (* skoSC1 (* skoMC1 (* skoMC1 (* skoMC1 (- 2.))))) (* skoMC1 (* skoMC1 (* skoMC1 2.))))) (succedent (> (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (+ (- 2.) (* skoMC1 (- 12.)))))) (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (+ 1. (* skoMC1 (- 6.)))))) (* skoSC1 (+ (* skoMC1 (* skoMC1 skoMC1)) (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (/ (- 1.) 12.)))) (* skoSC1 (* skoMC1 (* skoMC1 (* skoMC1 (/ (- 1.) 12.))))))))))))) (* skoMC1 (* skoMC1 (* skoMC1 (+ 2. (* skoMC1 6.))))))))
-----[end problem]-----

-----[begin problem]-----
% In Mathematica format:
Timing[Resolve[Exists[{skoSC1,skoMC1}, And[skoSC1>0,skoSC1*(skoMC1*skoMC1*skoMC1*(-1+skoMC1*3)+skoSC1*(skoMC1*skoMC1*skoMC1*(-2+skoMC1*-3)+skoSC1*(skoMC1*skoMC1*skoMC1*((1/6)+skoMC1*-1)+skoSC1*skoMC1*skoMC1*skoMC1*(1/4))))>skoMC1*skoMC1*skoMC1*(-2+skoMC1*-5),skoSC1*skoMC1*skoMC1*skoMC1>skoMC1*skoMC1*skoMC1*-1,skoMC1*skoMC1*skoMC1*-2<=0,skoMC1*skoMC1*skoMC1*2>0,skoSC1*(skoMC1*(-1+skoMC1*3)+skoSC1*(skoMC1*(-2+skoMC1*-3)+skoSC1*(skoMC1*((1/6)+skoMC1*-1)+skoSC1*skoMC1*(1/4))))>skoMC1*(-2+skoMC1*-5),skoSC1*(skoMC1*(-1+skoMC1*3)+skoSC1*(skoMC1*(-2+skoMC1*-3)+skoSC1*(skoMC1*skoMC1*-1+skoSC1*skoMC1*(1/12))))>skoMC1*(-2+skoMC1*-5),skoSC1*(skoMC1*(1+skoMC1*-3)+skoSC1*(skoMC1*(2+skoMC1*3)+skoSC1*(skoMC1*((-1/6)+skoMC1)+skoSC1*skoMC1*(-1/4))))<=skoMC1*(2+skoMC1*5),skoSC1*(skoMC1*(1+skoMC1*-3)+skoSC1*(skoMC1*(2+skoMC1*3)+skoSC1*(skoMC1*skoMC1+skoSC1*skoMC1*(-1/12))))<=skoMC1*(2+skoMC1*5),skoSC1*skoMC1*-1<=skoMC1,skoSC1*skoMC1>skoMC1*-1,0<=skoMC1,skoMC1>0,0<=skoSC1,2<=skoMC1,skoSC1<=(5/4),skoSC1*skoMC1*skoMC1*skoMC1*2>skoMC1*skoMC1*skoMC1*-2,skoSC1*skoMC1*skoMC1*skoMC1*-2<=skoMC1*skoMC1*skoMC1*2,skoSC1*(skoMC1*skoMC1*skoMC1*(-2+skoMC1*-12)+skoSC1*(skoMC1*skoMC1*skoMC1*(1+skoMC1*-6)+skoSC1*(skoMC1*skoMC1*skoMC1+skoSC1*(skoMC1*skoMC1*skoMC1*(-1/12)+skoSC1*skoMC1*skoMC1*skoMC1*(-1/12)))))<=skoMC1*skoMC1*skoMC1*(2+skoMC1*6)]], Reals]]

% In QepcadB format:
(E skoSC1) (E skoMC1) [[0<skoSC1]/\[[(skoMC1 skoMC1 skoMC1 (-2+(skoMC1 (-5))))<(skoSC1 ((skoMC1 skoMC1 skoMC1 (-1+(skoMC1 (3))))+(skoSC1 ((skoMC1 skoMC1 skoMC1 (-2+(skoMC1 (-3))))+(skoSC1 ((skoMC1 skoMC1 skoMC1 (1/6+(skoMC1 (-1))))+(skoSC1 skoMC1 skoMC1 skoMC1 (1/4))))))))]/\[[(skoMC1 skoMC1 skoMC1 (-1))<(skoSC1 skoMC1 skoMC1 skoMC1)]/\[[(skoMC1 skoMC1 skoMC1 (-2))<=0]/\[[0<(skoMC1 skoMC1 skoMC1 (2))]/\[[(skoMC1 (-2+(skoMC1 (-5))))<(skoSC1 ((skoMC1 (-1+(skoMC1 (3))))+(skoSC1 ((skoMC1 (-2+(skoMC1 (-3))))+(skoSC1 ((skoMC1 (1/6+(skoMC1 (-1))))+(skoSC1 skoMC1 (1/4))))))))]/\[[(skoMC1 (-2+(skoMC1 (-5))))<(skoSC1 ((skoMC1 (-1+(skoMC1 (3))))+(skoSC1 ((skoMC1 (-2+(skoMC1 (-3))))+(skoSC1 ((skoMC1 skoMC1 (-1))+(skoSC1 skoMC1 (1/12))))))))]/\[[(skoSC1 ((skoMC1 (1+(skoMC1 (-3))))+(skoSC1 ((skoMC1 (2+(skoMC1 (3))))+(skoSC1 ((skoMC1 (-1/6+skoMC1))+(skoSC1 skoMC1 (-1/4))))))))<=(skoMC1 (2+(skoMC1 (5))))]/\[[(skoSC1 ((skoMC1 (1+(skoMC1 (-3))))+(skoSC1 ((skoMC1 (2+(skoMC1 (3))))+(skoSC1 ((skoMC1 skoMC1)+(skoSC1 skoMC1 (-1/12))))))))<=(skoMC1 (2+(skoMC1 (5))))]/\[[(skoSC1 skoMC1 (-1))<=skoMC1]/\[[(skoMC1 (-1))<(skoSC1 skoMC1)]/\[[0<=skoMC1]/\[[0<skoMC1]/\[[0<=skoSC1]/\[[2<=skoMC1]/\[[skoSC1<=5/4]/\[[(skoMC1 skoMC1 skoMC1 (-2))<(skoSC1 skoMC1 skoMC1 skoMC1 (2))]/\[[(skoSC1 skoMC1 skoMC1 skoMC1 (-2))<=(skoMC1 skoMC1 skoMC1 (2))]/\[(skoSC1 ((skoMC1 skoMC1 skoMC1 (-2+(skoMC1 (-12))))+(skoSC1 ((skoMC1 skoMC1 skoMC1 (1+(skoMC1 (-6))))+(skoSC1 ((skoMC1 skoMC1 skoMC1)+(skoSC1 ((skoMC1 skoMC1 skoMC1 (-1/12))+(skoSC1 skoMC1 skoMC1 skoMC1 (-1/12))))))))))<=(skoMC1 skoMC1 skoMC1 (2+(skoMC1 (6))))]]]]]]]]]]]]]]]]]]].

% In SMTLib2 format:
(declare-fun skoSC1 () Real) (declare-fun skoMC1 () Real) (assert (and (> skoSC1 0.) (and (> (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (+ (- 1.) (* skoMC1 3.))))) (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (+ (- 2.) (* skoMC1 (- 3.)))))) (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (+ (/ 1. 6.) (* skoMC1 (- 1.)))))) (* skoSC1 (* skoMC1 (* skoMC1 (* skoMC1 (/ 1. 4.))))))))))) (* skoMC1 (* skoMC1 (* skoMC1 (+ (- 2.) (* skoMC1 (- 5.))))))) (and (> (* skoSC1 (* skoMC1 (* skoMC1 skoMC1))) (* skoMC1 (* skoMC1 (* skoMC1 (- 1.))))) (and (<= (* skoMC1 (* skoMC1 (* skoMC1 (- 2.)))) 0.) (and (> (* skoMC1 (* skoMC1 (* skoMC1 2.))) 0.) (and (> (* skoSC1 (+ (* skoMC1 (+ (- 1.) (* skoMC1 3.))) (* skoSC1 (+ (* skoMC1 (+ (- 2.) (* skoMC1 (- 3.)))) (* skoSC1 (+ (* skoMC1 (+ (/ 1. 6.) (* skoMC1 (- 1.)))) (* skoSC1 (* skoMC1 (/ 1. 4.))))))))) (* skoMC1 (+ (- 2.) (* skoMC1 (- 5.))))) (and (> (* skoSC1 (+ (* skoMC1 (+ (- 1.) (* skoMC1 3.))) (* skoSC1 (+ (* skoMC1 (+ (- 2.) (* skoMC1 (- 3.)))) (* skoSC1 (+ (* skoMC1 (* skoMC1 (- 1.))) (* skoSC1 (* skoMC1 (/ 1. 12.))))))))) (* skoMC1 (+ (- 2.) (* skoMC1 (- 5.))))) (and (<= (* skoSC1 (+ (* skoMC1 (+ 1. (* skoMC1 (- 3.)))) (* skoSC1 (+ (* skoMC1 (+ 2. (* skoMC1 3.))) (* skoSC1 (+ (* skoMC1 (+ (/ (- 1.) 6.) skoMC1)) (* skoSC1 (* skoMC1 (/ (- 1.) 4.))))))))) (* skoMC1 (+ 2. (* skoMC1 5.)))) (and (<= (* skoSC1 (+ (* skoMC1 (+ 1. (* skoMC1 (- 3.)))) (* skoSC1 (+ (* skoMC1 (+ 2. (* skoMC1 3.))) (* skoSC1 (+ (* skoMC1 skoMC1) (* skoSC1 (* skoMC1 (/ (- 1.) 12.))))))))) (* skoMC1 (+ 2. (* skoMC1 5.)))) (and (<= (* skoSC1 (* skoMC1 (- 1.))) skoMC1) (and (> (* skoSC1 skoMC1) (* skoMC1 (- 1.))) (and (<= 0. skoMC1) (and (> skoMC1 0.) (and (<= 0. skoSC1) (and (<= 2. skoMC1) (and (<= skoSC1 (/ 5. 4.)) (and (> (* skoSC1 (* skoMC1 (* skoMC1 (* skoMC1 2.)))) (* skoMC1 (* skoMC1 (* skoMC1 (- 2.))))) (and (<= (* skoSC1 (* skoMC1 (* skoMC1 (* skoMC1 (- 2.))))) (* skoMC1 (* skoMC1 (* skoMC1 2.)))) (<= (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (+ (- 2.) (* skoMC1 (- 12.)))))) (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (+ 1. (* skoMC1 (- 6.)))))) (* skoSC1 (+ (* skoMC1 (* skoMC1 skoMC1)) (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (/ (- 1.) 12.)))) (* skoSC1 (* skoMC1 (* skoMC1 (* skoMC1 (/ (- 1.) 12.))))))))))))) (* skoMC1 (* skoMC1 (* skoMC1 (+ 2. (* skoMC1 6.)))))))))))))))))))))))))

% In GRF format:
(sequent " MetiTarski formula " (antecedent (> skoSC1 0.) (> (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (+ (- 1.) (* skoMC1 3.))))) (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (+ (- 2.) (* skoMC1 (- 3.)))))) (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (+ (/ 1. 6.) (* skoMC1 (- 1.)))))) (* skoSC1 (* skoMC1 (* skoMC1 (* skoMC1 (/ 1. 4.))))))))))) (* skoMC1 (* skoMC1 (* skoMC1 (+ (- 2.) (* skoMC1 (- 5.))))))) (> (* skoSC1 (* skoMC1 (* skoMC1 skoMC1))) (* skoMC1 (* skoMC1 (* skoMC1 (- 1.))))) (<= (* skoMC1 (* skoMC1 (* skoMC1 (- 2.)))) 0.) (> (* skoMC1 (* skoMC1 (* skoMC1 2.))) 0.) (> (* skoSC1 (+ (* skoMC1 (+ (- 1.) (* skoMC1 3.))) (* skoSC1 (+ (* skoMC1 (+ (- 2.) (* skoMC1 (- 3.)))) (* skoSC1 (+ (* skoMC1 (+ (/ 1. 6.) (* skoMC1 (- 1.)))) (* skoSC1 (* skoMC1 (/ 1. 4.))))))))) (* skoMC1 (+ (- 2.) (* skoMC1 (- 5.))))) (> (* skoSC1 (+ (* skoMC1 (+ (- 1.) (* skoMC1 3.))) (* skoSC1 (+ (* skoMC1 (+ (- 2.) (* skoMC1 (- 3.)))) (* skoSC1 (+ (* skoMC1 (* skoMC1 (- 1.))) (* skoSC1 (* skoMC1 (/ 1. 12.))))))))) (* skoMC1 (+ (- 2.) (* skoMC1 (- 5.))))) (<= (* skoSC1 (+ (* skoMC1 (+ 1. (* skoMC1 (- 3.)))) (* skoSC1 (+ (* skoMC1 (+ 2. (* skoMC1 3.))) (* skoSC1 (+ (* skoMC1 (+ (/ (- 1.) 6.) skoMC1)) (* skoSC1 (* skoMC1 (/ (- 1.) 4.))))))))) (* skoMC1 (+ 2. (* skoMC1 5.)))) (<= (* skoSC1 (+ (* skoMC1 (+ 1. (* skoMC1 (- 3.)))) (* skoSC1 (+ (* skoMC1 (+ 2. (* skoMC1 3.))) (* skoSC1 (+ (* skoMC1 skoMC1) (* skoSC1 (* skoMC1 (/ (- 1.) 12.))))))))) (* skoMC1 (+ 2. (* skoMC1 5.)))) (<= (* skoSC1 (* skoMC1 (- 1.))) skoMC1) (> (* skoSC1 skoMC1) (* skoMC1 (- 1.))) (<= 0. skoMC1) (> skoMC1 0.) (<= 0. skoSC1) (<= 2. skoMC1) (<= skoSC1 (/ 5. 4.)) (> (* skoSC1 (* skoMC1 (* skoMC1 (* skoMC1 2.)))) (* skoMC1 (* skoMC1 (* skoMC1 (- 2.))))) (<= (* skoSC1 (* skoMC1 (* skoMC1 (* skoMC1 (- 2.))))) (* skoMC1 (* skoMC1 (* skoMC1 2.))))) (succedent (> (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (+ (- 2.) (* skoMC1 (- 12.)))))) (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (+ 1. (* skoMC1 (- 6.)))))) (* skoSC1 (+ (* skoMC1 (* skoMC1 skoMC1)) (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (/ (- 1.) 12.)))) (* skoSC1 (* skoMC1 (* skoMC1 (* skoMC1 (/ (- 1.) 12.))))))))))))) (* skoMC1 (* skoMC1 (* skoMC1 (+ 2. (* skoMC1 6.))))))))
-----[end problem]-----

-----[begin problem]-----
% In Mathematica format:
Timing[Resolve[Exists[{skoSC1,skoMC1}, And[skoSC1*skoMC1*skoMC1*skoMC1*-1<=skoMC1*skoMC1*skoMC1,skoSC1<=0,skoSC1*(skoMC1*skoMC1*skoMC1*(-1+skoMC1*3)+skoSC1*(skoMC1*skoMC1*skoMC1*(-2+skoMC1*-3)+skoSC1*(skoMC1*skoMC1*skoMC1*((1/6)+skoMC1*-1)+skoSC1*skoMC1*skoMC1*skoMC1*(1/4))))>skoMC1*skoMC1*skoMC1*(-2+skoMC1*-5),skoSC1*skoMC1*skoMC1*skoMC1>skoMC1*skoMC1*skoMC1*-1,skoMC1*skoMC1*skoMC1*-2<=0,skoMC1*skoMC1*skoMC1*2>0,skoSC1*(skoMC1*(-1+skoMC1*3)+skoSC1*(skoMC1*(-2+skoMC1*-3)+skoSC1*(skoMC1*((1/6)+skoMC1*-1)+skoSC1*skoMC1*(1/4))))>skoMC1*(-2+skoMC1*-5),skoSC1*(skoMC1*(-1+skoMC1*3)+skoSC1*(skoMC1*(-2+skoMC1*-3)+skoSC1*(skoMC1*skoMC1*-1+skoSC1*skoMC1*(1/12))))>skoMC1*(-2+skoMC1*-5),skoSC1*(skoMC1*(1+skoMC1*-3)+skoSC1*(skoMC1*(2+skoMC1*3)+skoSC1*(skoMC1*((-1/6)+skoMC1)+skoSC1*skoMC1*(-1/4))))<=skoMC1*(2+skoMC1*5),skoSC1*(skoMC1*(1+skoMC1*-3)+skoSC1*(skoMC1*(2+skoMC1*3)+skoSC1*(skoMC1*skoMC1+skoSC1*skoMC1*(-1/12))))<=skoMC1*(2+skoMC1*5),skoSC1*skoMC1*-1<=skoMC1,skoSC1*skoMC1>skoMC1*-1,0<=skoMC1,skoMC1>0,0<=skoSC1,2<=skoMC1,skoSC1<=(5/4),skoSC1*skoMC1*skoMC1*skoMC1*2>skoMC1*skoMC1*skoMC1*-2,skoSC1*skoMC1*skoMC1*skoMC1*-2<=skoMC1*skoMC1*skoMC1*2,skoSC1*(skoMC1*skoMC1*skoMC1*(-2+skoMC1*-12)+skoSC1*(skoMC1*skoMC1*skoMC1*(1+skoMC1*-6)+skoSC1*(skoMC1*skoMC1*skoMC1+skoSC1*(skoMC1*skoMC1*skoMC1*(-1/12)+skoSC1*skoMC1*skoMC1*skoMC1*(-1/12)))))<=skoMC1*skoMC1*skoMC1*(2+skoMC1*6)]], Reals]]

% In QepcadB format:
(E skoSC1) (E skoMC1) [[(skoSC1 skoMC1 skoMC1 skoMC1 (-1))<=(skoMC1 skoMC1 skoMC1)]/\[[skoSC1<=0]/\[[(skoMC1 skoMC1 skoMC1 (-2+(skoMC1 (-5))))<(skoSC1 ((skoMC1 skoMC1 skoMC1 (-1+(skoMC1 (3))))+(skoSC1 ((skoMC1 skoMC1 skoMC1 (-2+(skoMC1 (-3))))+(skoSC1 ((skoMC1 skoMC1 skoMC1 (1/6+(skoMC1 (-1))))+(skoSC1 skoMC1 skoMC1 skoMC1 (1/4))))))))]/\[[(skoMC1 skoMC1 skoMC1 (-1))<(skoSC1 skoMC1 skoMC1 skoMC1)]/\[[(skoMC1 skoMC1 skoMC1 (-2))<=0]/\[[0<(skoMC1 skoMC1 skoMC1 (2))]/\[[(skoMC1 (-2+(skoMC1 (-5))))<(skoSC1 ((skoMC1 (-1+(skoMC1 (3))))+(skoSC1 ((skoMC1 (-2+(skoMC1 (-3))))+(skoSC1 ((skoMC1 (1/6+(skoMC1 (-1))))+(skoSC1 skoMC1 (1/4))))))))]/\[[(skoMC1 (-2+(skoMC1 (-5))))<(skoSC1 ((skoMC1 (-1+(skoMC1 (3))))+(skoSC1 ((skoMC1 (-2+(skoMC1 (-3))))+(skoSC1 ((skoMC1 skoMC1 (-1))+(skoSC1 skoMC1 (1/12))))))))]/\[[(skoSC1 ((skoMC1 (1+(skoMC1 (-3))))+(skoSC1 ((skoMC1 (2+(skoMC1 (3))))+(skoSC1 ((skoMC1 (-1/6+skoMC1))+(skoSC1 skoMC1 (-1/4))))))))<=(skoMC1 (2+(skoMC1 (5))))]/\[[(skoSC1 ((skoMC1 (1+(skoMC1 (-3))))+(skoSC1 ((skoMC1 (2+(skoMC1 (3))))+(skoSC1 ((skoMC1 skoMC1)+(skoSC1 skoMC1 (-1/12))))))))<=(skoMC1 (2+(skoMC1 (5))))]/\[[(skoSC1 skoMC1 (-1))<=skoMC1]/\[[(skoMC1 (-1))<(skoSC1 skoMC1)]/\[[0<=skoMC1]/\[[0<skoMC1]/\[[0<=skoSC1]/\[[2<=skoMC1]/\[[skoSC1<=5/4]/\[[(skoMC1 skoMC1 skoMC1 (-2))<(skoSC1 skoMC1 skoMC1 skoMC1 (2))]/\[[(skoSC1 skoMC1 skoMC1 skoMC1 (-2))<=(skoMC1 skoMC1 skoMC1 (2))]/\[(skoSC1 ((skoMC1 skoMC1 skoMC1 (-2+(skoMC1 (-12))))+(skoSC1 ((skoMC1 skoMC1 skoMC1 (1+(skoMC1 (-6))))+(skoSC1 ((skoMC1 skoMC1 skoMC1)+(skoSC1 ((skoMC1 skoMC1 skoMC1 (-1/12))+(skoSC1 skoMC1 skoMC1 skoMC1 (-1/12))))))))))<=(skoMC1 skoMC1 skoMC1 (2+(skoMC1 (6))))]]]]]]]]]]]]]]]]]]]].

% In SMTLib2 format:
(declare-fun skoSC1 () Real) (declare-fun skoMC1 () Real) (assert (and (<= (* skoSC1 (* skoMC1 (* skoMC1 (* skoMC1 (- 1.))))) (* skoMC1 (* skoMC1 skoMC1))) (and (<= skoSC1 0.) (and (> (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (+ (- 1.) (* skoMC1 3.))))) (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (+ (- 2.) (* skoMC1 (- 3.)))))) (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (+ (/ 1. 6.) (* skoMC1 (- 1.)))))) (* skoSC1 (* skoMC1 (* skoMC1 (* skoMC1 (/ 1. 4.))))))))))) (* skoMC1 (* skoMC1 (* skoMC1 (+ (- 2.) (* skoMC1 (- 5.))))))) (and (> (* skoSC1 (* skoMC1 (* skoMC1 skoMC1))) (* skoMC1 (* skoMC1 (* skoMC1 (- 1.))))) (and (<= (* skoMC1 (* skoMC1 (* skoMC1 (- 2.)))) 0.) (and (> (* skoMC1 (* skoMC1 (* skoMC1 2.))) 0.) (and (> (* skoSC1 (+ (* skoMC1 (+ (- 1.) (* skoMC1 3.))) (* skoSC1 (+ (* skoMC1 (+ (- 2.) (* skoMC1 (- 3.)))) (* skoSC1 (+ (* skoMC1 (+ (/ 1. 6.) (* skoMC1 (- 1.)))) (* skoSC1 (* skoMC1 (/ 1. 4.))))))))) (* skoMC1 (+ (- 2.) (* skoMC1 (- 5.))))) (and (> (* skoSC1 (+ (* skoMC1 (+ (- 1.) (* skoMC1 3.))) (* skoSC1 (+ (* skoMC1 (+ (- 2.) (* skoMC1 (- 3.)))) (* skoSC1 (+ (* skoMC1 (* skoMC1 (- 1.))) (* skoSC1 (* skoMC1 (/ 1. 12.))))))))) (* skoMC1 (+ (- 2.) (* skoMC1 (- 5.))))) (and (<= (* skoSC1 (+ (* skoMC1 (+ 1. (* skoMC1 (- 3.)))) (* skoSC1 (+ (* skoMC1 (+ 2. (* skoMC1 3.))) (* skoSC1 (+ (* skoMC1 (+ (/ (- 1.) 6.) skoMC1)) (* skoSC1 (* skoMC1 (/ (- 1.) 4.))))))))) (* skoMC1 (+ 2. (* skoMC1 5.)))) (and (<= (* skoSC1 (+ (* skoMC1 (+ 1. (* skoMC1 (- 3.)))) (* skoSC1 (+ (* skoMC1 (+ 2. (* skoMC1 3.))) (* skoSC1 (+ (* skoMC1 skoMC1) (* skoSC1 (* skoMC1 (/ (- 1.) 12.))))))))) (* skoMC1 (+ 2. (* skoMC1 5.)))) (and (<= (* skoSC1 (* skoMC1 (- 1.))) skoMC1) (and (> (* skoSC1 skoMC1) (* skoMC1 (- 1.))) (and (<= 0. skoMC1) (and (> skoMC1 0.) (and (<= 0. skoSC1) (and (<= 2. skoMC1) (and (<= skoSC1 (/ 5. 4.)) (and (> (* skoSC1 (* skoMC1 (* skoMC1 (* skoMC1 2.)))) (* skoMC1 (* skoMC1 (* skoMC1 (- 2.))))) (and (<= (* skoSC1 (* skoMC1 (* skoMC1 (* skoMC1 (- 2.))))) (* skoMC1 (* skoMC1 (* skoMC1 2.)))) (<= (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (+ (- 2.) (* skoMC1 (- 12.)))))) (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (+ 1. (* skoMC1 (- 6.)))))) (* skoSC1 (+ (* skoMC1 (* skoMC1 skoMC1)) (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (/ (- 1.) 12.)))) (* skoSC1 (* skoMC1 (* skoMC1 (* skoMC1 (/ (- 1.) 12.))))))))))))) (* skoMC1 (* skoMC1 (* skoMC1 (+ 2. (* skoMC1 6.))))))))))))))))))))))))))

% In GRF format:
(sequent " MetiTarski formula " (antecedent (<= (* skoSC1 (* skoMC1 (* skoMC1 (* skoMC1 (- 1.))))) (* skoMC1 (* skoMC1 skoMC1))) (<= skoSC1 0.) (> (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (+ (- 1.) (* skoMC1 3.))))) (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (+ (- 2.) (* skoMC1 (- 3.)))))) (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (+ (/ 1. 6.) (* skoMC1 (- 1.)))))) (* skoSC1 (* skoMC1 (* skoMC1 (* skoMC1 (/ 1. 4.))))))))))) (* skoMC1 (* skoMC1 (* skoMC1 (+ (- 2.) (* skoMC1 (- 5.))))))) (> (* skoSC1 (* skoMC1 (* skoMC1 skoMC1))) (* skoMC1 (* skoMC1 (* skoMC1 (- 1.))))) (<= (* skoMC1 (* skoMC1 (* skoMC1 (- 2.)))) 0.) (> (* skoMC1 (* skoMC1 (* skoMC1 2.))) 0.) (> (* skoSC1 (+ (* skoMC1 (+ (- 1.) (* skoMC1 3.))) (* skoSC1 (+ (* skoMC1 (+ (- 2.) (* skoMC1 (- 3.)))) (* skoSC1 (+ (* skoMC1 (+ (/ 1. 6.) (* skoMC1 (- 1.)))) (* skoSC1 (* skoMC1 (/ 1. 4.))))))))) (* skoMC1 (+ (- 2.) (* skoMC1 (- 5.))))) (> (* skoSC1 (+ (* skoMC1 (+ (- 1.) (* skoMC1 3.))) (* skoSC1 (+ (* skoMC1 (+ (- 2.) (* skoMC1 (- 3.)))) (* skoSC1 (+ (* skoMC1 (* skoMC1 (- 1.))) (* skoSC1 (* skoMC1 (/ 1. 12.))))))))) (* skoMC1 (+ (- 2.) (* skoMC1 (- 5.))))) (<= (* skoSC1 (+ (* skoMC1 (+ 1. (* skoMC1 (- 3.)))) (* skoSC1 (+ (* skoMC1 (+ 2. (* skoMC1 3.))) (* skoSC1 (+ (* skoMC1 (+ (/ (- 1.) 6.) skoMC1)) (* skoSC1 (* skoMC1 (/ (- 1.) 4.))))))))) (* skoMC1 (+ 2. (* skoMC1 5.)))) (<= (* skoSC1 (+ (* skoMC1 (+ 1. (* skoMC1 (- 3.)))) (* skoSC1 (+ (* skoMC1 (+ 2. (* skoMC1 3.))) (* skoSC1 (+ (* skoMC1 skoMC1) (* skoSC1 (* skoMC1 (/ (- 1.) 12.))))))))) (* skoMC1 (+ 2. (* skoMC1 5.)))) (<= (* skoSC1 (* skoMC1 (- 1.))) skoMC1) (> (* skoSC1 skoMC1) (* skoMC1 (- 1.))) (<= 0. skoMC1) (> skoMC1 0.) (<= 0. skoSC1) (<= 2. skoMC1) (<= skoSC1 (/ 5. 4.)) (> (* skoSC1 (* skoMC1 (* skoMC1 (* skoMC1 2.)))) (* skoMC1 (* skoMC1 (* skoMC1 (- 2.))))) (<= (* skoSC1 (* skoMC1 (* skoMC1 (* skoMC1 (- 2.))))) (* skoMC1 (* skoMC1 (* skoMC1 2.))))) (succedent (> (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (+ (- 2.) (* skoMC1 (- 12.)))))) (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (+ 1. (* skoMC1 (- 6.)))))) (* skoSC1 (+ (* skoMC1 (* skoMC1 skoMC1)) (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (/ (- 1.) 12.)))) (* skoSC1 (* skoMC1 (* skoMC1 (* skoMC1 (/ (- 1.) 12.))))))))))))) (* skoMC1 (* skoMC1 (* skoMC1 (+ 2. (* skoMC1 6.))))))))
-----[end problem]-----

-----[begin problem]-----
% In Mathematica format:
Timing[Resolve[Exists[{skoSC1,skoMC1}, And[skoMC1*skoMC1*skoMC1*2<=0,skoSC1<=0,skoSC1*(skoMC1*skoMC1*skoMC1*(-1+skoMC1*3)+skoSC1*(skoMC1*skoMC1*skoMC1*(-2+skoMC1*-3)+skoSC1*(skoMC1*skoMC1*skoMC1*((1/6)+skoMC1*-1)+skoSC1*skoMC1*skoMC1*skoMC1*(1/4))))>skoMC1*skoMC1*skoMC1*(-2+skoMC1*-5),skoSC1*skoMC1*skoMC1*skoMC1>skoMC1*skoMC1*skoMC1*-1,skoMC1*skoMC1*skoMC1*-2<=0,skoMC1*skoMC1*skoMC1*2>0,skoSC1*(skoMC1*(-1+skoMC1*3)+skoSC1*(skoMC1*(-2+skoMC1*-3)+skoSC1*(skoMC1*((1/6)+skoMC1*-1)+skoSC1*skoMC1*(1/4))))>skoMC1*(-2+skoMC1*-5),skoSC1*(skoMC1*(-1+skoMC1*3)+skoSC1*(skoMC1*(-2+skoMC1*-3)+skoSC1*(skoMC1*skoMC1*-1+skoSC1*skoMC1*(1/12))))>skoMC1*(-2+skoMC1*-5),skoSC1*(skoMC1*(1+skoMC1*-3)+skoSC1*(skoMC1*(2+skoMC1*3)+skoSC1*(skoMC1*((-1/6)+skoMC1)+skoSC1*skoMC1*(-1/4))))<=skoMC1*(2+skoMC1*5),skoSC1*(skoMC1*(1+skoMC1*-3)+skoSC1*(skoMC1*(2+skoMC1*3)+skoSC1*(skoMC1*skoMC1+skoSC1*skoMC1*(-1/12))))<=skoMC1*(2+skoMC1*5),skoSC1*skoMC1*-1<=skoMC1,skoSC1*skoMC1>skoMC1*-1,0<=skoMC1,skoMC1>0,0<=skoSC1,2<=skoMC1,skoSC1<=(5/4),skoSC1*skoMC1*skoMC1*skoMC1*2>skoMC1*skoMC1*skoMC1*-2,skoSC1*skoMC1*skoMC1*skoMC1*-2<=skoMC1*skoMC1*skoMC1*2,skoSC1*(skoMC1*skoMC1*skoMC1*(-2+skoMC1*-12)+skoSC1*(skoMC1*skoMC1*skoMC1*(1+skoMC1*-6)+skoSC1*(skoMC1*skoMC1*skoMC1+skoSC1*(skoMC1*skoMC1*skoMC1*(-1/12)+skoSC1*skoMC1*skoMC1*skoMC1*(-1/12)))))<=skoMC1*skoMC1*skoMC1*(2+skoMC1*6)]], Reals]]

% In QepcadB format:
(E skoSC1) (E skoMC1) [[(skoMC1 skoMC1 skoMC1 (2))<=0]/\[[skoSC1<=0]/\[[(skoMC1 skoMC1 skoMC1 (-2+(skoMC1 (-5))))<(skoSC1 ((skoMC1 skoMC1 skoMC1 (-1+(skoMC1 (3))))+(skoSC1 ((skoMC1 skoMC1 skoMC1 (-2+(skoMC1 (-3))))+(skoSC1 ((skoMC1 skoMC1 skoMC1 (1/6+(skoMC1 (-1))))+(skoSC1 skoMC1 skoMC1 skoMC1 (1/4))))))))]/\[[(skoMC1 skoMC1 skoMC1 (-1))<(skoSC1 skoMC1 skoMC1 skoMC1)]/\[[(skoMC1 skoMC1 skoMC1 (-2))<=0]/\[[0<(skoMC1 skoMC1 skoMC1 (2))]/\[[(skoMC1 (-2+(skoMC1 (-5))))<(skoSC1 ((skoMC1 (-1+(skoMC1 (3))))+(skoSC1 ((skoMC1 (-2+(skoMC1 (-3))))+(skoSC1 ((skoMC1 (1/6+(skoMC1 (-1))))+(skoSC1 skoMC1 (1/4))))))))]/\[[(skoMC1 (-2+(skoMC1 (-5))))<(skoSC1 ((skoMC1 (-1+(skoMC1 (3))))+(skoSC1 ((skoMC1 (-2+(skoMC1 (-3))))+(skoSC1 ((skoMC1 skoMC1 (-1))+(skoSC1 skoMC1 (1/12))))))))]/\[[(skoSC1 ((skoMC1 (1+(skoMC1 (-3))))+(skoSC1 ((skoMC1 (2+(skoMC1 (3))))+(skoSC1 ((skoMC1 (-1/6+skoMC1))+(skoSC1 skoMC1 (-1/4))))))))<=(skoMC1 (2+(skoMC1 (5))))]/\[[(skoSC1 ((skoMC1 (1+(skoMC1 (-3))))+(skoSC1 ((skoMC1 (2+(skoMC1 (3))))+(skoSC1 ((skoMC1 skoMC1)+(skoSC1 skoMC1 (-1/12))))))))<=(skoMC1 (2+(skoMC1 (5))))]/\[[(skoSC1 skoMC1 (-1))<=skoMC1]/\[[(skoMC1 (-1))<(skoSC1 skoMC1)]/\[[0<=skoMC1]/\[[0<skoMC1]/\[[0<=skoSC1]/\[[2<=skoMC1]/\[[skoSC1<=5/4]/\[[(skoMC1 skoMC1 skoMC1 (-2))<(skoSC1 skoMC1 skoMC1 skoMC1 (2))]/\[[(skoSC1 skoMC1 skoMC1 skoMC1 (-2))<=(skoMC1 skoMC1 skoMC1 (2))]/\[(skoSC1 ((skoMC1 skoMC1 skoMC1 (-2+(skoMC1 (-12))))+(skoSC1 ((skoMC1 skoMC1 skoMC1 (1+(skoMC1 (-6))))+(skoSC1 ((skoMC1 skoMC1 skoMC1)+(skoSC1 ((skoMC1 skoMC1 skoMC1 (-1/12))+(skoSC1 skoMC1 skoMC1 skoMC1 (-1/12))))))))))<=(skoMC1 skoMC1 skoMC1 (2+(skoMC1 (6))))]]]]]]]]]]]]]]]]]]]].

% In SMTLib2 format:
(declare-fun skoSC1 () Real) (declare-fun skoMC1 () Real) (assert (and (<= (* skoMC1 (* skoMC1 (* skoMC1 2.))) 0.) (and (<= skoSC1 0.) (and (> (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (+ (- 1.) (* skoMC1 3.))))) (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (+ (- 2.) (* skoMC1 (- 3.)))))) (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (+ (/ 1. 6.) (* skoMC1 (- 1.)))))) (* skoSC1 (* skoMC1 (* skoMC1 (* skoMC1 (/ 1. 4.))))))))))) (* skoMC1 (* skoMC1 (* skoMC1 (+ (- 2.) (* skoMC1 (- 5.))))))) (and (> (* skoSC1 (* skoMC1 (* skoMC1 skoMC1))) (* skoMC1 (* skoMC1 (* skoMC1 (- 1.))))) (and (<= (* skoMC1 (* skoMC1 (* skoMC1 (- 2.)))) 0.) (and (> (* skoMC1 (* skoMC1 (* skoMC1 2.))) 0.) (and (> (* skoSC1 (+ (* skoMC1 (+ (- 1.) (* skoMC1 3.))) (* skoSC1 (+ (* skoMC1 (+ (- 2.) (* skoMC1 (- 3.)))) (* skoSC1 (+ (* skoMC1 (+ (/ 1. 6.) (* skoMC1 (- 1.)))) (* skoSC1 (* skoMC1 (/ 1. 4.))))))))) (* skoMC1 (+ (- 2.) (* skoMC1 (- 5.))))) (and (> (* skoSC1 (+ (* skoMC1 (+ (- 1.) (* skoMC1 3.))) (* skoSC1 (+ (* skoMC1 (+ (- 2.) (* skoMC1 (- 3.)))) (* skoSC1 (+ (* skoMC1 (* skoMC1 (- 1.))) (* skoSC1 (* skoMC1 (/ 1. 12.))))))))) (* skoMC1 (+ (- 2.) (* skoMC1 (- 5.))))) (and (<= (* skoSC1 (+ (* skoMC1 (+ 1. (* skoMC1 (- 3.)))) (* skoSC1 (+ (* skoMC1 (+ 2. (* skoMC1 3.))) (* skoSC1 (+ (* skoMC1 (+ (/ (- 1.) 6.) skoMC1)) (* skoSC1 (* skoMC1 (/ (- 1.) 4.))))))))) (* skoMC1 (+ 2. (* skoMC1 5.)))) (and (<= (* skoSC1 (+ (* skoMC1 (+ 1. (* skoMC1 (- 3.)))) (* skoSC1 (+ (* skoMC1 (+ 2. (* skoMC1 3.))) (* skoSC1 (+ (* skoMC1 skoMC1) (* skoSC1 (* skoMC1 (/ (- 1.) 12.))))))))) (* skoMC1 (+ 2. (* skoMC1 5.)))) (and (<= (* skoSC1 (* skoMC1 (- 1.))) skoMC1) (and (> (* skoSC1 skoMC1) (* skoMC1 (- 1.))) (and (<= 0. skoMC1) (and (> skoMC1 0.) (and (<= 0. skoSC1) (and (<= 2. skoMC1) (and (<= skoSC1 (/ 5. 4.)) (and (> (* skoSC1 (* skoMC1 (* skoMC1 (* skoMC1 2.)))) (* skoMC1 (* skoMC1 (* skoMC1 (- 2.))))) (and (<= (* skoSC1 (* skoMC1 (* skoMC1 (* skoMC1 (- 2.))))) (* skoMC1 (* skoMC1 (* skoMC1 2.)))) (<= (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (+ (- 2.) (* skoMC1 (- 12.)))))) (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (+ 1. (* skoMC1 (- 6.)))))) (* skoSC1 (+ (* skoMC1 (* skoMC1 skoMC1)) (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (/ (- 1.) 12.)))) (* skoSC1 (* skoMC1 (* skoMC1 (* skoMC1 (/ (- 1.) 12.))))))))))))) (* skoMC1 (* skoMC1 (* skoMC1 (+ 2. (* skoMC1 6.))))))))))))))))))))))))))

% In GRF format:
(sequent " MetiTarski formula " (antecedent (<= (* skoMC1 (* skoMC1 (* skoMC1 2.))) 0.) (<= skoSC1 0.) (> (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (+ (- 1.) (* skoMC1 3.))))) (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (+ (- 2.) (* skoMC1 (- 3.)))))) (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (+ (/ 1. 6.) (* skoMC1 (- 1.)))))) (* skoSC1 (* skoMC1 (* skoMC1 (* skoMC1 (/ 1. 4.))))))))))) (* skoMC1 (* skoMC1 (* skoMC1 (+ (- 2.) (* skoMC1 (- 5.))))))) (> (* skoSC1 (* skoMC1 (* skoMC1 skoMC1))) (* skoMC1 (* skoMC1 (* skoMC1 (- 1.))))) (<= (* skoMC1 (* skoMC1 (* skoMC1 (- 2.)))) 0.) (> (* skoMC1 (* skoMC1 (* skoMC1 2.))) 0.) (> (* skoSC1 (+ (* skoMC1 (+ (- 1.) (* skoMC1 3.))) (* skoSC1 (+ (* skoMC1 (+ (- 2.) (* skoMC1 (- 3.)))) (* skoSC1 (+ (* skoMC1 (+ (/ 1. 6.) (* skoMC1 (- 1.)))) (* skoSC1 (* skoMC1 (/ 1. 4.))))))))) (* skoMC1 (+ (- 2.) (* skoMC1 (- 5.))))) (> (* skoSC1 (+ (* skoMC1 (+ (- 1.) (* skoMC1 3.))) (* skoSC1 (+ (* skoMC1 (+ (- 2.) (* skoMC1 (- 3.)))) (* skoSC1 (+ (* skoMC1 (* skoMC1 (- 1.))) (* skoSC1 (* skoMC1 (/ 1. 12.))))))))) (* skoMC1 (+ (- 2.) (* skoMC1 (- 5.))))) (<= (* skoSC1 (+ (* skoMC1 (+ 1. (* skoMC1 (- 3.)))) (* skoSC1 (+ (* skoMC1 (+ 2. (* skoMC1 3.))) (* skoSC1 (+ (* skoMC1 (+ (/ (- 1.) 6.) skoMC1)) (* skoSC1 (* skoMC1 (/ (- 1.) 4.))))))))) (* skoMC1 (+ 2. (* skoMC1 5.)))) (<= (* skoSC1 (+ (* skoMC1 (+ 1. (* skoMC1 (- 3.)))) (* skoSC1 (+ (* skoMC1 (+ 2. (* skoMC1 3.))) (* skoSC1 (+ (* skoMC1 skoMC1) (* skoSC1 (* skoMC1 (/ (- 1.) 12.))))))))) (* skoMC1 (+ 2. (* skoMC1 5.)))) (<= (* skoSC1 (* skoMC1 (- 1.))) skoMC1) (> (* skoSC1 skoMC1) (* skoMC1 (- 1.))) (<= 0. skoMC1) (> skoMC1 0.) (<= 0. skoSC1) (<= 2. skoMC1) (<= skoSC1 (/ 5. 4.)) (> (* skoSC1 (* skoMC1 (* skoMC1 (* skoMC1 2.)))) (* skoMC1 (* skoMC1 (* skoMC1 (- 2.))))) (<= (* skoSC1 (* skoMC1 (* skoMC1 (* skoMC1 (- 2.))))) (* skoMC1 (* skoMC1 (* skoMC1 2.))))) (succedent (> (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (+ (- 2.) (* skoMC1 (- 12.)))))) (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (+ 1. (* skoMC1 (- 6.)))))) (* skoSC1 (+ (* skoMC1 (* skoMC1 skoMC1)) (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (/ (- 1.) 12.)))) (* skoSC1 (* skoMC1 (* skoMC1 (* skoMC1 (/ (- 1.) 12.))))))))))))) (* skoMC1 (* skoMC1 (* skoMC1 (+ 2. (* skoMC1 6.))))))))
-----[end problem]-----

-----[begin problem]-----
% In Mathematica format:
Timing[Resolve[Exists[{skoSC1,skoMC1}, And[skoMC1*skoMC1*skoMC1*-2<=0,skoSC1<=0,skoSC1*(skoMC1*skoMC1*skoMC1*(-1+skoMC1*3)+skoSC1*(skoMC1*skoMC1*skoMC1*(-2+skoMC1*-3)+skoSC1*(skoMC1*skoMC1*skoMC1*((1/6)+skoMC1*-1)+skoSC1*skoMC1*skoMC1*skoMC1*(1/4))))>skoMC1*skoMC1*skoMC1*(-2+skoMC1*-5),skoSC1*skoMC1*skoMC1*skoMC1>skoMC1*skoMC1*skoMC1*-1,skoMC1*skoMC1*skoMC1*-2<=0,skoMC1*skoMC1*skoMC1*2>0,skoSC1*(skoMC1*(-1+skoMC1*3)+skoSC1*(skoMC1*(-2+skoMC1*-3)+skoSC1*(skoMC1*((1/6)+skoMC1*-1)+skoSC1*skoMC1*(1/4))))>skoMC1*(-2+skoMC1*-5),skoSC1*(skoMC1*(-1+skoMC1*3)+skoSC1*(skoMC1*(-2+skoMC1*-3)+skoSC1*(skoMC1*skoMC1*-1+skoSC1*skoMC1*(1/12))))>skoMC1*(-2+skoMC1*-5),skoSC1*(skoMC1*(1+skoMC1*-3)+skoSC1*(skoMC1*(2+skoMC1*3)+skoSC1*(skoMC1*((-1/6)+skoMC1)+skoSC1*skoMC1*(-1/4))))<=skoMC1*(2+skoMC1*5),skoSC1*(skoMC1*(1+skoMC1*-3)+skoSC1*(skoMC1*(2+skoMC1*3)+skoSC1*(skoMC1*skoMC1+skoSC1*skoMC1*(-1/12))))<=skoMC1*(2+skoMC1*5),skoSC1*skoMC1*-1<=skoMC1,skoSC1*skoMC1>skoMC1*-1,0<=skoMC1,skoMC1>0,0<=skoSC1,2<=skoMC1,skoSC1<=(5/4),skoSC1*skoMC1*skoMC1*skoMC1*2>skoMC1*skoMC1*skoMC1*-2,skoSC1*skoMC1*skoMC1*skoMC1*-2<=skoMC1*skoMC1*skoMC1*2,skoSC1*(skoMC1*skoMC1*skoMC1*(-2+skoMC1*-12)+skoSC1*(skoMC1*skoMC1*skoMC1*(1+skoMC1*-6)+skoSC1*(skoMC1*skoMC1*skoMC1+skoSC1*(skoMC1*skoMC1*skoMC1*(-1/12)+skoSC1*skoMC1*skoMC1*skoMC1*(-1/12)))))<=skoMC1*skoMC1*skoMC1*(2+skoMC1*6)]], Reals]]

% In QepcadB format:
(E skoSC1) (E skoMC1) [[(skoMC1 skoMC1 skoMC1 (-2))<=0]/\[[skoSC1<=0]/\[[(skoMC1 skoMC1 skoMC1 (-2+(skoMC1 (-5))))<(skoSC1 ((skoMC1 skoMC1 skoMC1 (-1+(skoMC1 (3))))+(skoSC1 ((skoMC1 skoMC1 skoMC1 (-2+(skoMC1 (-3))))+(skoSC1 ((skoMC1 skoMC1 skoMC1 (1/6+(skoMC1 (-1))))+(skoSC1 skoMC1 skoMC1 skoMC1 (1/4))))))))]/\[[(skoMC1 skoMC1 skoMC1 (-1))<(skoSC1 skoMC1 skoMC1 skoMC1)]/\[[(skoMC1 skoMC1 skoMC1 (-2))<=0]/\[[0<(skoMC1 skoMC1 skoMC1 (2))]/\[[(skoMC1 (-2+(skoMC1 (-5))))<(skoSC1 ((skoMC1 (-1+(skoMC1 (3))))+(skoSC1 ((skoMC1 (-2+(skoMC1 (-3))))+(skoSC1 ((skoMC1 (1/6+(skoMC1 (-1))))+(skoSC1 skoMC1 (1/4))))))))]/\[[(skoMC1 (-2+(skoMC1 (-5))))<(skoSC1 ((skoMC1 (-1+(skoMC1 (3))))+(skoSC1 ((skoMC1 (-2+(skoMC1 (-3))))+(skoSC1 ((skoMC1 skoMC1 (-1))+(skoSC1 skoMC1 (1/12))))))))]/\[[(skoSC1 ((skoMC1 (1+(skoMC1 (-3))))+(skoSC1 ((skoMC1 (2+(skoMC1 (3))))+(skoSC1 ((skoMC1 (-1/6+skoMC1))+(skoSC1 skoMC1 (-1/4))))))))<=(skoMC1 (2+(skoMC1 (5))))]/\[[(skoSC1 ((skoMC1 (1+(skoMC1 (-3))))+(skoSC1 ((skoMC1 (2+(skoMC1 (3))))+(skoSC1 ((skoMC1 skoMC1)+(skoSC1 skoMC1 (-1/12))))))))<=(skoMC1 (2+(skoMC1 (5))))]/\[[(skoSC1 skoMC1 (-1))<=skoMC1]/\[[(skoMC1 (-1))<(skoSC1 skoMC1)]/\[[0<=skoMC1]/\[[0<skoMC1]/\[[0<=skoSC1]/\[[2<=skoMC1]/\[[skoSC1<=5/4]/\[[(skoMC1 skoMC1 skoMC1 (-2))<(skoSC1 skoMC1 skoMC1 skoMC1 (2))]/\[[(skoSC1 skoMC1 skoMC1 skoMC1 (-2))<=(skoMC1 skoMC1 skoMC1 (2))]/\[(skoSC1 ((skoMC1 skoMC1 skoMC1 (-2+(skoMC1 (-12))))+(skoSC1 ((skoMC1 skoMC1 skoMC1 (1+(skoMC1 (-6))))+(skoSC1 ((skoMC1 skoMC1 skoMC1)+(skoSC1 ((skoMC1 skoMC1 skoMC1 (-1/12))+(skoSC1 skoMC1 skoMC1 skoMC1 (-1/12))))))))))<=(skoMC1 skoMC1 skoMC1 (2+(skoMC1 (6))))]]]]]]]]]]]]]]]]]]]].

% In SMTLib2 format:
(declare-fun skoSC1 () Real) (declare-fun skoMC1 () Real) (assert (and (<= (* skoMC1 (* skoMC1 (* skoMC1 (- 2.)))) 0.) (and (<= skoSC1 0.) (and (> (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (+ (- 1.) (* skoMC1 3.))))) (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (+ (- 2.) (* skoMC1 (- 3.)))))) (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (+ (/ 1. 6.) (* skoMC1 (- 1.)))))) (* skoSC1 (* skoMC1 (* skoMC1 (* skoMC1 (/ 1. 4.))))))))))) (* skoMC1 (* skoMC1 (* skoMC1 (+ (- 2.) (* skoMC1 (- 5.))))))) (and (> (* skoSC1 (* skoMC1 (* skoMC1 skoMC1))) (* skoMC1 (* skoMC1 (* skoMC1 (- 1.))))) (and (<= (* skoMC1 (* skoMC1 (* skoMC1 (- 2.)))) 0.) (and (> (* skoMC1 (* skoMC1 (* skoMC1 2.))) 0.) (and (> (* skoSC1 (+ (* skoMC1 (+ (- 1.) (* skoMC1 3.))) (* skoSC1 (+ (* skoMC1 (+ (- 2.) (* skoMC1 (- 3.)))) (* skoSC1 (+ (* skoMC1 (+ (/ 1. 6.) (* skoMC1 (- 1.)))) (* skoSC1 (* skoMC1 (/ 1. 4.))))))))) (* skoMC1 (+ (- 2.) (* skoMC1 (- 5.))))) (and (> (* skoSC1 (+ (* skoMC1 (+ (- 1.) (* skoMC1 3.))) (* skoSC1 (+ (* skoMC1 (+ (- 2.) (* skoMC1 (- 3.)))) (* skoSC1 (+ (* skoMC1 (* skoMC1 (- 1.))) (* skoSC1 (* skoMC1 (/ 1. 12.))))))))) (* skoMC1 (+ (- 2.) (* skoMC1 (- 5.))))) (and (<= (* skoSC1 (+ (* skoMC1 (+ 1. (* skoMC1 (- 3.)))) (* skoSC1 (+ (* skoMC1 (+ 2. (* skoMC1 3.))) (* skoSC1 (+ (* skoMC1 (+ (/ (- 1.) 6.) skoMC1)) (* skoSC1 (* skoMC1 (/ (- 1.) 4.))))))))) (* skoMC1 (+ 2. (* skoMC1 5.)))) (and (<= (* skoSC1 (+ (* skoMC1 (+ 1. (* skoMC1 (- 3.)))) (* skoSC1 (+ (* skoMC1 (+ 2. (* skoMC1 3.))) (* skoSC1 (+ (* skoMC1 skoMC1) (* skoSC1 (* skoMC1 (/ (- 1.) 12.))))))))) (* skoMC1 (+ 2. (* skoMC1 5.)))) (and (<= (* skoSC1 (* skoMC1 (- 1.))) skoMC1) (and (> (* skoSC1 skoMC1) (* skoMC1 (- 1.))) (and (<= 0. skoMC1) (and (> skoMC1 0.) (and (<= 0. skoSC1) (and (<= 2. skoMC1) (and (<= skoSC1 (/ 5. 4.)) (and (> (* skoSC1 (* skoMC1 (* skoMC1 (* skoMC1 2.)))) (* skoMC1 (* skoMC1 (* skoMC1 (- 2.))))) (and (<= (* skoSC1 (* skoMC1 (* skoMC1 (* skoMC1 (- 2.))))) (* skoMC1 (* skoMC1 (* skoMC1 2.)))) (<= (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (+ (- 2.) (* skoMC1 (- 12.)))))) (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (+ 1. (* skoMC1 (- 6.)))))) (* skoSC1 (+ (* skoMC1 (* skoMC1 skoMC1)) (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (/ (- 1.) 12.)))) (* skoSC1 (* skoMC1 (* skoMC1 (* skoMC1 (/ (- 1.) 12.))))))))))))) (* skoMC1 (* skoMC1 (* skoMC1 (+ 2. (* skoMC1 6.))))))))))))))))))))))))))

% In GRF format:
(sequent " MetiTarski formula " (antecedent (<= (* skoMC1 (* skoMC1 (* skoMC1 (- 2.)))) 0.) (<= skoSC1 0.) (> (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (+ (- 1.) (* skoMC1 3.))))) (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (+ (- 2.) (* skoMC1 (- 3.)))))) (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (+ (/ 1. 6.) (* skoMC1 (- 1.)))))) (* skoSC1 (* skoMC1 (* skoMC1 (* skoMC1 (/ 1. 4.))))))))))) (* skoMC1 (* skoMC1 (* skoMC1 (+ (- 2.) (* skoMC1 (- 5.))))))) (> (* skoSC1 (* skoMC1 (* skoMC1 skoMC1))) (* skoMC1 (* skoMC1 (* skoMC1 (- 1.))))) (<= (* skoMC1 (* skoMC1 (* skoMC1 (- 2.)))) 0.) (> (* skoMC1 (* skoMC1 (* skoMC1 2.))) 0.) (> (* skoSC1 (+ (* skoMC1 (+ (- 1.) (* skoMC1 3.))) (* skoSC1 (+ (* skoMC1 (+ (- 2.) (* skoMC1 (- 3.)))) (* skoSC1 (+ (* skoMC1 (+ (/ 1. 6.) (* skoMC1 (- 1.)))) (* skoSC1 (* skoMC1 (/ 1. 4.))))))))) (* skoMC1 (+ (- 2.) (* skoMC1 (- 5.))))) (> (* skoSC1 (+ (* skoMC1 (+ (- 1.) (* skoMC1 3.))) (* skoSC1 (+ (* skoMC1 (+ (- 2.) (* skoMC1 (- 3.)))) (* skoSC1 (+ (* skoMC1 (* skoMC1 (- 1.))) (* skoSC1 (* skoMC1 (/ 1. 12.))))))))) (* skoMC1 (+ (- 2.) (* skoMC1 (- 5.))))) (<= (* skoSC1 (+ (* skoMC1 (+ 1. (* skoMC1 (- 3.)))) (* skoSC1 (+ (* skoMC1 (+ 2. (* skoMC1 3.))) (* skoSC1 (+ (* skoMC1 (+ (/ (- 1.) 6.) skoMC1)) (* skoSC1 (* skoMC1 (/ (- 1.) 4.))))))))) (* skoMC1 (+ 2. (* skoMC1 5.)))) (<= (* skoSC1 (+ (* skoMC1 (+ 1. (* skoMC1 (- 3.)))) (* skoSC1 (+ (* skoMC1 (+ 2. (* skoMC1 3.))) (* skoSC1 (+ (* skoMC1 skoMC1) (* skoSC1 (* skoMC1 (/ (- 1.) 12.))))))))) (* skoMC1 (+ 2. (* skoMC1 5.)))) (<= (* skoSC1 (* skoMC1 (- 1.))) skoMC1) (> (* skoSC1 skoMC1) (* skoMC1 (- 1.))) (<= 0. skoMC1) (> skoMC1 0.) (<= 0. skoSC1) (<= 2. skoMC1) (<= skoSC1 (/ 5. 4.)) (> (* skoSC1 (* skoMC1 (* skoMC1 (* skoMC1 2.)))) (* skoMC1 (* skoMC1 (* skoMC1 (- 2.))))) (<= (* skoSC1 (* skoMC1 (* skoMC1 (* skoMC1 (- 2.))))) (* skoMC1 (* skoMC1 (* skoMC1 2.))))) (succedent (> (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (+ (- 2.) (* skoMC1 (- 12.)))))) (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (+ 1. (* skoMC1 (- 6.)))))) (* skoSC1 (+ (* skoMC1 (* skoMC1 skoMC1)) (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (/ (- 1.) 12.)))) (* skoSC1 (* skoMC1 (* skoMC1 (* skoMC1 (/ (- 1.) 12.))))))))))))) (* skoMC1 (* skoMC1 (* skoMC1 (+ 2. (* skoMC1 6.))))))))
-----[end problem]-----

-----[begin problem]-----
% In Mathematica format:
Timing[Resolve[Exists[{skoSC1,skoMC1}, And[skoSC1<=0,skoMC1*skoMC1*skoMC1*2>0,skoSC1*(skoMC1*skoMC1*skoMC1*(-1+skoMC1*3)+skoSC1*(skoMC1*skoMC1*skoMC1*(-2+skoMC1*-3)+skoSC1*(skoMC1*skoMC1*skoMC1*skoMC1*-1+skoSC1*skoMC1*skoMC1*skoMC1*(1/12))))>skoMC1*skoMC1*skoMC1*(-2+skoMC1*-5),skoSC1*(skoMC1*skoMC1*skoMC1*(-1+skoMC1*3)+skoSC1*(skoMC1*skoMC1*skoMC1*(-2+skoMC1*-3)+skoSC1*(skoMC1*skoMC1*skoMC1*((1/6)+skoMC1*-1)+skoSC1*skoMC1*skoMC1*skoMC1*(1/4))))>skoMC1*skoMC1*skoMC1*(-2+skoMC1*-5),skoSC1*skoMC1*skoMC1*skoMC1>skoMC1*skoMC1*skoMC1*-1,skoMC1*skoMC1*skoMC1*-2<=0,skoMC1*skoMC1*skoMC1*2>0,skoSC1*(skoMC1*(-1+skoMC1*3)+skoSC1*(skoMC1*(-2+skoMC1*-3)+skoSC1*(skoMC1*((1/6)+skoMC1*-1)+skoSC1*skoMC1*(1/4))))>skoMC1*(-2+skoMC1*-5),skoSC1*(skoMC1*(-1+skoMC1*3)+skoSC1*(skoMC1*(-2+skoMC1*-3)+skoSC1*(skoMC1*skoMC1*-1+skoSC1*skoMC1*(1/12))))>skoMC1*(-2+skoMC1*-5),skoSC1*(skoMC1*(1+skoMC1*-3)+skoSC1*(skoMC1*(2+skoMC1*3)+skoSC1*(skoMC1*((-1/6)+skoMC1)+skoSC1*skoMC1*(-1/4))))<=skoMC1*(2+skoMC1*5),skoSC1*(skoMC1*(1+skoMC1*-3)+skoSC1*(skoMC1*(2+skoMC1*3)+skoSC1*(skoMC1*skoMC1+skoSC1*skoMC1*(-1/12))))<=skoMC1*(2+skoMC1*5),skoSC1*skoMC1*-1<=skoMC1,skoSC1*skoMC1>skoMC1*-1,0<=skoMC1,skoMC1>0,0<=skoSC1,2<=skoMC1,skoSC1<=(5/4),skoSC1*skoMC1*skoMC1*skoMC1*2>skoMC1*skoMC1*skoMC1*-2,skoSC1*skoMC1*skoMC1*skoMC1*-2<=skoMC1*skoMC1*skoMC1*2,skoSC1*(skoMC1*skoMC1*skoMC1*(-2+skoMC1*-12)+skoSC1*(skoMC1*skoMC1*skoMC1*(1+skoMC1*-6)+skoSC1*(skoMC1*skoMC1*skoMC1+skoSC1*(skoMC1*skoMC1*skoMC1*(-1/12)+skoSC1*skoMC1*skoMC1*skoMC1*(-1/12)))))<=skoMC1*skoMC1*skoMC1*(2+skoMC1*6)]], Reals]]

% In QepcadB format:
(E skoSC1) (E skoMC1) [[skoSC1<=0]/\[[0<(skoMC1 skoMC1 skoMC1 (2))]/\[[(skoMC1 skoMC1 skoMC1 (-2+(skoMC1 (-5))))<(skoSC1 ((skoMC1 skoMC1 skoMC1 (-1+(skoMC1 (3))))+(skoSC1 ((skoMC1 skoMC1 skoMC1 (-2+(skoMC1 (-3))))+(skoSC1 ((skoMC1 skoMC1 skoMC1 skoMC1 (-1))+(skoSC1 skoMC1 skoMC1 skoMC1 (1/12))))))))]/\[[(skoMC1 skoMC1 skoMC1 (-2+(skoMC1 (-5))))<(skoSC1 ((skoMC1 skoMC1 skoMC1 (-1+(skoMC1 (3))))+(skoSC1 ((skoMC1 skoMC1 skoMC1 (-2+(skoMC1 (-3))))+(skoSC1 ((skoMC1 skoMC1 skoMC1 (1/6+(skoMC1 (-1))))+(skoSC1 skoMC1 skoMC1 skoMC1 (1/4))))))))]/\[[(skoMC1 skoMC1 skoMC1 (-1))<(skoSC1 skoMC1 skoMC1 skoMC1)]/\[[(skoMC1 skoMC1 skoMC1 (-2))<=0]/\[[0<(skoMC1 skoMC1 skoMC1 (2))]/\[[(skoMC1 (-2+(skoMC1 (-5))))<(skoSC1 ((skoMC1 (-1+(skoMC1 (3))))+(skoSC1 ((skoMC1 (-2+(skoMC1 (-3))))+(skoSC1 ((skoMC1 (1/6+(skoMC1 (-1))))+(skoSC1 skoMC1 (1/4))))))))]/\[[(skoMC1 (-2+(skoMC1 (-5))))<(skoSC1 ((skoMC1 (-1+(skoMC1 (3))))+(skoSC1 ((skoMC1 (-2+(skoMC1 (-3))))+(skoSC1 ((skoMC1 skoMC1 (-1))+(skoSC1 skoMC1 (1/12))))))))]/\[[(skoSC1 ((skoMC1 (1+(skoMC1 (-3))))+(skoSC1 ((skoMC1 (2+(skoMC1 (3))))+(skoSC1 ((skoMC1 (-1/6+skoMC1))+(skoSC1 skoMC1 (-1/4))))))))<=(skoMC1 (2+(skoMC1 (5))))]/\[[(skoSC1 ((skoMC1 (1+(skoMC1 (-3))))+(skoSC1 ((skoMC1 (2+(skoMC1 (3))))+(skoSC1 ((skoMC1 skoMC1)+(skoSC1 skoMC1 (-1/12))))))))<=(skoMC1 (2+(skoMC1 (5))))]/\[[(skoSC1 skoMC1 (-1))<=skoMC1]/\[[(skoMC1 (-1))<(skoSC1 skoMC1)]/\[[0<=skoMC1]/\[[0<skoMC1]/\[[0<=skoSC1]/\[[2<=skoMC1]/\[[skoSC1<=5/4]/\[[(skoMC1 skoMC1 skoMC1 (-2))<(skoSC1 skoMC1 skoMC1 skoMC1 (2))]/\[[(skoSC1 skoMC1 skoMC1 skoMC1 (-2))<=(skoMC1 skoMC1 skoMC1 (2))]/\[(skoSC1 ((skoMC1 skoMC1 skoMC1 (-2+(skoMC1 (-12))))+(skoSC1 ((skoMC1 skoMC1 skoMC1 (1+(skoMC1 (-6))))+(skoSC1 ((skoMC1 skoMC1 skoMC1)+(skoSC1 ((skoMC1 skoMC1 skoMC1 (-1/12))+(skoSC1 skoMC1 skoMC1 skoMC1 (-1/12))))))))))<=(skoMC1 skoMC1 skoMC1 (2+(skoMC1 (6))))]]]]]]]]]]]]]]]]]]]]].

% In SMTLib2 format:
(declare-fun skoSC1 () Real) (declare-fun skoMC1 () Real) (assert (and (<= skoSC1 0.) (and (> (* skoMC1 (* skoMC1 (* skoMC1 2.))) 0.) (and (> (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (+ (- 1.) (* skoMC1 3.))))) (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (+ (- 2.) (* skoMC1 (- 3.)))))) (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (* skoMC1 (- 1.))))) (* skoSC1 (* skoMC1 (* skoMC1 (* skoMC1 (/ 1. 12.))))))))))) (* skoMC1 (* skoMC1 (* skoMC1 (+ (- 2.) (* skoMC1 (- 5.))))))) (and (> (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (+ (- 1.) (* skoMC1 3.))))) (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (+ (- 2.) (* skoMC1 (- 3.)))))) (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (+ (/ 1. 6.) (* skoMC1 (- 1.)))))) (* skoSC1 (* skoMC1 (* skoMC1 (* skoMC1 (/ 1. 4.))))))))))) (* skoMC1 (* skoMC1 (* skoMC1 (+ (- 2.) (* skoMC1 (- 5.))))))) (and (> (* skoSC1 (* skoMC1 (* skoMC1 skoMC1))) (* skoMC1 (* skoMC1 (* skoMC1 (- 1.))))) (and (<= (* skoMC1 (* skoMC1 (* skoMC1 (- 2.)))) 0.) (and (> (* skoMC1 (* skoMC1 (* skoMC1 2.))) 0.) (and (> (* skoSC1 (+ (* skoMC1 (+ (- 1.) (* skoMC1 3.))) (* skoSC1 (+ (* skoMC1 (+ (- 2.) (* skoMC1 (- 3.)))) (* skoSC1 (+ (* skoMC1 (+ (/ 1. 6.) (* skoMC1 (- 1.)))) (* skoSC1 (* skoMC1 (/ 1. 4.))))))))) (* skoMC1 (+ (- 2.) (* skoMC1 (- 5.))))) (and (> (* skoSC1 (+ (* skoMC1 (+ (- 1.) (* skoMC1 3.))) (* skoSC1 (+ (* skoMC1 (+ (- 2.) (* skoMC1 (- 3.)))) (* skoSC1 (+ (* skoMC1 (* skoMC1 (- 1.))) (* skoSC1 (* skoMC1 (/ 1. 12.))))))))) (* skoMC1 (+ (- 2.) (* skoMC1 (- 5.))))) (and (<= (* skoSC1 (+ (* skoMC1 (+ 1. (* skoMC1 (- 3.)))) (* skoSC1 (+ (* skoMC1 (+ 2. (* skoMC1 3.))) (* skoSC1 (+ (* skoMC1 (+ (/ (- 1.) 6.) skoMC1)) (* skoSC1 (* skoMC1 (/ (- 1.) 4.))))))))) (* skoMC1 (+ 2. (* skoMC1 5.)))) (and (<= (* skoSC1 (+ (* skoMC1 (+ 1. (* skoMC1 (- 3.)))) (* skoSC1 (+ (* skoMC1 (+ 2. (* skoMC1 3.))) (* skoSC1 (+ (* skoMC1 skoMC1) (* skoSC1 (* skoMC1 (/ (- 1.) 12.))))))))) (* skoMC1 (+ 2. (* skoMC1 5.)))) (and (<= (* skoSC1 (* skoMC1 (- 1.))) skoMC1) (and (> (* skoSC1 skoMC1) (* skoMC1 (- 1.))) (and (<= 0. skoMC1) (and (> skoMC1 0.) (and (<= 0. skoSC1) (and (<= 2. skoMC1) (and (<= skoSC1 (/ 5. 4.)) (and (> (* skoSC1 (* skoMC1 (* skoMC1 (* skoMC1 2.)))) (* skoMC1 (* skoMC1 (* skoMC1 (- 2.))))) (and (<= (* skoSC1 (* skoMC1 (* skoMC1 (* skoMC1 (- 2.))))) (* skoMC1 (* skoMC1 (* skoMC1 2.)))) (<= (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (+ (- 2.) (* skoMC1 (- 12.)))))) (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (+ 1. (* skoMC1 (- 6.)))))) (* skoSC1 (+ (* skoMC1 (* skoMC1 skoMC1)) (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (/ (- 1.) 12.)))) (* skoSC1 (* skoMC1 (* skoMC1 (* skoMC1 (/ (- 1.) 12.))))))))))))) (* skoMC1 (* skoMC1 (* skoMC1 (+ 2. (* skoMC1 6.)))))))))))))))))))))))))))

% In GRF format:
(sequent " MetiTarski formula " (antecedent (<= skoSC1 0.) (> (* skoMC1 (* skoMC1 (* skoMC1 2.))) 0.) (> (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (+ (- 1.) (* skoMC1 3.))))) (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (+ (- 2.) (* skoMC1 (- 3.)))))) (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (* skoMC1 (- 1.))))) (* skoSC1 (* skoMC1 (* skoMC1 (* skoMC1 (/ 1. 12.))))))))))) (* skoMC1 (* skoMC1 (* skoMC1 (+ (- 2.) (* skoMC1 (- 5.))))))) (> (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (+ (- 1.) (* skoMC1 3.))))) (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (+ (- 2.) (* skoMC1 (- 3.)))))) (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (+ (/ 1. 6.) (* skoMC1 (- 1.)))))) (* skoSC1 (* skoMC1 (* skoMC1 (* skoMC1 (/ 1. 4.))))))))))) (* skoMC1 (* skoMC1 (* skoMC1 (+ (- 2.) (* skoMC1 (- 5.))))))) (> (* skoSC1 (* skoMC1 (* skoMC1 skoMC1))) (* skoMC1 (* skoMC1 (* skoMC1 (- 1.))))) (<= (* skoMC1 (* skoMC1 (* skoMC1 (- 2.)))) 0.) (> (* skoMC1 (* skoMC1 (* skoMC1 2.))) 0.) (> (* skoSC1 (+ (* skoMC1 (+ (- 1.) (* skoMC1 3.))) (* skoSC1 (+ (* skoMC1 (+ (- 2.) (* skoMC1 (- 3.)))) (* skoSC1 (+ (* skoMC1 (+ (/ 1. 6.) (* skoMC1 (- 1.)))) (* skoSC1 (* skoMC1 (/ 1. 4.))))))))) (* skoMC1 (+ (- 2.) (* skoMC1 (- 5.))))) (> (* skoSC1 (+ (* skoMC1 (+ (- 1.) (* skoMC1 3.))) (* skoSC1 (+ (* skoMC1 (+ (- 2.) (* skoMC1 (- 3.)))) (* skoSC1 (+ (* skoMC1 (* skoMC1 (- 1.))) (* skoSC1 (* skoMC1 (/ 1. 12.))))))))) (* skoMC1 (+ (- 2.) (* skoMC1 (- 5.))))) (<= (* skoSC1 (+ (* skoMC1 (+ 1. (* skoMC1 (- 3.)))) (* skoSC1 (+ (* skoMC1 (+ 2. (* skoMC1 3.))) (* skoSC1 (+ (* skoMC1 (+ (/ (- 1.) 6.) skoMC1)) (* skoSC1 (* skoMC1 (/ (- 1.) 4.))))))))) (* skoMC1 (+ 2. (* skoMC1 5.)))) (<= (* skoSC1 (+ (* skoMC1 (+ 1. (* skoMC1 (- 3.)))) (* skoSC1 (+ (* skoMC1 (+ 2. (* skoMC1 3.))) (* skoSC1 (+ (* skoMC1 skoMC1) (* skoSC1 (* skoMC1 (/ (- 1.) 12.))))))))) (* skoMC1 (+ 2. (* skoMC1 5.)))) (<= (* skoSC1 (* skoMC1 (- 1.))) skoMC1) (> (* skoSC1 skoMC1) (* skoMC1 (- 1.))) (<= 0. skoMC1) (> skoMC1 0.) (<= 0. skoSC1) (<= 2. skoMC1) (<= skoSC1 (/ 5. 4.)) (> (* skoSC1 (* skoMC1 (* skoMC1 (* skoMC1 2.)))) (* skoMC1 (* skoMC1 (* skoMC1 (- 2.))))) (<= (* skoSC1 (* skoMC1 (* skoMC1 (* skoMC1 (- 2.))))) (* skoMC1 (* skoMC1 (* skoMC1 2.))))) (succedent (> (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (+ (- 2.) (* skoMC1 (- 12.)))))) (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (+ 1. (* skoMC1 (- 6.)))))) (* skoSC1 (+ (* skoMC1 (* skoMC1 skoMC1)) (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (/ (- 1.) 12.)))) (* skoSC1 (* skoMC1 (* skoMC1 (* skoMC1 (/ (- 1.) 12.))))))))))))) (* skoMC1 (* skoMC1 (* skoMC1 (+ 2. (* skoMC1 6.))))))))
-----[end problem]-----

-----[begin problem]-----
% In Mathematica format:
Timing[Resolve[Exists[{skoSC1,skoMC1}, And[skoMC1*skoMC1*skoMC1*2<=0,skoSC1*(skoMC1*skoMC1*skoMC1*(-1+skoMC1*3)+skoSC1*(skoMC1*skoMC1*skoMC1*(-2+skoMC1*-3)+skoSC1*(skoMC1*skoMC1*skoMC1*skoMC1*-1+skoSC1*skoMC1*skoMC1*skoMC1*(1/12))))<=skoMC1*skoMC1*skoMC1*(-2+skoMC1*-5),skoSC1<=0,skoSC1*(skoMC1*skoMC1*skoMC1*(-1+skoMC1*3)+skoSC1*(skoMC1*skoMC1*skoMC1*(-2+skoMC1*-3)+skoSC1*(skoMC1*skoMC1*skoMC1*((1/6)+skoMC1*-1)+skoSC1*skoMC1*skoMC1*skoMC1*(1/4))))>skoMC1*skoMC1*skoMC1*(-2+skoMC1*-5),skoSC1*skoMC1*skoMC1*skoMC1>skoMC1*skoMC1*skoMC1*-1,skoMC1*skoMC1*skoMC1*-2<=0,skoMC1*skoMC1*skoMC1*2>0,skoSC1*(skoMC1*(-1+skoMC1*3)+skoSC1*(skoMC1*(-2+skoMC1*-3)+skoSC1*(skoMC1*((1/6)+skoMC1*-1)+skoSC1*skoMC1*(1/4))))>skoMC1*(-2+skoMC1*-5),skoSC1*(skoMC1*(-1+skoMC1*3)+skoSC1*(skoMC1*(-2+skoMC1*-3)+skoSC1*(skoMC1*skoMC1*-1+skoSC1*skoMC1*(1/12))))>skoMC1*(-2+skoMC1*-5),skoSC1*(skoMC1*(1+skoMC1*-3)+skoSC1*(skoMC1*(2+skoMC1*3)+skoSC1*(skoMC1*((-1/6)+skoMC1)+skoSC1*skoMC1*(-1/4))))<=skoMC1*(2+skoMC1*5),skoSC1*(skoMC1*(1+skoMC1*-3)+skoSC1*(skoMC1*(2+skoMC1*3)+skoSC1*(skoMC1*skoMC1+skoSC1*skoMC1*(-1/12))))<=skoMC1*(2+skoMC1*5),skoSC1*skoMC1*-1<=skoMC1,skoSC1*skoMC1>skoMC1*-1,0<=skoMC1,skoMC1>0,0<=skoSC1,2<=skoMC1,skoSC1<=(5/4),skoSC1*skoMC1*skoMC1*skoMC1*2>skoMC1*skoMC1*skoMC1*-2,skoSC1*skoMC1*skoMC1*skoMC1*-2<=skoMC1*skoMC1*skoMC1*2,skoSC1*(skoMC1*skoMC1*skoMC1*(-2+skoMC1*-12)+skoSC1*(skoMC1*skoMC1*skoMC1*(1+skoMC1*-6)+skoSC1*(skoMC1*skoMC1*skoMC1+skoSC1*(skoMC1*skoMC1*skoMC1*(-1/12)+skoSC1*skoMC1*skoMC1*skoMC1*(-1/12)))))<=skoMC1*skoMC1*skoMC1*(2+skoMC1*6)]], Reals]]

% In QepcadB format:
(E skoSC1) (E skoMC1) [[(skoMC1 skoMC1 skoMC1 (2))<=0]/\[[(skoSC1 ((skoMC1 skoMC1 skoMC1 (-1+(skoMC1 (3))))+(skoSC1 ((skoMC1 skoMC1 skoMC1 (-2+(skoMC1 (-3))))+(skoSC1 ((skoMC1 skoMC1 skoMC1 skoMC1 (-1))+(skoSC1 skoMC1 skoMC1 skoMC1 (1/12))))))))<=(skoMC1 skoMC1 skoMC1 (-2+(skoMC1 (-5))))]/\[[skoSC1<=0]/\[[(skoMC1 skoMC1 skoMC1 (-2+(skoMC1 (-5))))<(skoSC1 ((skoMC1 skoMC1 skoMC1 (-1+(skoMC1 (3))))+(skoSC1 ((skoMC1 skoMC1 skoMC1 (-2+(skoMC1 (-3))))+(skoSC1 ((skoMC1 skoMC1 skoMC1 (1/6+(skoMC1 (-1))))+(skoSC1 skoMC1 skoMC1 skoMC1 (1/4))))))))]/\[[(skoMC1 skoMC1 skoMC1 (-1))<(skoSC1 skoMC1 skoMC1 skoMC1)]/\[[(skoMC1 skoMC1 skoMC1 (-2))<=0]/\[[0<(skoMC1 skoMC1 skoMC1 (2))]/\[[(skoMC1 (-2+(skoMC1 (-5))))<(skoSC1 ((skoMC1 (-1+(skoMC1 (3))))+(skoSC1 ((skoMC1 (-2+(skoMC1 (-3))))+(skoSC1 ((skoMC1 (1/6+(skoMC1 (-1))))+(skoSC1 skoMC1 (1/4))))))))]/\[[(skoMC1 (-2+(skoMC1 (-5))))<(skoSC1 ((skoMC1 (-1+(skoMC1 (3))))+(skoSC1 ((skoMC1 (-2+(skoMC1 (-3))))+(skoSC1 ((skoMC1 skoMC1 (-1))+(skoSC1 skoMC1 (1/12))))))))]/\[[(skoSC1 ((skoMC1 (1+(skoMC1 (-3))))+(skoSC1 ((skoMC1 (2+(skoMC1 (3))))+(skoSC1 ((skoMC1 (-1/6+skoMC1))+(skoSC1 skoMC1 (-1/4))))))))<=(skoMC1 (2+(skoMC1 (5))))]/\[[(skoSC1 ((skoMC1 (1+(skoMC1 (-3))))+(skoSC1 ((skoMC1 (2+(skoMC1 (3))))+(skoSC1 ((skoMC1 skoMC1)+(skoSC1 skoMC1 (-1/12))))))))<=(skoMC1 (2+(skoMC1 (5))))]/\[[(skoSC1 skoMC1 (-1))<=skoMC1]/\[[(skoMC1 (-1))<(skoSC1 skoMC1)]/\[[0<=skoMC1]/\[[0<skoMC1]/\[[0<=skoSC1]/\[[2<=skoMC1]/\[[skoSC1<=5/4]/\[[(skoMC1 skoMC1 skoMC1 (-2))<(skoSC1 skoMC1 skoMC1 skoMC1 (2))]/\[[(skoSC1 skoMC1 skoMC1 skoMC1 (-2))<=(skoMC1 skoMC1 skoMC1 (2))]/\[(skoSC1 ((skoMC1 skoMC1 skoMC1 (-2+(skoMC1 (-12))))+(skoSC1 ((skoMC1 skoMC1 skoMC1 (1+(skoMC1 (-6))))+(skoSC1 ((skoMC1 skoMC1 skoMC1)+(skoSC1 ((skoMC1 skoMC1 skoMC1 (-1/12))+(skoSC1 skoMC1 skoMC1 skoMC1 (-1/12))))))))))<=(skoMC1 skoMC1 skoMC1 (2+(skoMC1 (6))))]]]]]]]]]]]]]]]]]]]]].

% In SMTLib2 format:
(declare-fun skoSC1 () Real) (declare-fun skoMC1 () Real) (assert (and (<= (* skoMC1 (* skoMC1 (* skoMC1 2.))) 0.) (and (<= (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (+ (- 1.) (* skoMC1 3.))))) (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (+ (- 2.) (* skoMC1 (- 3.)))))) (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (* skoMC1 (- 1.))))) (* skoSC1 (* skoMC1 (* skoMC1 (* skoMC1 (/ 1. 12.))))))))))) (* skoMC1 (* skoMC1 (* skoMC1 (+ (- 2.) (* skoMC1 (- 5.))))))) (and (<= skoSC1 0.) (and (> (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (+ (- 1.) (* skoMC1 3.))))) (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (+ (- 2.) (* skoMC1 (- 3.)))))) (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (+ (/ 1. 6.) (* skoMC1 (- 1.)))))) (* skoSC1 (* skoMC1 (* skoMC1 (* skoMC1 (/ 1. 4.))))))))))) (* skoMC1 (* skoMC1 (* skoMC1 (+ (- 2.) (* skoMC1 (- 5.))))))) (and (> (* skoSC1 (* skoMC1 (* skoMC1 skoMC1))) (* skoMC1 (* skoMC1 (* skoMC1 (- 1.))))) (and (<= (* skoMC1 (* skoMC1 (* skoMC1 (- 2.)))) 0.) (and (> (* skoMC1 (* skoMC1 (* skoMC1 2.))) 0.) (and (> (* skoSC1 (+ (* skoMC1 (+ (- 1.) (* skoMC1 3.))) (* skoSC1 (+ (* skoMC1 (+ (- 2.) (* skoMC1 (- 3.)))) (* skoSC1 (+ (* skoMC1 (+ (/ 1. 6.) (* skoMC1 (- 1.)))) (* skoSC1 (* skoMC1 (/ 1. 4.))))))))) (* skoMC1 (+ (- 2.) (* skoMC1 (- 5.))))) (and (> (* skoSC1 (+ (* skoMC1 (+ (- 1.) (* skoMC1 3.))) (* skoSC1 (+ (* skoMC1 (+ (- 2.) (* skoMC1 (- 3.)))) (* skoSC1 (+ (* skoMC1 (* skoMC1 (- 1.))) (* skoSC1 (* skoMC1 (/ 1. 12.))))))))) (* skoMC1 (+ (- 2.) (* skoMC1 (- 5.))))) (and (<= (* skoSC1 (+ (* skoMC1 (+ 1. (* skoMC1 (- 3.)))) (* skoSC1 (+ (* skoMC1 (+ 2. (* skoMC1 3.))) (* skoSC1 (+ (* skoMC1 (+ (/ (- 1.) 6.) skoMC1)) (* skoSC1 (* skoMC1 (/ (- 1.) 4.))))))))) (* skoMC1 (+ 2. (* skoMC1 5.)))) (and (<= (* skoSC1 (+ (* skoMC1 (+ 1. (* skoMC1 (- 3.)))) (* skoSC1 (+ (* skoMC1 (+ 2. (* skoMC1 3.))) (* skoSC1 (+ (* skoMC1 skoMC1) (* skoSC1 (* skoMC1 (/ (- 1.) 12.))))))))) (* skoMC1 (+ 2. (* skoMC1 5.)))) (and (<= (* skoSC1 (* skoMC1 (- 1.))) skoMC1) (and (> (* skoSC1 skoMC1) (* skoMC1 (- 1.))) (and (<= 0. skoMC1) (and (> skoMC1 0.) (and (<= 0. skoSC1) (and (<= 2. skoMC1) (and (<= skoSC1 (/ 5. 4.)) (and (> (* skoSC1 (* skoMC1 (* skoMC1 (* skoMC1 2.)))) (* skoMC1 (* skoMC1 (* skoMC1 (- 2.))))) (and (<= (* skoSC1 (* skoMC1 (* skoMC1 (* skoMC1 (- 2.))))) (* skoMC1 (* skoMC1 (* skoMC1 2.)))) (<= (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (+ (- 2.) (* skoMC1 (- 12.)))))) (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (+ 1. (* skoMC1 (- 6.)))))) (* skoSC1 (+ (* skoMC1 (* skoMC1 skoMC1)) (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (/ (- 1.) 12.)))) (* skoSC1 (* skoMC1 (* skoMC1 (* skoMC1 (/ (- 1.) 12.))))))))))))) (* skoMC1 (* skoMC1 (* skoMC1 (+ 2. (* skoMC1 6.)))))))))))))))))))))))))))

% In GRF format:
(sequent " MetiTarski formula " (antecedent (<= (* skoMC1 (* skoMC1 (* skoMC1 2.))) 0.) (<= (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (+ (- 1.) (* skoMC1 3.))))) (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (+ (- 2.) (* skoMC1 (- 3.)))))) (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (* skoMC1 (- 1.))))) (* skoSC1 (* skoMC1 (* skoMC1 (* skoMC1 (/ 1. 12.))))))))))) (* skoMC1 (* skoMC1 (* skoMC1 (+ (- 2.) (* skoMC1 (- 5.))))))) (<= skoSC1 0.) (> (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (+ (- 1.) (* skoMC1 3.))))) (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (+ (- 2.) (* skoMC1 (- 3.)))))) (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (+ (/ 1. 6.) (* skoMC1 (- 1.)))))) (* skoSC1 (* skoMC1 (* skoMC1 (* skoMC1 (/ 1. 4.))))))))))) (* skoMC1 (* skoMC1 (* skoMC1 (+ (- 2.) (* skoMC1 (- 5.))))))) (> (* skoSC1 (* skoMC1 (* skoMC1 skoMC1))) (* skoMC1 (* skoMC1 (* skoMC1 (- 1.))))) (<= (* skoMC1 (* skoMC1 (* skoMC1 (- 2.)))) 0.) (> (* skoMC1 (* skoMC1 (* skoMC1 2.))) 0.) (> (* skoSC1 (+ (* skoMC1 (+ (- 1.) (* skoMC1 3.))) (* skoSC1 (+ (* skoMC1 (+ (- 2.) (* skoMC1 (- 3.)))) (* skoSC1 (+ (* skoMC1 (+ (/ 1. 6.) (* skoMC1 (- 1.)))) (* skoSC1 (* skoMC1 (/ 1. 4.))))))))) (* skoMC1 (+ (- 2.) (* skoMC1 (- 5.))))) (> (* skoSC1 (+ (* skoMC1 (+ (- 1.) (* skoMC1 3.))) (* skoSC1 (+ (* skoMC1 (+ (- 2.) (* skoMC1 (- 3.)))) (* skoSC1 (+ (* skoMC1 (* skoMC1 (- 1.))) (* skoSC1 (* skoMC1 (/ 1. 12.))))))))) (* skoMC1 (+ (- 2.) (* skoMC1 (- 5.))))) (<= (* skoSC1 (+ (* skoMC1 (+ 1. (* skoMC1 (- 3.)))) (* skoSC1 (+ (* skoMC1 (+ 2. (* skoMC1 3.))) (* skoSC1 (+ (* skoMC1 (+ (/ (- 1.) 6.) skoMC1)) (* skoSC1 (* skoMC1 (/ (- 1.) 4.))))))))) (* skoMC1 (+ 2. (* skoMC1 5.)))) (<= (* skoSC1 (+ (* skoMC1 (+ 1. (* skoMC1 (- 3.)))) (* skoSC1 (+ (* skoMC1 (+ 2. (* skoMC1 3.))) (* skoSC1 (+ (* skoMC1 skoMC1) (* skoSC1 (* skoMC1 (/ (- 1.) 12.))))))))) (* skoMC1 (+ 2. (* skoMC1 5.)))) (<= (* skoSC1 (* skoMC1 (- 1.))) skoMC1) (> (* skoSC1 skoMC1) (* skoMC1 (- 1.))) (<= 0. skoMC1) (> skoMC1 0.) (<= 0. skoSC1) (<= 2. skoMC1) (<= skoSC1 (/ 5. 4.)) (> (* skoSC1 (* skoMC1 (* skoMC1 (* skoMC1 2.)))) (* skoMC1 (* skoMC1 (* skoMC1 (- 2.))))) (<= (* skoSC1 (* skoMC1 (* skoMC1 (* skoMC1 (- 2.))))) (* skoMC1 (* skoMC1 (* skoMC1 2.))))) (succedent (> (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (+ (- 2.) (* skoMC1 (- 12.)))))) (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (+ 1. (* skoMC1 (- 6.)))))) (* skoSC1 (+ (* skoMC1 (* skoMC1 skoMC1)) (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (/ (- 1.) 12.)))) (* skoSC1 (* skoMC1 (* skoMC1 (* skoMC1 (/ (- 1.) 12.))))))))))))) (* skoMC1 (* skoMC1 (* skoMC1 (+ 2. (* skoMC1 6.))))))))
-----[end problem]-----

-----[begin problem]-----
% In Mathematica format:
Timing[Resolve[Exists[{skoSC1,skoMC1}, And[skoSC1*(skoMC1*skoMC1*skoMC1*(-1+skoMC1*3)+skoSC1*(skoMC1*skoMC1*skoMC1*(-2+skoMC1*-3)+skoSC1*(skoMC1*skoMC1*skoMC1*skoMC1*-1+skoSC1*skoMC1*skoMC1*skoMC1*(1/12))))<=skoMC1*skoMC1*skoMC1*(-2+skoMC1*-5),skoSC1>0,skoSC1*(skoMC1*skoMC1*skoMC1*(-1+skoMC1*3)+skoSC1*(skoMC1*skoMC1*skoMC1*(-2+skoMC1*-3)+skoSC1*(skoMC1*skoMC1*skoMC1*((1/6)+skoMC1*-1)+skoSC1*skoMC1*skoMC1*skoMC1*(1/4))))>skoMC1*skoMC1*skoMC1*(-2+skoMC1*-5),skoSC1*skoMC1*skoMC1*skoMC1>skoMC1*skoMC1*skoMC1*-1,skoMC1*skoMC1*skoMC1*-2<=0,skoMC1*skoMC1*skoMC1*2>0,skoSC1*(skoMC1*(-1+skoMC1*3)+skoSC1*(skoMC1*(-2+skoMC1*-3)+skoSC1*(skoMC1*((1/6)+skoMC1*-1)+skoSC1*skoMC1*(1/4))))>skoMC1*(-2+skoMC1*-5),skoSC1*(skoMC1*(-1+skoMC1*3)+skoSC1*(skoMC1*(-2+skoMC1*-3)+skoSC1*(skoMC1*skoMC1*-1+skoSC1*skoMC1*(1/12))))>skoMC1*(-2+skoMC1*-5),skoSC1*(skoMC1*(1+skoMC1*-3)+skoSC1*(skoMC1*(2+skoMC1*3)+skoSC1*(skoMC1*((-1/6)+skoMC1)+skoSC1*skoMC1*(-1/4))))<=skoMC1*(2+skoMC1*5),skoSC1*(skoMC1*(1+skoMC1*-3)+skoSC1*(skoMC1*(2+skoMC1*3)+skoSC1*(skoMC1*skoMC1+skoSC1*skoMC1*(-1/12))))<=skoMC1*(2+skoMC1*5),skoSC1*skoMC1*-1<=skoMC1,skoSC1*skoMC1>skoMC1*-1,0<=skoMC1,skoMC1>0,0<=skoSC1,2<=skoMC1,skoSC1<=(5/4),skoSC1*skoMC1*skoMC1*skoMC1*2>skoMC1*skoMC1*skoMC1*-2,skoSC1*skoMC1*skoMC1*skoMC1*-2<=skoMC1*skoMC1*skoMC1*2,skoSC1*(skoMC1*skoMC1*skoMC1*(-2+skoMC1*-12)+skoSC1*(skoMC1*skoMC1*skoMC1*(1+skoMC1*-6)+skoSC1*(skoMC1*skoMC1*skoMC1+skoSC1*(skoMC1*skoMC1*skoMC1*(-1/12)+skoSC1*skoMC1*skoMC1*skoMC1*(-1/12)))))<=skoMC1*skoMC1*skoMC1*(2+skoMC1*6)]], Reals]]

% In QepcadB format:
(E skoSC1) (E skoMC1) [[(skoSC1 ((skoMC1 skoMC1 skoMC1 (-1+(skoMC1 (3))))+(skoSC1 ((skoMC1 skoMC1 skoMC1 (-2+(skoMC1 (-3))))+(skoSC1 ((skoMC1 skoMC1 skoMC1 skoMC1 (-1))+(skoSC1 skoMC1 skoMC1 skoMC1 (1/12))))))))<=(skoMC1 skoMC1 skoMC1 (-2+(skoMC1 (-5))))]/\[[0<skoSC1]/\[[(skoMC1 skoMC1 skoMC1 (-2+(skoMC1 (-5))))<(skoSC1 ((skoMC1 skoMC1 skoMC1 (-1+(skoMC1 (3))))+(skoSC1 ((skoMC1 skoMC1 skoMC1 (-2+(skoMC1 (-3))))+(skoSC1 ((skoMC1 skoMC1 skoMC1 (1/6+(skoMC1 (-1))))+(skoSC1 skoMC1 skoMC1 skoMC1 (1/4))))))))]/\[[(skoMC1 skoMC1 skoMC1 (-1))<(skoSC1 skoMC1 skoMC1 skoMC1)]/\[[(skoMC1 skoMC1 skoMC1 (-2))<=0]/\[[0<(skoMC1 skoMC1 skoMC1 (2))]/\[[(skoMC1 (-2+(skoMC1 (-5))))<(skoSC1 ((skoMC1 (-1+(skoMC1 (3))))+(skoSC1 ((skoMC1 (-2+(skoMC1 (-3))))+(skoSC1 ((skoMC1 (1/6+(skoMC1 (-1))))+(skoSC1 skoMC1 (1/4))))))))]/\[[(skoMC1 (-2+(skoMC1 (-5))))<(skoSC1 ((skoMC1 (-1+(skoMC1 (3))))+(skoSC1 ((skoMC1 (-2+(skoMC1 (-3))))+(skoSC1 ((skoMC1 skoMC1 (-1))+(skoSC1 skoMC1 (1/12))))))))]/\[[(skoSC1 ((skoMC1 (1+(skoMC1 (-3))))+(skoSC1 ((skoMC1 (2+(skoMC1 (3))))+(skoSC1 ((skoMC1 (-1/6+skoMC1))+(skoSC1 skoMC1 (-1/4))))))))<=(skoMC1 (2+(skoMC1 (5))))]/\[[(skoSC1 ((skoMC1 (1+(skoMC1 (-3))))+(skoSC1 ((skoMC1 (2+(skoMC1 (3))))+(skoSC1 ((skoMC1 skoMC1)+(skoSC1 skoMC1 (-1/12))))))))<=(skoMC1 (2+(skoMC1 (5))))]/\[[(skoSC1 skoMC1 (-1))<=skoMC1]/\[[(skoMC1 (-1))<(skoSC1 skoMC1)]/\[[0<=skoMC1]/\[[0<skoMC1]/\[[0<=skoSC1]/\[[2<=skoMC1]/\[[skoSC1<=5/4]/\[[(skoMC1 skoMC1 skoMC1 (-2))<(skoSC1 skoMC1 skoMC1 skoMC1 (2))]/\[[(skoSC1 skoMC1 skoMC1 skoMC1 (-2))<=(skoMC1 skoMC1 skoMC1 (2))]/\[(skoSC1 ((skoMC1 skoMC1 skoMC1 (-2+(skoMC1 (-12))))+(skoSC1 ((skoMC1 skoMC1 skoMC1 (1+(skoMC1 (-6))))+(skoSC1 ((skoMC1 skoMC1 skoMC1)+(skoSC1 ((skoMC1 skoMC1 skoMC1 (-1/12))+(skoSC1 skoMC1 skoMC1 skoMC1 (-1/12))))))))))<=(skoMC1 skoMC1 skoMC1 (2+(skoMC1 (6))))]]]]]]]]]]]]]]]]]]]].

% In SMTLib2 format:
(declare-fun skoSC1 () Real) (declare-fun skoMC1 () Real) (assert (and (<= (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (+ (- 1.) (* skoMC1 3.))))) (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (+ (- 2.) (* skoMC1 (- 3.)))))) (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (* skoMC1 (- 1.))))) (* skoSC1 (* skoMC1 (* skoMC1 (* skoMC1 (/ 1. 12.))))))))))) (* skoMC1 (* skoMC1 (* skoMC1 (+ (- 2.) (* skoMC1 (- 5.))))))) (and (> skoSC1 0.) (and (> (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (+ (- 1.) (* skoMC1 3.))))) (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (+ (- 2.) (* skoMC1 (- 3.)))))) (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (+ (/ 1. 6.) (* skoMC1 (- 1.)))))) (* skoSC1 (* skoMC1 (* skoMC1 (* skoMC1 (/ 1. 4.))))))))))) (* skoMC1 (* skoMC1 (* skoMC1 (+ (- 2.) (* skoMC1 (- 5.))))))) (and (> (* skoSC1 (* skoMC1 (* skoMC1 skoMC1))) (* skoMC1 (* skoMC1 (* skoMC1 (- 1.))))) (and (<= (* skoMC1 (* skoMC1 (* skoMC1 (- 2.)))) 0.) (and (> (* skoMC1 (* skoMC1 (* skoMC1 2.))) 0.) (and (> (* skoSC1 (+ (* skoMC1 (+ (- 1.) (* skoMC1 3.))) (* skoSC1 (+ (* skoMC1 (+ (- 2.) (* skoMC1 (- 3.)))) (* skoSC1 (+ (* skoMC1 (+ (/ 1. 6.) (* skoMC1 (- 1.)))) (* skoSC1 (* skoMC1 (/ 1. 4.))))))))) (* skoMC1 (+ (- 2.) (* skoMC1 (- 5.))))) (and (> (* skoSC1 (+ (* skoMC1 (+ (- 1.) (* skoMC1 3.))) (* skoSC1 (+ (* skoMC1 (+ (- 2.) (* skoMC1 (- 3.)))) (* skoSC1 (+ (* skoMC1 (* skoMC1 (- 1.))) (* skoSC1 (* skoMC1 (/ 1. 12.))))))))) (* skoMC1 (+ (- 2.) (* skoMC1 (- 5.))))) (and (<= (* skoSC1 (+ (* skoMC1 (+ 1. (* skoMC1 (- 3.)))) (* skoSC1 (+ (* skoMC1 (+ 2. (* skoMC1 3.))) (* skoSC1 (+ (* skoMC1 (+ (/ (- 1.) 6.) skoMC1)) (* skoSC1 (* skoMC1 (/ (- 1.) 4.))))))))) (* skoMC1 (+ 2. (* skoMC1 5.)))) (and (<= (* skoSC1 (+ (* skoMC1 (+ 1. (* skoMC1 (- 3.)))) (* skoSC1 (+ (* skoMC1 (+ 2. (* skoMC1 3.))) (* skoSC1 (+ (* skoMC1 skoMC1) (* skoSC1 (* skoMC1 (/ (- 1.) 12.))))))))) (* skoMC1 (+ 2. (* skoMC1 5.)))) (and (<= (* skoSC1 (* skoMC1 (- 1.))) skoMC1) (and (> (* skoSC1 skoMC1) (* skoMC1 (- 1.))) (and (<= 0. skoMC1) (and (> skoMC1 0.) (and (<= 0. skoSC1) (and (<= 2. skoMC1) (and (<= skoSC1 (/ 5. 4.)) (and (> (* skoSC1 (* skoMC1 (* skoMC1 (* skoMC1 2.)))) (* skoMC1 (* skoMC1 (* skoMC1 (- 2.))))) (and (<= (* skoSC1 (* skoMC1 (* skoMC1 (* skoMC1 (- 2.))))) (* skoMC1 (* skoMC1 (* skoMC1 2.)))) (<= (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (+ (- 2.) (* skoMC1 (- 12.)))))) (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (+ 1. (* skoMC1 (- 6.)))))) (* skoSC1 (+ (* skoMC1 (* skoMC1 skoMC1)) (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (/ (- 1.) 12.)))) (* skoSC1 (* skoMC1 (* skoMC1 (* skoMC1 (/ (- 1.) 12.))))))))))))) (* skoMC1 (* skoMC1 (* skoMC1 (+ 2. (* skoMC1 6.))))))))))))))))))))))))))

% In GRF format:
(sequent " MetiTarski formula " (antecedent (<= (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (+ (- 1.) (* skoMC1 3.))))) (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (+ (- 2.) (* skoMC1 (- 3.)))))) (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (* skoMC1 (- 1.))))) (* skoSC1 (* skoMC1 (* skoMC1 (* skoMC1 (/ 1. 12.))))))))))) (* skoMC1 (* skoMC1 (* skoMC1 (+ (- 2.) (* skoMC1 (- 5.))))))) (> skoSC1 0.) (> (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (+ (- 1.) (* skoMC1 3.))))) (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (+ (- 2.) (* skoMC1 (- 3.)))))) (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (+ (/ 1. 6.) (* skoMC1 (- 1.)))))) (* skoSC1 (* skoMC1 (* skoMC1 (* skoMC1 (/ 1. 4.))))))))))) (* skoMC1 (* skoMC1 (* skoMC1 (+ (- 2.) (* skoMC1 (- 5.))))))) (> (* skoSC1 (* skoMC1 (* skoMC1 skoMC1))) (* skoMC1 (* skoMC1 (* skoMC1 (- 1.))))) (<= (* skoMC1 (* skoMC1 (* skoMC1 (- 2.)))) 0.) (> (* skoMC1 (* skoMC1 (* skoMC1 2.))) 0.) (> (* skoSC1 (+ (* skoMC1 (+ (- 1.) (* skoMC1 3.))) (* skoSC1 (+ (* skoMC1 (+ (- 2.) (* skoMC1 (- 3.)))) (* skoSC1 (+ (* skoMC1 (+ (/ 1. 6.) (* skoMC1 (- 1.)))) (* skoSC1 (* skoMC1 (/ 1. 4.))))))))) (* skoMC1 (+ (- 2.) (* skoMC1 (- 5.))))) (> (* skoSC1 (+ (* skoMC1 (+ (- 1.) (* skoMC1 3.))) (* skoSC1 (+ (* skoMC1 (+ (- 2.) (* skoMC1 (- 3.)))) (* skoSC1 (+ (* skoMC1 (* skoMC1 (- 1.))) (* skoSC1 (* skoMC1 (/ 1. 12.))))))))) (* skoMC1 (+ (- 2.) (* skoMC1 (- 5.))))) (<= (* skoSC1 (+ (* skoMC1 (+ 1. (* skoMC1 (- 3.)))) (* skoSC1 (+ (* skoMC1 (+ 2. (* skoMC1 3.))) (* skoSC1 (+ (* skoMC1 (+ (/ (- 1.) 6.) skoMC1)) (* skoSC1 (* skoMC1 (/ (- 1.) 4.))))))))) (* skoMC1 (+ 2. (* skoMC1 5.)))) (<= (* skoSC1 (+ (* skoMC1 (+ 1. (* skoMC1 (- 3.)))) (* skoSC1 (+ (* skoMC1 (+ 2. (* skoMC1 3.))) (* skoSC1 (+ (* skoMC1 skoMC1) (* skoSC1 (* skoMC1 (/ (- 1.) 12.))))))))) (* skoMC1 (+ 2. (* skoMC1 5.)))) (<= (* skoSC1 (* skoMC1 (- 1.))) skoMC1) (> (* skoSC1 skoMC1) (* skoMC1 (- 1.))) (<= 0. skoMC1) (> skoMC1 0.) (<= 0. skoSC1) (<= 2. skoMC1) (<= skoSC1 (/ 5. 4.)) (> (* skoSC1 (* skoMC1 (* skoMC1 (* skoMC1 2.)))) (* skoMC1 (* skoMC1 (* skoMC1 (- 2.))))) (<= (* skoSC1 (* skoMC1 (* skoMC1 (* skoMC1 (- 2.))))) (* skoMC1 (* skoMC1 (* skoMC1 2.))))) (succedent (> (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (+ (- 2.) (* skoMC1 (- 12.)))))) (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (+ 1. (* skoMC1 (- 6.)))))) (* skoSC1 (+ (* skoMC1 (* skoMC1 skoMC1)) (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (/ (- 1.) 12.)))) (* skoSC1 (* skoMC1 (* skoMC1 (* skoMC1 (/ (- 1.) 12.))))))))))))) (* skoMC1 (* skoMC1 (* skoMC1 (+ 2. (* skoMC1 6.))))))))
-----[end problem]-----

-----[begin problem]-----
% In Mathematica format:
Timing[Resolve[Exists[{skoSC1,skoMC1}, And[skoMC1*skoMC1*skoMC1*-2<=0,skoSC1*(skoMC1*skoMC1*skoMC1*(-1+skoMC1*3)+skoSC1*(skoMC1*skoMC1*skoMC1*(-2+skoMC1*-3)+skoSC1*(skoMC1*skoMC1*skoMC1*((1/6)+skoMC1*-1)+skoSC1*skoMC1*skoMC1*skoMC1*(1/4))))>skoMC1*skoMC1*skoMC1*(-2+skoMC1*-5),skoSC1*skoMC1*skoMC1*skoMC1>skoMC1*skoMC1*skoMC1*-1,skoMC1*skoMC1*skoMC1*-2<=0,skoMC1*skoMC1*skoMC1*2>0,skoSC1*(skoMC1*(-1+skoMC1*3)+skoSC1*(skoMC1*(-2+skoMC1*-3)+skoSC1*(skoMC1*((1/6)+skoMC1*-1)+skoSC1*skoMC1*(1/4))))>skoMC1*(-2+skoMC1*-5),skoSC1*(skoMC1*(-1+skoMC1*3)+skoSC1*(skoMC1*(-2+skoMC1*-3)+skoSC1*(skoMC1*skoMC1*-1+skoSC1*skoMC1*(1/12))))>skoMC1*(-2+skoMC1*-5),skoSC1*(skoMC1*(1+skoMC1*-3)+skoSC1*(skoMC1*(2+skoMC1*3)+skoSC1*(skoMC1*((-1/6)+skoMC1)+skoSC1*skoMC1*(-1/4))))<=skoMC1*(2+skoMC1*5),skoSC1*(skoMC1*(1+skoMC1*-3)+skoSC1*(skoMC1*(2+skoMC1*3)+skoSC1*(skoMC1*skoMC1+skoSC1*skoMC1*(-1/12))))<=skoMC1*(2+skoMC1*5),skoSC1*skoMC1*-1<=skoMC1,skoSC1*skoMC1>skoMC1*-1,0<=skoMC1,skoMC1>0,0<=skoSC1,2<=skoMC1,skoSC1<=(5/4),skoSC1*skoMC1*skoMC1*skoMC1*2>skoMC1*skoMC1*skoMC1*-2,skoSC1*skoMC1*skoMC1*skoMC1*-2<=skoMC1*skoMC1*skoMC1*2,skoSC1*(skoMC1*skoMC1*skoMC1*(-2+skoMC1*-12)+skoSC1*(skoMC1*skoMC1*skoMC1*(1+skoMC1*-6)+skoSC1*(skoMC1*skoMC1*skoMC1+skoSC1*(skoMC1*skoMC1*skoMC1*(-1/12)+skoSC1*skoMC1*skoMC1*skoMC1*(-1/12)))))<=skoMC1*skoMC1*skoMC1*(2+skoMC1*6)]], Reals]]

% In QepcadB format:
(E skoSC1) (E skoMC1) [[(skoMC1 skoMC1 skoMC1 (-2))<=0]/\[[(skoMC1 skoMC1 skoMC1 (-2+(skoMC1 (-5))))<(skoSC1 ((skoMC1 skoMC1 skoMC1 (-1+(skoMC1 (3))))+(skoSC1 ((skoMC1 skoMC1 skoMC1 (-2+(skoMC1 (-3))))+(skoSC1 ((skoMC1 skoMC1 skoMC1 (1/6+(skoMC1 (-1))))+(skoSC1 skoMC1 skoMC1 skoMC1 (1/4))))))))]/\[[(skoMC1 skoMC1 skoMC1 (-1))<(skoSC1 skoMC1 skoMC1 skoMC1)]/\[[(skoMC1 skoMC1 skoMC1 (-2))<=0]/\[[0<(skoMC1 skoMC1 skoMC1 (2))]/\[[(skoMC1 (-2+(skoMC1 (-5))))<(skoSC1 ((skoMC1 (-1+(skoMC1 (3))))+(skoSC1 ((skoMC1 (-2+(skoMC1 (-3))))+(skoSC1 ((skoMC1 (1/6+(skoMC1 (-1))))+(skoSC1 skoMC1 (1/4))))))))]/\[[(skoMC1 (-2+(skoMC1 (-5))))<(skoSC1 ((skoMC1 (-1+(skoMC1 (3))))+(skoSC1 ((skoMC1 (-2+(skoMC1 (-3))))+(skoSC1 ((skoMC1 skoMC1 (-1))+(skoSC1 skoMC1 (1/12))))))))]/\[[(skoSC1 ((skoMC1 (1+(skoMC1 (-3))))+(skoSC1 ((skoMC1 (2+(skoMC1 (3))))+(skoSC1 ((skoMC1 (-1/6+skoMC1))+(skoSC1 skoMC1 (-1/4))))))))<=(skoMC1 (2+(skoMC1 (5))))]/\[[(skoSC1 ((skoMC1 (1+(skoMC1 (-3))))+(skoSC1 ((skoMC1 (2+(skoMC1 (3))))+(skoSC1 ((skoMC1 skoMC1)+(skoSC1 skoMC1 (-1/12))))))))<=(skoMC1 (2+(skoMC1 (5))))]/\[[(skoSC1 skoMC1 (-1))<=skoMC1]/\[[(skoMC1 (-1))<(skoSC1 skoMC1)]/\[[0<=skoMC1]/\[[0<skoMC1]/\[[0<=skoSC1]/\[[2<=skoMC1]/\[[skoSC1<=5/4]/\[[(skoMC1 skoMC1 skoMC1 (-2))<(skoSC1 skoMC1 skoMC1 skoMC1 (2))]/\[[(skoSC1 skoMC1 skoMC1 skoMC1 (-2))<=(skoMC1 skoMC1 skoMC1 (2))]/\[(skoSC1 ((skoMC1 skoMC1 skoMC1 (-2+(skoMC1 (-12))))+(skoSC1 ((skoMC1 skoMC1 skoMC1 (1+(skoMC1 (-6))))+(skoSC1 ((skoMC1 skoMC1 skoMC1)+(skoSC1 ((skoMC1 skoMC1 skoMC1 (-1/12))+(skoSC1 skoMC1 skoMC1 skoMC1 (-1/12))))))))))<=(skoMC1 skoMC1 skoMC1 (2+(skoMC1 (6))))]]]]]]]]]]]]]]]]]]].

% In SMTLib2 format:
(declare-fun skoSC1 () Real) (declare-fun skoMC1 () Real) (assert (and (<= (* skoMC1 (* skoMC1 (* skoMC1 (- 2.)))) 0.) (and (> (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (+ (- 1.) (* skoMC1 3.))))) (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (+ (- 2.) (* skoMC1 (- 3.)))))) (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (+ (/ 1. 6.) (* skoMC1 (- 1.)))))) (* skoSC1 (* skoMC1 (* skoMC1 (* skoMC1 (/ 1. 4.))))))))))) (* skoMC1 (* skoMC1 (* skoMC1 (+ (- 2.) (* skoMC1 (- 5.))))))) (and (> (* skoSC1 (* skoMC1 (* skoMC1 skoMC1))) (* skoMC1 (* skoMC1 (* skoMC1 (- 1.))))) (and (<= (* skoMC1 (* skoMC1 (* skoMC1 (- 2.)))) 0.) (and (> (* skoMC1 (* skoMC1 (* skoMC1 2.))) 0.) (and (> (* skoSC1 (+ (* skoMC1 (+ (- 1.) (* skoMC1 3.))) (* skoSC1 (+ (* skoMC1 (+ (- 2.) (* skoMC1 (- 3.)))) (* skoSC1 (+ (* skoMC1 (+ (/ 1. 6.) (* skoMC1 (- 1.)))) (* skoSC1 (* skoMC1 (/ 1. 4.))))))))) (* skoMC1 (+ (- 2.) (* skoMC1 (- 5.))))) (and (> (* skoSC1 (+ (* skoMC1 (+ (- 1.) (* skoMC1 3.))) (* skoSC1 (+ (* skoMC1 (+ (- 2.) (* skoMC1 (- 3.)))) (* skoSC1 (+ (* skoMC1 (* skoMC1 (- 1.))) (* skoSC1 (* skoMC1 (/ 1. 12.))))))))) (* skoMC1 (+ (- 2.) (* skoMC1 (- 5.))))) (and (<= (* skoSC1 (+ (* skoMC1 (+ 1. (* skoMC1 (- 3.)))) (* skoSC1 (+ (* skoMC1 (+ 2. (* skoMC1 3.))) (* skoSC1 (+ (* skoMC1 (+ (/ (- 1.) 6.) skoMC1)) (* skoSC1 (* skoMC1 (/ (- 1.) 4.))))))))) (* skoMC1 (+ 2. (* skoMC1 5.)))) (and (<= (* skoSC1 (+ (* skoMC1 (+ 1. (* skoMC1 (- 3.)))) (* skoSC1 (+ (* skoMC1 (+ 2. (* skoMC1 3.))) (* skoSC1 (+ (* skoMC1 skoMC1) (* skoSC1 (* skoMC1 (/ (- 1.) 12.))))))))) (* skoMC1 (+ 2. (* skoMC1 5.)))) (and (<= (* skoSC1 (* skoMC1 (- 1.))) skoMC1) (and (> (* skoSC1 skoMC1) (* skoMC1 (- 1.))) (and (<= 0. skoMC1) (and (> skoMC1 0.) (and (<= 0. skoSC1) (and (<= 2. skoMC1) (and (<= skoSC1 (/ 5. 4.)) (and (> (* skoSC1 (* skoMC1 (* skoMC1 (* skoMC1 2.)))) (* skoMC1 (* skoMC1 (* skoMC1 (- 2.))))) (and (<= (* skoSC1 (* skoMC1 (* skoMC1 (* skoMC1 (- 2.))))) (* skoMC1 (* skoMC1 (* skoMC1 2.)))) (<= (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (+ (- 2.) (* skoMC1 (- 12.)))))) (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (+ 1. (* skoMC1 (- 6.)))))) (* skoSC1 (+ (* skoMC1 (* skoMC1 skoMC1)) (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (/ (- 1.) 12.)))) (* skoSC1 (* skoMC1 (* skoMC1 (* skoMC1 (/ (- 1.) 12.))))))))))))) (* skoMC1 (* skoMC1 (* skoMC1 (+ 2. (* skoMC1 6.)))))))))))))))))))))))))

% In GRF format:
(sequent " MetiTarski formula " (antecedent (<= (* skoMC1 (* skoMC1 (* skoMC1 (- 2.)))) 0.) (> (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (+ (- 1.) (* skoMC1 3.))))) (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (+ (- 2.) (* skoMC1 (- 3.)))))) (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (+ (/ 1. 6.) (* skoMC1 (- 1.)))))) (* skoSC1 (* skoMC1 (* skoMC1 (* skoMC1 (/ 1. 4.))))))))))) (* skoMC1 (* skoMC1 (* skoMC1 (+ (- 2.) (* skoMC1 (- 5.))))))) (> (* skoSC1 (* skoMC1 (* skoMC1 skoMC1))) (* skoMC1 (* skoMC1 (* skoMC1 (- 1.))))) (<= (* skoMC1 (* skoMC1 (* skoMC1 (- 2.)))) 0.) (> (* skoMC1 (* skoMC1 (* skoMC1 2.))) 0.) (> (* skoSC1 (+ (* skoMC1 (+ (- 1.) (* skoMC1 3.))) (* skoSC1 (+ (* skoMC1 (+ (- 2.) (* skoMC1 (- 3.)))) (* skoSC1 (+ (* skoMC1 (+ (/ 1. 6.) (* skoMC1 (- 1.)))) (* skoSC1 (* skoMC1 (/ 1. 4.))))))))) (* skoMC1 (+ (- 2.) (* skoMC1 (- 5.))))) (> (* skoSC1 (+ (* skoMC1 (+ (- 1.) (* skoMC1 3.))) (* skoSC1 (+ (* skoMC1 (+ (- 2.) (* skoMC1 (- 3.)))) (* skoSC1 (+ (* skoMC1 (* skoMC1 (- 1.))) (* skoSC1 (* skoMC1 (/ 1. 12.))))))))) (* skoMC1 (+ (- 2.) (* skoMC1 (- 5.))))) (<= (* skoSC1 (+ (* skoMC1 (+ 1. (* skoMC1 (- 3.)))) (* skoSC1 (+ (* skoMC1 (+ 2. (* skoMC1 3.))) (* skoSC1 (+ (* skoMC1 (+ (/ (- 1.) 6.) skoMC1)) (* skoSC1 (* skoMC1 (/ (- 1.) 4.))))))))) (* skoMC1 (+ 2. (* skoMC1 5.)))) (<= (* skoSC1 (+ (* skoMC1 (+ 1. (* skoMC1 (- 3.)))) (* skoSC1 (+ (* skoMC1 (+ 2. (* skoMC1 3.))) (* skoSC1 (+ (* skoMC1 skoMC1) (* skoSC1 (* skoMC1 (/ (- 1.) 12.))))))))) (* skoMC1 (+ 2. (* skoMC1 5.)))) (<= (* skoSC1 (* skoMC1 (- 1.))) skoMC1) (> (* skoSC1 skoMC1) (* skoMC1 (- 1.))) (<= 0. skoMC1) (> skoMC1 0.) (<= 0. skoSC1) (<= 2. skoMC1) (<= skoSC1 (/ 5. 4.)) (> (* skoSC1 (* skoMC1 (* skoMC1 (* skoMC1 2.)))) (* skoMC1 (* skoMC1 (* skoMC1 (- 2.))))) (<= (* skoSC1 (* skoMC1 (* skoMC1 (* skoMC1 (- 2.))))) (* skoMC1 (* skoMC1 (* skoMC1 2.))))) (succedent (> (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (+ (- 2.) (* skoMC1 (- 12.)))))) (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (+ 1. (* skoMC1 (- 6.)))))) (* skoSC1 (+ (* skoMC1 (* skoMC1 skoMC1)) (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (/ (- 1.) 12.)))) (* skoSC1 (* skoMC1 (* skoMC1 (* skoMC1 (/ (- 1.) 12.))))))))))))) (* skoMC1 (* skoMC1 (* skoMC1 (+ 2. (* skoMC1 6.))))))))
-----[end problem]-----

-----[begin problem]-----
% In Mathematica format:
Timing[Resolve[Exists[{skoSC1,skoMC1}, And[skoSC1*(skoMC1*skoMC1*skoMC1*(-1+skoMC1*3)+skoSC1*(skoMC1*skoMC1*skoMC1*(-2+skoMC1*-3)+skoSC1*(skoMC1*skoMC1*skoMC1*skoMC1*-1+skoSC1*skoMC1*skoMC1*skoMC1*(1/12))))>skoMC1*skoMC1*skoMC1*(-2+skoMC1*-5),skoSC1*(skoMC1*skoMC1*skoMC1*(-1+skoMC1*3)+skoSC1*(skoMC1*skoMC1*skoMC1*(-2+skoMC1*-3)+skoSC1*(skoMC1*skoMC1*skoMC1*((1/6)+skoMC1*-1)+skoSC1*skoMC1*skoMC1*skoMC1*(1/4))))>skoMC1*skoMC1*skoMC1*(-2+skoMC1*-5),skoSC1*skoMC1*skoMC1*skoMC1>skoMC1*skoMC1*skoMC1*-1,skoMC1*skoMC1*skoMC1*-2<=0,skoMC1*skoMC1*skoMC1*2>0,skoSC1*(skoMC1*(-1+skoMC1*3)+skoSC1*(skoMC1*(-2+skoMC1*-3)+skoSC1*(skoMC1*((1/6)+skoMC1*-1)+skoSC1*skoMC1*(1/4))))>skoMC1*(-2+skoMC1*-5),skoSC1*(skoMC1*(-1+skoMC1*3)+skoSC1*(skoMC1*(-2+skoMC1*-3)+skoSC1*(skoMC1*skoMC1*-1+skoSC1*skoMC1*(1/12))))>skoMC1*(-2+skoMC1*-5),skoSC1*(skoMC1*(1+skoMC1*-3)+skoSC1*(skoMC1*(2+skoMC1*3)+skoSC1*(skoMC1*((-1/6)+skoMC1)+skoSC1*skoMC1*(-1/4))))<=skoMC1*(2+skoMC1*5),skoSC1*(skoMC1*(1+skoMC1*-3)+skoSC1*(skoMC1*(2+skoMC1*3)+skoSC1*(skoMC1*skoMC1+skoSC1*skoMC1*(-1/12))))<=skoMC1*(2+skoMC1*5),skoSC1*skoMC1*-1<=skoMC1,skoSC1*skoMC1>skoMC1*-1,0<=skoMC1,skoMC1>0,0<=skoSC1,2<=skoMC1,skoSC1<=(5/4),skoSC1*skoMC1*skoMC1*skoMC1*2>skoMC1*skoMC1*skoMC1*-2,skoSC1*skoMC1*skoMC1*skoMC1*-2<=skoMC1*skoMC1*skoMC1*2,skoSC1*(skoMC1*skoMC1*skoMC1*(-2+skoMC1*-12)+skoSC1*(skoMC1*skoMC1*skoMC1*(1+skoMC1*-6)+skoSC1*(skoMC1*skoMC1*skoMC1+skoSC1*(skoMC1*skoMC1*skoMC1*(-1/12)+skoSC1*skoMC1*skoMC1*skoMC1*(-1/12)))))<=skoMC1*skoMC1*skoMC1*(2+skoMC1*6)]], Reals]]

% In QepcadB format:
(E skoSC1) (E skoMC1) [[(skoMC1 skoMC1 skoMC1 (-2+(skoMC1 (-5))))<(skoSC1 ((skoMC1 skoMC1 skoMC1 (-1+(skoMC1 (3))))+(skoSC1 ((skoMC1 skoMC1 skoMC1 (-2+(skoMC1 (-3))))+(skoSC1 ((skoMC1 skoMC1 skoMC1 skoMC1 (-1))+(skoSC1 skoMC1 skoMC1 skoMC1 (1/12))))))))]/\[[(skoMC1 skoMC1 skoMC1 (-2+(skoMC1 (-5))))<(skoSC1 ((skoMC1 skoMC1 skoMC1 (-1+(skoMC1 (3))))+(skoSC1 ((skoMC1 skoMC1 skoMC1 (-2+(skoMC1 (-3))))+(skoSC1 ((skoMC1 skoMC1 skoMC1 (1/6+(skoMC1 (-1))))+(skoSC1 skoMC1 skoMC1 skoMC1 (1/4))))))))]/\[[(skoMC1 skoMC1 skoMC1 (-1))<(skoSC1 skoMC1 skoMC1 skoMC1)]/\[[(skoMC1 skoMC1 skoMC1 (-2))<=0]/\[[0<(skoMC1 skoMC1 skoMC1 (2))]/\[[(skoMC1 (-2+(skoMC1 (-5))))<(skoSC1 ((skoMC1 (-1+(skoMC1 (3))))+(skoSC1 ((skoMC1 (-2+(skoMC1 (-3))))+(skoSC1 ((skoMC1 (1/6+(skoMC1 (-1))))+(skoSC1 skoMC1 (1/4))))))))]/\[[(skoMC1 (-2+(skoMC1 (-5))))<(skoSC1 ((skoMC1 (-1+(skoMC1 (3))))+(skoSC1 ((skoMC1 (-2+(skoMC1 (-3))))+(skoSC1 ((skoMC1 skoMC1 (-1))+(skoSC1 skoMC1 (1/12))))))))]/\[[(skoSC1 ((skoMC1 (1+(skoMC1 (-3))))+(skoSC1 ((skoMC1 (2+(skoMC1 (3))))+(skoSC1 ((skoMC1 (-1/6+skoMC1))+(skoSC1 skoMC1 (-1/4))))))))<=(skoMC1 (2+(skoMC1 (5))))]/\[[(skoSC1 ((skoMC1 (1+(skoMC1 (-3))))+(skoSC1 ((skoMC1 (2+(skoMC1 (3))))+(skoSC1 ((skoMC1 skoMC1)+(skoSC1 skoMC1 (-1/12))))))))<=(skoMC1 (2+(skoMC1 (5))))]/\[[(skoSC1 skoMC1 (-1))<=skoMC1]/\[[(skoMC1 (-1))<(skoSC1 skoMC1)]/\[[0<=skoMC1]/\[[0<skoMC1]/\[[0<=skoSC1]/\[[2<=skoMC1]/\[[skoSC1<=5/4]/\[[(skoMC1 skoMC1 skoMC1 (-2))<(skoSC1 skoMC1 skoMC1 skoMC1 (2))]/\[[(skoSC1 skoMC1 skoMC1 skoMC1 (-2))<=(skoMC1 skoMC1 skoMC1 (2))]/\[(skoSC1 ((skoMC1 skoMC1 skoMC1 (-2+(skoMC1 (-12))))+(skoSC1 ((skoMC1 skoMC1 skoMC1 (1+(skoMC1 (-6))))+(skoSC1 ((skoMC1 skoMC1 skoMC1)+(skoSC1 ((skoMC1 skoMC1 skoMC1 (-1/12))+(skoSC1 skoMC1 skoMC1 skoMC1 (-1/12))))))))))<=(skoMC1 skoMC1 skoMC1 (2+(skoMC1 (6))))]]]]]]]]]]]]]]]]]]].

% In SMTLib2 format:
(declare-fun skoSC1 () Real) (declare-fun skoMC1 () Real) (assert (and (> (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (+ (- 1.) (* skoMC1 3.))))) (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (+ (- 2.) (* skoMC1 (- 3.)))))) (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (* skoMC1 (- 1.))))) (* skoSC1 (* skoMC1 (* skoMC1 (* skoMC1 (/ 1. 12.))))))))))) (* skoMC1 (* skoMC1 (* skoMC1 (+ (- 2.) (* skoMC1 (- 5.))))))) (and (> (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (+ (- 1.) (* skoMC1 3.))))) (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (+ (- 2.) (* skoMC1 (- 3.)))))) (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (+ (/ 1. 6.) (* skoMC1 (- 1.)))))) (* skoSC1 (* skoMC1 (* skoMC1 (* skoMC1 (/ 1. 4.))))))))))) (* skoMC1 (* skoMC1 (* skoMC1 (+ (- 2.) (* skoMC1 (- 5.))))))) (and (> (* skoSC1 (* skoMC1 (* skoMC1 skoMC1))) (* skoMC1 (* skoMC1 (* skoMC1 (- 1.))))) (and (<= (* skoMC1 (* skoMC1 (* skoMC1 (- 2.)))) 0.) (and (> (* skoMC1 (* skoMC1 (* skoMC1 2.))) 0.) (and (> (* skoSC1 (+ (* skoMC1 (+ (- 1.) (* skoMC1 3.))) (* skoSC1 (+ (* skoMC1 (+ (- 2.) (* skoMC1 (- 3.)))) (* skoSC1 (+ (* skoMC1 (+ (/ 1. 6.) (* skoMC1 (- 1.)))) (* skoSC1 (* skoMC1 (/ 1. 4.))))))))) (* skoMC1 (+ (- 2.) (* skoMC1 (- 5.))))) (and (> (* skoSC1 (+ (* skoMC1 (+ (- 1.) (* skoMC1 3.))) (* skoSC1 (+ (* skoMC1 (+ (- 2.) (* skoMC1 (- 3.)))) (* skoSC1 (+ (* skoMC1 (* skoMC1 (- 1.))) (* skoSC1 (* skoMC1 (/ 1. 12.))))))))) (* skoMC1 (+ (- 2.) (* skoMC1 (- 5.))))) (and (<= (* skoSC1 (+ (* skoMC1 (+ 1. (* skoMC1 (- 3.)))) (* skoSC1 (+ (* skoMC1 (+ 2. (* skoMC1 3.))) (* skoSC1 (+ (* skoMC1 (+ (/ (- 1.) 6.) skoMC1)) (* skoSC1 (* skoMC1 (/ (- 1.) 4.))))))))) (* skoMC1 (+ 2. (* skoMC1 5.)))) (and (<= (* skoSC1 (+ (* skoMC1 (+ 1. (* skoMC1 (- 3.)))) (* skoSC1 (+ (* skoMC1 (+ 2. (* skoMC1 3.))) (* skoSC1 (+ (* skoMC1 skoMC1) (* skoSC1 (* skoMC1 (/ (- 1.) 12.))))))))) (* skoMC1 (+ 2. (* skoMC1 5.)))) (and (<= (* skoSC1 (* skoMC1 (- 1.))) skoMC1) (and (> (* skoSC1 skoMC1) (* skoMC1 (- 1.))) (and (<= 0. skoMC1) (and (> skoMC1 0.) (and (<= 0. skoSC1) (and (<= 2. skoMC1) (and (<= skoSC1 (/ 5. 4.)) (and (> (* skoSC1 (* skoMC1 (* skoMC1 (* skoMC1 2.)))) (* skoMC1 (* skoMC1 (* skoMC1 (- 2.))))) (and (<= (* skoSC1 (* skoMC1 (* skoMC1 (* skoMC1 (- 2.))))) (* skoMC1 (* skoMC1 (* skoMC1 2.)))) (<= (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (+ (- 2.) (* skoMC1 (- 12.)))))) (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (+ 1. (* skoMC1 (- 6.)))))) (* skoSC1 (+ (* skoMC1 (* skoMC1 skoMC1)) (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (/ (- 1.) 12.)))) (* skoSC1 (* skoMC1 (* skoMC1 (* skoMC1 (/ (- 1.) 12.))))))))))))) (* skoMC1 (* skoMC1 (* skoMC1 (+ 2. (* skoMC1 6.)))))))))))))))))))))))))

% In GRF format:
(sequent " MetiTarski formula " (antecedent (> (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (+ (- 1.) (* skoMC1 3.))))) (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (+ (- 2.) (* skoMC1 (- 3.)))))) (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (* skoMC1 (- 1.))))) (* skoSC1 (* skoMC1 (* skoMC1 (* skoMC1 (/ 1. 12.))))))))))) (* skoMC1 (* skoMC1 (* skoMC1 (+ (- 2.) (* skoMC1 (- 5.))))))) (> (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (+ (- 1.) (* skoMC1 3.))))) (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (+ (- 2.) (* skoMC1 (- 3.)))))) (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (+ (/ 1. 6.) (* skoMC1 (- 1.)))))) (* skoSC1 (* skoMC1 (* skoMC1 (* skoMC1 (/ 1. 4.))))))))))) (* skoMC1 (* skoMC1 (* skoMC1 (+ (- 2.) (* skoMC1 (- 5.))))))) (> (* skoSC1 (* skoMC1 (* skoMC1 skoMC1))) (* skoMC1 (* skoMC1 (* skoMC1 (- 1.))))) (<= (* skoMC1 (* skoMC1 (* skoMC1 (- 2.)))) 0.) (> (* skoMC1 (* skoMC1 (* skoMC1 2.))) 0.) (> (* skoSC1 (+ (* skoMC1 (+ (- 1.) (* skoMC1 3.))) (* skoSC1 (+ (* skoMC1 (+ (- 2.) (* skoMC1 (- 3.)))) (* skoSC1 (+ (* skoMC1 (+ (/ 1. 6.) (* skoMC1 (- 1.)))) (* skoSC1 (* skoMC1 (/ 1. 4.))))))))) (* skoMC1 (+ (- 2.) (* skoMC1 (- 5.))))) (> (* skoSC1 (+ (* skoMC1 (+ (- 1.) (* skoMC1 3.))) (* skoSC1 (+ (* skoMC1 (+ (- 2.) (* skoMC1 (- 3.)))) (* skoSC1 (+ (* skoMC1 (* skoMC1 (- 1.))) (* skoSC1 (* skoMC1 (/ 1. 12.))))))))) (* skoMC1 (+ (- 2.) (* skoMC1 (- 5.))))) (<= (* skoSC1 (+ (* skoMC1 (+ 1. (* skoMC1 (- 3.)))) (* skoSC1 (+ (* skoMC1 (+ 2. (* skoMC1 3.))) (* skoSC1 (+ (* skoMC1 (+ (/ (- 1.) 6.) skoMC1)) (* skoSC1 (* skoMC1 (/ (- 1.) 4.))))))))) (* skoMC1 (+ 2. (* skoMC1 5.)))) (<= (* skoSC1 (+ (* skoMC1 (+ 1. (* skoMC1 (- 3.)))) (* skoSC1 (+ (* skoMC1 (+ 2. (* skoMC1 3.))) (* skoSC1 (+ (* skoMC1 skoMC1) (* skoSC1 (* skoMC1 (/ (- 1.) 12.))))))))) (* skoMC1 (+ 2. (* skoMC1 5.)))) (<= (* skoSC1 (* skoMC1 (- 1.))) skoMC1) (> (* skoSC1 skoMC1) (* skoMC1 (- 1.))) (<= 0. skoMC1) (> skoMC1 0.) (<= 0. skoSC1) (<= 2. skoMC1) (<= skoSC1 (/ 5. 4.)) (> (* skoSC1 (* skoMC1 (* skoMC1 (* skoMC1 2.)))) (* skoMC1 (* skoMC1 (* skoMC1 (- 2.))))) (<= (* skoSC1 (* skoMC1 (* skoMC1 (* skoMC1 (- 2.))))) (* skoMC1 (* skoMC1 (* skoMC1 2.))))) (succedent (> (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (+ (- 2.) (* skoMC1 (- 12.)))))) (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (+ 1. (* skoMC1 (- 6.)))))) (* skoSC1 (+ (* skoMC1 (* skoMC1 skoMC1)) (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (/ (- 1.) 12.)))) (* skoSC1 (* skoMC1 (* skoMC1 (* skoMC1 (/ (- 1.) 12.))))))))))))) (* skoMC1 (* skoMC1 (* skoMC1 (+ 2. (* skoMC1 6.))))))))
-----[end problem]-----

-----[begin problem]-----
% In Mathematica format:
Timing[Resolve[Exists[{skoSC1,skoMC1}, And[skoSC1*skoMC1*skoMC1*skoMC1*-1<=skoMC1*skoMC1*skoMC1,skoMC1*skoMC1*skoMC1*2>0,skoSC1*(skoMC1*skoMC1*skoMC1*(-1+skoMC1*3)+skoSC1*(skoMC1*skoMC1*skoMC1*(-2+skoMC1*-3)+skoSC1*(skoMC1*skoMC1*skoMC1*skoMC1*-1+skoSC1*skoMC1*skoMC1*skoMC1*(1/12))))>skoMC1*skoMC1*skoMC1*(-2+skoMC1*-5),skoSC1*(skoMC1*skoMC1*skoMC1*(-1+skoMC1*3)+skoSC1*(skoMC1*skoMC1*skoMC1*(-2+skoMC1*-3)+skoSC1*(skoMC1*skoMC1*skoMC1*((1/6)+skoMC1*-1)+skoSC1*skoMC1*skoMC1*skoMC1*(1/4))))>skoMC1*skoMC1*skoMC1*(-2+skoMC1*-5),skoSC1*skoMC1*skoMC1*skoMC1>skoMC1*skoMC1*skoMC1*-1,skoMC1*skoMC1*skoMC1*-2<=0,skoMC1*skoMC1*skoMC1*2>0,skoSC1*(skoMC1*(-1+skoMC1*3)+skoSC1*(skoMC1*(-2+skoMC1*-3)+skoSC1*(skoMC1*((1/6)+skoMC1*-1)+skoSC1*skoMC1*(1/4))))>skoMC1*(-2+skoMC1*-5),skoSC1*(skoMC1*(-1+skoMC1*3)+skoSC1*(skoMC1*(-2+skoMC1*-3)+skoSC1*(skoMC1*skoMC1*-1+skoSC1*skoMC1*(1/12))))>skoMC1*(-2+skoMC1*-5),skoSC1*(skoMC1*(1+skoMC1*-3)+skoSC1*(skoMC1*(2+skoMC1*3)+skoSC1*(skoMC1*((-1/6)+skoMC1)+skoSC1*skoMC1*(-1/4))))<=skoMC1*(2+skoMC1*5),skoSC1*(skoMC1*(1+skoMC1*-3)+skoSC1*(skoMC1*(2+skoMC1*3)+skoSC1*(skoMC1*skoMC1+skoSC1*skoMC1*(-1/12))))<=skoMC1*(2+skoMC1*5),skoSC1*skoMC1*-1<=skoMC1,skoSC1*skoMC1>skoMC1*-1,0<=skoMC1,skoMC1>0,0<=skoSC1,2<=skoMC1,skoSC1<=(5/4),skoSC1*skoMC1*skoMC1*skoMC1*2>skoMC1*skoMC1*skoMC1*-2,skoSC1*skoMC1*skoMC1*skoMC1*-2<=skoMC1*skoMC1*skoMC1*2,skoSC1*(skoMC1*skoMC1*skoMC1*(-2+skoMC1*-12)+skoSC1*(skoMC1*skoMC1*skoMC1*(1+skoMC1*-6)+skoSC1*(skoMC1*skoMC1*skoMC1+skoSC1*(skoMC1*skoMC1*skoMC1*(-1/12)+skoSC1*skoMC1*skoMC1*skoMC1*(-1/12)))))<=skoMC1*skoMC1*skoMC1*(2+skoMC1*6)]], Reals]]

% In QepcadB format:
(E skoSC1) (E skoMC1) [[(skoSC1 skoMC1 skoMC1 skoMC1 (-1))<=(skoMC1 skoMC1 skoMC1)]/\[[0<(skoMC1 skoMC1 skoMC1 (2))]/\[[(skoMC1 skoMC1 skoMC1 (-2+(skoMC1 (-5))))<(skoSC1 ((skoMC1 skoMC1 skoMC1 (-1+(skoMC1 (3))))+(skoSC1 ((skoMC1 skoMC1 skoMC1 (-2+(skoMC1 (-3))))+(skoSC1 ((skoMC1 skoMC1 skoMC1 skoMC1 (-1))+(skoSC1 skoMC1 skoMC1 skoMC1 (1/12))))))))]/\[[(skoMC1 skoMC1 skoMC1 (-2+(skoMC1 (-5))))<(skoSC1 ((skoMC1 skoMC1 skoMC1 (-1+(skoMC1 (3))))+(skoSC1 ((skoMC1 skoMC1 skoMC1 (-2+(skoMC1 (-3))))+(skoSC1 ((skoMC1 skoMC1 skoMC1 (1/6+(skoMC1 (-1))))+(skoSC1 skoMC1 skoMC1 skoMC1 (1/4))))))))]/\[[(skoMC1 skoMC1 skoMC1 (-1))<(skoSC1 skoMC1 skoMC1 skoMC1)]/\[[(skoMC1 skoMC1 skoMC1 (-2))<=0]/\[[0<(skoMC1 skoMC1 skoMC1 (2))]/\[[(skoMC1 (-2+(skoMC1 (-5))))<(skoSC1 ((skoMC1 (-1+(skoMC1 (3))))+(skoSC1 ((skoMC1 (-2+(skoMC1 (-3))))+(skoSC1 ((skoMC1 (1/6+(skoMC1 (-1))))+(skoSC1 skoMC1 (1/4))))))))]/\[[(skoMC1 (-2+(skoMC1 (-5))))<(skoSC1 ((skoMC1 (-1+(skoMC1 (3))))+(skoSC1 ((skoMC1 (-2+(skoMC1 (-3))))+(skoSC1 ((skoMC1 skoMC1 (-1))+(skoSC1 skoMC1 (1/12))))))))]/\[[(skoSC1 ((skoMC1 (1+(skoMC1 (-3))))+(skoSC1 ((skoMC1 (2+(skoMC1 (3))))+(skoSC1 ((skoMC1 (-1/6+skoMC1))+(skoSC1 skoMC1 (-1/4))))))))<=(skoMC1 (2+(skoMC1 (5))))]/\[[(skoSC1 ((skoMC1 (1+(skoMC1 (-3))))+(skoSC1 ((skoMC1 (2+(skoMC1 (3))))+(skoSC1 ((skoMC1 skoMC1)+(skoSC1 skoMC1 (-1/12))))))))<=(skoMC1 (2+(skoMC1 (5))))]/\[[(skoSC1 skoMC1 (-1))<=skoMC1]/\[[(skoMC1 (-1))<(skoSC1 skoMC1)]/\[[0<=skoMC1]/\[[0<skoMC1]/\[[0<=skoSC1]/\[[2<=skoMC1]/\[[skoSC1<=5/4]/\[[(skoMC1 skoMC1 skoMC1 (-2))<(skoSC1 skoMC1 skoMC1 skoMC1 (2))]/\[[(skoSC1 skoMC1 skoMC1 skoMC1 (-2))<=(skoMC1 skoMC1 skoMC1 (2))]/\[(skoSC1 ((skoMC1 skoMC1 skoMC1 (-2+(skoMC1 (-12))))+(skoSC1 ((skoMC1 skoMC1 skoMC1 (1+(skoMC1 (-6))))+(skoSC1 ((skoMC1 skoMC1 skoMC1)+(skoSC1 ((skoMC1 skoMC1 skoMC1 (-1/12))+(skoSC1 skoMC1 skoMC1 skoMC1 (-1/12))))))))))<=(skoMC1 skoMC1 skoMC1 (2+(skoMC1 (6))))]]]]]]]]]]]]]]]]]]]]].

% In SMTLib2 format:
(declare-fun skoSC1 () Real) (declare-fun skoMC1 () Real) (assert (and (<= (* skoSC1 (* skoMC1 (* skoMC1 (* skoMC1 (- 1.))))) (* skoMC1 (* skoMC1 skoMC1))) (and (> (* skoMC1 (* skoMC1 (* skoMC1 2.))) 0.) (and (> (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (+ (- 1.) (* skoMC1 3.))))) (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (+ (- 2.) (* skoMC1 (- 3.)))))) (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (* skoMC1 (- 1.))))) (* skoSC1 (* skoMC1 (* skoMC1 (* skoMC1 (/ 1. 12.))))))))))) (* skoMC1 (* skoMC1 (* skoMC1 (+ (- 2.) (* skoMC1 (- 5.))))))) (and (> (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (+ (- 1.) (* skoMC1 3.))))) (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (+ (- 2.) (* skoMC1 (- 3.)))))) (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (+ (/ 1. 6.) (* skoMC1 (- 1.)))))) (* skoSC1 (* skoMC1 (* skoMC1 (* skoMC1 (/ 1. 4.))))))))))) (* skoMC1 (* skoMC1 (* skoMC1 (+ (- 2.) (* skoMC1 (- 5.))))))) (and (> (* skoSC1 (* skoMC1 (* skoMC1 skoMC1))) (* skoMC1 (* skoMC1 (* skoMC1 (- 1.))))) (and (<= (* skoMC1 (* skoMC1 (* skoMC1 (- 2.)))) 0.) (and (> (* skoMC1 (* skoMC1 (* skoMC1 2.))) 0.) (and (> (* skoSC1 (+ (* skoMC1 (+ (- 1.) (* skoMC1 3.))) (* skoSC1 (+ (* skoMC1 (+ (- 2.) (* skoMC1 (- 3.)))) (* skoSC1 (+ (* skoMC1 (+ (/ 1. 6.) (* skoMC1 (- 1.)))) (* skoSC1 (* skoMC1 (/ 1. 4.))))))))) (* skoMC1 (+ (- 2.) (* skoMC1 (- 5.))))) (and (> (* skoSC1 (+ (* skoMC1 (+ (- 1.) (* skoMC1 3.))) (* skoSC1 (+ (* skoMC1 (+ (- 2.) (* skoMC1 (- 3.)))) (* skoSC1 (+ (* skoMC1 (* skoMC1 (- 1.))) (* skoSC1 (* skoMC1 (/ 1. 12.))))))))) (* skoMC1 (+ (- 2.) (* skoMC1 (- 5.))))) (and (<= (* skoSC1 (+ (* skoMC1 (+ 1. (* skoMC1 (- 3.)))) (* skoSC1 (+ (* skoMC1 (+ 2. (* skoMC1 3.))) (* skoSC1 (+ (* skoMC1 (+ (/ (- 1.) 6.) skoMC1)) (* skoSC1 (* skoMC1 (/ (- 1.) 4.))))))))) (* skoMC1 (+ 2. (* skoMC1 5.)))) (and (<= (* skoSC1 (+ (* skoMC1 (+ 1. (* skoMC1 (- 3.)))) (* skoSC1 (+ (* skoMC1 (+ 2. (* skoMC1 3.))) (* skoSC1 (+ (* skoMC1 skoMC1) (* skoSC1 (* skoMC1 (/ (- 1.) 12.))))))))) (* skoMC1 (+ 2. (* skoMC1 5.)))) (and (<= (* skoSC1 (* skoMC1 (- 1.))) skoMC1) (and (> (* skoSC1 skoMC1) (* skoMC1 (- 1.))) (and (<= 0. skoMC1) (and (> skoMC1 0.) (and (<= 0. skoSC1) (and (<= 2. skoMC1) (and (<= skoSC1 (/ 5. 4.)) (and (> (* skoSC1 (* skoMC1 (* skoMC1 (* skoMC1 2.)))) (* skoMC1 (* skoMC1 (* skoMC1 (- 2.))))) (and (<= (* skoSC1 (* skoMC1 (* skoMC1 (* skoMC1 (- 2.))))) (* skoMC1 (* skoMC1 (* skoMC1 2.)))) (<= (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (+ (- 2.) (* skoMC1 (- 12.)))))) (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (+ 1. (* skoMC1 (- 6.)))))) (* skoSC1 (+ (* skoMC1 (* skoMC1 skoMC1)) (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (/ (- 1.) 12.)))) (* skoSC1 (* skoMC1 (* skoMC1 (* skoMC1 (/ (- 1.) 12.))))))))))))) (* skoMC1 (* skoMC1 (* skoMC1 (+ 2. (* skoMC1 6.)))))))))))))))))))))))))))

% In GRF format:
(sequent " MetiTarski formula " (antecedent (<= (* skoSC1 (* skoMC1 (* skoMC1 (* skoMC1 (- 1.))))) (* skoMC1 (* skoMC1 skoMC1))) (> (* skoMC1 (* skoMC1 (* skoMC1 2.))) 0.) (> (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (+ (- 1.) (* skoMC1 3.))))) (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (+ (- 2.) (* skoMC1 (- 3.)))))) (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (* skoMC1 (- 1.))))) (* skoSC1 (* skoMC1 (* skoMC1 (* skoMC1 (/ 1. 12.))))))))))) (* skoMC1 (* skoMC1 (* skoMC1 (+ (- 2.) (* skoMC1 (- 5.))))))) (> (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (+ (- 1.) (* skoMC1 3.))))) (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (+ (- 2.) (* skoMC1 (- 3.)))))) (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (+ (/ 1. 6.) (* skoMC1 (- 1.)))))) (* skoSC1 (* skoMC1 (* skoMC1 (* skoMC1 (/ 1. 4.))))))))))) (* skoMC1 (* skoMC1 (* skoMC1 (+ (- 2.) (* skoMC1 (- 5.))))))) (> (* skoSC1 (* skoMC1 (* skoMC1 skoMC1))) (* skoMC1 (* skoMC1 (* skoMC1 (- 1.))))) (<= (* skoMC1 (* skoMC1 (* skoMC1 (- 2.)))) 0.) (> (* skoMC1 (* skoMC1 (* skoMC1 2.))) 0.) (> (* skoSC1 (+ (* skoMC1 (+ (- 1.) (* skoMC1 3.))) (* skoSC1 (+ (* skoMC1 (+ (- 2.) (* skoMC1 (- 3.)))) (* skoSC1 (+ (* skoMC1 (+ (/ 1. 6.) (* skoMC1 (- 1.)))) (* skoSC1 (* skoMC1 (/ 1. 4.))))))))) (* skoMC1 (+ (- 2.) (* skoMC1 (- 5.))))) (> (* skoSC1 (+ (* skoMC1 (+ (- 1.) (* skoMC1 3.))) (* skoSC1 (+ (* skoMC1 (+ (- 2.) (* skoMC1 (- 3.)))) (* skoSC1 (+ (* skoMC1 (* skoMC1 (- 1.))) (* skoSC1 (* skoMC1 (/ 1. 12.))))))))) (* skoMC1 (+ (- 2.) (* skoMC1 (- 5.))))) (<= (* skoSC1 (+ (* skoMC1 (+ 1. (* skoMC1 (- 3.)))) (* skoSC1 (+ (* skoMC1 (+ 2. (* skoMC1 3.))) (* skoSC1 (+ (* skoMC1 (+ (/ (- 1.) 6.) skoMC1)) (* skoSC1 (* skoMC1 (/ (- 1.) 4.))))))))) (* skoMC1 (+ 2. (* skoMC1 5.)))) (<= (* skoSC1 (+ (* skoMC1 (+ 1. (* skoMC1 (- 3.)))) (* skoSC1 (+ (* skoMC1 (+ 2. (* skoMC1 3.))) (* skoSC1 (+ (* skoMC1 skoMC1) (* skoSC1 (* skoMC1 (/ (- 1.) 12.))))))))) (* skoMC1 (+ 2. (* skoMC1 5.)))) (<= (* skoSC1 (* skoMC1 (- 1.))) skoMC1) (> (* skoSC1 skoMC1) (* skoMC1 (- 1.))) (<= 0. skoMC1) (> skoMC1 0.) (<= 0. skoSC1) (<= 2. skoMC1) (<= skoSC1 (/ 5. 4.)) (> (* skoSC1 (* skoMC1 (* skoMC1 (* skoMC1 2.)))) (* skoMC1 (* skoMC1 (* skoMC1 (- 2.))))) (<= (* skoSC1 (* skoMC1 (* skoMC1 (* skoMC1 (- 2.))))) (* skoMC1 (* skoMC1 (* skoMC1 2.))))) (succedent (> (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (+ (- 2.) (* skoMC1 (- 12.)))))) (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (+ 1. (* skoMC1 (- 6.)))))) (* skoSC1 (+ (* skoMC1 (* skoMC1 skoMC1)) (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (/ (- 1.) 12.)))) (* skoSC1 (* skoMC1 (* skoMC1 (* skoMC1 (/ (- 1.) 12.))))))))))))) (* skoMC1 (* skoMC1 (* skoMC1 (+ 2. (* skoMC1 6.))))))))
-----[end problem]-----

-----[begin problem]-----
% In Mathematica format:
Timing[Resolve[Exists[{skoSC1,skoMC1}, And[skoSC1*skoMC1*skoMC1*skoMC1*-1<=skoMC1*skoMC1*skoMC1,skoSC1*(skoMC1*skoMC1*skoMC1*(-1+skoMC1*3)+skoSC1*(skoMC1*skoMC1*skoMC1*(-2+skoMC1*-3)+skoSC1*(skoMC1*skoMC1*skoMC1*skoMC1*-1+skoSC1*skoMC1*skoMC1*skoMC1*(1/12))))>skoMC1*skoMC1*skoMC1*(-2+skoMC1*-5),skoSC1*(skoMC1*skoMC1*skoMC1*(-1+skoMC1*3)+skoSC1*(skoMC1*skoMC1*skoMC1*(-2+skoMC1*-3)+skoSC1*(skoMC1*skoMC1*skoMC1*((1/6)+skoMC1*-1)+skoSC1*skoMC1*skoMC1*skoMC1*(1/4))))>skoMC1*skoMC1*skoMC1*(-2+skoMC1*-5),skoSC1*skoMC1*skoMC1*skoMC1>skoMC1*skoMC1*skoMC1*-1,skoMC1*skoMC1*skoMC1*-2<=0,skoMC1*skoMC1*skoMC1*2>0,skoSC1*(skoMC1*(-1+skoMC1*3)+skoSC1*(skoMC1*(-2+skoMC1*-3)+skoSC1*(skoMC1*((1/6)+skoMC1*-1)+skoSC1*skoMC1*(1/4))))>skoMC1*(-2+skoMC1*-5),skoSC1*(skoMC1*(-1+skoMC1*3)+skoSC1*(skoMC1*(-2+skoMC1*-3)+skoSC1*(skoMC1*skoMC1*-1+skoSC1*skoMC1*(1/12))))>skoMC1*(-2+skoMC1*-5),skoSC1*(skoMC1*(1+skoMC1*-3)+skoSC1*(skoMC1*(2+skoMC1*3)+skoSC1*(skoMC1*((-1/6)+skoMC1)+skoSC1*skoMC1*(-1/4))))<=skoMC1*(2+skoMC1*5),skoSC1*(skoMC1*(1+skoMC1*-3)+skoSC1*(skoMC1*(2+skoMC1*3)+skoSC1*(skoMC1*skoMC1+skoSC1*skoMC1*(-1/12))))<=skoMC1*(2+skoMC1*5),skoSC1*skoMC1*-1<=skoMC1,skoSC1*skoMC1>skoMC1*-1,0<=skoMC1,skoMC1>0,0<=skoSC1,2<=skoMC1,skoSC1<=(5/4),skoSC1*skoMC1*skoMC1*skoMC1*2>skoMC1*skoMC1*skoMC1*-2,skoSC1*skoMC1*skoMC1*skoMC1*-2<=skoMC1*skoMC1*skoMC1*2,skoSC1*(skoMC1*skoMC1*skoMC1*(-2+skoMC1*-12)+skoSC1*(skoMC1*skoMC1*skoMC1*(1+skoMC1*-6)+skoSC1*(skoMC1*skoMC1*skoMC1+skoSC1*(skoMC1*skoMC1*skoMC1*(-1/12)+skoSC1*skoMC1*skoMC1*skoMC1*(-1/12)))))<=skoMC1*skoMC1*skoMC1*(2+skoMC1*6)]], Reals]]

% In QepcadB format:
(E skoSC1) (E skoMC1) [[(skoSC1 skoMC1 skoMC1 skoMC1 (-1))<=(skoMC1 skoMC1 skoMC1)]/\[[(skoMC1 skoMC1 skoMC1 (-2+(skoMC1 (-5))))<(skoSC1 ((skoMC1 skoMC1 skoMC1 (-1+(skoMC1 (3))))+(skoSC1 ((skoMC1 skoMC1 skoMC1 (-2+(skoMC1 (-3))))+(skoSC1 ((skoMC1 skoMC1 skoMC1 skoMC1 (-1))+(skoSC1 skoMC1 skoMC1 skoMC1 (1/12))))))))]/\[[(skoMC1 skoMC1 skoMC1 (-2+(skoMC1 (-5))))<(skoSC1 ((skoMC1 skoMC1 skoMC1 (-1+(skoMC1 (3))))+(skoSC1 ((skoMC1 skoMC1 skoMC1 (-2+(skoMC1 (-3))))+(skoSC1 ((skoMC1 skoMC1 skoMC1 (1/6+(skoMC1 (-1))))+(skoSC1 skoMC1 skoMC1 skoMC1 (1/4))))))))]/\[[(skoMC1 skoMC1 skoMC1 (-1))<(skoSC1 skoMC1 skoMC1 skoMC1)]/\[[(skoMC1 skoMC1 skoMC1 (-2))<=0]/\[[0<(skoMC1 skoMC1 skoMC1 (2))]/\[[(skoMC1 (-2+(skoMC1 (-5))))<(skoSC1 ((skoMC1 (-1+(skoMC1 (3))))+(skoSC1 ((skoMC1 (-2+(skoMC1 (-3))))+(skoSC1 ((skoMC1 (1/6+(skoMC1 (-1))))+(skoSC1 skoMC1 (1/4))))))))]/\[[(skoMC1 (-2+(skoMC1 (-5))))<(skoSC1 ((skoMC1 (-1+(skoMC1 (3))))+(skoSC1 ((skoMC1 (-2+(skoMC1 (-3))))+(skoSC1 ((skoMC1 skoMC1 (-1))+(skoSC1 skoMC1 (1/12))))))))]/\[[(skoSC1 ((skoMC1 (1+(skoMC1 (-3))))+(skoSC1 ((skoMC1 (2+(skoMC1 (3))))+(skoSC1 ((skoMC1 (-1/6+skoMC1))+(skoSC1 skoMC1 (-1/4))))))))<=(skoMC1 (2+(skoMC1 (5))))]/\[[(skoSC1 ((skoMC1 (1+(skoMC1 (-3))))+(skoSC1 ((skoMC1 (2+(skoMC1 (3))))+(skoSC1 ((skoMC1 skoMC1)+(skoSC1 skoMC1 (-1/12))))))))<=(skoMC1 (2+(skoMC1 (5))))]/\[[(skoSC1 skoMC1 (-1))<=skoMC1]/\[[(skoMC1 (-1))<(skoSC1 skoMC1)]/\[[0<=skoMC1]/\[[0<skoMC1]/\[[0<=skoSC1]/\[[2<=skoMC1]/\[[skoSC1<=5/4]/\[[(skoMC1 skoMC1 skoMC1 (-2))<(skoSC1 skoMC1 skoMC1 skoMC1 (2))]/\[[(skoSC1 skoMC1 skoMC1 skoMC1 (-2))<=(skoMC1 skoMC1 skoMC1 (2))]/\[(skoSC1 ((skoMC1 skoMC1 skoMC1 (-2+(skoMC1 (-12))))+(skoSC1 ((skoMC1 skoMC1 skoMC1 (1+(skoMC1 (-6))))+(skoSC1 ((skoMC1 skoMC1 skoMC1)+(skoSC1 ((skoMC1 skoMC1 skoMC1 (-1/12))+(skoSC1 skoMC1 skoMC1 skoMC1 (-1/12))))))))))<=(skoMC1 skoMC1 skoMC1 (2+(skoMC1 (6))))]]]]]]]]]]]]]]]]]]]].

% In SMTLib2 format:
(declare-fun skoSC1 () Real) (declare-fun skoMC1 () Real) (assert (and (<= (* skoSC1 (* skoMC1 (* skoMC1 (* skoMC1 (- 1.))))) (* skoMC1 (* skoMC1 skoMC1))) (and (> (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (+ (- 1.) (* skoMC1 3.))))) (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (+ (- 2.) (* skoMC1 (- 3.)))))) (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (* skoMC1 (- 1.))))) (* skoSC1 (* skoMC1 (* skoMC1 (* skoMC1 (/ 1. 12.))))))))))) (* skoMC1 (* skoMC1 (* skoMC1 (+ (- 2.) (* skoMC1 (- 5.))))))) (and (> (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (+ (- 1.) (* skoMC1 3.))))) (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (+ (- 2.) (* skoMC1 (- 3.)))))) (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (+ (/ 1. 6.) (* skoMC1 (- 1.)))))) (* skoSC1 (* skoMC1 (* skoMC1 (* skoMC1 (/ 1. 4.))))))))))) (* skoMC1 (* skoMC1 (* skoMC1 (+ (- 2.) (* skoMC1 (- 5.))))))) (and (> (* skoSC1 (* skoMC1 (* skoMC1 skoMC1))) (* skoMC1 (* skoMC1 (* skoMC1 (- 1.))))) (and (<= (* skoMC1 (* skoMC1 (* skoMC1 (- 2.)))) 0.) (and (> (* skoMC1 (* skoMC1 (* skoMC1 2.))) 0.) (and (> (* skoSC1 (+ (* skoMC1 (+ (- 1.) (* skoMC1 3.))) (* skoSC1 (+ (* skoMC1 (+ (- 2.) (* skoMC1 (- 3.)))) (* skoSC1 (+ (* skoMC1 (+ (/ 1. 6.) (* skoMC1 (- 1.)))) (* skoSC1 (* skoMC1 (/ 1. 4.))))))))) (* skoMC1 (+ (- 2.) (* skoMC1 (- 5.))))) (and (> (* skoSC1 (+ (* skoMC1 (+ (- 1.) (* skoMC1 3.))) (* skoSC1 (+ (* skoMC1 (+ (- 2.) (* skoMC1 (- 3.)))) (* skoSC1 (+ (* skoMC1 (* skoMC1 (- 1.))) (* skoSC1 (* skoMC1 (/ 1. 12.))))))))) (* skoMC1 (+ (- 2.) (* skoMC1 (- 5.))))) (and (<= (* skoSC1 (+ (* skoMC1 (+ 1. (* skoMC1 (- 3.)))) (* skoSC1 (+ (* skoMC1 (+ 2. (* skoMC1 3.))) (* skoSC1 (+ (* skoMC1 (+ (/ (- 1.) 6.) skoMC1)) (* skoSC1 (* skoMC1 (/ (- 1.) 4.))))))))) (* skoMC1 (+ 2. (* skoMC1 5.)))) (and (<= (* skoSC1 (+ (* skoMC1 (+ 1. (* skoMC1 (- 3.)))) (* skoSC1 (+ (* skoMC1 (+ 2. (* skoMC1 3.))) (* skoSC1 (+ (* skoMC1 skoMC1) (* skoSC1 (* skoMC1 (/ (- 1.) 12.))))))))) (* skoMC1 (+ 2. (* skoMC1 5.)))) (and (<= (* skoSC1 (* skoMC1 (- 1.))) skoMC1) (and (> (* skoSC1 skoMC1) (* skoMC1 (- 1.))) (and (<= 0. skoMC1) (and (> skoMC1 0.) (and (<= 0. skoSC1) (and (<= 2. skoMC1) (and (<= skoSC1 (/ 5. 4.)) (and (> (* skoSC1 (* skoMC1 (* skoMC1 (* skoMC1 2.)))) (* skoMC1 (* skoMC1 (* skoMC1 (- 2.))))) (and (<= (* skoSC1 (* skoMC1 (* skoMC1 (* skoMC1 (- 2.))))) (* skoMC1 (* skoMC1 (* skoMC1 2.)))) (<= (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (+ (- 2.) (* skoMC1 (- 12.)))))) (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (+ 1. (* skoMC1 (- 6.)))))) (* skoSC1 (+ (* skoMC1 (* skoMC1 skoMC1)) (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (/ (- 1.) 12.)))) (* skoSC1 (* skoMC1 (* skoMC1 (* skoMC1 (/ (- 1.) 12.))))))))))))) (* skoMC1 (* skoMC1 (* skoMC1 (+ 2. (* skoMC1 6.))))))))))))))))))))))))))

% In GRF format:
(sequent " MetiTarski formula " (antecedent (<= (* skoSC1 (* skoMC1 (* skoMC1 (* skoMC1 (- 1.))))) (* skoMC1 (* skoMC1 skoMC1))) (> (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (+ (- 1.) (* skoMC1 3.))))) (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (+ (- 2.) (* skoMC1 (- 3.)))))) (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (* skoMC1 (- 1.))))) (* skoSC1 (* skoMC1 (* skoMC1 (* skoMC1 (/ 1. 12.))))))))))) (* skoMC1 (* skoMC1 (* skoMC1 (+ (- 2.) (* skoMC1 (- 5.))))))) (> (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (+ (- 1.) (* skoMC1 3.))))) (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (+ (- 2.) (* skoMC1 (- 3.)))))) (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (+ (/ 1. 6.) (* skoMC1 (- 1.)))))) (* skoSC1 (* skoMC1 (* skoMC1 (* skoMC1 (/ 1. 4.))))))))))) (* skoMC1 (* skoMC1 (* skoMC1 (+ (- 2.) (* skoMC1 (- 5.))))))) (> (* skoSC1 (* skoMC1 (* skoMC1 skoMC1))) (* skoMC1 (* skoMC1 (* skoMC1 (- 1.))))) (<= (* skoMC1 (* skoMC1 (* skoMC1 (- 2.)))) 0.) (> (* skoMC1 (* skoMC1 (* skoMC1 2.))) 0.) (> (* skoSC1 (+ (* skoMC1 (+ (- 1.) (* skoMC1 3.))) (* skoSC1 (+ (* skoMC1 (+ (- 2.) (* skoMC1 (- 3.)))) (* skoSC1 (+ (* skoMC1 (+ (/ 1. 6.) (* skoMC1 (- 1.)))) (* skoSC1 (* skoMC1 (/ 1. 4.))))))))) (* skoMC1 (+ (- 2.) (* skoMC1 (- 5.))))) (> (* skoSC1 (+ (* skoMC1 (+ (- 1.) (* skoMC1 3.))) (* skoSC1 (+ (* skoMC1 (+ (- 2.) (* skoMC1 (- 3.)))) (* skoSC1 (+ (* skoMC1 (* skoMC1 (- 1.))) (* skoSC1 (* skoMC1 (/ 1. 12.))))))))) (* skoMC1 (+ (- 2.) (* skoMC1 (- 5.))))) (<= (* skoSC1 (+ (* skoMC1 (+ 1. (* skoMC1 (- 3.)))) (* skoSC1 (+ (* skoMC1 (+ 2. (* skoMC1 3.))) (* skoSC1 (+ (* skoMC1 (+ (/ (- 1.) 6.) skoMC1)) (* skoSC1 (* skoMC1 (/ (- 1.) 4.))))))))) (* skoMC1 (+ 2. (* skoMC1 5.)))) (<= (* skoSC1 (+ (* skoMC1 (+ 1. (* skoMC1 (- 3.)))) (* skoSC1 (+ (* skoMC1 (+ 2. (* skoMC1 3.))) (* skoSC1 (+ (* skoMC1 skoMC1) (* skoSC1 (* skoMC1 (/ (- 1.) 12.))))))))) (* skoMC1 (+ 2. (* skoMC1 5.)))) (<= (* skoSC1 (* skoMC1 (- 1.))) skoMC1) (> (* skoSC1 skoMC1) (* skoMC1 (- 1.))) (<= 0. skoMC1) (> skoMC1 0.) (<= 0. skoSC1) (<= 2. skoMC1) (<= skoSC1 (/ 5. 4.)) (> (* skoSC1 (* skoMC1 (* skoMC1 (* skoMC1 2.)))) (* skoMC1 (* skoMC1 (* skoMC1 (- 2.))))) (<= (* skoSC1 (* skoMC1 (* skoMC1 (* skoMC1 (- 2.))))) (* skoMC1 (* skoMC1 (* skoMC1 2.))))) (succedent (> (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (+ (- 2.) (* skoMC1 (- 12.)))))) (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (+ 1. (* skoMC1 (- 6.)))))) (* skoSC1 (+ (* skoMC1 (* skoMC1 skoMC1)) (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (/ (- 1.) 12.)))) (* skoSC1 (* skoMC1 (* skoMC1 (* skoMC1 (/ (- 1.) 12.))))))))))))) (* skoMC1 (* skoMC1 (* skoMC1 (+ 2. (* skoMC1 6.))))))))
-----[end problem]-----

-----[begin problem]-----
% In Mathematica format:
Timing[Resolve[Exists[{skoSC1,skoMC1}, And[skoSC1*skoMC1*skoMC1*skoMC1*-1<=skoMC1*skoMC1*skoMC1,skoSC1*(skoMC1*skoMC1*skoMC1*(-1+skoMC1*3)+skoSC1*(skoMC1*skoMC1*skoMC1*(-2+skoMC1*-3)+skoSC1*(skoMC1*skoMC1*skoMC1*skoMC1*-1+skoSC1*skoMC1*skoMC1*skoMC1*(1/12))))>skoMC1*skoMC1*skoMC1*(-2+skoMC1*-5),skoSC1*(skoMC1*skoMC1*skoMC1*(-1+skoMC1*3)+skoSC1*(skoMC1*skoMC1*skoMC1*(-2+skoMC1*-3)+skoSC1*(skoMC1*skoMC1*skoMC1*((1/6)+skoMC1*-1)+skoSC1*skoMC1*skoMC1*skoMC1*(1/4))))>skoMC1*skoMC1*skoMC1*(-2+skoMC1*-5),skoSC1*skoMC1*skoMC1*skoMC1>skoMC1*skoMC1*skoMC1*-1,skoMC1*skoMC1*skoMC1*-2<=0,skoMC1*skoMC1*skoMC1*2>0,skoSC1*(skoMC1*(-1+skoMC1*3)+skoSC1*(skoMC1*(-2+skoMC1*-3)+skoSC1*(skoMC1*((1/6)+skoMC1*-1)+skoSC1*skoMC1*(1/4))))>skoMC1*(-2+skoMC1*-5),skoSC1*(skoMC1*(-1+skoMC1*3)+skoSC1*(skoMC1*(-2+skoMC1*-3)+skoSC1*(skoMC1*skoMC1*-1+skoSC1*skoMC1*(1/12))))>skoMC1*(-2+skoMC1*-5),skoSC1*(skoMC1*(1+skoMC1*-3)+skoSC1*(skoMC1*(2+skoMC1*3)+skoSC1*(skoMC1*((-1/6)+skoMC1)+skoSC1*skoMC1*(-1/4))))<=skoMC1*(2+skoMC1*5),skoSC1*(skoMC1*(1+skoMC1*-3)+skoSC1*(skoMC1*(2+skoMC1*3)+skoSC1*(skoMC1*skoMC1+skoSC1*skoMC1*(-1/12))))<=skoMC1*(2+skoMC1*5),skoSC1*skoMC1*-1<=skoMC1,skoSC1*skoMC1>skoMC1*-1,0<=skoMC1,skoMC1>0,0<=skoSC1,2<=skoMC1,skoSC1<=(5/4),skoSC1*skoMC1*skoMC1*skoMC1*2>skoMC1*skoMC1*skoMC1*-2,skoSC1*skoMC1*skoMC1*skoMC1*-2<=skoMC1*skoMC1*skoMC1*2,skoSC1*(skoMC1*skoMC1*skoMC1*(-2+skoMC1*-12)+skoSC1*(skoMC1*skoMC1*skoMC1*(1+skoMC1*-6)+skoSC1*(skoMC1*skoMC1*skoMC1+skoSC1*(skoMC1*skoMC1*skoMC1*(-1/12)+skoSC1*skoMC1*skoMC1*skoMC1*(-1/12)))))<=skoMC1*skoMC1*skoMC1*(2+skoMC1*6)]], Reals]]

% In QepcadB format:
(E skoSC1) (E skoMC1) [[(skoSC1 skoMC1 skoMC1 skoMC1 (-1))<=(skoMC1 skoMC1 skoMC1)]/\[[(skoMC1 skoMC1 skoMC1 (-2+(skoMC1 (-5))))<(skoSC1 ((skoMC1 skoMC1 skoMC1 (-1+(skoMC1 (3))))+(skoSC1 ((skoMC1 skoMC1 skoMC1 (-2+(skoMC1 (-3))))+(skoSC1 ((skoMC1 skoMC1 skoMC1 skoMC1 (-1))+(skoSC1 skoMC1 skoMC1 skoMC1 (1/12))))))))]/\[[(skoMC1 skoMC1 skoMC1 (-2+(skoMC1 (-5))))<(skoSC1 ((skoMC1 skoMC1 skoMC1 (-1+(skoMC1 (3))))+(skoSC1 ((skoMC1 skoMC1 skoMC1 (-2+(skoMC1 (-3))))+(skoSC1 ((skoMC1 skoMC1 skoMC1 (1/6+(skoMC1 (-1))))+(skoSC1 skoMC1 skoMC1 skoMC1 (1/4))))))))]/\[[(skoMC1 skoMC1 skoMC1 (-1))<(skoSC1 skoMC1 skoMC1 skoMC1)]/\[[(skoMC1 skoMC1 skoMC1 (-2))<=0]/\[[0<(skoMC1 skoMC1 skoMC1 (2))]/\[[(skoMC1 (-2+(skoMC1 (-5))))<(skoSC1 ((skoMC1 (-1+(skoMC1 (3))))+(skoSC1 ((skoMC1 (-2+(skoMC1 (-3))))+(skoSC1 ((skoMC1 (1/6+(skoMC1 (-1))))+(skoSC1 skoMC1 (1/4))))))))]/\[[(skoMC1 (-2+(skoMC1 (-5))))<(skoSC1 ((skoMC1 (-1+(skoMC1 (3))))+(skoSC1 ((skoMC1 (-2+(skoMC1 (-3))))+(skoSC1 ((skoMC1 skoMC1 (-1))+(skoSC1 skoMC1 (1/12))))))))]/\[[(skoSC1 ((skoMC1 (1+(skoMC1 (-3))))+(skoSC1 ((skoMC1 (2+(skoMC1 (3))))+(skoSC1 ((skoMC1 (-1/6+skoMC1))+(skoSC1 skoMC1 (-1/4))))))))<=(skoMC1 (2+(skoMC1 (5))))]/\[[(skoSC1 ((skoMC1 (1+(skoMC1 (-3))))+(skoSC1 ((skoMC1 (2+(skoMC1 (3))))+(skoSC1 ((skoMC1 skoMC1)+(skoSC1 skoMC1 (-1/12))))))))<=(skoMC1 (2+(skoMC1 (5))))]/\[[(skoSC1 skoMC1 (-1))<=skoMC1]/\[[(skoMC1 (-1))<(skoSC1 skoMC1)]/\[[0<=skoMC1]/\[[0<skoMC1]/\[[0<=skoSC1]/\[[2<=skoMC1]/\[[skoSC1<=5/4]/\[[(skoMC1 skoMC1 skoMC1 (-2))<(skoSC1 skoMC1 skoMC1 skoMC1 (2))]/\[[(skoSC1 skoMC1 skoMC1 skoMC1 (-2))<=(skoMC1 skoMC1 skoMC1 (2))]/\[(skoSC1 ((skoMC1 skoMC1 skoMC1 (-2+(skoMC1 (-12))))+(skoSC1 ((skoMC1 skoMC1 skoMC1 (1+(skoMC1 (-6))))+(skoSC1 ((skoMC1 skoMC1 skoMC1)+(skoSC1 ((skoMC1 skoMC1 skoMC1 (-1/12))+(skoSC1 skoMC1 skoMC1 skoMC1 (-1/12))))))))))<=(skoMC1 skoMC1 skoMC1 (2+(skoMC1 (6))))]]]]]]]]]]]]]]]]]]]].

% In SMTLib2 format:
(declare-fun skoSC1 () Real) (declare-fun skoMC1 () Real) (assert (and (<= (* skoSC1 (* skoMC1 (* skoMC1 (* skoMC1 (- 1.))))) (* skoMC1 (* skoMC1 skoMC1))) (and (> (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (+ (- 1.) (* skoMC1 3.))))) (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (+ (- 2.) (* skoMC1 (- 3.)))))) (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (* skoMC1 (- 1.))))) (* skoSC1 (* skoMC1 (* skoMC1 (* skoMC1 (/ 1. 12.))))))))))) (* skoMC1 (* skoMC1 (* skoMC1 (+ (- 2.) (* skoMC1 (- 5.))))))) (and (> (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (+ (- 1.) (* skoMC1 3.))))) (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (+ (- 2.) (* skoMC1 (- 3.)))))) (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (+ (/ 1. 6.) (* skoMC1 (- 1.)))))) (* skoSC1 (* skoMC1 (* skoMC1 (* skoMC1 (/ 1. 4.))))))))))) (* skoMC1 (* skoMC1 (* skoMC1 (+ (- 2.) (* skoMC1 (- 5.))))))) (and (> (* skoSC1 (* skoMC1 (* skoMC1 skoMC1))) (* skoMC1 (* skoMC1 (* skoMC1 (- 1.))))) (and (<= (* skoMC1 (* skoMC1 (* skoMC1 (- 2.)))) 0.) (and (> (* skoMC1 (* skoMC1 (* skoMC1 2.))) 0.) (and (> (* skoSC1 (+ (* skoMC1 (+ (- 1.) (* skoMC1 3.))) (* skoSC1 (+ (* skoMC1 (+ (- 2.) (* skoMC1 (- 3.)))) (* skoSC1 (+ (* skoMC1 (+ (/ 1. 6.) (* skoMC1 (- 1.)))) (* skoSC1 (* skoMC1 (/ 1. 4.))))))))) (* skoMC1 (+ (- 2.) (* skoMC1 (- 5.))))) (and (> (* skoSC1 (+ (* skoMC1 (+ (- 1.) (* skoMC1 3.))) (* skoSC1 (+ (* skoMC1 (+ (- 2.) (* skoMC1 (- 3.)))) (* skoSC1 (+ (* skoMC1 (* skoMC1 (- 1.))) (* skoSC1 (* skoMC1 (/ 1. 12.))))))))) (* skoMC1 (+ (- 2.) (* skoMC1 (- 5.))))) (and (<= (* skoSC1 (+ (* skoMC1 (+ 1. (* skoMC1 (- 3.)))) (* skoSC1 (+ (* skoMC1 (+ 2. (* skoMC1 3.))) (* skoSC1 (+ (* skoMC1 (+ (/ (- 1.) 6.) skoMC1)) (* skoSC1 (* skoMC1 (/ (- 1.) 4.))))))))) (* skoMC1 (+ 2. (* skoMC1 5.)))) (and (<= (* skoSC1 (+ (* skoMC1 (+ 1. (* skoMC1 (- 3.)))) (* skoSC1 (+ (* skoMC1 (+ 2. (* skoMC1 3.))) (* skoSC1 (+ (* skoMC1 skoMC1) (* skoSC1 (* skoMC1 (/ (- 1.) 12.))))))))) (* skoMC1 (+ 2. (* skoMC1 5.)))) (and (<= (* skoSC1 (* skoMC1 (- 1.))) skoMC1) (and (> (* skoSC1 skoMC1) (* skoMC1 (- 1.))) (and (<= 0. skoMC1) (and (> skoMC1 0.) (and (<= 0. skoSC1) (and (<= 2. skoMC1) (and (<= skoSC1 (/ 5. 4.)) (and (> (* skoSC1 (* skoMC1 (* skoMC1 (* skoMC1 2.)))) (* skoMC1 (* skoMC1 (* skoMC1 (- 2.))))) (and (<= (* skoSC1 (* skoMC1 (* skoMC1 (* skoMC1 (- 2.))))) (* skoMC1 (* skoMC1 (* skoMC1 2.)))) (<= (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (+ (- 2.) (* skoMC1 (- 12.)))))) (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (+ 1. (* skoMC1 (- 6.)))))) (* skoSC1 (+ (* skoMC1 (* skoMC1 skoMC1)) (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (/ (- 1.) 12.)))) (* skoSC1 (* skoMC1 (* skoMC1 (* skoMC1 (/ (- 1.) 12.))))))))))))) (* skoMC1 (* skoMC1 (* skoMC1 (+ 2. (* skoMC1 6.))))))))))))))))))))))))))

% In GRF format:
(sequent " MetiTarski formula " (antecedent (<= (* skoSC1 (* skoMC1 (* skoMC1 (* skoMC1 (- 1.))))) (* skoMC1 (* skoMC1 skoMC1))) (> (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (+ (- 1.) (* skoMC1 3.))))) (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (+ (- 2.) (* skoMC1 (- 3.)))))) (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (* skoMC1 (- 1.))))) (* skoSC1 (* skoMC1 (* skoMC1 (* skoMC1 (/ 1. 12.))))))))))) (* skoMC1 (* skoMC1 (* skoMC1 (+ (- 2.) (* skoMC1 (- 5.))))))) (> (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (+ (- 1.) (* skoMC1 3.))))) (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (+ (- 2.) (* skoMC1 (- 3.)))))) (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (+ (/ 1. 6.) (* skoMC1 (- 1.)))))) (* skoSC1 (* skoMC1 (* skoMC1 (* skoMC1 (/ 1. 4.))))))))))) (* skoMC1 (* skoMC1 (* skoMC1 (+ (- 2.) (* skoMC1 (- 5.))))))) (> (* skoSC1 (* skoMC1 (* skoMC1 skoMC1))) (* skoMC1 (* skoMC1 (* skoMC1 (- 1.))))) (<= (* skoMC1 (* skoMC1 (* skoMC1 (- 2.)))) 0.) (> (* skoMC1 (* skoMC1 (* skoMC1 2.))) 0.) (> (* skoSC1 (+ (* skoMC1 (+ (- 1.) (* skoMC1 3.))) (* skoSC1 (+ (* skoMC1 (+ (- 2.) (* skoMC1 (- 3.)))) (* skoSC1 (+ (* skoMC1 (+ (/ 1. 6.) (* skoMC1 (- 1.)))) (* skoSC1 (* skoMC1 (/ 1. 4.))))))))) (* skoMC1 (+ (- 2.) (* skoMC1 (- 5.))))) (> (* skoSC1 (+ (* skoMC1 (+ (- 1.) (* skoMC1 3.))) (* skoSC1 (+ (* skoMC1 (+ (- 2.) (* skoMC1 (- 3.)))) (* skoSC1 (+ (* skoMC1 (* skoMC1 (- 1.))) (* skoSC1 (* skoMC1 (/ 1. 12.))))))))) (* skoMC1 (+ (- 2.) (* skoMC1 (- 5.))))) (<= (* skoSC1 (+ (* skoMC1 (+ 1. (* skoMC1 (- 3.)))) (* skoSC1 (+ (* skoMC1 (+ 2. (* skoMC1 3.))) (* skoSC1 (+ (* skoMC1 (+ (/ (- 1.) 6.) skoMC1)) (* skoSC1 (* skoMC1 (/ (- 1.) 4.))))))))) (* skoMC1 (+ 2. (* skoMC1 5.)))) (<= (* skoSC1 (+ (* skoMC1 (+ 1. (* skoMC1 (- 3.)))) (* skoSC1 (+ (* skoMC1 (+ 2. (* skoMC1 3.))) (* skoSC1 (+ (* skoMC1 skoMC1) (* skoSC1 (* skoMC1 (/ (- 1.) 12.))))))))) (* skoMC1 (+ 2. (* skoMC1 5.)))) (<= (* skoSC1 (* skoMC1 (- 1.))) skoMC1) (> (* skoSC1 skoMC1) (* skoMC1 (- 1.))) (<= 0. skoMC1) (> skoMC1 0.) (<= 0. skoSC1) (<= 2. skoMC1) (<= skoSC1 (/ 5. 4.)) (> (* skoSC1 (* skoMC1 (* skoMC1 (* skoMC1 2.)))) (* skoMC1 (* skoMC1 (* skoMC1 (- 2.))))) (<= (* skoSC1 (* skoMC1 (* skoMC1 (* skoMC1 (- 2.))))) (* skoMC1 (* skoMC1 (* skoMC1 2.))))) (succedent (> (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (+ (- 2.) (* skoMC1 (- 12.)))))) (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (+ 1. (* skoMC1 (- 6.)))))) (* skoSC1 (+ (* skoMC1 (* skoMC1 skoMC1)) (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (/ (- 1.) 12.)))) (* skoSC1 (* skoMC1 (* skoMC1 (* skoMC1 (/ (- 1.) 12.))))))))))))) (* skoMC1 (* skoMC1 (* skoMC1 (+ 2. (* skoMC1 6.))))))))
-----[end problem]-----

-----[begin problem]-----
% In Mathematica format:
Timing[Resolve[Exists[{skoSC1,skoMC1}, And[skoMC1*skoMC1*skoMC1*-2>0,skoSC1*(skoMC1*skoMC1*skoMC1*(1+skoMC1*-3)+skoSC1*(skoMC1*skoMC1*skoMC1*(2+skoMC1*3)+skoSC1*(skoMC1*skoMC1*skoMC1*skoMC1+skoSC1*(skoMC1*skoMC1*skoMC1*(-1/12)+skoSC1*skoSC1*(skoMC1*skoMC1*skoMC1*(1/360)+skoSC1*skoSC1*(skoMC1*skoMC1*skoMC1*(-1/20160)+skoSC1*skoSC1*(skoMC1*skoMC1*skoMC1*(1/1814400)+skoSC1*skoSC1*skoMC1*skoMC1*skoMC1*(-1/239500800))))))))>skoMC1*skoMC1*skoMC1*(2+skoMC1*5),skoSC1*(skoMC1*skoMC1*skoMC1*(-1+skoMC1*3)+skoSC1*(skoMC1*skoMC1*skoMC1*(-2+skoMC1*-3)+skoSC1*(skoMC1*skoMC1*skoMC1*skoMC1*-1+skoSC1*skoMC1*skoMC1*skoMC1*(1/12))))>skoMC1*skoMC1*skoMC1*(-2+skoMC1*-5),skoSC1*(skoMC1*skoMC1*skoMC1*(-1+skoMC1*3)+skoSC1*(skoMC1*skoMC1*skoMC1*(-2+skoMC1*-3)+skoSC1*(skoMC1*skoMC1*skoMC1*((1/6)+skoMC1*-1)+skoSC1*skoMC1*skoMC1*skoMC1*(1/4))))>skoMC1*skoMC1*skoMC1*(-2+skoMC1*-5),skoSC1*skoMC1*skoMC1*skoMC1>skoMC1*skoMC1*skoMC1*-1,skoMC1*skoMC1*skoMC1*2>0,skoSC1*(skoMC1*(-1+skoMC1*3)+skoSC1*(skoMC1*(-2+skoMC1*-3)+skoSC1*(skoMC1*((1/6)+skoMC1*-1)+skoSC1*skoMC1*(1/4))))>skoMC1*(-2+skoMC1*-5),skoSC1*(skoMC1*(-1+skoMC1*3)+skoSC1*(skoMC1*(-2+skoMC1*-3)+skoSC1*(skoMC1*skoMC1*-1+skoSC1*skoMC1*(1/12))))>skoMC1*(-2+skoMC1*-5),skoSC1*skoMC1>skoMC1*-1,skoMC1>0,skoSC1*skoMC1*skoMC1*skoMC1*2>skoMC1*skoMC1*skoMC1*-2]], Reals]]

% In QepcadB format:
(E skoSC1) (E skoMC1) [[0<(skoMC1 skoMC1 skoMC1 (-2))]/\[[(skoMC1 skoMC1 skoMC1 (2+(skoMC1 (5))))<(skoSC1 ((skoMC1 skoMC1 skoMC1 (1+(skoMC1 (-3))))+(skoSC1 ((skoMC1 skoMC1 skoMC1 (2+(skoMC1 (3))))+(skoSC1 ((skoMC1 skoMC1 skoMC1 skoMC1)+(skoSC1 ((skoMC1 skoMC1 skoMC1 (-1/12))+(skoSC1 skoSC1 ((skoMC1 skoMC1 skoMC1 (1/360))+(skoSC1 skoSC1 ((skoMC1 skoMC1 skoMC1 (-1/20160))+(skoSC1 skoSC1 ((skoMC1 skoMC1 skoMC1 (1/1814400))+(skoSC1 skoSC1 skoMC1 skoMC1 skoMC1 (-1/239500800))))))))))))))))]/\[[(skoMC1 skoMC1 skoMC1 (-2+(skoMC1 (-5))))<(skoSC1 ((skoMC1 skoMC1 skoMC1 (-1+(skoMC1 (3))))+(skoSC1 ((skoMC1 skoMC1 skoMC1 (-2+(skoMC1 (-3))))+(skoSC1 ((skoMC1 skoMC1 skoMC1 skoMC1 (-1))+(skoSC1 skoMC1 skoMC1 skoMC1 (1/12))))))))]/\[[(skoMC1 skoMC1 skoMC1 (-2+(skoMC1 (-5))))<(skoSC1 ((skoMC1 skoMC1 skoMC1 (-1+(skoMC1 (3))))+(skoSC1 ((skoMC1 skoMC1 skoMC1 (-2+(skoMC1 (-3))))+(skoSC1 ((skoMC1 skoMC1 skoMC1 (1/6+(skoMC1 (-1))))+(skoSC1 skoMC1 skoMC1 skoMC1 (1/4))))))))]/\[[(skoMC1 skoMC1 skoMC1 (-1))<(skoSC1 skoMC1 skoMC1 skoMC1)]/\[[0<(skoMC1 skoMC1 skoMC1 (2))]/\[[(skoMC1 (-2+(skoMC1 (-5))))<(skoSC1 ((skoMC1 (-1+(skoMC1 (3))))+(skoSC1 ((skoMC1 (-2+(skoMC1 (-3))))+(skoSC1 ((skoMC1 (1/6+(skoMC1 (-1))))+(skoSC1 skoMC1 (1/4))))))))]/\[[(skoMC1 (-2+(skoMC1 (-5))))<(skoSC1 ((skoMC1 (-1+(skoMC1 (3))))+(skoSC1 ((skoMC1 (-2+(skoMC1 (-3))))+(skoSC1 ((skoMC1 skoMC1 (-1))+(skoSC1 skoMC1 (1/12))))))))]/\[[(skoMC1 (-1))<(skoSC1 skoMC1)]/\[[0<skoMC1]/\[(skoMC1 skoMC1 skoMC1 (-2))<(skoSC1 skoMC1 skoMC1 skoMC1 (2))]]]]]]]]]]].

% In SMTLib2 format:
(declare-fun skoSC1 () Real) (declare-fun skoMC1 () Real) (assert (and (> (* skoMC1 (* skoMC1 (* skoMC1 (- 2.)))) 0.) (and (> (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (+ 1. (* skoMC1 (- 3.)))))) (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (+ 2. (* skoMC1 3.))))) (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 skoMC1))) (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (/ (- 1.) 12.)))) (* skoSC1 (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (/ 1. 360.)))) (* skoSC1 (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (/ (- 1.) 20160.)))) (* skoSC1 (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (/ 1. 1814400.)))) (* skoSC1 (* skoSC1 (* skoMC1 (* skoMC1 (* skoMC1 (/ (- 1.) 239500800.))))))))))))))))))))))) (* skoMC1 (* skoMC1 (* skoMC1 (+ 2. (* skoMC1 5.)))))) (and (> (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (+ (- 1.) (* skoMC1 3.))))) (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (+ (- 2.) (* skoMC1 (- 3.)))))) (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (* skoMC1 (- 1.))))) (* skoSC1 (* skoMC1 (* skoMC1 (* skoMC1 (/ 1. 12.))))))))))) (* skoMC1 (* skoMC1 (* skoMC1 (+ (- 2.) (* skoMC1 (- 5.))))))) (and (> (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (+ (- 1.) (* skoMC1 3.))))) (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (+ (- 2.) (* skoMC1 (- 3.)))))) (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (+ (/ 1. 6.) (* skoMC1 (- 1.)))))) (* skoSC1 (* skoMC1 (* skoMC1 (* skoMC1 (/ 1. 4.))))))))))) (* skoMC1 (* skoMC1 (* skoMC1 (+ (- 2.) (* skoMC1 (- 5.))))))) (and (> (* skoSC1 (* skoMC1 (* skoMC1 skoMC1))) (* skoMC1 (* skoMC1 (* skoMC1 (- 1.))))) (and (> (* skoMC1 (* skoMC1 (* skoMC1 2.))) 0.) (and (> (* skoSC1 (+ (* skoMC1 (+ (- 1.) (* skoMC1 3.))) (* skoSC1 (+ (* skoMC1 (+ (- 2.) (* skoMC1 (- 3.)))) (* skoSC1 (+ (* skoMC1 (+ (/ 1. 6.) (* skoMC1 (- 1.)))) (* skoSC1 (* skoMC1 (/ 1. 4.))))))))) (* skoMC1 (+ (- 2.) (* skoMC1 (- 5.))))) (and (> (* skoSC1 (+ (* skoMC1 (+ (- 1.) (* skoMC1 3.))) (* skoSC1 (+ (* skoMC1 (+ (- 2.) (* skoMC1 (- 3.)))) (* skoSC1 (+ (* skoMC1 (* skoMC1 (- 1.))) (* skoSC1 (* skoMC1 (/ 1. 12.))))))))) (* skoMC1 (+ (- 2.) (* skoMC1 (- 5.))))) (and (> (* skoSC1 skoMC1) (* skoMC1 (- 1.))) (and (> skoMC1 0.) (> (* skoSC1 (* skoMC1 (* skoMC1 (* skoMC1 2.)))) (* skoMC1 (* skoMC1 (* skoMC1 (- 2.))))))))))))))))

% In GRF format:
(sequent " MetiTarski formula " (antecedent (> (* skoMC1 (* skoMC1 (* skoMC1 (- 2.)))) 0.) (> (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (+ 1. (* skoMC1 (- 3.)))))) (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (+ 2. (* skoMC1 3.))))) (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 skoMC1))) (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (/ (- 1.) 12.)))) (* skoSC1 (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (/ 1. 360.)))) (* skoSC1 (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (/ (- 1.) 20160.)))) (* skoSC1 (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (/ 1. 1814400.)))) (* skoSC1 (* skoSC1 (* skoMC1 (* skoMC1 (* skoMC1 (/ (- 1.) 239500800.))))))))))))))))))))))) (* skoMC1 (* skoMC1 (* skoMC1 (+ 2. (* skoMC1 5.)))))) (> (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (+ (- 1.) (* skoMC1 3.))))) (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (+ (- 2.) (* skoMC1 (- 3.)))))) (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (* skoMC1 (- 1.))))) (* skoSC1 (* skoMC1 (* skoMC1 (* skoMC1 (/ 1. 12.))))))))))) (* skoMC1 (* skoMC1 (* skoMC1 (+ (- 2.) (* skoMC1 (- 5.))))))) (> (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (+ (- 1.) (* skoMC1 3.))))) (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (+ (- 2.) (* skoMC1 (- 3.)))))) (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (+ (/ 1. 6.) (* skoMC1 (- 1.)))))) (* skoSC1 (* skoMC1 (* skoMC1 (* skoMC1 (/ 1. 4.))))))))))) (* skoMC1 (* skoMC1 (* skoMC1 (+ (- 2.) (* skoMC1 (- 5.))))))) (> (* skoSC1 (* skoMC1 (* skoMC1 skoMC1))) (* skoMC1 (* skoMC1 (* skoMC1 (- 1.))))) (> (* skoMC1 (* skoMC1 (* skoMC1 2.))) 0.) (> (* skoSC1 (+ (* skoMC1 (+ (- 1.) (* skoMC1 3.))) (* skoSC1 (+ (* skoMC1 (+ (- 2.) (* skoMC1 (- 3.)))) (* skoSC1 (+ (* skoMC1 (+ (/ 1. 6.) (* skoMC1 (- 1.)))) (* skoSC1 (* skoMC1 (/ 1. 4.))))))))) (* skoMC1 (+ (- 2.) (* skoMC1 (- 5.))))) (> (* skoSC1 (+ (* skoMC1 (+ (- 1.) (* skoMC1 3.))) (* skoSC1 (+ (* skoMC1 (+ (- 2.) (* skoMC1 (- 3.)))) (* skoSC1 (+ (* skoMC1 (* skoMC1 (- 1.))) (* skoSC1 (* skoMC1 (/ 1. 12.))))))))) (* skoMC1 (+ (- 2.) (* skoMC1 (- 5.))))) (> (* skoSC1 skoMC1) (* skoMC1 (- 1.))) (> skoMC1 0.)) (succedent (<= (* skoSC1 (* skoMC1 (* skoMC1 (* skoMC1 2.)))) (* skoMC1 (* skoMC1 (* skoMC1 (- 2.)))))))
-----[end problem]-----

-----[begin problem]-----
% In Mathematica format:
Timing[Resolve[Exists[{skoSC1,skoMC1}, And[skoMC1*skoMC1*skoMC1*-2<=0,skoSC1<=0,skoSC1*skoMC1*skoMC1*skoMC1*-1<=skoMC1*skoMC1*skoMC1,skoSC1*(skoMC1*skoMC1*skoMC1*(-1+skoMC1*3)+skoSC1*(skoMC1*skoMC1*skoMC1*(-2+skoMC1*-3)+skoSC1*(skoMC1*skoMC1*skoMC1*skoMC1*-1+skoSC1*skoMC1*skoMC1*skoMC1*(1/12))))>skoMC1*skoMC1*skoMC1*(-2+skoMC1*-5),skoSC1*(skoMC1*skoMC1*skoMC1*(-1+skoMC1*3)+skoSC1*(skoMC1*skoMC1*skoMC1*(-2+skoMC1*-3)+skoSC1*(skoMC1*skoMC1*skoMC1*((1/6)+skoMC1*-1)+skoSC1*skoMC1*skoMC1*skoMC1*(1/4))))>skoMC1*skoMC1*skoMC1*(-2+skoMC1*-5),skoSC1*skoMC1*skoMC1*skoMC1>skoMC1*skoMC1*skoMC1*-1,skoMC1*skoMC1*skoMC1*-2<=0,skoMC1*skoMC1*skoMC1*2>0,skoSC1*(skoMC1*(-1+skoMC1*3)+skoSC1*(skoMC1*(-2+skoMC1*-3)+skoSC1*(skoMC1*((1/6)+skoMC1*-1)+skoSC1*skoMC1*(1/4))))>skoMC1*(-2+skoMC1*-5),skoSC1*(skoMC1*(-1+skoMC1*3)+skoSC1*(skoMC1*(-2+skoMC1*-3)+skoSC1*(skoMC1*skoMC1*-1+skoSC1*skoMC1*(1/12))))>skoMC1*(-2+skoMC1*-5),skoSC1*(skoMC1*(1+skoMC1*-3)+skoSC1*(skoMC1*(2+skoMC1*3)+skoSC1*(skoMC1*((-1/6)+skoMC1)+skoSC1*skoMC1*(-1/4))))<=skoMC1*(2+skoMC1*5),skoSC1*(skoMC1*(1+skoMC1*-3)+skoSC1*(skoMC1*(2+skoMC1*3)+skoSC1*(skoMC1*skoMC1+skoSC1*skoMC1*(-1/12))))<=skoMC1*(2+skoMC1*5),skoSC1*skoMC1*-1<=skoMC1,skoSC1*skoMC1>skoMC1*-1,0<=skoMC1,skoMC1>0,0<=skoSC1,2<=skoMC1,skoSC1<=(5/4),skoSC1*skoMC1*skoMC1*skoMC1*2>skoMC1*skoMC1*skoMC1*-2,skoSC1*skoMC1*skoMC1*skoMC1*-2<=skoMC1*skoMC1*skoMC1*2,skoSC1*(skoMC1*skoMC1*skoMC1*(-2+skoMC1*-12)+skoSC1*(skoMC1*skoMC1*skoMC1*(1+skoMC1*-6)+skoSC1*(skoMC1*skoMC1*skoMC1+skoSC1*(skoMC1*skoMC1*skoMC1*(-1/12)+skoSC1*skoMC1*skoMC1*skoMC1*(-1/12)))))<=skoMC1*skoMC1*skoMC1*(2+skoMC1*6)]], Reals]]

% In QepcadB format:
(E skoSC1) (E skoMC1) [[(skoMC1 skoMC1 skoMC1 (-2))<=0]/\[[skoSC1<=0]/\[[(skoSC1 skoMC1 skoMC1 skoMC1 (-1))<=(skoMC1 skoMC1 skoMC1)]/\[[(skoMC1 skoMC1 skoMC1 (-2+(skoMC1 (-5))))<(skoSC1 ((skoMC1 skoMC1 skoMC1 (-1+(skoMC1 (3))))+(skoSC1 ((skoMC1 skoMC1 skoMC1 (-2+(skoMC1 (-3))))+(skoSC1 ((skoMC1 skoMC1 skoMC1 skoMC1 (-1))+(skoSC1 skoMC1 skoMC1 skoMC1 (1/12))))))))]/\[[(skoMC1 skoMC1 skoMC1 (-2+(skoMC1 (-5))))<(skoSC1 ((skoMC1 skoMC1 skoMC1 (-1+(skoMC1 (3))))+(skoSC1 ((skoMC1 skoMC1 skoMC1 (-2+(skoMC1 (-3))))+(skoSC1 ((skoMC1 skoMC1 skoMC1 (1/6+(skoMC1 (-1))))+(skoSC1 skoMC1 skoMC1 skoMC1 (1/4))))))))]/\[[(skoMC1 skoMC1 skoMC1 (-1))<(skoSC1 skoMC1 skoMC1 skoMC1)]/\[[(skoMC1 skoMC1 skoMC1 (-2))<=0]/\[[0<(skoMC1 skoMC1 skoMC1 (2))]/\[[(skoMC1 (-2+(skoMC1 (-5))))<(skoSC1 ((skoMC1 (-1+(skoMC1 (3))))+(skoSC1 ((skoMC1 (-2+(skoMC1 (-3))))+(skoSC1 ((skoMC1 (1/6+(skoMC1 (-1))))+(skoSC1 skoMC1 (1/4))))))))]/\[[(skoMC1 (-2+(skoMC1 (-5))))<(skoSC1 ((skoMC1 (-1+(skoMC1 (3))))+(skoSC1 ((skoMC1 (-2+(skoMC1 (-3))))+(skoSC1 ((skoMC1 skoMC1 (-1))+(skoSC1 skoMC1 (1/12))))))))]/\[[(skoSC1 ((skoMC1 (1+(skoMC1 (-3))))+(skoSC1 ((skoMC1 (2+(skoMC1 (3))))+(skoSC1 ((skoMC1 (-1/6+skoMC1))+(skoSC1 skoMC1 (-1/4))))))))<=(skoMC1 (2+(skoMC1 (5))))]/\[[(skoSC1 ((skoMC1 (1+(skoMC1 (-3))))+(skoSC1 ((skoMC1 (2+(skoMC1 (3))))+(skoSC1 ((skoMC1 skoMC1)+(skoSC1 skoMC1 (-1/12))))))))<=(skoMC1 (2+(skoMC1 (5))))]/\[[(skoSC1 skoMC1 (-1))<=skoMC1]/\[[(skoMC1 (-1))<(skoSC1 skoMC1)]/\[[0<=skoMC1]/\[[0<skoMC1]/\[[0<=skoSC1]/\[[2<=skoMC1]/\[[skoSC1<=5/4]/\[[(skoMC1 skoMC1 skoMC1 (-2))<(skoSC1 skoMC1 skoMC1 skoMC1 (2))]/\[[(skoSC1 skoMC1 skoMC1 skoMC1 (-2))<=(skoMC1 skoMC1 skoMC1 (2))]/\[(skoSC1 ((skoMC1 skoMC1 skoMC1 (-2+(skoMC1 (-12))))+(skoSC1 ((skoMC1 skoMC1 skoMC1 (1+(skoMC1 (-6))))+(skoSC1 ((skoMC1 skoMC1 skoMC1)+(skoSC1 ((skoMC1 skoMC1 skoMC1 (-1/12))+(skoSC1 skoMC1 skoMC1 skoMC1 (-1/12))))))))))<=(skoMC1 skoMC1 skoMC1 (2+(skoMC1 (6))))]]]]]]]]]]]]]]]]]]]]]].

% In SMTLib2 format:
(declare-fun skoSC1 () Real) (declare-fun skoMC1 () Real) (assert (and (<= (* skoMC1 (* skoMC1 (* skoMC1 (- 2.)))) 0.) (and (<= skoSC1 0.) (and (<= (* skoSC1 (* skoMC1 (* skoMC1 (* skoMC1 (- 1.))))) (* skoMC1 (* skoMC1 skoMC1))) (and (> (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (+ (- 1.) (* skoMC1 3.))))) (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (+ (- 2.) (* skoMC1 (- 3.)))))) (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (* skoMC1 (- 1.))))) (* skoSC1 (* skoMC1 (* skoMC1 (* skoMC1 (/ 1. 12.))))))))))) (* skoMC1 (* skoMC1 (* skoMC1 (+ (- 2.) (* skoMC1 (- 5.))))))) (and (> (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (+ (- 1.) (* skoMC1 3.))))) (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (+ (- 2.) (* skoMC1 (- 3.)))))) (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (+ (/ 1. 6.) (* skoMC1 (- 1.)))))) (* skoSC1 (* skoMC1 (* skoMC1 (* skoMC1 (/ 1. 4.))))))))))) (* skoMC1 (* skoMC1 (* skoMC1 (+ (- 2.) (* skoMC1 (- 5.))))))) (and (> (* skoSC1 (* skoMC1 (* skoMC1 skoMC1))) (* skoMC1 (* skoMC1 (* skoMC1 (- 1.))))) (and (<= (* skoMC1 (* skoMC1 (* skoMC1 (- 2.)))) 0.) (and (> (* skoMC1 (* skoMC1 (* skoMC1 2.))) 0.) (and (> (* skoSC1 (+ (* skoMC1 (+ (- 1.) (* skoMC1 3.))) (* skoSC1 (+ (* skoMC1 (+ (- 2.) (* skoMC1 (- 3.)))) (* skoSC1 (+ (* skoMC1 (+ (/ 1. 6.) (* skoMC1 (- 1.)))) (* skoSC1 (* skoMC1 (/ 1. 4.))))))))) (* skoMC1 (+ (- 2.) (* skoMC1 (- 5.))))) (and (> (* skoSC1 (+ (* skoMC1 (+ (- 1.) (* skoMC1 3.))) (* skoSC1 (+ (* skoMC1 (+ (- 2.) (* skoMC1 (- 3.)))) (* skoSC1 (+ (* skoMC1 (* skoMC1 (- 1.))) (* skoSC1 (* skoMC1 (/ 1. 12.))))))))) (* skoMC1 (+ (- 2.) (* skoMC1 (- 5.))))) (and (<= (* skoSC1 (+ (* skoMC1 (+ 1. (* skoMC1 (- 3.)))) (* skoSC1 (+ (* skoMC1 (+ 2. (* skoMC1 3.))) (* skoSC1 (+ (* skoMC1 (+ (/ (- 1.) 6.) skoMC1)) (* skoSC1 (* skoMC1 (/ (- 1.) 4.))))))))) (* skoMC1 (+ 2. (* skoMC1 5.)))) (and (<= (* skoSC1 (+ (* skoMC1 (+ 1. (* skoMC1 (- 3.)))) (* skoSC1 (+ (* skoMC1 (+ 2. (* skoMC1 3.))) (* skoSC1 (+ (* skoMC1 skoMC1) (* skoSC1 (* skoMC1 (/ (- 1.) 12.))))))))) (* skoMC1 (+ 2. (* skoMC1 5.)))) (and (<= (* skoSC1 (* skoMC1 (- 1.))) skoMC1) (and (> (* skoSC1 skoMC1) (* skoMC1 (- 1.))) (and (<= 0. skoMC1) (and (> skoMC1 0.) (and (<= 0. skoSC1) (and (<= 2. skoMC1) (and (<= skoSC1 (/ 5. 4.)) (and (> (* skoSC1 (* skoMC1 (* skoMC1 (* skoMC1 2.)))) (* skoMC1 (* skoMC1 (* skoMC1 (- 2.))))) (and (<= (* skoSC1 (* skoMC1 (* skoMC1 (* skoMC1 (- 2.))))) (* skoMC1 (* skoMC1 (* skoMC1 2.)))) (<= (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (+ (- 2.) (* skoMC1 (- 12.)))))) (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (+ 1. (* skoMC1 (- 6.)))))) (* skoSC1 (+ (* skoMC1 (* skoMC1 skoMC1)) (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (/ (- 1.) 12.)))) (* skoSC1 (* skoMC1 (* skoMC1 (* skoMC1 (/ (- 1.) 12.))))))))))))) (* skoMC1 (* skoMC1 (* skoMC1 (+ 2. (* skoMC1 6.))))))))))))))))))))))))))))

% In GRF format:
(sequent " MetiTarski formula " (antecedent (<= (* skoMC1 (* skoMC1 (* skoMC1 (- 2.)))) 0.) (<= skoSC1 0.) (<= (* skoSC1 (* skoMC1 (* skoMC1 (* skoMC1 (- 1.))))) (* skoMC1 (* skoMC1 skoMC1))) (> (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (+ (- 1.) (* skoMC1 3.))))) (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (+ (- 2.) (* skoMC1 (- 3.)))))) (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (* skoMC1 (- 1.))))) (* skoSC1 (* skoMC1 (* skoMC1 (* skoMC1 (/ 1. 12.))))))))))) (* skoMC1 (* skoMC1 (* skoMC1 (+ (- 2.) (* skoMC1 (- 5.))))))) (> (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (+ (- 1.) (* skoMC1 3.))))) (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (+ (- 2.) (* skoMC1 (- 3.)))))) (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (+ (/ 1. 6.) (* skoMC1 (- 1.)))))) (* skoSC1 (* skoMC1 (* skoMC1 (* skoMC1 (/ 1. 4.))))))))))) (* skoMC1 (* skoMC1 (* skoMC1 (+ (- 2.) (* skoMC1 (- 5.))))))) (> (* skoSC1 (* skoMC1 (* skoMC1 skoMC1))) (* skoMC1 (* skoMC1 (* skoMC1 (- 1.))))) (<= (* skoMC1 (* skoMC1 (* skoMC1 (- 2.)))) 0.) (> (* skoMC1 (* skoMC1 (* skoMC1 2.))) 0.) (> (* skoSC1 (+ (* skoMC1 (+ (- 1.) (* skoMC1 3.))) (* skoSC1 (+ (* skoMC1 (+ (- 2.) (* skoMC1 (- 3.)))) (* skoSC1 (+ (* skoMC1 (+ (/ 1. 6.) (* skoMC1 (- 1.)))) (* skoSC1 (* skoMC1 (/ 1. 4.))))))))) (* skoMC1 (+ (- 2.) (* skoMC1 (- 5.))))) (> (* skoSC1 (+ (* skoMC1 (+ (- 1.) (* skoMC1 3.))) (* skoSC1 (+ (* skoMC1 (+ (- 2.) (* skoMC1 (- 3.)))) (* skoSC1 (+ (* skoMC1 (* skoMC1 (- 1.))) (* skoSC1 (* skoMC1 (/ 1. 12.))))))))) (* skoMC1 (+ (- 2.) (* skoMC1 (- 5.))))) (<= (* skoSC1 (+ (* skoMC1 (+ 1. (* skoMC1 (- 3.)))) (* skoSC1 (+ (* skoMC1 (+ 2. (* skoMC1 3.))) (* skoSC1 (+ (* skoMC1 (+ (/ (- 1.) 6.) skoMC1)) (* skoSC1 (* skoMC1 (/ (- 1.) 4.))))))))) (* skoMC1 (+ 2. (* skoMC1 5.)))) (<= (* skoSC1 (+ (* skoMC1 (+ 1. (* skoMC1 (- 3.)))) (* skoSC1 (+ (* skoMC1 (+ 2. (* skoMC1 3.))) (* skoSC1 (+ (* skoMC1 skoMC1) (* skoSC1 (* skoMC1 (/ (- 1.) 12.))))))))) (* skoMC1 (+ 2. (* skoMC1 5.)))) (<= (* skoSC1 (* skoMC1 (- 1.))) skoMC1) (> (* skoSC1 skoMC1) (* skoMC1 (- 1.))) (<= 0. skoMC1) (> skoMC1 0.) (<= 0. skoSC1) (<= 2. skoMC1) (<= skoSC1 (/ 5. 4.)) (> (* skoSC1 (* skoMC1 (* skoMC1 (* skoMC1 2.)))) (* skoMC1 (* skoMC1 (* skoMC1 (- 2.))))) (<= (* skoSC1 (* skoMC1 (* skoMC1 (* skoMC1 (- 2.))))) (* skoMC1 (* skoMC1 (* skoMC1 2.))))) (succedent (> (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (+ (- 2.) (* skoMC1 (- 12.)))))) (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (+ 1. (* skoMC1 (- 6.)))))) (* skoSC1 (+ (* skoMC1 (* skoMC1 skoMC1)) (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (/ (- 1.) 12.)))) (* skoSC1 (* skoMC1 (* skoMC1 (* skoMC1 (/ (- 1.) 12.))))))))))))) (* skoMC1 (* skoMC1 (* skoMC1 (+ 2. (* skoMC1 6.))))))))
-----[end problem]-----

-----[begin problem]-----
% In Mathematica format:
Timing[Resolve[Exists[{skoSC1,skoMC1}, And[skoMC1*skoMC1*skoMC1*2>0,skoSC1*(skoMC1*skoMC1*skoMC1*(-1+skoMC1*3)+skoSC1*(skoMC1*skoMC1*skoMC1*(-2+skoMC1*-3)+skoSC1*(skoMC1*skoMC1*skoMC1*skoMC1*-1+skoSC1*(skoMC1*skoMC1*skoMC1*(1/12)+skoSC1*skoSC1*(skoMC1*skoMC1*skoMC1*(-1/360)+skoSC1*skoSC1*(skoMC1*skoMC1*skoMC1*(1/20160)+skoSC1*skoSC1*(skoMC1*skoMC1*skoMC1*(-1/1814400)+skoSC1*skoSC1*skoMC1*skoMC1*skoMC1*(1/239500800))))))))>skoMC1*skoMC1*skoMC1*(-2+skoMC1*-5),skoSC1*(skoMC1*skoMC1*skoMC1*(-1+skoMC1*3)+skoSC1*(skoMC1*skoMC1*skoMC1*(-2+skoMC1*-3)+skoSC1*(skoMC1*skoMC1*skoMC1*skoMC1*-1+skoSC1*skoMC1*skoMC1*skoMC1*(1/12))))>skoMC1*skoMC1*skoMC1*(-2+skoMC1*-5),skoSC1*(skoMC1*skoMC1*skoMC1*(-1+skoMC1*3)+skoSC1*(skoMC1*skoMC1*skoMC1*(-2+skoMC1*-3)+skoSC1*(skoMC1*skoMC1*skoMC1*((1/6)+skoMC1*-1)+skoSC1*skoMC1*skoMC1*skoMC1*(1/4))))>skoMC1*skoMC1*skoMC1*(-2+skoMC1*-5),skoSC1*skoMC1*skoMC1*skoMC1>skoMC1*skoMC1*skoMC1*-1,skoMC1*skoMC1*skoMC1*2>0,skoSC1*(skoMC1*(-1+skoMC1*3)+skoSC1*(skoMC1*(-2+skoMC1*-3)+skoSC1*(skoMC1*((1/6)+skoMC1*-1)+skoSC1*skoMC1*(1/4))))>skoMC1*(-2+skoMC1*-5),skoSC1*(skoMC1*(-1+skoMC1*3)+skoSC1*(skoMC1*(-2+skoMC1*-3)+skoSC1*(skoMC1*skoMC1*-1+skoSC1*skoMC1*(1/12))))>skoMC1*(-2+skoMC1*-5),skoSC1*skoMC1>skoMC1*-1,skoMC1>0,skoSC1*skoMC1*skoMC1*skoMC1*2>skoMC1*skoMC1*skoMC1*-2]], Reals]]

% In QepcadB format:
(E skoSC1) (E skoMC1) [[0<(skoMC1 skoMC1 skoMC1 (2))]/\[[(skoMC1 skoMC1 skoMC1 (-2+(skoMC1 (-5))))<(skoSC1 ((skoMC1 skoMC1 skoMC1 (-1+(skoMC1 (3))))+(skoSC1 ((skoMC1 skoMC1 skoMC1 (-2+(skoMC1 (-3))))+(skoSC1 ((skoMC1 skoMC1 skoMC1 skoMC1 (-1))+(skoSC1 ((skoMC1 skoMC1 skoMC1 (1/12))+(skoSC1 skoSC1 ((skoMC1 skoMC1 skoMC1 (-1/360))+(skoSC1 skoSC1 ((skoMC1 skoMC1 skoMC1 (1/20160))+(skoSC1 skoSC1 ((skoMC1 skoMC1 skoMC1 (-1/1814400))+(skoSC1 skoSC1 skoMC1 skoMC1 skoMC1 (1/239500800))))))))))))))))]/\[[(skoMC1 skoMC1 skoMC1 (-2+(skoMC1 (-5))))<(skoSC1 ((skoMC1 skoMC1 skoMC1 (-1+(skoMC1 (3))))+(skoSC1 ((skoMC1 skoMC1 skoMC1 (-2+(skoMC1 (-3))))+(skoSC1 ((skoMC1 skoMC1 skoMC1 skoMC1 (-1))+(skoSC1 skoMC1 skoMC1 skoMC1 (1/12))))))))]/\[[(skoMC1 skoMC1 skoMC1 (-2+(skoMC1 (-5))))<(skoSC1 ((skoMC1 skoMC1 skoMC1 (-1+(skoMC1 (3))))+(skoSC1 ((skoMC1 skoMC1 skoMC1 (-2+(skoMC1 (-3))))+(skoSC1 ((skoMC1 skoMC1 skoMC1 (1/6+(skoMC1 (-1))))+(skoSC1 skoMC1 skoMC1 skoMC1 (1/4))))))))]/\[[(skoMC1 skoMC1 skoMC1 (-1))<(skoSC1 skoMC1 skoMC1 skoMC1)]/\[[0<(skoMC1 skoMC1 skoMC1 (2))]/\[[(skoMC1 (-2+(skoMC1 (-5))))<(skoSC1 ((skoMC1 (-1+(skoMC1 (3))))+(skoSC1 ((skoMC1 (-2+(skoMC1 (-3))))+(skoSC1 ((skoMC1 (1/6+(skoMC1 (-1))))+(skoSC1 skoMC1 (1/4))))))))]/\[[(skoMC1 (-2+(skoMC1 (-5))))<(skoSC1 ((skoMC1 (-1+(skoMC1 (3))))+(skoSC1 ((skoMC1 (-2+(skoMC1 (-3))))+(skoSC1 ((skoMC1 skoMC1 (-1))+(skoSC1 skoMC1 (1/12))))))))]/\[[(skoMC1 (-1))<(skoSC1 skoMC1)]/\[[0<skoMC1]/\[(skoMC1 skoMC1 skoMC1 (-2))<(skoSC1 skoMC1 skoMC1 skoMC1 (2))]]]]]]]]]]].

% In SMTLib2 format:
(declare-fun skoSC1 () Real) (declare-fun skoMC1 () Real) (assert (and (> (* skoMC1 (* skoMC1 (* skoMC1 2.))) 0.) (and (> (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (+ (- 1.) (* skoMC1 3.))))) (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (+ (- 2.) (* skoMC1 (- 3.)))))) (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (* skoMC1 (- 1.))))) (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (/ 1. 12.)))) (* skoSC1 (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (/ (- 1.) 360.)))) (* skoSC1 (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (/ 1. 20160.)))) (* skoSC1 (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (/ (- 1.) 1814400.)))) (* skoSC1 (* skoSC1 (* skoMC1 (* skoMC1 (* skoMC1 (/ 1. 239500800.))))))))))))))))))))))) (* skoMC1 (* skoMC1 (* skoMC1 (+ (- 2.) (* skoMC1 (- 5.))))))) (and (> (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (+ (- 1.) (* skoMC1 3.))))) (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (+ (- 2.) (* skoMC1 (- 3.)))))) (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (* skoMC1 (- 1.))))) (* skoSC1 (* skoMC1 (* skoMC1 (* skoMC1 (/ 1. 12.))))))))))) (* skoMC1 (* skoMC1 (* skoMC1 (+ (- 2.) (* skoMC1 (- 5.))))))) (and (> (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (+ (- 1.) (* skoMC1 3.))))) (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (+ (- 2.) (* skoMC1 (- 3.)))))) (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (+ (/ 1. 6.) (* skoMC1 (- 1.)))))) (* skoSC1 (* skoMC1 (* skoMC1 (* skoMC1 (/ 1. 4.))))))))))) (* skoMC1 (* skoMC1 (* skoMC1 (+ (- 2.) (* skoMC1 (- 5.))))))) (and (> (* skoSC1 (* skoMC1 (* skoMC1 skoMC1))) (* skoMC1 (* skoMC1 (* skoMC1 (- 1.))))) (and (> (* skoMC1 (* skoMC1 (* skoMC1 2.))) 0.) (and (> (* skoSC1 (+ (* skoMC1 (+ (- 1.) (* skoMC1 3.))) (* skoSC1 (+ (* skoMC1 (+ (- 2.) (* skoMC1 (- 3.)))) (* skoSC1 (+ (* skoMC1 (+ (/ 1. 6.) (* skoMC1 (- 1.)))) (* skoSC1 (* skoMC1 (/ 1. 4.))))))))) (* skoMC1 (+ (- 2.) (* skoMC1 (- 5.))))) (and (> (* skoSC1 (+ (* skoMC1 (+ (- 1.) (* skoMC1 3.))) (* skoSC1 (+ (* skoMC1 (+ (- 2.) (* skoMC1 (- 3.)))) (* skoSC1 (+ (* skoMC1 (* skoMC1 (- 1.))) (* skoSC1 (* skoMC1 (/ 1. 12.))))))))) (* skoMC1 (+ (- 2.) (* skoMC1 (- 5.))))) (and (> (* skoSC1 skoMC1) (* skoMC1 (- 1.))) (and (> skoMC1 0.) (> (* skoSC1 (* skoMC1 (* skoMC1 (* skoMC1 2.)))) (* skoMC1 (* skoMC1 (* skoMC1 (- 2.))))))))))))))))

% In GRF format:
(sequent " MetiTarski formula " (antecedent (> (* skoMC1 (* skoMC1 (* skoMC1 2.))) 0.) (> (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (+ (- 1.) (* skoMC1 3.))))) (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (+ (- 2.) (* skoMC1 (- 3.)))))) (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (* skoMC1 (- 1.))))) (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (/ 1. 12.)))) (* skoSC1 (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (/ (- 1.) 360.)))) (* skoSC1 (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (/ 1. 20160.)))) (* skoSC1 (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (/ (- 1.) 1814400.)))) (* skoSC1 (* skoSC1 (* skoMC1 (* skoMC1 (* skoMC1 (/ 1. 239500800.))))))))))))))))))))))) (* skoMC1 (* skoMC1 (* skoMC1 (+ (- 2.) (* skoMC1 (- 5.))))))) (> (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (+ (- 1.) (* skoMC1 3.))))) (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (+ (- 2.) (* skoMC1 (- 3.)))))) (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (* skoMC1 (- 1.))))) (* skoSC1 (* skoMC1 (* skoMC1 (* skoMC1 (/ 1. 12.))))))))))) (* skoMC1 (* skoMC1 (* skoMC1 (+ (- 2.) (* skoMC1 (- 5.))))))) (> (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (+ (- 1.) (* skoMC1 3.))))) (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (+ (- 2.) (* skoMC1 (- 3.)))))) (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (+ (/ 1. 6.) (* skoMC1 (- 1.)))))) (* skoSC1 (* skoMC1 (* skoMC1 (* skoMC1 (/ 1. 4.))))))))))) (* skoMC1 (* skoMC1 (* skoMC1 (+ (- 2.) (* skoMC1 (- 5.))))))) (> (* skoSC1 (* skoMC1 (* skoMC1 skoMC1))) (* skoMC1 (* skoMC1 (* skoMC1 (- 1.))))) (> (* skoMC1 (* skoMC1 (* skoMC1 2.))) 0.) (> (* skoSC1 (+ (* skoMC1 (+ (- 1.) (* skoMC1 3.))) (* skoSC1 (+ (* skoMC1 (+ (- 2.) (* skoMC1 (- 3.)))) (* skoSC1 (+ (* skoMC1 (+ (/ 1. 6.) (* skoMC1 (- 1.)))) (* skoSC1 (* skoMC1 (/ 1. 4.))))))))) (* skoMC1 (+ (- 2.) (* skoMC1 (- 5.))))) (> (* skoSC1 (+ (* skoMC1 (+ (- 1.) (* skoMC1 3.))) (* skoSC1 (+ (* skoMC1 (+ (- 2.) (* skoMC1 (- 3.)))) (* skoSC1 (+ (* skoMC1 (* skoMC1 (- 1.))) (* skoSC1 (* skoMC1 (/ 1. 12.))))))))) (* skoMC1 (+ (- 2.) (* skoMC1 (- 5.))))) (> (* skoSC1 skoMC1) (* skoMC1 (- 1.))) (> skoMC1 0.)) (succedent (<= (* skoSC1 (* skoMC1 (* skoMC1 (* skoMC1 2.)))) (* skoMC1 (* skoMC1 (* skoMC1 (- 2.)))))))
-----[end problem]-----

-----[begin problem]-----
% In Mathematica format:
Timing[Resolve[Exists[{skoSC1,skoMC1}, And[skoSC1<=0,skoMC1*skoMC1*skoMC1*2>0,skoSC1*(skoMC1*skoMC1*skoMC1*(-1+skoMC1*3)+skoSC1*(skoMC1*skoMC1*skoMC1*(-2+skoMC1*-3)+skoSC1*(skoMC1*skoMC1*skoMC1*skoMC1*-1+skoSC1*(skoMC1*skoMC1*skoMC1*(1/12)+skoSC1*skoSC1*(skoMC1*skoMC1*skoMC1*(-1/360)+skoSC1*skoSC1*(skoMC1*skoMC1*skoMC1*(1/20160)+skoSC1*skoSC1*(skoMC1*skoMC1*skoMC1*(-1/1814400)+skoSC1*skoSC1*skoMC1*skoMC1*skoMC1*(1/239500800))))))))>skoMC1*skoMC1*skoMC1*(-2+skoMC1*-5),skoSC1*skoMC1*skoMC1*skoMC1*-1<=skoMC1*skoMC1*skoMC1,skoSC1*(skoMC1*skoMC1*skoMC1*(-1+skoMC1*3)+skoSC1*(skoMC1*skoMC1*skoMC1*(-2+skoMC1*-3)+skoSC1*(skoMC1*skoMC1*skoMC1*skoMC1*-1+skoSC1*skoMC1*skoMC1*skoMC1*(1/12))))>skoMC1*skoMC1*skoMC1*(-2+skoMC1*-5),skoSC1*(skoMC1*skoMC1*skoMC1*(-1+skoMC1*3)+skoSC1*(skoMC1*skoMC1*skoMC1*(-2+skoMC1*-3)+skoSC1*(skoMC1*skoMC1*skoMC1*((1/6)+skoMC1*-1)+skoSC1*skoMC1*skoMC1*skoMC1*(1/4))))>skoMC1*skoMC1*skoMC1*(-2+skoMC1*-5),skoSC1*skoMC1*skoMC1*skoMC1>skoMC1*skoMC1*skoMC1*-1,skoMC1*skoMC1*skoMC1*-2<=0,skoMC1*skoMC1*skoMC1*2>0,skoSC1*(skoMC1*(-1+skoMC1*3)+skoSC1*(skoMC1*(-2+skoMC1*-3)+skoSC1*(skoMC1*((1/6)+skoMC1*-1)+skoSC1*skoMC1*(1/4))))>skoMC1*(-2+skoMC1*-5),skoSC1*(skoMC1*(-1+skoMC1*3)+skoSC1*(skoMC1*(-2+skoMC1*-3)+skoSC1*(skoMC1*skoMC1*-1+skoSC1*skoMC1*(1/12))))>skoMC1*(-2+skoMC1*-5),skoSC1*(skoMC1*(1+skoMC1*-3)+skoSC1*(skoMC1*(2+skoMC1*3)+skoSC1*(skoMC1*((-1/6)+skoMC1)+skoSC1*skoMC1*(-1/4))))<=skoMC1*(2+skoMC1*5),skoSC1*(skoMC1*(1+skoMC1*-3)+skoSC1*(skoMC1*(2+skoMC1*3)+skoSC1*(skoMC1*skoMC1+skoSC1*skoMC1*(-1/12))))<=skoMC1*(2+skoMC1*5),skoSC1*skoMC1*-1<=skoMC1,skoSC1*skoMC1>skoMC1*-1,0<=skoMC1,skoMC1>0,0<=skoSC1,2<=skoMC1,skoSC1<=(5/4),skoSC1*skoMC1*skoMC1*skoMC1*2>skoMC1*skoMC1*skoMC1*-2,skoSC1*skoMC1*skoMC1*skoMC1*-2<=skoMC1*skoMC1*skoMC1*2,skoSC1*(skoMC1*skoMC1*skoMC1*(-2+skoMC1*-12)+skoSC1*(skoMC1*skoMC1*skoMC1*(1+skoMC1*-6)+skoSC1*(skoMC1*skoMC1*skoMC1+skoSC1*(skoMC1*skoMC1*skoMC1*(-1/12)+skoSC1*skoMC1*skoMC1*skoMC1*(-1/12)))))<=skoMC1*skoMC1*skoMC1*(2+skoMC1*6)]], Reals]]

% In QepcadB format:
(E skoSC1) (E skoMC1) [[skoSC1<=0]/\[[0<(skoMC1 skoMC1 skoMC1 (2))]/\[[(skoMC1 skoMC1 skoMC1 (-2+(skoMC1 (-5))))<(skoSC1 ((skoMC1 skoMC1 skoMC1 (-1+(skoMC1 (3))))+(skoSC1 ((skoMC1 skoMC1 skoMC1 (-2+(skoMC1 (-3))))+(skoSC1 ((skoMC1 skoMC1 skoMC1 skoMC1 (-1))+(skoSC1 ((skoMC1 skoMC1 skoMC1 (1/12))+(skoSC1 skoSC1 ((skoMC1 skoMC1 skoMC1 (-1/360))+(skoSC1 skoSC1 ((skoMC1 skoMC1 skoMC1 (1/20160))+(skoSC1 skoSC1 ((skoMC1 skoMC1 skoMC1 (-1/1814400))+(skoSC1 skoSC1 skoMC1 skoMC1 skoMC1 (1/239500800))))))))))))))))]/\[[(skoSC1 skoMC1 skoMC1 skoMC1 (-1))<=(skoMC1 skoMC1 skoMC1)]/\[[(skoMC1 skoMC1 skoMC1 (-2+(skoMC1 (-5))))<(skoSC1 ((skoMC1 skoMC1 skoMC1 (-1+(skoMC1 (3))))+(skoSC1 ((skoMC1 skoMC1 skoMC1 (-2+(skoMC1 (-3))))+(skoSC1 ((skoMC1 skoMC1 skoMC1 skoMC1 (-1))+(skoSC1 skoMC1 skoMC1 skoMC1 (1/12))))))))]/\[[(skoMC1 skoMC1 skoMC1 (-2+(skoMC1 (-5))))<(skoSC1 ((skoMC1 skoMC1 skoMC1 (-1+(skoMC1 (3))))+(skoSC1 ((skoMC1 skoMC1 skoMC1 (-2+(skoMC1 (-3))))+(skoSC1 ((skoMC1 skoMC1 skoMC1 (1/6+(skoMC1 (-1))))+(skoSC1 skoMC1 skoMC1 skoMC1 (1/4))))))))]/\[[(skoMC1 skoMC1 skoMC1 (-1))<(skoSC1 skoMC1 skoMC1 skoMC1)]/\[[(skoMC1 skoMC1 skoMC1 (-2))<=0]/\[[0<(skoMC1 skoMC1 skoMC1 (2))]/\[[(skoMC1 (-2+(skoMC1 (-5))))<(skoSC1 ((skoMC1 (-1+(skoMC1 (3))))+(skoSC1 ((skoMC1 (-2+(skoMC1 (-3))))+(skoSC1 ((skoMC1 (1/6+(skoMC1 (-1))))+(skoSC1 skoMC1 (1/4))))))))]/\[[(skoMC1 (-2+(skoMC1 (-5))))<(skoSC1 ((skoMC1 (-1+(skoMC1 (3))))+(skoSC1 ((skoMC1 (-2+(skoMC1 (-3))))+(skoSC1 ((skoMC1 skoMC1 (-1))+(skoSC1 skoMC1 (1/12))))))))]/\[[(skoSC1 ((skoMC1 (1+(skoMC1 (-3))))+(skoSC1 ((skoMC1 (2+(skoMC1 (3))))+(skoSC1 ((skoMC1 (-1/6+skoMC1))+(skoSC1 skoMC1 (-1/4))))))))<=(skoMC1 (2+(skoMC1 (5))))]/\[[(skoSC1 ((skoMC1 (1+(skoMC1 (-3))))+(skoSC1 ((skoMC1 (2+(skoMC1 (3))))+(skoSC1 ((skoMC1 skoMC1)+(skoSC1 skoMC1 (-1/12))))))))<=(skoMC1 (2+(skoMC1 (5))))]/\[[(skoSC1 skoMC1 (-1))<=skoMC1]/\[[(skoMC1 (-1))<(skoSC1 skoMC1)]/\[[0<=skoMC1]/\[[0<skoMC1]/\[[0<=skoSC1]/\[[2<=skoMC1]/\[[skoSC1<=5/4]/\[[(skoMC1 skoMC1 skoMC1 (-2))<(skoSC1 skoMC1 skoMC1 skoMC1 (2))]/\[[(skoSC1 skoMC1 skoMC1 skoMC1 (-2))<=(skoMC1 skoMC1 skoMC1 (2))]/\[(skoSC1 ((skoMC1 skoMC1 skoMC1 (-2+(skoMC1 (-12))))+(skoSC1 ((skoMC1 skoMC1 skoMC1 (1+(skoMC1 (-6))))+(skoSC1 ((skoMC1 skoMC1 skoMC1)+(skoSC1 ((skoMC1 skoMC1 skoMC1 (-1/12))+(skoSC1 skoMC1 skoMC1 skoMC1 (-1/12))))))))))<=(skoMC1 skoMC1 skoMC1 (2+(skoMC1 (6))))]]]]]]]]]]]]]]]]]]]]]]].

% In SMTLib2 format:
(declare-fun skoSC1 () Real) (declare-fun skoMC1 () Real) (assert (and (<= skoSC1 0.) (and (> (* skoMC1 (* skoMC1 (* skoMC1 2.))) 0.) (and (> (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (+ (- 1.) (* skoMC1 3.))))) (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (+ (- 2.) (* skoMC1 (- 3.)))))) (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (* skoMC1 (- 1.))))) (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (/ 1. 12.)))) (* skoSC1 (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (/ (- 1.) 360.)))) (* skoSC1 (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (/ 1. 20160.)))) (* skoSC1 (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (/ (- 1.) 1814400.)))) (* skoSC1 (* skoSC1 (* skoMC1 (* skoMC1 (* skoMC1 (/ 1. 239500800.))))))))))))))))))))))) (* skoMC1 (* skoMC1 (* skoMC1 (+ (- 2.) (* skoMC1 (- 5.))))))) (and (<= (* skoSC1 (* skoMC1 (* skoMC1 (* skoMC1 (- 1.))))) (* skoMC1 (* skoMC1 skoMC1))) (and (> (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (+ (- 1.) (* skoMC1 3.))))) (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (+ (- 2.) (* skoMC1 (- 3.)))))) (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (* skoMC1 (- 1.))))) (* skoSC1 (* skoMC1 (* skoMC1 (* skoMC1 (/ 1. 12.))))))))))) (* skoMC1 (* skoMC1 (* skoMC1 (+ (- 2.) (* skoMC1 (- 5.))))))) (and (> (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (+ (- 1.) (* skoMC1 3.))))) (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (+ (- 2.) (* skoMC1 (- 3.)))))) (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (+ (/ 1. 6.) (* skoMC1 (- 1.)))))) (* skoSC1 (* skoMC1 (* skoMC1 (* skoMC1 (/ 1. 4.))))))))))) (* skoMC1 (* skoMC1 (* skoMC1 (+ (- 2.) (* skoMC1 (- 5.))))))) (and (> (* skoSC1 (* skoMC1 (* skoMC1 skoMC1))) (* skoMC1 (* skoMC1 (* skoMC1 (- 1.))))) (and (<= (* skoMC1 (* skoMC1 (* skoMC1 (- 2.)))) 0.) (and (> (* skoMC1 (* skoMC1 (* skoMC1 2.))) 0.) (and (> (* skoSC1 (+ (* skoMC1 (+ (- 1.) (* skoMC1 3.))) (* skoSC1 (+ (* skoMC1 (+ (- 2.) (* skoMC1 (- 3.)))) (* skoSC1 (+ (* skoMC1 (+ (/ 1. 6.) (* skoMC1 (- 1.)))) (* skoSC1 (* skoMC1 (/ 1. 4.))))))))) (* skoMC1 (+ (- 2.) (* skoMC1 (- 5.))))) (and (> (* skoSC1 (+ (* skoMC1 (+ (- 1.) (* skoMC1 3.))) (* skoSC1 (+ (* skoMC1 (+ (- 2.) (* skoMC1 (- 3.)))) (* skoSC1 (+ (* skoMC1 (* skoMC1 (- 1.))) (* skoSC1 (* skoMC1 (/ 1. 12.))))))))) (* skoMC1 (+ (- 2.) (* skoMC1 (- 5.))))) (and (<= (* skoSC1 (+ (* skoMC1 (+ 1. (* skoMC1 (- 3.)))) (* skoSC1 (+ (* skoMC1 (+ 2. (* skoMC1 3.))) (* skoSC1 (+ (* skoMC1 (+ (/ (- 1.) 6.) skoMC1)) (* skoSC1 (* skoMC1 (/ (- 1.) 4.))))))))) (* skoMC1 (+ 2. (* skoMC1 5.)))) (and (<= (* skoSC1 (+ (* skoMC1 (+ 1. (* skoMC1 (- 3.)))) (* skoSC1 (+ (* skoMC1 (+ 2. (* skoMC1 3.))) (* skoSC1 (+ (* skoMC1 skoMC1) (* skoSC1 (* skoMC1 (/ (- 1.) 12.))))))))) (* skoMC1 (+ 2. (* skoMC1 5.)))) (and (<= (* skoSC1 (* skoMC1 (- 1.))) skoMC1) (and (> (* skoSC1 skoMC1) (* skoMC1 (- 1.))) (and (<= 0. skoMC1) (and (> skoMC1 0.) (and (<= 0. skoSC1) (and (<= 2. skoMC1) (and (<= skoSC1 (/ 5. 4.)) (and (> (* skoSC1 (* skoMC1 (* skoMC1 (* skoMC1 2.)))) (* skoMC1 (* skoMC1 (* skoMC1 (- 2.))))) (and (<= (* skoSC1 (* skoMC1 (* skoMC1 (* skoMC1 (- 2.))))) (* skoMC1 (* skoMC1 (* skoMC1 2.)))) (<= (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (+ (- 2.) (* skoMC1 (- 12.)))))) (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (+ 1. (* skoMC1 (- 6.)))))) (* skoSC1 (+ (* skoMC1 (* skoMC1 skoMC1)) (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (/ (- 1.) 12.)))) (* skoSC1 (* skoMC1 (* skoMC1 (* skoMC1 (/ (- 1.) 12.))))))))))))) (* skoMC1 (* skoMC1 (* skoMC1 (+ 2. (* skoMC1 6.)))))))))))))))))))))))))))))

% In GRF format:
(sequent " MetiTarski formula " (antecedent (<= skoSC1 0.) (> (* skoMC1 (* skoMC1 (* skoMC1 2.))) 0.) (> (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (+ (- 1.) (* skoMC1 3.))))) (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (+ (- 2.) (* skoMC1 (- 3.)))))) (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (* skoMC1 (- 1.))))) (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (/ 1. 12.)))) (* skoSC1 (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (/ (- 1.) 360.)))) (* skoSC1 (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (/ 1. 20160.)))) (* skoSC1 (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (/ (- 1.) 1814400.)))) (* skoSC1 (* skoSC1 (* skoMC1 (* skoMC1 (* skoMC1 (/ 1. 239500800.))))))))))))))))))))))) (* skoMC1 (* skoMC1 (* skoMC1 (+ (- 2.) (* skoMC1 (- 5.))))))) (<= (* skoSC1 (* skoMC1 (* skoMC1 (* skoMC1 (- 1.))))) (* skoMC1 (* skoMC1 skoMC1))) (> (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (+ (- 1.) (* skoMC1 3.))))) (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (+ (- 2.) (* skoMC1 (- 3.)))))) (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (* skoMC1 (- 1.))))) (* skoSC1 (* skoMC1 (* skoMC1 (* skoMC1 (/ 1. 12.))))))))))) (* skoMC1 (* skoMC1 (* skoMC1 (+ (- 2.) (* skoMC1 (- 5.))))))) (> (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (+ (- 1.) (* skoMC1 3.))))) (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (+ (- 2.) (* skoMC1 (- 3.)))))) (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (+ (/ 1. 6.) (* skoMC1 (- 1.)))))) (* skoSC1 (* skoMC1 (* skoMC1 (* skoMC1 (/ 1. 4.))))))))))) (* skoMC1 (* skoMC1 (* skoMC1 (+ (- 2.) (* skoMC1 (- 5.))))))) (> (* skoSC1 (* skoMC1 (* skoMC1 skoMC1))) (* skoMC1 (* skoMC1 (* skoMC1 (- 1.))))) (<= (* skoMC1 (* skoMC1 (* skoMC1 (- 2.)))) 0.) (> (* skoMC1 (* skoMC1 (* skoMC1 2.))) 0.) (> (* skoSC1 (+ (* skoMC1 (+ (- 1.) (* skoMC1 3.))) (* skoSC1 (+ (* skoMC1 (+ (- 2.) (* skoMC1 (- 3.)))) (* skoSC1 (+ (* skoMC1 (+ (/ 1. 6.) (* skoMC1 (- 1.)))) (* skoSC1 (* skoMC1 (/ 1. 4.))))))))) (* skoMC1 (+ (- 2.) (* skoMC1 (- 5.))))) (> (* skoSC1 (+ (* skoMC1 (+ (- 1.) (* skoMC1 3.))) (* skoSC1 (+ (* skoMC1 (+ (- 2.) (* skoMC1 (- 3.)))) (* skoSC1 (+ (* skoMC1 (* skoMC1 (- 1.))) (* skoSC1 (* skoMC1 (/ 1. 12.))))))))) (* skoMC1 (+ (- 2.) (* skoMC1 (- 5.))))) (<= (* skoSC1 (+ (* skoMC1 (+ 1. (* skoMC1 (- 3.)))) (* skoSC1 (+ (* skoMC1 (+ 2. (* skoMC1 3.))) (* skoSC1 (+ (* skoMC1 (+ (/ (- 1.) 6.) skoMC1)) (* skoSC1 (* skoMC1 (/ (- 1.) 4.))))))))) (* skoMC1 (+ 2. (* skoMC1 5.)))) (<= (* skoSC1 (+ (* skoMC1 (+ 1. (* skoMC1 (- 3.)))) (* skoSC1 (+ (* skoMC1 (+ 2. (* skoMC1 3.))) (* skoSC1 (+ (* skoMC1 skoMC1) (* skoSC1 (* skoMC1 (/ (- 1.) 12.))))))))) (* skoMC1 (+ 2. (* skoMC1 5.)))) (<= (* skoSC1 (* skoMC1 (- 1.))) skoMC1) (> (* skoSC1 skoMC1) (* skoMC1 (- 1.))) (<= 0. skoMC1) (> skoMC1 0.) (<= 0. skoSC1) (<= 2. skoMC1) (<= skoSC1 (/ 5. 4.)) (> (* skoSC1 (* skoMC1 (* skoMC1 (* skoMC1 2.)))) (* skoMC1 (* skoMC1 (* skoMC1 (- 2.))))) (<= (* skoSC1 (* skoMC1 (* skoMC1 (* skoMC1 (- 2.))))) (* skoMC1 (* skoMC1 (* skoMC1 2.))))) (succedent (> (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (+ (- 2.) (* skoMC1 (- 12.)))))) (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (+ 1. (* skoMC1 (- 6.)))))) (* skoSC1 (+ (* skoMC1 (* skoMC1 skoMC1)) (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (/ (- 1.) 12.)))) (* skoSC1 (* skoMC1 (* skoMC1 (* skoMC1 (/ (- 1.) 12.))))))))))))) (* skoMC1 (* skoMC1 (* skoMC1 (+ 2. (* skoMC1 6.))))))))
-----[end problem]-----

-----[begin problem]-----
% In Mathematica format:
Timing[Resolve[Exists[{skoSC1,skoMC1}, And[skoMC1*skoMC1*skoMC1*2<=0,skoSC1*(skoMC1*skoMC1*skoMC1*(-1+skoMC1*3)+skoSC1*(skoMC1*skoMC1*skoMC1*(-2+skoMC1*-3)+skoSC1*(skoMC1*skoMC1*skoMC1*skoMC1*-1+skoSC1*(skoMC1*skoMC1*skoMC1*(1/12)+skoSC1*skoSC1*(skoMC1*skoMC1*skoMC1*(-1/360)+skoSC1*skoSC1*(skoMC1*skoMC1*skoMC1*(1/20160)+skoSC1*skoSC1*(skoMC1*skoMC1*skoMC1*(-1/1814400)+skoSC1*skoSC1*skoMC1*skoMC1*skoMC1*(1/239500800))))))))<=skoMC1*skoMC1*skoMC1*(-2+skoMC1*-5),skoSC1<=0,skoSC1*skoMC1*skoMC1*skoMC1*-1<=skoMC1*skoMC1*skoMC1,skoSC1*(skoMC1*skoMC1*skoMC1*(-1+skoMC1*3)+skoSC1*(skoMC1*skoMC1*skoMC1*(-2+skoMC1*-3)+skoSC1*(skoMC1*skoMC1*skoMC1*skoMC1*-1+skoSC1*skoMC1*skoMC1*skoMC1*(1/12))))>skoMC1*skoMC1*skoMC1*(-2+skoMC1*-5),skoSC1*(skoMC1*skoMC1*skoMC1*(-1+skoMC1*3)+skoSC1*(skoMC1*skoMC1*skoMC1*(-2+skoMC1*-3)+skoSC1*(skoMC1*skoMC1*skoMC1*((1/6)+skoMC1*-1)+skoSC1*skoMC1*skoMC1*skoMC1*(1/4))))>skoMC1*skoMC1*skoMC1*(-2+skoMC1*-5),skoSC1*skoMC1*skoMC1*skoMC1>skoMC1*skoMC1*skoMC1*-1,skoMC1*skoMC1*skoMC1*-2<=0,skoMC1*skoMC1*skoMC1*2>0,skoSC1*(skoMC1*(-1+skoMC1*3)+skoSC1*(skoMC1*(-2+skoMC1*-3)+skoSC1*(skoMC1*((1/6)+skoMC1*-1)+skoSC1*skoMC1*(1/4))))>skoMC1*(-2+skoMC1*-5),skoSC1*(skoMC1*(-1+skoMC1*3)+skoSC1*(skoMC1*(-2+skoMC1*-3)+skoSC1*(skoMC1*skoMC1*-1+skoSC1*skoMC1*(1/12))))>skoMC1*(-2+skoMC1*-5),skoSC1*(skoMC1*(1+skoMC1*-3)+skoSC1*(skoMC1*(2+skoMC1*3)+skoSC1*(skoMC1*((-1/6)+skoMC1)+skoSC1*skoMC1*(-1/4))))<=skoMC1*(2+skoMC1*5),skoSC1*(skoMC1*(1+skoMC1*-3)+skoSC1*(skoMC1*(2+skoMC1*3)+skoSC1*(skoMC1*skoMC1+skoSC1*skoMC1*(-1/12))))<=skoMC1*(2+skoMC1*5),skoSC1*skoMC1*-1<=skoMC1,skoSC1*skoMC1>skoMC1*-1,0<=skoMC1,skoMC1>0,0<=skoSC1,2<=skoMC1,skoSC1<=(5/4),skoSC1*skoMC1*skoMC1*skoMC1*2>skoMC1*skoMC1*skoMC1*-2,skoSC1*skoMC1*skoMC1*skoMC1*-2<=skoMC1*skoMC1*skoMC1*2,skoSC1*(skoMC1*skoMC1*skoMC1*(-2+skoMC1*-12)+skoSC1*(skoMC1*skoMC1*skoMC1*(1+skoMC1*-6)+skoSC1*(skoMC1*skoMC1*skoMC1+skoSC1*(skoMC1*skoMC1*skoMC1*(-1/12)+skoSC1*skoMC1*skoMC1*skoMC1*(-1/12)))))<=skoMC1*skoMC1*skoMC1*(2+skoMC1*6)]], Reals]]

% In QepcadB format:
(E skoSC1) (E skoMC1) [[(skoMC1 skoMC1 skoMC1 (2))<=0]/\[[(skoSC1 ((skoMC1 skoMC1 skoMC1 (-1+(skoMC1 (3))))+(skoSC1 ((skoMC1 skoMC1 skoMC1 (-2+(skoMC1 (-3))))+(skoSC1 ((skoMC1 skoMC1 skoMC1 skoMC1 (-1))+(skoSC1 ((skoMC1 skoMC1 skoMC1 (1/12))+(skoSC1 skoSC1 ((skoMC1 skoMC1 skoMC1 (-1/360))+(skoSC1 skoSC1 ((skoMC1 skoMC1 skoMC1 (1/20160))+(skoSC1 skoSC1 ((skoMC1 skoMC1 skoMC1 (-1/1814400))+(skoSC1 skoSC1 skoMC1 skoMC1 skoMC1 (1/239500800))))))))))))))))<=(skoMC1 skoMC1 skoMC1 (-2+(skoMC1 (-5))))]/\[[skoSC1<=0]/\[[(skoSC1 skoMC1 skoMC1 skoMC1 (-1))<=(skoMC1 skoMC1 skoMC1)]/\[[(skoMC1 skoMC1 skoMC1 (-2+(skoMC1 (-5))))<(skoSC1 ((skoMC1 skoMC1 skoMC1 (-1+(skoMC1 (3))))+(skoSC1 ((skoMC1 skoMC1 skoMC1 (-2+(skoMC1 (-3))))+(skoSC1 ((skoMC1 skoMC1 skoMC1 skoMC1 (-1))+(skoSC1 skoMC1 skoMC1 skoMC1 (1/12))))))))]/\[[(skoMC1 skoMC1 skoMC1 (-2+(skoMC1 (-5))))<(skoSC1 ((skoMC1 skoMC1 skoMC1 (-1+(skoMC1 (3))))+(skoSC1 ((skoMC1 skoMC1 skoMC1 (-2+(skoMC1 (-3))))+(skoSC1 ((skoMC1 skoMC1 skoMC1 (1/6+(skoMC1 (-1))))+(skoSC1 skoMC1 skoMC1 skoMC1 (1/4))))))))]/\[[(skoMC1 skoMC1 skoMC1 (-1))<(skoSC1 skoMC1 skoMC1 skoMC1)]/\[[(skoMC1 skoMC1 skoMC1 (-2))<=0]/\[[0<(skoMC1 skoMC1 skoMC1 (2))]/\[[(skoMC1 (-2+(skoMC1 (-5))))<(skoSC1 ((skoMC1 (-1+(skoMC1 (3))))+(skoSC1 ((skoMC1 (-2+(skoMC1 (-3))))+(skoSC1 ((skoMC1 (1/6+(skoMC1 (-1))))+(skoSC1 skoMC1 (1/4))))))))]/\[[(skoMC1 (-2+(skoMC1 (-5))))<(skoSC1 ((skoMC1 (-1+(skoMC1 (3))))+(skoSC1 ((skoMC1 (-2+(skoMC1 (-3))))+(skoSC1 ((skoMC1 skoMC1 (-1))+(skoSC1 skoMC1 (1/12))))))))]/\[[(skoSC1 ((skoMC1 (1+(skoMC1 (-3))))+(skoSC1 ((skoMC1 (2+(skoMC1 (3))))+(skoSC1 ((skoMC1 (-1/6+skoMC1))+(skoSC1 skoMC1 (-1/4))))))))<=(skoMC1 (2+(skoMC1 (5))))]/\[[(skoSC1 ((skoMC1 (1+(skoMC1 (-3))))+(skoSC1 ((skoMC1 (2+(skoMC1 (3))))+(skoSC1 ((skoMC1 skoMC1)+(skoSC1 skoMC1 (-1/12))))))))<=(skoMC1 (2+(skoMC1 (5))))]/\[[(skoSC1 skoMC1 (-1))<=skoMC1]/\[[(skoMC1 (-1))<(skoSC1 skoMC1)]/\[[0<=skoMC1]/\[[0<skoMC1]/\[[0<=skoSC1]/\[[2<=skoMC1]/\[[skoSC1<=5/4]/\[[(skoMC1 skoMC1 skoMC1 (-2))<(skoSC1 skoMC1 skoMC1 skoMC1 (2))]/\[[(skoSC1 skoMC1 skoMC1 skoMC1 (-2))<=(skoMC1 skoMC1 skoMC1 (2))]/\[(skoSC1 ((skoMC1 skoMC1 skoMC1 (-2+(skoMC1 (-12))))+(skoSC1 ((skoMC1 skoMC1 skoMC1 (1+(skoMC1 (-6))))+(skoSC1 ((skoMC1 skoMC1 skoMC1)+(skoSC1 ((skoMC1 skoMC1 skoMC1 (-1/12))+(skoSC1 skoMC1 skoMC1 skoMC1 (-1/12))))))))))<=(skoMC1 skoMC1 skoMC1 (2+(skoMC1 (6))))]]]]]]]]]]]]]]]]]]]]]]].

% In SMTLib2 format:
(declare-fun skoSC1 () Real) (declare-fun skoMC1 () Real) (assert (and (<= (* skoMC1 (* skoMC1 (* skoMC1 2.))) 0.) (and (<= (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (+ (- 1.) (* skoMC1 3.))))) (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (+ (- 2.) (* skoMC1 (- 3.)))))) (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (* skoMC1 (- 1.))))) (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (/ 1. 12.)))) (* skoSC1 (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (/ (- 1.) 360.)))) (* skoSC1 (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (/ 1. 20160.)))) (* skoSC1 (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (/ (- 1.) 1814400.)))) (* skoSC1 (* skoSC1 (* skoMC1 (* skoMC1 (* skoMC1 (/ 1. 239500800.))))))))))))))))))))))) (* skoMC1 (* skoMC1 (* skoMC1 (+ (- 2.) (* skoMC1 (- 5.))))))) (and (<= skoSC1 0.) (and (<= (* skoSC1 (* skoMC1 (* skoMC1 (* skoMC1 (- 1.))))) (* skoMC1 (* skoMC1 skoMC1))) (and (> (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (+ (- 1.) (* skoMC1 3.))))) (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (+ (- 2.) (* skoMC1 (- 3.)))))) (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (* skoMC1 (- 1.))))) (* skoSC1 (* skoMC1 (* skoMC1 (* skoMC1 (/ 1. 12.))))))))))) (* skoMC1 (* skoMC1 (* skoMC1 (+ (- 2.) (* skoMC1 (- 5.))))))) (and (> (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (+ (- 1.) (* skoMC1 3.))))) (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (+ (- 2.) (* skoMC1 (- 3.)))))) (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (+ (/ 1. 6.) (* skoMC1 (- 1.)))))) (* skoSC1 (* skoMC1 (* skoMC1 (* skoMC1 (/ 1. 4.))))))))))) (* skoMC1 (* skoMC1 (* skoMC1 (+ (- 2.) (* skoMC1 (- 5.))))))) (and (> (* skoSC1 (* skoMC1 (* skoMC1 skoMC1))) (* skoMC1 (* skoMC1 (* skoMC1 (- 1.))))) (and (<= (* skoMC1 (* skoMC1 (* skoMC1 (- 2.)))) 0.) (and (> (* skoMC1 (* skoMC1 (* skoMC1 2.))) 0.) (and (> (* skoSC1 (+ (* skoMC1 (+ (- 1.) (* skoMC1 3.))) (* skoSC1 (+ (* skoMC1 (+ (- 2.) (* skoMC1 (- 3.)))) (* skoSC1 (+ (* skoMC1 (+ (/ 1. 6.) (* skoMC1 (- 1.)))) (* skoSC1 (* skoMC1 (/ 1. 4.))))))))) (* skoMC1 (+ (- 2.) (* skoMC1 (- 5.))))) (and (> (* skoSC1 (+ (* skoMC1 (+ (- 1.) (* skoMC1 3.))) (* skoSC1 (+ (* skoMC1 (+ (- 2.) (* skoMC1 (- 3.)))) (* skoSC1 (+ (* skoMC1 (* skoMC1 (- 1.))) (* skoSC1 (* skoMC1 (/ 1. 12.))))))))) (* skoMC1 (+ (- 2.) (* skoMC1 (- 5.))))) (and (<= (* skoSC1 (+ (* skoMC1 (+ 1. (* skoMC1 (- 3.)))) (* skoSC1 (+ (* skoMC1 (+ 2. (* skoMC1 3.))) (* skoSC1 (+ (* skoMC1 (+ (/ (- 1.) 6.) skoMC1)) (* skoSC1 (* skoMC1 (/ (- 1.) 4.))))))))) (* skoMC1 (+ 2. (* skoMC1 5.)))) (and (<= (* skoSC1 (+ (* skoMC1 (+ 1. (* skoMC1 (- 3.)))) (* skoSC1 (+ (* skoMC1 (+ 2. (* skoMC1 3.))) (* skoSC1 (+ (* skoMC1 skoMC1) (* skoSC1 (* skoMC1 (/ (- 1.) 12.))))))))) (* skoMC1 (+ 2. (* skoMC1 5.)))) (and (<= (* skoSC1 (* skoMC1 (- 1.))) skoMC1) (and (> (* skoSC1 skoMC1) (* skoMC1 (- 1.))) (and (<= 0. skoMC1) (and (> skoMC1 0.) (and (<= 0. skoSC1) (and (<= 2. skoMC1) (and (<= skoSC1 (/ 5. 4.)) (and (> (* skoSC1 (* skoMC1 (* skoMC1 (* skoMC1 2.)))) (* skoMC1 (* skoMC1 (* skoMC1 (- 2.))))) (and (<= (* skoSC1 (* skoMC1 (* skoMC1 (* skoMC1 (- 2.))))) (* skoMC1 (* skoMC1 (* skoMC1 2.)))) (<= (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (+ (- 2.) (* skoMC1 (- 12.)))))) (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (+ 1. (* skoMC1 (- 6.)))))) (* skoSC1 (+ (* skoMC1 (* skoMC1 skoMC1)) (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (/ (- 1.) 12.)))) (* skoSC1 (* skoMC1 (* skoMC1 (* skoMC1 (/ (- 1.) 12.))))))))))))) (* skoMC1 (* skoMC1 (* skoMC1 (+ 2. (* skoMC1 6.)))))))))))))))))))))))))))))

% In GRF format:
(sequent " MetiTarski formula " (antecedent (<= (* skoMC1 (* skoMC1 (* skoMC1 2.))) 0.) (<= (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (+ (- 1.) (* skoMC1 3.))))) (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (+ (- 2.) (* skoMC1 (- 3.)))))) (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (* skoMC1 (- 1.))))) (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (/ 1. 12.)))) (* skoSC1 (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (/ (- 1.) 360.)))) (* skoSC1 (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (/ 1. 20160.)))) (* skoSC1 (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (/ (- 1.) 1814400.)))) (* skoSC1 (* skoSC1 (* skoMC1 (* skoMC1 (* skoMC1 (/ 1. 239500800.))))))))))))))))))))))) (* skoMC1 (* skoMC1 (* skoMC1 (+ (- 2.) (* skoMC1 (- 5.))))))) (<= skoSC1 0.) (<= (* skoSC1 (* skoMC1 (* skoMC1 (* skoMC1 (- 1.))))) (* skoMC1 (* skoMC1 skoMC1))) (> (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (+ (- 1.) (* skoMC1 3.))))) (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (+ (- 2.) (* skoMC1 (- 3.)))))) (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (* skoMC1 (- 1.))))) (* skoSC1 (* skoMC1 (* skoMC1 (* skoMC1 (/ 1. 12.))))))))))) (* skoMC1 (* skoMC1 (* skoMC1 (+ (- 2.) (* skoMC1 (- 5.))))))) (> (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (+ (- 1.) (* skoMC1 3.))))) (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (+ (- 2.) (* skoMC1 (- 3.)))))) (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (+ (/ 1. 6.) (* skoMC1 (- 1.)))))) (* skoSC1 (* skoMC1 (* skoMC1 (* skoMC1 (/ 1. 4.))))))))))) (* skoMC1 (* skoMC1 (* skoMC1 (+ (- 2.) (* skoMC1 (- 5.))))))) (> (* skoSC1 (* skoMC1 (* skoMC1 skoMC1))) (* skoMC1 (* skoMC1 (* skoMC1 (- 1.))))) (<= (* skoMC1 (* skoMC1 (* skoMC1 (- 2.)))) 0.) (> (* skoMC1 (* skoMC1 (* skoMC1 2.))) 0.) (> (* skoSC1 (+ (* skoMC1 (+ (- 1.) (* skoMC1 3.))) (* skoSC1 (+ (* skoMC1 (+ (- 2.) (* skoMC1 (- 3.)))) (* skoSC1 (+ (* skoMC1 (+ (/ 1. 6.) (* skoMC1 (- 1.)))) (* skoSC1 (* skoMC1 (/ 1. 4.))))))))) (* skoMC1 (+ (- 2.) (* skoMC1 (- 5.))))) (> (* skoSC1 (+ (* skoMC1 (+ (- 1.) (* skoMC1 3.))) (* skoSC1 (+ (* skoMC1 (+ (- 2.) (* skoMC1 (- 3.)))) (* skoSC1 (+ (* skoMC1 (* skoMC1 (- 1.))) (* skoSC1 (* skoMC1 (/ 1. 12.))))))))) (* skoMC1 (+ (- 2.) (* skoMC1 (- 5.))))) (<= (* skoSC1 (+ (* skoMC1 (+ 1. (* skoMC1 (- 3.)))) (* skoSC1 (+ (* skoMC1 (+ 2. (* skoMC1 3.))) (* skoSC1 (+ (* skoMC1 (+ (/ (- 1.) 6.) skoMC1)) (* skoSC1 (* skoMC1 (/ (- 1.) 4.))))))))) (* skoMC1 (+ 2. (* skoMC1 5.)))) (<= (* skoSC1 (+ (* skoMC1 (+ 1. (* skoMC1 (- 3.)))) (* skoSC1 (+ (* skoMC1 (+ 2. (* skoMC1 3.))) (* skoSC1 (+ (* skoMC1 skoMC1) (* skoSC1 (* skoMC1 (/ (- 1.) 12.))))))))) (* skoMC1 (+ 2. (* skoMC1 5.)))) (<= (* skoSC1 (* skoMC1 (- 1.))) skoMC1) (> (* skoSC1 skoMC1) (* skoMC1 (- 1.))) (<= 0. skoMC1) (> skoMC1 0.) (<= 0. skoSC1) (<= 2. skoMC1) (<= skoSC1 (/ 5. 4.)) (> (* skoSC1 (* skoMC1 (* skoMC1 (* skoMC1 2.)))) (* skoMC1 (* skoMC1 (* skoMC1 (- 2.))))) (<= (* skoSC1 (* skoMC1 (* skoMC1 (* skoMC1 (- 2.))))) (* skoMC1 (* skoMC1 (* skoMC1 2.))))) (succedent (> (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (+ (- 2.) (* skoMC1 (- 12.)))))) (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (+ 1. (* skoMC1 (- 6.)))))) (* skoSC1 (+ (* skoMC1 (* skoMC1 skoMC1)) (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (/ (- 1.) 12.)))) (* skoSC1 (* skoMC1 (* skoMC1 (* skoMC1 (/ (- 1.) 12.))))))))))))) (* skoMC1 (* skoMC1 (* skoMC1 (+ 2. (* skoMC1 6.))))))))
-----[end problem]-----

-----[begin problem]-----
% In Mathematica format:
Timing[Resolve[Exists[{skoSC1,skoMC1}, And[skoSC1*(skoMC1*skoMC1*skoMC1*(-1+skoMC1*3)+skoSC1*(skoMC1*skoMC1*skoMC1*(-2+skoMC1*-3)+skoSC1*(skoMC1*skoMC1*skoMC1*skoMC1*-1+skoSC1*(skoMC1*skoMC1*skoMC1*(1/12)+skoSC1*skoSC1*(skoMC1*skoMC1*skoMC1*(-1/360)+skoSC1*skoSC1*(skoMC1*skoMC1*skoMC1*(1/20160)+skoSC1*skoSC1*(skoMC1*skoMC1*skoMC1*(-1/1814400)+skoSC1*skoSC1*skoMC1*skoMC1*skoMC1*(1/239500800))))))))<=skoMC1*skoMC1*skoMC1*(-2+skoMC1*-5),skoSC1>0,skoSC1*skoMC1*skoMC1*skoMC1*-1<=skoMC1*skoMC1*skoMC1,skoSC1*(skoMC1*skoMC1*skoMC1*(-1+skoMC1*3)+skoSC1*(skoMC1*skoMC1*skoMC1*(-2+skoMC1*-3)+skoSC1*(skoMC1*skoMC1*skoMC1*skoMC1*-1+skoSC1*skoMC1*skoMC1*skoMC1*(1/12))))>skoMC1*skoMC1*skoMC1*(-2+skoMC1*-5),skoSC1*(skoMC1*skoMC1*skoMC1*(-1+skoMC1*3)+skoSC1*(skoMC1*skoMC1*skoMC1*(-2+skoMC1*-3)+skoSC1*(skoMC1*skoMC1*skoMC1*((1/6)+skoMC1*-1)+skoSC1*skoMC1*skoMC1*skoMC1*(1/4))))>skoMC1*skoMC1*skoMC1*(-2+skoMC1*-5),skoSC1*skoMC1*skoMC1*skoMC1>skoMC1*skoMC1*skoMC1*-1,skoMC1*skoMC1*skoMC1*-2<=0,skoMC1*skoMC1*skoMC1*2>0,skoSC1*(skoMC1*(-1+skoMC1*3)+skoSC1*(skoMC1*(-2+skoMC1*-3)+skoSC1*(skoMC1*((1/6)+skoMC1*-1)+skoSC1*skoMC1*(1/4))))>skoMC1*(-2+skoMC1*-5),skoSC1*(skoMC1*(-1+skoMC1*3)+skoSC1*(skoMC1*(-2+skoMC1*-3)+skoSC1*(skoMC1*skoMC1*-1+skoSC1*skoMC1*(1/12))))>skoMC1*(-2+skoMC1*-5),skoSC1*(skoMC1*(1+skoMC1*-3)+skoSC1*(skoMC1*(2+skoMC1*3)+skoSC1*(skoMC1*((-1/6)+skoMC1)+skoSC1*skoMC1*(-1/4))))<=skoMC1*(2+skoMC1*5),skoSC1*(skoMC1*(1+skoMC1*-3)+skoSC1*(skoMC1*(2+skoMC1*3)+skoSC1*(skoMC1*skoMC1+skoSC1*skoMC1*(-1/12))))<=skoMC1*(2+skoMC1*5),skoSC1*skoMC1*-1<=skoMC1,skoSC1*skoMC1>skoMC1*-1,0<=skoMC1,skoMC1>0,0<=skoSC1,2<=skoMC1,skoSC1<=(5/4),skoSC1*skoMC1*skoMC1*skoMC1*2>skoMC1*skoMC1*skoMC1*-2,skoSC1*skoMC1*skoMC1*skoMC1*-2<=skoMC1*skoMC1*skoMC1*2,skoSC1*(skoMC1*skoMC1*skoMC1*(-2+skoMC1*-12)+skoSC1*(skoMC1*skoMC1*skoMC1*(1+skoMC1*-6)+skoSC1*(skoMC1*skoMC1*skoMC1+skoSC1*(skoMC1*skoMC1*skoMC1*(-1/12)+skoSC1*skoMC1*skoMC1*skoMC1*(-1/12)))))<=skoMC1*skoMC1*skoMC1*(2+skoMC1*6)]], Reals]]

% In QepcadB format:
(E skoSC1) (E skoMC1) [[(skoSC1 ((skoMC1 skoMC1 skoMC1 (-1+(skoMC1 (3))))+(skoSC1 ((skoMC1 skoMC1 skoMC1 (-2+(skoMC1 (-3))))+(skoSC1 ((skoMC1 skoMC1 skoMC1 skoMC1 (-1))+(skoSC1 ((skoMC1 skoMC1 skoMC1 (1/12))+(skoSC1 skoSC1 ((skoMC1 skoMC1 skoMC1 (-1/360))+(skoSC1 skoSC1 ((skoMC1 skoMC1 skoMC1 (1/20160))+(skoSC1 skoSC1 ((skoMC1 skoMC1 skoMC1 (-1/1814400))+(skoSC1 skoSC1 skoMC1 skoMC1 skoMC1 (1/239500800))))))))))))))))<=(skoMC1 skoMC1 skoMC1 (-2+(skoMC1 (-5))))]/\[[0<skoSC1]/\[[(skoSC1 skoMC1 skoMC1 skoMC1 (-1))<=(skoMC1 skoMC1 skoMC1)]/\[[(skoMC1 skoMC1 skoMC1 (-2+(skoMC1 (-5))))<(skoSC1 ((skoMC1 skoMC1 skoMC1 (-1+(skoMC1 (3))))+(skoSC1 ((skoMC1 skoMC1 skoMC1 (-2+(skoMC1 (-3))))+(skoSC1 ((skoMC1 skoMC1 skoMC1 skoMC1 (-1))+(skoSC1 skoMC1 skoMC1 skoMC1 (1/12))))))))]/\[[(skoMC1 skoMC1 skoMC1 (-2+(skoMC1 (-5))))<(skoSC1 ((skoMC1 skoMC1 skoMC1 (-1+(skoMC1 (3))))+(skoSC1 ((skoMC1 skoMC1 skoMC1 (-2+(skoMC1 (-3))))+(skoSC1 ((skoMC1 skoMC1 skoMC1 (1/6+(skoMC1 (-1))))+(skoSC1 skoMC1 skoMC1 skoMC1 (1/4))))))))]/\[[(skoMC1 skoMC1 skoMC1 (-1))<(skoSC1 skoMC1 skoMC1 skoMC1)]/\[[(skoMC1 skoMC1 skoMC1 (-2))<=0]/\[[0<(skoMC1 skoMC1 skoMC1 (2))]/\[[(skoMC1 (-2+(skoMC1 (-5))))<(skoSC1 ((skoMC1 (-1+(skoMC1 (3))))+(skoSC1 ((skoMC1 (-2+(skoMC1 (-3))))+(skoSC1 ((skoMC1 (1/6+(skoMC1 (-1))))+(skoSC1 skoMC1 (1/4))))))))]/\[[(skoMC1 (-2+(skoMC1 (-5))))<(skoSC1 ((skoMC1 (-1+(skoMC1 (3))))+(skoSC1 ((skoMC1 (-2+(skoMC1 (-3))))+(skoSC1 ((skoMC1 skoMC1 (-1))+(skoSC1 skoMC1 (1/12))))))))]/\[[(skoSC1 ((skoMC1 (1+(skoMC1 (-3))))+(skoSC1 ((skoMC1 (2+(skoMC1 (3))))+(skoSC1 ((skoMC1 (-1/6+skoMC1))+(skoSC1 skoMC1 (-1/4))))))))<=(skoMC1 (2+(skoMC1 (5))))]/\[[(skoSC1 ((skoMC1 (1+(skoMC1 (-3))))+(skoSC1 ((skoMC1 (2+(skoMC1 (3))))+(skoSC1 ((skoMC1 skoMC1)+(skoSC1 skoMC1 (-1/12))))))))<=(skoMC1 (2+(skoMC1 (5))))]/\[[(skoSC1 skoMC1 (-1))<=skoMC1]/\[[(skoMC1 (-1))<(skoSC1 skoMC1)]/\[[0<=skoMC1]/\[[0<skoMC1]/\[[0<=skoSC1]/\[[2<=skoMC1]/\[[skoSC1<=5/4]/\[[(skoMC1 skoMC1 skoMC1 (-2))<(skoSC1 skoMC1 skoMC1 skoMC1 (2))]/\[[(skoSC1 skoMC1 skoMC1 skoMC1 (-2))<=(skoMC1 skoMC1 skoMC1 (2))]/\[(skoSC1 ((skoMC1 skoMC1 skoMC1 (-2+(skoMC1 (-12))))+(skoSC1 ((skoMC1 skoMC1 skoMC1 (1+(skoMC1 (-6))))+(skoSC1 ((skoMC1 skoMC1 skoMC1)+(skoSC1 ((skoMC1 skoMC1 skoMC1 (-1/12))+(skoSC1 skoMC1 skoMC1 skoMC1 (-1/12))))))))))<=(skoMC1 skoMC1 skoMC1 (2+(skoMC1 (6))))]]]]]]]]]]]]]]]]]]]]]].

% In SMTLib2 format:
(declare-fun skoSC1 () Real) (declare-fun skoMC1 () Real) (assert (and (<= (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (+ (- 1.) (* skoMC1 3.))))) (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (+ (- 2.) (* skoMC1 (- 3.)))))) (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (* skoMC1 (- 1.))))) (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (/ 1. 12.)))) (* skoSC1 (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (/ (- 1.) 360.)))) (* skoSC1 (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (/ 1. 20160.)))) (* skoSC1 (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (/ (- 1.) 1814400.)))) (* skoSC1 (* skoSC1 (* skoMC1 (* skoMC1 (* skoMC1 (/ 1. 239500800.))))))))))))))))))))))) (* skoMC1 (* skoMC1 (* skoMC1 (+ (- 2.) (* skoMC1 (- 5.))))))) (and (> skoSC1 0.) (and (<= (* skoSC1 (* skoMC1 (* skoMC1 (* skoMC1 (- 1.))))) (* skoMC1 (* skoMC1 skoMC1))) (and (> (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (+ (- 1.) (* skoMC1 3.))))) (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (+ (- 2.) (* skoMC1 (- 3.)))))) (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (* skoMC1 (- 1.))))) (* skoSC1 (* skoMC1 (* skoMC1 (* skoMC1 (/ 1. 12.))))))))))) (* skoMC1 (* skoMC1 (* skoMC1 (+ (- 2.) (* skoMC1 (- 5.))))))) (and (> (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (+ (- 1.) (* skoMC1 3.))))) (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (+ (- 2.) (* skoMC1 (- 3.)))))) (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (+ (/ 1. 6.) (* skoMC1 (- 1.)))))) (* skoSC1 (* skoMC1 (* skoMC1 (* skoMC1 (/ 1. 4.))))))))))) (* skoMC1 (* skoMC1 (* skoMC1 (+ (- 2.) (* skoMC1 (- 5.))))))) (and (> (* skoSC1 (* skoMC1 (* skoMC1 skoMC1))) (* skoMC1 (* skoMC1 (* skoMC1 (- 1.))))) (and (<= (* skoMC1 (* skoMC1 (* skoMC1 (- 2.)))) 0.) (and (> (* skoMC1 (* skoMC1 (* skoMC1 2.))) 0.) (and (> (* skoSC1 (+ (* skoMC1 (+ (- 1.) (* skoMC1 3.))) (* skoSC1 (+ (* skoMC1 (+ (- 2.) (* skoMC1 (- 3.)))) (* skoSC1 (+ (* skoMC1 (+ (/ 1. 6.) (* skoMC1 (- 1.)))) (* skoSC1 (* skoMC1 (/ 1. 4.))))))))) (* skoMC1 (+ (- 2.) (* skoMC1 (- 5.))))) (and (> (* skoSC1 (+ (* skoMC1 (+ (- 1.) (* skoMC1 3.))) (* skoSC1 (+ (* skoMC1 (+ (- 2.) (* skoMC1 (- 3.)))) (* skoSC1 (+ (* skoMC1 (* skoMC1 (- 1.))) (* skoSC1 (* skoMC1 (/ 1. 12.))))))))) (* skoMC1 (+ (- 2.) (* skoMC1 (- 5.))))) (and (<= (* skoSC1 (+ (* skoMC1 (+ 1. (* skoMC1 (- 3.)))) (* skoSC1 (+ (* skoMC1 (+ 2. (* skoMC1 3.))) (* skoSC1 (+ (* skoMC1 (+ (/ (- 1.) 6.) skoMC1)) (* skoSC1 (* skoMC1 (/ (- 1.) 4.))))))))) (* skoMC1 (+ 2. (* skoMC1 5.)))) (and (<= (* skoSC1 (+ (* skoMC1 (+ 1. (* skoMC1 (- 3.)))) (* skoSC1 (+ (* skoMC1 (+ 2. (* skoMC1 3.))) (* skoSC1 (+ (* skoMC1 skoMC1) (* skoSC1 (* skoMC1 (/ (- 1.) 12.))))))))) (* skoMC1 (+ 2. (* skoMC1 5.)))) (and (<= (* skoSC1 (* skoMC1 (- 1.))) skoMC1) (and (> (* skoSC1 skoMC1) (* skoMC1 (- 1.))) (and (<= 0. skoMC1) (and (> skoMC1 0.) (and (<= 0. skoSC1) (and (<= 2. skoMC1) (and (<= skoSC1 (/ 5. 4.)) (and (> (* skoSC1 (* skoMC1 (* skoMC1 (* skoMC1 2.)))) (* skoMC1 (* skoMC1 (* skoMC1 (- 2.))))) (and (<= (* skoSC1 (* skoMC1 (* skoMC1 (* skoMC1 (- 2.))))) (* skoMC1 (* skoMC1 (* skoMC1 2.)))) (<= (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (+ (- 2.) (* skoMC1 (- 12.)))))) (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (+ 1. (* skoMC1 (- 6.)))))) (* skoSC1 (+ (* skoMC1 (* skoMC1 skoMC1)) (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (/ (- 1.) 12.)))) (* skoSC1 (* skoMC1 (* skoMC1 (* skoMC1 (/ (- 1.) 12.))))))))))))) (* skoMC1 (* skoMC1 (* skoMC1 (+ 2. (* skoMC1 6.))))))))))))))))))))))))))))

% In GRF format:
(sequent " MetiTarski formula " (antecedent (<= (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (+ (- 1.) (* skoMC1 3.))))) (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (+ (- 2.) (* skoMC1 (- 3.)))))) (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (* skoMC1 (- 1.))))) (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (/ 1. 12.)))) (* skoSC1 (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (/ (- 1.) 360.)))) (* skoSC1 (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (/ 1. 20160.)))) (* skoSC1 (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (/ (- 1.) 1814400.)))) (* skoSC1 (* skoSC1 (* skoMC1 (* skoMC1 (* skoMC1 (/ 1. 239500800.))))))))))))))))))))))) (* skoMC1 (* skoMC1 (* skoMC1 (+ (- 2.) (* skoMC1 (- 5.))))))) (> skoSC1 0.) (<= (* skoSC1 (* skoMC1 (* skoMC1 (* skoMC1 (- 1.))))) (* skoMC1 (* skoMC1 skoMC1))) (> (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (+ (- 1.) (* skoMC1 3.))))) (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (+ (- 2.) (* skoMC1 (- 3.)))))) (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (* skoMC1 (- 1.))))) (* skoSC1 (* skoMC1 (* skoMC1 (* skoMC1 (/ 1. 12.))))))))))) (* skoMC1 (* skoMC1 (* skoMC1 (+ (- 2.) (* skoMC1 (- 5.))))))) (> (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (+ (- 1.) (* skoMC1 3.))))) (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (+ (- 2.) (* skoMC1 (- 3.)))))) (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (+ (/ 1. 6.) (* skoMC1 (- 1.)))))) (* skoSC1 (* skoMC1 (* skoMC1 (* skoMC1 (/ 1. 4.))))))))))) (* skoMC1 (* skoMC1 (* skoMC1 (+ (- 2.) (* skoMC1 (- 5.))))))) (> (* skoSC1 (* skoMC1 (* skoMC1 skoMC1))) (* skoMC1 (* skoMC1 (* skoMC1 (- 1.))))) (<= (* skoMC1 (* skoMC1 (* skoMC1 (- 2.)))) 0.) (> (* skoMC1 (* skoMC1 (* skoMC1 2.))) 0.) (> (* skoSC1 (+ (* skoMC1 (+ (- 1.) (* skoMC1 3.))) (* skoSC1 (+ (* skoMC1 (+ (- 2.) (* skoMC1 (- 3.)))) (* skoSC1 (+ (* skoMC1 (+ (/ 1. 6.) (* skoMC1 (- 1.)))) (* skoSC1 (* skoMC1 (/ 1. 4.))))))))) (* skoMC1 (+ (- 2.) (* skoMC1 (- 5.))))) (> (* skoSC1 (+ (* skoMC1 (+ (- 1.) (* skoMC1 3.))) (* skoSC1 (+ (* skoMC1 (+ (- 2.) (* skoMC1 (- 3.)))) (* skoSC1 (+ (* skoMC1 (* skoMC1 (- 1.))) (* skoSC1 (* skoMC1 (/ 1. 12.))))))))) (* skoMC1 (+ (- 2.) (* skoMC1 (- 5.))))) (<= (* skoSC1 (+ (* skoMC1 (+ 1. (* skoMC1 (- 3.)))) (* skoSC1 (+ (* skoMC1 (+ 2. (* skoMC1 3.))) (* skoSC1 (+ (* skoMC1 (+ (/ (- 1.) 6.) skoMC1)) (* skoSC1 (* skoMC1 (/ (- 1.) 4.))))))))) (* skoMC1 (+ 2. (* skoMC1 5.)))) (<= (* skoSC1 (+ (* skoMC1 (+ 1. (* skoMC1 (- 3.)))) (* skoSC1 (+ (* skoMC1 (+ 2. (* skoMC1 3.))) (* skoSC1 (+ (* skoMC1 skoMC1) (* skoSC1 (* skoMC1 (/ (- 1.) 12.))))))))) (* skoMC1 (+ 2. (* skoMC1 5.)))) (<= (* skoSC1 (* skoMC1 (- 1.))) skoMC1) (> (* skoSC1 skoMC1) (* skoMC1 (- 1.))) (<= 0. skoMC1) (> skoMC1 0.) (<= 0. skoSC1) (<= 2. skoMC1) (<= skoSC1 (/ 5. 4.)) (> (* skoSC1 (* skoMC1 (* skoMC1 (* skoMC1 2.)))) (* skoMC1 (* skoMC1 (* skoMC1 (- 2.))))) (<= (* skoSC1 (* skoMC1 (* skoMC1 (* skoMC1 (- 2.))))) (* skoMC1 (* skoMC1 (* skoMC1 2.))))) (succedent (> (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (+ (- 2.) (* skoMC1 (- 12.)))))) (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (+ 1. (* skoMC1 (- 6.)))))) (* skoSC1 (+ (* skoMC1 (* skoMC1 skoMC1)) (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (/ (- 1.) 12.)))) (* skoSC1 (* skoMC1 (* skoMC1 (* skoMC1 (/ (- 1.) 12.))))))))))))) (* skoMC1 (* skoMC1 (* skoMC1 (+ 2. (* skoMC1 6.))))))))
-----[end problem]-----

-----[begin problem]-----
% In Mathematica format:
Timing[Resolve[Exists[{skoSC1,skoMC1}, And[skoMC1*skoMC1*skoMC1*-2<=0,skoSC1*skoMC1*skoMC1*skoMC1*-1<=skoMC1*skoMC1*skoMC1,skoSC1*(skoMC1*skoMC1*skoMC1*(-1+skoMC1*3)+skoSC1*(skoMC1*skoMC1*skoMC1*(-2+skoMC1*-3)+skoSC1*(skoMC1*skoMC1*skoMC1*skoMC1*-1+skoSC1*skoMC1*skoMC1*skoMC1*(1/12))))>skoMC1*skoMC1*skoMC1*(-2+skoMC1*-5),skoSC1*(skoMC1*skoMC1*skoMC1*(-1+skoMC1*3)+skoSC1*(skoMC1*skoMC1*skoMC1*(-2+skoMC1*-3)+skoSC1*(skoMC1*skoMC1*skoMC1*((1/6)+skoMC1*-1)+skoSC1*skoMC1*skoMC1*skoMC1*(1/4))))>skoMC1*skoMC1*skoMC1*(-2+skoMC1*-5),skoSC1*skoMC1*skoMC1*skoMC1>skoMC1*skoMC1*skoMC1*-1,skoMC1*skoMC1*skoMC1*-2<=0,skoMC1*skoMC1*skoMC1*2>0,skoSC1*(skoMC1*(-1+skoMC1*3)+skoSC1*(skoMC1*(-2+skoMC1*-3)+skoSC1*(skoMC1*((1/6)+skoMC1*-1)+skoSC1*skoMC1*(1/4))))>skoMC1*(-2+skoMC1*-5),skoSC1*(skoMC1*(-1+skoMC1*3)+skoSC1*(skoMC1*(-2+skoMC1*-3)+skoSC1*(skoMC1*skoMC1*-1+skoSC1*skoMC1*(1/12))))>skoMC1*(-2+skoMC1*-5),skoSC1*(skoMC1*(1+skoMC1*-3)+skoSC1*(skoMC1*(2+skoMC1*3)+skoSC1*(skoMC1*((-1/6)+skoMC1)+skoSC1*skoMC1*(-1/4))))<=skoMC1*(2+skoMC1*5),skoSC1*(skoMC1*(1+skoMC1*-3)+skoSC1*(skoMC1*(2+skoMC1*3)+skoSC1*(skoMC1*skoMC1+skoSC1*skoMC1*(-1/12))))<=skoMC1*(2+skoMC1*5),skoSC1*skoMC1*-1<=skoMC1,skoSC1*skoMC1>skoMC1*-1,0<=skoMC1,skoMC1>0,0<=skoSC1,2<=skoMC1,skoSC1<=(5/4),skoSC1*skoMC1*skoMC1*skoMC1*2>skoMC1*skoMC1*skoMC1*-2,skoSC1*skoMC1*skoMC1*skoMC1*-2<=skoMC1*skoMC1*skoMC1*2,skoSC1*(skoMC1*skoMC1*skoMC1*(-2+skoMC1*-12)+skoSC1*(skoMC1*skoMC1*skoMC1*(1+skoMC1*-6)+skoSC1*(skoMC1*skoMC1*skoMC1+skoSC1*(skoMC1*skoMC1*skoMC1*(-1/12)+skoSC1*skoMC1*skoMC1*skoMC1*(-1/12)))))<=skoMC1*skoMC1*skoMC1*(2+skoMC1*6)]], Reals]]

% In QepcadB format:
(E skoSC1) (E skoMC1) [[(skoMC1 skoMC1 skoMC1 (-2))<=0]/\[[(skoSC1 skoMC1 skoMC1 skoMC1 (-1))<=(skoMC1 skoMC1 skoMC1)]/\[[(skoMC1 skoMC1 skoMC1 (-2+(skoMC1 (-5))))<(skoSC1 ((skoMC1 skoMC1 skoMC1 (-1+(skoMC1 (3))))+(skoSC1 ((skoMC1 skoMC1 skoMC1 (-2+(skoMC1 (-3))))+(skoSC1 ((skoMC1 skoMC1 skoMC1 skoMC1 (-1))+(skoSC1 skoMC1 skoMC1 skoMC1 (1/12))))))))]/\[[(skoMC1 skoMC1 skoMC1 (-2+(skoMC1 (-5))))<(skoSC1 ((skoMC1 skoMC1 skoMC1 (-1+(skoMC1 (3))))+(skoSC1 ((skoMC1 skoMC1 skoMC1 (-2+(skoMC1 (-3))))+(skoSC1 ((skoMC1 skoMC1 skoMC1 (1/6+(skoMC1 (-1))))+(skoSC1 skoMC1 skoMC1 skoMC1 (1/4))))))))]/\[[(skoMC1 skoMC1 skoMC1 (-1))<(skoSC1 skoMC1 skoMC1 skoMC1)]/\[[(skoMC1 skoMC1 skoMC1 (-2))<=0]/\[[0<(skoMC1 skoMC1 skoMC1 (2))]/\[[(skoMC1 (-2+(skoMC1 (-5))))<(skoSC1 ((skoMC1 (-1+(skoMC1 (3))))+(skoSC1 ((skoMC1 (-2+(skoMC1 (-3))))+(skoSC1 ((skoMC1 (1/6+(skoMC1 (-1))))+(skoSC1 skoMC1 (1/4))))))))]/\[[(skoMC1 (-2+(skoMC1 (-5))))<(skoSC1 ((skoMC1 (-1+(skoMC1 (3))))+(skoSC1 ((skoMC1 (-2+(skoMC1 (-3))))+(skoSC1 ((skoMC1 skoMC1 (-1))+(skoSC1 skoMC1 (1/12))))))))]/\[[(skoSC1 ((skoMC1 (1+(skoMC1 (-3))))+(skoSC1 ((skoMC1 (2+(skoMC1 (3))))+(skoSC1 ((skoMC1 (-1/6+skoMC1))+(skoSC1 skoMC1 (-1/4))))))))<=(skoMC1 (2+(skoMC1 (5))))]/\[[(skoSC1 ((skoMC1 (1+(skoMC1 (-3))))+(skoSC1 ((skoMC1 (2+(skoMC1 (3))))+(skoSC1 ((skoMC1 skoMC1)+(skoSC1 skoMC1 (-1/12))))))))<=(skoMC1 (2+(skoMC1 (5))))]/\[[(skoSC1 skoMC1 (-1))<=skoMC1]/\[[(skoMC1 (-1))<(skoSC1 skoMC1)]/\[[0<=skoMC1]/\[[0<skoMC1]/\[[0<=skoSC1]/\[[2<=skoMC1]/\[[skoSC1<=5/4]/\[[(skoMC1 skoMC1 skoMC1 (-2))<(skoSC1 skoMC1 skoMC1 skoMC1 (2))]/\[[(skoSC1 skoMC1 skoMC1 skoMC1 (-2))<=(skoMC1 skoMC1 skoMC1 (2))]/\[(skoSC1 ((skoMC1 skoMC1 skoMC1 (-2+(skoMC1 (-12))))+(skoSC1 ((skoMC1 skoMC1 skoMC1 (1+(skoMC1 (-6))))+(skoSC1 ((skoMC1 skoMC1 skoMC1)+(skoSC1 ((skoMC1 skoMC1 skoMC1 (-1/12))+(skoSC1 skoMC1 skoMC1 skoMC1 (-1/12))))))))))<=(skoMC1 skoMC1 skoMC1 (2+(skoMC1 (6))))]]]]]]]]]]]]]]]]]]]]].

% In SMTLib2 format:
(declare-fun skoSC1 () Real) (declare-fun skoMC1 () Real) (assert (and (<= (* skoMC1 (* skoMC1 (* skoMC1 (- 2.)))) 0.) (and (<= (* skoSC1 (* skoMC1 (* skoMC1 (* skoMC1 (- 1.))))) (* skoMC1 (* skoMC1 skoMC1))) (and (> (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (+ (- 1.) (* skoMC1 3.))))) (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (+ (- 2.) (* skoMC1 (- 3.)))))) (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (* skoMC1 (- 1.))))) (* skoSC1 (* skoMC1 (* skoMC1 (* skoMC1 (/ 1. 12.))))))))))) (* skoMC1 (* skoMC1 (* skoMC1 (+ (- 2.) (* skoMC1 (- 5.))))))) (and (> (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (+ (- 1.) (* skoMC1 3.))))) (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (+ (- 2.) (* skoMC1 (- 3.)))))) (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (+ (/ 1. 6.) (* skoMC1 (- 1.)))))) (* skoSC1 (* skoMC1 (* skoMC1 (* skoMC1 (/ 1. 4.))))))))))) (* skoMC1 (* skoMC1 (* skoMC1 (+ (- 2.) (* skoMC1 (- 5.))))))) (and (> (* skoSC1 (* skoMC1 (* skoMC1 skoMC1))) (* skoMC1 (* skoMC1 (* skoMC1 (- 1.))))) (and (<= (* skoMC1 (* skoMC1 (* skoMC1 (- 2.)))) 0.) (and (> (* skoMC1 (* skoMC1 (* skoMC1 2.))) 0.) (and (> (* skoSC1 (+ (* skoMC1 (+ (- 1.) (* skoMC1 3.))) (* skoSC1 (+ (* skoMC1 (+ (- 2.) (* skoMC1 (- 3.)))) (* skoSC1 (+ (* skoMC1 (+ (/ 1. 6.) (* skoMC1 (- 1.)))) (* skoSC1 (* skoMC1 (/ 1. 4.))))))))) (* skoMC1 (+ (- 2.) (* skoMC1 (- 5.))))) (and (> (* skoSC1 (+ (* skoMC1 (+ (- 1.) (* skoMC1 3.))) (* skoSC1 (+ (* skoMC1 (+ (- 2.) (* skoMC1 (- 3.)))) (* skoSC1 (+ (* skoMC1 (* skoMC1 (- 1.))) (* skoSC1 (* skoMC1 (/ 1. 12.))))))))) (* skoMC1 (+ (- 2.) (* skoMC1 (- 5.))))) (and (<= (* skoSC1 (+ (* skoMC1 (+ 1. (* skoMC1 (- 3.)))) (* skoSC1 (+ (* skoMC1 (+ 2. (* skoMC1 3.))) (* skoSC1 (+ (* skoMC1 (+ (/ (- 1.) 6.) skoMC1)) (* skoSC1 (* skoMC1 (/ (- 1.) 4.))))))))) (* skoMC1 (+ 2. (* skoMC1 5.)))) (and (<= (* skoSC1 (+ (* skoMC1 (+ 1. (* skoMC1 (- 3.)))) (* skoSC1 (+ (* skoMC1 (+ 2. (* skoMC1 3.))) (* skoSC1 (+ (* skoMC1 skoMC1) (* skoSC1 (* skoMC1 (/ (- 1.) 12.))))))))) (* skoMC1 (+ 2. (* skoMC1 5.)))) (and (<= (* skoSC1 (* skoMC1 (- 1.))) skoMC1) (and (> (* skoSC1 skoMC1) (* skoMC1 (- 1.))) (and (<= 0. skoMC1) (and (> skoMC1 0.) (and (<= 0. skoSC1) (and (<= 2. skoMC1) (and (<= skoSC1 (/ 5. 4.)) (and (> (* skoSC1 (* skoMC1 (* skoMC1 (* skoMC1 2.)))) (* skoMC1 (* skoMC1 (* skoMC1 (- 2.))))) (and (<= (* skoSC1 (* skoMC1 (* skoMC1 (* skoMC1 (- 2.))))) (* skoMC1 (* skoMC1 (* skoMC1 2.)))) (<= (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (+ (- 2.) (* skoMC1 (- 12.)))))) (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (+ 1. (* skoMC1 (- 6.)))))) (* skoSC1 (+ (* skoMC1 (* skoMC1 skoMC1)) (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (/ (- 1.) 12.)))) (* skoSC1 (* skoMC1 (* skoMC1 (* skoMC1 (/ (- 1.) 12.))))))))))))) (* skoMC1 (* skoMC1 (* skoMC1 (+ 2. (* skoMC1 6.)))))))))))))))))))))))))))

% In GRF format:
(sequent " MetiTarski formula " (antecedent (<= (* skoMC1 (* skoMC1 (* skoMC1 (- 2.)))) 0.) (<= (* skoSC1 (* skoMC1 (* skoMC1 (* skoMC1 (- 1.))))) (* skoMC1 (* skoMC1 skoMC1))) (> (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (+ (- 1.) (* skoMC1 3.))))) (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (+ (- 2.) (* skoMC1 (- 3.)))))) (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (* skoMC1 (- 1.))))) (* skoSC1 (* skoMC1 (* skoMC1 (* skoMC1 (/ 1. 12.))))))))))) (* skoMC1 (* skoMC1 (* skoMC1 (+ (- 2.) (* skoMC1 (- 5.))))))) (> (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (+ (- 1.) (* skoMC1 3.))))) (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (+ (- 2.) (* skoMC1 (- 3.)))))) (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (+ (/ 1. 6.) (* skoMC1 (- 1.)))))) (* skoSC1 (* skoMC1 (* skoMC1 (* skoMC1 (/ 1. 4.))))))))))) (* skoMC1 (* skoMC1 (* skoMC1 (+ (- 2.) (* skoMC1 (- 5.))))))) (> (* skoSC1 (* skoMC1 (* skoMC1 skoMC1))) (* skoMC1 (* skoMC1 (* skoMC1 (- 1.))))) (<= (* skoMC1 (* skoMC1 (* skoMC1 (- 2.)))) 0.) (> (* skoMC1 (* skoMC1 (* skoMC1 2.))) 0.) (> (* skoSC1 (+ (* skoMC1 (+ (- 1.) (* skoMC1 3.))) (* skoSC1 (+ (* skoMC1 (+ (- 2.) (* skoMC1 (- 3.)))) (* skoSC1 (+ (* skoMC1 (+ (/ 1. 6.) (* skoMC1 (- 1.)))) (* skoSC1 (* skoMC1 (/ 1. 4.))))))))) (* skoMC1 (+ (- 2.) (* skoMC1 (- 5.))))) (> (* skoSC1 (+ (* skoMC1 (+ (- 1.) (* skoMC1 3.))) (* skoSC1 (+ (* skoMC1 (+ (- 2.) (* skoMC1 (- 3.)))) (* skoSC1 (+ (* skoMC1 (* skoMC1 (- 1.))) (* skoSC1 (* skoMC1 (/ 1. 12.))))))))) (* skoMC1 (+ (- 2.) (* skoMC1 (- 5.))))) (<= (* skoSC1 (+ (* skoMC1 (+ 1. (* skoMC1 (- 3.)))) (* skoSC1 (+ (* skoMC1 (+ 2. (* skoMC1 3.))) (* skoSC1 (+ (* skoMC1 (+ (/ (- 1.) 6.) skoMC1)) (* skoSC1 (* skoMC1 (/ (- 1.) 4.))))))))) (* skoMC1 (+ 2. (* skoMC1 5.)))) (<= (* skoSC1 (+ (* skoMC1 (+ 1. (* skoMC1 (- 3.)))) (* skoSC1 (+ (* skoMC1 (+ 2. (* skoMC1 3.))) (* skoSC1 (+ (* skoMC1 skoMC1) (* skoSC1 (* skoMC1 (/ (- 1.) 12.))))))))) (* skoMC1 (+ 2. (* skoMC1 5.)))) (<= (* skoSC1 (* skoMC1 (- 1.))) skoMC1) (> (* skoSC1 skoMC1) (* skoMC1 (- 1.))) (<= 0. skoMC1) (> skoMC1 0.) (<= 0. skoSC1) (<= 2. skoMC1) (<= skoSC1 (/ 5. 4.)) (> (* skoSC1 (* skoMC1 (* skoMC1 (* skoMC1 2.)))) (* skoMC1 (* skoMC1 (* skoMC1 (- 2.))))) (<= (* skoSC1 (* skoMC1 (* skoMC1 (* skoMC1 (- 2.))))) (* skoMC1 (* skoMC1 (* skoMC1 2.))))) (succedent (> (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (+ (- 2.) (* skoMC1 (- 12.)))))) (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (+ 1. (* skoMC1 (- 6.)))))) (* skoSC1 (+ (* skoMC1 (* skoMC1 skoMC1)) (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (/ (- 1.) 12.)))) (* skoSC1 (* skoMC1 (* skoMC1 (* skoMC1 (/ (- 1.) 12.))))))))))))) (* skoMC1 (* skoMC1 (* skoMC1 (+ 2. (* skoMC1 6.))))))))
-----[end problem]-----

-----[begin problem]-----
% In Mathematica format:
Timing[Resolve[Exists[{skoSC1,skoMC1}, And[skoMC1*skoMC1*skoMC1*-2>0,skoSC1*(skoMC1*skoMC1*skoMC1*(1+skoMC1*-3)+skoSC1*(skoMC1*skoMC1*skoMC1*(2+skoMC1*3)+skoSC1*(skoMC1*skoMC1*skoMC1*((-1/6)+skoMC1)+skoSC1*(skoMC1*skoMC1*skoMC1*(-1/4)+skoSC1*skoSC1*(skoMC1*skoMC1*skoMC1*(1/360)+skoSC1*skoSC1*(skoMC1*skoMC1*skoMC1*(-1/20160)+skoSC1*skoSC1*(skoMC1*skoMC1*skoMC1*(1/1814400)+skoSC1*skoSC1*skoMC1*skoMC1*skoMC1*(-1/239500800))))))))>skoMC1*skoMC1*skoMC1*(2+skoMC1*5),skoSC1*(skoMC1*skoMC1*skoMC1*(-1+skoMC1*3)+skoSC1*(skoMC1*skoMC1*skoMC1*(-2+skoMC1*-3)+skoSC1*(skoMC1*skoMC1*skoMC1*skoMC1*-1+skoSC1*skoMC1*skoMC1*skoMC1*(1/12))))>skoMC1*skoMC1*skoMC1*(-2+skoMC1*-5),skoSC1*(skoMC1*skoMC1*skoMC1*(-1+skoMC1*3)+skoSC1*(skoMC1*skoMC1*skoMC1*(-2+skoMC1*-3)+skoSC1*(skoMC1*skoMC1*skoMC1*((1/6)+skoMC1*-1)+skoSC1*skoMC1*skoMC1*skoMC1*(1/4))))>skoMC1*skoMC1*skoMC1*(-2+skoMC1*-5),skoSC1*skoMC1*skoMC1*skoMC1>skoMC1*skoMC1*skoMC1*-1,skoMC1*skoMC1*skoMC1*2>0,skoSC1*(skoMC1*(-1+skoMC1*3)+skoSC1*(skoMC1*(-2+skoMC1*-3)+skoSC1*(skoMC1*((1/6)+skoMC1*-1)+skoSC1*skoMC1*(1/4))))>skoMC1*(-2+skoMC1*-5),skoSC1*(skoMC1*(-1+skoMC1*3)+skoSC1*(skoMC1*(-2+skoMC1*-3)+skoSC1*(skoMC1*skoMC1*-1+skoSC1*skoMC1*(1/12))))>skoMC1*(-2+skoMC1*-5),skoSC1*skoMC1>skoMC1*-1,skoMC1>0,skoSC1*skoMC1*skoMC1*skoMC1*2>skoMC1*skoMC1*skoMC1*-2]], Reals]]

% In QepcadB format:
(E skoSC1) (E skoMC1) [[0<(skoMC1 skoMC1 skoMC1 (-2))]/\[[(skoMC1 skoMC1 skoMC1 (2+(skoMC1 (5))))<(skoSC1 ((skoMC1 skoMC1 skoMC1 (1+(skoMC1 (-3))))+(skoSC1 ((skoMC1 skoMC1 skoMC1 (2+(skoMC1 (3))))+(skoSC1 ((skoMC1 skoMC1 skoMC1 (-1/6+skoMC1))+(skoSC1 ((skoMC1 skoMC1 skoMC1 (-1/4))+(skoSC1 skoSC1 ((skoMC1 skoMC1 skoMC1 (1/360))+(skoSC1 skoSC1 ((skoMC1 skoMC1 skoMC1 (-1/20160))+(skoSC1 skoSC1 ((skoMC1 skoMC1 skoMC1 (1/1814400))+(skoSC1 skoSC1 skoMC1 skoMC1 skoMC1 (-1/239500800))))))))))))))))]/\[[(skoMC1 skoMC1 skoMC1 (-2+(skoMC1 (-5))))<(skoSC1 ((skoMC1 skoMC1 skoMC1 (-1+(skoMC1 (3))))+(skoSC1 ((skoMC1 skoMC1 skoMC1 (-2+(skoMC1 (-3))))+(skoSC1 ((skoMC1 skoMC1 skoMC1 skoMC1 (-1))+(skoSC1 skoMC1 skoMC1 skoMC1 (1/12))))))))]/\[[(skoMC1 skoMC1 skoMC1 (-2+(skoMC1 (-5))))<(skoSC1 ((skoMC1 skoMC1 skoMC1 (-1+(skoMC1 (3))))+(skoSC1 ((skoMC1 skoMC1 skoMC1 (-2+(skoMC1 (-3))))+(skoSC1 ((skoMC1 skoMC1 skoMC1 (1/6+(skoMC1 (-1))))+(skoSC1 skoMC1 skoMC1 skoMC1 (1/4))))))))]/\[[(skoMC1 skoMC1 skoMC1 (-1))<(skoSC1 skoMC1 skoMC1 skoMC1)]/\[[0<(skoMC1 skoMC1 skoMC1 (2))]/\[[(skoMC1 (-2+(skoMC1 (-5))))<(skoSC1 ((skoMC1 (-1+(skoMC1 (3))))+(skoSC1 ((skoMC1 (-2+(skoMC1 (-3))))+(skoSC1 ((skoMC1 (1/6+(skoMC1 (-1))))+(skoSC1 skoMC1 (1/4))))))))]/\[[(skoMC1 (-2+(skoMC1 (-5))))<(skoSC1 ((skoMC1 (-1+(skoMC1 (3))))+(skoSC1 ((skoMC1 (-2+(skoMC1 (-3))))+(skoSC1 ((skoMC1 skoMC1 (-1))+(skoSC1 skoMC1 (1/12))))))))]/\[[(skoMC1 (-1))<(skoSC1 skoMC1)]/\[[0<skoMC1]/\[(skoMC1 skoMC1 skoMC1 (-2))<(skoSC1 skoMC1 skoMC1 skoMC1 (2))]]]]]]]]]]].

% In SMTLib2 format:
(declare-fun skoSC1 () Real) (declare-fun skoMC1 () Real) (assert (and (> (* skoMC1 (* skoMC1 (* skoMC1 (- 2.)))) 0.) (and (> (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (+ 1. (* skoMC1 (- 3.)))))) (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (+ 2. (* skoMC1 3.))))) (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (+ (/ (- 1.) 6.) skoMC1)))) (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (/ (- 1.) 4.)))) (* skoSC1 (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (/ 1. 360.)))) (* skoSC1 (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (/ (- 1.) 20160.)))) (* skoSC1 (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (/ 1. 1814400.)))) (* skoSC1 (* skoSC1 (* skoMC1 (* skoMC1 (* skoMC1 (/ (- 1.) 239500800.))))))))))))))))))))))) (* skoMC1 (* skoMC1 (* skoMC1 (+ 2. (* skoMC1 5.)))))) (and (> (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (+ (- 1.) (* skoMC1 3.))))) (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (+ (- 2.) (* skoMC1 (- 3.)))))) (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (* skoMC1 (- 1.))))) (* skoSC1 (* skoMC1 (* skoMC1 (* skoMC1 (/ 1. 12.))))))))))) (* skoMC1 (* skoMC1 (* skoMC1 (+ (- 2.) (* skoMC1 (- 5.))))))) (and (> (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (+ (- 1.) (* skoMC1 3.))))) (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (+ (- 2.) (* skoMC1 (- 3.)))))) (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (+ (/ 1. 6.) (* skoMC1 (- 1.)))))) (* skoSC1 (* skoMC1 (* skoMC1 (* skoMC1 (/ 1. 4.))))))))))) (* skoMC1 (* skoMC1 (* skoMC1 (+ (- 2.) (* skoMC1 (- 5.))))))) (and (> (* skoSC1 (* skoMC1 (* skoMC1 skoMC1))) (* skoMC1 (* skoMC1 (* skoMC1 (- 1.))))) (and (> (* skoMC1 (* skoMC1 (* skoMC1 2.))) 0.) (and (> (* skoSC1 (+ (* skoMC1 (+ (- 1.) (* skoMC1 3.))) (* skoSC1 (+ (* skoMC1 (+ (- 2.) (* skoMC1 (- 3.)))) (* skoSC1 (+ (* skoMC1 (+ (/ 1. 6.) (* skoMC1 (- 1.)))) (* skoSC1 (* skoMC1 (/ 1. 4.))))))))) (* skoMC1 (+ (- 2.) (* skoMC1 (- 5.))))) (and (> (* skoSC1 (+ (* skoMC1 (+ (- 1.) (* skoMC1 3.))) (* skoSC1 (+ (* skoMC1 (+ (- 2.) (* skoMC1 (- 3.)))) (* skoSC1 (+ (* skoMC1 (* skoMC1 (- 1.))) (* skoSC1 (* skoMC1 (/ 1. 12.))))))))) (* skoMC1 (+ (- 2.) (* skoMC1 (- 5.))))) (and (> (* skoSC1 skoMC1) (* skoMC1 (- 1.))) (and (> skoMC1 0.) (> (* skoSC1 (* skoMC1 (* skoMC1 (* skoMC1 2.)))) (* skoMC1 (* skoMC1 (* skoMC1 (- 2.))))))))))))))))

% In GRF format:
(sequent " MetiTarski formula " (antecedent (> (* skoMC1 (* skoMC1 (* skoMC1 (- 2.)))) 0.) (> (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (+ 1. (* skoMC1 (- 3.)))))) (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (+ 2. (* skoMC1 3.))))) (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (+ (/ (- 1.) 6.) skoMC1)))) (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (/ (- 1.) 4.)))) (* skoSC1 (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (/ 1. 360.)))) (* skoSC1 (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (/ (- 1.) 20160.)))) (* skoSC1 (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (/ 1. 1814400.)))) (* skoSC1 (* skoSC1 (* skoMC1 (* skoMC1 (* skoMC1 (/ (- 1.) 239500800.))))))))))))))))))))))) (* skoMC1 (* skoMC1 (* skoMC1 (+ 2. (* skoMC1 5.)))))) (> (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (+ (- 1.) (* skoMC1 3.))))) (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (+ (- 2.) (* skoMC1 (- 3.)))))) (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (* skoMC1 (- 1.))))) (* skoSC1 (* skoMC1 (* skoMC1 (* skoMC1 (/ 1. 12.))))))))))) (* skoMC1 (* skoMC1 (* skoMC1 (+ (- 2.) (* skoMC1 (- 5.))))))) (> (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (+ (- 1.) (* skoMC1 3.))))) (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (+ (- 2.) (* skoMC1 (- 3.)))))) (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (+ (/ 1. 6.) (* skoMC1 (- 1.)))))) (* skoSC1 (* skoMC1 (* skoMC1 (* skoMC1 (/ 1. 4.))))))))))) (* skoMC1 (* skoMC1 (* skoMC1 (+ (- 2.) (* skoMC1 (- 5.))))))) (> (* skoSC1 (* skoMC1 (* skoMC1 skoMC1))) (* skoMC1 (* skoMC1 (* skoMC1 (- 1.))))) (> (* skoMC1 (* skoMC1 (* skoMC1 2.))) 0.) (> (* skoSC1 (+ (* skoMC1 (+ (- 1.) (* skoMC1 3.))) (* skoSC1 (+ (* skoMC1 (+ (- 2.) (* skoMC1 (- 3.)))) (* skoSC1 (+ (* skoMC1 (+ (/ 1. 6.) (* skoMC1 (- 1.)))) (* skoSC1 (* skoMC1 (/ 1. 4.))))))))) (* skoMC1 (+ (- 2.) (* skoMC1 (- 5.))))) (> (* skoSC1 (+ (* skoMC1 (+ (- 1.) (* skoMC1 3.))) (* skoSC1 (+ (* skoMC1 (+ (- 2.) (* skoMC1 (- 3.)))) (* skoSC1 (+ (* skoMC1 (* skoMC1 (- 1.))) (* skoSC1 (* skoMC1 (/ 1. 12.))))))))) (* skoMC1 (+ (- 2.) (* skoMC1 (- 5.))))) (> (* skoSC1 skoMC1) (* skoMC1 (- 1.))) (> skoMC1 0.)) (succedent (<= (* skoSC1 (* skoMC1 (* skoMC1 (* skoMC1 2.)))) (* skoMC1 (* skoMC1 (* skoMC1 (- 2.)))))))
-----[end problem]-----

-----[begin problem]-----
% In Mathematica format:
Timing[Resolve[Exists[{skoSC1,skoMC1}, And[skoMC1*skoMC1*skoMC1*-2<=0,skoSC1*skoMC1*skoMC1*skoMC1*-1<=skoMC1*skoMC1*skoMC1,skoSC1*(skoMC1*skoMC1*skoMC1*(-1+skoMC1*3)+skoSC1*(skoMC1*skoMC1*skoMC1*(-2+skoMC1*-3)+skoSC1*(skoMC1*skoMC1*skoMC1*skoMC1*-1+skoSC1*skoMC1*skoMC1*skoMC1*(1/12))))>skoMC1*skoMC1*skoMC1*(-2+skoMC1*-5),skoSC1*(skoMC1*skoMC1*skoMC1*(-1+skoMC1*3)+skoSC1*(skoMC1*skoMC1*skoMC1*(-2+skoMC1*-3)+skoSC1*(skoMC1*skoMC1*skoMC1*((1/6)+skoMC1*-1)+skoSC1*skoMC1*skoMC1*skoMC1*(1/4))))>skoMC1*skoMC1*skoMC1*(-2+skoMC1*-5),skoSC1*skoMC1*skoMC1*skoMC1>skoMC1*skoMC1*skoMC1*-1,skoMC1*skoMC1*skoMC1*-2<=0,skoMC1*skoMC1*skoMC1*2>0,skoSC1*(skoMC1*(-1+skoMC1*3)+skoSC1*(skoMC1*(-2+skoMC1*-3)+skoSC1*(skoMC1*((1/6)+skoMC1*-1)+skoSC1*skoMC1*(1/4))))>skoMC1*(-2+skoMC1*-5),skoSC1*(skoMC1*(-1+skoMC1*3)+skoSC1*(skoMC1*(-2+skoMC1*-3)+skoSC1*(skoMC1*skoMC1*-1+skoSC1*skoMC1*(1/12))))>skoMC1*(-2+skoMC1*-5),skoSC1*(skoMC1*(1+skoMC1*-3)+skoSC1*(skoMC1*(2+skoMC1*3)+skoSC1*(skoMC1*((-1/6)+skoMC1)+skoSC1*skoMC1*(-1/4))))<=skoMC1*(2+skoMC1*5),skoSC1*(skoMC1*(1+skoMC1*-3)+skoSC1*(skoMC1*(2+skoMC1*3)+skoSC1*(skoMC1*skoMC1+skoSC1*skoMC1*(-1/12))))<=skoMC1*(2+skoMC1*5),skoSC1*skoMC1*-1<=skoMC1,skoSC1*skoMC1>skoMC1*-1,0<=skoMC1,skoMC1>0,0<=skoSC1,2<=skoMC1,skoSC1<=(5/4),skoSC1*skoMC1*skoMC1*skoMC1*2>skoMC1*skoMC1*skoMC1*-2,skoSC1*skoMC1*skoMC1*skoMC1*-2<=skoMC1*skoMC1*skoMC1*2,skoSC1*(skoMC1*skoMC1*skoMC1*(-2+skoMC1*-12)+skoSC1*(skoMC1*skoMC1*skoMC1*(1+skoMC1*-6)+skoSC1*(skoMC1*skoMC1*skoMC1+skoSC1*(skoMC1*skoMC1*skoMC1*(-1/12)+skoSC1*skoMC1*skoMC1*skoMC1*(-1/12)))))<=skoMC1*skoMC1*skoMC1*(2+skoMC1*6)]], Reals]]

% In QepcadB format:
(E skoSC1) (E skoMC1) [[(skoMC1 skoMC1 skoMC1 (-2))<=0]/\[[(skoSC1 skoMC1 skoMC1 skoMC1 (-1))<=(skoMC1 skoMC1 skoMC1)]/\[[(skoMC1 skoMC1 skoMC1 (-2+(skoMC1 (-5))))<(skoSC1 ((skoMC1 skoMC1 skoMC1 (-1+(skoMC1 (3))))+(skoSC1 ((skoMC1 skoMC1 skoMC1 (-2+(skoMC1 (-3))))+(skoSC1 ((skoMC1 skoMC1 skoMC1 skoMC1 (-1))+(skoSC1 skoMC1 skoMC1 skoMC1 (1/12))))))))]/\[[(skoMC1 skoMC1 skoMC1 (-2+(skoMC1 (-5))))<(skoSC1 ((skoMC1 skoMC1 skoMC1 (-1+(skoMC1 (3))))+(skoSC1 ((skoMC1 skoMC1 skoMC1 (-2+(skoMC1 (-3))))+(skoSC1 ((skoMC1 skoMC1 skoMC1 (1/6+(skoMC1 (-1))))+(skoSC1 skoMC1 skoMC1 skoMC1 (1/4))))))))]/\[[(skoMC1 skoMC1 skoMC1 (-1))<(skoSC1 skoMC1 skoMC1 skoMC1)]/\[[(skoMC1 skoMC1 skoMC1 (-2))<=0]/\[[0<(skoMC1 skoMC1 skoMC1 (2))]/\[[(skoMC1 (-2+(skoMC1 (-5))))<(skoSC1 ((skoMC1 (-1+(skoMC1 (3))))+(skoSC1 ((skoMC1 (-2+(skoMC1 (-3))))+(skoSC1 ((skoMC1 (1/6+(skoMC1 (-1))))+(skoSC1 skoMC1 (1/4))))))))]/\[[(skoMC1 (-2+(skoMC1 (-5))))<(skoSC1 ((skoMC1 (-1+(skoMC1 (3))))+(skoSC1 ((skoMC1 (-2+(skoMC1 (-3))))+(skoSC1 ((skoMC1 skoMC1 (-1))+(skoSC1 skoMC1 (1/12))))))))]/\[[(skoSC1 ((skoMC1 (1+(skoMC1 (-3))))+(skoSC1 ((skoMC1 (2+(skoMC1 (3))))+(skoSC1 ((skoMC1 (-1/6+skoMC1))+(skoSC1 skoMC1 (-1/4))))))))<=(skoMC1 (2+(skoMC1 (5))))]/\[[(skoSC1 ((skoMC1 (1+(skoMC1 (-3))))+(skoSC1 ((skoMC1 (2+(skoMC1 (3))))+(skoSC1 ((skoMC1 skoMC1)+(skoSC1 skoMC1 (-1/12))))))))<=(skoMC1 (2+(skoMC1 (5))))]/\[[(skoSC1 skoMC1 (-1))<=skoMC1]/\[[(skoMC1 (-1))<(skoSC1 skoMC1)]/\[[0<=skoMC1]/\[[0<skoMC1]/\[[0<=skoSC1]/\[[2<=skoMC1]/\[[skoSC1<=5/4]/\[[(skoMC1 skoMC1 skoMC1 (-2))<(skoSC1 skoMC1 skoMC1 skoMC1 (2))]/\[[(skoSC1 skoMC1 skoMC1 skoMC1 (-2))<=(skoMC1 skoMC1 skoMC1 (2))]/\[(skoSC1 ((skoMC1 skoMC1 skoMC1 (-2+(skoMC1 (-12))))+(skoSC1 ((skoMC1 skoMC1 skoMC1 (1+(skoMC1 (-6))))+(skoSC1 ((skoMC1 skoMC1 skoMC1)+(skoSC1 ((skoMC1 skoMC1 skoMC1 (-1/12))+(skoSC1 skoMC1 skoMC1 skoMC1 (-1/12))))))))))<=(skoMC1 skoMC1 skoMC1 (2+(skoMC1 (6))))]]]]]]]]]]]]]]]]]]]]].

% In SMTLib2 format:
(declare-fun skoSC1 () Real) (declare-fun skoMC1 () Real) (assert (and (<= (* skoMC1 (* skoMC1 (* skoMC1 (- 2.)))) 0.) (and (<= (* skoSC1 (* skoMC1 (* skoMC1 (* skoMC1 (- 1.))))) (* skoMC1 (* skoMC1 skoMC1))) (and (> (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (+ (- 1.) (* skoMC1 3.))))) (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (+ (- 2.) (* skoMC1 (- 3.)))))) (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (* skoMC1 (- 1.))))) (* skoSC1 (* skoMC1 (* skoMC1 (* skoMC1 (/ 1. 12.))))))))))) (* skoMC1 (* skoMC1 (* skoMC1 (+ (- 2.) (* skoMC1 (- 5.))))))) (and (> (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (+ (- 1.) (* skoMC1 3.))))) (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (+ (- 2.) (* skoMC1 (- 3.)))))) (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (+ (/ 1. 6.) (* skoMC1 (- 1.)))))) (* skoSC1 (* skoMC1 (* skoMC1 (* skoMC1 (/ 1. 4.))))))))))) (* skoMC1 (* skoMC1 (* skoMC1 (+ (- 2.) (* skoMC1 (- 5.))))))) (and (> (* skoSC1 (* skoMC1 (* skoMC1 skoMC1))) (* skoMC1 (* skoMC1 (* skoMC1 (- 1.))))) (and (<= (* skoMC1 (* skoMC1 (* skoMC1 (- 2.)))) 0.) (and (> (* skoMC1 (* skoMC1 (* skoMC1 2.))) 0.) (and (> (* skoSC1 (+ (* skoMC1 (+ (- 1.) (* skoMC1 3.))) (* skoSC1 (+ (* skoMC1 (+ (- 2.) (* skoMC1 (- 3.)))) (* skoSC1 (+ (* skoMC1 (+ (/ 1. 6.) (* skoMC1 (- 1.)))) (* skoSC1 (* skoMC1 (/ 1. 4.))))))))) (* skoMC1 (+ (- 2.) (* skoMC1 (- 5.))))) (and (> (* skoSC1 (+ (* skoMC1 (+ (- 1.) (* skoMC1 3.))) (* skoSC1 (+ (* skoMC1 (+ (- 2.) (* skoMC1 (- 3.)))) (* skoSC1 (+ (* skoMC1 (* skoMC1 (- 1.))) (* skoSC1 (* skoMC1 (/ 1. 12.))))))))) (* skoMC1 (+ (- 2.) (* skoMC1 (- 5.))))) (and (<= (* skoSC1 (+ (* skoMC1 (+ 1. (* skoMC1 (- 3.)))) (* skoSC1 (+ (* skoMC1 (+ 2. (* skoMC1 3.))) (* skoSC1 (+ (* skoMC1 (+ (/ (- 1.) 6.) skoMC1)) (* skoSC1 (* skoMC1 (/ (- 1.) 4.))))))))) (* skoMC1 (+ 2. (* skoMC1 5.)))) (and (<= (* skoSC1 (+ (* skoMC1 (+ 1. (* skoMC1 (- 3.)))) (* skoSC1 (+ (* skoMC1 (+ 2. (* skoMC1 3.))) (* skoSC1 (+ (* skoMC1 skoMC1) (* skoSC1 (* skoMC1 (/ (- 1.) 12.))))))))) (* skoMC1 (+ 2. (* skoMC1 5.)))) (and (<= (* skoSC1 (* skoMC1 (- 1.))) skoMC1) (and (> (* skoSC1 skoMC1) (* skoMC1 (- 1.))) (and (<= 0. skoMC1) (and (> skoMC1 0.) (and (<= 0. skoSC1) (and (<= 2. skoMC1) (and (<= skoSC1 (/ 5. 4.)) (and (> (* skoSC1 (* skoMC1 (* skoMC1 (* skoMC1 2.)))) (* skoMC1 (* skoMC1 (* skoMC1 (- 2.))))) (and (<= (* skoSC1 (* skoMC1 (* skoMC1 (* skoMC1 (- 2.))))) (* skoMC1 (* skoMC1 (* skoMC1 2.)))) (<= (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (+ (- 2.) (* skoMC1 (- 12.)))))) (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (+ 1. (* skoMC1 (- 6.)))))) (* skoSC1 (+ (* skoMC1 (* skoMC1 skoMC1)) (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (/ (- 1.) 12.)))) (* skoSC1 (* skoMC1 (* skoMC1 (* skoMC1 (/ (- 1.) 12.))))))))))))) (* skoMC1 (* skoMC1 (* skoMC1 (+ 2. (* skoMC1 6.)))))))))))))))))))))))))))

% In GRF format:
(sequent " MetiTarski formula " (antecedent (<= (* skoMC1 (* skoMC1 (* skoMC1 (- 2.)))) 0.) (<= (* skoSC1 (* skoMC1 (* skoMC1 (* skoMC1 (- 1.))))) (* skoMC1 (* skoMC1 skoMC1))) (> (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (+ (- 1.) (* skoMC1 3.))))) (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (+ (- 2.) (* skoMC1 (- 3.)))))) (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (* skoMC1 (- 1.))))) (* skoSC1 (* skoMC1 (* skoMC1 (* skoMC1 (/ 1. 12.))))))))))) (* skoMC1 (* skoMC1 (* skoMC1 (+ (- 2.) (* skoMC1 (- 5.))))))) (> (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (+ (- 1.) (* skoMC1 3.))))) (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (+ (- 2.) (* skoMC1 (- 3.)))))) (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (+ (/ 1. 6.) (* skoMC1 (- 1.)))))) (* skoSC1 (* skoMC1 (* skoMC1 (* skoMC1 (/ 1. 4.))))))))))) (* skoMC1 (* skoMC1 (* skoMC1 (+ (- 2.) (* skoMC1 (- 5.))))))) (> (* skoSC1 (* skoMC1 (* skoMC1 skoMC1))) (* skoMC1 (* skoMC1 (* skoMC1 (- 1.))))) (<= (* skoMC1 (* skoMC1 (* skoMC1 (- 2.)))) 0.) (> (* skoMC1 (* skoMC1 (* skoMC1 2.))) 0.) (> (* skoSC1 (+ (* skoMC1 (+ (- 1.) (* skoMC1 3.))) (* skoSC1 (+ (* skoMC1 (+ (- 2.) (* skoMC1 (- 3.)))) (* skoSC1 (+ (* skoMC1 (+ (/ 1. 6.) (* skoMC1 (- 1.)))) (* skoSC1 (* skoMC1 (/ 1. 4.))))))))) (* skoMC1 (+ (- 2.) (* skoMC1 (- 5.))))) (> (* skoSC1 (+ (* skoMC1 (+ (- 1.) (* skoMC1 3.))) (* skoSC1 (+ (* skoMC1 (+ (- 2.) (* skoMC1 (- 3.)))) (* skoSC1 (+ (* skoMC1 (* skoMC1 (- 1.))) (* skoSC1 (* skoMC1 (/ 1. 12.))))))))) (* skoMC1 (+ (- 2.) (* skoMC1 (- 5.))))) (<= (* skoSC1 (+ (* skoMC1 (+ 1. (* skoMC1 (- 3.)))) (* skoSC1 (+ (* skoMC1 (+ 2. (* skoMC1 3.))) (* skoSC1 (+ (* skoMC1 (+ (/ (- 1.) 6.) skoMC1)) (* skoSC1 (* skoMC1 (/ (- 1.) 4.))))))))) (* skoMC1 (+ 2. (* skoMC1 5.)))) (<= (* skoSC1 (+ (* skoMC1 (+ 1. (* skoMC1 (- 3.)))) (* skoSC1 (+ (* skoMC1 (+ 2. (* skoMC1 3.))) (* skoSC1 (+ (* skoMC1 skoMC1) (* skoSC1 (* skoMC1 (/ (- 1.) 12.))))))))) (* skoMC1 (+ 2. (* skoMC1 5.)))) (<= (* skoSC1 (* skoMC1 (- 1.))) skoMC1) (> (* skoSC1 skoMC1) (* skoMC1 (- 1.))) (<= 0. skoMC1) (> skoMC1 0.) (<= 0. skoSC1) (<= 2. skoMC1) (<= skoSC1 (/ 5. 4.)) (> (* skoSC1 (* skoMC1 (* skoMC1 (* skoMC1 2.)))) (* skoMC1 (* skoMC1 (* skoMC1 (- 2.))))) (<= (* skoSC1 (* skoMC1 (* skoMC1 (* skoMC1 (- 2.))))) (* skoMC1 (* skoMC1 (* skoMC1 2.))))) (succedent (> (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (+ (- 2.) (* skoMC1 (- 12.)))))) (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (+ 1. (* skoMC1 (- 6.)))))) (* skoSC1 (+ (* skoMC1 (* skoMC1 skoMC1)) (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (/ (- 1.) 12.)))) (* skoSC1 (* skoMC1 (* skoMC1 (* skoMC1 (/ (- 1.) 12.))))))))))))) (* skoMC1 (* skoMC1 (* skoMC1 (+ 2. (* skoMC1 6.))))))))
-----[end problem]-----

-----[begin problem]-----
% In Mathematica format:
Timing[Resolve[Exists[{skoSC1,skoMC1}, And[skoMC1*skoMC1*skoMC1*2>0,skoSC1*(skoMC1*skoMC1*skoMC1*(-1+skoMC1*3)+skoSC1*(skoMC1*skoMC1*skoMC1*(-2+skoMC1*-3)+skoSC1*(skoMC1*skoMC1*skoMC1*((1/6)+skoMC1*-1)+skoSC1*(skoMC1*skoMC1*skoMC1*(1/4)+skoSC1*skoSC1*(skoMC1*skoMC1*skoMC1*(-1/360)+skoSC1*skoSC1*(skoMC1*skoMC1*skoMC1*(1/20160)+skoSC1*skoSC1*(skoMC1*skoMC1*skoMC1*(-1/1814400)+skoSC1*skoSC1*skoMC1*skoMC1*skoMC1*(1/239500800))))))))>skoMC1*skoMC1*skoMC1*(-2+skoMC1*-5),skoSC1*(skoMC1*skoMC1*skoMC1*(-1+skoMC1*3)+skoSC1*(skoMC1*skoMC1*skoMC1*(-2+skoMC1*-3)+skoSC1*(skoMC1*skoMC1*skoMC1*skoMC1*-1+skoSC1*skoMC1*skoMC1*skoMC1*(1/12))))>skoMC1*skoMC1*skoMC1*(-2+skoMC1*-5),skoSC1*(skoMC1*skoMC1*skoMC1*(-1+skoMC1*3)+skoSC1*(skoMC1*skoMC1*skoMC1*(-2+skoMC1*-3)+skoSC1*(skoMC1*skoMC1*skoMC1*((1/6)+skoMC1*-1)+skoSC1*skoMC1*skoMC1*skoMC1*(1/4))))>skoMC1*skoMC1*skoMC1*(-2+skoMC1*-5),skoSC1*skoMC1*skoMC1*skoMC1>skoMC1*skoMC1*skoMC1*-1,skoMC1*skoMC1*skoMC1*2>0,skoSC1*(skoMC1*(-1+skoMC1*3)+skoSC1*(skoMC1*(-2+skoMC1*-3)+skoSC1*(skoMC1*((1/6)+skoMC1*-1)+skoSC1*skoMC1*(1/4))))>skoMC1*(-2+skoMC1*-5),skoSC1*(skoMC1*(-1+skoMC1*3)+skoSC1*(skoMC1*(-2+skoMC1*-3)+skoSC1*(skoMC1*skoMC1*-1+skoSC1*skoMC1*(1/12))))>skoMC1*(-2+skoMC1*-5),skoSC1*skoMC1>skoMC1*-1,skoMC1>0,skoSC1*skoMC1*skoMC1*skoMC1*2>skoMC1*skoMC1*skoMC1*-2]], Reals]]

% In QepcadB format:
(E skoSC1) (E skoMC1) [[0<(skoMC1 skoMC1 skoMC1 (2))]/\[[(skoMC1 skoMC1 skoMC1 (-2+(skoMC1 (-5))))<(skoSC1 ((skoMC1 skoMC1 skoMC1 (-1+(skoMC1 (3))))+(skoSC1 ((skoMC1 skoMC1 skoMC1 (-2+(skoMC1 (-3))))+(skoSC1 ((skoMC1 skoMC1 skoMC1 (1/6+(skoMC1 (-1))))+(skoSC1 ((skoMC1 skoMC1 skoMC1 (1/4))+(skoSC1 skoSC1 ((skoMC1 skoMC1 skoMC1 (-1/360))+(skoSC1 skoSC1 ((skoMC1 skoMC1 skoMC1 (1/20160))+(skoSC1 skoSC1 ((skoMC1 skoMC1 skoMC1 (-1/1814400))+(skoSC1 skoSC1 skoMC1 skoMC1 skoMC1 (1/239500800))))))))))))))))]/\[[(skoMC1 skoMC1 skoMC1 (-2+(skoMC1 (-5))))<(skoSC1 ((skoMC1 skoMC1 skoMC1 (-1+(skoMC1 (3))))+(skoSC1 ((skoMC1 skoMC1 skoMC1 (-2+(skoMC1 (-3))))+(skoSC1 ((skoMC1 skoMC1 skoMC1 skoMC1 (-1))+(skoSC1 skoMC1 skoMC1 skoMC1 (1/12))))))))]/\[[(skoMC1 skoMC1 skoMC1 (-2+(skoMC1 (-5))))<(skoSC1 ((skoMC1 skoMC1 skoMC1 (-1+(skoMC1 (3))))+(skoSC1 ((skoMC1 skoMC1 skoMC1 (-2+(skoMC1 (-3))))+(skoSC1 ((skoMC1 skoMC1 skoMC1 (1/6+(skoMC1 (-1))))+(skoSC1 skoMC1 skoMC1 skoMC1 (1/4))))))))]/\[[(skoMC1 skoMC1 skoMC1 (-1))<(skoSC1 skoMC1 skoMC1 skoMC1)]/\[[0<(skoMC1 skoMC1 skoMC1 (2))]/\[[(skoMC1 (-2+(skoMC1 (-5))))<(skoSC1 ((skoMC1 (-1+(skoMC1 (3))))+(skoSC1 ((skoMC1 (-2+(skoMC1 (-3))))+(skoSC1 ((skoMC1 (1/6+(skoMC1 (-1))))+(skoSC1 skoMC1 (1/4))))))))]/\[[(skoMC1 (-2+(skoMC1 (-5))))<(skoSC1 ((skoMC1 (-1+(skoMC1 (3))))+(skoSC1 ((skoMC1 (-2+(skoMC1 (-3))))+(skoSC1 ((skoMC1 skoMC1 (-1))+(skoSC1 skoMC1 (1/12))))))))]/\[[(skoMC1 (-1))<(skoSC1 skoMC1)]/\[[0<skoMC1]/\[(skoMC1 skoMC1 skoMC1 (-2))<(skoSC1 skoMC1 skoMC1 skoMC1 (2))]]]]]]]]]]].

% In SMTLib2 format:
(declare-fun skoSC1 () Real) (declare-fun skoMC1 () Real) (assert (and (> (* skoMC1 (* skoMC1 (* skoMC1 2.))) 0.) (and (> (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (+ (- 1.) (* skoMC1 3.))))) (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (+ (- 2.) (* skoMC1 (- 3.)))))) (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (+ (/ 1. 6.) (* skoMC1 (- 1.)))))) (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (/ 1. 4.)))) (* skoSC1 (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (/ (- 1.) 360.)))) (* skoSC1 (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (/ 1. 20160.)))) (* skoSC1 (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (/ (- 1.) 1814400.)))) (* skoSC1 (* skoSC1 (* skoMC1 (* skoMC1 (* skoMC1 (/ 1. 239500800.))))))))))))))))))))))) (* skoMC1 (* skoMC1 (* skoMC1 (+ (- 2.) (* skoMC1 (- 5.))))))) (and (> (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (+ (- 1.) (* skoMC1 3.))))) (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (+ (- 2.) (* skoMC1 (- 3.)))))) (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (* skoMC1 (- 1.))))) (* skoSC1 (* skoMC1 (* skoMC1 (* skoMC1 (/ 1. 12.))))))))))) (* skoMC1 (* skoMC1 (* skoMC1 (+ (- 2.) (* skoMC1 (- 5.))))))) (and (> (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (+ (- 1.) (* skoMC1 3.))))) (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (+ (- 2.) (* skoMC1 (- 3.)))))) (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (+ (/ 1. 6.) (* skoMC1 (- 1.)))))) (* skoSC1 (* skoMC1 (* skoMC1 (* skoMC1 (/ 1. 4.))))))))))) (* skoMC1 (* skoMC1 (* skoMC1 (+ (- 2.) (* skoMC1 (- 5.))))))) (and (> (* skoSC1 (* skoMC1 (* skoMC1 skoMC1))) (* skoMC1 (* skoMC1 (* skoMC1 (- 1.))))) (and (> (* skoMC1 (* skoMC1 (* skoMC1 2.))) 0.) (and (> (* skoSC1 (+ (* skoMC1 (+ (- 1.) (* skoMC1 3.))) (* skoSC1 (+ (* skoMC1 (+ (- 2.) (* skoMC1 (- 3.)))) (* skoSC1 (+ (* skoMC1 (+ (/ 1. 6.) (* skoMC1 (- 1.)))) (* skoSC1 (* skoMC1 (/ 1. 4.))))))))) (* skoMC1 (+ (- 2.) (* skoMC1 (- 5.))))) (and (> (* skoSC1 (+ (* skoMC1 (+ (- 1.) (* skoMC1 3.))) (* skoSC1 (+ (* skoMC1 (+ (- 2.) (* skoMC1 (- 3.)))) (* skoSC1 (+ (* skoMC1 (* skoMC1 (- 1.))) (* skoSC1 (* skoMC1 (/ 1. 12.))))))))) (* skoMC1 (+ (- 2.) (* skoMC1 (- 5.))))) (and (> (* skoSC1 skoMC1) (* skoMC1 (- 1.))) (and (> skoMC1 0.) (> (* skoSC1 (* skoMC1 (* skoMC1 (* skoMC1 2.)))) (* skoMC1 (* skoMC1 (* skoMC1 (- 2.))))))))))))))))

% In GRF format:
(sequent " MetiTarski formula " (antecedent (> (* skoMC1 (* skoMC1 (* skoMC1 2.))) 0.) (> (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (+ (- 1.) (* skoMC1 3.))))) (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (+ (- 2.) (* skoMC1 (- 3.)))))) (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (+ (/ 1. 6.) (* skoMC1 (- 1.)))))) (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (/ 1. 4.)))) (* skoSC1 (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (/ (- 1.) 360.)))) (* skoSC1 (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (/ 1. 20160.)))) (* skoSC1 (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (/ (- 1.) 1814400.)))) (* skoSC1 (* skoSC1 (* skoMC1 (* skoMC1 (* skoMC1 (/ 1. 239500800.))))))))))))))))))))))) (* skoMC1 (* skoMC1 (* skoMC1 (+ (- 2.) (* skoMC1 (- 5.))))))) (> (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (+ (- 1.) (* skoMC1 3.))))) (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (+ (- 2.) (* skoMC1 (- 3.)))))) (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (* skoMC1 (- 1.))))) (* skoSC1 (* skoMC1 (* skoMC1 (* skoMC1 (/ 1. 12.))))))))))) (* skoMC1 (* skoMC1 (* skoMC1 (+ (- 2.) (* skoMC1 (- 5.))))))) (> (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (+ (- 1.) (* skoMC1 3.))))) (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (+ (- 2.) (* skoMC1 (- 3.)))))) (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (+ (/ 1. 6.) (* skoMC1 (- 1.)))))) (* skoSC1 (* skoMC1 (* skoMC1 (* skoMC1 (/ 1. 4.))))))))))) (* skoMC1 (* skoMC1 (* skoMC1 (+ (- 2.) (* skoMC1 (- 5.))))))) (> (* skoSC1 (* skoMC1 (* skoMC1 skoMC1))) (* skoMC1 (* skoMC1 (* skoMC1 (- 1.))))) (> (* skoMC1 (* skoMC1 (* skoMC1 2.))) 0.) (> (* skoSC1 (+ (* skoMC1 (+ (- 1.) (* skoMC1 3.))) (* skoSC1 (+ (* skoMC1 (+ (- 2.) (* skoMC1 (- 3.)))) (* skoSC1 (+ (* skoMC1 (+ (/ 1. 6.) (* skoMC1 (- 1.)))) (* skoSC1 (* skoMC1 (/ 1. 4.))))))))) (* skoMC1 (+ (- 2.) (* skoMC1 (- 5.))))) (> (* skoSC1 (+ (* skoMC1 (+ (- 1.) (* skoMC1 3.))) (* skoSC1 (+ (* skoMC1 (+ (- 2.) (* skoMC1 (- 3.)))) (* skoSC1 (+ (* skoMC1 (* skoMC1 (- 1.))) (* skoSC1 (* skoMC1 (/ 1. 12.))))))))) (* skoMC1 (+ (- 2.) (* skoMC1 (- 5.))))) (> (* skoSC1 skoMC1) (* skoMC1 (- 1.))) (> skoMC1 0.)) (succedent (<= (* skoSC1 (* skoMC1 (* skoMC1 (* skoMC1 2.)))) (* skoMC1 (* skoMC1 (* skoMC1 (- 2.)))))))
-----[end problem]-----

-----[begin problem]-----
% In Mathematica format:
Timing[Resolve[Exists[{skoSC1,skoMC1}, And[skoMC1*skoMC1*skoMC1*2>0,skoSC1*(skoMC1*skoMC1*skoMC1*(-1+skoMC1*3)+skoSC1*(skoMC1*skoMC1*skoMC1*(-2+skoMC1*-3)+skoSC1*(skoMC1*skoMC1*skoMC1*((1/6)+skoMC1*-1)+skoSC1*(skoMC1*skoMC1*skoMC1*(1/4)+skoSC1*skoSC1*(skoMC1*skoMC1*skoMC1*(-1/360)+skoSC1*skoSC1*(skoMC1*skoMC1*skoMC1*(1/20160)+skoSC1*skoSC1*(skoMC1*skoMC1*skoMC1*(-1/1814400)+skoSC1*skoSC1*skoMC1*skoMC1*skoMC1*(1/239500800))))))))>skoMC1*skoMC1*skoMC1*(-2+skoMC1*-5),skoSC1*skoMC1*skoMC1*skoMC1*-1<=skoMC1*skoMC1*skoMC1,skoSC1*(skoMC1*skoMC1*skoMC1*(-1+skoMC1*3)+skoSC1*(skoMC1*skoMC1*skoMC1*(-2+skoMC1*-3)+skoSC1*(skoMC1*skoMC1*skoMC1*skoMC1*-1+skoSC1*skoMC1*skoMC1*skoMC1*(1/12))))>skoMC1*skoMC1*skoMC1*(-2+skoMC1*-5),skoSC1*(skoMC1*skoMC1*skoMC1*(-1+skoMC1*3)+skoSC1*(skoMC1*skoMC1*skoMC1*(-2+skoMC1*-3)+skoSC1*(skoMC1*skoMC1*skoMC1*((1/6)+skoMC1*-1)+skoSC1*skoMC1*skoMC1*skoMC1*(1/4))))>skoMC1*skoMC1*skoMC1*(-2+skoMC1*-5),skoSC1*skoMC1*skoMC1*skoMC1>skoMC1*skoMC1*skoMC1*-1,skoMC1*skoMC1*skoMC1*-2<=0,skoMC1*skoMC1*skoMC1*2>0,skoSC1*(skoMC1*(-1+skoMC1*3)+skoSC1*(skoMC1*(-2+skoMC1*-3)+skoSC1*(skoMC1*((1/6)+skoMC1*-1)+skoSC1*skoMC1*(1/4))))>skoMC1*(-2+skoMC1*-5),skoSC1*(skoMC1*(-1+skoMC1*3)+skoSC1*(skoMC1*(-2+skoMC1*-3)+skoSC1*(skoMC1*skoMC1*-1+skoSC1*skoMC1*(1/12))))>skoMC1*(-2+skoMC1*-5),skoSC1*(skoMC1*(1+skoMC1*-3)+skoSC1*(skoMC1*(2+skoMC1*3)+skoSC1*(skoMC1*((-1/6)+skoMC1)+skoSC1*skoMC1*(-1/4))))<=skoMC1*(2+skoMC1*5),skoSC1*(skoMC1*(1+skoMC1*-3)+skoSC1*(skoMC1*(2+skoMC1*3)+skoSC1*(skoMC1*skoMC1+skoSC1*skoMC1*(-1/12))))<=skoMC1*(2+skoMC1*5),skoSC1*skoMC1*-1<=skoMC1,skoSC1*skoMC1>skoMC1*-1,0<=skoMC1,skoMC1>0,0<=skoSC1,2<=skoMC1,skoSC1<=(5/4),skoSC1*skoMC1*skoMC1*skoMC1*2>skoMC1*skoMC1*skoMC1*-2,skoSC1*skoMC1*skoMC1*skoMC1*-2<=skoMC1*skoMC1*skoMC1*2,skoSC1*(skoMC1*skoMC1*skoMC1*(-2+skoMC1*-12)+skoSC1*(skoMC1*skoMC1*skoMC1*(1+skoMC1*-6)+skoSC1*(skoMC1*skoMC1*skoMC1+skoSC1*(skoMC1*skoMC1*skoMC1*(-1/12)+skoSC1*skoMC1*skoMC1*skoMC1*(-1/12)))))<=skoMC1*skoMC1*skoMC1*(2+skoMC1*6)]], Reals]]

% In QepcadB format:
(E skoSC1) (E skoMC1) [[0<(skoMC1 skoMC1 skoMC1 (2))]/\[[(skoMC1 skoMC1 skoMC1 (-2+(skoMC1 (-5))))<(skoSC1 ((skoMC1 skoMC1 skoMC1 (-1+(skoMC1 (3))))+(skoSC1 ((skoMC1 skoMC1 skoMC1 (-2+(skoMC1 (-3))))+(skoSC1 ((skoMC1 skoMC1 skoMC1 (1/6+(skoMC1 (-1))))+(skoSC1 ((skoMC1 skoMC1 skoMC1 (1/4))+(skoSC1 skoSC1 ((skoMC1 skoMC1 skoMC1 (-1/360))+(skoSC1 skoSC1 ((skoMC1 skoMC1 skoMC1 (1/20160))+(skoSC1 skoSC1 ((skoMC1 skoMC1 skoMC1 (-1/1814400))+(skoSC1 skoSC1 skoMC1 skoMC1 skoMC1 (1/239500800))))))))))))))))]/\[[(skoSC1 skoMC1 skoMC1 skoMC1 (-1))<=(skoMC1 skoMC1 skoMC1)]/\[[(skoMC1 skoMC1 skoMC1 (-2+(skoMC1 (-5))))<(skoSC1 ((skoMC1 skoMC1 skoMC1 (-1+(skoMC1 (3))))+(skoSC1 ((skoMC1 skoMC1 skoMC1 (-2+(skoMC1 (-3))))+(skoSC1 ((skoMC1 skoMC1 skoMC1 skoMC1 (-1))+(skoSC1 skoMC1 skoMC1 skoMC1 (1/12))))))))]/\[[(skoMC1 skoMC1 skoMC1 (-2+(skoMC1 (-5))))<(skoSC1 ((skoMC1 skoMC1 skoMC1 (-1+(skoMC1 (3))))+(skoSC1 ((skoMC1 skoMC1 skoMC1 (-2+(skoMC1 (-3))))+(skoSC1 ((skoMC1 skoMC1 skoMC1 (1/6+(skoMC1 (-1))))+(skoSC1 skoMC1 skoMC1 skoMC1 (1/4))))))))]/\[[(skoMC1 skoMC1 skoMC1 (-1))<(skoSC1 skoMC1 skoMC1 skoMC1)]/\[[(skoMC1 skoMC1 skoMC1 (-2))<=0]/\[[0<(skoMC1 skoMC1 skoMC1 (2))]/\[[(skoMC1 (-2+(skoMC1 (-5))))<(skoSC1 ((skoMC1 (-1+(skoMC1 (3))))+(skoSC1 ((skoMC1 (-2+(skoMC1 (-3))))+(skoSC1 ((skoMC1 (1/6+(skoMC1 (-1))))+(skoSC1 skoMC1 (1/4))))))))]/\[[(skoMC1 (-2+(skoMC1 (-5))))<(skoSC1 ((skoMC1 (-1+(skoMC1 (3))))+(skoSC1 ((skoMC1 (-2+(skoMC1 (-3))))+(skoSC1 ((skoMC1 skoMC1 (-1))+(skoSC1 skoMC1 (1/12))))))))]/\[[(skoSC1 ((skoMC1 (1+(skoMC1 (-3))))+(skoSC1 ((skoMC1 (2+(skoMC1 (3))))+(skoSC1 ((skoMC1 (-1/6+skoMC1))+(skoSC1 skoMC1 (-1/4))))))))<=(skoMC1 (2+(skoMC1 (5))))]/\[[(skoSC1 ((skoMC1 (1+(skoMC1 (-3))))+(skoSC1 ((skoMC1 (2+(skoMC1 (3))))+(skoSC1 ((skoMC1 skoMC1)+(skoSC1 skoMC1 (-1/12))))))))<=(skoMC1 (2+(skoMC1 (5))))]/\[[(skoSC1 skoMC1 (-1))<=skoMC1]/\[[(skoMC1 (-1))<(skoSC1 skoMC1)]/\[[0<=skoMC1]/\[[0<skoMC1]/\[[0<=skoSC1]/\[[2<=skoMC1]/\[[skoSC1<=5/4]/\[[(skoMC1 skoMC1 skoMC1 (-2))<(skoSC1 skoMC1 skoMC1 skoMC1 (2))]/\[[(skoSC1 skoMC1 skoMC1 skoMC1 (-2))<=(skoMC1 skoMC1 skoMC1 (2))]/\[(skoSC1 ((skoMC1 skoMC1 skoMC1 (-2+(skoMC1 (-12))))+(skoSC1 ((skoMC1 skoMC1 skoMC1 (1+(skoMC1 (-6))))+(skoSC1 ((skoMC1 skoMC1 skoMC1)+(skoSC1 ((skoMC1 skoMC1 skoMC1 (-1/12))+(skoSC1 skoMC1 skoMC1 skoMC1 (-1/12))))))))))<=(skoMC1 skoMC1 skoMC1 (2+(skoMC1 (6))))]]]]]]]]]]]]]]]]]]]]]].

% In SMTLib2 format:
(declare-fun skoSC1 () Real) (declare-fun skoMC1 () Real) (assert (and (> (* skoMC1 (* skoMC1 (* skoMC1 2.))) 0.) (and (> (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (+ (- 1.) (* skoMC1 3.))))) (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (+ (- 2.) (* skoMC1 (- 3.)))))) (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (+ (/ 1. 6.) (* skoMC1 (- 1.)))))) (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (/ 1. 4.)))) (* skoSC1 (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (/ (- 1.) 360.)))) (* skoSC1 (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (/ 1. 20160.)))) (* skoSC1 (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (/ (- 1.) 1814400.)))) (* skoSC1 (* skoSC1 (* skoMC1 (* skoMC1 (* skoMC1 (/ 1. 239500800.))))))))))))))))))))))) (* skoMC1 (* skoMC1 (* skoMC1 (+ (- 2.) (* skoMC1 (- 5.))))))) (and (<= (* skoSC1 (* skoMC1 (* skoMC1 (* skoMC1 (- 1.))))) (* skoMC1 (* skoMC1 skoMC1))) (and (> (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (+ (- 1.) (* skoMC1 3.))))) (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (+ (- 2.) (* skoMC1 (- 3.)))))) (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (* skoMC1 (- 1.))))) (* skoSC1 (* skoMC1 (* skoMC1 (* skoMC1 (/ 1. 12.))))))))))) (* skoMC1 (* skoMC1 (* skoMC1 (+ (- 2.) (* skoMC1 (- 5.))))))) (and (> (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (+ (- 1.) (* skoMC1 3.))))) (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (+ (- 2.) (* skoMC1 (- 3.)))))) (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (+ (/ 1. 6.) (* skoMC1 (- 1.)))))) (* skoSC1 (* skoMC1 (* skoMC1 (* skoMC1 (/ 1. 4.))))))))))) (* skoMC1 (* skoMC1 (* skoMC1 (+ (- 2.) (* skoMC1 (- 5.))))))) (and (> (* skoSC1 (* skoMC1 (* skoMC1 skoMC1))) (* skoMC1 (* skoMC1 (* skoMC1 (- 1.))))) (and (<= (* skoMC1 (* skoMC1 (* skoMC1 (- 2.)))) 0.) (and (> (* skoMC1 (* skoMC1 (* skoMC1 2.))) 0.) (and (> (* skoSC1 (+ (* skoMC1 (+ (- 1.) (* skoMC1 3.))) (* skoSC1 (+ (* skoMC1 (+ (- 2.) (* skoMC1 (- 3.)))) (* skoSC1 (+ (* skoMC1 (+ (/ 1. 6.) (* skoMC1 (- 1.)))) (* skoSC1 (* skoMC1 (/ 1. 4.))))))))) (* skoMC1 (+ (- 2.) (* skoMC1 (- 5.))))) (and (> (* skoSC1 (+ (* skoMC1 (+ (- 1.) (* skoMC1 3.))) (* skoSC1 (+ (* skoMC1 (+ (- 2.) (* skoMC1 (- 3.)))) (* skoSC1 (+ (* skoMC1 (* skoMC1 (- 1.))) (* skoSC1 (* skoMC1 (/ 1. 12.))))))))) (* skoMC1 (+ (- 2.) (* skoMC1 (- 5.))))) (and (<= (* skoSC1 (+ (* skoMC1 (+ 1. (* skoMC1 (- 3.)))) (* skoSC1 (+ (* skoMC1 (+ 2. (* skoMC1 3.))) (* skoSC1 (+ (* skoMC1 (+ (/ (- 1.) 6.) skoMC1)) (* skoSC1 (* skoMC1 (/ (- 1.) 4.))))))))) (* skoMC1 (+ 2. (* skoMC1 5.)))) (and (<= (* skoSC1 (+ (* skoMC1 (+ 1. (* skoMC1 (- 3.)))) (* skoSC1 (+ (* skoMC1 (+ 2. (* skoMC1 3.))) (* skoSC1 (+ (* skoMC1 skoMC1) (* skoSC1 (* skoMC1 (/ (- 1.) 12.))))))))) (* skoMC1 (+ 2. (* skoMC1 5.)))) (and (<= (* skoSC1 (* skoMC1 (- 1.))) skoMC1) (and (> (* skoSC1 skoMC1) (* skoMC1 (- 1.))) (and (<= 0. skoMC1) (and (> skoMC1 0.) (and (<= 0. skoSC1) (and (<= 2. skoMC1) (and (<= skoSC1 (/ 5. 4.)) (and (> (* skoSC1 (* skoMC1 (* skoMC1 (* skoMC1 2.)))) (* skoMC1 (* skoMC1 (* skoMC1 (- 2.))))) (and (<= (* skoSC1 (* skoMC1 (* skoMC1 (* skoMC1 (- 2.))))) (* skoMC1 (* skoMC1 (* skoMC1 2.)))) (<= (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (+ (- 2.) (* skoMC1 (- 12.)))))) (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (+ 1. (* skoMC1 (- 6.)))))) (* skoSC1 (+ (* skoMC1 (* skoMC1 skoMC1)) (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (/ (- 1.) 12.)))) (* skoSC1 (* skoMC1 (* skoMC1 (* skoMC1 (/ (- 1.) 12.))))))))))))) (* skoMC1 (* skoMC1 (* skoMC1 (+ 2. (* skoMC1 6.))))))))))))))))))))))))))))

% In GRF format:
(sequent " MetiTarski formula " (antecedent (> (* skoMC1 (* skoMC1 (* skoMC1 2.))) 0.) (> (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (+ (- 1.) (* skoMC1 3.))))) (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (+ (- 2.) (* skoMC1 (- 3.)))))) (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (+ (/ 1. 6.) (* skoMC1 (- 1.)))))) (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (/ 1. 4.)))) (* skoSC1 (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (/ (- 1.) 360.)))) (* skoSC1 (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (/ 1. 20160.)))) (* skoSC1 (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (/ (- 1.) 1814400.)))) (* skoSC1 (* skoSC1 (* skoMC1 (* skoMC1 (* skoMC1 (/ 1. 239500800.))))))))))))))))))))))) (* skoMC1 (* skoMC1 (* skoMC1 (+ (- 2.) (* skoMC1 (- 5.))))))) (<= (* skoSC1 (* skoMC1 (* skoMC1 (* skoMC1 (- 1.))))) (* skoMC1 (* skoMC1 skoMC1))) (> (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (+ (- 1.) (* skoMC1 3.))))) (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (+ (- 2.) (* skoMC1 (- 3.)))))) (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (* skoMC1 (- 1.))))) (* skoSC1 (* skoMC1 (* skoMC1 (* skoMC1 (/ 1. 12.))))))))))) (* skoMC1 (* skoMC1 (* skoMC1 (+ (- 2.) (* skoMC1 (- 5.))))))) (> (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (+ (- 1.) (* skoMC1 3.))))) (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (+ (- 2.) (* skoMC1 (- 3.)))))) (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (+ (/ 1. 6.) (* skoMC1 (- 1.)))))) (* skoSC1 (* skoMC1 (* skoMC1 (* skoMC1 (/ 1. 4.))))))))))) (* skoMC1 (* skoMC1 (* skoMC1 (+ (- 2.) (* skoMC1 (- 5.))))))) (> (* skoSC1 (* skoMC1 (* skoMC1 skoMC1))) (* skoMC1 (* skoMC1 (* skoMC1 (- 1.))))) (<= (* skoMC1 (* skoMC1 (* skoMC1 (- 2.)))) 0.) (> (* skoMC1 (* skoMC1 (* skoMC1 2.))) 0.) (> (* skoSC1 (+ (* skoMC1 (+ (- 1.) (* skoMC1 3.))) (* skoSC1 (+ (* skoMC1 (+ (- 2.) (* skoMC1 (- 3.)))) (* skoSC1 (+ (* skoMC1 (+ (/ 1. 6.) (* skoMC1 (- 1.)))) (* skoSC1 (* skoMC1 (/ 1. 4.))))))))) (* skoMC1 (+ (- 2.) (* skoMC1 (- 5.))))) (> (* skoSC1 (+ (* skoMC1 (+ (- 1.) (* skoMC1 3.))) (* skoSC1 (+ (* skoMC1 (+ (- 2.) (* skoMC1 (- 3.)))) (* skoSC1 (+ (* skoMC1 (* skoMC1 (- 1.))) (* skoSC1 (* skoMC1 (/ 1. 12.))))))))) (* skoMC1 (+ (- 2.) (* skoMC1 (- 5.))))) (<= (* skoSC1 (+ (* skoMC1 (+ 1. (* skoMC1 (- 3.)))) (* skoSC1 (+ (* skoMC1 (+ 2. (* skoMC1 3.))) (* skoSC1 (+ (* skoMC1 (+ (/ (- 1.) 6.) skoMC1)) (* skoSC1 (* skoMC1 (/ (- 1.) 4.))))))))) (* skoMC1 (+ 2. (* skoMC1 5.)))) (<= (* skoSC1 (+ (* skoMC1 (+ 1. (* skoMC1 (- 3.)))) (* skoSC1 (+ (* skoMC1 (+ 2. (* skoMC1 3.))) (* skoSC1 (+ (* skoMC1 skoMC1) (* skoSC1 (* skoMC1 (/ (- 1.) 12.))))))))) (* skoMC1 (+ 2. (* skoMC1 5.)))) (<= (* skoSC1 (* skoMC1 (- 1.))) skoMC1) (> (* skoSC1 skoMC1) (* skoMC1 (- 1.))) (<= 0. skoMC1) (> skoMC1 0.) (<= 0. skoSC1) (<= 2. skoMC1) (<= skoSC1 (/ 5. 4.)) (> (* skoSC1 (* skoMC1 (* skoMC1 (* skoMC1 2.)))) (* skoMC1 (* skoMC1 (* skoMC1 (- 2.))))) (<= (* skoSC1 (* skoMC1 (* skoMC1 (* skoMC1 (- 2.))))) (* skoMC1 (* skoMC1 (* skoMC1 2.))))) (succedent (> (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (+ (- 2.) (* skoMC1 (- 12.)))))) (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (+ 1. (* skoMC1 (- 6.)))))) (* skoSC1 (+ (* skoMC1 (* skoMC1 skoMC1)) (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (/ (- 1.) 12.)))) (* skoSC1 (* skoMC1 (* skoMC1 (* skoMC1 (/ (- 1.) 12.))))))))))))) (* skoMC1 (* skoMC1 (* skoMC1 (+ 2. (* skoMC1 6.))))))))
-----[end problem]-----

-----[begin problem]-----
% In Mathematica format:
Timing[Resolve[Exists[{skoSC1,skoMC1}, And[skoMC1*skoMC1*skoMC1*2<=0,skoSC1*(skoMC1*skoMC1*skoMC1*(-1+skoMC1*3)+skoSC1*(skoMC1*skoMC1*skoMC1*(-2+skoMC1*-3)+skoSC1*(skoMC1*skoMC1*skoMC1*((1/6)+skoMC1*-1)+skoSC1*(skoMC1*skoMC1*skoMC1*(1/4)+skoSC1*skoSC1*(skoMC1*skoMC1*skoMC1*(-1/360)+skoSC1*skoSC1*(skoMC1*skoMC1*skoMC1*(1/20160)+skoSC1*skoSC1*(skoMC1*skoMC1*skoMC1*(-1/1814400)+skoSC1*skoSC1*skoMC1*skoMC1*skoMC1*(1/239500800))))))))<=skoMC1*skoMC1*skoMC1*(-2+skoMC1*-5),skoSC1*skoMC1*skoMC1*skoMC1*-1<=skoMC1*skoMC1*skoMC1,skoSC1*(skoMC1*skoMC1*skoMC1*(-1+skoMC1*3)+skoSC1*(skoMC1*skoMC1*skoMC1*(-2+skoMC1*-3)+skoSC1*(skoMC1*skoMC1*skoMC1*skoMC1*-1+skoSC1*skoMC1*skoMC1*skoMC1*(1/12))))>skoMC1*skoMC1*skoMC1*(-2+skoMC1*-5),skoSC1*(skoMC1*skoMC1*skoMC1*(-1+skoMC1*3)+skoSC1*(skoMC1*skoMC1*skoMC1*(-2+skoMC1*-3)+skoSC1*(skoMC1*skoMC1*skoMC1*((1/6)+skoMC1*-1)+skoSC1*skoMC1*skoMC1*skoMC1*(1/4))))>skoMC1*skoMC1*skoMC1*(-2+skoMC1*-5),skoSC1*skoMC1*skoMC1*skoMC1>skoMC1*skoMC1*skoMC1*-1,skoMC1*skoMC1*skoMC1*-2<=0,skoMC1*skoMC1*skoMC1*2>0,skoSC1*(skoMC1*(-1+skoMC1*3)+skoSC1*(skoMC1*(-2+skoMC1*-3)+skoSC1*(skoMC1*((1/6)+skoMC1*-1)+skoSC1*skoMC1*(1/4))))>skoMC1*(-2+skoMC1*-5),skoSC1*(skoMC1*(-1+skoMC1*3)+skoSC1*(skoMC1*(-2+skoMC1*-3)+skoSC1*(skoMC1*skoMC1*-1+skoSC1*skoMC1*(1/12))))>skoMC1*(-2+skoMC1*-5),skoSC1*(skoMC1*(1+skoMC1*-3)+skoSC1*(skoMC1*(2+skoMC1*3)+skoSC1*(skoMC1*((-1/6)+skoMC1)+skoSC1*skoMC1*(-1/4))))<=skoMC1*(2+skoMC1*5),skoSC1*(skoMC1*(1+skoMC1*-3)+skoSC1*(skoMC1*(2+skoMC1*3)+skoSC1*(skoMC1*skoMC1+skoSC1*skoMC1*(-1/12))))<=skoMC1*(2+skoMC1*5),skoSC1*skoMC1*-1<=skoMC1,skoSC1*skoMC1>skoMC1*-1,0<=skoMC1,skoMC1>0,0<=skoSC1,2<=skoMC1,skoSC1<=(5/4),skoSC1*skoMC1*skoMC1*skoMC1*2>skoMC1*skoMC1*skoMC1*-2,skoSC1*skoMC1*skoMC1*skoMC1*-2<=skoMC1*skoMC1*skoMC1*2,skoSC1*(skoMC1*skoMC1*skoMC1*(-2+skoMC1*-12)+skoSC1*(skoMC1*skoMC1*skoMC1*(1+skoMC1*-6)+skoSC1*(skoMC1*skoMC1*skoMC1+skoSC1*(skoMC1*skoMC1*skoMC1*(-1/12)+skoSC1*skoMC1*skoMC1*skoMC1*(-1/12)))))<=skoMC1*skoMC1*skoMC1*(2+skoMC1*6)]], Reals]]

% In QepcadB format:
(E skoSC1) (E skoMC1) [[(skoMC1 skoMC1 skoMC1 (2))<=0]/\[[(skoSC1 ((skoMC1 skoMC1 skoMC1 (-1+(skoMC1 (3))))+(skoSC1 ((skoMC1 skoMC1 skoMC1 (-2+(skoMC1 (-3))))+(skoSC1 ((skoMC1 skoMC1 skoMC1 (1/6+(skoMC1 (-1))))+(skoSC1 ((skoMC1 skoMC1 skoMC1 (1/4))+(skoSC1 skoSC1 ((skoMC1 skoMC1 skoMC1 (-1/360))+(skoSC1 skoSC1 ((skoMC1 skoMC1 skoMC1 (1/20160))+(skoSC1 skoSC1 ((skoMC1 skoMC1 skoMC1 (-1/1814400))+(skoSC1 skoSC1 skoMC1 skoMC1 skoMC1 (1/239500800))))))))))))))))<=(skoMC1 skoMC1 skoMC1 (-2+(skoMC1 (-5))))]/\[[(skoSC1 skoMC1 skoMC1 skoMC1 (-1))<=(skoMC1 skoMC1 skoMC1)]/\[[(skoMC1 skoMC1 skoMC1 (-2+(skoMC1 (-5))))<(skoSC1 ((skoMC1 skoMC1 skoMC1 (-1+(skoMC1 (3))))+(skoSC1 ((skoMC1 skoMC1 skoMC1 (-2+(skoMC1 (-3))))+(skoSC1 ((skoMC1 skoMC1 skoMC1 skoMC1 (-1))+(skoSC1 skoMC1 skoMC1 skoMC1 (1/12))))))))]/\[[(skoMC1 skoMC1 skoMC1 (-2+(skoMC1 (-5))))<(skoSC1 ((skoMC1 skoMC1 skoMC1 (-1+(skoMC1 (3))))+(skoSC1 ((skoMC1 skoMC1 skoMC1 (-2+(skoMC1 (-3))))+(skoSC1 ((skoMC1 skoMC1 skoMC1 (1/6+(skoMC1 (-1))))+(skoSC1 skoMC1 skoMC1 skoMC1 (1/4))))))))]/\[[(skoMC1 skoMC1 skoMC1 (-1))<(skoSC1 skoMC1 skoMC1 skoMC1)]/\[[(skoMC1 skoMC1 skoMC1 (-2))<=0]/\[[0<(skoMC1 skoMC1 skoMC1 (2))]/\[[(skoMC1 (-2+(skoMC1 (-5))))<(skoSC1 ((skoMC1 (-1+(skoMC1 (3))))+(skoSC1 ((skoMC1 (-2+(skoMC1 (-3))))+(skoSC1 ((skoMC1 (1/6+(skoMC1 (-1))))+(skoSC1 skoMC1 (1/4))))))))]/\[[(skoMC1 (-2+(skoMC1 (-5))))<(skoSC1 ((skoMC1 (-1+(skoMC1 (3))))+(skoSC1 ((skoMC1 (-2+(skoMC1 (-3))))+(skoSC1 ((skoMC1 skoMC1 (-1))+(skoSC1 skoMC1 (1/12))))))))]/\[[(skoSC1 ((skoMC1 (1+(skoMC1 (-3))))+(skoSC1 ((skoMC1 (2+(skoMC1 (3))))+(skoSC1 ((skoMC1 (-1/6+skoMC1))+(skoSC1 skoMC1 (-1/4))))))))<=(skoMC1 (2+(skoMC1 (5))))]/\[[(skoSC1 ((skoMC1 (1+(skoMC1 (-3))))+(skoSC1 ((skoMC1 (2+(skoMC1 (3))))+(skoSC1 ((skoMC1 skoMC1)+(skoSC1 skoMC1 (-1/12))))))))<=(skoMC1 (2+(skoMC1 (5))))]/\[[(skoSC1 skoMC1 (-1))<=skoMC1]/\[[(skoMC1 (-1))<(skoSC1 skoMC1)]/\[[0<=skoMC1]/\[[0<skoMC1]/\[[0<=skoSC1]/\[[2<=skoMC1]/\[[skoSC1<=5/4]/\[[(skoMC1 skoMC1 skoMC1 (-2))<(skoSC1 skoMC1 skoMC1 skoMC1 (2))]/\[[(skoSC1 skoMC1 skoMC1 skoMC1 (-2))<=(skoMC1 skoMC1 skoMC1 (2))]/\[(skoSC1 ((skoMC1 skoMC1 skoMC1 (-2+(skoMC1 (-12))))+(skoSC1 ((skoMC1 skoMC1 skoMC1 (1+(skoMC1 (-6))))+(skoSC1 ((skoMC1 skoMC1 skoMC1)+(skoSC1 ((skoMC1 skoMC1 skoMC1 (-1/12))+(skoSC1 skoMC1 skoMC1 skoMC1 (-1/12))))))))))<=(skoMC1 skoMC1 skoMC1 (2+(skoMC1 (6))))]]]]]]]]]]]]]]]]]]]]]].

% In SMTLib2 format:
(declare-fun skoSC1 () Real) (declare-fun skoMC1 () Real) (assert (and (<= (* skoMC1 (* skoMC1 (* skoMC1 2.))) 0.) (and (<= (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (+ (- 1.) (* skoMC1 3.))))) (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (+ (- 2.) (* skoMC1 (- 3.)))))) (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (+ (/ 1. 6.) (* skoMC1 (- 1.)))))) (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (/ 1. 4.)))) (* skoSC1 (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (/ (- 1.) 360.)))) (* skoSC1 (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (/ 1. 20160.)))) (* skoSC1 (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (/ (- 1.) 1814400.)))) (* skoSC1 (* skoSC1 (* skoMC1 (* skoMC1 (* skoMC1 (/ 1. 239500800.))))))))))))))))))))))) (* skoMC1 (* skoMC1 (* skoMC1 (+ (- 2.) (* skoMC1 (- 5.))))))) (and (<= (* skoSC1 (* skoMC1 (* skoMC1 (* skoMC1 (- 1.))))) (* skoMC1 (* skoMC1 skoMC1))) (and (> (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (+ (- 1.) (* skoMC1 3.))))) (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (+ (- 2.) (* skoMC1 (- 3.)))))) (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (* skoMC1 (- 1.))))) (* skoSC1 (* skoMC1 (* skoMC1 (* skoMC1 (/ 1. 12.))))))))))) (* skoMC1 (* skoMC1 (* skoMC1 (+ (- 2.) (* skoMC1 (- 5.))))))) (and (> (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (+ (- 1.) (* skoMC1 3.))))) (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (+ (- 2.) (* skoMC1 (- 3.)))))) (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (+ (/ 1. 6.) (* skoMC1 (- 1.)))))) (* skoSC1 (* skoMC1 (* skoMC1 (* skoMC1 (/ 1. 4.))))))))))) (* skoMC1 (* skoMC1 (* skoMC1 (+ (- 2.) (* skoMC1 (- 5.))))))) (and (> (* skoSC1 (* skoMC1 (* skoMC1 skoMC1))) (* skoMC1 (* skoMC1 (* skoMC1 (- 1.))))) (and (<= (* skoMC1 (* skoMC1 (* skoMC1 (- 2.)))) 0.) (and (> (* skoMC1 (* skoMC1 (* skoMC1 2.))) 0.) (and (> (* skoSC1 (+ (* skoMC1 (+ (- 1.) (* skoMC1 3.))) (* skoSC1 (+ (* skoMC1 (+ (- 2.) (* skoMC1 (- 3.)))) (* skoSC1 (+ (* skoMC1 (+ (/ 1. 6.) (* skoMC1 (- 1.)))) (* skoSC1 (* skoMC1 (/ 1. 4.))))))))) (* skoMC1 (+ (- 2.) (* skoMC1 (- 5.))))) (and (> (* skoSC1 (+ (* skoMC1 (+ (- 1.) (* skoMC1 3.))) (* skoSC1 (+ (* skoMC1 (+ (- 2.) (* skoMC1 (- 3.)))) (* skoSC1 (+ (* skoMC1 (* skoMC1 (- 1.))) (* skoSC1 (* skoMC1 (/ 1. 12.))))))))) (* skoMC1 (+ (- 2.) (* skoMC1 (- 5.))))) (and (<= (* skoSC1 (+ (* skoMC1 (+ 1. (* skoMC1 (- 3.)))) (* skoSC1 (+ (* skoMC1 (+ 2. (* skoMC1 3.))) (* skoSC1 (+ (* skoMC1 (+ (/ (- 1.) 6.) skoMC1)) (* skoSC1 (* skoMC1 (/ (- 1.) 4.))))))))) (* skoMC1 (+ 2. (* skoMC1 5.)))) (and (<= (* skoSC1 (+ (* skoMC1 (+ 1. (* skoMC1 (- 3.)))) (* skoSC1 (+ (* skoMC1 (+ 2. (* skoMC1 3.))) (* skoSC1 (+ (* skoMC1 skoMC1) (* skoSC1 (* skoMC1 (/ (- 1.) 12.))))))))) (* skoMC1 (+ 2. (* skoMC1 5.)))) (and (<= (* skoSC1 (* skoMC1 (- 1.))) skoMC1) (and (> (* skoSC1 skoMC1) (* skoMC1 (- 1.))) (and (<= 0. skoMC1) (and (> skoMC1 0.) (and (<= 0. skoSC1) (and (<= 2. skoMC1) (and (<= skoSC1 (/ 5. 4.)) (and (> (* skoSC1 (* skoMC1 (* skoMC1 (* skoMC1 2.)))) (* skoMC1 (* skoMC1 (* skoMC1 (- 2.))))) (and (<= (* skoSC1 (* skoMC1 (* skoMC1 (* skoMC1 (- 2.))))) (* skoMC1 (* skoMC1 (* skoMC1 2.)))) (<= (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (+ (- 2.) (* skoMC1 (- 12.)))))) (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (+ 1. (* skoMC1 (- 6.)))))) (* skoSC1 (+ (* skoMC1 (* skoMC1 skoMC1)) (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (/ (- 1.) 12.)))) (* skoSC1 (* skoMC1 (* skoMC1 (* skoMC1 (/ (- 1.) 12.))))))))))))) (* skoMC1 (* skoMC1 (* skoMC1 (+ 2. (* skoMC1 6.))))))))))))))))))))))))))))

% In GRF format:
(sequent " MetiTarski formula " (antecedent (<= (* skoMC1 (* skoMC1 (* skoMC1 2.))) 0.) (<= (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (+ (- 1.) (* skoMC1 3.))))) (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (+ (- 2.) (* skoMC1 (- 3.)))))) (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (+ (/ 1. 6.) (* skoMC1 (- 1.)))))) (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (/ 1. 4.)))) (* skoSC1 (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (/ (- 1.) 360.)))) (* skoSC1 (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (/ 1. 20160.)))) (* skoSC1 (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (/ (- 1.) 1814400.)))) (* skoSC1 (* skoSC1 (* skoMC1 (* skoMC1 (* skoMC1 (/ 1. 239500800.))))))))))))))))))))))) (* skoMC1 (* skoMC1 (* skoMC1 (+ (- 2.) (* skoMC1 (- 5.))))))) (<= (* skoSC1 (* skoMC1 (* skoMC1 (* skoMC1 (- 1.))))) (* skoMC1 (* skoMC1 skoMC1))) (> (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (+ (- 1.) (* skoMC1 3.))))) (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (+ (- 2.) (* skoMC1 (- 3.)))))) (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (* skoMC1 (- 1.))))) (* skoSC1 (* skoMC1 (* skoMC1 (* skoMC1 (/ 1. 12.))))))))))) (* skoMC1 (* skoMC1 (* skoMC1 (+ (- 2.) (* skoMC1 (- 5.))))))) (> (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (+ (- 1.) (* skoMC1 3.))))) (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (+ (- 2.) (* skoMC1 (- 3.)))))) (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (+ (/ 1. 6.) (* skoMC1 (- 1.)))))) (* skoSC1 (* skoMC1 (* skoMC1 (* skoMC1 (/ 1. 4.))))))))))) (* skoMC1 (* skoMC1 (* skoMC1 (+ (- 2.) (* skoMC1 (- 5.))))))) (> (* skoSC1 (* skoMC1 (* skoMC1 skoMC1))) (* skoMC1 (* skoMC1 (* skoMC1 (- 1.))))) (<= (* skoMC1 (* skoMC1 (* skoMC1 (- 2.)))) 0.) (> (* skoMC1 (* skoMC1 (* skoMC1 2.))) 0.) (> (* skoSC1 (+ (* skoMC1 (+ (- 1.) (* skoMC1 3.))) (* skoSC1 (+ (* skoMC1 (+ (- 2.) (* skoMC1 (- 3.)))) (* skoSC1 (+ (* skoMC1 (+ (/ 1. 6.) (* skoMC1 (- 1.)))) (* skoSC1 (* skoMC1 (/ 1. 4.))))))))) (* skoMC1 (+ (- 2.) (* skoMC1 (- 5.))))) (> (* skoSC1 (+ (* skoMC1 (+ (- 1.) (* skoMC1 3.))) (* skoSC1 (+ (* skoMC1 (+ (- 2.) (* skoMC1 (- 3.)))) (* skoSC1 (+ (* skoMC1 (* skoMC1 (- 1.))) (* skoSC1 (* skoMC1 (/ 1. 12.))))))))) (* skoMC1 (+ (- 2.) (* skoMC1 (- 5.))))) (<= (* skoSC1 (+ (* skoMC1 (+ 1. (* skoMC1 (- 3.)))) (* skoSC1 (+ (* skoMC1 (+ 2. (* skoMC1 3.))) (* skoSC1 (+ (* skoMC1 (+ (/ (- 1.) 6.) skoMC1)) (* skoSC1 (* skoMC1 (/ (- 1.) 4.))))))))) (* skoMC1 (+ 2. (* skoMC1 5.)))) (<= (* skoSC1 (+ (* skoMC1 (+ 1. (* skoMC1 (- 3.)))) (* skoSC1 (+ (* skoMC1 (+ 2. (* skoMC1 3.))) (* skoSC1 (+ (* skoMC1 skoMC1) (* skoSC1 (* skoMC1 (/ (- 1.) 12.))))))))) (* skoMC1 (+ 2. (* skoMC1 5.)))) (<= (* skoSC1 (* skoMC1 (- 1.))) skoMC1) (> (* skoSC1 skoMC1) (* skoMC1 (- 1.))) (<= 0. skoMC1) (> skoMC1 0.) (<= 0. skoSC1) (<= 2. skoMC1) (<= skoSC1 (/ 5. 4.)) (> (* skoSC1 (* skoMC1 (* skoMC1 (* skoMC1 2.)))) (* skoMC1 (* skoMC1 (* skoMC1 (- 2.))))) (<= (* skoSC1 (* skoMC1 (* skoMC1 (* skoMC1 (- 2.))))) (* skoMC1 (* skoMC1 (* skoMC1 2.))))) (succedent (> (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (+ (- 2.) (* skoMC1 (- 12.)))))) (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (+ 1. (* skoMC1 (- 6.)))))) (* skoSC1 (+ (* skoMC1 (* skoMC1 skoMC1)) (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (/ (- 1.) 12.)))) (* skoSC1 (* skoMC1 (* skoMC1 (* skoMC1 (/ (- 1.) 12.))))))))))))) (* skoMC1 (* skoMC1 (* skoMC1 (+ 2. (* skoMC1 6.))))))))
-----[end problem]-----

-----[begin problem]-----
% In Mathematica format:
Timing[Resolve[Exists[{skoSC1,skoMC1}, And[skoSC1*(skoMC1*skoMC1*skoMC1*(-1+skoMC1*3)+skoSC1*(skoMC1*skoMC1*skoMC1*(-2+skoMC1*-3)+skoSC1*(skoMC1*skoMC1*skoMC1*skoMC1*-1+skoSC1*(skoMC1*skoMC1*skoMC1*(1/12)+skoSC1*skoSC1*(skoMC1*skoMC1*skoMC1*(-1/360)+skoSC1*skoSC1*(skoMC1*skoMC1*skoMC1*(1/20160)+skoSC1*skoSC1*(skoMC1*skoMC1*skoMC1*(-1/1814400)+skoSC1*skoSC1*skoMC1*skoMC1*skoMC1*(1/239500800))))))))>skoMC1*skoMC1*skoMC1*(-2+skoMC1*-5),skoSC1*skoMC1*skoMC1*skoMC1*-1<=skoMC1*skoMC1*skoMC1,skoSC1*(skoMC1*skoMC1*skoMC1*(-1+skoMC1*3)+skoSC1*(skoMC1*skoMC1*skoMC1*(-2+skoMC1*-3)+skoSC1*(skoMC1*skoMC1*skoMC1*skoMC1*-1+skoSC1*skoMC1*skoMC1*skoMC1*(1/12))))>skoMC1*skoMC1*skoMC1*(-2+skoMC1*-5),skoSC1*(skoMC1*skoMC1*skoMC1*(-1+skoMC1*3)+skoSC1*(skoMC1*skoMC1*skoMC1*(-2+skoMC1*-3)+skoSC1*(skoMC1*skoMC1*skoMC1*((1/6)+skoMC1*-1)+skoSC1*skoMC1*skoMC1*skoMC1*(1/4))))>skoMC1*skoMC1*skoMC1*(-2+skoMC1*-5),skoSC1*skoMC1*skoMC1*skoMC1>skoMC1*skoMC1*skoMC1*-1,skoMC1*skoMC1*skoMC1*-2<=0,skoMC1*skoMC1*skoMC1*2>0,skoSC1*(skoMC1*(-1+skoMC1*3)+skoSC1*(skoMC1*(-2+skoMC1*-3)+skoSC1*(skoMC1*((1/6)+skoMC1*-1)+skoSC1*skoMC1*(1/4))))>skoMC1*(-2+skoMC1*-5),skoSC1*(skoMC1*(-1+skoMC1*3)+skoSC1*(skoMC1*(-2+skoMC1*-3)+skoSC1*(skoMC1*skoMC1*-1+skoSC1*skoMC1*(1/12))))>skoMC1*(-2+skoMC1*-5),skoSC1*(skoMC1*(1+skoMC1*-3)+skoSC1*(skoMC1*(2+skoMC1*3)+skoSC1*(skoMC1*((-1/6)+skoMC1)+skoSC1*skoMC1*(-1/4))))<=skoMC1*(2+skoMC1*5),skoSC1*(skoMC1*(1+skoMC1*-3)+skoSC1*(skoMC1*(2+skoMC1*3)+skoSC1*(skoMC1*skoMC1+skoSC1*skoMC1*(-1/12))))<=skoMC1*(2+skoMC1*5),skoSC1*skoMC1*-1<=skoMC1,skoSC1*skoMC1>skoMC1*-1,0<=skoMC1,skoMC1>0,0<=skoSC1,2<=skoMC1,skoSC1<=(5/4),skoSC1*skoMC1*skoMC1*skoMC1*2>skoMC1*skoMC1*skoMC1*-2,skoSC1*skoMC1*skoMC1*skoMC1*-2<=skoMC1*skoMC1*skoMC1*2,skoSC1*(skoMC1*skoMC1*skoMC1*(-2+skoMC1*-12)+skoSC1*(skoMC1*skoMC1*skoMC1*(1+skoMC1*-6)+skoSC1*(skoMC1*skoMC1*skoMC1+skoSC1*(skoMC1*skoMC1*skoMC1*(-1/12)+skoSC1*skoMC1*skoMC1*skoMC1*(-1/12)))))<=skoMC1*skoMC1*skoMC1*(2+skoMC1*6)]], Reals]]

% In QepcadB format:
(E skoSC1) (E skoMC1) [[(skoMC1 skoMC1 skoMC1 (-2+(skoMC1 (-5))))<(skoSC1 ((skoMC1 skoMC1 skoMC1 (-1+(skoMC1 (3))))+(skoSC1 ((skoMC1 skoMC1 skoMC1 (-2+(skoMC1 (-3))))+(skoSC1 ((skoMC1 skoMC1 skoMC1 skoMC1 (-1))+(skoSC1 ((skoMC1 skoMC1 skoMC1 (1/12))+(skoSC1 skoSC1 ((skoMC1 skoMC1 skoMC1 (-1/360))+(skoSC1 skoSC1 ((skoMC1 skoMC1 skoMC1 (1/20160))+(skoSC1 skoSC1 ((skoMC1 skoMC1 skoMC1 (-1/1814400))+(skoSC1 skoSC1 skoMC1 skoMC1 skoMC1 (1/239500800))))))))))))))))]/\[[(skoSC1 skoMC1 skoMC1 skoMC1 (-1))<=(skoMC1 skoMC1 skoMC1)]/\[[(skoMC1 skoMC1 skoMC1 (-2+(skoMC1 (-5))))<(skoSC1 ((skoMC1 skoMC1 skoMC1 (-1+(skoMC1 (3))))+(skoSC1 ((skoMC1 skoMC1 skoMC1 (-2+(skoMC1 (-3))))+(skoSC1 ((skoMC1 skoMC1 skoMC1 skoMC1 (-1))+(skoSC1 skoMC1 skoMC1 skoMC1 (1/12))))))))]/\[[(skoMC1 skoMC1 skoMC1 (-2+(skoMC1 (-5))))<(skoSC1 ((skoMC1 skoMC1 skoMC1 (-1+(skoMC1 (3))))+(skoSC1 ((skoMC1 skoMC1 skoMC1 (-2+(skoMC1 (-3))))+(skoSC1 ((skoMC1 skoMC1 skoMC1 (1/6+(skoMC1 (-1))))+(skoSC1 skoMC1 skoMC1 skoMC1 (1/4))))))))]/\[[(skoMC1 skoMC1 skoMC1 (-1))<(skoSC1 skoMC1 skoMC1 skoMC1)]/\[[(skoMC1 skoMC1 skoMC1 (-2))<=0]/\[[0<(skoMC1 skoMC1 skoMC1 (2))]/\[[(skoMC1 (-2+(skoMC1 (-5))))<(skoSC1 ((skoMC1 (-1+(skoMC1 (3))))+(skoSC1 ((skoMC1 (-2+(skoMC1 (-3))))+(skoSC1 ((skoMC1 (1/6+(skoMC1 (-1))))+(skoSC1 skoMC1 (1/4))))))))]/\[[(skoMC1 (-2+(skoMC1 (-5))))<(skoSC1 ((skoMC1 (-1+(skoMC1 (3))))+(skoSC1 ((skoMC1 (-2+(skoMC1 (-3))))+(skoSC1 ((skoMC1 skoMC1 (-1))+(skoSC1 skoMC1 (1/12))))))))]/\[[(skoSC1 ((skoMC1 (1+(skoMC1 (-3))))+(skoSC1 ((skoMC1 (2+(skoMC1 (3))))+(skoSC1 ((skoMC1 (-1/6+skoMC1))+(skoSC1 skoMC1 (-1/4))))))))<=(skoMC1 (2+(skoMC1 (5))))]/\[[(skoSC1 ((skoMC1 (1+(skoMC1 (-3))))+(skoSC1 ((skoMC1 (2+(skoMC1 (3))))+(skoSC1 ((skoMC1 skoMC1)+(skoSC1 skoMC1 (-1/12))))))))<=(skoMC1 (2+(skoMC1 (5))))]/\[[(skoSC1 skoMC1 (-1))<=skoMC1]/\[[(skoMC1 (-1))<(skoSC1 skoMC1)]/\[[0<=skoMC1]/\[[0<skoMC1]/\[[0<=skoSC1]/\[[2<=skoMC1]/\[[skoSC1<=5/4]/\[[(skoMC1 skoMC1 skoMC1 (-2))<(skoSC1 skoMC1 skoMC1 skoMC1 (2))]/\[[(skoSC1 skoMC1 skoMC1 skoMC1 (-2))<=(skoMC1 skoMC1 skoMC1 (2))]/\[(skoSC1 ((skoMC1 skoMC1 skoMC1 (-2+(skoMC1 (-12))))+(skoSC1 ((skoMC1 skoMC1 skoMC1 (1+(skoMC1 (-6))))+(skoSC1 ((skoMC1 skoMC1 skoMC1)+(skoSC1 ((skoMC1 skoMC1 skoMC1 (-1/12))+(skoSC1 skoMC1 skoMC1 skoMC1 (-1/12))))))))))<=(skoMC1 skoMC1 skoMC1 (2+(skoMC1 (6))))]]]]]]]]]]]]]]]]]]]]].

% In SMTLib2 format:
(declare-fun skoSC1 () Real) (declare-fun skoMC1 () Real) (assert (and (> (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (+ (- 1.) (* skoMC1 3.))))) (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (+ (- 2.) (* skoMC1 (- 3.)))))) (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (* skoMC1 (- 1.))))) (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (/ 1. 12.)))) (* skoSC1 (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (/ (- 1.) 360.)))) (* skoSC1 (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (/ 1. 20160.)))) (* skoSC1 (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (/ (- 1.) 1814400.)))) (* skoSC1 (* skoSC1 (* skoMC1 (* skoMC1 (* skoMC1 (/ 1. 239500800.))))))))))))))))))))))) (* skoMC1 (* skoMC1 (* skoMC1 (+ (- 2.) (* skoMC1 (- 5.))))))) (and (<= (* skoSC1 (* skoMC1 (* skoMC1 (* skoMC1 (- 1.))))) (* skoMC1 (* skoMC1 skoMC1))) (and (> (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (+ (- 1.) (* skoMC1 3.))))) (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (+ (- 2.) (* skoMC1 (- 3.)))))) (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (* skoMC1 (- 1.))))) (* skoSC1 (* skoMC1 (* skoMC1 (* skoMC1 (/ 1. 12.))))))))))) (* skoMC1 (* skoMC1 (* skoMC1 (+ (- 2.) (* skoMC1 (- 5.))))))) (and (> (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (+ (- 1.) (* skoMC1 3.))))) (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (+ (- 2.) (* skoMC1 (- 3.)))))) (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (+ (/ 1. 6.) (* skoMC1 (- 1.)))))) (* skoSC1 (* skoMC1 (* skoMC1 (* skoMC1 (/ 1. 4.))))))))))) (* skoMC1 (* skoMC1 (* skoMC1 (+ (- 2.) (* skoMC1 (- 5.))))))) (and (> (* skoSC1 (* skoMC1 (* skoMC1 skoMC1))) (* skoMC1 (* skoMC1 (* skoMC1 (- 1.))))) (and (<= (* skoMC1 (* skoMC1 (* skoMC1 (- 2.)))) 0.) (and (> (* skoMC1 (* skoMC1 (* skoMC1 2.))) 0.) (and (> (* skoSC1 (+ (* skoMC1 (+ (- 1.) (* skoMC1 3.))) (* skoSC1 (+ (* skoMC1 (+ (- 2.) (* skoMC1 (- 3.)))) (* skoSC1 (+ (* skoMC1 (+ (/ 1. 6.) (* skoMC1 (- 1.)))) (* skoSC1 (* skoMC1 (/ 1. 4.))))))))) (* skoMC1 (+ (- 2.) (* skoMC1 (- 5.))))) (and (> (* skoSC1 (+ (* skoMC1 (+ (- 1.) (* skoMC1 3.))) (* skoSC1 (+ (* skoMC1 (+ (- 2.) (* skoMC1 (- 3.)))) (* skoSC1 (+ (* skoMC1 (* skoMC1 (- 1.))) (* skoSC1 (* skoMC1 (/ 1. 12.))))))))) (* skoMC1 (+ (- 2.) (* skoMC1 (- 5.))))) (and (<= (* skoSC1 (+ (* skoMC1 (+ 1. (* skoMC1 (- 3.)))) (* skoSC1 (+ (* skoMC1 (+ 2. (* skoMC1 3.))) (* skoSC1 (+ (* skoMC1 (+ (/ (- 1.) 6.) skoMC1)) (* skoSC1 (* skoMC1 (/ (- 1.) 4.))))))))) (* skoMC1 (+ 2. (* skoMC1 5.)))) (and (<= (* skoSC1 (+ (* skoMC1 (+ 1. (* skoMC1 (- 3.)))) (* skoSC1 (+ (* skoMC1 (+ 2. (* skoMC1 3.))) (* skoSC1 (+ (* skoMC1 skoMC1) (* skoSC1 (* skoMC1 (/ (- 1.) 12.))))))))) (* skoMC1 (+ 2. (* skoMC1 5.)))) (and (<= (* skoSC1 (* skoMC1 (- 1.))) skoMC1) (and (> (* skoSC1 skoMC1) (* skoMC1 (- 1.))) (and (<= 0. skoMC1) (and (> skoMC1 0.) (and (<= 0. skoSC1) (and (<= 2. skoMC1) (and (<= skoSC1 (/ 5. 4.)) (and (> (* skoSC1 (* skoMC1 (* skoMC1 (* skoMC1 2.)))) (* skoMC1 (* skoMC1 (* skoMC1 (- 2.))))) (and (<= (* skoSC1 (* skoMC1 (* skoMC1 (* skoMC1 (- 2.))))) (* skoMC1 (* skoMC1 (* skoMC1 2.)))) (<= (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (+ (- 2.) (* skoMC1 (- 12.)))))) (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (+ 1. (* skoMC1 (- 6.)))))) (* skoSC1 (+ (* skoMC1 (* skoMC1 skoMC1)) (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (/ (- 1.) 12.)))) (* skoSC1 (* skoMC1 (* skoMC1 (* skoMC1 (/ (- 1.) 12.))))))))))))) (* skoMC1 (* skoMC1 (* skoMC1 (+ 2. (* skoMC1 6.)))))))))))))))))))))))))))

% In GRF format:
(sequent " MetiTarski formula " (antecedent (> (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (+ (- 1.) (* skoMC1 3.))))) (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (+ (- 2.) (* skoMC1 (- 3.)))))) (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (* skoMC1 (- 1.))))) (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (/ 1. 12.)))) (* skoSC1 (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (/ (- 1.) 360.)))) (* skoSC1 (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (/ 1. 20160.)))) (* skoSC1 (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (/ (- 1.) 1814400.)))) (* skoSC1 (* skoSC1 (* skoMC1 (* skoMC1 (* skoMC1 (/ 1. 239500800.))))))))))))))))))))))) (* skoMC1 (* skoMC1 (* skoMC1 (+ (- 2.) (* skoMC1 (- 5.))))))) (<= (* skoSC1 (* skoMC1 (* skoMC1 (* skoMC1 (- 1.))))) (* skoMC1 (* skoMC1 skoMC1))) (> (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (+ (- 1.) (* skoMC1 3.))))) (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (+ (- 2.) (* skoMC1 (- 3.)))))) (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (* skoMC1 (- 1.))))) (* skoSC1 (* skoMC1 (* skoMC1 (* skoMC1 (/ 1. 12.))))))))))) (* skoMC1 (* skoMC1 (* skoMC1 (+ (- 2.) (* skoMC1 (- 5.))))))) (> (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (+ (- 1.) (* skoMC1 3.))))) (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (+ (- 2.) (* skoMC1 (- 3.)))))) (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (+ (/ 1. 6.) (* skoMC1 (- 1.)))))) (* skoSC1 (* skoMC1 (* skoMC1 (* skoMC1 (/ 1. 4.))))))))))) (* skoMC1 (* skoMC1 (* skoMC1 (+ (- 2.) (* skoMC1 (- 5.))))))) (> (* skoSC1 (* skoMC1 (* skoMC1 skoMC1))) (* skoMC1 (* skoMC1 (* skoMC1 (- 1.))))) (<= (* skoMC1 (* skoMC1 (* skoMC1 (- 2.)))) 0.) (> (* skoMC1 (* skoMC1 (* skoMC1 2.))) 0.) (> (* skoSC1 (+ (* skoMC1 (+ (- 1.) (* skoMC1 3.))) (* skoSC1 (+ (* skoMC1 (+ (- 2.) (* skoMC1 (- 3.)))) (* skoSC1 (+ (* skoMC1 (+ (/ 1. 6.) (* skoMC1 (- 1.)))) (* skoSC1 (* skoMC1 (/ 1. 4.))))))))) (* skoMC1 (+ (- 2.) (* skoMC1 (- 5.))))) (> (* skoSC1 (+ (* skoMC1 (+ (- 1.) (* skoMC1 3.))) (* skoSC1 (+ (* skoMC1 (+ (- 2.) (* skoMC1 (- 3.)))) (* skoSC1 (+ (* skoMC1 (* skoMC1 (- 1.))) (* skoSC1 (* skoMC1 (/ 1. 12.))))))))) (* skoMC1 (+ (- 2.) (* skoMC1 (- 5.))))) (<= (* skoSC1 (+ (* skoMC1 (+ 1. (* skoMC1 (- 3.)))) (* skoSC1 (+ (* skoMC1 (+ 2. (* skoMC1 3.))) (* skoSC1 (+ (* skoMC1 (+ (/ (- 1.) 6.) skoMC1)) (* skoSC1 (* skoMC1 (/ (- 1.) 4.))))))))) (* skoMC1 (+ 2. (* skoMC1 5.)))) (<= (* skoSC1 (+ (* skoMC1 (+ 1. (* skoMC1 (- 3.)))) (* skoSC1 (+ (* skoMC1 (+ 2. (* skoMC1 3.))) (* skoSC1 (+ (* skoMC1 skoMC1) (* skoSC1 (* skoMC1 (/ (- 1.) 12.))))))))) (* skoMC1 (+ 2. (* skoMC1 5.)))) (<= (* skoSC1 (* skoMC1 (- 1.))) skoMC1) (> (* skoSC1 skoMC1) (* skoMC1 (- 1.))) (<= 0. skoMC1) (> skoMC1 0.) (<= 0. skoSC1) (<= 2. skoMC1) (<= skoSC1 (/ 5. 4.)) (> (* skoSC1 (* skoMC1 (* skoMC1 (* skoMC1 2.)))) (* skoMC1 (* skoMC1 (* skoMC1 (- 2.))))) (<= (* skoSC1 (* skoMC1 (* skoMC1 (* skoMC1 (- 2.))))) (* skoMC1 (* skoMC1 (* skoMC1 2.))))) (succedent (> (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (+ (- 2.) (* skoMC1 (- 12.)))))) (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (+ 1. (* skoMC1 (- 6.)))))) (* skoSC1 (+ (* skoMC1 (* skoMC1 skoMC1)) (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (/ (- 1.) 12.)))) (* skoSC1 (* skoMC1 (* skoMC1 (* skoMC1 (/ (- 1.) 12.))))))))))))) (* skoMC1 (* skoMC1 (* skoMC1 (+ 2. (* skoMC1 6.))))))))
-----[end problem]-----

-----[begin problem]-----
% In Mathematica format:
Timing[Resolve[Exists[{skoSC1,skoMC1}, And[skoSC1*(skoMC1*skoMC1*skoMC1*(-1+skoMC1*3)+skoSC1*(skoMC1*skoMC1*skoMC1*(-2+skoMC1*-3)+skoSC1*(skoMC1*skoMC1*skoMC1*((1/6)+skoMC1*-1)+skoSC1*(skoMC1*skoMC1*skoMC1*(1/4)+skoSC1*skoSC1*(skoMC1*skoMC1*skoMC1*(-1/360)+skoSC1*skoSC1*(skoMC1*skoMC1*skoMC1*(1/20160)+skoSC1*skoSC1*(skoMC1*skoMC1*skoMC1*(-1/1814400)+skoSC1*skoSC1*skoMC1*skoMC1*skoMC1*(1/239500800))))))))>skoMC1*skoMC1*skoMC1*(-2+skoMC1*-5),skoSC1*skoMC1*skoMC1*skoMC1*-1<=skoMC1*skoMC1*skoMC1,skoSC1*(skoMC1*skoMC1*skoMC1*(-1+skoMC1*3)+skoSC1*(skoMC1*skoMC1*skoMC1*(-2+skoMC1*-3)+skoSC1*(skoMC1*skoMC1*skoMC1*skoMC1*-1+skoSC1*skoMC1*skoMC1*skoMC1*(1/12))))>skoMC1*skoMC1*skoMC1*(-2+skoMC1*-5),skoSC1*(skoMC1*skoMC1*skoMC1*(-1+skoMC1*3)+skoSC1*(skoMC1*skoMC1*skoMC1*(-2+skoMC1*-3)+skoSC1*(skoMC1*skoMC1*skoMC1*((1/6)+skoMC1*-1)+skoSC1*skoMC1*skoMC1*skoMC1*(1/4))))>skoMC1*skoMC1*skoMC1*(-2+skoMC1*-5),skoSC1*skoMC1*skoMC1*skoMC1>skoMC1*skoMC1*skoMC1*-1,skoMC1*skoMC1*skoMC1*-2<=0,skoMC1*skoMC1*skoMC1*2>0,skoSC1*(skoMC1*(-1+skoMC1*3)+skoSC1*(skoMC1*(-2+skoMC1*-3)+skoSC1*(skoMC1*((1/6)+skoMC1*-1)+skoSC1*skoMC1*(1/4))))>skoMC1*(-2+skoMC1*-5),skoSC1*(skoMC1*(-1+skoMC1*3)+skoSC1*(skoMC1*(-2+skoMC1*-3)+skoSC1*(skoMC1*skoMC1*-1+skoSC1*skoMC1*(1/12))))>skoMC1*(-2+skoMC1*-5),skoSC1*(skoMC1*(1+skoMC1*-3)+skoSC1*(skoMC1*(2+skoMC1*3)+skoSC1*(skoMC1*((-1/6)+skoMC1)+skoSC1*skoMC1*(-1/4))))<=skoMC1*(2+skoMC1*5),skoSC1*(skoMC1*(1+skoMC1*-3)+skoSC1*(skoMC1*(2+skoMC1*3)+skoSC1*(skoMC1*skoMC1+skoSC1*skoMC1*(-1/12))))<=skoMC1*(2+skoMC1*5),skoSC1*skoMC1*-1<=skoMC1,skoSC1*skoMC1>skoMC1*-1,0<=skoMC1,skoMC1>0,0<=skoSC1,2<=skoMC1,skoSC1<=(5/4),skoSC1*skoMC1*skoMC1*skoMC1*2>skoMC1*skoMC1*skoMC1*-2,skoSC1*skoMC1*skoMC1*skoMC1*-2<=skoMC1*skoMC1*skoMC1*2,skoSC1*(skoMC1*skoMC1*skoMC1*(-2+skoMC1*-12)+skoSC1*(skoMC1*skoMC1*skoMC1*(1+skoMC1*-6)+skoSC1*(skoMC1*skoMC1*skoMC1+skoSC1*(skoMC1*skoMC1*skoMC1*(-1/12)+skoSC1*skoMC1*skoMC1*skoMC1*(-1/12)))))<=skoMC1*skoMC1*skoMC1*(2+skoMC1*6)]], Reals]]

% In QepcadB format:
(E skoSC1) (E skoMC1) [[(skoMC1 skoMC1 skoMC1 (-2+(skoMC1 (-5))))<(skoSC1 ((skoMC1 skoMC1 skoMC1 (-1+(skoMC1 (3))))+(skoSC1 ((skoMC1 skoMC1 skoMC1 (-2+(skoMC1 (-3))))+(skoSC1 ((skoMC1 skoMC1 skoMC1 (1/6+(skoMC1 (-1))))+(skoSC1 ((skoMC1 skoMC1 skoMC1 (1/4))+(skoSC1 skoSC1 ((skoMC1 skoMC1 skoMC1 (-1/360))+(skoSC1 skoSC1 ((skoMC1 skoMC1 skoMC1 (1/20160))+(skoSC1 skoSC1 ((skoMC1 skoMC1 skoMC1 (-1/1814400))+(skoSC1 skoSC1 skoMC1 skoMC1 skoMC1 (1/239500800))))))))))))))))]/\[[(skoSC1 skoMC1 skoMC1 skoMC1 (-1))<=(skoMC1 skoMC1 skoMC1)]/\[[(skoMC1 skoMC1 skoMC1 (-2+(skoMC1 (-5))))<(skoSC1 ((skoMC1 skoMC1 skoMC1 (-1+(skoMC1 (3))))+(skoSC1 ((skoMC1 skoMC1 skoMC1 (-2+(skoMC1 (-3))))+(skoSC1 ((skoMC1 skoMC1 skoMC1 skoMC1 (-1))+(skoSC1 skoMC1 skoMC1 skoMC1 (1/12))))))))]/\[[(skoMC1 skoMC1 skoMC1 (-2+(skoMC1 (-5))))<(skoSC1 ((skoMC1 skoMC1 skoMC1 (-1+(skoMC1 (3))))+(skoSC1 ((skoMC1 skoMC1 skoMC1 (-2+(skoMC1 (-3))))+(skoSC1 ((skoMC1 skoMC1 skoMC1 (1/6+(skoMC1 (-1))))+(skoSC1 skoMC1 skoMC1 skoMC1 (1/4))))))))]/\[[(skoMC1 skoMC1 skoMC1 (-1))<(skoSC1 skoMC1 skoMC1 skoMC1)]/\[[(skoMC1 skoMC1 skoMC1 (-2))<=0]/\[[0<(skoMC1 skoMC1 skoMC1 (2))]/\[[(skoMC1 (-2+(skoMC1 (-5))))<(skoSC1 ((skoMC1 (-1+(skoMC1 (3))))+(skoSC1 ((skoMC1 (-2+(skoMC1 (-3))))+(skoSC1 ((skoMC1 (1/6+(skoMC1 (-1))))+(skoSC1 skoMC1 (1/4))))))))]/\[[(skoMC1 (-2+(skoMC1 (-5))))<(skoSC1 ((skoMC1 (-1+(skoMC1 (3))))+(skoSC1 ((skoMC1 (-2+(skoMC1 (-3))))+(skoSC1 ((skoMC1 skoMC1 (-1))+(skoSC1 skoMC1 (1/12))))))))]/\[[(skoSC1 ((skoMC1 (1+(skoMC1 (-3))))+(skoSC1 ((skoMC1 (2+(skoMC1 (3))))+(skoSC1 ((skoMC1 (-1/6+skoMC1))+(skoSC1 skoMC1 (-1/4))))))))<=(skoMC1 (2+(skoMC1 (5))))]/\[[(skoSC1 ((skoMC1 (1+(skoMC1 (-3))))+(skoSC1 ((skoMC1 (2+(skoMC1 (3))))+(skoSC1 ((skoMC1 skoMC1)+(skoSC1 skoMC1 (-1/12))))))))<=(skoMC1 (2+(skoMC1 (5))))]/\[[(skoSC1 skoMC1 (-1))<=skoMC1]/\[[(skoMC1 (-1))<(skoSC1 skoMC1)]/\[[0<=skoMC1]/\[[0<skoMC1]/\[[0<=skoSC1]/\[[2<=skoMC1]/\[[skoSC1<=5/4]/\[[(skoMC1 skoMC1 skoMC1 (-2))<(skoSC1 skoMC1 skoMC1 skoMC1 (2))]/\[[(skoSC1 skoMC1 skoMC1 skoMC1 (-2))<=(skoMC1 skoMC1 skoMC1 (2))]/\[(skoSC1 ((skoMC1 skoMC1 skoMC1 (-2+(skoMC1 (-12))))+(skoSC1 ((skoMC1 skoMC1 skoMC1 (1+(skoMC1 (-6))))+(skoSC1 ((skoMC1 skoMC1 skoMC1)+(skoSC1 ((skoMC1 skoMC1 skoMC1 (-1/12))+(skoSC1 skoMC1 skoMC1 skoMC1 (-1/12))))))))))<=(skoMC1 skoMC1 skoMC1 (2+(skoMC1 (6))))]]]]]]]]]]]]]]]]]]]]].

% In SMTLib2 format:
(declare-fun skoSC1 () Real) (declare-fun skoMC1 () Real) (assert (and (> (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (+ (- 1.) (* skoMC1 3.))))) (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (+ (- 2.) (* skoMC1 (- 3.)))))) (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (+ (/ 1. 6.) (* skoMC1 (- 1.)))))) (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (/ 1. 4.)))) (* skoSC1 (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (/ (- 1.) 360.)))) (* skoSC1 (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (/ 1. 20160.)))) (* skoSC1 (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (/ (- 1.) 1814400.)))) (* skoSC1 (* skoSC1 (* skoMC1 (* skoMC1 (* skoMC1 (/ 1. 239500800.))))))))))))))))))))))) (* skoMC1 (* skoMC1 (* skoMC1 (+ (- 2.) (* skoMC1 (- 5.))))))) (and (<= (* skoSC1 (* skoMC1 (* skoMC1 (* skoMC1 (- 1.))))) (* skoMC1 (* skoMC1 skoMC1))) (and (> (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (+ (- 1.) (* skoMC1 3.))))) (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (+ (- 2.) (* skoMC1 (- 3.)))))) (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (* skoMC1 (- 1.))))) (* skoSC1 (* skoMC1 (* skoMC1 (* skoMC1 (/ 1. 12.))))))))))) (* skoMC1 (* skoMC1 (* skoMC1 (+ (- 2.) (* skoMC1 (- 5.))))))) (and (> (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (+ (- 1.) (* skoMC1 3.))))) (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (+ (- 2.) (* skoMC1 (- 3.)))))) (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (+ (/ 1. 6.) (* skoMC1 (- 1.)))))) (* skoSC1 (* skoMC1 (* skoMC1 (* skoMC1 (/ 1. 4.))))))))))) (* skoMC1 (* skoMC1 (* skoMC1 (+ (- 2.) (* skoMC1 (- 5.))))))) (and (> (* skoSC1 (* skoMC1 (* skoMC1 skoMC1))) (* skoMC1 (* skoMC1 (* skoMC1 (- 1.))))) (and (<= (* skoMC1 (* skoMC1 (* skoMC1 (- 2.)))) 0.) (and (> (* skoMC1 (* skoMC1 (* skoMC1 2.))) 0.) (and (> (* skoSC1 (+ (* skoMC1 (+ (- 1.) (* skoMC1 3.))) (* skoSC1 (+ (* skoMC1 (+ (- 2.) (* skoMC1 (- 3.)))) (* skoSC1 (+ (* skoMC1 (+ (/ 1. 6.) (* skoMC1 (- 1.)))) (* skoSC1 (* skoMC1 (/ 1. 4.))))))))) (* skoMC1 (+ (- 2.) (* skoMC1 (- 5.))))) (and (> (* skoSC1 (+ (* skoMC1 (+ (- 1.) (* skoMC1 3.))) (* skoSC1 (+ (* skoMC1 (+ (- 2.) (* skoMC1 (- 3.)))) (* skoSC1 (+ (* skoMC1 (* skoMC1 (- 1.))) (* skoSC1 (* skoMC1 (/ 1. 12.))))))))) (* skoMC1 (+ (- 2.) (* skoMC1 (- 5.))))) (and (<= (* skoSC1 (+ (* skoMC1 (+ 1. (* skoMC1 (- 3.)))) (* skoSC1 (+ (* skoMC1 (+ 2. (* skoMC1 3.))) (* skoSC1 (+ (* skoMC1 (+ (/ (- 1.) 6.) skoMC1)) (* skoSC1 (* skoMC1 (/ (- 1.) 4.))))))))) (* skoMC1 (+ 2. (* skoMC1 5.)))) (and (<= (* skoSC1 (+ (* skoMC1 (+ 1. (* skoMC1 (- 3.)))) (* skoSC1 (+ (* skoMC1 (+ 2. (* skoMC1 3.))) (* skoSC1 (+ (* skoMC1 skoMC1) (* skoSC1 (* skoMC1 (/ (- 1.) 12.))))))))) (* skoMC1 (+ 2. (* skoMC1 5.)))) (and (<= (* skoSC1 (* skoMC1 (- 1.))) skoMC1) (and (> (* skoSC1 skoMC1) (* skoMC1 (- 1.))) (and (<= 0. skoMC1) (and (> skoMC1 0.) (and (<= 0. skoSC1) (and (<= 2. skoMC1) (and (<= skoSC1 (/ 5. 4.)) (and (> (* skoSC1 (* skoMC1 (* skoMC1 (* skoMC1 2.)))) (* skoMC1 (* skoMC1 (* skoMC1 (- 2.))))) (and (<= (* skoSC1 (* skoMC1 (* skoMC1 (* skoMC1 (- 2.))))) (* skoMC1 (* skoMC1 (* skoMC1 2.)))) (<= (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (+ (- 2.) (* skoMC1 (- 12.)))))) (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (+ 1. (* skoMC1 (- 6.)))))) (* skoSC1 (+ (* skoMC1 (* skoMC1 skoMC1)) (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (/ (- 1.) 12.)))) (* skoSC1 (* skoMC1 (* skoMC1 (* skoMC1 (/ (- 1.) 12.))))))))))))) (* skoMC1 (* skoMC1 (* skoMC1 (+ 2. (* skoMC1 6.)))))))))))))))))))))))))))

% In GRF format:
(sequent " MetiTarski formula " (antecedent (> (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (+ (- 1.) (* skoMC1 3.))))) (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (+ (- 2.) (* skoMC1 (- 3.)))))) (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (+ (/ 1. 6.) (* skoMC1 (- 1.)))))) (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (/ 1. 4.)))) (* skoSC1 (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (/ (- 1.) 360.)))) (* skoSC1 (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (/ 1. 20160.)))) (* skoSC1 (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (/ (- 1.) 1814400.)))) (* skoSC1 (* skoSC1 (* skoMC1 (* skoMC1 (* skoMC1 (/ 1. 239500800.))))))))))))))))))))))) (* skoMC1 (* skoMC1 (* skoMC1 (+ (- 2.) (* skoMC1 (- 5.))))))) (<= (* skoSC1 (* skoMC1 (* skoMC1 (* skoMC1 (- 1.))))) (* skoMC1 (* skoMC1 skoMC1))) (> (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (+ (- 1.) (* skoMC1 3.))))) (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (+ (- 2.) (* skoMC1 (- 3.)))))) (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (* skoMC1 (- 1.))))) (* skoSC1 (* skoMC1 (* skoMC1 (* skoMC1 (/ 1. 12.))))))))))) (* skoMC1 (* skoMC1 (* skoMC1 (+ (- 2.) (* skoMC1 (- 5.))))))) (> (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (+ (- 1.) (* skoMC1 3.))))) (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (+ (- 2.) (* skoMC1 (- 3.)))))) (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (+ (/ 1. 6.) (* skoMC1 (- 1.)))))) (* skoSC1 (* skoMC1 (* skoMC1 (* skoMC1 (/ 1. 4.))))))))))) (* skoMC1 (* skoMC1 (* skoMC1 (+ (- 2.) (* skoMC1 (- 5.))))))) (> (* skoSC1 (* skoMC1 (* skoMC1 skoMC1))) (* skoMC1 (* skoMC1 (* skoMC1 (- 1.))))) (<= (* skoMC1 (* skoMC1 (* skoMC1 (- 2.)))) 0.) (> (* skoMC1 (* skoMC1 (* skoMC1 2.))) 0.) (> (* skoSC1 (+ (* skoMC1 (+ (- 1.) (* skoMC1 3.))) (* skoSC1 (+ (* skoMC1 (+ (- 2.) (* skoMC1 (- 3.)))) (* skoSC1 (+ (* skoMC1 (+ (/ 1. 6.) (* skoMC1 (- 1.)))) (* skoSC1 (* skoMC1 (/ 1. 4.))))))))) (* skoMC1 (+ (- 2.) (* skoMC1 (- 5.))))) (> (* skoSC1 (+ (* skoMC1 (+ (- 1.) (* skoMC1 3.))) (* skoSC1 (+ (* skoMC1 (+ (- 2.) (* skoMC1 (- 3.)))) (* skoSC1 (+ (* skoMC1 (* skoMC1 (- 1.))) (* skoSC1 (* skoMC1 (/ 1. 12.))))))))) (* skoMC1 (+ (- 2.) (* skoMC1 (- 5.))))) (<= (* skoSC1 (+ (* skoMC1 (+ 1. (* skoMC1 (- 3.)))) (* skoSC1 (+ (* skoMC1 (+ 2. (* skoMC1 3.))) (* skoSC1 (+ (* skoMC1 (+ (/ (- 1.) 6.) skoMC1)) (* skoSC1 (* skoMC1 (/ (- 1.) 4.))))))))) (* skoMC1 (+ 2. (* skoMC1 5.)))) (<= (* skoSC1 (+ (* skoMC1 (+ 1. (* skoMC1 (- 3.)))) (* skoSC1 (+ (* skoMC1 (+ 2. (* skoMC1 3.))) (* skoSC1 (+ (* skoMC1 skoMC1) (* skoSC1 (* skoMC1 (/ (- 1.) 12.))))))))) (* skoMC1 (+ 2. (* skoMC1 5.)))) (<= (* skoSC1 (* skoMC1 (- 1.))) skoMC1) (> (* skoSC1 skoMC1) (* skoMC1 (- 1.))) (<= 0. skoMC1) (> skoMC1 0.) (<= 0. skoSC1) (<= 2. skoMC1) (<= skoSC1 (/ 5. 4.)) (> (* skoSC1 (* skoMC1 (* skoMC1 (* skoMC1 2.)))) (* skoMC1 (* skoMC1 (* skoMC1 (- 2.))))) (<= (* skoSC1 (* skoMC1 (* skoMC1 (* skoMC1 (- 2.))))) (* skoMC1 (* skoMC1 (* skoMC1 2.))))) (succedent (> (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (+ (- 2.) (* skoMC1 (- 12.)))))) (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (+ 1. (* skoMC1 (- 6.)))))) (* skoSC1 (+ (* skoMC1 (* skoMC1 skoMC1)) (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (/ (- 1.) 12.)))) (* skoSC1 (* skoMC1 (* skoMC1 (* skoMC1 (/ (- 1.) 12.))))))))))))) (* skoMC1 (* skoMC1 (* skoMC1 (+ 2. (* skoMC1 6.))))))))
-----[end problem]-----

-----[begin problem]-----
% In Mathematica format:
Timing[Resolve[Exists[{skoSC1,skoMC1}, And[skoSC1*skoMC1*skoMC1*skoMC1*-1<=skoMC1*skoMC1*skoMC1,skoSC1*skoMC1*skoMC1*skoMC1*-1<=skoMC1*skoMC1*skoMC1,skoSC1*(skoMC1*skoMC1*skoMC1*(-1+skoMC1*3)+skoSC1*(skoMC1*skoMC1*skoMC1*(-2+skoMC1*-3)+skoSC1*(skoMC1*skoMC1*skoMC1*skoMC1*-1+skoSC1*skoMC1*skoMC1*skoMC1*(1/12))))>skoMC1*skoMC1*skoMC1*(-2+skoMC1*-5),skoSC1*(skoMC1*skoMC1*skoMC1*(-1+skoMC1*3)+skoSC1*(skoMC1*skoMC1*skoMC1*(-2+skoMC1*-3)+skoSC1*(skoMC1*skoMC1*skoMC1*((1/6)+skoMC1*-1)+skoSC1*skoMC1*skoMC1*skoMC1*(1/4))))>skoMC1*skoMC1*skoMC1*(-2+skoMC1*-5),skoSC1*skoMC1*skoMC1*skoMC1>skoMC1*skoMC1*skoMC1*-1,skoMC1*skoMC1*skoMC1*-2<=0,skoMC1*skoMC1*skoMC1*2>0,skoSC1*(skoMC1*(-1+skoMC1*3)+skoSC1*(skoMC1*(-2+skoMC1*-3)+skoSC1*(skoMC1*((1/6)+skoMC1*-1)+skoSC1*skoMC1*(1/4))))>skoMC1*(-2+skoMC1*-5),skoSC1*(skoMC1*(-1+skoMC1*3)+skoSC1*(skoMC1*(-2+skoMC1*-3)+skoSC1*(skoMC1*skoMC1*-1+skoSC1*skoMC1*(1/12))))>skoMC1*(-2+skoMC1*-5),skoSC1*(skoMC1*(1+skoMC1*-3)+skoSC1*(skoMC1*(2+skoMC1*3)+skoSC1*(skoMC1*((-1/6)+skoMC1)+skoSC1*skoMC1*(-1/4))))<=skoMC1*(2+skoMC1*5),skoSC1*(skoMC1*(1+skoMC1*-3)+skoSC1*(skoMC1*(2+skoMC1*3)+skoSC1*(skoMC1*skoMC1+skoSC1*skoMC1*(-1/12))))<=skoMC1*(2+skoMC1*5),skoSC1*skoMC1*-1<=skoMC1,skoSC1*skoMC1>skoMC1*-1,0<=skoMC1,skoMC1>0,0<=skoSC1,2<=skoMC1,skoSC1<=(5/4),skoSC1*skoMC1*skoMC1*skoMC1*2>skoMC1*skoMC1*skoMC1*-2,skoSC1*skoMC1*skoMC1*skoMC1*-2<=skoMC1*skoMC1*skoMC1*2,skoSC1*(skoMC1*skoMC1*skoMC1*(-2+skoMC1*-12)+skoSC1*(skoMC1*skoMC1*skoMC1*(1+skoMC1*-6)+skoSC1*(skoMC1*skoMC1*skoMC1+skoSC1*(skoMC1*skoMC1*skoMC1*(-1/12)+skoSC1*skoMC1*skoMC1*skoMC1*(-1/12)))))<=skoMC1*skoMC1*skoMC1*(2+skoMC1*6)]], Reals]]

% In QepcadB format:
(E skoSC1) (E skoMC1) [[(skoSC1 skoMC1 skoMC1 skoMC1 (-1))<=(skoMC1 skoMC1 skoMC1)]/\[[(skoSC1 skoMC1 skoMC1 skoMC1 (-1))<=(skoMC1 skoMC1 skoMC1)]/\[[(skoMC1 skoMC1 skoMC1 (-2+(skoMC1 (-5))))<(skoSC1 ((skoMC1 skoMC1 skoMC1 (-1+(skoMC1 (3))))+(skoSC1 ((skoMC1 skoMC1 skoMC1 (-2+(skoMC1 (-3))))+(skoSC1 ((skoMC1 skoMC1 skoMC1 skoMC1 (-1))+(skoSC1 skoMC1 skoMC1 skoMC1 (1/12))))))))]/\[[(skoMC1 skoMC1 skoMC1 (-2+(skoMC1 (-5))))<(skoSC1 ((skoMC1 skoMC1 skoMC1 (-1+(skoMC1 (3))))+(skoSC1 ((skoMC1 skoMC1 skoMC1 (-2+(skoMC1 (-3))))+(skoSC1 ((skoMC1 skoMC1 skoMC1 (1/6+(skoMC1 (-1))))+(skoSC1 skoMC1 skoMC1 skoMC1 (1/4))))))))]/\[[(skoMC1 skoMC1 skoMC1 (-1))<(skoSC1 skoMC1 skoMC1 skoMC1)]/\[[(skoMC1 skoMC1 skoMC1 (-2))<=0]/\[[0<(skoMC1 skoMC1 skoMC1 (2))]/\[[(skoMC1 (-2+(skoMC1 (-5))))<(skoSC1 ((skoMC1 (-1+(skoMC1 (3))))+(skoSC1 ((skoMC1 (-2+(skoMC1 (-3))))+(skoSC1 ((skoMC1 (1/6+(skoMC1 (-1))))+(skoSC1 skoMC1 (1/4))))))))]/\[[(skoMC1 (-2+(skoMC1 (-5))))<(skoSC1 ((skoMC1 (-1+(skoMC1 (3))))+(skoSC1 ((skoMC1 (-2+(skoMC1 (-3))))+(skoSC1 ((skoMC1 skoMC1 (-1))+(skoSC1 skoMC1 (1/12))))))))]/\[[(skoSC1 ((skoMC1 (1+(skoMC1 (-3))))+(skoSC1 ((skoMC1 (2+(skoMC1 (3))))+(skoSC1 ((skoMC1 (-1/6+skoMC1))+(skoSC1 skoMC1 (-1/4))))))))<=(skoMC1 (2+(skoMC1 (5))))]/\[[(skoSC1 ((skoMC1 (1+(skoMC1 (-3))))+(skoSC1 ((skoMC1 (2+(skoMC1 (3))))+(skoSC1 ((skoMC1 skoMC1)+(skoSC1 skoMC1 (-1/12))))))))<=(skoMC1 (2+(skoMC1 (5))))]/\[[(skoSC1 skoMC1 (-1))<=skoMC1]/\[[(skoMC1 (-1))<(skoSC1 skoMC1)]/\[[0<=skoMC1]/\[[0<skoMC1]/\[[0<=skoSC1]/\[[2<=skoMC1]/\[[skoSC1<=5/4]/\[[(skoMC1 skoMC1 skoMC1 (-2))<(skoSC1 skoMC1 skoMC1 skoMC1 (2))]/\[[(skoSC1 skoMC1 skoMC1 skoMC1 (-2))<=(skoMC1 skoMC1 skoMC1 (2))]/\[(skoSC1 ((skoMC1 skoMC1 skoMC1 (-2+(skoMC1 (-12))))+(skoSC1 ((skoMC1 skoMC1 skoMC1 (1+(skoMC1 (-6))))+(skoSC1 ((skoMC1 skoMC1 skoMC1)+(skoSC1 ((skoMC1 skoMC1 skoMC1 (-1/12))+(skoSC1 skoMC1 skoMC1 skoMC1 (-1/12))))))))))<=(skoMC1 skoMC1 skoMC1 (2+(skoMC1 (6))))]]]]]]]]]]]]]]]]]]]]].

% In SMTLib2 format:
(declare-fun skoSC1 () Real) (declare-fun skoMC1 () Real) (assert (and (<= (* skoSC1 (* skoMC1 (* skoMC1 (* skoMC1 (- 1.))))) (* skoMC1 (* skoMC1 skoMC1))) (and (<= (* skoSC1 (* skoMC1 (* skoMC1 (* skoMC1 (- 1.))))) (* skoMC1 (* skoMC1 skoMC1))) (and (> (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (+ (- 1.) (* skoMC1 3.))))) (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (+ (- 2.) (* skoMC1 (- 3.)))))) (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (* skoMC1 (- 1.))))) (* skoSC1 (* skoMC1 (* skoMC1 (* skoMC1 (/ 1. 12.))))))))))) (* skoMC1 (* skoMC1 (* skoMC1 (+ (- 2.) (* skoMC1 (- 5.))))))) (and (> (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (+ (- 1.) (* skoMC1 3.))))) (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (+ (- 2.) (* skoMC1 (- 3.)))))) (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (+ (/ 1. 6.) (* skoMC1 (- 1.)))))) (* skoSC1 (* skoMC1 (* skoMC1 (* skoMC1 (/ 1. 4.))))))))))) (* skoMC1 (* skoMC1 (* skoMC1 (+ (- 2.) (* skoMC1 (- 5.))))))) (and (> (* skoSC1 (* skoMC1 (* skoMC1 skoMC1))) (* skoMC1 (* skoMC1 (* skoMC1 (- 1.))))) (and (<= (* skoMC1 (* skoMC1 (* skoMC1 (- 2.)))) 0.) (and (> (* skoMC1 (* skoMC1 (* skoMC1 2.))) 0.) (and (> (* skoSC1 (+ (* skoMC1 (+ (- 1.) (* skoMC1 3.))) (* skoSC1 (+ (* skoMC1 (+ (- 2.) (* skoMC1 (- 3.)))) (* skoSC1 (+ (* skoMC1 (+ (/ 1. 6.) (* skoMC1 (- 1.)))) (* skoSC1 (* skoMC1 (/ 1. 4.))))))))) (* skoMC1 (+ (- 2.) (* skoMC1 (- 5.))))) (and (> (* skoSC1 (+ (* skoMC1 (+ (- 1.) (* skoMC1 3.))) (* skoSC1 (+ (* skoMC1 (+ (- 2.) (* skoMC1 (- 3.)))) (* skoSC1 (+ (* skoMC1 (* skoMC1 (- 1.))) (* skoSC1 (* skoMC1 (/ 1. 12.))))))))) (* skoMC1 (+ (- 2.) (* skoMC1 (- 5.))))) (and (<= (* skoSC1 (+ (* skoMC1 (+ 1. (* skoMC1 (- 3.)))) (* skoSC1 (+ (* skoMC1 (+ 2. (* skoMC1 3.))) (* skoSC1 (+ (* skoMC1 (+ (/ (- 1.) 6.) skoMC1)) (* skoSC1 (* skoMC1 (/ (- 1.) 4.))))))))) (* skoMC1 (+ 2. (* skoMC1 5.)))) (and (<= (* skoSC1 (+ (* skoMC1 (+ 1. (* skoMC1 (- 3.)))) (* skoSC1 (+ (* skoMC1 (+ 2. (* skoMC1 3.))) (* skoSC1 (+ (* skoMC1 skoMC1) (* skoSC1 (* skoMC1 (/ (- 1.) 12.))))))))) (* skoMC1 (+ 2. (* skoMC1 5.)))) (and (<= (* skoSC1 (* skoMC1 (- 1.))) skoMC1) (and (> (* skoSC1 skoMC1) (* skoMC1 (- 1.))) (and (<= 0. skoMC1) (and (> skoMC1 0.) (and (<= 0. skoSC1) (and (<= 2. skoMC1) (and (<= skoSC1 (/ 5. 4.)) (and (> (* skoSC1 (* skoMC1 (* skoMC1 (* skoMC1 2.)))) (* skoMC1 (* skoMC1 (* skoMC1 (- 2.))))) (and (<= (* skoSC1 (* skoMC1 (* skoMC1 (* skoMC1 (- 2.))))) (* skoMC1 (* skoMC1 (* skoMC1 2.)))) (<= (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (+ (- 2.) (* skoMC1 (- 12.)))))) (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (+ 1. (* skoMC1 (- 6.)))))) (* skoSC1 (+ (* skoMC1 (* skoMC1 skoMC1)) (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (/ (- 1.) 12.)))) (* skoSC1 (* skoMC1 (* skoMC1 (* skoMC1 (/ (- 1.) 12.))))))))))))) (* skoMC1 (* skoMC1 (* skoMC1 (+ 2. (* skoMC1 6.)))))))))))))))))))))))))))

% In GRF format:
(sequent " MetiTarski formula " (antecedent (<= (* skoSC1 (* skoMC1 (* skoMC1 (* skoMC1 (- 1.))))) (* skoMC1 (* skoMC1 skoMC1))) (<= (* skoSC1 (* skoMC1 (* skoMC1 (* skoMC1 (- 1.))))) (* skoMC1 (* skoMC1 skoMC1))) (> (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (+ (- 1.) (* skoMC1 3.))))) (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (+ (- 2.) (* skoMC1 (- 3.)))))) (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (* skoMC1 (- 1.))))) (* skoSC1 (* skoMC1 (* skoMC1 (* skoMC1 (/ 1. 12.))))))))))) (* skoMC1 (* skoMC1 (* skoMC1 (+ (- 2.) (* skoMC1 (- 5.))))))) (> (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (+ (- 1.) (* skoMC1 3.))))) (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (+ (- 2.) (* skoMC1 (- 3.)))))) (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (+ (/ 1. 6.) (* skoMC1 (- 1.)))))) (* skoSC1 (* skoMC1 (* skoMC1 (* skoMC1 (/ 1. 4.))))))))))) (* skoMC1 (* skoMC1 (* skoMC1 (+ (- 2.) (* skoMC1 (- 5.))))))) (> (* skoSC1 (* skoMC1 (* skoMC1 skoMC1))) (* skoMC1 (* skoMC1 (* skoMC1 (- 1.))))) (<= (* skoMC1 (* skoMC1 (* skoMC1 (- 2.)))) 0.) (> (* skoMC1 (* skoMC1 (* skoMC1 2.))) 0.) (> (* skoSC1 (+ (* skoMC1 (+ (- 1.) (* skoMC1 3.))) (* skoSC1 (+ (* skoMC1 (+ (- 2.) (* skoMC1 (- 3.)))) (* skoSC1 (+ (* skoMC1 (+ (/ 1. 6.) (* skoMC1 (- 1.)))) (* skoSC1 (* skoMC1 (/ 1. 4.))))))))) (* skoMC1 (+ (- 2.) (* skoMC1 (- 5.))))) (> (* skoSC1 (+ (* skoMC1 (+ (- 1.) (* skoMC1 3.))) (* skoSC1 (+ (* skoMC1 (+ (- 2.) (* skoMC1 (- 3.)))) (* skoSC1 (+ (* skoMC1 (* skoMC1 (- 1.))) (* skoSC1 (* skoMC1 (/ 1. 12.))))))))) (* skoMC1 (+ (- 2.) (* skoMC1 (- 5.))))) (<= (* skoSC1 (+ (* skoMC1 (+ 1. (* skoMC1 (- 3.)))) (* skoSC1 (+ (* skoMC1 (+ 2. (* skoMC1 3.))) (* skoSC1 (+ (* skoMC1 (+ (/ (- 1.) 6.) skoMC1)) (* skoSC1 (* skoMC1 (/ (- 1.) 4.))))))))) (* skoMC1 (+ 2. (* skoMC1 5.)))) (<= (* skoSC1 (+ (* skoMC1 (+ 1. (* skoMC1 (- 3.)))) (* skoSC1 (+ (* skoMC1 (+ 2. (* skoMC1 3.))) (* skoSC1 (+ (* skoMC1 skoMC1) (* skoSC1 (* skoMC1 (/ (- 1.) 12.))))))))) (* skoMC1 (+ 2. (* skoMC1 5.)))) (<= (* skoSC1 (* skoMC1 (- 1.))) skoMC1) (> (* skoSC1 skoMC1) (* skoMC1 (- 1.))) (<= 0. skoMC1) (> skoMC1 0.) (<= 0. skoSC1) (<= 2. skoMC1) (<= skoSC1 (/ 5. 4.)) (> (* skoSC1 (* skoMC1 (* skoMC1 (* skoMC1 2.)))) (* skoMC1 (* skoMC1 (* skoMC1 (- 2.))))) (<= (* skoSC1 (* skoMC1 (* skoMC1 (* skoMC1 (- 2.))))) (* skoMC1 (* skoMC1 (* skoMC1 2.))))) (succedent (> (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (+ (- 2.) (* skoMC1 (- 12.)))))) (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (+ 1. (* skoMC1 (- 6.)))))) (* skoSC1 (+ (* skoMC1 (* skoMC1 skoMC1)) (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (/ (- 1.) 12.)))) (* skoSC1 (* skoMC1 (* skoMC1 (* skoMC1 (/ (- 1.) 12.))))))))))))) (* skoMC1 (* skoMC1 (* skoMC1 (+ 2. (* skoMC1 6.))))))))
-----[end problem]-----

-----[begin problem]-----
% In Mathematica format:
Timing[Resolve[Exists[{skoSC1,skoMC1}, And[skoSC1>0,skoSC1*skoMC1*skoMC1*skoMC1*-1<=skoMC1*skoMC1*skoMC1,skoSC1*(skoMC1*skoMC1*skoMC1*(-1+skoMC1*3)+skoSC1*(skoMC1*skoMC1*skoMC1*(-2+skoMC1*-3)+skoSC1*(skoMC1*skoMC1*skoMC1*skoMC1*-1+skoSC1*skoMC1*skoMC1*skoMC1*(1/12))))>skoMC1*skoMC1*skoMC1*(-2+skoMC1*-5),skoSC1*(skoMC1*skoMC1*skoMC1*(-1+skoMC1*3)+skoSC1*(skoMC1*skoMC1*skoMC1*(-2+skoMC1*-3)+skoSC1*(skoMC1*skoMC1*skoMC1*((1/6)+skoMC1*-1)+skoSC1*skoMC1*skoMC1*skoMC1*(1/4))))>skoMC1*skoMC1*skoMC1*(-2+skoMC1*-5),skoSC1*skoMC1*skoMC1*skoMC1>skoMC1*skoMC1*skoMC1*-1,skoMC1*skoMC1*skoMC1*-2<=0,skoMC1*skoMC1*skoMC1*2>0,skoSC1*(skoMC1*(-1+skoMC1*3)+skoSC1*(skoMC1*(-2+skoMC1*-3)+skoSC1*(skoMC1*((1/6)+skoMC1*-1)+skoSC1*skoMC1*(1/4))))>skoMC1*(-2+skoMC1*-5),skoSC1*(skoMC1*(-1+skoMC1*3)+skoSC1*(skoMC1*(-2+skoMC1*-3)+skoSC1*(skoMC1*skoMC1*-1+skoSC1*skoMC1*(1/12))))>skoMC1*(-2+skoMC1*-5),skoSC1*(skoMC1*(1+skoMC1*-3)+skoSC1*(skoMC1*(2+skoMC1*3)+skoSC1*(skoMC1*((-1/6)+skoMC1)+skoSC1*skoMC1*(-1/4))))<=skoMC1*(2+skoMC1*5),skoSC1*(skoMC1*(1+skoMC1*-3)+skoSC1*(skoMC1*(2+skoMC1*3)+skoSC1*(skoMC1*skoMC1+skoSC1*skoMC1*(-1/12))))<=skoMC1*(2+skoMC1*5),skoSC1*skoMC1*-1<=skoMC1,skoSC1*skoMC1>skoMC1*-1,0<=skoMC1,skoMC1>0,0<=skoSC1,2<=skoMC1,skoSC1<=(5/4),skoSC1*skoMC1*skoMC1*skoMC1*2>skoMC1*skoMC1*skoMC1*-2,skoSC1*skoMC1*skoMC1*skoMC1*-2<=skoMC1*skoMC1*skoMC1*2,skoSC1*(skoMC1*skoMC1*skoMC1*(-2+skoMC1*-12)+skoSC1*(skoMC1*skoMC1*skoMC1*(1+skoMC1*-6)+skoSC1*(skoMC1*skoMC1*skoMC1+skoSC1*(skoMC1*skoMC1*skoMC1*(-1/12)+skoSC1*skoMC1*skoMC1*skoMC1*(-1/12)))))<=skoMC1*skoMC1*skoMC1*(2+skoMC1*6)]], Reals]]

% In QepcadB format:
(E skoSC1) (E skoMC1) [[0<skoSC1]/\[[(skoSC1 skoMC1 skoMC1 skoMC1 (-1))<=(skoMC1 skoMC1 skoMC1)]/\[[(skoMC1 skoMC1 skoMC1 (-2+(skoMC1 (-5))))<(skoSC1 ((skoMC1 skoMC1 skoMC1 (-1+(skoMC1 (3))))+(skoSC1 ((skoMC1 skoMC1 skoMC1 (-2+(skoMC1 (-3))))+(skoSC1 ((skoMC1 skoMC1 skoMC1 skoMC1 (-1))+(skoSC1 skoMC1 skoMC1 skoMC1 (1/12))))))))]/\[[(skoMC1 skoMC1 skoMC1 (-2+(skoMC1 (-5))))<(skoSC1 ((skoMC1 skoMC1 skoMC1 (-1+(skoMC1 (3))))+(skoSC1 ((skoMC1 skoMC1 skoMC1 (-2+(skoMC1 (-3))))+(skoSC1 ((skoMC1 skoMC1 skoMC1 (1/6+(skoMC1 (-1))))+(skoSC1 skoMC1 skoMC1 skoMC1 (1/4))))))))]/\[[(skoMC1 skoMC1 skoMC1 (-1))<(skoSC1 skoMC1 skoMC1 skoMC1)]/\[[(skoMC1 skoMC1 skoMC1 (-2))<=0]/\[[0<(skoMC1 skoMC1 skoMC1 (2))]/\[[(skoMC1 (-2+(skoMC1 (-5))))<(skoSC1 ((skoMC1 (-1+(skoMC1 (3))))+(skoSC1 ((skoMC1 (-2+(skoMC1 (-3))))+(skoSC1 ((skoMC1 (1/6+(skoMC1 (-1))))+(skoSC1 skoMC1 (1/4))))))))]/\[[(skoMC1 (-2+(skoMC1 (-5))))<(skoSC1 ((skoMC1 (-1+(skoMC1 (3))))+(skoSC1 ((skoMC1 (-2+(skoMC1 (-3))))+(skoSC1 ((skoMC1 skoMC1 (-1))+(skoSC1 skoMC1 (1/12))))))))]/\[[(skoSC1 ((skoMC1 (1+(skoMC1 (-3))))+(skoSC1 ((skoMC1 (2+(skoMC1 (3))))+(skoSC1 ((skoMC1 (-1/6+skoMC1))+(skoSC1 skoMC1 (-1/4))))))))<=(skoMC1 (2+(skoMC1 (5))))]/\[[(skoSC1 ((skoMC1 (1+(skoMC1 (-3))))+(skoSC1 ((skoMC1 (2+(skoMC1 (3))))+(skoSC1 ((skoMC1 skoMC1)+(skoSC1 skoMC1 (-1/12))))))))<=(skoMC1 (2+(skoMC1 (5))))]/\[[(skoSC1 skoMC1 (-1))<=skoMC1]/\[[(skoMC1 (-1))<(skoSC1 skoMC1)]/\[[0<=skoMC1]/\[[0<skoMC1]/\[[0<=skoSC1]/\[[2<=skoMC1]/\[[skoSC1<=5/4]/\[[(skoMC1 skoMC1 skoMC1 (-2))<(skoSC1 skoMC1 skoMC1 skoMC1 (2))]/\[[(skoSC1 skoMC1 skoMC1 skoMC1 (-2))<=(skoMC1 skoMC1 skoMC1 (2))]/\[(skoSC1 ((skoMC1 skoMC1 skoMC1 (-2+(skoMC1 (-12))))+(skoSC1 ((skoMC1 skoMC1 skoMC1 (1+(skoMC1 (-6))))+(skoSC1 ((skoMC1 skoMC1 skoMC1)+(skoSC1 ((skoMC1 skoMC1 skoMC1 (-1/12))+(skoSC1 skoMC1 skoMC1 skoMC1 (-1/12))))))))))<=(skoMC1 skoMC1 skoMC1 (2+(skoMC1 (6))))]]]]]]]]]]]]]]]]]]]]].

% In SMTLib2 format:
(declare-fun skoSC1 () Real) (declare-fun skoMC1 () Real) (assert (and (> skoSC1 0.) (and (<= (* skoSC1 (* skoMC1 (* skoMC1 (* skoMC1 (- 1.))))) (* skoMC1 (* skoMC1 skoMC1))) (and (> (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (+ (- 1.) (* skoMC1 3.))))) (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (+ (- 2.) (* skoMC1 (- 3.)))))) (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (* skoMC1 (- 1.))))) (* skoSC1 (* skoMC1 (* skoMC1 (* skoMC1 (/ 1. 12.))))))))))) (* skoMC1 (* skoMC1 (* skoMC1 (+ (- 2.) (* skoMC1 (- 5.))))))) (and (> (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (+ (- 1.) (* skoMC1 3.))))) (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (+ (- 2.) (* skoMC1 (- 3.)))))) (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (+ (/ 1. 6.) (* skoMC1 (- 1.)))))) (* skoSC1 (* skoMC1 (* skoMC1 (* skoMC1 (/ 1. 4.))))))))))) (* skoMC1 (* skoMC1 (* skoMC1 (+ (- 2.) (* skoMC1 (- 5.))))))) (and (> (* skoSC1 (* skoMC1 (* skoMC1 skoMC1))) (* skoMC1 (* skoMC1 (* skoMC1 (- 1.))))) (and (<= (* skoMC1 (* skoMC1 (* skoMC1 (- 2.)))) 0.) (and (> (* skoMC1 (* skoMC1 (* skoMC1 2.))) 0.) (and (> (* skoSC1 (+ (* skoMC1 (+ (- 1.) (* skoMC1 3.))) (* skoSC1 (+ (* skoMC1 (+ (- 2.) (* skoMC1 (- 3.)))) (* skoSC1 (+ (* skoMC1 (+ (/ 1. 6.) (* skoMC1 (- 1.)))) (* skoSC1 (* skoMC1 (/ 1. 4.))))))))) (* skoMC1 (+ (- 2.) (* skoMC1 (- 5.))))) (and (> (* skoSC1 (+ (* skoMC1 (+ (- 1.) (* skoMC1 3.))) (* skoSC1 (+ (* skoMC1 (+ (- 2.) (* skoMC1 (- 3.)))) (* skoSC1 (+ (* skoMC1 (* skoMC1 (- 1.))) (* skoSC1 (* skoMC1 (/ 1. 12.))))))))) (* skoMC1 (+ (- 2.) (* skoMC1 (- 5.))))) (and (<= (* skoSC1 (+ (* skoMC1 (+ 1. (* skoMC1 (- 3.)))) (* skoSC1 (+ (* skoMC1 (+ 2. (* skoMC1 3.))) (* skoSC1 (+ (* skoMC1 (+ (/ (- 1.) 6.) skoMC1)) (* skoSC1 (* skoMC1 (/ (- 1.) 4.))))))))) (* skoMC1 (+ 2. (* skoMC1 5.)))) (and (<= (* skoSC1 (+ (* skoMC1 (+ 1. (* skoMC1 (- 3.)))) (* skoSC1 (+ (* skoMC1 (+ 2. (* skoMC1 3.))) (* skoSC1 (+ (* skoMC1 skoMC1) (* skoSC1 (* skoMC1 (/ (- 1.) 12.))))))))) (* skoMC1 (+ 2. (* skoMC1 5.)))) (and (<= (* skoSC1 (* skoMC1 (- 1.))) skoMC1) (and (> (* skoSC1 skoMC1) (* skoMC1 (- 1.))) (and (<= 0. skoMC1) (and (> skoMC1 0.) (and (<= 0. skoSC1) (and (<= 2. skoMC1) (and (<= skoSC1 (/ 5. 4.)) (and (> (* skoSC1 (* skoMC1 (* skoMC1 (* skoMC1 2.)))) (* skoMC1 (* skoMC1 (* skoMC1 (- 2.))))) (and (<= (* skoSC1 (* skoMC1 (* skoMC1 (* skoMC1 (- 2.))))) (* skoMC1 (* skoMC1 (* skoMC1 2.)))) (<= (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (+ (- 2.) (* skoMC1 (- 12.)))))) (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (+ 1. (* skoMC1 (- 6.)))))) (* skoSC1 (+ (* skoMC1 (* skoMC1 skoMC1)) (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (/ (- 1.) 12.)))) (* skoSC1 (* skoMC1 (* skoMC1 (* skoMC1 (/ (- 1.) 12.))))))))))))) (* skoMC1 (* skoMC1 (* skoMC1 (+ 2. (* skoMC1 6.)))))))))))))))))))))))))))

% In GRF format:
(sequent " MetiTarski formula " (antecedent (> skoSC1 0.) (<= (* skoSC1 (* skoMC1 (* skoMC1 (* skoMC1 (- 1.))))) (* skoMC1 (* skoMC1 skoMC1))) (> (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (+ (- 1.) (* skoMC1 3.))))) (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (+ (- 2.) (* skoMC1 (- 3.)))))) (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (* skoMC1 (- 1.))))) (* skoSC1 (* skoMC1 (* skoMC1 (* skoMC1 (/ 1. 12.))))))))))) (* skoMC1 (* skoMC1 (* skoMC1 (+ (- 2.) (* skoMC1 (- 5.))))))) (> (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (+ (- 1.) (* skoMC1 3.))))) (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (+ (- 2.) (* skoMC1 (- 3.)))))) (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (+ (/ 1. 6.) (* skoMC1 (- 1.)))))) (* skoSC1 (* skoMC1 (* skoMC1 (* skoMC1 (/ 1. 4.))))))))))) (* skoMC1 (* skoMC1 (* skoMC1 (+ (- 2.) (* skoMC1 (- 5.))))))) (> (* skoSC1 (* skoMC1 (* skoMC1 skoMC1))) (* skoMC1 (* skoMC1 (* skoMC1 (- 1.))))) (<= (* skoMC1 (* skoMC1 (* skoMC1 (- 2.)))) 0.) (> (* skoMC1 (* skoMC1 (* skoMC1 2.))) 0.) (> (* skoSC1 (+ (* skoMC1 (+ (- 1.) (* skoMC1 3.))) (* skoSC1 (+ (* skoMC1 (+ (- 2.) (* skoMC1 (- 3.)))) (* skoSC1 (+ (* skoMC1 (+ (/ 1. 6.) (* skoMC1 (- 1.)))) (* skoSC1 (* skoMC1 (/ 1. 4.))))))))) (* skoMC1 (+ (- 2.) (* skoMC1 (- 5.))))) (> (* skoSC1 (+ (* skoMC1 (+ (- 1.) (* skoMC1 3.))) (* skoSC1 (+ (* skoMC1 (+ (- 2.) (* skoMC1 (- 3.)))) (* skoSC1 (+ (* skoMC1 (* skoMC1 (- 1.))) (* skoSC1 (* skoMC1 (/ 1. 12.))))))))) (* skoMC1 (+ (- 2.) (* skoMC1 (- 5.))))) (<= (* skoSC1 (+ (* skoMC1 (+ 1. (* skoMC1 (- 3.)))) (* skoSC1 (+ (* skoMC1 (+ 2. (* skoMC1 3.))) (* skoSC1 (+ (* skoMC1 (+ (/ (- 1.) 6.) skoMC1)) (* skoSC1 (* skoMC1 (/ (- 1.) 4.))))))))) (* skoMC1 (+ 2. (* skoMC1 5.)))) (<= (* skoSC1 (+ (* skoMC1 (+ 1. (* skoMC1 (- 3.)))) (* skoSC1 (+ (* skoMC1 (+ 2. (* skoMC1 3.))) (* skoSC1 (+ (* skoMC1 skoMC1) (* skoSC1 (* skoMC1 (/ (- 1.) 12.))))))))) (* skoMC1 (+ 2. (* skoMC1 5.)))) (<= (* skoSC1 (* skoMC1 (- 1.))) skoMC1) (> (* skoSC1 skoMC1) (* skoMC1 (- 1.))) (<= 0. skoMC1) (> skoMC1 0.) (<= 0. skoSC1) (<= 2. skoMC1) (<= skoSC1 (/ 5. 4.)) (> (* skoSC1 (* skoMC1 (* skoMC1 (* skoMC1 2.)))) (* skoMC1 (* skoMC1 (* skoMC1 (- 2.))))) (<= (* skoSC1 (* skoMC1 (* skoMC1 (* skoMC1 (- 2.))))) (* skoMC1 (* skoMC1 (* skoMC1 2.))))) (succedent (> (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (+ (- 2.) (* skoMC1 (- 12.)))))) (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (+ 1. (* skoMC1 (- 6.)))))) (* skoSC1 (+ (* skoMC1 (* skoMC1 skoMC1)) (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (/ (- 1.) 12.)))) (* skoSC1 (* skoMC1 (* skoMC1 (* skoMC1 (/ (- 1.) 12.))))))))))))) (* skoMC1 (* skoMC1 (* skoMC1 (+ 2. (* skoMC1 6.))))))))
-----[end problem]-----

-----[begin problem]-----
% In Mathematica format:
Timing[Resolve[Exists[{skoSC1,skoMC1}, And[skoSC1*(skoMC1*skoMC1*skoMC1*(1+skoMC1*-3)+skoSC1*(skoMC1*skoMC1*skoMC1*(2+skoMC1*3)+skoSC1*(skoMC1*skoMC1*skoMC1*((-1/6)+skoMC1)+skoSC1*skoMC1*skoMC1*skoMC1*(-1/4))))<=skoMC1*skoMC1*skoMC1*(2+skoMC1*5),skoMC1*skoMC1*skoMC1*2>0,skoSC1*skoMC1*skoMC1*skoMC1*-1<=skoMC1*skoMC1*skoMC1,skoSC1*(skoMC1*skoMC1*skoMC1*(-1+skoMC1*3)+skoSC1*(skoMC1*skoMC1*skoMC1*(-2+skoMC1*-3)+skoSC1*(skoMC1*skoMC1*skoMC1*skoMC1*-1+skoSC1*skoMC1*skoMC1*skoMC1*(1/12))))>skoMC1*skoMC1*skoMC1*(-2+skoMC1*-5),skoSC1*(skoMC1*skoMC1*skoMC1*(-1+skoMC1*3)+skoSC1*(skoMC1*skoMC1*skoMC1*(-2+skoMC1*-3)+skoSC1*(skoMC1*skoMC1*skoMC1*((1/6)+skoMC1*-1)+skoSC1*skoMC1*skoMC1*skoMC1*(1/4))))>skoMC1*skoMC1*skoMC1*(-2+skoMC1*-5),skoSC1*skoMC1*skoMC1*skoMC1>skoMC1*skoMC1*skoMC1*-1,skoMC1*skoMC1*skoMC1*-2<=0,skoMC1*skoMC1*skoMC1*2>0,skoSC1*(skoMC1*(-1+skoMC1*3)+skoSC1*(skoMC1*(-2+skoMC1*-3)+skoSC1*(skoMC1*((1/6)+skoMC1*-1)+skoSC1*skoMC1*(1/4))))>skoMC1*(-2+skoMC1*-5),skoSC1*(skoMC1*(-1+skoMC1*3)+skoSC1*(skoMC1*(-2+skoMC1*-3)+skoSC1*(skoMC1*skoMC1*-1+skoSC1*skoMC1*(1/12))))>skoMC1*(-2+skoMC1*-5),skoSC1*(skoMC1*(1+skoMC1*-3)+skoSC1*(skoMC1*(2+skoMC1*3)+skoSC1*(skoMC1*((-1/6)+skoMC1)+skoSC1*skoMC1*(-1/4))))<=skoMC1*(2+skoMC1*5),skoSC1*(skoMC1*(1+skoMC1*-3)+skoSC1*(skoMC1*(2+skoMC1*3)+skoSC1*(skoMC1*skoMC1+skoSC1*skoMC1*(-1/12))))<=skoMC1*(2+skoMC1*5),skoSC1*skoMC1*-1<=skoMC1,skoSC1*skoMC1>skoMC1*-1,0<=skoMC1,skoMC1>0,0<=skoSC1,2<=skoMC1,skoSC1<=(5/4),skoSC1*skoMC1*skoMC1*skoMC1*2>skoMC1*skoMC1*skoMC1*-2,skoSC1*skoMC1*skoMC1*skoMC1*-2<=skoMC1*skoMC1*skoMC1*2,skoSC1*(skoMC1*skoMC1*skoMC1*(-2+skoMC1*-12)+skoSC1*(skoMC1*skoMC1*skoMC1*(1+skoMC1*-6)+skoSC1*(skoMC1*skoMC1*skoMC1+skoSC1*(skoMC1*skoMC1*skoMC1*(-1/12)+skoSC1*skoMC1*skoMC1*skoMC1*(-1/12)))))<=skoMC1*skoMC1*skoMC1*(2+skoMC1*6)]], Reals]]

% In QepcadB format:
(E skoSC1) (E skoMC1) [[(skoSC1 ((skoMC1 skoMC1 skoMC1 (1+(skoMC1 (-3))))+(skoSC1 ((skoMC1 skoMC1 skoMC1 (2+(skoMC1 (3))))+(skoSC1 ((skoMC1 skoMC1 skoMC1 (-1/6+skoMC1))+(skoSC1 skoMC1 skoMC1 skoMC1 (-1/4))))))))<=(skoMC1 skoMC1 skoMC1 (2+(skoMC1 (5))))]/\[[0<(skoMC1 skoMC1 skoMC1 (2))]/\[[(skoSC1 skoMC1 skoMC1 skoMC1 (-1))<=(skoMC1 skoMC1 skoMC1)]/\[[(skoMC1 skoMC1 skoMC1 (-2+(skoMC1 (-5))))<(skoSC1 ((skoMC1 skoMC1 skoMC1 (-1+(skoMC1 (3))))+(skoSC1 ((skoMC1 skoMC1 skoMC1 (-2+(skoMC1 (-3))))+(skoSC1 ((skoMC1 skoMC1 skoMC1 skoMC1 (-1))+(skoSC1 skoMC1 skoMC1 skoMC1 (1/12))))))))]/\[[(skoMC1 skoMC1 skoMC1 (-2+(skoMC1 (-5))))<(skoSC1 ((skoMC1 skoMC1 skoMC1 (-1+(skoMC1 (3))))+(skoSC1 ((skoMC1 skoMC1 skoMC1 (-2+(skoMC1 (-3))))+(skoSC1 ((skoMC1 skoMC1 skoMC1 (1/6+(skoMC1 (-1))))+(skoSC1 skoMC1 skoMC1 skoMC1 (1/4))))))))]/\[[(skoMC1 skoMC1 skoMC1 (-1))<(skoSC1 skoMC1 skoMC1 skoMC1)]/\[[(skoMC1 skoMC1 skoMC1 (-2))<=0]/\[[0<(skoMC1 skoMC1 skoMC1 (2))]/\[[(skoMC1 (-2+(skoMC1 (-5))))<(skoSC1 ((skoMC1 (-1+(skoMC1 (3))))+(skoSC1 ((skoMC1 (-2+(skoMC1 (-3))))+(skoSC1 ((skoMC1 (1/6+(skoMC1 (-1))))+(skoSC1 skoMC1 (1/4))))))))]/\[[(skoMC1 (-2+(skoMC1 (-5))))<(skoSC1 ((skoMC1 (-1+(skoMC1 (3))))+(skoSC1 ((skoMC1 (-2+(skoMC1 (-3))))+(skoSC1 ((skoMC1 skoMC1 (-1))+(skoSC1 skoMC1 (1/12))))))))]/\[[(skoSC1 ((skoMC1 (1+(skoMC1 (-3))))+(skoSC1 ((skoMC1 (2+(skoMC1 (3))))+(skoSC1 ((skoMC1 (-1/6+skoMC1))+(skoSC1 skoMC1 (-1/4))))))))<=(skoMC1 (2+(skoMC1 (5))))]/\[[(skoSC1 ((skoMC1 (1+(skoMC1 (-3))))+(skoSC1 ((skoMC1 (2+(skoMC1 (3))))+(skoSC1 ((skoMC1 skoMC1)+(skoSC1 skoMC1 (-1/12))))))))<=(skoMC1 (2+(skoMC1 (5))))]/\[[(skoSC1 skoMC1 (-1))<=skoMC1]/\[[(skoMC1 (-1))<(skoSC1 skoMC1)]/\[[0<=skoMC1]/\[[0<skoMC1]/\[[0<=skoSC1]/\[[2<=skoMC1]/\[[skoSC1<=5/4]/\[[(skoMC1 skoMC1 skoMC1 (-2))<(skoSC1 skoMC1 skoMC1 skoMC1 (2))]/\[[(skoSC1 skoMC1 skoMC1 skoMC1 (-2))<=(skoMC1 skoMC1 skoMC1 (2))]/\[(skoSC1 ((skoMC1 skoMC1 skoMC1 (-2+(skoMC1 (-12))))+(skoSC1 ((skoMC1 skoMC1 skoMC1 (1+(skoMC1 (-6))))+(skoSC1 ((skoMC1 skoMC1 skoMC1)+(skoSC1 ((skoMC1 skoMC1 skoMC1 (-1/12))+(skoSC1 skoMC1 skoMC1 skoMC1 (-1/12))))))))))<=(skoMC1 skoMC1 skoMC1 (2+(skoMC1 (6))))]]]]]]]]]]]]]]]]]]]]]].

% In SMTLib2 format:
(declare-fun skoSC1 () Real) (declare-fun skoMC1 () Real) (assert (and (<= (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (+ 1. (* skoMC1 (- 3.)))))) (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (+ 2. (* skoMC1 3.))))) (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (+ (/ (- 1.) 6.) skoMC1)))) (* skoSC1 (* skoMC1 (* skoMC1 (* skoMC1 (/ (- 1.) 4.))))))))))) (* skoMC1 (* skoMC1 (* skoMC1 (+ 2. (* skoMC1 5.)))))) (and (> (* skoMC1 (* skoMC1 (* skoMC1 2.))) 0.) (and (<= (* skoSC1 (* skoMC1 (* skoMC1 (* skoMC1 (- 1.))))) (* skoMC1 (* skoMC1 skoMC1))) (and (> (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (+ (- 1.) (* skoMC1 3.))))) (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (+ (- 2.) (* skoMC1 (- 3.)))))) (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (* skoMC1 (- 1.))))) (* skoSC1 (* skoMC1 (* skoMC1 (* skoMC1 (/ 1. 12.))))))))))) (* skoMC1 (* skoMC1 (* skoMC1 (+ (- 2.) (* skoMC1 (- 5.))))))) (and (> (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (+ (- 1.) (* skoMC1 3.))))) (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (+ (- 2.) (* skoMC1 (- 3.)))))) (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (+ (/ 1. 6.) (* skoMC1 (- 1.)))))) (* skoSC1 (* skoMC1 (* skoMC1 (* skoMC1 (/ 1. 4.))))))))))) (* skoMC1 (* skoMC1 (* skoMC1 (+ (- 2.) (* skoMC1 (- 5.))))))) (and (> (* skoSC1 (* skoMC1 (* skoMC1 skoMC1))) (* skoMC1 (* skoMC1 (* skoMC1 (- 1.))))) (and (<= (* skoMC1 (* skoMC1 (* skoMC1 (- 2.)))) 0.) (and (> (* skoMC1 (* skoMC1 (* skoMC1 2.))) 0.) (and (> (* skoSC1 (+ (* skoMC1 (+ (- 1.) (* skoMC1 3.))) (* skoSC1 (+ (* skoMC1 (+ (- 2.) (* skoMC1 (- 3.)))) (* skoSC1 (+ (* skoMC1 (+ (/ 1. 6.) (* skoMC1 (- 1.)))) (* skoSC1 (* skoMC1 (/ 1. 4.))))))))) (* skoMC1 (+ (- 2.) (* skoMC1 (- 5.))))) (and (> (* skoSC1 (+ (* skoMC1 (+ (- 1.) (* skoMC1 3.))) (* skoSC1 (+ (* skoMC1 (+ (- 2.) (* skoMC1 (- 3.)))) (* skoSC1 (+ (* skoMC1 (* skoMC1 (- 1.))) (* skoSC1 (* skoMC1 (/ 1. 12.))))))))) (* skoMC1 (+ (- 2.) (* skoMC1 (- 5.))))) (and (<= (* skoSC1 (+ (* skoMC1 (+ 1. (* skoMC1 (- 3.)))) (* skoSC1 (+ (* skoMC1 (+ 2. (* skoMC1 3.))) (* skoSC1 (+ (* skoMC1 (+ (/ (- 1.) 6.) skoMC1)) (* skoSC1 (* skoMC1 (/ (- 1.) 4.))))))))) (* skoMC1 (+ 2. (* skoMC1 5.)))) (and (<= (* skoSC1 (+ (* skoMC1 (+ 1. (* skoMC1 (- 3.)))) (* skoSC1 (+ (* skoMC1 (+ 2. (* skoMC1 3.))) (* skoSC1 (+ (* skoMC1 skoMC1) (* skoSC1 (* skoMC1 (/ (- 1.) 12.))))))))) (* skoMC1 (+ 2. (* skoMC1 5.)))) (and (<= (* skoSC1 (* skoMC1 (- 1.))) skoMC1) (and (> (* skoSC1 skoMC1) (* skoMC1 (- 1.))) (and (<= 0. skoMC1) (and (> skoMC1 0.) (and (<= 0. skoSC1) (and (<= 2. skoMC1) (and (<= skoSC1 (/ 5. 4.)) (and (> (* skoSC1 (* skoMC1 (* skoMC1 (* skoMC1 2.)))) (* skoMC1 (* skoMC1 (* skoMC1 (- 2.))))) (and (<= (* skoSC1 (* skoMC1 (* skoMC1 (* skoMC1 (- 2.))))) (* skoMC1 (* skoMC1 (* skoMC1 2.)))) (<= (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (+ (- 2.) (* skoMC1 (- 12.)))))) (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (+ 1. (* skoMC1 (- 6.)))))) (* skoSC1 (+ (* skoMC1 (* skoMC1 skoMC1)) (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (/ (- 1.) 12.)))) (* skoSC1 (* skoMC1 (* skoMC1 (* skoMC1 (/ (- 1.) 12.))))))))))))) (* skoMC1 (* skoMC1 (* skoMC1 (+ 2. (* skoMC1 6.))))))))))))))))))))))))))))

% In GRF format:
(sequent " MetiTarski formula " (antecedent (<= (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (+ 1. (* skoMC1 (- 3.)))))) (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (+ 2. (* skoMC1 3.))))) (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (+ (/ (- 1.) 6.) skoMC1)))) (* skoSC1 (* skoMC1 (* skoMC1 (* skoMC1 (/ (- 1.) 4.))))))))))) (* skoMC1 (* skoMC1 (* skoMC1 (+ 2. (* skoMC1 5.)))))) (> (* skoMC1 (* skoMC1 (* skoMC1 2.))) 0.) (<= (* skoSC1 (* skoMC1 (* skoMC1 (* skoMC1 (- 1.))))) (* skoMC1 (* skoMC1 skoMC1))) (> (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (+ (- 1.) (* skoMC1 3.))))) (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (+ (- 2.) (* skoMC1 (- 3.)))))) (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (* skoMC1 (- 1.))))) (* skoSC1 (* skoMC1 (* skoMC1 (* skoMC1 (/ 1. 12.))))))))))) (* skoMC1 (* skoMC1 (* skoMC1 (+ (- 2.) (* skoMC1 (- 5.))))))) (> (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (+ (- 1.) (* skoMC1 3.))))) (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (+ (- 2.) (* skoMC1 (- 3.)))))) (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (+ (/ 1. 6.) (* skoMC1 (- 1.)))))) (* skoSC1 (* skoMC1 (* skoMC1 (* skoMC1 (/ 1. 4.))))))))))) (* skoMC1 (* skoMC1 (* skoMC1 (+ (- 2.) (* skoMC1 (- 5.))))))) (> (* skoSC1 (* skoMC1 (* skoMC1 skoMC1))) (* skoMC1 (* skoMC1 (* skoMC1 (- 1.))))) (<= (* skoMC1 (* skoMC1 (* skoMC1 (- 2.)))) 0.) (> (* skoMC1 (* skoMC1 (* skoMC1 2.))) 0.) (> (* skoSC1 (+ (* skoMC1 (+ (- 1.) (* skoMC1 3.))) (* skoSC1 (+ (* skoMC1 (+ (- 2.) (* skoMC1 (- 3.)))) (* skoSC1 (+ (* skoMC1 (+ (/ 1. 6.) (* skoMC1 (- 1.)))) (* skoSC1 (* skoMC1 (/ 1. 4.))))))))) (* skoMC1 (+ (- 2.) (* skoMC1 (- 5.))))) (> (* skoSC1 (+ (* skoMC1 (+ (- 1.) (* skoMC1 3.))) (* skoSC1 (+ (* skoMC1 (+ (- 2.) (* skoMC1 (- 3.)))) (* skoSC1 (+ (* skoMC1 (* skoMC1 (- 1.))) (* skoSC1 (* skoMC1 (/ 1. 12.))))))))) (* skoMC1 (+ (- 2.) (* skoMC1 (- 5.))))) (<= (* skoSC1 (+ (* skoMC1 (+ 1. (* skoMC1 (- 3.)))) (* skoSC1 (+ (* skoMC1 (+ 2. (* skoMC1 3.))) (* skoSC1 (+ (* skoMC1 (+ (/ (- 1.) 6.) skoMC1)) (* skoSC1 (* skoMC1 (/ (- 1.) 4.))))))))) (* skoMC1 (+ 2. (* skoMC1 5.)))) (<= (* skoSC1 (+ (* skoMC1 (+ 1. (* skoMC1 (- 3.)))) (* skoSC1 (+ (* skoMC1 (+ 2. (* skoMC1 3.))) (* skoSC1 (+ (* skoMC1 skoMC1) (* skoSC1 (* skoMC1 (/ (- 1.) 12.))))))))) (* skoMC1 (+ 2. (* skoMC1 5.)))) (<= (* skoSC1 (* skoMC1 (- 1.))) skoMC1) (> (* skoSC1 skoMC1) (* skoMC1 (- 1.))) (<= 0. skoMC1) (> skoMC1 0.) (<= 0. skoSC1) (<= 2. skoMC1) (<= skoSC1 (/ 5. 4.)) (> (* skoSC1 (* skoMC1 (* skoMC1 (* skoMC1 2.)))) (* skoMC1 (* skoMC1 (* skoMC1 (- 2.))))) (<= (* skoSC1 (* skoMC1 (* skoMC1 (* skoMC1 (- 2.))))) (* skoMC1 (* skoMC1 (* skoMC1 2.))))) (succedent (> (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (+ (- 2.) (* skoMC1 (- 12.)))))) (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (+ 1. (* skoMC1 (- 6.)))))) (* skoSC1 (+ (* skoMC1 (* skoMC1 skoMC1)) (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (/ (- 1.) 12.)))) (* skoSC1 (* skoMC1 (* skoMC1 (* skoMC1 (/ (- 1.) 12.))))))))))))) (* skoMC1 (* skoMC1 (* skoMC1 (+ 2. (* skoMC1 6.))))))))
-----[end problem]-----

-----[begin problem]-----
% In Mathematica format:
Timing[Resolve[Exists[{skoSC1,skoMC1}, And[skoSC1*(skoMC1*skoMC1*skoMC1*(1+skoMC1*-3)+skoSC1*(skoMC1*skoMC1*skoMC1*(2+skoMC1*3)+skoSC1*(skoMC1*skoMC1*skoMC1*((-1/6)+skoMC1)+skoSC1*skoMC1*skoMC1*skoMC1*(-1/4))))<=skoMC1*skoMC1*skoMC1*(2+skoMC1*5),skoSC1*skoMC1*skoMC1*skoMC1*-1<=skoMC1*skoMC1*skoMC1,skoSC1*(skoMC1*skoMC1*skoMC1*(-1+skoMC1*3)+skoSC1*(skoMC1*skoMC1*skoMC1*(-2+skoMC1*-3)+skoSC1*(skoMC1*skoMC1*skoMC1*skoMC1*-1+skoSC1*skoMC1*skoMC1*skoMC1*(1/12))))>skoMC1*skoMC1*skoMC1*(-2+skoMC1*-5),skoSC1*(skoMC1*skoMC1*skoMC1*(-1+skoMC1*3)+skoSC1*(skoMC1*skoMC1*skoMC1*(-2+skoMC1*-3)+skoSC1*(skoMC1*skoMC1*skoMC1*((1/6)+skoMC1*-1)+skoSC1*skoMC1*skoMC1*skoMC1*(1/4))))>skoMC1*skoMC1*skoMC1*(-2+skoMC1*-5),skoSC1*skoMC1*skoMC1*skoMC1>skoMC1*skoMC1*skoMC1*-1,skoMC1*skoMC1*skoMC1*-2<=0,skoMC1*skoMC1*skoMC1*2>0,skoSC1*(skoMC1*(-1+skoMC1*3)+skoSC1*(skoMC1*(-2+skoMC1*-3)+skoSC1*(skoMC1*((1/6)+skoMC1*-1)+skoSC1*skoMC1*(1/4))))>skoMC1*(-2+skoMC1*-5),skoSC1*(skoMC1*(-1+skoMC1*3)+skoSC1*(skoMC1*(-2+skoMC1*-3)+skoSC1*(skoMC1*skoMC1*-1+skoSC1*skoMC1*(1/12))))>skoMC1*(-2+skoMC1*-5),skoSC1*(skoMC1*(1+skoMC1*-3)+skoSC1*(skoMC1*(2+skoMC1*3)+skoSC1*(skoMC1*((-1/6)+skoMC1)+skoSC1*skoMC1*(-1/4))))<=skoMC1*(2+skoMC1*5),skoSC1*(skoMC1*(1+skoMC1*-3)+skoSC1*(skoMC1*(2+skoMC1*3)+skoSC1*(skoMC1*skoMC1+skoSC1*skoMC1*(-1/12))))<=skoMC1*(2+skoMC1*5),skoSC1*skoMC1*-1<=skoMC1,skoSC1*skoMC1>skoMC1*-1,0<=skoMC1,skoMC1>0,0<=skoSC1,2<=skoMC1,skoSC1<=(5/4),skoSC1*skoMC1*skoMC1*skoMC1*2>skoMC1*skoMC1*skoMC1*-2,skoSC1*skoMC1*skoMC1*skoMC1*-2<=skoMC1*skoMC1*skoMC1*2,skoSC1*(skoMC1*skoMC1*skoMC1*(-2+skoMC1*-12)+skoSC1*(skoMC1*skoMC1*skoMC1*(1+skoMC1*-6)+skoSC1*(skoMC1*skoMC1*skoMC1+skoSC1*(skoMC1*skoMC1*skoMC1*(-1/12)+skoSC1*skoMC1*skoMC1*skoMC1*(-1/12)))))<=skoMC1*skoMC1*skoMC1*(2+skoMC1*6)]], Reals]]

% In QepcadB format:
(E skoSC1) (E skoMC1) [[(skoSC1 ((skoMC1 skoMC1 skoMC1 (1+(skoMC1 (-3))))+(skoSC1 ((skoMC1 skoMC1 skoMC1 (2+(skoMC1 (3))))+(skoSC1 ((skoMC1 skoMC1 skoMC1 (-1/6+skoMC1))+(skoSC1 skoMC1 skoMC1 skoMC1 (-1/4))))))))<=(skoMC1 skoMC1 skoMC1 (2+(skoMC1 (5))))]/\[[(skoSC1 skoMC1 skoMC1 skoMC1 (-1))<=(skoMC1 skoMC1 skoMC1)]/\[[(skoMC1 skoMC1 skoMC1 (-2+(skoMC1 (-5))))<(skoSC1 ((skoMC1 skoMC1 skoMC1 (-1+(skoMC1 (3))))+(skoSC1 ((skoMC1 skoMC1 skoMC1 (-2+(skoMC1 (-3))))+(skoSC1 ((skoMC1 skoMC1 skoMC1 skoMC1 (-1))+(skoSC1 skoMC1 skoMC1 skoMC1 (1/12))))))))]/\[[(skoMC1 skoMC1 skoMC1 (-2+(skoMC1 (-5))))<(skoSC1 ((skoMC1 skoMC1 skoMC1 (-1+(skoMC1 (3))))+(skoSC1 ((skoMC1 skoMC1 skoMC1 (-2+(skoMC1 (-3))))+(skoSC1 ((skoMC1 skoMC1 skoMC1 (1/6+(skoMC1 (-1))))+(skoSC1 skoMC1 skoMC1 skoMC1 (1/4))))))))]/\[[(skoMC1 skoMC1 skoMC1 (-1))<(skoSC1 skoMC1 skoMC1 skoMC1)]/\[[(skoMC1 skoMC1 skoMC1 (-2))<=0]/\[[0<(skoMC1 skoMC1 skoMC1 (2))]/\[[(skoMC1 (-2+(skoMC1 (-5))))<(skoSC1 ((skoMC1 (-1+(skoMC1 (3))))+(skoSC1 ((skoMC1 (-2+(skoMC1 (-3))))+(skoSC1 ((skoMC1 (1/6+(skoMC1 (-1))))+(skoSC1 skoMC1 (1/4))))))))]/\[[(skoMC1 (-2+(skoMC1 (-5))))<(skoSC1 ((skoMC1 (-1+(skoMC1 (3))))+(skoSC1 ((skoMC1 (-2+(skoMC1 (-3))))+(skoSC1 ((skoMC1 skoMC1 (-1))+(skoSC1 skoMC1 (1/12))))))))]/\[[(skoSC1 ((skoMC1 (1+(skoMC1 (-3))))+(skoSC1 ((skoMC1 (2+(skoMC1 (3))))+(skoSC1 ((skoMC1 (-1/6+skoMC1))+(skoSC1 skoMC1 (-1/4))))))))<=(skoMC1 (2+(skoMC1 (5))))]/\[[(skoSC1 ((skoMC1 (1+(skoMC1 (-3))))+(skoSC1 ((skoMC1 (2+(skoMC1 (3))))+(skoSC1 ((skoMC1 skoMC1)+(skoSC1 skoMC1 (-1/12))))))))<=(skoMC1 (2+(skoMC1 (5))))]/\[[(skoSC1 skoMC1 (-1))<=skoMC1]/\[[(skoMC1 (-1))<(skoSC1 skoMC1)]/\[[0<=skoMC1]/\[[0<skoMC1]/\[[0<=skoSC1]/\[[2<=skoMC1]/\[[skoSC1<=5/4]/\[[(skoMC1 skoMC1 skoMC1 (-2))<(skoSC1 skoMC1 skoMC1 skoMC1 (2))]/\[[(skoSC1 skoMC1 skoMC1 skoMC1 (-2))<=(skoMC1 skoMC1 skoMC1 (2))]/\[(skoSC1 ((skoMC1 skoMC1 skoMC1 (-2+(skoMC1 (-12))))+(skoSC1 ((skoMC1 skoMC1 skoMC1 (1+(skoMC1 (-6))))+(skoSC1 ((skoMC1 skoMC1 skoMC1)+(skoSC1 ((skoMC1 skoMC1 skoMC1 (-1/12))+(skoSC1 skoMC1 skoMC1 skoMC1 (-1/12))))))))))<=(skoMC1 skoMC1 skoMC1 (2+(skoMC1 (6))))]]]]]]]]]]]]]]]]]]]]].

% In SMTLib2 format:
(declare-fun skoSC1 () Real) (declare-fun skoMC1 () Real) (assert (and (<= (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (+ 1. (* skoMC1 (- 3.)))))) (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (+ 2. (* skoMC1 3.))))) (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (+ (/ (- 1.) 6.) skoMC1)))) (* skoSC1 (* skoMC1 (* skoMC1 (* skoMC1 (/ (- 1.) 4.))))))))))) (* skoMC1 (* skoMC1 (* skoMC1 (+ 2. (* skoMC1 5.)))))) (and (<= (* skoSC1 (* skoMC1 (* skoMC1 (* skoMC1 (- 1.))))) (* skoMC1 (* skoMC1 skoMC1))) (and (> (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (+ (- 1.) (* skoMC1 3.))))) (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (+ (- 2.) (* skoMC1 (- 3.)))))) (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (* skoMC1 (- 1.))))) (* skoSC1 (* skoMC1 (* skoMC1 (* skoMC1 (/ 1. 12.))))))))))) (* skoMC1 (* skoMC1 (* skoMC1 (+ (- 2.) (* skoMC1 (- 5.))))))) (and (> (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (+ (- 1.) (* skoMC1 3.))))) (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (+ (- 2.) (* skoMC1 (- 3.)))))) (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (+ (/ 1. 6.) (* skoMC1 (- 1.)))))) (* skoSC1 (* skoMC1 (* skoMC1 (* skoMC1 (/ 1. 4.))))))))))) (* skoMC1 (* skoMC1 (* skoMC1 (+ (- 2.) (* skoMC1 (- 5.))))))) (and (> (* skoSC1 (* skoMC1 (* skoMC1 skoMC1))) (* skoMC1 (* skoMC1 (* skoMC1 (- 1.))))) (and (<= (* skoMC1 (* skoMC1 (* skoMC1 (- 2.)))) 0.) (and (> (* skoMC1 (* skoMC1 (* skoMC1 2.))) 0.) (and (> (* skoSC1 (+ (* skoMC1 (+ (- 1.) (* skoMC1 3.))) (* skoSC1 (+ (* skoMC1 (+ (- 2.) (* skoMC1 (- 3.)))) (* skoSC1 (+ (* skoMC1 (+ (/ 1. 6.) (* skoMC1 (- 1.)))) (* skoSC1 (* skoMC1 (/ 1. 4.))))))))) (* skoMC1 (+ (- 2.) (* skoMC1 (- 5.))))) (and (> (* skoSC1 (+ (* skoMC1 (+ (- 1.) (* skoMC1 3.))) (* skoSC1 (+ (* skoMC1 (+ (- 2.) (* skoMC1 (- 3.)))) (* skoSC1 (+ (* skoMC1 (* skoMC1 (- 1.))) (* skoSC1 (* skoMC1 (/ 1. 12.))))))))) (* skoMC1 (+ (- 2.) (* skoMC1 (- 5.))))) (and (<= (* skoSC1 (+ (* skoMC1 (+ 1. (* skoMC1 (- 3.)))) (* skoSC1 (+ (* skoMC1 (+ 2. (* skoMC1 3.))) (* skoSC1 (+ (* skoMC1 (+ (/ (- 1.) 6.) skoMC1)) (* skoSC1 (* skoMC1 (/ (- 1.) 4.))))))))) (* skoMC1 (+ 2. (* skoMC1 5.)))) (and (<= (* skoSC1 (+ (* skoMC1 (+ 1. (* skoMC1 (- 3.)))) (* skoSC1 (+ (* skoMC1 (+ 2. (* skoMC1 3.))) (* skoSC1 (+ (* skoMC1 skoMC1) (* skoSC1 (* skoMC1 (/ (- 1.) 12.))))))))) (* skoMC1 (+ 2. (* skoMC1 5.)))) (and (<= (* skoSC1 (* skoMC1 (- 1.))) skoMC1) (and (> (* skoSC1 skoMC1) (* skoMC1 (- 1.))) (and (<= 0. skoMC1) (and (> skoMC1 0.) (and (<= 0. skoSC1) (and (<= 2. skoMC1) (and (<= skoSC1 (/ 5. 4.)) (and (> (* skoSC1 (* skoMC1 (* skoMC1 (* skoMC1 2.)))) (* skoMC1 (* skoMC1 (* skoMC1 (- 2.))))) (and (<= (* skoSC1 (* skoMC1 (* skoMC1 (* skoMC1 (- 2.))))) (* skoMC1 (* skoMC1 (* skoMC1 2.)))) (<= (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (+ (- 2.) (* skoMC1 (- 12.)))))) (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (+ 1. (* skoMC1 (- 6.)))))) (* skoSC1 (+ (* skoMC1 (* skoMC1 skoMC1)) (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (/ (- 1.) 12.)))) (* skoSC1 (* skoMC1 (* skoMC1 (* skoMC1 (/ (- 1.) 12.))))))))))))) (* skoMC1 (* skoMC1 (* skoMC1 (+ 2. (* skoMC1 6.)))))))))))))))))))))))))))

% In GRF format:
(sequent " MetiTarski formula " (antecedent (<= (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (+ 1. (* skoMC1 (- 3.)))))) (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (+ 2. (* skoMC1 3.))))) (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (+ (/ (- 1.) 6.) skoMC1)))) (* skoSC1 (* skoMC1 (* skoMC1 (* skoMC1 (/ (- 1.) 4.))))))))))) (* skoMC1 (* skoMC1 (* skoMC1 (+ 2. (* skoMC1 5.)))))) (<= (* skoSC1 (* skoMC1 (* skoMC1 (* skoMC1 (- 1.))))) (* skoMC1 (* skoMC1 skoMC1))) (> (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (+ (- 1.) (* skoMC1 3.))))) (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (+ (- 2.) (* skoMC1 (- 3.)))))) (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (* skoMC1 (- 1.))))) (* skoSC1 (* skoMC1 (* skoMC1 (* skoMC1 (/ 1. 12.))))))))))) (* skoMC1 (* skoMC1 (* skoMC1 (+ (- 2.) (* skoMC1 (- 5.))))))) (> (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (+ (- 1.) (* skoMC1 3.))))) (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (+ (- 2.) (* skoMC1 (- 3.)))))) (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (+ (/ 1. 6.) (* skoMC1 (- 1.)))))) (* skoSC1 (* skoMC1 (* skoMC1 (* skoMC1 (/ 1. 4.))))))))))) (* skoMC1 (* skoMC1 (* skoMC1 (+ (- 2.) (* skoMC1 (- 5.))))))) (> (* skoSC1 (* skoMC1 (* skoMC1 skoMC1))) (* skoMC1 (* skoMC1 (* skoMC1 (- 1.))))) (<= (* skoMC1 (* skoMC1 (* skoMC1 (- 2.)))) 0.) (> (* skoMC1 (* skoMC1 (* skoMC1 2.))) 0.) (> (* skoSC1 (+ (* skoMC1 (+ (- 1.) (* skoMC1 3.))) (* skoSC1 (+ (* skoMC1 (+ (- 2.) (* skoMC1 (- 3.)))) (* skoSC1 (+ (* skoMC1 (+ (/ 1. 6.) (* skoMC1 (- 1.)))) (* skoSC1 (* skoMC1 (/ 1. 4.))))))))) (* skoMC1 (+ (- 2.) (* skoMC1 (- 5.))))) (> (* skoSC1 (+ (* skoMC1 (+ (- 1.) (* skoMC1 3.))) (* skoSC1 (+ (* skoMC1 (+ (- 2.) (* skoMC1 (- 3.)))) (* skoSC1 (+ (* skoMC1 (* skoMC1 (- 1.))) (* skoSC1 (* skoMC1 (/ 1. 12.))))))))) (* skoMC1 (+ (- 2.) (* skoMC1 (- 5.))))) (<= (* skoSC1 (+ (* skoMC1 (+ 1. (* skoMC1 (- 3.)))) (* skoSC1 (+ (* skoMC1 (+ 2. (* skoMC1 3.))) (* skoSC1 (+ (* skoMC1 (+ (/ (- 1.) 6.) skoMC1)) (* skoSC1 (* skoMC1 (/ (- 1.) 4.))))))))) (* skoMC1 (+ 2. (* skoMC1 5.)))) (<= (* skoSC1 (+ (* skoMC1 (+ 1. (* skoMC1 (- 3.)))) (* skoSC1 (+ (* skoMC1 (+ 2. (* skoMC1 3.))) (* skoSC1 (+ (* skoMC1 skoMC1) (* skoSC1 (* skoMC1 (/ (- 1.) 12.))))))))) (* skoMC1 (+ 2. (* skoMC1 5.)))) (<= (* skoSC1 (* skoMC1 (- 1.))) skoMC1) (> (* skoSC1 skoMC1) (* skoMC1 (- 1.))) (<= 0. skoMC1) (> skoMC1 0.) (<= 0. skoSC1) (<= 2. skoMC1) (<= skoSC1 (/ 5. 4.)) (> (* skoSC1 (* skoMC1 (* skoMC1 (* skoMC1 2.)))) (* skoMC1 (* skoMC1 (* skoMC1 (- 2.))))) (<= (* skoSC1 (* skoMC1 (* skoMC1 (* skoMC1 (- 2.))))) (* skoMC1 (* skoMC1 (* skoMC1 2.))))) (succedent (> (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (+ (- 2.) (* skoMC1 (- 12.)))))) (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (+ 1. (* skoMC1 (- 6.)))))) (* skoSC1 (+ (* skoMC1 (* skoMC1 skoMC1)) (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (/ (- 1.) 12.)))) (* skoSC1 (* skoMC1 (* skoMC1 (* skoMC1 (/ (- 1.) 12.))))))))))))) (* skoMC1 (* skoMC1 (* skoMC1 (+ 2. (* skoMC1 6.))))))))
-----[end problem]-----

-----[begin problem]-----
% In Mathematica format:
Timing[Resolve[Exists[{skoSC1,skoMC1}, And[skoSC1*skoMC1*skoMC1*skoMC1*-1<=skoMC1*skoMC1*skoMC1,skoSC1<=0,skoSC1*(skoMC1*skoMC1*skoMC1*(1+skoMC1*-3)+skoSC1*(skoMC1*skoMC1*skoMC1*(2+skoMC1*3)+skoSC1*(skoMC1*skoMC1*skoMC1*((-1/6)+skoMC1)+skoSC1*skoMC1*skoMC1*skoMC1*(-1/4))))<=skoMC1*skoMC1*skoMC1*(2+skoMC1*5),skoSC1*skoMC1*skoMC1*skoMC1*-1<=skoMC1*skoMC1*skoMC1,skoSC1*(skoMC1*skoMC1*skoMC1*(-1+skoMC1*3)+skoSC1*(skoMC1*skoMC1*skoMC1*(-2+skoMC1*-3)+skoSC1*(skoMC1*skoMC1*skoMC1*skoMC1*-1+skoSC1*skoMC1*skoMC1*skoMC1*(1/12))))>skoMC1*skoMC1*skoMC1*(-2+skoMC1*-5),skoSC1*(skoMC1*skoMC1*skoMC1*(-1+skoMC1*3)+skoSC1*(skoMC1*skoMC1*skoMC1*(-2+skoMC1*-3)+skoSC1*(skoMC1*skoMC1*skoMC1*((1/6)+skoMC1*-1)+skoSC1*skoMC1*skoMC1*skoMC1*(1/4))))>skoMC1*skoMC1*skoMC1*(-2+skoMC1*-5),skoSC1*skoMC1*skoMC1*skoMC1>skoMC1*skoMC1*skoMC1*-1,skoMC1*skoMC1*skoMC1*-2<=0,skoMC1*skoMC1*skoMC1*2>0,skoSC1*(skoMC1*(-1+skoMC1*3)+skoSC1*(skoMC1*(-2+skoMC1*-3)+skoSC1*(skoMC1*((1/6)+skoMC1*-1)+skoSC1*skoMC1*(1/4))))>skoMC1*(-2+skoMC1*-5),skoSC1*(skoMC1*(-1+skoMC1*3)+skoSC1*(skoMC1*(-2+skoMC1*-3)+skoSC1*(skoMC1*skoMC1*-1+skoSC1*skoMC1*(1/12))))>skoMC1*(-2+skoMC1*-5),skoSC1*(skoMC1*(1+skoMC1*-3)+skoSC1*(skoMC1*(2+skoMC1*3)+skoSC1*(skoMC1*((-1/6)+skoMC1)+skoSC1*skoMC1*(-1/4))))<=skoMC1*(2+skoMC1*5),skoSC1*(skoMC1*(1+skoMC1*-3)+skoSC1*(skoMC1*(2+skoMC1*3)+skoSC1*(skoMC1*skoMC1+skoSC1*skoMC1*(-1/12))))<=skoMC1*(2+skoMC1*5),skoSC1*skoMC1*-1<=skoMC1,skoSC1*skoMC1>skoMC1*-1,0<=skoMC1,skoMC1>0,0<=skoSC1,2<=skoMC1,skoSC1<=(5/4),skoSC1*skoMC1*skoMC1*skoMC1*2>skoMC1*skoMC1*skoMC1*-2,skoSC1*skoMC1*skoMC1*skoMC1*-2<=skoMC1*skoMC1*skoMC1*2,skoSC1*(skoMC1*skoMC1*skoMC1*(-2+skoMC1*-12)+skoSC1*(skoMC1*skoMC1*skoMC1*(1+skoMC1*-6)+skoSC1*(skoMC1*skoMC1*skoMC1+skoSC1*(skoMC1*skoMC1*skoMC1*(-1/12)+skoSC1*skoMC1*skoMC1*skoMC1*(-1/12)))))<=skoMC1*skoMC1*skoMC1*(2+skoMC1*6)]], Reals]]

% In QepcadB format:
(E skoSC1) (E skoMC1) [[(skoSC1 skoMC1 skoMC1 skoMC1 (-1))<=(skoMC1 skoMC1 skoMC1)]/\[[skoSC1<=0]/\[[(skoSC1 ((skoMC1 skoMC1 skoMC1 (1+(skoMC1 (-3))))+(skoSC1 ((skoMC1 skoMC1 skoMC1 (2+(skoMC1 (3))))+(skoSC1 ((skoMC1 skoMC1 skoMC1 (-1/6+skoMC1))+(skoSC1 skoMC1 skoMC1 skoMC1 (-1/4))))))))<=(skoMC1 skoMC1 skoMC1 (2+(skoMC1 (5))))]/\[[(skoSC1 skoMC1 skoMC1 skoMC1 (-1))<=(skoMC1 skoMC1 skoMC1)]/\[[(skoMC1 skoMC1 skoMC1 (-2+(skoMC1 (-5))))<(skoSC1 ((skoMC1 skoMC1 skoMC1 (-1+(skoMC1 (3))))+(skoSC1 ((skoMC1 skoMC1 skoMC1 (-2+(skoMC1 (-3))))+(skoSC1 ((skoMC1 skoMC1 skoMC1 skoMC1 (-1))+(skoSC1 skoMC1 skoMC1 skoMC1 (1/12))))))))]/\[[(skoMC1 skoMC1 skoMC1 (-2+(skoMC1 (-5))))<(skoSC1 ((skoMC1 skoMC1 skoMC1 (-1+(skoMC1 (3))))+(skoSC1 ((skoMC1 skoMC1 skoMC1 (-2+(skoMC1 (-3))))+(skoSC1 ((skoMC1 skoMC1 skoMC1 (1/6+(skoMC1 (-1))))+(skoSC1 skoMC1 skoMC1 skoMC1 (1/4))))))))]/\[[(skoMC1 skoMC1 skoMC1 (-1))<(skoSC1 skoMC1 skoMC1 skoMC1)]/\[[(skoMC1 skoMC1 skoMC1 (-2))<=0]/\[[0<(skoMC1 skoMC1 skoMC1 (2))]/\[[(skoMC1 (-2+(skoMC1 (-5))))<(skoSC1 ((skoMC1 (-1+(skoMC1 (3))))+(skoSC1 ((skoMC1 (-2+(skoMC1 (-3))))+(skoSC1 ((skoMC1 (1/6+(skoMC1 (-1))))+(skoSC1 skoMC1 (1/4))))))))]/\[[(skoMC1 (-2+(skoMC1 (-5))))<(skoSC1 ((skoMC1 (-1+(skoMC1 (3))))+(skoSC1 ((skoMC1 (-2+(skoMC1 (-3))))+(skoSC1 ((skoMC1 skoMC1 (-1))+(skoSC1 skoMC1 (1/12))))))))]/\[[(skoSC1 ((skoMC1 (1+(skoMC1 (-3))))+(skoSC1 ((skoMC1 (2+(skoMC1 (3))))+(skoSC1 ((skoMC1 (-1/6+skoMC1))+(skoSC1 skoMC1 (-1/4))))))))<=(skoMC1 (2+(skoMC1 (5))))]/\[[(skoSC1 ((skoMC1 (1+(skoMC1 (-3))))+(skoSC1 ((skoMC1 (2+(skoMC1 (3))))+(skoSC1 ((skoMC1 skoMC1)+(skoSC1 skoMC1 (-1/12))))))))<=(skoMC1 (2+(skoMC1 (5))))]/\[[(skoSC1 skoMC1 (-1))<=skoMC1]/\[[(skoMC1 (-1))<(skoSC1 skoMC1)]/\[[0<=skoMC1]/\[[0<skoMC1]/\[[0<=skoSC1]/\[[2<=skoMC1]/\[[skoSC1<=5/4]/\[[(skoMC1 skoMC1 skoMC1 (-2))<(skoSC1 skoMC1 skoMC1 skoMC1 (2))]/\[[(skoSC1 skoMC1 skoMC1 skoMC1 (-2))<=(skoMC1 skoMC1 skoMC1 (2))]/\[(skoSC1 ((skoMC1 skoMC1 skoMC1 (-2+(skoMC1 (-12))))+(skoSC1 ((skoMC1 skoMC1 skoMC1 (1+(skoMC1 (-6))))+(skoSC1 ((skoMC1 skoMC1 skoMC1)+(skoSC1 ((skoMC1 skoMC1 skoMC1 (-1/12))+(skoSC1 skoMC1 skoMC1 skoMC1 (-1/12))))))))))<=(skoMC1 skoMC1 skoMC1 (2+(skoMC1 (6))))]]]]]]]]]]]]]]]]]]]]]]].

% In SMTLib2 format:
(declare-fun skoSC1 () Real) (declare-fun skoMC1 () Real) (assert (and (<= (* skoSC1 (* skoMC1 (* skoMC1 (* skoMC1 (- 1.))))) (* skoMC1 (* skoMC1 skoMC1))) (and (<= skoSC1 0.) (and (<= (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (+ 1. (* skoMC1 (- 3.)))))) (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (+ 2. (* skoMC1 3.))))) (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (+ (/ (- 1.) 6.) skoMC1)))) (* skoSC1 (* skoMC1 (* skoMC1 (* skoMC1 (/ (- 1.) 4.))))))))))) (* skoMC1 (* skoMC1 (* skoMC1 (+ 2. (* skoMC1 5.)))))) (and (<= (* skoSC1 (* skoMC1 (* skoMC1 (* skoMC1 (- 1.))))) (* skoMC1 (* skoMC1 skoMC1))) (and (> (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (+ (- 1.) (* skoMC1 3.))))) (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (+ (- 2.) (* skoMC1 (- 3.)))))) (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (* skoMC1 (- 1.))))) (* skoSC1 (* skoMC1 (* skoMC1 (* skoMC1 (/ 1. 12.))))))))))) (* skoMC1 (* skoMC1 (* skoMC1 (+ (- 2.) (* skoMC1 (- 5.))))))) (and (> (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (+ (- 1.) (* skoMC1 3.))))) (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (+ (- 2.) (* skoMC1 (- 3.)))))) (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (+ (/ 1. 6.) (* skoMC1 (- 1.)))))) (* skoSC1 (* skoMC1 (* skoMC1 (* skoMC1 (/ 1. 4.))))))))))) (* skoMC1 (* skoMC1 (* skoMC1 (+ (- 2.) (* skoMC1 (- 5.))))))) (and (> (* skoSC1 (* skoMC1 (* skoMC1 skoMC1))) (* skoMC1 (* skoMC1 (* skoMC1 (- 1.))))) (and (<= (* skoMC1 (* skoMC1 (* skoMC1 (- 2.)))) 0.) (and (> (* skoMC1 (* skoMC1 (* skoMC1 2.))) 0.) (and (> (* skoSC1 (+ (* skoMC1 (+ (- 1.) (* skoMC1 3.))) (* skoSC1 (+ (* skoMC1 (+ (- 2.) (* skoMC1 (- 3.)))) (* skoSC1 (+ (* skoMC1 (+ (/ 1. 6.) (* skoMC1 (- 1.)))) (* skoSC1 (* skoMC1 (/ 1. 4.))))))))) (* skoMC1 (+ (- 2.) (* skoMC1 (- 5.))))) (and (> (* skoSC1 (+ (* skoMC1 (+ (- 1.) (* skoMC1 3.))) (* skoSC1 (+ (* skoMC1 (+ (- 2.) (* skoMC1 (- 3.)))) (* skoSC1 (+ (* skoMC1 (* skoMC1 (- 1.))) (* skoSC1 (* skoMC1 (/ 1. 12.))))))))) (* skoMC1 (+ (- 2.) (* skoMC1 (- 5.))))) (and (<= (* skoSC1 (+ (* skoMC1 (+ 1. (* skoMC1 (- 3.)))) (* skoSC1 (+ (* skoMC1 (+ 2. (* skoMC1 3.))) (* skoSC1 (+ (* skoMC1 (+ (/ (- 1.) 6.) skoMC1)) (* skoSC1 (* skoMC1 (/ (- 1.) 4.))))))))) (* skoMC1 (+ 2. (* skoMC1 5.)))) (and (<= (* skoSC1 (+ (* skoMC1 (+ 1. (* skoMC1 (- 3.)))) (* skoSC1 (+ (* skoMC1 (+ 2. (* skoMC1 3.))) (* skoSC1 (+ (* skoMC1 skoMC1) (* skoSC1 (* skoMC1 (/ (- 1.) 12.))))))))) (* skoMC1 (+ 2. (* skoMC1 5.)))) (and (<= (* skoSC1 (* skoMC1 (- 1.))) skoMC1) (and (> (* skoSC1 skoMC1) (* skoMC1 (- 1.))) (and (<= 0. skoMC1) (and (> skoMC1 0.) (and (<= 0. skoSC1) (and (<= 2. skoMC1) (and (<= skoSC1 (/ 5. 4.)) (and (> (* skoSC1 (* skoMC1 (* skoMC1 (* skoMC1 2.)))) (* skoMC1 (* skoMC1 (* skoMC1 (- 2.))))) (and (<= (* skoSC1 (* skoMC1 (* skoMC1 (* skoMC1 (- 2.))))) (* skoMC1 (* skoMC1 (* skoMC1 2.)))) (<= (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (+ (- 2.) (* skoMC1 (- 12.)))))) (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (+ 1. (* skoMC1 (- 6.)))))) (* skoSC1 (+ (* skoMC1 (* skoMC1 skoMC1)) (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (/ (- 1.) 12.)))) (* skoSC1 (* skoMC1 (* skoMC1 (* skoMC1 (/ (- 1.) 12.))))))))))))) (* skoMC1 (* skoMC1 (* skoMC1 (+ 2. (* skoMC1 6.)))))))))))))))))))))))))))))

% In GRF format:
(sequent " MetiTarski formula " (antecedent (<= (* skoSC1 (* skoMC1 (* skoMC1 (* skoMC1 (- 1.))))) (* skoMC1 (* skoMC1 skoMC1))) (<= skoSC1 0.) (<= (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (+ 1. (* skoMC1 (- 3.)))))) (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (+ 2. (* skoMC1 3.))))) (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (+ (/ (- 1.) 6.) skoMC1)))) (* skoSC1 (* skoMC1 (* skoMC1 (* skoMC1 (/ (- 1.) 4.))))))))))) (* skoMC1 (* skoMC1 (* skoMC1 (+ 2. (* skoMC1 5.)))))) (<= (* skoSC1 (* skoMC1 (* skoMC1 (* skoMC1 (- 1.))))) (* skoMC1 (* skoMC1 skoMC1))) (> (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (+ (- 1.) (* skoMC1 3.))))) (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (+ (- 2.) (* skoMC1 (- 3.)))))) (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (* skoMC1 (- 1.))))) (* skoSC1 (* skoMC1 (* skoMC1 (* skoMC1 (/ 1. 12.))))))))))) (* skoMC1 (* skoMC1 (* skoMC1 (+ (- 2.) (* skoMC1 (- 5.))))))) (> (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (+ (- 1.) (* skoMC1 3.))))) (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (+ (- 2.) (* skoMC1 (- 3.)))))) (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (+ (/ 1. 6.) (* skoMC1 (- 1.)))))) (* skoSC1 (* skoMC1 (* skoMC1 (* skoMC1 (/ 1. 4.))))))))))) (* skoMC1 (* skoMC1 (* skoMC1 (+ (- 2.) (* skoMC1 (- 5.))))))) (> (* skoSC1 (* skoMC1 (* skoMC1 skoMC1))) (* skoMC1 (* skoMC1 (* skoMC1 (- 1.))))) (<= (* skoMC1 (* skoMC1 (* skoMC1 (- 2.)))) 0.) (> (* skoMC1 (* skoMC1 (* skoMC1 2.))) 0.) (> (* skoSC1 (+ (* skoMC1 (+ (- 1.) (* skoMC1 3.))) (* skoSC1 (+ (* skoMC1 (+ (- 2.) (* skoMC1 (- 3.)))) (* skoSC1 (+ (* skoMC1 (+ (/ 1. 6.) (* skoMC1 (- 1.)))) (* skoSC1 (* skoMC1 (/ 1. 4.))))))))) (* skoMC1 (+ (- 2.) (* skoMC1 (- 5.))))) (> (* skoSC1 (+ (* skoMC1 (+ (- 1.) (* skoMC1 3.))) (* skoSC1 (+ (* skoMC1 (+ (- 2.) (* skoMC1 (- 3.)))) (* skoSC1 (+ (* skoMC1 (* skoMC1 (- 1.))) (* skoSC1 (* skoMC1 (/ 1. 12.))))))))) (* skoMC1 (+ (- 2.) (* skoMC1 (- 5.))))) (<= (* skoSC1 (+ (* skoMC1 (+ 1. (* skoMC1 (- 3.)))) (* skoSC1 (+ (* skoMC1 (+ 2. (* skoMC1 3.))) (* skoSC1 (+ (* skoMC1 (+ (/ (- 1.) 6.) skoMC1)) (* skoSC1 (* skoMC1 (/ (- 1.) 4.))))))))) (* skoMC1 (+ 2. (* skoMC1 5.)))) (<= (* skoSC1 (+ (* skoMC1 (+ 1. (* skoMC1 (- 3.)))) (* skoSC1 (+ (* skoMC1 (+ 2. (* skoMC1 3.))) (* skoSC1 (+ (* skoMC1 skoMC1) (* skoSC1 (* skoMC1 (/ (- 1.) 12.))))))))) (* skoMC1 (+ 2. (* skoMC1 5.)))) (<= (* skoSC1 (* skoMC1 (- 1.))) skoMC1) (> (* skoSC1 skoMC1) (* skoMC1 (- 1.))) (<= 0. skoMC1) (> skoMC1 0.) (<= 0. skoSC1) (<= 2. skoMC1) (<= skoSC1 (/ 5. 4.)) (> (* skoSC1 (* skoMC1 (* skoMC1 (* skoMC1 2.)))) (* skoMC1 (* skoMC1 (* skoMC1 (- 2.))))) (<= (* skoSC1 (* skoMC1 (* skoMC1 (* skoMC1 (- 2.))))) (* skoMC1 (* skoMC1 (* skoMC1 2.))))) (succedent (> (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (+ (- 2.) (* skoMC1 (- 12.)))))) (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (+ 1. (* skoMC1 (- 6.)))))) (* skoSC1 (+ (* skoMC1 (* skoMC1 skoMC1)) (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (/ (- 1.) 12.)))) (* skoSC1 (* skoMC1 (* skoMC1 (* skoMC1 (/ (- 1.) 12.))))))))))))) (* skoMC1 (* skoMC1 (* skoMC1 (+ 2. (* skoMC1 6.))))))))
-----[end problem]-----

-----[begin problem]-----
% In Mathematica format:
Timing[Resolve[Exists[{skoSC1,skoMC1}, And[skoSC1>0,skoSC1*(skoMC1*skoMC1*skoMC1*(1+skoMC1*-3)+skoSC1*(skoMC1*skoMC1*skoMC1*(2+skoMC1*3)+skoSC1*(skoMC1*skoMC1*skoMC1*((-1/6)+skoMC1)+skoSC1*skoMC1*skoMC1*skoMC1*(-1/4))))<=skoMC1*skoMC1*skoMC1*(2+skoMC1*5),skoSC1*skoMC1*skoMC1*skoMC1*-1<=skoMC1*skoMC1*skoMC1,skoSC1*(skoMC1*skoMC1*skoMC1*(-1+skoMC1*3)+skoSC1*(skoMC1*skoMC1*skoMC1*(-2+skoMC1*-3)+skoSC1*(skoMC1*skoMC1*skoMC1*skoMC1*-1+skoSC1*skoMC1*skoMC1*skoMC1*(1/12))))>skoMC1*skoMC1*skoMC1*(-2+skoMC1*-5),skoSC1*(skoMC1*skoMC1*skoMC1*(-1+skoMC1*3)+skoSC1*(skoMC1*skoMC1*skoMC1*(-2+skoMC1*-3)+skoSC1*(skoMC1*skoMC1*skoMC1*((1/6)+skoMC1*-1)+skoSC1*skoMC1*skoMC1*skoMC1*(1/4))))>skoMC1*skoMC1*skoMC1*(-2+skoMC1*-5),skoSC1*skoMC1*skoMC1*skoMC1>skoMC1*skoMC1*skoMC1*-1,skoMC1*skoMC1*skoMC1*-2<=0,skoMC1*skoMC1*skoMC1*2>0,skoSC1*(skoMC1*(-1+skoMC1*3)+skoSC1*(skoMC1*(-2+skoMC1*-3)+skoSC1*(skoMC1*((1/6)+skoMC1*-1)+skoSC1*skoMC1*(1/4))))>skoMC1*(-2+skoMC1*-5),skoSC1*(skoMC1*(-1+skoMC1*3)+skoSC1*(skoMC1*(-2+skoMC1*-3)+skoSC1*(skoMC1*skoMC1*-1+skoSC1*skoMC1*(1/12))))>skoMC1*(-2+skoMC1*-5),skoSC1*(skoMC1*(1+skoMC1*-3)+skoSC1*(skoMC1*(2+skoMC1*3)+skoSC1*(skoMC1*((-1/6)+skoMC1)+skoSC1*skoMC1*(-1/4))))<=skoMC1*(2+skoMC1*5),skoSC1*(skoMC1*(1+skoMC1*-3)+skoSC1*(skoMC1*(2+skoMC1*3)+skoSC1*(skoMC1*skoMC1+skoSC1*skoMC1*(-1/12))))<=skoMC1*(2+skoMC1*5),skoSC1*skoMC1*-1<=skoMC1,skoSC1*skoMC1>skoMC1*-1,0<=skoMC1,skoMC1>0,0<=skoSC1,2<=skoMC1,skoSC1<=(5/4),skoSC1*skoMC1*skoMC1*skoMC1*2>skoMC1*skoMC1*skoMC1*-2,skoSC1*skoMC1*skoMC1*skoMC1*-2<=skoMC1*skoMC1*skoMC1*2,skoSC1*(skoMC1*skoMC1*skoMC1*(-2+skoMC1*-12)+skoSC1*(skoMC1*skoMC1*skoMC1*(1+skoMC1*-6)+skoSC1*(skoMC1*skoMC1*skoMC1+skoSC1*(skoMC1*skoMC1*skoMC1*(-1/12)+skoSC1*skoMC1*skoMC1*skoMC1*(-1/12)))))<=skoMC1*skoMC1*skoMC1*(2+skoMC1*6)]], Reals]]

% In QepcadB format:
(E skoSC1) (E skoMC1) [[0<skoSC1]/\[[(skoSC1 ((skoMC1 skoMC1 skoMC1 (1+(skoMC1 (-3))))+(skoSC1 ((skoMC1 skoMC1 skoMC1 (2+(skoMC1 (3))))+(skoSC1 ((skoMC1 skoMC1 skoMC1 (-1/6+skoMC1))+(skoSC1 skoMC1 skoMC1 skoMC1 (-1/4))))))))<=(skoMC1 skoMC1 skoMC1 (2+(skoMC1 (5))))]/\[[(skoSC1 skoMC1 skoMC1 skoMC1 (-1))<=(skoMC1 skoMC1 skoMC1)]/\[[(skoMC1 skoMC1 skoMC1 (-2+(skoMC1 (-5))))<(skoSC1 ((skoMC1 skoMC1 skoMC1 (-1+(skoMC1 (3))))+(skoSC1 ((skoMC1 skoMC1 skoMC1 (-2+(skoMC1 (-3))))+(skoSC1 ((skoMC1 skoMC1 skoMC1 skoMC1 (-1))+(skoSC1 skoMC1 skoMC1 skoMC1 (1/12))))))))]/\[[(skoMC1 skoMC1 skoMC1 (-2+(skoMC1 (-5))))<(skoSC1 ((skoMC1 skoMC1 skoMC1 (-1+(skoMC1 (3))))+(skoSC1 ((skoMC1 skoMC1 skoMC1 (-2+(skoMC1 (-3))))+(skoSC1 ((skoMC1 skoMC1 skoMC1 (1/6+(skoMC1 (-1))))+(skoSC1 skoMC1 skoMC1 skoMC1 (1/4))))))))]/\[[(skoMC1 skoMC1 skoMC1 (-1))<(skoSC1 skoMC1 skoMC1 skoMC1)]/\[[(skoMC1 skoMC1 skoMC1 (-2))<=0]/\[[0<(skoMC1 skoMC1 skoMC1 (2))]/\[[(skoMC1 (-2+(skoMC1 (-5))))<(skoSC1 ((skoMC1 (-1+(skoMC1 (3))))+(skoSC1 ((skoMC1 (-2+(skoMC1 (-3))))+(skoSC1 ((skoMC1 (1/6+(skoMC1 (-1))))+(skoSC1 skoMC1 (1/4))))))))]/\[[(skoMC1 (-2+(skoMC1 (-5))))<(skoSC1 ((skoMC1 (-1+(skoMC1 (3))))+(skoSC1 ((skoMC1 (-2+(skoMC1 (-3))))+(skoSC1 ((skoMC1 skoMC1 (-1))+(skoSC1 skoMC1 (1/12))))))))]/\[[(skoSC1 ((skoMC1 (1+(skoMC1 (-3))))+(skoSC1 ((skoMC1 (2+(skoMC1 (3))))+(skoSC1 ((skoMC1 (-1/6+skoMC1))+(skoSC1 skoMC1 (-1/4))))))))<=(skoMC1 (2+(skoMC1 (5))))]/\[[(skoSC1 ((skoMC1 (1+(skoMC1 (-3))))+(skoSC1 ((skoMC1 (2+(skoMC1 (3))))+(skoSC1 ((skoMC1 skoMC1)+(skoSC1 skoMC1 (-1/12))))))))<=(skoMC1 (2+(skoMC1 (5))))]/\[[(skoSC1 skoMC1 (-1))<=skoMC1]/\[[(skoMC1 (-1))<(skoSC1 skoMC1)]/\[[0<=skoMC1]/\[[0<skoMC1]/\[[0<=skoSC1]/\[[2<=skoMC1]/\[[skoSC1<=5/4]/\[[(skoMC1 skoMC1 skoMC1 (-2))<(skoSC1 skoMC1 skoMC1 skoMC1 (2))]/\[[(skoSC1 skoMC1 skoMC1 skoMC1 (-2))<=(skoMC1 skoMC1 skoMC1 (2))]/\[(skoSC1 ((skoMC1 skoMC1 skoMC1 (-2+(skoMC1 (-12))))+(skoSC1 ((skoMC1 skoMC1 skoMC1 (1+(skoMC1 (-6))))+(skoSC1 ((skoMC1 skoMC1 skoMC1)+(skoSC1 ((skoMC1 skoMC1 skoMC1 (-1/12))+(skoSC1 skoMC1 skoMC1 skoMC1 (-1/12))))))))))<=(skoMC1 skoMC1 skoMC1 (2+(skoMC1 (6))))]]]]]]]]]]]]]]]]]]]]]].

% In SMTLib2 format:
(declare-fun skoSC1 () Real) (declare-fun skoMC1 () Real) (assert (and (> skoSC1 0.) (and (<= (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (+ 1. (* skoMC1 (- 3.)))))) (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (+ 2. (* skoMC1 3.))))) (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (+ (/ (- 1.) 6.) skoMC1)))) (* skoSC1 (* skoMC1 (* skoMC1 (* skoMC1 (/ (- 1.) 4.))))))))))) (* skoMC1 (* skoMC1 (* skoMC1 (+ 2. (* skoMC1 5.)))))) (and (<= (* skoSC1 (* skoMC1 (* skoMC1 (* skoMC1 (- 1.))))) (* skoMC1 (* skoMC1 skoMC1))) (and (> (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (+ (- 1.) (* skoMC1 3.))))) (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (+ (- 2.) (* skoMC1 (- 3.)))))) (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (* skoMC1 (- 1.))))) (* skoSC1 (* skoMC1 (* skoMC1 (* skoMC1 (/ 1. 12.))))))))))) (* skoMC1 (* skoMC1 (* skoMC1 (+ (- 2.) (* skoMC1 (- 5.))))))) (and (> (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (+ (- 1.) (* skoMC1 3.))))) (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (+ (- 2.) (* skoMC1 (- 3.)))))) (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (+ (/ 1. 6.) (* skoMC1 (- 1.)))))) (* skoSC1 (* skoMC1 (* skoMC1 (* skoMC1 (/ 1. 4.))))))))))) (* skoMC1 (* skoMC1 (* skoMC1 (+ (- 2.) (* skoMC1 (- 5.))))))) (and (> (* skoSC1 (* skoMC1 (* skoMC1 skoMC1))) (* skoMC1 (* skoMC1 (* skoMC1 (- 1.))))) (and (<= (* skoMC1 (* skoMC1 (* skoMC1 (- 2.)))) 0.) (and (> (* skoMC1 (* skoMC1 (* skoMC1 2.))) 0.) (and (> (* skoSC1 (+ (* skoMC1 (+ (- 1.) (* skoMC1 3.))) (* skoSC1 (+ (* skoMC1 (+ (- 2.) (* skoMC1 (- 3.)))) (* skoSC1 (+ (* skoMC1 (+ (/ 1. 6.) (* skoMC1 (- 1.)))) (* skoSC1 (* skoMC1 (/ 1. 4.))))))))) (* skoMC1 (+ (- 2.) (* skoMC1 (- 5.))))) (and (> (* skoSC1 (+ (* skoMC1 (+ (- 1.) (* skoMC1 3.))) (* skoSC1 (+ (* skoMC1 (+ (- 2.) (* skoMC1 (- 3.)))) (* skoSC1 (+ (* skoMC1 (* skoMC1 (- 1.))) (* skoSC1 (* skoMC1 (/ 1. 12.))))))))) (* skoMC1 (+ (- 2.) (* skoMC1 (- 5.))))) (and (<= (* skoSC1 (+ (* skoMC1 (+ 1. (* skoMC1 (- 3.)))) (* skoSC1 (+ (* skoMC1 (+ 2. (* skoMC1 3.))) (* skoSC1 (+ (* skoMC1 (+ (/ (- 1.) 6.) skoMC1)) (* skoSC1 (* skoMC1 (/ (- 1.) 4.))))))))) (* skoMC1 (+ 2. (* skoMC1 5.)))) (and (<= (* skoSC1 (+ (* skoMC1 (+ 1. (* skoMC1 (- 3.)))) (* skoSC1 (+ (* skoMC1 (+ 2. (* skoMC1 3.))) (* skoSC1 (+ (* skoMC1 skoMC1) (* skoSC1 (* skoMC1 (/ (- 1.) 12.))))))))) (* skoMC1 (+ 2. (* skoMC1 5.)))) (and (<= (* skoSC1 (* skoMC1 (- 1.))) skoMC1) (and (> (* skoSC1 skoMC1) (* skoMC1 (- 1.))) (and (<= 0. skoMC1) (and (> skoMC1 0.) (and (<= 0. skoSC1) (and (<= 2. skoMC1) (and (<= skoSC1 (/ 5. 4.)) (and (> (* skoSC1 (* skoMC1 (* skoMC1 (* skoMC1 2.)))) (* skoMC1 (* skoMC1 (* skoMC1 (- 2.))))) (and (<= (* skoSC1 (* skoMC1 (* skoMC1 (* skoMC1 (- 2.))))) (* skoMC1 (* skoMC1 (* skoMC1 2.)))) (<= (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (+ (- 2.) (* skoMC1 (- 12.)))))) (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (+ 1. (* skoMC1 (- 6.)))))) (* skoSC1 (+ (* skoMC1 (* skoMC1 skoMC1)) (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (/ (- 1.) 12.)))) (* skoSC1 (* skoMC1 (* skoMC1 (* skoMC1 (/ (- 1.) 12.))))))))))))) (* skoMC1 (* skoMC1 (* skoMC1 (+ 2. (* skoMC1 6.))))))))))))))))))))))))))))

% In GRF format:
(sequent " MetiTarski formula " (antecedent (> skoSC1 0.) (<= (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (+ 1. (* skoMC1 (- 3.)))))) (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (+ 2. (* skoMC1 3.))))) (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (+ (/ (- 1.) 6.) skoMC1)))) (* skoSC1 (* skoMC1 (* skoMC1 (* skoMC1 (/ (- 1.) 4.))))))))))) (* skoMC1 (* skoMC1 (* skoMC1 (+ 2. (* skoMC1 5.)))))) (<= (* skoSC1 (* skoMC1 (* skoMC1 (* skoMC1 (- 1.))))) (* skoMC1 (* skoMC1 skoMC1))) (> (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (+ (- 1.) (* skoMC1 3.))))) (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (+ (- 2.) (* skoMC1 (- 3.)))))) (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (* skoMC1 (- 1.))))) (* skoSC1 (* skoMC1 (* skoMC1 (* skoMC1 (/ 1. 12.))))))))))) (* skoMC1 (* skoMC1 (* skoMC1 (+ (- 2.) (* skoMC1 (- 5.))))))) (> (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (+ (- 1.) (* skoMC1 3.))))) (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (+ (- 2.) (* skoMC1 (- 3.)))))) (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (+ (/ 1. 6.) (* skoMC1 (- 1.)))))) (* skoSC1 (* skoMC1 (* skoMC1 (* skoMC1 (/ 1. 4.))))))))))) (* skoMC1 (* skoMC1 (* skoMC1 (+ (- 2.) (* skoMC1 (- 5.))))))) (> (* skoSC1 (* skoMC1 (* skoMC1 skoMC1))) (* skoMC1 (* skoMC1 (* skoMC1 (- 1.))))) (<= (* skoMC1 (* skoMC1 (* skoMC1 (- 2.)))) 0.) (> (* skoMC1 (* skoMC1 (* skoMC1 2.))) 0.) (> (* skoSC1 (+ (* skoMC1 (+ (- 1.) (* skoMC1 3.))) (* skoSC1 (+ (* skoMC1 (+ (- 2.) (* skoMC1 (- 3.)))) (* skoSC1 (+ (* skoMC1 (+ (/ 1. 6.) (* skoMC1 (- 1.)))) (* skoSC1 (* skoMC1 (/ 1. 4.))))))))) (* skoMC1 (+ (- 2.) (* skoMC1 (- 5.))))) (> (* skoSC1 (+ (* skoMC1 (+ (- 1.) (* skoMC1 3.))) (* skoSC1 (+ (* skoMC1 (+ (- 2.) (* skoMC1 (- 3.)))) (* skoSC1 (+ (* skoMC1 (* skoMC1 (- 1.))) (* skoSC1 (* skoMC1 (/ 1. 12.))))))))) (* skoMC1 (+ (- 2.) (* skoMC1 (- 5.))))) (<= (* skoSC1 (+ (* skoMC1 (+ 1. (* skoMC1 (- 3.)))) (* skoSC1 (+ (* skoMC1 (+ 2. (* skoMC1 3.))) (* skoSC1 (+ (* skoMC1 (+ (/ (- 1.) 6.) skoMC1)) (* skoSC1 (* skoMC1 (/ (- 1.) 4.))))))))) (* skoMC1 (+ 2. (* skoMC1 5.)))) (<= (* skoSC1 (+ (* skoMC1 (+ 1. (* skoMC1 (- 3.)))) (* skoSC1 (+ (* skoMC1 (+ 2. (* skoMC1 3.))) (* skoSC1 (+ (* skoMC1 skoMC1) (* skoSC1 (* skoMC1 (/ (- 1.) 12.))))))))) (* skoMC1 (+ 2. (* skoMC1 5.)))) (<= (* skoSC1 (* skoMC1 (- 1.))) skoMC1) (> (* skoSC1 skoMC1) (* skoMC1 (- 1.))) (<= 0. skoMC1) (> skoMC1 0.) (<= 0. skoSC1) (<= 2. skoMC1) (<= skoSC1 (/ 5. 4.)) (> (* skoSC1 (* skoMC1 (* skoMC1 (* skoMC1 2.)))) (* skoMC1 (* skoMC1 (* skoMC1 (- 2.))))) (<= (* skoSC1 (* skoMC1 (* skoMC1 (* skoMC1 (- 2.))))) (* skoMC1 (* skoMC1 (* skoMC1 2.))))) (succedent (> (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (+ (- 2.) (* skoMC1 (- 12.)))))) (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (+ 1. (* skoMC1 (- 6.)))))) (* skoSC1 (+ (* skoMC1 (* skoMC1 skoMC1)) (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (/ (- 1.) 12.)))) (* skoSC1 (* skoMC1 (* skoMC1 (* skoMC1 (/ (- 1.) 12.))))))))))))) (* skoMC1 (* skoMC1 (* skoMC1 (+ 2. (* skoMC1 6.))))))))
-----[end problem]-----

-----[begin problem]-----
% In Mathematica format:
Timing[Resolve[Exists[{skoSC1,skoMC1}, And[skoSC1*(skoMC1*skoMC1*skoMC1*(1+skoMC1*-3)+skoSC1*(skoMC1*skoMC1*skoMC1*(2+skoMC1*3)+skoSC1*(skoMC1*skoMC1*skoMC1*skoMC1+skoSC1*skoMC1*skoMC1*skoMC1*(-1/12))))<=skoMC1*skoMC1*skoMC1*(2+skoMC1*5),skoSC1<=0,skoMC1*skoMC1*skoMC1*2>0,skoSC1*(skoMC1*skoMC1*skoMC1*(1+skoMC1*-3)+skoSC1*(skoMC1*skoMC1*skoMC1*(2+skoMC1*3)+skoSC1*(skoMC1*skoMC1*skoMC1*((-1/6)+skoMC1)+skoSC1*skoMC1*skoMC1*skoMC1*(-1/4))))<=skoMC1*skoMC1*skoMC1*(2+skoMC1*5),skoSC1*skoMC1*skoMC1*skoMC1*-1<=skoMC1*skoMC1*skoMC1,skoSC1*(skoMC1*skoMC1*skoMC1*(-1+skoMC1*3)+skoSC1*(skoMC1*skoMC1*skoMC1*(-2+skoMC1*-3)+skoSC1*(skoMC1*skoMC1*skoMC1*skoMC1*-1+skoSC1*skoMC1*skoMC1*skoMC1*(1/12))))>skoMC1*skoMC1*skoMC1*(-2+skoMC1*-5),skoSC1*(skoMC1*skoMC1*skoMC1*(-1+skoMC1*3)+skoSC1*(skoMC1*skoMC1*skoMC1*(-2+skoMC1*-3)+skoSC1*(skoMC1*skoMC1*skoMC1*((1/6)+skoMC1*-1)+skoSC1*skoMC1*skoMC1*skoMC1*(1/4))))>skoMC1*skoMC1*skoMC1*(-2+skoMC1*-5),skoSC1*skoMC1*skoMC1*skoMC1>skoMC1*skoMC1*skoMC1*-1,skoMC1*skoMC1*skoMC1*-2<=0,skoMC1*skoMC1*skoMC1*2>0,skoSC1*(skoMC1*(-1+skoMC1*3)+skoSC1*(skoMC1*(-2+skoMC1*-3)+skoSC1*(skoMC1*((1/6)+skoMC1*-1)+skoSC1*skoMC1*(1/4))))>skoMC1*(-2+skoMC1*-5),skoSC1*(skoMC1*(-1+skoMC1*3)+skoSC1*(skoMC1*(-2+skoMC1*-3)+skoSC1*(skoMC1*skoMC1*-1+skoSC1*skoMC1*(1/12))))>skoMC1*(-2+skoMC1*-5),skoSC1*(skoMC1*(1+skoMC1*-3)+skoSC1*(skoMC1*(2+skoMC1*3)+skoSC1*(skoMC1*((-1/6)+skoMC1)+skoSC1*skoMC1*(-1/4))))<=skoMC1*(2+skoMC1*5),skoSC1*(skoMC1*(1+skoMC1*-3)+skoSC1*(skoMC1*(2+skoMC1*3)+skoSC1*(skoMC1*skoMC1+skoSC1*skoMC1*(-1/12))))<=skoMC1*(2+skoMC1*5),skoSC1*skoMC1*-1<=skoMC1,skoSC1*skoMC1>skoMC1*-1,0<=skoMC1,skoMC1>0,0<=skoSC1,2<=skoMC1,skoSC1<=(5/4),skoSC1*skoMC1*skoMC1*skoMC1*2>skoMC1*skoMC1*skoMC1*-2,skoSC1*skoMC1*skoMC1*skoMC1*-2<=skoMC1*skoMC1*skoMC1*2,skoSC1*(skoMC1*skoMC1*skoMC1*(-2+skoMC1*-12)+skoSC1*(skoMC1*skoMC1*skoMC1*(1+skoMC1*-6)+skoSC1*(skoMC1*skoMC1*skoMC1+skoSC1*(skoMC1*skoMC1*skoMC1*(-1/12)+skoSC1*skoMC1*skoMC1*skoMC1*(-1/12)))))<=skoMC1*skoMC1*skoMC1*(2+skoMC1*6)]], Reals]]

% In QepcadB format:
(E skoSC1) (E skoMC1) [[(skoSC1 ((skoMC1 skoMC1 skoMC1 (1+(skoMC1 (-3))))+(skoSC1 ((skoMC1 skoMC1 skoMC1 (2+(skoMC1 (3))))+(skoSC1 ((skoMC1 skoMC1 skoMC1 skoMC1)+(skoSC1 skoMC1 skoMC1 skoMC1 (-1/12))))))))<=(skoMC1 skoMC1 skoMC1 (2+(skoMC1 (5))))]/\[[skoSC1<=0]/\[[0<(skoMC1 skoMC1 skoMC1 (2))]/\[[(skoSC1 ((skoMC1 skoMC1 skoMC1 (1+(skoMC1 (-3))))+(skoSC1 ((skoMC1 skoMC1 skoMC1 (2+(skoMC1 (3))))+(skoSC1 ((skoMC1 skoMC1 skoMC1 (-1/6+skoMC1))+(skoSC1 skoMC1 skoMC1 skoMC1 (-1/4))))))))<=(skoMC1 skoMC1 skoMC1 (2+(skoMC1 (5))))]/\[[(skoSC1 skoMC1 skoMC1 skoMC1 (-1))<=(skoMC1 skoMC1 skoMC1)]/\[[(skoMC1 skoMC1 skoMC1 (-2+(skoMC1 (-5))))<(skoSC1 ((skoMC1 skoMC1 skoMC1 (-1+(skoMC1 (3))))+(skoSC1 ((skoMC1 skoMC1 skoMC1 (-2+(skoMC1 (-3))))+(skoSC1 ((skoMC1 skoMC1 skoMC1 skoMC1 (-1))+(skoSC1 skoMC1 skoMC1 skoMC1 (1/12))))))))]/\[[(skoMC1 skoMC1 skoMC1 (-2+(skoMC1 (-5))))<(skoSC1 ((skoMC1 skoMC1 skoMC1 (-1+(skoMC1 (3))))+(skoSC1 ((skoMC1 skoMC1 skoMC1 (-2+(skoMC1 (-3))))+(skoSC1 ((skoMC1 skoMC1 skoMC1 (1/6+(skoMC1 (-1))))+(skoSC1 skoMC1 skoMC1 skoMC1 (1/4))))))))]/\[[(skoMC1 skoMC1 skoMC1 (-1))<(skoSC1 skoMC1 skoMC1 skoMC1)]/\[[(skoMC1 skoMC1 skoMC1 (-2))<=0]/\[[0<(skoMC1 skoMC1 skoMC1 (2))]/\[[(skoMC1 (-2+(skoMC1 (-5))))<(skoSC1 ((skoMC1 (-1+(skoMC1 (3))))+(skoSC1 ((skoMC1 (-2+(skoMC1 (-3))))+(skoSC1 ((skoMC1 (1/6+(skoMC1 (-1))))+(skoSC1 skoMC1 (1/4))))))))]/\[[(skoMC1 (-2+(skoMC1 (-5))))<(skoSC1 ((skoMC1 (-1+(skoMC1 (3))))+(skoSC1 ((skoMC1 (-2+(skoMC1 (-3))))+(skoSC1 ((skoMC1 skoMC1 (-1))+(skoSC1 skoMC1 (1/12))))))))]/\[[(skoSC1 ((skoMC1 (1+(skoMC1 (-3))))+(skoSC1 ((skoMC1 (2+(skoMC1 (3))))+(skoSC1 ((skoMC1 (-1/6+skoMC1))+(skoSC1 skoMC1 (-1/4))))))))<=(skoMC1 (2+(skoMC1 (5))))]/\[[(skoSC1 ((skoMC1 (1+(skoMC1 (-3))))+(skoSC1 ((skoMC1 (2+(skoMC1 (3))))+(skoSC1 ((skoMC1 skoMC1)+(skoSC1 skoMC1 (-1/12))))))))<=(skoMC1 (2+(skoMC1 (5))))]/\[[(skoSC1 skoMC1 (-1))<=skoMC1]/\[[(skoMC1 (-1))<(skoSC1 skoMC1)]/\[[0<=skoMC1]/\[[0<skoMC1]/\[[0<=skoSC1]/\[[2<=skoMC1]/\[[skoSC1<=5/4]/\[[(skoMC1 skoMC1 skoMC1 (-2))<(skoSC1 skoMC1 skoMC1 skoMC1 (2))]/\[[(skoSC1 skoMC1 skoMC1 skoMC1 (-2))<=(skoMC1 skoMC1 skoMC1 (2))]/\[(skoSC1 ((skoMC1 skoMC1 skoMC1 (-2+(skoMC1 (-12))))+(skoSC1 ((skoMC1 skoMC1 skoMC1 (1+(skoMC1 (-6))))+(skoSC1 ((skoMC1 skoMC1 skoMC1)+(skoSC1 ((skoMC1 skoMC1 skoMC1 (-1/12))+(skoSC1 skoMC1 skoMC1 skoMC1 (-1/12))))))))))<=(skoMC1 skoMC1 skoMC1 (2+(skoMC1 (6))))]]]]]]]]]]]]]]]]]]]]]]]].

% In SMTLib2 format:
(declare-fun skoSC1 () Real) (declare-fun skoMC1 () Real) (assert (and (<= (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (+ 1. (* skoMC1 (- 3.)))))) (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (+ 2. (* skoMC1 3.))))) (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 skoMC1))) (* skoSC1 (* skoMC1 (* skoMC1 (* skoMC1 (/ (- 1.) 12.))))))))))) (* skoMC1 (* skoMC1 (* skoMC1 (+ 2. (* skoMC1 5.)))))) (and (<= skoSC1 0.) (and (> (* skoMC1 (* skoMC1 (* skoMC1 2.))) 0.) (and (<= (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (+ 1. (* skoMC1 (- 3.)))))) (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (+ 2. (* skoMC1 3.))))) (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (+ (/ (- 1.) 6.) skoMC1)))) (* skoSC1 (* skoMC1 (* skoMC1 (* skoMC1 (/ (- 1.) 4.))))))))))) (* skoMC1 (* skoMC1 (* skoMC1 (+ 2. (* skoMC1 5.)))))) (and (<= (* skoSC1 (* skoMC1 (* skoMC1 (* skoMC1 (- 1.))))) (* skoMC1 (* skoMC1 skoMC1))) (and (> (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (+ (- 1.) (* skoMC1 3.))))) (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (+ (- 2.) (* skoMC1 (- 3.)))))) (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (* skoMC1 (- 1.))))) (* skoSC1 (* skoMC1 (* skoMC1 (* skoMC1 (/ 1. 12.))))))))))) (* skoMC1 (* skoMC1 (* skoMC1 (+ (- 2.) (* skoMC1 (- 5.))))))) (and (> (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (+ (- 1.) (* skoMC1 3.))))) (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (+ (- 2.) (* skoMC1 (- 3.)))))) (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (+ (/ 1. 6.) (* skoMC1 (- 1.)))))) (* skoSC1 (* skoMC1 (* skoMC1 (* skoMC1 (/ 1. 4.))))))))))) (* skoMC1 (* skoMC1 (* skoMC1 (+ (- 2.) (* skoMC1 (- 5.))))))) (and (> (* skoSC1 (* skoMC1 (* skoMC1 skoMC1))) (* skoMC1 (* skoMC1 (* skoMC1 (- 1.))))) (and (<= (* skoMC1 (* skoMC1 (* skoMC1 (- 2.)))) 0.) (and (> (* skoMC1 (* skoMC1 (* skoMC1 2.))) 0.) (and (> (* skoSC1 (+ (* skoMC1 (+ (- 1.) (* skoMC1 3.))) (* skoSC1 (+ (* skoMC1 (+ (- 2.) (* skoMC1 (- 3.)))) (* skoSC1 (+ (* skoMC1 (+ (/ 1. 6.) (* skoMC1 (- 1.)))) (* skoSC1 (* skoMC1 (/ 1. 4.))))))))) (* skoMC1 (+ (- 2.) (* skoMC1 (- 5.))))) (and (> (* skoSC1 (+ (* skoMC1 (+ (- 1.) (* skoMC1 3.))) (* skoSC1 (+ (* skoMC1 (+ (- 2.) (* skoMC1 (- 3.)))) (* skoSC1 (+ (* skoMC1 (* skoMC1 (- 1.))) (* skoSC1 (* skoMC1 (/ 1. 12.))))))))) (* skoMC1 (+ (- 2.) (* skoMC1 (- 5.))))) (and (<= (* skoSC1 (+ (* skoMC1 (+ 1. (* skoMC1 (- 3.)))) (* skoSC1 (+ (* skoMC1 (+ 2. (* skoMC1 3.))) (* skoSC1 (+ (* skoMC1 (+ (/ (- 1.) 6.) skoMC1)) (* skoSC1 (* skoMC1 (/ (- 1.) 4.))))))))) (* skoMC1 (+ 2. (* skoMC1 5.)))) (and (<= (* skoSC1 (+ (* skoMC1 (+ 1. (* skoMC1 (- 3.)))) (* skoSC1 (+ (* skoMC1 (+ 2. (* skoMC1 3.))) (* skoSC1 (+ (* skoMC1 skoMC1) (* skoSC1 (* skoMC1 (/ (- 1.) 12.))))))))) (* skoMC1 (+ 2. (* skoMC1 5.)))) (and (<= (* skoSC1 (* skoMC1 (- 1.))) skoMC1) (and (> (* skoSC1 skoMC1) (* skoMC1 (- 1.))) (and (<= 0. skoMC1) (and (> skoMC1 0.) (and (<= 0. skoSC1) (and (<= 2. skoMC1) (and (<= skoSC1 (/ 5. 4.)) (and (> (* skoSC1 (* skoMC1 (* skoMC1 (* skoMC1 2.)))) (* skoMC1 (* skoMC1 (* skoMC1 (- 2.))))) (and (<= (* skoSC1 (* skoMC1 (* skoMC1 (* skoMC1 (- 2.))))) (* skoMC1 (* skoMC1 (* skoMC1 2.)))) (<= (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (+ (- 2.) (* skoMC1 (- 12.)))))) (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (+ 1. (* skoMC1 (- 6.)))))) (* skoSC1 (+ (* skoMC1 (* skoMC1 skoMC1)) (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (/ (- 1.) 12.)))) (* skoSC1 (* skoMC1 (* skoMC1 (* skoMC1 (/ (- 1.) 12.))))))))))))) (* skoMC1 (* skoMC1 (* skoMC1 (+ 2. (* skoMC1 6.))))))))))))))))))))))))))))))

% In GRF format:
(sequent " MetiTarski formula " (antecedent (<= (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (+ 1. (* skoMC1 (- 3.)))))) (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (+ 2. (* skoMC1 3.))))) (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 skoMC1))) (* skoSC1 (* skoMC1 (* skoMC1 (* skoMC1 (/ (- 1.) 12.))))))))))) (* skoMC1 (* skoMC1 (* skoMC1 (+ 2. (* skoMC1 5.)))))) (<= skoSC1 0.) (> (* skoMC1 (* skoMC1 (* skoMC1 2.))) 0.) (<= (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (+ 1. (* skoMC1 (- 3.)))))) (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (+ 2. (* skoMC1 3.))))) (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (+ (/ (- 1.) 6.) skoMC1)))) (* skoSC1 (* skoMC1 (* skoMC1 (* skoMC1 (/ (- 1.) 4.))))))))))) (* skoMC1 (* skoMC1 (* skoMC1 (+ 2. (* skoMC1 5.)))))) (<= (* skoSC1 (* skoMC1 (* skoMC1 (* skoMC1 (- 1.))))) (* skoMC1 (* skoMC1 skoMC1))) (> (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (+ (- 1.) (* skoMC1 3.))))) (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (+ (- 2.) (* skoMC1 (- 3.)))))) (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (* skoMC1 (- 1.))))) (* skoSC1 (* skoMC1 (* skoMC1 (* skoMC1 (/ 1. 12.))))))))))) (* skoMC1 (* skoMC1 (* skoMC1 (+ (- 2.) (* skoMC1 (- 5.))))))) (> (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (+ (- 1.) (* skoMC1 3.))))) (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (+ (- 2.) (* skoMC1 (- 3.)))))) (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (+ (/ 1. 6.) (* skoMC1 (- 1.)))))) (* skoSC1 (* skoMC1 (* skoMC1 (* skoMC1 (/ 1. 4.))))))))))) (* skoMC1 (* skoMC1 (* skoMC1 (+ (- 2.) (* skoMC1 (- 5.))))))) (> (* skoSC1 (* skoMC1 (* skoMC1 skoMC1))) (* skoMC1 (* skoMC1 (* skoMC1 (- 1.))))) (<= (* skoMC1 (* skoMC1 (* skoMC1 (- 2.)))) 0.) (> (* skoMC1 (* skoMC1 (* skoMC1 2.))) 0.) (> (* skoSC1 (+ (* skoMC1 (+ (- 1.) (* skoMC1 3.))) (* skoSC1 (+ (* skoMC1 (+ (- 2.) (* skoMC1 (- 3.)))) (* skoSC1 (+ (* skoMC1 (+ (/ 1. 6.) (* skoMC1 (- 1.)))) (* skoSC1 (* skoMC1 (/ 1. 4.))))))))) (* skoMC1 (+ (- 2.) (* skoMC1 (- 5.))))) (> (* skoSC1 (+ (* skoMC1 (+ (- 1.) (* skoMC1 3.))) (* skoSC1 (+ (* skoMC1 (+ (- 2.) (* skoMC1 (- 3.)))) (* skoSC1 (+ (* skoMC1 (* skoMC1 (- 1.))) (* skoSC1 (* skoMC1 (/ 1. 12.))))))))) (* skoMC1 (+ (- 2.) (* skoMC1 (- 5.))))) (<= (* skoSC1 (+ (* skoMC1 (+ 1. (* skoMC1 (- 3.)))) (* skoSC1 (+ (* skoMC1 (+ 2. (* skoMC1 3.))) (* skoSC1 (+ (* skoMC1 (+ (/ (- 1.) 6.) skoMC1)) (* skoSC1 (* skoMC1 (/ (- 1.) 4.))))))))) (* skoMC1 (+ 2. (* skoMC1 5.)))) (<= (* skoSC1 (+ (* skoMC1 (+ 1. (* skoMC1 (- 3.)))) (* skoSC1 (+ (* skoMC1 (+ 2. (* skoMC1 3.))) (* skoSC1 (+ (* skoMC1 skoMC1) (* skoSC1 (* skoMC1 (/ (- 1.) 12.))))))))) (* skoMC1 (+ 2. (* skoMC1 5.)))) (<= (* skoSC1 (* skoMC1 (- 1.))) skoMC1) (> (* skoSC1 skoMC1) (* skoMC1 (- 1.))) (<= 0. skoMC1) (> skoMC1 0.) (<= 0. skoSC1) (<= 2. skoMC1) (<= skoSC1 (/ 5. 4.)) (> (* skoSC1 (* skoMC1 (* skoMC1 (* skoMC1 2.)))) (* skoMC1 (* skoMC1 (* skoMC1 (- 2.))))) (<= (* skoSC1 (* skoMC1 (* skoMC1 (* skoMC1 (- 2.))))) (* skoMC1 (* skoMC1 (* skoMC1 2.))))) (succedent (> (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (+ (- 2.) (* skoMC1 (- 12.)))))) (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (+ 1. (* skoMC1 (- 6.)))))) (* skoSC1 (+ (* skoMC1 (* skoMC1 skoMC1)) (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (/ (- 1.) 12.)))) (* skoSC1 (* skoMC1 (* skoMC1 (* skoMC1 (/ (- 1.) 12.))))))))))))) (* skoMC1 (* skoMC1 (* skoMC1 (+ 2. (* skoMC1 6.))))))))
-----[end problem]-----

-----[begin problem]-----
% In Mathematica format:
Timing[Resolve[Exists[{skoSC1,skoMC1}, And[skoSC1*(skoMC1*skoMC1*skoMC1*(1+skoMC1*-3)+skoSC1*(skoMC1*skoMC1*skoMC1*(2+skoMC1*3)+skoSC1*(skoMC1*skoMC1*skoMC1*skoMC1+skoSC1*skoMC1*skoMC1*skoMC1*(-1/12))))<=skoMC1*skoMC1*skoMC1*(2+skoMC1*5),skoSC1*(skoMC1*skoMC1*skoMC1*(1+skoMC1*-3)+skoSC1*(skoMC1*skoMC1*skoMC1*(2+skoMC1*3)+skoSC1*(skoMC1*skoMC1*skoMC1*((-1/6)+skoMC1)+skoSC1*skoMC1*skoMC1*skoMC1*(-1/4))))<=skoMC1*skoMC1*skoMC1*(2+skoMC1*5),skoSC1*skoMC1*skoMC1*skoMC1*-1<=skoMC1*skoMC1*skoMC1,skoSC1*(skoMC1*skoMC1*skoMC1*(-1+skoMC1*3)+skoSC1*(skoMC1*skoMC1*skoMC1*(-2+skoMC1*-3)+skoSC1*(skoMC1*skoMC1*skoMC1*skoMC1*-1+skoSC1*skoMC1*skoMC1*skoMC1*(1/12))))>skoMC1*skoMC1*skoMC1*(-2+skoMC1*-5),skoSC1*(skoMC1*skoMC1*skoMC1*(-1+skoMC1*3)+skoSC1*(skoMC1*skoMC1*skoMC1*(-2+skoMC1*-3)+skoSC1*(skoMC1*skoMC1*skoMC1*((1/6)+skoMC1*-1)+skoSC1*skoMC1*skoMC1*skoMC1*(1/4))))>skoMC1*skoMC1*skoMC1*(-2+skoMC1*-5),skoSC1*skoMC1*skoMC1*skoMC1>skoMC1*skoMC1*skoMC1*-1,skoMC1*skoMC1*skoMC1*-2<=0,skoMC1*skoMC1*skoMC1*2>0,skoSC1*(skoMC1*(-1+skoMC1*3)+skoSC1*(skoMC1*(-2+skoMC1*-3)+skoSC1*(skoMC1*((1/6)+skoMC1*-1)+skoSC1*skoMC1*(1/4))))>skoMC1*(-2+skoMC1*-5),skoSC1*(skoMC1*(-1+skoMC1*3)+skoSC1*(skoMC1*(-2+skoMC1*-3)+skoSC1*(skoMC1*skoMC1*-1+skoSC1*skoMC1*(1/12))))>skoMC1*(-2+skoMC1*-5),skoSC1*(skoMC1*(1+skoMC1*-3)+skoSC1*(skoMC1*(2+skoMC1*3)+skoSC1*(skoMC1*((-1/6)+skoMC1)+skoSC1*skoMC1*(-1/4))))<=skoMC1*(2+skoMC1*5),skoSC1*(skoMC1*(1+skoMC1*-3)+skoSC1*(skoMC1*(2+skoMC1*3)+skoSC1*(skoMC1*skoMC1+skoSC1*skoMC1*(-1/12))))<=skoMC1*(2+skoMC1*5),skoSC1*skoMC1*-1<=skoMC1,skoSC1*skoMC1>skoMC1*-1,0<=skoMC1,skoMC1>0,0<=skoSC1,2<=skoMC1,skoSC1<=(5/4),skoSC1*skoMC1*skoMC1*skoMC1*2>skoMC1*skoMC1*skoMC1*-2,skoSC1*skoMC1*skoMC1*skoMC1*-2<=skoMC1*skoMC1*skoMC1*2,skoSC1*(skoMC1*skoMC1*skoMC1*(-2+skoMC1*-12)+skoSC1*(skoMC1*skoMC1*skoMC1*(1+skoMC1*-6)+skoSC1*(skoMC1*skoMC1*skoMC1+skoSC1*(skoMC1*skoMC1*skoMC1*(-1/12)+skoSC1*skoMC1*skoMC1*skoMC1*(-1/12)))))<=skoMC1*skoMC1*skoMC1*(2+skoMC1*6)]], Reals]]

% In QepcadB format:
(E skoSC1) (E skoMC1) [[(skoSC1 ((skoMC1 skoMC1 skoMC1 (1+(skoMC1 (-3))))+(skoSC1 ((skoMC1 skoMC1 skoMC1 (2+(skoMC1 (3))))+(skoSC1 ((skoMC1 skoMC1 skoMC1 skoMC1)+(skoSC1 skoMC1 skoMC1 skoMC1 (-1/12))))))))<=(skoMC1 skoMC1 skoMC1 (2+(skoMC1 (5))))]/\[[(skoSC1 ((skoMC1 skoMC1 skoMC1 (1+(skoMC1 (-3))))+(skoSC1 ((skoMC1 skoMC1 skoMC1 (2+(skoMC1 (3))))+(skoSC1 ((skoMC1 skoMC1 skoMC1 (-1/6+skoMC1))+(skoSC1 skoMC1 skoMC1 skoMC1 (-1/4))))))))<=(skoMC1 skoMC1 skoMC1 (2+(skoMC1 (5))))]/\[[(skoSC1 skoMC1 skoMC1 skoMC1 (-1))<=(skoMC1 skoMC1 skoMC1)]/\[[(skoMC1 skoMC1 skoMC1 (-2+(skoMC1 (-5))))<(skoSC1 ((skoMC1 skoMC1 skoMC1 (-1+(skoMC1 (3))))+(skoSC1 ((skoMC1 skoMC1 skoMC1 (-2+(skoMC1 (-3))))+(skoSC1 ((skoMC1 skoMC1 skoMC1 skoMC1 (-1))+(skoSC1 skoMC1 skoMC1 skoMC1 (1/12))))))))]/\[[(skoMC1 skoMC1 skoMC1 (-2+(skoMC1 (-5))))<(skoSC1 ((skoMC1 skoMC1 skoMC1 (-1+(skoMC1 (3))))+(skoSC1 ((skoMC1 skoMC1 skoMC1 (-2+(skoMC1 (-3))))+(skoSC1 ((skoMC1 skoMC1 skoMC1 (1/6+(skoMC1 (-1))))+(skoSC1 skoMC1 skoMC1 skoMC1 (1/4))))))))]/\[[(skoMC1 skoMC1 skoMC1 (-1))<(skoSC1 skoMC1 skoMC1 skoMC1)]/\[[(skoMC1 skoMC1 skoMC1 (-2))<=0]/\[[0<(skoMC1 skoMC1 skoMC1 (2))]/\[[(skoMC1 (-2+(skoMC1 (-5))))<(skoSC1 ((skoMC1 (-1+(skoMC1 (3))))+(skoSC1 ((skoMC1 (-2+(skoMC1 (-3))))+(skoSC1 ((skoMC1 (1/6+(skoMC1 (-1))))+(skoSC1 skoMC1 (1/4))))))))]/\[[(skoMC1 (-2+(skoMC1 (-5))))<(skoSC1 ((skoMC1 (-1+(skoMC1 (3))))+(skoSC1 ((skoMC1 (-2+(skoMC1 (-3))))+(skoSC1 ((skoMC1 skoMC1 (-1))+(skoSC1 skoMC1 (1/12))))))))]/\[[(skoSC1 ((skoMC1 (1+(skoMC1 (-3))))+(skoSC1 ((skoMC1 (2+(skoMC1 (3))))+(skoSC1 ((skoMC1 (-1/6+skoMC1))+(skoSC1 skoMC1 (-1/4))))))))<=(skoMC1 (2+(skoMC1 (5))))]/\[[(skoSC1 ((skoMC1 (1+(skoMC1 (-3))))+(skoSC1 ((skoMC1 (2+(skoMC1 (3))))+(skoSC1 ((skoMC1 skoMC1)+(skoSC1 skoMC1 (-1/12))))))))<=(skoMC1 (2+(skoMC1 (5))))]/\[[(skoSC1 skoMC1 (-1))<=skoMC1]/\[[(skoMC1 (-1))<(skoSC1 skoMC1)]/\[[0<=skoMC1]/\[[0<skoMC1]/\[[0<=skoSC1]/\[[2<=skoMC1]/\[[skoSC1<=5/4]/\[[(skoMC1 skoMC1 skoMC1 (-2))<(skoSC1 skoMC1 skoMC1 skoMC1 (2))]/\[[(skoSC1 skoMC1 skoMC1 skoMC1 (-2))<=(skoMC1 skoMC1 skoMC1 (2))]/\[(skoSC1 ((skoMC1 skoMC1 skoMC1 (-2+(skoMC1 (-12))))+(skoSC1 ((skoMC1 skoMC1 skoMC1 (1+(skoMC1 (-6))))+(skoSC1 ((skoMC1 skoMC1 skoMC1)+(skoSC1 ((skoMC1 skoMC1 skoMC1 (-1/12))+(skoSC1 skoMC1 skoMC1 skoMC1 (-1/12))))))))))<=(skoMC1 skoMC1 skoMC1 (2+(skoMC1 (6))))]]]]]]]]]]]]]]]]]]]]]].

% In SMTLib2 format:
(declare-fun skoSC1 () Real) (declare-fun skoMC1 () Real) (assert (and (<= (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (+ 1. (* skoMC1 (- 3.)))))) (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (+ 2. (* skoMC1 3.))))) (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 skoMC1))) (* skoSC1 (* skoMC1 (* skoMC1 (* skoMC1 (/ (- 1.) 12.))))))))))) (* skoMC1 (* skoMC1 (* skoMC1 (+ 2. (* skoMC1 5.)))))) (and (<= (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (+ 1. (* skoMC1 (- 3.)))))) (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (+ 2. (* skoMC1 3.))))) (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (+ (/ (- 1.) 6.) skoMC1)))) (* skoSC1 (* skoMC1 (* skoMC1 (* skoMC1 (/ (- 1.) 4.))))))))))) (* skoMC1 (* skoMC1 (* skoMC1 (+ 2. (* skoMC1 5.)))))) (and (<= (* skoSC1 (* skoMC1 (* skoMC1 (* skoMC1 (- 1.))))) (* skoMC1 (* skoMC1 skoMC1))) (and (> (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (+ (- 1.) (* skoMC1 3.))))) (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (+ (- 2.) (* skoMC1 (- 3.)))))) (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (* skoMC1 (- 1.))))) (* skoSC1 (* skoMC1 (* skoMC1 (* skoMC1 (/ 1. 12.))))))))))) (* skoMC1 (* skoMC1 (* skoMC1 (+ (- 2.) (* skoMC1 (- 5.))))))) (and (> (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (+ (- 1.) (* skoMC1 3.))))) (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (+ (- 2.) (* skoMC1 (- 3.)))))) (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (+ (/ 1. 6.) (* skoMC1 (- 1.)))))) (* skoSC1 (* skoMC1 (* skoMC1 (* skoMC1 (/ 1. 4.))))))))))) (* skoMC1 (* skoMC1 (* skoMC1 (+ (- 2.) (* skoMC1 (- 5.))))))) (and (> (* skoSC1 (* skoMC1 (* skoMC1 skoMC1))) (* skoMC1 (* skoMC1 (* skoMC1 (- 1.))))) (and (<= (* skoMC1 (* skoMC1 (* skoMC1 (- 2.)))) 0.) (and (> (* skoMC1 (* skoMC1 (* skoMC1 2.))) 0.) (and (> (* skoSC1 (+ (* skoMC1 (+ (- 1.) (* skoMC1 3.))) (* skoSC1 (+ (* skoMC1 (+ (- 2.) (* skoMC1 (- 3.)))) (* skoSC1 (+ (* skoMC1 (+ (/ 1. 6.) (* skoMC1 (- 1.)))) (* skoSC1 (* skoMC1 (/ 1. 4.))))))))) (* skoMC1 (+ (- 2.) (* skoMC1 (- 5.))))) (and (> (* skoSC1 (+ (* skoMC1 (+ (- 1.) (* skoMC1 3.))) (* skoSC1 (+ (* skoMC1 (+ (- 2.) (* skoMC1 (- 3.)))) (* skoSC1 (+ (* skoMC1 (* skoMC1 (- 1.))) (* skoSC1 (* skoMC1 (/ 1. 12.))))))))) (* skoMC1 (+ (- 2.) (* skoMC1 (- 5.))))) (and (<= (* skoSC1 (+ (* skoMC1 (+ 1. (* skoMC1 (- 3.)))) (* skoSC1 (+ (* skoMC1 (+ 2. (* skoMC1 3.))) (* skoSC1 (+ (* skoMC1 (+ (/ (- 1.) 6.) skoMC1)) (* skoSC1 (* skoMC1 (/ (- 1.) 4.))))))))) (* skoMC1 (+ 2. (* skoMC1 5.)))) (and (<= (* skoSC1 (+ (* skoMC1 (+ 1. (* skoMC1 (- 3.)))) (* skoSC1 (+ (* skoMC1 (+ 2. (* skoMC1 3.))) (* skoSC1 (+ (* skoMC1 skoMC1) (* skoSC1 (* skoMC1 (/ (- 1.) 12.))))))))) (* skoMC1 (+ 2. (* skoMC1 5.)))) (and (<= (* skoSC1 (* skoMC1 (- 1.))) skoMC1) (and (> (* skoSC1 skoMC1) (* skoMC1 (- 1.))) (and (<= 0. skoMC1) (and (> skoMC1 0.) (and (<= 0. skoSC1) (and (<= 2. skoMC1) (and (<= skoSC1 (/ 5. 4.)) (and (> (* skoSC1 (* skoMC1 (* skoMC1 (* skoMC1 2.)))) (* skoMC1 (* skoMC1 (* skoMC1 (- 2.))))) (and (<= (* skoSC1 (* skoMC1 (* skoMC1 (* skoMC1 (- 2.))))) (* skoMC1 (* skoMC1 (* skoMC1 2.)))) (<= (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (+ (- 2.) (* skoMC1 (- 12.)))))) (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (+ 1. (* skoMC1 (- 6.)))))) (* skoSC1 (+ (* skoMC1 (* skoMC1 skoMC1)) (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (/ (- 1.) 12.)))) (* skoSC1 (* skoMC1 (* skoMC1 (* skoMC1 (/ (- 1.) 12.))))))))))))) (* skoMC1 (* skoMC1 (* skoMC1 (+ 2. (* skoMC1 6.))))))))))))))))))))))))))))

% In GRF format:
(sequent " MetiTarski formula " (antecedent (<= (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (+ 1. (* skoMC1 (- 3.)))))) (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (+ 2. (* skoMC1 3.))))) (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 skoMC1))) (* skoSC1 (* skoMC1 (* skoMC1 (* skoMC1 (/ (- 1.) 12.))))))))))) (* skoMC1 (* skoMC1 (* skoMC1 (+ 2. (* skoMC1 5.)))))) (<= (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (+ 1. (* skoMC1 (- 3.)))))) (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (+ 2. (* skoMC1 3.))))) (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (+ (/ (- 1.) 6.) skoMC1)))) (* skoSC1 (* skoMC1 (* skoMC1 (* skoMC1 (/ (- 1.) 4.))))))))))) (* skoMC1 (* skoMC1 (* skoMC1 (+ 2. (* skoMC1 5.)))))) (<= (* skoSC1 (* skoMC1 (* skoMC1 (* skoMC1 (- 1.))))) (* skoMC1 (* skoMC1 skoMC1))) (> (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (+ (- 1.) (* skoMC1 3.))))) (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (+ (- 2.) (* skoMC1 (- 3.)))))) (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (* skoMC1 (- 1.))))) (* skoSC1 (* skoMC1 (* skoMC1 (* skoMC1 (/ 1. 12.))))))))))) (* skoMC1 (* skoMC1 (* skoMC1 (+ (- 2.) (* skoMC1 (- 5.))))))) (> (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (+ (- 1.) (* skoMC1 3.))))) (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (+ (- 2.) (* skoMC1 (- 3.)))))) (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (+ (/ 1. 6.) (* skoMC1 (- 1.)))))) (* skoSC1 (* skoMC1 (* skoMC1 (* skoMC1 (/ 1. 4.))))))))))) (* skoMC1 (* skoMC1 (* skoMC1 (+ (- 2.) (* skoMC1 (- 5.))))))) (> (* skoSC1 (* skoMC1 (* skoMC1 skoMC1))) (* skoMC1 (* skoMC1 (* skoMC1 (- 1.))))) (<= (* skoMC1 (* skoMC1 (* skoMC1 (- 2.)))) 0.) (> (* skoMC1 (* skoMC1 (* skoMC1 2.))) 0.) (> (* skoSC1 (+ (* skoMC1 (+ (- 1.) (* skoMC1 3.))) (* skoSC1 (+ (* skoMC1 (+ (- 2.) (* skoMC1 (- 3.)))) (* skoSC1 (+ (* skoMC1 (+ (/ 1. 6.) (* skoMC1 (- 1.)))) (* skoSC1 (* skoMC1 (/ 1. 4.))))))))) (* skoMC1 (+ (- 2.) (* skoMC1 (- 5.))))) (> (* skoSC1 (+ (* skoMC1 (+ (- 1.) (* skoMC1 3.))) (* skoSC1 (+ (* skoMC1 (+ (- 2.) (* skoMC1 (- 3.)))) (* skoSC1 (+ (* skoMC1 (* skoMC1 (- 1.))) (* skoSC1 (* skoMC1 (/ 1. 12.))))))))) (* skoMC1 (+ (- 2.) (* skoMC1 (- 5.))))) (<= (* skoSC1 (+ (* skoMC1 (+ 1. (* skoMC1 (- 3.)))) (* skoSC1 (+ (* skoMC1 (+ 2. (* skoMC1 3.))) (* skoSC1 (+ (* skoMC1 (+ (/ (- 1.) 6.) skoMC1)) (* skoSC1 (* skoMC1 (/ (- 1.) 4.))))))))) (* skoMC1 (+ 2. (* skoMC1 5.)))) (<= (* skoSC1 (+ (* skoMC1 (+ 1. (* skoMC1 (- 3.)))) (* skoSC1 (+ (* skoMC1 (+ 2. (* skoMC1 3.))) (* skoSC1 (+ (* skoMC1 skoMC1) (* skoSC1 (* skoMC1 (/ (- 1.) 12.))))))))) (* skoMC1 (+ 2. (* skoMC1 5.)))) (<= (* skoSC1 (* skoMC1 (- 1.))) skoMC1) (> (* skoSC1 skoMC1) (* skoMC1 (- 1.))) (<= 0. skoMC1) (> skoMC1 0.) (<= 0. skoSC1) (<= 2. skoMC1) (<= skoSC1 (/ 5. 4.)) (> (* skoSC1 (* skoMC1 (* skoMC1 (* skoMC1 2.)))) (* skoMC1 (* skoMC1 (* skoMC1 (- 2.))))) (<= (* skoSC1 (* skoMC1 (* skoMC1 (* skoMC1 (- 2.))))) (* skoMC1 (* skoMC1 (* skoMC1 2.))))) (succedent (> (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (+ (- 2.) (* skoMC1 (- 12.)))))) (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (+ 1. (* skoMC1 (- 6.)))))) (* skoSC1 (+ (* skoMC1 (* skoMC1 skoMC1)) (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (/ (- 1.) 12.)))) (* skoSC1 (* skoMC1 (* skoMC1 (* skoMC1 (/ (- 1.) 12.))))))))))))) (* skoMC1 (* skoMC1 (* skoMC1 (+ 2. (* skoMC1 6.))))))))
-----[end problem]-----

-----[begin problem]-----
% In Mathematica format:
Timing[Resolve[Exists[{skoSC1,skoMC1}, And[skoSC1*(skoMC1*skoMC1*skoMC1*(1+skoMC1*-3)+skoSC1*(skoMC1*skoMC1*skoMC1*(2+skoMC1*3)+skoSC1*(skoMC1*skoMC1*skoMC1*skoMC1+skoSC1*(skoMC1*skoMC1*skoMC1*(-1/12)+skoSC1*skoSC1*(skoMC1*skoMC1*skoMC1*(1/360)+skoSC1*skoSC1*(skoMC1*skoMC1*skoMC1*(-1/20160)+skoSC1*skoSC1*(skoMC1*skoMC1*skoMC1*(1/1814400)+skoSC1*skoSC1*skoMC1*skoMC1*skoMC1*(-1/239500800))))))))<=skoMC1*skoMC1*skoMC1*(2+skoMC1*5),skoSC1<=0,skoMC1*skoMC1*skoMC1*2>0,skoSC1*(skoMC1*skoMC1*skoMC1*(1+skoMC1*-3)+skoSC1*(skoMC1*skoMC1*skoMC1*(2+skoMC1*3)+skoSC1*(skoMC1*skoMC1*skoMC1*skoMC1+skoSC1*skoMC1*skoMC1*skoMC1*(-1/12))))<=skoMC1*skoMC1*skoMC1*(2+skoMC1*5),skoSC1*(skoMC1*skoMC1*skoMC1*(1+skoMC1*-3)+skoSC1*(skoMC1*skoMC1*skoMC1*(2+skoMC1*3)+skoSC1*(skoMC1*skoMC1*skoMC1*((-1/6)+skoMC1)+skoSC1*skoMC1*skoMC1*skoMC1*(-1/4))))<=skoMC1*skoMC1*skoMC1*(2+skoMC1*5),skoSC1*skoMC1*skoMC1*skoMC1*-1<=skoMC1*skoMC1*skoMC1,skoSC1*(skoMC1*skoMC1*skoMC1*(-1+skoMC1*3)+skoSC1*(skoMC1*skoMC1*skoMC1*(-2+skoMC1*-3)+skoSC1*(skoMC1*skoMC1*skoMC1*skoMC1*-1+skoSC1*skoMC1*skoMC1*skoMC1*(1/12))))>skoMC1*skoMC1*skoMC1*(-2+skoMC1*-5),skoSC1*(skoMC1*skoMC1*skoMC1*(-1+skoMC1*3)+skoSC1*(skoMC1*skoMC1*skoMC1*(-2+skoMC1*-3)+skoSC1*(skoMC1*skoMC1*skoMC1*((1/6)+skoMC1*-1)+skoSC1*skoMC1*skoMC1*skoMC1*(1/4))))>skoMC1*skoMC1*skoMC1*(-2+skoMC1*-5),skoSC1*skoMC1*skoMC1*skoMC1>skoMC1*skoMC1*skoMC1*-1,skoMC1*skoMC1*skoMC1*-2<=0,skoMC1*skoMC1*skoMC1*2>0,skoSC1*(skoMC1*(-1+skoMC1*3)+skoSC1*(skoMC1*(-2+skoMC1*-3)+skoSC1*(skoMC1*((1/6)+skoMC1*-1)+skoSC1*skoMC1*(1/4))))>skoMC1*(-2+skoMC1*-5),skoSC1*(skoMC1*(-1+skoMC1*3)+skoSC1*(skoMC1*(-2+skoMC1*-3)+skoSC1*(skoMC1*skoMC1*-1+skoSC1*skoMC1*(1/12))))>skoMC1*(-2+skoMC1*-5),skoSC1*(skoMC1*(1+skoMC1*-3)+skoSC1*(skoMC1*(2+skoMC1*3)+skoSC1*(skoMC1*((-1/6)+skoMC1)+skoSC1*skoMC1*(-1/4))))<=skoMC1*(2+skoMC1*5),skoSC1*(skoMC1*(1+skoMC1*-3)+skoSC1*(skoMC1*(2+skoMC1*3)+skoSC1*(skoMC1*skoMC1+skoSC1*skoMC1*(-1/12))))<=skoMC1*(2+skoMC1*5),skoSC1*skoMC1*-1<=skoMC1,skoSC1*skoMC1>skoMC1*-1,0<=skoMC1,skoMC1>0,0<=skoSC1,2<=skoMC1,skoSC1<=(5/4),skoSC1*skoMC1*skoMC1*skoMC1*2>skoMC1*skoMC1*skoMC1*-2,skoSC1*skoMC1*skoMC1*skoMC1*-2<=skoMC1*skoMC1*skoMC1*2,skoSC1*(skoMC1*skoMC1*skoMC1*(-2+skoMC1*-12)+skoSC1*(skoMC1*skoMC1*skoMC1*(1+skoMC1*-6)+skoSC1*(skoMC1*skoMC1*skoMC1+skoSC1*(skoMC1*skoMC1*skoMC1*(-1/12)+skoSC1*skoMC1*skoMC1*skoMC1*(-1/12)))))<=skoMC1*skoMC1*skoMC1*(2+skoMC1*6)]], Reals]]

% In QepcadB format:
(E skoSC1) (E skoMC1) [[(skoSC1 ((skoMC1 skoMC1 skoMC1 (1+(skoMC1 (-3))))+(skoSC1 ((skoMC1 skoMC1 skoMC1 (2+(skoMC1 (3))))+(skoSC1 ((skoMC1 skoMC1 skoMC1 skoMC1)+(skoSC1 ((skoMC1 skoMC1 skoMC1 (-1/12))+(skoSC1 skoSC1 ((skoMC1 skoMC1 skoMC1 (1/360))+(skoSC1 skoSC1 ((skoMC1 skoMC1 skoMC1 (-1/20160))+(skoSC1 skoSC1 ((skoMC1 skoMC1 skoMC1 (1/1814400))+(skoSC1 skoSC1 skoMC1 skoMC1 skoMC1 (-1/239500800))))))))))))))))<=(skoMC1 skoMC1 skoMC1 (2+(skoMC1 (5))))]/\[[skoSC1<=0]/\[[0<(skoMC1 skoMC1 skoMC1 (2))]/\[[(skoSC1 ((skoMC1 skoMC1 skoMC1 (1+(skoMC1 (-3))))+(skoSC1 ((skoMC1 skoMC1 skoMC1 (2+(skoMC1 (3))))+(skoSC1 ((skoMC1 skoMC1 skoMC1 skoMC1)+(skoSC1 skoMC1 skoMC1 skoMC1 (-1/12))))))))<=(skoMC1 skoMC1 skoMC1 (2+(skoMC1 (5))))]/\[[(skoSC1 ((skoMC1 skoMC1 skoMC1 (1+(skoMC1 (-3))))+(skoSC1 ((skoMC1 skoMC1 skoMC1 (2+(skoMC1 (3))))+(skoSC1 ((skoMC1 skoMC1 skoMC1 (-1/6+skoMC1))+(skoSC1 skoMC1 skoMC1 skoMC1 (-1/4))))))))<=(skoMC1 skoMC1 skoMC1 (2+(skoMC1 (5))))]/\[[(skoSC1 skoMC1 skoMC1 skoMC1 (-1))<=(skoMC1 skoMC1 skoMC1)]/\[[(skoMC1 skoMC1 skoMC1 (-2+(skoMC1 (-5))))<(skoSC1 ((skoMC1 skoMC1 skoMC1 (-1+(skoMC1 (3))))+(skoSC1 ((skoMC1 skoMC1 skoMC1 (-2+(skoMC1 (-3))))+(skoSC1 ((skoMC1 skoMC1 skoMC1 skoMC1 (-1))+(skoSC1 skoMC1 skoMC1 skoMC1 (1/12))))))))]/\[[(skoMC1 skoMC1 skoMC1 (-2+(skoMC1 (-5))))<(skoSC1 ((skoMC1 skoMC1 skoMC1 (-1+(skoMC1 (3))))+(skoSC1 ((skoMC1 skoMC1 skoMC1 (-2+(skoMC1 (-3))))+(skoSC1 ((skoMC1 skoMC1 skoMC1 (1/6+(skoMC1 (-1))))+(skoSC1 skoMC1 skoMC1 skoMC1 (1/4))))))))]/\[[(skoMC1 skoMC1 skoMC1 (-1))<(skoSC1 skoMC1 skoMC1 skoMC1)]/\[[(skoMC1 skoMC1 skoMC1 (-2))<=0]/\[[0<(skoMC1 skoMC1 skoMC1 (2))]/\[[(skoMC1 (-2+(skoMC1 (-5))))<(skoSC1 ((skoMC1 (-1+(skoMC1 (3))))+(skoSC1 ((skoMC1 (-2+(skoMC1 (-3))))+(skoSC1 ((skoMC1 (1/6+(skoMC1 (-1))))+(skoSC1 skoMC1 (1/4))))))))]/\[[(skoMC1 (-2+(skoMC1 (-5))))<(skoSC1 ((skoMC1 (-1+(skoMC1 (3))))+(skoSC1 ((skoMC1 (-2+(skoMC1 (-3))))+(skoSC1 ((skoMC1 skoMC1 (-1))+(skoSC1 skoMC1 (1/12))))))))]/\[[(skoSC1 ((skoMC1 (1+(skoMC1 (-3))))+(skoSC1 ((skoMC1 (2+(skoMC1 (3))))+(skoSC1 ((skoMC1 (-1/6+skoMC1))+(skoSC1 skoMC1 (-1/4))))))))<=(skoMC1 (2+(skoMC1 (5))))]/\[[(skoSC1 ((skoMC1 (1+(skoMC1 (-3))))+(skoSC1 ((skoMC1 (2+(skoMC1 (3))))+(skoSC1 ((skoMC1 skoMC1)+(skoSC1 skoMC1 (-1/12))))))))<=(skoMC1 (2+(skoMC1 (5))))]/\[[(skoSC1 skoMC1 (-1))<=skoMC1]/\[[(skoMC1 (-1))<(skoSC1 skoMC1)]/\[[0<=skoMC1]/\[[0<skoMC1]/\[[0<=skoSC1]/\[[2<=skoMC1]/\[[skoSC1<=5/4]/\[[(skoMC1 skoMC1 skoMC1 (-2))<(skoSC1 skoMC1 skoMC1 skoMC1 (2))]/\[[(skoSC1 skoMC1 skoMC1 skoMC1 (-2))<=(skoMC1 skoMC1 skoMC1 (2))]/\[(skoSC1 ((skoMC1 skoMC1 skoMC1 (-2+(skoMC1 (-12))))+(skoSC1 ((skoMC1 skoMC1 skoMC1 (1+(skoMC1 (-6))))+(skoSC1 ((skoMC1 skoMC1 skoMC1)+(skoSC1 ((skoMC1 skoMC1 skoMC1 (-1/12))+(skoSC1 skoMC1 skoMC1 skoMC1 (-1/12))))))))))<=(skoMC1 skoMC1 skoMC1 (2+(skoMC1 (6))))]]]]]]]]]]]]]]]]]]]]]]]]].

% In SMTLib2 format:
(declare-fun skoSC1 () Real) (declare-fun skoMC1 () Real) (assert (and (<= (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (+ 1. (* skoMC1 (- 3.)))))) (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (+ 2. (* skoMC1 3.))))) (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 skoMC1))) (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (/ (- 1.) 12.)))) (* skoSC1 (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (/ 1. 360.)))) (* skoSC1 (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (/ (- 1.) 20160.)))) (* skoSC1 (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (/ 1. 1814400.)))) (* skoSC1 (* skoSC1 (* skoMC1 (* skoMC1 (* skoMC1 (/ (- 1.) 239500800.))))))))))))))))))))))) (* skoMC1 (* skoMC1 (* skoMC1 (+ 2. (* skoMC1 5.)))))) (and (<= skoSC1 0.) (and (> (* skoMC1 (* skoMC1 (* skoMC1 2.))) 0.) (and (<= (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (+ 1. (* skoMC1 (- 3.)))))) (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (+ 2. (* skoMC1 3.))))) (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 skoMC1))) (* skoSC1 (* skoMC1 (* skoMC1 (* skoMC1 (/ (- 1.) 12.))))))))))) (* skoMC1 (* skoMC1 (* skoMC1 (+ 2. (* skoMC1 5.)))))) (and (<= (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (+ 1. (* skoMC1 (- 3.)))))) (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (+ 2. (* skoMC1 3.))))) (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (+ (/ (- 1.) 6.) skoMC1)))) (* skoSC1 (* skoMC1 (* skoMC1 (* skoMC1 (/ (- 1.) 4.))))))))))) (* skoMC1 (* skoMC1 (* skoMC1 (+ 2. (* skoMC1 5.)))))) (and (<= (* skoSC1 (* skoMC1 (* skoMC1 (* skoMC1 (- 1.))))) (* skoMC1 (* skoMC1 skoMC1))) (and (> (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (+ (- 1.) (* skoMC1 3.))))) (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (+ (- 2.) (* skoMC1 (- 3.)))))) (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (* skoMC1 (- 1.))))) (* skoSC1 (* skoMC1 (* skoMC1 (* skoMC1 (/ 1. 12.))))))))))) (* skoMC1 (* skoMC1 (* skoMC1 (+ (- 2.) (* skoMC1 (- 5.))))))) (and (> (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (+ (- 1.) (* skoMC1 3.))))) (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (+ (- 2.) (* skoMC1 (- 3.)))))) (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (+ (/ 1. 6.) (* skoMC1 (- 1.)))))) (* skoSC1 (* skoMC1 (* skoMC1 (* skoMC1 (/ 1. 4.))))))))))) (* skoMC1 (* skoMC1 (* skoMC1 (+ (- 2.) (* skoMC1 (- 5.))))))) (and (> (* skoSC1 (* skoMC1 (* skoMC1 skoMC1))) (* skoMC1 (* skoMC1 (* skoMC1 (- 1.))))) (and (<= (* skoMC1 (* skoMC1 (* skoMC1 (- 2.)))) 0.) (and (> (* skoMC1 (* skoMC1 (* skoMC1 2.))) 0.) (and (> (* skoSC1 (+ (* skoMC1 (+ (- 1.) (* skoMC1 3.))) (* skoSC1 (+ (* skoMC1 (+ (- 2.) (* skoMC1 (- 3.)))) (* skoSC1 (+ (* skoMC1 (+ (/ 1. 6.) (* skoMC1 (- 1.)))) (* skoSC1 (* skoMC1 (/ 1. 4.))))))))) (* skoMC1 (+ (- 2.) (* skoMC1 (- 5.))))) (and (> (* skoSC1 (+ (* skoMC1 (+ (- 1.) (* skoMC1 3.))) (* skoSC1 (+ (* skoMC1 (+ (- 2.) (* skoMC1 (- 3.)))) (* skoSC1 (+ (* skoMC1 (* skoMC1 (- 1.))) (* skoSC1 (* skoMC1 (/ 1. 12.))))))))) (* skoMC1 (+ (- 2.) (* skoMC1 (- 5.))))) (and (<= (* skoSC1 (+ (* skoMC1 (+ 1. (* skoMC1 (- 3.)))) (* skoSC1 (+ (* skoMC1 (+ 2. (* skoMC1 3.))) (* skoSC1 (+ (* skoMC1 (+ (/ (- 1.) 6.) skoMC1)) (* skoSC1 (* skoMC1 (/ (- 1.) 4.))))))))) (* skoMC1 (+ 2. (* skoMC1 5.)))) (and (<= (* skoSC1 (+ (* skoMC1 (+ 1. (* skoMC1 (- 3.)))) (* skoSC1 (+ (* skoMC1 (+ 2. (* skoMC1 3.))) (* skoSC1 (+ (* skoMC1 skoMC1) (* skoSC1 (* skoMC1 (/ (- 1.) 12.))))))))) (* skoMC1 (+ 2. (* skoMC1 5.)))) (and (<= (* skoSC1 (* skoMC1 (- 1.))) skoMC1) (and (> (* skoSC1 skoMC1) (* skoMC1 (- 1.))) (and (<= 0. skoMC1) (and (> skoMC1 0.) (and (<= 0. skoSC1) (and (<= 2. skoMC1) (and (<= skoSC1 (/ 5. 4.)) (and (> (* skoSC1 (* skoMC1 (* skoMC1 (* skoMC1 2.)))) (* skoMC1 (* skoMC1 (* skoMC1 (- 2.))))) (and (<= (* skoSC1 (* skoMC1 (* skoMC1 (* skoMC1 (- 2.))))) (* skoMC1 (* skoMC1 (* skoMC1 2.)))) (<= (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (+ (- 2.) (* skoMC1 (- 12.)))))) (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (+ 1. (* skoMC1 (- 6.)))))) (* skoSC1 (+ (* skoMC1 (* skoMC1 skoMC1)) (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (/ (- 1.) 12.)))) (* skoSC1 (* skoMC1 (* skoMC1 (* skoMC1 (/ (- 1.) 12.))))))))))))) (* skoMC1 (* skoMC1 (* skoMC1 (+ 2. (* skoMC1 6.)))))))))))))))))))))))))))))))

% In GRF format:
(sequent " MetiTarski formula " (antecedent (<= (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (+ 1. (* skoMC1 (- 3.)))))) (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (+ 2. (* skoMC1 3.))))) (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 skoMC1))) (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (/ (- 1.) 12.)))) (* skoSC1 (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (/ 1. 360.)))) (* skoSC1 (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (/ (- 1.) 20160.)))) (* skoSC1 (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (/ 1. 1814400.)))) (* skoSC1 (* skoSC1 (* skoMC1 (* skoMC1 (* skoMC1 (/ (- 1.) 239500800.))))))))))))))))))))))) (* skoMC1 (* skoMC1 (* skoMC1 (+ 2. (* skoMC1 5.)))))) (<= skoSC1 0.) (> (* skoMC1 (* skoMC1 (* skoMC1 2.))) 0.) (<= (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (+ 1. (* skoMC1 (- 3.)))))) (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (+ 2. (* skoMC1 3.))))) (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 skoMC1))) (* skoSC1 (* skoMC1 (* skoMC1 (* skoMC1 (/ (- 1.) 12.))))))))))) (* skoMC1 (* skoMC1 (* skoMC1 (+ 2. (* skoMC1 5.)))))) (<= (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (+ 1. (* skoMC1 (- 3.)))))) (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (+ 2. (* skoMC1 3.))))) (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (+ (/ (- 1.) 6.) skoMC1)))) (* skoSC1 (* skoMC1 (* skoMC1 (* skoMC1 (/ (- 1.) 4.))))))))))) (* skoMC1 (* skoMC1 (* skoMC1 (+ 2. (* skoMC1 5.)))))) (<= (* skoSC1 (* skoMC1 (* skoMC1 (* skoMC1 (- 1.))))) (* skoMC1 (* skoMC1 skoMC1))) (> (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (+ (- 1.) (* skoMC1 3.))))) (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (+ (- 2.) (* skoMC1 (- 3.)))))) (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (* skoMC1 (- 1.))))) (* skoSC1 (* skoMC1 (* skoMC1 (* skoMC1 (/ 1. 12.))))))))))) (* skoMC1 (* skoMC1 (* skoMC1 (+ (- 2.) (* skoMC1 (- 5.))))))) (> (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (+ (- 1.) (* skoMC1 3.))))) (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (+ (- 2.) (* skoMC1 (- 3.)))))) (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (+ (/ 1. 6.) (* skoMC1 (- 1.)))))) (* skoSC1 (* skoMC1 (* skoMC1 (* skoMC1 (/ 1. 4.))))))))))) (* skoMC1 (* skoMC1 (* skoMC1 (+ (- 2.) (* skoMC1 (- 5.))))))) (> (* skoSC1 (* skoMC1 (* skoMC1 skoMC1))) (* skoMC1 (* skoMC1 (* skoMC1 (- 1.))))) (<= (* skoMC1 (* skoMC1 (* skoMC1 (- 2.)))) 0.) (> (* skoMC1 (* skoMC1 (* skoMC1 2.))) 0.) (> (* skoSC1 (+ (* skoMC1 (+ (- 1.) (* skoMC1 3.))) (* skoSC1 (+ (* skoMC1 (+ (- 2.) (* skoMC1 (- 3.)))) (* skoSC1 (+ (* skoMC1 (+ (/ 1. 6.) (* skoMC1 (- 1.)))) (* skoSC1 (* skoMC1 (/ 1. 4.))))))))) (* skoMC1 (+ (- 2.) (* skoMC1 (- 5.))))) (> (* skoSC1 (+ (* skoMC1 (+ (- 1.) (* skoMC1 3.))) (* skoSC1 (+ (* skoMC1 (+ (- 2.) (* skoMC1 (- 3.)))) (* skoSC1 (+ (* skoMC1 (* skoMC1 (- 1.))) (* skoSC1 (* skoMC1 (/ 1. 12.))))))))) (* skoMC1 (+ (- 2.) (* skoMC1 (- 5.))))) (<= (* skoSC1 (+ (* skoMC1 (+ 1. (* skoMC1 (- 3.)))) (* skoSC1 (+ (* skoMC1 (+ 2. (* skoMC1 3.))) (* skoSC1 (+ (* skoMC1 (+ (/ (- 1.) 6.) skoMC1)) (* skoSC1 (* skoMC1 (/ (- 1.) 4.))))))))) (* skoMC1 (+ 2. (* skoMC1 5.)))) (<= (* skoSC1 (+ (* skoMC1 (+ 1. (* skoMC1 (- 3.)))) (* skoSC1 (+ (* skoMC1 (+ 2. (* skoMC1 3.))) (* skoSC1 (+ (* skoMC1 skoMC1) (* skoSC1 (* skoMC1 (/ (- 1.) 12.))))))))) (* skoMC1 (+ 2. (* skoMC1 5.)))) (<= (* skoSC1 (* skoMC1 (- 1.))) skoMC1) (> (* skoSC1 skoMC1) (* skoMC1 (- 1.))) (<= 0. skoMC1) (> skoMC1 0.) (<= 0. skoSC1) (<= 2. skoMC1) (<= skoSC1 (/ 5. 4.)) (> (* skoSC1 (* skoMC1 (* skoMC1 (* skoMC1 2.)))) (* skoMC1 (* skoMC1 (* skoMC1 (- 2.))))) (<= (* skoSC1 (* skoMC1 (* skoMC1 (* skoMC1 (- 2.))))) (* skoMC1 (* skoMC1 (* skoMC1 2.))))) (succedent (> (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (+ (- 2.) (* skoMC1 (- 12.)))))) (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (+ 1. (* skoMC1 (- 6.)))))) (* skoSC1 (+ (* skoMC1 (* skoMC1 skoMC1)) (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (/ (- 1.) 12.)))) (* skoSC1 (* skoMC1 (* skoMC1 (* skoMC1 (/ (- 1.) 12.))))))))))))) (* skoMC1 (* skoMC1 (* skoMC1 (+ 2. (* skoMC1 6.))))))))
-----[end problem]-----

-----[begin problem]-----
% In Mathematica format:
Timing[Resolve[Exists[{skoSC1,skoMC1}, And[skoMC1*skoMC1*skoMC1*2<=0,skoSC1<=0,skoSC1*(skoMC1*skoMC1*skoMC1*(1+skoMC1*-3)+skoSC1*(skoMC1*skoMC1*skoMC1*(2+skoMC1*3)+skoSC1*(skoMC1*skoMC1*skoMC1*skoMC1+skoSC1*(skoMC1*skoMC1*skoMC1*(-1/12)+skoSC1*skoSC1*(skoMC1*skoMC1*skoMC1*(1/360)+skoSC1*skoSC1*(skoMC1*skoMC1*skoMC1*(-1/20160)+skoSC1*skoSC1*(skoMC1*skoMC1*skoMC1*(1/1814400)+skoSC1*skoSC1*skoMC1*skoMC1*skoMC1*(-1/239500800))))))))>skoMC1*skoMC1*skoMC1*(2+skoMC1*5),skoSC1*(skoMC1*skoMC1*skoMC1*(1+skoMC1*-3)+skoSC1*(skoMC1*skoMC1*skoMC1*(2+skoMC1*3)+skoSC1*(skoMC1*skoMC1*skoMC1*skoMC1+skoSC1*skoMC1*skoMC1*skoMC1*(-1/12))))<=skoMC1*skoMC1*skoMC1*(2+skoMC1*5),skoSC1*(skoMC1*skoMC1*skoMC1*(1+skoMC1*-3)+skoSC1*(skoMC1*skoMC1*skoMC1*(2+skoMC1*3)+skoSC1*(skoMC1*skoMC1*skoMC1*((-1/6)+skoMC1)+skoSC1*skoMC1*skoMC1*skoMC1*(-1/4))))<=skoMC1*skoMC1*skoMC1*(2+skoMC1*5),skoSC1*skoMC1*skoMC1*skoMC1*-1<=skoMC1*skoMC1*skoMC1,skoSC1*(skoMC1*skoMC1*skoMC1*(-1+skoMC1*3)+skoSC1*(skoMC1*skoMC1*skoMC1*(-2+skoMC1*-3)+skoSC1*(skoMC1*skoMC1*skoMC1*skoMC1*-1+skoSC1*skoMC1*skoMC1*skoMC1*(1/12))))>skoMC1*skoMC1*skoMC1*(-2+skoMC1*-5),skoSC1*(skoMC1*skoMC1*skoMC1*(-1+skoMC1*3)+skoSC1*(skoMC1*skoMC1*skoMC1*(-2+skoMC1*-3)+skoSC1*(skoMC1*skoMC1*skoMC1*((1/6)+skoMC1*-1)+skoSC1*skoMC1*skoMC1*skoMC1*(1/4))))>skoMC1*skoMC1*skoMC1*(-2+skoMC1*-5),skoSC1*skoMC1*skoMC1*skoMC1>skoMC1*skoMC1*skoMC1*-1,skoMC1*skoMC1*skoMC1*-2<=0,skoMC1*skoMC1*skoMC1*2>0,skoSC1*(skoMC1*(-1+skoMC1*3)+skoSC1*(skoMC1*(-2+skoMC1*-3)+skoSC1*(skoMC1*((1/6)+skoMC1*-1)+skoSC1*skoMC1*(1/4))))>skoMC1*(-2+skoMC1*-5),skoSC1*(skoMC1*(-1+skoMC1*3)+skoSC1*(skoMC1*(-2+skoMC1*-3)+skoSC1*(skoMC1*skoMC1*-1+skoSC1*skoMC1*(1/12))))>skoMC1*(-2+skoMC1*-5),skoSC1*(skoMC1*(1+skoMC1*-3)+skoSC1*(skoMC1*(2+skoMC1*3)+skoSC1*(skoMC1*((-1/6)+skoMC1)+skoSC1*skoMC1*(-1/4))))<=skoMC1*(2+skoMC1*5),skoSC1*(skoMC1*(1+skoMC1*-3)+skoSC1*(skoMC1*(2+skoMC1*3)+skoSC1*(skoMC1*skoMC1+skoSC1*skoMC1*(-1/12))))<=skoMC1*(2+skoMC1*5),skoSC1*skoMC1*-1<=skoMC1,skoSC1*skoMC1>skoMC1*-1,0<=skoMC1,skoMC1>0,0<=skoSC1,2<=skoMC1,skoSC1<=(5/4),skoSC1*skoMC1*skoMC1*skoMC1*2>skoMC1*skoMC1*skoMC1*-2,skoSC1*skoMC1*skoMC1*skoMC1*-2<=skoMC1*skoMC1*skoMC1*2,skoSC1*(skoMC1*skoMC1*skoMC1*(-2+skoMC1*-12)+skoSC1*(skoMC1*skoMC1*skoMC1*(1+skoMC1*-6)+skoSC1*(skoMC1*skoMC1*skoMC1+skoSC1*(skoMC1*skoMC1*skoMC1*(-1/12)+skoSC1*skoMC1*skoMC1*skoMC1*(-1/12)))))<=skoMC1*skoMC1*skoMC1*(2+skoMC1*6)]], Reals]]

% In QepcadB format:
(E skoSC1) (E skoMC1) [[(skoMC1 skoMC1 skoMC1 (2))<=0]/\[[skoSC1<=0]/\[[(skoMC1 skoMC1 skoMC1 (2+(skoMC1 (5))))<(skoSC1 ((skoMC1 skoMC1 skoMC1 (1+(skoMC1 (-3))))+(skoSC1 ((skoMC1 skoMC1 skoMC1 (2+(skoMC1 (3))))+(skoSC1 ((skoMC1 skoMC1 skoMC1 skoMC1)+(skoSC1 ((skoMC1 skoMC1 skoMC1 (-1/12))+(skoSC1 skoSC1 ((skoMC1 skoMC1 skoMC1 (1/360))+(skoSC1 skoSC1 ((skoMC1 skoMC1 skoMC1 (-1/20160))+(skoSC1 skoSC1 ((skoMC1 skoMC1 skoMC1 (1/1814400))+(skoSC1 skoSC1 skoMC1 skoMC1 skoMC1 (-1/239500800))))))))))))))))]/\[[(skoSC1 ((skoMC1 skoMC1 skoMC1 (1+(skoMC1 (-3))))+(skoSC1 ((skoMC1 skoMC1 skoMC1 (2+(skoMC1 (3))))+(skoSC1 ((skoMC1 skoMC1 skoMC1 skoMC1)+(skoSC1 skoMC1 skoMC1 skoMC1 (-1/12))))))))<=(skoMC1 skoMC1 skoMC1 (2+(skoMC1 (5))))]/\[[(skoSC1 ((skoMC1 skoMC1 skoMC1 (1+(skoMC1 (-3))))+(skoSC1 ((skoMC1 skoMC1 skoMC1 (2+(skoMC1 (3))))+(skoSC1 ((skoMC1 skoMC1 skoMC1 (-1/6+skoMC1))+(skoSC1 skoMC1 skoMC1 skoMC1 (-1/4))))))))<=(skoMC1 skoMC1 skoMC1 (2+(skoMC1 (5))))]/\[[(skoSC1 skoMC1 skoMC1 skoMC1 (-1))<=(skoMC1 skoMC1 skoMC1)]/\[[(skoMC1 skoMC1 skoMC1 (-2+(skoMC1 (-5))))<(skoSC1 ((skoMC1 skoMC1 skoMC1 (-1+(skoMC1 (3))))+(skoSC1 ((skoMC1 skoMC1 skoMC1 (-2+(skoMC1 (-3))))+(skoSC1 ((skoMC1 skoMC1 skoMC1 skoMC1 (-1))+(skoSC1 skoMC1 skoMC1 skoMC1 (1/12))))))))]/\[[(skoMC1 skoMC1 skoMC1 (-2+(skoMC1 (-5))))<(skoSC1 ((skoMC1 skoMC1 skoMC1 (-1+(skoMC1 (3))))+(skoSC1 ((skoMC1 skoMC1 skoMC1 (-2+(skoMC1 (-3))))+(skoSC1 ((skoMC1 skoMC1 skoMC1 (1/6+(skoMC1 (-1))))+(skoSC1 skoMC1 skoMC1 skoMC1 (1/4))))))))]/\[[(skoMC1 skoMC1 skoMC1 (-1))<(skoSC1 skoMC1 skoMC1 skoMC1)]/\[[(skoMC1 skoMC1 skoMC1 (-2))<=0]/\[[0<(skoMC1 skoMC1 skoMC1 (2))]/\[[(skoMC1 (-2+(skoMC1 (-5))))<(skoSC1 ((skoMC1 (-1+(skoMC1 (3))))+(skoSC1 ((skoMC1 (-2+(skoMC1 (-3))))+(skoSC1 ((skoMC1 (1/6+(skoMC1 (-1))))+(skoSC1 skoMC1 (1/4))))))))]/\[[(skoMC1 (-2+(skoMC1 (-5))))<(skoSC1 ((skoMC1 (-1+(skoMC1 (3))))+(skoSC1 ((skoMC1 (-2+(skoMC1 (-3))))+(skoSC1 ((skoMC1 skoMC1 (-1))+(skoSC1 skoMC1 (1/12))))))))]/\[[(skoSC1 ((skoMC1 (1+(skoMC1 (-3))))+(skoSC1 ((skoMC1 (2+(skoMC1 (3))))+(skoSC1 ((skoMC1 (-1/6+skoMC1))+(skoSC1 skoMC1 (-1/4))))))))<=(skoMC1 (2+(skoMC1 (5))))]/\[[(skoSC1 ((skoMC1 (1+(skoMC1 (-3))))+(skoSC1 ((skoMC1 (2+(skoMC1 (3))))+(skoSC1 ((skoMC1 skoMC1)+(skoSC1 skoMC1 (-1/12))))))))<=(skoMC1 (2+(skoMC1 (5))))]/\[[(skoSC1 skoMC1 (-1))<=skoMC1]/\[[(skoMC1 (-1))<(skoSC1 skoMC1)]/\[[0<=skoMC1]/\[[0<skoMC1]/\[[0<=skoSC1]/\[[2<=skoMC1]/\[[skoSC1<=5/4]/\[[(skoMC1 skoMC1 skoMC1 (-2))<(skoSC1 skoMC1 skoMC1 skoMC1 (2))]/\[[(skoSC1 skoMC1 skoMC1 skoMC1 (-2))<=(skoMC1 skoMC1 skoMC1 (2))]/\[(skoSC1 ((skoMC1 skoMC1 skoMC1 (-2+(skoMC1 (-12))))+(skoSC1 ((skoMC1 skoMC1 skoMC1 (1+(skoMC1 (-6))))+(skoSC1 ((skoMC1 skoMC1 skoMC1)+(skoSC1 ((skoMC1 skoMC1 skoMC1 (-1/12))+(skoSC1 skoMC1 skoMC1 skoMC1 (-1/12))))))))))<=(skoMC1 skoMC1 skoMC1 (2+(skoMC1 (6))))]]]]]]]]]]]]]]]]]]]]]]]]].

% In SMTLib2 format:
(declare-fun skoSC1 () Real) (declare-fun skoMC1 () Real) (assert (and (<= (* skoMC1 (* skoMC1 (* skoMC1 2.))) 0.) (and (<= skoSC1 0.) (and (> (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (+ 1. (* skoMC1 (- 3.)))))) (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (+ 2. (* skoMC1 3.))))) (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 skoMC1))) (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (/ (- 1.) 12.)))) (* skoSC1 (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (/ 1. 360.)))) (* skoSC1 (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (/ (- 1.) 20160.)))) (* skoSC1 (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (/ 1. 1814400.)))) (* skoSC1 (* skoSC1 (* skoMC1 (* skoMC1 (* skoMC1 (/ (- 1.) 239500800.))))))))))))))))))))))) (* skoMC1 (* skoMC1 (* skoMC1 (+ 2. (* skoMC1 5.)))))) (and (<= (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (+ 1. (* skoMC1 (- 3.)))))) (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (+ 2. (* skoMC1 3.))))) (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 skoMC1))) (* skoSC1 (* skoMC1 (* skoMC1 (* skoMC1 (/ (- 1.) 12.))))))))))) (* skoMC1 (* skoMC1 (* skoMC1 (+ 2. (* skoMC1 5.)))))) (and (<= (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (+ 1. (* skoMC1 (- 3.)))))) (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (+ 2. (* skoMC1 3.))))) (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (+ (/ (- 1.) 6.) skoMC1)))) (* skoSC1 (* skoMC1 (* skoMC1 (* skoMC1 (/ (- 1.) 4.))))))))))) (* skoMC1 (* skoMC1 (* skoMC1 (+ 2. (* skoMC1 5.)))))) (and (<= (* skoSC1 (* skoMC1 (* skoMC1 (* skoMC1 (- 1.))))) (* skoMC1 (* skoMC1 skoMC1))) (and (> (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (+ (- 1.) (* skoMC1 3.))))) (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (+ (- 2.) (* skoMC1 (- 3.)))))) (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (* skoMC1 (- 1.))))) (* skoSC1 (* skoMC1 (* skoMC1 (* skoMC1 (/ 1. 12.))))))))))) (* skoMC1 (* skoMC1 (* skoMC1 (+ (- 2.) (* skoMC1 (- 5.))))))) (and (> (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (+ (- 1.) (* skoMC1 3.))))) (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (+ (- 2.) (* skoMC1 (- 3.)))))) (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (+ (/ 1. 6.) (* skoMC1 (- 1.)))))) (* skoSC1 (* skoMC1 (* skoMC1 (* skoMC1 (/ 1. 4.))))))))))) (* skoMC1 (* skoMC1 (* skoMC1 (+ (- 2.) (* skoMC1 (- 5.))))))) (and (> (* skoSC1 (* skoMC1 (* skoMC1 skoMC1))) (* skoMC1 (* skoMC1 (* skoMC1 (- 1.))))) (and (<= (* skoMC1 (* skoMC1 (* skoMC1 (- 2.)))) 0.) (and (> (* skoMC1 (* skoMC1 (* skoMC1 2.))) 0.) (and (> (* skoSC1 (+ (* skoMC1 (+ (- 1.) (* skoMC1 3.))) (* skoSC1 (+ (* skoMC1 (+ (- 2.) (* skoMC1 (- 3.)))) (* skoSC1 (+ (* skoMC1 (+ (/ 1. 6.) (* skoMC1 (- 1.)))) (* skoSC1 (* skoMC1 (/ 1. 4.))))))))) (* skoMC1 (+ (- 2.) (* skoMC1 (- 5.))))) (and (> (* skoSC1 (+ (* skoMC1 (+ (- 1.) (* skoMC1 3.))) (* skoSC1 (+ (* skoMC1 (+ (- 2.) (* skoMC1 (- 3.)))) (* skoSC1 (+ (* skoMC1 (* skoMC1 (- 1.))) (* skoSC1 (* skoMC1 (/ 1. 12.))))))))) (* skoMC1 (+ (- 2.) (* skoMC1 (- 5.))))) (and (<= (* skoSC1 (+ (* skoMC1 (+ 1. (* skoMC1 (- 3.)))) (* skoSC1 (+ (* skoMC1 (+ 2. (* skoMC1 3.))) (* skoSC1 (+ (* skoMC1 (+ (/ (- 1.) 6.) skoMC1)) (* skoSC1 (* skoMC1 (/ (- 1.) 4.))))))))) (* skoMC1 (+ 2. (* skoMC1 5.)))) (and (<= (* skoSC1 (+ (* skoMC1 (+ 1. (* skoMC1 (- 3.)))) (* skoSC1 (+ (* skoMC1 (+ 2. (* skoMC1 3.))) (* skoSC1 (+ (* skoMC1 skoMC1) (* skoSC1 (* skoMC1 (/ (- 1.) 12.))))))))) (* skoMC1 (+ 2. (* skoMC1 5.)))) (and (<= (* skoSC1 (* skoMC1 (- 1.))) skoMC1) (and (> (* skoSC1 skoMC1) (* skoMC1 (- 1.))) (and (<= 0. skoMC1) (and (> skoMC1 0.) (and (<= 0. skoSC1) (and (<= 2. skoMC1) (and (<= skoSC1 (/ 5. 4.)) (and (> (* skoSC1 (* skoMC1 (* skoMC1 (* skoMC1 2.)))) (* skoMC1 (* skoMC1 (* skoMC1 (- 2.))))) (and (<= (* skoSC1 (* skoMC1 (* skoMC1 (* skoMC1 (- 2.))))) (* skoMC1 (* skoMC1 (* skoMC1 2.)))) (<= (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (+ (- 2.) (* skoMC1 (- 12.)))))) (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (+ 1. (* skoMC1 (- 6.)))))) (* skoSC1 (+ (* skoMC1 (* skoMC1 skoMC1)) (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (/ (- 1.) 12.)))) (* skoSC1 (* skoMC1 (* skoMC1 (* skoMC1 (/ (- 1.) 12.))))))))))))) (* skoMC1 (* skoMC1 (* skoMC1 (+ 2. (* skoMC1 6.)))))))))))))))))))))))))))))))

% In GRF format:
(sequent " MetiTarski formula " (antecedent (<= (* skoMC1 (* skoMC1 (* skoMC1 2.))) 0.) (<= skoSC1 0.) (> (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (+ 1. (* skoMC1 (- 3.)))))) (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (+ 2. (* skoMC1 3.))))) (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 skoMC1))) (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (/ (- 1.) 12.)))) (* skoSC1 (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (/ 1. 360.)))) (* skoSC1 (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (/ (- 1.) 20160.)))) (* skoSC1 (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (/ 1. 1814400.)))) (* skoSC1 (* skoSC1 (* skoMC1 (* skoMC1 (* skoMC1 (/ (- 1.) 239500800.))))))))))))))))))))))) (* skoMC1 (* skoMC1 (* skoMC1 (+ 2. (* skoMC1 5.)))))) (<= (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (+ 1. (* skoMC1 (- 3.)))))) (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (+ 2. (* skoMC1 3.))))) (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 skoMC1))) (* skoSC1 (* skoMC1 (* skoMC1 (* skoMC1 (/ (- 1.) 12.))))))))))) (* skoMC1 (* skoMC1 (* skoMC1 (+ 2. (* skoMC1 5.)))))) (<= (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (+ 1. (* skoMC1 (- 3.)))))) (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (+ 2. (* skoMC1 3.))))) (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (+ (/ (- 1.) 6.) skoMC1)))) (* skoSC1 (* skoMC1 (* skoMC1 (* skoMC1 (/ (- 1.) 4.))))))))))) (* skoMC1 (* skoMC1 (* skoMC1 (+ 2. (* skoMC1 5.)))))) (<= (* skoSC1 (* skoMC1 (* skoMC1 (* skoMC1 (- 1.))))) (* skoMC1 (* skoMC1 skoMC1))) (> (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (+ (- 1.) (* skoMC1 3.))))) (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (+ (- 2.) (* skoMC1 (- 3.)))))) (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (* skoMC1 (- 1.))))) (* skoSC1 (* skoMC1 (* skoMC1 (* skoMC1 (/ 1. 12.))))))))))) (* skoMC1 (* skoMC1 (* skoMC1 (+ (- 2.) (* skoMC1 (- 5.))))))) (> (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (+ (- 1.) (* skoMC1 3.))))) (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (+ (- 2.) (* skoMC1 (- 3.)))))) (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (+ (/ 1. 6.) (* skoMC1 (- 1.)))))) (* skoSC1 (* skoMC1 (* skoMC1 (* skoMC1 (/ 1. 4.))))))))))) (* skoMC1 (* skoMC1 (* skoMC1 (+ (- 2.) (* skoMC1 (- 5.))))))) (> (* skoSC1 (* skoMC1 (* skoMC1 skoMC1))) (* skoMC1 (* skoMC1 (* skoMC1 (- 1.))))) (<= (* skoMC1 (* skoMC1 (* skoMC1 (- 2.)))) 0.) (> (* skoMC1 (* skoMC1 (* skoMC1 2.))) 0.) (> (* skoSC1 (+ (* skoMC1 (+ (- 1.) (* skoMC1 3.))) (* skoSC1 (+ (* skoMC1 (+ (- 2.) (* skoMC1 (- 3.)))) (* skoSC1 (+ (* skoMC1 (+ (/ 1. 6.) (* skoMC1 (- 1.)))) (* skoSC1 (* skoMC1 (/ 1. 4.))))))))) (* skoMC1 (+ (- 2.) (* skoMC1 (- 5.))))) (> (* skoSC1 (+ (* skoMC1 (+ (- 1.) (* skoMC1 3.))) (* skoSC1 (+ (* skoMC1 (+ (- 2.) (* skoMC1 (- 3.)))) (* skoSC1 (+ (* skoMC1 (* skoMC1 (- 1.))) (* skoSC1 (* skoMC1 (/ 1. 12.))))))))) (* skoMC1 (+ (- 2.) (* skoMC1 (- 5.))))) (<= (* skoSC1 (+ (* skoMC1 (+ 1. (* skoMC1 (- 3.)))) (* skoSC1 (+ (* skoMC1 (+ 2. (* skoMC1 3.))) (* skoSC1 (+ (* skoMC1 (+ (/ (- 1.) 6.) skoMC1)) (* skoSC1 (* skoMC1 (/ (- 1.) 4.))))))))) (* skoMC1 (+ 2. (* skoMC1 5.)))) (<= (* skoSC1 (+ (* skoMC1 (+ 1. (* skoMC1 (- 3.)))) (* skoSC1 (+ (* skoMC1 (+ 2. (* skoMC1 3.))) (* skoSC1 (+ (* skoMC1 skoMC1) (* skoSC1 (* skoMC1 (/ (- 1.) 12.))))))))) (* skoMC1 (+ 2. (* skoMC1 5.)))) (<= (* skoSC1 (* skoMC1 (- 1.))) skoMC1) (> (* skoSC1 skoMC1) (* skoMC1 (- 1.))) (<= 0. skoMC1) (> skoMC1 0.) (<= 0. skoSC1) (<= 2. skoMC1) (<= skoSC1 (/ 5. 4.)) (> (* skoSC1 (* skoMC1 (* skoMC1 (* skoMC1 2.)))) (* skoMC1 (* skoMC1 (* skoMC1 (- 2.))))) (<= (* skoSC1 (* skoMC1 (* skoMC1 (* skoMC1 (- 2.))))) (* skoMC1 (* skoMC1 (* skoMC1 2.))))) (succedent (> (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (+ (- 2.) (* skoMC1 (- 12.)))))) (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (+ 1. (* skoMC1 (- 6.)))))) (* skoSC1 (+ (* skoMC1 (* skoMC1 skoMC1)) (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (/ (- 1.) 12.)))) (* skoSC1 (* skoMC1 (* skoMC1 (* skoMC1 (/ (- 1.) 12.))))))))))))) (* skoMC1 (* skoMC1 (* skoMC1 (+ 2. (* skoMC1 6.))))))))
-----[end problem]-----

-----[begin problem]-----
% In Mathematica format:
Timing[Resolve[Exists[{skoSC1,skoMC1}, And[skoSC1*(skoMC1*skoMC1*skoMC1*(1+skoMC1*-3)+skoSC1*(skoMC1*skoMC1*skoMC1*(2+skoMC1*3)+skoSC1*(skoMC1*skoMC1*skoMC1*skoMC1+skoSC1*(skoMC1*skoMC1*skoMC1*(-1/12)+skoSC1*skoSC1*(skoMC1*skoMC1*skoMC1*(1/360)+skoSC1*skoSC1*(skoMC1*skoMC1*skoMC1*(-1/20160)+skoSC1*skoSC1*(skoMC1*skoMC1*skoMC1*(1/1814400)+skoSC1*skoSC1*skoMC1*skoMC1*skoMC1*(-1/239500800))))))))>skoMC1*skoMC1*skoMC1*(2+skoMC1*5),skoSC1>0,skoSC1*(skoMC1*skoMC1*skoMC1*(-1+skoMC1*3)+skoSC1*(skoMC1*skoMC1*skoMC1*(-2+skoMC1*-3)+skoSC1*(skoMC1*skoMC1*skoMC1*skoMC1*-1+skoSC1*skoMC1*skoMC1*skoMC1*(1/12))))>skoMC1*skoMC1*skoMC1*(-2+skoMC1*-5),skoSC1*(skoMC1*skoMC1*skoMC1*(-1+skoMC1*3)+skoSC1*(skoMC1*skoMC1*skoMC1*(-2+skoMC1*-3)+skoSC1*(skoMC1*skoMC1*skoMC1*((1/6)+skoMC1*-1)+skoSC1*skoMC1*skoMC1*skoMC1*(1/4))))>skoMC1*skoMC1*skoMC1*(-2+skoMC1*-5),skoSC1*skoMC1*skoMC1*skoMC1>skoMC1*skoMC1*skoMC1*-1,skoMC1*skoMC1*skoMC1*2>0,skoSC1*(skoMC1*(-1+skoMC1*3)+skoSC1*(skoMC1*(-2+skoMC1*-3)+skoSC1*(skoMC1*((1/6)+skoMC1*-1)+skoSC1*skoMC1*(1/4))))>skoMC1*(-2+skoMC1*-5),skoSC1*(skoMC1*(-1+skoMC1*3)+skoSC1*(skoMC1*(-2+skoMC1*-3)+skoSC1*(skoMC1*skoMC1*-1+skoSC1*skoMC1*(1/12))))>skoMC1*(-2+skoMC1*-5),skoSC1*skoMC1>skoMC1*-1,skoMC1>0,skoSC1*skoMC1*skoMC1*skoMC1*2>skoMC1*skoMC1*skoMC1*-2]], Reals]]

% In QepcadB format:
(E skoSC1) (E skoMC1) [[(skoMC1 skoMC1 skoMC1 (2+(skoMC1 (5))))<(skoSC1 ((skoMC1 skoMC1 skoMC1 (1+(skoMC1 (-3))))+(skoSC1 ((skoMC1 skoMC1 skoMC1 (2+(skoMC1 (3))))+(skoSC1 ((skoMC1 skoMC1 skoMC1 skoMC1)+(skoSC1 ((skoMC1 skoMC1 skoMC1 (-1/12))+(skoSC1 skoSC1 ((skoMC1 skoMC1 skoMC1 (1/360))+(skoSC1 skoSC1 ((skoMC1 skoMC1 skoMC1 (-1/20160))+(skoSC1 skoSC1 ((skoMC1 skoMC1 skoMC1 (1/1814400))+(skoSC1 skoSC1 skoMC1 skoMC1 skoMC1 (-1/239500800))))))))))))))))]/\[[0<skoSC1]/\[[(skoMC1 skoMC1 skoMC1 (-2+(skoMC1 (-5))))<(skoSC1 ((skoMC1 skoMC1 skoMC1 (-1+(skoMC1 (3))))+(skoSC1 ((skoMC1 skoMC1 skoMC1 (-2+(skoMC1 (-3))))+(skoSC1 ((skoMC1 skoMC1 skoMC1 skoMC1 (-1))+(skoSC1 skoMC1 skoMC1 skoMC1 (1/12))))))))]/\[[(skoMC1 skoMC1 skoMC1 (-2+(skoMC1 (-5))))<(skoSC1 ((skoMC1 skoMC1 skoMC1 (-1+(skoMC1 (3))))+(skoSC1 ((skoMC1 skoMC1 skoMC1 (-2+(skoMC1 (-3))))+(skoSC1 ((skoMC1 skoMC1 skoMC1 (1/6+(skoMC1 (-1))))+(skoSC1 skoMC1 skoMC1 skoMC1 (1/4))))))))]/\[[(skoMC1 skoMC1 skoMC1 (-1))<(skoSC1 skoMC1 skoMC1 skoMC1)]/\[[0<(skoMC1 skoMC1 skoMC1 (2))]/\[[(skoMC1 (-2+(skoMC1 (-5))))<(skoSC1 ((skoMC1 (-1+(skoMC1 (3))))+(skoSC1 ((skoMC1 (-2+(skoMC1 (-3))))+(skoSC1 ((skoMC1 (1/6+(skoMC1 (-1))))+(skoSC1 skoMC1 (1/4))))))))]/\[[(skoMC1 (-2+(skoMC1 (-5))))<(skoSC1 ((skoMC1 (-1+(skoMC1 (3))))+(skoSC1 ((skoMC1 (-2+(skoMC1 (-3))))+(skoSC1 ((skoMC1 skoMC1 (-1))+(skoSC1 skoMC1 (1/12))))))))]/\[[(skoMC1 (-1))<(skoSC1 skoMC1)]/\[[0<skoMC1]/\[(skoMC1 skoMC1 skoMC1 (-2))<(skoSC1 skoMC1 skoMC1 skoMC1 (2))]]]]]]]]]]].

% In SMTLib2 format:
(declare-fun skoSC1 () Real) (declare-fun skoMC1 () Real) (assert (and (> (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (+ 1. (* skoMC1 (- 3.)))))) (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (+ 2. (* skoMC1 3.))))) (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 skoMC1))) (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (/ (- 1.) 12.)))) (* skoSC1 (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (/ 1. 360.)))) (* skoSC1 (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (/ (- 1.) 20160.)))) (* skoSC1 (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (/ 1. 1814400.)))) (* skoSC1 (* skoSC1 (* skoMC1 (* skoMC1 (* skoMC1 (/ (- 1.) 239500800.))))))))))))))))))))))) (* skoMC1 (* skoMC1 (* skoMC1 (+ 2. (* skoMC1 5.)))))) (and (> skoSC1 0.) (and (> (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (+ (- 1.) (* skoMC1 3.))))) (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (+ (- 2.) (* skoMC1 (- 3.)))))) (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (* skoMC1 (- 1.))))) (* skoSC1 (* skoMC1 (* skoMC1 (* skoMC1 (/ 1. 12.))))))))))) (* skoMC1 (* skoMC1 (* skoMC1 (+ (- 2.) (* skoMC1 (- 5.))))))) (and (> (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (+ (- 1.) (* skoMC1 3.))))) (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (+ (- 2.) (* skoMC1 (- 3.)))))) (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (+ (/ 1. 6.) (* skoMC1 (- 1.)))))) (* skoSC1 (* skoMC1 (* skoMC1 (* skoMC1 (/ 1. 4.))))))))))) (* skoMC1 (* skoMC1 (* skoMC1 (+ (- 2.) (* skoMC1 (- 5.))))))) (and (> (* skoSC1 (* skoMC1 (* skoMC1 skoMC1))) (* skoMC1 (* skoMC1 (* skoMC1 (- 1.))))) (and (> (* skoMC1 (* skoMC1 (* skoMC1 2.))) 0.) (and (> (* skoSC1 (+ (* skoMC1 (+ (- 1.) (* skoMC1 3.))) (* skoSC1 (+ (* skoMC1 (+ (- 2.) (* skoMC1 (- 3.)))) (* skoSC1 (+ (* skoMC1 (+ (/ 1. 6.) (* skoMC1 (- 1.)))) (* skoSC1 (* skoMC1 (/ 1. 4.))))))))) (* skoMC1 (+ (- 2.) (* skoMC1 (- 5.))))) (and (> (* skoSC1 (+ (* skoMC1 (+ (- 1.) (* skoMC1 3.))) (* skoSC1 (+ (* skoMC1 (+ (- 2.) (* skoMC1 (- 3.)))) (* skoSC1 (+ (* skoMC1 (* skoMC1 (- 1.))) (* skoSC1 (* skoMC1 (/ 1. 12.))))))))) (* skoMC1 (+ (- 2.) (* skoMC1 (- 5.))))) (and (> (* skoSC1 skoMC1) (* skoMC1 (- 1.))) (and (> skoMC1 0.) (> (* skoSC1 (* skoMC1 (* skoMC1 (* skoMC1 2.)))) (* skoMC1 (* skoMC1 (* skoMC1 (- 2.))))))))))))))))

% In GRF format:
(sequent " MetiTarski formula " (antecedent (> (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (+ 1. (* skoMC1 (- 3.)))))) (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (+ 2. (* skoMC1 3.))))) (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 skoMC1))) (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (/ (- 1.) 12.)))) (* skoSC1 (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (/ 1. 360.)))) (* skoSC1 (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (/ (- 1.) 20160.)))) (* skoSC1 (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (/ 1. 1814400.)))) (* skoSC1 (* skoSC1 (* skoMC1 (* skoMC1 (* skoMC1 (/ (- 1.) 239500800.))))))))))))))))))))))) (* skoMC1 (* skoMC1 (* skoMC1 (+ 2. (* skoMC1 5.)))))) (> skoSC1 0.) (> (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (+ (- 1.) (* skoMC1 3.))))) (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (+ (- 2.) (* skoMC1 (- 3.)))))) (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (* skoMC1 (- 1.))))) (* skoSC1 (* skoMC1 (* skoMC1 (* skoMC1 (/ 1. 12.))))))))))) (* skoMC1 (* skoMC1 (* skoMC1 (+ (- 2.) (* skoMC1 (- 5.))))))) (> (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (+ (- 1.) (* skoMC1 3.))))) (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (+ (- 2.) (* skoMC1 (- 3.)))))) (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (+ (/ 1. 6.) (* skoMC1 (- 1.)))))) (* skoSC1 (* skoMC1 (* skoMC1 (* skoMC1 (/ 1. 4.))))))))))) (* skoMC1 (* skoMC1 (* skoMC1 (+ (- 2.) (* skoMC1 (- 5.))))))) (> (* skoSC1 (* skoMC1 (* skoMC1 skoMC1))) (* skoMC1 (* skoMC1 (* skoMC1 (- 1.))))) (> (* skoMC1 (* skoMC1 (* skoMC1 2.))) 0.) (> (* skoSC1 (+ (* skoMC1 (+ (- 1.) (* skoMC1 3.))) (* skoSC1 (+ (* skoMC1 (+ (- 2.) (* skoMC1 (- 3.)))) (* skoSC1 (+ (* skoMC1 (+ (/ 1. 6.) (* skoMC1 (- 1.)))) (* skoSC1 (* skoMC1 (/ 1. 4.))))))))) (* skoMC1 (+ (- 2.) (* skoMC1 (- 5.))))) (> (* skoSC1 (+ (* skoMC1 (+ (- 1.) (* skoMC1 3.))) (* skoSC1 (+ (* skoMC1 (+ (- 2.) (* skoMC1 (- 3.)))) (* skoSC1 (+ (* skoMC1 (* skoMC1 (- 1.))) (* skoSC1 (* skoMC1 (/ 1. 12.))))))))) (* skoMC1 (+ (- 2.) (* skoMC1 (- 5.))))) (> (* skoSC1 skoMC1) (* skoMC1 (- 1.))) (> skoMC1 0.)) (succedent (<= (* skoSC1 (* skoMC1 (* skoMC1 (* skoMC1 2.)))) (* skoMC1 (* skoMC1 (* skoMC1 (- 2.)))))))
-----[end problem]-----

-----[begin problem]-----
% In Mathematica format:
Timing[Resolve[Exists[{skoSC1,skoMC1}, And[skoSC1*(skoMC1*skoMC1*skoMC1*(1+skoMC1*-3)+skoSC1*(skoMC1*skoMC1*skoMC1*(2+skoMC1*3)+skoSC1*(skoMC1*skoMC1*skoMC1*skoMC1+skoSC1*(skoMC1*skoMC1*skoMC1*(-1/12)+skoSC1*skoSC1*(skoMC1*skoMC1*skoMC1*(1/360)+skoSC1*skoSC1*(skoMC1*skoMC1*skoMC1*(-1/20160)+skoSC1*skoSC1*(skoMC1*skoMC1*skoMC1*(1/1814400)+skoSC1*skoSC1*skoMC1*skoMC1*skoMC1*(-1/239500800))))))))>skoMC1*skoMC1*skoMC1*(2+skoMC1*5),skoSC1>0,skoSC1*(skoMC1*skoMC1*skoMC1*(1+skoMC1*-3)+skoSC1*(skoMC1*skoMC1*skoMC1*(2+skoMC1*3)+skoSC1*(skoMC1*skoMC1*skoMC1*skoMC1+skoSC1*skoMC1*skoMC1*skoMC1*(-1/12))))<=skoMC1*skoMC1*skoMC1*(2+skoMC1*5),skoSC1*(skoMC1*skoMC1*skoMC1*(1+skoMC1*-3)+skoSC1*(skoMC1*skoMC1*skoMC1*(2+skoMC1*3)+skoSC1*(skoMC1*skoMC1*skoMC1*((-1/6)+skoMC1)+skoSC1*skoMC1*skoMC1*skoMC1*(-1/4))))<=skoMC1*skoMC1*skoMC1*(2+skoMC1*5),skoSC1*skoMC1*skoMC1*skoMC1*-1<=skoMC1*skoMC1*skoMC1,skoSC1*(skoMC1*skoMC1*skoMC1*(-1+skoMC1*3)+skoSC1*(skoMC1*skoMC1*skoMC1*(-2+skoMC1*-3)+skoSC1*(skoMC1*skoMC1*skoMC1*skoMC1*-1+skoSC1*skoMC1*skoMC1*skoMC1*(1/12))))>skoMC1*skoMC1*skoMC1*(-2+skoMC1*-5),skoSC1*(skoMC1*skoMC1*skoMC1*(-1+skoMC1*3)+skoSC1*(skoMC1*skoMC1*skoMC1*(-2+skoMC1*-3)+skoSC1*(skoMC1*skoMC1*skoMC1*((1/6)+skoMC1*-1)+skoSC1*skoMC1*skoMC1*skoMC1*(1/4))))>skoMC1*skoMC1*skoMC1*(-2+skoMC1*-5),skoSC1*skoMC1*skoMC1*skoMC1>skoMC1*skoMC1*skoMC1*-1,skoMC1*skoMC1*skoMC1*-2<=0,skoMC1*skoMC1*skoMC1*2>0,skoSC1*(skoMC1*(-1+skoMC1*3)+skoSC1*(skoMC1*(-2+skoMC1*-3)+skoSC1*(skoMC1*((1/6)+skoMC1*-1)+skoSC1*skoMC1*(1/4))))>skoMC1*(-2+skoMC1*-5),skoSC1*(skoMC1*(-1+skoMC1*3)+skoSC1*(skoMC1*(-2+skoMC1*-3)+skoSC1*(skoMC1*skoMC1*-1+skoSC1*skoMC1*(1/12))))>skoMC1*(-2+skoMC1*-5),skoSC1*(skoMC1*(1+skoMC1*-3)+skoSC1*(skoMC1*(2+skoMC1*3)+skoSC1*(skoMC1*((-1/6)+skoMC1)+skoSC1*skoMC1*(-1/4))))<=skoMC1*(2+skoMC1*5),skoSC1*(skoMC1*(1+skoMC1*-3)+skoSC1*(skoMC1*(2+skoMC1*3)+skoSC1*(skoMC1*skoMC1+skoSC1*skoMC1*(-1/12))))<=skoMC1*(2+skoMC1*5),skoSC1*skoMC1*-1<=skoMC1,skoSC1*skoMC1>skoMC1*-1,0<=skoMC1,skoMC1>0,0<=skoSC1,2<=skoMC1,skoSC1<=(5/4),skoSC1*skoMC1*skoMC1*skoMC1*2>skoMC1*skoMC1*skoMC1*-2,skoSC1*skoMC1*skoMC1*skoMC1*-2<=skoMC1*skoMC1*skoMC1*2,skoSC1*(skoMC1*skoMC1*skoMC1*(-2+skoMC1*-12)+skoSC1*(skoMC1*skoMC1*skoMC1*(1+skoMC1*-6)+skoSC1*(skoMC1*skoMC1*skoMC1+skoSC1*(skoMC1*skoMC1*skoMC1*(-1/12)+skoSC1*skoMC1*skoMC1*skoMC1*(-1/12)))))<=skoMC1*skoMC1*skoMC1*(2+skoMC1*6)]], Reals]]

% In QepcadB format:
(E skoSC1) (E skoMC1) [[(skoMC1 skoMC1 skoMC1 (2+(skoMC1 (5))))<(skoSC1 ((skoMC1 skoMC1 skoMC1 (1+(skoMC1 (-3))))+(skoSC1 ((skoMC1 skoMC1 skoMC1 (2+(skoMC1 (3))))+(skoSC1 ((skoMC1 skoMC1 skoMC1 skoMC1)+(skoSC1 ((skoMC1 skoMC1 skoMC1 (-1/12))+(skoSC1 skoSC1 ((skoMC1 skoMC1 skoMC1 (1/360))+(skoSC1 skoSC1 ((skoMC1 skoMC1 skoMC1 (-1/20160))+(skoSC1 skoSC1 ((skoMC1 skoMC1 skoMC1 (1/1814400))+(skoSC1 skoSC1 skoMC1 skoMC1 skoMC1 (-1/239500800))))))))))))))))]/\[[0<skoSC1]/\[[(skoSC1 ((skoMC1 skoMC1 skoMC1 (1+(skoMC1 (-3))))+(skoSC1 ((skoMC1 skoMC1 skoMC1 (2+(skoMC1 (3))))+(skoSC1 ((skoMC1 skoMC1 skoMC1 skoMC1)+(skoSC1 skoMC1 skoMC1 skoMC1 (-1/12))))))))<=(skoMC1 skoMC1 skoMC1 (2+(skoMC1 (5))))]/\[[(skoSC1 ((skoMC1 skoMC1 skoMC1 (1+(skoMC1 (-3))))+(skoSC1 ((skoMC1 skoMC1 skoMC1 (2+(skoMC1 (3))))+(skoSC1 ((skoMC1 skoMC1 skoMC1 (-1/6+skoMC1))+(skoSC1 skoMC1 skoMC1 skoMC1 (-1/4))))))))<=(skoMC1 skoMC1 skoMC1 (2+(skoMC1 (5))))]/\[[(skoSC1 skoMC1 skoMC1 skoMC1 (-1))<=(skoMC1 skoMC1 skoMC1)]/\[[(skoMC1 skoMC1 skoMC1 (-2+(skoMC1 (-5))))<(skoSC1 ((skoMC1 skoMC1 skoMC1 (-1+(skoMC1 (3))))+(skoSC1 ((skoMC1 skoMC1 skoMC1 (-2+(skoMC1 (-3))))+(skoSC1 ((skoMC1 skoMC1 skoMC1 skoMC1 (-1))+(skoSC1 skoMC1 skoMC1 skoMC1 (1/12))))))))]/\[[(skoMC1 skoMC1 skoMC1 (-2+(skoMC1 (-5))))<(skoSC1 ((skoMC1 skoMC1 skoMC1 (-1+(skoMC1 (3))))+(skoSC1 ((skoMC1 skoMC1 skoMC1 (-2+(skoMC1 (-3))))+(skoSC1 ((skoMC1 skoMC1 skoMC1 (1/6+(skoMC1 (-1))))+(skoSC1 skoMC1 skoMC1 skoMC1 (1/4))))))))]/\[[(skoMC1 skoMC1 skoMC1 (-1))<(skoSC1 skoMC1 skoMC1 skoMC1)]/\[[(skoMC1 skoMC1 skoMC1 (-2))<=0]/\[[0<(skoMC1 skoMC1 skoMC1 (2))]/\[[(skoMC1 (-2+(skoMC1 (-5))))<(skoSC1 ((skoMC1 (-1+(skoMC1 (3))))+(skoSC1 ((skoMC1 (-2+(skoMC1 (-3))))+(skoSC1 ((skoMC1 (1/6+(skoMC1 (-1))))+(skoSC1 skoMC1 (1/4))))))))]/\[[(skoMC1 (-2+(skoMC1 (-5))))<(skoSC1 ((skoMC1 (-1+(skoMC1 (3))))+(skoSC1 ((skoMC1 (-2+(skoMC1 (-3))))+(skoSC1 ((skoMC1 skoMC1 (-1))+(skoSC1 skoMC1 (1/12))))))))]/\[[(skoSC1 ((skoMC1 (1+(skoMC1 (-3))))+(skoSC1 ((skoMC1 (2+(skoMC1 (3))))+(skoSC1 ((skoMC1 (-1/6+skoMC1))+(skoSC1 skoMC1 (-1/4))))))))<=(skoMC1 (2+(skoMC1 (5))))]/\[[(skoSC1 ((skoMC1 (1+(skoMC1 (-3))))+(skoSC1 ((skoMC1 (2+(skoMC1 (3))))+(skoSC1 ((skoMC1 skoMC1)+(skoSC1 skoMC1 (-1/12))))))))<=(skoMC1 (2+(skoMC1 (5))))]/\[[(skoSC1 skoMC1 (-1))<=skoMC1]/\[[(skoMC1 (-1))<(skoSC1 skoMC1)]/\[[0<=skoMC1]/\[[0<skoMC1]/\[[0<=skoSC1]/\[[2<=skoMC1]/\[[skoSC1<=5/4]/\[[(skoMC1 skoMC1 skoMC1 (-2))<(skoSC1 skoMC1 skoMC1 skoMC1 (2))]/\[[(skoSC1 skoMC1 skoMC1 skoMC1 (-2))<=(skoMC1 skoMC1 skoMC1 (2))]/\[(skoSC1 ((skoMC1 skoMC1 skoMC1 (-2+(skoMC1 (-12))))+(skoSC1 ((skoMC1 skoMC1 skoMC1 (1+(skoMC1 (-6))))+(skoSC1 ((skoMC1 skoMC1 skoMC1)+(skoSC1 ((skoMC1 skoMC1 skoMC1 (-1/12))+(skoSC1 skoMC1 skoMC1 skoMC1 (-1/12))))))))))<=(skoMC1 skoMC1 skoMC1 (2+(skoMC1 (6))))]]]]]]]]]]]]]]]]]]]]]]]].

% In SMTLib2 format:
(declare-fun skoSC1 () Real) (declare-fun skoMC1 () Real) (assert (and (> (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (+ 1. (* skoMC1 (- 3.)))))) (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (+ 2. (* skoMC1 3.))))) (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 skoMC1))) (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (/ (- 1.) 12.)))) (* skoSC1 (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (/ 1. 360.)))) (* skoSC1 (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (/ (- 1.) 20160.)))) (* skoSC1 (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (/ 1. 1814400.)))) (* skoSC1 (* skoSC1 (* skoMC1 (* skoMC1 (* skoMC1 (/ (- 1.) 239500800.))))))))))))))))))))))) (* skoMC1 (* skoMC1 (* skoMC1 (+ 2. (* skoMC1 5.)))))) (and (> skoSC1 0.) (and (<= (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (+ 1. (* skoMC1 (- 3.)))))) (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (+ 2. (* skoMC1 3.))))) (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 skoMC1))) (* skoSC1 (* skoMC1 (* skoMC1 (* skoMC1 (/ (- 1.) 12.))))))))))) (* skoMC1 (* skoMC1 (* skoMC1 (+ 2. (* skoMC1 5.)))))) (and (<= (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (+ 1. (* skoMC1 (- 3.)))))) (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (+ 2. (* skoMC1 3.))))) (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (+ (/ (- 1.) 6.) skoMC1)))) (* skoSC1 (* skoMC1 (* skoMC1 (* skoMC1 (/ (- 1.) 4.))))))))))) (* skoMC1 (* skoMC1 (* skoMC1 (+ 2. (* skoMC1 5.)))))) (and (<= (* skoSC1 (* skoMC1 (* skoMC1 (* skoMC1 (- 1.))))) (* skoMC1 (* skoMC1 skoMC1))) (and (> (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (+ (- 1.) (* skoMC1 3.))))) (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (+ (- 2.) (* skoMC1 (- 3.)))))) (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (* skoMC1 (- 1.))))) (* skoSC1 (* skoMC1 (* skoMC1 (* skoMC1 (/ 1. 12.))))))))))) (* skoMC1 (* skoMC1 (* skoMC1 (+ (- 2.) (* skoMC1 (- 5.))))))) (and (> (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (+ (- 1.) (* skoMC1 3.))))) (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (+ (- 2.) (* skoMC1 (- 3.)))))) (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (+ (/ 1. 6.) (* skoMC1 (- 1.)))))) (* skoSC1 (* skoMC1 (* skoMC1 (* skoMC1 (/ 1. 4.))))))))))) (* skoMC1 (* skoMC1 (* skoMC1 (+ (- 2.) (* skoMC1 (- 5.))))))) (and (> (* skoSC1 (* skoMC1 (* skoMC1 skoMC1))) (* skoMC1 (* skoMC1 (* skoMC1 (- 1.))))) (and (<= (* skoMC1 (* skoMC1 (* skoMC1 (- 2.)))) 0.) (and (> (* skoMC1 (* skoMC1 (* skoMC1 2.))) 0.) (and (> (* skoSC1 (+ (* skoMC1 (+ (- 1.) (* skoMC1 3.))) (* skoSC1 (+ (* skoMC1 (+ (- 2.) (* skoMC1 (- 3.)))) (* skoSC1 (+ (* skoMC1 (+ (/ 1. 6.) (* skoMC1 (- 1.)))) (* skoSC1 (* skoMC1 (/ 1. 4.))))))))) (* skoMC1 (+ (- 2.) (* skoMC1 (- 5.))))) (and (> (* skoSC1 (+ (* skoMC1 (+ (- 1.) (* skoMC1 3.))) (* skoSC1 (+ (* skoMC1 (+ (- 2.) (* skoMC1 (- 3.)))) (* skoSC1 (+ (* skoMC1 (* skoMC1 (- 1.))) (* skoSC1 (* skoMC1 (/ 1. 12.))))))))) (* skoMC1 (+ (- 2.) (* skoMC1 (- 5.))))) (and (<= (* skoSC1 (+ (* skoMC1 (+ 1. (* skoMC1 (- 3.)))) (* skoSC1 (+ (* skoMC1 (+ 2. (* skoMC1 3.))) (* skoSC1 (+ (* skoMC1 (+ (/ (- 1.) 6.) skoMC1)) (* skoSC1 (* skoMC1 (/ (- 1.) 4.))))))))) (* skoMC1 (+ 2. (* skoMC1 5.)))) (and (<= (* skoSC1 (+ (* skoMC1 (+ 1. (* skoMC1 (- 3.)))) (* skoSC1 (+ (* skoMC1 (+ 2. (* skoMC1 3.))) (* skoSC1 (+ (* skoMC1 skoMC1) (* skoSC1 (* skoMC1 (/ (- 1.) 12.))))))))) (* skoMC1 (+ 2. (* skoMC1 5.)))) (and (<= (* skoSC1 (* skoMC1 (- 1.))) skoMC1) (and (> (* skoSC1 skoMC1) (* skoMC1 (- 1.))) (and (<= 0. skoMC1) (and (> skoMC1 0.) (and (<= 0. skoSC1) (and (<= 2. skoMC1) (and (<= skoSC1 (/ 5. 4.)) (and (> (* skoSC1 (* skoMC1 (* skoMC1 (* skoMC1 2.)))) (* skoMC1 (* skoMC1 (* skoMC1 (- 2.))))) (and (<= (* skoSC1 (* skoMC1 (* skoMC1 (* skoMC1 (- 2.))))) (* skoMC1 (* skoMC1 (* skoMC1 2.)))) (<= (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (+ (- 2.) (* skoMC1 (- 12.)))))) (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (+ 1. (* skoMC1 (- 6.)))))) (* skoSC1 (+ (* skoMC1 (* skoMC1 skoMC1)) (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (/ (- 1.) 12.)))) (* skoSC1 (* skoMC1 (* skoMC1 (* skoMC1 (/ (- 1.) 12.))))))))))))) (* skoMC1 (* skoMC1 (* skoMC1 (+ 2. (* skoMC1 6.))))))))))))))))))))))))))))))

% In GRF format:
(sequent " MetiTarski formula " (antecedent (> (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (+ 1. (* skoMC1 (- 3.)))))) (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (+ 2. (* skoMC1 3.))))) (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 skoMC1))) (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (/ (- 1.) 12.)))) (* skoSC1 (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (/ 1. 360.)))) (* skoSC1 (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (/ (- 1.) 20160.)))) (* skoSC1 (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (/ 1. 1814400.)))) (* skoSC1 (* skoSC1 (* skoMC1 (* skoMC1 (* skoMC1 (/ (- 1.) 239500800.))))))))))))))))))))))) (* skoMC1 (* skoMC1 (* skoMC1 (+ 2. (* skoMC1 5.)))))) (> skoSC1 0.) (<= (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (+ 1. (* skoMC1 (- 3.)))))) (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (+ 2. (* skoMC1 3.))))) (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 skoMC1))) (* skoSC1 (* skoMC1 (* skoMC1 (* skoMC1 (/ (- 1.) 12.))))))))))) (* skoMC1 (* skoMC1 (* skoMC1 (+ 2. (* skoMC1 5.)))))) (<= (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (+ 1. (* skoMC1 (- 3.)))))) (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (+ 2. (* skoMC1 3.))))) (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (+ (/ (- 1.) 6.) skoMC1)))) (* skoSC1 (* skoMC1 (* skoMC1 (* skoMC1 (/ (- 1.) 4.))))))))))) (* skoMC1 (* skoMC1 (* skoMC1 (+ 2. (* skoMC1 5.)))))) (<= (* skoSC1 (* skoMC1 (* skoMC1 (* skoMC1 (- 1.))))) (* skoMC1 (* skoMC1 skoMC1))) (> (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (+ (- 1.) (* skoMC1 3.))))) (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (+ (- 2.) (* skoMC1 (- 3.)))))) (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (* skoMC1 (- 1.))))) (* skoSC1 (* skoMC1 (* skoMC1 (* skoMC1 (/ 1. 12.))))))))))) (* skoMC1 (* skoMC1 (* skoMC1 (+ (- 2.) (* skoMC1 (- 5.))))))) (> (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (+ (- 1.) (* skoMC1 3.))))) (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (+ (- 2.) (* skoMC1 (- 3.)))))) (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (+ (/ 1. 6.) (* skoMC1 (- 1.)))))) (* skoSC1 (* skoMC1 (* skoMC1 (* skoMC1 (/ 1. 4.))))))))))) (* skoMC1 (* skoMC1 (* skoMC1 (+ (- 2.) (* skoMC1 (- 5.))))))) (> (* skoSC1 (* skoMC1 (* skoMC1 skoMC1))) (* skoMC1 (* skoMC1 (* skoMC1 (- 1.))))) (<= (* skoMC1 (* skoMC1 (* skoMC1 (- 2.)))) 0.) (> (* skoMC1 (* skoMC1 (* skoMC1 2.))) 0.) (> (* skoSC1 (+ (* skoMC1 (+ (- 1.) (* skoMC1 3.))) (* skoSC1 (+ (* skoMC1 (+ (- 2.) (* skoMC1 (- 3.)))) (* skoSC1 (+ (* skoMC1 (+ (/ 1. 6.) (* skoMC1 (- 1.)))) (* skoSC1 (* skoMC1 (/ 1. 4.))))))))) (* skoMC1 (+ (- 2.) (* skoMC1 (- 5.))))) (> (* skoSC1 (+ (* skoMC1 (+ (- 1.) (* skoMC1 3.))) (* skoSC1 (+ (* skoMC1 (+ (- 2.) (* skoMC1 (- 3.)))) (* skoSC1 (+ (* skoMC1 (* skoMC1 (- 1.))) (* skoSC1 (* skoMC1 (/ 1. 12.))))))))) (* skoMC1 (+ (- 2.) (* skoMC1 (- 5.))))) (<= (* skoSC1 (+ (* skoMC1 (+ 1. (* skoMC1 (- 3.)))) (* skoSC1 (+ (* skoMC1 (+ 2. (* skoMC1 3.))) (* skoSC1 (+ (* skoMC1 (+ (/ (- 1.) 6.) skoMC1)) (* skoSC1 (* skoMC1 (/ (- 1.) 4.))))))))) (* skoMC1 (+ 2. (* skoMC1 5.)))) (<= (* skoSC1 (+ (* skoMC1 (+ 1. (* skoMC1 (- 3.)))) (* skoSC1 (+ (* skoMC1 (+ 2. (* skoMC1 3.))) (* skoSC1 (+ (* skoMC1 skoMC1) (* skoSC1 (* skoMC1 (/ (- 1.) 12.))))))))) (* skoMC1 (+ 2. (* skoMC1 5.)))) (<= (* skoSC1 (* skoMC1 (- 1.))) skoMC1) (> (* skoSC1 skoMC1) (* skoMC1 (- 1.))) (<= 0. skoMC1) (> skoMC1 0.) (<= 0. skoSC1) (<= 2. skoMC1) (<= skoSC1 (/ 5. 4.)) (> (* skoSC1 (* skoMC1 (* skoMC1 (* skoMC1 2.)))) (* skoMC1 (* skoMC1 (* skoMC1 (- 2.))))) (<= (* skoSC1 (* skoMC1 (* skoMC1 (* skoMC1 (- 2.))))) (* skoMC1 (* skoMC1 (* skoMC1 2.))))) (succedent (> (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (+ (- 2.) (* skoMC1 (- 12.)))))) (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (+ 1. (* skoMC1 (- 6.)))))) (* skoSC1 (+ (* skoMC1 (* skoMC1 skoMC1)) (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (/ (- 1.) 12.)))) (* skoSC1 (* skoMC1 (* skoMC1 (* skoMC1 (/ (- 1.) 12.))))))))))))) (* skoMC1 (* skoMC1 (* skoMC1 (+ 2. (* skoMC1 6.))))))))
-----[end problem]-----

-----[begin problem]-----
% In Mathematica format:
Timing[Resolve[Exists[{skoSC1,skoMC1}, And[skoSC1*(skoMC1*skoMC1*skoMC1*(1+skoMC1*-3)+skoSC1*(skoMC1*skoMC1*skoMC1*(2+skoMC1*3)+skoSC1*(skoMC1*skoMC1*skoMC1*((-1/6)+skoMC1)+skoSC1*(skoMC1*skoMC1*skoMC1*(-1/4)+skoSC1*skoSC1*(skoMC1*skoMC1*skoMC1*(1/360)+skoSC1*skoSC1*(skoMC1*skoMC1*skoMC1*(-1/20160)+skoSC1*skoSC1*(skoMC1*skoMC1*skoMC1*(1/1814400)+skoSC1*skoSC1*skoMC1*skoMC1*skoMC1*(-1/239500800))))))))<=skoMC1*skoMC1*skoMC1*(2+skoMC1*5),skoMC1*skoMC1*skoMC1*2>0,skoSC1*(skoMC1*skoMC1*skoMC1*(1+skoMC1*-3)+skoSC1*(skoMC1*skoMC1*skoMC1*(2+skoMC1*3)+skoSC1*(skoMC1*skoMC1*skoMC1*skoMC1+skoSC1*skoMC1*skoMC1*skoMC1*(-1/12))))<=skoMC1*skoMC1*skoMC1*(2+skoMC1*5),skoSC1*(skoMC1*skoMC1*skoMC1*(1+skoMC1*-3)+skoSC1*(skoMC1*skoMC1*skoMC1*(2+skoMC1*3)+skoSC1*(skoMC1*skoMC1*skoMC1*((-1/6)+skoMC1)+skoSC1*skoMC1*skoMC1*skoMC1*(-1/4))))<=skoMC1*skoMC1*skoMC1*(2+skoMC1*5),skoSC1*skoMC1*skoMC1*skoMC1*-1<=skoMC1*skoMC1*skoMC1,skoSC1*(skoMC1*skoMC1*skoMC1*(-1+skoMC1*3)+skoSC1*(skoMC1*skoMC1*skoMC1*(-2+skoMC1*-3)+skoSC1*(skoMC1*skoMC1*skoMC1*skoMC1*-1+skoSC1*skoMC1*skoMC1*skoMC1*(1/12))))>skoMC1*skoMC1*skoMC1*(-2+skoMC1*-5),skoSC1*(skoMC1*skoMC1*skoMC1*(-1+skoMC1*3)+skoSC1*(skoMC1*skoMC1*skoMC1*(-2+skoMC1*-3)+skoSC1*(skoMC1*skoMC1*skoMC1*((1/6)+skoMC1*-1)+skoSC1*skoMC1*skoMC1*skoMC1*(1/4))))>skoMC1*skoMC1*skoMC1*(-2+skoMC1*-5),skoSC1*skoMC1*skoMC1*skoMC1>skoMC1*skoMC1*skoMC1*-1,skoMC1*skoMC1*skoMC1*-2<=0,skoMC1*skoMC1*skoMC1*2>0,skoSC1*(skoMC1*(-1+skoMC1*3)+skoSC1*(skoMC1*(-2+skoMC1*-3)+skoSC1*(skoMC1*((1/6)+skoMC1*-1)+skoSC1*skoMC1*(1/4))))>skoMC1*(-2+skoMC1*-5),skoSC1*(skoMC1*(-1+skoMC1*3)+skoSC1*(skoMC1*(-2+skoMC1*-3)+skoSC1*(skoMC1*skoMC1*-1+skoSC1*skoMC1*(1/12))))>skoMC1*(-2+skoMC1*-5),skoSC1*(skoMC1*(1+skoMC1*-3)+skoSC1*(skoMC1*(2+skoMC1*3)+skoSC1*(skoMC1*((-1/6)+skoMC1)+skoSC1*skoMC1*(-1/4))))<=skoMC1*(2+skoMC1*5),skoSC1*(skoMC1*(1+skoMC1*-3)+skoSC1*(skoMC1*(2+skoMC1*3)+skoSC1*(skoMC1*skoMC1+skoSC1*skoMC1*(-1/12))))<=skoMC1*(2+skoMC1*5),skoSC1*skoMC1*-1<=skoMC1,skoSC1*skoMC1>skoMC1*-1,0<=skoMC1,skoMC1>0,0<=skoSC1,2<=skoMC1,skoSC1<=(5/4),skoSC1*skoMC1*skoMC1*skoMC1*2>skoMC1*skoMC1*skoMC1*-2,skoSC1*skoMC1*skoMC1*skoMC1*-2<=skoMC1*skoMC1*skoMC1*2,skoSC1*(skoMC1*skoMC1*skoMC1*(-2+skoMC1*-12)+skoSC1*(skoMC1*skoMC1*skoMC1*(1+skoMC1*-6)+skoSC1*(skoMC1*skoMC1*skoMC1+skoSC1*(skoMC1*skoMC1*skoMC1*(-1/12)+skoSC1*skoMC1*skoMC1*skoMC1*(-1/12)))))<=skoMC1*skoMC1*skoMC1*(2+skoMC1*6)]], Reals]]

% In QepcadB format:
(E skoSC1) (E skoMC1) [[(skoSC1 ((skoMC1 skoMC1 skoMC1 (1+(skoMC1 (-3))))+(skoSC1 ((skoMC1 skoMC1 skoMC1 (2+(skoMC1 (3))))+(skoSC1 ((skoMC1 skoMC1 skoMC1 (-1/6+skoMC1))+(skoSC1 ((skoMC1 skoMC1 skoMC1 (-1/4))+(skoSC1 skoSC1 ((skoMC1 skoMC1 skoMC1 (1/360))+(skoSC1 skoSC1 ((skoMC1 skoMC1 skoMC1 (-1/20160))+(skoSC1 skoSC1 ((skoMC1 skoMC1 skoMC1 (1/1814400))+(skoSC1 skoSC1 skoMC1 skoMC1 skoMC1 (-1/239500800))))))))))))))))<=(skoMC1 skoMC1 skoMC1 (2+(skoMC1 (5))))]/\[[0<(skoMC1 skoMC1 skoMC1 (2))]/\[[(skoSC1 ((skoMC1 skoMC1 skoMC1 (1+(skoMC1 (-3))))+(skoSC1 ((skoMC1 skoMC1 skoMC1 (2+(skoMC1 (3))))+(skoSC1 ((skoMC1 skoMC1 skoMC1 skoMC1)+(skoSC1 skoMC1 skoMC1 skoMC1 (-1/12))))))))<=(skoMC1 skoMC1 skoMC1 (2+(skoMC1 (5))))]/\[[(skoSC1 ((skoMC1 skoMC1 skoMC1 (1+(skoMC1 (-3))))+(skoSC1 ((skoMC1 skoMC1 skoMC1 (2+(skoMC1 (3))))+(skoSC1 ((skoMC1 skoMC1 skoMC1 (-1/6+skoMC1))+(skoSC1 skoMC1 skoMC1 skoMC1 (-1/4))))))))<=(skoMC1 skoMC1 skoMC1 (2+(skoMC1 (5))))]/\[[(skoSC1 skoMC1 skoMC1 skoMC1 (-1))<=(skoMC1 skoMC1 skoMC1)]/\[[(skoMC1 skoMC1 skoMC1 (-2+(skoMC1 (-5))))<(skoSC1 ((skoMC1 skoMC1 skoMC1 (-1+(skoMC1 (3))))+(skoSC1 ((skoMC1 skoMC1 skoMC1 (-2+(skoMC1 (-3))))+(skoSC1 ((skoMC1 skoMC1 skoMC1 skoMC1 (-1))+(skoSC1 skoMC1 skoMC1 skoMC1 (1/12))))))))]/\[[(skoMC1 skoMC1 skoMC1 (-2+(skoMC1 (-5))))<(skoSC1 ((skoMC1 skoMC1 skoMC1 (-1+(skoMC1 (3))))+(skoSC1 ((skoMC1 skoMC1 skoMC1 (-2+(skoMC1 (-3))))+(skoSC1 ((skoMC1 skoMC1 skoMC1 (1/6+(skoMC1 (-1))))+(skoSC1 skoMC1 skoMC1 skoMC1 (1/4))))))))]/\[[(skoMC1 skoMC1 skoMC1 (-1))<(skoSC1 skoMC1 skoMC1 skoMC1)]/\[[(skoMC1 skoMC1 skoMC1 (-2))<=0]/\[[0<(skoMC1 skoMC1 skoMC1 (2))]/\[[(skoMC1 (-2+(skoMC1 (-5))))<(skoSC1 ((skoMC1 (-1+(skoMC1 (3))))+(skoSC1 ((skoMC1 (-2+(skoMC1 (-3))))+(skoSC1 ((skoMC1 (1/6+(skoMC1 (-1))))+(skoSC1 skoMC1 (1/4))))))))]/\[[(skoMC1 (-2+(skoMC1 (-5))))<(skoSC1 ((skoMC1 (-1+(skoMC1 (3))))+(skoSC1 ((skoMC1 (-2+(skoMC1 (-3))))+(skoSC1 ((skoMC1 skoMC1 (-1))+(skoSC1 skoMC1 (1/12))))))))]/\[[(skoSC1 ((skoMC1 (1+(skoMC1 (-3))))+(skoSC1 ((skoMC1 (2+(skoMC1 (3))))+(skoSC1 ((skoMC1 (-1/6+skoMC1))+(skoSC1 skoMC1 (-1/4))))))))<=(skoMC1 (2+(skoMC1 (5))))]/\[[(skoSC1 ((skoMC1 (1+(skoMC1 (-3))))+(skoSC1 ((skoMC1 (2+(skoMC1 (3))))+(skoSC1 ((skoMC1 skoMC1)+(skoSC1 skoMC1 (-1/12))))))))<=(skoMC1 (2+(skoMC1 (5))))]/\[[(skoSC1 skoMC1 (-1))<=skoMC1]/\[[(skoMC1 (-1))<(skoSC1 skoMC1)]/\[[0<=skoMC1]/\[[0<skoMC1]/\[[0<=skoSC1]/\[[2<=skoMC1]/\[[skoSC1<=5/4]/\[[(skoMC1 skoMC1 skoMC1 (-2))<(skoSC1 skoMC1 skoMC1 skoMC1 (2))]/\[[(skoSC1 skoMC1 skoMC1 skoMC1 (-2))<=(skoMC1 skoMC1 skoMC1 (2))]/\[(skoSC1 ((skoMC1 skoMC1 skoMC1 (-2+(skoMC1 (-12))))+(skoSC1 ((skoMC1 skoMC1 skoMC1 (1+(skoMC1 (-6))))+(skoSC1 ((skoMC1 skoMC1 skoMC1)+(skoSC1 ((skoMC1 skoMC1 skoMC1 (-1/12))+(skoSC1 skoMC1 skoMC1 skoMC1 (-1/12))))))))))<=(skoMC1 skoMC1 skoMC1 (2+(skoMC1 (6))))]]]]]]]]]]]]]]]]]]]]]]]].

% In SMTLib2 format:
(declare-fun skoSC1 () Real) (declare-fun skoMC1 () Real) (assert (and (<= (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (+ 1. (* skoMC1 (- 3.)))))) (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (+ 2. (* skoMC1 3.))))) (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (+ (/ (- 1.) 6.) skoMC1)))) (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (/ (- 1.) 4.)))) (* skoSC1 (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (/ 1. 360.)))) (* skoSC1 (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (/ (- 1.) 20160.)))) (* skoSC1 (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (/ 1. 1814400.)))) (* skoSC1 (* skoSC1 (* skoMC1 (* skoMC1 (* skoMC1 (/ (- 1.) 239500800.))))))))))))))))))))))) (* skoMC1 (* skoMC1 (* skoMC1 (+ 2. (* skoMC1 5.)))))) (and (> (* skoMC1 (* skoMC1 (* skoMC1 2.))) 0.) (and (<= (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (+ 1. (* skoMC1 (- 3.)))))) (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (+ 2. (* skoMC1 3.))))) (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 skoMC1))) (* skoSC1 (* skoMC1 (* skoMC1 (* skoMC1 (/ (- 1.) 12.))))))))))) (* skoMC1 (* skoMC1 (* skoMC1 (+ 2. (* skoMC1 5.)))))) (and (<= (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (+ 1. (* skoMC1 (- 3.)))))) (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (+ 2. (* skoMC1 3.))))) (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (+ (/ (- 1.) 6.) skoMC1)))) (* skoSC1 (* skoMC1 (* skoMC1 (* skoMC1 (/ (- 1.) 4.))))))))))) (* skoMC1 (* skoMC1 (* skoMC1 (+ 2. (* skoMC1 5.)))))) (and (<= (* skoSC1 (* skoMC1 (* skoMC1 (* skoMC1 (- 1.))))) (* skoMC1 (* skoMC1 skoMC1))) (and (> (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (+ (- 1.) (* skoMC1 3.))))) (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (+ (- 2.) (* skoMC1 (- 3.)))))) (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (* skoMC1 (- 1.))))) (* skoSC1 (* skoMC1 (* skoMC1 (* skoMC1 (/ 1. 12.))))))))))) (* skoMC1 (* skoMC1 (* skoMC1 (+ (- 2.) (* skoMC1 (- 5.))))))) (and (> (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (+ (- 1.) (* skoMC1 3.))))) (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (+ (- 2.) (* skoMC1 (- 3.)))))) (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (+ (/ 1. 6.) (* skoMC1 (- 1.)))))) (* skoSC1 (* skoMC1 (* skoMC1 (* skoMC1 (/ 1. 4.))))))))))) (* skoMC1 (* skoMC1 (* skoMC1 (+ (- 2.) (* skoMC1 (- 5.))))))) (and (> (* skoSC1 (* skoMC1 (* skoMC1 skoMC1))) (* skoMC1 (* skoMC1 (* skoMC1 (- 1.))))) (and (<= (* skoMC1 (* skoMC1 (* skoMC1 (- 2.)))) 0.) (and (> (* skoMC1 (* skoMC1 (* skoMC1 2.))) 0.) (and (> (* skoSC1 (+ (* skoMC1 (+ (- 1.) (* skoMC1 3.))) (* skoSC1 (+ (* skoMC1 (+ (- 2.) (* skoMC1 (- 3.)))) (* skoSC1 (+ (* skoMC1 (+ (/ 1. 6.) (* skoMC1 (- 1.)))) (* skoSC1 (* skoMC1 (/ 1. 4.))))))))) (* skoMC1 (+ (- 2.) (* skoMC1 (- 5.))))) (and (> (* skoSC1 (+ (* skoMC1 (+ (- 1.) (* skoMC1 3.))) (* skoSC1 (+ (* skoMC1 (+ (- 2.) (* skoMC1 (- 3.)))) (* skoSC1 (+ (* skoMC1 (* skoMC1 (- 1.))) (* skoSC1 (* skoMC1 (/ 1. 12.))))))))) (* skoMC1 (+ (- 2.) (* skoMC1 (- 5.))))) (and (<= (* skoSC1 (+ (* skoMC1 (+ 1. (* skoMC1 (- 3.)))) (* skoSC1 (+ (* skoMC1 (+ 2. (* skoMC1 3.))) (* skoSC1 (+ (* skoMC1 (+ (/ (- 1.) 6.) skoMC1)) (* skoSC1 (* skoMC1 (/ (- 1.) 4.))))))))) (* skoMC1 (+ 2. (* skoMC1 5.)))) (and (<= (* skoSC1 (+ (* skoMC1 (+ 1. (* skoMC1 (- 3.)))) (* skoSC1 (+ (* skoMC1 (+ 2. (* skoMC1 3.))) (* skoSC1 (+ (* skoMC1 skoMC1) (* skoSC1 (* skoMC1 (/ (- 1.) 12.))))))))) (* skoMC1 (+ 2. (* skoMC1 5.)))) (and (<= (* skoSC1 (* skoMC1 (- 1.))) skoMC1) (and (> (* skoSC1 skoMC1) (* skoMC1 (- 1.))) (and (<= 0. skoMC1) (and (> skoMC1 0.) (and (<= 0. skoSC1) (and (<= 2. skoMC1) (and (<= skoSC1 (/ 5. 4.)) (and (> (* skoSC1 (* skoMC1 (* skoMC1 (* skoMC1 2.)))) (* skoMC1 (* skoMC1 (* skoMC1 (- 2.))))) (and (<= (* skoSC1 (* skoMC1 (* skoMC1 (* skoMC1 (- 2.))))) (* skoMC1 (* skoMC1 (* skoMC1 2.)))) (<= (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (+ (- 2.) (* skoMC1 (- 12.)))))) (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (+ 1. (* skoMC1 (- 6.)))))) (* skoSC1 (+ (* skoMC1 (* skoMC1 skoMC1)) (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (/ (- 1.) 12.)))) (* skoSC1 (* skoMC1 (* skoMC1 (* skoMC1 (/ (- 1.) 12.))))))))))))) (* skoMC1 (* skoMC1 (* skoMC1 (+ 2. (* skoMC1 6.))))))))))))))))))))))))))))))

% In GRF format:
(sequent " MetiTarski formula " (antecedent (<= (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (+ 1. (* skoMC1 (- 3.)))))) (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (+ 2. (* skoMC1 3.))))) (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (+ (/ (- 1.) 6.) skoMC1)))) (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (/ (- 1.) 4.)))) (* skoSC1 (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (/ 1. 360.)))) (* skoSC1 (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (/ (- 1.) 20160.)))) (* skoSC1 (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (/ 1. 1814400.)))) (* skoSC1 (* skoSC1 (* skoMC1 (* skoMC1 (* skoMC1 (/ (- 1.) 239500800.))))))))))))))))))))))) (* skoMC1 (* skoMC1 (* skoMC1 (+ 2. (* skoMC1 5.)))))) (> (* skoMC1 (* skoMC1 (* skoMC1 2.))) 0.) (<= (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (+ 1. (* skoMC1 (- 3.)))))) (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (+ 2. (* skoMC1 3.))))) (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 skoMC1))) (* skoSC1 (* skoMC1 (* skoMC1 (* skoMC1 (/ (- 1.) 12.))))))))))) (* skoMC1 (* skoMC1 (* skoMC1 (+ 2. (* skoMC1 5.)))))) (<= (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (+ 1. (* skoMC1 (- 3.)))))) (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (+ 2. (* skoMC1 3.))))) (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (+ (/ (- 1.) 6.) skoMC1)))) (* skoSC1 (* skoMC1 (* skoMC1 (* skoMC1 (/ (- 1.) 4.))))))))))) (* skoMC1 (* skoMC1 (* skoMC1 (+ 2. (* skoMC1 5.)))))) (<= (* skoSC1 (* skoMC1 (* skoMC1 (* skoMC1 (- 1.))))) (* skoMC1 (* skoMC1 skoMC1))) (> (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (+ (- 1.) (* skoMC1 3.))))) (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (+ (- 2.) (* skoMC1 (- 3.)))))) (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (* skoMC1 (- 1.))))) (* skoSC1 (* skoMC1 (* skoMC1 (* skoMC1 (/ 1. 12.))))))))))) (* skoMC1 (* skoMC1 (* skoMC1 (+ (- 2.) (* skoMC1 (- 5.))))))) (> (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (+ (- 1.) (* skoMC1 3.))))) (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (+ (- 2.) (* skoMC1 (- 3.)))))) (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (+ (/ 1. 6.) (* skoMC1 (- 1.)))))) (* skoSC1 (* skoMC1 (* skoMC1 (* skoMC1 (/ 1. 4.))))))))))) (* skoMC1 (* skoMC1 (* skoMC1 (+ (- 2.) (* skoMC1 (- 5.))))))) (> (* skoSC1 (* skoMC1 (* skoMC1 skoMC1))) (* skoMC1 (* skoMC1 (* skoMC1 (- 1.))))) (<= (* skoMC1 (* skoMC1 (* skoMC1 (- 2.)))) 0.) (> (* skoMC1 (* skoMC1 (* skoMC1 2.))) 0.) (> (* skoSC1 (+ (* skoMC1 (+ (- 1.) (* skoMC1 3.))) (* skoSC1 (+ (* skoMC1 (+ (- 2.) (* skoMC1 (- 3.)))) (* skoSC1 (+ (* skoMC1 (+ (/ 1. 6.) (* skoMC1 (- 1.)))) (* skoSC1 (* skoMC1 (/ 1. 4.))))))))) (* skoMC1 (+ (- 2.) (* skoMC1 (- 5.))))) (> (* skoSC1 (+ (* skoMC1 (+ (- 1.) (* skoMC1 3.))) (* skoSC1 (+ (* skoMC1 (+ (- 2.) (* skoMC1 (- 3.)))) (* skoSC1 (+ (* skoMC1 (* skoMC1 (- 1.))) (* skoSC1 (* skoMC1 (/ 1. 12.))))))))) (* skoMC1 (+ (- 2.) (* skoMC1 (- 5.))))) (<= (* skoSC1 (+ (* skoMC1 (+ 1. (* skoMC1 (- 3.)))) (* skoSC1 (+ (* skoMC1 (+ 2. (* skoMC1 3.))) (* skoSC1 (+ (* skoMC1 (+ (/ (- 1.) 6.) skoMC1)) (* skoSC1 (* skoMC1 (/ (- 1.) 4.))))))))) (* skoMC1 (+ 2. (* skoMC1 5.)))) (<= (* skoSC1 (+ (* skoMC1 (+ 1. (* skoMC1 (- 3.)))) (* skoSC1 (+ (* skoMC1 (+ 2. (* skoMC1 3.))) (* skoSC1 (+ (* skoMC1 skoMC1) (* skoSC1 (* skoMC1 (/ (- 1.) 12.))))))))) (* skoMC1 (+ 2. (* skoMC1 5.)))) (<= (* skoSC1 (* skoMC1 (- 1.))) skoMC1) (> (* skoSC1 skoMC1) (* skoMC1 (- 1.))) (<= 0. skoMC1) (> skoMC1 0.) (<= 0. skoSC1) (<= 2. skoMC1) (<= skoSC1 (/ 5. 4.)) (> (* skoSC1 (* skoMC1 (* skoMC1 (* skoMC1 2.)))) (* skoMC1 (* skoMC1 (* skoMC1 (- 2.))))) (<= (* skoSC1 (* skoMC1 (* skoMC1 (* skoMC1 (- 2.))))) (* skoMC1 (* skoMC1 (* skoMC1 2.))))) (succedent (> (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (+ (- 2.) (* skoMC1 (- 12.)))))) (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (+ 1. (* skoMC1 (- 6.)))))) (* skoSC1 (+ (* skoMC1 (* skoMC1 skoMC1)) (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (/ (- 1.) 12.)))) (* skoSC1 (* skoMC1 (* skoMC1 (* skoMC1 (/ (- 1.) 12.))))))))))))) (* skoMC1 (* skoMC1 (* skoMC1 (+ 2. (* skoMC1 6.))))))))
-----[end problem]-----

-----[begin problem]-----
% In Mathematica format:
Timing[Resolve[Exists[{skoSC1,skoMC1}, And[skoSC1*(skoMC1*skoMC1*skoMC1*(1+skoMC1*-3)+skoSC1*(skoMC1*skoMC1*skoMC1*(2+skoMC1*3)+skoSC1*(skoMC1*skoMC1*skoMC1*skoMC1+skoSC1*(skoMC1*skoMC1*skoMC1*(-1/12)+skoSC1*skoSC1*(skoMC1*skoMC1*skoMC1*(1/360)+skoSC1*skoSC1*(skoMC1*skoMC1*skoMC1*(-1/20160)+skoSC1*skoSC1*(skoMC1*skoMC1*skoMC1*(1/1814400)+skoSC1*skoSC1*skoMC1*skoMC1*skoMC1*(-1/239500800))))))))<=skoMC1*skoMC1*skoMC1*(2+skoMC1*5),skoSC1*(skoMC1*skoMC1*skoMC1*(1+skoMC1*-3)+skoSC1*(skoMC1*skoMC1*skoMC1*(2+skoMC1*3)+skoSC1*(skoMC1*skoMC1*skoMC1*skoMC1+skoSC1*skoMC1*skoMC1*skoMC1*(-1/12))))<=skoMC1*skoMC1*skoMC1*(2+skoMC1*5),skoSC1*(skoMC1*skoMC1*skoMC1*(1+skoMC1*-3)+skoSC1*(skoMC1*skoMC1*skoMC1*(2+skoMC1*3)+skoSC1*(skoMC1*skoMC1*skoMC1*((-1/6)+skoMC1)+skoSC1*skoMC1*skoMC1*skoMC1*(-1/4))))<=skoMC1*skoMC1*skoMC1*(2+skoMC1*5),skoSC1*skoMC1*skoMC1*skoMC1*-1<=skoMC1*skoMC1*skoMC1,skoSC1*(skoMC1*skoMC1*skoMC1*(-1+skoMC1*3)+skoSC1*(skoMC1*skoMC1*skoMC1*(-2+skoMC1*-3)+skoSC1*(skoMC1*skoMC1*skoMC1*skoMC1*-1+skoSC1*skoMC1*skoMC1*skoMC1*(1/12))))>skoMC1*skoMC1*skoMC1*(-2+skoMC1*-5),skoSC1*(skoMC1*skoMC1*skoMC1*(-1+skoMC1*3)+skoSC1*(skoMC1*skoMC1*skoMC1*(-2+skoMC1*-3)+skoSC1*(skoMC1*skoMC1*skoMC1*((1/6)+skoMC1*-1)+skoSC1*skoMC1*skoMC1*skoMC1*(1/4))))>skoMC1*skoMC1*skoMC1*(-2+skoMC1*-5),skoSC1*skoMC1*skoMC1*skoMC1>skoMC1*skoMC1*skoMC1*-1,skoMC1*skoMC1*skoMC1*-2<=0,skoMC1*skoMC1*skoMC1*2>0,skoSC1*(skoMC1*(-1+skoMC1*3)+skoSC1*(skoMC1*(-2+skoMC1*-3)+skoSC1*(skoMC1*((1/6)+skoMC1*-1)+skoSC1*skoMC1*(1/4))))>skoMC1*(-2+skoMC1*-5),skoSC1*(skoMC1*(-1+skoMC1*3)+skoSC1*(skoMC1*(-2+skoMC1*-3)+skoSC1*(skoMC1*skoMC1*-1+skoSC1*skoMC1*(1/12))))>skoMC1*(-2+skoMC1*-5),skoSC1*(skoMC1*(1+skoMC1*-3)+skoSC1*(skoMC1*(2+skoMC1*3)+skoSC1*(skoMC1*((-1/6)+skoMC1)+skoSC1*skoMC1*(-1/4))))<=skoMC1*(2+skoMC1*5),skoSC1*(skoMC1*(1+skoMC1*-3)+skoSC1*(skoMC1*(2+skoMC1*3)+skoSC1*(skoMC1*skoMC1+skoSC1*skoMC1*(-1/12))))<=skoMC1*(2+skoMC1*5),skoSC1*skoMC1*-1<=skoMC1,skoSC1*skoMC1>skoMC1*-1,0<=skoMC1,skoMC1>0,0<=skoSC1,2<=skoMC1,skoSC1<=(5/4),skoSC1*skoMC1*skoMC1*skoMC1*2>skoMC1*skoMC1*skoMC1*-2,skoSC1*skoMC1*skoMC1*skoMC1*-2<=skoMC1*skoMC1*skoMC1*2,skoSC1*(skoMC1*skoMC1*skoMC1*(-2+skoMC1*-12)+skoSC1*(skoMC1*skoMC1*skoMC1*(1+skoMC1*-6)+skoSC1*(skoMC1*skoMC1*skoMC1+skoSC1*(skoMC1*skoMC1*skoMC1*(-1/12)+skoSC1*skoMC1*skoMC1*skoMC1*(-1/12)))))<=skoMC1*skoMC1*skoMC1*(2+skoMC1*6)]], Reals]]

% In QepcadB format:
(E skoSC1) (E skoMC1) [[(skoSC1 ((skoMC1 skoMC1 skoMC1 (1+(skoMC1 (-3))))+(skoSC1 ((skoMC1 skoMC1 skoMC1 (2+(skoMC1 (3))))+(skoSC1 ((skoMC1 skoMC1 skoMC1 skoMC1)+(skoSC1 ((skoMC1 skoMC1 skoMC1 (-1/12))+(skoSC1 skoSC1 ((skoMC1 skoMC1 skoMC1 (1/360))+(skoSC1 skoSC1 ((skoMC1 skoMC1 skoMC1 (-1/20160))+(skoSC1 skoSC1 ((skoMC1 skoMC1 skoMC1 (1/1814400))+(skoSC1 skoSC1 skoMC1 skoMC1 skoMC1 (-1/239500800))))))))))))))))<=(skoMC1 skoMC1 skoMC1 (2+(skoMC1 (5))))]/\[[(skoSC1 ((skoMC1 skoMC1 skoMC1 (1+(skoMC1 (-3))))+(skoSC1 ((skoMC1 skoMC1 skoMC1 (2+(skoMC1 (3))))+(skoSC1 ((skoMC1 skoMC1 skoMC1 skoMC1)+(skoSC1 skoMC1 skoMC1 skoMC1 (-1/12))))))))<=(skoMC1 skoMC1 skoMC1 (2+(skoMC1 (5))))]/\[[(skoSC1 ((skoMC1 skoMC1 skoMC1 (1+(skoMC1 (-3))))+(skoSC1 ((skoMC1 skoMC1 skoMC1 (2+(skoMC1 (3))))+(skoSC1 ((skoMC1 skoMC1 skoMC1 (-1/6+skoMC1))+(skoSC1 skoMC1 skoMC1 skoMC1 (-1/4))))))))<=(skoMC1 skoMC1 skoMC1 (2+(skoMC1 (5))))]/\[[(skoSC1 skoMC1 skoMC1 skoMC1 (-1))<=(skoMC1 skoMC1 skoMC1)]/\[[(skoMC1 skoMC1 skoMC1 (-2+(skoMC1 (-5))))<(skoSC1 ((skoMC1 skoMC1 skoMC1 (-1+(skoMC1 (3))))+(skoSC1 ((skoMC1 skoMC1 skoMC1 (-2+(skoMC1 (-3))))+(skoSC1 ((skoMC1 skoMC1 skoMC1 skoMC1 (-1))+(skoSC1 skoMC1 skoMC1 skoMC1 (1/12))))))))]/\[[(skoMC1 skoMC1 skoMC1 (-2+(skoMC1 (-5))))<(skoSC1 ((skoMC1 skoMC1 skoMC1 (-1+(skoMC1 (3))))+(skoSC1 ((skoMC1 skoMC1 skoMC1 (-2+(skoMC1 (-3))))+(skoSC1 ((skoMC1 skoMC1 skoMC1 (1/6+(skoMC1 (-1))))+(skoSC1 skoMC1 skoMC1 skoMC1 (1/4))))))))]/\[[(skoMC1 skoMC1 skoMC1 (-1))<(skoSC1 skoMC1 skoMC1 skoMC1)]/\[[(skoMC1 skoMC1 skoMC1 (-2))<=0]/\[[0<(skoMC1 skoMC1 skoMC1 (2))]/\[[(skoMC1 (-2+(skoMC1 (-5))))<(skoSC1 ((skoMC1 (-1+(skoMC1 (3))))+(skoSC1 ((skoMC1 (-2+(skoMC1 (-3))))+(skoSC1 ((skoMC1 (1/6+(skoMC1 (-1))))+(skoSC1 skoMC1 (1/4))))))))]/\[[(skoMC1 (-2+(skoMC1 (-5))))<(skoSC1 ((skoMC1 (-1+(skoMC1 (3))))+(skoSC1 ((skoMC1 (-2+(skoMC1 (-3))))+(skoSC1 ((skoMC1 skoMC1 (-1))+(skoSC1 skoMC1 (1/12))))))))]/\[[(skoSC1 ((skoMC1 (1+(skoMC1 (-3))))+(skoSC1 ((skoMC1 (2+(skoMC1 (3))))+(skoSC1 ((skoMC1 (-1/6+skoMC1))+(skoSC1 skoMC1 (-1/4))))))))<=(skoMC1 (2+(skoMC1 (5))))]/\[[(skoSC1 ((skoMC1 (1+(skoMC1 (-3))))+(skoSC1 ((skoMC1 (2+(skoMC1 (3))))+(skoSC1 ((skoMC1 skoMC1)+(skoSC1 skoMC1 (-1/12))))))))<=(skoMC1 (2+(skoMC1 (5))))]/\[[(skoSC1 skoMC1 (-1))<=skoMC1]/\[[(skoMC1 (-1))<(skoSC1 skoMC1)]/\[[0<=skoMC1]/\[[0<skoMC1]/\[[0<=skoSC1]/\[[2<=skoMC1]/\[[skoSC1<=5/4]/\[[(skoMC1 skoMC1 skoMC1 (-2))<(skoSC1 skoMC1 skoMC1 skoMC1 (2))]/\[[(skoSC1 skoMC1 skoMC1 skoMC1 (-2))<=(skoMC1 skoMC1 skoMC1 (2))]/\[(skoSC1 ((skoMC1 skoMC1 skoMC1 (-2+(skoMC1 (-12))))+(skoSC1 ((skoMC1 skoMC1 skoMC1 (1+(skoMC1 (-6))))+(skoSC1 ((skoMC1 skoMC1 skoMC1)+(skoSC1 ((skoMC1 skoMC1 skoMC1 (-1/12))+(skoSC1 skoMC1 skoMC1 skoMC1 (-1/12))))))))))<=(skoMC1 skoMC1 skoMC1 (2+(skoMC1 (6))))]]]]]]]]]]]]]]]]]]]]]]].

% In SMTLib2 format:
(declare-fun skoSC1 () Real) (declare-fun skoMC1 () Real) (assert (and (<= (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (+ 1. (* skoMC1 (- 3.)))))) (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (+ 2. (* skoMC1 3.))))) (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 skoMC1))) (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (/ (- 1.) 12.)))) (* skoSC1 (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (/ 1. 360.)))) (* skoSC1 (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (/ (- 1.) 20160.)))) (* skoSC1 (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (/ 1. 1814400.)))) (* skoSC1 (* skoSC1 (* skoMC1 (* skoMC1 (* skoMC1 (/ (- 1.) 239500800.))))))))))))))))))))))) (* skoMC1 (* skoMC1 (* skoMC1 (+ 2. (* skoMC1 5.)))))) (and (<= (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (+ 1. (* skoMC1 (- 3.)))))) (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (+ 2. (* skoMC1 3.))))) (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 skoMC1))) (* skoSC1 (* skoMC1 (* skoMC1 (* skoMC1 (/ (- 1.) 12.))))))))))) (* skoMC1 (* skoMC1 (* skoMC1 (+ 2. (* skoMC1 5.)))))) (and (<= (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (+ 1. (* skoMC1 (- 3.)))))) (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (+ 2. (* skoMC1 3.))))) (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (+ (/ (- 1.) 6.) skoMC1)))) (* skoSC1 (* skoMC1 (* skoMC1 (* skoMC1 (/ (- 1.) 4.))))))))))) (* skoMC1 (* skoMC1 (* skoMC1 (+ 2. (* skoMC1 5.)))))) (and (<= (* skoSC1 (* skoMC1 (* skoMC1 (* skoMC1 (- 1.))))) (* skoMC1 (* skoMC1 skoMC1))) (and (> (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (+ (- 1.) (* skoMC1 3.))))) (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (+ (- 2.) (* skoMC1 (- 3.)))))) (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (* skoMC1 (- 1.))))) (* skoSC1 (* skoMC1 (* skoMC1 (* skoMC1 (/ 1. 12.))))))))))) (* skoMC1 (* skoMC1 (* skoMC1 (+ (- 2.) (* skoMC1 (- 5.))))))) (and (> (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (+ (- 1.) (* skoMC1 3.))))) (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (+ (- 2.) (* skoMC1 (- 3.)))))) (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (+ (/ 1. 6.) (* skoMC1 (- 1.)))))) (* skoSC1 (* skoMC1 (* skoMC1 (* skoMC1 (/ 1. 4.))))))))))) (* skoMC1 (* skoMC1 (* skoMC1 (+ (- 2.) (* skoMC1 (- 5.))))))) (and (> (* skoSC1 (* skoMC1 (* skoMC1 skoMC1))) (* skoMC1 (* skoMC1 (* skoMC1 (- 1.))))) (and (<= (* skoMC1 (* skoMC1 (* skoMC1 (- 2.)))) 0.) (and (> (* skoMC1 (* skoMC1 (* skoMC1 2.))) 0.) (and (> (* skoSC1 (+ (* skoMC1 (+ (- 1.) (* skoMC1 3.))) (* skoSC1 (+ (* skoMC1 (+ (- 2.) (* skoMC1 (- 3.)))) (* skoSC1 (+ (* skoMC1 (+ (/ 1. 6.) (* skoMC1 (- 1.)))) (* skoSC1 (* skoMC1 (/ 1. 4.))))))))) (* skoMC1 (+ (- 2.) (* skoMC1 (- 5.))))) (and (> (* skoSC1 (+ (* skoMC1 (+ (- 1.) (* skoMC1 3.))) (* skoSC1 (+ (* skoMC1 (+ (- 2.) (* skoMC1 (- 3.)))) (* skoSC1 (+ (* skoMC1 (* skoMC1 (- 1.))) (* skoSC1 (* skoMC1 (/ 1. 12.))))))))) (* skoMC1 (+ (- 2.) (* skoMC1 (- 5.))))) (and (<= (* skoSC1 (+ (* skoMC1 (+ 1. (* skoMC1 (- 3.)))) (* skoSC1 (+ (* skoMC1 (+ 2. (* skoMC1 3.))) (* skoSC1 (+ (* skoMC1 (+ (/ (- 1.) 6.) skoMC1)) (* skoSC1 (* skoMC1 (/ (- 1.) 4.))))))))) (* skoMC1 (+ 2. (* skoMC1 5.)))) (and (<= (* skoSC1 (+ (* skoMC1 (+ 1. (* skoMC1 (- 3.)))) (* skoSC1 (+ (* skoMC1 (+ 2. (* skoMC1 3.))) (* skoSC1 (+ (* skoMC1 skoMC1) (* skoSC1 (* skoMC1 (/ (- 1.) 12.))))))))) (* skoMC1 (+ 2. (* skoMC1 5.)))) (and (<= (* skoSC1 (* skoMC1 (- 1.))) skoMC1) (and (> (* skoSC1 skoMC1) (* skoMC1 (- 1.))) (and (<= 0. skoMC1) (and (> skoMC1 0.) (and (<= 0. skoSC1) (and (<= 2. skoMC1) (and (<= skoSC1 (/ 5. 4.)) (and (> (* skoSC1 (* skoMC1 (* skoMC1 (* skoMC1 2.)))) (* skoMC1 (* skoMC1 (* skoMC1 (- 2.))))) (and (<= (* skoSC1 (* skoMC1 (* skoMC1 (* skoMC1 (- 2.))))) (* skoMC1 (* skoMC1 (* skoMC1 2.)))) (<= (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (+ (- 2.) (* skoMC1 (- 12.)))))) (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (+ 1. (* skoMC1 (- 6.)))))) (* skoSC1 (+ (* skoMC1 (* skoMC1 skoMC1)) (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (/ (- 1.) 12.)))) (* skoSC1 (* skoMC1 (* skoMC1 (* skoMC1 (/ (- 1.) 12.))))))))))))) (* skoMC1 (* skoMC1 (* skoMC1 (+ 2. (* skoMC1 6.)))))))))))))))))))))))))))))

% In GRF format:
(sequent " MetiTarski formula " (antecedent (<= (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (+ 1. (* skoMC1 (- 3.)))))) (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (+ 2. (* skoMC1 3.))))) (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 skoMC1))) (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (/ (- 1.) 12.)))) (* skoSC1 (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (/ 1. 360.)))) (* skoSC1 (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (/ (- 1.) 20160.)))) (* skoSC1 (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (/ 1. 1814400.)))) (* skoSC1 (* skoSC1 (* skoMC1 (* skoMC1 (* skoMC1 (/ (- 1.) 239500800.))))))))))))))))))))))) (* skoMC1 (* skoMC1 (* skoMC1 (+ 2. (* skoMC1 5.)))))) (<= (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (+ 1. (* skoMC1 (- 3.)))))) (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (+ 2. (* skoMC1 3.))))) (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 skoMC1))) (* skoSC1 (* skoMC1 (* skoMC1 (* skoMC1 (/ (- 1.) 12.))))))))))) (* skoMC1 (* skoMC1 (* skoMC1 (+ 2. (* skoMC1 5.)))))) (<= (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (+ 1. (* skoMC1 (- 3.)))))) (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (+ 2. (* skoMC1 3.))))) (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (+ (/ (- 1.) 6.) skoMC1)))) (* skoSC1 (* skoMC1 (* skoMC1 (* skoMC1 (/ (- 1.) 4.))))))))))) (* skoMC1 (* skoMC1 (* skoMC1 (+ 2. (* skoMC1 5.)))))) (<= (* skoSC1 (* skoMC1 (* skoMC1 (* skoMC1 (- 1.))))) (* skoMC1 (* skoMC1 skoMC1))) (> (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (+ (- 1.) (* skoMC1 3.))))) (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (+ (- 2.) (* skoMC1 (- 3.)))))) (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (* skoMC1 (- 1.))))) (* skoSC1 (* skoMC1 (* skoMC1 (* skoMC1 (/ 1. 12.))))))))))) (* skoMC1 (* skoMC1 (* skoMC1 (+ (- 2.) (* skoMC1 (- 5.))))))) (> (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (+ (- 1.) (* skoMC1 3.))))) (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (+ (- 2.) (* skoMC1 (- 3.)))))) (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (+ (/ 1. 6.) (* skoMC1 (- 1.)))))) (* skoSC1 (* skoMC1 (* skoMC1 (* skoMC1 (/ 1. 4.))))))))))) (* skoMC1 (* skoMC1 (* skoMC1 (+ (- 2.) (* skoMC1 (- 5.))))))) (> (* skoSC1 (* skoMC1 (* skoMC1 skoMC1))) (* skoMC1 (* skoMC1 (* skoMC1 (- 1.))))) (<= (* skoMC1 (* skoMC1 (* skoMC1 (- 2.)))) 0.) (> (* skoMC1 (* skoMC1 (* skoMC1 2.))) 0.) (> (* skoSC1 (+ (* skoMC1 (+ (- 1.) (* skoMC1 3.))) (* skoSC1 (+ (* skoMC1 (+ (- 2.) (* skoMC1 (- 3.)))) (* skoSC1 (+ (* skoMC1 (+ (/ 1. 6.) (* skoMC1 (- 1.)))) (* skoSC1 (* skoMC1 (/ 1. 4.))))))))) (* skoMC1 (+ (- 2.) (* skoMC1 (- 5.))))) (> (* skoSC1 (+ (* skoMC1 (+ (- 1.) (* skoMC1 3.))) (* skoSC1 (+ (* skoMC1 (+ (- 2.) (* skoMC1 (- 3.)))) (* skoSC1 (+ (* skoMC1 (* skoMC1 (- 1.))) (* skoSC1 (* skoMC1 (/ 1. 12.))))))))) (* skoMC1 (+ (- 2.) (* skoMC1 (- 5.))))) (<= (* skoSC1 (+ (* skoMC1 (+ 1. (* skoMC1 (- 3.)))) (* skoSC1 (+ (* skoMC1 (+ 2. (* skoMC1 3.))) (* skoSC1 (+ (* skoMC1 (+ (/ (- 1.) 6.) skoMC1)) (* skoSC1 (* skoMC1 (/ (- 1.) 4.))))))))) (* skoMC1 (+ 2. (* skoMC1 5.)))) (<= (* skoSC1 (+ (* skoMC1 (+ 1. (* skoMC1 (- 3.)))) (* skoSC1 (+ (* skoMC1 (+ 2. (* skoMC1 3.))) (* skoSC1 (+ (* skoMC1 skoMC1) (* skoSC1 (* skoMC1 (/ (- 1.) 12.))))))))) (* skoMC1 (+ 2. (* skoMC1 5.)))) (<= (* skoSC1 (* skoMC1 (- 1.))) skoMC1) (> (* skoSC1 skoMC1) (* skoMC1 (- 1.))) (<= 0. skoMC1) (> skoMC1 0.) (<= 0. skoSC1) (<= 2. skoMC1) (<= skoSC1 (/ 5. 4.)) (> (* skoSC1 (* skoMC1 (* skoMC1 (* skoMC1 2.)))) (* skoMC1 (* skoMC1 (* skoMC1 (- 2.))))) (<= (* skoSC1 (* skoMC1 (* skoMC1 (* skoMC1 (- 2.))))) (* skoMC1 (* skoMC1 (* skoMC1 2.))))) (succedent (> (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (+ (- 2.) (* skoMC1 (- 12.)))))) (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (+ 1. (* skoMC1 (- 6.)))))) (* skoSC1 (+ (* skoMC1 (* skoMC1 skoMC1)) (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (/ (- 1.) 12.)))) (* skoSC1 (* skoMC1 (* skoMC1 (* skoMC1 (/ (- 1.) 12.))))))))))))) (* skoMC1 (* skoMC1 (* skoMC1 (+ 2. (* skoMC1 6.))))))))
-----[end problem]-----

-----[begin problem]-----
% In Mathematica format:
Timing[Resolve[Exists[{skoSC1,skoMC1}, And[skoSC1*(skoMC1*skoMC1*skoMC1*(1+skoMC1*-3)+skoSC1*(skoMC1*skoMC1*skoMC1*(2+skoMC1*3)+skoSC1*(skoMC1*skoMC1*skoMC1*((-1/6)+skoMC1)+skoSC1*(skoMC1*skoMC1*skoMC1*(-1/4)+skoSC1*skoSC1*(skoMC1*skoMC1*skoMC1*(1/360)+skoSC1*skoSC1*(skoMC1*skoMC1*skoMC1*(-1/20160)+skoSC1*skoSC1*(skoMC1*skoMC1*skoMC1*(1/1814400)+skoSC1*skoSC1*skoMC1*skoMC1*skoMC1*(-1/239500800))))))))<=skoMC1*skoMC1*skoMC1*(2+skoMC1*5),skoSC1*(skoMC1*skoMC1*skoMC1*(1+skoMC1*-3)+skoSC1*(skoMC1*skoMC1*skoMC1*(2+skoMC1*3)+skoSC1*(skoMC1*skoMC1*skoMC1*skoMC1+skoSC1*skoMC1*skoMC1*skoMC1*(-1/12))))<=skoMC1*skoMC1*skoMC1*(2+skoMC1*5),skoSC1*(skoMC1*skoMC1*skoMC1*(1+skoMC1*-3)+skoSC1*(skoMC1*skoMC1*skoMC1*(2+skoMC1*3)+skoSC1*(skoMC1*skoMC1*skoMC1*((-1/6)+skoMC1)+skoSC1*skoMC1*skoMC1*skoMC1*(-1/4))))<=skoMC1*skoMC1*skoMC1*(2+skoMC1*5),skoSC1*skoMC1*skoMC1*skoMC1*-1<=skoMC1*skoMC1*skoMC1,skoSC1*(skoMC1*skoMC1*skoMC1*(-1+skoMC1*3)+skoSC1*(skoMC1*skoMC1*skoMC1*(-2+skoMC1*-3)+skoSC1*(skoMC1*skoMC1*skoMC1*skoMC1*-1+skoSC1*skoMC1*skoMC1*skoMC1*(1/12))))>skoMC1*skoMC1*skoMC1*(-2+skoMC1*-5),skoSC1*(skoMC1*skoMC1*skoMC1*(-1+skoMC1*3)+skoSC1*(skoMC1*skoMC1*skoMC1*(-2+skoMC1*-3)+skoSC1*(skoMC1*skoMC1*skoMC1*((1/6)+skoMC1*-1)+skoSC1*skoMC1*skoMC1*skoMC1*(1/4))))>skoMC1*skoMC1*skoMC1*(-2+skoMC1*-5),skoSC1*skoMC1*skoMC1*skoMC1>skoMC1*skoMC1*skoMC1*-1,skoMC1*skoMC1*skoMC1*-2<=0,skoMC1*skoMC1*skoMC1*2>0,skoSC1*(skoMC1*(-1+skoMC1*3)+skoSC1*(skoMC1*(-2+skoMC1*-3)+skoSC1*(skoMC1*((1/6)+skoMC1*-1)+skoSC1*skoMC1*(1/4))))>skoMC1*(-2+skoMC1*-5),skoSC1*(skoMC1*(-1+skoMC1*3)+skoSC1*(skoMC1*(-2+skoMC1*-3)+skoSC1*(skoMC1*skoMC1*-1+skoSC1*skoMC1*(1/12))))>skoMC1*(-2+skoMC1*-5),skoSC1*(skoMC1*(1+skoMC1*-3)+skoSC1*(skoMC1*(2+skoMC1*3)+skoSC1*(skoMC1*((-1/6)+skoMC1)+skoSC1*skoMC1*(-1/4))))<=skoMC1*(2+skoMC1*5),skoSC1*(skoMC1*(1+skoMC1*-3)+skoSC1*(skoMC1*(2+skoMC1*3)+skoSC1*(skoMC1*skoMC1+skoSC1*skoMC1*(-1/12))))<=skoMC1*(2+skoMC1*5),skoSC1*skoMC1*-1<=skoMC1,skoSC1*skoMC1>skoMC1*-1,0<=skoMC1,skoMC1>0,0<=skoSC1,2<=skoMC1,skoSC1<=(5/4),skoSC1*skoMC1*skoMC1*skoMC1*2>skoMC1*skoMC1*skoMC1*-2,skoSC1*skoMC1*skoMC1*skoMC1*-2<=skoMC1*skoMC1*skoMC1*2,skoSC1*(skoMC1*skoMC1*skoMC1*(-2+skoMC1*-12)+skoSC1*(skoMC1*skoMC1*skoMC1*(1+skoMC1*-6)+skoSC1*(skoMC1*skoMC1*skoMC1+skoSC1*(skoMC1*skoMC1*skoMC1*(-1/12)+skoSC1*skoMC1*skoMC1*skoMC1*(-1/12)))))<=skoMC1*skoMC1*skoMC1*(2+skoMC1*6)]], Reals]]

% In QepcadB format:
(E skoSC1) (E skoMC1) [[(skoSC1 ((skoMC1 skoMC1 skoMC1 (1+(skoMC1 (-3))))+(skoSC1 ((skoMC1 skoMC1 skoMC1 (2+(skoMC1 (3))))+(skoSC1 ((skoMC1 skoMC1 skoMC1 (-1/6+skoMC1))+(skoSC1 ((skoMC1 skoMC1 skoMC1 (-1/4))+(skoSC1 skoSC1 ((skoMC1 skoMC1 skoMC1 (1/360))+(skoSC1 skoSC1 ((skoMC1 skoMC1 skoMC1 (-1/20160))+(skoSC1 skoSC1 ((skoMC1 skoMC1 skoMC1 (1/1814400))+(skoSC1 skoSC1 skoMC1 skoMC1 skoMC1 (-1/239500800))))))))))))))))<=(skoMC1 skoMC1 skoMC1 (2+(skoMC1 (5))))]/\[[(skoSC1 ((skoMC1 skoMC1 skoMC1 (1+(skoMC1 (-3))))+(skoSC1 ((skoMC1 skoMC1 skoMC1 (2+(skoMC1 (3))))+(skoSC1 ((skoMC1 skoMC1 skoMC1 skoMC1)+(skoSC1 skoMC1 skoMC1 skoMC1 (-1/12))))))))<=(skoMC1 skoMC1 skoMC1 (2+(skoMC1 (5))))]/\[[(skoSC1 ((skoMC1 skoMC1 skoMC1 (1+(skoMC1 (-3))))+(skoSC1 ((skoMC1 skoMC1 skoMC1 (2+(skoMC1 (3))))+(skoSC1 ((skoMC1 skoMC1 skoMC1 (-1/6+skoMC1))+(skoSC1 skoMC1 skoMC1 skoMC1 (-1/4))))))))<=(skoMC1 skoMC1 skoMC1 (2+(skoMC1 (5))))]/\[[(skoSC1 skoMC1 skoMC1 skoMC1 (-1))<=(skoMC1 skoMC1 skoMC1)]/\[[(skoMC1 skoMC1 skoMC1 (-2+(skoMC1 (-5))))<(skoSC1 ((skoMC1 skoMC1 skoMC1 (-1+(skoMC1 (3))))+(skoSC1 ((skoMC1 skoMC1 skoMC1 (-2+(skoMC1 (-3))))+(skoSC1 ((skoMC1 skoMC1 skoMC1 skoMC1 (-1))+(skoSC1 skoMC1 skoMC1 skoMC1 (1/12))))))))]/\[[(skoMC1 skoMC1 skoMC1 (-2+(skoMC1 (-5))))<(skoSC1 ((skoMC1 skoMC1 skoMC1 (-1+(skoMC1 (3))))+(skoSC1 ((skoMC1 skoMC1 skoMC1 (-2+(skoMC1 (-3))))+(skoSC1 ((skoMC1 skoMC1 skoMC1 (1/6+(skoMC1 (-1))))+(skoSC1 skoMC1 skoMC1 skoMC1 (1/4))))))))]/\[[(skoMC1 skoMC1 skoMC1 (-1))<(skoSC1 skoMC1 skoMC1 skoMC1)]/\[[(skoMC1 skoMC1 skoMC1 (-2))<=0]/\[[0<(skoMC1 skoMC1 skoMC1 (2))]/\[[(skoMC1 (-2+(skoMC1 (-5))))<(skoSC1 ((skoMC1 (-1+(skoMC1 (3))))+(skoSC1 ((skoMC1 (-2+(skoMC1 (-3))))+(skoSC1 ((skoMC1 (1/6+(skoMC1 (-1))))+(skoSC1 skoMC1 (1/4))))))))]/\[[(skoMC1 (-2+(skoMC1 (-5))))<(skoSC1 ((skoMC1 (-1+(skoMC1 (3))))+(skoSC1 ((skoMC1 (-2+(skoMC1 (-3))))+(skoSC1 ((skoMC1 skoMC1 (-1))+(skoSC1 skoMC1 (1/12))))))))]/\[[(skoSC1 ((skoMC1 (1+(skoMC1 (-3))))+(skoSC1 ((skoMC1 (2+(skoMC1 (3))))+(skoSC1 ((skoMC1 (-1/6+skoMC1))+(skoSC1 skoMC1 (-1/4))))))))<=(skoMC1 (2+(skoMC1 (5))))]/\[[(skoSC1 ((skoMC1 (1+(skoMC1 (-3))))+(skoSC1 ((skoMC1 (2+(skoMC1 (3))))+(skoSC1 ((skoMC1 skoMC1)+(skoSC1 skoMC1 (-1/12))))))))<=(skoMC1 (2+(skoMC1 (5))))]/\[[(skoSC1 skoMC1 (-1))<=skoMC1]/\[[(skoMC1 (-1))<(skoSC1 skoMC1)]/\[[0<=skoMC1]/\[[0<skoMC1]/\[[0<=skoSC1]/\[[2<=skoMC1]/\[[skoSC1<=5/4]/\[[(skoMC1 skoMC1 skoMC1 (-2))<(skoSC1 skoMC1 skoMC1 skoMC1 (2))]/\[[(skoSC1 skoMC1 skoMC1 skoMC1 (-2))<=(skoMC1 skoMC1 skoMC1 (2))]/\[(skoSC1 ((skoMC1 skoMC1 skoMC1 (-2+(skoMC1 (-12))))+(skoSC1 ((skoMC1 skoMC1 skoMC1 (1+(skoMC1 (-6))))+(skoSC1 ((skoMC1 skoMC1 skoMC1)+(skoSC1 ((skoMC1 skoMC1 skoMC1 (-1/12))+(skoSC1 skoMC1 skoMC1 skoMC1 (-1/12))))))))))<=(skoMC1 skoMC1 skoMC1 (2+(skoMC1 (6))))]]]]]]]]]]]]]]]]]]]]]]].

% In SMTLib2 format:
(declare-fun skoSC1 () Real) (declare-fun skoMC1 () Real) (assert (and (<= (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (+ 1. (* skoMC1 (- 3.)))))) (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (+ 2. (* skoMC1 3.))))) (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (+ (/ (- 1.) 6.) skoMC1)))) (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (/ (- 1.) 4.)))) (* skoSC1 (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (/ 1. 360.)))) (* skoSC1 (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (/ (- 1.) 20160.)))) (* skoSC1 (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (/ 1. 1814400.)))) (* skoSC1 (* skoSC1 (* skoMC1 (* skoMC1 (* skoMC1 (/ (- 1.) 239500800.))))))))))))))))))))))) (* skoMC1 (* skoMC1 (* skoMC1 (+ 2. (* skoMC1 5.)))))) (and (<= (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (+ 1. (* skoMC1 (- 3.)))))) (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (+ 2. (* skoMC1 3.))))) (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 skoMC1))) (* skoSC1 (* skoMC1 (* skoMC1 (* skoMC1 (/ (- 1.) 12.))))))))))) (* skoMC1 (* skoMC1 (* skoMC1 (+ 2. (* skoMC1 5.)))))) (and (<= (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (+ 1. (* skoMC1 (- 3.)))))) (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (+ 2. (* skoMC1 3.))))) (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (+ (/ (- 1.) 6.) skoMC1)))) (* skoSC1 (* skoMC1 (* skoMC1 (* skoMC1 (/ (- 1.) 4.))))))))))) (* skoMC1 (* skoMC1 (* skoMC1 (+ 2. (* skoMC1 5.)))))) (and (<= (* skoSC1 (* skoMC1 (* skoMC1 (* skoMC1 (- 1.))))) (* skoMC1 (* skoMC1 skoMC1))) (and (> (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (+ (- 1.) (* skoMC1 3.))))) (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (+ (- 2.) (* skoMC1 (- 3.)))))) (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (* skoMC1 (- 1.))))) (* skoSC1 (* skoMC1 (* skoMC1 (* skoMC1 (/ 1. 12.))))))))))) (* skoMC1 (* skoMC1 (* skoMC1 (+ (- 2.) (* skoMC1 (- 5.))))))) (and (> (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (+ (- 1.) (* skoMC1 3.))))) (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (+ (- 2.) (* skoMC1 (- 3.)))))) (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (+ (/ 1. 6.) (* skoMC1 (- 1.)))))) (* skoSC1 (* skoMC1 (* skoMC1 (* skoMC1 (/ 1. 4.))))))))))) (* skoMC1 (* skoMC1 (* skoMC1 (+ (- 2.) (* skoMC1 (- 5.))))))) (and (> (* skoSC1 (* skoMC1 (* skoMC1 skoMC1))) (* skoMC1 (* skoMC1 (* skoMC1 (- 1.))))) (and (<= (* skoMC1 (* skoMC1 (* skoMC1 (- 2.)))) 0.) (and (> (* skoMC1 (* skoMC1 (* skoMC1 2.))) 0.) (and (> (* skoSC1 (+ (* skoMC1 (+ (- 1.) (* skoMC1 3.))) (* skoSC1 (+ (* skoMC1 (+ (- 2.) (* skoMC1 (- 3.)))) (* skoSC1 (+ (* skoMC1 (+ (/ 1. 6.) (* skoMC1 (- 1.)))) (* skoSC1 (* skoMC1 (/ 1. 4.))))))))) (* skoMC1 (+ (- 2.) (* skoMC1 (- 5.))))) (and (> (* skoSC1 (+ (* skoMC1 (+ (- 1.) (* skoMC1 3.))) (* skoSC1 (+ (* skoMC1 (+ (- 2.) (* skoMC1 (- 3.)))) (* skoSC1 (+ (* skoMC1 (* skoMC1 (- 1.))) (* skoSC1 (* skoMC1 (/ 1. 12.))))))))) (* skoMC1 (+ (- 2.) (* skoMC1 (- 5.))))) (and (<= (* skoSC1 (+ (* skoMC1 (+ 1. (* skoMC1 (- 3.)))) (* skoSC1 (+ (* skoMC1 (+ 2. (* skoMC1 3.))) (* skoSC1 (+ (* skoMC1 (+ (/ (- 1.) 6.) skoMC1)) (* skoSC1 (* skoMC1 (/ (- 1.) 4.))))))))) (* skoMC1 (+ 2. (* skoMC1 5.)))) (and (<= (* skoSC1 (+ (* skoMC1 (+ 1. (* skoMC1 (- 3.)))) (* skoSC1 (+ (* skoMC1 (+ 2. (* skoMC1 3.))) (* skoSC1 (+ (* skoMC1 skoMC1) (* skoSC1 (* skoMC1 (/ (- 1.) 12.))))))))) (* skoMC1 (+ 2. (* skoMC1 5.)))) (and (<= (* skoSC1 (* skoMC1 (- 1.))) skoMC1) (and (> (* skoSC1 skoMC1) (* skoMC1 (- 1.))) (and (<= 0. skoMC1) (and (> skoMC1 0.) (and (<= 0. skoSC1) (and (<= 2. skoMC1) (and (<= skoSC1 (/ 5. 4.)) (and (> (* skoSC1 (* skoMC1 (* skoMC1 (* skoMC1 2.)))) (* skoMC1 (* skoMC1 (* skoMC1 (- 2.))))) (and (<= (* skoSC1 (* skoMC1 (* skoMC1 (* skoMC1 (- 2.))))) (* skoMC1 (* skoMC1 (* skoMC1 2.)))) (<= (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (+ (- 2.) (* skoMC1 (- 12.)))))) (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (+ 1. (* skoMC1 (- 6.)))))) (* skoSC1 (+ (* skoMC1 (* skoMC1 skoMC1)) (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (/ (- 1.) 12.)))) (* skoSC1 (* skoMC1 (* skoMC1 (* skoMC1 (/ (- 1.) 12.))))))))))))) (* skoMC1 (* skoMC1 (* skoMC1 (+ 2. (* skoMC1 6.)))))))))))))))))))))))))))))

% In GRF format:
(sequent " MetiTarski formula " (antecedent (<= (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (+ 1. (* skoMC1 (- 3.)))))) (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (+ 2. (* skoMC1 3.))))) (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (+ (/ (- 1.) 6.) skoMC1)))) (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (/ (- 1.) 4.)))) (* skoSC1 (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (/ 1. 360.)))) (* skoSC1 (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (/ (- 1.) 20160.)))) (* skoSC1 (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (/ 1. 1814400.)))) (* skoSC1 (* skoSC1 (* skoMC1 (* skoMC1 (* skoMC1 (/ (- 1.) 239500800.))))))))))))))))))))))) (* skoMC1 (* skoMC1 (* skoMC1 (+ 2. (* skoMC1 5.)))))) (<= (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (+ 1. (* skoMC1 (- 3.)))))) (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (+ 2. (* skoMC1 3.))))) (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 skoMC1))) (* skoSC1 (* skoMC1 (* skoMC1 (* skoMC1 (/ (- 1.) 12.))))))))))) (* skoMC1 (* skoMC1 (* skoMC1 (+ 2. (* skoMC1 5.)))))) (<= (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (+ 1. (* skoMC1 (- 3.)))))) (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (+ 2. (* skoMC1 3.))))) (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (+ (/ (- 1.) 6.) skoMC1)))) (* skoSC1 (* skoMC1 (* skoMC1 (* skoMC1 (/ (- 1.) 4.))))))))))) (* skoMC1 (* skoMC1 (* skoMC1 (+ 2. (* skoMC1 5.)))))) (<= (* skoSC1 (* skoMC1 (* skoMC1 (* skoMC1 (- 1.))))) (* skoMC1 (* skoMC1 skoMC1))) (> (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (+ (- 1.) (* skoMC1 3.))))) (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (+ (- 2.) (* skoMC1 (- 3.)))))) (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (* skoMC1 (- 1.))))) (* skoSC1 (* skoMC1 (* skoMC1 (* skoMC1 (/ 1. 12.))))))))))) (* skoMC1 (* skoMC1 (* skoMC1 (+ (- 2.) (* skoMC1 (- 5.))))))) (> (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (+ (- 1.) (* skoMC1 3.))))) (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (+ (- 2.) (* skoMC1 (- 3.)))))) (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (+ (/ 1. 6.) (* skoMC1 (- 1.)))))) (* skoSC1 (* skoMC1 (* skoMC1 (* skoMC1 (/ 1. 4.))))))))))) (* skoMC1 (* skoMC1 (* skoMC1 (+ (- 2.) (* skoMC1 (- 5.))))))) (> (* skoSC1 (* skoMC1 (* skoMC1 skoMC1))) (* skoMC1 (* skoMC1 (* skoMC1 (- 1.))))) (<= (* skoMC1 (* skoMC1 (* skoMC1 (- 2.)))) 0.) (> (* skoMC1 (* skoMC1 (* skoMC1 2.))) 0.) (> (* skoSC1 (+ (* skoMC1 (+ (- 1.) (* skoMC1 3.))) (* skoSC1 (+ (* skoMC1 (+ (- 2.) (* skoMC1 (- 3.)))) (* skoSC1 (+ (* skoMC1 (+ (/ 1. 6.) (* skoMC1 (- 1.)))) (* skoSC1 (* skoMC1 (/ 1. 4.))))))))) (* skoMC1 (+ (- 2.) (* skoMC1 (- 5.))))) (> (* skoSC1 (+ (* skoMC1 (+ (- 1.) (* skoMC1 3.))) (* skoSC1 (+ (* skoMC1 (+ (- 2.) (* skoMC1 (- 3.)))) (* skoSC1 (+ (* skoMC1 (* skoMC1 (- 1.))) (* skoSC1 (* skoMC1 (/ 1. 12.))))))))) (* skoMC1 (+ (- 2.) (* skoMC1 (- 5.))))) (<= (* skoSC1 (+ (* skoMC1 (+ 1. (* skoMC1 (- 3.)))) (* skoSC1 (+ (* skoMC1 (+ 2. (* skoMC1 3.))) (* skoSC1 (+ (* skoMC1 (+ (/ (- 1.) 6.) skoMC1)) (* skoSC1 (* skoMC1 (/ (- 1.) 4.))))))))) (* skoMC1 (+ 2. (* skoMC1 5.)))) (<= (* skoSC1 (+ (* skoMC1 (+ 1. (* skoMC1 (- 3.)))) (* skoSC1 (+ (* skoMC1 (+ 2. (* skoMC1 3.))) (* skoSC1 (+ (* skoMC1 skoMC1) (* skoSC1 (* skoMC1 (/ (- 1.) 12.))))))))) (* skoMC1 (+ 2. (* skoMC1 5.)))) (<= (* skoSC1 (* skoMC1 (- 1.))) skoMC1) (> (* skoSC1 skoMC1) (* skoMC1 (- 1.))) (<= 0. skoMC1) (> skoMC1 0.) (<= 0. skoSC1) (<= 2. skoMC1) (<= skoSC1 (/ 5. 4.)) (> (* skoSC1 (* skoMC1 (* skoMC1 (* skoMC1 2.)))) (* skoMC1 (* skoMC1 (* skoMC1 (- 2.))))) (<= (* skoSC1 (* skoMC1 (* skoMC1 (* skoMC1 (- 2.))))) (* skoMC1 (* skoMC1 (* skoMC1 2.))))) (succedent (> (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (+ (- 2.) (* skoMC1 (- 12.)))))) (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (+ 1. (* skoMC1 (- 6.)))))) (* skoSC1 (+ (* skoMC1 (* skoMC1 skoMC1)) (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (/ (- 1.) 12.)))) (* skoSC1 (* skoMC1 (* skoMC1 (* skoMC1 (/ (- 1.) 12.))))))))))))) (* skoMC1 (* skoMC1 (* skoMC1 (+ 2. (* skoMC1 6.))))))))
-----[end problem]-----

-----[begin problem]-----
% In Mathematica format:
Timing[Resolve[Exists[{skoSC1,skoMC1}, And[skoMC1*skoMC1*skoMC1*-1<=0,skoSC1*(skoMC1*skoMC1*skoMC1*(-2+skoMC1*-12)+skoSC1*(skoMC1*skoMC1*skoMC1*(1+skoMC1*-6)+skoSC1*(skoMC1*skoMC1*skoMC1+skoSC1*(skoMC1*skoMC1*skoMC1*(-1/12)+skoSC1*skoMC1*skoMC1*skoMC1*(-1/12)))))<=skoMC1*skoMC1*skoMC1*(2+skoMC1*6),skoSC1*skoMC1*skoMC1*skoMC1*-2<=skoMC1*skoMC1*skoMC1*2,skoSC1*skoMC1*skoMC1*skoMC1*2>skoMC1*skoMC1*skoMC1*-2,skoSC1<=(5/4),2<=skoMC1,0<=skoSC1,skoMC1>0,0<=skoMC1,skoSC1*skoMC1>skoMC1*-1,skoSC1*skoMC1*-1<=skoMC1,skoSC1*(skoMC1*(1+skoMC1*-3)+skoSC1*(skoMC1*(2+skoMC1*3)+skoSC1*(skoMC1*skoMC1+skoSC1*skoMC1*(-1/12))))<=skoMC1*(2+skoMC1*5),skoSC1*(skoMC1*(1+skoMC1*-3)+skoSC1*(skoMC1*(2+skoMC1*3)+skoSC1*(skoMC1*((-1/6)+skoMC1)+skoSC1*skoMC1*(-1/4))))<=skoMC1*(2+skoMC1*5),skoSC1*(skoMC1*(-1+skoMC1*3)+skoSC1*(skoMC1*(-2+skoMC1*-3)+skoSC1*(skoMC1*skoMC1*-1+skoSC1*skoMC1*(1/12))))>skoMC1*(-2+skoMC1*-5),skoSC1*(skoMC1*(-1+skoMC1*3)+skoSC1*(skoMC1*(-2+skoMC1*-3)+skoSC1*(skoMC1*((1/6)+skoMC1*-1)+skoSC1*skoMC1*(1/4))))>skoMC1*(-2+skoMC1*-5),skoMC1*skoMC1*skoMC1*2>0,skoMC1*skoMC1*skoMC1*-2<=0,skoSC1*skoMC1*skoMC1*skoMC1>skoMC1*skoMC1*skoMC1*-1,skoSC1*(skoMC1*skoMC1*skoMC1*(-1+skoMC1*3)+skoSC1*(skoMC1*skoMC1*skoMC1*(-2+skoMC1*-3)+skoSC1*(skoMC1*skoMC1*skoMC1*((1/6)+skoMC1*-1)+skoSC1*skoMC1*skoMC1*skoMC1*(1/4))))>skoMC1*skoMC1*skoMC1*(-2+skoMC1*-5),skoSC1*(skoMC1*skoMC1*skoMC1*(-1+skoMC1*3)+skoSC1*(skoMC1*skoMC1*skoMC1*(-2+skoMC1*-3)+skoSC1*(skoMC1*skoMC1*skoMC1*skoMC1*-1+skoSC1*skoMC1*skoMC1*skoMC1*(1/12))))>skoMC1*skoMC1*skoMC1*(-2+skoMC1*-5),skoSC1*skoMC1*skoMC1*skoMC1*-1<=skoMC1*skoMC1*skoMC1,skoSC1*(skoMC1*skoMC1*skoMC1*(1+skoMC1*-3)+skoSC1*(skoMC1*skoMC1*skoMC1*(2+skoMC1*3)+skoSC1*(skoMC1*skoMC1*skoMC1*((-1/6)+skoMC1)+skoSC1*skoMC1*skoMC1*skoMC1*(-1/4))))<=skoMC1*skoMC1*skoMC1*(2+skoMC1*5),skoSC1*(skoMC1*skoMC1*skoMC1*(1+skoMC1*-3)+skoSC1*(skoMC1*skoMC1*skoMC1*(2+skoMC1*3)+skoSC1*(skoMC1*skoMC1*skoMC1*skoMC1+skoSC1*skoMC1*skoMC1*skoMC1*(-1/12))))<=skoMC1*skoMC1*skoMC1*(2+skoMC1*5)]], Reals]]

% In QepcadB format:
(E skoSC1) (E skoMC1) [[(skoMC1 skoMC1 skoMC1 (-1))<=0]/\[[(skoSC1 ((skoMC1 skoMC1 skoMC1 (-2+(skoMC1 (-12))))+(skoSC1 ((skoMC1 skoMC1 skoMC1 (1+(skoMC1 (-6))))+(skoSC1 ((skoMC1 skoMC1 skoMC1)+(skoSC1 ((skoMC1 skoMC1 skoMC1 (-1/12))+(skoSC1 skoMC1 skoMC1 skoMC1 (-1/12))))))))))<=(skoMC1 skoMC1 skoMC1 (2+(skoMC1 (6))))]/\[[(skoSC1 skoMC1 skoMC1 skoMC1 (-2))<=(skoMC1 skoMC1 skoMC1 (2))]/\[[(skoMC1 skoMC1 skoMC1 (-2))<(skoSC1 skoMC1 skoMC1 skoMC1 (2))]/\[[skoSC1<=5/4]/\[[2<=skoMC1]/\[[0<=skoSC1]/\[[0<skoMC1]/\[[0<=skoMC1]/\[[(skoMC1 (-1))<(skoSC1 skoMC1)]/\[[(skoSC1 skoMC1 (-1))<=skoMC1]/\[[(skoSC1 ((skoMC1 (1+(skoMC1 (-3))))+(skoSC1 ((skoMC1 (2+(skoMC1 (3))))+(skoSC1 ((skoMC1 skoMC1)+(skoSC1 skoMC1 (-1/12))))))))<=(skoMC1 (2+(skoMC1 (5))))]/\[[(skoSC1 ((skoMC1 (1+(skoMC1 (-3))))+(skoSC1 ((skoMC1 (2+(skoMC1 (3))))+(skoSC1 ((skoMC1 (-1/6+skoMC1))+(skoSC1 skoMC1 (-1/4))))))))<=(skoMC1 (2+(skoMC1 (5))))]/\[[(skoMC1 (-2+(skoMC1 (-5))))<(skoSC1 ((skoMC1 (-1+(skoMC1 (3))))+(skoSC1 ((skoMC1 (-2+(skoMC1 (-3))))+(skoSC1 ((skoMC1 skoMC1 (-1))+(skoSC1 skoMC1 (1/12))))))))]/\[[(skoMC1 (-2+(skoMC1 (-5))))<(skoSC1 ((skoMC1 (-1+(skoMC1 (3))))+(skoSC1 ((skoMC1 (-2+(skoMC1 (-3))))+(skoSC1 ((skoMC1 (1/6+(skoMC1 (-1))))+(skoSC1 skoMC1 (1/4))))))))]/\[[0<(skoMC1 skoMC1 skoMC1 (2))]/\[[(skoMC1 skoMC1 skoMC1 (-2))<=0]/\[[(skoMC1 skoMC1 skoMC1 (-1))<(skoSC1 skoMC1 skoMC1 skoMC1)]/\[[(skoMC1 skoMC1 skoMC1 (-2+(skoMC1 (-5))))<(skoSC1 ((skoMC1 skoMC1 skoMC1 (-1+(skoMC1 (3))))+(skoSC1 ((skoMC1 skoMC1 skoMC1 (-2+(skoMC1 (-3))))+(skoSC1 ((skoMC1 skoMC1 skoMC1 (1/6+(skoMC1 (-1))))+(skoSC1 skoMC1 skoMC1 skoMC1 (1/4))))))))]/\[[(skoMC1 skoMC1 skoMC1 (-2+(skoMC1 (-5))))<(skoSC1 ((skoMC1 skoMC1 skoMC1 (-1+(skoMC1 (3))))+(skoSC1 ((skoMC1 skoMC1 skoMC1 (-2+(skoMC1 (-3))))+(skoSC1 ((skoMC1 skoMC1 skoMC1 skoMC1 (-1))+(skoSC1 skoMC1 skoMC1 skoMC1 (1/12))))))))]/\[[(skoSC1 skoMC1 skoMC1 skoMC1 (-1))<=(skoMC1 skoMC1 skoMC1)]/\[[(skoSC1 ((skoMC1 skoMC1 skoMC1 (1+(skoMC1 (-3))))+(skoSC1 ((skoMC1 skoMC1 skoMC1 (2+(skoMC1 (3))))+(skoSC1 ((skoMC1 skoMC1 skoMC1 (-1/6+skoMC1))+(skoSC1 skoMC1 skoMC1 skoMC1 (-1/4))))))))<=(skoMC1 skoMC1 skoMC1 (2+(skoMC1 (5))))]/\[(skoSC1 ((skoMC1 skoMC1 skoMC1 (1+(skoMC1 (-3))))+(skoSC1 ((skoMC1 skoMC1 skoMC1 (2+(skoMC1 (3))))+(skoSC1 ((skoMC1 skoMC1 skoMC1 skoMC1)+(skoSC1 skoMC1 skoMC1 skoMC1 (-1/12))))))))<=(skoMC1 skoMC1 skoMC1 (2+(skoMC1 (5))))]]]]]]]]]]]]]]]]]]]]]]].

% In SMTLib2 format:
(declare-fun skoSC1 () Real) (declare-fun skoMC1 () Real) (assert (and (<= (* skoMC1 (* skoMC1 (* skoMC1 (- 1.)))) 0.) (and (<= (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (+ (- 2.) (* skoMC1 (- 12.)))))) (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (+ 1. (* skoMC1 (- 6.)))))) (* skoSC1 (+ (* skoMC1 (* skoMC1 skoMC1)) (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (/ (- 1.) 12.)))) (* skoSC1 (* skoMC1 (* skoMC1 (* skoMC1 (/ (- 1.) 12.))))))))))))) (* skoMC1 (* skoMC1 (* skoMC1 (+ 2. (* skoMC1 6.)))))) (and (<= (* skoSC1 (* skoMC1 (* skoMC1 (* skoMC1 (- 2.))))) (* skoMC1 (* skoMC1 (* skoMC1 2.)))) (and (> (* skoSC1 (* skoMC1 (* skoMC1 (* skoMC1 2.)))) (* skoMC1 (* skoMC1 (* skoMC1 (- 2.))))) (and (<= skoSC1 (/ 5. 4.)) (and (<= 2. skoMC1) (and (<= 0. skoSC1) (and (> skoMC1 0.) (and (<= 0. skoMC1) (and (> (* skoSC1 skoMC1) (* skoMC1 (- 1.))) (and (<= (* skoSC1 (* skoMC1 (- 1.))) skoMC1) (and (<= (* skoSC1 (+ (* skoMC1 (+ 1. (* skoMC1 (- 3.)))) (* skoSC1 (+ (* skoMC1 (+ 2. (* skoMC1 3.))) (* skoSC1 (+ (* skoMC1 skoMC1) (* skoSC1 (* skoMC1 (/ (- 1.) 12.))))))))) (* skoMC1 (+ 2. (* skoMC1 5.)))) (and (<= (* skoSC1 (+ (* skoMC1 (+ 1. (* skoMC1 (- 3.)))) (* skoSC1 (+ (* skoMC1 (+ 2. (* skoMC1 3.))) (* skoSC1 (+ (* skoMC1 (+ (/ (- 1.) 6.) skoMC1)) (* skoSC1 (* skoMC1 (/ (- 1.) 4.))))))))) (* skoMC1 (+ 2. (* skoMC1 5.)))) (and (> (* skoSC1 (+ (* skoMC1 (+ (- 1.) (* skoMC1 3.))) (* skoSC1 (+ (* skoMC1 (+ (- 2.) (* skoMC1 (- 3.)))) (* skoSC1 (+ (* skoMC1 (* skoMC1 (- 1.))) (* skoSC1 (* skoMC1 (/ 1. 12.))))))))) (* skoMC1 (+ (- 2.) (* skoMC1 (- 5.))))) (and (> (* skoSC1 (+ (* skoMC1 (+ (- 1.) (* skoMC1 3.))) (* skoSC1 (+ (* skoMC1 (+ (- 2.) (* skoMC1 (- 3.)))) (* skoSC1 (+ (* skoMC1 (+ (/ 1. 6.) (* skoMC1 (- 1.)))) (* skoSC1 (* skoMC1 (/ 1. 4.))))))))) (* skoMC1 (+ (- 2.) (* skoMC1 (- 5.))))) (and (> (* skoMC1 (* skoMC1 (* skoMC1 2.))) 0.) (and (<= (* skoMC1 (* skoMC1 (* skoMC1 (- 2.)))) 0.) (and (> (* skoSC1 (* skoMC1 (* skoMC1 skoMC1))) (* skoMC1 (* skoMC1 (* skoMC1 (- 1.))))) (and (> (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (+ (- 1.) (* skoMC1 3.))))) (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (+ (- 2.) (* skoMC1 (- 3.)))))) (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (+ (/ 1. 6.) (* skoMC1 (- 1.)))))) (* skoSC1 (* skoMC1 (* skoMC1 (* skoMC1 (/ 1. 4.))))))))))) (* skoMC1 (* skoMC1 (* skoMC1 (+ (- 2.) (* skoMC1 (- 5.))))))) (and (> (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (+ (- 1.) (* skoMC1 3.))))) (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (+ (- 2.) (* skoMC1 (- 3.)))))) (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (* skoMC1 (- 1.))))) (* skoSC1 (* skoMC1 (* skoMC1 (* skoMC1 (/ 1. 12.))))))))))) (* skoMC1 (* skoMC1 (* skoMC1 (+ (- 2.) (* skoMC1 (- 5.))))))) (and (<= (* skoSC1 (* skoMC1 (* skoMC1 (* skoMC1 (- 1.))))) (* skoMC1 (* skoMC1 skoMC1))) (and (<= (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (+ 1. (* skoMC1 (- 3.)))))) (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (+ 2. (* skoMC1 3.))))) (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (+ (/ (- 1.) 6.) skoMC1)))) (* skoSC1 (* skoMC1 (* skoMC1 (* skoMC1 (/ (- 1.) 4.))))))))))) (* skoMC1 (* skoMC1 (* skoMC1 (+ 2. (* skoMC1 5.)))))) (<= (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (+ 1. (* skoMC1 (- 3.)))))) (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (+ 2. (* skoMC1 3.))))) (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 skoMC1))) (* skoSC1 (* skoMC1 (* skoMC1 (* skoMC1 (/ (- 1.) 12.))))))))))) (* skoMC1 (* skoMC1 (* skoMC1 (+ 2. (* skoMC1 5.)))))))))))))))))))))))))))))

% In GRF format:
(sequent " MetiTarski formula " (antecedent (<= (* skoMC1 (* skoMC1 (* skoMC1 (- 1.)))) 0.) (<= (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (+ (- 2.) (* skoMC1 (- 12.)))))) (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (+ 1. (* skoMC1 (- 6.)))))) (* skoSC1 (+ (* skoMC1 (* skoMC1 skoMC1)) (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (/ (- 1.) 12.)))) (* skoSC1 (* skoMC1 (* skoMC1 (* skoMC1 (/ (- 1.) 12.))))))))))))) (* skoMC1 (* skoMC1 (* skoMC1 (+ 2. (* skoMC1 6.)))))) (<= (* skoSC1 (* skoMC1 (* skoMC1 (* skoMC1 (- 2.))))) (* skoMC1 (* skoMC1 (* skoMC1 2.)))) (> (* skoSC1 (* skoMC1 (* skoMC1 (* skoMC1 2.)))) (* skoMC1 (* skoMC1 (* skoMC1 (- 2.))))) (<= skoSC1 (/ 5. 4.)) (<= 2. skoMC1) (<= 0. skoSC1) (> skoMC1 0.) (<= 0. skoMC1) (> (* skoSC1 skoMC1) (* skoMC1 (- 1.))) (<= (* skoSC1 (* skoMC1 (- 1.))) skoMC1) (<= (* skoSC1 (+ (* skoMC1 (+ 1. (* skoMC1 (- 3.)))) (* skoSC1 (+ (* skoMC1 (+ 2. (* skoMC1 3.))) (* skoSC1 (+ (* skoMC1 skoMC1) (* skoSC1 (* skoMC1 (/ (- 1.) 12.))))))))) (* skoMC1 (+ 2. (* skoMC1 5.)))) (<= (* skoSC1 (+ (* skoMC1 (+ 1. (* skoMC1 (- 3.)))) (* skoSC1 (+ (* skoMC1 (+ 2. (* skoMC1 3.))) (* skoSC1 (+ (* skoMC1 (+ (/ (- 1.) 6.) skoMC1)) (* skoSC1 (* skoMC1 (/ (- 1.) 4.))))))))) (* skoMC1 (+ 2. (* skoMC1 5.)))) (> (* skoSC1 (+ (* skoMC1 (+ (- 1.) (* skoMC1 3.))) (* skoSC1 (+ (* skoMC1 (+ (- 2.) (* skoMC1 (- 3.)))) (* skoSC1 (+ (* skoMC1 (* skoMC1 (- 1.))) (* skoSC1 (* skoMC1 (/ 1. 12.))))))))) (* skoMC1 (+ (- 2.) (* skoMC1 (- 5.))))) (> (* skoSC1 (+ (* skoMC1 (+ (- 1.) (* skoMC1 3.))) (* skoSC1 (+ (* skoMC1 (+ (- 2.) (* skoMC1 (- 3.)))) (* skoSC1 (+ (* skoMC1 (+ (/ 1. 6.) (* skoMC1 (- 1.)))) (* skoSC1 (* skoMC1 (/ 1. 4.))))))))) (* skoMC1 (+ (- 2.) (* skoMC1 (- 5.))))) (> (* skoMC1 (* skoMC1 (* skoMC1 2.))) 0.) (<= (* skoMC1 (* skoMC1 (* skoMC1 (- 2.)))) 0.) (> (* skoSC1 (* skoMC1 (* skoMC1 skoMC1))) (* skoMC1 (* skoMC1 (* skoMC1 (- 1.))))) (> (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (+ (- 1.) (* skoMC1 3.))))) (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (+ (- 2.) (* skoMC1 (- 3.)))))) (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (+ (/ 1. 6.) (* skoMC1 (- 1.)))))) (* skoSC1 (* skoMC1 (* skoMC1 (* skoMC1 (/ 1. 4.))))))))))) (* skoMC1 (* skoMC1 (* skoMC1 (+ (- 2.) (* skoMC1 (- 5.))))))) (> (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (+ (- 1.) (* skoMC1 3.))))) (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (+ (- 2.) (* skoMC1 (- 3.)))))) (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (* skoMC1 (- 1.))))) (* skoSC1 (* skoMC1 (* skoMC1 (* skoMC1 (/ 1. 12.))))))))))) (* skoMC1 (* skoMC1 (* skoMC1 (+ (- 2.) (* skoMC1 (- 5.))))))) (<= (* skoSC1 (* skoMC1 (* skoMC1 (* skoMC1 (- 1.))))) (* skoMC1 (* skoMC1 skoMC1))) (<= (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (+ 1. (* skoMC1 (- 3.)))))) (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (+ 2. (* skoMC1 3.))))) (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (+ (/ (- 1.) 6.) skoMC1)))) (* skoSC1 (* skoMC1 (* skoMC1 (* skoMC1 (/ (- 1.) 4.))))))))))) (* skoMC1 (* skoMC1 (* skoMC1 (+ 2. (* skoMC1 5.))))))) (succedent (> (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (+ 1. (* skoMC1 (- 3.)))))) (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (+ 2. (* skoMC1 3.))))) (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 skoMC1))) (* skoSC1 (* skoMC1 (* skoMC1 (* skoMC1 (/ (- 1.) 12.))))))))))) (* skoMC1 (* skoMC1 (* skoMC1 (+ 2. (* skoMC1 5.))))))))
-----[end problem]-----

-----[begin problem]-----
% In Mathematica format:
Timing[Resolve[Exists[{skoMC1,skoSC1}, And[skoMC1*skoMC1*skoMC1*-1>0,skoSC1*(skoMC1*skoMC1*skoMC1*-1+skoSC1*skoMC1*skoMC1*skoMC1*-1)>0,skoSC1*skoMC1*skoMC1*skoMC1*2>skoMC1*skoMC1*skoMC1*-2,skoMC1>0,skoSC1*skoMC1>skoMC1*-1,skoSC1*(skoMC1*(-1+skoMC1*3)+skoSC1*(skoMC1*(-2+skoMC1*-3)+skoSC1*(skoMC1*skoMC1*-1+skoSC1*skoMC1*(1/12))))>skoMC1*(-2+skoMC1*-5),skoSC1*(skoMC1*(-1+skoMC1*3)+skoSC1*(skoMC1*(-2+skoMC1*-3)+skoSC1*(skoMC1*((1/6)+skoMC1*-1)+skoSC1*skoMC1*(1/4))))>skoMC1*(-2+skoMC1*-5),skoMC1*skoMC1*skoMC1*2>0,skoSC1*skoMC1*skoMC1*skoMC1>skoMC1*skoMC1*skoMC1*-1,skoSC1*(skoMC1*skoMC1*skoMC1*(-1+skoMC1*3)+skoSC1*(skoMC1*skoMC1*skoMC1*(-2+skoMC1*-3)+skoSC1*(skoMC1*skoMC1*skoMC1*((1/6)+skoMC1*-1)+skoSC1*skoMC1*skoMC1*skoMC1*(1/4))))>skoMC1*skoMC1*skoMC1*(-2+skoMC1*-5),skoSC1*(skoMC1*skoMC1*skoMC1*(-1+skoMC1*3)+skoSC1*(skoMC1*skoMC1*skoMC1*(-2+skoMC1*-3)+skoSC1*(skoMC1*skoMC1*skoMC1*skoMC1*-1+skoSC1*skoMC1*skoMC1*skoMC1*(1/12))))>skoMC1*skoMC1*skoMC1*(-2+skoMC1*-5)]], Reals]]

% In QepcadB format:
(E skoMC1) (E skoSC1) [[0<(skoMC1 skoMC1 skoMC1 (-1))]/\[[0<(skoSC1 ((skoMC1 skoMC1 skoMC1 (-1))+(skoSC1 skoMC1 skoMC1 skoMC1 (-1))))]/\[[(skoMC1 skoMC1 skoMC1 (-2))<(skoSC1 skoMC1 skoMC1 skoMC1 (2))]/\[[0<skoMC1]/\[[(skoMC1 (-1))<(skoSC1 skoMC1)]/\[[(skoMC1 (-2+(skoMC1 (-5))))<(skoSC1 ((skoMC1 (-1+(skoMC1 (3))))+(skoSC1 ((skoMC1 (-2+(skoMC1 (-3))))+(skoSC1 ((skoMC1 skoMC1 (-1))+(skoSC1 skoMC1 (1/12))))))))]/\[[(skoMC1 (-2+(skoMC1 (-5))))<(skoSC1 ((skoMC1 (-1+(skoMC1 (3))))+(skoSC1 ((skoMC1 (-2+(skoMC1 (-3))))+(skoSC1 ((skoMC1 (1/6+(skoMC1 (-1))))+(skoSC1 skoMC1 (1/4))))))))]/\[[0<(skoMC1 skoMC1 skoMC1 (2))]/\[[(skoMC1 skoMC1 skoMC1 (-1))<(skoSC1 skoMC1 skoMC1 skoMC1)]/\[[(skoMC1 skoMC1 skoMC1 (-2+(skoMC1 (-5))))<(skoSC1 ((skoMC1 skoMC1 skoMC1 (-1+(skoMC1 (3))))+(skoSC1 ((skoMC1 skoMC1 skoMC1 (-2+(skoMC1 (-3))))+(skoSC1 ((skoMC1 skoMC1 skoMC1 (1/6+(skoMC1 (-1))))+(skoSC1 skoMC1 skoMC1 skoMC1 (1/4))))))))]/\[(skoMC1 skoMC1 skoMC1 (-2+(skoMC1 (-5))))<(skoSC1 ((skoMC1 skoMC1 skoMC1 (-1+(skoMC1 (3))))+(skoSC1 ((skoMC1 skoMC1 skoMC1 (-2+(skoMC1 (-3))))+(skoSC1 ((skoMC1 skoMC1 skoMC1 skoMC1 (-1))+(skoSC1 skoMC1 skoMC1 skoMC1 (1/12))))))))]]]]]]]]]]].

% In SMTLib2 format:
(declare-fun skoMC1 () Real) (declare-fun skoSC1 () Real) (assert (and (> (* skoMC1 (* skoMC1 (* skoMC1 (- 1.)))) 0.) (and (> (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (- 1.)))) (* skoSC1 (* skoMC1 (* skoMC1 (* skoMC1 (- 1.))))))) 0.) (and (> (* skoSC1 (* skoMC1 (* skoMC1 (* skoMC1 2.)))) (* skoMC1 (* skoMC1 (* skoMC1 (- 2.))))) (and (> skoMC1 0.) (and (> (* skoSC1 skoMC1) (* skoMC1 (- 1.))) (and (> (* skoSC1 (+ (* skoMC1 (+ (- 1.) (* skoMC1 3.))) (* skoSC1 (+ (* skoMC1 (+ (- 2.) (* skoMC1 (- 3.)))) (* skoSC1 (+ (* skoMC1 (* skoMC1 (- 1.))) (* skoSC1 (* skoMC1 (/ 1. 12.))))))))) (* skoMC1 (+ (- 2.) (* skoMC1 (- 5.))))) (and (> (* skoSC1 (+ (* skoMC1 (+ (- 1.) (* skoMC1 3.))) (* skoSC1 (+ (* skoMC1 (+ (- 2.) (* skoMC1 (- 3.)))) (* skoSC1 (+ (* skoMC1 (+ (/ 1. 6.) (* skoMC1 (- 1.)))) (* skoSC1 (* skoMC1 (/ 1. 4.))))))))) (* skoMC1 (+ (- 2.) (* skoMC1 (- 5.))))) (and (> (* skoMC1 (* skoMC1 (* skoMC1 2.))) 0.) (and (> (* skoSC1 (* skoMC1 (* skoMC1 skoMC1))) (* skoMC1 (* skoMC1 (* skoMC1 (- 1.))))) (and (> (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (+ (- 1.) (* skoMC1 3.))))) (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (+ (- 2.) (* skoMC1 (- 3.)))))) (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (+ (/ 1. 6.) (* skoMC1 (- 1.)))))) (* skoSC1 (* skoMC1 (* skoMC1 (* skoMC1 (/ 1. 4.))))))))))) (* skoMC1 (* skoMC1 (* skoMC1 (+ (- 2.) (* skoMC1 (- 5.))))))) (> (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (+ (- 1.) (* skoMC1 3.))))) (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (+ (- 2.) (* skoMC1 (- 3.)))))) (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (* skoMC1 (- 1.))))) (* skoSC1 (* skoMC1 (* skoMC1 (* skoMC1 (/ 1. 12.))))))))))) (* skoMC1 (* skoMC1 (* skoMC1 (+ (- 2.) (* skoMC1 (- 5.))))))))))))))))))

% In GRF format:
(sequent " MetiTarski formula " (antecedent (> (* skoMC1 (* skoMC1 (* skoMC1 (- 1.)))) 0.) (> (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (- 1.)))) (* skoSC1 (* skoMC1 (* skoMC1 (* skoMC1 (- 1.))))))) 0.) (> (* skoSC1 (* skoMC1 (* skoMC1 (* skoMC1 2.)))) (* skoMC1 (* skoMC1 (* skoMC1 (- 2.))))) (> skoMC1 0.) (> (* skoSC1 skoMC1) (* skoMC1 (- 1.))) (> (* skoSC1 (+ (* skoMC1 (+ (- 1.) (* skoMC1 3.))) (* skoSC1 (+ (* skoMC1 (+ (- 2.) (* skoMC1 (- 3.)))) (* skoSC1 (+ (* skoMC1 (* skoMC1 (- 1.))) (* skoSC1 (* skoMC1 (/ 1. 12.))))))))) (* skoMC1 (+ (- 2.) (* skoMC1 (- 5.))))) (> (* skoSC1 (+ (* skoMC1 (+ (- 1.) (* skoMC1 3.))) (* skoSC1 (+ (* skoMC1 (+ (- 2.) (* skoMC1 (- 3.)))) (* skoSC1 (+ (* skoMC1 (+ (/ 1. 6.) (* skoMC1 (- 1.)))) (* skoSC1 (* skoMC1 (/ 1. 4.))))))))) (* skoMC1 (+ (- 2.) (* skoMC1 (- 5.))))) (> (* skoMC1 (* skoMC1 (* skoMC1 2.))) 0.) (> (* skoSC1 (* skoMC1 (* skoMC1 skoMC1))) (* skoMC1 (* skoMC1 (* skoMC1 (- 1.))))) (> (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (+ (- 1.) (* skoMC1 3.))))) (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (+ (- 2.) (* skoMC1 (- 3.)))))) (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (+ (/ 1. 6.) (* skoMC1 (- 1.)))))) (* skoSC1 (* skoMC1 (* skoMC1 (* skoMC1 (/ 1. 4.))))))))))) (* skoMC1 (* skoMC1 (* skoMC1 (+ (- 2.) (* skoMC1 (- 5.)))))))) (succedent (<= (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (+ (- 1.) (* skoMC1 3.))))) (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (+ (- 2.) (* skoMC1 (- 3.)))))) (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (* skoMC1 (- 1.))))) (* skoSC1 (* skoMC1 (* skoMC1 (* skoMC1 (/ 1. 12.))))))))))) (* skoMC1 (* skoMC1 (* skoMC1 (+ (- 2.) (* skoMC1 (- 5.)))))))))
-----[end problem]-----

-----[begin problem]-----
% In Mathematica format:
Timing[Resolve[Exists[{skoMC1,skoSC1}, And[skoMC1*skoMC1*skoMC1*-1>0,skoSC1*(skoMC1*skoMC1*skoMC1+skoSC1*skoMC1*skoMC1*skoMC1)>0,skoSC1*skoMC1*skoMC1*skoMC1*2>skoMC1*skoMC1*skoMC1*-2,skoMC1>0,skoSC1*skoMC1>skoMC1*-1,skoSC1*(skoMC1*(-1+skoMC1*3)+skoSC1*(skoMC1*(-2+skoMC1*-3)+skoSC1*(skoMC1*skoMC1*-1+skoSC1*skoMC1*(1/12))))>skoMC1*(-2+skoMC1*-5),skoSC1*(skoMC1*(-1+skoMC1*3)+skoSC1*(skoMC1*(-2+skoMC1*-3)+skoSC1*(skoMC1*((1/6)+skoMC1*-1)+skoSC1*skoMC1*(1/4))))>skoMC1*(-2+skoMC1*-5),skoMC1*skoMC1*skoMC1*2>0,skoSC1*skoMC1*skoMC1*skoMC1>skoMC1*skoMC1*skoMC1*-1,skoSC1*(skoMC1*skoMC1*skoMC1*(-1+skoMC1*3)+skoSC1*(skoMC1*skoMC1*skoMC1*(-2+skoMC1*-3)+skoSC1*(skoMC1*skoMC1*skoMC1*((1/6)+skoMC1*-1)+skoSC1*skoMC1*skoMC1*skoMC1*(1/4))))>skoMC1*skoMC1*skoMC1*(-2+skoMC1*-5),skoSC1*(skoMC1*skoMC1*skoMC1*(-1+skoMC1*3)+skoSC1*(skoMC1*skoMC1*skoMC1*(-2+skoMC1*-3)+skoSC1*(skoMC1*skoMC1*skoMC1*skoMC1*-1+skoSC1*skoMC1*skoMC1*skoMC1*(1/12))))>skoMC1*skoMC1*skoMC1*(-2+skoMC1*-5)]], Reals]]

% In QepcadB format:
(E skoMC1) (E skoSC1) [[0<(skoMC1 skoMC1 skoMC1 (-1))]/\[[0<(skoSC1 ((skoMC1 skoMC1 skoMC1)+(skoSC1 skoMC1 skoMC1 skoMC1)))]/\[[(skoMC1 skoMC1 skoMC1 (-2))<(skoSC1 skoMC1 skoMC1 skoMC1 (2))]/\[[0<skoMC1]/\[[(skoMC1 (-1))<(skoSC1 skoMC1)]/\[[(skoMC1 (-2+(skoMC1 (-5))))<(skoSC1 ((skoMC1 (-1+(skoMC1 (3))))+(skoSC1 ((skoMC1 (-2+(skoMC1 (-3))))+(skoSC1 ((skoMC1 skoMC1 (-1))+(skoSC1 skoMC1 (1/12))))))))]/\[[(skoMC1 (-2+(skoMC1 (-5))))<(skoSC1 ((skoMC1 (-1+(skoMC1 (3))))+(skoSC1 ((skoMC1 (-2+(skoMC1 (-3))))+(skoSC1 ((skoMC1 (1/6+(skoMC1 (-1))))+(skoSC1 skoMC1 (1/4))))))))]/\[[0<(skoMC1 skoMC1 skoMC1 (2))]/\[[(skoMC1 skoMC1 skoMC1 (-1))<(skoSC1 skoMC1 skoMC1 skoMC1)]/\[[(skoMC1 skoMC1 skoMC1 (-2+(skoMC1 (-5))))<(skoSC1 ((skoMC1 skoMC1 skoMC1 (-1+(skoMC1 (3))))+(skoSC1 ((skoMC1 skoMC1 skoMC1 (-2+(skoMC1 (-3))))+(skoSC1 ((skoMC1 skoMC1 skoMC1 (1/6+(skoMC1 (-1))))+(skoSC1 skoMC1 skoMC1 skoMC1 (1/4))))))))]/\[(skoMC1 skoMC1 skoMC1 (-2+(skoMC1 (-5))))<(skoSC1 ((skoMC1 skoMC1 skoMC1 (-1+(skoMC1 (3))))+(skoSC1 ((skoMC1 skoMC1 skoMC1 (-2+(skoMC1 (-3))))+(skoSC1 ((skoMC1 skoMC1 skoMC1 skoMC1 (-1))+(skoSC1 skoMC1 skoMC1 skoMC1 (1/12))))))))]]]]]]]]]]].

% In SMTLib2 format:
(declare-fun skoMC1 () Real) (declare-fun skoSC1 () Real) (assert (and (> (* skoMC1 (* skoMC1 (* skoMC1 (- 1.)))) 0.) (and (> (* skoSC1 (+ (* skoMC1 (* skoMC1 skoMC1)) (* skoSC1 (* skoMC1 (* skoMC1 skoMC1))))) 0.) (and (> (* skoSC1 (* skoMC1 (* skoMC1 (* skoMC1 2.)))) (* skoMC1 (* skoMC1 (* skoMC1 (- 2.))))) (and (> skoMC1 0.) (and (> (* skoSC1 skoMC1) (* skoMC1 (- 1.))) (and (> (* skoSC1 (+ (* skoMC1 (+ (- 1.) (* skoMC1 3.))) (* skoSC1 (+ (* skoMC1 (+ (- 2.) (* skoMC1 (- 3.)))) (* skoSC1 (+ (* skoMC1 (* skoMC1 (- 1.))) (* skoSC1 (* skoMC1 (/ 1. 12.))))))))) (* skoMC1 (+ (- 2.) (* skoMC1 (- 5.))))) (and (> (* skoSC1 (+ (* skoMC1 (+ (- 1.) (* skoMC1 3.))) (* skoSC1 (+ (* skoMC1 (+ (- 2.) (* skoMC1 (- 3.)))) (* skoSC1 (+ (* skoMC1 (+ (/ 1. 6.) (* skoMC1 (- 1.)))) (* skoSC1 (* skoMC1 (/ 1. 4.))))))))) (* skoMC1 (+ (- 2.) (* skoMC1 (- 5.))))) (and (> (* skoMC1 (* skoMC1 (* skoMC1 2.))) 0.) (and (> (* skoSC1 (* skoMC1 (* skoMC1 skoMC1))) (* skoMC1 (* skoMC1 (* skoMC1 (- 1.))))) (and (> (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (+ (- 1.) (* skoMC1 3.))))) (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (+ (- 2.) (* skoMC1 (- 3.)))))) (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (+ (/ 1. 6.) (* skoMC1 (- 1.)))))) (* skoSC1 (* skoMC1 (* skoMC1 (* skoMC1 (/ 1. 4.))))))))))) (* skoMC1 (* skoMC1 (* skoMC1 (+ (- 2.) (* skoMC1 (- 5.))))))) (> (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (+ (- 1.) (* skoMC1 3.))))) (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (+ (- 2.) (* skoMC1 (- 3.)))))) (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (* skoMC1 (- 1.))))) (* skoSC1 (* skoMC1 (* skoMC1 (* skoMC1 (/ 1. 12.))))))))))) (* skoMC1 (* skoMC1 (* skoMC1 (+ (- 2.) (* skoMC1 (- 5.))))))))))))))))))

% In GRF format:
(sequent " MetiTarski formula " (antecedent (> (* skoMC1 (* skoMC1 (* skoMC1 (- 1.)))) 0.) (> (* skoSC1 (+ (* skoMC1 (* skoMC1 skoMC1)) (* skoSC1 (* skoMC1 (* skoMC1 skoMC1))))) 0.) (> (* skoSC1 (* skoMC1 (* skoMC1 (* skoMC1 2.)))) (* skoMC1 (* skoMC1 (* skoMC1 (- 2.))))) (> skoMC1 0.) (> (* skoSC1 skoMC1) (* skoMC1 (- 1.))) (> (* skoSC1 (+ (* skoMC1 (+ (- 1.) (* skoMC1 3.))) (* skoSC1 (+ (* skoMC1 (+ (- 2.) (* skoMC1 (- 3.)))) (* skoSC1 (+ (* skoMC1 (* skoMC1 (- 1.))) (* skoSC1 (* skoMC1 (/ 1. 12.))))))))) (* skoMC1 (+ (- 2.) (* skoMC1 (- 5.))))) (> (* skoSC1 (+ (* skoMC1 (+ (- 1.) (* skoMC1 3.))) (* skoSC1 (+ (* skoMC1 (+ (- 2.) (* skoMC1 (- 3.)))) (* skoSC1 (+ (* skoMC1 (+ (/ 1. 6.) (* skoMC1 (- 1.)))) (* skoSC1 (* skoMC1 (/ 1. 4.))))))))) (* skoMC1 (+ (- 2.) (* skoMC1 (- 5.))))) (> (* skoMC1 (* skoMC1 (* skoMC1 2.))) 0.) (> (* skoSC1 (* skoMC1 (* skoMC1 skoMC1))) (* skoMC1 (* skoMC1 (* skoMC1 (- 1.))))) (> (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (+ (- 1.) (* skoMC1 3.))))) (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (+ (- 2.) (* skoMC1 (- 3.)))))) (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (+ (/ 1. 6.) (* skoMC1 (- 1.)))))) (* skoSC1 (* skoMC1 (* skoMC1 (* skoMC1 (/ 1. 4.))))))))))) (* skoMC1 (* skoMC1 (* skoMC1 (+ (- 2.) (* skoMC1 (- 5.)))))))) (succedent (<= (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (+ (- 1.) (* skoMC1 3.))))) (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (+ (- 2.) (* skoMC1 (- 3.)))))) (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (* skoMC1 (- 1.))))) (* skoSC1 (* skoMC1 (* skoMC1 (* skoMC1 (/ 1. 12.))))))))))) (* skoMC1 (* skoMC1 (* skoMC1 (+ (- 2.) (* skoMC1 (- 5.)))))))))
-----[end problem]-----

-----[begin problem]-----
% In Mathematica format:
Timing[Resolve[Exists[{skoSC1,skoMC1}, And[skoSC1*skoMC1*skoMC1*skoMC1*-2<=skoMC1*skoMC1*skoMC1*2,skoSC1*(skoMC1*skoMC1*skoMC1*(-2+skoMC1*-12)+skoSC1*(skoMC1*skoMC1*skoMC1*(1+skoMC1*-6)+skoSC1*(skoMC1*skoMC1*skoMC1+skoSC1*(skoMC1*skoMC1*skoMC1*(-1/12)+skoSC1*skoMC1*skoMC1*skoMC1*(-1/12)))))<=skoMC1*skoMC1*skoMC1*(2+skoMC1*6),skoSC1*skoMC1*skoMC1*skoMC1*-2<=skoMC1*skoMC1*skoMC1*2,skoSC1*skoMC1*skoMC1*skoMC1*2>skoMC1*skoMC1*skoMC1*-2,skoSC1<=(5/4),2<=skoMC1,0<=skoSC1,skoMC1>0,0<=skoMC1,skoSC1*skoMC1>skoMC1*-1,skoSC1*skoMC1*-1<=skoMC1,skoSC1*(skoMC1*(1+skoMC1*-3)+skoSC1*(skoMC1*(2+skoMC1*3)+skoSC1*(skoMC1*skoMC1+skoSC1*skoMC1*(-1/12))))<=skoMC1*(2+skoMC1*5),skoSC1*(skoMC1*(1+skoMC1*-3)+skoSC1*(skoMC1*(2+skoMC1*3)+skoSC1*(skoMC1*((-1/6)+skoMC1)+skoSC1*skoMC1*(-1/4))))<=skoMC1*(2+skoMC1*5),skoSC1*(skoMC1*(-1+skoMC1*3)+skoSC1*(skoMC1*(-2+skoMC1*-3)+skoSC1*(skoMC1*skoMC1*-1+skoSC1*skoMC1*(1/12))))>skoMC1*(-2+skoMC1*-5),skoSC1*(skoMC1*(-1+skoMC1*3)+skoSC1*(skoMC1*(-2+skoMC1*-3)+skoSC1*(skoMC1*((1/6)+skoMC1*-1)+skoSC1*skoMC1*(1/4))))>skoMC1*(-2+skoMC1*-5),skoMC1*skoMC1*skoMC1*2>0,skoMC1*skoMC1*skoMC1*-2<=0,skoSC1*skoMC1*skoMC1*skoMC1>skoMC1*skoMC1*skoMC1*-1,skoSC1*(skoMC1*skoMC1*skoMC1*(-1+skoMC1*3)+skoSC1*(skoMC1*skoMC1*skoMC1*(-2+skoMC1*-3)+skoSC1*(skoMC1*skoMC1*skoMC1*((1/6)+skoMC1*-1)+skoSC1*skoMC1*skoMC1*skoMC1*(1/4))))>skoMC1*skoMC1*skoMC1*(-2+skoMC1*-5),skoSC1*(skoMC1*skoMC1*skoMC1*(-1+skoMC1*3)+skoSC1*(skoMC1*skoMC1*skoMC1*(-2+skoMC1*-3)+skoSC1*(skoMC1*skoMC1*skoMC1*skoMC1*-1+skoSC1*skoMC1*skoMC1*skoMC1*(1/12))))>skoMC1*skoMC1*skoMC1*(-2+skoMC1*-5),skoSC1*skoMC1*skoMC1*skoMC1*-1<=skoMC1*skoMC1*skoMC1,skoSC1*(skoMC1*skoMC1*skoMC1*(1+skoMC1*-3)+skoSC1*(skoMC1*skoMC1*skoMC1*(2+skoMC1*3)+skoSC1*(skoMC1*skoMC1*skoMC1*((-1/6)+skoMC1)+skoSC1*skoMC1*skoMC1*skoMC1*(-1/4))))<=skoMC1*skoMC1*skoMC1*(2+skoMC1*5),skoSC1*(skoMC1*skoMC1*skoMC1*(1+skoMC1*-3)+skoSC1*(skoMC1*skoMC1*skoMC1*(2+skoMC1*3)+skoSC1*(skoMC1*skoMC1*skoMC1*skoMC1+skoSC1*skoMC1*skoMC1*skoMC1*(-1/12))))<=skoMC1*skoMC1*skoMC1*(2+skoMC1*5)]], Reals]]

% In QepcadB format:
(E skoSC1) (E skoMC1) [[(skoSC1 skoMC1 skoMC1 skoMC1 (-2))<=(skoMC1 skoMC1 skoMC1 (2))]/\[[(skoSC1 ((skoMC1 skoMC1 skoMC1 (-2+(skoMC1 (-12))))+(skoSC1 ((skoMC1 skoMC1 skoMC1 (1+(skoMC1 (-6))))+(skoSC1 ((skoMC1 skoMC1 skoMC1)+(skoSC1 ((skoMC1 skoMC1 skoMC1 (-1/12))+(skoSC1 skoMC1 skoMC1 skoMC1 (-1/12))))))))))<=(skoMC1 skoMC1 skoMC1 (2+(skoMC1 (6))))]/\[[(skoSC1 skoMC1 skoMC1 skoMC1 (-2))<=(skoMC1 skoMC1 skoMC1 (2))]/\[[(skoMC1 skoMC1 skoMC1 (-2))<(skoSC1 skoMC1 skoMC1 skoMC1 (2))]/\[[skoSC1<=5/4]/\[[2<=skoMC1]/\[[0<=skoSC1]/\[[0<skoMC1]/\[[0<=skoMC1]/\[[(skoMC1 (-1))<(skoSC1 skoMC1)]/\[[(skoSC1 skoMC1 (-1))<=skoMC1]/\[[(skoSC1 ((skoMC1 (1+(skoMC1 (-3))))+(skoSC1 ((skoMC1 (2+(skoMC1 (3))))+(skoSC1 ((skoMC1 skoMC1)+(skoSC1 skoMC1 (-1/12))))))))<=(skoMC1 (2+(skoMC1 (5))))]/\[[(skoSC1 ((skoMC1 (1+(skoMC1 (-3))))+(skoSC1 ((skoMC1 (2+(skoMC1 (3))))+(skoSC1 ((skoMC1 (-1/6+skoMC1))+(skoSC1 skoMC1 (-1/4))))))))<=(skoMC1 (2+(skoMC1 (5))))]/\[[(skoMC1 (-2+(skoMC1 (-5))))<(skoSC1 ((skoMC1 (-1+(skoMC1 (3))))+(skoSC1 ((skoMC1 (-2+(skoMC1 (-3))))+(skoSC1 ((skoMC1 skoMC1 (-1))+(skoSC1 skoMC1 (1/12))))))))]/\[[(skoMC1 (-2+(skoMC1 (-5))))<(skoSC1 ((skoMC1 (-1+(skoMC1 (3))))+(skoSC1 ((skoMC1 (-2+(skoMC1 (-3))))+(skoSC1 ((skoMC1 (1/6+(skoMC1 (-1))))+(skoSC1 skoMC1 (1/4))))))))]/\[[0<(skoMC1 skoMC1 skoMC1 (2))]/\[[(skoMC1 skoMC1 skoMC1 (-2))<=0]/\[[(skoMC1 skoMC1 skoMC1 (-1))<(skoSC1 skoMC1 skoMC1 skoMC1)]/\[[(skoMC1 skoMC1 skoMC1 (-2+(skoMC1 (-5))))<(skoSC1 ((skoMC1 skoMC1 skoMC1 (-1+(skoMC1 (3))))+(skoSC1 ((skoMC1 skoMC1 skoMC1 (-2+(skoMC1 (-3))))+(skoSC1 ((skoMC1 skoMC1 skoMC1 (1/6+(skoMC1 (-1))))+(skoSC1 skoMC1 skoMC1 skoMC1 (1/4))))))))]/\[[(skoMC1 skoMC1 skoMC1 (-2+(skoMC1 (-5))))<(skoSC1 ((skoMC1 skoMC1 skoMC1 (-1+(skoMC1 (3))))+(skoSC1 ((skoMC1 skoMC1 skoMC1 (-2+(skoMC1 (-3))))+(skoSC1 ((skoMC1 skoMC1 skoMC1 skoMC1 (-1))+(skoSC1 skoMC1 skoMC1 skoMC1 (1/12))))))))]/\[[(skoSC1 skoMC1 skoMC1 skoMC1 (-1))<=(skoMC1 skoMC1 skoMC1)]/\[[(skoSC1 ((skoMC1 skoMC1 skoMC1 (1+(skoMC1 (-3))))+(skoSC1 ((skoMC1 skoMC1 skoMC1 (2+(skoMC1 (3))))+(skoSC1 ((skoMC1 skoMC1 skoMC1 (-1/6+skoMC1))+(skoSC1 skoMC1 skoMC1 skoMC1 (-1/4))))))))<=(skoMC1 skoMC1 skoMC1 (2+(skoMC1 (5))))]/\[(skoSC1 ((skoMC1 skoMC1 skoMC1 (1+(skoMC1 (-3))))+(skoSC1 ((skoMC1 skoMC1 skoMC1 (2+(skoMC1 (3))))+(skoSC1 ((skoMC1 skoMC1 skoMC1 skoMC1)+(skoSC1 skoMC1 skoMC1 skoMC1 (-1/12))))))))<=(skoMC1 skoMC1 skoMC1 (2+(skoMC1 (5))))]]]]]]]]]]]]]]]]]]]]]]].

% In SMTLib2 format:
(declare-fun skoSC1 () Real) (declare-fun skoMC1 () Real) (assert (and (<= (* skoSC1 (* skoMC1 (* skoMC1 (* skoMC1 (- 2.))))) (* skoMC1 (* skoMC1 (* skoMC1 2.)))) (and (<= (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (+ (- 2.) (* skoMC1 (- 12.)))))) (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (+ 1. (* skoMC1 (- 6.)))))) (* skoSC1 (+ (* skoMC1 (* skoMC1 skoMC1)) (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (/ (- 1.) 12.)))) (* skoSC1 (* skoMC1 (* skoMC1 (* skoMC1 (/ (- 1.) 12.))))))))))))) (* skoMC1 (* skoMC1 (* skoMC1 (+ 2. (* skoMC1 6.)))))) (and (<= (* skoSC1 (* skoMC1 (* skoMC1 (* skoMC1 (- 2.))))) (* skoMC1 (* skoMC1 (* skoMC1 2.)))) (and (> (* skoSC1 (* skoMC1 (* skoMC1 (* skoMC1 2.)))) (* skoMC1 (* skoMC1 (* skoMC1 (- 2.))))) (and (<= skoSC1 (/ 5. 4.)) (and (<= 2. skoMC1) (and (<= 0. skoSC1) (and (> skoMC1 0.) (and (<= 0. skoMC1) (and (> (* skoSC1 skoMC1) (* skoMC1 (- 1.))) (and (<= (* skoSC1 (* skoMC1 (- 1.))) skoMC1) (and (<= (* skoSC1 (+ (* skoMC1 (+ 1. (* skoMC1 (- 3.)))) (* skoSC1 (+ (* skoMC1 (+ 2. (* skoMC1 3.))) (* skoSC1 (+ (* skoMC1 skoMC1) (* skoSC1 (* skoMC1 (/ (- 1.) 12.))))))))) (* skoMC1 (+ 2. (* skoMC1 5.)))) (and (<= (* skoSC1 (+ (* skoMC1 (+ 1. (* skoMC1 (- 3.)))) (* skoSC1 (+ (* skoMC1 (+ 2. (* skoMC1 3.))) (* skoSC1 (+ (* skoMC1 (+ (/ (- 1.) 6.) skoMC1)) (* skoSC1 (* skoMC1 (/ (- 1.) 4.))))))))) (* skoMC1 (+ 2. (* skoMC1 5.)))) (and (> (* skoSC1 (+ (* skoMC1 (+ (- 1.) (* skoMC1 3.))) (* skoSC1 (+ (* skoMC1 (+ (- 2.) (* skoMC1 (- 3.)))) (* skoSC1 (+ (* skoMC1 (* skoMC1 (- 1.))) (* skoSC1 (* skoMC1 (/ 1. 12.))))))))) (* skoMC1 (+ (- 2.) (* skoMC1 (- 5.))))) (and (> (* skoSC1 (+ (* skoMC1 (+ (- 1.) (* skoMC1 3.))) (* skoSC1 (+ (* skoMC1 (+ (- 2.) (* skoMC1 (- 3.)))) (* skoSC1 (+ (* skoMC1 (+ (/ 1. 6.) (* skoMC1 (- 1.)))) (* skoSC1 (* skoMC1 (/ 1. 4.))))))))) (* skoMC1 (+ (- 2.) (* skoMC1 (- 5.))))) (and (> (* skoMC1 (* skoMC1 (* skoMC1 2.))) 0.) (and (<= (* skoMC1 (* skoMC1 (* skoMC1 (- 2.)))) 0.) (and (> (* skoSC1 (* skoMC1 (* skoMC1 skoMC1))) (* skoMC1 (* skoMC1 (* skoMC1 (- 1.))))) (and (> (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (+ (- 1.) (* skoMC1 3.))))) (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (+ (- 2.) (* skoMC1 (- 3.)))))) (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (+ (/ 1. 6.) (* skoMC1 (- 1.)))))) (* skoSC1 (* skoMC1 (* skoMC1 (* skoMC1 (/ 1. 4.))))))))))) (* skoMC1 (* skoMC1 (* skoMC1 (+ (- 2.) (* skoMC1 (- 5.))))))) (and (> (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (+ (- 1.) (* skoMC1 3.))))) (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (+ (- 2.) (* skoMC1 (- 3.)))))) (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (* skoMC1 (- 1.))))) (* skoSC1 (* skoMC1 (* skoMC1 (* skoMC1 (/ 1. 12.))))))))))) (* skoMC1 (* skoMC1 (* skoMC1 (+ (- 2.) (* skoMC1 (- 5.))))))) (and (<= (* skoSC1 (* skoMC1 (* skoMC1 (* skoMC1 (- 1.))))) (* skoMC1 (* skoMC1 skoMC1))) (and (<= (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (+ 1. (* skoMC1 (- 3.)))))) (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (+ 2. (* skoMC1 3.))))) (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (+ (/ (- 1.) 6.) skoMC1)))) (* skoSC1 (* skoMC1 (* skoMC1 (* skoMC1 (/ (- 1.) 4.))))))))))) (* skoMC1 (* skoMC1 (* skoMC1 (+ 2. (* skoMC1 5.)))))) (<= (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (+ 1. (* skoMC1 (- 3.)))))) (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (+ 2. (* skoMC1 3.))))) (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 skoMC1))) (* skoSC1 (* skoMC1 (* skoMC1 (* skoMC1 (/ (- 1.) 12.))))))))))) (* skoMC1 (* skoMC1 (* skoMC1 (+ 2. (* skoMC1 5.)))))))))))))))))))))))))))))

% In GRF format:
(sequent " MetiTarski formula " (antecedent (<= (* skoSC1 (* skoMC1 (* skoMC1 (* skoMC1 (- 2.))))) (* skoMC1 (* skoMC1 (* skoMC1 2.)))) (<= (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (+ (- 2.) (* skoMC1 (- 12.)))))) (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (+ 1. (* skoMC1 (- 6.)))))) (* skoSC1 (+ (* skoMC1 (* skoMC1 skoMC1)) (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (/ (- 1.) 12.)))) (* skoSC1 (* skoMC1 (* skoMC1 (* skoMC1 (/ (- 1.) 12.))))))))))))) (* skoMC1 (* skoMC1 (* skoMC1 (+ 2. (* skoMC1 6.)))))) (<= (* skoSC1 (* skoMC1 (* skoMC1 (* skoMC1 (- 2.))))) (* skoMC1 (* skoMC1 (* skoMC1 2.)))) (> (* skoSC1 (* skoMC1 (* skoMC1 (* skoMC1 2.)))) (* skoMC1 (* skoMC1 (* skoMC1 (- 2.))))) (<= skoSC1 (/ 5. 4.)) (<= 2. skoMC1) (<= 0. skoSC1) (> skoMC1 0.) (<= 0. skoMC1) (> (* skoSC1 skoMC1) (* skoMC1 (- 1.))) (<= (* skoSC1 (* skoMC1 (- 1.))) skoMC1) (<= (* skoSC1 (+ (* skoMC1 (+ 1. (* skoMC1 (- 3.)))) (* skoSC1 (+ (* skoMC1 (+ 2. (* skoMC1 3.))) (* skoSC1 (+ (* skoMC1 skoMC1) (* skoSC1 (* skoMC1 (/ (- 1.) 12.))))))))) (* skoMC1 (+ 2. (* skoMC1 5.)))) (<= (* skoSC1 (+ (* skoMC1 (+ 1. (* skoMC1 (- 3.)))) (* skoSC1 (+ (* skoMC1 (+ 2. (* skoMC1 3.))) (* skoSC1 (+ (* skoMC1 (+ (/ (- 1.) 6.) skoMC1)) (* skoSC1 (* skoMC1 (/ (- 1.) 4.))))))))) (* skoMC1 (+ 2. (* skoMC1 5.)))) (> (* skoSC1 (+ (* skoMC1 (+ (- 1.) (* skoMC1 3.))) (* skoSC1 (+ (* skoMC1 (+ (- 2.) (* skoMC1 (- 3.)))) (* skoSC1 (+ (* skoMC1 (* skoMC1 (- 1.))) (* skoSC1 (* skoMC1 (/ 1. 12.))))))))) (* skoMC1 (+ (- 2.) (* skoMC1 (- 5.))))) (> (* skoSC1 (+ (* skoMC1 (+ (- 1.) (* skoMC1 3.))) (* skoSC1 (+ (* skoMC1 (+ (- 2.) (* skoMC1 (- 3.)))) (* skoSC1 (+ (* skoMC1 (+ (/ 1. 6.) (* skoMC1 (- 1.)))) (* skoSC1 (* skoMC1 (/ 1. 4.))))))))) (* skoMC1 (+ (- 2.) (* skoMC1 (- 5.))))) (> (* skoMC1 (* skoMC1 (* skoMC1 2.))) 0.) (<= (* skoMC1 (* skoMC1 (* skoMC1 (- 2.)))) 0.) (> (* skoSC1 (* skoMC1 (* skoMC1 skoMC1))) (* skoMC1 (* skoMC1 (* skoMC1 (- 1.))))) (> (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (+ (- 1.) (* skoMC1 3.))))) (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (+ (- 2.) (* skoMC1 (- 3.)))))) (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (+ (/ 1. 6.) (* skoMC1 (- 1.)))))) (* skoSC1 (* skoMC1 (* skoMC1 (* skoMC1 (/ 1. 4.))))))))))) (* skoMC1 (* skoMC1 (* skoMC1 (+ (- 2.) (* skoMC1 (- 5.))))))) (> (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (+ (- 1.) (* skoMC1 3.))))) (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (+ (- 2.) (* skoMC1 (- 3.)))))) (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (* skoMC1 (- 1.))))) (* skoSC1 (* skoMC1 (* skoMC1 (* skoMC1 (/ 1. 12.))))))))))) (* skoMC1 (* skoMC1 (* skoMC1 (+ (- 2.) (* skoMC1 (- 5.))))))) (<= (* skoSC1 (* skoMC1 (* skoMC1 (* skoMC1 (- 1.))))) (* skoMC1 (* skoMC1 skoMC1))) (<= (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (+ 1. (* skoMC1 (- 3.)))))) (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (+ 2. (* skoMC1 3.))))) (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (+ (/ (- 1.) 6.) skoMC1)))) (* skoSC1 (* skoMC1 (* skoMC1 (* skoMC1 (/ (- 1.) 4.))))))))))) (* skoMC1 (* skoMC1 (* skoMC1 (+ 2. (* skoMC1 5.))))))) (succedent (> (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (+ 1. (* skoMC1 (- 3.)))))) (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (+ 2. (* skoMC1 3.))))) (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 skoMC1))) (* skoSC1 (* skoMC1 (* skoMC1 (* skoMC1 (/ (- 1.) 12.))))))))))) (* skoMC1 (* skoMC1 (* skoMC1 (+ 2. (* skoMC1 5.))))))))
-----[end problem]-----

-----[begin problem]-----
% In Mathematica format:
Timing[Resolve[Exists[{skoMC1,skoSC1}, And[skoSC1*skoMC1*skoMC1*skoMC1*2>skoMC1*skoMC1*skoMC1*-2,skoSC1*(skoMC1*skoMC1*skoMC1*skoMC1*-12+skoSC1*(skoMC1*skoMC1*skoMC1*(1+skoMC1*-6)+skoSC1*skoMC1*skoMC1*skoMC1))>skoMC1*skoMC1*skoMC1*(2+skoMC1*6),skoSC1*skoMC1*skoMC1*skoMC1*2>skoMC1*skoMC1*skoMC1*-2,skoMC1>0,skoSC1*skoMC1>skoMC1*-1,skoSC1*(skoMC1*(-1+skoMC1*3)+skoSC1*(skoMC1*(-2+skoMC1*-3)+skoSC1*(skoMC1*skoMC1*-1+skoSC1*skoMC1*(1/12))))>skoMC1*(-2+skoMC1*-5),skoSC1*(skoMC1*(-1+skoMC1*3)+skoSC1*(skoMC1*(-2+skoMC1*-3)+skoSC1*(skoMC1*((1/6)+skoMC1*-1)+skoSC1*skoMC1*(1/4))))>skoMC1*(-2+skoMC1*-5),skoMC1*skoMC1*skoMC1*2>0,skoSC1*skoMC1*skoMC1*skoMC1>skoMC1*skoMC1*skoMC1*-1,skoSC1*(skoMC1*skoMC1*skoMC1*(-1+skoMC1*3)+skoSC1*(skoMC1*skoMC1*skoMC1*(-2+skoMC1*-3)+skoSC1*(skoMC1*skoMC1*skoMC1*((1/6)+skoMC1*-1)+skoSC1*skoMC1*skoMC1*skoMC1*(1/4))))>skoMC1*skoMC1*skoMC1*(-2+skoMC1*-5),skoSC1*(skoMC1*skoMC1*skoMC1*(-1+skoMC1*3)+skoSC1*(skoMC1*skoMC1*skoMC1*(-2+skoMC1*-3)+skoSC1*(skoMC1*skoMC1*skoMC1*skoMC1*-1+skoSC1*skoMC1*skoMC1*skoMC1*(1/12))))>skoMC1*skoMC1*skoMC1*(-2+skoMC1*-5)]], Reals]]

% In QepcadB format:
(E skoMC1) (E skoSC1) [[(skoMC1 skoMC1 skoMC1 (-2))<(skoSC1 skoMC1 skoMC1 skoMC1 (2))]/\[[(skoMC1 skoMC1 skoMC1 (2+(skoMC1 (6))))<(skoSC1 ((skoMC1 skoMC1 skoMC1 skoMC1 (-12))+(skoSC1 ((skoMC1 skoMC1 skoMC1 (1+(skoMC1 (-6))))+(skoSC1 skoMC1 skoMC1 skoMC1)))))]/\[[(skoMC1 skoMC1 skoMC1 (-2))<(skoSC1 skoMC1 skoMC1 skoMC1 (2))]/\[[0<skoMC1]/\[[(skoMC1 (-1))<(skoSC1 skoMC1)]/\[[(skoMC1 (-2+(skoMC1 (-5))))<(skoSC1 ((skoMC1 (-1+(skoMC1 (3))))+(skoSC1 ((skoMC1 (-2+(skoMC1 (-3))))+(skoSC1 ((skoMC1 skoMC1 (-1))+(skoSC1 skoMC1 (1/12))))))))]/\[[(skoMC1 (-2+(skoMC1 (-5))))<(skoSC1 ((skoMC1 (-1+(skoMC1 (3))))+(skoSC1 ((skoMC1 (-2+(skoMC1 (-3))))+(skoSC1 ((skoMC1 (1/6+(skoMC1 (-1))))+(skoSC1 skoMC1 (1/4))))))))]/\[[0<(skoMC1 skoMC1 skoMC1 (2))]/\[[(skoMC1 skoMC1 skoMC1 (-1))<(skoSC1 skoMC1 skoMC1 skoMC1)]/\[[(skoMC1 skoMC1 skoMC1 (-2+(skoMC1 (-5))))<(skoSC1 ((skoMC1 skoMC1 skoMC1 (-1+(skoMC1 (3))))+(skoSC1 ((skoMC1 skoMC1 skoMC1 (-2+(skoMC1 (-3))))+(skoSC1 ((skoMC1 skoMC1 skoMC1 (1/6+(skoMC1 (-1))))+(skoSC1 skoMC1 skoMC1 skoMC1 (1/4))))))))]/\[(skoMC1 skoMC1 skoMC1 (-2+(skoMC1 (-5))))<(skoSC1 ((skoMC1 skoMC1 skoMC1 (-1+(skoMC1 (3))))+(skoSC1 ((skoMC1 skoMC1 skoMC1 (-2+(skoMC1 (-3))))+(skoSC1 ((skoMC1 skoMC1 skoMC1 skoMC1 (-1))+(skoSC1 skoMC1 skoMC1 skoMC1 (1/12))))))))]]]]]]]]]]].

% In SMTLib2 format:
(declare-fun skoMC1 () Real) (declare-fun skoSC1 () Real) (assert (and (> (* skoSC1 (* skoMC1 (* skoMC1 (* skoMC1 2.)))) (* skoMC1 (* skoMC1 (* skoMC1 (- 2.))))) (and (> (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (* skoMC1 (- 12.))))) (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (+ 1. (* skoMC1 (- 6.)))))) (* skoSC1 (* skoMC1 (* skoMC1 skoMC1))))))) (* skoMC1 (* skoMC1 (* skoMC1 (+ 2. (* skoMC1 6.)))))) (and (> (* skoSC1 (* skoMC1 (* skoMC1 (* skoMC1 2.)))) (* skoMC1 (* skoMC1 (* skoMC1 (- 2.))))) (and (> skoMC1 0.) (and (> (* skoSC1 skoMC1) (* skoMC1 (- 1.))) (and (> (* skoSC1 (+ (* skoMC1 (+ (- 1.) (* skoMC1 3.))) (* skoSC1 (+ (* skoMC1 (+ (- 2.) (* skoMC1 (- 3.)))) (* skoSC1 (+ (* skoMC1 (* skoMC1 (- 1.))) (* skoSC1 (* skoMC1 (/ 1. 12.))))))))) (* skoMC1 (+ (- 2.) (* skoMC1 (- 5.))))) (and (> (* skoSC1 (+ (* skoMC1 (+ (- 1.) (* skoMC1 3.))) (* skoSC1 (+ (* skoMC1 (+ (- 2.) (* skoMC1 (- 3.)))) (* skoSC1 (+ (* skoMC1 (+ (/ 1. 6.) (* skoMC1 (- 1.)))) (* skoSC1 (* skoMC1 (/ 1. 4.))))))))) (* skoMC1 (+ (- 2.) (* skoMC1 (- 5.))))) (and (> (* skoMC1 (* skoMC1 (* skoMC1 2.))) 0.) (and (> (* skoSC1 (* skoMC1 (* skoMC1 skoMC1))) (* skoMC1 (* skoMC1 (* skoMC1 (- 1.))))) (and (> (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (+ (- 1.) (* skoMC1 3.))))) (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (+ (- 2.) (* skoMC1 (- 3.)))))) (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (+ (/ 1. 6.) (* skoMC1 (- 1.)))))) (* skoSC1 (* skoMC1 (* skoMC1 (* skoMC1 (/ 1. 4.))))))))))) (* skoMC1 (* skoMC1 (* skoMC1 (+ (- 2.) (* skoMC1 (- 5.))))))) (> (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (+ (- 1.) (* skoMC1 3.))))) (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (+ (- 2.) (* skoMC1 (- 3.)))))) (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (* skoMC1 (- 1.))))) (* skoSC1 (* skoMC1 (* skoMC1 (* skoMC1 (/ 1. 12.))))))))))) (* skoMC1 (* skoMC1 (* skoMC1 (+ (- 2.) (* skoMC1 (- 5.))))))))))))))))))

% In GRF format:
(sequent " MetiTarski formula " (antecedent (> (* skoSC1 (* skoMC1 (* skoMC1 (* skoMC1 2.)))) (* skoMC1 (* skoMC1 (* skoMC1 (- 2.))))) (> (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (* skoMC1 (- 12.))))) (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (+ 1. (* skoMC1 (- 6.)))))) (* skoSC1 (* skoMC1 (* skoMC1 skoMC1))))))) (* skoMC1 (* skoMC1 (* skoMC1 (+ 2. (* skoMC1 6.)))))) (> (* skoSC1 (* skoMC1 (* skoMC1 (* skoMC1 2.)))) (* skoMC1 (* skoMC1 (* skoMC1 (- 2.))))) (> skoMC1 0.) (> (* skoSC1 skoMC1) (* skoMC1 (- 1.))) (> (* skoSC1 (+ (* skoMC1 (+ (- 1.) (* skoMC1 3.))) (* skoSC1 (+ (* skoMC1 (+ (- 2.) (* skoMC1 (- 3.)))) (* skoSC1 (+ (* skoMC1 (* skoMC1 (- 1.))) (* skoSC1 (* skoMC1 (/ 1. 12.))))))))) (* skoMC1 (+ (- 2.) (* skoMC1 (- 5.))))) (> (* skoSC1 (+ (* skoMC1 (+ (- 1.) (* skoMC1 3.))) (* skoSC1 (+ (* skoMC1 (+ (- 2.) (* skoMC1 (- 3.)))) (* skoSC1 (+ (* skoMC1 (+ (/ 1. 6.) (* skoMC1 (- 1.)))) (* skoSC1 (* skoMC1 (/ 1. 4.))))))))) (* skoMC1 (+ (- 2.) (* skoMC1 (- 5.))))) (> (* skoMC1 (* skoMC1 (* skoMC1 2.))) 0.) (> (* skoSC1 (* skoMC1 (* skoMC1 skoMC1))) (* skoMC1 (* skoMC1 (* skoMC1 (- 1.))))) (> (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (+ (- 1.) (* skoMC1 3.))))) (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (+ (- 2.) (* skoMC1 (- 3.)))))) (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (+ (/ 1. 6.) (* skoMC1 (- 1.)))))) (* skoSC1 (* skoMC1 (* skoMC1 (* skoMC1 (/ 1. 4.))))))))))) (* skoMC1 (* skoMC1 (* skoMC1 (+ (- 2.) (* skoMC1 (- 5.)))))))) (succedent (<= (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (+ (- 1.) (* skoMC1 3.))))) (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (+ (- 2.) (* skoMC1 (- 3.)))))) (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (* skoMC1 (- 1.))))) (* skoSC1 (* skoMC1 (* skoMC1 (* skoMC1 (/ 1. 12.))))))))))) (* skoMC1 (* skoMC1 (* skoMC1 (+ (- 2.) (* skoMC1 (- 5.)))))))))
-----[end problem]-----

-----[begin problem]-----
% In Mathematica format:
Timing[Resolve[Exists[{skoSC1,skoMC1}, And[skoMC1*skoMC1*skoMC1*-1<=0,skoSC1*(skoMC1*skoMC1*skoMC1*(1+skoMC1*-3)+skoSC1*(skoMC1*skoMC1*skoMC1*(2+skoMC1*3)+skoSC1*(skoMC1*skoMC1*skoMC1*skoMC1+skoSC1*skoMC1*skoMC1*skoMC1*(-1/12))))<=skoMC1*skoMC1*skoMC1*(2+skoMC1*5),skoSC1*(skoMC1*skoMC1*skoMC1*(1+skoMC1*-3)+skoSC1*(skoMC1*skoMC1*skoMC1*(2+skoMC1*3)+skoSC1*(skoMC1*skoMC1*skoMC1*((-1/6)+skoMC1)+skoSC1*skoMC1*skoMC1*skoMC1*(-1/4))))<=skoMC1*skoMC1*skoMC1*(2+skoMC1*5),skoSC1*skoMC1*skoMC1*skoMC1*-1<=skoMC1*skoMC1*skoMC1,skoSC1*(skoMC1*skoMC1*skoMC1*(-1+skoMC1*3)+skoSC1*(skoMC1*skoMC1*skoMC1*(-2+skoMC1*-3)+skoSC1*(skoMC1*skoMC1*skoMC1*skoMC1*-1+skoSC1*skoMC1*skoMC1*skoMC1*(1/12))))>skoMC1*skoMC1*skoMC1*(-2+skoMC1*-5),skoSC1*(skoMC1*skoMC1*skoMC1*(-1+skoMC1*3)+skoSC1*(skoMC1*skoMC1*skoMC1*(-2+skoMC1*-3)+skoSC1*(skoMC1*skoMC1*skoMC1*((1/6)+skoMC1*-1)+skoSC1*skoMC1*skoMC1*skoMC1*(1/4))))>skoMC1*skoMC1*skoMC1*(-2+skoMC1*-5),skoSC1*skoMC1*skoMC1*skoMC1>skoMC1*skoMC1*skoMC1*-1,skoMC1*skoMC1*skoMC1*-2<=0,skoMC1*skoMC1*skoMC1*2>0,skoSC1*(skoMC1*(-1+skoMC1*3)+skoSC1*(skoMC1*(-2+skoMC1*-3)+skoSC1*(skoMC1*((1/6)+skoMC1*-1)+skoSC1*skoMC1*(1/4))))>skoMC1*(-2+skoMC1*-5),skoSC1*(skoMC1*(-1+skoMC1*3)+skoSC1*(skoMC1*(-2+skoMC1*-3)+skoSC1*(skoMC1*skoMC1*-1+skoSC1*skoMC1*(1/12))))>skoMC1*(-2+skoMC1*-5),skoSC1*(skoMC1*(1+skoMC1*-3)+skoSC1*(skoMC1*(2+skoMC1*3)+skoSC1*(skoMC1*((-1/6)+skoMC1)+skoSC1*skoMC1*(-1/4))))<=skoMC1*(2+skoMC1*5),skoSC1*(skoMC1*(1+skoMC1*-3)+skoSC1*(skoMC1*(2+skoMC1*3)+skoSC1*(skoMC1*skoMC1+skoSC1*skoMC1*(-1/12))))<=skoMC1*(2+skoMC1*5),skoSC1*skoMC1*-1<=skoMC1,skoSC1*skoMC1>skoMC1*-1,0<=skoMC1,skoMC1>0,0<=skoSC1,2<=skoMC1,skoSC1<=(5/4),skoSC1*skoMC1*skoMC1*skoMC1*2>skoMC1*skoMC1*skoMC1*-2,skoSC1*skoMC1*skoMC1*skoMC1*-2<=skoMC1*skoMC1*skoMC1*2,skoSC1*(skoMC1*skoMC1*skoMC1*(-2+skoMC1*-12)+skoSC1*(skoMC1*skoMC1*skoMC1*(1+skoMC1*-6)+skoSC1*(skoMC1*skoMC1*skoMC1+skoSC1*(skoMC1*skoMC1*skoMC1*(-1/12)+skoSC1*skoMC1*skoMC1*skoMC1*(-1/12)))))<=skoMC1*skoMC1*skoMC1*(2+skoMC1*6)]], Reals]]

% In QepcadB format:
(E skoSC1) (E skoMC1) [[(skoMC1 skoMC1 skoMC1 (-1))<=0]/\[[(skoSC1 ((skoMC1 skoMC1 skoMC1 (1+(skoMC1 (-3))))+(skoSC1 ((skoMC1 skoMC1 skoMC1 (2+(skoMC1 (3))))+(skoSC1 ((skoMC1 skoMC1 skoMC1 skoMC1)+(skoSC1 skoMC1 skoMC1 skoMC1 (-1/12))))))))<=(skoMC1 skoMC1 skoMC1 (2+(skoMC1 (5))))]/\[[(skoSC1 ((skoMC1 skoMC1 skoMC1 (1+(skoMC1 (-3))))+(skoSC1 ((skoMC1 skoMC1 skoMC1 (2+(skoMC1 (3))))+(skoSC1 ((skoMC1 skoMC1 skoMC1 (-1/6+skoMC1))+(skoSC1 skoMC1 skoMC1 skoMC1 (-1/4))))))))<=(skoMC1 skoMC1 skoMC1 (2+(skoMC1 (5))))]/\[[(skoSC1 skoMC1 skoMC1 skoMC1 (-1))<=(skoMC1 skoMC1 skoMC1)]/\[[(skoMC1 skoMC1 skoMC1 (-2+(skoMC1 (-5))))<(skoSC1 ((skoMC1 skoMC1 skoMC1 (-1+(skoMC1 (3))))+(skoSC1 ((skoMC1 skoMC1 skoMC1 (-2+(skoMC1 (-3))))+(skoSC1 ((skoMC1 skoMC1 skoMC1 skoMC1 (-1))+(skoSC1 skoMC1 skoMC1 skoMC1 (1/12))))))))]/\[[(skoMC1 skoMC1 skoMC1 (-2+(skoMC1 (-5))))<(skoSC1 ((skoMC1 skoMC1 skoMC1 (-1+(skoMC1 (3))))+(skoSC1 ((skoMC1 skoMC1 skoMC1 (-2+(skoMC1 (-3))))+(skoSC1 ((skoMC1 skoMC1 skoMC1 (1/6+(skoMC1 (-1))))+(skoSC1 skoMC1 skoMC1 skoMC1 (1/4))))))))]/\[[(skoMC1 skoMC1 skoMC1 (-1))<(skoSC1 skoMC1 skoMC1 skoMC1)]/\[[(skoMC1 skoMC1 skoMC1 (-2))<=0]/\[[0<(skoMC1 skoMC1 skoMC1 (2))]/\[[(skoMC1 (-2+(skoMC1 (-5))))<(skoSC1 ((skoMC1 (-1+(skoMC1 (3))))+(skoSC1 ((skoMC1 (-2+(skoMC1 (-3))))+(skoSC1 ((skoMC1 (1/6+(skoMC1 (-1))))+(skoSC1 skoMC1 (1/4))))))))]/\[[(skoMC1 (-2+(skoMC1 (-5))))<(skoSC1 ((skoMC1 (-1+(skoMC1 (3))))+(skoSC1 ((skoMC1 (-2+(skoMC1 (-3))))+(skoSC1 ((skoMC1 skoMC1 (-1))+(skoSC1 skoMC1 (1/12))))))))]/\[[(skoSC1 ((skoMC1 (1+(skoMC1 (-3))))+(skoSC1 ((skoMC1 (2+(skoMC1 (3))))+(skoSC1 ((skoMC1 (-1/6+skoMC1))+(skoSC1 skoMC1 (-1/4))))))))<=(skoMC1 (2+(skoMC1 (5))))]/\[[(skoSC1 ((skoMC1 (1+(skoMC1 (-3))))+(skoSC1 ((skoMC1 (2+(skoMC1 (3))))+(skoSC1 ((skoMC1 skoMC1)+(skoSC1 skoMC1 (-1/12))))))))<=(skoMC1 (2+(skoMC1 (5))))]/\[[(skoSC1 skoMC1 (-1))<=skoMC1]/\[[(skoMC1 (-1))<(skoSC1 skoMC1)]/\[[0<=skoMC1]/\[[0<skoMC1]/\[[0<=skoSC1]/\[[2<=skoMC1]/\[[skoSC1<=5/4]/\[[(skoMC1 skoMC1 skoMC1 (-2))<(skoSC1 skoMC1 skoMC1 skoMC1 (2))]/\[[(skoSC1 skoMC1 skoMC1 skoMC1 (-2))<=(skoMC1 skoMC1 skoMC1 (2))]/\[(skoSC1 ((skoMC1 skoMC1 skoMC1 (-2+(skoMC1 (-12))))+(skoSC1 ((skoMC1 skoMC1 skoMC1 (1+(skoMC1 (-6))))+(skoSC1 ((skoMC1 skoMC1 skoMC1)+(skoSC1 ((skoMC1 skoMC1 skoMC1 (-1/12))+(skoSC1 skoMC1 skoMC1 skoMC1 (-1/12))))))))))<=(skoMC1 skoMC1 skoMC1 (2+(skoMC1 (6))))]]]]]]]]]]]]]]]]]]]]]]].

% In SMTLib2 format:
(declare-fun skoSC1 () Real) (declare-fun skoMC1 () Real) (assert (and (<= (* skoMC1 (* skoMC1 (* skoMC1 (- 1.)))) 0.) (and (<= (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (+ 1. (* skoMC1 (- 3.)))))) (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (+ 2. (* skoMC1 3.))))) (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 skoMC1))) (* skoSC1 (* skoMC1 (* skoMC1 (* skoMC1 (/ (- 1.) 12.))))))))))) (* skoMC1 (* skoMC1 (* skoMC1 (+ 2. (* skoMC1 5.)))))) (and (<= (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (+ 1. (* skoMC1 (- 3.)))))) (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (+ 2. (* skoMC1 3.))))) (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (+ (/ (- 1.) 6.) skoMC1)))) (* skoSC1 (* skoMC1 (* skoMC1 (* skoMC1 (/ (- 1.) 4.))))))))))) (* skoMC1 (* skoMC1 (* skoMC1 (+ 2. (* skoMC1 5.)))))) (and (<= (* skoSC1 (* skoMC1 (* skoMC1 (* skoMC1 (- 1.))))) (* skoMC1 (* skoMC1 skoMC1))) (and (> (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (+ (- 1.) (* skoMC1 3.))))) (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (+ (- 2.) (* skoMC1 (- 3.)))))) (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (* skoMC1 (- 1.))))) (* skoSC1 (* skoMC1 (* skoMC1 (* skoMC1 (/ 1. 12.))))))))))) (* skoMC1 (* skoMC1 (* skoMC1 (+ (- 2.) (* skoMC1 (- 5.))))))) (and (> (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (+ (- 1.) (* skoMC1 3.))))) (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (+ (- 2.) (* skoMC1 (- 3.)))))) (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (+ (/ 1. 6.) (* skoMC1 (- 1.)))))) (* skoSC1 (* skoMC1 (* skoMC1 (* skoMC1 (/ 1. 4.))))))))))) (* skoMC1 (* skoMC1 (* skoMC1 (+ (- 2.) (* skoMC1 (- 5.))))))) (and (> (* skoSC1 (* skoMC1 (* skoMC1 skoMC1))) (* skoMC1 (* skoMC1 (* skoMC1 (- 1.))))) (and (<= (* skoMC1 (* skoMC1 (* skoMC1 (- 2.)))) 0.) (and (> (* skoMC1 (* skoMC1 (* skoMC1 2.))) 0.) (and (> (* skoSC1 (+ (* skoMC1 (+ (- 1.) (* skoMC1 3.))) (* skoSC1 (+ (* skoMC1 (+ (- 2.) (* skoMC1 (- 3.)))) (* skoSC1 (+ (* skoMC1 (+ (/ 1. 6.) (* skoMC1 (- 1.)))) (* skoSC1 (* skoMC1 (/ 1. 4.))))))))) (* skoMC1 (+ (- 2.) (* skoMC1 (- 5.))))) (and (> (* skoSC1 (+ (* skoMC1 (+ (- 1.) (* skoMC1 3.))) (* skoSC1 (+ (* skoMC1 (+ (- 2.) (* skoMC1 (- 3.)))) (* skoSC1 (+ (* skoMC1 (* skoMC1 (- 1.))) (* skoSC1 (* skoMC1 (/ 1. 12.))))))))) (* skoMC1 (+ (- 2.) (* skoMC1 (- 5.))))) (and (<= (* skoSC1 (+ (* skoMC1 (+ 1. (* skoMC1 (- 3.)))) (* skoSC1 (+ (* skoMC1 (+ 2. (* skoMC1 3.))) (* skoSC1 (+ (* skoMC1 (+ (/ (- 1.) 6.) skoMC1)) (* skoSC1 (* skoMC1 (/ (- 1.) 4.))))))))) (* skoMC1 (+ 2. (* skoMC1 5.)))) (and (<= (* skoSC1 (+ (* skoMC1 (+ 1. (* skoMC1 (- 3.)))) (* skoSC1 (+ (* skoMC1 (+ 2. (* skoMC1 3.))) (* skoSC1 (+ (* skoMC1 skoMC1) (* skoSC1 (* skoMC1 (/ (- 1.) 12.))))))))) (* skoMC1 (+ 2. (* skoMC1 5.)))) (and (<= (* skoSC1 (* skoMC1 (- 1.))) skoMC1) (and (> (* skoSC1 skoMC1) (* skoMC1 (- 1.))) (and (<= 0. skoMC1) (and (> skoMC1 0.) (and (<= 0. skoSC1) (and (<= 2. skoMC1) (and (<= skoSC1 (/ 5. 4.)) (and (> (* skoSC1 (* skoMC1 (* skoMC1 (* skoMC1 2.)))) (* skoMC1 (* skoMC1 (* skoMC1 (- 2.))))) (and (<= (* skoSC1 (* skoMC1 (* skoMC1 (* skoMC1 (- 2.))))) (* skoMC1 (* skoMC1 (* skoMC1 2.)))) (<= (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (+ (- 2.) (* skoMC1 (- 12.)))))) (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (+ 1. (* skoMC1 (- 6.)))))) (* skoSC1 (+ (* skoMC1 (* skoMC1 skoMC1)) (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (/ (- 1.) 12.)))) (* skoSC1 (* skoMC1 (* skoMC1 (* skoMC1 (/ (- 1.) 12.))))))))))))) (* skoMC1 (* skoMC1 (* skoMC1 (+ 2. (* skoMC1 6.)))))))))))))))))))))))))))))

% In GRF format:
(sequent " MetiTarski formula " (antecedent (<= (* skoMC1 (* skoMC1 (* skoMC1 (- 1.)))) 0.) (<= (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (+ 1. (* skoMC1 (- 3.)))))) (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (+ 2. (* skoMC1 3.))))) (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 skoMC1))) (* skoSC1 (* skoMC1 (* skoMC1 (* skoMC1 (/ (- 1.) 12.))))))))))) (* skoMC1 (* skoMC1 (* skoMC1 (+ 2. (* skoMC1 5.)))))) (<= (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (+ 1. (* skoMC1 (- 3.)))))) (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (+ 2. (* skoMC1 3.))))) (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (+ (/ (- 1.) 6.) skoMC1)))) (* skoSC1 (* skoMC1 (* skoMC1 (* skoMC1 (/ (- 1.) 4.))))))))))) (* skoMC1 (* skoMC1 (* skoMC1 (+ 2. (* skoMC1 5.)))))) (<= (* skoSC1 (* skoMC1 (* skoMC1 (* skoMC1 (- 1.))))) (* skoMC1 (* skoMC1 skoMC1))) (> (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (+ (- 1.) (* skoMC1 3.))))) (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (+ (- 2.) (* skoMC1 (- 3.)))))) (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (* skoMC1 (- 1.))))) (* skoSC1 (* skoMC1 (* skoMC1 (* skoMC1 (/ 1. 12.))))))))))) (* skoMC1 (* skoMC1 (* skoMC1 (+ (- 2.) (* skoMC1 (- 5.))))))) (> (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (+ (- 1.) (* skoMC1 3.))))) (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (+ (- 2.) (* skoMC1 (- 3.)))))) (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (+ (/ 1. 6.) (* skoMC1 (- 1.)))))) (* skoSC1 (* skoMC1 (* skoMC1 (* skoMC1 (/ 1. 4.))))))))))) (* skoMC1 (* skoMC1 (* skoMC1 (+ (- 2.) (* skoMC1 (- 5.))))))) (> (* skoSC1 (* skoMC1 (* skoMC1 skoMC1))) (* skoMC1 (* skoMC1 (* skoMC1 (- 1.))))) (<= (* skoMC1 (* skoMC1 (* skoMC1 (- 2.)))) 0.) (> (* skoMC1 (* skoMC1 (* skoMC1 2.))) 0.) (> (* skoSC1 (+ (* skoMC1 (+ (- 1.) (* skoMC1 3.))) (* skoSC1 (+ (* skoMC1 (+ (- 2.) (* skoMC1 (- 3.)))) (* skoSC1 (+ (* skoMC1 (+ (/ 1. 6.) (* skoMC1 (- 1.)))) (* skoSC1 (* skoMC1 (/ 1. 4.))))))))) (* skoMC1 (+ (- 2.) (* skoMC1 (- 5.))))) (> (* skoSC1 (+ (* skoMC1 (+ (- 1.) (* skoMC1 3.))) (* skoSC1 (+ (* skoMC1 (+ (- 2.) (* skoMC1 (- 3.)))) (* skoSC1 (+ (* skoMC1 (* skoMC1 (- 1.))) (* skoSC1 (* skoMC1 (/ 1. 12.))))))))) (* skoMC1 (+ (- 2.) (* skoMC1 (- 5.))))) (<= (* skoSC1 (+ (* skoMC1 (+ 1. (* skoMC1 (- 3.)))) (* skoSC1 (+ (* skoMC1 (+ 2. (* skoMC1 3.))) (* skoSC1 (+ (* skoMC1 (+ (/ (- 1.) 6.) skoMC1)) (* skoSC1 (* skoMC1 (/ (- 1.) 4.))))))))) (* skoMC1 (+ 2. (* skoMC1 5.)))) (<= (* skoSC1 (+ (* skoMC1 (+ 1. (* skoMC1 (- 3.)))) (* skoSC1 (+ (* skoMC1 (+ 2. (* skoMC1 3.))) (* skoSC1 (+ (* skoMC1 skoMC1) (* skoSC1 (* skoMC1 (/ (- 1.) 12.))))))))) (* skoMC1 (+ 2. (* skoMC1 5.)))) (<= (* skoSC1 (* skoMC1 (- 1.))) skoMC1) (> (* skoSC1 skoMC1) (* skoMC1 (- 1.))) (<= 0. skoMC1) (> skoMC1 0.) (<= 0. skoSC1) (<= 2. skoMC1) (<= skoSC1 (/ 5. 4.)) (> (* skoSC1 (* skoMC1 (* skoMC1 (* skoMC1 2.)))) (* skoMC1 (* skoMC1 (* skoMC1 (- 2.))))) (<= (* skoSC1 (* skoMC1 (* skoMC1 (* skoMC1 (- 2.))))) (* skoMC1 (* skoMC1 (* skoMC1 2.))))) (succedent (> (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (+ (- 2.) (* skoMC1 (- 12.)))))) (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (+ 1. (* skoMC1 (- 6.)))))) (* skoSC1 (+ (* skoMC1 (* skoMC1 skoMC1)) (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (/ (- 1.) 12.)))) (* skoSC1 (* skoMC1 (* skoMC1 (* skoMC1 (/ (- 1.) 12.))))))))))))) (* skoMC1 (* skoMC1 (* skoMC1 (+ 2. (* skoMC1 6.))))))))
-----[end problem]-----

-----[begin problem]-----
% In Mathematica format:
Timing[Resolve[Exists[{skoSC1,skoMC1}, And[skoMC1*skoMC1*skoMC1*-1>0,skoSC1*skoMC1*skoMC1*skoMC1*-2>skoMC1*skoMC1*skoMC1*2,skoSC1*(skoMC1*skoMC1*skoMC1*skoMC1*-12+skoSC1*(skoMC1*skoMC1*skoMC1*(1+skoMC1*-6)+skoSC1*(skoMC1*skoMC1*skoMC1+skoSC1*(skoMC1*skoMC1*skoMC1*(-1/12)+skoSC1*skoMC1*skoMC1*skoMC1*(-1/12)))))>skoMC1*skoMC1*skoMC1*(2+skoMC1*6),skoSC1*(skoMC1*skoMC1*skoMC1*(-1+skoMC1*3)+skoSC1*(skoMC1*skoMC1*skoMC1*(-2+skoMC1*-3)+skoSC1*(skoMC1*skoMC1*skoMC1*skoMC1*-1+skoSC1*skoMC1*skoMC1*skoMC1*(1/12))))>skoMC1*skoMC1*skoMC1*(-2+skoMC1*-5),skoSC1*(skoMC1*skoMC1*skoMC1*(-1+skoMC1*3)+skoSC1*(skoMC1*skoMC1*skoMC1*(-2+skoMC1*-3)+skoSC1*(skoMC1*skoMC1*skoMC1*((1/6)+skoMC1*-1)+skoSC1*skoMC1*skoMC1*skoMC1*(1/4))))>skoMC1*skoMC1*skoMC1*(-2+skoMC1*-5),skoSC1*skoMC1*skoMC1*skoMC1>skoMC1*skoMC1*skoMC1*-1,skoMC1*skoMC1*skoMC1*2>0,skoSC1*(skoMC1*(-1+skoMC1*3)+skoSC1*(skoMC1*(-2+skoMC1*-3)+skoSC1*(skoMC1*((1/6)+skoMC1*-1)+skoSC1*skoMC1*(1/4))))>skoMC1*(-2+skoMC1*-5),skoSC1*(skoMC1*(-1+skoMC1*3)+skoSC1*(skoMC1*(-2+skoMC1*-3)+skoSC1*(skoMC1*skoMC1*-1+skoSC1*skoMC1*(1/12))))>skoMC1*(-2+skoMC1*-5),skoSC1*skoMC1>skoMC1*-1,skoMC1>0,skoSC1*skoMC1*skoMC1*skoMC1*2>skoMC1*skoMC1*skoMC1*-2]], Reals]]

% In QepcadB format:
(E skoSC1) (E skoMC1) [[0<(skoMC1 skoMC1 skoMC1 (-1))]/\[[(skoMC1 skoMC1 skoMC1 (2))<(skoSC1 skoMC1 skoMC1 skoMC1 (-2))]/\[[(skoMC1 skoMC1 skoMC1 (2+(skoMC1 (6))))<(skoSC1 ((skoMC1 skoMC1 skoMC1 skoMC1 (-12))+(skoSC1 ((skoMC1 skoMC1 skoMC1 (1+(skoMC1 (-6))))+(skoSC1 ((skoMC1 skoMC1 skoMC1)+(skoSC1 ((skoMC1 skoMC1 skoMC1 (-1/12))+(skoSC1 skoMC1 skoMC1 skoMC1 (-1/12))))))))))]/\[[(skoMC1 skoMC1 skoMC1 (-2+(skoMC1 (-5))))<(skoSC1 ((skoMC1 skoMC1 skoMC1 (-1+(skoMC1 (3))))+(skoSC1 ((skoMC1 skoMC1 skoMC1 (-2+(skoMC1 (-3))))+(skoSC1 ((skoMC1 skoMC1 skoMC1 skoMC1 (-1))+(skoSC1 skoMC1 skoMC1 skoMC1 (1/12))))))))]/\[[(skoMC1 skoMC1 skoMC1 (-2+(skoMC1 (-5))))<(skoSC1 ((skoMC1 skoMC1 skoMC1 (-1+(skoMC1 (3))))+(skoSC1 ((skoMC1 skoMC1 skoMC1 (-2+(skoMC1 (-3))))+(skoSC1 ((skoMC1 skoMC1 skoMC1 (1/6+(skoMC1 (-1))))+(skoSC1 skoMC1 skoMC1 skoMC1 (1/4))))))))]/\[[(skoMC1 skoMC1 skoMC1 (-1))<(skoSC1 skoMC1 skoMC1 skoMC1)]/\[[0<(skoMC1 skoMC1 skoMC1 (2))]/\[[(skoMC1 (-2+(skoMC1 (-5))))<(skoSC1 ((skoMC1 (-1+(skoMC1 (3))))+(skoSC1 ((skoMC1 (-2+(skoMC1 (-3))))+(skoSC1 ((skoMC1 (1/6+(skoMC1 (-1))))+(skoSC1 skoMC1 (1/4))))))))]/\[[(skoMC1 (-2+(skoMC1 (-5))))<(skoSC1 ((skoMC1 (-1+(skoMC1 (3))))+(skoSC1 ((skoMC1 (-2+(skoMC1 (-3))))+(skoSC1 ((skoMC1 skoMC1 (-1))+(skoSC1 skoMC1 (1/12))))))))]/\[[(skoMC1 (-1))<(skoSC1 skoMC1)]/\[[0<skoMC1]/\[(skoMC1 skoMC1 skoMC1 (-2))<(skoSC1 skoMC1 skoMC1 skoMC1 (2))]]]]]]]]]]]].

% In SMTLib2 format:
(declare-fun skoSC1 () Real) (declare-fun skoMC1 () Real) (assert (and (> (* skoMC1 (* skoMC1 (* skoMC1 (- 1.)))) 0.) (and (> (* skoSC1 (* skoMC1 (* skoMC1 (* skoMC1 (- 2.))))) (* skoMC1 (* skoMC1 (* skoMC1 2.)))) (and (> (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (* skoMC1 (- 12.))))) (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (+ 1. (* skoMC1 (- 6.)))))) (* skoSC1 (+ (* skoMC1 (* skoMC1 skoMC1)) (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (/ (- 1.) 12.)))) (* skoSC1 (* skoMC1 (* skoMC1 (* skoMC1 (/ (- 1.) 12.))))))))))))) (* skoMC1 (* skoMC1 (* skoMC1 (+ 2. (* skoMC1 6.)))))) (and (> (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (+ (- 1.) (* skoMC1 3.))))) (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (+ (- 2.) (* skoMC1 (- 3.)))))) (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (* skoMC1 (- 1.))))) (* skoSC1 (* skoMC1 (* skoMC1 (* skoMC1 (/ 1. 12.))))))))))) (* skoMC1 (* skoMC1 (* skoMC1 (+ (- 2.) (* skoMC1 (- 5.))))))) (and (> (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (+ (- 1.) (* skoMC1 3.))))) (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (+ (- 2.) (* skoMC1 (- 3.)))))) (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (+ (/ 1. 6.) (* skoMC1 (- 1.)))))) (* skoSC1 (* skoMC1 (* skoMC1 (* skoMC1 (/ 1. 4.))))))))))) (* skoMC1 (* skoMC1 (* skoMC1 (+ (- 2.) (* skoMC1 (- 5.))))))) (and (> (* skoSC1 (* skoMC1 (* skoMC1 skoMC1))) (* skoMC1 (* skoMC1 (* skoMC1 (- 1.))))) (and (> (* skoMC1 (* skoMC1 (* skoMC1 2.))) 0.) (and (> (* skoSC1 (+ (* skoMC1 (+ (- 1.) (* skoMC1 3.))) (* skoSC1 (+ (* skoMC1 (+ (- 2.) (* skoMC1 (- 3.)))) (* skoSC1 (+ (* skoMC1 (+ (/ 1. 6.) (* skoMC1 (- 1.)))) (* skoSC1 (* skoMC1 (/ 1. 4.))))))))) (* skoMC1 (+ (- 2.) (* skoMC1 (- 5.))))) (and (> (* skoSC1 (+ (* skoMC1 (+ (- 1.) (* skoMC1 3.))) (* skoSC1 (+ (* skoMC1 (+ (- 2.) (* skoMC1 (- 3.)))) (* skoSC1 (+ (* skoMC1 (* skoMC1 (- 1.))) (* skoSC1 (* skoMC1 (/ 1. 12.))))))))) (* skoMC1 (+ (- 2.) (* skoMC1 (- 5.))))) (and (> (* skoSC1 skoMC1) (* skoMC1 (- 1.))) (and (> skoMC1 0.) (> (* skoSC1 (* skoMC1 (* skoMC1 (* skoMC1 2.)))) (* skoMC1 (* skoMC1 (* skoMC1 (- 2.)))))))))))))))))

% In GRF format:
(sequent " MetiTarski formula " (antecedent (> (* skoMC1 (* skoMC1 (* skoMC1 (- 1.)))) 0.) (> (* skoSC1 (* skoMC1 (* skoMC1 (* skoMC1 (- 2.))))) (* skoMC1 (* skoMC1 (* skoMC1 2.)))) (> (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (* skoMC1 (- 12.))))) (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (+ 1. (* skoMC1 (- 6.)))))) (* skoSC1 (+ (* skoMC1 (* skoMC1 skoMC1)) (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (/ (- 1.) 12.)))) (* skoSC1 (* skoMC1 (* skoMC1 (* skoMC1 (/ (- 1.) 12.))))))))))))) (* skoMC1 (* skoMC1 (* skoMC1 (+ 2. (* skoMC1 6.)))))) (> (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (+ (- 1.) (* skoMC1 3.))))) (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (+ (- 2.) (* skoMC1 (- 3.)))))) (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (* skoMC1 (- 1.))))) (* skoSC1 (* skoMC1 (* skoMC1 (* skoMC1 (/ 1. 12.))))))))))) (* skoMC1 (* skoMC1 (* skoMC1 (+ (- 2.) (* skoMC1 (- 5.))))))) (> (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (+ (- 1.) (* skoMC1 3.))))) (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (+ (- 2.) (* skoMC1 (- 3.)))))) (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (+ (/ 1. 6.) (* skoMC1 (- 1.)))))) (* skoSC1 (* skoMC1 (* skoMC1 (* skoMC1 (/ 1. 4.))))))))))) (* skoMC1 (* skoMC1 (* skoMC1 (+ (- 2.) (* skoMC1 (- 5.))))))) (> (* skoSC1 (* skoMC1 (* skoMC1 skoMC1))) (* skoMC1 (* skoMC1 (* skoMC1 (- 1.))))) (> (* skoMC1 (* skoMC1 (* skoMC1 2.))) 0.) (> (* skoSC1 (+ (* skoMC1 (+ (- 1.) (* skoMC1 3.))) (* skoSC1 (+ (* skoMC1 (+ (- 2.) (* skoMC1 (- 3.)))) (* skoSC1 (+ (* skoMC1 (+ (/ 1. 6.) (* skoMC1 (- 1.)))) (* skoSC1 (* skoMC1 (/ 1. 4.))))))))) (* skoMC1 (+ (- 2.) (* skoMC1 (- 5.))))) (> (* skoSC1 (+ (* skoMC1 (+ (- 1.) (* skoMC1 3.))) (* skoSC1 (+ (* skoMC1 (+ (- 2.) (* skoMC1 (- 3.)))) (* skoSC1 (+ (* skoMC1 (* skoMC1 (- 1.))) (* skoSC1 (* skoMC1 (/ 1. 12.))))))))) (* skoMC1 (+ (- 2.) (* skoMC1 (- 5.))))) (> (* skoSC1 skoMC1) (* skoMC1 (- 1.))) (> skoMC1 0.)) (succedent (<= (* skoSC1 (* skoMC1 (* skoMC1 (* skoMC1 2.)))) (* skoMC1 (* skoMC1 (* skoMC1 (- 2.)))))))
-----[end problem]-----

-----[begin problem]-----
% In Mathematica format:
Timing[Resolve[Exists[{skoSC1,skoMC1}, And[skoMC1*skoMC1*skoMC1*-1>0,skoSC1*skoMC1*skoMC1*skoMC1*2>skoMC1*skoMC1*skoMC1*-2,skoSC1*(skoMC1*skoMC1*skoMC1*skoMC1*12+skoSC1*(skoMC1*skoMC1*skoMC1*(-1+skoMC1*6)+skoSC1*(skoMC1*skoMC1*skoMC1*-1+skoSC1*(skoMC1*skoMC1*skoMC1*(1/12)+skoSC1*skoMC1*skoMC1*skoMC1*(1/12)))))>skoMC1*skoMC1*skoMC1*(-2+skoMC1*-6),skoSC1*(skoMC1*skoMC1*skoMC1*(-1+skoMC1*3)+skoSC1*(skoMC1*skoMC1*skoMC1*(-2+skoMC1*-3)+skoSC1*(skoMC1*skoMC1*skoMC1*skoMC1*-1+skoSC1*skoMC1*skoMC1*skoMC1*(1/12))))>skoMC1*skoMC1*skoMC1*(-2+skoMC1*-5),skoSC1*(skoMC1*skoMC1*skoMC1*(-1+skoMC1*3)+skoSC1*(skoMC1*skoMC1*skoMC1*(-2+skoMC1*-3)+skoSC1*(skoMC1*skoMC1*skoMC1*((1/6)+skoMC1*-1)+skoSC1*skoMC1*skoMC1*skoMC1*(1/4))))>skoMC1*skoMC1*skoMC1*(-2+skoMC1*-5),skoSC1*skoMC1*skoMC1*skoMC1>skoMC1*skoMC1*skoMC1*-1,skoMC1*skoMC1*skoMC1*2>0,skoSC1*(skoMC1*(-1+skoMC1*3)+skoSC1*(skoMC1*(-2+skoMC1*-3)+skoSC1*(skoMC1*((1/6)+skoMC1*-1)+skoSC1*skoMC1*(1/4))))>skoMC1*(-2+skoMC1*-5),skoSC1*(skoMC1*(-1+skoMC1*3)+skoSC1*(skoMC1*(-2+skoMC1*-3)+skoSC1*(skoMC1*skoMC1*-1+skoSC1*skoMC1*(1/12))))>skoMC1*(-2+skoMC1*-5),skoSC1*skoMC1>skoMC1*-1,skoMC1>0,skoSC1*skoMC1*skoMC1*skoMC1*2>skoMC1*skoMC1*skoMC1*-2]], Reals]]

% In QepcadB format:
(E skoSC1) (E skoMC1) [[0<(skoMC1 skoMC1 skoMC1 (-1))]/\[[(skoMC1 skoMC1 skoMC1 (-2))<(skoSC1 skoMC1 skoMC1 skoMC1 (2))]/\[[(skoMC1 skoMC1 skoMC1 (-2+(skoMC1 (-6))))<(skoSC1 ((skoMC1 skoMC1 skoMC1 skoMC1 (12))+(skoSC1 ((skoMC1 skoMC1 skoMC1 (-1+(skoMC1 (6))))+(skoSC1 ((skoMC1 skoMC1 skoMC1 (-1))+(skoSC1 ((skoMC1 skoMC1 skoMC1 (1/12))+(skoSC1 skoMC1 skoMC1 skoMC1 (1/12))))))))))]/\[[(skoMC1 skoMC1 skoMC1 (-2+(skoMC1 (-5))))<(skoSC1 ((skoMC1 skoMC1 skoMC1 (-1+(skoMC1 (3))))+(skoSC1 ((skoMC1 skoMC1 skoMC1 (-2+(skoMC1 (-3))))+(skoSC1 ((skoMC1 skoMC1 skoMC1 skoMC1 (-1))+(skoSC1 skoMC1 skoMC1 skoMC1 (1/12))))))))]/\[[(skoMC1 skoMC1 skoMC1 (-2+(skoMC1 (-5))))<(skoSC1 ((skoMC1 skoMC1 skoMC1 (-1+(skoMC1 (3))))+(skoSC1 ((skoMC1 skoMC1 skoMC1 (-2+(skoMC1 (-3))))+(skoSC1 ((skoMC1 skoMC1 skoMC1 (1/6+(skoMC1 (-1))))+(skoSC1 skoMC1 skoMC1 skoMC1 (1/4))))))))]/\[[(skoMC1 skoMC1 skoMC1 (-1))<(skoSC1 skoMC1 skoMC1 skoMC1)]/\[[0<(skoMC1 skoMC1 skoMC1 (2))]/\[[(skoMC1 (-2+(skoMC1 (-5))))<(skoSC1 ((skoMC1 (-1+(skoMC1 (3))))+(skoSC1 ((skoMC1 (-2+(skoMC1 (-3))))+(skoSC1 ((skoMC1 (1/6+(skoMC1 (-1))))+(skoSC1 skoMC1 (1/4))))))))]/\[[(skoMC1 (-2+(skoMC1 (-5))))<(skoSC1 ((skoMC1 (-1+(skoMC1 (3))))+(skoSC1 ((skoMC1 (-2+(skoMC1 (-3))))+(skoSC1 ((skoMC1 skoMC1 (-1))+(skoSC1 skoMC1 (1/12))))))))]/\[[(skoMC1 (-1))<(skoSC1 skoMC1)]/\[[0<skoMC1]/\[(skoMC1 skoMC1 skoMC1 (-2))<(skoSC1 skoMC1 skoMC1 skoMC1 (2))]]]]]]]]]]]].

% In SMTLib2 format:
(declare-fun skoSC1 () Real) (declare-fun skoMC1 () Real) (assert (and (> (* skoMC1 (* skoMC1 (* skoMC1 (- 1.)))) 0.) (and (> (* skoSC1 (* skoMC1 (* skoMC1 (* skoMC1 2.)))) (* skoMC1 (* skoMC1 (* skoMC1 (- 2.))))) (and (> (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (* skoMC1 12.)))) (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (+ (- 1.) (* skoMC1 6.))))) (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (- 1.)))) (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (/ 1. 12.)))) (* skoSC1 (* skoMC1 (* skoMC1 (* skoMC1 (/ 1. 12.))))))))))))) (* skoMC1 (* skoMC1 (* skoMC1 (+ (- 2.) (* skoMC1 (- 6.))))))) (and (> (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (+ (- 1.) (* skoMC1 3.))))) (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (+ (- 2.) (* skoMC1 (- 3.)))))) (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (* skoMC1 (- 1.))))) (* skoSC1 (* skoMC1 (* skoMC1 (* skoMC1 (/ 1. 12.))))))))))) (* skoMC1 (* skoMC1 (* skoMC1 (+ (- 2.) (* skoMC1 (- 5.))))))) (and (> (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (+ (- 1.) (* skoMC1 3.))))) (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (+ (- 2.) (* skoMC1 (- 3.)))))) (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (+ (/ 1. 6.) (* skoMC1 (- 1.)))))) (* skoSC1 (* skoMC1 (* skoMC1 (* skoMC1 (/ 1. 4.))))))))))) (* skoMC1 (* skoMC1 (* skoMC1 (+ (- 2.) (* skoMC1 (- 5.))))))) (and (> (* skoSC1 (* skoMC1 (* skoMC1 skoMC1))) (* skoMC1 (* skoMC1 (* skoMC1 (- 1.))))) (and (> (* skoMC1 (* skoMC1 (* skoMC1 2.))) 0.) (and (> (* skoSC1 (+ (* skoMC1 (+ (- 1.) (* skoMC1 3.))) (* skoSC1 (+ (* skoMC1 (+ (- 2.) (* skoMC1 (- 3.)))) (* skoSC1 (+ (* skoMC1 (+ (/ 1. 6.) (* skoMC1 (- 1.)))) (* skoSC1 (* skoMC1 (/ 1. 4.))))))))) (* skoMC1 (+ (- 2.) (* skoMC1 (- 5.))))) (and (> (* skoSC1 (+ (* skoMC1 (+ (- 1.) (* skoMC1 3.))) (* skoSC1 (+ (* skoMC1 (+ (- 2.) (* skoMC1 (- 3.)))) (* skoSC1 (+ (* skoMC1 (* skoMC1 (- 1.))) (* skoSC1 (* skoMC1 (/ 1. 12.))))))))) (* skoMC1 (+ (- 2.) (* skoMC1 (- 5.))))) (and (> (* skoSC1 skoMC1) (* skoMC1 (- 1.))) (and (> skoMC1 0.) (> (* skoSC1 (* skoMC1 (* skoMC1 (* skoMC1 2.)))) (* skoMC1 (* skoMC1 (* skoMC1 (- 2.)))))))))))))))))

% In GRF format:
(sequent " MetiTarski formula " (antecedent (> (* skoMC1 (* skoMC1 (* skoMC1 (- 1.)))) 0.) (> (* skoSC1 (* skoMC1 (* skoMC1 (* skoMC1 2.)))) (* skoMC1 (* skoMC1 (* skoMC1 (- 2.))))) (> (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (* skoMC1 12.)))) (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (+ (- 1.) (* skoMC1 6.))))) (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (- 1.)))) (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (/ 1. 12.)))) (* skoSC1 (* skoMC1 (* skoMC1 (* skoMC1 (/ 1. 12.))))))))))))) (* skoMC1 (* skoMC1 (* skoMC1 (+ (- 2.) (* skoMC1 (- 6.))))))) (> (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (+ (- 1.) (* skoMC1 3.))))) (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (+ (- 2.) (* skoMC1 (- 3.)))))) (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (* skoMC1 (- 1.))))) (* skoSC1 (* skoMC1 (* skoMC1 (* skoMC1 (/ 1. 12.))))))))))) (* skoMC1 (* skoMC1 (* skoMC1 (+ (- 2.) (* skoMC1 (- 5.))))))) (> (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (+ (- 1.) (* skoMC1 3.))))) (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (+ (- 2.) (* skoMC1 (- 3.)))))) (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (+ (/ 1. 6.) (* skoMC1 (- 1.)))))) (* skoSC1 (* skoMC1 (* skoMC1 (* skoMC1 (/ 1. 4.))))))))))) (* skoMC1 (* skoMC1 (* skoMC1 (+ (- 2.) (* skoMC1 (- 5.))))))) (> (* skoSC1 (* skoMC1 (* skoMC1 skoMC1))) (* skoMC1 (* skoMC1 (* skoMC1 (- 1.))))) (> (* skoMC1 (* skoMC1 (* skoMC1 2.))) 0.) (> (* skoSC1 (+ (* skoMC1 (+ (- 1.) (* skoMC1 3.))) (* skoSC1 (+ (* skoMC1 (+ (- 2.) (* skoMC1 (- 3.)))) (* skoSC1 (+ (* skoMC1 (+ (/ 1. 6.) (* skoMC1 (- 1.)))) (* skoSC1 (* skoMC1 (/ 1. 4.))))))))) (* skoMC1 (+ (- 2.) (* skoMC1 (- 5.))))) (> (* skoSC1 (+ (* skoMC1 (+ (- 1.) (* skoMC1 3.))) (* skoSC1 (+ (* skoMC1 (+ (- 2.) (* skoMC1 (- 3.)))) (* skoSC1 (+ (* skoMC1 (* skoMC1 (- 1.))) (* skoSC1 (* skoMC1 (/ 1. 12.))))))))) (* skoMC1 (+ (- 2.) (* skoMC1 (- 5.))))) (> (* skoSC1 skoMC1) (* skoMC1 (- 1.))) (> skoMC1 0.)) (succedent (<= (* skoSC1 (* skoMC1 (* skoMC1 (* skoMC1 2.)))) (* skoMC1 (* skoMC1 (* skoMC1 (- 2.)))))))
-----[end problem]-----

-----[begin problem]-----
% In Mathematica format:
Timing[Resolve[Exists[{skoSC1,skoMC1}, And[skoMC1*skoMC1*skoMC1*-1<=0,skoSC1*(skoMC1*skoMC1*skoMC1*(1+skoMC1*-3)+skoSC1*(skoMC1*skoMC1*skoMC1*(2+skoMC1*3)+skoSC1*(skoMC1*skoMC1*skoMC1*skoMC1+skoSC1*skoMC1*skoMC1*skoMC1*(-1/12))))<=skoMC1*skoMC1*skoMC1*(2+skoMC1*5),skoSC1*(skoMC1*skoMC1*skoMC1*(1+skoMC1*-3)+skoSC1*(skoMC1*skoMC1*skoMC1*(2+skoMC1*3)+skoSC1*(skoMC1*skoMC1*skoMC1*((-1/6)+skoMC1)+skoSC1*skoMC1*skoMC1*skoMC1*(-1/4))))<=skoMC1*skoMC1*skoMC1*(2+skoMC1*5),skoSC1*skoMC1*skoMC1*skoMC1*-1<=skoMC1*skoMC1*skoMC1,skoSC1*(skoMC1*skoMC1*skoMC1*(-1+skoMC1*3)+skoSC1*(skoMC1*skoMC1*skoMC1*(-2+skoMC1*-3)+skoSC1*(skoMC1*skoMC1*skoMC1*skoMC1*-1+skoSC1*skoMC1*skoMC1*skoMC1*(1/12))))>skoMC1*skoMC1*skoMC1*(-2+skoMC1*-5),skoSC1*(skoMC1*skoMC1*skoMC1*(-1+skoMC1*3)+skoSC1*(skoMC1*skoMC1*skoMC1*(-2+skoMC1*-3)+skoSC1*(skoMC1*skoMC1*skoMC1*((1/6)+skoMC1*-1)+skoSC1*skoMC1*skoMC1*skoMC1*(1/4))))>skoMC1*skoMC1*skoMC1*(-2+skoMC1*-5),skoSC1*skoMC1*skoMC1*skoMC1>skoMC1*skoMC1*skoMC1*-1,skoMC1*skoMC1*skoMC1*-2<=0,skoMC1*skoMC1*skoMC1*2>0,skoSC1*(skoMC1*(-1+skoMC1*3)+skoSC1*(skoMC1*(-2+skoMC1*-3)+skoSC1*(skoMC1*((1/6)+skoMC1*-1)+skoSC1*skoMC1*(1/4))))>skoMC1*(-2+skoMC1*-5),skoSC1*(skoMC1*(-1+skoMC1*3)+skoSC1*(skoMC1*(-2+skoMC1*-3)+skoSC1*(skoMC1*skoMC1*-1+skoSC1*skoMC1*(1/12))))>skoMC1*(-2+skoMC1*-5),skoSC1*(skoMC1*(1+skoMC1*-3)+skoSC1*(skoMC1*(2+skoMC1*3)+skoSC1*(skoMC1*((-1/6)+skoMC1)+skoSC1*skoMC1*(-1/4))))<=skoMC1*(2+skoMC1*5),skoSC1*(skoMC1*(1+skoMC1*-3)+skoSC1*(skoMC1*(2+skoMC1*3)+skoSC1*(skoMC1*skoMC1+skoSC1*skoMC1*(-1/12))))<=skoMC1*(2+skoMC1*5),skoSC1*skoMC1*-1<=skoMC1,skoSC1*skoMC1>skoMC1*-1,0<=skoMC1,skoMC1>0,0<=skoSC1,2<=skoMC1,skoSC1<=(5/4),skoSC1*skoMC1*skoMC1*skoMC1*2>skoMC1*skoMC1*skoMC1*-2,skoSC1*skoMC1*skoMC1*skoMC1*-2<=skoMC1*skoMC1*skoMC1*2,skoSC1*(skoMC1*skoMC1*skoMC1*(-2+skoMC1*-12)+skoSC1*(skoMC1*skoMC1*skoMC1*(1+skoMC1*-6)+skoSC1*(skoMC1*skoMC1*skoMC1+skoSC1*(skoMC1*skoMC1*skoMC1*(-1/12)+skoSC1*skoMC1*skoMC1*skoMC1*(-1/12)))))<=skoMC1*skoMC1*skoMC1*(2+skoMC1*6)]], Reals]]

% In QepcadB format:
(E skoSC1) (E skoMC1) [[(skoMC1 skoMC1 skoMC1 (-1))<=0]/\[[(skoSC1 ((skoMC1 skoMC1 skoMC1 (1+(skoMC1 (-3))))+(skoSC1 ((skoMC1 skoMC1 skoMC1 (2+(skoMC1 (3))))+(skoSC1 ((skoMC1 skoMC1 skoMC1 skoMC1)+(skoSC1 skoMC1 skoMC1 skoMC1 (-1/12))))))))<=(skoMC1 skoMC1 skoMC1 (2+(skoMC1 (5))))]/\[[(skoSC1 ((skoMC1 skoMC1 skoMC1 (1+(skoMC1 (-3))))+(skoSC1 ((skoMC1 skoMC1 skoMC1 (2+(skoMC1 (3))))+(skoSC1 ((skoMC1 skoMC1 skoMC1 (-1/6+skoMC1))+(skoSC1 skoMC1 skoMC1 skoMC1 (-1/4))))))))<=(skoMC1 skoMC1 skoMC1 (2+(skoMC1 (5))))]/\[[(skoSC1 skoMC1 skoMC1 skoMC1 (-1))<=(skoMC1 skoMC1 skoMC1)]/\[[(skoMC1 skoMC1 skoMC1 (-2+(skoMC1 (-5))))<(skoSC1 ((skoMC1 skoMC1 skoMC1 (-1+(skoMC1 (3))))+(skoSC1 ((skoMC1 skoMC1 skoMC1 (-2+(skoMC1 (-3))))+(skoSC1 ((skoMC1 skoMC1 skoMC1 skoMC1 (-1))+(skoSC1 skoMC1 skoMC1 skoMC1 (1/12))))))))]/\[[(skoMC1 skoMC1 skoMC1 (-2+(skoMC1 (-5))))<(skoSC1 ((skoMC1 skoMC1 skoMC1 (-1+(skoMC1 (3))))+(skoSC1 ((skoMC1 skoMC1 skoMC1 (-2+(skoMC1 (-3))))+(skoSC1 ((skoMC1 skoMC1 skoMC1 (1/6+(skoMC1 (-1))))+(skoSC1 skoMC1 skoMC1 skoMC1 (1/4))))))))]/\[[(skoMC1 skoMC1 skoMC1 (-1))<(skoSC1 skoMC1 skoMC1 skoMC1)]/\[[(skoMC1 skoMC1 skoMC1 (-2))<=0]/\[[0<(skoMC1 skoMC1 skoMC1 (2))]/\[[(skoMC1 (-2+(skoMC1 (-5))))<(skoSC1 ((skoMC1 (-1+(skoMC1 (3))))+(skoSC1 ((skoMC1 (-2+(skoMC1 (-3))))+(skoSC1 ((skoMC1 (1/6+(skoMC1 (-1))))+(skoSC1 skoMC1 (1/4))))))))]/\[[(skoMC1 (-2+(skoMC1 (-5))))<(skoSC1 ((skoMC1 (-1+(skoMC1 (3))))+(skoSC1 ((skoMC1 (-2+(skoMC1 (-3))))+(skoSC1 ((skoMC1 skoMC1 (-1))+(skoSC1 skoMC1 (1/12))))))))]/\[[(skoSC1 ((skoMC1 (1+(skoMC1 (-3))))+(skoSC1 ((skoMC1 (2+(skoMC1 (3))))+(skoSC1 ((skoMC1 (-1/6+skoMC1))+(skoSC1 skoMC1 (-1/4))))))))<=(skoMC1 (2+(skoMC1 (5))))]/\[[(skoSC1 ((skoMC1 (1+(skoMC1 (-3))))+(skoSC1 ((skoMC1 (2+(skoMC1 (3))))+(skoSC1 ((skoMC1 skoMC1)+(skoSC1 skoMC1 (-1/12))))))))<=(skoMC1 (2+(skoMC1 (5))))]/\[[(skoSC1 skoMC1 (-1))<=skoMC1]/\[[(skoMC1 (-1))<(skoSC1 skoMC1)]/\[[0<=skoMC1]/\[[0<skoMC1]/\[[0<=skoSC1]/\[[2<=skoMC1]/\[[skoSC1<=5/4]/\[[(skoMC1 skoMC1 skoMC1 (-2))<(skoSC1 skoMC1 skoMC1 skoMC1 (2))]/\[[(skoSC1 skoMC1 skoMC1 skoMC1 (-2))<=(skoMC1 skoMC1 skoMC1 (2))]/\[(skoSC1 ((skoMC1 skoMC1 skoMC1 (-2+(skoMC1 (-12))))+(skoSC1 ((skoMC1 skoMC1 skoMC1 (1+(skoMC1 (-6))))+(skoSC1 ((skoMC1 skoMC1 skoMC1)+(skoSC1 ((skoMC1 skoMC1 skoMC1 (-1/12))+(skoSC1 skoMC1 skoMC1 skoMC1 (-1/12))))))))))<=(skoMC1 skoMC1 skoMC1 (2+(skoMC1 (6))))]]]]]]]]]]]]]]]]]]]]]]].

% In SMTLib2 format:
(declare-fun skoSC1 () Real) (declare-fun skoMC1 () Real) (assert (and (<= (* skoMC1 (* skoMC1 (* skoMC1 (- 1.)))) 0.) (and (<= (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (+ 1. (* skoMC1 (- 3.)))))) (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (+ 2. (* skoMC1 3.))))) (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 skoMC1))) (* skoSC1 (* skoMC1 (* skoMC1 (* skoMC1 (/ (- 1.) 12.))))))))))) (* skoMC1 (* skoMC1 (* skoMC1 (+ 2. (* skoMC1 5.)))))) (and (<= (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (+ 1. (* skoMC1 (- 3.)))))) (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (+ 2. (* skoMC1 3.))))) (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (+ (/ (- 1.) 6.) skoMC1)))) (* skoSC1 (* skoMC1 (* skoMC1 (* skoMC1 (/ (- 1.) 4.))))))))))) (* skoMC1 (* skoMC1 (* skoMC1 (+ 2. (* skoMC1 5.)))))) (and (<= (* skoSC1 (* skoMC1 (* skoMC1 (* skoMC1 (- 1.))))) (* skoMC1 (* skoMC1 skoMC1))) (and (> (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (+ (- 1.) (* skoMC1 3.))))) (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (+ (- 2.) (* skoMC1 (- 3.)))))) (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (* skoMC1 (- 1.))))) (* skoSC1 (* skoMC1 (* skoMC1 (* skoMC1 (/ 1. 12.))))))))))) (* skoMC1 (* skoMC1 (* skoMC1 (+ (- 2.) (* skoMC1 (- 5.))))))) (and (> (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (+ (- 1.) (* skoMC1 3.))))) (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (+ (- 2.) (* skoMC1 (- 3.)))))) (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (+ (/ 1. 6.) (* skoMC1 (- 1.)))))) (* skoSC1 (* skoMC1 (* skoMC1 (* skoMC1 (/ 1. 4.))))))))))) (* skoMC1 (* skoMC1 (* skoMC1 (+ (- 2.) (* skoMC1 (- 5.))))))) (and (> (* skoSC1 (* skoMC1 (* skoMC1 skoMC1))) (* skoMC1 (* skoMC1 (* skoMC1 (- 1.))))) (and (<= (* skoMC1 (* skoMC1 (* skoMC1 (- 2.)))) 0.) (and (> (* skoMC1 (* skoMC1 (* skoMC1 2.))) 0.) (and (> (* skoSC1 (+ (* skoMC1 (+ (- 1.) (* skoMC1 3.))) (* skoSC1 (+ (* skoMC1 (+ (- 2.) (* skoMC1 (- 3.)))) (* skoSC1 (+ (* skoMC1 (+ (/ 1. 6.) (* skoMC1 (- 1.)))) (* skoSC1 (* skoMC1 (/ 1. 4.))))))))) (* skoMC1 (+ (- 2.) (* skoMC1 (- 5.))))) (and (> (* skoSC1 (+ (* skoMC1 (+ (- 1.) (* skoMC1 3.))) (* skoSC1 (+ (* skoMC1 (+ (- 2.) (* skoMC1 (- 3.)))) (* skoSC1 (+ (* skoMC1 (* skoMC1 (- 1.))) (* skoSC1 (* skoMC1 (/ 1. 12.))))))))) (* skoMC1 (+ (- 2.) (* skoMC1 (- 5.))))) (and (<= (* skoSC1 (+ (* skoMC1 (+ 1. (* skoMC1 (- 3.)))) (* skoSC1 (+ (* skoMC1 (+ 2. (* skoMC1 3.))) (* skoSC1 (+ (* skoMC1 (+ (/ (- 1.) 6.) skoMC1)) (* skoSC1 (* skoMC1 (/ (- 1.) 4.))))))))) (* skoMC1 (+ 2. (* skoMC1 5.)))) (and (<= (* skoSC1 (+ (* skoMC1 (+ 1. (* skoMC1 (- 3.)))) (* skoSC1 (+ (* skoMC1 (+ 2. (* skoMC1 3.))) (* skoSC1 (+ (* skoMC1 skoMC1) (* skoSC1 (* skoMC1 (/ (- 1.) 12.))))))))) (* skoMC1 (+ 2. (* skoMC1 5.)))) (and (<= (* skoSC1 (* skoMC1 (- 1.))) skoMC1) (and (> (* skoSC1 skoMC1) (* skoMC1 (- 1.))) (and (<= 0. skoMC1) (and (> skoMC1 0.) (and (<= 0. skoSC1) (and (<= 2. skoMC1) (and (<= skoSC1 (/ 5. 4.)) (and (> (* skoSC1 (* skoMC1 (* skoMC1 (* skoMC1 2.)))) (* skoMC1 (* skoMC1 (* skoMC1 (- 2.))))) (and (<= (* skoSC1 (* skoMC1 (* skoMC1 (* skoMC1 (- 2.))))) (* skoMC1 (* skoMC1 (* skoMC1 2.)))) (<= (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (+ (- 2.) (* skoMC1 (- 12.)))))) (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (+ 1. (* skoMC1 (- 6.)))))) (* skoSC1 (+ (* skoMC1 (* skoMC1 skoMC1)) (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (/ (- 1.) 12.)))) (* skoSC1 (* skoMC1 (* skoMC1 (* skoMC1 (/ (- 1.) 12.))))))))))))) (* skoMC1 (* skoMC1 (* skoMC1 (+ 2. (* skoMC1 6.)))))))))))))))))))))))))))))

% In GRF format:
(sequent " MetiTarski formula " (antecedent (<= (* skoMC1 (* skoMC1 (* skoMC1 (- 1.)))) 0.) (<= (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (+ 1. (* skoMC1 (- 3.)))))) (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (+ 2. (* skoMC1 3.))))) (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 skoMC1))) (* skoSC1 (* skoMC1 (* skoMC1 (* skoMC1 (/ (- 1.) 12.))))))))))) (* skoMC1 (* skoMC1 (* skoMC1 (+ 2. (* skoMC1 5.)))))) (<= (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (+ 1. (* skoMC1 (- 3.)))))) (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (+ 2. (* skoMC1 3.))))) (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (+ (/ (- 1.) 6.) skoMC1)))) (* skoSC1 (* skoMC1 (* skoMC1 (* skoMC1 (/ (- 1.) 4.))))))))))) (* skoMC1 (* skoMC1 (* skoMC1 (+ 2. (* skoMC1 5.)))))) (<= (* skoSC1 (* skoMC1 (* skoMC1 (* skoMC1 (- 1.))))) (* skoMC1 (* skoMC1 skoMC1))) (> (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (+ (- 1.) (* skoMC1 3.))))) (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (+ (- 2.) (* skoMC1 (- 3.)))))) (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (* skoMC1 (- 1.))))) (* skoSC1 (* skoMC1 (* skoMC1 (* skoMC1 (/ 1. 12.))))))))))) (* skoMC1 (* skoMC1 (* skoMC1 (+ (- 2.) (* skoMC1 (- 5.))))))) (> (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (+ (- 1.) (* skoMC1 3.))))) (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (+ (- 2.) (* skoMC1 (- 3.)))))) (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (+ (/ 1. 6.) (* skoMC1 (- 1.)))))) (* skoSC1 (* skoMC1 (* skoMC1 (* skoMC1 (/ 1. 4.))))))))))) (* skoMC1 (* skoMC1 (* skoMC1 (+ (- 2.) (* skoMC1 (- 5.))))))) (> (* skoSC1 (* skoMC1 (* skoMC1 skoMC1))) (* skoMC1 (* skoMC1 (* skoMC1 (- 1.))))) (<= (* skoMC1 (* skoMC1 (* skoMC1 (- 2.)))) 0.) (> (* skoMC1 (* skoMC1 (* skoMC1 2.))) 0.) (> (* skoSC1 (+ (* skoMC1 (+ (- 1.) (* skoMC1 3.))) (* skoSC1 (+ (* skoMC1 (+ (- 2.) (* skoMC1 (- 3.)))) (* skoSC1 (+ (* skoMC1 (+ (/ 1. 6.) (* skoMC1 (- 1.)))) (* skoSC1 (* skoMC1 (/ 1. 4.))))))))) (* skoMC1 (+ (- 2.) (* skoMC1 (- 5.))))) (> (* skoSC1 (+ (* skoMC1 (+ (- 1.) (* skoMC1 3.))) (* skoSC1 (+ (* skoMC1 (+ (- 2.) (* skoMC1 (- 3.)))) (* skoSC1 (+ (* skoMC1 (* skoMC1 (- 1.))) (* skoSC1 (* skoMC1 (/ 1. 12.))))))))) (* skoMC1 (+ (- 2.) (* skoMC1 (- 5.))))) (<= (* skoSC1 (+ (* skoMC1 (+ 1. (* skoMC1 (- 3.)))) (* skoSC1 (+ (* skoMC1 (+ 2. (* skoMC1 3.))) (* skoSC1 (+ (* skoMC1 (+ (/ (- 1.) 6.) skoMC1)) (* skoSC1 (* skoMC1 (/ (- 1.) 4.))))))))) (* skoMC1 (+ 2. (* skoMC1 5.)))) (<= (* skoSC1 (+ (* skoMC1 (+ 1. (* skoMC1 (- 3.)))) (* skoSC1 (+ (* skoMC1 (+ 2. (* skoMC1 3.))) (* skoSC1 (+ (* skoMC1 skoMC1) (* skoSC1 (* skoMC1 (/ (- 1.) 12.))))))))) (* skoMC1 (+ 2. (* skoMC1 5.)))) (<= (* skoSC1 (* skoMC1 (- 1.))) skoMC1) (> (* skoSC1 skoMC1) (* skoMC1 (- 1.))) (<= 0. skoMC1) (> skoMC1 0.) (<= 0. skoSC1) (<= 2. skoMC1) (<= skoSC1 (/ 5. 4.)) (> (* skoSC1 (* skoMC1 (* skoMC1 (* skoMC1 2.)))) (* skoMC1 (* skoMC1 (* skoMC1 (- 2.))))) (<= (* skoSC1 (* skoMC1 (* skoMC1 (* skoMC1 (- 2.))))) (* skoMC1 (* skoMC1 (* skoMC1 2.))))) (succedent (> (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (+ (- 2.) (* skoMC1 (- 12.)))))) (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (+ 1. (* skoMC1 (- 6.)))))) (* skoSC1 (+ (* skoMC1 (* skoMC1 skoMC1)) (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (/ (- 1.) 12.)))) (* skoSC1 (* skoMC1 (* skoMC1 (* skoMC1 (/ (- 1.) 12.))))))))))))) (* skoMC1 (* skoMC1 (* skoMC1 (+ 2. (* skoMC1 6.))))))))
-----[end problem]-----

-----[begin problem]-----
% In Mathematica format:
Timing[Resolve[Exists[{skoSC1,skoMC1}, And[skoMC1*skoMC1*skoMC1*-1<=0,skoMC1*skoMC1*skoMC1*-1<=0,skoSC1*(skoMC1*skoMC1*skoMC1*(1+skoMC1*-3)+skoSC1*(skoMC1*skoMC1*skoMC1*(2+skoMC1*3)+skoSC1*(skoMC1*skoMC1*skoMC1*skoMC1+skoSC1*skoMC1*skoMC1*skoMC1*(-1/12))))<=skoMC1*skoMC1*skoMC1*(2+skoMC1*5),skoSC1*(skoMC1*skoMC1*skoMC1*(1+skoMC1*-3)+skoSC1*(skoMC1*skoMC1*skoMC1*(2+skoMC1*3)+skoSC1*(skoMC1*skoMC1*skoMC1*((-1/6)+skoMC1)+skoSC1*skoMC1*skoMC1*skoMC1*(-1/4))))<=skoMC1*skoMC1*skoMC1*(2+skoMC1*5),skoSC1*skoMC1*skoMC1*skoMC1*-1<=skoMC1*skoMC1*skoMC1,skoSC1*(skoMC1*skoMC1*skoMC1*(-1+skoMC1*3)+skoSC1*(skoMC1*skoMC1*skoMC1*(-2+skoMC1*-3)+skoSC1*(skoMC1*skoMC1*skoMC1*skoMC1*-1+skoSC1*skoMC1*skoMC1*skoMC1*(1/12))))>skoMC1*skoMC1*skoMC1*(-2+skoMC1*-5),skoSC1*(skoMC1*skoMC1*skoMC1*(-1+skoMC1*3)+skoSC1*(skoMC1*skoMC1*skoMC1*(-2+skoMC1*-3)+skoSC1*(skoMC1*skoMC1*skoMC1*((1/6)+skoMC1*-1)+skoSC1*skoMC1*skoMC1*skoMC1*(1/4))))>skoMC1*skoMC1*skoMC1*(-2+skoMC1*-5),skoSC1*skoMC1*skoMC1*skoMC1>skoMC1*skoMC1*skoMC1*-1,skoMC1*skoMC1*skoMC1*-2<=0,skoMC1*skoMC1*skoMC1*2>0,skoSC1*(skoMC1*(-1+skoMC1*3)+skoSC1*(skoMC1*(-2+skoMC1*-3)+skoSC1*(skoMC1*((1/6)+skoMC1*-1)+skoSC1*skoMC1*(1/4))))>skoMC1*(-2+skoMC1*-5),skoSC1*(skoMC1*(-1+skoMC1*3)+skoSC1*(skoMC1*(-2+skoMC1*-3)+skoSC1*(skoMC1*skoMC1*-1+skoSC1*skoMC1*(1/12))))>skoMC1*(-2+skoMC1*-5),skoSC1*(skoMC1*(1+skoMC1*-3)+skoSC1*(skoMC1*(2+skoMC1*3)+skoSC1*(skoMC1*((-1/6)+skoMC1)+skoSC1*skoMC1*(-1/4))))<=skoMC1*(2+skoMC1*5),skoSC1*(skoMC1*(1+skoMC1*-3)+skoSC1*(skoMC1*(2+skoMC1*3)+skoSC1*(skoMC1*skoMC1+skoSC1*skoMC1*(-1/12))))<=skoMC1*(2+skoMC1*5),skoSC1*skoMC1*-1<=skoMC1,skoSC1*skoMC1>skoMC1*-1,0<=skoMC1,skoMC1>0,0<=skoSC1,2<=skoMC1,skoSC1<=(5/4),skoSC1*skoMC1*skoMC1*skoMC1*2>skoMC1*skoMC1*skoMC1*-2,skoSC1*skoMC1*skoMC1*skoMC1*-2<=skoMC1*skoMC1*skoMC1*2,skoSC1*(skoMC1*skoMC1*skoMC1*(-2+skoMC1*-12)+skoSC1*(skoMC1*skoMC1*skoMC1*(1+skoMC1*-6)+skoSC1*(skoMC1*skoMC1*skoMC1+skoSC1*(skoMC1*skoMC1*skoMC1*(-1/12)+skoSC1*skoMC1*skoMC1*skoMC1*(-1/12)))))<=skoMC1*skoMC1*skoMC1*(2+skoMC1*6)]], Reals]]

% In QepcadB format:
(E skoSC1) (E skoMC1) [[(skoMC1 skoMC1 skoMC1 (-1))<=0]/\[[(skoMC1 skoMC1 skoMC1 (-1))<=0]/\[[(skoSC1 ((skoMC1 skoMC1 skoMC1 (1+(skoMC1 (-3))))+(skoSC1 ((skoMC1 skoMC1 skoMC1 (2+(skoMC1 (3))))+(skoSC1 ((skoMC1 skoMC1 skoMC1 skoMC1)+(skoSC1 skoMC1 skoMC1 skoMC1 (-1/12))))))))<=(skoMC1 skoMC1 skoMC1 (2+(skoMC1 (5))))]/\[[(skoSC1 ((skoMC1 skoMC1 skoMC1 (1+(skoMC1 (-3))))+(skoSC1 ((skoMC1 skoMC1 skoMC1 (2+(skoMC1 (3))))+(skoSC1 ((skoMC1 skoMC1 skoMC1 (-1/6+skoMC1))+(skoSC1 skoMC1 skoMC1 skoMC1 (-1/4))))))))<=(skoMC1 skoMC1 skoMC1 (2+(skoMC1 (5))))]/\[[(skoSC1 skoMC1 skoMC1 skoMC1 (-1))<=(skoMC1 skoMC1 skoMC1)]/\[[(skoMC1 skoMC1 skoMC1 (-2+(skoMC1 (-5))))<(skoSC1 ((skoMC1 skoMC1 skoMC1 (-1+(skoMC1 (3))))+(skoSC1 ((skoMC1 skoMC1 skoMC1 (-2+(skoMC1 (-3))))+(skoSC1 ((skoMC1 skoMC1 skoMC1 skoMC1 (-1))+(skoSC1 skoMC1 skoMC1 skoMC1 (1/12))))))))]/\[[(skoMC1 skoMC1 skoMC1 (-2+(skoMC1 (-5))))<(skoSC1 ((skoMC1 skoMC1 skoMC1 (-1+(skoMC1 (3))))+(skoSC1 ((skoMC1 skoMC1 skoMC1 (-2+(skoMC1 (-3))))+(skoSC1 ((skoMC1 skoMC1 skoMC1 (1/6+(skoMC1 (-1))))+(skoSC1 skoMC1 skoMC1 skoMC1 (1/4))))))))]/\[[(skoMC1 skoMC1 skoMC1 (-1))<(skoSC1 skoMC1 skoMC1 skoMC1)]/\[[(skoMC1 skoMC1 skoMC1 (-2))<=0]/\[[0<(skoMC1 skoMC1 skoMC1 (2))]/\[[(skoMC1 (-2+(skoMC1 (-5))))<(skoSC1 ((skoMC1 (-1+(skoMC1 (3))))+(skoSC1 ((skoMC1 (-2+(skoMC1 (-3))))+(skoSC1 ((skoMC1 (1/6+(skoMC1 (-1))))+(skoSC1 skoMC1 (1/4))))))))]/\[[(skoMC1 (-2+(skoMC1 (-5))))<(skoSC1 ((skoMC1 (-1+(skoMC1 (3))))+(skoSC1 ((skoMC1 (-2+(skoMC1 (-3))))+(skoSC1 ((skoMC1 skoMC1 (-1))+(skoSC1 skoMC1 (1/12))))))))]/\[[(skoSC1 ((skoMC1 (1+(skoMC1 (-3))))+(skoSC1 ((skoMC1 (2+(skoMC1 (3))))+(skoSC1 ((skoMC1 (-1/6+skoMC1))+(skoSC1 skoMC1 (-1/4))))))))<=(skoMC1 (2+(skoMC1 (5))))]/\[[(skoSC1 ((skoMC1 (1+(skoMC1 (-3))))+(skoSC1 ((skoMC1 (2+(skoMC1 (3))))+(skoSC1 ((skoMC1 skoMC1)+(skoSC1 skoMC1 (-1/12))))))))<=(skoMC1 (2+(skoMC1 (5))))]/\[[(skoSC1 skoMC1 (-1))<=skoMC1]/\[[(skoMC1 (-1))<(skoSC1 skoMC1)]/\[[0<=skoMC1]/\[[0<skoMC1]/\[[0<=skoSC1]/\[[2<=skoMC1]/\[[skoSC1<=5/4]/\[[(skoMC1 skoMC1 skoMC1 (-2))<(skoSC1 skoMC1 skoMC1 skoMC1 (2))]/\[[(skoSC1 skoMC1 skoMC1 skoMC1 (-2))<=(skoMC1 skoMC1 skoMC1 (2))]/\[(skoSC1 ((skoMC1 skoMC1 skoMC1 (-2+(skoMC1 (-12))))+(skoSC1 ((skoMC1 skoMC1 skoMC1 (1+(skoMC1 (-6))))+(skoSC1 ((skoMC1 skoMC1 skoMC1)+(skoSC1 ((skoMC1 skoMC1 skoMC1 (-1/12))+(skoSC1 skoMC1 skoMC1 skoMC1 (-1/12))))))))))<=(skoMC1 skoMC1 skoMC1 (2+(skoMC1 (6))))]]]]]]]]]]]]]]]]]]]]]]]].

% In SMTLib2 format:
(declare-fun skoSC1 () Real) (declare-fun skoMC1 () Real) (assert (and (<= (* skoMC1 (* skoMC1 (* skoMC1 (- 1.)))) 0.) (and (<= (* skoMC1 (* skoMC1 (* skoMC1 (- 1.)))) 0.) (and (<= (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (+ 1. (* skoMC1 (- 3.)))))) (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (+ 2. (* skoMC1 3.))))) (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 skoMC1))) (* skoSC1 (* skoMC1 (* skoMC1 (* skoMC1 (/ (- 1.) 12.))))))))))) (* skoMC1 (* skoMC1 (* skoMC1 (+ 2. (* skoMC1 5.)))))) (and (<= (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (+ 1. (* skoMC1 (- 3.)))))) (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (+ 2. (* skoMC1 3.))))) (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (+ (/ (- 1.) 6.) skoMC1)))) (* skoSC1 (* skoMC1 (* skoMC1 (* skoMC1 (/ (- 1.) 4.))))))))))) (* skoMC1 (* skoMC1 (* skoMC1 (+ 2. (* skoMC1 5.)))))) (and (<= (* skoSC1 (* skoMC1 (* skoMC1 (* skoMC1 (- 1.))))) (* skoMC1 (* skoMC1 skoMC1))) (and (> (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (+ (- 1.) (* skoMC1 3.))))) (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (+ (- 2.) (* skoMC1 (- 3.)))))) (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (* skoMC1 (- 1.))))) (* skoSC1 (* skoMC1 (* skoMC1 (* skoMC1 (/ 1. 12.))))))))))) (* skoMC1 (* skoMC1 (* skoMC1 (+ (- 2.) (* skoMC1 (- 5.))))))) (and (> (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (+ (- 1.) (* skoMC1 3.))))) (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (+ (- 2.) (* skoMC1 (- 3.)))))) (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (+ (/ 1. 6.) (* skoMC1 (- 1.)))))) (* skoSC1 (* skoMC1 (* skoMC1 (* skoMC1 (/ 1. 4.))))))))))) (* skoMC1 (* skoMC1 (* skoMC1 (+ (- 2.) (* skoMC1 (- 5.))))))) (and (> (* skoSC1 (* skoMC1 (* skoMC1 skoMC1))) (* skoMC1 (* skoMC1 (* skoMC1 (- 1.))))) (and (<= (* skoMC1 (* skoMC1 (* skoMC1 (- 2.)))) 0.) (and (> (* skoMC1 (* skoMC1 (* skoMC1 2.))) 0.) (and (> (* skoSC1 (+ (* skoMC1 (+ (- 1.) (* skoMC1 3.))) (* skoSC1 (+ (* skoMC1 (+ (- 2.) (* skoMC1 (- 3.)))) (* skoSC1 (+ (* skoMC1 (+ (/ 1. 6.) (* skoMC1 (- 1.)))) (* skoSC1 (* skoMC1 (/ 1. 4.))))))))) (* skoMC1 (+ (- 2.) (* skoMC1 (- 5.))))) (and (> (* skoSC1 (+ (* skoMC1 (+ (- 1.) (* skoMC1 3.))) (* skoSC1 (+ (* skoMC1 (+ (- 2.) (* skoMC1 (- 3.)))) (* skoSC1 (+ (* skoMC1 (* skoMC1 (- 1.))) (* skoSC1 (* skoMC1 (/ 1. 12.))))))))) (* skoMC1 (+ (- 2.) (* skoMC1 (- 5.))))) (and (<= (* skoSC1 (+ (* skoMC1 (+ 1. (* skoMC1 (- 3.)))) (* skoSC1 (+ (* skoMC1 (+ 2. (* skoMC1 3.))) (* skoSC1 (+ (* skoMC1 (+ (/ (- 1.) 6.) skoMC1)) (* skoSC1 (* skoMC1 (/ (- 1.) 4.))))))))) (* skoMC1 (+ 2. (* skoMC1 5.)))) (and (<= (* skoSC1 (+ (* skoMC1 (+ 1. (* skoMC1 (- 3.)))) (* skoSC1 (+ (* skoMC1 (+ 2. (* skoMC1 3.))) (* skoSC1 (+ (* skoMC1 skoMC1) (* skoSC1 (* skoMC1 (/ (- 1.) 12.))))))))) (* skoMC1 (+ 2. (* skoMC1 5.)))) (and (<= (* skoSC1 (* skoMC1 (- 1.))) skoMC1) (and (> (* skoSC1 skoMC1) (* skoMC1 (- 1.))) (and (<= 0. skoMC1) (and (> skoMC1 0.) (and (<= 0. skoSC1) (and (<= 2. skoMC1) (and (<= skoSC1 (/ 5. 4.)) (and (> (* skoSC1 (* skoMC1 (* skoMC1 (* skoMC1 2.)))) (* skoMC1 (* skoMC1 (* skoMC1 (- 2.))))) (and (<= (* skoSC1 (* skoMC1 (* skoMC1 (* skoMC1 (- 2.))))) (* skoMC1 (* skoMC1 (* skoMC1 2.)))) (<= (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (+ (- 2.) (* skoMC1 (- 12.)))))) (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (+ 1. (* skoMC1 (- 6.)))))) (* skoSC1 (+ (* skoMC1 (* skoMC1 skoMC1)) (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (/ (- 1.) 12.)))) (* skoSC1 (* skoMC1 (* skoMC1 (* skoMC1 (/ (- 1.) 12.))))))))))))) (* skoMC1 (* skoMC1 (* skoMC1 (+ 2. (* skoMC1 6.))))))))))))))))))))))))))))))

% In GRF format:
(sequent " MetiTarski formula " (antecedent (<= (* skoMC1 (* skoMC1 (* skoMC1 (- 1.)))) 0.) (<= (* skoMC1 (* skoMC1 (* skoMC1 (- 1.)))) 0.) (<= (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (+ 1. (* skoMC1 (- 3.)))))) (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (+ 2. (* skoMC1 3.))))) (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 skoMC1))) (* skoSC1 (* skoMC1 (* skoMC1 (* skoMC1 (/ (- 1.) 12.))))))))))) (* skoMC1 (* skoMC1 (* skoMC1 (+ 2. (* skoMC1 5.)))))) (<= (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (+ 1. (* skoMC1 (- 3.)))))) (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (+ 2. (* skoMC1 3.))))) (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (+ (/ (- 1.) 6.) skoMC1)))) (* skoSC1 (* skoMC1 (* skoMC1 (* skoMC1 (/ (- 1.) 4.))))))))))) (* skoMC1 (* skoMC1 (* skoMC1 (+ 2. (* skoMC1 5.)))))) (<= (* skoSC1 (* skoMC1 (* skoMC1 (* skoMC1 (- 1.))))) (* skoMC1 (* skoMC1 skoMC1))) (> (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (+ (- 1.) (* skoMC1 3.))))) (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (+ (- 2.) (* skoMC1 (- 3.)))))) (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (* skoMC1 (- 1.))))) (* skoSC1 (* skoMC1 (* skoMC1 (* skoMC1 (/ 1. 12.))))))))))) (* skoMC1 (* skoMC1 (* skoMC1 (+ (- 2.) (* skoMC1 (- 5.))))))) (> (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (+ (- 1.) (* skoMC1 3.))))) (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (+ (- 2.) (* skoMC1 (- 3.)))))) (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (+ (/ 1. 6.) (* skoMC1 (- 1.)))))) (* skoSC1 (* skoMC1 (* skoMC1 (* skoMC1 (/ 1. 4.))))))))))) (* skoMC1 (* skoMC1 (* skoMC1 (+ (- 2.) (* skoMC1 (- 5.))))))) (> (* skoSC1 (* skoMC1 (* skoMC1 skoMC1))) (* skoMC1 (* skoMC1 (* skoMC1 (- 1.))))) (<= (* skoMC1 (* skoMC1 (* skoMC1 (- 2.)))) 0.) (> (* skoMC1 (* skoMC1 (* skoMC1 2.))) 0.) (> (* skoSC1 (+ (* skoMC1 (+ (- 1.) (* skoMC1 3.))) (* skoSC1 (+ (* skoMC1 (+ (- 2.) (* skoMC1 (- 3.)))) (* skoSC1 (+ (* skoMC1 (+ (/ 1. 6.) (* skoMC1 (- 1.)))) (* skoSC1 (* skoMC1 (/ 1. 4.))))))))) (* skoMC1 (+ (- 2.) (* skoMC1 (- 5.))))) (> (* skoSC1 (+ (* skoMC1 (+ (- 1.) (* skoMC1 3.))) (* skoSC1 (+ (* skoMC1 (+ (- 2.) (* skoMC1 (- 3.)))) (* skoSC1 (+ (* skoMC1 (* skoMC1 (- 1.))) (* skoSC1 (* skoMC1 (/ 1. 12.))))))))) (* skoMC1 (+ (- 2.) (* skoMC1 (- 5.))))) (<= (* skoSC1 (+ (* skoMC1 (+ 1. (* skoMC1 (- 3.)))) (* skoSC1 (+ (* skoMC1 (+ 2. (* skoMC1 3.))) (* skoSC1 (+ (* skoMC1 (+ (/ (- 1.) 6.) skoMC1)) (* skoSC1 (* skoMC1 (/ (- 1.) 4.))))))))) (* skoMC1 (+ 2. (* skoMC1 5.)))) (<= (* skoSC1 (+ (* skoMC1 (+ 1. (* skoMC1 (- 3.)))) (* skoSC1 (+ (* skoMC1 (+ 2. (* skoMC1 3.))) (* skoSC1 (+ (* skoMC1 skoMC1) (* skoSC1 (* skoMC1 (/ (- 1.) 12.))))))))) (* skoMC1 (+ 2. (* skoMC1 5.)))) (<= (* skoSC1 (* skoMC1 (- 1.))) skoMC1) (> (* skoSC1 skoMC1) (* skoMC1 (- 1.))) (<= 0. skoMC1) (> skoMC1 0.) (<= 0. skoSC1) (<= 2. skoMC1) (<= skoSC1 (/ 5. 4.)) (> (* skoSC1 (* skoMC1 (* skoMC1 (* skoMC1 2.)))) (* skoMC1 (* skoMC1 (* skoMC1 (- 2.))))) (<= (* skoSC1 (* skoMC1 (* skoMC1 (* skoMC1 (- 2.))))) (* skoMC1 (* skoMC1 (* skoMC1 2.))))) (succedent (> (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (+ (- 2.) (* skoMC1 (- 12.)))))) (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (+ 1. (* skoMC1 (- 6.)))))) (* skoSC1 (+ (* skoMC1 (* skoMC1 skoMC1)) (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (/ (- 1.) 12.)))) (* skoSC1 (* skoMC1 (* skoMC1 (* skoMC1 (/ (- 1.) 12.))))))))))))) (* skoMC1 (* skoMC1 (* skoMC1 (+ 2. (* skoMC1 6.))))))))
-----[end problem]-----

-----[begin problem]-----
% In Mathematica format:
Timing[Resolve[Exists[{skoSC1,skoMC1}, And[skoSC1*skoMC1*skoMC1*skoMC1*-2<=skoMC1*skoMC1*skoMC1*2,skoMC1*skoMC1*skoMC1*-1<=0,skoSC1*(skoMC1*skoMC1*skoMC1*(1+skoMC1*-3)+skoSC1*(skoMC1*skoMC1*skoMC1*(2+skoMC1*3)+skoSC1*(skoMC1*skoMC1*skoMC1*skoMC1+skoSC1*skoMC1*skoMC1*skoMC1*(-1/12))))<=skoMC1*skoMC1*skoMC1*(2+skoMC1*5),skoSC1*(skoMC1*skoMC1*skoMC1*(1+skoMC1*-3)+skoSC1*(skoMC1*skoMC1*skoMC1*(2+skoMC1*3)+skoSC1*(skoMC1*skoMC1*skoMC1*((-1/6)+skoMC1)+skoSC1*skoMC1*skoMC1*skoMC1*(-1/4))))<=skoMC1*skoMC1*skoMC1*(2+skoMC1*5),skoSC1*skoMC1*skoMC1*skoMC1*-1<=skoMC1*skoMC1*skoMC1,skoSC1*(skoMC1*skoMC1*skoMC1*(-1+skoMC1*3)+skoSC1*(skoMC1*skoMC1*skoMC1*(-2+skoMC1*-3)+skoSC1*(skoMC1*skoMC1*skoMC1*skoMC1*-1+skoSC1*skoMC1*skoMC1*skoMC1*(1/12))))>skoMC1*skoMC1*skoMC1*(-2+skoMC1*-5),skoSC1*(skoMC1*skoMC1*skoMC1*(-1+skoMC1*3)+skoSC1*(skoMC1*skoMC1*skoMC1*(-2+skoMC1*-3)+skoSC1*(skoMC1*skoMC1*skoMC1*((1/6)+skoMC1*-1)+skoSC1*skoMC1*skoMC1*skoMC1*(1/4))))>skoMC1*skoMC1*skoMC1*(-2+skoMC1*-5),skoSC1*skoMC1*skoMC1*skoMC1>skoMC1*skoMC1*skoMC1*-1,skoMC1*skoMC1*skoMC1*-2<=0,skoMC1*skoMC1*skoMC1*2>0,skoSC1*(skoMC1*(-1+skoMC1*3)+skoSC1*(skoMC1*(-2+skoMC1*-3)+skoSC1*(skoMC1*((1/6)+skoMC1*-1)+skoSC1*skoMC1*(1/4))))>skoMC1*(-2+skoMC1*-5),skoSC1*(skoMC1*(-1+skoMC1*3)+skoSC1*(skoMC1*(-2+skoMC1*-3)+skoSC1*(skoMC1*skoMC1*-1+skoSC1*skoMC1*(1/12))))>skoMC1*(-2+skoMC1*-5),skoSC1*(skoMC1*(1+skoMC1*-3)+skoSC1*(skoMC1*(2+skoMC1*3)+skoSC1*(skoMC1*((-1/6)+skoMC1)+skoSC1*skoMC1*(-1/4))))<=skoMC1*(2+skoMC1*5),skoSC1*(skoMC1*(1+skoMC1*-3)+skoSC1*(skoMC1*(2+skoMC1*3)+skoSC1*(skoMC1*skoMC1+skoSC1*skoMC1*(-1/12))))<=skoMC1*(2+skoMC1*5),skoSC1*skoMC1*-1<=skoMC1,skoSC1*skoMC1>skoMC1*-1,0<=skoMC1,skoMC1>0,0<=skoSC1,2<=skoMC1,skoSC1<=(5/4),skoSC1*skoMC1*skoMC1*skoMC1*2>skoMC1*skoMC1*skoMC1*-2,skoSC1*skoMC1*skoMC1*skoMC1*-2<=skoMC1*skoMC1*skoMC1*2,skoSC1*(skoMC1*skoMC1*skoMC1*(-2+skoMC1*-12)+skoSC1*(skoMC1*skoMC1*skoMC1*(1+skoMC1*-6)+skoSC1*(skoMC1*skoMC1*skoMC1+skoSC1*(skoMC1*skoMC1*skoMC1*(-1/12)+skoSC1*skoMC1*skoMC1*skoMC1*(-1/12)))))<=skoMC1*skoMC1*skoMC1*(2+skoMC1*6)]], Reals]]

% In QepcadB format:
(E skoSC1) (E skoMC1) [[(skoSC1 skoMC1 skoMC1 skoMC1 (-2))<=(skoMC1 skoMC1 skoMC1 (2))]/\[[(skoMC1 skoMC1 skoMC1 (-1))<=0]/\[[(skoSC1 ((skoMC1 skoMC1 skoMC1 (1+(skoMC1 (-3))))+(skoSC1 ((skoMC1 skoMC1 skoMC1 (2+(skoMC1 (3))))+(skoSC1 ((skoMC1 skoMC1 skoMC1 skoMC1)+(skoSC1 skoMC1 skoMC1 skoMC1 (-1/12))))))))<=(skoMC1 skoMC1 skoMC1 (2+(skoMC1 (5))))]/\[[(skoSC1 ((skoMC1 skoMC1 skoMC1 (1+(skoMC1 (-3))))+(skoSC1 ((skoMC1 skoMC1 skoMC1 (2+(skoMC1 (3))))+(skoSC1 ((skoMC1 skoMC1 skoMC1 (-1/6+skoMC1))+(skoSC1 skoMC1 skoMC1 skoMC1 (-1/4))))))))<=(skoMC1 skoMC1 skoMC1 (2+(skoMC1 (5))))]/\[[(skoSC1 skoMC1 skoMC1 skoMC1 (-1))<=(skoMC1 skoMC1 skoMC1)]/\[[(skoMC1 skoMC1 skoMC1 (-2+(skoMC1 (-5))))<(skoSC1 ((skoMC1 skoMC1 skoMC1 (-1+(skoMC1 (3))))+(skoSC1 ((skoMC1 skoMC1 skoMC1 (-2+(skoMC1 (-3))))+(skoSC1 ((skoMC1 skoMC1 skoMC1 skoMC1 (-1))+(skoSC1 skoMC1 skoMC1 skoMC1 (1/12))))))))]/\[[(skoMC1 skoMC1 skoMC1 (-2+(skoMC1 (-5))))<(skoSC1 ((skoMC1 skoMC1 skoMC1 (-1+(skoMC1 (3))))+(skoSC1 ((skoMC1 skoMC1 skoMC1 (-2+(skoMC1 (-3))))+(skoSC1 ((skoMC1 skoMC1 skoMC1 (1/6+(skoMC1 (-1))))+(skoSC1 skoMC1 skoMC1 skoMC1 (1/4))))))))]/\[[(skoMC1 skoMC1 skoMC1 (-1))<(skoSC1 skoMC1 skoMC1 skoMC1)]/\[[(skoMC1 skoMC1 skoMC1 (-2))<=0]/\[[0<(skoMC1 skoMC1 skoMC1 (2))]/\[[(skoMC1 (-2+(skoMC1 (-5))))<(skoSC1 ((skoMC1 (-1+(skoMC1 (3))))+(skoSC1 ((skoMC1 (-2+(skoMC1 (-3))))+(skoSC1 ((skoMC1 (1/6+(skoMC1 (-1))))+(skoSC1 skoMC1 (1/4))))))))]/\[[(skoMC1 (-2+(skoMC1 (-5))))<(skoSC1 ((skoMC1 (-1+(skoMC1 (3))))+(skoSC1 ((skoMC1 (-2+(skoMC1 (-3))))+(skoSC1 ((skoMC1 skoMC1 (-1))+(skoSC1 skoMC1 (1/12))))))))]/\[[(skoSC1 ((skoMC1 (1+(skoMC1 (-3))))+(skoSC1 ((skoMC1 (2+(skoMC1 (3))))+(skoSC1 ((skoMC1 (-1/6+skoMC1))+(skoSC1 skoMC1 (-1/4))))))))<=(skoMC1 (2+(skoMC1 (5))))]/\[[(skoSC1 ((skoMC1 (1+(skoMC1 (-3))))+(skoSC1 ((skoMC1 (2+(skoMC1 (3))))+(skoSC1 ((skoMC1 skoMC1)+(skoSC1 skoMC1 (-1/12))))))))<=(skoMC1 (2+(skoMC1 (5))))]/\[[(skoSC1 skoMC1 (-1))<=skoMC1]/\[[(skoMC1 (-1))<(skoSC1 skoMC1)]/\[[0<=skoMC1]/\[[0<skoMC1]/\[[0<=skoSC1]/\[[2<=skoMC1]/\[[skoSC1<=5/4]/\[[(skoMC1 skoMC1 skoMC1 (-2))<(skoSC1 skoMC1 skoMC1 skoMC1 (2))]/\[[(skoSC1 skoMC1 skoMC1 skoMC1 (-2))<=(skoMC1 skoMC1 skoMC1 (2))]/\[(skoSC1 ((skoMC1 skoMC1 skoMC1 (-2+(skoMC1 (-12))))+(skoSC1 ((skoMC1 skoMC1 skoMC1 (1+(skoMC1 (-6))))+(skoSC1 ((skoMC1 skoMC1 skoMC1)+(skoSC1 ((skoMC1 skoMC1 skoMC1 (-1/12))+(skoSC1 skoMC1 skoMC1 skoMC1 (-1/12))))))))))<=(skoMC1 skoMC1 skoMC1 (2+(skoMC1 (6))))]]]]]]]]]]]]]]]]]]]]]]]].

% In SMTLib2 format:
(declare-fun skoSC1 () Real) (declare-fun skoMC1 () Real) (assert (and (<= (* skoSC1 (* skoMC1 (* skoMC1 (* skoMC1 (- 2.))))) (* skoMC1 (* skoMC1 (* skoMC1 2.)))) (and (<= (* skoMC1 (* skoMC1 (* skoMC1 (- 1.)))) 0.) (and (<= (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (+ 1. (* skoMC1 (- 3.)))))) (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (+ 2. (* skoMC1 3.))))) (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 skoMC1))) (* skoSC1 (* skoMC1 (* skoMC1 (* skoMC1 (/ (- 1.) 12.))))))))))) (* skoMC1 (* skoMC1 (* skoMC1 (+ 2. (* skoMC1 5.)))))) (and (<= (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (+ 1. (* skoMC1 (- 3.)))))) (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (+ 2. (* skoMC1 3.))))) (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (+ (/ (- 1.) 6.) skoMC1)))) (* skoSC1 (* skoMC1 (* skoMC1 (* skoMC1 (/ (- 1.) 4.))))))))))) (* skoMC1 (* skoMC1 (* skoMC1 (+ 2. (* skoMC1 5.)))))) (and (<= (* skoSC1 (* skoMC1 (* skoMC1 (* skoMC1 (- 1.))))) (* skoMC1 (* skoMC1 skoMC1))) (and (> (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (+ (- 1.) (* skoMC1 3.))))) (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (+ (- 2.) (* skoMC1 (- 3.)))))) (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (* skoMC1 (- 1.))))) (* skoSC1 (* skoMC1 (* skoMC1 (* skoMC1 (/ 1. 12.))))))))))) (* skoMC1 (* skoMC1 (* skoMC1 (+ (- 2.) (* skoMC1 (- 5.))))))) (and (> (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (+ (- 1.) (* skoMC1 3.))))) (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (+ (- 2.) (* skoMC1 (- 3.)))))) (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (+ (/ 1. 6.) (* skoMC1 (- 1.)))))) (* skoSC1 (* skoMC1 (* skoMC1 (* skoMC1 (/ 1. 4.))))))))))) (* skoMC1 (* skoMC1 (* skoMC1 (+ (- 2.) (* skoMC1 (- 5.))))))) (and (> (* skoSC1 (* skoMC1 (* skoMC1 skoMC1))) (* skoMC1 (* skoMC1 (* skoMC1 (- 1.))))) (and (<= (* skoMC1 (* skoMC1 (* skoMC1 (- 2.)))) 0.) (and (> (* skoMC1 (* skoMC1 (* skoMC1 2.))) 0.) (and (> (* skoSC1 (+ (* skoMC1 (+ (- 1.) (* skoMC1 3.))) (* skoSC1 (+ (* skoMC1 (+ (- 2.) (* skoMC1 (- 3.)))) (* skoSC1 (+ (* skoMC1 (+ (/ 1. 6.) (* skoMC1 (- 1.)))) (* skoSC1 (* skoMC1 (/ 1. 4.))))))))) (* skoMC1 (+ (- 2.) (* skoMC1 (- 5.))))) (and (> (* skoSC1 (+ (* skoMC1 (+ (- 1.) (* skoMC1 3.))) (* skoSC1 (+ (* skoMC1 (+ (- 2.) (* skoMC1 (- 3.)))) (* skoSC1 (+ (* skoMC1 (* skoMC1 (- 1.))) (* skoSC1 (* skoMC1 (/ 1. 12.))))))))) (* skoMC1 (+ (- 2.) (* skoMC1 (- 5.))))) (and (<= (* skoSC1 (+ (* skoMC1 (+ 1. (* skoMC1 (- 3.)))) (* skoSC1 (+ (* skoMC1 (+ 2. (* skoMC1 3.))) (* skoSC1 (+ (* skoMC1 (+ (/ (- 1.) 6.) skoMC1)) (* skoSC1 (* skoMC1 (/ (- 1.) 4.))))))))) (* skoMC1 (+ 2. (* skoMC1 5.)))) (and (<= (* skoSC1 (+ (* skoMC1 (+ 1. (* skoMC1 (- 3.)))) (* skoSC1 (+ (* skoMC1 (+ 2. (* skoMC1 3.))) (* skoSC1 (+ (* skoMC1 skoMC1) (* skoSC1 (* skoMC1 (/ (- 1.) 12.))))))))) (* skoMC1 (+ 2. (* skoMC1 5.)))) (and (<= (* skoSC1 (* skoMC1 (- 1.))) skoMC1) (and (> (* skoSC1 skoMC1) (* skoMC1 (- 1.))) (and (<= 0. skoMC1) (and (> skoMC1 0.) (and (<= 0. skoSC1) (and (<= 2. skoMC1) (and (<= skoSC1 (/ 5. 4.)) (and (> (* skoSC1 (* skoMC1 (* skoMC1 (* skoMC1 2.)))) (* skoMC1 (* skoMC1 (* skoMC1 (- 2.))))) (and (<= (* skoSC1 (* skoMC1 (* skoMC1 (* skoMC1 (- 2.))))) (* skoMC1 (* skoMC1 (* skoMC1 2.)))) (<= (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (+ (- 2.) (* skoMC1 (- 12.)))))) (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (+ 1. (* skoMC1 (- 6.)))))) (* skoSC1 (+ (* skoMC1 (* skoMC1 skoMC1)) (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (/ (- 1.) 12.)))) (* skoSC1 (* skoMC1 (* skoMC1 (* skoMC1 (/ (- 1.) 12.))))))))))))) (* skoMC1 (* skoMC1 (* skoMC1 (+ 2. (* skoMC1 6.))))))))))))))))))))))))))))))

% In GRF format:
(sequent " MetiTarski formula " (antecedent (<= (* skoSC1 (* skoMC1 (* skoMC1 (* skoMC1 (- 2.))))) (* skoMC1 (* skoMC1 (* skoMC1 2.)))) (<= (* skoMC1 (* skoMC1 (* skoMC1 (- 1.)))) 0.) (<= (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (+ 1. (* skoMC1 (- 3.)))))) (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (+ 2. (* skoMC1 3.))))) (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 skoMC1))) (* skoSC1 (* skoMC1 (* skoMC1 (* skoMC1 (/ (- 1.) 12.))))))))))) (* skoMC1 (* skoMC1 (* skoMC1 (+ 2. (* skoMC1 5.)))))) (<= (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (+ 1. (* skoMC1 (- 3.)))))) (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (+ 2. (* skoMC1 3.))))) (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (+ (/ (- 1.) 6.) skoMC1)))) (* skoSC1 (* skoMC1 (* skoMC1 (* skoMC1 (/ (- 1.) 4.))))))))))) (* skoMC1 (* skoMC1 (* skoMC1 (+ 2. (* skoMC1 5.)))))) (<= (* skoSC1 (* skoMC1 (* skoMC1 (* skoMC1 (- 1.))))) (* skoMC1 (* skoMC1 skoMC1))) (> (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (+ (- 1.) (* skoMC1 3.))))) (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (+ (- 2.) (* skoMC1 (- 3.)))))) (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (* skoMC1 (- 1.))))) (* skoSC1 (* skoMC1 (* skoMC1 (* skoMC1 (/ 1. 12.))))))))))) (* skoMC1 (* skoMC1 (* skoMC1 (+ (- 2.) (* skoMC1 (- 5.))))))) (> (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (+ (- 1.) (* skoMC1 3.))))) (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (+ (- 2.) (* skoMC1 (- 3.)))))) (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (+ (/ 1. 6.) (* skoMC1 (- 1.)))))) (* skoSC1 (* skoMC1 (* skoMC1 (* skoMC1 (/ 1. 4.))))))))))) (* skoMC1 (* skoMC1 (* skoMC1 (+ (- 2.) (* skoMC1 (- 5.))))))) (> (* skoSC1 (* skoMC1 (* skoMC1 skoMC1))) (* skoMC1 (* skoMC1 (* skoMC1 (- 1.))))) (<= (* skoMC1 (* skoMC1 (* skoMC1 (- 2.)))) 0.) (> (* skoMC1 (* skoMC1 (* skoMC1 2.))) 0.) (> (* skoSC1 (+ (* skoMC1 (+ (- 1.) (* skoMC1 3.))) (* skoSC1 (+ (* skoMC1 (+ (- 2.) (* skoMC1 (- 3.)))) (* skoSC1 (+ (* skoMC1 (+ (/ 1. 6.) (* skoMC1 (- 1.)))) (* skoSC1 (* skoMC1 (/ 1. 4.))))))))) (* skoMC1 (+ (- 2.) (* skoMC1 (- 5.))))) (> (* skoSC1 (+ (* skoMC1 (+ (- 1.) (* skoMC1 3.))) (* skoSC1 (+ (* skoMC1 (+ (- 2.) (* skoMC1 (- 3.)))) (* skoSC1 (+ (* skoMC1 (* skoMC1 (- 1.))) (* skoSC1 (* skoMC1 (/ 1. 12.))))))))) (* skoMC1 (+ (- 2.) (* skoMC1 (- 5.))))) (<= (* skoSC1 (+ (* skoMC1 (+ 1. (* skoMC1 (- 3.)))) (* skoSC1 (+ (* skoMC1 (+ 2. (* skoMC1 3.))) (* skoSC1 (+ (* skoMC1 (+ (/ (- 1.) 6.) skoMC1)) (* skoSC1 (* skoMC1 (/ (- 1.) 4.))))))))) (* skoMC1 (+ 2. (* skoMC1 5.)))) (<= (* skoSC1 (+ (* skoMC1 (+ 1. (* skoMC1 (- 3.)))) (* skoSC1 (+ (* skoMC1 (+ 2. (* skoMC1 3.))) (* skoSC1 (+ (* skoMC1 skoMC1) (* skoSC1 (* skoMC1 (/ (- 1.) 12.))))))))) (* skoMC1 (+ 2. (* skoMC1 5.)))) (<= (* skoSC1 (* skoMC1 (- 1.))) skoMC1) (> (* skoSC1 skoMC1) (* skoMC1 (- 1.))) (<= 0. skoMC1) (> skoMC1 0.) (<= 0. skoSC1) (<= 2. skoMC1) (<= skoSC1 (/ 5. 4.)) (> (* skoSC1 (* skoMC1 (* skoMC1 (* skoMC1 2.)))) (* skoMC1 (* skoMC1 (* skoMC1 (- 2.))))) (<= (* skoSC1 (* skoMC1 (* skoMC1 (* skoMC1 (- 2.))))) (* skoMC1 (* skoMC1 (* skoMC1 2.))))) (succedent (> (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (+ (- 2.) (* skoMC1 (- 12.)))))) (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (+ 1. (* skoMC1 (- 6.)))))) (* skoSC1 (+ (* skoMC1 (* skoMC1 skoMC1)) (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (/ (- 1.) 12.)))) (* skoSC1 (* skoMC1 (* skoMC1 (* skoMC1 (/ (- 1.) 12.))))))))))))) (* skoMC1 (* skoMC1 (* skoMC1 (+ 2. (* skoMC1 6.))))))))
-----[end problem]-----

-----[begin problem]-----
% In Mathematica format:
Timing[Resolve[Exists[{skoSC1,skoMC1}, And[skoSC1*(skoMC1*skoMC1*skoMC1*skoMC1*-12+skoSC1*(skoMC1*skoMC1*skoMC1*(1+skoMC1*-6)+skoSC1*(skoMC1*skoMC1*skoMC1+skoSC1*(skoMC1*skoMC1*skoMC1*(-1/12)+skoSC1*skoMC1*skoMC1*skoMC1*(-1/12)))))<=skoMC1*skoMC1*skoMC1*(2+skoMC1*6),skoSC1*skoMC1*skoMC1*skoMC1*2>skoMC1*skoMC1*skoMC1*-2,skoMC1*skoMC1*skoMC1*-1<=0,skoSC1*(skoMC1*skoMC1*skoMC1*(1+skoMC1*-3)+skoSC1*(skoMC1*skoMC1*skoMC1*(2+skoMC1*3)+skoSC1*(skoMC1*skoMC1*skoMC1*skoMC1+skoSC1*skoMC1*skoMC1*skoMC1*(-1/12))))<=skoMC1*skoMC1*skoMC1*(2+skoMC1*5),skoSC1*(skoMC1*skoMC1*skoMC1*(1+skoMC1*-3)+skoSC1*(skoMC1*skoMC1*skoMC1*(2+skoMC1*3)+skoSC1*(skoMC1*skoMC1*skoMC1*((-1/6)+skoMC1)+skoSC1*skoMC1*skoMC1*skoMC1*(-1/4))))<=skoMC1*skoMC1*skoMC1*(2+skoMC1*5),skoSC1*skoMC1*skoMC1*skoMC1*-1<=skoMC1*skoMC1*skoMC1,skoSC1*(skoMC1*skoMC1*skoMC1*(-1+skoMC1*3)+skoSC1*(skoMC1*skoMC1*skoMC1*(-2+skoMC1*-3)+skoSC1*(skoMC1*skoMC1*skoMC1*skoMC1*-1+skoSC1*skoMC1*skoMC1*skoMC1*(1/12))))>skoMC1*skoMC1*skoMC1*(-2+skoMC1*-5),skoSC1*(skoMC1*skoMC1*skoMC1*(-1+skoMC1*3)+skoSC1*(skoMC1*skoMC1*skoMC1*(-2+skoMC1*-3)+skoSC1*(skoMC1*skoMC1*skoMC1*((1/6)+skoMC1*-1)+skoSC1*skoMC1*skoMC1*skoMC1*(1/4))))>skoMC1*skoMC1*skoMC1*(-2+skoMC1*-5),skoSC1*skoMC1*skoMC1*skoMC1>skoMC1*skoMC1*skoMC1*-1,skoMC1*skoMC1*skoMC1*-2<=0,skoMC1*skoMC1*skoMC1*2>0,skoSC1*(skoMC1*(-1+skoMC1*3)+skoSC1*(skoMC1*(-2+skoMC1*-3)+skoSC1*(skoMC1*((1/6)+skoMC1*-1)+skoSC1*skoMC1*(1/4))))>skoMC1*(-2+skoMC1*-5),skoSC1*(skoMC1*(-1+skoMC1*3)+skoSC1*(skoMC1*(-2+skoMC1*-3)+skoSC1*(skoMC1*skoMC1*-1+skoSC1*skoMC1*(1/12))))>skoMC1*(-2+skoMC1*-5),skoSC1*(skoMC1*(1+skoMC1*-3)+skoSC1*(skoMC1*(2+skoMC1*3)+skoSC1*(skoMC1*((-1/6)+skoMC1)+skoSC1*skoMC1*(-1/4))))<=skoMC1*(2+skoMC1*5),skoSC1*(skoMC1*(1+skoMC1*-3)+skoSC1*(skoMC1*(2+skoMC1*3)+skoSC1*(skoMC1*skoMC1+skoSC1*skoMC1*(-1/12))))<=skoMC1*(2+skoMC1*5),skoSC1*skoMC1*-1<=skoMC1,skoSC1*skoMC1>skoMC1*-1,0<=skoMC1,skoMC1>0,0<=skoSC1,2<=skoMC1,skoSC1<=(5/4),skoSC1*skoMC1*skoMC1*skoMC1*2>skoMC1*skoMC1*skoMC1*-2,skoSC1*skoMC1*skoMC1*skoMC1*-2<=skoMC1*skoMC1*skoMC1*2,skoSC1*(skoMC1*skoMC1*skoMC1*(-2+skoMC1*-12)+skoSC1*(skoMC1*skoMC1*skoMC1*(1+skoMC1*-6)+skoSC1*(skoMC1*skoMC1*skoMC1+skoSC1*(skoMC1*skoMC1*skoMC1*(-1/12)+skoSC1*skoMC1*skoMC1*skoMC1*(-1/12)))))<=skoMC1*skoMC1*skoMC1*(2+skoMC1*6)]], Reals]]

% In QepcadB format:
(E skoSC1) (E skoMC1) [[(skoSC1 ((skoMC1 skoMC1 skoMC1 skoMC1 (-12))+(skoSC1 ((skoMC1 skoMC1 skoMC1 (1+(skoMC1 (-6))))+(skoSC1 ((skoMC1 skoMC1 skoMC1)+(skoSC1 ((skoMC1 skoMC1 skoMC1 (-1/12))+(skoSC1 skoMC1 skoMC1 skoMC1 (-1/12))))))))))<=(skoMC1 skoMC1 skoMC1 (2+(skoMC1 (6))))]/\[[(skoMC1 skoMC1 skoMC1 (-2))<(skoSC1 skoMC1 skoMC1 skoMC1 (2))]/\[[(skoMC1 skoMC1 skoMC1 (-1))<=0]/\[[(skoSC1 ((skoMC1 skoMC1 skoMC1 (1+(skoMC1 (-3))))+(skoSC1 ((skoMC1 skoMC1 skoMC1 (2+(skoMC1 (3))))+(skoSC1 ((skoMC1 skoMC1 skoMC1 skoMC1)+(skoSC1 skoMC1 skoMC1 skoMC1 (-1/12))))))))<=(skoMC1 skoMC1 skoMC1 (2+(skoMC1 (5))))]/\[[(skoSC1 ((skoMC1 skoMC1 skoMC1 (1+(skoMC1 (-3))))+(skoSC1 ((skoMC1 skoMC1 skoMC1 (2+(skoMC1 (3))))+(skoSC1 ((skoMC1 skoMC1 skoMC1 (-1/6+skoMC1))+(skoSC1 skoMC1 skoMC1 skoMC1 (-1/4))))))))<=(skoMC1 skoMC1 skoMC1 (2+(skoMC1 (5))))]/\[[(skoSC1 skoMC1 skoMC1 skoMC1 (-1))<=(skoMC1 skoMC1 skoMC1)]/\[[(skoMC1 skoMC1 skoMC1 (-2+(skoMC1 (-5))))<(skoSC1 ((skoMC1 skoMC1 skoMC1 (-1+(skoMC1 (3))))+(skoSC1 ((skoMC1 skoMC1 skoMC1 (-2+(skoMC1 (-3))))+(skoSC1 ((skoMC1 skoMC1 skoMC1 skoMC1 (-1))+(skoSC1 skoMC1 skoMC1 skoMC1 (1/12))))))))]/\[[(skoMC1 skoMC1 skoMC1 (-2+(skoMC1 (-5))))<(skoSC1 ((skoMC1 skoMC1 skoMC1 (-1+(skoMC1 (3))))+(skoSC1 ((skoMC1 skoMC1 skoMC1 (-2+(skoMC1 (-3))))+(skoSC1 ((skoMC1 skoMC1 skoMC1 (1/6+(skoMC1 (-1))))+(skoSC1 skoMC1 skoMC1 skoMC1 (1/4))))))))]/\[[(skoMC1 skoMC1 skoMC1 (-1))<(skoSC1 skoMC1 skoMC1 skoMC1)]/\[[(skoMC1 skoMC1 skoMC1 (-2))<=0]/\[[0<(skoMC1 skoMC1 skoMC1 (2))]/\[[(skoMC1 (-2+(skoMC1 (-5))))<(skoSC1 ((skoMC1 (-1+(skoMC1 (3))))+(skoSC1 ((skoMC1 (-2+(skoMC1 (-3))))+(skoSC1 ((skoMC1 (1/6+(skoMC1 (-1))))+(skoSC1 skoMC1 (1/4))))))))]/\[[(skoMC1 (-2+(skoMC1 (-5))))<(skoSC1 ((skoMC1 (-1+(skoMC1 (3))))+(skoSC1 ((skoMC1 (-2+(skoMC1 (-3))))+(skoSC1 ((skoMC1 skoMC1 (-1))+(skoSC1 skoMC1 (1/12))))))))]/\[[(skoSC1 ((skoMC1 (1+(skoMC1 (-3))))+(skoSC1 ((skoMC1 (2+(skoMC1 (3))))+(skoSC1 ((skoMC1 (-1/6+skoMC1))+(skoSC1 skoMC1 (-1/4))))))))<=(skoMC1 (2+(skoMC1 (5))))]/\[[(skoSC1 ((skoMC1 (1+(skoMC1 (-3))))+(skoSC1 ((skoMC1 (2+(skoMC1 (3))))+(skoSC1 ((skoMC1 skoMC1)+(skoSC1 skoMC1 (-1/12))))))))<=(skoMC1 (2+(skoMC1 (5))))]/\[[(skoSC1 skoMC1 (-1))<=skoMC1]/\[[(skoMC1 (-1))<(skoSC1 skoMC1)]/\[[0<=skoMC1]/\[[0<skoMC1]/\[[0<=skoSC1]/\[[2<=skoMC1]/\[[skoSC1<=5/4]/\[[(skoMC1 skoMC1 skoMC1 (-2))<(skoSC1 skoMC1 skoMC1 skoMC1 (2))]/\[[(skoSC1 skoMC1 skoMC1 skoMC1 (-2))<=(skoMC1 skoMC1 skoMC1 (2))]/\[(skoSC1 ((skoMC1 skoMC1 skoMC1 (-2+(skoMC1 (-12))))+(skoSC1 ((skoMC1 skoMC1 skoMC1 (1+(skoMC1 (-6))))+(skoSC1 ((skoMC1 skoMC1 skoMC1)+(skoSC1 ((skoMC1 skoMC1 skoMC1 (-1/12))+(skoSC1 skoMC1 skoMC1 skoMC1 (-1/12))))))))))<=(skoMC1 skoMC1 skoMC1 (2+(skoMC1 (6))))]]]]]]]]]]]]]]]]]]]]]]]]].

% In SMTLib2 format:
(declare-fun skoSC1 () Real) (declare-fun skoMC1 () Real) (assert (and (<= (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (* skoMC1 (- 12.))))) (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (+ 1. (* skoMC1 (- 6.)))))) (* skoSC1 (+ (* skoMC1 (* skoMC1 skoMC1)) (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (/ (- 1.) 12.)))) (* skoSC1 (* skoMC1 (* skoMC1 (* skoMC1 (/ (- 1.) 12.))))))))))))) (* skoMC1 (* skoMC1 (* skoMC1 (+ 2. (* skoMC1 6.)))))) (and (> (* skoSC1 (* skoMC1 (* skoMC1 (* skoMC1 2.)))) (* skoMC1 (* skoMC1 (* skoMC1 (- 2.))))) (and (<= (* skoMC1 (* skoMC1 (* skoMC1 (- 1.)))) 0.) (and (<= (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (+ 1. (* skoMC1 (- 3.)))))) (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (+ 2. (* skoMC1 3.))))) (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 skoMC1))) (* skoSC1 (* skoMC1 (* skoMC1 (* skoMC1 (/ (- 1.) 12.))))))))))) (* skoMC1 (* skoMC1 (* skoMC1 (+ 2. (* skoMC1 5.)))))) (and (<= (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (+ 1. (* skoMC1 (- 3.)))))) (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (+ 2. (* skoMC1 3.))))) (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (+ (/ (- 1.) 6.) skoMC1)))) (* skoSC1 (* skoMC1 (* skoMC1 (* skoMC1 (/ (- 1.) 4.))))))))))) (* skoMC1 (* skoMC1 (* skoMC1 (+ 2. (* skoMC1 5.)))))) (and (<= (* skoSC1 (* skoMC1 (* skoMC1 (* skoMC1 (- 1.))))) (* skoMC1 (* skoMC1 skoMC1))) (and (> (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (+ (- 1.) (* skoMC1 3.))))) (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (+ (- 2.) (* skoMC1 (- 3.)))))) (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (* skoMC1 (- 1.))))) (* skoSC1 (* skoMC1 (* skoMC1 (* skoMC1 (/ 1. 12.))))))))))) (* skoMC1 (* skoMC1 (* skoMC1 (+ (- 2.) (* skoMC1 (- 5.))))))) (and (> (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (+ (- 1.) (* skoMC1 3.))))) (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (+ (- 2.) (* skoMC1 (- 3.)))))) (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (+ (/ 1. 6.) (* skoMC1 (- 1.)))))) (* skoSC1 (* skoMC1 (* skoMC1 (* skoMC1 (/ 1. 4.))))))))))) (* skoMC1 (* skoMC1 (* skoMC1 (+ (- 2.) (* skoMC1 (- 5.))))))) (and (> (* skoSC1 (* skoMC1 (* skoMC1 skoMC1))) (* skoMC1 (* skoMC1 (* skoMC1 (- 1.))))) (and (<= (* skoMC1 (* skoMC1 (* skoMC1 (- 2.)))) 0.) (and (> (* skoMC1 (* skoMC1 (* skoMC1 2.))) 0.) (and (> (* skoSC1 (+ (* skoMC1 (+ (- 1.) (* skoMC1 3.))) (* skoSC1 (+ (* skoMC1 (+ (- 2.) (* skoMC1 (- 3.)))) (* skoSC1 (+ (* skoMC1 (+ (/ 1. 6.) (* skoMC1 (- 1.)))) (* skoSC1 (* skoMC1 (/ 1. 4.))))))))) (* skoMC1 (+ (- 2.) (* skoMC1 (- 5.))))) (and (> (* skoSC1 (+ (* skoMC1 (+ (- 1.) (* skoMC1 3.))) (* skoSC1 (+ (* skoMC1 (+ (- 2.) (* skoMC1 (- 3.)))) (* skoSC1 (+ (* skoMC1 (* skoMC1 (- 1.))) (* skoSC1 (* skoMC1 (/ 1. 12.))))))))) (* skoMC1 (+ (- 2.) (* skoMC1 (- 5.))))) (and (<= (* skoSC1 (+ (* skoMC1 (+ 1. (* skoMC1 (- 3.)))) (* skoSC1 (+ (* skoMC1 (+ 2. (* skoMC1 3.))) (* skoSC1 (+ (* skoMC1 (+ (/ (- 1.) 6.) skoMC1)) (* skoSC1 (* skoMC1 (/ (- 1.) 4.))))))))) (* skoMC1 (+ 2. (* skoMC1 5.)))) (and (<= (* skoSC1 (+ (* skoMC1 (+ 1. (* skoMC1 (- 3.)))) (* skoSC1 (+ (* skoMC1 (+ 2. (* skoMC1 3.))) (* skoSC1 (+ (* skoMC1 skoMC1) (* skoSC1 (* skoMC1 (/ (- 1.) 12.))))))))) (* skoMC1 (+ 2. (* skoMC1 5.)))) (and (<= (* skoSC1 (* skoMC1 (- 1.))) skoMC1) (and (> (* skoSC1 skoMC1) (* skoMC1 (- 1.))) (and (<= 0. skoMC1) (and (> skoMC1 0.) (and (<= 0. skoSC1) (and (<= 2. skoMC1) (and (<= skoSC1 (/ 5. 4.)) (and (> (* skoSC1 (* skoMC1 (* skoMC1 (* skoMC1 2.)))) (* skoMC1 (* skoMC1 (* skoMC1 (- 2.))))) (and (<= (* skoSC1 (* skoMC1 (* skoMC1 (* skoMC1 (- 2.))))) (* skoMC1 (* skoMC1 (* skoMC1 2.)))) (<= (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (+ (- 2.) (* skoMC1 (- 12.)))))) (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (+ 1. (* skoMC1 (- 6.)))))) (* skoSC1 (+ (* skoMC1 (* skoMC1 skoMC1)) (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (/ (- 1.) 12.)))) (* skoSC1 (* skoMC1 (* skoMC1 (* skoMC1 (/ (- 1.) 12.))))))))))))) (* skoMC1 (* skoMC1 (* skoMC1 (+ 2. (* skoMC1 6.)))))))))))))))))))))))))))))))

% In GRF format:
(sequent " MetiTarski formula " (antecedent (<= (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (* skoMC1 (- 12.))))) (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (+ 1. (* skoMC1 (- 6.)))))) (* skoSC1 (+ (* skoMC1 (* skoMC1 skoMC1)) (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (/ (- 1.) 12.)))) (* skoSC1 (* skoMC1 (* skoMC1 (* skoMC1 (/ (- 1.) 12.))))))))))))) (* skoMC1 (* skoMC1 (* skoMC1 (+ 2. (* skoMC1 6.)))))) (> (* skoSC1 (* skoMC1 (* skoMC1 (* skoMC1 2.)))) (* skoMC1 (* skoMC1 (* skoMC1 (- 2.))))) (<= (* skoMC1 (* skoMC1 (* skoMC1 (- 1.)))) 0.) (<= (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (+ 1. (* skoMC1 (- 3.)))))) (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (+ 2. (* skoMC1 3.))))) (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 skoMC1))) (* skoSC1 (* skoMC1 (* skoMC1 (* skoMC1 (/ (- 1.) 12.))))))))))) (* skoMC1 (* skoMC1 (* skoMC1 (+ 2. (* skoMC1 5.)))))) (<= (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (+ 1. (* skoMC1 (- 3.)))))) (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (+ 2. (* skoMC1 3.))))) (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (+ (/ (- 1.) 6.) skoMC1)))) (* skoSC1 (* skoMC1 (* skoMC1 (* skoMC1 (/ (- 1.) 4.))))))))))) (* skoMC1 (* skoMC1 (* skoMC1 (+ 2. (* skoMC1 5.)))))) (<= (* skoSC1 (* skoMC1 (* skoMC1 (* skoMC1 (- 1.))))) (* skoMC1 (* skoMC1 skoMC1))) (> (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (+ (- 1.) (* skoMC1 3.))))) (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (+ (- 2.) (* skoMC1 (- 3.)))))) (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (* skoMC1 (- 1.))))) (* skoSC1 (* skoMC1 (* skoMC1 (* skoMC1 (/ 1. 12.))))))))))) (* skoMC1 (* skoMC1 (* skoMC1 (+ (- 2.) (* skoMC1 (- 5.))))))) (> (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (+ (- 1.) (* skoMC1 3.))))) (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (+ (- 2.) (* skoMC1 (- 3.)))))) (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (+ (/ 1. 6.) (* skoMC1 (- 1.)))))) (* skoSC1 (* skoMC1 (* skoMC1 (* skoMC1 (/ 1. 4.))))))))))) (* skoMC1 (* skoMC1 (* skoMC1 (+ (- 2.) (* skoMC1 (- 5.))))))) (> (* skoSC1 (* skoMC1 (* skoMC1 skoMC1))) (* skoMC1 (* skoMC1 (* skoMC1 (- 1.))))) (<= (* skoMC1 (* skoMC1 (* skoMC1 (- 2.)))) 0.) (> (* skoMC1 (* skoMC1 (* skoMC1 2.))) 0.) (> (* skoSC1 (+ (* skoMC1 (+ (- 1.) (* skoMC1 3.))) (* skoSC1 (+ (* skoMC1 (+ (- 2.) (* skoMC1 (- 3.)))) (* skoSC1 (+ (* skoMC1 (+ (/ 1. 6.) (* skoMC1 (- 1.)))) (* skoSC1 (* skoMC1 (/ 1. 4.))))))))) (* skoMC1 (+ (- 2.) (* skoMC1 (- 5.))))) (> (* skoSC1 (+ (* skoMC1 (+ (- 1.) (* skoMC1 3.))) (* skoSC1 (+ (* skoMC1 (+ (- 2.) (* skoMC1 (- 3.)))) (* skoSC1 (+ (* skoMC1 (* skoMC1 (- 1.))) (* skoSC1 (* skoMC1 (/ 1. 12.))))))))) (* skoMC1 (+ (- 2.) (* skoMC1 (- 5.))))) (<= (* skoSC1 (+ (* skoMC1 (+ 1. (* skoMC1 (- 3.)))) (* skoSC1 (+ (* skoMC1 (+ 2. (* skoMC1 3.))) (* skoSC1 (+ (* skoMC1 (+ (/ (- 1.) 6.) skoMC1)) (* skoSC1 (* skoMC1 (/ (- 1.) 4.))))))))) (* skoMC1 (+ 2. (* skoMC1 5.)))) (<= (* skoSC1 (+ (* skoMC1 (+ 1. (* skoMC1 (- 3.)))) (* skoSC1 (+ (* skoMC1 (+ 2. (* skoMC1 3.))) (* skoSC1 (+ (* skoMC1 skoMC1) (* skoSC1 (* skoMC1 (/ (- 1.) 12.))))))))) (* skoMC1 (+ 2. (* skoMC1 5.)))) (<= (* skoSC1 (* skoMC1 (- 1.))) skoMC1) (> (* skoSC1 skoMC1) (* skoMC1 (- 1.))) (<= 0. skoMC1) (> skoMC1 0.) (<= 0. skoSC1) (<= 2. skoMC1) (<= skoSC1 (/ 5. 4.)) (> (* skoSC1 (* skoMC1 (* skoMC1 (* skoMC1 2.)))) (* skoMC1 (* skoMC1 (* skoMC1 (- 2.))))) (<= (* skoSC1 (* skoMC1 (* skoMC1 (* skoMC1 (- 2.))))) (* skoMC1 (* skoMC1 (* skoMC1 2.))))) (succedent (> (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (+ (- 2.) (* skoMC1 (- 12.)))))) (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (+ 1. (* skoMC1 (- 6.)))))) (* skoSC1 (+ (* skoMC1 (* skoMC1 skoMC1)) (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (/ (- 1.) 12.)))) (* skoSC1 (* skoMC1 (* skoMC1 (* skoMC1 (/ (- 1.) 12.))))))))))))) (* skoMC1 (* skoMC1 (* skoMC1 (+ 2. (* skoMC1 6.))))))))
-----[end problem]-----

-----[begin problem]-----
% In Mathematica format:
Timing[Resolve[Exists[{skoSC1,skoMC1}, And[skoSC1*skoMC1*skoMC1*skoMC1*-2<=skoMC1*skoMC1*skoMC1*2,skoMC1*skoMC1*skoMC1*-1<=0,skoSC1*(skoMC1*skoMC1*skoMC1*(1+skoMC1*-3)+skoSC1*(skoMC1*skoMC1*skoMC1*(2+skoMC1*3)+skoSC1*(skoMC1*skoMC1*skoMC1*skoMC1+skoSC1*skoMC1*skoMC1*skoMC1*(-1/12))))<=skoMC1*skoMC1*skoMC1*(2+skoMC1*5),skoSC1*(skoMC1*skoMC1*skoMC1*(1+skoMC1*-3)+skoSC1*(skoMC1*skoMC1*skoMC1*(2+skoMC1*3)+skoSC1*(skoMC1*skoMC1*skoMC1*((-1/6)+skoMC1)+skoSC1*skoMC1*skoMC1*skoMC1*(-1/4))))<=skoMC1*skoMC1*skoMC1*(2+skoMC1*5),skoSC1*skoMC1*skoMC1*skoMC1*-1<=skoMC1*skoMC1*skoMC1,skoSC1*(skoMC1*skoMC1*skoMC1*(-1+skoMC1*3)+skoSC1*(skoMC1*skoMC1*skoMC1*(-2+skoMC1*-3)+skoSC1*(skoMC1*skoMC1*skoMC1*skoMC1*-1+skoSC1*skoMC1*skoMC1*skoMC1*(1/12))))>skoMC1*skoMC1*skoMC1*(-2+skoMC1*-5),skoSC1*(skoMC1*skoMC1*skoMC1*(-1+skoMC1*3)+skoSC1*(skoMC1*skoMC1*skoMC1*(-2+skoMC1*-3)+skoSC1*(skoMC1*skoMC1*skoMC1*((1/6)+skoMC1*-1)+skoSC1*skoMC1*skoMC1*skoMC1*(1/4))))>skoMC1*skoMC1*skoMC1*(-2+skoMC1*-5),skoSC1*skoMC1*skoMC1*skoMC1>skoMC1*skoMC1*skoMC1*-1,skoMC1*skoMC1*skoMC1*-2<=0,skoMC1*skoMC1*skoMC1*2>0,skoSC1*(skoMC1*(-1+skoMC1*3)+skoSC1*(skoMC1*(-2+skoMC1*-3)+skoSC1*(skoMC1*((1/6)+skoMC1*-1)+skoSC1*skoMC1*(1/4))))>skoMC1*(-2+skoMC1*-5),skoSC1*(skoMC1*(-1+skoMC1*3)+skoSC1*(skoMC1*(-2+skoMC1*-3)+skoSC1*(skoMC1*skoMC1*-1+skoSC1*skoMC1*(1/12))))>skoMC1*(-2+skoMC1*-5),skoSC1*(skoMC1*(1+skoMC1*-3)+skoSC1*(skoMC1*(2+skoMC1*3)+skoSC1*(skoMC1*((-1/6)+skoMC1)+skoSC1*skoMC1*(-1/4))))<=skoMC1*(2+skoMC1*5),skoSC1*(skoMC1*(1+skoMC1*-3)+skoSC1*(skoMC1*(2+skoMC1*3)+skoSC1*(skoMC1*skoMC1+skoSC1*skoMC1*(-1/12))))<=skoMC1*(2+skoMC1*5),skoSC1*skoMC1*-1<=skoMC1,skoSC1*skoMC1>skoMC1*-1,0<=skoMC1,skoMC1>0,0<=skoSC1,2<=skoMC1,skoSC1<=(5/4),skoSC1*skoMC1*skoMC1*skoMC1*2>skoMC1*skoMC1*skoMC1*-2,skoSC1*skoMC1*skoMC1*skoMC1*-2<=skoMC1*skoMC1*skoMC1*2,skoSC1*(skoMC1*skoMC1*skoMC1*(-2+skoMC1*-12)+skoSC1*(skoMC1*skoMC1*skoMC1*(1+skoMC1*-6)+skoSC1*(skoMC1*skoMC1*skoMC1+skoSC1*(skoMC1*skoMC1*skoMC1*(-1/12)+skoSC1*skoMC1*skoMC1*skoMC1*(-1/12)))))<=skoMC1*skoMC1*skoMC1*(2+skoMC1*6)]], Reals]]

% In QepcadB format:
(E skoSC1) (E skoMC1) [[(skoSC1 skoMC1 skoMC1 skoMC1 (-2))<=(skoMC1 skoMC1 skoMC1 (2))]/\[[(skoMC1 skoMC1 skoMC1 (-1))<=0]/\[[(skoSC1 ((skoMC1 skoMC1 skoMC1 (1+(skoMC1 (-3))))+(skoSC1 ((skoMC1 skoMC1 skoMC1 (2+(skoMC1 (3))))+(skoSC1 ((skoMC1 skoMC1 skoMC1 skoMC1)+(skoSC1 skoMC1 skoMC1 skoMC1 (-1/12))))))))<=(skoMC1 skoMC1 skoMC1 (2+(skoMC1 (5))))]/\[[(skoSC1 ((skoMC1 skoMC1 skoMC1 (1+(skoMC1 (-3))))+(skoSC1 ((skoMC1 skoMC1 skoMC1 (2+(skoMC1 (3))))+(skoSC1 ((skoMC1 skoMC1 skoMC1 (-1/6+skoMC1))+(skoSC1 skoMC1 skoMC1 skoMC1 (-1/4))))))))<=(skoMC1 skoMC1 skoMC1 (2+(skoMC1 (5))))]/\[[(skoSC1 skoMC1 skoMC1 skoMC1 (-1))<=(skoMC1 skoMC1 skoMC1)]/\[[(skoMC1 skoMC1 skoMC1 (-2+(skoMC1 (-5))))<(skoSC1 ((skoMC1 skoMC1 skoMC1 (-1+(skoMC1 (3))))+(skoSC1 ((skoMC1 skoMC1 skoMC1 (-2+(skoMC1 (-3))))+(skoSC1 ((skoMC1 skoMC1 skoMC1 skoMC1 (-1))+(skoSC1 skoMC1 skoMC1 skoMC1 (1/12))))))))]/\[[(skoMC1 skoMC1 skoMC1 (-2+(skoMC1 (-5))))<(skoSC1 ((skoMC1 skoMC1 skoMC1 (-1+(skoMC1 (3))))+(skoSC1 ((skoMC1 skoMC1 skoMC1 (-2+(skoMC1 (-3))))+(skoSC1 ((skoMC1 skoMC1 skoMC1 (1/6+(skoMC1 (-1))))+(skoSC1 skoMC1 skoMC1 skoMC1 (1/4))))))))]/\[[(skoMC1 skoMC1 skoMC1 (-1))<(skoSC1 skoMC1 skoMC1 skoMC1)]/\[[(skoMC1 skoMC1 skoMC1 (-2))<=0]/\[[0<(skoMC1 skoMC1 skoMC1 (2))]/\[[(skoMC1 (-2+(skoMC1 (-5))))<(skoSC1 ((skoMC1 (-1+(skoMC1 (3))))+(skoSC1 ((skoMC1 (-2+(skoMC1 (-3))))+(skoSC1 ((skoMC1 (1/6+(skoMC1 (-1))))+(skoSC1 skoMC1 (1/4))))))))]/\[[(skoMC1 (-2+(skoMC1 (-5))))<(skoSC1 ((skoMC1 (-1+(skoMC1 (3))))+(skoSC1 ((skoMC1 (-2+(skoMC1 (-3))))+(skoSC1 ((skoMC1 skoMC1 (-1))+(skoSC1 skoMC1 (1/12))))))))]/\[[(skoSC1 ((skoMC1 (1+(skoMC1 (-3))))+(skoSC1 ((skoMC1 (2+(skoMC1 (3))))+(skoSC1 ((skoMC1 (-1/6+skoMC1))+(skoSC1 skoMC1 (-1/4))))))))<=(skoMC1 (2+(skoMC1 (5))))]/\[[(skoSC1 ((skoMC1 (1+(skoMC1 (-3))))+(skoSC1 ((skoMC1 (2+(skoMC1 (3))))+(skoSC1 ((skoMC1 skoMC1)+(skoSC1 skoMC1 (-1/12))))))))<=(skoMC1 (2+(skoMC1 (5))))]/\[[(skoSC1 skoMC1 (-1))<=skoMC1]/\[[(skoMC1 (-1))<(skoSC1 skoMC1)]/\[[0<=skoMC1]/\[[0<skoMC1]/\[[0<=skoSC1]/\[[2<=skoMC1]/\[[skoSC1<=5/4]/\[[(skoMC1 skoMC1 skoMC1 (-2))<(skoSC1 skoMC1 skoMC1 skoMC1 (2))]/\[[(skoSC1 skoMC1 skoMC1 skoMC1 (-2))<=(skoMC1 skoMC1 skoMC1 (2))]/\[(skoSC1 ((skoMC1 skoMC1 skoMC1 (-2+(skoMC1 (-12))))+(skoSC1 ((skoMC1 skoMC1 skoMC1 (1+(skoMC1 (-6))))+(skoSC1 ((skoMC1 skoMC1 skoMC1)+(skoSC1 ((skoMC1 skoMC1 skoMC1 (-1/12))+(skoSC1 skoMC1 skoMC1 skoMC1 (-1/12))))))))))<=(skoMC1 skoMC1 skoMC1 (2+(skoMC1 (6))))]]]]]]]]]]]]]]]]]]]]]]]].

% In SMTLib2 format:
(declare-fun skoSC1 () Real) (declare-fun skoMC1 () Real) (assert (and (<= (* skoSC1 (* skoMC1 (* skoMC1 (* skoMC1 (- 2.))))) (* skoMC1 (* skoMC1 (* skoMC1 2.)))) (and (<= (* skoMC1 (* skoMC1 (* skoMC1 (- 1.)))) 0.) (and (<= (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (+ 1. (* skoMC1 (- 3.)))))) (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (+ 2. (* skoMC1 3.))))) (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 skoMC1))) (* skoSC1 (* skoMC1 (* skoMC1 (* skoMC1 (/ (- 1.) 12.))))))))))) (* skoMC1 (* skoMC1 (* skoMC1 (+ 2. (* skoMC1 5.)))))) (and (<= (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (+ 1. (* skoMC1 (- 3.)))))) (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (+ 2. (* skoMC1 3.))))) (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (+ (/ (- 1.) 6.) skoMC1)))) (* skoSC1 (* skoMC1 (* skoMC1 (* skoMC1 (/ (- 1.) 4.))))))))))) (* skoMC1 (* skoMC1 (* skoMC1 (+ 2. (* skoMC1 5.)))))) (and (<= (* skoSC1 (* skoMC1 (* skoMC1 (* skoMC1 (- 1.))))) (* skoMC1 (* skoMC1 skoMC1))) (and (> (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (+ (- 1.) (* skoMC1 3.))))) (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (+ (- 2.) (* skoMC1 (- 3.)))))) (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (* skoMC1 (- 1.))))) (* skoSC1 (* skoMC1 (* skoMC1 (* skoMC1 (/ 1. 12.))))))))))) (* skoMC1 (* skoMC1 (* skoMC1 (+ (- 2.) (* skoMC1 (- 5.))))))) (and (> (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (+ (- 1.) (* skoMC1 3.))))) (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (+ (- 2.) (* skoMC1 (- 3.)))))) (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (+ (/ 1. 6.) (* skoMC1 (- 1.)))))) (* skoSC1 (* skoMC1 (* skoMC1 (* skoMC1 (/ 1. 4.))))))))))) (* skoMC1 (* skoMC1 (* skoMC1 (+ (- 2.) (* skoMC1 (- 5.))))))) (and (> (* skoSC1 (* skoMC1 (* skoMC1 skoMC1))) (* skoMC1 (* skoMC1 (* skoMC1 (- 1.))))) (and (<= (* skoMC1 (* skoMC1 (* skoMC1 (- 2.)))) 0.) (and (> (* skoMC1 (* skoMC1 (* skoMC1 2.))) 0.) (and (> (* skoSC1 (+ (* skoMC1 (+ (- 1.) (* skoMC1 3.))) (* skoSC1 (+ (* skoMC1 (+ (- 2.) (* skoMC1 (- 3.)))) (* skoSC1 (+ (* skoMC1 (+ (/ 1. 6.) (* skoMC1 (- 1.)))) (* skoSC1 (* skoMC1 (/ 1. 4.))))))))) (* skoMC1 (+ (- 2.) (* skoMC1 (- 5.))))) (and (> (* skoSC1 (+ (* skoMC1 (+ (- 1.) (* skoMC1 3.))) (* skoSC1 (+ (* skoMC1 (+ (- 2.) (* skoMC1 (- 3.)))) (* skoSC1 (+ (* skoMC1 (* skoMC1 (- 1.))) (* skoSC1 (* skoMC1 (/ 1. 12.))))))))) (* skoMC1 (+ (- 2.) (* skoMC1 (- 5.))))) (and (<= (* skoSC1 (+ (* skoMC1 (+ 1. (* skoMC1 (- 3.)))) (* skoSC1 (+ (* skoMC1 (+ 2. (* skoMC1 3.))) (* skoSC1 (+ (* skoMC1 (+ (/ (- 1.) 6.) skoMC1)) (* skoSC1 (* skoMC1 (/ (- 1.) 4.))))))))) (* skoMC1 (+ 2. (* skoMC1 5.)))) (and (<= (* skoSC1 (+ (* skoMC1 (+ 1. (* skoMC1 (- 3.)))) (* skoSC1 (+ (* skoMC1 (+ 2. (* skoMC1 3.))) (* skoSC1 (+ (* skoMC1 skoMC1) (* skoSC1 (* skoMC1 (/ (- 1.) 12.))))))))) (* skoMC1 (+ 2. (* skoMC1 5.)))) (and (<= (* skoSC1 (* skoMC1 (- 1.))) skoMC1) (and (> (* skoSC1 skoMC1) (* skoMC1 (- 1.))) (and (<= 0. skoMC1) (and (> skoMC1 0.) (and (<= 0. skoSC1) (and (<= 2. skoMC1) (and (<= skoSC1 (/ 5. 4.)) (and (> (* skoSC1 (* skoMC1 (* skoMC1 (* skoMC1 2.)))) (* skoMC1 (* skoMC1 (* skoMC1 (- 2.))))) (and (<= (* skoSC1 (* skoMC1 (* skoMC1 (* skoMC1 (- 2.))))) (* skoMC1 (* skoMC1 (* skoMC1 2.)))) (<= (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (+ (- 2.) (* skoMC1 (- 12.)))))) (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (+ 1. (* skoMC1 (- 6.)))))) (* skoSC1 (+ (* skoMC1 (* skoMC1 skoMC1)) (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (/ (- 1.) 12.)))) (* skoSC1 (* skoMC1 (* skoMC1 (* skoMC1 (/ (- 1.) 12.))))))))))))) (* skoMC1 (* skoMC1 (* skoMC1 (+ 2. (* skoMC1 6.))))))))))))))))))))))))))))))

% In GRF format:
(sequent " MetiTarski formula " (antecedent (<= (* skoSC1 (* skoMC1 (* skoMC1 (* skoMC1 (- 2.))))) (* skoMC1 (* skoMC1 (* skoMC1 2.)))) (<= (* skoMC1 (* skoMC1 (* skoMC1 (- 1.)))) 0.) (<= (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (+ 1. (* skoMC1 (- 3.)))))) (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (+ 2. (* skoMC1 3.))))) (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 skoMC1))) (* skoSC1 (* skoMC1 (* skoMC1 (* skoMC1 (/ (- 1.) 12.))))))))))) (* skoMC1 (* skoMC1 (* skoMC1 (+ 2. (* skoMC1 5.)))))) (<= (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (+ 1. (* skoMC1 (- 3.)))))) (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (+ 2. (* skoMC1 3.))))) (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (+ (/ (- 1.) 6.) skoMC1)))) (* skoSC1 (* skoMC1 (* skoMC1 (* skoMC1 (/ (- 1.) 4.))))))))))) (* skoMC1 (* skoMC1 (* skoMC1 (+ 2. (* skoMC1 5.)))))) (<= (* skoSC1 (* skoMC1 (* skoMC1 (* skoMC1 (- 1.))))) (* skoMC1 (* skoMC1 skoMC1))) (> (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (+ (- 1.) (* skoMC1 3.))))) (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (+ (- 2.) (* skoMC1 (- 3.)))))) (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (* skoMC1 (- 1.))))) (* skoSC1 (* skoMC1 (* skoMC1 (* skoMC1 (/ 1. 12.))))))))))) (* skoMC1 (* skoMC1 (* skoMC1 (+ (- 2.) (* skoMC1 (- 5.))))))) (> (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (+ (- 1.) (* skoMC1 3.))))) (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (+ (- 2.) (* skoMC1 (- 3.)))))) (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (+ (/ 1. 6.) (* skoMC1 (- 1.)))))) (* skoSC1 (* skoMC1 (* skoMC1 (* skoMC1 (/ 1. 4.))))))))))) (* skoMC1 (* skoMC1 (* skoMC1 (+ (- 2.) (* skoMC1 (- 5.))))))) (> (* skoSC1 (* skoMC1 (* skoMC1 skoMC1))) (* skoMC1 (* skoMC1 (* skoMC1 (- 1.))))) (<= (* skoMC1 (* skoMC1 (* skoMC1 (- 2.)))) 0.) (> (* skoMC1 (* skoMC1 (* skoMC1 2.))) 0.) (> (* skoSC1 (+ (* skoMC1 (+ (- 1.) (* skoMC1 3.))) (* skoSC1 (+ (* skoMC1 (+ (- 2.) (* skoMC1 (- 3.)))) (* skoSC1 (+ (* skoMC1 (+ (/ 1. 6.) (* skoMC1 (- 1.)))) (* skoSC1 (* skoMC1 (/ 1. 4.))))))))) (* skoMC1 (+ (- 2.) (* skoMC1 (- 5.))))) (> (* skoSC1 (+ (* skoMC1 (+ (- 1.) (* skoMC1 3.))) (* skoSC1 (+ (* skoMC1 (+ (- 2.) (* skoMC1 (- 3.)))) (* skoSC1 (+ (* skoMC1 (* skoMC1 (- 1.))) (* skoSC1 (* skoMC1 (/ 1. 12.))))))))) (* skoMC1 (+ (- 2.) (* skoMC1 (- 5.))))) (<= (* skoSC1 (+ (* skoMC1 (+ 1. (* skoMC1 (- 3.)))) (* skoSC1 (+ (* skoMC1 (+ 2. (* skoMC1 3.))) (* skoSC1 (+ (* skoMC1 (+ (/ (- 1.) 6.) skoMC1)) (* skoSC1 (* skoMC1 (/ (- 1.) 4.))))))))) (* skoMC1 (+ 2. (* skoMC1 5.)))) (<= (* skoSC1 (+ (* skoMC1 (+ 1. (* skoMC1 (- 3.)))) (* skoSC1 (+ (* skoMC1 (+ 2. (* skoMC1 3.))) (* skoSC1 (+ (* skoMC1 skoMC1) (* skoSC1 (* skoMC1 (/ (- 1.) 12.))))))))) (* skoMC1 (+ 2. (* skoMC1 5.)))) (<= (* skoSC1 (* skoMC1 (- 1.))) skoMC1) (> (* skoSC1 skoMC1) (* skoMC1 (- 1.))) (<= 0. skoMC1) (> skoMC1 0.) (<= 0. skoSC1) (<= 2. skoMC1) (<= skoSC1 (/ 5. 4.)) (> (* skoSC1 (* skoMC1 (* skoMC1 (* skoMC1 2.)))) (* skoMC1 (* skoMC1 (* skoMC1 (- 2.))))) (<= (* skoSC1 (* skoMC1 (* skoMC1 (* skoMC1 (- 2.))))) (* skoMC1 (* skoMC1 (* skoMC1 2.))))) (succedent (> (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (+ (- 2.) (* skoMC1 (- 12.)))))) (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (+ 1. (* skoMC1 (- 6.)))))) (* skoSC1 (+ (* skoMC1 (* skoMC1 skoMC1)) (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (/ (- 1.) 12.)))) (* skoSC1 (* skoMC1 (* skoMC1 (* skoMC1 (/ (- 1.) 12.))))))))))))) (* skoMC1 (* skoMC1 (* skoMC1 (+ 2. (* skoMC1 6.))))))))
-----[end problem]-----

-----[begin problem]-----
% In Mathematica format:
Timing[Resolve[Exists[{skoSC1,skoMC1}, And[skoSC1*(skoMC1*skoMC1*skoMC1*skoMC1*-12+skoSC1*(skoMC1*skoMC1*skoMC1*(1+skoMC1*-6)+skoSC1*(skoMC1*skoMC1*skoMC1+skoSC1*(skoMC1*skoMC1*skoMC1*(-1/12)+skoSC1*skoMC1*skoMC1*skoMC1*(-1/12)))))<=skoMC1*skoMC1*skoMC1*(2+skoMC1*6),skoMC1*skoMC1*skoMC1*-1<=0,skoSC1*(skoMC1*skoMC1*skoMC1*(1+skoMC1*-3)+skoSC1*(skoMC1*skoMC1*skoMC1*(2+skoMC1*3)+skoSC1*(skoMC1*skoMC1*skoMC1*skoMC1+skoSC1*skoMC1*skoMC1*skoMC1*(-1/12))))<=skoMC1*skoMC1*skoMC1*(2+skoMC1*5),skoSC1*(skoMC1*skoMC1*skoMC1*(1+skoMC1*-3)+skoSC1*(skoMC1*skoMC1*skoMC1*(2+skoMC1*3)+skoSC1*(skoMC1*skoMC1*skoMC1*((-1/6)+skoMC1)+skoSC1*skoMC1*skoMC1*skoMC1*(-1/4))))<=skoMC1*skoMC1*skoMC1*(2+skoMC1*5),skoSC1*skoMC1*skoMC1*skoMC1*-1<=skoMC1*skoMC1*skoMC1,skoSC1*(skoMC1*skoMC1*skoMC1*(-1+skoMC1*3)+skoSC1*(skoMC1*skoMC1*skoMC1*(-2+skoMC1*-3)+skoSC1*(skoMC1*skoMC1*skoMC1*skoMC1*-1+skoSC1*skoMC1*skoMC1*skoMC1*(1/12))))>skoMC1*skoMC1*skoMC1*(-2+skoMC1*-5),skoSC1*(skoMC1*skoMC1*skoMC1*(-1+skoMC1*3)+skoSC1*(skoMC1*skoMC1*skoMC1*(-2+skoMC1*-3)+skoSC1*(skoMC1*skoMC1*skoMC1*((1/6)+skoMC1*-1)+skoSC1*skoMC1*skoMC1*skoMC1*(1/4))))>skoMC1*skoMC1*skoMC1*(-2+skoMC1*-5),skoSC1*skoMC1*skoMC1*skoMC1>skoMC1*skoMC1*skoMC1*-1,skoMC1*skoMC1*skoMC1*-2<=0,skoMC1*skoMC1*skoMC1*2>0,skoSC1*(skoMC1*(-1+skoMC1*3)+skoSC1*(skoMC1*(-2+skoMC1*-3)+skoSC1*(skoMC1*((1/6)+skoMC1*-1)+skoSC1*skoMC1*(1/4))))>skoMC1*(-2+skoMC1*-5),skoSC1*(skoMC1*(-1+skoMC1*3)+skoSC1*(skoMC1*(-2+skoMC1*-3)+skoSC1*(skoMC1*skoMC1*-1+skoSC1*skoMC1*(1/12))))>skoMC1*(-2+skoMC1*-5),skoSC1*(skoMC1*(1+skoMC1*-3)+skoSC1*(skoMC1*(2+skoMC1*3)+skoSC1*(skoMC1*((-1/6)+skoMC1)+skoSC1*skoMC1*(-1/4))))<=skoMC1*(2+skoMC1*5),skoSC1*(skoMC1*(1+skoMC1*-3)+skoSC1*(skoMC1*(2+skoMC1*3)+skoSC1*(skoMC1*skoMC1+skoSC1*skoMC1*(-1/12))))<=skoMC1*(2+skoMC1*5),skoSC1*skoMC1*-1<=skoMC1,skoSC1*skoMC1>skoMC1*-1,0<=skoMC1,skoMC1>0,0<=skoSC1,2<=skoMC1,skoSC1<=(5/4),skoSC1*skoMC1*skoMC1*skoMC1*2>skoMC1*skoMC1*skoMC1*-2,skoSC1*skoMC1*skoMC1*skoMC1*-2<=skoMC1*skoMC1*skoMC1*2,skoSC1*(skoMC1*skoMC1*skoMC1*(-2+skoMC1*-12)+skoSC1*(skoMC1*skoMC1*skoMC1*(1+skoMC1*-6)+skoSC1*(skoMC1*skoMC1*skoMC1+skoSC1*(skoMC1*skoMC1*skoMC1*(-1/12)+skoSC1*skoMC1*skoMC1*skoMC1*(-1/12)))))<=skoMC1*skoMC1*skoMC1*(2+skoMC1*6)]], Reals]]

% In QepcadB format:
(E skoSC1) (E skoMC1) [[(skoSC1 ((skoMC1 skoMC1 skoMC1 skoMC1 (-12))+(skoSC1 ((skoMC1 skoMC1 skoMC1 (1+(skoMC1 (-6))))+(skoSC1 ((skoMC1 skoMC1 skoMC1)+(skoSC1 ((skoMC1 skoMC1 skoMC1 (-1/12))+(skoSC1 skoMC1 skoMC1 skoMC1 (-1/12))))))))))<=(skoMC1 skoMC1 skoMC1 (2+(skoMC1 (6))))]/\[[(skoMC1 skoMC1 skoMC1 (-1))<=0]/\[[(skoSC1 ((skoMC1 skoMC1 skoMC1 (1+(skoMC1 (-3))))+(skoSC1 ((skoMC1 skoMC1 skoMC1 (2+(skoMC1 (3))))+(skoSC1 ((skoMC1 skoMC1 skoMC1 skoMC1)+(skoSC1 skoMC1 skoMC1 skoMC1 (-1/12))))))))<=(skoMC1 skoMC1 skoMC1 (2+(skoMC1 (5))))]/\[[(skoSC1 ((skoMC1 skoMC1 skoMC1 (1+(skoMC1 (-3))))+(skoSC1 ((skoMC1 skoMC1 skoMC1 (2+(skoMC1 (3))))+(skoSC1 ((skoMC1 skoMC1 skoMC1 (-1/6+skoMC1))+(skoSC1 skoMC1 skoMC1 skoMC1 (-1/4))))))))<=(skoMC1 skoMC1 skoMC1 (2+(skoMC1 (5))))]/\[[(skoSC1 skoMC1 skoMC1 skoMC1 (-1))<=(skoMC1 skoMC1 skoMC1)]/\[[(skoMC1 skoMC1 skoMC1 (-2+(skoMC1 (-5))))<(skoSC1 ((skoMC1 skoMC1 skoMC1 (-1+(skoMC1 (3))))+(skoSC1 ((skoMC1 skoMC1 skoMC1 (-2+(skoMC1 (-3))))+(skoSC1 ((skoMC1 skoMC1 skoMC1 skoMC1 (-1))+(skoSC1 skoMC1 skoMC1 skoMC1 (1/12))))))))]/\[[(skoMC1 skoMC1 skoMC1 (-2+(skoMC1 (-5))))<(skoSC1 ((skoMC1 skoMC1 skoMC1 (-1+(skoMC1 (3))))+(skoSC1 ((skoMC1 skoMC1 skoMC1 (-2+(skoMC1 (-3))))+(skoSC1 ((skoMC1 skoMC1 skoMC1 (1/6+(skoMC1 (-1))))+(skoSC1 skoMC1 skoMC1 skoMC1 (1/4))))))))]/\[[(skoMC1 skoMC1 skoMC1 (-1))<(skoSC1 skoMC1 skoMC1 skoMC1)]/\[[(skoMC1 skoMC1 skoMC1 (-2))<=0]/\[[0<(skoMC1 skoMC1 skoMC1 (2))]/\[[(skoMC1 (-2+(skoMC1 (-5))))<(skoSC1 ((skoMC1 (-1+(skoMC1 (3))))+(skoSC1 ((skoMC1 (-2+(skoMC1 (-3))))+(skoSC1 ((skoMC1 (1/6+(skoMC1 (-1))))+(skoSC1 skoMC1 (1/4))))))))]/\[[(skoMC1 (-2+(skoMC1 (-5))))<(skoSC1 ((skoMC1 (-1+(skoMC1 (3))))+(skoSC1 ((skoMC1 (-2+(skoMC1 (-3))))+(skoSC1 ((skoMC1 skoMC1 (-1))+(skoSC1 skoMC1 (1/12))))))))]/\[[(skoSC1 ((skoMC1 (1+(skoMC1 (-3))))+(skoSC1 ((skoMC1 (2+(skoMC1 (3))))+(skoSC1 ((skoMC1 (-1/6+skoMC1))+(skoSC1 skoMC1 (-1/4))))))))<=(skoMC1 (2+(skoMC1 (5))))]/\[[(skoSC1 ((skoMC1 (1+(skoMC1 (-3))))+(skoSC1 ((skoMC1 (2+(skoMC1 (3))))+(skoSC1 ((skoMC1 skoMC1)+(skoSC1 skoMC1 (-1/12))))))))<=(skoMC1 (2+(skoMC1 (5))))]/\[[(skoSC1 skoMC1 (-1))<=skoMC1]/\[[(skoMC1 (-1))<(skoSC1 skoMC1)]/\[[0<=skoMC1]/\[[0<skoMC1]/\[[0<=skoSC1]/\[[2<=skoMC1]/\[[skoSC1<=5/4]/\[[(skoMC1 skoMC1 skoMC1 (-2))<(skoSC1 skoMC1 skoMC1 skoMC1 (2))]/\[[(skoSC1 skoMC1 skoMC1 skoMC1 (-2))<=(skoMC1 skoMC1 skoMC1 (2))]/\[(skoSC1 ((skoMC1 skoMC1 skoMC1 (-2+(skoMC1 (-12))))+(skoSC1 ((skoMC1 skoMC1 skoMC1 (1+(skoMC1 (-6))))+(skoSC1 ((skoMC1 skoMC1 skoMC1)+(skoSC1 ((skoMC1 skoMC1 skoMC1 (-1/12))+(skoSC1 skoMC1 skoMC1 skoMC1 (-1/12))))))))))<=(skoMC1 skoMC1 skoMC1 (2+(skoMC1 (6))))]]]]]]]]]]]]]]]]]]]]]]]].

% In SMTLib2 format:
(declare-fun skoSC1 () Real) (declare-fun skoMC1 () Real) (assert (and (<= (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (* skoMC1 (- 12.))))) (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (+ 1. (* skoMC1 (- 6.)))))) (* skoSC1 (+ (* skoMC1 (* skoMC1 skoMC1)) (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (/ (- 1.) 12.)))) (* skoSC1 (* skoMC1 (* skoMC1 (* skoMC1 (/ (- 1.) 12.))))))))))))) (* skoMC1 (* skoMC1 (* skoMC1 (+ 2. (* skoMC1 6.)))))) (and (<= (* skoMC1 (* skoMC1 (* skoMC1 (- 1.)))) 0.) (and (<= (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (+ 1. (* skoMC1 (- 3.)))))) (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (+ 2. (* skoMC1 3.))))) (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 skoMC1))) (* skoSC1 (* skoMC1 (* skoMC1 (* skoMC1 (/ (- 1.) 12.))))))))))) (* skoMC1 (* skoMC1 (* skoMC1 (+ 2. (* skoMC1 5.)))))) (and (<= (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (+ 1. (* skoMC1 (- 3.)))))) (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (+ 2. (* skoMC1 3.))))) (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (+ (/ (- 1.) 6.) skoMC1)))) (* skoSC1 (* skoMC1 (* skoMC1 (* skoMC1 (/ (- 1.) 4.))))))))))) (* skoMC1 (* skoMC1 (* skoMC1 (+ 2. (* skoMC1 5.)))))) (and (<= (* skoSC1 (* skoMC1 (* skoMC1 (* skoMC1 (- 1.))))) (* skoMC1 (* skoMC1 skoMC1))) (and (> (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (+ (- 1.) (* skoMC1 3.))))) (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (+ (- 2.) (* skoMC1 (- 3.)))))) (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (* skoMC1 (- 1.))))) (* skoSC1 (* skoMC1 (* skoMC1 (* skoMC1 (/ 1. 12.))))))))))) (* skoMC1 (* skoMC1 (* skoMC1 (+ (- 2.) (* skoMC1 (- 5.))))))) (and (> (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (+ (- 1.) (* skoMC1 3.))))) (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (+ (- 2.) (* skoMC1 (- 3.)))))) (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (+ (/ 1. 6.) (* skoMC1 (- 1.)))))) (* skoSC1 (* skoMC1 (* skoMC1 (* skoMC1 (/ 1. 4.))))))))))) (* skoMC1 (* skoMC1 (* skoMC1 (+ (- 2.) (* skoMC1 (- 5.))))))) (and (> (* skoSC1 (* skoMC1 (* skoMC1 skoMC1))) (* skoMC1 (* skoMC1 (* skoMC1 (- 1.))))) (and (<= (* skoMC1 (* skoMC1 (* skoMC1 (- 2.)))) 0.) (and (> (* skoMC1 (* skoMC1 (* skoMC1 2.))) 0.) (and (> (* skoSC1 (+ (* skoMC1 (+ (- 1.) (* skoMC1 3.))) (* skoSC1 (+ (* skoMC1 (+ (- 2.) (* skoMC1 (- 3.)))) (* skoSC1 (+ (* skoMC1 (+ (/ 1. 6.) (* skoMC1 (- 1.)))) (* skoSC1 (* skoMC1 (/ 1. 4.))))))))) (* skoMC1 (+ (- 2.) (* skoMC1 (- 5.))))) (and (> (* skoSC1 (+ (* skoMC1 (+ (- 1.) (* skoMC1 3.))) (* skoSC1 (+ (* skoMC1 (+ (- 2.) (* skoMC1 (- 3.)))) (* skoSC1 (+ (* skoMC1 (* skoMC1 (- 1.))) (* skoSC1 (* skoMC1 (/ 1. 12.))))))))) (* skoMC1 (+ (- 2.) (* skoMC1 (- 5.))))) (and (<= (* skoSC1 (+ (* skoMC1 (+ 1. (* skoMC1 (- 3.)))) (* skoSC1 (+ (* skoMC1 (+ 2. (* skoMC1 3.))) (* skoSC1 (+ (* skoMC1 (+ (/ (- 1.) 6.) skoMC1)) (* skoSC1 (* skoMC1 (/ (- 1.) 4.))))))))) (* skoMC1 (+ 2. (* skoMC1 5.)))) (and (<= (* skoSC1 (+ (* skoMC1 (+ 1. (* skoMC1 (- 3.)))) (* skoSC1 (+ (* skoMC1 (+ 2. (* skoMC1 3.))) (* skoSC1 (+ (* skoMC1 skoMC1) (* skoSC1 (* skoMC1 (/ (- 1.) 12.))))))))) (* skoMC1 (+ 2. (* skoMC1 5.)))) (and (<= (* skoSC1 (* skoMC1 (- 1.))) skoMC1) (and (> (* skoSC1 skoMC1) (* skoMC1 (- 1.))) (and (<= 0. skoMC1) (and (> skoMC1 0.) (and (<= 0. skoSC1) (and (<= 2. skoMC1) (and (<= skoSC1 (/ 5. 4.)) (and (> (* skoSC1 (* skoMC1 (* skoMC1 (* skoMC1 2.)))) (* skoMC1 (* skoMC1 (* skoMC1 (- 2.))))) (and (<= (* skoSC1 (* skoMC1 (* skoMC1 (* skoMC1 (- 2.))))) (* skoMC1 (* skoMC1 (* skoMC1 2.)))) (<= (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (+ (- 2.) (* skoMC1 (- 12.)))))) (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (+ 1. (* skoMC1 (- 6.)))))) (* skoSC1 (+ (* skoMC1 (* skoMC1 skoMC1)) (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (/ (- 1.) 12.)))) (* skoSC1 (* skoMC1 (* skoMC1 (* skoMC1 (/ (- 1.) 12.))))))))))))) (* skoMC1 (* skoMC1 (* skoMC1 (+ 2. (* skoMC1 6.))))))))))))))))))))))))))))))

% In GRF format:
(sequent " MetiTarski formula " (antecedent (<= (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (* skoMC1 (- 12.))))) (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (+ 1. (* skoMC1 (- 6.)))))) (* skoSC1 (+ (* skoMC1 (* skoMC1 skoMC1)) (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (/ (- 1.) 12.)))) (* skoSC1 (* skoMC1 (* skoMC1 (* skoMC1 (/ (- 1.) 12.))))))))))))) (* skoMC1 (* skoMC1 (* skoMC1 (+ 2. (* skoMC1 6.)))))) (<= (* skoMC1 (* skoMC1 (* skoMC1 (- 1.)))) 0.) (<= (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (+ 1. (* skoMC1 (- 3.)))))) (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (+ 2. (* skoMC1 3.))))) (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 skoMC1))) (* skoSC1 (* skoMC1 (* skoMC1 (* skoMC1 (/ (- 1.) 12.))))))))))) (* skoMC1 (* skoMC1 (* skoMC1 (+ 2. (* skoMC1 5.)))))) (<= (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (+ 1. (* skoMC1 (- 3.)))))) (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (+ 2. (* skoMC1 3.))))) (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (+ (/ (- 1.) 6.) skoMC1)))) (* skoSC1 (* skoMC1 (* skoMC1 (* skoMC1 (/ (- 1.) 4.))))))))))) (* skoMC1 (* skoMC1 (* skoMC1 (+ 2. (* skoMC1 5.)))))) (<= (* skoSC1 (* skoMC1 (* skoMC1 (* skoMC1 (- 1.))))) (* skoMC1 (* skoMC1 skoMC1))) (> (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (+ (- 1.) (* skoMC1 3.))))) (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (+ (- 2.) (* skoMC1 (- 3.)))))) (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (* skoMC1 (- 1.))))) (* skoSC1 (* skoMC1 (* skoMC1 (* skoMC1 (/ 1. 12.))))))))))) (* skoMC1 (* skoMC1 (* skoMC1 (+ (- 2.) (* skoMC1 (- 5.))))))) (> (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (+ (- 1.) (* skoMC1 3.))))) (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (+ (- 2.) (* skoMC1 (- 3.)))))) (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (+ (/ 1. 6.) (* skoMC1 (- 1.)))))) (* skoSC1 (* skoMC1 (* skoMC1 (* skoMC1 (/ 1. 4.))))))))))) (* skoMC1 (* skoMC1 (* skoMC1 (+ (- 2.) (* skoMC1 (- 5.))))))) (> (* skoSC1 (* skoMC1 (* skoMC1 skoMC1))) (* skoMC1 (* skoMC1 (* skoMC1 (- 1.))))) (<= (* skoMC1 (* skoMC1 (* skoMC1 (- 2.)))) 0.) (> (* skoMC1 (* skoMC1 (* skoMC1 2.))) 0.) (> (* skoSC1 (+ (* skoMC1 (+ (- 1.) (* skoMC1 3.))) (* skoSC1 (+ (* skoMC1 (+ (- 2.) (* skoMC1 (- 3.)))) (* skoSC1 (+ (* skoMC1 (+ (/ 1. 6.) (* skoMC1 (- 1.)))) (* skoSC1 (* skoMC1 (/ 1. 4.))))))))) (* skoMC1 (+ (- 2.) (* skoMC1 (- 5.))))) (> (* skoSC1 (+ (* skoMC1 (+ (- 1.) (* skoMC1 3.))) (* skoSC1 (+ (* skoMC1 (+ (- 2.) (* skoMC1 (- 3.)))) (* skoSC1 (+ (* skoMC1 (* skoMC1 (- 1.))) (* skoSC1 (* skoMC1 (/ 1. 12.))))))))) (* skoMC1 (+ (- 2.) (* skoMC1 (- 5.))))) (<= (* skoSC1 (+ (* skoMC1 (+ 1. (* skoMC1 (- 3.)))) (* skoSC1 (+ (* skoMC1 (+ 2. (* skoMC1 3.))) (* skoSC1 (+ (* skoMC1 (+ (/ (- 1.) 6.) skoMC1)) (* skoSC1 (* skoMC1 (/ (- 1.) 4.))))))))) (* skoMC1 (+ 2. (* skoMC1 5.)))) (<= (* skoSC1 (+ (* skoMC1 (+ 1. (* skoMC1 (- 3.)))) (* skoSC1 (+ (* skoMC1 (+ 2. (* skoMC1 3.))) (* skoSC1 (+ (* skoMC1 skoMC1) (* skoSC1 (* skoMC1 (/ (- 1.) 12.))))))))) (* skoMC1 (+ 2. (* skoMC1 5.)))) (<= (* skoSC1 (* skoMC1 (- 1.))) skoMC1) (> (* skoSC1 skoMC1) (* skoMC1 (- 1.))) (<= 0. skoMC1) (> skoMC1 0.) (<= 0. skoSC1) (<= 2. skoMC1) (<= skoSC1 (/ 5. 4.)) (> (* skoSC1 (* skoMC1 (* skoMC1 (* skoMC1 2.)))) (* skoMC1 (* skoMC1 (* skoMC1 (- 2.))))) (<= (* skoSC1 (* skoMC1 (* skoMC1 (* skoMC1 (- 2.))))) (* skoMC1 (* skoMC1 (* skoMC1 2.))))) (succedent (> (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (+ (- 2.) (* skoMC1 (- 12.)))))) (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (+ 1. (* skoMC1 (- 6.)))))) (* skoSC1 (+ (* skoMC1 (* skoMC1 skoMC1)) (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (/ (- 1.) 12.)))) (* skoSC1 (* skoMC1 (* skoMC1 (* skoMC1 (/ (- 1.) 12.))))))))))))) (* skoMC1 (* skoMC1 (* skoMC1 (+ 2. (* skoMC1 6.))))))))
-----[end problem]-----

-----[begin problem]-----
% In Mathematica format:
Timing[Resolve[Exists[{skoSC1,skoMC1}, And[skoSC1*(skoMC1*skoMC1*skoMC1*skoMC1*-12+skoSC1*(skoMC1*skoMC1*skoMC1*(1+skoMC1*-6)+skoSC1*(skoMC1*skoMC1*skoMC1+skoSC1*(skoMC1*skoMC1*skoMC1*(-1/12)+skoSC1*(skoMC1*skoMC1*skoMC1*(-1/12)+skoSC1*(skoMC1*skoMC1*skoMC1*(1/360)+skoSC1*(skoMC1*skoMC1*skoMC1*(1/360)+skoSC1*(skoMC1*skoMC1*skoMC1*(-1/20160)+skoSC1*(skoMC1*skoMC1*skoMC1*(-1/20160)+skoSC1*(skoMC1*skoMC1*skoMC1*(1/1814400)+skoSC1*(skoMC1*skoMC1*skoMC1*(1/1814400)+skoSC1*(skoMC1*skoMC1*skoMC1*(-1/239500800)+skoSC1*skoMC1*skoMC1*skoMC1*(-1/239500800)))))))))))))<=skoMC1*skoMC1*skoMC1*(2+skoMC1*6),skoSC1*skoMC1*skoMC1*skoMC1*2>skoMC1*skoMC1*skoMC1*-2,skoSC1*(skoMC1*skoMC1*skoMC1*skoMC1*-12+skoSC1*(skoMC1*skoMC1*skoMC1*(1+skoMC1*-6)+skoSC1*(skoMC1*skoMC1*skoMC1+skoSC1*(skoMC1*skoMC1*skoMC1*(-1/12)+skoSC1*skoMC1*skoMC1*skoMC1*(-1/12)))))<=skoMC1*skoMC1*skoMC1*(2+skoMC1*6),skoMC1*skoMC1*skoMC1*-1<=0,skoSC1*(skoMC1*skoMC1*skoMC1*(1+skoMC1*-3)+skoSC1*(skoMC1*skoMC1*skoMC1*(2+skoMC1*3)+skoSC1*(skoMC1*skoMC1*skoMC1*skoMC1+skoSC1*skoMC1*skoMC1*skoMC1*(-1/12))))<=skoMC1*skoMC1*skoMC1*(2+skoMC1*5),skoSC1*(skoMC1*skoMC1*skoMC1*(1+skoMC1*-3)+skoSC1*(skoMC1*skoMC1*skoMC1*(2+skoMC1*3)+skoSC1*(skoMC1*skoMC1*skoMC1*((-1/6)+skoMC1)+skoSC1*skoMC1*skoMC1*skoMC1*(-1/4))))<=skoMC1*skoMC1*skoMC1*(2+skoMC1*5),skoSC1*skoMC1*skoMC1*skoMC1*-1<=skoMC1*skoMC1*skoMC1,skoSC1*(skoMC1*skoMC1*skoMC1*(-1+skoMC1*3)+skoSC1*(skoMC1*skoMC1*skoMC1*(-2+skoMC1*-3)+skoSC1*(skoMC1*skoMC1*skoMC1*skoMC1*-1+skoSC1*skoMC1*skoMC1*skoMC1*(1/12))))>skoMC1*skoMC1*skoMC1*(-2+skoMC1*-5),skoSC1*(skoMC1*skoMC1*skoMC1*(-1+skoMC1*3)+skoSC1*(skoMC1*skoMC1*skoMC1*(-2+skoMC1*-3)+skoSC1*(skoMC1*skoMC1*skoMC1*((1/6)+skoMC1*-1)+skoSC1*skoMC1*skoMC1*skoMC1*(1/4))))>skoMC1*skoMC1*skoMC1*(-2+skoMC1*-5),skoSC1*skoMC1*skoMC1*skoMC1>skoMC1*skoMC1*skoMC1*-1,skoMC1*skoMC1*skoMC1*-2<=0,skoMC1*skoMC1*skoMC1*2>0,skoSC1*(skoMC1*(-1+skoMC1*3)+skoSC1*(skoMC1*(-2+skoMC1*-3)+skoSC1*(skoMC1*((1/6)+skoMC1*-1)+skoSC1*skoMC1*(1/4))))>skoMC1*(-2+skoMC1*-5),skoSC1*(skoMC1*(-1+skoMC1*3)+skoSC1*(skoMC1*(-2+skoMC1*-3)+skoSC1*(skoMC1*skoMC1*-1+skoSC1*skoMC1*(1/12))))>skoMC1*(-2+skoMC1*-5),skoSC1*(skoMC1*(1+skoMC1*-3)+skoSC1*(skoMC1*(2+skoMC1*3)+skoSC1*(skoMC1*((-1/6)+skoMC1)+skoSC1*skoMC1*(-1/4))))<=skoMC1*(2+skoMC1*5),skoSC1*(skoMC1*(1+skoMC1*-3)+skoSC1*(skoMC1*(2+skoMC1*3)+skoSC1*(skoMC1*skoMC1+skoSC1*skoMC1*(-1/12))))<=skoMC1*(2+skoMC1*5),skoSC1*skoMC1*-1<=skoMC1,skoSC1*skoMC1>skoMC1*-1,0<=skoMC1,skoMC1>0,0<=skoSC1,2<=skoMC1,skoSC1<=(5/4),skoSC1*skoMC1*skoMC1*skoMC1*2>skoMC1*skoMC1*skoMC1*-2,skoSC1*skoMC1*skoMC1*skoMC1*-2<=skoMC1*skoMC1*skoMC1*2,skoSC1*(skoMC1*skoMC1*skoMC1*(-2+skoMC1*-12)+skoSC1*(skoMC1*skoMC1*skoMC1*(1+skoMC1*-6)+skoSC1*(skoMC1*skoMC1*skoMC1+skoSC1*(skoMC1*skoMC1*skoMC1*(-1/12)+skoSC1*skoMC1*skoMC1*skoMC1*(-1/12)))))<=skoMC1*skoMC1*skoMC1*(2+skoMC1*6)]], Reals]]

% In QepcadB format:
(E skoSC1) (E skoMC1) [[(skoSC1 ((skoMC1 skoMC1 skoMC1 skoMC1 (-12))+(skoSC1 ((skoMC1 skoMC1 skoMC1 (1+(skoMC1 (-6))))+(skoSC1 ((skoMC1 skoMC1 skoMC1)+(skoSC1 ((skoMC1 skoMC1 skoMC1 (-1/12))+(skoSC1 ((skoMC1 skoMC1 skoMC1 (-1/12))+(skoSC1 ((skoMC1 skoMC1 skoMC1 (1/360))+(skoSC1 ((skoMC1 skoMC1 skoMC1 (1/360))+(skoSC1 ((skoMC1 skoMC1 skoMC1 (-1/20160))+(skoSC1 ((skoMC1 skoMC1 skoMC1 (-1/20160))+(skoSC1 ((skoMC1 skoMC1 skoMC1 (1/1814400))+(skoSC1 ((skoMC1 skoMC1 skoMC1 (1/1814400))+(skoSC1 ((skoMC1 skoMC1 skoMC1 (-1/239500800))+(skoSC1 skoMC1 skoMC1 skoMC1 (-1/239500800))))))))))))))))))))))))))<=(skoMC1 skoMC1 skoMC1 (2+(skoMC1 (6))))]/\[[(skoMC1 skoMC1 skoMC1 (-2))<(skoSC1 skoMC1 skoMC1 skoMC1 (2))]/\[[(skoSC1 ((skoMC1 skoMC1 skoMC1 skoMC1 (-12))+(skoSC1 ((skoMC1 skoMC1 skoMC1 (1+(skoMC1 (-6))))+(skoSC1 ((skoMC1 skoMC1 skoMC1)+(skoSC1 ((skoMC1 skoMC1 skoMC1 (-1/12))+(skoSC1 skoMC1 skoMC1 skoMC1 (-1/12))))))))))<=(skoMC1 skoMC1 skoMC1 (2+(skoMC1 (6))))]/\[[(skoMC1 skoMC1 skoMC1 (-1))<=0]/\[[(skoSC1 ((skoMC1 skoMC1 skoMC1 (1+(skoMC1 (-3))))+(skoSC1 ((skoMC1 skoMC1 skoMC1 (2+(skoMC1 (3))))+(skoSC1 ((skoMC1 skoMC1 skoMC1 skoMC1)+(skoSC1 skoMC1 skoMC1 skoMC1 (-1/12))))))))<=(skoMC1 skoMC1 skoMC1 (2+(skoMC1 (5))))]/\[[(skoSC1 ((skoMC1 skoMC1 skoMC1 (1+(skoMC1 (-3))))+(skoSC1 ((skoMC1 skoMC1 skoMC1 (2+(skoMC1 (3))))+(skoSC1 ((skoMC1 skoMC1 skoMC1 (-1/6+skoMC1))+(skoSC1 skoMC1 skoMC1 skoMC1 (-1/4))))))))<=(skoMC1 skoMC1 skoMC1 (2+(skoMC1 (5))))]/\[[(skoSC1 skoMC1 skoMC1 skoMC1 (-1))<=(skoMC1 skoMC1 skoMC1)]/\[[(skoMC1 skoMC1 skoMC1 (-2+(skoMC1 (-5))))<(skoSC1 ((skoMC1 skoMC1 skoMC1 (-1+(skoMC1 (3))))+(skoSC1 ((skoMC1 skoMC1 skoMC1 (-2+(skoMC1 (-3))))+(skoSC1 ((skoMC1 skoMC1 skoMC1 skoMC1 (-1))+(skoSC1 skoMC1 skoMC1 skoMC1 (1/12))))))))]/\[[(skoMC1 skoMC1 skoMC1 (-2+(skoMC1 (-5))))<(skoSC1 ((skoMC1 skoMC1 skoMC1 (-1+(skoMC1 (3))))+(skoSC1 ((skoMC1 skoMC1 skoMC1 (-2+(skoMC1 (-3))))+(skoSC1 ((skoMC1 skoMC1 skoMC1 (1/6+(skoMC1 (-1))))+(skoSC1 skoMC1 skoMC1 skoMC1 (1/4))))))))]/\[[(skoMC1 skoMC1 skoMC1 (-1))<(skoSC1 skoMC1 skoMC1 skoMC1)]/\[[(skoMC1 skoMC1 skoMC1 (-2))<=0]/\[[0<(skoMC1 skoMC1 skoMC1 (2))]/\[[(skoMC1 (-2+(skoMC1 (-5))))<(skoSC1 ((skoMC1 (-1+(skoMC1 (3))))+(skoSC1 ((skoMC1 (-2+(skoMC1 (-3))))+(skoSC1 ((skoMC1 (1/6+(skoMC1 (-1))))+(skoSC1 skoMC1 (1/4))))))))]/\[[(skoMC1 (-2+(skoMC1 (-5))))<(skoSC1 ((skoMC1 (-1+(skoMC1 (3))))+(skoSC1 ((skoMC1 (-2+(skoMC1 (-3))))+(skoSC1 ((skoMC1 skoMC1 (-1))+(skoSC1 skoMC1 (1/12))))))))]/\[[(skoSC1 ((skoMC1 (1+(skoMC1 (-3))))+(skoSC1 ((skoMC1 (2+(skoMC1 (3))))+(skoSC1 ((skoMC1 (-1/6+skoMC1))+(skoSC1 skoMC1 (-1/4))))))))<=(skoMC1 (2+(skoMC1 (5))))]/\[[(skoSC1 ((skoMC1 (1+(skoMC1 (-3))))+(skoSC1 ((skoMC1 (2+(skoMC1 (3))))+(skoSC1 ((skoMC1 skoMC1)+(skoSC1 skoMC1 (-1/12))))))))<=(skoMC1 (2+(skoMC1 (5))))]/\[[(skoSC1 skoMC1 (-1))<=skoMC1]/\[[(skoMC1 (-1))<(skoSC1 skoMC1)]/\[[0<=skoMC1]/\[[0<skoMC1]/\[[0<=skoSC1]/\[[2<=skoMC1]/\[[skoSC1<=5/4]/\[[(skoMC1 skoMC1 skoMC1 (-2))<(skoSC1 skoMC1 skoMC1 skoMC1 (2))]/\[[(skoSC1 skoMC1 skoMC1 skoMC1 (-2))<=(skoMC1 skoMC1 skoMC1 (2))]/\[(skoSC1 ((skoMC1 skoMC1 skoMC1 (-2+(skoMC1 (-12))))+(skoSC1 ((skoMC1 skoMC1 skoMC1 (1+(skoMC1 (-6))))+(skoSC1 ((skoMC1 skoMC1 skoMC1)+(skoSC1 ((skoMC1 skoMC1 skoMC1 (-1/12))+(skoSC1 skoMC1 skoMC1 skoMC1 (-1/12))))))))))<=(skoMC1 skoMC1 skoMC1 (2+(skoMC1 (6))))]]]]]]]]]]]]]]]]]]]]]]]]]].

% In SMTLib2 format:
(declare-fun skoSC1 () Real) (declare-fun skoMC1 () Real) (assert (and (<= (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (* skoMC1 (- 12.))))) (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (+ 1. (* skoMC1 (- 6.)))))) (* skoSC1 (+ (* skoMC1 (* skoMC1 skoMC1)) (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (/ (- 1.) 12.)))) (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (/ (- 1.) 12.)))) (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (/ 1. 360.)))) (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (/ 1. 360.)))) (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (/ (- 1.) 20160.)))) (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (/ (- 1.) 20160.)))) (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (/ 1. 1814400.)))) (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (/ 1. 1814400.)))) (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (/ (- 1.) 239500800.)))) (* skoSC1 (* skoMC1 (* skoMC1 (* skoMC1 (/ (- 1.) 239500800.))))))))))))))))))))))))))))) (* skoMC1 (* skoMC1 (* skoMC1 (+ 2. (* skoMC1 6.)))))) (and (> (* skoSC1 (* skoMC1 (* skoMC1 (* skoMC1 2.)))) (* skoMC1 (* skoMC1 (* skoMC1 (- 2.))))) (and (<= (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (* skoMC1 (- 12.))))) (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (+ 1. (* skoMC1 (- 6.)))))) (* skoSC1 (+ (* skoMC1 (* skoMC1 skoMC1)) (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (/ (- 1.) 12.)))) (* skoSC1 (* skoMC1 (* skoMC1 (* skoMC1 (/ (- 1.) 12.))))))))))))) (* skoMC1 (* skoMC1 (* skoMC1 (+ 2. (* skoMC1 6.)))))) (and (<= (* skoMC1 (* skoMC1 (* skoMC1 (- 1.)))) 0.) (and (<= (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (+ 1. (* skoMC1 (- 3.)))))) (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (+ 2. (* skoMC1 3.))))) (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 skoMC1))) (* skoSC1 (* skoMC1 (* skoMC1 (* skoMC1 (/ (- 1.) 12.))))))))))) (* skoMC1 (* skoMC1 (* skoMC1 (+ 2. (* skoMC1 5.)))))) (and (<= (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (+ 1. (* skoMC1 (- 3.)))))) (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (+ 2. (* skoMC1 3.))))) (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (+ (/ (- 1.) 6.) skoMC1)))) (* skoSC1 (* skoMC1 (* skoMC1 (* skoMC1 (/ (- 1.) 4.))))))))))) (* skoMC1 (* skoMC1 (* skoMC1 (+ 2. (* skoMC1 5.)))))) (and (<= (* skoSC1 (* skoMC1 (* skoMC1 (* skoMC1 (- 1.))))) (* skoMC1 (* skoMC1 skoMC1))) (and (> (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (+ (- 1.) (* skoMC1 3.))))) (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (+ (- 2.) (* skoMC1 (- 3.)))))) (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (* skoMC1 (- 1.))))) (* skoSC1 (* skoMC1 (* skoMC1 (* skoMC1 (/ 1. 12.))))))))))) (* skoMC1 (* skoMC1 (* skoMC1 (+ (- 2.) (* skoMC1 (- 5.))))))) (and (> (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (+ (- 1.) (* skoMC1 3.))))) (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (+ (- 2.) (* skoMC1 (- 3.)))))) (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (+ (/ 1. 6.) (* skoMC1 (- 1.)))))) (* skoSC1 (* skoMC1 (* skoMC1 (* skoMC1 (/ 1. 4.))))))))))) (* skoMC1 (* skoMC1 (* skoMC1 (+ (- 2.) (* skoMC1 (- 5.))))))) (and (> (* skoSC1 (* skoMC1 (* skoMC1 skoMC1))) (* skoMC1 (* skoMC1 (* skoMC1 (- 1.))))) (and (<= (* skoMC1 (* skoMC1 (* skoMC1 (- 2.)))) 0.) (and (> (* skoMC1 (* skoMC1 (* skoMC1 2.))) 0.) (and (> (* skoSC1 (+ (* skoMC1 (+ (- 1.) (* skoMC1 3.))) (* skoSC1 (+ (* skoMC1 (+ (- 2.) (* skoMC1 (- 3.)))) (* skoSC1 (+ (* skoMC1 (+ (/ 1. 6.) (* skoMC1 (- 1.)))) (* skoSC1 (* skoMC1 (/ 1. 4.))))))))) (* skoMC1 (+ (- 2.) (* skoMC1 (- 5.))))) (and (> (* skoSC1 (+ (* skoMC1 (+ (- 1.) (* skoMC1 3.))) (* skoSC1 (+ (* skoMC1 (+ (- 2.) (* skoMC1 (- 3.)))) (* skoSC1 (+ (* skoMC1 (* skoMC1 (- 1.))) (* skoSC1 (* skoMC1 (/ 1. 12.))))))))) (* skoMC1 (+ (- 2.) (* skoMC1 (- 5.))))) (and (<= (* skoSC1 (+ (* skoMC1 (+ 1. (* skoMC1 (- 3.)))) (* skoSC1 (+ (* skoMC1 (+ 2. (* skoMC1 3.))) (* skoSC1 (+ (* skoMC1 (+ (/ (- 1.) 6.) skoMC1)) (* skoSC1 (* skoMC1 (/ (- 1.) 4.))))))))) (* skoMC1 (+ 2. (* skoMC1 5.)))) (and (<= (* skoSC1 (+ (* skoMC1 (+ 1. (* skoMC1 (- 3.)))) (* skoSC1 (+ (* skoMC1 (+ 2. (* skoMC1 3.))) (* skoSC1 (+ (* skoMC1 skoMC1) (* skoSC1 (* skoMC1 (/ (- 1.) 12.))))))))) (* skoMC1 (+ 2. (* skoMC1 5.)))) (and (<= (* skoSC1 (* skoMC1 (- 1.))) skoMC1) (and (> (* skoSC1 skoMC1) (* skoMC1 (- 1.))) (and (<= 0. skoMC1) (and (> skoMC1 0.) (and (<= 0. skoSC1) (and (<= 2. skoMC1) (and (<= skoSC1 (/ 5. 4.)) (and (> (* skoSC1 (* skoMC1 (* skoMC1 (* skoMC1 2.)))) (* skoMC1 (* skoMC1 (* skoMC1 (- 2.))))) (and (<= (* skoSC1 (* skoMC1 (* skoMC1 (* skoMC1 (- 2.))))) (* skoMC1 (* skoMC1 (* skoMC1 2.)))) (<= (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (+ (- 2.) (* skoMC1 (- 12.)))))) (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (+ 1. (* skoMC1 (- 6.)))))) (* skoSC1 (+ (* skoMC1 (* skoMC1 skoMC1)) (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (/ (- 1.) 12.)))) (* skoSC1 (* skoMC1 (* skoMC1 (* skoMC1 (/ (- 1.) 12.))))))))))))) (* skoMC1 (* skoMC1 (* skoMC1 (+ 2. (* skoMC1 6.))))))))))))))))))))))))))))))))

% In GRF format:
(sequent " MetiTarski formula " (antecedent (<= (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (* skoMC1 (- 12.))))) (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (+ 1. (* skoMC1 (- 6.)))))) (* skoSC1 (+ (* skoMC1 (* skoMC1 skoMC1)) (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (/ (- 1.) 12.)))) (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (/ (- 1.) 12.)))) (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (/ 1. 360.)))) (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (/ 1. 360.)))) (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (/ (- 1.) 20160.)))) (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (/ (- 1.) 20160.)))) (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (/ 1. 1814400.)))) (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (/ 1. 1814400.)))) (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (/ (- 1.) 239500800.)))) (* skoSC1 (* skoMC1 (* skoMC1 (* skoMC1 (/ (- 1.) 239500800.))))))))))))))))))))))))))))) (* skoMC1 (* skoMC1 (* skoMC1 (+ 2. (* skoMC1 6.)))))) (> (* skoSC1 (* skoMC1 (* skoMC1 (* skoMC1 2.)))) (* skoMC1 (* skoMC1 (* skoMC1 (- 2.))))) (<= (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (* skoMC1 (- 12.))))) (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (+ 1. (* skoMC1 (- 6.)))))) (* skoSC1 (+ (* skoMC1 (* skoMC1 skoMC1)) (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (/ (- 1.) 12.)))) (* skoSC1 (* skoMC1 (* skoMC1 (* skoMC1 (/ (- 1.) 12.))))))))))))) (* skoMC1 (* skoMC1 (* skoMC1 (+ 2. (* skoMC1 6.)))))) (<= (* skoMC1 (* skoMC1 (* skoMC1 (- 1.)))) 0.) (<= (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (+ 1. (* skoMC1 (- 3.)))))) (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (+ 2. (* skoMC1 3.))))) (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 skoMC1))) (* skoSC1 (* skoMC1 (* skoMC1 (* skoMC1 (/ (- 1.) 12.))))))))))) (* skoMC1 (* skoMC1 (* skoMC1 (+ 2. (* skoMC1 5.)))))) (<= (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (+ 1. (* skoMC1 (- 3.)))))) (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (+ 2. (* skoMC1 3.))))) (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (+ (/ (- 1.) 6.) skoMC1)))) (* skoSC1 (* skoMC1 (* skoMC1 (* skoMC1 (/ (- 1.) 4.))))))))))) (* skoMC1 (* skoMC1 (* skoMC1 (+ 2. (* skoMC1 5.)))))) (<= (* skoSC1 (* skoMC1 (* skoMC1 (* skoMC1 (- 1.))))) (* skoMC1 (* skoMC1 skoMC1))) (> (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (+ (- 1.) (* skoMC1 3.))))) (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (+ (- 2.) (* skoMC1 (- 3.)))))) (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (* skoMC1 (- 1.))))) (* skoSC1 (* skoMC1 (* skoMC1 (* skoMC1 (/ 1. 12.))))))))))) (* skoMC1 (* skoMC1 (* skoMC1 (+ (- 2.) (* skoMC1 (- 5.))))))) (> (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (+ (- 1.) (* skoMC1 3.))))) (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (+ (- 2.) (* skoMC1 (- 3.)))))) (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (+ (/ 1. 6.) (* skoMC1 (- 1.)))))) (* skoSC1 (* skoMC1 (* skoMC1 (* skoMC1 (/ 1. 4.))))))))))) (* skoMC1 (* skoMC1 (* skoMC1 (+ (- 2.) (* skoMC1 (- 5.))))))) (> (* skoSC1 (* skoMC1 (* skoMC1 skoMC1))) (* skoMC1 (* skoMC1 (* skoMC1 (- 1.))))) (<= (* skoMC1 (* skoMC1 (* skoMC1 (- 2.)))) 0.) (> (* skoMC1 (* skoMC1 (* skoMC1 2.))) 0.) (> (* skoSC1 (+ (* skoMC1 (+ (- 1.) (* skoMC1 3.))) (* skoSC1 (+ (* skoMC1 (+ (- 2.) (* skoMC1 (- 3.)))) (* skoSC1 (+ (* skoMC1 (+ (/ 1. 6.) (* skoMC1 (- 1.)))) (* skoSC1 (* skoMC1 (/ 1. 4.))))))))) (* skoMC1 (+ (- 2.) (* skoMC1 (- 5.))))) (> (* skoSC1 (+ (* skoMC1 (+ (- 1.) (* skoMC1 3.))) (* skoSC1 (+ (* skoMC1 (+ (- 2.) (* skoMC1 (- 3.)))) (* skoSC1 (+ (* skoMC1 (* skoMC1 (- 1.))) (* skoSC1 (* skoMC1 (/ 1. 12.))))))))) (* skoMC1 (+ (- 2.) (* skoMC1 (- 5.))))) (<= (* skoSC1 (+ (* skoMC1 (+ 1. (* skoMC1 (- 3.)))) (* skoSC1 (+ (* skoMC1 (+ 2. (* skoMC1 3.))) (* skoSC1 (+ (* skoMC1 (+ (/ (- 1.) 6.) skoMC1)) (* skoSC1 (* skoMC1 (/ (- 1.) 4.))))))))) (* skoMC1 (+ 2. (* skoMC1 5.)))) (<= (* skoSC1 (+ (* skoMC1 (+ 1. (* skoMC1 (- 3.)))) (* skoSC1 (+ (* skoMC1 (+ 2. (* skoMC1 3.))) (* skoSC1 (+ (* skoMC1 skoMC1) (* skoSC1 (* skoMC1 (/ (- 1.) 12.))))))))) (* skoMC1 (+ 2. (* skoMC1 5.)))) (<= (* skoSC1 (* skoMC1 (- 1.))) skoMC1) (> (* skoSC1 skoMC1) (* skoMC1 (- 1.))) (<= 0. skoMC1) (> skoMC1 0.) (<= 0. skoSC1) (<= 2. skoMC1) (<= skoSC1 (/ 5. 4.)) (> (* skoSC1 (* skoMC1 (* skoMC1 (* skoMC1 2.)))) (* skoMC1 (* skoMC1 (* skoMC1 (- 2.))))) (<= (* skoSC1 (* skoMC1 (* skoMC1 (* skoMC1 (- 2.))))) (* skoMC1 (* skoMC1 (* skoMC1 2.))))) (succedent (> (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (+ (- 2.) (* skoMC1 (- 12.)))))) (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (+ 1. (* skoMC1 (- 6.)))))) (* skoSC1 (+ (* skoMC1 (* skoMC1 skoMC1)) (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (/ (- 1.) 12.)))) (* skoSC1 (* skoMC1 (* skoMC1 (* skoMC1 (/ (- 1.) 12.))))))))))))) (* skoMC1 (* skoMC1 (* skoMC1 (+ 2. (* skoMC1 6.))))))))
-----[end problem]-----

-----[begin problem]-----
% In Mathematica format:
Timing[Resolve[Exists[{skoSC1,skoMC1}, And[skoSC1*skoMC1*skoMC1*skoMC1*2<=skoMC1*skoMC1*skoMC1*-2,skoSC1*(skoMC1*skoMC1*skoMC1*skoMC1*-12+skoSC1*(skoMC1*skoMC1*skoMC1*(1+skoMC1*-6)+skoSC1*(skoMC1*skoMC1*skoMC1+skoSC1*(skoMC1*skoMC1*skoMC1*(-1/12)+skoSC1*(skoMC1*skoMC1*skoMC1*(-1/12)+skoSC1*(skoMC1*skoMC1*skoMC1*(1/360)+skoSC1*(skoMC1*skoMC1*skoMC1*(1/360)+skoSC1*(skoMC1*skoMC1*skoMC1*(-1/20160)+skoSC1*(skoMC1*skoMC1*skoMC1*(-1/20160)+skoSC1*(skoMC1*skoMC1*skoMC1*(1/1814400)+skoSC1*(skoMC1*skoMC1*skoMC1*(1/1814400)+skoSC1*(skoMC1*skoMC1*skoMC1*(-1/239500800)+skoSC1*skoMC1*skoMC1*skoMC1*(-1/239500800)))))))))))))>skoMC1*skoMC1*skoMC1*(2+skoMC1*6),skoSC1*(skoMC1*skoMC1*skoMC1*skoMC1*-12+skoSC1*(skoMC1*skoMC1*skoMC1*(1+skoMC1*-6)+skoSC1*(skoMC1*skoMC1*skoMC1+skoSC1*(skoMC1*skoMC1*skoMC1*(-1/12)+skoSC1*skoMC1*skoMC1*skoMC1*(-1/12)))))<=skoMC1*skoMC1*skoMC1*(2+skoMC1*6),skoMC1*skoMC1*skoMC1*-1<=0,skoSC1*(skoMC1*skoMC1*skoMC1*(1+skoMC1*-3)+skoSC1*(skoMC1*skoMC1*skoMC1*(2+skoMC1*3)+skoSC1*(skoMC1*skoMC1*skoMC1*skoMC1+skoSC1*skoMC1*skoMC1*skoMC1*(-1/12))))<=skoMC1*skoMC1*skoMC1*(2+skoMC1*5),skoSC1*(skoMC1*skoMC1*skoMC1*(1+skoMC1*-3)+skoSC1*(skoMC1*skoMC1*skoMC1*(2+skoMC1*3)+skoSC1*(skoMC1*skoMC1*skoMC1*((-1/6)+skoMC1)+skoSC1*skoMC1*skoMC1*skoMC1*(-1/4))))<=skoMC1*skoMC1*skoMC1*(2+skoMC1*5),skoSC1*skoMC1*skoMC1*skoMC1*-1<=skoMC1*skoMC1*skoMC1,skoSC1*(skoMC1*skoMC1*skoMC1*(-1+skoMC1*3)+skoSC1*(skoMC1*skoMC1*skoMC1*(-2+skoMC1*-3)+skoSC1*(skoMC1*skoMC1*skoMC1*skoMC1*-1+skoSC1*skoMC1*skoMC1*skoMC1*(1/12))))>skoMC1*skoMC1*skoMC1*(-2+skoMC1*-5),skoSC1*(skoMC1*skoMC1*skoMC1*(-1+skoMC1*3)+skoSC1*(skoMC1*skoMC1*skoMC1*(-2+skoMC1*-3)+skoSC1*(skoMC1*skoMC1*skoMC1*((1/6)+skoMC1*-1)+skoSC1*skoMC1*skoMC1*skoMC1*(1/4))))>skoMC1*skoMC1*skoMC1*(-2+skoMC1*-5),skoSC1*skoMC1*skoMC1*skoMC1>skoMC1*skoMC1*skoMC1*-1,skoMC1*skoMC1*skoMC1*-2<=0,skoMC1*skoMC1*skoMC1*2>0,skoSC1*(skoMC1*(-1+skoMC1*3)+skoSC1*(skoMC1*(-2+skoMC1*-3)+skoSC1*(skoMC1*((1/6)+skoMC1*-1)+skoSC1*skoMC1*(1/4))))>skoMC1*(-2+skoMC1*-5),skoSC1*(skoMC1*(-1+skoMC1*3)+skoSC1*(skoMC1*(-2+skoMC1*-3)+skoSC1*(skoMC1*skoMC1*-1+skoSC1*skoMC1*(1/12))))>skoMC1*(-2+skoMC1*-5),skoSC1*(skoMC1*(1+skoMC1*-3)+skoSC1*(skoMC1*(2+skoMC1*3)+skoSC1*(skoMC1*((-1/6)+skoMC1)+skoSC1*skoMC1*(-1/4))))<=skoMC1*(2+skoMC1*5),skoSC1*(skoMC1*(1+skoMC1*-3)+skoSC1*(skoMC1*(2+skoMC1*3)+skoSC1*(skoMC1*skoMC1+skoSC1*skoMC1*(-1/12))))<=skoMC1*(2+skoMC1*5),skoSC1*skoMC1*-1<=skoMC1,skoSC1*skoMC1>skoMC1*-1,0<=skoMC1,skoMC1>0,0<=skoSC1,2<=skoMC1,skoSC1<=(5/4),skoSC1*skoMC1*skoMC1*skoMC1*2>skoMC1*skoMC1*skoMC1*-2,skoSC1*skoMC1*skoMC1*skoMC1*-2<=skoMC1*skoMC1*skoMC1*2,skoSC1*(skoMC1*skoMC1*skoMC1*(-2+skoMC1*-12)+skoSC1*(skoMC1*skoMC1*skoMC1*(1+skoMC1*-6)+skoSC1*(skoMC1*skoMC1*skoMC1+skoSC1*(skoMC1*skoMC1*skoMC1*(-1/12)+skoSC1*skoMC1*skoMC1*skoMC1*(-1/12)))))<=skoMC1*skoMC1*skoMC1*(2+skoMC1*6)]], Reals]]

% In QepcadB format:
(E skoSC1) (E skoMC1) [[(skoSC1 skoMC1 skoMC1 skoMC1 (2))<=(skoMC1 skoMC1 skoMC1 (-2))]/\[[(skoMC1 skoMC1 skoMC1 (2+(skoMC1 (6))))<(skoSC1 ((skoMC1 skoMC1 skoMC1 skoMC1 (-12))+(skoSC1 ((skoMC1 skoMC1 skoMC1 (1+(skoMC1 (-6))))+(skoSC1 ((skoMC1 skoMC1 skoMC1)+(skoSC1 ((skoMC1 skoMC1 skoMC1 (-1/12))+(skoSC1 ((skoMC1 skoMC1 skoMC1 (-1/12))+(skoSC1 ((skoMC1 skoMC1 skoMC1 (1/360))+(skoSC1 ((skoMC1 skoMC1 skoMC1 (1/360))+(skoSC1 ((skoMC1 skoMC1 skoMC1 (-1/20160))+(skoSC1 ((skoMC1 skoMC1 skoMC1 (-1/20160))+(skoSC1 ((skoMC1 skoMC1 skoMC1 (1/1814400))+(skoSC1 ((skoMC1 skoMC1 skoMC1 (1/1814400))+(skoSC1 ((skoMC1 skoMC1 skoMC1 (-1/239500800))+(skoSC1 skoMC1 skoMC1 skoMC1 (-1/239500800))))))))))))))))))))))))))]/\[[(skoSC1 ((skoMC1 skoMC1 skoMC1 skoMC1 (-12))+(skoSC1 ((skoMC1 skoMC1 skoMC1 (1+(skoMC1 (-6))))+(skoSC1 ((skoMC1 skoMC1 skoMC1)+(skoSC1 ((skoMC1 skoMC1 skoMC1 (-1/12))+(skoSC1 skoMC1 skoMC1 skoMC1 (-1/12))))))))))<=(skoMC1 skoMC1 skoMC1 (2+(skoMC1 (6))))]/\[[(skoMC1 skoMC1 skoMC1 (-1))<=0]/\[[(skoSC1 ((skoMC1 skoMC1 skoMC1 (1+(skoMC1 (-3))))+(skoSC1 ((skoMC1 skoMC1 skoMC1 (2+(skoMC1 (3))))+(skoSC1 ((skoMC1 skoMC1 skoMC1 skoMC1)+(skoSC1 skoMC1 skoMC1 skoMC1 (-1/12))))))))<=(skoMC1 skoMC1 skoMC1 (2+(skoMC1 (5))))]/\[[(skoSC1 ((skoMC1 skoMC1 skoMC1 (1+(skoMC1 (-3))))+(skoSC1 ((skoMC1 skoMC1 skoMC1 (2+(skoMC1 (3))))+(skoSC1 ((skoMC1 skoMC1 skoMC1 (-1/6+skoMC1))+(skoSC1 skoMC1 skoMC1 skoMC1 (-1/4))))))))<=(skoMC1 skoMC1 skoMC1 (2+(skoMC1 (5))))]/\[[(skoSC1 skoMC1 skoMC1 skoMC1 (-1))<=(skoMC1 skoMC1 skoMC1)]/\[[(skoMC1 skoMC1 skoMC1 (-2+(skoMC1 (-5))))<(skoSC1 ((skoMC1 skoMC1 skoMC1 (-1+(skoMC1 (3))))+(skoSC1 ((skoMC1 skoMC1 skoMC1 (-2+(skoMC1 (-3))))+(skoSC1 ((skoMC1 skoMC1 skoMC1 skoMC1 (-1))+(skoSC1 skoMC1 skoMC1 skoMC1 (1/12))))))))]/\[[(skoMC1 skoMC1 skoMC1 (-2+(skoMC1 (-5))))<(skoSC1 ((skoMC1 skoMC1 skoMC1 (-1+(skoMC1 (3))))+(skoSC1 ((skoMC1 skoMC1 skoMC1 (-2+(skoMC1 (-3))))+(skoSC1 ((skoMC1 skoMC1 skoMC1 (1/6+(skoMC1 (-1))))+(skoSC1 skoMC1 skoMC1 skoMC1 (1/4))))))))]/\[[(skoMC1 skoMC1 skoMC1 (-1))<(skoSC1 skoMC1 skoMC1 skoMC1)]/\[[(skoMC1 skoMC1 skoMC1 (-2))<=0]/\[[0<(skoMC1 skoMC1 skoMC1 (2))]/\[[(skoMC1 (-2+(skoMC1 (-5))))<(skoSC1 ((skoMC1 (-1+(skoMC1 (3))))+(skoSC1 ((skoMC1 (-2+(skoMC1 (-3))))+(skoSC1 ((skoMC1 (1/6+(skoMC1 (-1))))+(skoSC1 skoMC1 (1/4))))))))]/\[[(skoMC1 (-2+(skoMC1 (-5))))<(skoSC1 ((skoMC1 (-1+(skoMC1 (3))))+(skoSC1 ((skoMC1 (-2+(skoMC1 (-3))))+(skoSC1 ((skoMC1 skoMC1 (-1))+(skoSC1 skoMC1 (1/12))))))))]/\[[(skoSC1 ((skoMC1 (1+(skoMC1 (-3))))+(skoSC1 ((skoMC1 (2+(skoMC1 (3))))+(skoSC1 ((skoMC1 (-1/6+skoMC1))+(skoSC1 skoMC1 (-1/4))))))))<=(skoMC1 (2+(skoMC1 (5))))]/\[[(skoSC1 ((skoMC1 (1+(skoMC1 (-3))))+(skoSC1 ((skoMC1 (2+(skoMC1 (3))))+(skoSC1 ((skoMC1 skoMC1)+(skoSC1 skoMC1 (-1/12))))))))<=(skoMC1 (2+(skoMC1 (5))))]/\[[(skoSC1 skoMC1 (-1))<=skoMC1]/\[[(skoMC1 (-1))<(skoSC1 skoMC1)]/\[[0<=skoMC1]/\[[0<skoMC1]/\[[0<=skoSC1]/\[[2<=skoMC1]/\[[skoSC1<=5/4]/\[[(skoMC1 skoMC1 skoMC1 (-2))<(skoSC1 skoMC1 skoMC1 skoMC1 (2))]/\[[(skoSC1 skoMC1 skoMC1 skoMC1 (-2))<=(skoMC1 skoMC1 skoMC1 (2))]/\[(skoSC1 ((skoMC1 skoMC1 skoMC1 (-2+(skoMC1 (-12))))+(skoSC1 ((skoMC1 skoMC1 skoMC1 (1+(skoMC1 (-6))))+(skoSC1 ((skoMC1 skoMC1 skoMC1)+(skoSC1 ((skoMC1 skoMC1 skoMC1 (-1/12))+(skoSC1 skoMC1 skoMC1 skoMC1 (-1/12))))))))))<=(skoMC1 skoMC1 skoMC1 (2+(skoMC1 (6))))]]]]]]]]]]]]]]]]]]]]]]]]]].

% In SMTLib2 format:
(declare-fun skoSC1 () Real) (declare-fun skoMC1 () Real) (assert (and (<= (* skoSC1 (* skoMC1 (* skoMC1 (* skoMC1 2.)))) (* skoMC1 (* skoMC1 (* skoMC1 (- 2.))))) (and (> (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (* skoMC1 (- 12.))))) (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (+ 1. (* skoMC1 (- 6.)))))) (* skoSC1 (+ (* skoMC1 (* skoMC1 skoMC1)) (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (/ (- 1.) 12.)))) (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (/ (- 1.) 12.)))) (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (/ 1. 360.)))) (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (/ 1. 360.)))) (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (/ (- 1.) 20160.)))) (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (/ (- 1.) 20160.)))) (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (/ 1. 1814400.)))) (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (/ 1. 1814400.)))) (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (/ (- 1.) 239500800.)))) (* skoSC1 (* skoMC1 (* skoMC1 (* skoMC1 (/ (- 1.) 239500800.))))))))))))))))))))))))))))) (* skoMC1 (* skoMC1 (* skoMC1 (+ 2. (* skoMC1 6.)))))) (and (<= (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (* skoMC1 (- 12.))))) (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (+ 1. (* skoMC1 (- 6.)))))) (* skoSC1 (+ (* skoMC1 (* skoMC1 skoMC1)) (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (/ (- 1.) 12.)))) (* skoSC1 (* skoMC1 (* skoMC1 (* skoMC1 (/ (- 1.) 12.))))))))))))) (* skoMC1 (* skoMC1 (* skoMC1 (+ 2. (* skoMC1 6.)))))) (and (<= (* skoMC1 (* skoMC1 (* skoMC1 (- 1.)))) 0.) (and (<= (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (+ 1. (* skoMC1 (- 3.)))))) (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (+ 2. (* skoMC1 3.))))) (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 skoMC1))) (* skoSC1 (* skoMC1 (* skoMC1 (* skoMC1 (/ (- 1.) 12.))))))))))) (* skoMC1 (* skoMC1 (* skoMC1 (+ 2. (* skoMC1 5.)))))) (and (<= (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (+ 1. (* skoMC1 (- 3.)))))) (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (+ 2. (* skoMC1 3.))))) (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (+ (/ (- 1.) 6.) skoMC1)))) (* skoSC1 (* skoMC1 (* skoMC1 (* skoMC1 (/ (- 1.) 4.))))))))))) (* skoMC1 (* skoMC1 (* skoMC1 (+ 2. (* skoMC1 5.)))))) (and (<= (* skoSC1 (* skoMC1 (* skoMC1 (* skoMC1 (- 1.))))) (* skoMC1 (* skoMC1 skoMC1))) (and (> (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (+ (- 1.) (* skoMC1 3.))))) (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (+ (- 2.) (* skoMC1 (- 3.)))))) (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (* skoMC1 (- 1.))))) (* skoSC1 (* skoMC1 (* skoMC1 (* skoMC1 (/ 1. 12.))))))))))) (* skoMC1 (* skoMC1 (* skoMC1 (+ (- 2.) (* skoMC1 (- 5.))))))) (and (> (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (+ (- 1.) (* skoMC1 3.))))) (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (+ (- 2.) (* skoMC1 (- 3.)))))) (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (+ (/ 1. 6.) (* skoMC1 (- 1.)))))) (* skoSC1 (* skoMC1 (* skoMC1 (* skoMC1 (/ 1. 4.))))))))))) (* skoMC1 (* skoMC1 (* skoMC1 (+ (- 2.) (* skoMC1 (- 5.))))))) (and (> (* skoSC1 (* skoMC1 (* skoMC1 skoMC1))) (* skoMC1 (* skoMC1 (* skoMC1 (- 1.))))) (and (<= (* skoMC1 (* skoMC1 (* skoMC1 (- 2.)))) 0.) (and (> (* skoMC1 (* skoMC1 (* skoMC1 2.))) 0.) (and (> (* skoSC1 (+ (* skoMC1 (+ (- 1.) (* skoMC1 3.))) (* skoSC1 (+ (* skoMC1 (+ (- 2.) (* skoMC1 (- 3.)))) (* skoSC1 (+ (* skoMC1 (+ (/ 1. 6.) (* skoMC1 (- 1.)))) (* skoSC1 (* skoMC1 (/ 1. 4.))))))))) (* skoMC1 (+ (- 2.) (* skoMC1 (- 5.))))) (and (> (* skoSC1 (+ (* skoMC1 (+ (- 1.) (* skoMC1 3.))) (* skoSC1 (+ (* skoMC1 (+ (- 2.) (* skoMC1 (- 3.)))) (* skoSC1 (+ (* skoMC1 (* skoMC1 (- 1.))) (* skoSC1 (* skoMC1 (/ 1. 12.))))))))) (* skoMC1 (+ (- 2.) (* skoMC1 (- 5.))))) (and (<= (* skoSC1 (+ (* skoMC1 (+ 1. (* skoMC1 (- 3.)))) (* skoSC1 (+ (* skoMC1 (+ 2. (* skoMC1 3.))) (* skoSC1 (+ (* skoMC1 (+ (/ (- 1.) 6.) skoMC1)) (* skoSC1 (* skoMC1 (/ (- 1.) 4.))))))))) (* skoMC1 (+ 2. (* skoMC1 5.)))) (and (<= (* skoSC1 (+ (* skoMC1 (+ 1. (* skoMC1 (- 3.)))) (* skoSC1 (+ (* skoMC1 (+ 2. (* skoMC1 3.))) (* skoSC1 (+ (* skoMC1 skoMC1) (* skoSC1 (* skoMC1 (/ (- 1.) 12.))))))))) (* skoMC1 (+ 2. (* skoMC1 5.)))) (and (<= (* skoSC1 (* skoMC1 (- 1.))) skoMC1) (and (> (* skoSC1 skoMC1) (* skoMC1 (- 1.))) (and (<= 0. skoMC1) (and (> skoMC1 0.) (and (<= 0. skoSC1) (and (<= 2. skoMC1) (and (<= skoSC1 (/ 5. 4.)) (and (> (* skoSC1 (* skoMC1 (* skoMC1 (* skoMC1 2.)))) (* skoMC1 (* skoMC1 (* skoMC1 (- 2.))))) (and (<= (* skoSC1 (* skoMC1 (* skoMC1 (* skoMC1 (- 2.))))) (* skoMC1 (* skoMC1 (* skoMC1 2.)))) (<= (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (+ (- 2.) (* skoMC1 (- 12.)))))) (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (+ 1. (* skoMC1 (- 6.)))))) (* skoSC1 (+ (* skoMC1 (* skoMC1 skoMC1)) (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (/ (- 1.) 12.)))) (* skoSC1 (* skoMC1 (* skoMC1 (* skoMC1 (/ (- 1.) 12.))))))))))))) (* skoMC1 (* skoMC1 (* skoMC1 (+ 2. (* skoMC1 6.))))))))))))))))))))))))))))))))

% In GRF format:
(sequent " MetiTarski formula " (antecedent (<= (* skoSC1 (* skoMC1 (* skoMC1 (* skoMC1 2.)))) (* skoMC1 (* skoMC1 (* skoMC1 (- 2.))))) (> (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (* skoMC1 (- 12.))))) (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (+ 1. (* skoMC1 (- 6.)))))) (* skoSC1 (+ (* skoMC1 (* skoMC1 skoMC1)) (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (/ (- 1.) 12.)))) (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (/ (- 1.) 12.)))) (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (/ 1. 360.)))) (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (/ 1. 360.)))) (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (/ (- 1.) 20160.)))) (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (/ (- 1.) 20160.)))) (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (/ 1. 1814400.)))) (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (/ 1. 1814400.)))) (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (/ (- 1.) 239500800.)))) (* skoSC1 (* skoMC1 (* skoMC1 (* skoMC1 (/ (- 1.) 239500800.))))))))))))))))))))))))))))) (* skoMC1 (* skoMC1 (* skoMC1 (+ 2. (* skoMC1 6.)))))) (<= (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (* skoMC1 (- 12.))))) (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (+ 1. (* skoMC1 (- 6.)))))) (* skoSC1 (+ (* skoMC1 (* skoMC1 skoMC1)) (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (/ (- 1.) 12.)))) (* skoSC1 (* skoMC1 (* skoMC1 (* skoMC1 (/ (- 1.) 12.))))))))))))) (* skoMC1 (* skoMC1 (* skoMC1 (+ 2. (* skoMC1 6.)))))) (<= (* skoMC1 (* skoMC1 (* skoMC1 (- 1.)))) 0.) (<= (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (+ 1. (* skoMC1 (- 3.)))))) (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (+ 2. (* skoMC1 3.))))) (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 skoMC1))) (* skoSC1 (* skoMC1 (* skoMC1 (* skoMC1 (/ (- 1.) 12.))))))))))) (* skoMC1 (* skoMC1 (* skoMC1 (+ 2. (* skoMC1 5.)))))) (<= (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (+ 1. (* skoMC1 (- 3.)))))) (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (+ 2. (* skoMC1 3.))))) (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (+ (/ (- 1.) 6.) skoMC1)))) (* skoSC1 (* skoMC1 (* skoMC1 (* skoMC1 (/ (- 1.) 4.))))))))))) (* skoMC1 (* skoMC1 (* skoMC1 (+ 2. (* skoMC1 5.)))))) (<= (* skoSC1 (* skoMC1 (* skoMC1 (* skoMC1 (- 1.))))) (* skoMC1 (* skoMC1 skoMC1))) (> (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (+ (- 1.) (* skoMC1 3.))))) (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (+ (- 2.) (* skoMC1 (- 3.)))))) (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (* skoMC1 (- 1.))))) (* skoSC1 (* skoMC1 (* skoMC1 (* skoMC1 (/ 1. 12.))))))))))) (* skoMC1 (* skoMC1 (* skoMC1 (+ (- 2.) (* skoMC1 (- 5.))))))) (> (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (+ (- 1.) (* skoMC1 3.))))) (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (+ (- 2.) (* skoMC1 (- 3.)))))) (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (+ (/ 1. 6.) (* skoMC1 (- 1.)))))) (* skoSC1 (* skoMC1 (* skoMC1 (* skoMC1 (/ 1. 4.))))))))))) (* skoMC1 (* skoMC1 (* skoMC1 (+ (- 2.) (* skoMC1 (- 5.))))))) (> (* skoSC1 (* skoMC1 (* skoMC1 skoMC1))) (* skoMC1 (* skoMC1 (* skoMC1 (- 1.))))) (<= (* skoMC1 (* skoMC1 (* skoMC1 (- 2.)))) 0.) (> (* skoMC1 (* skoMC1 (* skoMC1 2.))) 0.) (> (* skoSC1 (+ (* skoMC1 (+ (- 1.) (* skoMC1 3.))) (* skoSC1 (+ (* skoMC1 (+ (- 2.) (* skoMC1 (- 3.)))) (* skoSC1 (+ (* skoMC1 (+ (/ 1. 6.) (* skoMC1 (- 1.)))) (* skoSC1 (* skoMC1 (/ 1. 4.))))))))) (* skoMC1 (+ (- 2.) (* skoMC1 (- 5.))))) (> (* skoSC1 (+ (* skoMC1 (+ (- 1.) (* skoMC1 3.))) (* skoSC1 (+ (* skoMC1 (+ (- 2.) (* skoMC1 (- 3.)))) (* skoSC1 (+ (* skoMC1 (* skoMC1 (- 1.))) (* skoSC1 (* skoMC1 (/ 1. 12.))))))))) (* skoMC1 (+ (- 2.) (* skoMC1 (- 5.))))) (<= (* skoSC1 (+ (* skoMC1 (+ 1. (* skoMC1 (- 3.)))) (* skoSC1 (+ (* skoMC1 (+ 2. (* skoMC1 3.))) (* skoSC1 (+ (* skoMC1 (+ (/ (- 1.) 6.) skoMC1)) (* skoSC1 (* skoMC1 (/ (- 1.) 4.))))))))) (* skoMC1 (+ 2. (* skoMC1 5.)))) (<= (* skoSC1 (+ (* skoMC1 (+ 1. (* skoMC1 (- 3.)))) (* skoSC1 (+ (* skoMC1 (+ 2. (* skoMC1 3.))) (* skoSC1 (+ (* skoMC1 skoMC1) (* skoSC1 (* skoMC1 (/ (- 1.) 12.))))))))) (* skoMC1 (+ 2. (* skoMC1 5.)))) (<= (* skoSC1 (* skoMC1 (- 1.))) skoMC1) (> (* skoSC1 skoMC1) (* skoMC1 (- 1.))) (<= 0. skoMC1) (> skoMC1 0.) (<= 0. skoSC1) (<= 2. skoMC1) (<= skoSC1 (/ 5. 4.)) (> (* skoSC1 (* skoMC1 (* skoMC1 (* skoMC1 2.)))) (* skoMC1 (* skoMC1 (* skoMC1 (- 2.))))) (<= (* skoSC1 (* skoMC1 (* skoMC1 (* skoMC1 (- 2.))))) (* skoMC1 (* skoMC1 (* skoMC1 2.))))) (succedent (> (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (+ (- 2.) (* skoMC1 (- 12.)))))) (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (+ 1. (* skoMC1 (- 6.)))))) (* skoSC1 (+ (* skoMC1 (* skoMC1 skoMC1)) (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (/ (- 1.) 12.)))) (* skoSC1 (* skoMC1 (* skoMC1 (* skoMC1 (/ (- 1.) 12.))))))))))))) (* skoMC1 (* skoMC1 (* skoMC1 (+ 2. (* skoMC1 6.))))))))
-----[end problem]-----

-----[begin problem]-----
% In Mathematica format:
Timing[Resolve[Exists[{skoSC1,skoMC1}, And[skoSC1*skoMC1*skoMC1*skoMC1*-2<=skoMC1*skoMC1*skoMC1*2,skoSC1*(skoMC1*skoMC1*skoMC1*skoMC1*-12+skoSC1*(skoMC1*skoMC1*skoMC1*(1+skoMC1*-6)+skoSC1*(skoMC1*skoMC1*skoMC1+skoSC1*(skoMC1*skoMC1*skoMC1*(-1/12)+skoSC1*skoMC1*skoMC1*skoMC1*(-1/12)))))<=skoMC1*skoMC1*skoMC1*(2+skoMC1*6),skoMC1*skoMC1*skoMC1*-1<=0,skoSC1*(skoMC1*skoMC1*skoMC1*(1+skoMC1*-3)+skoSC1*(skoMC1*skoMC1*skoMC1*(2+skoMC1*3)+skoSC1*(skoMC1*skoMC1*skoMC1*skoMC1+skoSC1*skoMC1*skoMC1*skoMC1*(-1/12))))<=skoMC1*skoMC1*skoMC1*(2+skoMC1*5),skoSC1*(skoMC1*skoMC1*skoMC1*(1+skoMC1*-3)+skoSC1*(skoMC1*skoMC1*skoMC1*(2+skoMC1*3)+skoSC1*(skoMC1*skoMC1*skoMC1*((-1/6)+skoMC1)+skoSC1*skoMC1*skoMC1*skoMC1*(-1/4))))<=skoMC1*skoMC1*skoMC1*(2+skoMC1*5),skoSC1*skoMC1*skoMC1*skoMC1*-1<=skoMC1*skoMC1*skoMC1,skoSC1*(skoMC1*skoMC1*skoMC1*(-1+skoMC1*3)+skoSC1*(skoMC1*skoMC1*skoMC1*(-2+skoMC1*-3)+skoSC1*(skoMC1*skoMC1*skoMC1*skoMC1*-1+skoSC1*skoMC1*skoMC1*skoMC1*(1/12))))>skoMC1*skoMC1*skoMC1*(-2+skoMC1*-5),skoSC1*(skoMC1*skoMC1*skoMC1*(-1+skoMC1*3)+skoSC1*(skoMC1*skoMC1*skoMC1*(-2+skoMC1*-3)+skoSC1*(skoMC1*skoMC1*skoMC1*((1/6)+skoMC1*-1)+skoSC1*skoMC1*skoMC1*skoMC1*(1/4))))>skoMC1*skoMC1*skoMC1*(-2+skoMC1*-5),skoSC1*skoMC1*skoMC1*skoMC1>skoMC1*skoMC1*skoMC1*-1,skoMC1*skoMC1*skoMC1*-2<=0,skoMC1*skoMC1*skoMC1*2>0,skoSC1*(skoMC1*(-1+skoMC1*3)+skoSC1*(skoMC1*(-2+skoMC1*-3)+skoSC1*(skoMC1*((1/6)+skoMC1*-1)+skoSC1*skoMC1*(1/4))))>skoMC1*(-2+skoMC1*-5),skoSC1*(skoMC1*(-1+skoMC1*3)+skoSC1*(skoMC1*(-2+skoMC1*-3)+skoSC1*(skoMC1*skoMC1*-1+skoSC1*skoMC1*(1/12))))>skoMC1*(-2+skoMC1*-5),skoSC1*(skoMC1*(1+skoMC1*-3)+skoSC1*(skoMC1*(2+skoMC1*3)+skoSC1*(skoMC1*((-1/6)+skoMC1)+skoSC1*skoMC1*(-1/4))))<=skoMC1*(2+skoMC1*5),skoSC1*(skoMC1*(1+skoMC1*-3)+skoSC1*(skoMC1*(2+skoMC1*3)+skoSC1*(skoMC1*skoMC1+skoSC1*skoMC1*(-1/12))))<=skoMC1*(2+skoMC1*5),skoSC1*skoMC1*-1<=skoMC1,skoSC1*skoMC1>skoMC1*-1,0<=skoMC1,skoMC1>0,0<=skoSC1,2<=skoMC1,skoSC1<=(5/4),skoSC1*skoMC1*skoMC1*skoMC1*2>skoMC1*skoMC1*skoMC1*-2,skoSC1*skoMC1*skoMC1*skoMC1*-2<=skoMC1*skoMC1*skoMC1*2,skoSC1*(skoMC1*skoMC1*skoMC1*(-2+skoMC1*-12)+skoSC1*(skoMC1*skoMC1*skoMC1*(1+skoMC1*-6)+skoSC1*(skoMC1*skoMC1*skoMC1+skoSC1*(skoMC1*skoMC1*skoMC1*(-1/12)+skoSC1*skoMC1*skoMC1*skoMC1*(-1/12)))))<=skoMC1*skoMC1*skoMC1*(2+skoMC1*6)]], Reals]]

% In QepcadB format:
(E skoSC1) (E skoMC1) [[(skoSC1 skoMC1 skoMC1 skoMC1 (-2))<=(skoMC1 skoMC1 skoMC1 (2))]/\[[(skoSC1 ((skoMC1 skoMC1 skoMC1 skoMC1 (-12))+(skoSC1 ((skoMC1 skoMC1 skoMC1 (1+(skoMC1 (-6))))+(skoSC1 ((skoMC1 skoMC1 skoMC1)+(skoSC1 ((skoMC1 skoMC1 skoMC1 (-1/12))+(skoSC1 skoMC1 skoMC1 skoMC1 (-1/12))))))))))<=(skoMC1 skoMC1 skoMC1 (2+(skoMC1 (6))))]/\[[(skoMC1 skoMC1 skoMC1 (-1))<=0]/\[[(skoSC1 ((skoMC1 skoMC1 skoMC1 (1+(skoMC1 (-3))))+(skoSC1 ((skoMC1 skoMC1 skoMC1 (2+(skoMC1 (3))))+(skoSC1 ((skoMC1 skoMC1 skoMC1 skoMC1)+(skoSC1 skoMC1 skoMC1 skoMC1 (-1/12))))))))<=(skoMC1 skoMC1 skoMC1 (2+(skoMC1 (5))))]/\[[(skoSC1 ((skoMC1 skoMC1 skoMC1 (1+(skoMC1 (-3))))+(skoSC1 ((skoMC1 skoMC1 skoMC1 (2+(skoMC1 (3))))+(skoSC1 ((skoMC1 skoMC1 skoMC1 (-1/6+skoMC1))+(skoSC1 skoMC1 skoMC1 skoMC1 (-1/4))))))))<=(skoMC1 skoMC1 skoMC1 (2+(skoMC1 (5))))]/\[[(skoSC1 skoMC1 skoMC1 skoMC1 (-1))<=(skoMC1 skoMC1 skoMC1)]/\[[(skoMC1 skoMC1 skoMC1 (-2+(skoMC1 (-5))))<(skoSC1 ((skoMC1 skoMC1 skoMC1 (-1+(skoMC1 (3))))+(skoSC1 ((skoMC1 skoMC1 skoMC1 (-2+(skoMC1 (-3))))+(skoSC1 ((skoMC1 skoMC1 skoMC1 skoMC1 (-1))+(skoSC1 skoMC1 skoMC1 skoMC1 (1/12))))))))]/\[[(skoMC1 skoMC1 skoMC1 (-2+(skoMC1 (-5))))<(skoSC1 ((skoMC1 skoMC1 skoMC1 (-1+(skoMC1 (3))))+(skoSC1 ((skoMC1 skoMC1 skoMC1 (-2+(skoMC1 (-3))))+(skoSC1 ((skoMC1 skoMC1 skoMC1 (1/6+(skoMC1 (-1))))+(skoSC1 skoMC1 skoMC1 skoMC1 (1/4))))))))]/\[[(skoMC1 skoMC1 skoMC1 (-1))<(skoSC1 skoMC1 skoMC1 skoMC1)]/\[[(skoMC1 skoMC1 skoMC1 (-2))<=0]/\[[0<(skoMC1 skoMC1 skoMC1 (2))]/\[[(skoMC1 (-2+(skoMC1 (-5))))<(skoSC1 ((skoMC1 (-1+(skoMC1 (3))))+(skoSC1 ((skoMC1 (-2+(skoMC1 (-3))))+(skoSC1 ((skoMC1 (1/6+(skoMC1 (-1))))+(skoSC1 skoMC1 (1/4))))))))]/\[[(skoMC1 (-2+(skoMC1 (-5))))<(skoSC1 ((skoMC1 (-1+(skoMC1 (3))))+(skoSC1 ((skoMC1 (-2+(skoMC1 (-3))))+(skoSC1 ((skoMC1 skoMC1 (-1))+(skoSC1 skoMC1 (1/12))))))))]/\[[(skoSC1 ((skoMC1 (1+(skoMC1 (-3))))+(skoSC1 ((skoMC1 (2+(skoMC1 (3))))+(skoSC1 ((skoMC1 (-1/6+skoMC1))+(skoSC1 skoMC1 (-1/4))))))))<=(skoMC1 (2+(skoMC1 (5))))]/\[[(skoSC1 ((skoMC1 (1+(skoMC1 (-3))))+(skoSC1 ((skoMC1 (2+(skoMC1 (3))))+(skoSC1 ((skoMC1 skoMC1)+(skoSC1 skoMC1 (-1/12))))))))<=(skoMC1 (2+(skoMC1 (5))))]/\[[(skoSC1 skoMC1 (-1))<=skoMC1]/\[[(skoMC1 (-1))<(skoSC1 skoMC1)]/\[[0<=skoMC1]/\[[0<skoMC1]/\[[0<=skoSC1]/\[[2<=skoMC1]/\[[skoSC1<=5/4]/\[[(skoMC1 skoMC1 skoMC1 (-2))<(skoSC1 skoMC1 skoMC1 skoMC1 (2))]/\[[(skoSC1 skoMC1 skoMC1 skoMC1 (-2))<=(skoMC1 skoMC1 skoMC1 (2))]/\[(skoSC1 ((skoMC1 skoMC1 skoMC1 (-2+(skoMC1 (-12))))+(skoSC1 ((skoMC1 skoMC1 skoMC1 (1+(skoMC1 (-6))))+(skoSC1 ((skoMC1 skoMC1 skoMC1)+(skoSC1 ((skoMC1 skoMC1 skoMC1 (-1/12))+(skoSC1 skoMC1 skoMC1 skoMC1 (-1/12))))))))))<=(skoMC1 skoMC1 skoMC1 (2+(skoMC1 (6))))]]]]]]]]]]]]]]]]]]]]]]]]].

% In SMTLib2 format:
(declare-fun skoSC1 () Real) (declare-fun skoMC1 () Real) (assert (and (<= (* skoSC1 (* skoMC1 (* skoMC1 (* skoMC1 (- 2.))))) (* skoMC1 (* skoMC1 (* skoMC1 2.)))) (and (<= (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (* skoMC1 (- 12.))))) (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (+ 1. (* skoMC1 (- 6.)))))) (* skoSC1 (+ (* skoMC1 (* skoMC1 skoMC1)) (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (/ (- 1.) 12.)))) (* skoSC1 (* skoMC1 (* skoMC1 (* skoMC1 (/ (- 1.) 12.))))))))))))) (* skoMC1 (* skoMC1 (* skoMC1 (+ 2. (* skoMC1 6.)))))) (and (<= (* skoMC1 (* skoMC1 (* skoMC1 (- 1.)))) 0.) (and (<= (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (+ 1. (* skoMC1 (- 3.)))))) (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (+ 2. (* skoMC1 3.))))) (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 skoMC1))) (* skoSC1 (* skoMC1 (* skoMC1 (* skoMC1 (/ (- 1.) 12.))))))))))) (* skoMC1 (* skoMC1 (* skoMC1 (+ 2. (* skoMC1 5.)))))) (and (<= (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (+ 1. (* skoMC1 (- 3.)))))) (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (+ 2. (* skoMC1 3.))))) (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (+ (/ (- 1.) 6.) skoMC1)))) (* skoSC1 (* skoMC1 (* skoMC1 (* skoMC1 (/ (- 1.) 4.))))))))))) (* skoMC1 (* skoMC1 (* skoMC1 (+ 2. (* skoMC1 5.)))))) (and (<= (* skoSC1 (* skoMC1 (* skoMC1 (* skoMC1 (- 1.))))) (* skoMC1 (* skoMC1 skoMC1))) (and (> (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (+ (- 1.) (* skoMC1 3.))))) (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (+ (- 2.) (* skoMC1 (- 3.)))))) (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (* skoMC1 (- 1.))))) (* skoSC1 (* skoMC1 (* skoMC1 (* skoMC1 (/ 1. 12.))))))))))) (* skoMC1 (* skoMC1 (* skoMC1 (+ (- 2.) (* skoMC1 (- 5.))))))) (and (> (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (+ (- 1.) (* skoMC1 3.))))) (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (+ (- 2.) (* skoMC1 (- 3.)))))) (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (+ (/ 1. 6.) (* skoMC1 (- 1.)))))) (* skoSC1 (* skoMC1 (* skoMC1 (* skoMC1 (/ 1. 4.))))))))))) (* skoMC1 (* skoMC1 (* skoMC1 (+ (- 2.) (* skoMC1 (- 5.))))))) (and (> (* skoSC1 (* skoMC1 (* skoMC1 skoMC1))) (* skoMC1 (* skoMC1 (* skoMC1 (- 1.))))) (and (<= (* skoMC1 (* skoMC1 (* skoMC1 (- 2.)))) 0.) (and (> (* skoMC1 (* skoMC1 (* skoMC1 2.))) 0.) (and (> (* skoSC1 (+ (* skoMC1 (+ (- 1.) (* skoMC1 3.))) (* skoSC1 (+ (* skoMC1 (+ (- 2.) (* skoMC1 (- 3.)))) (* skoSC1 (+ (* skoMC1 (+ (/ 1. 6.) (* skoMC1 (- 1.)))) (* skoSC1 (* skoMC1 (/ 1. 4.))))))))) (* skoMC1 (+ (- 2.) (* skoMC1 (- 5.))))) (and (> (* skoSC1 (+ (* skoMC1 (+ (- 1.) (* skoMC1 3.))) (* skoSC1 (+ (* skoMC1 (+ (- 2.) (* skoMC1 (- 3.)))) (* skoSC1 (+ (* skoMC1 (* skoMC1 (- 1.))) (* skoSC1 (* skoMC1 (/ 1. 12.))))))))) (* skoMC1 (+ (- 2.) (* skoMC1 (- 5.))))) (and (<= (* skoSC1 (+ (* skoMC1 (+ 1. (* skoMC1 (- 3.)))) (* skoSC1 (+ (* skoMC1 (+ 2. (* skoMC1 3.))) (* skoSC1 (+ (* skoMC1 (+ (/ (- 1.) 6.) skoMC1)) (* skoSC1 (* skoMC1 (/ (- 1.) 4.))))))))) (* skoMC1 (+ 2. (* skoMC1 5.)))) (and (<= (* skoSC1 (+ (* skoMC1 (+ 1. (* skoMC1 (- 3.)))) (* skoSC1 (+ (* skoMC1 (+ 2. (* skoMC1 3.))) (* skoSC1 (+ (* skoMC1 skoMC1) (* skoSC1 (* skoMC1 (/ (- 1.) 12.))))))))) (* skoMC1 (+ 2. (* skoMC1 5.)))) (and (<= (* skoSC1 (* skoMC1 (- 1.))) skoMC1) (and (> (* skoSC1 skoMC1) (* skoMC1 (- 1.))) (and (<= 0. skoMC1) (and (> skoMC1 0.) (and (<= 0. skoSC1) (and (<= 2. skoMC1) (and (<= skoSC1 (/ 5. 4.)) (and (> (* skoSC1 (* skoMC1 (* skoMC1 (* skoMC1 2.)))) (* skoMC1 (* skoMC1 (* skoMC1 (- 2.))))) (and (<= (* skoSC1 (* skoMC1 (* skoMC1 (* skoMC1 (- 2.))))) (* skoMC1 (* skoMC1 (* skoMC1 2.)))) (<= (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (+ (- 2.) (* skoMC1 (- 12.)))))) (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (+ 1. (* skoMC1 (- 6.)))))) (* skoSC1 (+ (* skoMC1 (* skoMC1 skoMC1)) (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (/ (- 1.) 12.)))) (* skoSC1 (* skoMC1 (* skoMC1 (* skoMC1 (/ (- 1.) 12.))))))))))))) (* skoMC1 (* skoMC1 (* skoMC1 (+ 2. (* skoMC1 6.)))))))))))))))))))))))))))))))

% In GRF format:
(sequent " MetiTarski formula " (antecedent (<= (* skoSC1 (* skoMC1 (* skoMC1 (* skoMC1 (- 2.))))) (* skoMC1 (* skoMC1 (* skoMC1 2.)))) (<= (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (* skoMC1 (- 12.))))) (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (+ 1. (* skoMC1 (- 6.)))))) (* skoSC1 (+ (* skoMC1 (* skoMC1 skoMC1)) (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (/ (- 1.) 12.)))) (* skoSC1 (* skoMC1 (* skoMC1 (* skoMC1 (/ (- 1.) 12.))))))))))))) (* skoMC1 (* skoMC1 (* skoMC1 (+ 2. (* skoMC1 6.)))))) (<= (* skoMC1 (* skoMC1 (* skoMC1 (- 1.)))) 0.) (<= (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (+ 1. (* skoMC1 (- 3.)))))) (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (+ 2. (* skoMC1 3.))))) (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 skoMC1))) (* skoSC1 (* skoMC1 (* skoMC1 (* skoMC1 (/ (- 1.) 12.))))))))))) (* skoMC1 (* skoMC1 (* skoMC1 (+ 2. (* skoMC1 5.)))))) (<= (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (+ 1. (* skoMC1 (- 3.)))))) (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (+ 2. (* skoMC1 3.))))) (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (+ (/ (- 1.) 6.) skoMC1)))) (* skoSC1 (* skoMC1 (* skoMC1 (* skoMC1 (/ (- 1.) 4.))))))))))) (* skoMC1 (* skoMC1 (* skoMC1 (+ 2. (* skoMC1 5.)))))) (<= (* skoSC1 (* skoMC1 (* skoMC1 (* skoMC1 (- 1.))))) (* skoMC1 (* skoMC1 skoMC1))) (> (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (+ (- 1.) (* skoMC1 3.))))) (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (+ (- 2.) (* skoMC1 (- 3.)))))) (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (* skoMC1 (- 1.))))) (* skoSC1 (* skoMC1 (* skoMC1 (* skoMC1 (/ 1. 12.))))))))))) (* skoMC1 (* skoMC1 (* skoMC1 (+ (- 2.) (* skoMC1 (- 5.))))))) (> (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (+ (- 1.) (* skoMC1 3.))))) (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (+ (- 2.) (* skoMC1 (- 3.)))))) (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (+ (/ 1. 6.) (* skoMC1 (- 1.)))))) (* skoSC1 (* skoMC1 (* skoMC1 (* skoMC1 (/ 1. 4.))))))))))) (* skoMC1 (* skoMC1 (* skoMC1 (+ (- 2.) (* skoMC1 (- 5.))))))) (> (* skoSC1 (* skoMC1 (* skoMC1 skoMC1))) (* skoMC1 (* skoMC1 (* skoMC1 (- 1.))))) (<= (* skoMC1 (* skoMC1 (* skoMC1 (- 2.)))) 0.) (> (* skoMC1 (* skoMC1 (* skoMC1 2.))) 0.) (> (* skoSC1 (+ (* skoMC1 (+ (- 1.) (* skoMC1 3.))) (* skoSC1 (+ (* skoMC1 (+ (- 2.) (* skoMC1 (- 3.)))) (* skoSC1 (+ (* skoMC1 (+ (/ 1. 6.) (* skoMC1 (- 1.)))) (* skoSC1 (* skoMC1 (/ 1. 4.))))))))) (* skoMC1 (+ (- 2.) (* skoMC1 (- 5.))))) (> (* skoSC1 (+ (* skoMC1 (+ (- 1.) (* skoMC1 3.))) (* skoSC1 (+ (* skoMC1 (+ (- 2.) (* skoMC1 (- 3.)))) (* skoSC1 (+ (* skoMC1 (* skoMC1 (- 1.))) (* skoSC1 (* skoMC1 (/ 1. 12.))))))))) (* skoMC1 (+ (- 2.) (* skoMC1 (- 5.))))) (<= (* skoSC1 (+ (* skoMC1 (+ 1. (* skoMC1 (- 3.)))) (* skoSC1 (+ (* skoMC1 (+ 2. (* skoMC1 3.))) (* skoSC1 (+ (* skoMC1 (+ (/ (- 1.) 6.) skoMC1)) (* skoSC1 (* skoMC1 (/ (- 1.) 4.))))))))) (* skoMC1 (+ 2. (* skoMC1 5.)))) (<= (* skoSC1 (+ (* skoMC1 (+ 1. (* skoMC1 (- 3.)))) (* skoSC1 (+ (* skoMC1 (+ 2. (* skoMC1 3.))) (* skoSC1 (+ (* skoMC1 skoMC1) (* skoSC1 (* skoMC1 (/ (- 1.) 12.))))))))) (* skoMC1 (+ 2. (* skoMC1 5.)))) (<= (* skoSC1 (* skoMC1 (- 1.))) skoMC1) (> (* skoSC1 skoMC1) (* skoMC1 (- 1.))) (<= 0. skoMC1) (> skoMC1 0.) (<= 0. skoSC1) (<= 2. skoMC1) (<= skoSC1 (/ 5. 4.)) (> (* skoSC1 (* skoMC1 (* skoMC1 (* skoMC1 2.)))) (* skoMC1 (* skoMC1 (* skoMC1 (- 2.))))) (<= (* skoSC1 (* skoMC1 (* skoMC1 (* skoMC1 (- 2.))))) (* skoMC1 (* skoMC1 (* skoMC1 2.))))) (succedent (> (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (+ (- 2.) (* skoMC1 (- 12.)))))) (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (+ 1. (* skoMC1 (- 6.)))))) (* skoSC1 (+ (* skoMC1 (* skoMC1 skoMC1)) (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (/ (- 1.) 12.)))) (* skoSC1 (* skoMC1 (* skoMC1 (* skoMC1 (/ (- 1.) 12.))))))))))))) (* skoMC1 (* skoMC1 (* skoMC1 (+ 2. (* skoMC1 6.))))))))
-----[end problem]-----

-----[begin problem]-----
% In Mathematica format:
Timing[Resolve[Exists[{skoSC1,skoMC1}, And[skoSC1*skoMC1*skoMC1*skoMC1*-2<=skoMC1*skoMC1*skoMC1*2,skoSC1*(skoMC1*skoMC1*skoMC1*skoMC1*-12+skoSC1*(skoMC1*skoMC1*skoMC1*(1+skoMC1*-6)+skoSC1*(skoMC1*skoMC1*skoMC1+skoSC1*(skoMC1*skoMC1*skoMC1*(-1/12)+skoSC1*skoMC1*skoMC1*skoMC1*(-1/12)))))<=skoMC1*skoMC1*skoMC1*(2+skoMC1*6),skoMC1*skoMC1*skoMC1*-1<=0,skoSC1*(skoMC1*skoMC1*skoMC1*(1+skoMC1*-3)+skoSC1*(skoMC1*skoMC1*skoMC1*(2+skoMC1*3)+skoSC1*(skoMC1*skoMC1*skoMC1*skoMC1+skoSC1*skoMC1*skoMC1*skoMC1*(-1/12))))<=skoMC1*skoMC1*skoMC1*(2+skoMC1*5),skoSC1*(skoMC1*skoMC1*skoMC1*(1+skoMC1*-3)+skoSC1*(skoMC1*skoMC1*skoMC1*(2+skoMC1*3)+skoSC1*(skoMC1*skoMC1*skoMC1*((-1/6)+skoMC1)+skoSC1*skoMC1*skoMC1*skoMC1*(-1/4))))<=skoMC1*skoMC1*skoMC1*(2+skoMC1*5),skoSC1*skoMC1*skoMC1*skoMC1*-1<=skoMC1*skoMC1*skoMC1,skoSC1*(skoMC1*skoMC1*skoMC1*(-1+skoMC1*3)+skoSC1*(skoMC1*skoMC1*skoMC1*(-2+skoMC1*-3)+skoSC1*(skoMC1*skoMC1*skoMC1*skoMC1*-1+skoSC1*skoMC1*skoMC1*skoMC1*(1/12))))>skoMC1*skoMC1*skoMC1*(-2+skoMC1*-5),skoSC1*(skoMC1*skoMC1*skoMC1*(-1+skoMC1*3)+skoSC1*(skoMC1*skoMC1*skoMC1*(-2+skoMC1*-3)+skoSC1*(skoMC1*skoMC1*skoMC1*((1/6)+skoMC1*-1)+skoSC1*skoMC1*skoMC1*skoMC1*(1/4))))>skoMC1*skoMC1*skoMC1*(-2+skoMC1*-5),skoSC1*skoMC1*skoMC1*skoMC1>skoMC1*skoMC1*skoMC1*-1,skoMC1*skoMC1*skoMC1*-2<=0,skoMC1*skoMC1*skoMC1*2>0,skoSC1*(skoMC1*(-1+skoMC1*3)+skoSC1*(skoMC1*(-2+skoMC1*-3)+skoSC1*(skoMC1*((1/6)+skoMC1*-1)+skoSC1*skoMC1*(1/4))))>skoMC1*(-2+skoMC1*-5),skoSC1*(skoMC1*(-1+skoMC1*3)+skoSC1*(skoMC1*(-2+skoMC1*-3)+skoSC1*(skoMC1*skoMC1*-1+skoSC1*skoMC1*(1/12))))>skoMC1*(-2+skoMC1*-5),skoSC1*(skoMC1*(1+skoMC1*-3)+skoSC1*(skoMC1*(2+skoMC1*3)+skoSC1*(skoMC1*((-1/6)+skoMC1)+skoSC1*skoMC1*(-1/4))))<=skoMC1*(2+skoMC1*5),skoSC1*(skoMC1*(1+skoMC1*-3)+skoSC1*(skoMC1*(2+skoMC1*3)+skoSC1*(skoMC1*skoMC1+skoSC1*skoMC1*(-1/12))))<=skoMC1*(2+skoMC1*5),skoSC1*skoMC1*-1<=skoMC1,skoSC1*skoMC1>skoMC1*-1,0<=skoMC1,skoMC1>0,0<=skoSC1,2<=skoMC1,skoSC1<=(5/4),skoSC1*skoMC1*skoMC1*skoMC1*2>skoMC1*skoMC1*skoMC1*-2,skoSC1*skoMC1*skoMC1*skoMC1*-2<=skoMC1*skoMC1*skoMC1*2,skoSC1*(skoMC1*skoMC1*skoMC1*(-2+skoMC1*-12)+skoSC1*(skoMC1*skoMC1*skoMC1*(1+skoMC1*-6)+skoSC1*(skoMC1*skoMC1*skoMC1+skoSC1*(skoMC1*skoMC1*skoMC1*(-1/12)+skoSC1*skoMC1*skoMC1*skoMC1*(-1/12)))))<=skoMC1*skoMC1*skoMC1*(2+skoMC1*6)]], Reals]]

% In QepcadB format:
(E skoSC1) (E skoMC1) [[(skoSC1 skoMC1 skoMC1 skoMC1 (-2))<=(skoMC1 skoMC1 skoMC1 (2))]/\[[(skoSC1 ((skoMC1 skoMC1 skoMC1 skoMC1 (-12))+(skoSC1 ((skoMC1 skoMC1 skoMC1 (1+(skoMC1 (-6))))+(skoSC1 ((skoMC1 skoMC1 skoMC1)+(skoSC1 ((skoMC1 skoMC1 skoMC1 (-1/12))+(skoSC1 skoMC1 skoMC1 skoMC1 (-1/12))))))))))<=(skoMC1 skoMC1 skoMC1 (2+(skoMC1 (6))))]/\[[(skoMC1 skoMC1 skoMC1 (-1))<=0]/\[[(skoSC1 ((skoMC1 skoMC1 skoMC1 (1+(skoMC1 (-3))))+(skoSC1 ((skoMC1 skoMC1 skoMC1 (2+(skoMC1 (3))))+(skoSC1 ((skoMC1 skoMC1 skoMC1 skoMC1)+(skoSC1 skoMC1 skoMC1 skoMC1 (-1/12))))))))<=(skoMC1 skoMC1 skoMC1 (2+(skoMC1 (5))))]/\[[(skoSC1 ((skoMC1 skoMC1 skoMC1 (1+(skoMC1 (-3))))+(skoSC1 ((skoMC1 skoMC1 skoMC1 (2+(skoMC1 (3))))+(skoSC1 ((skoMC1 skoMC1 skoMC1 (-1/6+skoMC1))+(skoSC1 skoMC1 skoMC1 skoMC1 (-1/4))))))))<=(skoMC1 skoMC1 skoMC1 (2+(skoMC1 (5))))]/\[[(skoSC1 skoMC1 skoMC1 skoMC1 (-1))<=(skoMC1 skoMC1 skoMC1)]/\[[(skoMC1 skoMC1 skoMC1 (-2+(skoMC1 (-5))))<(skoSC1 ((skoMC1 skoMC1 skoMC1 (-1+(skoMC1 (3))))+(skoSC1 ((skoMC1 skoMC1 skoMC1 (-2+(skoMC1 (-3))))+(skoSC1 ((skoMC1 skoMC1 skoMC1 skoMC1 (-1))+(skoSC1 skoMC1 skoMC1 skoMC1 (1/12))))))))]/\[[(skoMC1 skoMC1 skoMC1 (-2+(skoMC1 (-5))))<(skoSC1 ((skoMC1 skoMC1 skoMC1 (-1+(skoMC1 (3))))+(skoSC1 ((skoMC1 skoMC1 skoMC1 (-2+(skoMC1 (-3))))+(skoSC1 ((skoMC1 skoMC1 skoMC1 (1/6+(skoMC1 (-1))))+(skoSC1 skoMC1 skoMC1 skoMC1 (1/4))))))))]/\[[(skoMC1 skoMC1 skoMC1 (-1))<(skoSC1 skoMC1 skoMC1 skoMC1)]/\[[(skoMC1 skoMC1 skoMC1 (-2))<=0]/\[[0<(skoMC1 skoMC1 skoMC1 (2))]/\[[(skoMC1 (-2+(skoMC1 (-5))))<(skoSC1 ((skoMC1 (-1+(skoMC1 (3))))+(skoSC1 ((skoMC1 (-2+(skoMC1 (-3))))+(skoSC1 ((skoMC1 (1/6+(skoMC1 (-1))))+(skoSC1 skoMC1 (1/4))))))))]/\[[(skoMC1 (-2+(skoMC1 (-5))))<(skoSC1 ((skoMC1 (-1+(skoMC1 (3))))+(skoSC1 ((skoMC1 (-2+(skoMC1 (-3))))+(skoSC1 ((skoMC1 skoMC1 (-1))+(skoSC1 skoMC1 (1/12))))))))]/\[[(skoSC1 ((skoMC1 (1+(skoMC1 (-3))))+(skoSC1 ((skoMC1 (2+(skoMC1 (3))))+(skoSC1 ((skoMC1 (-1/6+skoMC1))+(skoSC1 skoMC1 (-1/4))))))))<=(skoMC1 (2+(skoMC1 (5))))]/\[[(skoSC1 ((skoMC1 (1+(skoMC1 (-3))))+(skoSC1 ((skoMC1 (2+(skoMC1 (3))))+(skoSC1 ((skoMC1 skoMC1)+(skoSC1 skoMC1 (-1/12))))))))<=(skoMC1 (2+(skoMC1 (5))))]/\[[(skoSC1 skoMC1 (-1))<=skoMC1]/\[[(skoMC1 (-1))<(skoSC1 skoMC1)]/\[[0<=skoMC1]/\[[0<skoMC1]/\[[0<=skoSC1]/\[[2<=skoMC1]/\[[skoSC1<=5/4]/\[[(skoMC1 skoMC1 skoMC1 (-2))<(skoSC1 skoMC1 skoMC1 skoMC1 (2))]/\[[(skoSC1 skoMC1 skoMC1 skoMC1 (-2))<=(skoMC1 skoMC1 skoMC1 (2))]/\[(skoSC1 ((skoMC1 skoMC1 skoMC1 (-2+(skoMC1 (-12))))+(skoSC1 ((skoMC1 skoMC1 skoMC1 (1+(skoMC1 (-6))))+(skoSC1 ((skoMC1 skoMC1 skoMC1)+(skoSC1 ((skoMC1 skoMC1 skoMC1 (-1/12))+(skoSC1 skoMC1 skoMC1 skoMC1 (-1/12))))))))))<=(skoMC1 skoMC1 skoMC1 (2+(skoMC1 (6))))]]]]]]]]]]]]]]]]]]]]]]]]].

% In SMTLib2 format:
(declare-fun skoSC1 () Real) (declare-fun skoMC1 () Real) (assert (and (<= (* skoSC1 (* skoMC1 (* skoMC1 (* skoMC1 (- 2.))))) (* skoMC1 (* skoMC1 (* skoMC1 2.)))) (and (<= (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (* skoMC1 (- 12.))))) (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (+ 1. (* skoMC1 (- 6.)))))) (* skoSC1 (+ (* skoMC1 (* skoMC1 skoMC1)) (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (/ (- 1.) 12.)))) (* skoSC1 (* skoMC1 (* skoMC1 (* skoMC1 (/ (- 1.) 12.))))))))))))) (* skoMC1 (* skoMC1 (* skoMC1 (+ 2. (* skoMC1 6.)))))) (and (<= (* skoMC1 (* skoMC1 (* skoMC1 (- 1.)))) 0.) (and (<= (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (+ 1. (* skoMC1 (- 3.)))))) (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (+ 2. (* skoMC1 3.))))) (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 skoMC1))) (* skoSC1 (* skoMC1 (* skoMC1 (* skoMC1 (/ (- 1.) 12.))))))))))) (* skoMC1 (* skoMC1 (* skoMC1 (+ 2. (* skoMC1 5.)))))) (and (<= (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (+ 1. (* skoMC1 (- 3.)))))) (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (+ 2. (* skoMC1 3.))))) (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (+ (/ (- 1.) 6.) skoMC1)))) (* skoSC1 (* skoMC1 (* skoMC1 (* skoMC1 (/ (- 1.) 4.))))))))))) (* skoMC1 (* skoMC1 (* skoMC1 (+ 2. (* skoMC1 5.)))))) (and (<= (* skoSC1 (* skoMC1 (* skoMC1 (* skoMC1 (- 1.))))) (* skoMC1 (* skoMC1 skoMC1))) (and (> (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (+ (- 1.) (* skoMC1 3.))))) (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (+ (- 2.) (* skoMC1 (- 3.)))))) (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (* skoMC1 (- 1.))))) (* skoSC1 (* skoMC1 (* skoMC1 (* skoMC1 (/ 1. 12.))))))))))) (* skoMC1 (* skoMC1 (* skoMC1 (+ (- 2.) (* skoMC1 (- 5.))))))) (and (> (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (+ (- 1.) (* skoMC1 3.))))) (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (+ (- 2.) (* skoMC1 (- 3.)))))) (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (+ (/ 1. 6.) (* skoMC1 (- 1.)))))) (* skoSC1 (* skoMC1 (* skoMC1 (* skoMC1 (/ 1. 4.))))))))))) (* skoMC1 (* skoMC1 (* skoMC1 (+ (- 2.) (* skoMC1 (- 5.))))))) (and (> (* skoSC1 (* skoMC1 (* skoMC1 skoMC1))) (* skoMC1 (* skoMC1 (* skoMC1 (- 1.))))) (and (<= (* skoMC1 (* skoMC1 (* skoMC1 (- 2.)))) 0.) (and (> (* skoMC1 (* skoMC1 (* skoMC1 2.))) 0.) (and (> (* skoSC1 (+ (* skoMC1 (+ (- 1.) (* skoMC1 3.))) (* skoSC1 (+ (* skoMC1 (+ (- 2.) (* skoMC1 (- 3.)))) (* skoSC1 (+ (* skoMC1 (+ (/ 1. 6.) (* skoMC1 (- 1.)))) (* skoSC1 (* skoMC1 (/ 1. 4.))))))))) (* skoMC1 (+ (- 2.) (* skoMC1 (- 5.))))) (and (> (* skoSC1 (+ (* skoMC1 (+ (- 1.) (* skoMC1 3.))) (* skoSC1 (+ (* skoMC1 (+ (- 2.) (* skoMC1 (- 3.)))) (* skoSC1 (+ (* skoMC1 (* skoMC1 (- 1.))) (* skoSC1 (* skoMC1 (/ 1. 12.))))))))) (* skoMC1 (+ (- 2.) (* skoMC1 (- 5.))))) (and (<= (* skoSC1 (+ (* skoMC1 (+ 1. (* skoMC1 (- 3.)))) (* skoSC1 (+ (* skoMC1 (+ 2. (* skoMC1 3.))) (* skoSC1 (+ (* skoMC1 (+ (/ (- 1.) 6.) skoMC1)) (* skoSC1 (* skoMC1 (/ (- 1.) 4.))))))))) (* skoMC1 (+ 2. (* skoMC1 5.)))) (and (<= (* skoSC1 (+ (* skoMC1 (+ 1. (* skoMC1 (- 3.)))) (* skoSC1 (+ (* skoMC1 (+ 2. (* skoMC1 3.))) (* skoSC1 (+ (* skoMC1 skoMC1) (* skoSC1 (* skoMC1 (/ (- 1.) 12.))))))))) (* skoMC1 (+ 2. (* skoMC1 5.)))) (and (<= (* skoSC1 (* skoMC1 (- 1.))) skoMC1) (and (> (* skoSC1 skoMC1) (* skoMC1 (- 1.))) (and (<= 0. skoMC1) (and (> skoMC1 0.) (and (<= 0. skoSC1) (and (<= 2. skoMC1) (and (<= skoSC1 (/ 5. 4.)) (and (> (* skoSC1 (* skoMC1 (* skoMC1 (* skoMC1 2.)))) (* skoMC1 (* skoMC1 (* skoMC1 (- 2.))))) (and (<= (* skoSC1 (* skoMC1 (* skoMC1 (* skoMC1 (- 2.))))) (* skoMC1 (* skoMC1 (* skoMC1 2.)))) (<= (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (+ (- 2.) (* skoMC1 (- 12.)))))) (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (+ 1. (* skoMC1 (- 6.)))))) (* skoSC1 (+ (* skoMC1 (* skoMC1 skoMC1)) (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (/ (- 1.) 12.)))) (* skoSC1 (* skoMC1 (* skoMC1 (* skoMC1 (/ (- 1.) 12.))))))))))))) (* skoMC1 (* skoMC1 (* skoMC1 (+ 2. (* skoMC1 6.)))))))))))))))))))))))))))))))

% In GRF format:
(sequent " MetiTarski formula " (antecedent (<= (* skoSC1 (* skoMC1 (* skoMC1 (* skoMC1 (- 2.))))) (* skoMC1 (* skoMC1 (* skoMC1 2.)))) (<= (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (* skoMC1 (- 12.))))) (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (+ 1. (* skoMC1 (- 6.)))))) (* skoSC1 (+ (* skoMC1 (* skoMC1 skoMC1)) (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (/ (- 1.) 12.)))) (* skoSC1 (* skoMC1 (* skoMC1 (* skoMC1 (/ (- 1.) 12.))))))))))))) (* skoMC1 (* skoMC1 (* skoMC1 (+ 2. (* skoMC1 6.)))))) (<= (* skoMC1 (* skoMC1 (* skoMC1 (- 1.)))) 0.) (<= (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (+ 1. (* skoMC1 (- 3.)))))) (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (+ 2. (* skoMC1 3.))))) (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 skoMC1))) (* skoSC1 (* skoMC1 (* skoMC1 (* skoMC1 (/ (- 1.) 12.))))))))))) (* skoMC1 (* skoMC1 (* skoMC1 (+ 2. (* skoMC1 5.)))))) (<= (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (+ 1. (* skoMC1 (- 3.)))))) (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (+ 2. (* skoMC1 3.))))) (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (+ (/ (- 1.) 6.) skoMC1)))) (* skoSC1 (* skoMC1 (* skoMC1 (* skoMC1 (/ (- 1.) 4.))))))))))) (* skoMC1 (* skoMC1 (* skoMC1 (+ 2. (* skoMC1 5.)))))) (<= (* skoSC1 (* skoMC1 (* skoMC1 (* skoMC1 (- 1.))))) (* skoMC1 (* skoMC1 skoMC1))) (> (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (+ (- 1.) (* skoMC1 3.))))) (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (+ (- 2.) (* skoMC1 (- 3.)))))) (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (* skoMC1 (- 1.))))) (* skoSC1 (* skoMC1 (* skoMC1 (* skoMC1 (/ 1. 12.))))))))))) (* skoMC1 (* skoMC1 (* skoMC1 (+ (- 2.) (* skoMC1 (- 5.))))))) (> (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (+ (- 1.) (* skoMC1 3.))))) (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (+ (- 2.) (* skoMC1 (- 3.)))))) (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (+ (/ 1. 6.) (* skoMC1 (- 1.)))))) (* skoSC1 (* skoMC1 (* skoMC1 (* skoMC1 (/ 1. 4.))))))))))) (* skoMC1 (* skoMC1 (* skoMC1 (+ (- 2.) (* skoMC1 (- 5.))))))) (> (* skoSC1 (* skoMC1 (* skoMC1 skoMC1))) (* skoMC1 (* skoMC1 (* skoMC1 (- 1.))))) (<= (* skoMC1 (* skoMC1 (* skoMC1 (- 2.)))) 0.) (> (* skoMC1 (* skoMC1 (* skoMC1 2.))) 0.) (> (* skoSC1 (+ (* skoMC1 (+ (- 1.) (* skoMC1 3.))) (* skoSC1 (+ (* skoMC1 (+ (- 2.) (* skoMC1 (- 3.)))) (* skoSC1 (+ (* skoMC1 (+ (/ 1. 6.) (* skoMC1 (- 1.)))) (* skoSC1 (* skoMC1 (/ 1. 4.))))))))) (* skoMC1 (+ (- 2.) (* skoMC1 (- 5.))))) (> (* skoSC1 (+ (* skoMC1 (+ (- 1.) (* skoMC1 3.))) (* skoSC1 (+ (* skoMC1 (+ (- 2.) (* skoMC1 (- 3.)))) (* skoSC1 (+ (* skoMC1 (* skoMC1 (- 1.))) (* skoSC1 (* skoMC1 (/ 1. 12.))))))))) (* skoMC1 (+ (- 2.) (* skoMC1 (- 5.))))) (<= (* skoSC1 (+ (* skoMC1 (+ 1. (* skoMC1 (- 3.)))) (* skoSC1 (+ (* skoMC1 (+ 2. (* skoMC1 3.))) (* skoSC1 (+ (* skoMC1 (+ (/ (- 1.) 6.) skoMC1)) (* skoSC1 (* skoMC1 (/ (- 1.) 4.))))))))) (* skoMC1 (+ 2. (* skoMC1 5.)))) (<= (* skoSC1 (+ (* skoMC1 (+ 1. (* skoMC1 (- 3.)))) (* skoSC1 (+ (* skoMC1 (+ 2. (* skoMC1 3.))) (* skoSC1 (+ (* skoMC1 skoMC1) (* skoSC1 (* skoMC1 (/ (- 1.) 12.))))))))) (* skoMC1 (+ 2. (* skoMC1 5.)))) (<= (* skoSC1 (* skoMC1 (- 1.))) skoMC1) (> (* skoSC1 skoMC1) (* skoMC1 (- 1.))) (<= 0. skoMC1) (> skoMC1 0.) (<= 0. skoSC1) (<= 2. skoMC1) (<= skoSC1 (/ 5. 4.)) (> (* skoSC1 (* skoMC1 (* skoMC1 (* skoMC1 2.)))) (* skoMC1 (* skoMC1 (* skoMC1 (- 2.))))) (<= (* skoSC1 (* skoMC1 (* skoMC1 (* skoMC1 (- 2.))))) (* skoMC1 (* skoMC1 (* skoMC1 2.))))) (succedent (> (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (+ (- 2.) (* skoMC1 (- 12.)))))) (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (+ 1. (* skoMC1 (- 6.)))))) (* skoSC1 (+ (* skoMC1 (* skoMC1 skoMC1)) (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (/ (- 1.) 12.)))) (* skoSC1 (* skoMC1 (* skoMC1 (* skoMC1 (/ (- 1.) 12.))))))))))))) (* skoMC1 (* skoMC1 (* skoMC1 (+ 2. (* skoMC1 6.))))))))
-----[end problem]-----

-----[begin problem]-----
% In Mathematica format:
Timing[Resolve[Exists[{skoSC1,skoMC1}, And[skoSC1*(skoMC1*skoMC1*skoMC1*skoMC1*-12+skoSC1*(skoMC1*skoMC1*skoMC1*(1+skoMC1*-6)+skoSC1*(skoMC1*skoMC1*skoMC1+skoSC1*(skoMC1*skoMC1*skoMC1*(-1/12)+skoSC1*(skoMC1*skoMC1*skoMC1*(-1/12)+skoSC1*(skoMC1*skoMC1*skoMC1*(1/360)+skoSC1*(skoMC1*skoMC1*skoMC1*(1/360)+skoSC1*(skoMC1*skoMC1*skoMC1*(-1/20160)+skoSC1*(skoMC1*skoMC1*skoMC1*(-1/20160)+skoSC1*(skoMC1*skoMC1*skoMC1*(1/1814400)+skoSC1*(skoMC1*skoMC1*skoMC1*(1/1814400)+skoSC1*(skoMC1*skoMC1*skoMC1*(-1/239500800)+skoSC1*skoMC1*skoMC1*skoMC1*(-1/239500800)))))))))))))<=skoMC1*skoMC1*skoMC1*(2+skoMC1*6),skoSC1*(skoMC1*skoMC1*skoMC1*skoMC1*-12+skoSC1*(skoMC1*skoMC1*skoMC1*(1+skoMC1*-6)+skoSC1*(skoMC1*skoMC1*skoMC1+skoSC1*(skoMC1*skoMC1*skoMC1*(-1/12)+skoSC1*skoMC1*skoMC1*skoMC1*(-1/12)))))<=skoMC1*skoMC1*skoMC1*(2+skoMC1*6),skoMC1*skoMC1*skoMC1*-1<=0,skoSC1*(skoMC1*skoMC1*skoMC1*(1+skoMC1*-3)+skoSC1*(skoMC1*skoMC1*skoMC1*(2+skoMC1*3)+skoSC1*(skoMC1*skoMC1*skoMC1*skoMC1+skoSC1*skoMC1*skoMC1*skoMC1*(-1/12))))<=skoMC1*skoMC1*skoMC1*(2+skoMC1*5),skoSC1*(skoMC1*skoMC1*skoMC1*(1+skoMC1*-3)+skoSC1*(skoMC1*skoMC1*skoMC1*(2+skoMC1*3)+skoSC1*(skoMC1*skoMC1*skoMC1*((-1/6)+skoMC1)+skoSC1*skoMC1*skoMC1*skoMC1*(-1/4))))<=skoMC1*skoMC1*skoMC1*(2+skoMC1*5),skoSC1*skoMC1*skoMC1*skoMC1*-1<=skoMC1*skoMC1*skoMC1,skoSC1*(skoMC1*skoMC1*skoMC1*(-1+skoMC1*3)+skoSC1*(skoMC1*skoMC1*skoMC1*(-2+skoMC1*-3)+skoSC1*(skoMC1*skoMC1*skoMC1*skoMC1*-1+skoSC1*skoMC1*skoMC1*skoMC1*(1/12))))>skoMC1*skoMC1*skoMC1*(-2+skoMC1*-5),skoSC1*(skoMC1*skoMC1*skoMC1*(-1+skoMC1*3)+skoSC1*(skoMC1*skoMC1*skoMC1*(-2+skoMC1*-3)+skoSC1*(skoMC1*skoMC1*skoMC1*((1/6)+skoMC1*-1)+skoSC1*skoMC1*skoMC1*skoMC1*(1/4))))>skoMC1*skoMC1*skoMC1*(-2+skoMC1*-5),skoSC1*skoMC1*skoMC1*skoMC1>skoMC1*skoMC1*skoMC1*-1,skoMC1*skoMC1*skoMC1*-2<=0,skoMC1*skoMC1*skoMC1*2>0,skoSC1*(skoMC1*(-1+skoMC1*3)+skoSC1*(skoMC1*(-2+skoMC1*-3)+skoSC1*(skoMC1*((1/6)+skoMC1*-1)+skoSC1*skoMC1*(1/4))))>skoMC1*(-2+skoMC1*-5),skoSC1*(skoMC1*(-1+skoMC1*3)+skoSC1*(skoMC1*(-2+skoMC1*-3)+skoSC1*(skoMC1*skoMC1*-1+skoSC1*skoMC1*(1/12))))>skoMC1*(-2+skoMC1*-5),skoSC1*(skoMC1*(1+skoMC1*-3)+skoSC1*(skoMC1*(2+skoMC1*3)+skoSC1*(skoMC1*((-1/6)+skoMC1)+skoSC1*skoMC1*(-1/4))))<=skoMC1*(2+skoMC1*5),skoSC1*(skoMC1*(1+skoMC1*-3)+skoSC1*(skoMC1*(2+skoMC1*3)+skoSC1*(skoMC1*skoMC1+skoSC1*skoMC1*(-1/12))))<=skoMC1*(2+skoMC1*5),skoSC1*skoMC1*-1<=skoMC1,skoSC1*skoMC1>skoMC1*-1,0<=skoMC1,skoMC1>0,0<=skoSC1,2<=skoMC1,skoSC1<=(5/4),skoSC1*skoMC1*skoMC1*skoMC1*2>skoMC1*skoMC1*skoMC1*-2,skoSC1*skoMC1*skoMC1*skoMC1*-2<=skoMC1*skoMC1*skoMC1*2,skoSC1*(skoMC1*skoMC1*skoMC1*(-2+skoMC1*-12)+skoSC1*(skoMC1*skoMC1*skoMC1*(1+skoMC1*-6)+skoSC1*(skoMC1*skoMC1*skoMC1+skoSC1*(skoMC1*skoMC1*skoMC1*(-1/12)+skoSC1*skoMC1*skoMC1*skoMC1*(-1/12)))))<=skoMC1*skoMC1*skoMC1*(2+skoMC1*6)]], Reals]]

% In QepcadB format:
(E skoSC1) (E skoMC1) [[(skoSC1 ((skoMC1 skoMC1 skoMC1 skoMC1 (-12))+(skoSC1 ((skoMC1 skoMC1 skoMC1 (1+(skoMC1 (-6))))+(skoSC1 ((skoMC1 skoMC1 skoMC1)+(skoSC1 ((skoMC1 skoMC1 skoMC1 (-1/12))+(skoSC1 ((skoMC1 skoMC1 skoMC1 (-1/12))+(skoSC1 ((skoMC1 skoMC1 skoMC1 (1/360))+(skoSC1 ((skoMC1 skoMC1 skoMC1 (1/360))+(skoSC1 ((skoMC1 skoMC1 skoMC1 (-1/20160))+(skoSC1 ((skoMC1 skoMC1 skoMC1 (-1/20160))+(skoSC1 ((skoMC1 skoMC1 skoMC1 (1/1814400))+(skoSC1 ((skoMC1 skoMC1 skoMC1 (1/1814400))+(skoSC1 ((skoMC1 skoMC1 skoMC1 (-1/239500800))+(skoSC1 skoMC1 skoMC1 skoMC1 (-1/239500800))))))))))))))))))))))))))<=(skoMC1 skoMC1 skoMC1 (2+(skoMC1 (6))))]/\[[(skoSC1 ((skoMC1 skoMC1 skoMC1 skoMC1 (-12))+(skoSC1 ((skoMC1 skoMC1 skoMC1 (1+(skoMC1 (-6))))+(skoSC1 ((skoMC1 skoMC1 skoMC1)+(skoSC1 ((skoMC1 skoMC1 skoMC1 (-1/12))+(skoSC1 skoMC1 skoMC1 skoMC1 (-1/12))))))))))<=(skoMC1 skoMC1 skoMC1 (2+(skoMC1 (6))))]/\[[(skoMC1 skoMC1 skoMC1 (-1))<=0]/\[[(skoSC1 ((skoMC1 skoMC1 skoMC1 (1+(skoMC1 (-3))))+(skoSC1 ((skoMC1 skoMC1 skoMC1 (2+(skoMC1 (3))))+(skoSC1 ((skoMC1 skoMC1 skoMC1 skoMC1)+(skoSC1 skoMC1 skoMC1 skoMC1 (-1/12))))))))<=(skoMC1 skoMC1 skoMC1 (2+(skoMC1 (5))))]/\[[(skoSC1 ((skoMC1 skoMC1 skoMC1 (1+(skoMC1 (-3))))+(skoSC1 ((skoMC1 skoMC1 skoMC1 (2+(skoMC1 (3))))+(skoSC1 ((skoMC1 skoMC1 skoMC1 (-1/6+skoMC1))+(skoSC1 skoMC1 skoMC1 skoMC1 (-1/4))))))))<=(skoMC1 skoMC1 skoMC1 (2+(skoMC1 (5))))]/\[[(skoSC1 skoMC1 skoMC1 skoMC1 (-1))<=(skoMC1 skoMC1 skoMC1)]/\[[(skoMC1 skoMC1 skoMC1 (-2+(skoMC1 (-5))))<(skoSC1 ((skoMC1 skoMC1 skoMC1 (-1+(skoMC1 (3))))+(skoSC1 ((skoMC1 skoMC1 skoMC1 (-2+(skoMC1 (-3))))+(skoSC1 ((skoMC1 skoMC1 skoMC1 skoMC1 (-1))+(skoSC1 skoMC1 skoMC1 skoMC1 (1/12))))))))]/\[[(skoMC1 skoMC1 skoMC1 (-2+(skoMC1 (-5))))<(skoSC1 ((skoMC1 skoMC1 skoMC1 (-1+(skoMC1 (3))))+(skoSC1 ((skoMC1 skoMC1 skoMC1 (-2+(skoMC1 (-3))))+(skoSC1 ((skoMC1 skoMC1 skoMC1 (1/6+(skoMC1 (-1))))+(skoSC1 skoMC1 skoMC1 skoMC1 (1/4))))))))]/\[[(skoMC1 skoMC1 skoMC1 (-1))<(skoSC1 skoMC1 skoMC1 skoMC1)]/\[[(skoMC1 skoMC1 skoMC1 (-2))<=0]/\[[0<(skoMC1 skoMC1 skoMC1 (2))]/\[[(skoMC1 (-2+(skoMC1 (-5))))<(skoSC1 ((skoMC1 (-1+(skoMC1 (3))))+(skoSC1 ((skoMC1 (-2+(skoMC1 (-3))))+(skoSC1 ((skoMC1 (1/6+(skoMC1 (-1))))+(skoSC1 skoMC1 (1/4))))))))]/\[[(skoMC1 (-2+(skoMC1 (-5))))<(skoSC1 ((skoMC1 (-1+(skoMC1 (3))))+(skoSC1 ((skoMC1 (-2+(skoMC1 (-3))))+(skoSC1 ((skoMC1 skoMC1 (-1))+(skoSC1 skoMC1 (1/12))))))))]/\[[(skoSC1 ((skoMC1 (1+(skoMC1 (-3))))+(skoSC1 ((skoMC1 (2+(skoMC1 (3))))+(skoSC1 ((skoMC1 (-1/6+skoMC1))+(skoSC1 skoMC1 (-1/4))))))))<=(skoMC1 (2+(skoMC1 (5))))]/\[[(skoSC1 ((skoMC1 (1+(skoMC1 (-3))))+(skoSC1 ((skoMC1 (2+(skoMC1 (3))))+(skoSC1 ((skoMC1 skoMC1)+(skoSC1 skoMC1 (-1/12))))))))<=(skoMC1 (2+(skoMC1 (5))))]/\[[(skoSC1 skoMC1 (-1))<=skoMC1]/\[[(skoMC1 (-1))<(skoSC1 skoMC1)]/\[[0<=skoMC1]/\[[0<skoMC1]/\[[0<=skoSC1]/\[[2<=skoMC1]/\[[skoSC1<=5/4]/\[[(skoMC1 skoMC1 skoMC1 (-2))<(skoSC1 skoMC1 skoMC1 skoMC1 (2))]/\[[(skoSC1 skoMC1 skoMC1 skoMC1 (-2))<=(skoMC1 skoMC1 skoMC1 (2))]/\[(skoSC1 ((skoMC1 skoMC1 skoMC1 (-2+(skoMC1 (-12))))+(skoSC1 ((skoMC1 skoMC1 skoMC1 (1+(skoMC1 (-6))))+(skoSC1 ((skoMC1 skoMC1 skoMC1)+(skoSC1 ((skoMC1 skoMC1 skoMC1 (-1/12))+(skoSC1 skoMC1 skoMC1 skoMC1 (-1/12))))))))))<=(skoMC1 skoMC1 skoMC1 (2+(skoMC1 (6))))]]]]]]]]]]]]]]]]]]]]]]]]].

% In SMTLib2 format:
(declare-fun skoSC1 () Real) (declare-fun skoMC1 () Real) (assert (and (<= (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (* skoMC1 (- 12.))))) (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (+ 1. (* skoMC1 (- 6.)))))) (* skoSC1 (+ (* skoMC1 (* skoMC1 skoMC1)) (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (/ (- 1.) 12.)))) (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (/ (- 1.) 12.)))) (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (/ 1. 360.)))) (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (/ 1. 360.)))) (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (/ (- 1.) 20160.)))) (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (/ (- 1.) 20160.)))) (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (/ 1. 1814400.)))) (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (/ 1. 1814400.)))) (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (/ (- 1.) 239500800.)))) (* skoSC1 (* skoMC1 (* skoMC1 (* skoMC1 (/ (- 1.) 239500800.))))))))))))))))))))))))))))) (* skoMC1 (* skoMC1 (* skoMC1 (+ 2. (* skoMC1 6.)))))) (and (<= (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (* skoMC1 (- 12.))))) (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (+ 1. (* skoMC1 (- 6.)))))) (* skoSC1 (+ (* skoMC1 (* skoMC1 skoMC1)) (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (/ (- 1.) 12.)))) (* skoSC1 (* skoMC1 (* skoMC1 (* skoMC1 (/ (- 1.) 12.))))))))))))) (* skoMC1 (* skoMC1 (* skoMC1 (+ 2. (* skoMC1 6.)))))) (and (<= (* skoMC1 (* skoMC1 (* skoMC1 (- 1.)))) 0.) (and (<= (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (+ 1. (* skoMC1 (- 3.)))))) (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (+ 2. (* skoMC1 3.))))) (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 skoMC1))) (* skoSC1 (* skoMC1 (* skoMC1 (* skoMC1 (/ (- 1.) 12.))))))))))) (* skoMC1 (* skoMC1 (* skoMC1 (+ 2. (* skoMC1 5.)))))) (and (<= (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (+ 1. (* skoMC1 (- 3.)))))) (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (+ 2. (* skoMC1 3.))))) (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (+ (/ (- 1.) 6.) skoMC1)))) (* skoSC1 (* skoMC1 (* skoMC1 (* skoMC1 (/ (- 1.) 4.))))))))))) (* skoMC1 (* skoMC1 (* skoMC1 (+ 2. (* skoMC1 5.)))))) (and (<= (* skoSC1 (* skoMC1 (* skoMC1 (* skoMC1 (- 1.))))) (* skoMC1 (* skoMC1 skoMC1))) (and (> (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (+ (- 1.) (* skoMC1 3.))))) (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (+ (- 2.) (* skoMC1 (- 3.)))))) (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (* skoMC1 (- 1.))))) (* skoSC1 (* skoMC1 (* skoMC1 (* skoMC1 (/ 1. 12.))))))))))) (* skoMC1 (* skoMC1 (* skoMC1 (+ (- 2.) (* skoMC1 (- 5.))))))) (and (> (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (+ (- 1.) (* skoMC1 3.))))) (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (+ (- 2.) (* skoMC1 (- 3.)))))) (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (+ (/ 1. 6.) (* skoMC1 (- 1.)))))) (* skoSC1 (* skoMC1 (* skoMC1 (* skoMC1 (/ 1. 4.))))))))))) (* skoMC1 (* skoMC1 (* skoMC1 (+ (- 2.) (* skoMC1 (- 5.))))))) (and (> (* skoSC1 (* skoMC1 (* skoMC1 skoMC1))) (* skoMC1 (* skoMC1 (* skoMC1 (- 1.))))) (and (<= (* skoMC1 (* skoMC1 (* skoMC1 (- 2.)))) 0.) (and (> (* skoMC1 (* skoMC1 (* skoMC1 2.))) 0.) (and (> (* skoSC1 (+ (* skoMC1 (+ (- 1.) (* skoMC1 3.))) (* skoSC1 (+ (* skoMC1 (+ (- 2.) (* skoMC1 (- 3.)))) (* skoSC1 (+ (* skoMC1 (+ (/ 1. 6.) (* skoMC1 (- 1.)))) (* skoSC1 (* skoMC1 (/ 1. 4.))))))))) (* skoMC1 (+ (- 2.) (* skoMC1 (- 5.))))) (and (> (* skoSC1 (+ (* skoMC1 (+ (- 1.) (* skoMC1 3.))) (* skoSC1 (+ (* skoMC1 (+ (- 2.) (* skoMC1 (- 3.)))) (* skoSC1 (+ (* skoMC1 (* skoMC1 (- 1.))) (* skoSC1 (* skoMC1 (/ 1. 12.))))))))) (* skoMC1 (+ (- 2.) (* skoMC1 (- 5.))))) (and (<= (* skoSC1 (+ (* skoMC1 (+ 1. (* skoMC1 (- 3.)))) (* skoSC1 (+ (* skoMC1 (+ 2. (* skoMC1 3.))) (* skoSC1 (+ (* skoMC1 (+ (/ (- 1.) 6.) skoMC1)) (* skoSC1 (* skoMC1 (/ (- 1.) 4.))))))))) (* skoMC1 (+ 2. (* skoMC1 5.)))) (and (<= (* skoSC1 (+ (* skoMC1 (+ 1. (* skoMC1 (- 3.)))) (* skoSC1 (+ (* skoMC1 (+ 2. (* skoMC1 3.))) (* skoSC1 (+ (* skoMC1 skoMC1) (* skoSC1 (* skoMC1 (/ (- 1.) 12.))))))))) (* skoMC1 (+ 2. (* skoMC1 5.)))) (and (<= (* skoSC1 (* skoMC1 (- 1.))) skoMC1) (and (> (* skoSC1 skoMC1) (* skoMC1 (- 1.))) (and (<= 0. skoMC1) (and (> skoMC1 0.) (and (<= 0. skoSC1) (and (<= 2. skoMC1) (and (<= skoSC1 (/ 5. 4.)) (and (> (* skoSC1 (* skoMC1 (* skoMC1 (* skoMC1 2.)))) (* skoMC1 (* skoMC1 (* skoMC1 (- 2.))))) (and (<= (* skoSC1 (* skoMC1 (* skoMC1 (* skoMC1 (- 2.))))) (* skoMC1 (* skoMC1 (* skoMC1 2.)))) (<= (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (+ (- 2.) (* skoMC1 (- 12.)))))) (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (+ 1. (* skoMC1 (- 6.)))))) (* skoSC1 (+ (* skoMC1 (* skoMC1 skoMC1)) (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (/ (- 1.) 12.)))) (* skoSC1 (* skoMC1 (* skoMC1 (* skoMC1 (/ (- 1.) 12.))))))))))))) (* skoMC1 (* skoMC1 (* skoMC1 (+ 2. (* skoMC1 6.)))))))))))))))))))))))))))))))

% In GRF format:
(sequent " MetiTarski formula " (antecedent (<= (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (* skoMC1 (- 12.))))) (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (+ 1. (* skoMC1 (- 6.)))))) (* skoSC1 (+ (* skoMC1 (* skoMC1 skoMC1)) (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (/ (- 1.) 12.)))) (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (/ (- 1.) 12.)))) (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (/ 1. 360.)))) (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (/ 1. 360.)))) (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (/ (- 1.) 20160.)))) (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (/ (- 1.) 20160.)))) (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (/ 1. 1814400.)))) (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (/ 1. 1814400.)))) (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (/ (- 1.) 239500800.)))) (* skoSC1 (* skoMC1 (* skoMC1 (* skoMC1 (/ (- 1.) 239500800.))))))))))))))))))))))))))))) (* skoMC1 (* skoMC1 (* skoMC1 (+ 2. (* skoMC1 6.)))))) (<= (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (* skoMC1 (- 12.))))) (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (+ 1. (* skoMC1 (- 6.)))))) (* skoSC1 (+ (* skoMC1 (* skoMC1 skoMC1)) (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (/ (- 1.) 12.)))) (* skoSC1 (* skoMC1 (* skoMC1 (* skoMC1 (/ (- 1.) 12.))))))))))))) (* skoMC1 (* skoMC1 (* skoMC1 (+ 2. (* skoMC1 6.)))))) (<= (* skoMC1 (* skoMC1 (* skoMC1 (- 1.)))) 0.) (<= (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (+ 1. (* skoMC1 (- 3.)))))) (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (+ 2. (* skoMC1 3.))))) (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 skoMC1))) (* skoSC1 (* skoMC1 (* skoMC1 (* skoMC1 (/ (- 1.) 12.))))))))))) (* skoMC1 (* skoMC1 (* skoMC1 (+ 2. (* skoMC1 5.)))))) (<= (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (+ 1. (* skoMC1 (- 3.)))))) (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (+ 2. (* skoMC1 3.))))) (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (+ (/ (- 1.) 6.) skoMC1)))) (* skoSC1 (* skoMC1 (* skoMC1 (* skoMC1 (/ (- 1.) 4.))))))))))) (* skoMC1 (* skoMC1 (* skoMC1 (+ 2. (* skoMC1 5.)))))) (<= (* skoSC1 (* skoMC1 (* skoMC1 (* skoMC1 (- 1.))))) (* skoMC1 (* skoMC1 skoMC1))) (> (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (+ (- 1.) (* skoMC1 3.))))) (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (+ (- 2.) (* skoMC1 (- 3.)))))) (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (* skoMC1 (- 1.))))) (* skoSC1 (* skoMC1 (* skoMC1 (* skoMC1 (/ 1. 12.))))))))))) (* skoMC1 (* skoMC1 (* skoMC1 (+ (- 2.) (* skoMC1 (- 5.))))))) (> (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (+ (- 1.) (* skoMC1 3.))))) (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (+ (- 2.) (* skoMC1 (- 3.)))))) (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (+ (/ 1. 6.) (* skoMC1 (- 1.)))))) (* skoSC1 (* skoMC1 (* skoMC1 (* skoMC1 (/ 1. 4.))))))))))) (* skoMC1 (* skoMC1 (* skoMC1 (+ (- 2.) (* skoMC1 (- 5.))))))) (> (* skoSC1 (* skoMC1 (* skoMC1 skoMC1))) (* skoMC1 (* skoMC1 (* skoMC1 (- 1.))))) (<= (* skoMC1 (* skoMC1 (* skoMC1 (- 2.)))) 0.) (> (* skoMC1 (* skoMC1 (* skoMC1 2.))) 0.) (> (* skoSC1 (+ (* skoMC1 (+ (- 1.) (* skoMC1 3.))) (* skoSC1 (+ (* skoMC1 (+ (- 2.) (* skoMC1 (- 3.)))) (* skoSC1 (+ (* skoMC1 (+ (/ 1. 6.) (* skoMC1 (- 1.)))) (* skoSC1 (* skoMC1 (/ 1. 4.))))))))) (* skoMC1 (+ (- 2.) (* skoMC1 (- 5.))))) (> (* skoSC1 (+ (* skoMC1 (+ (- 1.) (* skoMC1 3.))) (* skoSC1 (+ (* skoMC1 (+ (- 2.) (* skoMC1 (- 3.)))) (* skoSC1 (+ (* skoMC1 (* skoMC1 (- 1.))) (* skoSC1 (* skoMC1 (/ 1. 12.))))))))) (* skoMC1 (+ (- 2.) (* skoMC1 (- 5.))))) (<= (* skoSC1 (+ (* skoMC1 (+ 1. (* skoMC1 (- 3.)))) (* skoSC1 (+ (* skoMC1 (+ 2. (* skoMC1 3.))) (* skoSC1 (+ (* skoMC1 (+ (/ (- 1.) 6.) skoMC1)) (* skoSC1 (* skoMC1 (/ (- 1.) 4.))))))))) (* skoMC1 (+ 2. (* skoMC1 5.)))) (<= (* skoSC1 (+ (* skoMC1 (+ 1. (* skoMC1 (- 3.)))) (* skoSC1 (+ (* skoMC1 (+ 2. (* skoMC1 3.))) (* skoSC1 (+ (* skoMC1 skoMC1) (* skoSC1 (* skoMC1 (/ (- 1.) 12.))))))))) (* skoMC1 (+ 2. (* skoMC1 5.)))) (<= (* skoSC1 (* skoMC1 (- 1.))) skoMC1) (> (* skoSC1 skoMC1) (* skoMC1 (- 1.))) (<= 0. skoMC1) (> skoMC1 0.) (<= 0. skoSC1) (<= 2. skoMC1) (<= skoSC1 (/ 5. 4.)) (> (* skoSC1 (* skoMC1 (* skoMC1 (* skoMC1 2.)))) (* skoMC1 (* skoMC1 (* skoMC1 (- 2.))))) (<= (* skoSC1 (* skoMC1 (* skoMC1 (* skoMC1 (- 2.))))) (* skoMC1 (* skoMC1 (* skoMC1 2.))))) (succedent (> (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (+ (- 2.) (* skoMC1 (- 12.)))))) (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (+ 1. (* skoMC1 (- 6.)))))) (* skoSC1 (+ (* skoMC1 (* skoMC1 skoMC1)) (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (/ (- 1.) 12.)))) (* skoSC1 (* skoMC1 (* skoMC1 (* skoMC1 (/ (- 1.) 12.))))))))))))) (* skoMC1 (* skoMC1 (* skoMC1 (+ 2. (* skoMC1 6.))))))))
-----[end problem]-----

-----[begin problem]-----
% In Mathematica format:
Timing[Resolve[Exists[{skoSC1,skoMC1}, And[skoSC1*(skoMC1*skoMC1*skoMC1*(-2+skoMC1*-12)+skoSC1*(skoMC1*skoMC1*skoMC1*(1+skoMC1*-6)+skoSC1*(skoMC1*skoMC1*skoMC1+skoSC1*(skoMC1*skoMC1*skoMC1*(-1/12)+skoSC1*(skoMC1*skoMC1*skoMC1*(-1/12)+skoSC1*(skoMC1*skoMC1*skoMC1*(1/360)+skoSC1*(skoMC1*skoMC1*skoMC1*(1/360)+skoSC1*(skoMC1*skoMC1*skoMC1*(-1/20160)+skoSC1*(skoMC1*skoMC1*skoMC1*(-1/20160)+skoSC1*(skoMC1*skoMC1*skoMC1*(1/1814400)+skoSC1*(skoMC1*skoMC1*skoMC1*(1/1814400)+skoSC1*(skoMC1*skoMC1*skoMC1*(-1/239500800)+skoSC1*skoMC1*skoMC1*skoMC1*(-1/239500800)))))))))))))<=skoMC1*skoMC1*skoMC1*(2+skoMC1*6),skoSC1*(skoMC1*skoMC1*skoMC1*skoMC1*-12+skoSC1*(skoMC1*skoMC1*skoMC1*(1+skoMC1*-6)+skoSC1*(skoMC1*skoMC1*skoMC1+skoSC1*(skoMC1*skoMC1*skoMC1*(-1/12)+skoSC1*skoMC1*skoMC1*skoMC1*(-1/12)))))<=skoMC1*skoMC1*skoMC1*(2+skoMC1*6),skoMC1*skoMC1*skoMC1*-1<=0,skoSC1*(skoMC1*skoMC1*skoMC1*(1+skoMC1*-3)+skoSC1*(skoMC1*skoMC1*skoMC1*(2+skoMC1*3)+skoSC1*(skoMC1*skoMC1*skoMC1*skoMC1+skoSC1*skoMC1*skoMC1*skoMC1*(-1/12))))<=skoMC1*skoMC1*skoMC1*(2+skoMC1*5),skoSC1*(skoMC1*skoMC1*skoMC1*(1+skoMC1*-3)+skoSC1*(skoMC1*skoMC1*skoMC1*(2+skoMC1*3)+skoSC1*(skoMC1*skoMC1*skoMC1*((-1/6)+skoMC1)+skoSC1*skoMC1*skoMC1*skoMC1*(-1/4))))<=skoMC1*skoMC1*skoMC1*(2+skoMC1*5),skoSC1*skoMC1*skoMC1*skoMC1*-1<=skoMC1*skoMC1*skoMC1,skoSC1*(skoMC1*skoMC1*skoMC1*(-1+skoMC1*3)+skoSC1*(skoMC1*skoMC1*skoMC1*(-2+skoMC1*-3)+skoSC1*(skoMC1*skoMC1*skoMC1*skoMC1*-1+skoSC1*skoMC1*skoMC1*skoMC1*(1/12))))>skoMC1*skoMC1*skoMC1*(-2+skoMC1*-5),skoSC1*(skoMC1*skoMC1*skoMC1*(-1+skoMC1*3)+skoSC1*(skoMC1*skoMC1*skoMC1*(-2+skoMC1*-3)+skoSC1*(skoMC1*skoMC1*skoMC1*((1/6)+skoMC1*-1)+skoSC1*skoMC1*skoMC1*skoMC1*(1/4))))>skoMC1*skoMC1*skoMC1*(-2+skoMC1*-5),skoSC1*skoMC1*skoMC1*skoMC1>skoMC1*skoMC1*skoMC1*-1,skoMC1*skoMC1*skoMC1*-2<=0,skoMC1*skoMC1*skoMC1*2>0,skoSC1*(skoMC1*(-1+skoMC1*3)+skoSC1*(skoMC1*(-2+skoMC1*-3)+skoSC1*(skoMC1*((1/6)+skoMC1*-1)+skoSC1*skoMC1*(1/4))))>skoMC1*(-2+skoMC1*-5),skoSC1*(skoMC1*(-1+skoMC1*3)+skoSC1*(skoMC1*(-2+skoMC1*-3)+skoSC1*(skoMC1*skoMC1*-1+skoSC1*skoMC1*(1/12))))>skoMC1*(-2+skoMC1*-5),skoSC1*(skoMC1*(1+skoMC1*-3)+skoSC1*(skoMC1*(2+skoMC1*3)+skoSC1*(skoMC1*((-1/6)+skoMC1)+skoSC1*skoMC1*(-1/4))))<=skoMC1*(2+skoMC1*5),skoSC1*(skoMC1*(1+skoMC1*-3)+skoSC1*(skoMC1*(2+skoMC1*3)+skoSC1*(skoMC1*skoMC1+skoSC1*skoMC1*(-1/12))))<=skoMC1*(2+skoMC1*5),skoSC1*skoMC1*-1<=skoMC1,skoSC1*skoMC1>skoMC1*-1,0<=skoMC1,skoMC1>0,0<=skoSC1,2<=skoMC1,skoSC1<=(5/4),skoSC1*skoMC1*skoMC1*skoMC1*2>skoMC1*skoMC1*skoMC1*-2,skoSC1*skoMC1*skoMC1*skoMC1*-2<=skoMC1*skoMC1*skoMC1*2,skoSC1*(skoMC1*skoMC1*skoMC1*(-2+skoMC1*-12)+skoSC1*(skoMC1*skoMC1*skoMC1*(1+skoMC1*-6)+skoSC1*(skoMC1*skoMC1*skoMC1+skoSC1*(skoMC1*skoMC1*skoMC1*(-1/12)+skoSC1*skoMC1*skoMC1*skoMC1*(-1/12)))))<=skoMC1*skoMC1*skoMC1*(2+skoMC1*6)]], Reals]]

% In QepcadB format:
(E skoSC1) (E skoMC1) [[(skoSC1 ((skoMC1 skoMC1 skoMC1 (-2+(skoMC1 (-12))))+(skoSC1 ((skoMC1 skoMC1 skoMC1 (1+(skoMC1 (-6))))+(skoSC1 ((skoMC1 skoMC1 skoMC1)+(skoSC1 ((skoMC1 skoMC1 skoMC1 (-1/12))+(skoSC1 ((skoMC1 skoMC1 skoMC1 (-1/12))+(skoSC1 ((skoMC1 skoMC1 skoMC1 (1/360))+(skoSC1 ((skoMC1 skoMC1 skoMC1 (1/360))+(skoSC1 ((skoMC1 skoMC1 skoMC1 (-1/20160))+(skoSC1 ((skoMC1 skoMC1 skoMC1 (-1/20160))+(skoSC1 ((skoMC1 skoMC1 skoMC1 (1/1814400))+(skoSC1 ((skoMC1 skoMC1 skoMC1 (1/1814400))+(skoSC1 ((skoMC1 skoMC1 skoMC1 (-1/239500800))+(skoSC1 skoMC1 skoMC1 skoMC1 (-1/239500800))))))))))))))))))))))))))<=(skoMC1 skoMC1 skoMC1 (2+(skoMC1 (6))))]/\[[(skoSC1 ((skoMC1 skoMC1 skoMC1 skoMC1 (-12))+(skoSC1 ((skoMC1 skoMC1 skoMC1 (1+(skoMC1 (-6))))+(skoSC1 ((skoMC1 skoMC1 skoMC1)+(skoSC1 ((skoMC1 skoMC1 skoMC1 (-1/12))+(skoSC1 skoMC1 skoMC1 skoMC1 (-1/12))))))))))<=(skoMC1 skoMC1 skoMC1 (2+(skoMC1 (6))))]/\[[(skoMC1 skoMC1 skoMC1 (-1))<=0]/\[[(skoSC1 ((skoMC1 skoMC1 skoMC1 (1+(skoMC1 (-3))))+(skoSC1 ((skoMC1 skoMC1 skoMC1 (2+(skoMC1 (3))))+(skoSC1 ((skoMC1 skoMC1 skoMC1 skoMC1)+(skoSC1 skoMC1 skoMC1 skoMC1 (-1/12))))))))<=(skoMC1 skoMC1 skoMC1 (2+(skoMC1 (5))))]/\[[(skoSC1 ((skoMC1 skoMC1 skoMC1 (1+(skoMC1 (-3))))+(skoSC1 ((skoMC1 skoMC1 skoMC1 (2+(skoMC1 (3))))+(skoSC1 ((skoMC1 skoMC1 skoMC1 (-1/6+skoMC1))+(skoSC1 skoMC1 skoMC1 skoMC1 (-1/4))))))))<=(skoMC1 skoMC1 skoMC1 (2+(skoMC1 (5))))]/\[[(skoSC1 skoMC1 skoMC1 skoMC1 (-1))<=(skoMC1 skoMC1 skoMC1)]/\[[(skoMC1 skoMC1 skoMC1 (-2+(skoMC1 (-5))))<(skoSC1 ((skoMC1 skoMC1 skoMC1 (-1+(skoMC1 (3))))+(skoSC1 ((skoMC1 skoMC1 skoMC1 (-2+(skoMC1 (-3))))+(skoSC1 ((skoMC1 skoMC1 skoMC1 skoMC1 (-1))+(skoSC1 skoMC1 skoMC1 skoMC1 (1/12))))))))]/\[[(skoMC1 skoMC1 skoMC1 (-2+(skoMC1 (-5))))<(skoSC1 ((skoMC1 skoMC1 skoMC1 (-1+(skoMC1 (3))))+(skoSC1 ((skoMC1 skoMC1 skoMC1 (-2+(skoMC1 (-3))))+(skoSC1 ((skoMC1 skoMC1 skoMC1 (1/6+(skoMC1 (-1))))+(skoSC1 skoMC1 skoMC1 skoMC1 (1/4))))))))]/\[[(skoMC1 skoMC1 skoMC1 (-1))<(skoSC1 skoMC1 skoMC1 skoMC1)]/\[[(skoMC1 skoMC1 skoMC1 (-2))<=0]/\[[0<(skoMC1 skoMC1 skoMC1 (2))]/\[[(skoMC1 (-2+(skoMC1 (-5))))<(skoSC1 ((skoMC1 (-1+(skoMC1 (3))))+(skoSC1 ((skoMC1 (-2+(skoMC1 (-3))))+(skoSC1 ((skoMC1 (1/6+(skoMC1 (-1))))+(skoSC1 skoMC1 (1/4))))))))]/\[[(skoMC1 (-2+(skoMC1 (-5))))<(skoSC1 ((skoMC1 (-1+(skoMC1 (3))))+(skoSC1 ((skoMC1 (-2+(skoMC1 (-3))))+(skoSC1 ((skoMC1 skoMC1 (-1))+(skoSC1 skoMC1 (1/12))))))))]/\[[(skoSC1 ((skoMC1 (1+(skoMC1 (-3))))+(skoSC1 ((skoMC1 (2+(skoMC1 (3))))+(skoSC1 ((skoMC1 (-1/6+skoMC1))+(skoSC1 skoMC1 (-1/4))))))))<=(skoMC1 (2+(skoMC1 (5))))]/\[[(skoSC1 ((skoMC1 (1+(skoMC1 (-3))))+(skoSC1 ((skoMC1 (2+(skoMC1 (3))))+(skoSC1 ((skoMC1 skoMC1)+(skoSC1 skoMC1 (-1/12))))))))<=(skoMC1 (2+(skoMC1 (5))))]/\[[(skoSC1 skoMC1 (-1))<=skoMC1]/\[[(skoMC1 (-1))<(skoSC1 skoMC1)]/\[[0<=skoMC1]/\[[0<skoMC1]/\[[0<=skoSC1]/\[[2<=skoMC1]/\[[skoSC1<=5/4]/\[[(skoMC1 skoMC1 skoMC1 (-2))<(skoSC1 skoMC1 skoMC1 skoMC1 (2))]/\[[(skoSC1 skoMC1 skoMC1 skoMC1 (-2))<=(skoMC1 skoMC1 skoMC1 (2))]/\[(skoSC1 ((skoMC1 skoMC1 skoMC1 (-2+(skoMC1 (-12))))+(skoSC1 ((skoMC1 skoMC1 skoMC1 (1+(skoMC1 (-6))))+(skoSC1 ((skoMC1 skoMC1 skoMC1)+(skoSC1 ((skoMC1 skoMC1 skoMC1 (-1/12))+(skoSC1 skoMC1 skoMC1 skoMC1 (-1/12))))))))))<=(skoMC1 skoMC1 skoMC1 (2+(skoMC1 (6))))]]]]]]]]]]]]]]]]]]]]]]]]].

% In SMTLib2 format:
(declare-fun skoSC1 () Real) (declare-fun skoMC1 () Real) (assert (and (<= (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (+ (- 2.) (* skoMC1 (- 12.)))))) (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (+ 1. (* skoMC1 (- 6.)))))) (* skoSC1 (+ (* skoMC1 (* skoMC1 skoMC1)) (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (/ (- 1.) 12.)))) (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (/ (- 1.) 12.)))) (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (/ 1. 360.)))) (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (/ 1. 360.)))) (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (/ (- 1.) 20160.)))) (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (/ (- 1.) 20160.)))) (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (/ 1. 1814400.)))) (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (/ 1. 1814400.)))) (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (/ (- 1.) 239500800.)))) (* skoSC1 (* skoMC1 (* skoMC1 (* skoMC1 (/ (- 1.) 239500800.))))))))))))))))))))))))))))) (* skoMC1 (* skoMC1 (* skoMC1 (+ 2. (* skoMC1 6.)))))) (and (<= (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (* skoMC1 (- 12.))))) (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (+ 1. (* skoMC1 (- 6.)))))) (* skoSC1 (+ (* skoMC1 (* skoMC1 skoMC1)) (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (/ (- 1.) 12.)))) (* skoSC1 (* skoMC1 (* skoMC1 (* skoMC1 (/ (- 1.) 12.))))))))))))) (* skoMC1 (* skoMC1 (* skoMC1 (+ 2. (* skoMC1 6.)))))) (and (<= (* skoMC1 (* skoMC1 (* skoMC1 (- 1.)))) 0.) (and (<= (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (+ 1. (* skoMC1 (- 3.)))))) (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (+ 2. (* skoMC1 3.))))) (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 skoMC1))) (* skoSC1 (* skoMC1 (* skoMC1 (* skoMC1 (/ (- 1.) 12.))))))))))) (* skoMC1 (* skoMC1 (* skoMC1 (+ 2. (* skoMC1 5.)))))) (and (<= (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (+ 1. (* skoMC1 (- 3.)))))) (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (+ 2. (* skoMC1 3.))))) (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (+ (/ (- 1.) 6.) skoMC1)))) (* skoSC1 (* skoMC1 (* skoMC1 (* skoMC1 (/ (- 1.) 4.))))))))))) (* skoMC1 (* skoMC1 (* skoMC1 (+ 2. (* skoMC1 5.)))))) (and (<= (* skoSC1 (* skoMC1 (* skoMC1 (* skoMC1 (- 1.))))) (* skoMC1 (* skoMC1 skoMC1))) (and (> (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (+ (- 1.) (* skoMC1 3.))))) (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (+ (- 2.) (* skoMC1 (- 3.)))))) (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (* skoMC1 (- 1.))))) (* skoSC1 (* skoMC1 (* skoMC1 (* skoMC1 (/ 1. 12.))))))))))) (* skoMC1 (* skoMC1 (* skoMC1 (+ (- 2.) (* skoMC1 (- 5.))))))) (and (> (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (+ (- 1.) (* skoMC1 3.))))) (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (+ (- 2.) (* skoMC1 (- 3.)))))) (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (+ (/ 1. 6.) (* skoMC1 (- 1.)))))) (* skoSC1 (* skoMC1 (* skoMC1 (* skoMC1 (/ 1. 4.))))))))))) (* skoMC1 (* skoMC1 (* skoMC1 (+ (- 2.) (* skoMC1 (- 5.))))))) (and (> (* skoSC1 (* skoMC1 (* skoMC1 skoMC1))) (* skoMC1 (* skoMC1 (* skoMC1 (- 1.))))) (and (<= (* skoMC1 (* skoMC1 (* skoMC1 (- 2.)))) 0.) (and (> (* skoMC1 (* skoMC1 (* skoMC1 2.))) 0.) (and (> (* skoSC1 (+ (* skoMC1 (+ (- 1.) (* skoMC1 3.))) (* skoSC1 (+ (* skoMC1 (+ (- 2.) (* skoMC1 (- 3.)))) (* skoSC1 (+ (* skoMC1 (+ (/ 1. 6.) (* skoMC1 (- 1.)))) (* skoSC1 (* skoMC1 (/ 1. 4.))))))))) (* skoMC1 (+ (- 2.) (* skoMC1 (- 5.))))) (and (> (* skoSC1 (+ (* skoMC1 (+ (- 1.) (* skoMC1 3.))) (* skoSC1 (+ (* skoMC1 (+ (- 2.) (* skoMC1 (- 3.)))) (* skoSC1 (+ (* skoMC1 (* skoMC1 (- 1.))) (* skoSC1 (* skoMC1 (/ 1. 12.))))))))) (* skoMC1 (+ (- 2.) (* skoMC1 (- 5.))))) (and (<= (* skoSC1 (+ (* skoMC1 (+ 1. (* skoMC1 (- 3.)))) (* skoSC1 (+ (* skoMC1 (+ 2. (* skoMC1 3.))) (* skoSC1 (+ (* skoMC1 (+ (/ (- 1.) 6.) skoMC1)) (* skoSC1 (* skoMC1 (/ (- 1.) 4.))))))))) (* skoMC1 (+ 2. (* skoMC1 5.)))) (and (<= (* skoSC1 (+ (* skoMC1 (+ 1. (* skoMC1 (- 3.)))) (* skoSC1 (+ (* skoMC1 (+ 2. (* skoMC1 3.))) (* skoSC1 (+ (* skoMC1 skoMC1) (* skoSC1 (* skoMC1 (/ (- 1.) 12.))))))))) (* skoMC1 (+ 2. (* skoMC1 5.)))) (and (<= (* skoSC1 (* skoMC1 (- 1.))) skoMC1) (and (> (* skoSC1 skoMC1) (* skoMC1 (- 1.))) (and (<= 0. skoMC1) (and (> skoMC1 0.) (and (<= 0. skoSC1) (and (<= 2. skoMC1) (and (<= skoSC1 (/ 5. 4.)) (and (> (* skoSC1 (* skoMC1 (* skoMC1 (* skoMC1 2.)))) (* skoMC1 (* skoMC1 (* skoMC1 (- 2.))))) (and (<= (* skoSC1 (* skoMC1 (* skoMC1 (* skoMC1 (- 2.))))) (* skoMC1 (* skoMC1 (* skoMC1 2.)))) (<= (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (+ (- 2.) (* skoMC1 (- 12.)))))) (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (+ 1. (* skoMC1 (- 6.)))))) (* skoSC1 (+ (* skoMC1 (* skoMC1 skoMC1)) (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (/ (- 1.) 12.)))) (* skoSC1 (* skoMC1 (* skoMC1 (* skoMC1 (/ (- 1.) 12.))))))))))))) (* skoMC1 (* skoMC1 (* skoMC1 (+ 2. (* skoMC1 6.)))))))))))))))))))))))))))))))

% In GRF format:
(sequent " MetiTarski formula " (antecedent (<= (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (+ (- 2.) (* skoMC1 (- 12.)))))) (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (+ 1. (* skoMC1 (- 6.)))))) (* skoSC1 (+ (* skoMC1 (* skoMC1 skoMC1)) (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (/ (- 1.) 12.)))) (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (/ (- 1.) 12.)))) (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (/ 1. 360.)))) (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (/ 1. 360.)))) (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (/ (- 1.) 20160.)))) (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (/ (- 1.) 20160.)))) (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (/ 1. 1814400.)))) (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (/ 1. 1814400.)))) (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (/ (- 1.) 239500800.)))) (* skoSC1 (* skoMC1 (* skoMC1 (* skoMC1 (/ (- 1.) 239500800.))))))))))))))))))))))))))))) (* skoMC1 (* skoMC1 (* skoMC1 (+ 2. (* skoMC1 6.)))))) (<= (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (* skoMC1 (- 12.))))) (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (+ 1. (* skoMC1 (- 6.)))))) (* skoSC1 (+ (* skoMC1 (* skoMC1 skoMC1)) (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (/ (- 1.) 12.)))) (* skoSC1 (* skoMC1 (* skoMC1 (* skoMC1 (/ (- 1.) 12.))))))))))))) (* skoMC1 (* skoMC1 (* skoMC1 (+ 2. (* skoMC1 6.)))))) (<= (* skoMC1 (* skoMC1 (* skoMC1 (- 1.)))) 0.) (<= (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (+ 1. (* skoMC1 (- 3.)))))) (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (+ 2. (* skoMC1 3.))))) (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 skoMC1))) (* skoSC1 (* skoMC1 (* skoMC1 (* skoMC1 (/ (- 1.) 12.))))))))))) (* skoMC1 (* skoMC1 (* skoMC1 (+ 2. (* skoMC1 5.)))))) (<= (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (+ 1. (* skoMC1 (- 3.)))))) (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (+ 2. (* skoMC1 3.))))) (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (+ (/ (- 1.) 6.) skoMC1)))) (* skoSC1 (* skoMC1 (* skoMC1 (* skoMC1 (/ (- 1.) 4.))))))))))) (* skoMC1 (* skoMC1 (* skoMC1 (+ 2. (* skoMC1 5.)))))) (<= (* skoSC1 (* skoMC1 (* skoMC1 (* skoMC1 (- 1.))))) (* skoMC1 (* skoMC1 skoMC1))) (> (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (+ (- 1.) (* skoMC1 3.))))) (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (+ (- 2.) (* skoMC1 (- 3.)))))) (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (* skoMC1 (- 1.))))) (* skoSC1 (* skoMC1 (* skoMC1 (* skoMC1 (/ 1. 12.))))))))))) (* skoMC1 (* skoMC1 (* skoMC1 (+ (- 2.) (* skoMC1 (- 5.))))))) (> (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (+ (- 1.) (* skoMC1 3.))))) (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (+ (- 2.) (* skoMC1 (- 3.)))))) (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (+ (/ 1. 6.) (* skoMC1 (- 1.)))))) (* skoSC1 (* skoMC1 (* skoMC1 (* skoMC1 (/ 1. 4.))))))))))) (* skoMC1 (* skoMC1 (* skoMC1 (+ (- 2.) (* skoMC1 (- 5.))))))) (> (* skoSC1 (* skoMC1 (* skoMC1 skoMC1))) (* skoMC1 (* skoMC1 (* skoMC1 (- 1.))))) (<= (* skoMC1 (* skoMC1 (* skoMC1 (- 2.)))) 0.) (> (* skoMC1 (* skoMC1 (* skoMC1 2.))) 0.) (> (* skoSC1 (+ (* skoMC1 (+ (- 1.) (* skoMC1 3.))) (* skoSC1 (+ (* skoMC1 (+ (- 2.) (* skoMC1 (- 3.)))) (* skoSC1 (+ (* skoMC1 (+ (/ 1. 6.) (* skoMC1 (- 1.)))) (* skoSC1 (* skoMC1 (/ 1. 4.))))))))) (* skoMC1 (+ (- 2.) (* skoMC1 (- 5.))))) (> (* skoSC1 (+ (* skoMC1 (+ (- 1.) (* skoMC1 3.))) (* skoSC1 (+ (* skoMC1 (+ (- 2.) (* skoMC1 (- 3.)))) (* skoSC1 (+ (* skoMC1 (* skoMC1 (- 1.))) (* skoSC1 (* skoMC1 (/ 1. 12.))))))))) (* skoMC1 (+ (- 2.) (* skoMC1 (- 5.))))) (<= (* skoSC1 (+ (* skoMC1 (+ 1. (* skoMC1 (- 3.)))) (* skoSC1 (+ (* skoMC1 (+ 2. (* skoMC1 3.))) (* skoSC1 (+ (* skoMC1 (+ (/ (- 1.) 6.) skoMC1)) (* skoSC1 (* skoMC1 (/ (- 1.) 4.))))))))) (* skoMC1 (+ 2. (* skoMC1 5.)))) (<= (* skoSC1 (+ (* skoMC1 (+ 1. (* skoMC1 (- 3.)))) (* skoSC1 (+ (* skoMC1 (+ 2. (* skoMC1 3.))) (* skoSC1 (+ (* skoMC1 skoMC1) (* skoSC1 (* skoMC1 (/ (- 1.) 12.))))))))) (* skoMC1 (+ 2. (* skoMC1 5.)))) (<= (* skoSC1 (* skoMC1 (- 1.))) skoMC1) (> (* skoSC1 skoMC1) (* skoMC1 (- 1.))) (<= 0. skoMC1) (> skoMC1 0.) (<= 0. skoSC1) (<= 2. skoMC1) (<= skoSC1 (/ 5. 4.)) (> (* skoSC1 (* skoMC1 (* skoMC1 (* skoMC1 2.)))) (* skoMC1 (* skoMC1 (* skoMC1 (- 2.))))) (<= (* skoSC1 (* skoMC1 (* skoMC1 (* skoMC1 (- 2.))))) (* skoMC1 (* skoMC1 (* skoMC1 2.))))) (succedent (> (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (+ (- 2.) (* skoMC1 (- 12.)))))) (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (+ 1. (* skoMC1 (- 6.)))))) (* skoSC1 (+ (* skoMC1 (* skoMC1 skoMC1)) (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (/ (- 1.) 12.)))) (* skoSC1 (* skoMC1 (* skoMC1 (* skoMC1 (/ (- 1.) 12.))))))))))))) (* skoMC1 (* skoMC1 (* skoMC1 (+ 2. (* skoMC1 6.))))))))
-----[end problem]-----

-----[begin problem]-----
% In Mathematica format:
Timing[Resolve[Exists[{skoSC1,skoMC1}, And[skoSC1*skoMC1*skoMC1*skoMC1*-2<=skoMC1*skoMC1*skoMC1*2,skoSC1*(skoMC1*skoMC1*skoMC1*(-2+skoMC1*-12)+skoSC1*(skoMC1*skoMC1*skoMC1*(1+skoMC1*-6)+skoSC1*(skoMC1*skoMC1*skoMC1+skoSC1*(skoMC1*skoMC1*skoMC1*(-1/12)+skoSC1*skoMC1*skoMC1*skoMC1*(-1/12)))))<=skoMC1*skoMC1*skoMC1*(2+skoMC1*6),skoSC1*skoMC1*skoMC1*skoMC1*-2<=skoMC1*skoMC1*skoMC1*2,skoSC1*skoMC1*skoMC1*skoMC1*2>skoMC1*skoMC1*skoMC1*-2,skoSC1<=(5/4),2<=skoMC1,0<=skoSC1,skoMC1>0,0<=skoMC1,skoSC1*skoMC1>skoMC1*-1,skoSC1*skoMC1*-1<=skoMC1,skoSC1*(skoMC1*(1+skoMC1*-3)+skoSC1*(skoMC1*(2+skoMC1*3)+skoSC1*(skoMC1*skoMC1+skoSC1*skoMC1*(-1/12))))<=skoMC1*(2+skoMC1*5),skoSC1*(skoMC1*(1+skoMC1*-3)+skoSC1*(skoMC1*(2+skoMC1*3)+skoSC1*(skoMC1*((-1/6)+skoMC1)+skoSC1*skoMC1*(-1/4))))<=skoMC1*(2+skoMC1*5),skoSC1*(skoMC1*(-1+skoMC1*3)+skoSC1*(skoMC1*(-2+skoMC1*-3)+skoSC1*(skoMC1*skoMC1*-1+skoSC1*skoMC1*(1/12))))>skoMC1*(-2+skoMC1*-5),skoSC1*(skoMC1*(-1+skoMC1*3)+skoSC1*(skoMC1*(-2+skoMC1*-3)+skoSC1*(skoMC1*((1/6)+skoMC1*-1)+skoSC1*skoMC1*(1/4))))>skoMC1*(-2+skoMC1*-5),skoMC1*skoMC1*skoMC1*2>0,skoMC1*skoMC1*skoMC1*-2<=0,skoSC1*skoMC1*skoMC1*skoMC1>skoMC1*skoMC1*skoMC1*-1,skoSC1*(skoMC1*skoMC1*skoMC1*(-1+skoMC1*3)+skoSC1*(skoMC1*skoMC1*skoMC1*(-2+skoMC1*-3)+skoSC1*(skoMC1*skoMC1*skoMC1*((1/6)+skoMC1*-1)+skoSC1*skoMC1*skoMC1*skoMC1*(1/4))))>skoMC1*skoMC1*skoMC1*(-2+skoMC1*-5),skoSC1*(skoMC1*skoMC1*skoMC1*(-1+skoMC1*3)+skoSC1*(skoMC1*skoMC1*skoMC1*(-2+skoMC1*-3)+skoSC1*(skoMC1*skoMC1*skoMC1*skoMC1*-1+skoSC1*skoMC1*skoMC1*skoMC1*(1/12))))>skoMC1*skoMC1*skoMC1*(-2+skoMC1*-5),skoSC1*skoMC1*skoMC1*skoMC1*-1<=skoMC1*skoMC1*skoMC1,skoSC1*(skoMC1*skoMC1*skoMC1*(1+skoMC1*-3)+skoSC1*(skoMC1*skoMC1*skoMC1*(2+skoMC1*3)+skoSC1*(skoMC1*skoMC1*skoMC1*((-1/6)+skoMC1)+skoSC1*skoMC1*skoMC1*skoMC1*(-1/4))))<=skoMC1*skoMC1*skoMC1*(2+skoMC1*5),skoSC1*(skoMC1*skoMC1*skoMC1*(1+skoMC1*-3)+skoSC1*(skoMC1*skoMC1*skoMC1*(2+skoMC1*3)+skoSC1*(skoMC1*skoMC1*skoMC1*skoMC1+skoSC1*skoMC1*skoMC1*skoMC1*(-1/12))))<=skoMC1*skoMC1*skoMC1*(2+skoMC1*5),skoMC1*skoMC1*skoMC1*-1<=0,skoSC1*(skoMC1*skoMC1*skoMC1*skoMC1*-12+skoSC1*(skoMC1*skoMC1*skoMC1*(1+skoMC1*-6)+skoSC1*(skoMC1*skoMC1*skoMC1+skoSC1*(skoMC1*skoMC1*skoMC1*(-1/12)+skoSC1*skoMC1*skoMC1*skoMC1*(-1/12)))))<=skoMC1*skoMC1*skoMC1*(2+skoMC1*6)]], Reals]]

% In QepcadB format:
(E skoSC1) (E skoMC1) [[(skoSC1 skoMC1 skoMC1 skoMC1 (-2))<=(skoMC1 skoMC1 skoMC1 (2))]/\[[(skoSC1 ((skoMC1 skoMC1 skoMC1 (-2+(skoMC1 (-12))))+(skoSC1 ((skoMC1 skoMC1 skoMC1 (1+(skoMC1 (-6))))+(skoSC1 ((skoMC1 skoMC1 skoMC1)+(skoSC1 ((skoMC1 skoMC1 skoMC1 (-1/12))+(skoSC1 skoMC1 skoMC1 skoMC1 (-1/12))))))))))<=(skoMC1 skoMC1 skoMC1 (2+(skoMC1 (6))))]/\[[(skoSC1 skoMC1 skoMC1 skoMC1 (-2))<=(skoMC1 skoMC1 skoMC1 (2))]/\[[(skoMC1 skoMC1 skoMC1 (-2))<(skoSC1 skoMC1 skoMC1 skoMC1 (2))]/\[[skoSC1<=5/4]/\[[2<=skoMC1]/\[[0<=skoSC1]/\[[0<skoMC1]/\[[0<=skoMC1]/\[[(skoMC1 (-1))<(skoSC1 skoMC1)]/\[[(skoSC1 skoMC1 (-1))<=skoMC1]/\[[(skoSC1 ((skoMC1 (1+(skoMC1 (-3))))+(skoSC1 ((skoMC1 (2+(skoMC1 (3))))+(skoSC1 ((skoMC1 skoMC1)+(skoSC1 skoMC1 (-1/12))))))))<=(skoMC1 (2+(skoMC1 (5))))]/\[[(skoSC1 ((skoMC1 (1+(skoMC1 (-3))))+(skoSC1 ((skoMC1 (2+(skoMC1 (3))))+(skoSC1 ((skoMC1 (-1/6+skoMC1))+(skoSC1 skoMC1 (-1/4))))))))<=(skoMC1 (2+(skoMC1 (5))))]/\[[(skoMC1 (-2+(skoMC1 (-5))))<(skoSC1 ((skoMC1 (-1+(skoMC1 (3))))+(skoSC1 ((skoMC1 (-2+(skoMC1 (-3))))+(skoSC1 ((skoMC1 skoMC1 (-1))+(skoSC1 skoMC1 (1/12))))))))]/\[[(skoMC1 (-2+(skoMC1 (-5))))<(skoSC1 ((skoMC1 (-1+(skoMC1 (3))))+(skoSC1 ((skoMC1 (-2+(skoMC1 (-3))))+(skoSC1 ((skoMC1 (1/6+(skoMC1 (-1))))+(skoSC1 skoMC1 (1/4))))))))]/\[[0<(skoMC1 skoMC1 skoMC1 (2))]/\[[(skoMC1 skoMC1 skoMC1 (-2))<=0]/\[[(skoMC1 skoMC1 skoMC1 (-1))<(skoSC1 skoMC1 skoMC1 skoMC1)]/\[[(skoMC1 skoMC1 skoMC1 (-2+(skoMC1 (-5))))<(skoSC1 ((skoMC1 skoMC1 skoMC1 (-1+(skoMC1 (3))))+(skoSC1 ((skoMC1 skoMC1 skoMC1 (-2+(skoMC1 (-3))))+(skoSC1 ((skoMC1 skoMC1 skoMC1 (1/6+(skoMC1 (-1))))+(skoSC1 skoMC1 skoMC1 skoMC1 (1/4))))))))]/\[[(skoMC1 skoMC1 skoMC1 (-2+(skoMC1 (-5))))<(skoSC1 ((skoMC1 skoMC1 skoMC1 (-1+(skoMC1 (3))))+(skoSC1 ((skoMC1 skoMC1 skoMC1 (-2+(skoMC1 (-3))))+(skoSC1 ((skoMC1 skoMC1 skoMC1 skoMC1 (-1))+(skoSC1 skoMC1 skoMC1 skoMC1 (1/12))))))))]/\[[(skoSC1 skoMC1 skoMC1 skoMC1 (-1))<=(skoMC1 skoMC1 skoMC1)]/\[[(skoSC1 ((skoMC1 skoMC1 skoMC1 (1+(skoMC1 (-3))))+(skoSC1 ((skoMC1 skoMC1 skoMC1 (2+(skoMC1 (3))))+(skoSC1 ((skoMC1 skoMC1 skoMC1 (-1/6+skoMC1))+(skoSC1 skoMC1 skoMC1 skoMC1 (-1/4))))))))<=(skoMC1 skoMC1 skoMC1 (2+(skoMC1 (5))))]/\[[(skoSC1 ((skoMC1 skoMC1 skoMC1 (1+(skoMC1 (-3))))+(skoSC1 ((skoMC1 skoMC1 skoMC1 (2+(skoMC1 (3))))+(skoSC1 ((skoMC1 skoMC1 skoMC1 skoMC1)+(skoSC1 skoMC1 skoMC1 skoMC1 (-1/12))))))))<=(skoMC1 skoMC1 skoMC1 (2+(skoMC1 (5))))]/\[[(skoMC1 skoMC1 skoMC1 (-1))<=0]/\[(skoSC1 ((skoMC1 skoMC1 skoMC1 skoMC1 (-12))+(skoSC1 ((skoMC1 skoMC1 skoMC1 (1+(skoMC1 (-6))))+(skoSC1 ((skoMC1 skoMC1 skoMC1)+(skoSC1 ((skoMC1 skoMC1 skoMC1 (-1/12))+(skoSC1 skoMC1 skoMC1 skoMC1 (-1/12))))))))))<=(skoMC1 skoMC1 skoMC1 (2+(skoMC1 (6))))]]]]]]]]]]]]]]]]]]]]]]]]].

% In SMTLib2 format:
(declare-fun skoSC1 () Real) (declare-fun skoMC1 () Real) (assert (and (<= (* skoSC1 (* skoMC1 (* skoMC1 (* skoMC1 (- 2.))))) (* skoMC1 (* skoMC1 (* skoMC1 2.)))) (and (<= (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (+ (- 2.) (* skoMC1 (- 12.)))))) (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (+ 1. (* skoMC1 (- 6.)))))) (* skoSC1 (+ (* skoMC1 (* skoMC1 skoMC1)) (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (/ (- 1.) 12.)))) (* skoSC1 (* skoMC1 (* skoMC1 (* skoMC1 (/ (- 1.) 12.))))))))))))) (* skoMC1 (* skoMC1 (* skoMC1 (+ 2. (* skoMC1 6.)))))) (and (<= (* skoSC1 (* skoMC1 (* skoMC1 (* skoMC1 (- 2.))))) (* skoMC1 (* skoMC1 (* skoMC1 2.)))) (and (> (* skoSC1 (* skoMC1 (* skoMC1 (* skoMC1 2.)))) (* skoMC1 (* skoMC1 (* skoMC1 (- 2.))))) (and (<= skoSC1 (/ 5. 4.)) (and (<= 2. skoMC1) (and (<= 0. skoSC1) (and (> skoMC1 0.) (and (<= 0. skoMC1) (and (> (* skoSC1 skoMC1) (* skoMC1 (- 1.))) (and (<= (* skoSC1 (* skoMC1 (- 1.))) skoMC1) (and (<= (* skoSC1 (+ (* skoMC1 (+ 1. (* skoMC1 (- 3.)))) (* skoSC1 (+ (* skoMC1 (+ 2. (* skoMC1 3.))) (* skoSC1 (+ (* skoMC1 skoMC1) (* skoSC1 (* skoMC1 (/ (- 1.) 12.))))))))) (* skoMC1 (+ 2. (* skoMC1 5.)))) (and (<= (* skoSC1 (+ (* skoMC1 (+ 1. (* skoMC1 (- 3.)))) (* skoSC1 (+ (* skoMC1 (+ 2. (* skoMC1 3.))) (* skoSC1 (+ (* skoMC1 (+ (/ (- 1.) 6.) skoMC1)) (* skoSC1 (* skoMC1 (/ (- 1.) 4.))))))))) (* skoMC1 (+ 2. (* skoMC1 5.)))) (and (> (* skoSC1 (+ (* skoMC1 (+ (- 1.) (* skoMC1 3.))) (* skoSC1 (+ (* skoMC1 (+ (- 2.) (* skoMC1 (- 3.)))) (* skoSC1 (+ (* skoMC1 (* skoMC1 (- 1.))) (* skoSC1 (* skoMC1 (/ 1. 12.))))))))) (* skoMC1 (+ (- 2.) (* skoMC1 (- 5.))))) (and (> (* skoSC1 (+ (* skoMC1 (+ (- 1.) (* skoMC1 3.))) (* skoSC1 (+ (* skoMC1 (+ (- 2.) (* skoMC1 (- 3.)))) (* skoSC1 (+ (* skoMC1 (+ (/ 1. 6.) (* skoMC1 (- 1.)))) (* skoSC1 (* skoMC1 (/ 1. 4.))))))))) (* skoMC1 (+ (- 2.) (* skoMC1 (- 5.))))) (and (> (* skoMC1 (* skoMC1 (* skoMC1 2.))) 0.) (and (<= (* skoMC1 (* skoMC1 (* skoMC1 (- 2.)))) 0.) (and (> (* skoSC1 (* skoMC1 (* skoMC1 skoMC1))) (* skoMC1 (* skoMC1 (* skoMC1 (- 1.))))) (and (> (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (+ (- 1.) (* skoMC1 3.))))) (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (+ (- 2.) (* skoMC1 (- 3.)))))) (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (+ (/ 1. 6.) (* skoMC1 (- 1.)))))) (* skoSC1 (* skoMC1 (* skoMC1 (* skoMC1 (/ 1. 4.))))))))))) (* skoMC1 (* skoMC1 (* skoMC1 (+ (- 2.) (* skoMC1 (- 5.))))))) (and (> (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (+ (- 1.) (* skoMC1 3.))))) (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (+ (- 2.) (* skoMC1 (- 3.)))))) (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (* skoMC1 (- 1.))))) (* skoSC1 (* skoMC1 (* skoMC1 (* skoMC1 (/ 1. 12.))))))))))) (* skoMC1 (* skoMC1 (* skoMC1 (+ (- 2.) (* skoMC1 (- 5.))))))) (and (<= (* skoSC1 (* skoMC1 (* skoMC1 (* skoMC1 (- 1.))))) (* skoMC1 (* skoMC1 skoMC1))) (and (<= (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (+ 1. (* skoMC1 (- 3.)))))) (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (+ 2. (* skoMC1 3.))))) (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (+ (/ (- 1.) 6.) skoMC1)))) (* skoSC1 (* skoMC1 (* skoMC1 (* skoMC1 (/ (- 1.) 4.))))))))))) (* skoMC1 (* skoMC1 (* skoMC1 (+ 2. (* skoMC1 5.)))))) (and (<= (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (+ 1. (* skoMC1 (- 3.)))))) (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (+ 2. (* skoMC1 3.))))) (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 skoMC1))) (* skoSC1 (* skoMC1 (* skoMC1 (* skoMC1 (/ (- 1.) 12.))))))))))) (* skoMC1 (* skoMC1 (* skoMC1 (+ 2. (* skoMC1 5.)))))) (and (<= (* skoMC1 (* skoMC1 (* skoMC1 (- 1.)))) 0.) (<= (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (* skoMC1 (- 12.))))) (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (+ 1. (* skoMC1 (- 6.)))))) (* skoSC1 (+ (* skoMC1 (* skoMC1 skoMC1)) (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (/ (- 1.) 12.)))) (* skoSC1 (* skoMC1 (* skoMC1 (* skoMC1 (/ (- 1.) 12.))))))))))))) (* skoMC1 (* skoMC1 (* skoMC1 (+ 2. (* skoMC1 6.)))))))))))))))))))))))))))))))

% In GRF format:
(sequent " MetiTarski formula " (antecedent (<= (* skoSC1 (* skoMC1 (* skoMC1 (* skoMC1 (- 2.))))) (* skoMC1 (* skoMC1 (* skoMC1 2.)))) (<= (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (+ (- 2.) (* skoMC1 (- 12.)))))) (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (+ 1. (* skoMC1 (- 6.)))))) (* skoSC1 (+ (* skoMC1 (* skoMC1 skoMC1)) (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (/ (- 1.) 12.)))) (* skoSC1 (* skoMC1 (* skoMC1 (* skoMC1 (/ (- 1.) 12.))))))))))))) (* skoMC1 (* skoMC1 (* skoMC1 (+ 2. (* skoMC1 6.)))))) (<= (* skoSC1 (* skoMC1 (* skoMC1 (* skoMC1 (- 2.))))) (* skoMC1 (* skoMC1 (* skoMC1 2.)))) (> (* skoSC1 (* skoMC1 (* skoMC1 (* skoMC1 2.)))) (* skoMC1 (* skoMC1 (* skoMC1 (- 2.))))) (<= skoSC1 (/ 5. 4.)) (<= 2. skoMC1) (<= 0. skoSC1) (> skoMC1 0.) (<= 0. skoMC1) (> (* skoSC1 skoMC1) (* skoMC1 (- 1.))) (<= (* skoSC1 (* skoMC1 (- 1.))) skoMC1) (<= (* skoSC1 (+ (* skoMC1 (+ 1. (* skoMC1 (- 3.)))) (* skoSC1 (+ (* skoMC1 (+ 2. (* skoMC1 3.))) (* skoSC1 (+ (* skoMC1 skoMC1) (* skoSC1 (* skoMC1 (/ (- 1.) 12.))))))))) (* skoMC1 (+ 2. (* skoMC1 5.)))) (<= (* skoSC1 (+ (* skoMC1 (+ 1. (* skoMC1 (- 3.)))) (* skoSC1 (+ (* skoMC1 (+ 2. (* skoMC1 3.))) (* skoSC1 (+ (* skoMC1 (+ (/ (- 1.) 6.) skoMC1)) (* skoSC1 (* skoMC1 (/ (- 1.) 4.))))))))) (* skoMC1 (+ 2. (* skoMC1 5.)))) (> (* skoSC1 (+ (* skoMC1 (+ (- 1.) (* skoMC1 3.))) (* skoSC1 (+ (* skoMC1 (+ (- 2.) (* skoMC1 (- 3.)))) (* skoSC1 (+ (* skoMC1 (* skoMC1 (- 1.))) (* skoSC1 (* skoMC1 (/ 1. 12.))))))))) (* skoMC1 (+ (- 2.) (* skoMC1 (- 5.))))) (> (* skoSC1 (+ (* skoMC1 (+ (- 1.) (* skoMC1 3.))) (* skoSC1 (+ (* skoMC1 (+ (- 2.) (* skoMC1 (- 3.)))) (* skoSC1 (+ (* skoMC1 (+ (/ 1. 6.) (* skoMC1 (- 1.)))) (* skoSC1 (* skoMC1 (/ 1. 4.))))))))) (* skoMC1 (+ (- 2.) (* skoMC1 (- 5.))))) (> (* skoMC1 (* skoMC1 (* skoMC1 2.))) 0.) (<= (* skoMC1 (* skoMC1 (* skoMC1 (- 2.)))) 0.) (> (* skoSC1 (* skoMC1 (* skoMC1 skoMC1))) (* skoMC1 (* skoMC1 (* skoMC1 (- 1.))))) (> (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (+ (- 1.) (* skoMC1 3.))))) (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (+ (- 2.) (* skoMC1 (- 3.)))))) (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (+ (/ 1. 6.) (* skoMC1 (- 1.)))))) (* skoSC1 (* skoMC1 (* skoMC1 (* skoMC1 (/ 1. 4.))))))))))) (* skoMC1 (* skoMC1 (* skoMC1 (+ (- 2.) (* skoMC1 (- 5.))))))) (> (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (+ (- 1.) (* skoMC1 3.))))) (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (+ (- 2.) (* skoMC1 (- 3.)))))) (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (* skoMC1 (- 1.))))) (* skoSC1 (* skoMC1 (* skoMC1 (* skoMC1 (/ 1. 12.))))))))))) (* skoMC1 (* skoMC1 (* skoMC1 (+ (- 2.) (* skoMC1 (- 5.))))))) (<= (* skoSC1 (* skoMC1 (* skoMC1 (* skoMC1 (- 1.))))) (* skoMC1 (* skoMC1 skoMC1))) (<= (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (+ 1. (* skoMC1 (- 3.)))))) (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (+ 2. (* skoMC1 3.))))) (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (+ (/ (- 1.) 6.) skoMC1)))) (* skoSC1 (* skoMC1 (* skoMC1 (* skoMC1 (/ (- 1.) 4.))))))))))) (* skoMC1 (* skoMC1 (* skoMC1 (+ 2. (* skoMC1 5.)))))) (<= (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (+ 1. (* skoMC1 (- 3.)))))) (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (+ 2. (* skoMC1 3.))))) (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 skoMC1))) (* skoSC1 (* skoMC1 (* skoMC1 (* skoMC1 (/ (- 1.) 12.))))))))))) (* skoMC1 (* skoMC1 (* skoMC1 (+ 2. (* skoMC1 5.)))))) (<= (* skoMC1 (* skoMC1 (* skoMC1 (- 1.)))) 0.)) (succedent (> (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (* skoMC1 (- 12.))))) (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (+ 1. (* skoMC1 (- 6.)))))) (* skoSC1 (+ (* skoMC1 (* skoMC1 skoMC1)) (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (/ (- 1.) 12.)))) (* skoSC1 (* skoMC1 (* skoMC1 (* skoMC1 (/ (- 1.) 12.))))))))))))) (* skoMC1 (* skoMC1 (* skoMC1 (+ 2. (* skoMC1 6.))))))))
-----[end problem]-----

-----[begin problem]-----
% In Mathematica format:
Timing[Resolve[Exists[{skoSC1,skoMC1}, And[skoMC1*skoMC1*-1<=0,skoSC1*(skoMC1*skoMC1*skoMC1*skoMC1*-12+skoSC1*(skoMC1*skoMC1*skoMC1*(1+skoMC1*-6)+skoSC1*(skoMC1*skoMC1*skoMC1+skoSC1*(skoMC1*skoMC1*skoMC1*(-1/12)+skoSC1*skoMC1*skoMC1*skoMC1*(-1/12)))))<=skoMC1*skoMC1*skoMC1*(2+skoMC1*6),skoMC1*skoMC1*skoMC1*-1<=0,skoSC1*(skoMC1*skoMC1*skoMC1*(1+skoMC1*-3)+skoSC1*(skoMC1*skoMC1*skoMC1*(2+skoMC1*3)+skoSC1*(skoMC1*skoMC1*skoMC1*skoMC1+skoSC1*skoMC1*skoMC1*skoMC1*(-1/12))))<=skoMC1*skoMC1*skoMC1*(2+skoMC1*5),skoSC1*(skoMC1*skoMC1*skoMC1*(1+skoMC1*-3)+skoSC1*(skoMC1*skoMC1*skoMC1*(2+skoMC1*3)+skoSC1*(skoMC1*skoMC1*skoMC1*((-1/6)+skoMC1)+skoSC1*skoMC1*skoMC1*skoMC1*(-1/4))))<=skoMC1*skoMC1*skoMC1*(2+skoMC1*5),skoSC1*skoMC1*skoMC1*skoMC1*-1<=skoMC1*skoMC1*skoMC1,skoSC1*(skoMC1*skoMC1*skoMC1*(-1+skoMC1*3)+skoSC1*(skoMC1*skoMC1*skoMC1*(-2+skoMC1*-3)+skoSC1*(skoMC1*skoMC1*skoMC1*skoMC1*-1+skoSC1*skoMC1*skoMC1*skoMC1*(1/12))))>skoMC1*skoMC1*skoMC1*(-2+skoMC1*-5),skoSC1*(skoMC1*skoMC1*skoMC1*(-1+skoMC1*3)+skoSC1*(skoMC1*skoMC1*skoMC1*(-2+skoMC1*-3)+skoSC1*(skoMC1*skoMC1*skoMC1*((1/6)+skoMC1*-1)+skoSC1*skoMC1*skoMC1*skoMC1*(1/4))))>skoMC1*skoMC1*skoMC1*(-2+skoMC1*-5),skoSC1*skoMC1*skoMC1*skoMC1>skoMC1*skoMC1*skoMC1*-1,skoMC1*skoMC1*skoMC1*-2<=0,skoMC1*skoMC1*skoMC1*2>0,skoSC1*(skoMC1*(-1+skoMC1*3)+skoSC1*(skoMC1*(-2+skoMC1*-3)+skoSC1*(skoMC1*((1/6)+skoMC1*-1)+skoSC1*skoMC1*(1/4))))>skoMC1*(-2+skoMC1*-5),skoSC1*(skoMC1*(-1+skoMC1*3)+skoSC1*(skoMC1*(-2+skoMC1*-3)+skoSC1*(skoMC1*skoMC1*-1+skoSC1*skoMC1*(1/12))))>skoMC1*(-2+skoMC1*-5),skoSC1*(skoMC1*(1+skoMC1*-3)+skoSC1*(skoMC1*(2+skoMC1*3)+skoSC1*(skoMC1*((-1/6)+skoMC1)+skoSC1*skoMC1*(-1/4))))<=skoMC1*(2+skoMC1*5),skoSC1*(skoMC1*(1+skoMC1*-3)+skoSC1*(skoMC1*(2+skoMC1*3)+skoSC1*(skoMC1*skoMC1+skoSC1*skoMC1*(-1/12))))<=skoMC1*(2+skoMC1*5),skoSC1*skoMC1*-1<=skoMC1,skoSC1*skoMC1>skoMC1*-1,0<=skoMC1,skoMC1>0,0<=skoSC1,2<=skoMC1,skoSC1<=(5/4),skoSC1*skoMC1*skoMC1*skoMC1*2>skoMC1*skoMC1*skoMC1*-2,skoSC1*skoMC1*skoMC1*skoMC1*-2<=skoMC1*skoMC1*skoMC1*2,skoSC1*(skoMC1*skoMC1*skoMC1*(-2+skoMC1*-12)+skoSC1*(skoMC1*skoMC1*skoMC1*(1+skoMC1*-6)+skoSC1*(skoMC1*skoMC1*skoMC1+skoSC1*(skoMC1*skoMC1*skoMC1*(-1/12)+skoSC1*skoMC1*skoMC1*skoMC1*(-1/12)))))<=skoMC1*skoMC1*skoMC1*(2+skoMC1*6)]], Reals]]

% In QepcadB format:
(E skoSC1) (E skoMC1) [[(skoMC1 skoMC1 (-1))<=0]/\[[(skoSC1 ((skoMC1 skoMC1 skoMC1 skoMC1 (-12))+(skoSC1 ((skoMC1 skoMC1 skoMC1 (1+(skoMC1 (-6))))+(skoSC1 ((skoMC1 skoMC1 skoMC1)+(skoSC1 ((skoMC1 skoMC1 skoMC1 (-1/12))+(skoSC1 skoMC1 skoMC1 skoMC1 (-1/12))))))))))<=(skoMC1 skoMC1 skoMC1 (2+(skoMC1 (6))))]/\[[(skoMC1 skoMC1 skoMC1 (-1))<=0]/\[[(skoSC1 ((skoMC1 skoMC1 skoMC1 (1+(skoMC1 (-3))))+(skoSC1 ((skoMC1 skoMC1 skoMC1 (2+(skoMC1 (3))))+(skoSC1 ((skoMC1 skoMC1 skoMC1 skoMC1)+(skoSC1 skoMC1 skoMC1 skoMC1 (-1/12))))))))<=(skoMC1 skoMC1 skoMC1 (2+(skoMC1 (5))))]/\[[(skoSC1 ((skoMC1 skoMC1 skoMC1 (1+(skoMC1 (-3))))+(skoSC1 ((skoMC1 skoMC1 skoMC1 (2+(skoMC1 (3))))+(skoSC1 ((skoMC1 skoMC1 skoMC1 (-1/6+skoMC1))+(skoSC1 skoMC1 skoMC1 skoMC1 (-1/4))))))))<=(skoMC1 skoMC1 skoMC1 (2+(skoMC1 (5))))]/\[[(skoSC1 skoMC1 skoMC1 skoMC1 (-1))<=(skoMC1 skoMC1 skoMC1)]/\[[(skoMC1 skoMC1 skoMC1 (-2+(skoMC1 (-5))))<(skoSC1 ((skoMC1 skoMC1 skoMC1 (-1+(skoMC1 (3))))+(skoSC1 ((skoMC1 skoMC1 skoMC1 (-2+(skoMC1 (-3))))+(skoSC1 ((skoMC1 skoMC1 skoMC1 skoMC1 (-1))+(skoSC1 skoMC1 skoMC1 skoMC1 (1/12))))))))]/\[[(skoMC1 skoMC1 skoMC1 (-2+(skoMC1 (-5))))<(skoSC1 ((skoMC1 skoMC1 skoMC1 (-1+(skoMC1 (3))))+(skoSC1 ((skoMC1 skoMC1 skoMC1 (-2+(skoMC1 (-3))))+(skoSC1 ((skoMC1 skoMC1 skoMC1 (1/6+(skoMC1 (-1))))+(skoSC1 skoMC1 skoMC1 skoMC1 (1/4))))))))]/\[[(skoMC1 skoMC1 skoMC1 (-1))<(skoSC1 skoMC1 skoMC1 skoMC1)]/\[[(skoMC1 skoMC1 skoMC1 (-2))<=0]/\[[0<(skoMC1 skoMC1 skoMC1 (2))]/\[[(skoMC1 (-2+(skoMC1 (-5))))<(skoSC1 ((skoMC1 (-1+(skoMC1 (3))))+(skoSC1 ((skoMC1 (-2+(skoMC1 (-3))))+(skoSC1 ((skoMC1 (1/6+(skoMC1 (-1))))+(skoSC1 skoMC1 (1/4))))))))]/\[[(skoMC1 (-2+(skoMC1 (-5))))<(skoSC1 ((skoMC1 (-1+(skoMC1 (3))))+(skoSC1 ((skoMC1 (-2+(skoMC1 (-3))))+(skoSC1 ((skoMC1 skoMC1 (-1))+(skoSC1 skoMC1 (1/12))))))))]/\[[(skoSC1 ((skoMC1 (1+(skoMC1 (-3))))+(skoSC1 ((skoMC1 (2+(skoMC1 (3))))+(skoSC1 ((skoMC1 (-1/6+skoMC1))+(skoSC1 skoMC1 (-1/4))))))))<=(skoMC1 (2+(skoMC1 (5))))]/\[[(skoSC1 ((skoMC1 (1+(skoMC1 (-3))))+(skoSC1 ((skoMC1 (2+(skoMC1 (3))))+(skoSC1 ((skoMC1 skoMC1)+(skoSC1 skoMC1 (-1/12))))))))<=(skoMC1 (2+(skoMC1 (5))))]/\[[(skoSC1 skoMC1 (-1))<=skoMC1]/\[[(skoMC1 (-1))<(skoSC1 skoMC1)]/\[[0<=skoMC1]/\[[0<skoMC1]/\[[0<=skoSC1]/\[[2<=skoMC1]/\[[skoSC1<=5/4]/\[[(skoMC1 skoMC1 skoMC1 (-2))<(skoSC1 skoMC1 skoMC1 skoMC1 (2))]/\[[(skoSC1 skoMC1 skoMC1 skoMC1 (-2))<=(skoMC1 skoMC1 skoMC1 (2))]/\[(skoSC1 ((skoMC1 skoMC1 skoMC1 (-2+(skoMC1 (-12))))+(skoSC1 ((skoMC1 skoMC1 skoMC1 (1+(skoMC1 (-6))))+(skoSC1 ((skoMC1 skoMC1 skoMC1)+(skoSC1 ((skoMC1 skoMC1 skoMC1 (-1/12))+(skoSC1 skoMC1 skoMC1 skoMC1 (-1/12))))))))))<=(skoMC1 skoMC1 skoMC1 (2+(skoMC1 (6))))]]]]]]]]]]]]]]]]]]]]]]]]].

% In SMTLib2 format:
(declare-fun skoSC1 () Real) (declare-fun skoMC1 () Real) (assert (and (<= (* skoMC1 (* skoMC1 (- 1.))) 0.) (and (<= (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (* skoMC1 (- 12.))))) (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (+ 1. (* skoMC1 (- 6.)))))) (* skoSC1 (+ (* skoMC1 (* skoMC1 skoMC1)) (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (/ (- 1.) 12.)))) (* skoSC1 (* skoMC1 (* skoMC1 (* skoMC1 (/ (- 1.) 12.))))))))))))) (* skoMC1 (* skoMC1 (* skoMC1 (+ 2. (* skoMC1 6.)))))) (and (<= (* skoMC1 (* skoMC1 (* skoMC1 (- 1.)))) 0.) (and (<= (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (+ 1. (* skoMC1 (- 3.)))))) (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (+ 2. (* skoMC1 3.))))) (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 skoMC1))) (* skoSC1 (* skoMC1 (* skoMC1 (* skoMC1 (/ (- 1.) 12.))))))))))) (* skoMC1 (* skoMC1 (* skoMC1 (+ 2. (* skoMC1 5.)))))) (and (<= (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (+ 1. (* skoMC1 (- 3.)))))) (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (+ 2. (* skoMC1 3.))))) (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (+ (/ (- 1.) 6.) skoMC1)))) (* skoSC1 (* skoMC1 (* skoMC1 (* skoMC1 (/ (- 1.) 4.))))))))))) (* skoMC1 (* skoMC1 (* skoMC1 (+ 2. (* skoMC1 5.)))))) (and (<= (* skoSC1 (* skoMC1 (* skoMC1 (* skoMC1 (- 1.))))) (* skoMC1 (* skoMC1 skoMC1))) (and (> (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (+ (- 1.) (* skoMC1 3.))))) (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (+ (- 2.) (* skoMC1 (- 3.)))))) (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (* skoMC1 (- 1.))))) (* skoSC1 (* skoMC1 (* skoMC1 (* skoMC1 (/ 1. 12.))))))))))) (* skoMC1 (* skoMC1 (* skoMC1 (+ (- 2.) (* skoMC1 (- 5.))))))) (and (> (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (+ (- 1.) (* skoMC1 3.))))) (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (+ (- 2.) (* skoMC1 (- 3.)))))) (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (+ (/ 1. 6.) (* skoMC1 (- 1.)))))) (* skoSC1 (* skoMC1 (* skoMC1 (* skoMC1 (/ 1. 4.))))))))))) (* skoMC1 (* skoMC1 (* skoMC1 (+ (- 2.) (* skoMC1 (- 5.))))))) (and (> (* skoSC1 (* skoMC1 (* skoMC1 skoMC1))) (* skoMC1 (* skoMC1 (* skoMC1 (- 1.))))) (and (<= (* skoMC1 (* skoMC1 (* skoMC1 (- 2.)))) 0.) (and (> (* skoMC1 (* skoMC1 (* skoMC1 2.))) 0.) (and (> (* skoSC1 (+ (* skoMC1 (+ (- 1.) (* skoMC1 3.))) (* skoSC1 (+ (* skoMC1 (+ (- 2.) (* skoMC1 (- 3.)))) (* skoSC1 (+ (* skoMC1 (+ (/ 1. 6.) (* skoMC1 (- 1.)))) (* skoSC1 (* skoMC1 (/ 1. 4.))))))))) (* skoMC1 (+ (- 2.) (* skoMC1 (- 5.))))) (and (> (* skoSC1 (+ (* skoMC1 (+ (- 1.) (* skoMC1 3.))) (* skoSC1 (+ (* skoMC1 (+ (- 2.) (* skoMC1 (- 3.)))) (* skoSC1 (+ (* skoMC1 (* skoMC1 (- 1.))) (* skoSC1 (* skoMC1 (/ 1. 12.))))))))) (* skoMC1 (+ (- 2.) (* skoMC1 (- 5.))))) (and (<= (* skoSC1 (+ (* skoMC1 (+ 1. (* skoMC1 (- 3.)))) (* skoSC1 (+ (* skoMC1 (+ 2. (* skoMC1 3.))) (* skoSC1 (+ (* skoMC1 (+ (/ (- 1.) 6.) skoMC1)) (* skoSC1 (* skoMC1 (/ (- 1.) 4.))))))))) (* skoMC1 (+ 2. (* skoMC1 5.)))) (and (<= (* skoSC1 (+ (* skoMC1 (+ 1. (* skoMC1 (- 3.)))) (* skoSC1 (+ (* skoMC1 (+ 2. (* skoMC1 3.))) (* skoSC1 (+ (* skoMC1 skoMC1) (* skoSC1 (* skoMC1 (/ (- 1.) 12.))))))))) (* skoMC1 (+ 2. (* skoMC1 5.)))) (and (<= (* skoSC1 (* skoMC1 (- 1.))) skoMC1) (and (> (* skoSC1 skoMC1) (* skoMC1 (- 1.))) (and (<= 0. skoMC1) (and (> skoMC1 0.) (and (<= 0. skoSC1) (and (<= 2. skoMC1) (and (<= skoSC1 (/ 5. 4.)) (and (> (* skoSC1 (* skoMC1 (* skoMC1 (* skoMC1 2.)))) (* skoMC1 (* skoMC1 (* skoMC1 (- 2.))))) (and (<= (* skoSC1 (* skoMC1 (* skoMC1 (* skoMC1 (- 2.))))) (* skoMC1 (* skoMC1 (* skoMC1 2.)))) (<= (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (+ (- 2.) (* skoMC1 (- 12.)))))) (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (+ 1. (* skoMC1 (- 6.)))))) (* skoSC1 (+ (* skoMC1 (* skoMC1 skoMC1)) (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (/ (- 1.) 12.)))) (* skoSC1 (* skoMC1 (* skoMC1 (* skoMC1 (/ (- 1.) 12.))))))))))))) (* skoMC1 (* skoMC1 (* skoMC1 (+ 2. (* skoMC1 6.)))))))))))))))))))))))))))))))

% In GRF format:
(sequent " MetiTarski formula " (antecedent (<= (* skoMC1 (* skoMC1 (- 1.))) 0.) (<= (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (* skoMC1 (- 12.))))) (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (+ 1. (* skoMC1 (- 6.)))))) (* skoSC1 (+ (* skoMC1 (* skoMC1 skoMC1)) (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (/ (- 1.) 12.)))) (* skoSC1 (* skoMC1 (* skoMC1 (* skoMC1 (/ (- 1.) 12.))))))))))))) (* skoMC1 (* skoMC1 (* skoMC1 (+ 2. (* skoMC1 6.)))))) (<= (* skoMC1 (* skoMC1 (* skoMC1 (- 1.)))) 0.) (<= (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (+ 1. (* skoMC1 (- 3.)))))) (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (+ 2. (* skoMC1 3.))))) (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 skoMC1))) (* skoSC1 (* skoMC1 (* skoMC1 (* skoMC1 (/ (- 1.) 12.))))))))))) (* skoMC1 (* skoMC1 (* skoMC1 (+ 2. (* skoMC1 5.)))))) (<= (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (+ 1. (* skoMC1 (- 3.)))))) (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (+ 2. (* skoMC1 3.))))) (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (+ (/ (- 1.) 6.) skoMC1)))) (* skoSC1 (* skoMC1 (* skoMC1 (* skoMC1 (/ (- 1.) 4.))))))))))) (* skoMC1 (* skoMC1 (* skoMC1 (+ 2. (* skoMC1 5.)))))) (<= (* skoSC1 (* skoMC1 (* skoMC1 (* skoMC1 (- 1.))))) (* skoMC1 (* skoMC1 skoMC1))) (> (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (+ (- 1.) (* skoMC1 3.))))) (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (+ (- 2.) (* skoMC1 (- 3.)))))) (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (* skoMC1 (- 1.))))) (* skoSC1 (* skoMC1 (* skoMC1 (* skoMC1 (/ 1. 12.))))))))))) (* skoMC1 (* skoMC1 (* skoMC1 (+ (- 2.) (* skoMC1 (- 5.))))))) (> (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (+ (- 1.) (* skoMC1 3.))))) (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (+ (- 2.) (* skoMC1 (- 3.)))))) (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (+ (/ 1. 6.) (* skoMC1 (- 1.)))))) (* skoSC1 (* skoMC1 (* skoMC1 (* skoMC1 (/ 1. 4.))))))))))) (* skoMC1 (* skoMC1 (* skoMC1 (+ (- 2.) (* skoMC1 (- 5.))))))) (> (* skoSC1 (* skoMC1 (* skoMC1 skoMC1))) (* skoMC1 (* skoMC1 (* skoMC1 (- 1.))))) (<= (* skoMC1 (* skoMC1 (* skoMC1 (- 2.)))) 0.) (> (* skoMC1 (* skoMC1 (* skoMC1 2.))) 0.) (> (* skoSC1 (+ (* skoMC1 (+ (- 1.) (* skoMC1 3.))) (* skoSC1 (+ (* skoMC1 (+ (- 2.) (* skoMC1 (- 3.)))) (* skoSC1 (+ (* skoMC1 (+ (/ 1. 6.) (* skoMC1 (- 1.)))) (* skoSC1 (* skoMC1 (/ 1. 4.))))))))) (* skoMC1 (+ (- 2.) (* skoMC1 (- 5.))))) (> (* skoSC1 (+ (* skoMC1 (+ (- 1.) (* skoMC1 3.))) (* skoSC1 (+ (* skoMC1 (+ (- 2.) (* skoMC1 (- 3.)))) (* skoSC1 (+ (* skoMC1 (* skoMC1 (- 1.))) (* skoSC1 (* skoMC1 (/ 1. 12.))))))))) (* skoMC1 (+ (- 2.) (* skoMC1 (- 5.))))) (<= (* skoSC1 (+ (* skoMC1 (+ 1. (* skoMC1 (- 3.)))) (* skoSC1 (+ (* skoMC1 (+ 2. (* skoMC1 3.))) (* skoSC1 (+ (* skoMC1 (+ (/ (- 1.) 6.) skoMC1)) (* skoSC1 (* skoMC1 (/ (- 1.) 4.))))))))) (* skoMC1 (+ 2. (* skoMC1 5.)))) (<= (* skoSC1 (+ (* skoMC1 (+ 1. (* skoMC1 (- 3.)))) (* skoSC1 (+ (* skoMC1 (+ 2. (* skoMC1 3.))) (* skoSC1 (+ (* skoMC1 skoMC1) (* skoSC1 (* skoMC1 (/ (- 1.) 12.))))))))) (* skoMC1 (+ 2. (* skoMC1 5.)))) (<= (* skoSC1 (* skoMC1 (- 1.))) skoMC1) (> (* skoSC1 skoMC1) (* skoMC1 (- 1.))) (<= 0. skoMC1) (> skoMC1 0.) (<= 0. skoSC1) (<= 2. skoMC1) (<= skoSC1 (/ 5. 4.)) (> (* skoSC1 (* skoMC1 (* skoMC1 (* skoMC1 2.)))) (* skoMC1 (* skoMC1 (* skoMC1 (- 2.))))) (<= (* skoSC1 (* skoMC1 (* skoMC1 (* skoMC1 (- 2.))))) (* skoMC1 (* skoMC1 (* skoMC1 2.))))) (succedent (> (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (+ (- 2.) (* skoMC1 (- 12.)))))) (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (+ 1. (* skoMC1 (- 6.)))))) (* skoSC1 (+ (* skoMC1 (* skoMC1 skoMC1)) (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (/ (- 1.) 12.)))) (* skoSC1 (* skoMC1 (* skoMC1 (* skoMC1 (/ (- 1.) 12.))))))))))))) (* skoMC1 (* skoMC1 (* skoMC1 (+ 2. (* skoMC1 6.))))))))
-----[end problem]-----

-----[begin problem]-----
% In Mathematica format:
Timing[Resolve[Exists[{skoSC1,skoMC1}, And[skoMC1*skoMC1*-1<=0,skoMC1*skoMC1!=0,skoMC1!=0,skoSC1*(skoMC1*skoMC1*skoMC1*(-2+skoMC1*-12)+skoSC1*(skoMC1*skoMC1*skoMC1*(1+skoMC1*-6)+skoSC1*(skoMC1*skoMC1*skoMC1+skoSC1*(skoMC1*skoMC1*skoMC1*(-1/12)+skoSC1*skoMC1*skoMC1*skoMC1*(-1/12)))))<=skoMC1*skoMC1*skoMC1*(2+skoMC1*6),skoSC1*skoMC1*skoMC1*skoMC1*-2<=skoMC1*skoMC1*skoMC1*2,skoSC1*skoMC1*skoMC1*skoMC1*2>skoMC1*skoMC1*skoMC1*-2,skoSC1<=(5/4),2<=skoMC1,0<=skoSC1,skoMC1>0,0<=skoMC1,skoSC1*skoMC1>skoMC1*-1,skoSC1*skoMC1*-1<=skoMC1,skoSC1*(skoMC1*(1+skoMC1*-3)+skoSC1*(skoMC1*(2+skoMC1*3)+skoSC1*(skoMC1*skoMC1+skoSC1*skoMC1*(-1/12))))<=skoMC1*(2+skoMC1*5),skoSC1*(skoMC1*(1+skoMC1*-3)+skoSC1*(skoMC1*(2+skoMC1*3)+skoSC1*(skoMC1*((-1/6)+skoMC1)+skoSC1*skoMC1*(-1/4))))<=skoMC1*(2+skoMC1*5)]], Reals]]

% In QepcadB format:
(E skoSC1) (E skoMC1) [[(skoMC1 skoMC1 (-1))<=0]/\[[(skoMC1 skoMC1) /=0]/\[[skoMC1 /=0]/\[[(skoSC1 ((skoMC1 skoMC1 skoMC1 (-2+(skoMC1 (-12))))+(skoSC1 ((skoMC1 skoMC1 skoMC1 (1+(skoMC1 (-6))))+(skoSC1 ((skoMC1 skoMC1 skoMC1)+(skoSC1 ((skoMC1 skoMC1 skoMC1 (-1/12))+(skoSC1 skoMC1 skoMC1 skoMC1 (-1/12))))))))))<=(skoMC1 skoMC1 skoMC1 (2+(skoMC1 (6))))]/\[[(skoSC1 skoMC1 skoMC1 skoMC1 (-2))<=(skoMC1 skoMC1 skoMC1 (2))]/\[[(skoMC1 skoMC1 skoMC1 (-2))<(skoSC1 skoMC1 skoMC1 skoMC1 (2))]/\[[skoSC1<=5/4]/\[[2<=skoMC1]/\[[0<=skoSC1]/\[[0<skoMC1]/\[[0<=skoMC1]/\[[(skoMC1 (-1))<(skoSC1 skoMC1)]/\[[(skoSC1 skoMC1 (-1))<=skoMC1]/\[[(skoSC1 ((skoMC1 (1+(skoMC1 (-3))))+(skoSC1 ((skoMC1 (2+(skoMC1 (3))))+(skoSC1 ((skoMC1 skoMC1)+(skoSC1 skoMC1 (-1/12))))))))<=(skoMC1 (2+(skoMC1 (5))))]/\[(skoSC1 ((skoMC1 (1+(skoMC1 (-3))))+(skoSC1 ((skoMC1 (2+(skoMC1 (3))))+(skoSC1 ((skoMC1 (-1/6+skoMC1))+(skoSC1 skoMC1 (-1/4))))))))<=(skoMC1 (2+(skoMC1 (5))))]]]]]]]]]]]]]]].

% In SMTLib2 format:
(declare-fun skoSC1 () Real) (declare-fun skoMC1 () Real) (assert (and (<= (* skoMC1 (* skoMC1 (- 1.))) 0.) (and (!= (* skoMC1 skoMC1) 0.) (and (!= skoMC1 0.) (and (<= (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (+ (- 2.) (* skoMC1 (- 12.)))))) (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (+ 1. (* skoMC1 (- 6.)))))) (* skoSC1 (+ (* skoMC1 (* skoMC1 skoMC1)) (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (/ (- 1.) 12.)))) (* skoSC1 (* skoMC1 (* skoMC1 (* skoMC1 (/ (- 1.) 12.))))))))))))) (* skoMC1 (* skoMC1 (* skoMC1 (+ 2. (* skoMC1 6.)))))) (and (<= (* skoSC1 (* skoMC1 (* skoMC1 (* skoMC1 (- 2.))))) (* skoMC1 (* skoMC1 (* skoMC1 2.)))) (and (> (* skoSC1 (* skoMC1 (* skoMC1 (* skoMC1 2.)))) (* skoMC1 (* skoMC1 (* skoMC1 (- 2.))))) (and (<= skoSC1 (/ 5. 4.)) (and (<= 2. skoMC1) (and (<= 0. skoSC1) (and (> skoMC1 0.) (and (<= 0. skoMC1) (and (> (* skoSC1 skoMC1) (* skoMC1 (- 1.))) (and (<= (* skoSC1 (* skoMC1 (- 1.))) skoMC1) (and (<= (* skoSC1 (+ (* skoMC1 (+ 1. (* skoMC1 (- 3.)))) (* skoSC1 (+ (* skoMC1 (+ 2. (* skoMC1 3.))) (* skoSC1 (+ (* skoMC1 skoMC1) (* skoSC1 (* skoMC1 (/ (- 1.) 12.))))))))) (* skoMC1 (+ 2. (* skoMC1 5.)))) (<= (* skoSC1 (+ (* skoMC1 (+ 1. (* skoMC1 (- 3.)))) (* skoSC1 (+ (* skoMC1 (+ 2. (* skoMC1 3.))) (* skoSC1 (+ (* skoMC1 (+ (/ (- 1.) 6.) skoMC1)) (* skoSC1 (* skoMC1 (/ (- 1.) 4.))))))))) (* skoMC1 (+ 2. (* skoMC1 5.)))))))))))))))))))

% In GRF format:
(sequent " MetiTarski formula " (antecedent (<= (* skoMC1 (* skoMC1 (- 1.))) 0.) (!= (* skoMC1 skoMC1) 0.) (!= skoMC1 0.) (<= (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (+ (- 2.) (* skoMC1 (- 12.)))))) (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (+ 1. (* skoMC1 (- 6.)))))) (* skoSC1 (+ (* skoMC1 (* skoMC1 skoMC1)) (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (/ (- 1.) 12.)))) (* skoSC1 (* skoMC1 (* skoMC1 (* skoMC1 (/ (- 1.) 12.))))))))))))) (* skoMC1 (* skoMC1 (* skoMC1 (+ 2. (* skoMC1 6.)))))) (<= (* skoSC1 (* skoMC1 (* skoMC1 (* skoMC1 (- 2.))))) (* skoMC1 (* skoMC1 (* skoMC1 2.)))) (> (* skoSC1 (* skoMC1 (* skoMC1 (* skoMC1 2.)))) (* skoMC1 (* skoMC1 (* skoMC1 (- 2.))))) (<= skoSC1 (/ 5. 4.)) (<= 2. skoMC1) (<= 0. skoSC1) (> skoMC1 0.) (<= 0. skoMC1) (> (* skoSC1 skoMC1) (* skoMC1 (- 1.))) (<= (* skoSC1 (* skoMC1 (- 1.))) skoMC1) (<= (* skoSC1 (+ (* skoMC1 (+ 1. (* skoMC1 (- 3.)))) (* skoSC1 (+ (* skoMC1 (+ 2. (* skoMC1 3.))) (* skoSC1 (+ (* skoMC1 skoMC1) (* skoSC1 (* skoMC1 (/ (- 1.) 12.))))))))) (* skoMC1 (+ 2. (* skoMC1 5.))))) (succedent (> (* skoSC1 (+ (* skoMC1 (+ 1. (* skoMC1 (- 3.)))) (* skoSC1 (+ (* skoMC1 (+ 2. (* skoMC1 3.))) (* skoSC1 (+ (* skoMC1 (+ (/ (- 1.) 6.) skoMC1)) (* skoSC1 (* skoMC1 (/ (- 1.) 4.))))))))) (* skoMC1 (+ 2. (* skoMC1 5.))))))
-----[end problem]-----

-----[begin problem]-----
% In Mathematica format:
Timing[Resolve[Exists[{skoSC1,skoMC1}, And[skoMC1*skoMC1*skoMC1*-1<=0,skoSC1*(skoMC1*skoMC1*skoMC1*(-2+skoMC1*-12)+skoSC1*(skoMC1*skoMC1*skoMC1*(1+skoMC1*-6)+skoSC1*(skoMC1*skoMC1*skoMC1+skoSC1*(skoMC1*skoMC1*skoMC1*(-1/12)+skoSC1*skoMC1*skoMC1*skoMC1*(-1/12)))))<=skoMC1*skoMC1*skoMC1*(2+skoMC1*6),skoSC1*skoMC1*skoMC1*skoMC1*-2<=skoMC1*skoMC1*skoMC1*2,skoSC1*skoMC1*skoMC1*skoMC1*2>skoMC1*skoMC1*skoMC1*-2,skoSC1<=(5/4),2<=skoMC1,0<=skoSC1,skoMC1>0,0<=skoMC1,skoSC1*skoMC1>skoMC1*-1,skoSC1*skoMC1*-1<=skoMC1,skoSC1*(skoMC1*(1+skoMC1*-3)+skoSC1*(skoMC1*(2+skoMC1*3)+skoSC1*(skoMC1*skoMC1+skoSC1*skoMC1*(-1/12))))<=skoMC1*(2+skoMC1*5),skoSC1*(skoMC1*(1+skoMC1*-3)+skoSC1*(skoMC1*(2+skoMC1*3)+skoSC1*(skoMC1*((-1/6)+skoMC1)+skoSC1*skoMC1*(-1/4))))<=skoMC1*(2+skoMC1*5)]], Reals]]

% In QepcadB format:
(E skoSC1) (E skoMC1) [[(skoMC1 skoMC1 skoMC1 (-1))<=0]/\[[(skoSC1 ((skoMC1 skoMC1 skoMC1 (-2+(skoMC1 (-12))))+(skoSC1 ((skoMC1 skoMC1 skoMC1 (1+(skoMC1 (-6))))+(skoSC1 ((skoMC1 skoMC1 skoMC1)+(skoSC1 ((skoMC1 skoMC1 skoMC1 (-1/12))+(skoSC1 skoMC1 skoMC1 skoMC1 (-1/12))))))))))<=(skoMC1 skoMC1 skoMC1 (2+(skoMC1 (6))))]/\[[(skoSC1 skoMC1 skoMC1 skoMC1 (-2))<=(skoMC1 skoMC1 skoMC1 (2))]/\[[(skoMC1 skoMC1 skoMC1 (-2))<(skoSC1 skoMC1 skoMC1 skoMC1 (2))]/\[[skoSC1<=5/4]/\[[2<=skoMC1]/\[[0<=skoSC1]/\[[0<skoMC1]/\[[0<=skoMC1]/\[[(skoMC1 (-1))<(skoSC1 skoMC1)]/\[[(skoSC1 skoMC1 (-1))<=skoMC1]/\[[(skoSC1 ((skoMC1 (1+(skoMC1 (-3))))+(skoSC1 ((skoMC1 (2+(skoMC1 (3))))+(skoSC1 ((skoMC1 skoMC1)+(skoSC1 skoMC1 (-1/12))))))))<=(skoMC1 (2+(skoMC1 (5))))]/\[(skoSC1 ((skoMC1 (1+(skoMC1 (-3))))+(skoSC1 ((skoMC1 (2+(skoMC1 (3))))+(skoSC1 ((skoMC1 (-1/6+skoMC1))+(skoSC1 skoMC1 (-1/4))))))))<=(skoMC1 (2+(skoMC1 (5))))]]]]]]]]]]]]].

% In SMTLib2 format:
(declare-fun skoSC1 () Real) (declare-fun skoMC1 () Real) (assert (and (<= (* skoMC1 (* skoMC1 (* skoMC1 (- 1.)))) 0.) (and (<= (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (+ (- 2.) (* skoMC1 (- 12.)))))) (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (+ 1. (* skoMC1 (- 6.)))))) (* skoSC1 (+ (* skoMC1 (* skoMC1 skoMC1)) (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (/ (- 1.) 12.)))) (* skoSC1 (* skoMC1 (* skoMC1 (* skoMC1 (/ (- 1.) 12.))))))))))))) (* skoMC1 (* skoMC1 (* skoMC1 (+ 2. (* skoMC1 6.)))))) (and (<= (* skoSC1 (* skoMC1 (* skoMC1 (* skoMC1 (- 2.))))) (* skoMC1 (* skoMC1 (* skoMC1 2.)))) (and (> (* skoSC1 (* skoMC1 (* skoMC1 (* skoMC1 2.)))) (* skoMC1 (* skoMC1 (* skoMC1 (- 2.))))) (and (<= skoSC1 (/ 5. 4.)) (and (<= 2. skoMC1) (and (<= 0. skoSC1) (and (> skoMC1 0.) (and (<= 0. skoMC1) (and (> (* skoSC1 skoMC1) (* skoMC1 (- 1.))) (and (<= (* skoSC1 (* skoMC1 (- 1.))) skoMC1) (and (<= (* skoSC1 (+ (* skoMC1 (+ 1. (* skoMC1 (- 3.)))) (* skoSC1 (+ (* skoMC1 (+ 2. (* skoMC1 3.))) (* skoSC1 (+ (* skoMC1 skoMC1) (* skoSC1 (* skoMC1 (/ (- 1.) 12.))))))))) (* skoMC1 (+ 2. (* skoMC1 5.)))) (<= (* skoSC1 (+ (* skoMC1 (+ 1. (* skoMC1 (- 3.)))) (* skoSC1 (+ (* skoMC1 (+ 2. (* skoMC1 3.))) (* skoSC1 (+ (* skoMC1 (+ (/ (- 1.) 6.) skoMC1)) (* skoSC1 (* skoMC1 (/ (- 1.) 4.))))))))) (* skoMC1 (+ 2. (* skoMC1 5.)))))))))))))))))

% In GRF format:
(sequent " MetiTarski formula " (antecedent (<= (* skoMC1 (* skoMC1 (* skoMC1 (- 1.)))) 0.) (<= (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (+ (- 2.) (* skoMC1 (- 12.)))))) (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (+ 1. (* skoMC1 (- 6.)))))) (* skoSC1 (+ (* skoMC1 (* skoMC1 skoMC1)) (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (/ (- 1.) 12.)))) (* skoSC1 (* skoMC1 (* skoMC1 (* skoMC1 (/ (- 1.) 12.))))))))))))) (* skoMC1 (* skoMC1 (* skoMC1 (+ 2. (* skoMC1 6.)))))) (<= (* skoSC1 (* skoMC1 (* skoMC1 (* skoMC1 (- 2.))))) (* skoMC1 (* skoMC1 (* skoMC1 2.)))) (> (* skoSC1 (* skoMC1 (* skoMC1 (* skoMC1 2.)))) (* skoMC1 (* skoMC1 (* skoMC1 (- 2.))))) (<= skoSC1 (/ 5. 4.)) (<= 2. skoMC1) (<= 0. skoSC1) (> skoMC1 0.) (<= 0. skoMC1) (> (* skoSC1 skoMC1) (* skoMC1 (- 1.))) (<= (* skoSC1 (* skoMC1 (- 1.))) skoMC1) (<= (* skoSC1 (+ (* skoMC1 (+ 1. (* skoMC1 (- 3.)))) (* skoSC1 (+ (* skoMC1 (+ 2. (* skoMC1 3.))) (* skoSC1 (+ (* skoMC1 skoMC1) (* skoSC1 (* skoMC1 (/ (- 1.) 12.))))))))) (* skoMC1 (+ 2. (* skoMC1 5.))))) (succedent (> (* skoSC1 (+ (* skoMC1 (+ 1. (* skoMC1 (- 3.)))) (* skoSC1 (+ (* skoMC1 (+ 2. (* skoMC1 3.))) (* skoSC1 (+ (* skoMC1 (+ (/ (- 1.) 6.) skoMC1)) (* skoSC1 (* skoMC1 (/ (- 1.) 4.))))))))) (* skoMC1 (+ 2. (* skoMC1 5.))))))
-----[end problem]-----

-----[begin problem]-----
% In Mathematica format:
Timing[Resolve[Exists[{skoSC1,skoMC1}, And[skoMC1*skoMC1*skoMC1*-1<=0,skoSC1*(skoMC1*(1+skoMC1*-3)+skoSC1*(skoMC1*(2+skoMC1*3)+skoSC1*(skoMC1*((-1/6)+skoMC1)+skoSC1*skoMC1*(-1/4))))<=skoMC1*(2+skoMC1*5),skoSC1*(skoMC1*(1+skoMC1*-3)+skoSC1*(skoMC1*(2+skoMC1*3)+skoSC1*(skoMC1*skoMC1+skoSC1*skoMC1*(-1/12))))<=skoMC1*(2+skoMC1*5),skoSC1*skoMC1*-1<=skoMC1,skoSC1*skoMC1>skoMC1*-1,0<=skoMC1,skoMC1>0,0<=skoSC1,2<=skoMC1,skoSC1<=(5/4),skoSC1*skoMC1*skoMC1*skoMC1*2>skoMC1*skoMC1*skoMC1*-2,skoSC1*skoMC1*skoMC1*skoMC1*-2<=skoMC1*skoMC1*skoMC1*2,skoSC1*(skoMC1*skoMC1*skoMC1*(-2+skoMC1*-12)+skoSC1*(skoMC1*skoMC1*skoMC1*(1+skoMC1*-6)+skoSC1*(skoMC1*skoMC1*skoMC1+skoSC1*(skoMC1*skoMC1*skoMC1*(-1/12)+skoSC1*skoMC1*skoMC1*skoMC1*(-1/12)))))<=skoMC1*skoMC1*skoMC1*(2+skoMC1*6)]], Reals]]

% In QepcadB format:
(E skoSC1) (E skoMC1) [[(skoMC1 skoMC1 skoMC1 (-1))<=0]/\[[(skoSC1 ((skoMC1 (1+(skoMC1 (-3))))+(skoSC1 ((skoMC1 (2+(skoMC1 (3))))+(skoSC1 ((skoMC1 (-1/6+skoMC1))+(skoSC1 skoMC1 (-1/4))))))))<=(skoMC1 (2+(skoMC1 (5))))]/\[[(skoSC1 ((skoMC1 (1+(skoMC1 (-3))))+(skoSC1 ((skoMC1 (2+(skoMC1 (3))))+(skoSC1 ((skoMC1 skoMC1)+(skoSC1 skoMC1 (-1/12))))))))<=(skoMC1 (2+(skoMC1 (5))))]/\[[(skoSC1 skoMC1 (-1))<=skoMC1]/\[[(skoMC1 (-1))<(skoSC1 skoMC1)]/\[[0<=skoMC1]/\[[0<skoMC1]/\[[0<=skoSC1]/\[[2<=skoMC1]/\[[skoSC1<=5/4]/\[[(skoMC1 skoMC1 skoMC1 (-2))<(skoSC1 skoMC1 skoMC1 skoMC1 (2))]/\[[(skoSC1 skoMC1 skoMC1 skoMC1 (-2))<=(skoMC1 skoMC1 skoMC1 (2))]/\[(skoSC1 ((skoMC1 skoMC1 skoMC1 (-2+(skoMC1 (-12))))+(skoSC1 ((skoMC1 skoMC1 skoMC1 (1+(skoMC1 (-6))))+(skoSC1 ((skoMC1 skoMC1 skoMC1)+(skoSC1 ((skoMC1 skoMC1 skoMC1 (-1/12))+(skoSC1 skoMC1 skoMC1 skoMC1 (-1/12))))))))))<=(skoMC1 skoMC1 skoMC1 (2+(skoMC1 (6))))]]]]]]]]]]]]].

% In SMTLib2 format:
(declare-fun skoSC1 () Real) (declare-fun skoMC1 () Real) (assert (and (<= (* skoMC1 (* skoMC1 (* skoMC1 (- 1.)))) 0.) (and (<= (* skoSC1 (+ (* skoMC1 (+ 1. (* skoMC1 (- 3.)))) (* skoSC1 (+ (* skoMC1 (+ 2. (* skoMC1 3.))) (* skoSC1 (+ (* skoMC1 (+ (/ (- 1.) 6.) skoMC1)) (* skoSC1 (* skoMC1 (/ (- 1.) 4.))))))))) (* skoMC1 (+ 2. (* skoMC1 5.)))) (and (<= (* skoSC1 (+ (* skoMC1 (+ 1. (* skoMC1 (- 3.)))) (* skoSC1 (+ (* skoMC1 (+ 2. (* skoMC1 3.))) (* skoSC1 (+ (* skoMC1 skoMC1) (* skoSC1 (* skoMC1 (/ (- 1.) 12.))))))))) (* skoMC1 (+ 2. (* skoMC1 5.)))) (and (<= (* skoSC1 (* skoMC1 (- 1.))) skoMC1) (and (> (* skoSC1 skoMC1) (* skoMC1 (- 1.))) (and (<= 0. skoMC1) (and (> skoMC1 0.) (and (<= 0. skoSC1) (and (<= 2. skoMC1) (and (<= skoSC1 (/ 5. 4.)) (and (> (* skoSC1 (* skoMC1 (* skoMC1 (* skoMC1 2.)))) (* skoMC1 (* skoMC1 (* skoMC1 (- 2.))))) (and (<= (* skoSC1 (* skoMC1 (* skoMC1 (* skoMC1 (- 2.))))) (* skoMC1 (* skoMC1 (* skoMC1 2.)))) (<= (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (+ (- 2.) (* skoMC1 (- 12.)))))) (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (+ 1. (* skoMC1 (- 6.)))))) (* skoSC1 (+ (* skoMC1 (* skoMC1 skoMC1)) (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (/ (- 1.) 12.)))) (* skoSC1 (* skoMC1 (* skoMC1 (* skoMC1 (/ (- 1.) 12.))))))))))))) (* skoMC1 (* skoMC1 (* skoMC1 (+ 2. (* skoMC1 6.)))))))))))))))))))

% In GRF format:
(sequent " MetiTarski formula " (antecedent (<= (* skoMC1 (* skoMC1 (* skoMC1 (- 1.)))) 0.) (<= (* skoSC1 (+ (* skoMC1 (+ 1. (* skoMC1 (- 3.)))) (* skoSC1 (+ (* skoMC1 (+ 2. (* skoMC1 3.))) (* skoSC1 (+ (* skoMC1 (+ (/ (- 1.) 6.) skoMC1)) (* skoSC1 (* skoMC1 (/ (- 1.) 4.))))))))) (* skoMC1 (+ 2. (* skoMC1 5.)))) (<= (* skoSC1 (+ (* skoMC1 (+ 1. (* skoMC1 (- 3.)))) (* skoSC1 (+ (* skoMC1 (+ 2. (* skoMC1 3.))) (* skoSC1 (+ (* skoMC1 skoMC1) (* skoSC1 (* skoMC1 (/ (- 1.) 12.))))))))) (* skoMC1 (+ 2. (* skoMC1 5.)))) (<= (* skoSC1 (* skoMC1 (- 1.))) skoMC1) (> (* skoSC1 skoMC1) (* skoMC1 (- 1.))) (<= 0. skoMC1) (> skoMC1 0.) (<= 0. skoSC1) (<= 2. skoMC1) (<= skoSC1 (/ 5. 4.)) (> (* skoSC1 (* skoMC1 (* skoMC1 (* skoMC1 2.)))) (* skoMC1 (* skoMC1 (* skoMC1 (- 2.))))) (<= (* skoSC1 (* skoMC1 (* skoMC1 (* skoMC1 (- 2.))))) (* skoMC1 (* skoMC1 (* skoMC1 2.))))) (succedent (> (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (+ (- 2.) (* skoMC1 (- 12.)))))) (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (+ 1. (* skoMC1 (- 6.)))))) (* skoSC1 (+ (* skoMC1 (* skoMC1 skoMC1)) (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (/ (- 1.) 12.)))) (* skoSC1 (* skoMC1 (* skoMC1 (* skoMC1 (/ (- 1.) 12.))))))))))))) (* skoMC1 (* skoMC1 (* skoMC1 (+ 2. (* skoMC1 6.))))))))
-----[end problem]-----

-----[begin problem]-----
% In Mathematica format:
Timing[Resolve[Exists[{skoSC1,skoMC1}, And[skoSC1*skoMC1*skoMC1*skoMC1*-2<=skoMC1*skoMC1*skoMC1*2,skoSC1*(skoMC1*(1+skoMC1*-3)+skoSC1*(skoMC1*(2+skoMC1*3)+skoSC1*(skoMC1*((-1/6)+skoMC1)+skoSC1*skoMC1*(-1/4))))<=skoMC1*(2+skoMC1*5),skoSC1*(skoMC1*(1+skoMC1*-3)+skoSC1*(skoMC1*(2+skoMC1*3)+skoSC1*(skoMC1*skoMC1+skoSC1*skoMC1*(-1/12))))<=skoMC1*(2+skoMC1*5),skoSC1*skoMC1*-1<=skoMC1,skoSC1*skoMC1>skoMC1*-1,0<=skoMC1,skoMC1>0,0<=skoSC1,2<=skoMC1,skoSC1<=(5/4),skoSC1*skoMC1*skoMC1*skoMC1*2>skoMC1*skoMC1*skoMC1*-2,skoSC1*skoMC1*skoMC1*skoMC1*-2<=skoMC1*skoMC1*skoMC1*2,skoSC1*(skoMC1*skoMC1*skoMC1*(-2+skoMC1*-12)+skoSC1*(skoMC1*skoMC1*skoMC1*(1+skoMC1*-6)+skoSC1*(skoMC1*skoMC1*skoMC1+skoSC1*(skoMC1*skoMC1*skoMC1*(-1/12)+skoSC1*skoMC1*skoMC1*skoMC1*(-1/12)))))<=skoMC1*skoMC1*skoMC1*(2+skoMC1*6)]], Reals]]

% In QepcadB format:
(E skoSC1) (E skoMC1) [[(skoSC1 skoMC1 skoMC1 skoMC1 (-2))<=(skoMC1 skoMC1 skoMC1 (2))]/\[[(skoSC1 ((skoMC1 (1+(skoMC1 (-3))))+(skoSC1 ((skoMC1 (2+(skoMC1 (3))))+(skoSC1 ((skoMC1 (-1/6+skoMC1))+(skoSC1 skoMC1 (-1/4))))))))<=(skoMC1 (2+(skoMC1 (5))))]/\[[(skoSC1 ((skoMC1 (1+(skoMC1 (-3))))+(skoSC1 ((skoMC1 (2+(skoMC1 (3))))+(skoSC1 ((skoMC1 skoMC1)+(skoSC1 skoMC1 (-1/12))))))))<=(skoMC1 (2+(skoMC1 (5))))]/\[[(skoSC1 skoMC1 (-1))<=skoMC1]/\[[(skoMC1 (-1))<(skoSC1 skoMC1)]/\[[0<=skoMC1]/\[[0<skoMC1]/\[[0<=skoSC1]/\[[2<=skoMC1]/\[[skoSC1<=5/4]/\[[(skoMC1 skoMC1 skoMC1 (-2))<(skoSC1 skoMC1 skoMC1 skoMC1 (2))]/\[[(skoSC1 skoMC1 skoMC1 skoMC1 (-2))<=(skoMC1 skoMC1 skoMC1 (2))]/\[(skoSC1 ((skoMC1 skoMC1 skoMC1 (-2+(skoMC1 (-12))))+(skoSC1 ((skoMC1 skoMC1 skoMC1 (1+(skoMC1 (-6))))+(skoSC1 ((skoMC1 skoMC1 skoMC1)+(skoSC1 ((skoMC1 skoMC1 skoMC1 (-1/12))+(skoSC1 skoMC1 skoMC1 skoMC1 (-1/12))))))))))<=(skoMC1 skoMC1 skoMC1 (2+(skoMC1 (6))))]]]]]]]]]]]]].

% In SMTLib2 format:
(declare-fun skoSC1 () Real) (declare-fun skoMC1 () Real) (assert (and (<= (* skoSC1 (* skoMC1 (* skoMC1 (* skoMC1 (- 2.))))) (* skoMC1 (* skoMC1 (* skoMC1 2.)))) (and (<= (* skoSC1 (+ (* skoMC1 (+ 1. (* skoMC1 (- 3.)))) (* skoSC1 (+ (* skoMC1 (+ 2. (* skoMC1 3.))) (* skoSC1 (+ (* skoMC1 (+ (/ (- 1.) 6.) skoMC1)) (* skoSC1 (* skoMC1 (/ (- 1.) 4.))))))))) (* skoMC1 (+ 2. (* skoMC1 5.)))) (and (<= (* skoSC1 (+ (* skoMC1 (+ 1. (* skoMC1 (- 3.)))) (* skoSC1 (+ (* skoMC1 (+ 2. (* skoMC1 3.))) (* skoSC1 (+ (* skoMC1 skoMC1) (* skoSC1 (* skoMC1 (/ (- 1.) 12.))))))))) (* skoMC1 (+ 2. (* skoMC1 5.)))) (and (<= (* skoSC1 (* skoMC1 (- 1.))) skoMC1) (and (> (* skoSC1 skoMC1) (* skoMC1 (- 1.))) (and (<= 0. skoMC1) (and (> skoMC1 0.) (and (<= 0. skoSC1) (and (<= 2. skoMC1) (and (<= skoSC1 (/ 5. 4.)) (and (> (* skoSC1 (* skoMC1 (* skoMC1 (* skoMC1 2.)))) (* skoMC1 (* skoMC1 (* skoMC1 (- 2.))))) (and (<= (* skoSC1 (* skoMC1 (* skoMC1 (* skoMC1 (- 2.))))) (* skoMC1 (* skoMC1 (* skoMC1 2.)))) (<= (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (+ (- 2.) (* skoMC1 (- 12.)))))) (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (+ 1. (* skoMC1 (- 6.)))))) (* skoSC1 (+ (* skoMC1 (* skoMC1 skoMC1)) (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (/ (- 1.) 12.)))) (* skoSC1 (* skoMC1 (* skoMC1 (* skoMC1 (/ (- 1.) 12.))))))))))))) (* skoMC1 (* skoMC1 (* skoMC1 (+ 2. (* skoMC1 6.)))))))))))))))))))

% In GRF format:
(sequent " MetiTarski formula " (antecedent (<= (* skoSC1 (* skoMC1 (* skoMC1 (* skoMC1 (- 2.))))) (* skoMC1 (* skoMC1 (* skoMC1 2.)))) (<= (* skoSC1 (+ (* skoMC1 (+ 1. (* skoMC1 (- 3.)))) (* skoSC1 (+ (* skoMC1 (+ 2. (* skoMC1 3.))) (* skoSC1 (+ (* skoMC1 (+ (/ (- 1.) 6.) skoMC1)) (* skoSC1 (* skoMC1 (/ (- 1.) 4.))))))))) (* skoMC1 (+ 2. (* skoMC1 5.)))) (<= (* skoSC1 (+ (* skoMC1 (+ 1. (* skoMC1 (- 3.)))) (* skoSC1 (+ (* skoMC1 (+ 2. (* skoMC1 3.))) (* skoSC1 (+ (* skoMC1 skoMC1) (* skoSC1 (* skoMC1 (/ (- 1.) 12.))))))))) (* skoMC1 (+ 2. (* skoMC1 5.)))) (<= (* skoSC1 (* skoMC1 (- 1.))) skoMC1) (> (* skoSC1 skoMC1) (* skoMC1 (- 1.))) (<= 0. skoMC1) (> skoMC1 0.) (<= 0. skoSC1) (<= 2. skoMC1) (<= skoSC1 (/ 5. 4.)) (> (* skoSC1 (* skoMC1 (* skoMC1 (* skoMC1 2.)))) (* skoMC1 (* skoMC1 (* skoMC1 (- 2.))))) (<= (* skoSC1 (* skoMC1 (* skoMC1 (* skoMC1 (- 2.))))) (* skoMC1 (* skoMC1 (* skoMC1 2.))))) (succedent (> (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (+ (- 2.) (* skoMC1 (- 12.)))))) (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (+ 1. (* skoMC1 (- 6.)))))) (* skoSC1 (+ (* skoMC1 (* skoMC1 skoMC1)) (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (/ (- 1.) 12.)))) (* skoSC1 (* skoMC1 (* skoMC1 (* skoMC1 (/ (- 1.) 12.))))))))))))) (* skoMC1 (* skoMC1 (* skoMC1 (+ 2. (* skoMC1 6.))))))))
-----[end problem]-----

-----[begin problem]-----
% In Mathematica format:
Timing[Resolve[Exists[{skoSC1,skoMC1}, And[skoMC1*skoMC1*skoMC1*-1<=0,skoSC1*(skoMC1*skoMC1*skoMC1*(-2+skoMC1*-12)+skoSC1*(skoMC1*skoMC1*skoMC1*(1+skoMC1*-6)+skoSC1*(skoMC1*skoMC1*skoMC1+skoSC1*(skoMC1*skoMC1*skoMC1*(-1/12)+skoSC1*skoMC1*skoMC1*skoMC1*(-1/12)))))<=skoMC1*skoMC1*skoMC1*(2+skoMC1*6),skoSC1*skoMC1*skoMC1*skoMC1*-2<=skoMC1*skoMC1*skoMC1*2,skoSC1*skoMC1*skoMC1*skoMC1*2>skoMC1*skoMC1*skoMC1*-2,skoSC1<=(5/4),2<=skoMC1,0<=skoSC1,skoMC1>0,0<=skoMC1,skoSC1*skoMC1>skoMC1*-1,skoSC1*skoMC1*-1<=skoMC1,skoSC1*(skoMC1*(1+skoMC1*-3)+skoSC1*(skoMC1*(2+skoMC1*3)+skoSC1*(skoMC1*skoMC1+skoSC1*skoMC1*(-1/12))))<=skoMC1*(2+skoMC1*5),skoSC1*(skoMC1*(1+skoMC1*-3)+skoSC1*(skoMC1*(2+skoMC1*3)+skoSC1*(skoMC1*((-1/6)+skoMC1)+skoSC1*skoMC1*(-1/4))))<=skoMC1*(2+skoMC1*5)]], Reals]]

% In QepcadB format:
(E skoSC1) (E skoMC1) [[(skoMC1 skoMC1 skoMC1 (-1))<=0]/\[[(skoSC1 ((skoMC1 skoMC1 skoMC1 (-2+(skoMC1 (-12))))+(skoSC1 ((skoMC1 skoMC1 skoMC1 (1+(skoMC1 (-6))))+(skoSC1 ((skoMC1 skoMC1 skoMC1)+(skoSC1 ((skoMC1 skoMC1 skoMC1 (-1/12))+(skoSC1 skoMC1 skoMC1 skoMC1 (-1/12))))))))))<=(skoMC1 skoMC1 skoMC1 (2+(skoMC1 (6))))]/\[[(skoSC1 skoMC1 skoMC1 skoMC1 (-2))<=(skoMC1 skoMC1 skoMC1 (2))]/\[[(skoMC1 skoMC1 skoMC1 (-2))<(skoSC1 skoMC1 skoMC1 skoMC1 (2))]/\[[skoSC1<=5/4]/\[[2<=skoMC1]/\[[0<=skoSC1]/\[[0<skoMC1]/\[[0<=skoMC1]/\[[(skoMC1 (-1))<(skoSC1 skoMC1)]/\[[(skoSC1 skoMC1 (-1))<=skoMC1]/\[[(skoSC1 ((skoMC1 (1+(skoMC1 (-3))))+(skoSC1 ((skoMC1 (2+(skoMC1 (3))))+(skoSC1 ((skoMC1 skoMC1)+(skoSC1 skoMC1 (-1/12))))))))<=(skoMC1 (2+(skoMC1 (5))))]/\[(skoSC1 ((skoMC1 (1+(skoMC1 (-3))))+(skoSC1 ((skoMC1 (2+(skoMC1 (3))))+(skoSC1 ((skoMC1 (-1/6+skoMC1))+(skoSC1 skoMC1 (-1/4))))))))<=(skoMC1 (2+(skoMC1 (5))))]]]]]]]]]]]]].

% In SMTLib2 format:
(declare-fun skoSC1 () Real) (declare-fun skoMC1 () Real) (assert (and (<= (* skoMC1 (* skoMC1 (* skoMC1 (- 1.)))) 0.) (and (<= (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (+ (- 2.) (* skoMC1 (- 12.)))))) (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (+ 1. (* skoMC1 (- 6.)))))) (* skoSC1 (+ (* skoMC1 (* skoMC1 skoMC1)) (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (/ (- 1.) 12.)))) (* skoSC1 (* skoMC1 (* skoMC1 (* skoMC1 (/ (- 1.) 12.))))))))))))) (* skoMC1 (* skoMC1 (* skoMC1 (+ 2. (* skoMC1 6.)))))) (and (<= (* skoSC1 (* skoMC1 (* skoMC1 (* skoMC1 (- 2.))))) (* skoMC1 (* skoMC1 (* skoMC1 2.)))) (and (> (* skoSC1 (* skoMC1 (* skoMC1 (* skoMC1 2.)))) (* skoMC1 (* skoMC1 (* skoMC1 (- 2.))))) (and (<= skoSC1 (/ 5. 4.)) (and (<= 2. skoMC1) (and (<= 0. skoSC1) (and (> skoMC1 0.) (and (<= 0. skoMC1) (and (> (* skoSC1 skoMC1) (* skoMC1 (- 1.))) (and (<= (* skoSC1 (* skoMC1 (- 1.))) skoMC1) (and (<= (* skoSC1 (+ (* skoMC1 (+ 1. (* skoMC1 (- 3.)))) (* skoSC1 (+ (* skoMC1 (+ 2. (* skoMC1 3.))) (* skoSC1 (+ (* skoMC1 skoMC1) (* skoSC1 (* skoMC1 (/ (- 1.) 12.))))))))) (* skoMC1 (+ 2. (* skoMC1 5.)))) (<= (* skoSC1 (+ (* skoMC1 (+ 1. (* skoMC1 (- 3.)))) (* skoSC1 (+ (* skoMC1 (+ 2. (* skoMC1 3.))) (* skoSC1 (+ (* skoMC1 (+ (/ (- 1.) 6.) skoMC1)) (* skoSC1 (* skoMC1 (/ (- 1.) 4.))))))))) (* skoMC1 (+ 2. (* skoMC1 5.)))))))))))))))))

% In GRF format:
(sequent " MetiTarski formula " (antecedent (<= (* skoMC1 (* skoMC1 (* skoMC1 (- 1.)))) 0.) (<= (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (+ (- 2.) (* skoMC1 (- 12.)))))) (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (+ 1. (* skoMC1 (- 6.)))))) (* skoSC1 (+ (* skoMC1 (* skoMC1 skoMC1)) (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (/ (- 1.) 12.)))) (* skoSC1 (* skoMC1 (* skoMC1 (* skoMC1 (/ (- 1.) 12.))))))))))))) (* skoMC1 (* skoMC1 (* skoMC1 (+ 2. (* skoMC1 6.)))))) (<= (* skoSC1 (* skoMC1 (* skoMC1 (* skoMC1 (- 2.))))) (* skoMC1 (* skoMC1 (* skoMC1 2.)))) (> (* skoSC1 (* skoMC1 (* skoMC1 (* skoMC1 2.)))) (* skoMC1 (* skoMC1 (* skoMC1 (- 2.))))) (<= skoSC1 (/ 5. 4.)) (<= 2. skoMC1) (<= 0. skoSC1) (> skoMC1 0.) (<= 0. skoMC1) (> (* skoSC1 skoMC1) (* skoMC1 (- 1.))) (<= (* skoSC1 (* skoMC1 (- 1.))) skoMC1) (<= (* skoSC1 (+ (* skoMC1 (+ 1. (* skoMC1 (- 3.)))) (* skoSC1 (+ (* skoMC1 (+ 2. (* skoMC1 3.))) (* skoSC1 (+ (* skoMC1 skoMC1) (* skoSC1 (* skoMC1 (/ (- 1.) 12.))))))))) (* skoMC1 (+ 2. (* skoMC1 5.))))) (succedent (> (* skoSC1 (+ (* skoMC1 (+ 1. (* skoMC1 (- 3.)))) (* skoSC1 (+ (* skoMC1 (+ 2. (* skoMC1 3.))) (* skoSC1 (+ (* skoMC1 (+ (/ (- 1.) 6.) skoMC1)) (* skoSC1 (* skoMC1 (/ (- 1.) 4.))))))))) (* skoMC1 (+ 2. (* skoMC1 5.))))))
-----[end problem]-----

-----[begin problem]-----
% In Mathematica format:
Timing[Resolve[Exists[{skoSC1,skoMC1}, And[skoSC1*skoMC1*skoMC1*skoMC1*-2<=skoMC1*skoMC1*skoMC1*2,skoMC1*skoMC1*skoMC1*-1<=0,skoSC1*(skoMC1*skoMC1*skoMC1*(-2+skoMC1*-12)+skoSC1*(skoMC1*skoMC1*skoMC1*(1+skoMC1*-6)+skoSC1*(skoMC1*skoMC1*skoMC1+skoSC1*(skoMC1*skoMC1*skoMC1*(-1/12)+skoSC1*skoMC1*skoMC1*skoMC1*(-1/12)))))<=skoMC1*skoMC1*skoMC1*(2+skoMC1*6),skoSC1*skoMC1*skoMC1*skoMC1*-2<=skoMC1*skoMC1*skoMC1*2,skoSC1*skoMC1*skoMC1*skoMC1*2>skoMC1*skoMC1*skoMC1*-2,skoSC1<=(5/4),2<=skoMC1,0<=skoSC1,skoMC1>0,0<=skoMC1,skoSC1*skoMC1>skoMC1*-1,skoSC1*skoMC1*-1<=skoMC1,skoSC1*(skoMC1*(1+skoMC1*-3)+skoSC1*(skoMC1*(2+skoMC1*3)+skoSC1*(skoMC1*skoMC1+skoSC1*skoMC1*(-1/12))))<=skoMC1*(2+skoMC1*5),skoSC1*(skoMC1*(1+skoMC1*-3)+skoSC1*(skoMC1*(2+skoMC1*3)+skoSC1*(skoMC1*((-1/6)+skoMC1)+skoSC1*skoMC1*(-1/4))))<=skoMC1*(2+skoMC1*5)]], Reals]]

% In QepcadB format:
(E skoSC1) (E skoMC1) [[(skoSC1 skoMC1 skoMC1 skoMC1 (-2))<=(skoMC1 skoMC1 skoMC1 (2))]/\[[(skoMC1 skoMC1 skoMC1 (-1))<=0]/\[[(skoSC1 ((skoMC1 skoMC1 skoMC1 (-2+(skoMC1 (-12))))+(skoSC1 ((skoMC1 skoMC1 skoMC1 (1+(skoMC1 (-6))))+(skoSC1 ((skoMC1 skoMC1 skoMC1)+(skoSC1 ((skoMC1 skoMC1 skoMC1 (-1/12))+(skoSC1 skoMC1 skoMC1 skoMC1 (-1/12))))))))))<=(skoMC1 skoMC1 skoMC1 (2+(skoMC1 (6))))]/\[[(skoSC1 skoMC1 skoMC1 skoMC1 (-2))<=(skoMC1 skoMC1 skoMC1 (2))]/\[[(skoMC1 skoMC1 skoMC1 (-2))<(skoSC1 skoMC1 skoMC1 skoMC1 (2))]/\[[skoSC1<=5/4]/\[[2<=skoMC1]/\[[0<=skoSC1]/\[[0<skoMC1]/\[[0<=skoMC1]/\[[(skoMC1 (-1))<(skoSC1 skoMC1)]/\[[(skoSC1 skoMC1 (-1))<=skoMC1]/\[[(skoSC1 ((skoMC1 (1+(skoMC1 (-3))))+(skoSC1 ((skoMC1 (2+(skoMC1 (3))))+(skoSC1 ((skoMC1 skoMC1)+(skoSC1 skoMC1 (-1/12))))))))<=(skoMC1 (2+(skoMC1 (5))))]/\[(skoSC1 ((skoMC1 (1+(skoMC1 (-3))))+(skoSC1 ((skoMC1 (2+(skoMC1 (3))))+(skoSC1 ((skoMC1 (-1/6+skoMC1))+(skoSC1 skoMC1 (-1/4))))))))<=(skoMC1 (2+(skoMC1 (5))))]]]]]]]]]]]]]].

% In SMTLib2 format:
(declare-fun skoSC1 () Real) (declare-fun skoMC1 () Real) (assert (and (<= (* skoSC1 (* skoMC1 (* skoMC1 (* skoMC1 (- 2.))))) (* skoMC1 (* skoMC1 (* skoMC1 2.)))) (and (<= (* skoMC1 (* skoMC1 (* skoMC1 (- 1.)))) 0.) (and (<= (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (+ (- 2.) (* skoMC1 (- 12.)))))) (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (+ 1. (* skoMC1 (- 6.)))))) (* skoSC1 (+ (* skoMC1 (* skoMC1 skoMC1)) (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (/ (- 1.) 12.)))) (* skoSC1 (* skoMC1 (* skoMC1 (* skoMC1 (/ (- 1.) 12.))))))))))))) (* skoMC1 (* skoMC1 (* skoMC1 (+ 2. (* skoMC1 6.)))))) (and (<= (* skoSC1 (* skoMC1 (* skoMC1 (* skoMC1 (- 2.))))) (* skoMC1 (* skoMC1 (* skoMC1 2.)))) (and (> (* skoSC1 (* skoMC1 (* skoMC1 (* skoMC1 2.)))) (* skoMC1 (* skoMC1 (* skoMC1 (- 2.))))) (and (<= skoSC1 (/ 5. 4.)) (and (<= 2. skoMC1) (and (<= 0. skoSC1) (and (> skoMC1 0.) (and (<= 0. skoMC1) (and (> (* skoSC1 skoMC1) (* skoMC1 (- 1.))) (and (<= (* skoSC1 (* skoMC1 (- 1.))) skoMC1) (and (<= (* skoSC1 (+ (* skoMC1 (+ 1. (* skoMC1 (- 3.)))) (* skoSC1 (+ (* skoMC1 (+ 2. (* skoMC1 3.))) (* skoSC1 (+ (* skoMC1 skoMC1) (* skoSC1 (* skoMC1 (/ (- 1.) 12.))))))))) (* skoMC1 (+ 2. (* skoMC1 5.)))) (<= (* skoSC1 (+ (* skoMC1 (+ 1. (* skoMC1 (- 3.)))) (* skoSC1 (+ (* skoMC1 (+ 2. (* skoMC1 3.))) (* skoSC1 (+ (* skoMC1 (+ (/ (- 1.) 6.) skoMC1)) (* skoSC1 (* skoMC1 (/ (- 1.) 4.))))))))) (* skoMC1 (+ 2. (* skoMC1 5.))))))))))))))))))

% In GRF format:
(sequent " MetiTarski formula " (antecedent (<= (* skoSC1 (* skoMC1 (* skoMC1 (* skoMC1 (- 2.))))) (* skoMC1 (* skoMC1 (* skoMC1 2.)))) (<= (* skoMC1 (* skoMC1 (* skoMC1 (- 1.)))) 0.) (<= (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (+ (- 2.) (* skoMC1 (- 12.)))))) (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (+ 1. (* skoMC1 (- 6.)))))) (* skoSC1 (+ (* skoMC1 (* skoMC1 skoMC1)) (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (/ (- 1.) 12.)))) (* skoSC1 (* skoMC1 (* skoMC1 (* skoMC1 (/ (- 1.) 12.))))))))))))) (* skoMC1 (* skoMC1 (* skoMC1 (+ 2. (* skoMC1 6.)))))) (<= (* skoSC1 (* skoMC1 (* skoMC1 (* skoMC1 (- 2.))))) (* skoMC1 (* skoMC1 (* skoMC1 2.)))) (> (* skoSC1 (* skoMC1 (* skoMC1 (* skoMC1 2.)))) (* skoMC1 (* skoMC1 (* skoMC1 (- 2.))))) (<= skoSC1 (/ 5. 4.)) (<= 2. skoMC1) (<= 0. skoSC1) (> skoMC1 0.) (<= 0. skoMC1) (> (* skoSC1 skoMC1) (* skoMC1 (- 1.))) (<= (* skoSC1 (* skoMC1 (- 1.))) skoMC1) (<= (* skoSC1 (+ (* skoMC1 (+ 1. (* skoMC1 (- 3.)))) (* skoSC1 (+ (* skoMC1 (+ 2. (* skoMC1 3.))) (* skoSC1 (+ (* skoMC1 skoMC1) (* skoSC1 (* skoMC1 (/ (- 1.) 12.))))))))) (* skoMC1 (+ 2. (* skoMC1 5.))))) (succedent (> (* skoSC1 (+ (* skoMC1 (+ 1. (* skoMC1 (- 3.)))) (* skoSC1 (+ (* skoMC1 (+ 2. (* skoMC1 3.))) (* skoSC1 (+ (* skoMC1 (+ (/ (- 1.) 6.) skoMC1)) (* skoSC1 (* skoMC1 (/ (- 1.) 4.))))))))) (* skoMC1 (+ 2. (* skoMC1 5.))))))
-----[end problem]-----

-----[begin problem]-----
% In Mathematica format:
Timing[Resolve[Exists[{skoSC1,skoMC1}, And[skoSC1>0,skoSC1*(skoMC1*(1+skoMC1*-3)+skoSC1*(skoMC1*(2+skoMC1*3)+skoSC1*(skoMC1*((-1/6)+skoMC1)+skoSC1*skoMC1*(-1/4))))<=skoMC1*(2+skoMC1*5),skoSC1*(skoMC1*(1+skoMC1*-3)+skoSC1*(skoMC1*(2+skoMC1*3)+skoSC1*(skoMC1*skoMC1+skoSC1*skoMC1*(-1/12))))<=skoMC1*(2+skoMC1*5),skoSC1*skoMC1*-1<=skoMC1,skoSC1*skoMC1>skoMC1*-1,0<=skoMC1,skoMC1>0,0<=skoSC1,2<=skoMC1,skoSC1<=(5/4),skoSC1*skoMC1*skoMC1*skoMC1*2>skoMC1*skoMC1*skoMC1*-2,skoSC1*skoMC1*skoMC1*skoMC1*-2<=skoMC1*skoMC1*skoMC1*2,skoSC1*(skoMC1*skoMC1*skoMC1*(-2+skoMC1*-12)+skoSC1*(skoMC1*skoMC1*skoMC1*(1+skoMC1*-6)+skoSC1*(skoMC1*skoMC1*skoMC1+skoSC1*(skoMC1*skoMC1*skoMC1*(-1/12)+skoSC1*skoMC1*skoMC1*skoMC1*(-1/12)))))<=skoMC1*skoMC1*skoMC1*(2+skoMC1*6),skoMC1*skoMC1*skoMC1*-1<=0]], Reals]]

% In QepcadB format:
(E skoSC1) (E skoMC1) [[0<skoSC1]/\[[(skoSC1 ((skoMC1 (1+(skoMC1 (-3))))+(skoSC1 ((skoMC1 (2+(skoMC1 (3))))+(skoSC1 ((skoMC1 (-1/6+skoMC1))+(skoSC1 skoMC1 (-1/4))))))))<=(skoMC1 (2+(skoMC1 (5))))]/\[[(skoSC1 ((skoMC1 (1+(skoMC1 (-3))))+(skoSC1 ((skoMC1 (2+(skoMC1 (3))))+(skoSC1 ((skoMC1 skoMC1)+(skoSC1 skoMC1 (-1/12))))))))<=(skoMC1 (2+(skoMC1 (5))))]/\[[(skoSC1 skoMC1 (-1))<=skoMC1]/\[[(skoMC1 (-1))<(skoSC1 skoMC1)]/\[[0<=skoMC1]/\[[0<skoMC1]/\[[0<=skoSC1]/\[[2<=skoMC1]/\[[skoSC1<=5/4]/\[[(skoMC1 skoMC1 skoMC1 (-2))<(skoSC1 skoMC1 skoMC1 skoMC1 (2))]/\[[(skoSC1 skoMC1 skoMC1 skoMC1 (-2))<=(skoMC1 skoMC1 skoMC1 (2))]/\[[(skoSC1 ((skoMC1 skoMC1 skoMC1 (-2+(skoMC1 (-12))))+(skoSC1 ((skoMC1 skoMC1 skoMC1 (1+(skoMC1 (-6))))+(skoSC1 ((skoMC1 skoMC1 skoMC1)+(skoSC1 ((skoMC1 skoMC1 skoMC1 (-1/12))+(skoSC1 skoMC1 skoMC1 skoMC1 (-1/12))))))))))<=(skoMC1 skoMC1 skoMC1 (2+(skoMC1 (6))))]/\[(skoMC1 skoMC1 skoMC1 (-1))<=0]]]]]]]]]]]]]].

% In SMTLib2 format:
(declare-fun skoSC1 () Real) (declare-fun skoMC1 () Real) (assert (and (> skoSC1 0.) (and (<= (* skoSC1 (+ (* skoMC1 (+ 1. (* skoMC1 (- 3.)))) (* skoSC1 (+ (* skoMC1 (+ 2. (* skoMC1 3.))) (* skoSC1 (+ (* skoMC1 (+ (/ (- 1.) 6.) skoMC1)) (* skoSC1 (* skoMC1 (/ (- 1.) 4.))))))))) (* skoMC1 (+ 2. (* skoMC1 5.)))) (and (<= (* skoSC1 (+ (* skoMC1 (+ 1. (* skoMC1 (- 3.)))) (* skoSC1 (+ (* skoMC1 (+ 2. (* skoMC1 3.))) (* skoSC1 (+ (* skoMC1 skoMC1) (* skoSC1 (* skoMC1 (/ (- 1.) 12.))))))))) (* skoMC1 (+ 2. (* skoMC1 5.)))) (and (<= (* skoSC1 (* skoMC1 (- 1.))) skoMC1) (and (> (* skoSC1 skoMC1) (* skoMC1 (- 1.))) (and (<= 0. skoMC1) (and (> skoMC1 0.) (and (<= 0. skoSC1) (and (<= 2. skoMC1) (and (<= skoSC1 (/ 5. 4.)) (and (> (* skoSC1 (* skoMC1 (* skoMC1 (* skoMC1 2.)))) (* skoMC1 (* skoMC1 (* skoMC1 (- 2.))))) (and (<= (* skoSC1 (* skoMC1 (* skoMC1 (* skoMC1 (- 2.))))) (* skoMC1 (* skoMC1 (* skoMC1 2.)))) (and (<= (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (+ (- 2.) (* skoMC1 (- 12.)))))) (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (+ 1. (* skoMC1 (- 6.)))))) (* skoSC1 (+ (* skoMC1 (* skoMC1 skoMC1)) (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (/ (- 1.) 12.)))) (* skoSC1 (* skoMC1 (* skoMC1 (* skoMC1 (/ (- 1.) 12.))))))))))))) (* skoMC1 (* skoMC1 (* skoMC1 (+ 2. (* skoMC1 6.)))))) (<= (* skoMC1 (* skoMC1 (* skoMC1 (- 1.)))) 0.)))))))))))))))

% In GRF format:
(sequent " MetiTarski formula " (antecedent (> skoSC1 0.) (<= (* skoSC1 (+ (* skoMC1 (+ 1. (* skoMC1 (- 3.)))) (* skoSC1 (+ (* skoMC1 (+ 2. (* skoMC1 3.))) (* skoSC1 (+ (* skoMC1 (+ (/ (- 1.) 6.) skoMC1)) (* skoSC1 (* skoMC1 (/ (- 1.) 4.))))))))) (* skoMC1 (+ 2. (* skoMC1 5.)))) (<= (* skoSC1 (+ (* skoMC1 (+ 1. (* skoMC1 (- 3.)))) (* skoSC1 (+ (* skoMC1 (+ 2. (* skoMC1 3.))) (* skoSC1 (+ (* skoMC1 skoMC1) (* skoSC1 (* skoMC1 (/ (- 1.) 12.))))))))) (* skoMC1 (+ 2. (* skoMC1 5.)))) (<= (* skoSC1 (* skoMC1 (- 1.))) skoMC1) (> (* skoSC1 skoMC1) (* skoMC1 (- 1.))) (<= 0. skoMC1) (> skoMC1 0.) (<= 0. skoSC1) (<= 2. skoMC1) (<= skoSC1 (/ 5. 4.)) (> (* skoSC1 (* skoMC1 (* skoMC1 (* skoMC1 2.)))) (* skoMC1 (* skoMC1 (* skoMC1 (- 2.))))) (<= (* skoSC1 (* skoMC1 (* skoMC1 (* skoMC1 (- 2.))))) (* skoMC1 (* skoMC1 (* skoMC1 2.)))) (<= (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (+ (- 2.) (* skoMC1 (- 12.)))))) (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (+ 1. (* skoMC1 (- 6.)))))) (* skoSC1 (+ (* skoMC1 (* skoMC1 skoMC1)) (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (/ (- 1.) 12.)))) (* skoSC1 (* skoMC1 (* skoMC1 (* skoMC1 (/ (- 1.) 12.))))))))))))) (* skoMC1 (* skoMC1 (* skoMC1 (+ 2. (* skoMC1 6.))))))) (succedent (> (* skoMC1 (* skoMC1 (* skoMC1 (- 1.)))) 0.)))
-----[end problem]-----

-----[begin problem]-----
% In Mathematica format:
Timing[Resolve[Exists[{skoSC1,skoMC1}, And[skoSC1*skoMC1*-1<=skoMC1,skoSC1*skoMC1>skoMC1*-1,skoSC1*(skoMC1*(1+skoMC1*-3)+skoSC1*(skoMC1*(2+skoMC1*3)+skoSC1*(skoMC1*((-1/6)+skoMC1)+skoSC1*skoMC1*(-1/4))))<=skoMC1*(2+skoMC1*5),skoSC1*(skoMC1*(1+skoMC1*-3)+skoSC1*(skoMC1*(2+skoMC1*3)+skoSC1*(skoMC1*skoMC1+skoSC1*skoMC1*(-1/12))))<=skoMC1*(2+skoMC1*5),skoSC1*skoMC1*-1<=skoMC1,skoSC1*skoMC1>skoMC1*-1,0<=skoMC1,skoMC1>0,0<=skoSC1,2<=skoMC1,skoSC1<=(5/4),skoSC1*skoMC1*skoMC1*skoMC1*2>skoMC1*skoMC1*skoMC1*-2,skoSC1*skoMC1*skoMC1*skoMC1*-2<=skoMC1*skoMC1*skoMC1*2,skoSC1*(skoMC1*skoMC1*skoMC1*(-2+skoMC1*-12)+skoSC1*(skoMC1*skoMC1*skoMC1*(1+skoMC1*-6)+skoSC1*(skoMC1*skoMC1*skoMC1+skoSC1*(skoMC1*skoMC1*skoMC1*(-1/12)+skoSC1*skoMC1*skoMC1*skoMC1*(-1/12)))))<=skoMC1*skoMC1*skoMC1*(2+skoMC1*6),skoMC1*skoMC1*skoMC1*-1<=0]], Reals]]

% In QepcadB format:
(E skoSC1) (E skoMC1) [[(skoSC1 skoMC1 (-1))<=skoMC1]/\[[(skoMC1 (-1))<(skoSC1 skoMC1)]/\[[(skoSC1 ((skoMC1 (1+(skoMC1 (-3))))+(skoSC1 ((skoMC1 (2+(skoMC1 (3))))+(skoSC1 ((skoMC1 (-1/6+skoMC1))+(skoSC1 skoMC1 (-1/4))))))))<=(skoMC1 (2+(skoMC1 (5))))]/\[[(skoSC1 ((skoMC1 (1+(skoMC1 (-3))))+(skoSC1 ((skoMC1 (2+(skoMC1 (3))))+(skoSC1 ((skoMC1 skoMC1)+(skoSC1 skoMC1 (-1/12))))))))<=(skoMC1 (2+(skoMC1 (5))))]/\[[(skoSC1 skoMC1 (-1))<=skoMC1]/\[[(skoMC1 (-1))<(skoSC1 skoMC1)]/\[[0<=skoMC1]/\[[0<skoMC1]/\[[0<=skoSC1]/\[[2<=skoMC1]/\[[skoSC1<=5/4]/\[[(skoMC1 skoMC1 skoMC1 (-2))<(skoSC1 skoMC1 skoMC1 skoMC1 (2))]/\[[(skoSC1 skoMC1 skoMC1 skoMC1 (-2))<=(skoMC1 skoMC1 skoMC1 (2))]/\[[(skoSC1 ((skoMC1 skoMC1 skoMC1 (-2+(skoMC1 (-12))))+(skoSC1 ((skoMC1 skoMC1 skoMC1 (1+(skoMC1 (-6))))+(skoSC1 ((skoMC1 skoMC1 skoMC1)+(skoSC1 ((skoMC1 skoMC1 skoMC1 (-1/12))+(skoSC1 skoMC1 skoMC1 skoMC1 (-1/12))))))))))<=(skoMC1 skoMC1 skoMC1 (2+(skoMC1 (6))))]/\[(skoMC1 skoMC1 skoMC1 (-1))<=0]]]]]]]]]]]]]]].

% In SMTLib2 format:
(declare-fun skoSC1 () Real) (declare-fun skoMC1 () Real) (assert (and (<= (* skoSC1 (* skoMC1 (- 1.))) skoMC1) (and (> (* skoSC1 skoMC1) (* skoMC1 (- 1.))) (and (<= (* skoSC1 (+ (* skoMC1 (+ 1. (* skoMC1 (- 3.)))) (* skoSC1 (+ (* skoMC1 (+ 2. (* skoMC1 3.))) (* skoSC1 (+ (* skoMC1 (+ (/ (- 1.) 6.) skoMC1)) (* skoSC1 (* skoMC1 (/ (- 1.) 4.))))))))) (* skoMC1 (+ 2. (* skoMC1 5.)))) (and (<= (* skoSC1 (+ (* skoMC1 (+ 1. (* skoMC1 (- 3.)))) (* skoSC1 (+ (* skoMC1 (+ 2. (* skoMC1 3.))) (* skoSC1 (+ (* skoMC1 skoMC1) (* skoSC1 (* skoMC1 (/ (- 1.) 12.))))))))) (* skoMC1 (+ 2. (* skoMC1 5.)))) (and (<= (* skoSC1 (* skoMC1 (- 1.))) skoMC1) (and (> (* skoSC1 skoMC1) (* skoMC1 (- 1.))) (and (<= 0. skoMC1) (and (> skoMC1 0.) (and (<= 0. skoSC1) (and (<= 2. skoMC1) (and (<= skoSC1 (/ 5. 4.)) (and (> (* skoSC1 (* skoMC1 (* skoMC1 (* skoMC1 2.)))) (* skoMC1 (* skoMC1 (* skoMC1 (- 2.))))) (and (<= (* skoSC1 (* skoMC1 (* skoMC1 (* skoMC1 (- 2.))))) (* skoMC1 (* skoMC1 (* skoMC1 2.)))) (and (<= (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (+ (- 2.) (* skoMC1 (- 12.)))))) (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (+ 1. (* skoMC1 (- 6.)))))) (* skoSC1 (+ (* skoMC1 (* skoMC1 skoMC1)) (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (/ (- 1.) 12.)))) (* skoSC1 (* skoMC1 (* skoMC1 (* skoMC1 (/ (- 1.) 12.))))))))))))) (* skoMC1 (* skoMC1 (* skoMC1 (+ 2. (* skoMC1 6.)))))) (<= (* skoMC1 (* skoMC1 (* skoMC1 (- 1.)))) 0.))))))))))))))))

% In GRF format:
(sequent " MetiTarski formula " (antecedent (<= (* skoSC1 (* skoMC1 (- 1.))) skoMC1) (> (* skoSC1 skoMC1) (* skoMC1 (- 1.))) (<= (* skoSC1 (+ (* skoMC1 (+ 1. (* skoMC1 (- 3.)))) (* skoSC1 (+ (* skoMC1 (+ 2. (* skoMC1 3.))) (* skoSC1 (+ (* skoMC1 (+ (/ (- 1.) 6.) skoMC1)) (* skoSC1 (* skoMC1 (/ (- 1.) 4.))))))))) (* skoMC1 (+ 2. (* skoMC1 5.)))) (<= (* skoSC1 (+ (* skoMC1 (+ 1. (* skoMC1 (- 3.)))) (* skoSC1 (+ (* skoMC1 (+ 2. (* skoMC1 3.))) (* skoSC1 (+ (* skoMC1 skoMC1) (* skoSC1 (* skoMC1 (/ (- 1.) 12.))))))))) (* skoMC1 (+ 2. (* skoMC1 5.)))) (<= (* skoSC1 (* skoMC1 (- 1.))) skoMC1) (> (* skoSC1 skoMC1) (* skoMC1 (- 1.))) (<= 0. skoMC1) (> skoMC1 0.) (<= 0. skoSC1) (<= 2. skoMC1) (<= skoSC1 (/ 5. 4.)) (> (* skoSC1 (* skoMC1 (* skoMC1 (* skoMC1 2.)))) (* skoMC1 (* skoMC1 (* skoMC1 (- 2.))))) (<= (* skoSC1 (* skoMC1 (* skoMC1 (* skoMC1 (- 2.))))) (* skoMC1 (* skoMC1 (* skoMC1 2.)))) (<= (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (+ (- 2.) (* skoMC1 (- 12.)))))) (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (+ 1. (* skoMC1 (- 6.)))))) (* skoSC1 (+ (* skoMC1 (* skoMC1 skoMC1)) (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (/ (- 1.) 12.)))) (* skoSC1 (* skoMC1 (* skoMC1 (* skoMC1 (/ (- 1.) 12.))))))))))))) (* skoMC1 (* skoMC1 (* skoMC1 (+ 2. (* skoMC1 6.))))))) (succedent (> (* skoMC1 (* skoMC1 (* skoMC1 (- 1.)))) 0.)))
-----[end problem]-----

-----[begin problem]-----
% In Mathematica format:
Timing[Resolve[Exists[{skoSC1,skoMC1}, And[skoSC1*skoMC1*-1<=skoMC1,skoSC1*(skoMC1*(1+skoMC1*-3)+skoSC1*(skoMC1*(2+skoMC1*3)+skoSC1*(skoMC1*((-1/6)+skoMC1)+skoSC1*skoMC1*(-1/4))))<=skoMC1*(2+skoMC1*5),skoSC1*(skoMC1*(1+skoMC1*-3)+skoSC1*(skoMC1*(2+skoMC1*3)+skoSC1*(skoMC1*skoMC1+skoSC1*skoMC1*(-1/12))))<=skoMC1*(2+skoMC1*5),skoSC1*skoMC1*-1<=skoMC1,skoSC1*skoMC1>skoMC1*-1,0<=skoMC1,skoMC1>0,0<=skoSC1,2<=skoMC1,skoSC1<=(5/4),skoSC1*skoMC1*skoMC1*skoMC1*2>skoMC1*skoMC1*skoMC1*-2,skoSC1*skoMC1*skoMC1*skoMC1*-2<=skoMC1*skoMC1*skoMC1*2,skoSC1*(skoMC1*skoMC1*skoMC1*(-2+skoMC1*-12)+skoSC1*(skoMC1*skoMC1*skoMC1*(1+skoMC1*-6)+skoSC1*(skoMC1*skoMC1*skoMC1+skoSC1*(skoMC1*skoMC1*skoMC1*(-1/12)+skoSC1*skoMC1*skoMC1*skoMC1*(-1/12)))))<=skoMC1*skoMC1*skoMC1*(2+skoMC1*6),skoMC1*skoMC1*skoMC1*-1<=0]], Reals]]

% In QepcadB format:
(E skoSC1) (E skoMC1) [[(skoSC1 skoMC1 (-1))<=skoMC1]/\[[(skoSC1 ((skoMC1 (1+(skoMC1 (-3))))+(skoSC1 ((skoMC1 (2+(skoMC1 (3))))+(skoSC1 ((skoMC1 (-1/6+skoMC1))+(skoSC1 skoMC1 (-1/4))))))))<=(skoMC1 (2+(skoMC1 (5))))]/\[[(skoSC1 ((skoMC1 (1+(skoMC1 (-3))))+(skoSC1 ((skoMC1 (2+(skoMC1 (3))))+(skoSC1 ((skoMC1 skoMC1)+(skoSC1 skoMC1 (-1/12))))))))<=(skoMC1 (2+(skoMC1 (5))))]/\[[(skoSC1 skoMC1 (-1))<=skoMC1]/\[[(skoMC1 (-1))<(skoSC1 skoMC1)]/\[[0<=skoMC1]/\[[0<skoMC1]/\[[0<=skoSC1]/\[[2<=skoMC1]/\[[skoSC1<=5/4]/\[[(skoMC1 skoMC1 skoMC1 (-2))<(skoSC1 skoMC1 skoMC1 skoMC1 (2))]/\[[(skoSC1 skoMC1 skoMC1 skoMC1 (-2))<=(skoMC1 skoMC1 skoMC1 (2))]/\[[(skoSC1 ((skoMC1 skoMC1 skoMC1 (-2+(skoMC1 (-12))))+(skoSC1 ((skoMC1 skoMC1 skoMC1 (1+(skoMC1 (-6))))+(skoSC1 ((skoMC1 skoMC1 skoMC1)+(skoSC1 ((skoMC1 skoMC1 skoMC1 (-1/12))+(skoSC1 skoMC1 skoMC1 skoMC1 (-1/12))))))))))<=(skoMC1 skoMC1 skoMC1 (2+(skoMC1 (6))))]/\[(skoMC1 skoMC1 skoMC1 (-1))<=0]]]]]]]]]]]]]].

% In SMTLib2 format:
(declare-fun skoSC1 () Real) (declare-fun skoMC1 () Real) (assert (and (<= (* skoSC1 (* skoMC1 (- 1.))) skoMC1) (and (<= (* skoSC1 (+ (* skoMC1 (+ 1. (* skoMC1 (- 3.)))) (* skoSC1 (+ (* skoMC1 (+ 2. (* skoMC1 3.))) (* skoSC1 (+ (* skoMC1 (+ (/ (- 1.) 6.) skoMC1)) (* skoSC1 (* skoMC1 (/ (- 1.) 4.))))))))) (* skoMC1 (+ 2. (* skoMC1 5.)))) (and (<= (* skoSC1 (+ (* skoMC1 (+ 1. (* skoMC1 (- 3.)))) (* skoSC1 (+ (* skoMC1 (+ 2. (* skoMC1 3.))) (* skoSC1 (+ (* skoMC1 skoMC1) (* skoSC1 (* skoMC1 (/ (- 1.) 12.))))))))) (* skoMC1 (+ 2. (* skoMC1 5.)))) (and (<= (* skoSC1 (* skoMC1 (- 1.))) skoMC1) (and (> (* skoSC1 skoMC1) (* skoMC1 (- 1.))) (and (<= 0. skoMC1) (and (> skoMC1 0.) (and (<= 0. skoSC1) (and (<= 2. skoMC1) (and (<= skoSC1 (/ 5. 4.)) (and (> (* skoSC1 (* skoMC1 (* skoMC1 (* skoMC1 2.)))) (* skoMC1 (* skoMC1 (* skoMC1 (- 2.))))) (and (<= (* skoSC1 (* skoMC1 (* skoMC1 (* skoMC1 (- 2.))))) (* skoMC1 (* skoMC1 (* skoMC1 2.)))) (and (<= (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (+ (- 2.) (* skoMC1 (- 12.)))))) (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (+ 1. (* skoMC1 (- 6.)))))) (* skoSC1 (+ (* skoMC1 (* skoMC1 skoMC1)) (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (/ (- 1.) 12.)))) (* skoSC1 (* skoMC1 (* skoMC1 (* skoMC1 (/ (- 1.) 12.))))))))))))) (* skoMC1 (* skoMC1 (* skoMC1 (+ 2. (* skoMC1 6.)))))) (<= (* skoMC1 (* skoMC1 (* skoMC1 (- 1.)))) 0.)))))))))))))))

% In GRF format:
(sequent " MetiTarski formula " (antecedent (<= (* skoSC1 (* skoMC1 (- 1.))) skoMC1) (<= (* skoSC1 (+ (* skoMC1 (+ 1. (* skoMC1 (- 3.)))) (* skoSC1 (+ (* skoMC1 (+ 2. (* skoMC1 3.))) (* skoSC1 (+ (* skoMC1 (+ (/ (- 1.) 6.) skoMC1)) (* skoSC1 (* skoMC1 (/ (- 1.) 4.))))))))) (* skoMC1 (+ 2. (* skoMC1 5.)))) (<= (* skoSC1 (+ (* skoMC1 (+ 1. (* skoMC1 (- 3.)))) (* skoSC1 (+ (* skoMC1 (+ 2. (* skoMC1 3.))) (* skoSC1 (+ (* skoMC1 skoMC1) (* skoSC1 (* skoMC1 (/ (- 1.) 12.))))))))) (* skoMC1 (+ 2. (* skoMC1 5.)))) (<= (* skoSC1 (* skoMC1 (- 1.))) skoMC1) (> (* skoSC1 skoMC1) (* skoMC1 (- 1.))) (<= 0. skoMC1) (> skoMC1 0.) (<= 0. skoSC1) (<= 2. skoMC1) (<= skoSC1 (/ 5. 4.)) (> (* skoSC1 (* skoMC1 (* skoMC1 (* skoMC1 2.)))) (* skoMC1 (* skoMC1 (* skoMC1 (- 2.))))) (<= (* skoSC1 (* skoMC1 (* skoMC1 (* skoMC1 (- 2.))))) (* skoMC1 (* skoMC1 (* skoMC1 2.)))) (<= (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (+ (- 2.) (* skoMC1 (- 12.)))))) (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (+ 1. (* skoMC1 (- 6.)))))) (* skoSC1 (+ (* skoMC1 (* skoMC1 skoMC1)) (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (/ (- 1.) 12.)))) (* skoSC1 (* skoMC1 (* skoMC1 (* skoMC1 (/ (- 1.) 12.))))))))))))) (* skoMC1 (* skoMC1 (* skoMC1 (+ 2. (* skoMC1 6.))))))) (succedent (> (* skoMC1 (* skoMC1 (* skoMC1 (- 1.)))) 0.)))
-----[end problem]-----

-----[begin problem]-----
% In Mathematica format:
Timing[Resolve[Exists[{skoSC1,skoMC1}, And[0<=skoMC1,skoSC1*(skoMC1*(1+skoMC1*-3)+skoSC1*(skoMC1*(2+skoMC1*3)+skoSC1*(skoMC1*((-1/6)+skoMC1)+skoSC1*skoMC1*(-1/4))))<=skoMC1*(2+skoMC1*5),skoSC1*(skoMC1*(1+skoMC1*-3)+skoSC1*(skoMC1*(2+skoMC1*3)+skoSC1*(skoMC1*skoMC1+skoSC1*skoMC1*(-1/12))))<=skoMC1*(2+skoMC1*5),skoSC1*skoMC1*-1<=skoMC1,skoSC1*skoMC1>skoMC1*-1,0<=skoMC1,skoMC1>0,0<=skoSC1,2<=skoMC1,skoSC1<=(5/4),skoSC1*skoMC1*skoMC1*skoMC1*2>skoMC1*skoMC1*skoMC1*-2,skoSC1*skoMC1*skoMC1*skoMC1*-2<=skoMC1*skoMC1*skoMC1*2,skoSC1*(skoMC1*skoMC1*skoMC1*(-2+skoMC1*-12)+skoSC1*(skoMC1*skoMC1*skoMC1*(1+skoMC1*-6)+skoSC1*(skoMC1*skoMC1*skoMC1+skoSC1*(skoMC1*skoMC1*skoMC1*(-1/12)+skoSC1*skoMC1*skoMC1*skoMC1*(-1/12)))))<=skoMC1*skoMC1*skoMC1*(2+skoMC1*6),skoMC1*skoMC1*skoMC1*-1<=0]], Reals]]

% In QepcadB format:
(E skoSC1) (E skoMC1) [[0<=skoMC1]/\[[(skoSC1 ((skoMC1 (1+(skoMC1 (-3))))+(skoSC1 ((skoMC1 (2+(skoMC1 (3))))+(skoSC1 ((skoMC1 (-1/6+skoMC1))+(skoSC1 skoMC1 (-1/4))))))))<=(skoMC1 (2+(skoMC1 (5))))]/\[[(skoSC1 ((skoMC1 (1+(skoMC1 (-3))))+(skoSC1 ((skoMC1 (2+(skoMC1 (3))))+(skoSC1 ((skoMC1 skoMC1)+(skoSC1 skoMC1 (-1/12))))))))<=(skoMC1 (2+(skoMC1 (5))))]/\[[(skoSC1 skoMC1 (-1))<=skoMC1]/\[[(skoMC1 (-1))<(skoSC1 skoMC1)]/\[[0<=skoMC1]/\[[0<skoMC1]/\[[0<=skoSC1]/\[[2<=skoMC1]/\[[skoSC1<=5/4]/\[[(skoMC1 skoMC1 skoMC1 (-2))<(skoSC1 skoMC1 skoMC1 skoMC1 (2))]/\[[(skoSC1 skoMC1 skoMC1 skoMC1 (-2))<=(skoMC1 skoMC1 skoMC1 (2))]/\[[(skoSC1 ((skoMC1 skoMC1 skoMC1 (-2+(skoMC1 (-12))))+(skoSC1 ((skoMC1 skoMC1 skoMC1 (1+(skoMC1 (-6))))+(skoSC1 ((skoMC1 skoMC1 skoMC1)+(skoSC1 ((skoMC1 skoMC1 skoMC1 (-1/12))+(skoSC1 skoMC1 skoMC1 skoMC1 (-1/12))))))))))<=(skoMC1 skoMC1 skoMC1 (2+(skoMC1 (6))))]/\[(skoMC1 skoMC1 skoMC1 (-1))<=0]]]]]]]]]]]]]].

% In SMTLib2 format:
(declare-fun skoSC1 () Real) (declare-fun skoMC1 () Real) (assert (and (<= 0. skoMC1) (and (<= (* skoSC1 (+ (* skoMC1 (+ 1. (* skoMC1 (- 3.)))) (* skoSC1 (+ (* skoMC1 (+ 2. (* skoMC1 3.))) (* skoSC1 (+ (* skoMC1 (+ (/ (- 1.) 6.) skoMC1)) (* skoSC1 (* skoMC1 (/ (- 1.) 4.))))))))) (* skoMC1 (+ 2. (* skoMC1 5.)))) (and (<= (* skoSC1 (+ (* skoMC1 (+ 1. (* skoMC1 (- 3.)))) (* skoSC1 (+ (* skoMC1 (+ 2. (* skoMC1 3.))) (* skoSC1 (+ (* skoMC1 skoMC1) (* skoSC1 (* skoMC1 (/ (- 1.) 12.))))))))) (* skoMC1 (+ 2. (* skoMC1 5.)))) (and (<= (* skoSC1 (* skoMC1 (- 1.))) skoMC1) (and (> (* skoSC1 skoMC1) (* skoMC1 (- 1.))) (and (<= 0. skoMC1) (and (> skoMC1 0.) (and (<= 0. skoSC1) (and (<= 2. skoMC1) (and (<= skoSC1 (/ 5. 4.)) (and (> (* skoSC1 (* skoMC1 (* skoMC1 (* skoMC1 2.)))) (* skoMC1 (* skoMC1 (* skoMC1 (- 2.))))) (and (<= (* skoSC1 (* skoMC1 (* skoMC1 (* skoMC1 (- 2.))))) (* skoMC1 (* skoMC1 (* skoMC1 2.)))) (and (<= (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (+ (- 2.) (* skoMC1 (- 12.)))))) (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (+ 1. (* skoMC1 (- 6.)))))) (* skoSC1 (+ (* skoMC1 (* skoMC1 skoMC1)) (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (/ (- 1.) 12.)))) (* skoSC1 (* skoMC1 (* skoMC1 (* skoMC1 (/ (- 1.) 12.))))))))))))) (* skoMC1 (* skoMC1 (* skoMC1 (+ 2. (* skoMC1 6.)))))) (<= (* skoMC1 (* skoMC1 (* skoMC1 (- 1.)))) 0.)))))))))))))))

% In GRF format:
(sequent " MetiTarski formula " (antecedent (<= 0. skoMC1) (<= (* skoSC1 (+ (* skoMC1 (+ 1. (* skoMC1 (- 3.)))) (* skoSC1 (+ (* skoMC1 (+ 2. (* skoMC1 3.))) (* skoSC1 (+ (* skoMC1 (+ (/ (- 1.) 6.) skoMC1)) (* skoSC1 (* skoMC1 (/ (- 1.) 4.))))))))) (* skoMC1 (+ 2. (* skoMC1 5.)))) (<= (* skoSC1 (+ (* skoMC1 (+ 1. (* skoMC1 (- 3.)))) (* skoSC1 (+ (* skoMC1 (+ 2. (* skoMC1 3.))) (* skoSC1 (+ (* skoMC1 skoMC1) (* skoSC1 (* skoMC1 (/ (- 1.) 12.))))))))) (* skoMC1 (+ 2. (* skoMC1 5.)))) (<= (* skoSC1 (* skoMC1 (- 1.))) skoMC1) (> (* skoSC1 skoMC1) (* skoMC1 (- 1.))) (<= 0. skoMC1) (> skoMC1 0.) (<= 0. skoSC1) (<= 2. skoMC1) (<= skoSC1 (/ 5. 4.)) (> (* skoSC1 (* skoMC1 (* skoMC1 (* skoMC1 2.)))) (* skoMC1 (* skoMC1 (* skoMC1 (- 2.))))) (<= (* skoSC1 (* skoMC1 (* skoMC1 (* skoMC1 (- 2.))))) (* skoMC1 (* skoMC1 (* skoMC1 2.)))) (<= (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (+ (- 2.) (* skoMC1 (- 12.)))))) (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (+ 1. (* skoMC1 (- 6.)))))) (* skoSC1 (+ (* skoMC1 (* skoMC1 skoMC1)) (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (/ (- 1.) 12.)))) (* skoSC1 (* skoMC1 (* skoMC1 (* skoMC1 (/ (- 1.) 12.))))))))))))) (* skoMC1 (* skoMC1 (* skoMC1 (+ 2. (* skoMC1 6.))))))) (succedent (> (* skoMC1 (* skoMC1 (* skoMC1 (- 1.)))) 0.)))
-----[end problem]-----

-----[begin problem]-----
% In Mathematica format:
Timing[Resolve[Exists[{skoSC1,skoMC1}, And[skoSC1*(skoMC1*(-1+skoMC1*3)+skoSC1*(skoMC1*(-2+skoMC1*-3)+skoSC1*skoMC1*skoMC1*-1))<=skoMC1*(-2+skoMC1*-5),skoMC1>0,skoSC1*(skoMC1*(1+skoMC1*-3)+skoSC1*(skoMC1*(2+skoMC1*3)+skoSC1*(skoMC1*((-1/6)+skoMC1)+skoSC1*skoMC1*(-1/4))))<=skoMC1*(2+skoMC1*5),skoSC1*(skoMC1*(1+skoMC1*-3)+skoSC1*(skoMC1*(2+skoMC1*3)+skoSC1*(skoMC1*skoMC1+skoSC1*skoMC1*(-1/12))))<=skoMC1*(2+skoMC1*5),skoSC1*skoMC1*-1<=skoMC1,skoSC1*skoMC1>skoMC1*-1,0<=skoMC1,skoMC1>0,0<=skoSC1,2<=skoMC1,skoSC1<=(5/4),skoSC1*skoMC1*skoMC1*skoMC1*2>skoMC1*skoMC1*skoMC1*-2,skoSC1*skoMC1*skoMC1*skoMC1*-2<=skoMC1*skoMC1*skoMC1*2,skoSC1*(skoMC1*skoMC1*skoMC1*(-2+skoMC1*-12)+skoSC1*(skoMC1*skoMC1*skoMC1*(1+skoMC1*-6)+skoSC1*(skoMC1*skoMC1*skoMC1+skoSC1*(skoMC1*skoMC1*skoMC1*(-1/12)+skoSC1*skoMC1*skoMC1*skoMC1*(-1/12)))))<=skoMC1*skoMC1*skoMC1*(2+skoMC1*6),skoMC1*skoMC1*skoMC1*-1<=0]], Reals]]

% In QepcadB format:
(E skoSC1) (E skoMC1) [[(skoSC1 ((skoMC1 (-1+(skoMC1 (3))))+(skoSC1 ((skoMC1 (-2+(skoMC1 (-3))))+(skoSC1 skoMC1 skoMC1 (-1))))))<=(skoMC1 (-2+(skoMC1 (-5))))]/\[[0<skoMC1]/\[[(skoSC1 ((skoMC1 (1+(skoMC1 (-3))))+(skoSC1 ((skoMC1 (2+(skoMC1 (3))))+(skoSC1 ((skoMC1 (-1/6+skoMC1))+(skoSC1 skoMC1 (-1/4))))))))<=(skoMC1 (2+(skoMC1 (5))))]/\[[(skoSC1 ((skoMC1 (1+(skoMC1 (-3))))+(skoSC1 ((skoMC1 (2+(skoMC1 (3))))+(skoSC1 ((skoMC1 skoMC1)+(skoSC1 skoMC1 (-1/12))))))))<=(skoMC1 (2+(skoMC1 (5))))]/\[[(skoSC1 skoMC1 (-1))<=skoMC1]/\[[(skoMC1 (-1))<(skoSC1 skoMC1)]/\[[0<=skoMC1]/\[[0<skoMC1]/\[[0<=skoSC1]/\[[2<=skoMC1]/\[[skoSC1<=5/4]/\[[(skoMC1 skoMC1 skoMC1 (-2))<(skoSC1 skoMC1 skoMC1 skoMC1 (2))]/\[[(skoSC1 skoMC1 skoMC1 skoMC1 (-2))<=(skoMC1 skoMC1 skoMC1 (2))]/\[[(skoSC1 ((skoMC1 skoMC1 skoMC1 (-2+(skoMC1 (-12))))+(skoSC1 ((skoMC1 skoMC1 skoMC1 (1+(skoMC1 (-6))))+(skoSC1 ((skoMC1 skoMC1 skoMC1)+(skoSC1 ((skoMC1 skoMC1 skoMC1 (-1/12))+(skoSC1 skoMC1 skoMC1 skoMC1 (-1/12))))))))))<=(skoMC1 skoMC1 skoMC1 (2+(skoMC1 (6))))]/\[(skoMC1 skoMC1 skoMC1 (-1))<=0]]]]]]]]]]]]]]].

% In SMTLib2 format:
(declare-fun skoSC1 () Real) (declare-fun skoMC1 () Real) (assert (and (<= (* skoSC1 (+ (* skoMC1 (+ (- 1.) (* skoMC1 3.))) (* skoSC1 (+ (* skoMC1 (+ (- 2.) (* skoMC1 (- 3.)))) (* skoSC1 (* skoMC1 (* skoMC1 (- 1.)))))))) (* skoMC1 (+ (- 2.) (* skoMC1 (- 5.))))) (and (> skoMC1 0.) (and (<= (* skoSC1 (+ (* skoMC1 (+ 1. (* skoMC1 (- 3.)))) (* skoSC1 (+ (* skoMC1 (+ 2. (* skoMC1 3.))) (* skoSC1 (+ (* skoMC1 (+ (/ (- 1.) 6.) skoMC1)) (* skoSC1 (* skoMC1 (/ (- 1.) 4.))))))))) (* skoMC1 (+ 2. (* skoMC1 5.)))) (and (<= (* skoSC1 (+ (* skoMC1 (+ 1. (* skoMC1 (- 3.)))) (* skoSC1 (+ (* skoMC1 (+ 2. (* skoMC1 3.))) (* skoSC1 (+ (* skoMC1 skoMC1) (* skoSC1 (* skoMC1 (/ (- 1.) 12.))))))))) (* skoMC1 (+ 2. (* skoMC1 5.)))) (and (<= (* skoSC1 (* skoMC1 (- 1.))) skoMC1) (and (> (* skoSC1 skoMC1) (* skoMC1 (- 1.))) (and (<= 0. skoMC1) (and (> skoMC1 0.) (and (<= 0. skoSC1) (and (<= 2. skoMC1) (and (<= skoSC1 (/ 5. 4.)) (and (> (* skoSC1 (* skoMC1 (* skoMC1 (* skoMC1 2.)))) (* skoMC1 (* skoMC1 (* skoMC1 (- 2.))))) (and (<= (* skoSC1 (* skoMC1 (* skoMC1 (* skoMC1 (- 2.))))) (* skoMC1 (* skoMC1 (* skoMC1 2.)))) (and (<= (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (+ (- 2.) (* skoMC1 (- 12.)))))) (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (+ 1. (* skoMC1 (- 6.)))))) (* skoSC1 (+ (* skoMC1 (* skoMC1 skoMC1)) (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (/ (- 1.) 12.)))) (* skoSC1 (* skoMC1 (* skoMC1 (* skoMC1 (/ (- 1.) 12.))))))))))))) (* skoMC1 (* skoMC1 (* skoMC1 (+ 2. (* skoMC1 6.)))))) (<= (* skoMC1 (* skoMC1 (* skoMC1 (- 1.)))) 0.))))))))))))))))

% In GRF format:
(sequent " MetiTarski formula " (antecedent (<= (* skoSC1 (+ (* skoMC1 (+ (- 1.) (* skoMC1 3.))) (* skoSC1 (+ (* skoMC1 (+ (- 2.) (* skoMC1 (- 3.)))) (* skoSC1 (* skoMC1 (* skoMC1 (- 1.)))))))) (* skoMC1 (+ (- 2.) (* skoMC1 (- 5.))))) (> skoMC1 0.) (<= (* skoSC1 (+ (* skoMC1 (+ 1. (* skoMC1 (- 3.)))) (* skoSC1 (+ (* skoMC1 (+ 2. (* skoMC1 3.))) (* skoSC1 (+ (* skoMC1 (+ (/ (- 1.) 6.) skoMC1)) (* skoSC1 (* skoMC1 (/ (- 1.) 4.))))))))) (* skoMC1 (+ 2. (* skoMC1 5.)))) (<= (* skoSC1 (+ (* skoMC1 (+ 1. (* skoMC1 (- 3.)))) (* skoSC1 (+ (* skoMC1 (+ 2. (* skoMC1 3.))) (* skoSC1 (+ (* skoMC1 skoMC1) (* skoSC1 (* skoMC1 (/ (- 1.) 12.))))))))) (* skoMC1 (+ 2. (* skoMC1 5.)))) (<= (* skoSC1 (* skoMC1 (- 1.))) skoMC1) (> (* skoSC1 skoMC1) (* skoMC1 (- 1.))) (<= 0. skoMC1) (> skoMC1 0.) (<= 0. skoSC1) (<= 2. skoMC1) (<= skoSC1 (/ 5. 4.)) (> (* skoSC1 (* skoMC1 (* skoMC1 (* skoMC1 2.)))) (* skoMC1 (* skoMC1 (* skoMC1 (- 2.))))) (<= (* skoSC1 (* skoMC1 (* skoMC1 (* skoMC1 (- 2.))))) (* skoMC1 (* skoMC1 (* skoMC1 2.)))) (<= (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (+ (- 2.) (* skoMC1 (- 12.)))))) (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (+ 1. (* skoMC1 (- 6.)))))) (* skoSC1 (+ (* skoMC1 (* skoMC1 skoMC1)) (* skoSC1 (+ (* skoMC1 (* skoMC1 (* skoMC1 (/ (- 1.) 12.)))) (* skoSC1 (* skoMC1 (* skoMC1 (* skoMC1 (/ (- 1.) 12.))))))))))))) (* skoMC1 (* skoMC1 (* skoMC1 (+ 2. (* skoMC1 6.))))))) (succedent (> (* skoMC1 (* skoMC1 (* skoMC1 (- 1.)))) 0.)))
-----[end problem]-----

